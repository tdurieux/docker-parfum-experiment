{
  "startTime": 1674216287974,
  "endTime": 1674216289162,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim\n\nENV PYTHONUNBUFFERED 1\n\nWORKDIR /\n\nRUN apt-get update && apt-get install --no-install-recommends python3-dev less htop curl git build-essential libmagic1 -y && rm -rf /var/lib/apt/lists/*;\n\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\nRUN mkdir /usr/local/nvm\n\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION 10.24.1\n\n# Install nvm with node and npm\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash \\\n    && source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\nCOPY package.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY bower.json ./\nRUN node_modules/.bin/bower --allow-root install\n\nCOPY docker/app/gunicorn.sh /gunicorn.sh\nRUN chmod +x /gunicorn.sh\n\nCOPY . /app\n\nRUN ln -s /node_modules /app/node_modules\nRUN ln -s /bower_components /app/bower_components\n\nWORKDIR /app/socialhome/frontend\n\nRUN npm install && npm cache clean --force;\n\nWORKDIR /app\n\nRUN npm run build\n\nRUN rm -rf /node_modules\nRUN rm -rf /app/socialhome/frontend/node_modules\nRUN rm -rf /bower_components\nRUN rm -rf /root/.cache/Cypress\n\nRUN cp config/circus_docker.ini config/circus.ini\n\nRUN mkdir -p /logs\n\nRUN pip install --no-cache-dir -U pip setuptools pip-tools\n\nRUN pip-sync requirements/requirements.txt\n\nRUN pip install --no-cache-dir gunicorn\n\nENV POSTGRES_PASSWORD postgres\nENV RQWORKER_NUM 1\nENV DJANGO_SETTINGS_MODULE config.settings.production\nENV REDIS_HOST redis\nENV DATABASE_URL postgres://postgres:$POSTGRES_PASSWORD@db:5432/postgres\nENV DJANGO_SECURE_SSL_REDIRECT True\nENV DJANGO_DEBUG False\nENV DJANGO_ACCOUNT_ALLOW_REGISTRATION=False\nENV DJANGO_ALLOWED_HOSTS socialhome.local\nENV DBHOST=db\nENV SOCIALHOME_RELAY_SCOPE=none\n\nCMD circusd /app/config/circus.ini\n"
}