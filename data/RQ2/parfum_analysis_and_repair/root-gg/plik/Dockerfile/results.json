{
  "startTime": 1674255749646,
  "endTime": 1674255749999,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 163
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 163
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##################################################################################\nFROM --platform=$BUILDPLATFORM node:18-alpine AS plik-frontend-builder\n\n# Install needed binaries\nRUN apk add --no-cache git make bash\n\n# Add the source code\nCOPY Makefile .\nCOPY webapp /webapp\n\nRUN make clean-frontend frontend\n\n##################################################################################\nFROM --platform=$BUILDPLATFORM golang:1.18-buster AS plik-builder\n\n# Install needed binaries\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential crossbuild-essential-armhf crossbuild-essential-armel crossbuild-essential-arm64 crossbuild-essential-i386 && rm -rf /var/lib/apt/lists/*;\n\n# Prepare the source location\nRUN mkdir -p /go/src/github.com/root-gg/plik\nWORKDIR /go/src/github.com/root-gg/plik\n\n# Copy webapp build from previous stage\nCOPY --from=plik-frontend-builder /webapp/dist webapp/dist\n\nARG CLIENT_TARGETS=\"\"\nENV CLIENT_TARGETS=$CLIENT_TARGETS\n\nARG TARGETOS TARGETARCH TARGETVARIANT CC\nENV TARGETOS=$TARGETOS\nENV TARGETARCH=$TARGETARCH\nENV TARGETVARIANT=$TARGETVARIANT\nENV CC=$CC\n\n# Add the source code ( see .dockerignore )\nCOPY . .\n\nRUN releaser/releaser.sh\n\n##################################################################################\nFROM scratch AS plik-release-archive\n\nCOPY --from=plik-builder --chown=1000:1000 /go/src/github.com/root-gg/plik/plik-*.tar.gz /\n\n##################################################################################\nFROM alpine:3.15 AS plik-image\n\nRUN apk add --no-cache ca-certificates\n\n# Create plik user\nENV USER=plik\nENV UID=1000\n\n# See https://stackoverflow.com/a/55757473/12429735\nRUN adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"/home/plik\" \\\n    --shell \"/bin/false\" \\\n    --uid \"${UID}\" \\\n    \"${USER}\"\n\nCOPY --from=plik-builder --chown=1000:1000 /go/src/github.com/root-gg/plik/release /home/plik/\n\nEXPOSE 8080\nUSER plik\nWORKDIR /home/plik/server\nCMD ./plikd"
}