{
  "startTime": 1674251027002,
  "endTime": 1674251027867,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ******************************************************************************\n# Copyright 2018-2020 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ******************************************************************************\n\n# Source: https://github.com/IntelAI/he-transformer/blob/master/contrib/docker/Dockerfile.he_transformer.ubuntu1804\n\n# Environment to build and unit-test he-transformer\n# with g++ 7.4.0\n# with clang++ 9.0.1\n# with python 3.6.8\n# with cmake 3.14.4\n\nFROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3-pip virtualenv python3-dev \\\n    git \\\n    unzip wget curl \\\n    sudo \\\n    bash-completion \\\n    build-essential cmake \\\n    software-properties-common \\\n    git openssl libssl-dev libcurl4-openssl-dev \\\n    wget patch diffutils libtinfo-dev \\\n    autoconf libtool zlib1g zlib1g-dev \\\n    doxygen graphviz \\\n    yapf3 python3-yapf \\\n    python python-dev python3 python3-dev \\\n    libomp-dev libomp5 autoconf autogen pkg-config libgtk-3-dev awscli && rm -rf /var/lib/apt/lists/*;\n\nRUN python3.6 -m pip install pip --upgrade && \\\n    pip3 install --no-cache-dir -U --user pip six 'numpy<1.19.0' wheel setuptools mock 'future>=0.17.1' && \\\n    pip3 install --no-cache-dir -U --user keras_applications --no-deps && \\\n    pip3 install --no-cache-dir -U --user keras_preprocessing --no-deps && \\\n    rm -rf /usr/bin/python && \\\n    ln -s /usr/bin/python3.6 /usr/bin/python\n\n# Install clang-9\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add - && \\\n    apt-add-repository \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main\" && \\\n    apt-get update && apt install --no-install-recommends -y clang-9 clang-tidy-9 clang-format-9 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean autoclean && apt-get autoremove -y\n\n# For ngraph-tf integration testing\nRUN pip3 install --no-cache-dir --upgrade pip setuptools virtualenv==16.1.0\n\n# SEAL requires newer version of CMake\nRUN wget https://cmake.org/files/v3.15/cmake-3.15.0.tar.gz && \\\n    tar -xvzf cmake-3.15.0.tar.gz && \\\n    cd cmake-3.15.0 && \\\n    export CC=clang-9 && \\ \n    export CXX=clang++-9 && \\\n    ./bootstrap --system-curl && \\\n    make -j$(nproc) && \\\n    make install && rm cmake-3.15.0.tar.gz\n\n# Get bazel for ng-tf\nRUN wget https://github.com/bazelbuild/bazel/releases/download/0.25.2/bazel-0.25.2-installer-linux-x86_64.sh && \\\n    chmod +x ./bazel-0.25.2-installer-linux-x86_64.sh && \\\n    bash ./bazel-0.25.2-installer-linux-x86_64.sh\nWORKDIR /home\n\n\n# *** end of Dockerfile from IntelAI/he-transformer repository ****************\n\nENV HE_TRANSFORMER /home/he-transformer\n\n# Build HE-Transformer\n# https://github.com/IntelAI/he-transformer#1-build-he-transformer\nWORKDIR /home\nRUN git clone https://github.com/IntelAI/he-transformer.git\n\nWORKDIR $HE_TRANSFORMER\nCOPY ngraph-tf.cmake $HE_TRANSFORMER/cmake/ngraph-tf.cmake\nCOPY fix_numpy_for_tf.patch $HE_TRANSFORMER/cmake/fix_numpy_for_tf.patch\nCOPY CMakeLists.txt $HE_TRANSFORMER/test/CMakeLists.txt\n\nRUN mkdir build && \\\n    cd build && \\ \n    cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_CXX_COMPILER=clang++-9 -DCMAKE_C_COMPILER=clang-9 -Werror && \\\n    make -j$(nproc) install && \\\n    rm -rf ~/.cache/bazel/\n\n# Build the Python bindings for client\n# https://github.com/IntelAI/he-transformer#1c-python-bindings-for-client\nRUN cd $HE_TRANSFORMER/build && \\\n    . external/venv-tf-py3/bin/activate && \\\n    make install python_client && \\\n    pip install --no-cache-dir python/dist/pyhe_client-*.whl\n\nWORKDIR $HE_TRANSFORMER/build\n\nCMD [ \"/bin/bash\" ]\n\n"
}