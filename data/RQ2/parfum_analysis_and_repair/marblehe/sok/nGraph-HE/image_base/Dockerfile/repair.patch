diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/marblehe/sok/nGraph-HE/image_base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/marblehe/sok/nGraph-HE/image_base/Dockerfile/repaired.Dockerfile
index 7c135a6..6126c18 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/marblehe/sok/nGraph-HE/image_base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/marblehe/sok/nGraph-HE/image_base/Dockerfile/repaired.Dockerfile
@@ -25,7 +25,7 @@
 FROM ubuntu:18.04
 
 ENV DEBIAN_FRONTEND=noninteractive
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     python3-pip virtualenv python3-dev \
     git \
     unzip wget curl \
@@ -39,24 +39,24 @@ RUN apt-get update && apt-get install -y \
     doxygen graphviz \
     yapf3 python3-yapf \
     python python-dev python3 python3-dev \
-    libomp-dev libomp5 autoconf autogen pkg-config libgtk-3-dev awscli
+    libomp-dev libomp5 autoconf autogen pkg-config libgtk-3-dev awscli && rm -rf /var/lib/apt/lists/*;
 
-RUN python3.6 -m pip install pip --upgrade && \ 
-    pip3 install -U --user pip six 'numpy<1.19.0' wheel setuptools mock 'future>=0.17.1' && \ 
-    pip3 install -U --user keras_applications --no-deps && \ 
-    pip3 install -U --user keras_preprocessing --no-deps && \ 
+RUN python3.6 -m pip install pip --upgrade && \
+    pip3 install --no-cache-dir -U --user pip six 'numpy<1.19.0' wheel setuptools mock 'future>=0.17.1' && \
+    pip3 install --no-cache-dir -U --user keras_applications --no-deps && \
+    pip3 install --no-cache-dir -U --user keras_preprocessing --no-deps && \
     rm -rf /usr/bin/python && \
     ln -s /usr/bin/python3.6 /usr/bin/python
 
 # Install clang-9
 RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add - && \
     apt-add-repository "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main" && \
-    apt-get update && apt install -y clang-9 clang-tidy-9 clang-format-9
+    apt-get update && apt install --no-install-recommends -y clang-9 clang-tidy-9 clang-format-9 && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get clean autoclean && apt-get autoremove -y
 
 # For ngraph-tf integration testing
-RUN pip3 install --upgrade pip setuptools virtualenv==16.1.0
+RUN pip3 install --no-cache-dir --upgrade pip setuptools virtualenv==16.1.0
 
 # SEAL requires newer version of CMake
 RUN wget https://cmake.org/files/v3.15/cmake-3.15.0.tar.gz && \
@@ -66,7 +66,7 @@ RUN wget https://cmake.org/files/v3.15/cmake-3.15.0.tar.gz && \
     export CXX=clang++-9 && \
     ./bootstrap --system-curl && \
     make -j$(nproc) && \
-    make install
+    make install && rm cmake-3.15.0.tar.gz
 
 # Get bazel for ng-tf
 RUN wget https://github.com/bazelbuild/bazel/releases/download/0.25.2/bazel-0.25.2-installer-linux-x86_64.sh && \
@@ -82,7 +82,7 @@ ENV HE_TRANSFORMER /home/he-transformer
 # Build HE-Transformer
 # https://github.com/IntelAI/he-transformer#1-build-he-transformer
 WORKDIR /home
-RUN git clone https://github.com/IntelAI/he-transformer.git 
+RUN git clone https://github.com/IntelAI/he-transformer.git
 
 WORKDIR $HE_TRANSFORMER
 COPY ngraph-tf.cmake $HE_TRANSFORMER/cmake/ngraph-tf.cmake
@@ -100,7 +100,7 @@ RUN mkdir build && \
 RUN cd $HE_TRANSFORMER/build && \
     . external/venv-tf-py3/bin/activate && \
     make install python_client && \
-    pip install python/dist/pyhe_client-*.whl
+    pip install --no-cache-dir python/dist/pyhe_client-*.whl
 
 WORKDIR $HE_TRANSFORMER/build