{
  "startTime": 1674250581827,
  "endTime": 1674250583307,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.17 as builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n# shell scripts don't kindly send signals down to their sub-processes, but we can use dumb-init to\n# achive this important support\nRUN wget -O /tmp/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_x86_64\n\nFROM builder AS controller-builder\nARG VERSION=unset\nCOPY api/ api/\nCOPY shared/ shared/\nCOPY manager/ manager/\nRUN --mount=type=cache,target=/root/.cache/go-build CGO_ENABLED=0 go build -ldflags=\"-s -w -X 'github.com/argoproj-labs/argo-dataflow/shared/util.version=${VERSION}'\" -o bin/manager ./manager\n\nFROM gcr.io/distroless/static:nonroot AS controller\nWORKDIR /\nCOPY --from=controller-builder /workspace/bin/manager .\nUSER 9653:9653\nENTRYPOINT [\"/manager\"]\n\nFROM builder AS runner-builder\nARG VERSION=unset\nCOPY kill/ kill/\nRUN CGO_ENABLED=0 go build -ldflags=\"-s -w\" -o bin/kill ./kill\nCOPY prestop/ prestop/\nRUN CGO_ENABLED=0 go build -ldflags=\"-s -w\" -o bin/prestop ./prestop\nCOPY api/ api/\nCOPY shared/ shared/\nCOPY sdks/golang sdks/golang\nCOPY runner/ runner/\nRUN --mount=type=cache,target=/root/.cache/go-build CGO_ENABLED=1 go build -ldflags=\"-s -w -X 'github.com/argoproj-labs/argo-dataflow/shared/util.version=${VERSION}'\" -o bin/runner ./runner\n\nFROM gcr.io/distroless/base:nonroot AS runner\nWORKDIR /\nCOPY --from=runner-builder /lib/x86_64-linux-gnu/libm.so.6 /lib/x86_64-linux-gnu/libm.so.6\nCOPY runtimes runtimes\nCOPY --from=runner-builder /workspace/bin/kill /bin/kill\nCOPY --from=runner-builder /workspace/bin/prestop /bin/prestop\nCOPY --from=runner-builder /workspace/bin/runner .\nUSER 9653:9653\nENTRYPOINT [\"/runner\"]\n\nFROM builder AS testapi-builder\nCOPY testapi/ testapi/\nRUN --mount=type=cache,target=/root/.cache/go-build CGO_ENABLED=1 go build -ldflags=\"-s -w\" -o bin/testapi ./testapi\n\nFROM gcr.io/distroless/base:nonroot AS testapi\nWORKDIR /\nCOPY --from=testapi-builder /lib/x86_64-linux-gnu/libm.so.6 /lib/x86_64-linux-gnu/libm.so.6\nCOPY --from=testapi-builder /workspace/bin/testapi .\nUSER 9653:9653\nENTRYPOINT [\"/testapi\"]\n\nFROM golang:1.17-alpine AS golang1-17\nCOPY --from=builder /tmp/dumb-init /dumb-init\nRUN chmod +x /dumb-init\nRUN mkdir /.cache\nENV GO111MODULE=off\nADD sdks/golang /go/src/github.com/argoproj-labs/argo-dataflow/sdks/golang\nADD runtimes/golang1-17 /workspace\nRUN chown -R 9653 /.cache /workspace\nWORKDIR /workspace\nUSER 9653:9653\nRUN go build ./...\nENTRYPOINT [\"/dumb-init\", \"--\"]\nCMD [\"/workspace/entrypoint.sh\"]\n\nFROM openjdk:16 AS java16\nCOPY --from=builder /tmp/dumb-init /dumb-init\nRUN chmod +x /dumb-init\nADD runtimes/java16 /workspace\nRUN chown -R 9653 /workspace\nWORKDIR /workspace\nUSER 9653:9653\nRUN javac *.java\nENTRYPOINT [\"/dumb-init\", \"--\"]\nCMD [\"/workspace/entrypoint.sh\"]\n\nFROM python:3.9-alpine AS python3-9\nCOPY --from=builder /tmp/dumb-init /dumb-init\nRUN chmod +x /dumb-init\nRUN mkdir /.cache /.local\nADD runtimes/python3-9 /workspace\nADD dsls/python /workspace/.dsl\nRUN cd /workspace/.dsl && python3 -m pip install --use-feature=in-tree-build .\nADD sdks/python /workspace/.sdk\nRUN apk add --no-cache gcc musl-dev\nRUN cd /workspace/.sdk && python3 -m pip install --use-feature=in-tree-build .\nRUN apk del --purge gcc musl-dev\nRUN chown -R 9653 /.cache /.local /workspace\nWORKDIR /workspace\nUSER 9653:9653\nENV PYTHONUNBUFFERED 1\nENTRYPOINT [\"/dumb-init\", \"--\"]\nCMD [\"/workspace/entrypoint.sh\"]\n\nFROM node:16-alpine AS node16\nCOPY --from=builder /tmp/dumb-init /dumb-init\nRUN chmod +x /dumb-init\nRUN mkdir /.cache /.local\nADD runtimes/node16 /workspace\nRUN chown -R 9653 /.cache /.local /workspace\nWORKDIR /workspace\nUSER 9653:9653\nRUN npm install --cache /.cache && npm cache clean --force;\nENTRYPOINT [\"/dumb-init\", \"--\"]\nCMD [\"/workspace/entrypoint.sh\"]"
}