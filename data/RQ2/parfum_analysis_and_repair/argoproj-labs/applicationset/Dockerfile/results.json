{
  "startTime": 1674246902840,
  "endTime": 1674246904584,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://github.com/argoproj/argo-cd/pull/8516 now requires us to copy Argo CD binary into the ApplicationSet controller\n\n\n# Build the binary\nFROM docker.io/library/golang:1.17.6 as builder\n\nWORKDIR /workspace\n\n# Copy the Go Modules manifests\nCOPY go.mod .\nCOPY go.sum .\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY . .\n\nRUN rm -f ./bin/*\n\n# Build\nRUN make build\n\nFROM docker.io/library/ubuntu:21.10\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get dist-upgrade -y && \\\n  apt-get install --no-install-recommends -y git git-lfs gpg tini && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists /var/cache/apt/archives /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\n\n# Add Argo CD helper scripts that are required by 'github.com/argoproj/argo-cd/util/git' package\nCOPY hack/from-argo-cd/gpg-wrapper.sh /usr/local/bin/gpg-wrapper.sh\nCOPY hack/from-argo-cd/git-verify-wrapper.sh /usr/local/bin/git-verify-wrapper.sh\nCOPY hack/from-argo-cd/git-ask-pass.sh /usr/local/bin/git-ask-pass.sh\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\n# Support for mounting configuration from a configmap\nRUN mkdir -p /app/config/ssh && \\\n    touch /app/config/ssh/ssh_known_hosts && \\\n    ln -s /app/config/ssh/ssh_known_hosts /etc/ssh/ssh_known_hosts\n\nRUN mkdir -p /app/config/tls\nRUN mkdir -p /app/config/gpg/source && \\\n    mkdir -p /app/config/gpg/keys\n#    chown argocd /app/config/gpg/keys && \\\n#    chmod 0700 /app/config/gpg/keys\n\nWORKDIR /\nCOPY --from=builder /workspace/dist/argocd-applicationset /usr/local/bin/applicationset-controller\n"
}