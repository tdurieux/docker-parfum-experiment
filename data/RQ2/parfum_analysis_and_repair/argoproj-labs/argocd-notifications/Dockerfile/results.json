{
  "startTime": 1674217041798,
  "endTime": 1674217042681,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=$BUILDPLATFORM golang:1.16.2 as builder\n\nRUN apt-get update && apt-get install -y --no-install-recommends ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /src\n\nARG TARGETOS\nARG TARGETARCH\nARG TARGETPLATFORM\nARG BUILDPLATFORM\n\nCOPY go.mod /src/go.mod\nCOPY go.sum /src/go.sum\n\nRUN go mod download\n\n# Perform the build\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -ldflags=\"-w -s\" -o /app/argocd-notifications ./cmd\nRUN ln -s /app/argocd-notifications /app/argocd-notifications-backend\n\nFROM scratch\n\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=builder /app/argocd-notifications /app/argocd-notifications\nCOPY --from=builder /app/argocd-notifications-backend /app/argocd-notifications-backend\n\n# User numeric user so that kubernetes can assert that the user id isn't root (0).\n# We are also using the root group (the 0 in 1000:0), it doesn't have any\n# privileges, as opposed to the root user.\nUSER 1000:0\n"
}