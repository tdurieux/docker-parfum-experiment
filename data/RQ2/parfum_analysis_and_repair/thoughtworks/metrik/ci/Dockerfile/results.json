{
  "startTime": 1674217988447,
  "endTime": 1674217989101,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedDockerfile": "FROM mongo:4.4-bionic\n\n# set locale\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends tzdata curl ca-certificates fontconfig locales \\\n    && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n    && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# # import public keys\nRUN apt-get install -y --no-install-recommends software-properties-common wget apt-transport-https gnupg \\\n    && wget --no-check-certificate -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add - \\\n    && wget --no-check-certificate -qO - https://nginx.org/keys/nginx_signing.key | apt-key add - \\\n    && add-apt-repository --yes https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ \\\n    && echo \"deb https://nginx.org/packages/mainline/ubuntu/ bionic nginx\" >> /etc/apt/sources.list \\\n    && echo \"deb-src https://nginx.org/packages/mainline/ubuntu/ bionic nginx\" >> /etc/apt/sources.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends supervisor adoptopenjdk-11-hotspot-jre nginx \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Create logs storaging\nRUN mkdir -p /app/logs\n\n# Nginx config\nRUN mkdir -p /etc/nginx/\nCOPY config/nginx_release.conf /etc/nginx/nginx.conf\n\n# Suporvisord config\nRUN mkdir -p /etc/supervisor/conf.d/\nCOPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# MongoDB Config\n# Note. Do not put the mongo init scripts to /docker-entrypoint-initdb.d for automated initialization.\n# Currently it causes error when initializing replica set in mongo entrypoint execution.\n# Use supervisord instead.\nCOPY config/mongo/mongo-init.sh /app/mongo/mongo-init.sh\nCOPY config/mongo/mongo-init-replica-set.js /app/mongo/mongo-init-replica-set.js\nCOPY config/mongo/mongo-create-user.js /app/mongo/mongo-create-user.js\nRUN openssl rand -base64 756 > /app/mongo/keyfile\nRUN chown 999 /app/mongo/keyfile && chmod 400 /app/mongo/keyfile\n\nENV MONGO_INITDB_DATABASE 4-Key-Metrics\nENV MONGO_INITDB_ROOT_USERNAME admin\nENV MONGO_INITDB_ROOT_PASSWORD root\n\n# Copy BACKEND artifact\nENV APP_ENV release\nENV DB_USER 4km\nENV DB_PASSWORD 4000km\nENV AES_KEY \"&E)H@MbQeThWmZq4\"\nENV AES_IV \"D(G+KbPeShVkYp3s\"\n\nCOPY artifacts/backend/run.sh /app/metrik-service.sh\nCOPY artifacts/backend/metrik-backend-*.jar /app/metrik-backend.jar\n\n# Copy FRONTEND artifact\nCOPY artifacts/frontend/dist /usr/share/nginx/html\n\nRUN find /app -name \"*.sh\" -exec chmod +x {} \\;\n\nEXPOSE 80 9000 27017\n\nENTRYPOINT [\"supervisord\"]\n"
}