{
  "startTime": 1674221196768,
  "endTime": 1674221198032,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 12,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# We need Ubuntu as a base image see https://docs.microsoft.com/en-us/azure/machine-learning/how-to-deploy-custom-docker-image#build-a-custom-base-image\nFROM ubuntu:18.04\n\n# Path to current sample\nARG SAMPLE_PATH=samples/non-python-preprocess\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"APT::Get::Assume-Yes \\\"true\\\";\" > /etc/apt/apt.conf.d/90assumeyes\n\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends apt-utils dialog sudo 2>&1 \\\n    && apt-get -y --no-install-recommends install \\\n    git \\\n    jq \\\n    openssh-client \\\n    less \\\n    iproute2 \\\n    procps \\\n    lsb-release \\\n    apt-transport-https \\\n    software-properties-common \\\n    ca-certificates \\\n    curl \\\n    build-essential \\\n    gnupg2 \\\n    bash-completion \\\n    unzip \\\n    iputils-ping \\\n    libcurl4 \\\n    libunwind8 \\\n    netcat && rm -rf /var/lib/apt/lists/*;\n\n# Map local machines Docker GID (retrieved by dockergid.sh) to enable non-root user to use docker on local machine\nCOPY $SAMPLE_PATH/.devcontainer/dockergid /tmp\nRUN DOCKER_GID=`cat /tmp/dockergid` \\\n    && groupadd --gid $DOCKER_GID docker\nRUN rm /tmp/dockergid\n# Install Docker CLI\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \\\n    && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian buster stable\" \\\n    && apt-get update \\\n    && apt install -y --no-install-recommends docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Install Azure CLI\nRUN curl -f -sL https://aka.ms/InstallAzureCLIDeb | sudo bash \\\n    && az extension add --name azure-devops \\\n    && az extension add --name azure-cli-ml\n\n# Cleanup\nRUN apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*   \n\n# set up git-prompt.sh\nWORKDIR /usr/local/bin\nCOPY $SAMPLE_PATH/.devcontainer/image/git-prompt.sh .\nRUN echo \"source /usr/local/bin/git-prompt.sh\" >> ~/.bashrc\nRUN echo \"PROMPT_COMMAND='__posh_git_ps1 \\\"\\u@\\h:\\w \\\" \\\"\\\\\\$ \\\";'$PROMPT_COMMAND\" >> ~/.bashrc\n\n# enable git completion\nRUN echo \"source /usr/share/bash-completion/completions/git\"  >> ~/.bashrc\n\n# Add miniconda\nRUN cd ~ && curl -f -Os https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh && \\\n    /bin/bash ~/Miniconda3-4.5.11-Linux-x86_64.sh -b -p /opt/conda && \\\n    rm ~/Miniconda3-4.5.11-Linux-x86_64.sh && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\nENV PATH /opt/conda/bin/:$PATH\nRUN conda update conda\n\n# Add ssh-agent/ssh-add to .bashrc\nCOPY $SAMPLE_PATH/.devcontainer/image/ssh-agent.sh /tmp\nRUN cat /tmp/ssh-agent.sh >> ~/.bashrc \\\n    && rm /tmp/ssh-agent.sh\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"APT::Get::Assume-Yes \\\"true\\\";\" > /etc/apt/apt.conf.d/90assumeyes\n\nRUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\n\n# --------------------------------------------------------------------------\n# vscode\n# --------------------------------------------------------------------------\nRUN groupadd --gid 1000 vscode \\\n    && useradd -s /bin/bash --uid 1000 --gid 1000 -m vscode \\\n    && usermod -a -G docker vscode \\\n    && apt-get install --no-install-recommends -y sudo \\\n    && echo vscode ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/vscode \\\n    && chmod 0440 /etc/sudoers.d/vscode && rm -rf /var/lib/apt/lists/*;\n\n# Copy enhanced /root/.bashrc to vscode user\nRUN cp ~/.bashrc /home/vscode/.\nRUN chown 1000:1000 /home/vscode/.bashrc\nRUN chown -R 1000:root /opt/conda\n\nRUN echo 'vscode:vscode!20' | chpasswd\n\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n# Switch back to dialog for any ad-hoc use of apt-get\nENV DEBIAN_FRONTEND=dialog\n\n# Copy conda dependencies\nWORKDIR /tmp\nCOPY $SAMPLE_PATH/local_development/dev_dependencies.yml .\n\n# Create conda environment for vscode user\nUSER vscode\nRUN conda env update -f dev_dependencies.yml -n base\n"
}