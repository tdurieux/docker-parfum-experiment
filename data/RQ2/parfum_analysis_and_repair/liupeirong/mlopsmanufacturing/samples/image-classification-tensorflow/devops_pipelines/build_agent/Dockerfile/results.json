{
  "startTime": 1674248574254,
  "endTime": 1674248574987,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 38,
        "columnEnd": 61
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 65,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM conda/miniconda3\n\nENV PATH /opt/conda/bin/:$PATH\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV LANGUAGE C.UTF-8\n\nRUN conda update -n base -c defaults conda && \\\n    conda install python=3.7.5 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends gcc python3-dev -y && rm -rf /var/lib/apt/lists/*;\n\n# Install Azure CLI\nRUN apt-get update && \\\n    apt-get install --no-install-recommends ca-certificates curl apt-transport-https lsb-release gnupg -y && \\\n    curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null && \\\n    AZ_REPO=$(lsb_release -cs) && \\\n    echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main\" | tee /etc/apt/sources.list.d/azure-cli.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends azure-cli -y && \\\n    az --version && rm -rf /var/lib/apt/lists/*;\n\n# az cli extension defaults to $HOME/.azure/cliextensions\n# which doesn't exist when running in ADO because ADO runs as\n# a new user vsts_azpcontainer\nRUN mkdir /opt/azcliextensions\nENV AZURE_EXTENSION_DIR /opt/azcliextensions\nRUN az extension add -n azure-cli-ml\n\n# precreate user vsts\nRUN groupadd --gid 1001 vsts && \\\n    useradd -s /bin/bash --uid 1001 --gid 1001 -m vsts\n\nUSER vsts\n\n# precreate CI environment for user vsts\nCOPY devops_pipelines/build_agent/ci_dependencies.yml /home/vsts/.\n\nRUN conda env create -f /home/vsts/ci_dependencies.yml -n ci\n\n# activate environment (Azure Pipelines won't use bash to execute)\nENV PATH /home/vsts/.conda/envs/ci/bin:$PATH\n\n# Issue with PyJWT change in 2.0 from 1.7.  Install msal 1.6 effectively installs PyJWT 1.7\nRUN yes | pip uninstall msal && yes | pip install --no-cache-dir msal==1.6.0\n\n# switch back to root\nUSER root"
}