{
  "startTime": 1674219222971,
  "endTime": 1674219223735,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 as builder\nMAINTAINER Victor Morales <electrocucaracha@gmail.com>\n\nENV demo_artifacts_version \"1.6.0\"\nENV repo_url \"https://nexus.onap.org/content/repositories/staging/org/onap/demo/vnf\"\n\nRUN apt-get update && apt-get install -y -qq --no-install-recommends \\\n wget ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\n\nRUN wget \"${repo_url}/sample-distribution/${demo_artifacts_version}/sample-distribution-${demo_artifacts_version}-hc.tar.gz\" \\\n && tar -zmxf sample-distribution-${demo_artifacts_version}-hc.tar.gz \\\n && rm sample-distribution-${demo_artifacts_version}-hc.tar.gz \\\n && mv sample-distribution-${demo_artifacts_version} honeycomb \\\n && sed -i 's/\"restconf-binding-address\": .*/\"restconf-binding-address\": \"0.0.0.0\",/g' /opt/honeycomb/config/restconf.json\n\nRUN apt-get install -y -qq --no-install-recommends \\\n make gcc libc6-dev libcurl4-gnutls-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget \"${repo_url}/ves5/ves/${demo_artifacts_version}/ves-${demo_artifacts_version}-demo.tar.gz\" \\\n && tar -zmxf ves-${demo_artifacts_version}-demo.tar.gz \\\n && rm ves-${demo_artifacts_version}-demo.tar.gz \\\n && mv ves-${demo_artifacts_version} VES\n\nRUN wget \"${repo_url}/ves5/ves_vfw_reporting/${demo_artifacts_version}/ves_vfw_reporting-${demo_artifacts_version}-demo.tar.gz\" \\\n && tar -zmxf ves_vfw_reporting-${demo_artifacts_version}-demo.tar.gz \\\n && rm ves_vfw_reporting-${demo_artifacts_version}-demo.tar.gz \\\n && mv ves_vfw_reporting-${demo_artifacts_version} VES/evel/evel-library/code/VESreporting \\\n && chmod +x VES/evel/evel-library/code/VESreporting/go-client.sh \\\n && make -C /opt/VES/evel/evel-library/bldjobs/\n\nFROM vpp\n\nCOPY --from=builder /opt/honeycomb /opt/honeycomb\nCOPY --from=builder /opt/VES/evel/evel-library/code/VESreporting /opt/VESreporting\nCOPY --from=builder /opt/VES/evel/evel-library/libs/x86_64/libevel.so /usr/lib/x86_64-linux-gnu/\nCOPY init.sh /opt/init.sh\n\nENV DCAE_COLLECTOR_IP \"\"\nENV DCAE_COLLECTOR_PORT \"\"\n\nRUN apt-get update && apt-get install -y -qq --no-install-recommends \\\n openjdk-8-jre iproute2 libcurl4-gnutls-dev && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [\"/bin/bash\"]\nCMD [\"/opt/init.sh\"]\n"
}