{
  "startTime": 1674250460991,
  "endTime": 1674250461829,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Prepare stage for multistage image build\n## START OF stage0 ##\n# Building client html and js files\nFROM alpine:3.8 AS stage0\nWORKDIR /opt/cds-ui/client/\n\nRUN apk add --no-cache npm\n\nCOPY client/package.json /opt/cds-ui/client/\nRUN npm install && npm cache clean --force;\n\nCOPY client /opt/cds-ui/client/\nRUN npm run build\n\n## END OF STAGE0 ##\n\n##############################################\n\n## START OF stage1 ##\n# Building and creating server\nFROM alpine:3.8 AS stage1\nWORKDIR /opt/cds-ui/\n\nRUN apk add --no-cache npm\n\nCOPY server/package.json /opt/cds-ui/\nRUN npm install && npm cache clean --force;\n\nCOPY server /opt/cds-ui/\nRUN npm run build\n\n## END OF STAGE1 ##\n\n##############################################\n\n## This will create actual image\n\nFROM alpine:3.8\nWORKDIR /opt/cds-ui/\n\nRUN apk add --no-cache npm\n\nCOPY --from=stage0 /opt/cds-ui /opt/cds-ui\nCOPY --from=stage1 /opt/cds-ui/server/public /opt/cds-ui/public\n\nEXPOSE 3000\nCMD [ \"npm\", \"start\" ]\n"
}