diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/onap/demo/vnfs/DAaaS/sample-apps/training/sample-spark-app/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/onap/demo/vnfs/DAaaS/sample-apps/training/sample-spark-app/Dockerfile/repaired.Dockerfile
index cd42d4c..415241f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/onap/demo/vnfs/DAaaS/sample-apps/training/sample-spark-app/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/onap/demo/vnfs/DAaaS/sample-apps/training/sample-spark-app/Dockerfile/repaired.Dockerfile
@@ -20,13 +20,13 @@
 FROM ubuntu:18.04
 
 # Install jdk
-RUN apt update -yqq 
-RUN apt install -y locales openjdk-8-jdk && rm -rf /var/lib/apt/lists/* \
+RUN apt update -yqq
+RUN apt install --no-install-recommends -y locales openjdk-8-jdk && rm -rf /var/lib/apt/lists/* \
     && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
 
 # Install all the essentials
 RUN apt-get update --fix-missing && \
-    apt-get install -y numactl wget curl bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 \
+    apt-get install --no-install-recommends -y numactl wget curl bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 \
                        git mercurial subversion build-essential openssh-server openssh-client net-tools && \
     apt-get clean && \
     rm -rf /var/lib/apt/lists/*
@@ -43,11 +43,11 @@ RUN mkdir /tmp/openmpi && \
     wget --quiet https://www.open-mpi.org/software/ompi/v${OPENMPI_VERSION}/downloads/openmpi-${OPENMPI_VERSION}.2.tar.gz -O openmpi.tar.gz && \
     tar zxf openmpi.tar.gz && \
     cd openmpi-3.1.2 && \
-    ./configure --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make -j $(nproc) all && \
     make install && \
     ldconfig && \
-    rm -rf /tmp/openmpi
+    rm -rf /tmp/openmpi && rm openmpi.tar.gz
 
 # Install miniconda
 RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \
@@ -81,12 +81,12 @@ RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_confi
     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config
 
 # Install tini
-RUN apt-get install -y curl grep sed dpkg && \
-    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && echo ${TINI_VERSION} && \
-    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
+RUN apt-get install --no-install-recommends -y curl grep sed dpkg && \
+    TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:') && echo ${TINI_VERSION} && \
+    curl -f -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
     dpkg -i tini.deb && \
     rm tini.deb && \
-    apt clean
+    apt clean && rm -rf /var/lib/apt/lists/*;
 
 # This is needed to match the original entrypoint.sh file.
 RUN cp /usr/bin/tini /sbin