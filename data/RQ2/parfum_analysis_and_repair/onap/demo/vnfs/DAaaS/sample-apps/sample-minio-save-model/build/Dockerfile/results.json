{
  "startTime": 1674215486000,
  "endTime": 1674215487081,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) 2019 Intel Corporation\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n\nFROM ubuntu:18.04\n\nRUN apt update -yqq\n\n# Install all the essentials\nRUN apt-get update --fix-missing && \\\n    apt-get install -y --no-install-recommends wget curl ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 \\\n                       git build-essential openssh-server openssh-client && \\\n    mkdir -p /var/run/sshd && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV PATH /opt/conda/bin:$PATH\n\n# Install miniconda\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\n# Install python libraries using conda in the virtual_environment:ml_env\nSHELL [\"/bin/bash\", \"-c\"]\nRUN conda update -n base -c defaults conda && \\\n    conda create -n ml_env\nRUN conda install -n ml_env -y -c anaconda pip\nRUN pwd\nRUN conda install -n ml_env -y -c anaconda h5py\n\nRUN conda install -n ml_env -y -c pytorch pytorch-cpu\nRUN conda install -n ml_env -y -c conda-forge nlopt\n\nRUN echo \"conda activate ml_env\" >> ~/.bashrc\nRUN source ~/.bashrc\nRUN /opt/conda/envs/ml_env/bin/pip install --no-cache-dir minio\n\n# Install tini\nRUN apt-get install -y --no-install-recommends curl grep sed dpkg && \\\n    TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o \"/v.*\\\"\" | sed 's:^..\\(.*\\).$:\\1:') && echo ${TINI_VERSION} && \\\n    curl -f -L \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" > tini.deb && \\\n    dpkg -i tini.deb && \\\n    rm tini.deb && \\\n    apt clean && rm -rf /var/lib/apt/lists/*;\n\n# This is needed to match the original entrypoint.sh file.\nRUN cp /usr/bin/tini /sbin\n\n\nRUN echo \"export PATH=/opt/conda/envs/ml_env/bin:$PATH\" >> ~/.bashrc\n\nCOPY . /app\nWORKDIR /app\nRUN source ~/.bashrc\nRUN conda install -n ml_env -y --file requirements.txt\n\nENTRYPOINT [ \"/app/entrypoint.sh\" ]\n"
}