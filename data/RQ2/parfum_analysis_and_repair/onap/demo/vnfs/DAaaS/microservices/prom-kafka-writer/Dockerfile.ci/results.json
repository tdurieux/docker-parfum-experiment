{
  "startTime": 1674251868122,
  "endTime": 1674251869005,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 0,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use base golang image from Docker Hub\nFROM golang:1.12.7 as builder\n\n# Download the dlv (delve) debugger for go (you can comment this out if unused)\nRUN go get -u -v github.com/go-delve/delve/cmd/dlv\n\nWORKDIR /src/prom-kafka-writer\n\nRUN mkdir /librdkafka-dir && cd /librdkafka-dir\nRUN git clone https://github.com/edenhill/librdkafka.git && \\ \ncd librdkafka && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /usr && \\\nmake && \\\nmake install\n\n# Install dependencies in go.mod and go.sum\nCOPY go.mod go.sum ./\nRUN go mod download\n\n# Copy rest of the application source code\nCOPY . ./\n\n# Compile the application to /app.\nRUN go build -o ./bin/prom-kafka-writer -v ./cmd/prom-kafka-writer\n\n# If you want to use the debugger, you need to modify the entrypoint to the\n# container and point it to the \"dlv debug\" command:\n#   * UNCOMMENT the following ENTRYPOINT statement,\n#   * COMMENT OUT the last ENTRYPOINT statement\n# Start the \"dlv debug\" server on port 3000 of the container.\n#ENTRYPOINT [\"dlv\", \"exec\", \"./bin/prom-kafka-writer\", \"--continue\", \"--accept-multiclient\", \"--api-version=2\", \"--headless\", \"--listen=:3000\", \"--log\"]\n\n# If you want to run WITHOUT the debugging server:\n#   * COMMENT OUT the previous ENTRYPOINT statements,\n#   * UNCOMMENT the following ENTRYPOINT statement.\n\n# final stage\nFROM ubuntu:18.04\nCOPY --from=builder /usr/lib/pkgconfig /usr/lib/pkgconfig\nCOPY --from=builder /usr/lib/librdkafka* /usr/lib/\nCOPY --from=builder //src/prom-kafka-writer/* /prom-kafka-writer/\nWORKDIR /prom-kafka-writer\nENTRYPOINT [\"./bin/prom-kafka-writer\"]\n"
}