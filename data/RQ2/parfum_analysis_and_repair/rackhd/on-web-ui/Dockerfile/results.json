{
  "startTime": 1674252795138,
  "endTime": 1674252795656,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Usage (given build times depend on machine):\n#\n#    Build SMALL image (no cache; ~20MB, time for build=rebuild = ~360s):\n#    docker build --squash=\"true\" -t angular-starter .\n#\n#    Build FAST (rebuild) image (cache; >280MB, build time ~360s, rebuild time ~80s):\n#    docker build -t angular-starter .\n#\n#    Clean (remove intermidiet images):\n#    docker rmi -f $(docker images -f \"dangling=true\" -q)\n#\n#    Run image (on localhost:8080):\n#    docker run --name angular-starter -p 8080:80 angular-starter &\n#\n#    Run image as virtual host (read more: https://github.com/jwilder/nginx-proxy):\n#    docker run -e VIRTUAL_HOST=angular-starter.your-domain.com --name angular-starter angular-starter &\n\nFROM nginx:1.13.0-alpine\n\n# install console and node\nRUN apk add --no-cache bash=4.3.46-r5 &&\\\n    apk add --no-cache openssl &&\\\n    apk add --no-cache nodejs\n\n# install npm ( in separate dir due to docker cache)\nADD package.json /tmp/npm_inst/package.json\nRUN cd /tmp/npm_inst &&\\\n    npm install &&\\\n    mkdir -p /tmp/app && \\\n    mv /tmp/npm_inst/node_modules /tmp/app/ && npm cache clean --force;\n\n# build and publish application\nADD . /tmp/app\nRUN cd /tmp/app &&\\\n    npm run build:aot &&\\\n    mv ./dist/* /usr/share/nginx/html/\n\n# clean\nRUN rm -Rf /tmp/npm_inst  &&\\\n    rm -Rf /tmp/app &&\\\n    rm -Rf /root/.npm &&\\\n    apk del nodejs\n\nADD ./config/nginx.conf /etc/nginx/conf.d/default.conf\n# this is for virtual host purposes\nEXPOSE 80\n"
}