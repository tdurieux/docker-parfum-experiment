{
  "startTime": 1674255822267,
  "endTime": 1674255823074,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GOLANG_VERSION=1.12.6\nFROM golang:$GOLANG_VERSION AS gobase\n\nFROM node:10.16-slim as base\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nCOPY --from=gobase /usr/local/go/ /usr/local/go/\n\nRUN set -ex \\\n  && apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    gcc \\\n    openssl \\\n    git \\\n    # procps` required`by flogo-web server to execute `ps` command\n    procps \\\n  && mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\" \\\n  && npm install --no-cache -g yarn \\\n  && rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n\nFROM base AS builder\nARG CLI_VERSION=\"latest\"\nARG CORE_VERSION=\"latest\"\nENV FLOGO_LIB_VERSION ${CORE_VERSION}\nENV BUILD_DIR /tmp/build\nENV FLOGO_WEB_LOCALDIR ${BUILD_DIR}/dist/local\nENV GO111MODULE on\nRUN GO111MODULE=off go get -u -v github.com/project-flogo/cli/... \\\n#    && mkdir -p $GOPATH/src/github.com/project-flogo \\\n#    && cd $GOPATH/src/github.com/project-flogo \\\n#    && git clone https://github.com/project-flogo/cli.git \\\n    && flogo --version \\\n    && GO111MODULE=off go get github.com/project-flogo/services/flow-store/...\nCOPY / ${BUILD_DIR}/\nWORKDIR ${BUILD_DIR}\nRUN yarn --pure-lockfile && yarn release && \\\n  cd dist/apps/server && \\\n  yarn --pure-lockfile --production=true && \\\n  npx modclean -Pr -n default:safe,default:caution\n\nFROM base as release\nENV NODE_ENV production\nENV FLOGO_WEB_LOCALDIR /flogo-web/local\nENV FLOGO_WEB_PUBLICDIR /flogo-web/apps/client\n\nCOPY --from=builder /tmp/build/dist/ /flogo-web/\nCOPY --from=builder $GOPATH/ $GOPATH/\n\nCOPY ./tools/docker/flogo-eula /flogo-web/flogo-eula\nCOPY ./tools/docker/docker-start.sh /flogo-web/docker-start.sh\n\nWORKDIR /flogo-web/\nRUN cd local/engines/flogo-web && flogo build\nENTRYPOINT [\"/flogo-web/docker-start.sh\"]\n"
}