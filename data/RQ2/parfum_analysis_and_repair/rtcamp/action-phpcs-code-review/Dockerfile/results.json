{
  "startTime": 1674250261168,
  "endTime": 1674250261842,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 1,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ubuntu:latest at 2020-05-12T09:35:28IST\nFROM ubuntu@sha256:3235326357dfb65f1781dbc4df3b834546d8bf914e82cce58e6e6b676e23ce8f\n\nLABEL \"com.github.actions.icon\"=\"check-circle\"\nLABEL \"com.github.actions.color\"=\"green\"\nLABEL \"com.github.actions.name\"=\"PHPCS Code Review\"\nLABEL \"com.github.actions.description\"=\"This will run phpcs on PRs\"\nLABEL \"org.opencontainers.image.source\"=\"https://github.com/rtCamp/action-phpcs-code-review\"\n\nRUN echo \"tzdata tzdata/Areas select Asia\" | debconf-set-selections && \\\necho \"tzdata tzdata/Zones/Asia select Kolkata\" | debconf-set-selections\n\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt install --no-install-recommends software-properties-common -y && \\\n\tadd-apt-repository ppa:ondrej/php && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n\tcowsay \\\n\tgit \\\n\tgosu \\\n\tjq \\\n\tphp7.4-cli \\\n\tphp7.4-common \\\n\tphp7.4-curl \\\n\tphp7.4-json \\\n\tphp7.4-mbstring \\\n\tphp7.4-mysql \\\n\tphp7.4-xml \\\n\tphp7.4-zip \\\n\tphp-xml \\\n\tpython \\\n\tpython-pip \\\n\trsync \\\n\tsudo \\\n\ttree \\\n\tvim \\\n\tzip \\\n\tunzip \\\n\twget; \\\n\tpip install --no-cache-dir shyaml; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t# verify that the binary works\n\tgosu nobody true\n\nRUN useradd -m -s /bin/bash rtbot\n\nRUN wget https://raw.githubusercontent.com/Automattic/vip-go-ci/main/tools-init.sh -O tools-init.sh && \\\n\tbash tools-init.sh && \\\n\trm -f tools-init.sh\n\nENV VAULT_VERSION 1.4.3\n\n# Setup Vault\nRUN wget https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip && \\\n        unzip vault_${VAULT_VERSION}_linux_amd64.zip && \\\n        rm vault_${VAULT_VERSION}_linux_amd64.zip && \\\n        mv vault /usr/local/bin/vault\n\nCOPY entrypoint.sh main.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/*.sh\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}