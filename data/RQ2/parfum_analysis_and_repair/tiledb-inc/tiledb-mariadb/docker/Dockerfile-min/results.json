{
  "startTime": 1674250020813,
  "endTime": 1674250021907,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS builder\nLABEL maintainer=\"support@tiledb.io\"\n\nENV AWS_EC2_METADATA_DISABLED=true \\\n DEBIAN_FRONTEND=noninteractive \\\n TZ=GMT\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n gosu \\\n pwgen \\\n tzdata \\\n gcc \\\n g++ \\\n build-essential \\\n libasan5 \\\n bison \\\n chrpath \\\n cmake \\\n gdb \\\n gnutls-dev \\\n libaio-dev \\\n libboost-dev \\\n libdbd-mysql \\\n libjudy-dev \\\n libncurses5-dev \\\n libpam0g-dev \\\n libpcre3-dev \\\n libreadline-gplv2-dev \\\n libstemmer-dev \\\n libssl-dev \\\n libnuma-dev \\\n libxml2-dev \\\n lsb-release \\\n perl \\\n psmisc \\\n zlib1g-dev \\\n libcrack2-dev \\\n cracklib-runtime \\\n libjemalloc-dev \\\n libsnappy-dev \\\n liblzma-dev \\\n libzmq3-dev \\\n uuid-dev \\\n ccache \\\n git \\\n wget \\\n libcurl4-openssl-dev \\\n libcurl4 \\\n && rm -rf /var/lib/apt/lists/*\n\nENV MTR_MEM=/tmp \\\n MARIADB_VERSION=\"mariadb-10.5.13\"\nWORKDIR /tmp\n\nARG MYTILE_VERSION=\"0.17.1\"\n\nARG TILEDB_VERSION=\"2.10.2\"\nARG TILEDB_VERSION_SHORT_SHA=\"9ab84f9\"\nARG TILEDB_PREBUILT_FILE=\"tiledb-linux-x86_64-${TILEDB_VERSION}-${TILEDB_VERSION_SHORT_SHA}.tar.gz\"\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\n# Set git config so superbuild of tiledb can cherry-pick capnp fix\nRUN groupadd -r mysql && useradd -r -g mysql mysql \\\n && git config --global user.email \"you@example.com\" \\\n && git config --global user.name \"Your Name\"\n\nRUN wget https://github.com/TileDB-Inc/TileDB-MariaDB/archive/${MYTILE_VERSION}.tar.gz -O /tmp/${MYTILE_VERSION}.tar.gz \\\n && tar xf /tmp/${MYTILE_VERSION}.tar.gz \\\n && mv TileDB-MariaDB-${MYTILE_VERSION} mytile && rm /tmp/${MYTILE_VERSION}.tar.gz\n\n# Copy example arrays to opt\nRUN cp -r /tmp/mytile/mysql-test/mytile/test_data/tiledb_arrays /opt/\n\n# Install tiledb using 2.4 release\nRUN wget https://github.com/TileDB-Inc/TileDB/releases/download/${TILEDB_VERSION}/${TILEDB_PREBUILT_FILE} \\\n && tar xf ${TILEDB_PREBUILT_FILE} -C /usr \\\n && rm  ${TILEDB_PREBUILT_FILE} \\\n && ldconfig\n\n# TODO change branch after release cut\n#RUN git clone https://github.com/TileDB-Inc/TileDB-MariaDB.git -b ${MYTILE_VERSION} mytile \\\n# && mkdir build_deps && cd build_deps \\\n# && make -j$(nproc) \\\n# && make -C tiledb install \\\n# && cd /tmp \\\n# && rm -rf build_deps\n\nRUN cp /tmp/mytile/docker/my.cnf /etc/mysql/my.cnf \\\n && cp /tmp/mytile/docker/mytile.cnf /etc/mysql/conf.d/mytile.cnf \\\n && cp /tmp/mytile/docker/setup-mariadb.sh /usr/local/bin/setup-mariadb.sh \\\n && cp -r /tmp/mytile/mysql-test/mytile/test_data/tiledb_arrays /opt/\n\nENV CXXFLAGS=\"${CXXFLAGS} -Wno-error=deprecated-declarations\"\nENV CFLAGS=\"${CFLAGS} -Wno-error=deprecated-declarations\"\n\nRUN wget https://downloads.mariadb.org/interstitial/${MARIADB_VERSION}/source/${MARIADB_VERSION}.tar.gz \\\n && tar xf ${MARIADB_VERSION}.tar.gz \\\n && mv /tmp/mytile ${MARIADB_VERSION}/storage/mytile \\\n && cd ${MARIADB_VERSION} \\\n && mkdir builddir \\\n && cd builddir \\\n && cmake -DCMAKE_INSTALL_PREFIX=/opt/server -DWITH_EMBEDDED_SERVER=OFF -DPLUGIN_INNODB=NO -DPLUGIN_INNOBASE=NO -DPLUGIN_TOKUDB=NO -DPLUGIN_ROCKSDB=NO -DPLUGIN_MROONGA=NO -DPLUGIN_SPIDER=NO -DPLUGIN_SPHINX=NO -DPLUGIN_FEDERATED=NO -DPLUGIN_FEDERATEDX=NO -DPLUGIN_CONNECT=NO -DCMAKE_BUILD_TYPE=Release -DPLUGIN_MYTILE=YES .. \\\n && make -j$(nproc) \\\n && make install \\\n && cd /tmp \\\n && rm -rf ${MARIADB_VERSION} \\\n && rm -rf /opt/server/mysql-test/ && rm ${MARIADB_VERSION}.tar.gz\n\nFROM ubuntu:20.04\nCOPY --from=builder /usr/local/bin /usr/local/bin\nCOPY --from=builder /usr/bin/killall /usr/bin/killall\nCOPY --from=builder /usr/include/tiledb /usr/include/tiledb\nCOPY --from=builder /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu\nCOPY --from=builder /usr/lib/libtiledb.so* /usr/lib/\nCOPY --from=builder /opt/server /opt/server\nCOPY --from=builder /opt/tiledb_arrays /opt/tiledb_arrays\nCOPY --from=builder /etc /etc\n\nRUN set -ex \\\n && sed -ri 's/^user\\s/#&/' /etc/mysql/my.cnf /etc/mysql/conf.d/* \\\n && rm -rf /var/lib/mysql \\\n && mkdir -p /var/lib/mysql /var/run/mysqld \\\n && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n && chmod 777 /var/run/mysqld \\\n && find /etc/mysql/ -name '*.cnf' -print0 | xargs -0 grep -lZE '^(bind-address|log)' | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\n\nENV PATH=\"${PATH}:/opt/server/bin:/opt/server/scripts\" \\\n MYSQL_ALLOW_EMPTY_PASSWORD=1 \\\n MYSQL_DATABASE=test\n\nRUN mkdir /var/log/mysql \\\n && chown -R mysql:mysql /var/lib/mysql \\\n && chown -R mysql:mysql /var/log/mysql \\\n && chown -R mysql:mysql /opt/server \\\n && chmod +x /usr/local/bin/setup-mariadb.sh\n\nUSER mysql\n\nRUN /usr/local/bin/setup-mariadb.sh\nVOLUME /var/lib/mysql\nEXPOSE 3306\n\nCMD [\"/opt/server/bin/mariadbd\", \"--datadir=/var/lib/mysql\"]\n"
}