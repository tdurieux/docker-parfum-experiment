{
  "startTime": 1674253572432,
  "endTime": 1674253573514,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 33,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12 AS base\nWORKDIR /go/src/larry\nRUN apk update && apk upgrade && apk add --no-cache tzdata\n\nFROM golang:alpine AS dev\nENV CGO_ENABLED=0\nRUN --mount=type=cache,target=/go/pkg mkdir -p go/bin && cd /go/bin && \\\n\tgo install github.com/go-delve/delve/cmd/dlv@latest && \\\n\tgo install golang.org/x/tools/gopls@latest &&\\\n    apk add --no-cache bash git make\n\nFROM dev AS compiler\n\n# Add go modules and env files to the WORKDIR and install dependencies.\nADD go.mod go.sum ./\n\n# Add code to the WORKDIR and trigger the build process which will assess code quality\n# and check if unit tests are passing. Golang binary will be found under /bin/goapp\nADD . ./\nRUN go build -o /bin/larry -ldflags=\"-w -s\" cmd/larry/main.go\n\n# Create final application image.\nFROM base AS final\n\nCOPY --from=compiler /bin/larry /larry\n\nENTRYPOINT [\"/larry\"]\n"
}