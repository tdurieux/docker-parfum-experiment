{
  "startTime": 1674246781114,
  "endTime": 1674246782507,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 73,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 112,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 129,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 73,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 112,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 129,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Expose (global) variables (ARGs before FROM can only be used on FROM lines and not afterwards)\nARG BUILD_TYPE=production\nARG SIPI_BASE=daschswiss/sipi-base:2.6.0\nARG UBUNTU_BASE=ubuntu:20.04\n\n# STAGE 1: Build debug\nFROM $SIPI_BASE as builder-debug\n\nWORKDIR /sipi\n\n# Add everything to image.\nCOPY . .\n\n# set ccache directory\nENV CCACHE_DIR=/ccache\n\n# Build SIPI.\nRUN --mount=type=cache,target=/ccache \\\n    mkdir -p /sipi/build-linux && \\\n    cd /sipi/build-linux && \\\n    cmake -DMAKE_DEBUG:BOOL=ON .. && \\\n    make\n\n# STAGE 1: Build production\nFROM $SIPI_BASE as builder-production\n\nWORKDIR /sipi\n\n# Add everything to image.\nCOPY . .\n\n# set ccache directory\nENV CCACHE_DIR=/ccache\n\n# Build SIPI.\nRUN --mount=type=cache,target=/ccache \\\n    mkdir -p /sipi/build-linux && \\\n    cd /sipi/build-linux && \\\n    cmake -DMAKE_DEBUG:BOOL=OFF .. && \\\n    make\n\n# STAGE 2: Setup debug\nFROM $UBUNTU_BASE as debug\n\nLABEL maintainer=\"400790+subotic@users.noreply.github.com\"\n\n# Silence debconf messages\nARG DEBIAN_FRONTEND=noninteractive\n\n# needs to be separate because of gnupg2 which is needed for the keyserver stuff\nRUN sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n    apt-get update && apt-get -y --no-install-recommends install \\\n    ca-certificates \\\n    gnupg2 && rm -rf /var/lib/apt/lists/*;\n\n# Install build dependencies.\nRUN sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n    echo 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main' | tee -a /etc/apt/sources.list && \\\n    echo 'deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main' | tee -a /etc/apt/sources.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 15CF4D18AF4F7421 && \\\n    apt-get update && apt-get -y --no-install-recommends install \\\n    byobu curl git htop man vim wget unzip \\\n    libllvm11 llvm-11-runtime \\\n    openssl \\\n    libidn11-dev \\\n    locales \\\n    uuid \\\n    ffmpeg \\\n    at \\\n    bc \\\n    imagemagick \\\n    valgrind && rm -rf /var/lib/apt/lists/*;\n\n# add locales\nRUN locale-gen en_US.UTF-8 && \\\n    locale-gen sr_RS.UTF-8\n\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\n\nWORKDIR /sipi\n\nEXPOSE 1024\n\nRUN mkdir -p /sipi/images/knora && \\\n    mkdir -p /sipi/cache\n\n# Copy Sipi binary and other files from the build stage\nCOPY --from=builder-debug /sipi/build-linux/sipi /sipi/sipi\nCOPY --from=builder-debug /sipi/config/sipi.config.lua /sipi/config/sipi.config.lua\nCOPY --from=builder-debug /sipi/config/sipi.init.lua /sipi/config/sipi.init.lua\nCOPY --from=builder-debug /sipi/server/test.html /sipi/server/test.html\n\nENTRYPOINT [ \"/sipi/sipi\" ]\n\nCMD [\"--config=/sipi/config/sipi.config.lua\"]\n\n# STAGE 2: Setup production\nFROM $UBUNTU_BASE as production\n\nLABEL maintainer=\"400790+subotic@users.noreply.github.com\"\n\n# Silence debconf messages\nARG DEBIAN_FRONTEND=noninteractive\n\n# needs to be separate because of gnupg2 which is needed for the keyserver stuff\nRUN sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n    apt-get update && apt-get -y --no-install-recommends install \\\n    ca-certificates \\\n    gnupg2 && rm -rf /var/lib/apt/lists/*;\n\n# Install build dependencies.\nRUN sed -i 's/# \\(.*multiverse$\\)/\\1/g' /etc/apt/sources.list && \\\n    echo 'deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main' | tee -a /etc/apt/sources.list && \\\n    echo 'deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main' | tee -a /etc/apt/sources.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 15CF4D18AF4F7421 && \\\n    apt-get update && apt-get -y --no-install-recommends install \\\n    byobu curl git htop man vim wget unzip \\\n    libllvm11 llvm-11-runtime \\\n    openssl \\\n    libidn11-dev \\\n    locales \\\n    uuid \\\n    ffmpeg \\\n    at \\\n    bc \\\n    imagemagick && rm -rf /var/lib/apt/lists/*;\n\n# add locales\nRUN locale-gen en_US.UTF-8 && \\\n    locale-gen sr_RS.UTF-8\n\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\n\nWORKDIR /sipi\n\nEXPOSE 1024\n\nRUN mkdir -p /sipi/images/knora && \\\n    mkdir -p /sipi/cache\n\n# Copy Sipi binary and other files from the build stage\nCOPY --from=builder-production /sipi/build-linux/sipi /sipi/sipi\nCOPY --from=builder-production /sipi/config/sipi.config.lua /sipi/config/sipi.config.lua\nCOPY --from=builder-production /sipi/config/sipi.init.lua /sipi/config/sipi.init.lua\nCOPY --from=builder-production /sipi/server/test.html /sipi/server/test.html\n\nENTRYPOINT [ \"/sipi/sipi\" ]\n\nCMD [\"--config=/sipi/config/sipi.config.lua\"]\n\n#\n# Stage 3: The final build type specific image\nFROM $BUILD_TYPE"
}