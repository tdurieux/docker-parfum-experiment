{
  "startTime": 1674248251987,
  "endTime": 1674248252663,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine\n\nARG TARGETARCH\n\nRUN apk update && \\\n   apk --no-cache add ca-certificates git bash wget gnupg zip unzip make \\\n                      openssh-client build-base curl\n\n# this glibc compatibility module is needed for some downloaded binaries,\n# such as aws cli, to run in provisioners.\n# Steps to build glibc for ARM64:\n# https://gist.github.com/ljfranklin/f6a7dfcfb2c573d4a276dad59e58db82\n# TODO: Switch back to upstream for ARM64 once supported:\n# https://github.com/sgerrand/alpine-pkg-glibc/issues/126\nRUN if [ \"${TARGETARCH}\" = \"amd64\" ]; then \\\n    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    wget -q -O /tmp/glibc.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.32-r0/glibc-2.32-r0.apk && \\\n    wget -q -O /tmp/glibc-bin.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.32-r0/glibc-bin-2.32-r0.apk; \\\n  elif [ \"${TARGETARCH}\" = \"arm64\" ]; then \\\n    wget -q -O /etc/apk/keys/ljfranklin-glibc.pub https://github.com/ljfranklin/alpine-pkg-glibc/releases/download/2.32-r0-arm64/ljfranklin-glibc.pub && \\\n    wget -q -O /tmp/glibc.apk https://github.com/ljfranklin/alpine-pkg-glibc/releases/download/2.32-r0-arm64/glibc-2.32-r0.apk && \\\n    wget -q -O /tmp/glibc-bin.apk https://github.com/ljfranklin/alpine-pkg-glibc/releases/download/2.32-r0-arm64/glibc-bin-2.32-r0.apk; \\\n  fi; \\\n  apk add --no-cache /tmp/glibc.apk && \\\n  apk add --no-cache /tmp/glibc-bin.apk && \\\n  rm -rf /tmp/glibc.apk && \\\n  rm -rf /tmp/glibc-bin.apk\n\n# install go deps\nRUN go install github.com/onsi/ginkgo/ginkgo@v1.16.5\nRUN go install github.com/mitchellh/gox@latest\nENV PATH=$PATH:/go/bin\n\nRUN mkdir -p $HOME/.ssh\nRUN echo \"StrictHostKeyChecking no\" >> $HOME/.ssh/config\nRUN echo \"LogLevel quiet\" >> $HOME/.ssh/config\nRUN chmod 0600 $HOME/.ssh/config\n\nCOPY $TARGETARCH/terraform/* /usr/local/bin/\nRUN terraform --version\n"
}