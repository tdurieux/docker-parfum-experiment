{
  "startTime": 1674219435971,
  "endTime": 1674219436823,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nARG TARGETARCH\n\nRUN apk update && \\\n    apk add --no-cache ca-certificates git bash openssh-client curl\n\n# this glibc compatibility module is needed for some downloaded binaries,\n# such as aws cli, to run in provisioners.\n# Steps to build glibc for ARM64:\n# https://gist.github.com/ljfranklin/f6a7dfcfb2c573d4a276dad59e58db82\n# TODO: Switch back to upstream for ARM64 once supported:\n# https://github.com/sgerrand/alpine-pkg-glibc/issues/126\nRUN if [ \"${TARGETARCH}\" = \"amd64\" ]; then \\\n    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    wget -q -O /tmp/glibc.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.32-r0/glibc-2.32-r0.apk && \\\n    wget -q -O /tmp/glibc-bin.apk https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.32-r0/glibc-bin-2.32-r0.apk; \\\n  elif [ \"${TARGETARCH}\" = \"arm64\" ]; then \\\n    wget -q -O /etc/apk/keys/ljfranklin-glibc.pub https://github.com/ljfranklin/alpine-pkg-glibc/releases/download/2.32-r0-arm64/ljfranklin-glibc.pub && \\\n    wget -q -O /tmp/glibc.apk https://github.com/ljfranklin/alpine-pkg-glibc/releases/download/2.32-r0-arm64/glibc-2.32-r0.apk && \\\n    wget -q -O /tmp/glibc-bin.apk https://github.com/ljfranklin/alpine-pkg-glibc/releases/download/2.32-r0-arm64/glibc-bin-2.32-r0.apk; \\\n  fi; \\\n  apk add --no-cache /tmp/glibc.apk && \\\n  apk add --no-cache /tmp/glibc-bin.apk && \\\n  rm -rf /tmp/glibc.apk && \\\n  rm -rf /tmp/glibc-bin.apk\n\nRUN mkdir -p $HOME/.ssh\nRUN echo \"StrictHostKeyChecking no\" >> $HOME/.ssh/config\nRUN echo \"LogLevel quiet\" >> $HOME/.ssh/config\nRUN chmod 0600 $HOME/.ssh/config\n\nRUN mkdir -p /usr/local/share/terraform/plugins/github.com/ashald/stateful/1.2.0/linux_${TARGETARCH}/ && \\\n  wget -O /usr/local/share/terraform/plugins/github.com/ashald/stateful/1.2.0/linux_${TARGETARCH}/terraform-provider-stateful_v1.2.0 \\\n    \"https://github.com/ashald/terraform-provider-stateful/releases/download/v1.2.0/terraform-provider-stateful_v1.2.0-linux-${TARGETARCH}\" && \\\n  chmod +x /usr/local/share/terraform/plugins/github.com/ashald/stateful/1.2.0/linux_${TARGETARCH}/terraform-provider-stateful_v1.2.0\nCOPY $TARGETARCH/terraform/* /usr/local/bin/\nRUN terraform --version\nCOPY $TARGETARCH/check $TARGETARCH/in $TARGETARCH/out /opt/resource/\n"
}