{
  "startTime": 1674250865540,
  "endTime": 1674250866342,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 8,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 8,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 8,
        "columnEnd": 102
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 80,
        "columnStart": 8,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ffmpeg - http://ffmpeg.org/download.html\n# based on image from\n# https://hub.docker.com/r/jrottenberg/ffmpeg/\n#\n#\nFROM    alpine:3.12\n\n\nENV     X264_VERSION=20160826-2245-stable \\\n        X265_VERSION=x265_2.8 \\\n        PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \\\n        SRC=/usr/local\n\nRUN buildDeps=\"autoconf \\\n                   automake \\\n                   bash \\\n                   binutils \\\n                   bzip2 \\\n                   cmake \\\n                   curl \\\n                   coreutils \\\n                   g++ \\\n                   gcc \\\n                   git \\\n                   libtool \\\n                   make \\\n                   openssl-dev \\\n                   tar \\\n                   yasm \\\n                   python3 \\\n                   pkgconfig \\\n                   zlib-dev\" && \\\n        export MAKEFLAGS=\"-j$(($(grep -c ^processor /proc/cpuinfo) + 1))\" && \\\n        apk add --no-cache --update ${buildDeps} freetype-dev fontconfig-dev ttf-droid libgcc libstdc++ ca-certificates && \\\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        echo \"**** COMPILING x264 ****\" && \\\n        curl -f -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \\\n        tar -jx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && \\\n        # x265 http://www.videolan.org/developers/x265.html\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        echo \"**** COMPILING x265 ****\" && \\\n        curl -f -sL https://download.videolan.org/pub/videolan/x265/${X265_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        cd build && cmake ../source && \\\n        make -j$(nproc) && \\\n        make install && \\\n        rm -rf ${DIR}\n\nCOPY    *.patch /root/\n\n## ffmpeg source from github\n# checkout working commit ca21cb1e36ccae2ee71d4299d477fa9284c1f551 from 12/01/2021\nRUN DIR=$(mktemp -d) && cd ${DIR} && \\\n        git clone https://github.com/FFmpeg/FFmpeg.git . && \\\n        git checkout --detach ca21cb1e36ccae2ee71d4299d477fa9284c1f551 && \\\n        cp /root/*.patch . && \\\n        git apply -v *.patch && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" \\\n        --extra-cflags=\"-I${SRC}/include\" \\\n        --extra-ldflags=\"-L${SRC}/lib\" \\\n        --bindir=\"${SRC}/bin\" \\\n        --disable-doc \\\n        --disable-static \\\n        --enable-shared \\\n        --disable-ffplay \\\n        --extra-libs=-ldl \\\n        --enable-version3 \\\n        --enable-libx264 \\\n        --enable-libx265 \\\n        --enable-libfontconfig \\\n        --enable-libfreetype \\\n        --enable-gpl \\\n        --enable-avresample \\\n        --enable-postproc \\\n        --enable-nonfree \\\n        --disable-debug \\\n        --enable-openssl && \\\n        make && \\\n        make install && \\\n        make distclean && \\\n        hash -r && \\\n        rm -rf ${DIR} && \\\n        cd && \\\n        apk del ${buildDeps} && \\\n        rm -rf /var/cache/apk/* /usr/local/include && \\\n        ffmpeg -buildconf\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nCOPY entrypoint.py /usr/local/bin/entrypoint.py\nRUN chmod +x /usr/local/bin/entrypoint.sh\nRUN chmod +x /usr/local/bin/entrypoint.py\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}