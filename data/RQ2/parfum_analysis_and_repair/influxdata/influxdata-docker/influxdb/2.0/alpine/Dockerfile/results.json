{
  "startTime": 1674255145963,
  "endTime": 1674255147303,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.14\n\nRUN echo 'hosts: files dns' >> /etc/nsswitch.conf\nRUN apk add --no-cache tzdata bash ca-certificates gnupg run-parts && \\\n    update-ca-certificates\n\nRUN addgroup -S -g 1000 influxdb && \\\n    adduser -S -G influxdb -u 1000 -h /home/influxdb -s /bin/sh influxdb && \\\n    mkdir -p /home/influxdb && \\\n    chown -R influxdb:influxdb /home/influxdb\n\n# Install gosu for easy step-down from root.\n# https://github.com/tianon/gosu/releases\nENV GOSU_VER 1.12\nRUN set -eux; \\\n    ARCH=\"$(apk --print-arch)\" && \\\n    case \"${ARCH}\" in \\\n        x86_64)  ARCH=amd64;; \\\n        aarch64) ARCH=arm64;; \\\n        *)       echo \"Unsupported architecture: ${ARCH}\"; exit 1;; \\\n    esac && \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VER/gosu-$ARCH\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VER/gosu-$ARCH.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu --version; \\\n\tgosu nobody true\n\nENV INFLUXDB_VERSION 2.0.9\nRUN set -eux && \\\n    ARCH=\"$(apk --print-arch)\" && \\\n    if [ ${ARCH} = x86_64 ]; then \\\n        ARCH=amd64; \\\n    elif [ ${ARCH} = aarch64 ]; then \\\n        ARCH=arm64; \\\n    else \\\n        echo \"Unsupported architecture: ${ARCH}\" && exit 1; \\\n    fi && \\\n    wget --no-verbose https://dl.influxdata.com/influxdb/releases/influxdb2-${INFLUXDB_VERSION}-linux-${ARCH}.tar.gz.asc && \\\n    wget --no-verbose https://dl.influxdata.com/influxdb/releases/influxdb2-${INFLUXDB_VERSION}-linux-${ARCH}.tar.gz && \\\n    export GNUPGHOME=\"$(mktemp -d)\" && \\\n    echo \"disable-ipv6\" >> $GNUPGHOME/dirmngr.conf && \\\n    gpg --batch --keyserver keys.openpgp.org --recv-keys 8C2D403D3C3BDB81A4C27C883C3E4B7317FFE40A && \\\n    gpg --batch --verify influxdb2-${INFLUXDB_VERSION}-linux-${ARCH}.tar.gz.asc influxdb2-${INFLUXDB_VERSION}-linux-${ARCH}.tar.gz && \\\n    tar xzf influxdb2-${INFLUXDB_VERSION}-linux-${ARCH}.tar.gz && \\\n    cp influxdb2-${INFLUXDB_VERSION}-linux-${ARCH}/influx* /usr/local/bin/ && \\\n    rm -rf \"$GNUPGHOME\" influxdb2.key influxdb2-${INFLUXDB_VERSION}-linux-${ARCH}* && \\\n    influxd version && \\\n    influx version && rm influxdb2-${INFLUXDB_VERSION}-linux-${ARCH}.tar.gz\n\n# Create standard directories expected by the entry-point.\nRUN mkdir /docker-entrypoint-initdb.d && \\\n    mkdir -p /var/lib/influxdb2 && \\\n    chown -R influxdb:influxdb /var/lib/influxdb2 && \\\n    mkdir -p /etc/influxdb2 && \\\n    chown -R influxdb:influxdb /etc/influxdb2\nVOLUME /var/lib/influxdb2 /etc/influxdb2\n\nCOPY default-config.yml /etc/defaults/influxdb2/config.yml\nCOPY entrypoint.sh /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"influxd\"]\n\nEXPOSE 8086\n\nENV INFLUX_CONFIGS_PATH /etc/influxdb2/influx-configs\nENV INFLUXD_INIT_PORT 9999\nENV INFLUXD_INIT_PING_ATTEMPTS 600\nENV DOCKER_INFLUXDB_INIT_CLI_CONFIG_NAME default\n"
}