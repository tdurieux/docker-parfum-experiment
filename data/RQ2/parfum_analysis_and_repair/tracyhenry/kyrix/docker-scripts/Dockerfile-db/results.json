{
  "startTime": 1674220528569,
  "endTime": 1674220529560,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 81,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 37,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 37,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 49,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 68,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 37,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM asah/pg11-plv8 as plv8\n\n################################# Install plv8 #################################\nFROM postgres:11 as pg-plv8\nARG DEBIAN_FRONTEND=noninteractive\n\n# plv8 is dynamically linked\nRUN apt-get update -qq >/dev/null && apt-get install -y -qq --no-install-recommends libc++1 >/dev/null && \\\n    rm -rf /var/lib/apt/lists/* >/dev/null && apt-get -qq autoremove >/dev/null && apt-get -qq clean >/dev/null\nCOPY --from=plv8 /usr/share/postgresql/11/extension/plcoffee* /usr/share/postgresql/11/extension/\nCOPY --from=plv8 /usr/share/postgresql/11/extension/plls* /usr/share/postgresql/11/extension/\nCOPY --from=plv8 /usr/share/postgresql/11/extension/plv8* /usr/share/postgresql/11/extension/\nCOPY --from=plv8 /usr/lib/postgresql/11/lib/plv8*.so /usr/lib/postgresql/11/lib/\nCOPY --from=plv8 /var/lib/postgresql/plv8-modules /var/lib/postgresql/plv8-modules\nRUN chmod 644 /usr/share/postgresql/11/extension/plcoffee* \\\n    && chmod 644 /usr/share/postgresql/11/extension/plls* \\\n    && chmod 644 /usr/share/postgresql/11/extension/plv8* \\\n    && chmod 755 /usr/lib/postgresql/11/lib/plv8*.so\n\n# install d3 - requires postgres startup script\nRUN apt-get -qq update >/dev/null && apt-get install -y --no-install-recommends -qq curl wget >/dev/null && curl -f -sL https://deb.nodesource.com/setup_11.x | bash - >/dev/null && \\\n    apt-get install -y -qq --no-install-recommends nodejs >/dev/null && \\\n    su - postgres -c \"npm install d3\" >/dev/null && \\\n    rm -rf /var/lib/apt/lists/* >/dev/null && \\\n    apt-get -qq autoremove && apt-get -qq clean >/dev/null\n\nADD docker-scripts/plv8_add_module_simple /var/lib/postgresql/plv8-modules/bin/add_module_simple\nADD docker-scripts/install-d3.sh /var/lib/postgresql\n\n# copied from postgres, since it got flattened\n#CMD su - postgres -c \"/usr/lib/postgresql/11/bin/initdb -D /var/lib/postgresql/data; /usr/lib/postgresql/11/bin/postgres -D /var/lib/postgresql/data\"\n\n# install pgfutter for one-command csv loading\nRUN wget -nc -q -O pgfutter https://github.com/lukasmartinelli/pgfutter/releases/download/v1.2/pgfutter_linux_amd64\nRUN chmod +x pgfutter\n\n# add health check script\nCOPY docker-scripts/pg_healthcheck /\n\nHEALTHCHECK --interval=4s --start-period=6s CMD ./pg_healthcheck\n\n################################# Install Postgis #################################\nFROM pg-plv8 as pg-plv8-postgis\nARG DEBIAN_FRONTEND=noninteractive\nARG PG_MAJOR=11\nARG POSTGIS_MAJOR=2.5\nENV LANG en_ZA.UTF-8\nENV LANGUAGE en_ZA.UTF-8\nRUN apt-get update >/dev/null \\\n    && apt-get -qq -y install --no-install-recommends \\\n                          postgresql-$PG_MAJOR-postgis-$POSTGIS_MAJOR \\\n                          postgis-$POSTGIS_MAJOR \\\n                          locales >/dev/null \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen >/dev/null \\\n    && sed -i -e 's/# en_ZA.UTF-8 UTF-8/en_ZA.UTF-8 UTF-8/' /etc/locale.gen >/dev/null \\\n    && echo 'LANG=\"en_ZA.UTF-8\"'>/etc/default/locale >/dev/null \\\n    && dpkg-reconfigure locales >/dev/null \\\n    && update-locale LANG=en_ZA.UTF-8 >/dev/null \\\n    && dpkg-reconfigure locales >/dev/null && rm -rf /var/lib/apt/lists/*;\n\n################################# Install Citus #################################\nFROM pg-plv8 as pg-plv8-citus\nARG DEBIAN_FRONTEND=noninteractive\nARG PG_MAJOR=11\n\nRUN apt-get -qq update \\\n    && apt-get install -y -qq --no-install-recommends ca-certificates curl \\\n    && curl -f -s https://install.citusdata.com/community/deb.sh | bash \\\n    && apt-get install -y --no-install-recommends -qq postgresql-$PG_MAJOR-citus-8.3 \\\n                          postgresql-$PG_MAJOR-hll=2.12.citus-1 \\\n                          postgresql-$PG_MAJOR-topn=2.2.0 \\\n    && apt-get purge -qq --auto-remove curl \\\n    && rm -rf /var/lib/apt/lists/*\n\n# add citus to default PostgreSQL config\nRUN echo \"shared_preload_libraries='citus'\" >> /usr/share/postgresql/postgresql.conf.sample && \\\n    echo \"logging_collector = on\" >> /usr/share/postgresql/postgresql.conf.sample && \\\n    echo \"log_directory = 'log'\" >> /usr/share/postgresql/postgresql.conf.sample && \\\n    echo \"log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'\" >> /usr/share/postgresql/postgresql.conf.sample && \\\n    echo \"log_file_mode = 0600\" >> /usr/share/postgresql/postgresql.conf.sample && \\\n    echo \"\" > /dev/null\n\nCOPY docker-scripts/000-configure-stats.sh docker-scripts/001-create-citus-extension.sql /docker-entrypoint-initdb.d/\n"
}