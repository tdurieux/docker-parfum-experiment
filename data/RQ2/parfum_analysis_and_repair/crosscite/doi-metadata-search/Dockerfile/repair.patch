diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/crosscite/doi-metadata-search/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/crosscite/doi-metadata-search/Dockerfile/repaired.Dockerfile
index 7c9a949..66a2202 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/crosscite/doi-metadata-search/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/crosscite/doi-metadata-search/Dockerfile/repaired.Dockerfile
@@ -17,8 +17,8 @@ RUN groupmod -g 1000 app
 CMD ["/sbin/my_init"]
 
 # fetch node10 and yarn sources
-RUN curl -sL https://deb.nodesource.com/setup_10.x | bash && \
-    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
+RUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash && \
+    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
     echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
 
 # Use Ruby 2.6.8
@@ -28,13 +28,13 @@ RUN bash -lc 'rvm --default use ruby-2.6.8'
 RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
 
 # Install Chrome for headless testing
-RUN apt-get install wget && \
+RUN apt-get install -y --no-install-recommends wget && \
     wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
-    sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'
+    sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' && rm -rf /var/lib/apt/lists/*;
 
 # Update installed APT packages
 RUN apt-get update && apt-get upgrade -y -o Dpkg::Options::="--force-confold" && \
-    apt-get install wget git ntp yarn google-chrome-stable python-dev pkg-config fontconfig libpng-dev libjpeg-dev libcairo2-dev libfreetype6-dev -y && \
+    apt-get install --no-install-recommends wget git ntp yarn google-chrome-stable python-dev pkg-config fontconfig libpng-dev libjpeg-dev libcairo2-dev libfreetype6-dev -y && \
     apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 # Enable Passenger and Nginx and remove the default site
@@ -45,7 +45,7 @@ COPY vendor/docker/00_app_env.conf /etc/nginx/conf.d/00_app_env.conf
 
 # Install dockerize
 RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && \
-    tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
+    tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
 
 # Use Amazon NTP servers
 COPY vendor/docker/ntp.conf /etc/ntp.conf
@@ -67,7 +67,7 @@ RUN gem install bundler && \
 
 # Install javascript libraries and webpack
 RUN yarn install && \
-    yarn build
+    yarn build && yarn cache clean;
 
 # Run additional scripts during container startup (i.e. not at build time)
 RUN mkdir -p /etc/my_init.d