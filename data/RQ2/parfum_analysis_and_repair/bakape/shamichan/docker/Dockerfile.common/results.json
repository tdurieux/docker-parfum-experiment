{
  "startTime": 1674249636763,
  "endTime": 1674249637943,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 29,
        "columnEnd": 63
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 17,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# TODO: separate server image from imager image\n# TODO: coverage report in the CI\nFROM ubuntu:focal\n\nEXPOSE 8000\n\nRUN mkdir -p /shamichan/images /shamichan/www/videos /src\nWORKDIR /shamichan\nCMD [\"-a\", \":8000\"]\nENTRYPOINT [\"./shamichan\"]\n\n# Install OS dependencies\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y \\\n\tbuild-essential \\\n\tpkg-config \\\n\tlibopencv-dev \\\n\tlibgeoip-dev \\\n\tgit wget curl \\\n\tpostgresql-client \\\n\tlibssl-dev \\\n\t&& apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN apt-get dist-upgrade -y && apt-get clean\n\n# Install Node.js\nRUN wget -q -O- https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nENV PATH=$PATH:/root/.cargo/bin\n\n# Build WASM build tools\nRUN cargo install wasm-pack\n\n# Install Go\nRUN wget -O- \\\n\t\"https://dl.google.com/go/$( curl -f https://go.dev/VERSION?m=text).linux-amd64.tar.gz\" \\\n\t| tar xpz -C /usr/local\nENV PATH=$PATH:/usr/local/go/bin\n\n# Install Go build tools\nRUN go get -u github.com/valyala/quicktemplate \\\n\tgithub.com/rakyll/statik \\\n\tgithub.com/valyala/quicktemplate/qtc\n\n# Download go deps\nCOPY go.mod go.sum ./\nRUN go mod download\n\n# Cache Node.js deps\nCOPY package.json package-lock.json ./\nRUN npm install --progress false --depth 0 && npm cache clean --force;\nCOPY client/package-lock.json client/package.json client/\nRUN cd client && npm install --progress false --depth 0 && npm cache clean --force;\n\n# Cache Rust dependencies by faking a project structure\nRUN mkdir -p \\\n\tclient/js client/src www/client \\\n\tserver/src \\\n\tcommon/src\nCOPY Cargo.toml Cargo.lock ./\nCOPY client/Cargo.toml client/webpack.config.js client/\nCOPY client/js client/js\nCOPY docker/dummy.rs client/src/lib.rs\nCOPY server/Cargo.toml server\nCOPY docker/dummy.rs server/src/lib.rs\nCOPY common/Cargo.toml common\nCOPY docker/dummy.rs common/src/lib.rs\n\n# Build deps for both prod and dev builds\nRUN cargo build --workspace --exclude client --release\nRUN cargo build --workspace --exclude client\nRUN cd client && ./node_modules/.bin/webpack\nRUN cd client && ./node_modules/.bin/webpack -d\n\n# Remove dummy sources and artefacts\nRUN rm -r \\\n\tclient/src server/src common/src \\\n\ttarget/release/deps/libcommon* \\\n\ttarget/debug/deps/libcommon* \\\n\ttarget/wasm32-unknown-unknown/release/deps/libcommon* \\\n\ttarget/wasm32-unknown-unknown/debug/deps/libcommon* \\\n\tclient/dist client/pkg\n\n# Copy all sources\nCOPY . .\n"
}