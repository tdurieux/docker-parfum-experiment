{
  "startTime": 1674253270061,
  "endTime": 1674253271382,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 35,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 24,
        "columnStart": 32,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 35,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 24,
        "columnStart": 32,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS base\nARG uid\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Create a user with sudo rights\nRUN apt-get update && apt-get -y --no-install-recommends install sudo && rm -rf /var/lib/apt/lists/*;\nRUN useradd -m appuser -u ${uid} && echo \"appuser:appuser\" | chpasswd \\\n   && adduser appuser sudo \\\n   && sudo usermod --shell /bin/bash appuser\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER appuser\n\n# Configure tzdata manually before anything else\nENV TZONE=Europe/Paris\nRUN sudo ln -fs /usr/share/zoneinfo/$TZONE /etc/localtime \\\n    && sudo apt-get update && sudo apt-get -y --no-install-recommends install tzdata && rm -rf /var/lib/apt/lists/*;\n\n# Base packages required\nRUN sudo apt-get update && sudo apt-get -y --no-install-recommends install \\\n    git \\\n    vim \\\n    wget \\\n    maven \\\n    openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\n# Prepare buiid and install environment\nRUN sudo mkdir /opt/build /opt/install \\\n    && sudo chown appuser:appuser /opt/build /opt/install\n\n# swagger-codegen\nFROM base as codegen_clone\nARG clone_label\nWORKDIR /opt/build\nRUN git clone --depth 1 https://github.com/f4exb/swagger-codegen.git -b sdrangel \\\n    && cd swagger-codegen \\\n    && mkdir build \\\n    && echo \"${clone_label}\" > build/clone_label.txt\n\nFROM base as codegen_build\nCOPY --from=codegen_clone --chown=appuser /opt/build/swagger-codegen /opt/build/swagger-codegen\nWORKDIR /opt/build/swagger-codegen\nRUN export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 \\\n    && mvn clean package\nRUN mkdir -p /opt/install/swagger \\\n    && cp ./modules/swagger-codegen-cli/target/swagger-codegen-cli.jar /opt/install/swagger\n\nFROM base as codegen\nRUN mkdir -p /opt/build/sdrangel/swagger/sdrangel\nCOPY --from=codegen_build --chown=appuser /opt/install/swagger /opt/install/swagger\nCOPY swagger-codegen /opt/install/swagger\n\nWORKDIR /opt/build/sdrangel/swagger/sdrangel\n"
}