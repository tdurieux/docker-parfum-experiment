{
  "startTime": 1674250808547,
  "endTime": 1674250809281,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:10.0-devel-centos7\n\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility,graphics\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN yum install -y epel-release centos-release-scl-rh && yum install -y wget curl && \\\n    wget -qO- \"https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.tar.gz\" | tar --strip-components=1 -xz -C /usr/local && \\\n    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    yum install -y glibc-headers gcc-c++ ccache lcov make automake bzip2 git libcurl-devel \\\n    llvm-toolset-7.0-clang llvm-toolset-7.0-clang-tools-extra && \\\n    mkdir /build && \\\n    wget -qO- \"https://mirrors.ustc.edu.cn/gnu/gcc/gcc-7.3.0/gcc-7.3.0.tar.gz\" | tar --strip-components=1 -xz -C /build && \\\n    cd build && ./contrib/download_prerequisites && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-checking=release --enable-languages=c,c++ --disable-multilib && \\\n    make && make install && \\\n    rm -rf /build && \\\n    rm -rf /var/cache/yum/*\n\nRUN echo \"source scl_source enable llvm-toolset-7.0\" >> /etc/profile.d/llvm-toolset-7.sh\n\nENV CLANG_TOOLS_PATH /opt/rh/llvm-toolset-7.0/root/usr/bin\n\nCOPY docker/build_env/build_conda_env.yml /tmp/build_conda_env.yml\n\nRUN . /opt/conda/etc/profile.d/conda.sh && \\\n    conda activate base && \\\n    conda update --all -y && \\\n    conda env create -f /tmp/build_conda_env.yml && \\\n    conda clean --all -y && \\\n    rm /tmp/build_conda_env.yml && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\nCOPY docker/build_env/docker-entrypoint.sh /opt/docker-entrypoint.sh\nWORKDIR /root\n\nENTRYPOINT [ \"/opt/docker-entrypoint.sh\" ]\n\nCMD [ \"start\" ]\n"
}