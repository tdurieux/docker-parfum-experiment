{
  "startTime": 1674252107381,
  "endTime": 1674252108892,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Docker file is used to build an image with all of the dependencies needed to\n# build the xReg library and should be tagged something like xreg-deps-${os_name}-${os_version}\n# (e.g. xreg-deps-ubuntu-16.04)\n\n# choose either ubuntu or centos\nARG os_name=ubuntu\n\n# for ubuntu choose 16.04, 18.04, or 20.04\n# for centos choose 7 or 8\nARG os_version=16.04\n\n# e.g. by running Dockerfile.ubuntu_dev_base or Dockerfile.centos_dev_base\nFROM xreg-dev-base-${os_name}-${os_version} as xreg-dev-base-cust-deps\n\nWORKDIR /\n\nRUN mkdir ffmpeg_dl && cd ffmpeg_dl && \\\n    wget https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz && \\\n    tar xf ffmpeg-release-amd64-static.tar.xz && \\\n    mkdir -p /usr/local/bin && \\\n    mv ffmpeg-4.3.1-amd64-static/ffmpeg /usr/local/bin && \\\n    cd / && rm -rf ffmpeg_dl && rm ffmpeg-release-amd64-static.tar.xz\n\n# Get a more recent version of TBB than what is probably in the package manager\n# At least one that works better w/ CMake\nRUN mkdir tbb_dl && cd tbb_dl && \\\n    wget https://github.com/intel/tbb/releases/download/2018_U1/tbb2018_20170919oss_lin.tgz && \\\n    tar xf tbb2018_20170919oss_lin.tgz && \\\n    mv tbb2018_20170919oss /opt && cd /opt && ln -s tbb2018_20170919oss tbb && \\\n    cd / && rm -rf tbb_dl && rm tbb2018_20170919oss_lin.tgz\n\n# building ninja as it is able to build quicker than make\nRUN mkdir ninja_build && cd ninja_build && \\\n    wget https://github.com/ninja-build/ninja/archive/v1.10.1.tar.gz && \\\n    tar xf v1.10.1.tar.gz && cd ninja-1.10.1 && mkdir build && cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release .. && cmake --build . && cmake --build . --target install && \\\n    cd / && rm -rf ninja_build && rm v1.10.1.tar.gz\n\nFROM xreg-dev-base-cust-deps as xreg-deps\n\nWORKDIR /\n\n# bring in boost 1.65 header only\nRUN mkdir boost_dl && cd boost_dl && \\\n    wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz && \\\n    tar xf boost_1_65_1.tar.gz && cd boost_1_65_1 && mv boost /usr/local/include && \\\n    cd / && rm -rf boost_dl && rm boost_1_65_1.tar.gz\n\n# bring in eigen 3.3.4 header only\nRUN mkdir eigen_dl && cd eigen_dl && \\\n    wget https://gitlab.com/libeigen/eigen/-/archive/3.3.4/eigen-3.3.4.tar.gz && \\\n    tar xf eigen-3.3.4.tar.gz && cd eigen-3.3.4 && \\\n    mv Eigen /usr/local/include && mv unsupported /usr/local/include && \\\n    mv signature_of_eigen3_matrix_library /usr/local/include && \\\n    cd / && rm -rf eigen_dl && rm eigen-3.3.4.tar.gz\n\n# bring in viennacl 1.7.1 header only\nRUN mkdir viennacl_dl && cd viennacl_dl && \\\n    wget https://github.com/viennacl/viennacl-dev/archive/release-1.7.1.tar.gz && \\\n    tar xf release-1.7.1.tar.gz && cd viennacl-dev-release-1.7.1 && mv viennacl /usr/local/include && \\\n    cd / && rm -rf viennacl_dl && rm release-1.7.1.tar.gz\n\n# build format 5.3.0\nRUN mkdir fmt_build && cd fmt_build && \\\n    wget https://github.com/fmtlib/fmt/archive/5.3.0.tar.gz && \\\n    tar xf 5.3.0.tar.gz && cd fmt-5.3.0 && \\\n    mkdir build && cd build && \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=ON \\\n                   -DCMAKE_CXX_STANDARD:STRING=\"11\" -DFMT_USE_CPP11:BOOL=ON \\\n                   -DFMT_TEST:BOOL=OFF -DFMT_INSTALL:BOOL=ON \\\n                   -DFMT_DOC:BOOL=OFF \\\n          .. && \\\n    cmake --build . && cmake --build . --target install && \\\n    cd / && rm -rf fmt_build && rm 5.3.0.tar.gz\n\n# build nlopt 2.5.0\nRUN mkdir nlopt_build && cd nlopt_build && \\\n    wget https://github.com/stevengj/nlopt/archive/v2.5.0.tar.gz && \\\n    tar xf v2.5.0.tar.gz && cd nlopt-2.5.0 && \\\n    mkdir build && cd build && \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=ON \\\n                   -DCMAKE_CXX_STANDARD:STRING=\"11\" \\\n                   -DNLOPT_CXX:BOOL=OFF -DNLOPT_PYTHON:BOOL=OFF \\\n                   -DNLOPT_OCTAVE:BOOL=OFF -DNLOPT_MATLAB:BOOL=OFF \\\n                   -DNLOPT_GUILE:BOOL=OFF -DNLOPT_SWIG:BOOL=OFF \\\n                   -DNLOPT_LINK_PYTHON:BOOL=OFF \\\n         .. && \\\n    cmake --build . && cmake --build . --target install && \\\n    cd / && rm -rf nlopt_build && rm v2.5.0.tar.gz\n\n# build ITK 4.13.2\nRUN mkdir itk_build && cd itk_build && \\\n    wget https://github.com/InsightSoftwareConsortium/ITK/releases/download/v4.13.2/InsightToolkit-4.13.2.tar.gz && \\\n    tar xf InsightToolkit-4.13.2.tar.gz && cd InsightToolkit-4.13.2 && \\\n    mkdir build && cd build && \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=ON \\\n          -DCMAKE_CXX_STANDARD:STRING=\"11\" \\\n          -DBUILD_TESTING:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF \\\n          -DITK_USE_GPU:BOOL=OFF -DModule_ITKReview:BOOL=ON \\\n          -DModule_LabelErodeDilate:BOOL=ON -DVCL_INCLUDE_CXX_0X:BOOL=ON \\\n         .. && \\\n    cmake --build . && cmake --build . --target install && \\\n    cd / && rm -rf itk_build && rm InsightToolkit-4.13.2.tar.gz\n\n# build OpenCV 3.2.0\nRUN mkdir opencv_build && cd opencv_build && \\\n    wget https://github.com/opencv/opencv/archive/3.2.0.tar.gz && \\\n    tar xf 3.2.0.tar.gz && cd opencv-3.2.0 && \\\n    mkdir build && cd build && \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=ON \\\n                   -DCMAKE_CXX_STANDARD:STRING=\"11\" \\\n                   -DBUILD_TESTS:BOOL=OFF -DBUILD_EXAMPLES:BOOL=OFF \\\n                   -DBUILD_DOCS:BOOL=OFF -DBUILD_WITH_DEBUG_INFO:BOOL=OFF \\\n                   -DWITH_TBB:BOOL=ON -DBUILD_TBB:BOOL=OFF -DTBB_INCLUDE_DIRS:PATH=\"/opt/tbb/include\" \\\n                   -DWITH_IPP:BOOL=OFF -DWITH_VTK:BOOL=OFF \\\n                   -DWITH_CUBLAS:BOOL=OFF -DWITH_CUDA:BOOL=OFF \\\n                   -DWITH_CUFFT:BOOL=OFF -DWITH_OPENCL:BOOL=OFF \\\n                   -DBUILD_opencv_python2:BOOL=OFF -DBUILD_opencv_python3:BOOL=OFF \\\n                   -DBUILD_opencv_highgui:BOOL=OFF -DWITH_GSTREAMER:BOOL=OFF \\\n         .. && \\\n    cmake --build . && cmake --build . --target install && \\\n    cd / && rm -rf opencv_build && rm 3.2.0.tar.gz\n\n# build VTK 7.1.1\nRUN mkdir vtk_build && cd vtk_build && \\\n    wget https://www.vtk.org/files/release/7.1/VTK-7.1.1.tar.gz && \\\n    tar xf VTK-7.1.1.tar.gz && cd VTK-7.1.1 && \\\n    mkdir build && cd build && \\\n    TBB_ROOT=\"/opt/tbb\" \\\n    cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS:BOOL=ON \\\n          -DCMAKE_CXX_STANDARD:STRING=\"11\" \\\n          -DVTK_Group_Imaging:BOOL=ON -DVTK_Group_Views:BOOL=ON \\\n          -DBUILD_TESTING:BOOL=OFF -DVTK_USE_CXX11_FEATURES:BOOL=ON \\\n          -DVTK_SMP_IMPLEMENTATION_TYPE:STRING=\"TBB\" \\\n         .. && \\\n    cmake --build . && cmake --build . --target install && \\\n    cd / && rm -rf vtk_build && rm VTK-7.1.1.tar.gz\n\n"
}