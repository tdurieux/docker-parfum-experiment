diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gaocong13/orthopedic-robot-navigation/docker/Dockerfile.xreg-deps b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gaocong13/orthopedic-robot-navigation/docker/Dockerfile.xreg-deps/repaired.Dockerfile
index c107214..4c39e73 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gaocong13/orthopedic-robot-navigation/docker/Dockerfile.xreg-deps
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gaocong13/orthopedic-robot-navigation/docker/Dockerfile.xreg-deps/repaired.Dockerfile
@@ -19,7 +19,7 @@ RUN mkdir ffmpeg_dl && cd ffmpeg_dl && \
     tar xf ffmpeg-release-amd64-static.tar.xz && \
     mkdir -p /usr/local/bin && \
     mv ffmpeg-4.3.1-amd64-static/ffmpeg /usr/local/bin && \
-    cd / && rm -rf ffmpeg_dl
+    cd / && rm -rf ffmpeg_dl && rm ffmpeg-release-amd64-static.tar.xz
 
 # Get a more recent version of TBB than what is probably in the package manager
 # At least one that works better w/ CMake
@@ -27,14 +27,14 @@ RUN mkdir tbb_dl && cd tbb_dl && \
     wget https://github.com/intel/tbb/releases/download/2018_U1/tbb2018_20170919oss_lin.tgz && \
     tar xf tbb2018_20170919oss_lin.tgz && \
     mv tbb2018_20170919oss /opt && cd /opt && ln -s tbb2018_20170919oss tbb && \
-    cd / && rm -rf tbb_dl
+    cd / && rm -rf tbb_dl && rm tbb2018_20170919oss_lin.tgz
 
 # building ninja as it is able to build quicker than make
 RUN mkdir ninja_build && cd ninja_build && \
     wget https://github.com/ninja-build/ninja/archive/v1.10.1.tar.gz && \
     tar xf v1.10.1.tar.gz && cd ninja-1.10.1 && mkdir build && cd build && \
     cmake -DCMAKE_BUILD_TYPE=Release .. && cmake --build . && cmake --build . --target install && \
-    cd / && rm -rf ninja_build
+    cd / && rm -rf ninja_build && rm v1.10.1.tar.gz
 
 FROM xreg-dev-base-cust-deps as xreg-deps
 
@@ -44,7 +44,7 @@ WORKDIR /
 RUN mkdir boost_dl && cd boost_dl && \
     wget https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.gz && \
     tar xf boost_1_65_1.tar.gz && cd boost_1_65_1 && mv boost /usr/local/include && \
-    cd / && rm -rf boost_dl
+    cd / && rm -rf boost_dl && rm boost_1_65_1.tar.gz
 
 # bring in eigen 3.3.4 header only
 RUN mkdir eigen_dl && cd eigen_dl && \
@@ -52,13 +52,13 @@ RUN mkdir eigen_dl && cd eigen_dl && \
     tar xf eigen-3.3.4.tar.gz && cd eigen-3.3.4 && \
     mv Eigen /usr/local/include && mv unsupported /usr/local/include && \
     mv signature_of_eigen3_matrix_library /usr/local/include && \
-    cd / && rm -rf eigen_dl
+    cd / && rm -rf eigen_dl && rm eigen-3.3.4.tar.gz
 
 # bring in viennacl 1.7.1 header only
 RUN mkdir viennacl_dl && cd viennacl_dl && \
     wget https://github.com/viennacl/viennacl-dev/archive/release-1.7.1.tar.gz && \
     tar xf release-1.7.1.tar.gz && cd viennacl-dev-release-1.7.1 && mv viennacl /usr/local/include && \
-    cd / && rm -rf viennacl_dl
+    cd / && rm -rf viennacl_dl && rm release-1.7.1.tar.gz
 
 # build format 5.3.0
 RUN mkdir fmt_build && cd fmt_build && \
@@ -71,7 +71,7 @@ RUN mkdir fmt_build && cd fmt_build && \
                    -DFMT_DOC:BOOL=OFF \
           .. && \
     cmake --build . && cmake --build . --target install && \
-    cd / && rm -rf fmt_build
+    cd / && rm -rf fmt_build && rm 5.3.0.tar.gz
 
 # build nlopt 2.5.0
 RUN mkdir nlopt_build && cd nlopt_build && \
@@ -86,7 +86,7 @@ RUN mkdir nlopt_build && cd nlopt_build && \
                    -DNLOPT_LINK_PYTHON:BOOL=OFF \
          .. && \
     cmake --build . && cmake --build . --target install && \
-    cd / && rm -rf nlopt_build
+    cd / && rm -rf nlopt_build && rm v2.5.0.tar.gz
 
 # build ITK 4.13.2
 RUN mkdir itk_build && cd itk_build && \
@@ -100,7 +100,7 @@ RUN mkdir itk_build && cd itk_build && \
           -DModule_LabelErodeDilate:BOOL=ON -DVCL_INCLUDE_CXX_0X:BOOL=ON \
          .. && \
     cmake --build . && cmake --build . --target install && \
-    cd / && rm -rf itk_build
+    cd / && rm -rf itk_build && rm InsightToolkit-4.13.2.tar.gz
 
 # build OpenCV 3.2.0
 RUN mkdir opencv_build && cd opencv_build && \
@@ -119,7 +119,7 @@ RUN mkdir opencv_build && cd opencv_build && \
                    -DBUILD_opencv_highgui:BOOL=OFF -DWITH_GSTREAMER:BOOL=OFF \
          .. && \
     cmake --build . && cmake --build . --target install && \
-    cd / && rm -rf opencv_build
+    cd / && rm -rf opencv_build && rm 3.2.0.tar.gz
 
 # build VTK 7.1.1
 RUN mkdir vtk_build && cd vtk_build && \
@@ -134,5 +134,5 @@ RUN mkdir vtk_build && cd vtk_build && \
           -DVTK_SMP_IMPLEMENTATION_TYPE:STRING="TBB" \
          .. && \
     cmake --build . && cmake --build . --target install && \
-    cd / && rm -rf vtk_build
+    cd / && rm -rf vtk_build && rm VTK-7.1.1.tar.gz