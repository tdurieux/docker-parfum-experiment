{
  "startTime": 1674214935326,
  "endTime": 1674214936047,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedDockerfile": "FROM jenkinsxio/jenkins-filerunner:0.1.49\n\nRUN apt-get install --no-install-recommends -y chromedriver chromium pkg-config g++ zlib1g-dev python && rm -rf /var/lib/apt/lists/*;\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\nRUN curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add -\nRUN apt-get update && apt-get install --no-install-recommends -y bazel && rm -rf /var/lib/apt/lists/*;\n\nENV GOLANG_VERSION 1.11.5\nRUN wget https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz && \\\n  tar -C /usr/local -xzf go$GOLANG_VERSION.linux-amd64.tar.gz && \\\n  rm go${GOLANG_VERSION}.linux-amd64.tar.gz\n\nENV GLIDE_VERSION v0.13.1\nENV GO15VENDOREXPERIMENT 1\nRUN wget https://github.com/Masterminds/glide/releases/download/$GLIDE_VERSION/glide-$GLIDE_VERSION-linux-amd64.tar.gz && \\\n  tar -xzf glide-$GLIDE_VERSION-linux-amd64.tar.gz && \\\n  mv linux-amd64 /usr/local/glide && \\\n  rm glide-$GLIDE_VERSION-linux-amd64.tar.gz\n\nENV GH_RELEASE_VERSION 2.2.1\nRUN wget https://github.com/progrium/gh-release/releases/download/v$GH_RELEASE_VERSION/gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz && \\\n  tar -xzf gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz && \\\n  mv gh-release /usr/local/gh-release && \\\n  rm gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz\n\nENV PROTOBUF 3.5.1\nRUN wget https://github.com/google/protobuf/releases/download/v${PROTOBUF}/protoc-${PROTOBUF}-linux-x86_64.zip && \\\n  unzip protoc-${PROTOBUF}-linux-x86_64.zip -d protoc && \\\n  chmod +x protoc && cp protoc/bin/protoc /usr/bin/protoc && rm -rf protoc\n\n\nENV PATH $PATH:/usr/local/go/bin\nENV PATH $PATH:/usr/local/glide\nENV PATH $PATH:/usr/local/\nENV GOROOT /usr/local/go\nENV GOPATH=/home/jenkins/go\nENV PATH $PATH:$GOPATH/bin\n\nRUN go get github.com/DATA-DOG/godog/cmd/godog && \\\n  mv $GOPATH/bin/godog /usr/local/ && \\\n  rm -rf $GOPATH/src/github.com/DATA-DOG\n\nENV HUGO_VERSION 0.49\nRUN curl -Lf -o hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz && \\\n  tar xvfz hugo.tar.gz && \\\n  mv hugo /usr/local && \\\n  rm -fr hugo* && \\\n  hugo version && rm hugo.tar.gz\n\nRUN go get github.com/derekparker/delve/cmd/dlv && \\\n  mv $GOPATH/bin/* /usr/local/ && \\\n  rm -rf $GOPATH/src/github.com/derekparker\n\nRUN go get github.com/golang/protobuf/proto && \\\n  go get github.com/micro/protoc-gen-micro && \\\n  go get github.com/golang/protobuf/protoc-gen-go && \\ \n  go get -u github.com/micro/micro && \\\n  mv $GOPATH/bin/* /usr/local/ && \\ \n  cp -r $GOPATH/src/* /usr/local/go/src   \n\n# jx\nENV JX_VERSION 2.0.835\nRUN curl -Lf https://github.com/jenkins-x/jx/releases/download/v${JX_VERSION}/jx-linux-amd64.tar.gz | tar xzv && \\\n  mv jx /usr/bin/\n"
}