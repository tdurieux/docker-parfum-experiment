diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rlleshi/phar/docker/mmaction2/rawframes/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rlleshi/phar/docker/mmaction2/rawframes/Dockerfile/repaired.Dockerfile
index 98ebb6a..e6538d7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rlleshi/phar/docker/mmaction2/rawframes/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rlleshi/phar/docker/mmaction2/rawframes/Dockerfile/repaired.Dockerfile
@@ -8,20 +8,20 @@ ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0 8.0+PTX"
 ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
 ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"
 
-RUN apt-get update && apt-get install -y git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 ffmpeg \
+RUN apt-get update && apt-get install --no-install-recommends -y git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 ffmpeg \
     && apt-get clean \
     && rm -rf /var/lib/apt/lists/*
 
-RUN apt-get update && apt-get install -y nano p7zip-full imagemagick unrar wget unzip libssl-dev
+RUN apt-get update && apt-get install --no-install-recommends -y nano p7zip-full imagemagick unrar wget unzip libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 # install latest version of cmake
 # installing cmake causes stupid error while training?
 RUN mkdir ~/temp && cd ~/temp
-RUN wget https://cmake.org/files/v3.20/cmake-3.20.2.tar.gz && tar -xzvf cmake-3.20.2.tar.gz
+RUN wget https://cmake.org/files/v3.20/cmake-3.20.2.tar.gz && tar -xzvf cmake-3.20.2.tar.gz && rm cmake-3.20.2.tar.gz
 RUN cd cmake-3.20.2 && ./bootstrap && make -j$(nproc) && make install
 
 # Install mmcv-full
-RUN pip install mmcv-full==1.3.6 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html
+RUN pip install --no-cache-dir mmcv-full==1.3.6 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html
 
 # Install MMAction2
 RUN conda clean --all
@@ -37,11 +37,11 @@ ARG OPENCV="4.5.2"
 # "Pascal" "Volta" "Turing" "Ampere"; adapt to GPU environment; Turing for GPU 2, 3
 ARG CUDA_GENERATION="Turing"
 RUN apt update \
-    && apt install -y git cmake wget software-properties-common nasm yasm libx264-dev libx265-dev libvpx-dev libboost-all-dev ffmpeg libavcodec-dev libavformat-dev libavutil-dev libblas-dev liblapack-dev libswscale-dev libtiff-dev libdc1394-22-dev libpng-dev libavresample-dev ccache libgflags-dev libhdf5-dev liblapack-dev libeigen3-dev libgoogle-glog-dev libfreetype6-dev \
-    && wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - |  tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null \
+    && apt install --no-install-recommends -y git cmake wget software-properties-common nasm yasm libx264-dev libx265-dev libvpx-dev libboost-all-dev ffmpeg libavcodec-dev libavformat-dev libavutil-dev libblas-dev liblapack-dev libswscale-dev libtiff-dev libdc1394-22-dev libpng-dev libavresample-dev ccache libgflags-dev libhdf5-dev liblapack-dev libeigen3-dev libgoogle-glog-dev libfreetype6-dev \
+    && wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null \
     && apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' \
     && apt update \
-    && apt install cmake -y \
+    && apt install --no-install-recommends cmake -y \
     && apt-get clean \
     && rm -rf /var/lib/apt/lists/* /var/cache/apt /tmp/* \
     && wget https://github.com/opencv/opencv/archive/${OPENCV}.tar.gz -O opencv.tar.gz \
@@ -125,4 +125,4 @@ RUN apt update \
     && make -j"$(nproc)" \
     && make install \
     && cd ../../ \
-    && rm -rf *gz open* dense*
+    && rm -rf *gz open* dense* && rm opencv.tar.gz