{
  "startTime": 1674217699906,
  "endTime": 1674217700821,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTORCH=\"1.8.0\"\nARG CUDA=\"11.1\"\nARG CUDNN=\"8\"\nFROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-devel\n\nENV TORCH_CUDA_ARCH_LIST=\"6.0 6.1 7.0 8.0+PTX\"\nENV TORCH_NVCC_FLAGS=\"-Xfatbin -compress-all\"\nENV CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"\n\n# ! https://github.com/NVIDIA/nvidia-docker/issues/1632\n# currently image not working properly\nRUN apt-key del 7fa2af80\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/x86_64/7fa2af80.pub\n\nRUN apt-get update && apt-get install --no-install-recommends -y git ninja-build libglib2.0-0 libsm6 \\\n    libxrender-dev libxext6 ffmpeg nano p7zip-full imagemagick wget unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir mmcv-full==1.3.18 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html\nRUN git clone --recurse-submodules https://github.com/rlleshi/phar.git phar\n\n# install mmaction, mmpose, mmdet\nWORKDIR /workspace/phar/mmaction2\nENV FORCE_CUDA=\"1\"\nRUN pip install cython --no-cache-dir\nRUN pip install --no-cache-dir -e .\nWORKDIR /workspace/phar/mmpose\nRUN pip install --no-cache-dir -r requirements.txt\nRUN pip install --no-cache-dir -v -e .\nRUN pip install --no-cache-dir mmdet==2.12.0\n\n# install extra dependencies\nWORKDIR /workspace/phar\nRUN pip install --no-cache-dir -r requirements/extra.txt\n\n# download models\nRUN wget https://github.com/rlleshi/phar/releases/download/v1.0.0/audio.pth -O checkpoints/har/audio.pth \\\n    && wget https://github.com/rlleshi/phar/releases/download/v1.0.0/posec3d.pth -O checkpoints/har/posec3d.pth \\\n    && wget https://github.com/rlleshi/phar/releases/download/v1.0.0/timeSformer.pth -O checkpoints/har/timeSformer.pth \\\n    && wget https://download.openmmlab.com/mmpose/top_down/hrnet/hrnet_w32_coco_256x192-c78dce93_20200708.pth -O checkpoints/pose/hrnet_w32_coco_256x192.pth \\\n    && wget https://download.openmmlab.com/mmdetection/v2.0/faster_rcnn/faster_rcnn_r50_fpn_2x_coco/faster_rcnn_r50_fpn_2x_coco_bbox_mAP-0.384_20200504_210434-a5d8aa15.pth \\\n    -O checkpoints/detector/faster_rcnn_r50_fpn_1x_coco-person.pth\n"
}