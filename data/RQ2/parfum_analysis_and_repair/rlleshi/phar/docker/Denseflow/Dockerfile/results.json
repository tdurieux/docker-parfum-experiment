{
  "startTime": 1674253072802,
  "endTime": 1674253074211,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 87,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 373
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA=\"11.1.1\"\nARG CUDNN=\"8\"\n\nFROM nvidia/cuda:${CUDA}-cudnn${CUDNN}-devel-ubuntu18.04\n\nARG OPENCV=\"4.5.2\"\n# \"Pascal\" \"Volta\" \"Turing\" \"Ampere\"\nARG CUDA_GENERATION=\"Turing\"\n\nRUN apt update \\\n    && apt install --no-install-recommends -y git cmake wget software-properties-common nasm yasm libx264-dev libx265-dev libvpx-dev libboost-all-dev ffmpeg libavcodec-dev libavformat-dev libavutil-dev libblas-dev liblapack-dev libswscale-dev libtiff-dev libdc1394-22-dev libpng-dev libavresample-dev ccache libgflags-dev libhdf5-dev liblapack-dev libeigen3-dev libgoogle-glog-dev libfreetype6-dev \\\n    && wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null \\\n    && apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' \\\n    && apt update \\\n    && apt install --no-install-recommends cmake -y \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /var/cache/apt /tmp/* \\\n    && wget https://github.com/opencv/opencv/archive/${OPENCV}.tar.gz -O opencv.tar.gz \\\n    && wget https://github.com/opencv/opencv_contrib/archive/${OPENCV}.tar.gz -O opencv_contrib.tar.gz \\\n    && mkdir opencv \\\n    && mkdir opencv_contrib \\\n    && tar xf opencv.tar.gz -C opencv/ --strip-components 1 \\\n    && tar xf opencv_contrib.tar.gz -C opencv_contrib/ --strip-components 1 \\\n    && cd opencv \\\n    && mkdir build \\\n    && cd build \\\n    && cmake \\\n        -DBUILD_EXAMPLES=OFF \\\n        -DWITH_QT=OFF \\\n        -DCUDA_GENERATION=${CUDA_GENERATION} \\\n        -DOpenGL_GL_PREFERENCE=GLVND \\\n        -DBUILD_opencv_hdf=OFF \\\n        -DBUILD_PERF_TESTS=OFF \\\n        -DBUILD_TESTS=OFF \\\n        -DCMAKE_BUILD_TYPE=RELEASE \\\n        -DBUILD_opencv_cnn_3dobj=OFF \\\n        -DBUILD_opencv_dnn=OFF \\\n        -DBUILD_opencv_datasets=OFF \\\n        -DBUILD_opencv_aruco=OFF \\\n        -DBUILD_opencv_tracking=OFF \\\n        -DBUILD_opencv_text=OFF \\\n        -DBUILD_opencv_stereo=OFF \\\n        -DBUILD_opencv_saliency=OFF \\\n        -DBUILD_opencv_rgbd=OFF \\\n        -DBUILD_opencv_reg=OFF \\\n        -DBUILD_opencv_ovis=OFF \\\n        -DBUILD_opencv_matlab=OFF \\\n        -DBUILD_opencv_freetype=OFF \\\n        -DBUILD_opencv_dpm=OFF \\\n        -DBUILD_opencv_face=OFF \\\n        -DBUILD_opencv_dnn_superres=OFF \\\n        -DBUILD_opencv_dnn_objdetect=OFF \\\n        -DBUILD_opencv_bgsegm=OFF \\\n        -DBUILD_opencv_cvv=OFF \\\n        -DBUILD_opencv_ccalib=OFF \\\n        -DBUILD_opencv_bioinspired=OFF \\\n        -DBUILD_opencv_dnn_modern=OFF \\\n        -DBUILD_opencv_dnns_easily_fooled=OFF \\\n        -DBUILD_JAVA=OFF \\\n        -DBUILD_opencv_python2=OFF \\\n        -DBUILD_NEW_PYTHON_SUPPORT=ON \\\n        -DBUILD_opencv_python3=OFF \\\n        -DHAVE_opencv_python3=OFF \\\n        -DPYTHON_DEFAULT_EXECUTABLE=\"$(which python)\" \\\n        -DWITH_OPENGL=ON \\\n        -DWITH_VTK=OFF \\\n        -DFORCE_VTK=OFF \\\n        -DWITH_TBB=ON \\\n        -DWITH_GDAL=ON \\\n        -DCUDA_FAST_MATH=ON \\\n        -DWITH_CUBLAS=ON \\\n        -DWITH_MKL=ON \\\n        -DMKL_USE_MULTITHREAD=ON \\\n        -DOPENCV_ENABLE_NONFREE=ON \\\n        -DWITH_CUDA=ON \\\n        -DNVCC_FLAGS_EXTRA=\"--default-stream per-thread\" \\\n        -DWITH_NVCUVID=OFF \\\n        -DBUILD_opencv_cudacodec=OFF \\\n        -DMKL_WITH_TBB=ON \\\n        -DWITH_FFMPEG=ON \\\n        -DMKL_WITH_OPENMP=ON \\\n        -DWITH_XINE=ON \\\n        -DENABLE_PRECOMPILED_HEADERS=OFF \\\n        -DOPENCV_GENERATE_PKGCONFIG=ON \\\n        -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n        .. \\\n    && make -j\"$(nproc)\" \\\n    && make install \\\n    && cd ../../ \\\n    && git clone https://github.com/open-mmlab/denseflow \\\n    && cd denseflow \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DCMAKE_INSTALL_PREFIX=/usr -DUSE_HDF5=yes .. \\\n    && make -j\"$(nproc)\" \\\n    && make install \\\n    && cd ../../ \\\n    && rm -rf *gz open* dense* && rm opencv.tar.gz\n\n#ENTRYPOINT [\"/usr/bin/denseflow\"]\n"
}