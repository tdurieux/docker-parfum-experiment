{
  "startTime": 1674248734898,
  "endTime": 1674248735505,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Web build image\nFROM node:lts AS webbuilder\n\nWORKDIR /usr/src/stage\n\nCOPY package.json .\nCOPY package-lock.json .\nCOPY tsconfig.json .\nCOPY tslint.json .\n\nRUN npm install --only=prod --quiet && npm cache clean --force;\n\nCOPY src ./src\nCOPY public ./public\n\nRUN npm run build\n\n# Server build image\nFROM golang:alpine AS gobuilder\n\n# Install ca-certificates\n# Git is required for fetching the dependencies.\nRUN apk update && apk add --no-cache ca-certificates && update-ca-certificates\n# Create appuser.\nENV USER=appuser\nENV UID=10001\n# See https://stackoverflow.com/a/55757473/12429735RUN\nRUN adduser \\    \n    --disabled-password \\    \n    --gecos \"\" \\    \n    --home \"/nonexistent\" \\    \n    --shell \"/sbin/nologin\" \\    \n    --no-create-home \\    \n    --uid \"${UID}\" \\    \n    \"${USER}\"\n\nWORKDIR $GOPATH/src/github.com/kubelens/kubelens/web\n\nCOPY ./public/server.go .\n\nRUN go mod init && go mod tidy\n\n# Build the binary.\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags=\"-s -w\" -o /go/bin/kubelens-web\n\n# Run image\nFROM scratch\n\n# Import certs\nCOPY --from=gobuilder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\n\n# Import the user and group files from the builder.\nCOPY --from=gobuilder /etc/passwd /etc/passwd\nCOPY --from=gobuilder /etc/group /etc/group\n\n# Copy static executable.\nCOPY --from=gobuilder /go/bin/kubelens-web /go/bin/kubelens-web\n# Copy static web files.\nCOPY --from=webbuilder /usr/src/stage/build /usr/src/website\n\n# Use an unprivileged user.\nUSER appuser:appuser\n\n# Run the binary.\nENTRYPOINT [\"/go/bin/kubelens-web\", \"-confpath=/mnt/config\", \"-sitepath=/usr/src/website\"]\n"
}