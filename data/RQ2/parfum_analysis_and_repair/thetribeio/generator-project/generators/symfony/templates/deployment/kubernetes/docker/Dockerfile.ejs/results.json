{
  "startTime": 1674255913290,
  "endTime": 1674255914393,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1.3-fpm as base\n\nWORKDIR /srv/<%= packageName %>\n\nRUN curl --fail --location --output /usr/local/bin/install-php-extensions https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/1.0.4/install-php-extensions && \\\n    echo \"8bb61096c6cb1edc4d5039cf085c0e774f222c45d3f0546f3c58053a58253fb7  /usr/local/bin/install-php-extensions\" | sha256sum -c - && \\\n    chmod 755 /usr/local/bin/install-php-extensions\n\nRUN install-php-extensions intl pdo_pgsql\n\n# Dependencies\nFROM base as dependencies\n\nRUN apt-get update && \\\n    apt-get install --yes --no-install-recommends git unzip && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\nRUN curl -f -L \"https://getcomposer.org/download/2.2.6/composer.phar\" -o /usr/local/bin/composer && \\\n    echo \"1d58486b891e59e9e064c0d54bb38538f74d6014f75481542c69ad84d4e97704  /usr/local/bin/composer\" | sha256sum -c - && \\\n    chmod 755 /usr/local/bin/composer\n\nCOPY composer.json composer.lock ./\n\nRUN composer install --no-dev --no-scripts\n\n<% if (twig) { %>\n# Webpack\nFROM node:16.15.1 as webpack\n\nWORKDIR /srv/<%= packageName %>\n\nCOPY package.json yarn.lock ./\n\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY ./.babelrc ./.browserslistrc ./postcss.config.js ./webpack.config.js ./\nCOPY ./assets/ ./assets/\n\nENV NODE_ENV=production\nRUN yarn build\n\n# Sentry release\nFROM getsentry/sentry-cli:1.61.0 as sentry\n\nWORKDIR /srv/<%= packageName %>/\n\nCOPY --from=webpack /srv/<%= packageName %>/assets /srv/<%= packageName %>/assets\n<% } %>\n\n# PHP\nFROM base as php\n\nCOPY --from=dependencies /srv/<%= packageName %>/vendor /srv/<%= packageName %>/vendor\nCOPY ./bin ./bin\nCOPY ./config ./config\nCOPY ./migrations ./migrations\nCOPY ./public ./public\nCOPY ./src ./src\n<% if (twig) { %>\nCOPY ./templates ./templates\n<% } %>\nCOPY ./translations ./translations\n\nENV APP_ENV=prod\n\nRUN ./bin/console cache:warmup\n\n<% if (twig) { %>\nCOPY --from=webpack /srv/<%= packageName %>/var/manifest.json /srv/<%= packageName %>/var/manifest.json\n<% } %>\n\n# NginX\nFROM nginx:1.21.6 as nginx\n\nCOPY ./default.conf /etc/nginx/conf.d/\n\n<% if (twig) { %>\nCOPY --from=webpack /srv/<%= packageName %>/public/assets/ /srv/<%= packageName %>/public/assets/\n<% } %>\n"
}