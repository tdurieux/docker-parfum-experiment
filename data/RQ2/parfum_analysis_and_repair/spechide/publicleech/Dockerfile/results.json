{
  "startTime": 1674252730049,
  "endTime": 1674252730887,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedDockerfile": "#!/usr/bin/env python3\n#  -*- coding: utf-8 -*-\n#  Copyright (C) 2020 PublicLeech Authors\n\n#  This program is free software: you can redistribute it and/or modify\n#  it under the terms of the GNU Affero General Public License as published by\n#  the Free Software Foundation, either version 3 of the License, or\n#  (at your option) any later version.\n\n#  This program is distributed in the hope that it will be useful,\n#  but WITHOUT ANY WARRANTY; without even the implied warranty of\n#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#  GNU Affero General Public License for more details.\n\n#  You should have received a copy of the GNU Affero General Public License\n#  along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\n#  creates a layer from the base Docker image.\nFROM python:3.9.5-slim-buster\n\nWORKDIR /app\n\n# https://shouldiblamecaching.com/\nENV PIP_NO_CACHE_DIR 1\n\n# http://bugs.python.org/issue19846\n# https://github.com/SpEcHiDe/PublicLeech/pull/97\nENV LANG C.UTF-8\n\n# we don't have an interactive xTerm\nENV DEBIAN_FRONTEND noninteractive\n\n# sets the TimeZone, to be used inside the container\nENV TZ Asia/Kolkata\n\n# fix \"ephimeral\" / \"AWS\" file-systems\nRUN sed -i.bak 's/us-west-2\\.ec2\\.//' /etc/apt/sources.list\n\n# to resynchronize the package index files from their sources.\nRUN apt -qq update\n\n# base required pre-requisites before proceeding ...\nRUN apt -qq install -y --no-install-recommends \\\n    curl \\\n    git \\\n    gnupg2 \\\n    unzip \\\n    wget \\\n    # install gcc [ PEP 517 ]\n    build-essential gcc \\\n    software-properties-common && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-add-repository non-free\n\n# add required files to sources.list\nRUN wget -q -O - https://mkvtoolnix.download/gpg-pub-moritzbunkus.txt | apt-key add - && \\\n    wget -qO - https://ftp-master.debian.org/keys/archive-key-10.asc | apt-key add -\nRUN sh -c 'echo \"deb https://mkvtoolnix.download/debian/ buster main\" >> /etc/apt/sources.list.d/bunkus.org.list' && \\\n    sh -c 'echo deb http://deb.debian.org/debian buster main contrib non-free | tee -a /etc/apt/sources.list'\n\n# to resynchronize the package index files from their sources.\nRUN apt -qq update\n\n# install required packages\nRUN apt -qq install -y --no-install-recommends \\\n    # this package is required to fetch \"contents\" via \"TLS\"\n    apt-transport-https \\\n    # install coreutils\n    coreutils aria2 jq pv \\\n    # install encoding tools\n    ffmpeg \\\n    # install extraction tools\n    mkvtoolnix \\\n    p7zip rar unrar zip \\\n    # miscellaneous helpers\n    megatools mediainfo rclone && \\\n    # clean up previously installed SPC\n    apt purge -y software-properties-common && \\\n    # clean up the container \"layer\", after we are done\n    rm -rf /var/lib/apt/lists /var/cache/apt/archives /tmp && rm -rf /var/lib/apt/lists/*;\n\n# each instruction creates one layer\n# Only the instructions RUN, COPY, ADD create layers.\n# copies 'requirements', to inside the container\n# ..., there are multiple '' dependancies,\n# requiring the use of the entire repo, hence\n# adds files from your Docker clientâ€™s current directory.\nCOPY . .\n\n# install requirements, inside the container\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir -r requirements.txt\n\n# specifies what command to run within the container.\nCMD [\"python3\", \"-m\", \"publicleechgroup\"]\n"
}