{
  "startTime": 1674255065389,
  "endTime": 1674255067108,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 480
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 146
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 480
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 480
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster\n\nMAINTAINER m.krzaczkowski@yetiforce.com\n\nARG DEBIAN_FRONTEND=noninteractive\nARG DB_ROOT_PASS=1r2VdePVnNxluabdGuqh\n\nENV PHP_VER 7.4\nENV DB_USER_NAME yetiforce\nENV DB_USER_PASS Q4WK2yRUpliyjMRivDJE\nENV DB_PORT 3306\n#INSTALL_MODE = PROD , DEV , TEST\nENV INSTALL_MODE PROD\nENV GUI_MODE true\n\nENV PROVIDER docker\n\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils curl openssl wget ca-certificates apt-transport-https lsb-release gnupg && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg\nRUN echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" > /etc/apt/sources.list.d/php.list\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends mariadb-server mariadb-client && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends nginx nginx-extras \"php${PHP_VER}\"-fpm \"php${PHP_VER}\"-mysql \"php${PHP_VER}\"-curl \"php${PHP_VER}\"-intl \"php${PHP_VER}\"-gd \"php${PHP_VER}\"-fpm \"php${PHP_VER}\"-bcmath \"php${PHP_VER}\"-soap \"php${PHP_VER}\"-ldap \"php${PHP_VER}\"-imap \"php${PHP_VER}\"-xml \"php${PHP_VER}\"-cli \"php${PHP_VER}\"-zip \"php${PHP_VER}\"-json \"php${PHP_VER}\"-opcache \"php${PHP_VER}\"-mbstring \"php${PHP_VER}\"-imagick \"php${PHP_VER}\"-apcu zip unzip cron nodejs npm yarn && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends mc htop openssh-server git && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y autoclean\n\n# RUN apt-cache search php\nRUN dpkg --get-selections | grep php\n\nRUN rm /var/www/html/index.nginx-debian.html\nCOPY ./tests/setup/db/mysql.cnf /etc/mysql/mariadb.conf.d/50-server.cnf\nCOPY ./tests/setup/nginx/docker.conf /etc/nginx/sites-available/default\nCOPY ./tests/setup/nginx/yetiforce.conf /etc/nginx/yetiforce.conf\nCOPY ./tests/setup/fpm/docker.conf /etc/php/$PHP_VER/fpm/pool.d/www.conf\nCOPY ./ /var/www/html\nCOPY ./tests/setup/crons.conf /etc/cron.d/yetiforcecrm\nCOPY ./tests/setup/php/prod.ini /etc/php/$PHP_VER/mods-available/yetiforce.ini\nCOPY ./tests/setup/docker_entrypoint.sh /\nRUN rm /var/www/html/.user.ini\nRUN rm /var/www/html/public_html/.user.ini\n\nRUN\tservice mysql start; \\\n\tmysql -uroot mysql; \\\n\tmysqladmin password \"$DB_ROOT_PASS\"; \\\n\t#echo \"ALTER USER 'root'@'localhost' IDENTIFIED BY '$DB_ROOT_PASS';\" | mysql --user=root; \\\n\techo \"UPDATE mysql.user SET Password=PASSWORD('$DB_ROOT_PASS') WHERE User='root';\" | mysql --user=root;\\\n\techo \"DELETE FROM mysql.user WHERE User='';\" | mysql --user=root;\\\n\techo \"DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');\" | mysql --user=root; \\\n\techo \"DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';\" | mysql --user=root; \\\n\techo \"CREATE DATABASE yetiforce;\" | mysql --user=root;\\\n\techo \"CREATE USER 'yetiforce'@'localhost' IDENTIFIED BY '$DB_USER_PASS';\" | mysql --user=root;\\\n\techo \"GRANT ALL PRIVILEGES ON yetiforce.* TO 'yetiforce'@'localhost';\" | mysql --user=root;\\\n\techo \"FLUSH PRIVILEGES;\" | mysql --user=root\n\nRUN crontab /etc/cron.d/yetiforcecrm\nRUN ln -s /etc/php/$PHP_VER/mods-available/yetiforce.ini /etc/php/$PHP_VER/cli/conf.d/30-yetiforce.ini\nRUN ln -s /etc/php/$PHP_VER/mods-available/yetiforce.ini /etc/php/$PHP_VER/fpm/conf.d/30-yetiforce.ini\nRUN curl -f -sS https://getcomposer.org/installer | php\nRUN mv composer.phar /usr/local/bin/composer\nRUN chmod +x /usr/local/bin/composer\nRUN\tchmod -R +x /var/www/html/tests/setup\nRUN\tchmod +x /docker_entrypoint.sh\nRUN\t/var/www/html/tests/setup/dependency.sh\nRUN chown -R www-data:www-data /var/www/\nRUN php /var/www/html/tests/setup/docker_post_install.php\nRUN echo \"PROVIDER=docker\" > /etc/environment\n\nWORKDIR /var/www/html\n\nEXPOSE 80\nEXPOSE 3306\n\nENTRYPOINT [ \"/docker_entrypoint.sh\" ]\n"
}