{
  "startTime": 1674249731349,
  "endTime": 1674249733343,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 213
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 298
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 176
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for the TerraRef hyperspectral image conversion extractor\n# August 17, 2016\nFROM ubuntu:14.04\nMAINTAINER Yan Y. Liu <yanliu@illinois.edu>\n\n# install common libraries and python modules\nUSER root\nRUN apt-get update\nRUN apt-get upgrade -y -q\nRUN apt-get install --no-install-recommends -y -q build-essential m4 swig antlr libantlr-dev udunits-bin libudunits2-dev unzip cmake wget git libjpeg-dev libpng-dev libtiff-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y -q python-dev python-numpy python-pip python-virtualenv && rm -rf /var/lib/apt/lists/*;\n# set up dirs for user installed software\nRUN useradd -m -s /bin/bash ubuntu\nRUN mkdir /srv/downloads && chown -R ubuntu: /srv/downloads && \\\n    mkdir /srv/sw && chown -R ubuntu: /srv/sw\n\nUSER ubuntu\n# set env vars for common libraries and python paths\nENV PYTHONPATH=\"/usr/lib/python2.7/dist-packages:${PYTHONPATH}\"\n\n## install from source\n\n# hdf5\nRUN cd /srv/downloads && \\\n    wget -q https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.17/src/hdf5-1.8.17.tar.gz && \\\n    tar xfz hdf5-1.8.17.tar.gz && \\\n    cd hdf5-1.8.17 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/srv/sw/hdf5-1.8.17 && \\\n    make && make install && rm hdf5-1.8.17.tar.gz\nENV PATH=\"/srv/sw/hdf5-1.8.17/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/hdf5-1.8.17/lib:${LD_LIBRARY_PATH}\"\n\n# netcdf4\nRUN cd /srv/downloads && \\\n    wget -q ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.1.tar.gz && \\\n    tar xfz netcdf-4.4.1.tar.gz && \\\n    cd netcdf-4.4.1 && \\\n    CFLAGS=\"-I/srv/sw/hdf5-1.8.17/include \" LDFLAGS=\" -L/srv/sw/hdf5-1.8.17/lib \" LIBS=\" -lhdf5 -lhdf5_hl \" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/srv/sw/netcdf-4.4.1 --enable-netcdf4 && \\\n    make && make install && rm netcdf-4.4.1.tar.gz\nENV PATH=\"/srv/sw/netcdf-4.4.1/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/netcdf-4.4.1/lib:${LD_LIBRARY_PATH}\"\n\n# geos\nRUN cd /srv/downloads && \\\n    wget -q https://download.osgeo.org/geos/geos-3.5.0.tar.bz2 && \\\n    tar xfj geos-3.5.0.tar.bz2 && \\\n    cd geos-3.5.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/srv/sw/geos --enable-python && \\\n    make && make install && rm geos-3.5.0.tar.bz2\nENV PATH=\"/srv/sw/geos/bin:${PATH}\" \\\n    PYTHONPATH=\"/srv/sw/geos/lib/python2.7/site-packages:${PYTHONPATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/geos/lib:${LD_LIBRARY_PATH}\"\n\n# proj4\nRUN cd /srv/downloads && \\\n    wget -q https://github.com/OSGeo/proj.4/archive/4.9.2.tar.gz -O proj.4-4.9.2.tar.gz && \\\n    tar xfz proj.4-4.9.2.tar.gz && \\\n    cd proj.4-4.9.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/srv/sw/proj4 && \\\n    make && make install && rm proj.4-4.9.2.tar.gz\nENV PATH=\"/srv/sw/proj4/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/proj4/lib:${LD_LIBRARY_PATH}\"\n\n# gdal\nRUN cd /srv/downloads && \\\n    wget -q https://download.osgeo.org/gdal/2.1.1/gdal-2.1.1.tar.gz && \\\n    tar xfz gdal-2.1.1.tar.gz && \\\n    cd gdal-2.1.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-libtiff=internal --with-geotiff=internal --with-png=internal --with-jpeg=internal --with-gif=internal --without-curl --with-python --with-hdf5=/srv/sw/hdf5-1.8.17 --with-netcdf=/srv/sw/netcdf-4.4.1 --with-geos=/srv/sw/geos/bin/geos-config --with-threads --prefix=/srv/sw/gdal && \\\n    make && make install && rm gdal-2.1.1.tar.gz\nENV PATH=\"/srv/sw/gdal/bin:${PATH}\" \\\n    PYTHONPATH=\"/srv/sw/gdal/lib/python2.7/site-packages:${PYTHONPATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/gdal/lib:${LD_LIBRARY_PATH}\"\n\n# nco\nRUN cd /srv/downloads && \\\n    wget -q https://github.com/nco/nco/archive/4.6.1.tar.gz -O nco-4.6.1.tar.gz && \\\n    tar xfz nco-4.6.1.tar.gz && \\\n    cd nco-4.6.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" NETCDF_ROOT=/srv/sw/netcdf-4.4.1 --prefix=/srv/sw/nco-4.6.1 --enable-ncap2 --enable-udunits2 && \\\n    make && make install && rm nco-4.6.1.tar.gz\nENV PATH=\"/srv/sw/nco-4.6.1/bin:${PATH}\" \\\n    LD_LIBRARY_PATH=\"/srv/sw/nco-4.6.1/lib:${LD_LIBRARY_PATH}\"\n\nENV USERHOME=\"/home/ubuntu\"\nWORKDIR \"${USERHOME}\"\n\n## install pyclowder\n# install python modules\nRUN cd ${USERHOME} && \\\n    virtualenv pyenv && \\\n    . pyenv/bin/activate && \\\n    pip install --no-cache-dir pika && \\\n    CC=gcc CXX=g++ USE_SETUPCFG=0 HDF5_INCDIR=/srv/sw/hdf5-1.8.17/include HDF5_LIBDIR=/srv/sw/hdf5-1.8.17/lib NETCDF4_INCDIR=/srv/sw/netcdf-4.4.1/include NETCDF4_LIBDIR=/srv/sw/netcdf-4.4.1/lib pip --no-cache-dir install netCDF4 && \\\n    pip install --no-cache-dir git+https://opensource.ncsa.illinois.edu/stash/scm/cats/pyclowder.git@bugfix/CATS-554-add-pyclowder-support-for-dataset && \\\n    deactivate\n\n## install hyperspectral image converter script\nENV PIPELINEDIR=\"${USERHOME}/computing-pipeline\"\nRUN git clone https://github.com/terraref/computing-pipeline.git \"${PIPELINEDIR}\"\n\n## create workspace directories\nENV INPUTDIR=\"${USERHOME}/input\" \\\n    OUTPUTDIR=\"${USERHOME}/output\"\nRUN mkdir -p \"${INPUTDIR}\" && \\\n    mkdir -p \"${OUTPUTDIR}\" && \\\n    mkdir -p \"${USERHOME}/logs\" \\\n    mkdir -p \"${USERHOME}/test-data\"\n\n## download test input data\nRUN wget -q https://141.142.168.44/nfiedata/yanliu/terraref-hyperspectral-input-sample.tgz && \\\n    tar -xf terraref-hyperspectral-input-sample.tgz -C \"./test-data\" --strip-components 1 && rm terraref-hyperspectral-input-sample.tgz\n\n## install extractor\nENV RABBITMQ_URI=\"\" \\\n    RABBITMQ_EXCHANGE=\"clowder\" \\\n    RABBITMQ_VHOST=\"%2F\" \\\n    RABBITMQ_QUEUE=\"terra.hyperspectral\" \\\n    WORKER_SCRIPT=\"${PIPELINEDIR}/scripts/hyperspectral/terraref.sh\"\nCOPY entrypoint.sh extractor_info.json config.py terra.hyperspectral.py ./\nENTRYPOINT [\"./entrypoint.sh\"]\nCMD [\"python\", \"./terra.hyperspectral.py\"]\n"
}