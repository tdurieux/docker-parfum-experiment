{
  "startTime": 1674250780169,
  "endTime": 1674250781218,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine as build-deps\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN npm install && npm cache clean --force;\nCOPY .env* ./\nCOPY src/ ./src/\nCOPY public/ ./public/\nRUN npm run build\n\nFROM nginx:alpine\nRUN apk add --no-cache jq openssl\n\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nENV PUBLIC_HTML=/var/www/public/\n\nCOPY .docker/nginx /etc/nginx/\nCOPY --from=build-deps /usr/src/app/build ${PUBLIC_HTML}\nEXPOSE 80\n\nCOPY .docker/add-env-vars.sh /docker-entrypoint.d/01-add-env-vars.sh\nRUN chmod +x /docker-entrypoint.d/01-add-env-vars.sh"
}