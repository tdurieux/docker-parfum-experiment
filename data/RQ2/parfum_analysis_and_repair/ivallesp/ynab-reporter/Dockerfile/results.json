{
  "startTime": 1674254496966,
  "endTime": 1674254498224,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "# Debian-based image with Python interpreter\nFROM python:3.6.1-slim\n\n# Install crontab\nRUN apt-get update && apt-get -y --no-install-recommends install cron && rm -rf /var/lib/apt/lists/*;\n\n# Install LaTeX\nRUN apt-get -y --no-install-recommends install texlive-full && rm -rf /var/lib/apt/lists/*;\n\n# Install and configure package manager\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir 'poetry==1.1.6'\nRUN poetry config virtualenvs.in-project true\n\n# Activate Poetry's virtual environment\nENV VIRTUAL_ENV=/app/.venv\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# Project root directory inside container\nWORKDIR /app\n\n# Suppress caching of compiled Python code\nENV PYTHONDONTWRITEBYTECODE=1\n\n# Copy manifest and lock file into container\nCOPY pyproject.toml poetry.lock ./\n\n# Install runtime dependencies only\nRUN poetry install --no-dev\n\n# Copy all sources into container\nCOPY src src\n\n# Copy main.py file into container\nCOPY main.py main.py\n\n# Copy logging configuration into container\nCOPY logging.ini logging.ini\n\n# Copy configure_crontabs.sh into container\nCOPY configure_crontabs.sh configure_crontabs.sh\n\n# Create logs dir\nRUN mkdir logs\n\n# If the CRONTAB expression is not defined, just run the python command, otherwise\n# just wait for the crontab triggers.\nCMD if [ -z $CRONTAB ]; then python main.py -m `date +\\%-m --date=\"1 month ago\"` -y `date +\\%Y --date=\"1 month ago\"` -e \"$EMAILS\"; else bash configure_crontabs.sh \"$EMAILS\" \"$CRONTAB\"; fi\n"
}