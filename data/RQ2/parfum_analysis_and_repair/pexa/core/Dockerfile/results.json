{
  "startTime": 1674248365140,
  "endTime": 1674248366245,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage for BerkeleyDB\nFROM alpine as berkeleydb\n\nRUN sed -i 's/http\\:\\/\\/dl-cdn.alpinelinux.org/https\\:\\/\\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories\nRUN apk --no-cache add autoconf automake build-base cmake libressl\n\nENV BERKELEYDB_VERSION=db-4.8.30.NC\nENV BERKELEYDB_PREFIX=/opt/${BERKELEYDB_VERSION}\n\nRUN wget https://download.oracle.com/berkeley-db/${BERKELEYDB_VERSION}.tar.gz\nRUN tar -xzf *.tar.gz && rm *.tar.gz\nRUN sed s/__atomic_compare_exchange/__atomic_compare_exchange_db/g -i ${BERKELEYDB_VERSION}/dbinc/atomic.h\nRUN mkdir -p ${BERKELEYDB_PREFIX}\n\nWORKDIR /${BERKELEYDB_VERSION}/build_unix\n\nRUN ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=${BERKELEYDB_PREFIX}\nRUN make -j4\nRUN make install\nRUN rm -rf ${BERKELEYDB_PREFIX}/docs\n\n# Build stage for Pexa Core\nFROM alpine as pexa-core\n\nCOPY --from=berkeleydb /opt /opt\n\nRUN sed -i 's/http\\:\\/\\/dl-cdn.alpinelinux.org/https\\:\\/\\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories\nRUN apk --no-cache add autoconf \\\n  automake \\\n  boost-dev \\\n  build-base \\\n  chrpath \\\n  file \\\n  gnupg \\\n  libevent-dev \\\n  libressl \\\n  libressl-dev \\\n  libtool \\\n  linux-headers \\\n  protobuf-dev \\\n  zeromq-dev \\\n  cmake\n\nRUN set -ex \\\n  && for key in \\\n    90C8019E36C2E964; \\\n  do \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver pgp.mit.edu --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$key\" || \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n    gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\"; \\\n  done\n\nENV PEXA_VERSION=1.7.0\nENV PEXA_PREFIX=/opt/pexa-${PEXA_VERSION}\n\nCOPY . /pexa-${PEXA_VERSION}\n\nWORKDIR /pexa-${PEXA_VERSION}\n\nRUN sed -i '/AC_PREREQ/a\\AR_FLAGS=cr' src/univalue/configure.ac\nRUN sed -i '/AX_PROG_CC_FOR_BUILD/a\\AR_FLAGS=cr' src/secp256k1/configure.ac\nRUN sed -i s:sys/fcntl.h:fcntl.h: src/compat.h\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" LDFLAGS=-L`ls -d /opt/db*`/lib/ CPPFLAGS=-I`ls -d /opt/db*`/include/ \\\n    --prefix=${PEXA_PREFIX} \\\n    --mandir=/usr/share/man \\\n    --disable-tests \\\n    --disable-bench \\\n    --disable-ccache \\\n    --with-gui=no \\\n    --with-utils \\\n    --with-libs \\\n    --with-daemon\nRUN make -j4\nRUN make install\nRUN strip ${PEXA_PREFIX}/bin/pexa-cli\nRUN strip ${PEXA_PREFIX}/bin/pexad\nRUN strip ${PEXA_PREFIX}/lib/libpexaconsensus.a\nRUN strip ${PEXA_PREFIX}/lib/libpexaconsensus.so.0.0.0\n\n# Build stage for compiled artifacts\nFROM alpine\n\nLABEL maintainer.0=\"Ryan Hein (@ryanmhein)\"\n\nRUN sed -i 's/http\\:\\/\\/dl-cdn.alpinelinux.org/https\\:\\/\\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories\nRUN apk --no-cache add \\\n  boost \\\n  boost-program_options \\\n  libevent \\\n  libressl \\\n  libzmq \\\n  su-exec \\\n  curl\n\nENV DATA_DIR=/home/pexa/.pexa\nENV PEXA_VERSION=1.7.0\nENV PEXA_PREFIX=/opt/pexa-${PEXA_VERSION}\nENV PATH=${PEXA_PREFIX}/bin:$PATH\nENV DOCKERIZE_VERSION v0.6.1\n\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nCOPY ./.docker/config /tmp\nCOPY --from=pexa-core /opt /opt\nCOPY docker-entrypoint.sh /entrypoint.sh\n\nRUN mkdir -p ${DATA_DIR}\nRUN set -x \\\n    && addgroup -g 1001 -S pexa \\\n    && adduser -u 1001 -D -S -G pexa pexa\nRUN chown -R 1001:1001 ${DATA_DIR}\nUSER pexa\nWORKDIR $DATA_DIR\n\nEXPOSE 8235 8769 18235 2300\n\nENTRYPOINT [\"/entrypoint.sh\"]`\n\nCMD [\"pexad\"]"
}