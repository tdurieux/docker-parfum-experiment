{
  "startTime": 1674247972584,
  "endTime": 1674247973537,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 157
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Coinbase, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Build bitcoind\nFROM ubuntu:20.04 as bitcoind-builder\n\nRUN mkdir -p /app \\\n  && chown -R nobody:nogroup /app\nWORKDIR /app\n\n# Source: https://github.com/bitcoin/bitcoin/blob/master/doc/build-unix.md#ubuntu--debian\nARG DEBIAN_FRONTEND=noninteractive\nENV TZ Etc/UTC\nRUN apt-get update && apt-get install --no-install-recommends -y make gcc g++ autoconf autotools-dev bsdmainutils build-essential git libboost-all-dev \\\n  libcurl4-openssl-dev libdb++-dev libevent-dev libssl-dev libtool pkg-config python python3-pip libzmq3-dev wget && rm -rf /var/lib/apt/lists/*;\n\n# VERSION: Bitcoin Core 0.20.1\nRUN git clone https://github.com/bitcoin/bitcoin \\\n  && cd bitcoin \\\n  && git checkout 7ff64311bee570874c4f0dfa18f518552188df08\n\nRUN cd bitcoin \\\n  && ./autogen.sh \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-tests --without-miniupnpc --without-gui --with-incompatible-bdb --disable-hardening --disable-zmq --disable-bench --disable-wallet \\\n  && make\n\nRUN mv bitcoin/src/bitcoind /app/bitcoind \\\n  && rm -rf bitcoin\n\n# Build Rosetta Server Components\nFROM ubuntu:20.04 as rosetta-builder\n\nRUN mkdir -p /app \\\n  && chown -R nobody:nogroup /app\nWORKDIR /app\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl make gcc g++ && rm -rf /var/lib/apt/lists/*;\n# Install Golang 1.17.5.\nENV GOLANG_VERSION 1.17.5\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 bd78114b0d441b029c8fe0341f4910370925a4d270a6a590668840675b0c653e\n\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n  && echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n  && tar -C /usr/local -xzf golang.tar.gz \\\n  && rm golang.tar.gz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\n# Use native remote build context to build in any directory\nCOPY . src\nRUN cd src \\\n  && go build \\\n  && cd .. \\\n  && mv src/rosetta-bitcoin /app/rosetta-bitcoin \\\n  && mv src/assets/* /app \\\n  && rm -rf src\n\n## Build Final Image\nFROM ubuntu:20.04\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y libevent-dev libboost-system-dev libboost-filesystem-dev libboost-test-dev libboost-thread-dev && \\\n  apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN mkdir -p /app \\\n  && chown -R nobody:nogroup /app \\\n  && mkdir -p /data \\\n  && chown -R nobody:nogroup /data\n\nWORKDIR /app\n\n# Copy binary from bitcoind-builder\nCOPY --from=bitcoind-builder /app/bitcoind /app/bitcoind\n\n# Copy binary from rosetta-builder\nCOPY --from=rosetta-builder /app/* /app/\n\n# Set permissions for everything added to /app\nRUN chmod -R 755 /app/*\n\nCMD [\"/app/rosetta-bitcoin\"]\n"
}