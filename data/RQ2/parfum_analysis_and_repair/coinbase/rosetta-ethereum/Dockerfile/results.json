{
  "startTime": 1674251062822,
  "endTime": 1674251063787,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Coinbase, Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Compile golang\nFROM ubuntu:20.04 as golang-builder\n\nRUN mkdir -p /app \\\n  && chown -R nobody:nogroup /app\nWORKDIR /app\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl make gcc g++ git && rm -rf /var/lib/apt/lists/*;\nENV GOLANG_VERSION 1.16.8\nENV GOLANG_DOWNLOAD_SHA256 f32501aeb8b7b723bc7215f6c373abb6981bbc7e1c7b44e9f07317e1a300dce2\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\n\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n  && echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n  && tar -C /usr/local -xzf golang.tar.gz \\\n  && rm golang.tar.gz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\n# Compile geth\nFROM golang-builder as geth-builder\n\n# VERSION: go-ethereum v.1.10.16\nRUN git clone https://github.com/ethereum/go-ethereum \\\n  && cd go-ethereum \\\n  && git checkout 20356e57b119b4e70ce47665a71964434e15200d\n\nRUN cd go-ethereum \\\n  && make geth\n\nRUN mv go-ethereum/build/bin/geth /app/geth \\\n  && rm -rf go-ethereum\n\n# Compile rosetta-ethereum\nFROM golang-builder as rosetta-builder\n\n# Use native remote build context to build in any directory\nCOPY . src\nRUN cd src \\\n  && go build\n\nRUN mv src/rosetta-ethereum /app/rosetta-ethereum \\\n  && mkdir /app/ethereum \\\n  && mv src/ethereum/call_tracer.js /app/ethereum/call_tracer.js \\\n  && mv src/ethereum/geth.toml /app/ethereum/geth.toml \\\n  && rm -rf src\n\n## Build Final Image\nFROM ubuntu:20.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates && update-ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /app \\\n  && chown -R nobody:nogroup /app \\\n  && mkdir -p /data \\\n  && chown -R nobody:nogroup /data\n\nWORKDIR /app\n\n# Copy binary from geth-builder\nCOPY --from=geth-builder /app/geth /app/geth\n\n# Copy binary from rosetta-builder\nCOPY --from=rosetta-builder /app/ethereum /app/ethereum\nCOPY --from=rosetta-builder /app/rosetta-ethereum /app/rosetta-ethereum\n\n# Set permissions for everything added to /app\nRUN chmod -R 755 /app/*\n\nCMD [\"/app/rosetta-ethereum\", \"run\"]\n"
}