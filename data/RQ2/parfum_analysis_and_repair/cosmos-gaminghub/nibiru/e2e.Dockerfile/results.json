{
  "startTime": 1674255909312,
  "endTime": 1674255909926,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMG_TAG=latest\n\n# Compile the nibirud binary\nFROM golang:1.17-alpine AS nibirud-builder\nARG arch=x86_64\n\n# this comes from standard alpine nightly file\n#  https://github.com/rust-lang/docker-rust-nightly/blob/master/alpine3.12/Dockerfile\n# with some changes to support our toolchain, etc\nRUN set -eux; apk add --no-cache ca-certificates build-base;\n\n# NOTE: add these to run with LEDGER_ENABLED=true\nRUN apk add --no-cache libusb-dev linux-headers\n\n# See https://github.com/CosmWasm/wasmvm/releases\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.0.0/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.0.0/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a\nRUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 7d2239e9f25e96d0d4daba982ce92367aacf0cbd95d2facb8442268f2b1cc1fc\nRUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep f6282df732a13dec836cda1f399dd874b1e3163504dbd9607c6af915b2740479\n\n# Copy the library you want to the final location that will be found by the linker flag `-lwasmvm_muslc`\nRUN cp /lib/libwasmvm_muslc.${arch}.a /lib/libwasmvm_muslc.a\n\nWORKDIR /src/app/\nCOPY go.mod go.sum* ./\nRUN go mod download\nCOPY . .\nENV PACKAGES curl make git libc-dev bash gcc linux-headers eudev-dev python3\nRUN apk add --no-cache $PACKAGES\n# force it to use static lib (from above) not standard libgo_cosmwasm.so file\nRUN BUILD_TAGS=muslc LINK_STATICALLY=true make install\n\n# Add to a distroless container\nFROM gcr.io/distroless/cc:$IMG_TAG\nARG IMG_TAG\nCOPY --from=nibirud-builder /go/bin/nibirud /usr/local/bin/\nEXPOSE 26656 26657 1317 9090\n\nENTRYPOINT [\"nibirud\", \"start\"]\n"
}