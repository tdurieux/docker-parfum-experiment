{
  "startTime": 1674248227405,
  "endTime": 1674248228556,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 8,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 8,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:rolling\n\nARG DEBIAN_FRONTEND=noninteractive\n\nSHELL [\"/bin/bash\", \"-euxo\", \"pipefail\", \"-c\"]\n\nRUN apt-get update; \\\n    apt-get full-upgrade -y; \\\n    apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        git \\\n        gnupg \\\n        locales \\\n        lsb-release \\\n        openssl \\\n        python3 \\\n        python3-apt \\\n        python3-dev \\\n        python3-pip \\\n        python3-setuptools \\\n        tar \\\n        xz-utils \\\n    ;\\\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Run this container as current host user:\nARG USER_ID\nARG GROUP_ID\nRUN groupadd -g \"${GROUP_ID}\" docker; \\\n    useradd -l -u \"${USER_ID}\" -g docker docker; \\\n    install -d -m 0750 -o docker -g docker /home/docker; \\\n    chown \"${USER_ID}\":\"${GROUP_ID}\" -R /home/docker\n\nWORKDIR /tmp/\n\n# nodejs LTS and latest NPM:\nRUN curl -fsSL https://raw.githubusercontent.com/tj/n/master/bin/n \\\n    -o /usr/local/bin/n; \\\n    chmod 0755 /usr/local/bin/n; \\\n    n lts; \\\n    npm install -g npm@latest && npm cache clean --force;\n\n# shellcheck:\nARG SHELLCHECK_VERSION=0.8.0\nRUN curl -OfsSL \\\n    \"https://github.com/koalaman/shellcheck/releases/download/v${SHELLCHECK_VERSION}/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\"; \\\ntar -xf \"shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\"; \\\nmv \"shellcheck-v${SHELLCHECK_VERSION}/shellcheck\" /usr/local/bin/; \\\nrm -r \\\n    \"shellcheck-v${SHELLCHECK_VERSION}/\" \\\n    \"shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\"\n\n# hadolint:\nARG HADOLINT_VERSION=2.10.0\nRUN curl -fsSL \\\n        \"https://github.com/hadolint/hadolint/releases/download/v${HADOLINT_VERSION}/hadolint-Linux-x86_64\" \\\n        -o /usr/local/bin/hadolint; \\\n    chmod +x /usr/local/bin/hadolint\n\n# Docker:\nRUN curl -fsSL \\\n        https://download.docker.com/linux/ubuntu/gpg | \\\n        gpg --batch --dearmor > /usr/share/keyrings/docker.gpg; \\\n    echo \\\n        \"deb \\\n        [arch=amd64 signed-by=/usr/share/keyrings/docker.gpg] \\\n        https://download.docker.com/linux/ubuntu \\\n        $(lsb_release -cs) \\\n        stable\" > /etc/apt/sources.list.d/docker.list; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        docker-ce \\\n        docker-ce-cli \\\n        containerd.io \\\n    ; \\\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/*\n\n# editorconfig-checker (ec):\nENV EC_VERSION 2.5.0\nRUN curl -OfsSL \\\n        \"https://github.com/editorconfig-checker/editorconfig-checker/releases/download/${EC_VERSION}/ec-linux-amd64.tar.gz\"; \\\n    tar -xzf ec-linux-amd64.tar.gz; \\\n    mv bin/ec-linux-amd64 /usr/local/bin/ec; \\\n    rm -r \\\n        ec-linux-amd64.tar.gz \\\n        bin/\n\n# Trivy:\nRUN curl -fsSL \\\n        https://aquasecurity.github.io/trivy-repo/deb/public.key | \\\n        gpg --batch --dearmor > /usr/share/keyrings/trivy.gpg; \\\n    echo \\\n        \"deb \\\n        [signed-by=/usr/share/keyrings/trivy.gpg] \\\n        https://aquasecurity.github.io/trivy-repo/deb bionic main\" \\\n        > /etc/apt/sources.list.d/trivy.list; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        trivy \\\n    ; \\\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Upgrade pip:\nRUN pip3 install --upgrade --no-cache-dir \\\n        pip \\\n        setuptools \\\n        wheel \\\n    ; \\\n    apt-get remove -y \\\n        python3-pip \\\n        python3-setuptools \\\n        python3-wheel \\\n    ; \\\n    apt-get autoremove -y\n\nUSER docker\n\nENV PATH=\"/home/docker/.local/bin:${PATH}\"\n\n# pip (common):\nCOPY requirements.txt /tmp/\nRUN pip3 install --upgrade --no-cache-dir --requirement /tmp/requirements.txt\n\nWORKDIR /docker\n\nCMD [\"bash\"]\n"
}