{
  "startTime": 1674254218287,
  "endTime": 1674254219250,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# use centos as build imagea, for rpm-build support\nFROM centos:7 AS build\n\n# set up an environment wih pip (required to get pyinstaller), and make directories used later\nRUN yum update -y \\\n  && yum install -y gcc python-devel \\\n  && yum install -y epel-release \\\n  && yum install -y python-pip rpm-build \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && pip install --no-cache-dir pyinstaller==3.5 \\\n  && mkdir -p \\\n    /root/build-root \\\n    /root/cbc-syslog \\\n    /root/rpmbuild/SOURCES && rm -rf /var/cache/yum\n\n# rest of our build-commands will happen here\nWORKDIR /root/cbc-syslog\n\n# copy source into the build image\nCOPY . .\n\n# set up environment, build binary (via rpm-build), extract it\nRUN pip install --no-cache-dir --upgrade pip setuptools \\\n  && pip install --no-cache-dir -r requirements.txt \\\n  && python setup.py -v bdist_rpm \\\n  && cd /root/build-root \\\n  && rpm2cpio /root/cbc-syslog/dist/cbc_syslog-*.noarch.rpm | cpio -id\n\n# set up a python runtime environment for final image\nFROM python:2.7-slim AS base\n\n# rpm installs this but it's empty so have to manually make it\nRUN mkdir -p /usr/share/cb/integrations/cbc-syslog/store\n\nCOPY docker/docker-entrypoint.sh /\n\nCOPY --from=build /root/build-root /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/usr/share/cb/integrations/cbc-syslog/cbc-syslog\", \"--config-file\", \"/etc/cb/integrations/cbc-syslog/cbc-syslog.conf\", \"--log-file\", \"/dev/stdout\"]\n"
}