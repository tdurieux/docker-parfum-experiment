{
  "startTime": 1674250475955,
  "endTime": 1674250476866,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG JOBS=1\nARG ACTION=ci\n\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Europe/Moscow\nENV CC=clang-10\nENV CXX=clang++-10\nENV opt_dir=/opt/ILLIXR\nENV prefix_dir=/usr/local\nENV illixr_nproc=${JOBS}\nENV build_type=Release\n\nENV src_dir_conda=${opt_dir}/miniconda3\nENV env_config_path=runner/environment.yml\nENV runner_action=configs/${ACTION}.yaml\n\nRUN mkdir -p ${opt_dir}\n\nRUN ln -snf /usr/share/zoneinfo/${TZ} /etc/localtime && echo ${TZ} > /etc/timezone\nRUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./deps.sh ${HOME}/deps.sh\nCOPY ./scripts/default_values.sh ${HOME}/scripts/default_values.sh\nCOPY ./scripts/system_utils.sh ${HOME}/scripts/system_utils.sh\n\nCOPY ./scripts/install_apt_deps.sh ${HOME}/scripts/install_apt_deps.sh\nRUN ./scripts/install_apt_deps.sh\nRUN apt-get autoremove -y # Save space by cleaning up\n\n## Locally built clang not in use yet\n#COPY ./scripts/install_clang.sh ${HOME}/scripts/install_clang.sh\n#RUN ./scripts/install_clang.sh\n\n## Make clang symlinks in the prefix dir\nRUN ln -s $(which ${CC}) ${prefix_dir}/bin/clang\nRUN ln -s $(which ${CXX}) ${prefix_dir}/bin/clang++\n\n## Locally built boost not in use yet\n#COPY ./scripts/install_boost.sh ${HOME}/scripts/install_boost.sh\n#RUN ./scripts/install_boost.sh\n\nCOPY ./scripts/install_opencv.sh ${HOME}/scripts/install_opencv.sh\nRUN ./scripts/install_opencv.sh\n\n## Locally built eigen not in use yet\n#COPY ./scripts/install_eigen.sh ${HOME}/scripts/install_eigen.sh\n#RUN ./scripts/install_eigen.sh\n\nCOPY ./scripts/install_vulkan_headers.sh ${HOME}/scripts/install_vulkan_headers.sh\nRUN ./scripts/install_vulkan_headers.sh\n\nCOPY ./scripts/install_gtest.sh ${HOME}/scripts/install_gtest.sh\nRUN ./scripts/install_gtest.sh\n\nCOPY ./scripts/install_openxr.sh ${HOME}/scripts/install_openxr.sh\nRUN ./scripts/install_openxr.sh\n\nCOPY ./scripts/install_gtsam.sh ${HOME}/scripts/install_gtsam.sh\nRUN ./scripts/install_gtsam.sh\n\nCOPY ./scripts/install_opengv.sh ${HOME}/scripts/install_opengv.sh\nRUN ./scripts/install_opengv.sh\n\nCOPY ./scripts/install_dbow2.sh ${HOME}/scripts/install_dbow2.sh\nRUN ./scripts/install_dbow2.sh\n\nCOPY ./scripts/install_kimera_rpgo.sh ${HOME}/scripts/install_kimera_rpgo.sh\nRUN ./scripts/install_kimera_rpgo.sh\n\nCOPY ./scripts/install_conda.sh ${HOME}/scripts/install_conda.sh\nRUN ./scripts/install_conda.sh\n\nRUN ldconfig\n\nCOPY . ${HOME}/ILLIXR/\nWORKDIR ILLIXR\nRUN ${src_dir_conda}/bin/conda env create --force -f ${env_config_path}\n\nENTRYPOINT ./runner.sh ${runner_action}\n"
}