{
  "startTime": 1674255129948,
  "endTime": 1674255130938,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG node_tag=16-bullseye-slim\n\n\nFROM docker.io/library/node:${node_tag} AS dependencies\n\nENV NODE_ENV=production\n\nWORKDIR /app\nCOPY ui/package.json ui/package-lock.json ./\nRUN npm clean-install \\\n\t&& rm -rf ~/.npm ~/.cache\n\n\nFROM dependencies AS development-dependencies\n\nENV NODE_ENV=development\n\nRUN npm install \\\n\t&& rm -rf ~/.npm ~/.cache && npm cache clean --force;\n\n\nFROM development-dependencies AS build\n\n# Re-enable production build. Without this, builds will attempt to import `react-is`.\n# TODO: Understand the root cause of this bug\nENV NODE_ENV=production\n\nCOPY ui/ ./\nRUN npm run build\n\n\nFROM dependencies AS production\n\nCOPY --from=build /app/.next/ ./.next/\nCOPY --from=build /app/next.config.js ./\n\nENTRYPOINT [\"npm\", \"start\", \"--\"]\n"
}