{
  "startTime": 1674215229424,
  "endTime": 1674215231573,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 112
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 2,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 13,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 26,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 26,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 26,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 26,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 26,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 26,
        "columnEnd": 99
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 7,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 18,
        "columnStart": 26,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 26,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 26,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 26,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 26,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch\n\nENV BUILD_DIR /build\nRUN mkdir ${BUILD_DIR}\n\nRUN apt-get update -qq && apt-get install -y --no-install-recommends -qq git checkinstall \\\n\n  automake autoconf libtool make gcc libc-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/stefanberger/libtpms.git\nRUN cd libtpms && ./autogen.sh --prefix=/usr/local --with-openssl --with-tpm2 && make -j4 && \\\n  # Install libtpms to BUILD_DIR and the real user directory (for swtpm build)\n  checkinstall --fstrans=no --pkgname=libtpms -y && cp libtpms*.deb ${BUILD_DIR}\n\nRUN apt-get update -qq && apt-get install -y --no-install-recommends -qq gawk libseccomp-dev \\\n\n  automake autoconf bash coreutils expect libtool sed fuse libfuse-dev glib2.0 glib2.0-dev \\\n\n  net-tools python3 python3-twisted trousers tpm-tools gnutls-bin gnutls-dev \\\n  libtasn1-6 libtasn1-6-dev build-essential devscripts equivs socat && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/stefanberger/swtpm.git && cd swtpm && git checkout stable-0.3.0 && \\\n  ./autogen.sh && make -j4 && checkinstall --fstrans=no --pkgname=swtpm -y && cp swtpm*.deb ${BUILD_DIR}\n\n# tpm2d dependencies\nRUN apt-get update -qq && apt-get install -y --no-install-recommends -qq protobuf-c-compiler libprotobuf-c-dev re2c check && rm -rf /var/lib/apt/lists/*;\n# install libtss and copy/symlink so files\nRUN git clone https://git.code.sf.net/p/ibmtpm20tss/tss ibmtpm20tss-tss && cd ibmtpm20tss-tss && \\\n  git checkout v1331 && cd utils && make && cp libibmtss*.so /usr/local/lib && ldconfig && \\\n  # make ibmtss headers available\n  cp -r /ibmtpm20tss-tss/utils/ibmtss /usr/include && \\\n  # Copy so files/symlinks to BUILD_DIR\n  mkdir -p ${BUILD_DIR}/local/lib && cp libibmtss*.so ${BUILD_DIR}/local/lib\n# install protobuf-c-text\nRUN git clone https://github.com/trustm3/external_protobuf-c-text.git && cd external_protobuf-c-text && \\\n  git checkout master && autoreconf -f -i && \\\n  CFLAGS=\"-pedantic -Wall -Wextra -Werror -O2 -DHAVE_PROTOBUF_C_MESSAGE_CHECK\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${BUILD_DIR} && \\\n  make -j4 && \\\n  # Install protobuf-c-text to BUILD_DIR and the real user directory (for tpm2d build)\n  make install && make prefix=/usr install\n# make tpm2d & scd\nRUN git clone https://github.com/trustm3/device_fraunhofer_common_cml && cd device_fraunhofer_common_cml/tpm2d && \\\n  git checkout v0.1.1 && ln -s /ibmtss1331/utils/ibmtss && ln -s /protobuf-c-text/protobuf-c-text && \\\n  mkdir ${BUILD_DIR}/bin && make && cp tpm2d ${BUILD_DIR}/bin/ && cd ../scd && make && cp scd ${BUILD_DIR}/bin/\n\n# openssl_tpm2_engine dependencies\nRUN apt-get update -qq && apt-get install -y --no-install-recommends -qq help2man && rm -rf /var/lib/apt/lists/*;\n# install openssl-tpm2-engine (scd dependency)\nRUN git clone https://kernel.googlesource.com/pub/scm/linux/kernel/git/jejb/openssl_tpm2_engine && \\\n  cd openssl_tpm2_engine && git checkout v2.3.0 && bash bootstrap.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-enginesdir=\"${BUILD_DIR}/lib/$(arch)-linux-gnu/engines-1.1\" && \\\n  make -j4 && checkinstall --fstrans=no --pkgname=openssl-tpm2-engine -y && cp openssl-tpm2-engine*.deb ${BUILD_DIR}\n\n\nFROM debian:stretch-slim\n\nRUN apt-get update -qq && apt-get install -y --no-install-recommends -qq bash fuse libglib2.0 libseccomp-dev libprotobuf-c-dev && rm -rf /var/lib/apt/lists/*;\nCOPY --from=0 /build /usr/\nRUN dpkg -i /usr/*.deb && rm /usr/*.deb && ldconfig\n\n# TCP port for tpm2d communication\nEXPOSE 9505\n\nCOPY run.sh .\nRUN chmod +x run.sh\n\nCMD [\"/run.sh\"]"
}