{
  "startTime": 1674255815812,
  "endTime": 1674255816433,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First stage to build assets\nARG DISTRO=alpine:3.14.5\nARG ARCH=\"\"\n\nFROM ${ARCH}node:16 as assets\n\nCOPY package.json ./\nRUN set -eu \\\n && npm config set update-notifier false \\\n && npm install --no-fund && npm cache clean --force;\n\nCOPY webpack.config.js ./\nCOPY assets ./assets\nRUN set -eu \\\n && sed -i 's/#007bff/#55a5d9/' node_modules/admin-lte/build/scss/_bootstrap-variables.scss \\\n && for l in ca da de:de-DE en:en-GB es:es-ES eu fr:fr-FR he hu is it:it-IT ja nb_NO:no-NB nl:nl-NL pl pt:pt-PT ru sv:sv-SE zh; do \\\n      cp node_modules/datatables.net-plugins/i18n/${l#*:}.json assets/${l%:*}.json; \\\n    done \\\n && node_modules/.bin/webpack-cli --color\n\n\n# Actual application\nFROM $DISTRO\nARG VERSION\nCOPY --from=balenalib/rpi-alpine:3.14 /usr/bin/qemu-arm-static /usr/bin/qemu-arm-static\n\nENV TZ Etc/UTC\n\nLABEL version=$VERSION\n\n# python3 shared with most images\nRUN set -eu \\\n && apk add --no-cache python3 py3-pip py3-wheel git bash tzdata \\\n && pip3 install --no-cache-dir --upgrade pip\n\nRUN mkdir -p /app\nWORKDIR /app\n\nCOPY requirements-prod.txt requirements.txt\nRUN set -eu \\\n && apk add --no-cache libressl curl postgresql-libs mariadb-connector-c \\\n && apk add --no-cache --virtual build-dep libressl-dev libffi-dev python3-dev build-base postgresql-dev mariadb-connector-c-dev cargo \\\n && pip install --no-cache-dir --upgrade pip \\\n && pip install --no-cache-dir -r requirements.txt \\\n && apk del --no-cache build-dep\n\nCOPY --from=assets static ./mailu/static\nCOPY mailu ./mailu\nCOPY migrations ./migrations\nCOPY start.py /start.py\nCOPY audit.py /audit.py\n\nRUN pybabel compile -d mailu/translations\n\nEXPOSE 80/tcp\nVOLUME [\"/data\",\"/dkim\"]\nENV FLASK_APP mailu\n\nCMD /start.py\n\nHEALTHCHECK CMD curl -f -L http://localhost/sso/login?next=ui.index || exit 1\nRUN echo $VERSION >> /version\n"
}