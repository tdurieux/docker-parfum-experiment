{
  "startTime": 1674248541270,
  "endTime": 1674248542224,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 24,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\n\nARG MINICONDA_VERSION=4.7.12.1\nARG TINI_VERSION=v0.16.1\n\n# for pypi caching proxy\nARG PIP_INDEX_URL\nARG PIP_TRUSTED_HOST\n\n# Install miniconda, reference: https://hub.docker.com/r/continuumio/miniconda3/dockerfile\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\n\n# we need non-free for xml2rfc\nRUN sed -i \"s/buster main/buster main non-free/\" /etc/apt/sources.list \\\n && apt-get update --fix-missing \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      ca-certificates \\\n      curl \\\n      automake \\\n      build-essential \\\n      desktop-file-utils \\\n      git \\\n      libglib2.0-dev \\\n      libtool \\\n      xml2rfc \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN curl -fLs -o /miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh \\\n && /bin/bash /miniconda.sh -b -p /opt/conda \\\n && rm /miniconda.sh \\\n && /opt/conda/bin/conda clean -tipsy \\\n && ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh \\\n && echo \". /etc/profile.d/conda.sh\" >> ~/.bashrc \\\n && echo \"conda activate base\" >> ~/.bashrc\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Add Tini\nRUN curl -fLs -o /tini https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n && chmod +x /tini\nENTRYPOINT [\"/tini\", \"-g\", \"--\"]\nCMD [\"/bin/bash\"]\n\nADD opendiamond-HEAD.tar.gz /usr/src/opendiamond\n\nRUN cd /usr/src/opendiamond \\\n && autoreconf -f -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && make clean \\\n && conda install --freeze-installed -c conda-forge m2crypto \\\n && pip install --no-cache-dir . \\\n && rm -rf build dist *.egg-info \\\n && conda clean --all -y\n"
}