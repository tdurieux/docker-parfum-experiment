{
  "startTime": 1674249242793,
  "endTime": 1674249244198,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 106,
        "columnStart": 25,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "##############################################################################\n#\n#    HPCC SYSTEMS software Copyright (C) 2020 HPCC SystemsÂ®.\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\");\n#    you may not use this file except in compliance with the License.\n#    You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#    limitations under the License.\n##############################################################################\n\n# Create base container image to be used by all HPCC processes\n# MORE - some of these dependencies are probably not needed by all derived containers - perhaps we should move them\n# Others may not be wanted at all in container mode - tensoflow and nvidia  example??\n\nARG BUILD_LABEL\nARG DOCKER_REPO\nFROM ${DOCKER_REPO}/platform-core:${BUILD_LABEL}\nUSER root\n\n\n# nvidia/cuda base\nRUN apt-get update && apt-get install -y --no-install-recommends  wget gnupg2 ca-certificates && \\\n    apt-key del 7fa2af80 && \\\n    apt-key del 3bf863cc && \\\n    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub && \\\n    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub && \\\n    echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/cuda.list && \\\n    echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu2004/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV CUDA_VERSION 11.3.1\nENV CUDA_PKG_VERSION 11-3=${CUDA_VERSION}09-1\n\n# For libraries in the cuda-compat-* package: https://docs.nvidia.com/cuda/eula/index.html#attachment-a\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-cudart-$CUDA_PKG_VERSION \\\n        cuda-compat-11-3 && \\\n    ln -s cuda-11.3 /usr/local/cuda && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Required for nvidia-docker v1\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf && \\\n    echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\n\nENV PATH=/usr/local/nvidia/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${PATH}\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n\nRUN wget https://gitlab.com/nvidia/container-images/cuda/-/raw/master/LICENSE?inline=false -O /NGC-DL-CONTAINER_LICENSE  #buildkit\nENV NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES=compute,utility\nENV NVIDIA_REQUIRE_CUDA=cuda>=11.3 brand=tesla,driver>=418,driver<419 brand=tesla,driver>=440,driver<441 driver>=450\n\nRUN apt clean && \\\n    apt autoclean && \\\n    apt install -y -f && \\\n    apt autoremove && \\\n    apt-get update\n\nRUN apt-get install --no-install-recommends -y python3-pip --fix-missing && rm -rf /var/lib/apt/lists/*;\nRUN python3 -m pip --no-cache-dir install --upgrade \"pip<20.3\" \\\n    setuptools\n# Some TF tools expect a \"python\" binary\nRUN ln -s $(which python3) /usr/local/bin/python\n\nRUN pip3 install --no-cache-dir \\\n    scikit-learn \\\n    statsmodels \\\n    networkx\n\n# TensorFlow with GPU support\n# Reference: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/dockerfiles/dockerfiles/gpu.Dockerfile\n\nARG ARCH\nARG CUDA=11.3\nARG CUDNN=8.2.1.32-1\nARG CUDNN_MAJOR_VERSION=8\nARG LIB_DIR_PREFIX=x86_64\nARG LIBNVINFER=8.0.0-1\nARG LIBNVINFER_MAJOR_VERSION=8\n\n# Needed for string substitution\nSHELL [\"/bin/bash\", \"-c\"]\n# Pick up some TF dependencies\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-${CUDA/./-} \\\n        libcublas-${CUDA/./-} \\\n        cuda-nvrtc-${CUDA/./-} \\\n        libcufft-${CUDA/./-} \\\n        libcurand-${CUDA/./-} \\\n        libcusolver-${CUDA/./-} \\\n        libcusparse-${CUDA/./-} \\\n        curl \\\n        libcudnn8=${CUDNN}+cuda${CUDA} \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        software-properties-common \\\n        unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install TensorRT if not building for PowerPC\n# NOTE: libnvinfer uses cuda11.1 versions\nRUN [[ \"${ARCH}\" = \"ppc64le\" ]] || { apt-get update && \\\n        apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.3 \\\n        libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.3 \\\n        && apt-get clean \\\n        && rm -rf /var/lib/apt/lists/*; }\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH\n\n# Link the libcuda stub to the location where tensorflow is searching for it and reconfigure\n# dynamic linker run-time bindings\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \\\n    && echo \"/usr/local/cuda/lib64/stubs\" > /etc/ld.so.conf.d/z-cuda-stubs.conf \\\n    && ldconfig\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\n\n# Options:\n#   tensorflow\n#   tensorflow-gpu\n#   tf-nightly\n#   tf-nightly-gpu\n# Set --build-arg TF_PACKAGE_VERSION=1.11.0rc0 to install a specific version.\n# Installs the latest version by default.\nARG TF_PACKAGE=tensorflow\nARG TF_PACKAGE_VERSION=2.6.0\nRUN python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}\n\nUSER hpcc\n"
}