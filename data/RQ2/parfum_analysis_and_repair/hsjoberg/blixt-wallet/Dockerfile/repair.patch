diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hsjoberg/blixt-wallet/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hsjoberg/blixt-wallet/Dockerfile/repaired.Dockerfile
index b20fca0..676d300 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hsjoberg/blixt-wallet/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hsjoberg/blixt-wallet/Dockerfile/repaired.Dockerfile
@@ -6,16 +6,16 @@ LABEL maintainer="Hampus Sj√∂berg  <hampus.sjoberg@protonmail.com>"
 ENV LANG C.UTF-8
 
 # Golang
-RUN apt-get update && apt-get install -qq -y curl unzip
-RUN curl -o go.tgz https://dl.google.com/go/go1.15.8.linux-amd64.tar.gz
-RUN tar -C /usr/local -xzf go.tgz
+RUN apt-get update && apt-get install --no-install-recommends -qq -y curl unzip && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -o go.tgz https://dl.google.com/go/go1.15.8.linux-amd64.tar.gz
+RUN tar -C /usr/local -xzf go.tgz && rm go.tgz
 ENV GOPATH /go
 ENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH
 RUN mkdir -p "$GOPATH/src" "$GOPATH/bin" && chmod -R 777 "$GOPATH"
 # WORKDIR $GOPATH
 
 # protoc
-RUN curl -L -o protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v3.4.0/protoc-3.4.0-linux-x86_64.zip && unzip protoc.zip
+RUN curl -f -L -o protoc.zip https://github.com/protocolbuffers/protobuf/releases/download/v3.4.0/protoc-3.4.0-linux-x86_64.zip && unzip protoc.zip
 RUN mv bin/protoc /usr/bin/ && mv include/* /usr/include/
 
 # Java and Node
@@ -57,26 +57,26 @@ RUN mkdir -p /usr/share/man/man1 \
 # install nodejs and yarn packages from nodesource and yarn apt sources
 RUN echo "deb https://deb.nodesource.com/node_${NODE_VERSION} stretch main" > /etc/apt/sources.list.d/nodesource.list \
     && echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list \
-    && curl -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \
-    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
+    && curl -f -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \
+    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
     && apt-get update -qq \
     && apt-get install -qq -y --no-install-recommends nodejs yarn \
     && rm -rf /var/lib/apt/lists/*
 
 # download and unpack NDK
-RUN curl -sS https://dl.google.com/android/repository/android-ndk-r$NDK_VERSION-linux-x86_64.zip -o /tmp/ndk.zip \
+RUN curl -f -sS https://dl.google.com/android/repository/android-ndk-r$NDK_VERSION-linux-x86_64.zip -o /tmp/ndk.zip \
     && mkdir /opt/ndk \
     && unzip -q -d /opt/ndk /tmp/ndk.zip \
     && rm /tmp/ndk.zip
 
 # download and install buck using debian package
-RUN curl -sS -L https://github.com/facebook/buck/releases/download/v${BUCK_VERSION}/buck.${BUCK_VERSION}_all.deb -o /tmp/buck.deb \
+RUN curl -f -sS -L https://github.com/facebook/buck/releases/download/v${BUCK_VERSION}/buck.${BUCK_VERSION}_all.deb -o /tmp/buck.deb \
     && dpkg -i /tmp/buck.deb \
     && rm /tmp/buck.deb
 
 # Full reference at https://dl.google.com/android/repository/repository2-1.xml
 # download and unpack android
-RUN curl -sS https://dl.google.com/android/repository/${SDK_VERSION} -o /tmp/sdk.zip \
+RUN curl -f -sS https://dl.google.com/android/repository/${SDK_VERSION} -o /tmp/sdk.zip \
     && mkdir ${ANDROID_HOME} \
     && unzip -q -d ${ANDROID_HOME} /tmp/sdk.zip \
     && rm /tmp/sdk.zip \