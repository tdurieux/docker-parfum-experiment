{
  "startTime": 1674251924183,
  "endTime": 1674251925178,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###\n# Builder container\n###\nFROM golang:1.18-alpine AS builder\n\nARG tags=none\nARG version=devel\nARG sha=devel\nARG goproxy\nARG npmproxy\n\nENV CGOENABLED=1\n\nENV npm_config_registry=$npmproxy\nENV GOPROXY=$goproxy\n\nRUN go version && \\\n    apk add --update --no-cache gcc musl-dev git curl nodejs npm make gcc g++ && \\\n    mkdir /pufferpanel && \\\n    wget https://github.com/swaggo/swag/releases/download/v1.6.7/swag_1.6.7_Linux_x86_64.tar.gz && \\\n    mkdir -p ~/go/bin && \\\n    tar -zxf swag*.tar.gz -C ~/go/bin && \\\n    rm -rf swag*.tar.gz\n\nWORKDIR /build/pufferpanel\n\nCOPY go.mod go.sum ./\nRUN go mod download && go mod verify\n\nCOPY . .\nRUN ~/go/bin/swag init -o web/swagger -g web/loader.go && \\\n    go build -v -buildvcs=false -tags $tags -ldflags \"-X 'github.com/pufferpanel/pufferpanel/v2.Hash=$sha' -X 'github.com/pufferpanel/pufferpanel/v2.Version=$version'\" -o /pufferpanel/pufferpanel github.com/pufferpanel/pufferpanel/v2/cmd && \\\n    mv assets/email /pufferpanel/email && \\\n    cd client && \\\n    npm install && \\\n    npm run build && \\\n    mv dist /pufferpanel/www/ && npm cache clean --force;\n\n###\n# Generate final image\n###\n\nFROM alpine\nCOPY --from=builder /pufferpanel /pufferpanel\n\nEXPOSE 8080 5657\nRUN mkdir -p /etc/pufferpanel && \\\n    mkdir -p /var/lib/pufferpanel\n\nENV PUFFER_LOGS=/etc/pufferpanel/logs \\\n    PUFFER_PANEL_TOKEN_PUBLIC=/etc/pufferpanel/public.pem \\\n    PUFFER_PANEL_TOKEN_PRIVATE=/etc/pufferpanel/private.pem \\\n    PUFFER_PANEL_DATABASE_DIALECT=sqlite3 \\\n    PUFFER_PANEL_DATABASE_URL=\"file:/etc/pufferpanel/pufferpanel.db?cache=shared\" \\\n    PUFFER_DAEMON_SFTP_KEY=/etc/pufferpanel/sftp.key \\\n    PUFFER_DAEMON_DATA_CACHE=/var/lib/pufferpanel/cache \\\n    PUFFER_DAEMON_DATA_SERVERS=/var/lib/pufferpanel/servers \\\n    PUFFER_DAEMON_DATA_MODULES=/var/lib/pufferpanel/modules \\\n    GIN_MODE=release\n\nWORKDIR /pufferpanel\n\nENTRYPOINT [\"/pufferpanel/pufferpanel\"]\nCMD [\"run\"]\n"
}