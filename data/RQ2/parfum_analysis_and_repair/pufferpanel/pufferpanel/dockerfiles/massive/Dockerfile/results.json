{
  "startTime": 1674254984667,
  "endTime": 1674254985708,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "ARG DOCKER_TAG=base-devel\n\nFROM pufferpanel/pufferpanel:${DOCKER_TAG} AS builder\n\nFROM ubuntu:20.04\n\nCOPY --from=builder /pufferpanel /pufferpanel\nEXPOSE 8080 5657\nRUN mkdir -p /etc/pufferpanel && \\\n    mkdir -p /var/lib/pufferpanel\n\nARG DEBIAN_FRONTEND=noninteractive\nARG APTPROXY\n\n# Because we use Alpine, we need musl to use the binary we generated\nRUN if [ -n \"$APTPROXY\" ] ; then \\\n      echo \"deb $APTPROXY/ubuntu-focal/ focal main restricted universe multiverse\" > /etc/apt/sources.list ; \\\n      echo \"deb $APTPROXY/ubuntu-focal-updates/ focal-updates main restricted universe multiverse\" >> /etc/apt/sources.list ; \\\n      echo \"deb $APTPROXY//ubuntu-focal-backports/ focal-backports main restricted universe multiverse\" >> /etc/apt/sources.list ;\\\n    fi\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git wget curl zip unzip musl && rm -rf /var/lib/apt/lists/*;\n\n# java\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk-headless openjdk-16-jdk-headless openjdk-17-jdk-headless && \\\n    ln -sfn /usr/lib/jvm/java-8-openjdk-amd64/bin/java /usr/bin/java8 && \\\n    ln -sfn /usr/lib/jvm/java-8-openjdk-amd64/bin/javac /usr/bin/javac8 && \\\n    ln -sfn /usr/lib/jvm/java-16-openjdk-amd64/bin/java /usr/bin/java16 && \\\n    ln -sfn /usr/lib/jvm/java-16-openjdk-amd64/bin/javac /usr/bin/javac16 && \\\n    ln -sfn /usr/lib/jvm/java-17-openjdk-amd64/bin/java /usr/bin/java17 && \\\n    ln -sfn /usr/lib/jvm/java-17-openjdk-amd64/bin/javac /usr/bin/javac17 && \\\n    java -version && javac -version && \\\n    java8 -version && javac8 -version && \\\n    java16 -version && javac16 -version && \\\n    java17 -version && javac17 -version && rm -rf /var/lib/apt/lists/*;\n\n# nodejs\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# srcds\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN echo steam steam/question select \"I AGREE\" | debconf-set-selections && \\\n    echo steam steam/license note '' | debconf-set-selections\n\nENV LANG 'en_US.UTF-8'\nENV LANGUAGE 'en_US:en'\n\nRUN dpkg --add-architecture i386 && \\\n     apt-get update -y && \\\n     apt-get install -y --no-install-recommends ca-certificates locales steamcmd && \\\n     locale-gen en_US.UTF-8 && \\\n     ln -s /usr/games/steamcmd /usr/bin/steamcmd && rm -rf /var/lib/apt/lists/*;\n\n# Cleanup\nRUN apt-get clean all && rm -rf /var/lib/apt/lists/*\n\nENV PUFFER_LOGS=/etc/pufferpanel/logs \\\n    PUFFER_PANEL_TOKEN_PUBLIC=/etc/pufferpanel/public.pem \\\n    PUFFER_PANEL_TOKEN_PRIVATE=/etc/pufferpanel/private.pem \\\n    PUFFER_PANEL_DATABASE_DIALECT=sqlite3 \\\n    PUFFER_PANEL_DATABASE_URL=\"file:/etc/pufferpanel/pufferpanel.db?cache=shared\" \\\n    PUFFER_DAEMON_SFTP_KEY=/etc/pufferpanel/sftp.key \\\n    PUFFER_DAEMON_DATA_CACHE=/var/lib/pufferpanel/cache \\\n    PUFFER_DAEMON_DATA_SERVERS=/var/lib/pufferpanel/servers \\\n    PUFFER_DAEMON_DATA_MODULES=/var/lib/pufferpanel/modules\n\nWORKDIR /pufferpanel\n\nENTRYPOINT [\"/pufferpanel/pufferpanel\"]\nCMD [\"run\"]\n"
}