{
  "startTime": 1674250260233,
  "endTime": 1674250260856,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-alpine\n\nWORKDIR /swiftwind\n\n### Setup postgres ###\n\nRUN \\\n    apk add -U \\\n        ca-certificates \\\n        postgresql-dev gcc python3-dev musl-dev && \\\n    update-ca-certificates && \\\n    rm -rf /var/cache/apk/*\n\n### Install Swiftwind dependencies ###\n\nADD [\"requirements.txt\", \"manage.py\", \"setup.py\", \"VERSION\", \"fixtures\", \"/swiftwind/\"]\n\n# Dependencies will change fairly often, so do this\n# separately to the above\nRUN \\\n    apk add -U git && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    apk del --purge git && \\\n    rm -rf /var/cache/apk/*\n\nRUN pip install --no-cache-dir -r requirements.txt\n\n### Add Swiftwind code ###\n\nADD example_project /swiftwind/example_project\nADD swiftwind /swiftwind/swiftwind\n\n### Collect the static files ready to be servced ###\n\nRUN SECRET_KEY=none ./manage.py collectstatic --no-input\n\n### Using gunicorn to serve ###\n\nCMD [\"gunicorn\", \"--bind\", \"0.0.0.0:8000\", \"--workers\", \"4\", \"example_project.wsgi\"]\n\n"
}