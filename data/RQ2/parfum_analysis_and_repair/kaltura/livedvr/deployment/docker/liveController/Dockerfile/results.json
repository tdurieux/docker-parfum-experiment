{
  "startTime": 1674250526232,
  "endTime": 1674250526899,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#docker build -t kaltura/livecontroller:1.26 .\n#docker run -d -v /myconfig/:/myconfig/ -v /var/log/liveController/:/var/log/liveController/ --network=host kaltura/livecontroller:1.26 ubuntudrm\n#docker exec -it\n\nARG NODE_VERSION=11.9.0\nFROM node:$NODE_VERSION AS build\n\n#RUN apk add --update build-base curl nasm tar bzip2 zlib-dev yasm-dev\n\nRUN apt-get update && apt-get install --no-install-recommends -y nasm && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/kaltura/liveController/\nCOPY package*.json ./\nRUN npm install && npm cache clean --force;\n\n\nCOPY ./build_scripts/ ./build_scripts/\nCOPY ./node_addons/ ./node_addons/\nRUN ./build_scripts/build_ffmpeg.sh /tmp/ 3.0\nRUN ./build_scripts/build_addon.sh /opt/kaltura/liveController/ /tmp/ffmpeg-3.0/\n\nCOPY ./ ./\n\nRUN rm -rf ./build\n\nFROM node:$NODE_VERSION-slim\n\n\nWORKDIR /opt/kaltura/liveController/\n\nCOPY --from=build /opt/kaltura/liveController/ ./\n\nVOLUME /var/log/liveController/\n#content folder\nVOLUME /web/content/kLive\n\n\nCOPY ./deployment/docker/initScript.sh .\nCOPY ./deployment/docker/liveController/entryPoint.sh .\n\nENTRYPOINT [\"./entryPoint.sh\"]"
}