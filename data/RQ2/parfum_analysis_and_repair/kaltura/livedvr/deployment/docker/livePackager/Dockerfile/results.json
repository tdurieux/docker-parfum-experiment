{
  "startTime": 1674254349967,
  "endTime": 1674254350709,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim AS builder\n\nARG CONF_FILE=/opt/nginx-vod-module-saas/conf/nginx.conf\n\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y wget git procps zlib1g-dev build-essential libpcre3 libpcre3-dev libssl1.0-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\n\nWORKDIR /opt\n\nCOPY ./deployment/docker/livePackager/deploy.sh .\n\nRUN ./deploy.sh\n\nWORKDIR  /opt/nginx\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-http_secure_link_module \\\n                --add-module=/opt/nginx_mod_akamai_g2o/ \\\n                --add-module=/opt/headers-more-nginx-module/ \\\n                --add-module=/opt/nginx-vod-module/ \\\n                --add-module=/opt/nginx-secure-token-module/ \\\n                --add-module=/opt/nginx_requestid/ \\\n                --with-http_stub_status_module \\\n                --with-file-aio \\\n                --with-threads \\\n                --with-cc-opt=\"-O3 -DDISABLE_PTS_DELAY_COMPENSATION\" \\\n                --conf-path=$CONF_FILE && \\\n    make && \\\n    make install\n\n\nFROM debian:stretch-slim\n\nARG CONF_FOLDER=/opt/nginx-vod-module-saas\n\n#copy build artifacts\nCOPY --from=builder /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.2 /usr/lib/x86_64-linux-gnu/libcrypto.so.1.0.2\nCOPY --from=builder /usr/local/nginx /usr/local/nginx\n\nCOPY ./packager/config/ /opt/nginx-vod-module-saas/conf/\nCOPY ./packager/www /opt/nginx-vod-module-saas/static/\n\n#log folder\nVOLUME /var/log/nginx\n\n#content folder\nVOLUME /web/content/kLive\n\n#conf folder\nVOLUME /usr/local/nginx/externalConf\n\n\nENV PACKAGER_PORT 80\nENV LIVE_ENCRYPT_HLS_KEY 1234\n\nEXPOSE $PACKAGER_PORT\n\nSTOPSIGNAL SIGTERM\n\nWORKDIR /usr/local/nginx\n\nCOPY ./deployment/docker/initScript.sh .\nCOPY ./deployment/docker/livePackager/entryPoint.sh   .\n\nENTRYPOINT [\"./entryPoint.sh\"]"
}