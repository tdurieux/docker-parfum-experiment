{
  "startTime": 1674250898111,
  "endTime": 1674250898958,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Default ARM version\nARG ARM_VERSION=arm32v7\n\nFROM ${ARM_VERSION}/ubuntu:18.04 AS build\n\nARG DEEPDETECT_ARCH=cpu\nARG DEEPDETECT_BUILD=armv7\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y git \\\n    build-essential \\\n    cmake \\\n    libgoogle-glog-dev \\\n    libgflags-dev \\\n    libeigen3-dev \\\n    libopencv-dev \\\n    libboost-dev \\\n    libboost-filesystem-dev \\\n    libboost-thread-dev \\\n    libboost-system-dev \\\n    libboost-iostreams-dev \\\n    libboost-program-options-dev \\\n    libboost-test-dev \\\n    libssl-dev \\\n    libcurl4-openssl-dev \\\n    protobuf-compiler \\\n    libopenblas-dev \\\n    libprotobuf-dev \\\n    libleveldb-dev \\\n    libsnappy-dev \\\n    liblmdb-dev \\\n    libutfcpp-dev \\\n    rapidjson-dev \\\n    wget \\\n    unzip \\\n    libspdlog-dev \\\n    python-setuptools \\\n    python-dev \\\n    libhdf5-dev \\\n    libarchive-dev \\\n    apt-transport-https \\\n    ca-certificates && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Build cpp-netlib\nRUN wget https://github.com/cpp-netlib/cpp-netlib/archive/cpp-netlib-0.11.2-final.tar.gz && \\\n    tar xvzf cpp-netlib-0.11.2-final.tar.gz && \\\n    cd cpp-netlib-cpp-netlib-0.11.2-final && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install && rm cpp-netlib-0.11.2-final.tar.gz\n\nWORKDIR /opt\nRUN git clone https://github.com/jpbarrette/curlpp.git\nWORKDIR /opt/curlpp\nRUN cmake . && \\\n    make install && \\\n    cp /usr/local/lib/libcurlpp.* /usr/lib/\n\n# Copy Deepdetect sources files\nADD ./ /opt/deepdetect\nWORKDIR /opt/deepdetect/\n\n# Build Deepdetect\nRUN mkdir build && \\\n    cd build && \\\n    cp -a ../build.sh . && \\\n    ./build.sh\n\n# Copy libs to /tmp/libs for next build stage\nRUN ./docker/get_libs.sh\n\n# Build final Docker image\nFROM ${ARM_VERSION}/ubuntu:18.04\n\n# Copy Deepdetect binaries from previous step\nCOPY --from=build /opt/deepdetect/build/main /opt/deepdetect/build/main\n\nLABEL maintainer=\"emmanuel.benazera@jolibrain.com\"\nLABEL description=\"DeepDetect deep learning server & API / CPU NCNN-only RPi3 version\"\n\n# Install tools and dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget \\\n\tlibopenblas-base \\\n\tliblmdb0 \\\n\tlibleveldb1v5 \\\n    libboost-regex1.62.0 \\\n\tlibgoogle-glog0v5 \\\n\tlibopencv-highgui3.2 \\\n\tlibgflags2.2 \\\n\tlibcurl4 \\\n\tlibhdf5-cpp-100 \\\n\tlibboost-filesystem1.65.1 \\\n\tlibboost-thread1.65.1 \\\n\tlibboost-iostreams1.65.1 \\\n    libboost-regex1.65.1 \\\n\tlibarchive13 \\\n\tlibprotobuf10 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Fix permissions\nRUN ln -sf /dev/stdout /var/log/deepdetect.log && \\\n    ln -sf /dev/stderr /var/log/deepdetect.log\n\nRUN useradd -ms /bin/bash dd && \\\n    chown dd:dd /opt\nUSER dd\n\n# External volume to be mapped, e.g. for models or training data\nRUN mkdir /opt/models\n\n# Copy missings libs from build step\nCOPY --from=build /tmp/lib/* /usr/lib/\n\nWORKDIR /opt/deepdetect/build/main\nVOLUME [\"/data\"]\n\n# Set entrypoint\nCMD ./dede -host 0.0.0.0\nEXPOSE 8080\n"
}