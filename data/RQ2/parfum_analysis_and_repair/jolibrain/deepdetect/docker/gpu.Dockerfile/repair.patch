diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jolibrain/deepdetect/docker/gpu.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jolibrain/deepdetect/docker/gpu.Dockerfile/repaired.Dockerfile
index fc40db1..eb0513f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jolibrain/deepdetect/docker/gpu.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jolibrain/deepdetect/docker/gpu.Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# syntax = docker/dockerfile:1.0-experimental
 FROM nvidia/cuda:11.6.0-cudnn8-devel-ubuntu20.04 AS build
 
 ARG DEEPDETECT_RELEASE=OFF
@@ -12,10 +11,10 @@ RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloa
 RUN --mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt \
     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt \
     export DEBIAN_FRONTEND=noninteractive && \
-    apt-get update -y && apt-get install -y python-dev apt-transport-https ca-certificates gnupg software-properties-common wget curl
+    apt-get update -y && apt-get install --no-install-recommends -y python-dev apt-transport-https ca-certificates gnupg software-properties-common wget curl && rm -rf /var/lib/apt/lists/*;
 
 # CMake
-RUN curl https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -
+RUN curl -f https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add -
 RUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
 
 # python2 pycompile + docker-buildkit is a bit buggy, it's slow as hell, so disable it for dev
@@ -26,7 +25,7 @@ RUN cp /bin/true /usr/bin/pycompile
 RUN --mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt \
     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt \
     export DEBIAN_FRONTEND=noninteractive && \
-    apt-get update -y && apt-get install -y \
+    apt-get update -y && apt-get install --no-install-recommends -y \
     git \
     ccache \
     automake \
@@ -84,11 +83,11 @@ RUN --mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt \
     curl \
     libarchive-dev \
     libtcmalloc-minimal4 \
-    bash-completion
+    bash-completion && rm -rf /var/lib/apt/lists/*;
 
 RUN for url in \
-        https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel_0.24.1-linux-x86_64.deb \
-        ; do curl -L -s -o /tmp/p.deb $url && dpkg -i /tmp/p.deb && rm -rf /tmp/p.deb; done
+        https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel_0.24.1-linux-x86_64.deb; \
+        do curl -f -L -s -o /tmp/p.deb $url && dpkg -i /tmp/p.deb && rm -rf /tmp/p.deb; done
 
 # Fix "ImportError: No module named builtins"
 # RUN pip install future pyyaml typing
@@ -122,7 +121,7 @@ LABEL maintainer="emmanuel.benazera@jolibrain.com"
 RUN --mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt \
     --mount=type=cache,id=dede_apt_lib,sharing=locked,target=/var/lib/apt \
     export DEBIAN_FRONTEND=noninteractive && \
-    apt-get update -y && apt-get install -y \
+    apt-get update -y && apt-get install --no-install-recommends -y \
     wget \
     curl \
 	libopenblas-base \
@@ -145,7 +144,7 @@ RUN --mount=type=cache,id=dede_cache_lib,sharing=locked,target=/var/cache/apt \
     libboost-stacktrace1.71.0 \
     libboost-system1.71.0 \
 	libarchive13 \
-	libtcmalloc-minimal4
+	libtcmalloc-minimal4 && rm -rf /var/lib/apt/lists/*;
 
 # Fix permissions
 RUN ln -sf /dev/stdout /var/log/deepdetect.log && \