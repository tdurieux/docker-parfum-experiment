{
  "startTime": 1674251175085,
  "endTime": 1674251175607,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 56,
        "columnStart": 25,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 56,
        "columnStart": 25,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Special docker image for Jetson nano\nFROM nvcr.io/nvidia/deepstream-l4t:5.1-21.02-base\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update -y && apt-get install --no-install-recommends -y \\\n    wget \\\n    curl \\\n    cmake \\\n    git \\\n    ccache \\\n    automake \\\n    rsync \\\n    build-essential \\\n    pkg-config \\\n    zip \\\n    g++ \\\n    gcc-7 g++-7 \\\n    zlib1g-dev \\\n    protobuf-compiler \\\n    libprotobuf-dev \\\n    libgoogle-glog-dev \\\n    libgflags-dev \\\n    libeigen3-dev \\\n    libopencv-dev \\\n    libboost-dev \\\n    libboost-filesystem-dev \\\n    libboost-thread-dev \\\n    libboost-system-dev \\\n    libboost-stacktrace-dev \\\n    libboost-iostreams-dev \\\n    libboost-program-options-dev \\\n    libboost-test-dev \\\n    libboost-regex-dev \\\n    libboost-date-time-dev \\\n    libboost-chrono-dev \\\n    libssl-dev \\\n    libgtest-dev \\\n    libcurlpp-dev \\\n    libcurl4-openssl-dev \\\n    libopenblas-dev \\\n    libhdf5-dev \\\n    libleveldb-dev \\\n    libsnappy-dev \\\n    liblmdb-dev \\\n    libutfcpp-dev \\\n    rapidjson-dev \\\n    libmapbox-variant-dev \\\n    autoconf \\\n    libtool-bin \\\n    swig \\\n    unzip \\\n    libgoogle-perftools-dev \\\n    libarchive-dev \\\n    bash-completion \\\n    schedtool \\\n    python-numpy \\\n    util-linux && rm -rf /var/lib/apt/lists/*;\n\nRUN apt clean -y\n\nRUN curl -f -L https://github.com/Kitware/CMake/releases/download/v3.19.6/cmake-3.19.6-Linux-aarch64.sh -o cmake-install.sh\nRUN chmod +x ./cmake-install.sh\nRUN ./cmake-install.sh --prefix=/usr/local --skip-license\n\n# ubuntu GTEST ugly packaging\nWORKDIR /usr/src/gtest\nRUN cmake .\nRUN make -j8\nRUN make install\n\n# NOTE(sileht): docker nvidia on jetson is bugged with non-root account, we\n# have to configure the device access manually. The UID and GID must be the\n# same as the jenkins user on the jetson used by the CI.\nRUN addgroup --gid 1001 jenkins\nRUN useradd -M -s /bin/bash --uid 1001 --gid 1001 jenkins\nRUN usermod -a -G video jenkins\n\nADD ci/deviceQuery /deviceQuery\nADD ci/gitconfig /etc/gitconfig\nWORKDIR /root\n"
}