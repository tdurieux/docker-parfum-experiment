{
  "startTime": 1674252628110,
  "endTime": 1674252629429,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 55,
        "columnStart": 18,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 55,
        "columnStart": 18,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Building firmware.bin ...\n\nFROM --platform=linux/amd64 ubuntu:18.04 as stm32_fw\n\nWORKDIR /app\n\nRUN apt update && apt install --no-install-recommends -y \\\n        python3 \\\n        python3-pip \\\n        git \\\n        tree && \\\n    pip3 install --no-cache-dir -U platformio && rm -rf /var/lib/apt/lists/*;\n\nCOPY .mbedignore ~/.platformio/packages/framework-mbed/features/.mbedignore\n\nRUN git clone https://github.com/husarion/rosbot-stm32-firmware.git && \\\n    cd /app/rosbot-stm32-firmware && \\\n    git submodule update --init --recursive && \\\n    export LC_ALL=C.UTF-8 && \\\n    export LANG=C.UTF-8 && \\\n    pio project init -e core2_diff -O \\\n        \"build_flags= \\\n        -I\\$PROJECTSRC_DIR/TARGET_CORE2 \\\n        -DPIO_FRAMEWORK_MBED_RTOS_PRESENT \\\n        -DPIO_FRAMEWORK_EVENT_QUEUE_PRESENT \\\n        -DMBED_BUILD_PROFILE_RELEASE \\\n        -DROS_NOETIC_MSGS=0 \\\n        -DKINEMATIC_TYPE=0\" && \\\n    pio project init -e core2_mec -O \\\n        \"build_flags= \\\n        -I\\$PROJECTSRC_DIR/TARGET_CORE2 \\\n        -DPIO_FRAMEWORK_MBED_RTOS_PRESENT \\\n        -DPIO_FRAMEWORK_EVENT_QUEUE_PRESENT \\\n        -DMBED_BUILD_PROFILE_RELEASE \\\n        -DROS_NOETIC_MSGS=0 \\\n        -DKINEMATIC_TYPE=1\" && \\\n    pio run\n\n\n# Creating the ROS 2 image ...\nFROM ros:melodic-ros-core\n\n# select bash as default shell\nSHELL [\"/bin/bash\", \"-c\"]\n\nWORKDIR /ros_ws\n\nRUN apt update && apt install --no-install-recommends -y \\\n        python3-pip \\\n        git \\\n        ros-$ROS_DISTRO-rosserial-python \\\n        ros-$ROS_DISTRO-rosserial-server \\\n        ros-$ROS_DISTRO-rosserial-client \\\n        ros-$ROS_DISTRO-rosserial-msgs \\\n        ros-$ROS_DISTRO-move-base-msgs \\\n        ros-$ROS_DISTRO-robot-localization && \\\n    python3 -m pip install --upgrade pyserial && \\\n    # setup python GPIO\n    git clone https://github.com/vsergeev/python-periphery.git --branch=v1.1.2 /python-periphery && \\\n    cd /python-periphery && \\\n    python3 setup.py install --record files.txt && \\\n    # setup GPIO for tinkerboard\n    git clone https://github.com/TinkerBoard/gpio_lib_python.git /gpio_lib_python && \\\n    cd /gpio_lib_python && \\\n    python3 setup.py install --record files.txt && \\\n    # clone and build CORE2 firmware installer\n    git clone https://github.com/husarion/stm32loader.git /stm32loader && \\\n    cd /stm32loader && \\\n    python3 setup.py install && rm -rf /var/lib/apt/lists/*;\n\nCOPY . .\n\n# copy firmware built in previous stage\nCOPY --from=stm32_fw /app/rosbot-stm32-firmware/.pio/build/core2_diff/firmware.bin /root/firmware_diff.bin\nCOPY --from=stm32_fw /app/rosbot-stm32-firmware/.pio/build/core2_mec/firmware.bin /root/firmware_mecanum.bin\n\n# clone robot github repositories and clear ubuntu packages\nRUN mkdir -p ros_ws/src && \\\n    git clone https://github.com/husarion/rosbot_ekf.git --branch=master src/rosbot_ekf && \\\n    source /opt/ros/$ROS_DISTRO/setup.bash && \\\n    catkin_make -DCATKIN_ENABLE_TESTING=0 -DCMAKE_BUILD_TYPE=Release && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# copy scripts\nCOPY ./flash_firmware.sh .\n\n# replace entrypoint\nENTRYPOINT [\"/ros_ws/ros_entrypoint.sh\"]\n\nCMD [\"bash\"]"
}