{
  "startTime": 1674252880382,
  "endTime": 1674252881508,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 3,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-cli\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"force-unsafe-io\" > /etc/dpkg/dpkg.cfg.d/02apt-speedup && \\\n    echo \"Acquire::http {No-Cache=True;};\" > /etc/apt/apt.conf.d/no-cache\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        gnupg2 && \\\n    apt-key update && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n            imagemagick \\\n            libmagickwand-dev libmagickcore-dev \\\n            libfreetype6-dev \\\n            libjpeg62-turbo-dev \\\n            libpng-dev \\\n            libwebp-dev \\\n            libicu-dev \\\n            libzip-dev \\\n            libpq-dev \\\n            nano \\\n            git \\\n            unzip\\\n            libxml2-dev \\\n            curl \\\n            libcurl4-openssl-dev \\\n            libssl-dev \\\n        --no-install-recommends && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n        && pecl install xdebug-2.9.6 \\\n        && docker-php-ext-enable xdebug \\\n        && docker-php-ext-install \\\n                zip \\\n                curl \\\n                bcmath \\\n                exif \\\n                gd \\\n                iconv \\\n                intl \\\n                opcache \\\n                pdo_mysql \\\n                pdo_pgsql \\\n                mbstring\n\n# Install composer\nENV COMPOSER_ALLOW_SUPERUSER=1 \\\n    PHP_USER_ID=33 \\\n    PHP_ENABLE_XDEBUG=1 \\\n    COMPOSER_HOME=/root/.composer/ \\\n    PATH=/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH\n\nRUN curl -f -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n&& curl -f -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n# Make sure we're installing what we think we're installing!\n&& php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n&& php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer \\\n&& rm -f /tmp/composer-setup.*\n\n# Enable Xdebug\nENV XDEBUGINI_PATH=/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n\nRUN echo \"xdebug.idekey=PHP_STORM\" >> $XDEBUGINI_PATH && \\\n    echo \"xdebug.default_enable=1\" >> $XDEBUGINI_PATH && \\\n    echo \"xdebug.remote_enable=1\" >> $XDEBUGINI_PATH && \\\n    echo \"xdebug.remote_connect_back=1\" >> $XDEBUGINI_PATH && \\\n    echo \"xdebug.remote_log=1\" >> $XDEBUGINI_PATH && \\\n    echo \"xdebug.remote_port=9000\" >> $XDEBUGINI_PATH && \\\n    echo \"xdebug.remote_autostart=1\" >> $XDEBUGINI_PATH\n\nWORKDIR /app\n"
}