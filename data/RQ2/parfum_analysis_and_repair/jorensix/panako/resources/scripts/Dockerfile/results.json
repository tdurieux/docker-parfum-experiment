{
  "startTime": 1674218191839,
  "endTime": 1674218192730,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "#Defines a target\nFROM debian:bullseye\n\n#install some dependencies: java and ffmpeg\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends git default-jdk ffmpeg && rm -rf /var/lib/apt/lists/*;\n\n#To make sure the platform is supported we compile the\n#dependent native code in the container\n#On x86_64 this could be skipped\n#install compilers\nRUN apt-get install -y --no-install-recommends make gcc g++ libc-dev && rm -rf /var/lib/apt/lists/*;\n\n#install lmdb library to a path java searches for libs (/lib)\nWORKDIR /\nRUN git clone --depth 1 https://git.openldap.org/openldap/openldap.git\nWORKDIR /openldap/libraries/liblmdb\nRUN make\nRUN mv liblmdb.so /lib/\n\n#Do the same for JGaborator\nWORKDIR /\nRUN git clone --depth 1 https://github.com/JorenSix/JGaborator\nWORKDIR /JGaborator/gaborator/\nENV JAVA_HOME=/usr/lib/jvm/default-java\nRUN make\nRUN cp ../build/precompiled/libjgaborator.so /lib/\n\n#Now install Panako\nWORKDIR /\nRUN git clone --depth 1 https://github.com/JorenSix/Panako.git\nENV JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8\nWORKDIR /Panako\nRUN ./gradlew shadowJar\nRUN ./gradlew install\nRUN cp resources/defaults/panako /usr/local/bin/\n\n#Cleanup: we do not need the temporary source files\n# any more\nRUN rm -rf /Panako\nRUN rm -rf /JGaborator\nRUN rm -rf /openldap\nRUN apt-get clean\n\n#Make and switch to the audio directory\n# This directory will be mounted and used as passthrough\n# from host to container\nRUN mkdir -p /root/audio\nWORKDIR /root/audio\n"
}