{
  "startTime": 1674254461320,
  "endTime": 1674254462626,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 206
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 206
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nMAINTAINER Yunpeng Men \"ypmen@mpifr-bonn.mpg.de\"\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN useradd -ms /bin/bash pulsarx\n\nENV DEBIAN_FRONTEND noninteractive\nENV HOME /home/pulsarx\n\nENV LD_LIBRARY_PATH=$HOME/software/lib:$LD_LIBRARY_PATH\nENV YMW16_DIR=$HOME/software/PulsarX/src/ymw16\nENV PATH=$PATH:$HOME/software/bin\nENV OMP_NUM_THREADS=1\nENV PSRCAT_FILE=/home/pulsarx/software/psrcat_tar/psrcat.db\nENV TEMPO2=/home/pulsarx/software/tempo2/T2runtime\n\nUSER root\n\nRUN apt-get update && apt-get install --no-install-recommends -y git \\\n    autoconf \\\n    libtool \\\n    g++ \\\n    gfortran \\\n    libboost-program-options-dev \\\n    libboost-log-dev \\\n    libcfitsio-dev \\\n    libblas-dev \\\n    liblapack-dev \\\n    libeigen3-dev \\\n    libpng-dev \\\n    libfftw3-dev \\\n    pgplot5 \\\n    wget \\\n    make \\\n    libx11-dev \\\n    python3-dev \\\n    python3-distutils \\\n    python3-numpy \\\n    python3-matplotlib && rm -rf /var/lib/apt/lists/*;\n\nUSER pulsarx\n\n#install sofa\nWORKDIR $HOME\nRUN mkdir software\nWORKDIR $HOME/software\nRUN wget https://www.iausofa.org/2020_0721_C/sofa_c-20200721.tar.gz --no-check-certificate && \\\n    tar -zxvf sofa_c-20200721.tar.gz && rm sofa_c-20200721.tar.gz\nWORKDIR $HOME/software/sofa/20200721/c/src\nRUN make && make test\n\n#install tempo2\nWORKDIR $HOME/software\nRUN git clone https://bitbucket.org/psrsoft/tempo2.git\nWORKDIR $HOME/software/tempo2\nRUN rm -rf .git\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/software\nRUN make && make install\nRUN make plugins-install\nRUN make clean\n\n#install psrcat\nWORKDIR $HOME/software\nRUN wget https://www.atnf.csiro.au/research/pulsar/psrcat/downloads/psrcat_pkg.tar.gz && \\\n    tar -zxvf psrcat_pkg.tar.gz && rm psrcat_pkg.tar.gz\nWORKDIR $HOME/software/psrcat_tar\nRUN source makeit && cp psrcat $HOME/software/bin\n\nWORKDIR $HOME/software\n#install PlotX\nRUN git clone https://github.com/ypmen/PlotX.git\n#install PulsarX\nRUN git clone https://github.com/ypmen/PulsarX.git\n#install BasebandX\nRUN git clone https://github.com/ypmen/BasebandX.git\n#install TransientX\nRUN git clone https://github.com/ypmen/TransientX\n\nWORKDIR $HOME/software/PlotX\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/software\nRUN make && make install\nRUN make clean\n\nWORKDIR $HOME/software/PulsarX\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/software CXXFLAGS=\"-std=c++11 -O3\" LDFLAGS=\"-L$HOME/software/sofa/20200721/c/src -L$HOME/software/lib\" CPPFLAGS=\"-I$HOME/software/sofa/20200721/c/src -I$HOME/software/include\"\nRUN make && make install\nRUN make clean\n\nWORKDIR $HOME/software/BasebandX\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/software CXXFLAGS=\"-std=c++11 -O3\"\nRUN make && make install\nRUN make clean\n\nWORKDIR $HOME/software/TransientX\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/software CXXFLAGS=\"-std=c++11 -O3\" LDFLAGS=\"-L$HOME/software/sofa/20200721/c/src -L$HOME/software/lib\" CPPFLAGS=\"-I$HOME/software/sofa/20200721/c/src -I$HOME/software/include\"\nRUN make && make install\nRUN make clean\n\nWORKDIR $HOME\n"
}