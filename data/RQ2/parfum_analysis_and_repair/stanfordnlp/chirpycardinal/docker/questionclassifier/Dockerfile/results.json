{
  "startTime": 1674252463486,
  "endTime": 1674252464386,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 25,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-base\n\nRUN apt-get update -y\n\n# Get some basic packages\nRUN apt-get update -y && apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y nginx supervisor gcc g++ git && rm -rf /var/lib/apt/lists/*;\n\n# Get a specific python version\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:deadsnakes/ppa\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y python3.7-dev python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN python3.7 -m pip install -U pip\n#RUN apt-get install build-essential libssl-dev libffi-dev\n\n#COPY usr/lib/sentencepiece-0.1.83-cp37-cp37m-manylinux1_x86_64.whl deploy/usr/lib/app/sentencepiece-0.1.83-cp37-cp37m-manylinux1_x86_64.whl\n#RUN python3.7 -m pip install sentencepiece-0.1.83-cp37-cp37m-manylinux1_x86_64.whl\n#RUN apt-get install pip\n\n# Any pip installation should be run with the python version you've installed\n# eg. RUN python3.7 -m pip install ...\n\n# Set up AWS credentials\nRUN mkdir -p /deploy/app\n# Install awscli and move the .aws dir to ~/\n# For some reason, \"COPY .aws ~/.aws\" doesn't work (the command runs but afterwards ~/.aws is not there)\n# RUN python3.7 -m pip install --upgrade pip && python3.7 -m pip install awscli\n# COPY .aws /deploy/app/.aws\n# RUN mv /deploy/app/.aws ~/\n\n# Frontloading pip installation, so that these steps can be cached in subsequent calls\n# Pip installation takes time, especially pytorch.\n# If your repo contains more requirements add them here, so that packages don't need to be installed for every new pull\nCOPY app/requirements.txt deploy/app/requirements.txt\nRUN python3.7 -m pip install -r /deploy/app/requirements.txt\n\n# Download the model from S3\nCOPY model/question-classifier deploy/app/models/baseline\n\n# Setup nginx\nRUN rm /etc/nginx/sites-enabled/default\n# Setup flask application\nCOPY config/flask.conf /etc/nginx/sites-available/\nRUN ln -s /etc/nginx/sites-available/flask.conf /etc/nginx/sites-enabled/flask.conf\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\nRUN ln -s /usr/local/bin/gunicorn /usr/bin/gunicorn\n\n# Setup supervisord\nRUN mkdir -p /var/log/supervisor\nCOPY config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\nCOPY app deploy/app/\n\nEXPOSE 80\n\n# Start processes\nCMD [\"/usr/bin/supervisord\"]\n\n"
}