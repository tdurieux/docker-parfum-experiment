diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sitkevij/ffmpeg/ffmpeg-3.3-ubuntu-vmaf/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sitkevij/ffmpeg/ffmpeg-3.3-ubuntu-vmaf/Dockerfile/repaired.Dockerfile
index af49032..2331f74 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sitkevij/ffmpeg/ffmpeg-3.3-ubuntu-vmaf/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sitkevij/ffmpeg/ffmpeg-3.3-ubuntu-vmaf/Dockerfile/repaired.Dockerfile
@@ -46,42 +46,42 @@ RUN BUILD_DEP="autoconf \
     zlib1g-dev" && \
   export MAKEFLAGS="-j$(($(nproc) + 1))" && \
   apt-get -yqq update && \
-  apt-get install -yq --no-install-recommends ${BUILD_DEP} ca-certificates expat libgomp1 
+  apt-get install -yq --no-install-recommends ${BUILD_DEP} ca-certificates expat libgomp1 && rm -rf /var/lib/apt/lists/*;
 
 # nasm
-RUN cd $SRC && \ 
-  curl -Os http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 && \
+RUN cd $SRC && \
+  curl -f -Os https://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-$NASM_VERSION.tar.bz2 && \
   tar xjvf nasm-$NASM_VERSION.tar.bz2 && \
   cd nasm-$NASM_VERSION && ./autogen.sh && \
-  PATH="$BIN:$PATH" ./configure --prefix="$SRC" --bindir="$BIN" && \ 
-  PATH="$BIN:$PATH" make && \ 
-  make install
+  PATH="$BIN:$PATH" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$SRC" --bindir="$BIN" && \
+  PATH="$BIN:$PATH" make && \
+  make install && rm nasm-$NASM_VERSION.tar.bz2
 
 # fdk-aac
 RUN DIR=$(mktemp -d) && cd ${DIR} && \
-  curl -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master && \
+  curl -f -o fdk-aac.tar.gz https://codeload.github.com/mstorsjo/fdk-aac/legacy.tar.gz/master && \
   tar xzvf fdk-aac.tar.gz && \
   cd mstorsjo-fdk-aac* && \
   autoreconf -fiv && \
-  ./configure --prefix="$SRC" --disable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$SRC" --disable-shared && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm fdk-aac.tar.gz
 
 # x264
 RUN DIR=$(mktemp -d) && cd ${DIR} && \
-  curl -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 && \
-  tar xvf last_x264.tar.bz2 &&  \
+  curl -f -Os ftp://ftp.videolan.org/pub/x264/snapshots/last_x264.tar.bz2 && \
+  tar xvf last_x264.tar.bz2 && \
   cd x264* && \
-  ./configure --prefix="$SRC" --bindir="$BIN" --enable-static && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$SRC" --bindir="$BIN" --enable-static && \
   make && \
   make install && \
   make distclean && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm last_x264.tar.bz2
 
 # x265 https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz
 RUN DIR=$(mktemp -d) && cd ${DIR} && \
-  curl -Os -L https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz && \
+  curl -f -Os -L https://bitbucket.org/multicoreware/x265/downloads/x265_2.5.tar.gz && \
   tar xzvf x265_2.5.tar.gz && \
   cd x265*/build/linux && \
   # ./make-Makefiles.bash
@@ -89,30 +89,30 @@ RUN DIR=$(mktemp -d) && cd ${DIR} && \
   PATH="$BIN:$PATH" cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX="$SRC" -DENABLE_SHARED:bool=off ../../source && \
   make && \
   make install && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm x265_2.5.tar.gz
 
 # https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz
 # curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} && \
 RUN DIR=$(mktemp -d) && cd ${DIR} && \
-  curl -Os -L https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz && \
+  curl -f -Os -L https://github.com/webmproject/libvpx/archive/v1.6.1.tar.gz && \
   # tar -zx --strip-components=1 && \
   tar xzvf v1.6.1.tar.gz && \
   cd *1.6.1 && \
-  ./configure --prefix="$SRC" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$SRC" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \
   make && \
   make install && \
   make distclean && \
-  rm -rf ${DIR}  
+  rm -rf ${DIR} && rm v1.6.1.tar.gz
 
 # vmaf - docker run sitkevij/ffmpeg -i mezz -i ref -lavfi libvmaf -f null -
 #   note the need for python-tk
-RUN apt-get install -y pkg-config gfortran libhdf5-dev libfreetype6-dev liblapack-dev python-pip python-tk && \ 
-  python -m pip install --upgrade pip && \ 
-  pip install --user numpy scipy matplotlib pandas && \ 
-  pip install --upgrade scikit-learn && \ 
-  pip install --upgrade h5py && \ 
-  echo 'export PATH="$PATH:$HOME/.local/bin"' >>$HOME/.bashrc && \ 
-  python -c 'import numpy as pkg; print pkg.__version__; print pkg.__file__'
+RUN apt-get install --no-install-recommends -y pkg-config gfortran libhdf5-dev libfreetype6-dev liblapack-dev python-pip python-tk && \
+  python -m pip install --upgrade pip && \
+  pip install --no-cache-dir --user numpy scipy matplotlib pandas && \
+  pip install --no-cache-dir --upgrade scikit-learn && \
+  pip install --no-cache-dir --upgrade h5py && \
+  echo 'export PATH="$PATH:$HOME/.local/bin"' >>$HOME/.bashrc && \
+  python -c 'import numpy as pkg; print pkg.__version__; print pkg.__file__' && rm -rf /var/lib/apt/lists/*;
 
 RUN DIR=$(mktemp -d) && cd ${DIR} && \
   git clone https://github.com/Netflix/vmaf.git && \
@@ -128,25 +128,25 @@ RUN DIR=$(mktemp -d) && cd ${DIR} && \
 RUN DIR=$(mktemp -d) && cd ${DIR} && \
   #curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \
   #tar xzvf ffmpeg-${FFMPEG_VERSION}.tar.gz && \
-  curl -Os http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
+  curl -f -Os https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
   tar xjvf ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
   # cd ffmpeg-${FFMPEG_VERSION} && \
   cd ffmpeg* && \
-  ./configure --prefix="${SRC}" --extra-cflags="-I${SRC}/include" --pkg-config-flags="--static" --extra-ldflags="-L${SRC}/lib" --bindir="${SRC}/bin" \
-  --disable-debug \ 
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --extra-cflags="-I${SRC}/include" --pkg-config-flags="--static" --extra-ldflags="-L${SRC}/lib" --bindir="${SRC}/bin" \
+  --disable-debug \
   --disable-doc \
   --disable-ffplay \
-  --enable-avresample \ 
+  --enable-avresample \
   --enable-gpl \
   # --enable-libfaac \
-  --enable-libfdk_aac \ 
+  --enable-libfdk_aac \
   # --enable-libmp3lame \
-  --enable-libvmaf \ 
+  --enable-libvmaf \
   --enable-libvpx \
-  --enable-libx264 \ 
-  --enable-libx265 \ 
+  --enable-libx264 \
+  --enable-libx265 \
   # --enable-libxvid \
-  --enable-nonfree \ 
+  --enable-nonfree \
   --enable-postproc \
   --enable-small \
   --enable-version3 && \
@@ -154,7 +154,7 @@ RUN DIR=$(mktemp -d) && cd ${DIR} && \
   make install && \
   make distclean && \
   hash -r && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm ffmpeg-${FFMPEG_VERSION}.tar.bz2
 
 # cleanup
 RUN cd && \