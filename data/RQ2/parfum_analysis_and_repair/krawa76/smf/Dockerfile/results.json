{
  "startTime": 1674253056168,
  "endTime": 1674253056989,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 32,
        "columnEnd": 43
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 32,
        "columnEnd": 43
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 86,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.13.0 as build\n\nWORKDIR /app\n\nARG SERVICE=demo\n\nCOPY core ./core\n# COPY services ./services -- copy all services if needed\nCOPY services/${SERVICE} ./services/${SERVICE}\nCOPY package.json .\nCOPY package-lock.json .\nCOPY tsconfig.json .\n\nRUN npm install -g typescript@3.5.3 && npm cache clean --force;\nRUN npm install && npm cache clean --force;\nRUN cd ./services/${SERVICE} && npm install && npm cache clean --force;\n\nCOPY core/smf-core-docker.js ./node_modules/smf-core.js\n\nENV NODE_ENV=production\nRUN npm run build-prod\n\n##################################################################################################\nFROM node:10.13.0-alpine as prod\n\nARG SERVICE=demo\nENV SERVICE=$SERVICE\n\n##################################################################################################\nWORKDIR /app\nCOPY package.json .\nCOPY package-lock.json .\n# copy package.json & package-lock.json (if the latter exists)\nCOPY services/${SERVICE}/package*.json ./services/${SERVICE}/\nCOPY --from=build /app/build .\n\n# ENV NODE_ENV=production NODE_PATH=/app PORT=80\nENV NODE_ENV=production NODE_PATH=/app\nRUN npm install && npm cache clean --force;\nRUN cd ./services/${SERVICE} && npm install && npm cache clean --force;\n\nCOPY core/smf-core-docker.js ./node_modules/smf-core.js\n\n##################################################################################################\n# (optional) copy service data\nCOPY docker-temp.txt ./services/${SERVICE}/data* /data/\n\n# (optional) copy service libs\nCOPY docker-temp.txt ./services/${SERVICE}/library* /library/\n\n##################################################################################################\n# todo: move AI env vars to a service Dockerfile include, when implemented\n\nENV CONDA_DIR=/opt/conda\nENV PATH=$CONDA_DIR/bin:$PATH\n\n##################################################################################################\n# (optional) install service files\nCOPY docker-temp.txt ./services/${SERVICE}/install.sh* ./services/${SERVICE}/\n# not sure why \"-f...\" doesn't work with \"chmod\" etc., use \"if test...\" instead\n# RUN [ -f \"./services/${SERVICE}/install.sh\" ] && chmod +rx ./services/${SERVICE}/install.sh && ./services/${SERVICE}/install.sh\nRUN if test -e \"./services/${SERVICE}/install.sh\"; then chmod +rx ./services/${SERVICE}/install.sh && ./services/${SERVICE}/install.sh ; fi\n\n##################################################################################################\n# copy sails web app, if exists\nCOPY docker-temp.txt ./services/${SERVICE}/web-sails* ./services/${SERVICE}/web-sails/\nRUN [ -d \"./services/${SERVICE}/web-sails\" ] && cd ./services/${SERVICE}/web-sails && npm install && npm cache clean --force;\nENV SAILS_PATH=./web-sails\n# EXPOSE 1337\n\n##################################################################################################\nCOPY smf-stack.json .\nENV SMF_ROOT_PATH=../\nCMD [\"node\", \"./core/index.js\"]\n"
}