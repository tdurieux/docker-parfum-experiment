{
  "startTime": 1674250015648,
  "endTime": 1674250016487,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lukemathwalker/cargo-chef:0.1.35-rust-slim-bullseye AS chef\nWORKDIR /app\n\nFROM chef as planner\nCOPY . .\nRUN cargo chef prepare --recipe-path recipe.json\n\nFROM chef as builder\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y pkg-config libssl-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\nCOPY --from=planner /app/recipe.json recipe.json\n# Build dependencies\nRUN cargo chef cook --release --recipe-path recipe.json\nCOPY . .\nRUN cargo build --release --locked --bin release-plz\n\nFROM debian:bullseye-slim as runner\n\nWORKDIR /app\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH\n\n# The dependency cargo-edit needs the cargo binary installed\n# copied from https://github.com/rust-lang/docker-rust/blob/aa8bed3870cb14ecf49f127bae0a212adebc2384/1.60.0/bullseye/slim/Dockerfile#L8\nRUN set -eux; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        wget \\\n        gcc \\\n        pkg-config \\\n        libssl-dev \\\n        libc6-dev \\\n        libssl1.1 \\\n        ssh-client \\\n        git \\\n        ; \\\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='3dc5ef50861ee18657f9db2eeb7392f9c2a6c95c90ab41e45ab4ca71476b4338' ;; \\\n        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='67777ac3bc17277102f2ed73fd5f14c51f4ca5963adadf7f174adf4ebc38747b' ;; \\\n        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='32a1532f7cef072a667bac53f1a5542c99666c4071af0c9549795bbdb2069ec1' ;; \\\n        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='e50d1deb99048bc5782a0200aa33e4eea70747d49dffdc9d06812fd22a372515' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac; \\\n    url=\"https://static.rust-lang.org/rustup/archive/1.24.3/${rustArch}/rustup-init\"; \\\n    wget \"$url\"; \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c -; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --profile minimal --default-host ${rustArch}; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    cargo --version; \\\n    apt-get remove -y --auto-remove \\\n        wget \\\n        ; \\\n    rm -rf /var/lib/apt/lists/*; \\\n    mv /usr/local/cargo/bin/cargo ~; \\\n    mv /usr/local/cargo/bin/rustc ~; \\\n    rm /usr/local/cargo/bin/*; \\\n    mv ~/cargo /usr/local/cargo/bin/; \\\n    mv ~/rustc /usr/local/cargo/bin/;\nCOPY --from=builder /app/target/release/release-plz /usr/local/bin\nENTRYPOINT [\"release-plz\"]\n"
}