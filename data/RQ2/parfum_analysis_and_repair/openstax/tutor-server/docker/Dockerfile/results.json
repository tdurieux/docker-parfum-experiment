{
  "startTime": 1674219227740,
  "endTime": 1674219228308,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUBY_VERSION\nFROM ruby:$RUBY_VERSION\n\n# Setup the Google Chrome repository\nRUN wget --quiet --output-document=- https://dl-ssl.google.com/linux/linux_signing_key.pub | \\\n    APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add -\nRUN echo 'deb https://dl.google.com/linux/chrome/deb/ stable main' \\\n         > /etc/apt/sources.list.d/google-chrome.list\n\nARG NODE_JS_MAJOR_VERSION\n\n# The nodejs setup script already calls apt-get update,\n# but just in case they stop doing it we call it here again\nRUN wget --quiet --output-document=- https://deb.nodesource.com/setup_$NODE_JS_MAJOR_VERSION.x | \\\n    bash - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends --yes libjemalloc2 nodejs google-chrome-stable && \\\n    rm --recursive --force /var/lib/apt/lists/*\n\n# Make ruby use libjemalloc\nENV LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libjemalloc.so.2\n\n# Install yarn as a global npm package\nRUN npm install --global yarn && npm cache clean --force;\n\n# Add a user to the container that will own the application code\nRUN adduser --system --group --home /tutor tutor\nUSER tutor\n\n# The separate mkdir step is necessary to properly set permissions for /tutor/src\nRUN mkdir /tutor/src\nWORKDIR /tutor/src\n\n# Copy only the Gemfiles and run bundle install,\n# so the cache is valid until the Gemfile or Gemfile.lock change\nCOPY --chown=tutor Gemfile* ./\nRUN gem install bundler --force --no-document && \\\n    bundle config deployment true && \\\n    bundle config path /tutor/bundle && \\\n    bundle config jobs $(nproc) && \\\n    bundle install\n\n# Copy the rest of the application\nCOPY --chown=tutor . .\n\n# Use docker/entrypoint.rb as the entrypoint\n# It'll setup the database, run migrations and create the demo data\n# The default command is bin/rails server, which starts up the puma server on localhost port 3001\nENTRYPOINT [\"docker/entrypoint.rb\"]\nCMD [\"bin/rails\", \"server\", \"--binding=0.0.0.0\"]\n"
}