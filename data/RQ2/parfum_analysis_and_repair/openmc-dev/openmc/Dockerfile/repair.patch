diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openmc-dev/openmc/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openmc-dev/openmc/Dockerfile/repaired.Dockerfile
index 341390c..cd4f93f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openmc-dev/openmc/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openmc-dev/openmc/Dockerfile/repaired.Dockerfile
@@ -67,14 +67,14 @@ ENV LD_LIBRARY_PATH=${DAGMC_INSTALL_DIR}/lib:$LD_LIBRARY_PATH \
 # Install and update dependencies from Debian package manager
 RUN apt-get update -y && \
     apt-get upgrade -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         python3-pip python-is-python3 wget git build-essential cmake \
         mpich libmpich-dev libhdf5-serial-dev libhdf5-mpich-dev \
         libpng-dev && \
-    apt-get autoremove
+    apt-get autoremove && rm -rf /var/lib/apt/lists/*;
 
 # Update system-provided pip
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
 # Clone and install NJOY2016
 RUN cd $HOME \
@@ -88,9 +88,8 @@ RUN cd $HOME \
 
 
 RUN if [ "$build_dagmc" = "on" ]; then \
-        # Install addition packages required for DAGMC
-        apt-get -y install libeigen3-dev libnetcdf-dev libtbb-dev libglfw3-dev \
-        && pip install --upgrade numpy cython \
+        apt-get -y --no-install-recommends install libeigen3-dev libnetcdf-dev libtbb-dev libglfw3-dev \
+        && pip install --no-cache-dir --upgrade numpy cython \
         # Clone and install EMBREE
         && mkdir -p $HOME/EMBREE && cd $HOME/EMBREE \
         && git clone --single-branch -b ${EMBREE_TAG} --depth 1 ${EMBREE_REPO} \
@@ -101,8 +100,8 @@ RUN if [ "$build_dagmc" = "on" ]; then \
                     -DEMBREE_ISA_SSE42=ON \
                     -DEMBREE_ISPC_SUPPORT=OFF \
         && make 2>/dev/null -j${compile_cores} install \
-        && rm -rf ${EMBREE_INSTALL_DIR}/build ${EMBREE_INSTALL_DIR}/embree ; \
-        # Clone and install MOAB
+        && rm -rf ${EMBREE_INSTALL_DIR}/build ${EMBREE_INSTALL_DIR}/embree; rm -rf /var/lib/apt/lists/*; \
+
         mkdir -p $HOME/MOAB && cd $HOME/MOAB \
         && git clone  --single-branch -b ${MOAB_TAG} --depth 1 ${MOAB_REPO} \
         && mkdir build && cd build \
@@ -120,7 +119,7 @@ RUN if [ "$build_dagmc" = "on" ]; then \
         && python setup.py install \
         && python -c "import pymoab" \
         && rm -rf $HOME/MOAB ; \
-        # Clone and install Double-Down
+
         mkdir -p $HOME/Double_down && cd $HOME/Double_down \
         && git clone --single-branch -b ${DD_TAG} --depth 1 ${DD_REPO} \
         && mkdir build && cd build \
@@ -129,7 +128,7 @@ RUN if [ "$build_dagmc" = "on" ]; then \
                              -DEMBREE_DIR=${EMBREE_INSTALL_DIR} \
         && make 2>/dev/null -j${compile_cores} install \
         && rm -rf ${DD_INSTALL_DIR}/build ${DD_INSTALL_DIR}/double-down ; \
-        # Clone and install DAGMC
+
         mkdir -p $HOME/DAGMC && cd $HOME/DAGMC \
         && git clone --single-branch -b ${DAGMC_BRANCH} --depth 1 ${DAGMC_REPO} \
         && mkdir build && cd build \
@@ -146,8 +145,7 @@ RUN if [ "$build_dagmc" = "on" ]; then \
 
 
 RUN if [ "$build_libmesh" = "on" ]; then \
-        # Install addition packages required for LIBMESH
-        apt-get -y install m4 libnetcdf-dev libpnetcdf-dev \
+        apt-get -y --no-install-recommends install m4 libnetcdf-dev libpnetcdf-dev \
         # Install LIBMESH
         && mkdir -p $HOME/LIBMESH && cd $HOME/LIBMESH \
         && git clone --shallow-submodules --recurse-submodules --single-branch -b ${LIBMESH_TAG} --depth 1 ${LIBMESH_REPO} \
@@ -169,7 +167,7 @@ RUN if [ "$build_libmesh" = "on" ]; then \
                     --without-gdb-command \
                     --with-cxx-std-min=2014 \
         && make 2>/dev/null -j${compile_cores} install \
-        && rm -rf ${LIBMESH_INSTALL_DIR}/build ${LIBMESH_INSTALL_DIR}/libmesh ; \
+        && rm -rf ${LIBMESH_INSTALL_DIR}/build ${LIBMESH_INSTALL_DIR}/libmesh; rm -rf /var/lib/apt/lists/*; \
     fi
 
 FROM dependencies AS build
@@ -206,7 +204,7 @@ RUN mkdir -p ${HOME}/OpenMC && cd ${HOME}/OpenMC \
             -DHDF5_PREFER_PARALLEL=on ; \
     fi ; \
     make 2>/dev/null -j${compile_cores} install \
-    && cd ../openmc && pip install .[test,depletion-mpi] \
+    && cd ../openmc && pip install --no-cache-dir .[test,depletion-mpi] \
     && python -c "import openmc"
 
 FROM build AS release