{
  "startTime": 1674255070821,
  "endTime": 1674255071729,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This image tests multi-stage build using GNU Hello. In the first stage, we\n# install a build environment and build Hello. In the second stage, we start\n# fresh again with a base image and copy the Hello executables. Tests\n# demonstrate that Hello runs and none of the build environment is present.\n#\n# ch-test-scope: standard\n\n\nFROM almalinux:8 AS buildstage\n\n# Build environment\nRUN dnf install -y \\\n                gcc \\\n                make \\\n                wget\nWORKDIR /usr/local/src\n\n# GNU Hello. Install using DESTDIR to make copying below easier.\nRUN wget -nv https://ftp.gnu.org/gnu/hello/hello-2.10.tar.gz\nRUN tar xf hello-2.10.tar.gz \\\n && cd hello-2.10 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make -j $(getconf _NPROCESSORS_ONLN) \\\n && make install DESTDIR=/hello && rm hello-2.10.tar.gz\nRUN ls -ld /hello/usr/local/*/*\n\n\nFROM almalinux:8\n\nRUN dnf install -y man\n\n# COPY the hello install over, by both name and index, making sure not to\n# overwrite existing contents. Recall that COPY works different than cp(1).\nCOPY --from=0 /hello/usr/local/bin /usr/local/bin\nCOPY --from=buildstage /hello/usr/local/share /usr/local/share\nCOPY --from=buildstage /hello/usr/local/share/locale /usr/local/share/locale\nRUN ls -ld /usr/local/*/*\n"
}