{
  "startTime": 1674221102235,
  "endTime": 1674221103101,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 40,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM node:16.15.1-bullseye-slim AS assets\nLABEL maintainer=\"Nick Janetakis <nick.janetakis@gmail.com>\"\n\nWORKDIR /app/assets\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends build-essential \\\n  && rm -rf /var/lib/apt/lists/* /usr/share/doc /usr/share/man \\\n  && apt-get clean \\\n  && mkdir -p /node_modules && chown node:node -R /node_modules /app\n\nUSER node\n\nCOPY --chown=node:node assets/package.json assets/*yarn* ./\n\nRUN yarn install && yarn cache clean && yarn cache clean;\n\nARG NODE_ENV=\"production\"\nENV NODE_ENV=\"${NODE_ENV}\" \\\n    PATH=\"${PATH}:/node_modules/.bin\" \\\n    USER=\"node\"\n\nCOPY --chown=node:node . ..\n\nRUN if [ \"${NODE_ENV}\" != \"development\" ]; then \\\n  ../run yarn:build:js && ../run yarn:build:css; else mkdir -p /app/public; fi\n\nCMD [\"bash\"]\n\n###############################################################################\n\nFROM python:3.10.5-slim-bullseye AS app\nLABEL maintainer=\"Nick Janetakis <nick.janetakis@gmail.com>\"\n\nWORKDIR /app\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends build-essential curl libpq-dev \\\n  && rm -rf /var/lib/apt/lists/* /usr/share/doc /usr/share/man \\\n  && apt-get clean \\\n  && useradd --create-home python \\\n  && chown python:python -R /app\n\nUSER python\n\nCOPY --chown=python:python requirements*.txt ./\nCOPY --chown=python:python bin/ ./bin\n\nRUN chmod 0755 bin/* && bin/pip3-install\n\nARG FLASK_ENV=\"production\"\nENV FLASK_ENV=\"${FLASK_ENV}\" \\\n    FLASK_APP=\"hello.app\" \\\n    FLASK_SKIP_DOTENV=\"true\" \\\n    PYTHONUNBUFFERED=\"true\" \\\n    PYTHONPATH=\".\" \\\n    PATH=\"${PATH}:/home/python/.local/bin\" \\\n    USER=\"python\"\n\nCOPY --chown=python:python --from=assets /app/public /public\nCOPY --chown=python:python . .\n\nRUN if [ \"${FLASK_ENV}\" != \"development\" ]; then \\\n  ln -s /public /app/public && flask digest compile && rm -rf /app/public; fi\n\nENTRYPOINT [\"/app/bin/docker-entrypoint-web\"]\n\nEXPOSE 8000\n\nCMD [\"gunicorn\", \"-c\", \"python:config.gunicorn\", \"hello.app:create_app()\"]\n"
}