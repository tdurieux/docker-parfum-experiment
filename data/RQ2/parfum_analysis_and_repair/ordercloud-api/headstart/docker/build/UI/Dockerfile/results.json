{
  "startTime": 1674252192803,
  "endTime": 1674252193477,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 42,
        "columnEnd": 61
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE\n\nFROM ${BASE_IMAGE} as base\n\nRUN npm config set registry http://registry.npmjs.org/ --global\n\nRUN npm install -g json && npm cache clean --force;\n\nRUN apk add --no-cache git\n\nFROM base as builder\n\nARG ROLE\n\nWORKDIR /build\n\n# Build SDK\nCOPY src/UI/SDK/package*.json SDK/\nRUN cd /build/SDK && npm install && npm cache clean --force;\nCOPY src/UI/SDK SDK/\nRUN cd /build/SDK && npm run build\n\n# Build APP (Buyer or Seller)\n# Note: Doesn't seem to be run npm install as a separate layer because its required to symlink sdk\nCOPY src/UI/${ROLE} APP/\nRUN cd /build/APP && npm install && npm cache clean --force;\nRUN sed -i 's/useLocalMiddleware = true/useLocalMiddleware = false/g' /build/APP/src/environments/environment.local.ts\nRUN cd /build/APP && npm run build --prod\n\nFROM nginx:1.19.8-alpine as production\n\nARG ROLE\n\nCOPY docker/build/UI/${ROLE}.sh ./entrypoint.sh\n\nRUN apk add --no-cache dos2unix && dos2unix ./entrypoint.sh\n\nRUN apk add --no-cache --update nodejs nodejs-npm && npm install -g json && npm cache clean --force;\n\nCOPY docker/build/UI/nginx/default.conf /etc/nginx/conf.d/default.conf\n\nCOPY src/UI/${ROLE}/scripts /usr/share/nginx/html\n\nCOPY --from=builder /build/APP/dist /usr/share/nginx/html\n\nRUN [\"chmod\", \"+x\", \"./entrypoint.sh\"]\n\nCMD [\"sh\", \"/entrypoint.sh\"]\n"
}