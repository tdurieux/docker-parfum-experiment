diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlverse/torch/docker/build_env_tools/cuda-101/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlverse/torch/docker/build_env_tools/cuda-101/Dockerfile/repaired.Dockerfile
index e7da743..855d784 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlverse/torch/docker/build_env_tools/cuda-101/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlverse/torch/docker/build_env_tools/cuda-101/Dockerfile/repaired.Dockerfile
@@ -8,9 +8,9 @@ ARG R_VERSION_FULL=4.1.0
 ARG R_VERSION=4
 ENV CRAN=${CRAN:-https://cran.rstudio.com}
 ENV LC_ALL=en_US.UTF-8
-ENV LANG=en_US.UTF-8 
+ENV LANG=en_US.UTF-8
 ENV TERM=xterm
-ENV DEBIAN_FRONTEND=noninteractive   
+ENV DEBIAN_FRONTEND=noninteractive  
 
 RUN apt-get update && apt-get install -y --no-install-recommends bash-completion libbz2-dev \
     ca-certificates file fonts-texgyre g++ gfortran gsfonts libblas-dev libbz2-1.0 libcurl4 \
@@ -28,14 +28,20 @@ RUN apt-get update && apt-get install -y --no-install-recommends bash-completion
 ## Extract source code
   && tar -xf R-${R_VERSION_FULL}.tar.gz \
   && cd R-${R_VERSION_FULL} \
-## Set compiler flags
+## Set compiler flags \
   && R_PAPERSIZE=letter \
     R_BATCHSAVE="--no-save --no-restore" R_BROWSER=xdg-open PAGER=/usr/bin/pager PERL=/usr/bin/perl R_UNZIPCMD=/usr/bin/unzip \
     R_ZIPCMD=/usr/bin/zip R_PRINTCMD=/usr/bin/lpr LIBnn=lib AWK=/usr/bin/awk \
     CFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g" \
     CXXFLAGS="-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g" \
+
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
+
+
 ## Configure options
-    ./configure --enable-R-shlib --enable-memory-profiling --with-readline --with-blas --with-tcltk --disable-nls --with-recommended-packages \
+    --enable-R-shlib --enable-memory-profiling --with-readline --with-blas --with-tcltk --disable-nls --with-recommended-packages \
 ## Build and install
   && make \
   && make install \
@@ -60,7 +66,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends bash-completion
 ## Clean up from R source install
   && cd / \
   && rm -rf /tmp/* \
-  && rm -rf /var/lib/apt/lists/*
+  && rm -rf /var/lib/apt/lists/* && rm R-${R_VERSION_FULL}.tar.gz
 
 # Set up RStudio(Reference rocker/rstudio)
 ARG RSTUDIO_VERSION
@@ -133,7 +139,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends git libapparmor
           \nloadRData="0" \
           \nsaveAction="0"' \
           > /home/rstudio/.rstudio/monitored/user-settings/user-settings \
-  && chown -R rstudio:rstudio /home/rstudio/.rstudio
+  && chown -R rstudio:rstudio /home/rstudio/.rstudio && rm /tmp/s6-overlay-amd64.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 RUN wget -P /etc/cont-init.d/ -O userconf https://github.com/rocker-org/rocker-versioned/blob/master/rstudio/userconf.sh
 
@@ -152,7 +158,7 @@ RUN apt-get update -qq && apt-get -y --no-install-recommends install \
   libxml2-dev libcairo2-dev libsqlite-dev libmariadbd-dev libmariadbclient-dev \
   libpq-dev libssh2-1-dev unixodbc-dev libsasl2-dev \
   && Rscript -e "install.packages(c('tidyverse', 'dplyr', 'devtools', 'formatR', \
-        'remotes', 'selectr', 'caTools', 'BiocManager'))"
+        'remotes', 'selectr', 'caTools', 'BiocManager'))" && rm -rf /var/lib/apt/lists/*;
 
 # Set up localize(Reference tokyor/rstudio)
 # Change environment to Japanese(Character and DateTime)
@@ -165,7 +171,7 @@ RUN apt-get update -qq && apt-get -y --no-install-recommends install \
 # RUN ln -sf  /usr/share/zoneinfo/Asia/Tokyo /etc/localtime
 
 # Install ipaexfont and some requires
-RUN apt-get update && apt-get install -y fonts-ipaexfont vim curl
+RUN apt-get update && apt-get install --no-install-recommends -y fonts-ipaexfont vim curl && rm -rf /var/lib/apt/lists/*;
 
 # Install packages
 RUN Rscript -e "install.packages(c('githubinstall', 'ranger'))"