diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uclapi/uclapi/docker/deployment/nginx.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uclapi/uclapi/docker/deployment/nginx.Dockerfile/repaired.Dockerfile
index 0e0a67b..72658b1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uclapi/uclapi/docker/deployment/nginx.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uclapi/uclapi/docker/deployment/nginx.Dockerfile/repaired.Dockerfile
@@ -25,7 +25,7 @@ ENV AWS_BUCKET uclapi-dist
 #################################
 RUN apt-get update && \
     apt-get -y upgrade && \
-    apt-get install -y wget \
+    apt-get install --no-install-recommends -y wget \
                        curl \
                        supervisor \
                        libgeoip1 \
@@ -37,12 +37,12 @@ RUN apt-get update && \
                        sed \
                        git \
                        gnupg && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Installing Certbot
-RUN apt-get install -y python3 python3-dev libffi7 libffi-dev libssl-dev curl build-essential procps && \
-    curl -L 'https://bootstrap.pypa.io/get-pip.py' | python3 && \
-    pip install -U cffi certbot && \
+RUN apt-get install --no-install-recommends -y python3 python3-dev libffi7 libffi-dev libssl-dev curl build-essential procps && \
+    curl -f -L 'https://bootstrap.pypa.io/get-pip.py' | python3 && \
+    pip install --no-cache-dir -U cffi certbot && \
     apt-get remove --purge -y python3-dev build-essential libffi-dev libssl-dev && \
     apt-get autoremove -y && \
     apt-get clean && \
@@ -52,7 +52,8 @@ RUN apt-get install -y python3 python3-dev libffi7 libffi-dev libssl-dev curl bu
 ENV NGINX_AWS_URL https://${AWS_BUCKET}.s3.amazonaws.com/nginx
 
 RUN if [ "$NGINX_BUILD" = "latest" ]; \
-        then export NGINX_BUILD=`curl ${NGINX_AWS_URL}/LATEST_BUILD`; \
+        then \
+        export NGINX_BUILD=$( curl -f ${NGINX_AWS_URL}/LATEST_BUILD); \
     fi; \
     export NGINX_AWS_URL=${NGINX_AWS_URL}/${NGINX_BUILD}; \
     echo -n "Using Nginx Build: "; \
@@ -72,7 +73,7 @@ RUN if [ ${ENVIRONMENT} = "production" ]; \
     fi
 
 # Set up the SWITCH respository to get Shibboleth SP 3
-RUN wget http://pkg.switch.ch/switchaai/SWITCHaai-swdistrib.asc && \
+RUN wget https://pkg.switch.ch/switchaai/SWITCHaai-swdistrib.asc && \
     VERIFY_CHECKSUM=`shasum -a 256 SWITCHaai-swdistrib.asc | head -n1 | awk '{print $1;}'` && \
     echo $VERIFY_CHECKSUM && \
     if [ "$VERIFY_CHECKSUM" != "67f733e2cdb248e96275546146ea2997b6d0c0575c9a37cb66e00d6012a51f68" ]; then exit 1; fi; \
@@ -94,9 +95,9 @@ RUN if [ ${ENVIRONMENT} = "production" ]; \
 -out /web/internal-cert/cert.pem -subj "/C=GB/ST=London/L=London/O=DevOps/OU=Staging/CN=staging.ninja"; \
     fi
 
-RUN apt-get -y install shibboleth-sp-common shibboleth-sp-utils odbc-postgresql && \
+RUN apt-get -y --no-install-recommends install shibboleth-sp-common shibboleth-sp-utils odbc-postgresql && \
     apt-get clean && \
-    rm -rf /etc/shibboleth/*
+    rm -rf /etc/shibboleth/* && rm -rf /var/lib/apt/lists/*;
 
 COPY ./non-public/${ENVIRONMENT}/Shibboleth/* /etc/shibboleth/