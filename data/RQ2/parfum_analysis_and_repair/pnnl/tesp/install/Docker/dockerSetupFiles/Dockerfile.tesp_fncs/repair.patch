diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pnnl/tesp/install/Docker/dockerSetupFiles/Dockerfile.tesp_fncs b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pnnl/tesp/install/Docker/dockerSetupFiles/Dockerfile.tesp_fncs/repaired.Dockerfile
index e86156a..2a0d2d8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pnnl/tesp/install/Docker/dockerSetupFiles/Dockerfile.tesp_fncs
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pnnl/tesp/install/Docker/dockerSetupFiles/Dockerfile.tesp_fncs/repaired.Dockerfile
@@ -19,7 +19,7 @@ ENV EPLUSJSON_INSTALL=${TESP}/EPlusJSONInstall
 # Because I want to use the software versions I already have
 # installed on the current VM, I am going to use
 # directly the downloads and repositories I have, letting aside
-# the commands that are performing the actual downloads, and 
+# the commands that are performing the actual downloads, and
 # repository cloning.
 # Hence, from the context of the folder where I have all my downloads
 # and clones, I only add the needed ones.
@@ -67,7 +67,7 @@ RUN mkdir -p ${SOURCE_DIR} && \
 # ----------------------------------------------------
     cd ${SOURCE_DIR}/${FNCS_SOURCE} && \
     autoreconf -if && \
-    ./configure --prefix=${FNCS_INSTALL} && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${FNCS_INSTALL} && \
     make && \
     make install && \
     /bin/rm -r ${SOURCE_DIR}/${FNCS_SOURCE} && \
@@ -76,8 +76,8 @@ RUN mkdir -p ${SOURCE_DIR} && \
 # ----------------------------------------------------
     cd ${SOURCE_DIR}${GLD_SOURCE} && \
     autoreconf -isf && \
-    ./configure --prefix=${GLD_INSTALL} --with-fncs=${FNCS_INSTALL} --enable-silent-rules \
-    'CPP=gcc -E' 'CXXPP=g++ -E' 'CC=gcc' 'CXX=g++' \ 
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${GLD_INSTALL} --with-fncs=${FNCS_INSTALL} --enable-silent-rules \
+    'CPP=gcc -E' 'CXXPP=g++ -E' 'CC=gcc' 'CXX=g++' \ 'CXXPP=g++ -E' 'CC=gcc' 'CXX=g++' \
     'CFLAGS=-w -O3 -fno-inline-functions' 'CXXFLAGS=-w -O3 -fno-inline-functions -std=c++14' 'LDFLAGS=-w -O3' && \
     make && \
     make install && \
@@ -103,7 +103,7 @@ RUN mkdir -p ${SOURCE_DIR} && \
     aclocal && \
     automake --add-missing && \
     autoreconf -if && \
-    ./configure --prefix=${EPLUSJSON_INSTALL} --with-fncs=${FNCS_INSTALL} && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${EPLUSJSON_INSTALL} --with-fncs=${FNCS_INSTALL} && \
     make && \
     make install && \
     /bin/rm -r ${SOURCE_DIR}/${EPLUSJSON_SOURCE} && \
@@ -127,4 +127,4 @@ ENV FNCS_LIBRARY=${FNCS_INSTALL}/lib
 ENV FNCS_INCLUDE_DIR=${FNCS_INSTALL}/include
 ENV PATH=${PATH}:${FNCS_INSTALL}/bin:${GLD_INSTALL}/bin:${EPLUS_INSTALL}:${EPLUS_INSTALL}/PreProcess:${EPLUS_INSTALL}/PostProcess:${EPLUSJSON_INSTALL}/bin
 ENV GLPATH=${GLD_INSTALL}/lib/gridlabd:${GLD_INSTALL}/share/gridlabd
-COPY --from=tesp-fncs-builder --chown=tesp-user ${WORK_DIR} ${WORK_DIR} 
\ No newline at end of file
+COPY --from=tesp-fncs-builder --chown=tesp-user ${WORK_DIR} ${WORK_DIR}
\ No newline at end of file