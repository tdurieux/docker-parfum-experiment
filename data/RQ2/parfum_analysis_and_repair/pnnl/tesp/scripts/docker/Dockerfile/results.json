{
  "startTime": 1674256010901,
  "endTime": 1674256012323,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 35,
        "columnEnd": 127
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 35,
        "columnEnd": 115
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 35,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 35,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 35,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 35,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 35,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU=ubuntu\nARG UBUNTU_VERSION=:20.04\n\nFROM ${UBUNTU}${UBUNTU_VERSION} AS ubuntu-base\n\nENV USER_NAME=tesp-user\nENV TESP_HOME=/home/${USER_NAME}\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n  export DEBCONF_NONINTERACTIVE_SEEN=true && \\\n  apt-get update && \\\n  echo \"===== UPGRADING =====\" && \\\n  apt-get upgrade -y && \\\n  echo \"===== INSTALL STUFF =====\" && \\\n  apt-get install --no-install-recommends -y \\\n  sudo \\\n  wget \\\n  pkgconf \\\n  git \\\n  build-essential \\\n  autoconf \\\n  libtool \\\n  libjsoncpp-dev \\\n  gfortran \\\n  cmake \\\n  subversion \\\n  unzip \\\n  # Java support\n  openjdk-11-jdk \\\n  # for HELICS and FNCS\n  libzmq5-dev \\\n  libczmq-dev \\\n  libboost-dev \\\n  # for GridLAB-D\n  libxerces-c-dev \\\n  libhdf5-serial-dev \\\n  libsuitesparse-dev \\\n  # end users replace libsuitesparse-dev with libklu1, which is licensed LGPL\n  # for solvers Ipopt/cbc used by AMES/Agents\n  coinor-cbc \\\n  coinor-libcbc-dev \\\n  coinor-libipopt-dev \\\n  liblapack-dev \\\n  libmetis-dev \\\n  # Python support\n  # if not using miniconda (avoid Python 3.7 on Ubuntu for now)\n  python3-pip \\\n  python3-tk && \\\n  ln -s /usr/lib/jvm/java-11-openjdk-amd64 /usr/lib/jvm/default-java && \\\n  echo \"root:tesp\" | chpasswd && \\\n  echo \"<<<< Adding the TESP user >>>>\" && \\\n  useradd -m -s /bin/bash ${USER_NAME} && \\\n  echo \"<<<< Changing new user password >>>>\" && \\\n  echo \"${USER_NAME}:${USER_NAME}\" | chpasswd && \\\n  usermod -aG sudo ${USER_NAME} && rm -rf /var/lib/apt/lists/*;\n\nUSER ${USER_NAME}\nWORKDIR ${TESP_HOME}\n\nFROM ubuntu-base AS tesp-production\n\nENV TESPDIR=${TESP_HOME}/tesp/repository/tesp\nENV INSTDIR=${TESP_HOME}/tesp/installed\nENV REPODIR=${TESP_HOME}/tesp/repository\nENV WAREDIR=${TESP_HOME}/tesp/software\nENV TESPBUILD=$TESPDIR/scripts/build\nENV TESPHELPR=$TESPDIR/scripts/helpers\n\nENV GLPATH=$INSTDIR/lib/gridlabd:$INSTDIR/share/gridlabd\nENV FNCS_INCLUDE_DIR=$INSTDIR/include\nENV FNCS_LIBRARY=$INSTDIR/lib\nENV CPLUS_INCLUDE_PATH=/usr/include/hdf5/serial\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$INSTDIR/lib\n\n# JAVA_HOME\nENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\n\n# PYHELICS_INSTALL\nENV PYHELICS_INSTALL=$INSTDIR\n\n# PATH\nENV PATH=$PATH:$JAVA_HOME\nENV PATH=$PATH:$INSTDIR/bin\nENV PATH=$PATH:$INSTDIR/energyplus\nENV PATH=$PATH:$INSTDIR/energyplus/PreProcess\nENV PATH=$PATH:$INSTDIR/energyplus/PostProcess\nENV PATH=$PATH:$TESPHELPR\n\n# PSST environment variables\nENV PSST_SOLVER=cbc\n# 'PSST_SOLVER path' -- one of \"cbc\", \"ipopt\", \"/ibm/cplex/bin/x86-64_linux/cplexamp\"\nENV PSST_WARNING=ignore\n\nRUN git config --global user.name \"${USER_NAME}\" && \\\n  git config --global user.email \"${USER_NAME}@${USER_NAME}.com\" && \\\n  echo \"User .name=${USER_NAME} and .email=${USER_NAME}@${USER_NAME}.com have been set for git repositories!\" && \\\n  git config --global credential.helper store && \\\n  echo \"Create directory structure for TESP\" && \\\n  cd ${HOME} && \\\n  mkdir -p tesp && \\\n  cd tesp && \\\n  mkdir -p repository && \\\n  mkdir -p installed && \\\n  mkdir -p software && \\\n  cd repository && \\\n  echo \"++++++++++++++ TESP\" && \\\n  git clone -b main https://github.com/pnnl/tesp.git && \\\n  echo \"Download all relevant repositories...\" && \\\n  echo \"++++++++++++++ PSST\" && \\\n  git clone https://github.com/ames-market/AMES-V5.0.git && \\\n  echo \"Applying the patch for AMES...... from ${TESPBUILD}\" && \\\n  ${TESPBUILD}/patch.sh AMES-V5.0 AMES-V5.0 && \\\n  echo \"++++++++++++++ FNCS\" && \\\n  git clone -b feature/opendss https://github.com/FNCS/fncs.git && \\\n  ${TESPBUILD}/patch.sh fncs fncs && \\\n  echo \"++++++++++++++ HELICS\" && \\\n  git clone -b main https://github.com/GMLC-TDC/HELICS-src && \\\n  \"${TESPBUILD}\"/patch.sh HELICS-src HELICS-src && \\\n  echo \"++++++++++++++ GRIDLAB\" && \\\n  git clone -b develop https://github.com/gridlab-d/gridlab-d.git && \\\n  \"${TESPBUILD}\"/patch.sh gridlab-d gridlab-d && \\\n  echo \"++++++++++++++ ENERGYPLUS\" && \\\n  git clone -b fncs_9.3.0 https://github.com/FNCS/EnergyPlus.git && \\\n  \"${TESPBUILD}\"/patch.sh EnergyPlus EnergyPlus && \\\n  echo \"++++++++++++++ NS-3\" && \\\n  git clone https://gitlab.com/nsnam/ns-3-dev.git && \\\n  \"${TESPBUILD}\"/patch.sh ns-3-dev ns-3-dev && \\\n  echo \"++++++++++++++ HELICS-NS-3\" && \\\n  cd ns-3-dev && \\\n  git clone -b helics3-update-v2 https://github.com/GMLC-TDC/helics-ns3 contrib/helics && \\\n  cd .. && \\\n  echo \"++++++++++++++ KLU SOLVER\" && \\\n  svn export https://github.com/gridlab-d/tools/branches/klu-build-update/solver_klu/source/KLU_DLL && \\\n  cd ${TESPDIR}/scripts && \\\n  echo \"++++++++++++++  Compiling and Installing TESP software is starting!  ++++++++++++++\" && \\\n  # Install all pip libraries\n  echo \"Installing Python Libraries...\" && \\\n  echo \"${USER_NAME}\" | sudo -S -H pip3 install --no-cache-dir wheel colorama glm seaborn matplotlib networkx numpy pandas pulp xlrd pkgconfig && \\\n  echo \"${USER_NAME}\" | sudo -S -H pip3 install --no-cache-dir pyutilib==5.8.0 pyomo==5.6.8 PYPOWER scikit-learn scipy tables h5py && \\\n  #develop tesp api\n  echo \"Installing Python TESP API...\" && \\\n  cd \"${TESPDIR}/src/tesp_support\" && \\\n  echo \"${USER_NAME}\" | sudo -S -H pip3 install --no-cache-dir -e . && \\\n  #develop psst api\n  echo \"Installing Python PSST...\" && \\\n  cd \"${REPODIR}/AMES-V5.0/psst\" && \\\n  echo \"${USER_NAME}\" | sudo -S -H pip3 install --no-cache-dir -e . && \\\n  cd \"${TESPBUILD}\" && \\\n  echo \"Compiling and Installing FNCS...\" && \\\n  ./fncs_b.sh clean && \\\n  echo \"Compiling and Installing FNCS for Java...\" && \\\n  ./fncs_j_b.sh clean && \\\n  /bin/rm -r ${REPODIR}/fncs && \\\n  echo \"Compiling and Installing HELICS...\" && \\\n  ./HELICS-src_b.sh clean && \\\n  /bin/rm -r  ${REPODIR}/HELICS-src && \\\n  echo \"${USER_NAME}\" | sudo -S -H pip3 install --no-cache-dir helics && \\\n  echo \"============ HELICS CLI ==================\" && \\\n  echo \"${USER_NAME}\" | sudo -S -H pip3 install --no-cache-dir git+https://github.com/GMLC-TDC/helics-cli.git@main && \\\n  # HELICS APPS\n  echo \"============ HELICS APPS ==================\" && \\\n  echo \"${USER_NAME}\" | sudo -S -H pip3 install --no-cache-dir --upgrade helics-apps && \\\n  echo \"Compiling and Installing KLU...\" && \\\n  ./KLU_DLL_b.sh clean && \\\n  /bin/rm -r ${REPODIR}/KLU_DLL && \\\n  echo \"Compiling and Installing Gridlabd...\" && \\\n  ./gridlab-d_b.sh clean && \\\n  /bin/rm -r ${REPODIR}/gridlab-d && \\\n  echo \"Compiling and Installing EnergyPlus...\" && \\\n  ./EnergyPlus_b.sh clean && \\\n  /bin/rm -r ${REPODIR}/EnergyPlus && \\\n  echo \"Compiling and Installing EnergyPlus for Java...\" && \\\n  ./EnergyPlus_j_b.sh clean && \\\n  echo \"Compiling and Installing NS-3...\" && \\\n  ./ns-3-dev_b.sh clean && \\\n  /bin/rm -r ${REPODIR}/ns-3-dev && \\\n  echo \"Compiling and Installing Ipopt with ASL and Mumps...\" && \\\n  ./ipopt_b.sh clean && \\\n  /bin/rm -r ${WAREDIR} && \\\n  echo \"Compiling and Installing TMY3toTMY2_ansi...\" && \\\n  cd \"${TESPDIR}/data/weather/TMY2EPW/source_code\" && \\\n  gcc TMY3toTMY2_ansi.c -o TMY3toTMY2_ansi && \\\n  /bin/mv TMY3toTMY2_ansi \"${INSTDIR}/bin\" && \\\n  echo \"${USER_NAME}\" | sudo -S ldconfig && \\\n  cd \"${TESPBUILD}\" && \\\n  ./versions.sh"
}