{
  "startTime": 1674254101969,
  "endTime": 1674254102986,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 147,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# base layer - python3.7\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-suggests --no-install-recommends -y \\\n        wget ca-certificates locales git python3.7 python3.7-dev make gcc g++ && \\\n    echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen && \\\n    ln -s ./python3.7 /usr/bin/python3 && \\\n    apt-get download python3-distutils && \\\n    dpkg -x python3-distutils* / && \\\n    rm python3-distutils* && \\\n    wget -O - https://bootstrap.pypa.io/get-pip.py | python3 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# nvidia driver layer\nENV NVIDIA_DRIVER_VERSION 384.130\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y kmod && \\\n    mkdir -p /opt/nvidia && cd /opt/nvidia/ && \\\n    wget https://us.download.nvidia.com/XFree86/Linux-x86_64/${NVIDIA_DRIVER_VERSION}/NVIDIA-Linux-x86_64-${NVIDIA_DRIVER_VERSION}.run -O /opt/nvidia/driver.run && \\\n    chmod +x /opt/nvidia/driver.run && \\\n    /opt/nvidia/driver.run -a -s --no-nvidia-modprobe --no-kernel-module --no-unified-memory --no-x-check --no-opengl-files && \\\n    rm -rf /opt/nvidia && \\\n    apt-get remove -y kmod && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# cuda layer\nENV CUDA_VERSION 9.2.88\nENV CUDA_VERSION_DASH 9-2\nENV CUDA_VERSION_MAJOR 9.2\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gnupg && \\\n    wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_${CUDA_VERSION}-1_amd64.deb && \\\n    dpkg -i cuda-repo-ubuntu1604_${CUDA_VERSION}-1_amd64.deb && \\\n    rm cuda-repo-ubuntu1604_${CUDA_VERSION}-1_amd64.deb && \\\n    apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/7fa2af80.pub && \\\n    apt-get update && \\\n    apt-get -y install --no-install-suggests --no-install-recommends \\\n        cuda-cublas-${CUDA_VERSION_DASH} \\\n        cuda-cudart-${CUDA_VERSION_DASH} \\\n        cuda-cufft-${CUDA_VERSION_DASH} \\\n        cuda-curand-${CUDA_VERSION_DASH} \\\n        cuda-cusolver-${CUDA_VERSION_DASH} \\\n        cuda-cusparse-${CUDA_VERSION_DASH} && \\\n    sed -i 's#\"$#:/usr/local/cuda-${CUDA_VERSION_MAJOR}/bin\"#' /etc/environment && \\\n    apt-get remove -y gnupg && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\nENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/cuda-${CUDA_VERSION_MAJOR}/bin\n\n# cudnn layer\nADD libcudnn7_7.1.4.18-1+cuda9.2_amd64.deb /\nRUN dpkg -i /libcudnn7_7.1.4.18-1+cuda9.2_amd64.deb && rm libcudnn7_7.1.4.18-1+cuda9.2_amd64.deb\n\n# pip deps\nRUN pip3 install --no-cache-dir numpy\n\n# build and install tensorflow\nENV BAZEL_VERSION 0.15.0\nADD libcudnn7-dev_7.1.4.18-1+cuda9.2_amd64.deb /\nADD 0001-Port-to-Python-3.7.patch /\nADD 0002-Update-Cython.patch /\nRUN apt-get update && \\\n    dpkg -i /libcudnn7-dev_7.1.4.18-1+cuda9.2_amd64.deb && \\\n    rm libcudnn7-dev_7.1.4.18-1+cuda9.2_amd64.deb && \\\n    apt-get install -y --no-install-suggests --no-install-recommends \\\n        unzip \\\n        cuda-command-line-tools-${CUDA_VERSION_DASH} \\\n        cuda-cublas-dev-${CUDA_VERSION_DASH} \\\n        cuda-cudart-dev-${CUDA_VERSION_DASH} \\\n        cuda-cufft-dev-${CUDA_VERSION_DASH} \\\n        cuda-curand-dev-${CUDA_VERSION_DASH} \\\n        cuda-cusolver-dev-${CUDA_VERSION_DASH} \\\n        cuda-cusparse-dev-${CUDA_VERSION_DASH} && \\\n    wget https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh && \\\n    chmod +x ./bazel-*.sh && \\\n    ./bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh && \\\n    rm ./bazel-${BAZEL_VERSION}-installer-linux-x86_64.sh && \\\n    git clone --single-branch --depth 1 --branch r1.9 https://github.com/tensorflow/tensorflow && \\\n    cd tensorflow && \\\n    git apply /0001-Port-to-Python-3.7.patch && \\\n    git apply /0002-Update-Cython.patch && \\\n    rm /*.patch && \\\n    echo 'export PYTHON_BIN_PATH=\"/usr/bin/python3\"' > tools/python_bin_path.sh && \\\n    echo 'import /tensorflow/.tf_configure.bazelrc' > .bazelrc && \\\n    echo 'build --action_env PYTHON_BIN_PATH=\"/usr/bin/python3\"\\n\\\nbuild --action_env PYTHON_LIB_PATH=\"/usr/lib/python3/dist-packages\"\\n\\\nbuild --python_path=\"/usr/bin/python3\"\\n\\\nbuild --define with_jemalloc=true\\n\\\nbuild:gcp --define with_gcp_support=false\\n\\\nbuild:hdfs --define with_hdfs_support=false\\n\\\nbuild:s3 --define with_s3_support=false\\n\\\nbuild:kafka --define with_kafka_support=false\\n\\\nbuild:xla --define with_xla_support=false\\n\\\nbuild:gdr --define with_gdr_support=false\\n\\\nbuild:verbs --define with_verbs_support=false\\n\\\nbuild --action_env TF_NEED_OPENCL_SYCL=\"0\"\\n\\\nbuild --action_env TF_NEED_CUDA=\"1\"\\n\\\nbuild --action_env CUDA_TOOLKIT_PATH=\"/usr/local/cuda-9.2\"\\n\\\nbuild --action_env TF_CUDA_VERSION=\"9.2\"\\n\\\nbuild --action_env CUDNN_INSTALL_PATH=\"/usr/lib/x86_64-linux-gnu\"\\n\\\nbuild --action_env TF_CUDNN_VERSION=\"7\"\\n\\\nbuild --action_env TF_NCCL_VERSION=\"1\"\\n\\\nbuild --action_env TF_CUDA_COMPUTE_CAPABILITIES=\"3.7,6.1,7.0\"\\n\\\nbuild --action_env TF_CUDA_CLANG=\"0\"\\n\\\nbuild --action_env GCC_HOST_COMPILER_PATH=\"/usr/bin/gcc\"\\n\\\nbuild --config=cuda\\n\\\ntest --config=cuda\\n\\\nbuild --define grpc_no_ares=true\\n\\\nbuild:opt --copt=-march=native\\n\\\nbuild:opt --host_copt=-march=native\\n\\\nbuild:opt --define with_default_optimizations=true\\n\\\nbuild --strip=always' > .tf_configure.bazelrc && \\\n    cat .tf_configure.bazelrc && \\\n    ln -s python3 /usr/bin/python && \\\n    bazel build --config opt '@protobuf_archive//:src/google/protobuf/any.h' && \\\n    find bazel-tensorflow/external/protobuf_archive/python/google/protobuf/pyext -name '*.cc' -exec sed -i \"s/PyUnicode_AsUTF8AndSize(/(char*)PyUnicode_AsUTF8AndSize(/g\" {} \\; && \\\n    bazel build --config=cuda --config=opt --config=monolithic //tensorflow/tools/pip_package:build_pip_package && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp && \\\n    pip --no-cache-dir install /tmp/tensorflow-*.whl && \\\n    rm /tmp/tensorflow-*.whl && \\\n    bazel shutdown && \\\n    cd .. && \\\n    rm -rf tensorflow && \\\n    rm -rf /root/.bazel /root/.cache/bazel && \\\n    apt-get remove -y \\\n        unzip \\\n        cuda-command-line-tools-${CUDA_VERSION_DASH} \\\n        cuda-cublas-dev-${CUDA_VERSION_DASH} \\\n        cuda-cudart-dev-${CUDA_VERSION_DASH} \\\n        cuda-cufft-dev-${CUDA_VERSION_DASH} \\\n        cuda-curand-dev-${CUDA_VERSION_DASH} \\\n        cuda-cusolver-dev-${CUDA_VERSION_DASH} \\\n        cuda-cusparse-dev-${CUDA_VERSION_DASH} && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install FractalAI deps\nENV NPY_NUM_BUILD_JOBS 8\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y cmake pkg-config flex bison curl libpng16-16 libpng-dev libjpeg-turbo8 \\\n        libjpeg-turbo8-dev zlib1g-dev libhdf5-100 libhdf5-dev libopenblas-base libopenblas-dev gfortran \\\n        libfreetype6 libfreetype6-dev && \\\n    pip3 install --no-cache-dir cython && \\\n    pip3 install --no-cache-dir \\\n        git+https://github.com/openai/gym \\\n        git+https://github.com/ray-project/ray#subdirectory=python \\\n        git+https://github.com/Guillem-db/atari-py \\\n        networkx jupyter keras h5py Pillow-simd PyOpenGL matplotlib && \\\n    python3 -c \"import matplotlib; matplotlib.use('Agg'); import matplotlib.pyplot\" && \\\n    pip3 uninstall -y cython && \\\n    apt-get remove -y cmake cmake pkg-config flex bison curl libpng-dev \\\n        libjpeg-turbo8-dev zlib1g-dev libhdf5-dev libopenblas-dev gfortran \\\n        libfreetype6-dev && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# FractalAI\nADD . /fractalai\nRUN rm /fractalai/*.patch /fractalai/*.deb && \\\n    pip3 install --no-cache-dir -e /fractalai && \\\n    apt-get remove -y gcc g++ make git && \\\n    apt-get autoremove -y\n\n#Jupyter notebook\nRUN mkdir /root/.jupyter && \\\n    echo 'c.NotebookApp.token = \"mallorca\"' > /root/.jupyter/jupyter_notebook_config.py\nCMD jupyter notebook --allow-root --port 8080 --ip 0.0.0.0\n"
}