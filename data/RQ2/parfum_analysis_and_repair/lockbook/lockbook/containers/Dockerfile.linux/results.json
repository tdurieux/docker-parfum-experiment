{
  "startTime": 1674255020086,
  "endTime": 1674255021057,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 162
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 162
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 162
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG HASH\nFROM ubuntu:jammy AS linux-build\n\nRUN apt update && apt install --no-install-recommends -y curl build-essential libglib2.0-dev libcairo2-dev libpango1.0-dev libgdk-pixbuf-2.0-dev libgraphene-1.0-dev libgtk-4-dev libgtksourceview-5-dev && rm -rf /var/lib/apt/lists/*;\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\nRUN rustup component add rustfmt\nRUN rustup component add clippy\n\nWORKDIR linux\n\n# Linux depends on core via a relative import\nCOPY core/Cargo.toml /core/Cargo.toml\nCOPY core/libs/models/Cargo.toml /core/libs/models/Cargo.toml\nCOPY core/libs/crypto/Cargo.toml /core/libs/crypto/Cargo.toml\n\n# Required to get cargo to get and compile deps but not our source\n# https://blog.mgattozzi.dev/caching-rust-docker-builds/\nCOPY containers/dummy.rs /core/src/lib.rs\nCOPY containers/dummy.rs /core/libs/models/src/lib.rs\nCOPY containers/dummy.rs /core/libs/crypto/src/lib.rs\n\nCOPY containers/dummy.rs src/main.rs\nCOPY clients/linux/Cargo.toml .\nCOPY rustfmt.toml .\nRUN cargo build --release\n\n# Build our source\nCOPY clients/linux .\nCOPY core /core\n\n# Cargo thinks this file hasn't changed on the filesystem\nRUN touch src/main.rs\nRUN touch /core/src/lib.rs\nRUN touch /core/libs/models/src/lib.rs\nRUN touch /core/libs/crypto/src/lib.rs\nRUN cargo build --release\n\n# Check the formatting of core\nFROM linux:${HASH} AS linux-fmt\nRUN cargo fmt -- --check -l\n\n# Check the lint of core\nFROM linux:${HASH} AS linux-lint\nRUN cargo clippy -- -D warnings\n\n# Run core tests\nFROM linux:${HASH} AS linux-test\nRUN cargo test --release\n"
}