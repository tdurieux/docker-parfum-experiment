{
  "startTime": 1674250491387,
  "endTime": 1674250492397,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 26,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 26,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 26,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 26,
        "columnEnd": 111
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright (c) Contributors to the Open 3D Engine Project.\n# For complete copyright and license terms please see the LICENSE at the root of this distribution.\n#\n# SPDX-License-Identifier: Apache-2.0 OR MIT\n#\n\n# This is a base Dockerfile to use for self-containing local or remote development environments\n#\n# Once docker is installed, build a local image with this command:\n# `docker build /localDockerfilepath -t ubuntu-build:latest`\n#\n# To build using a local repo on disk, run this command:\n# `docker run -it -v /localo3depath:/data/workspace/o3de -v /localbuildpath:/data/workspace/o3de/build -v /local3rdPartypath:/root/.o3de/3rdParty \\\n# --name build-o3de -d ubuntu-build:latest /bin/sh -c 'cd /data/workspace/o3de && python/python.sh -u scripts/build/ci_build.py --platform Linux --type profile'`\n#\n# Attach to the running build to interact or view logs using this command:\n# `docker attach build-o3de`\n\nFROM ubuntu:20.04\n\nWORKDIR /data/workspace\n\n# Initilize apt cache\nRUN apt-get clean && apt-get update\n\n# Setup time zone and locale data (necessary for SSL and HTTPS packages)\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends -y install tzdata locales keyboard-configuration && rm -rf /var/lib/apt/lists/*;\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\n\nENV LANG=en_US.UTF-8\n\n# Install common tools\nRUN apt-get -y --no-install-recommends install tar sudo less vim lsof firewalld net-tools pciutils \\\n                   file wget kmod xz-utils ca-certificates binutils kbd \\\n                   python3-pip bind9-utils jq bc unzip git git-lfs lsb-release \\\n                   software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Install build and development tools\nRUN git clone --no-checkout https://github.com/o3de/o3de.git .o3de && \\\n    cd .o3de && \\\n    git sparse-checkout init --cone && \\\n    git sparse-checkout set scripts/build/build_node && \\\n    cd scripts/build/build_node/Platform/Linux && \\\n    ./install-ubuntu.sh\n\n# Install supported version of cmake if build tool installation runs into issues\nENV CMAKE_VER=3.21.1-0kitware1ubuntu20.04.1\nRUN $(cmake --version) || apt-get -y --no-install-recommends install cmake=${CMAKE_VER} cmake-data=${CMAKE_VER} && rm -rf /var/lib/apt/lists/*;\n\n# Symlink clang version to non-versioned clang and set cc to clang\nRUN find /usr/bin/ -name clang*  | sed -E 's/^(\\/usr\\/bin\\/.*)(\\-[0-9]*)$/ln -s -v \\1\\2 \\1/' | xargs -d '\\n' -n 1 bash -c && \\\n    update-alternatives --install /usr/bin/cc cc /usr/bin/clang 100 && \\\n    update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 100\n"
}