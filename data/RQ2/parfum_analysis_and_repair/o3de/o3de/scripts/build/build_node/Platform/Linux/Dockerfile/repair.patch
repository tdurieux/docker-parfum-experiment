diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/o3de/o3de/scripts/build/build_node/Platform/Linux/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/o3de/o3de/scripts/build/build_node/Platform/Linux/Dockerfile/repaired.Dockerfile
index 0bbbcb3..e486680 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/o3de/o3de/scripts/build/build_node/Platform/Linux/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/o3de/o3de/scripts/build/build_node/Platform/Linux/Dockerfile/repaired.Dockerfile
@@ -13,19 +13,19 @@
 # To build using a local repo on disk, run this command:
 # `docker run -it -v /localo3depath:/data/workspace/o3de -v /localbuildpath:/data/workspace/o3de/build -v /local3rdPartypath:/root/.o3de/3rdParty \
 # --name build-o3de -d ubuntu-build:latest /bin/sh -c 'cd /data/workspace/o3de && python/python.sh -u scripts/build/ci_build.py --platform Linux --type profile'`
-# 
+#
 # Attach to the running build to interact or view logs using this command:
 # `docker attach build-o3de`
 
 FROM ubuntu:20.04
- 
+
 WORKDIR /data/workspace
 
 # Initilize apt cache
 RUN apt-get clean && apt-get update
 
 # Setup time zone and locale data (necessary for SSL and HTTPS packages)
-RUN DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata locales keyboard-configuration
+RUN DEBIAN_FRONTEND="noninteractive" apt-get --no-install-recommends -y install tzdata locales keyboard-configuration && rm -rf /var/lib/apt/lists/*;
 
 RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
     dpkg-reconfigure --frontend=noninteractive locales && \
@@ -34,11 +34,11 @@ RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
 ENV LANG=en_US.UTF-8
 
 # Install common tools
-RUN apt-get -y install tar sudo less vim lsof firewalld net-tools pciutils \
+RUN apt-get -y --no-install-recommends install tar sudo less vim lsof firewalld net-tools pciutils \
                    file wget kmod xz-utils ca-certificates binutils kbd \
                    python3-pip bind9-utils jq bc unzip git git-lfs lsb-release \
-                   software-properties-common
- 
+                   software-properties-common && rm -rf /var/lib/apt/lists/*;
+
 # Install build and development tools
 RUN git clone --no-checkout https://github.com/o3de/o3de.git .o3de && \
     cd .o3de && \
@@ -49,7 +49,7 @@ RUN git clone --no-checkout https://github.com/o3de/o3de.git .o3de && \
 
 # Install supported version of cmake if build tool installation runs into issues
 ENV CMAKE_VER=3.21.1-0kitware1ubuntu20.04.1
-RUN $(cmake --version) || apt-get -y install cmake=${CMAKE_VER} cmake-data=${CMAKE_VER}
+RUN $(cmake --version) || apt-get -y --no-install-recommends install cmake=${CMAKE_VER} cmake-data=${CMAKE_VER} && rm -rf /var/lib/apt/lists/*;
 
 # Symlink clang version to non-versioned clang and set cc to clang
 RUN find /usr/bin/ -name clang*  | sed -E 's/^(\/usr\/bin\/.*)(\-[0-9]*)$/ln -s -v \1\2 \1/' | xargs -d '\n' -n 1 bash -c && \