{
  "startTime": 1674249154529,
  "endTime": 1674249155111,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.14.1-alpine as build\n# working directory\nWORKDIR /usr/src/app\n\n# global environment setup : yarn + dependencies needed to support node-gyp\nRUN apk --no-cache --virtual add \\\n    python \\\n    make \\\n    g++ \\\n    yarn\n\n# copy just the dependency files and configs needed for install\nCOPY packages/create-pwa/package.json ./packages/create-pwa/package.json\nCOPY packages/babel-preset-peregrine/package.json ./packages/babel-preset-peregrine/package.json\nCOPY packages/graphql-cli-validate-magento-pwa-queries/package.json ./packages/graphql-cli-validate-magento-pwa-queries/package.json\nCOPY packages/peregrine/package.json ./packages/peregrine/package.json\nCOPY packages/pwa-buildpack/package.json ./packages/pwa-buildpack/package.json\nCOPY packages/upward-js/package.json ./packages/upward-js/package.json\nCOPY packages/upward-spec/package.json ./packages/upward-spec/package.json\nCOPY packages/venia-ui/package.json ./packages/venia-ui/package.json\nCOPY packages/venia-concept/package.json ./packages/venia-concept/package.json\nCOPY package.json yarn.lock babel.config.js magento-compatibility.js ./\nCOPY scripts/monorepo-introduction.js ./scripts/monorepo-introduction.js\nCOPY lerna.json ./lerna.json\n\n# install dependencies with yarn\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# copy over the rest of the package files\nCOPY packages ./packages\n\n# copy configuration env file from host file system to venia-concept .env for build\nCOPY ./docker/.env.docker.prod ./packages/venia-concept/.env\n\n# run yarn again to reestablish workspace symlinks\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nENV NODE_ENV=production\n# build the app\nRUN yarn run build\n\n\n# MULTI-STAGE BUILD\nFROM node:10.14.1-alpine\n# working directory\nWORKDIR /usr/src/app\n# node:alpine comes with a configured user and group\nRUN chown -R node:node /usr/src/app\n# copy build from previous stage\nCOPY --from=build /usr/src/app .\nUSER node\nEXPOSE 8080\nENV NODE_ENV=production\n# command to run application\nCMD [ \"yarn\", \"stage:venia\" ]\n"
}