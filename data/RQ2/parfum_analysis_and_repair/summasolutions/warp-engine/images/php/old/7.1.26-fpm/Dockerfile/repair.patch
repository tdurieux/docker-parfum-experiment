diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/summasolutions/warp-engine/images/php/old/7.1.26-fpm/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/summasolutions/warp-engine/images/php/old/7.1.26-fpm/Dockerfile/repaired.Dockerfile
index d8c53a8..b3db347 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/summasolutions/warp-engine/images/php/old/7.1.26-fpm/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/summasolutions/warp-engine/images/php/old/7.1.26-fpm/Dockerfile/repaired.Dockerfile
@@ -6,15 +6,15 @@ ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-gr
 
 RUN apt-get update
 
-RUN apt-get install -y cron
+RUN apt-get install --no-install-recommends -y cron && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y supervisor
+RUN apt-get install --no-install-recommends -y supervisor && rm -rf /var/lib/apt/lists/*;
 
 RUN \
-  apt-get install -y \
+  apt-get install --no-install-recommends -y \
   libcurl4-gnutls-dev \
   libxml2-dev \
-  libssl-dev
+  libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN \
     /usr/local/bin/docker-php-ext-install \
@@ -26,7 +26,7 @@ RUN \
 # Configure PHP
 # php module build deps
 RUN \
-  apt-get install -y \
+  apt-get install --no-install-recommends -y \
   g++ \
   autoconf \
   libbz2-dev \
@@ -55,7 +55,7 @@ RUN \
   vim \
   wget \
   librabbitmq-dev \
-  libzip-dev
+  libzip-dev && rm -rf /var/lib/apt/lists/*;
 
 
 # https://devdocs.magento.com/guides/v2.3/install-gde/system-requirements-tech.html
@@ -77,20 +77,20 @@ RUN \
     opcache \
     zip
 
-RUN apt-get update && \ 
-    apt-get install libldap2-dev -y && \ 
+RUN apt-get update && \
+    apt-get install --no-install-recommends libldap2-dev -y && \
     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \
-    docker-php-ext-install ldap
+    docker-php-ext-install ldap && rm -rf /var/lib/apt/lists/*;
 
 # Install Node, NVM, NPM and Grunt
 
-RUN curl -sL https://deb.nodesource.com/setup_11.x | bash - \
-    && apt-get install -y nodejs build-essential \
-    && curl https://raw.githubusercontent.com/creationix/nvm/v0.16.1/install.sh | sh \
-    && npm i -g grunt-cli yarn
+RUN curl -f -sL https://deb.nodesource.com/setup_11.x | bash - \
+    && apt-get install --no-install-recommends -y nodejs build-essential \
+    && curl -f https://raw.githubusercontent.com/creationix/nvm/v0.16.1/install.sh | sh \
+    && npm i -g grunt-cli yarn && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;
 
 # Install fontforge https://github.com/sapegin/grunt-webfont#installation
-RUN apt-get install -y fontforge ttfautohint
+RUN apt-get install --no-install-recommends -y fontforge ttfautohint && rm -rf /var/lib/apt/lists/*;
 
 # Make sure the volume mount point is empty
 RUN rm -rf /var/www/html/*
@@ -111,14 +111,14 @@ RUN mkdir -p /var/log/php-fpm && \
     chown -R www-data:www-data /var/log/php-fpm
 
 # Install module for Postgress
-RUN apt-get install -y libpq-dev \
+RUN apt-get install --no-install-recommends -y libpq-dev \
     && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \
-    && docker-php-ext-install pdo pdo_pgsql pgsql
+    && docker-php-ext-install pdo pdo_pgsql pgsql && rm -rf /var/lib/apt/lists/*;
 
 RUN docker-php-ext-configure gd --with-freetype-dir=/usr --with-jpeg-dir=/usr --with-png-dir=/usr \
     && docker-php-ext-install gd
 
-RUN curl -sS https://getcomposer.org/installer | \
+RUN curl -f -sS https://getcomposer.org/installer | \
   php -- --install-dir=/usr/local/bin --filename=composer
 
 RUN pecl install -o -f xdebug