diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/r-hub/rhub-server/linux-builder/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/r-hub/rhub-server/linux-builder/Dockerfile/repaired.Dockerfile
index 5609673..273f947 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/r-hub/rhub-server/linux-builder/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/r-hub/rhub-server/linux-builder/Dockerfile/repaired.Dockerfile
@@ -1,12 +1,11 @@
-
 FROM ubuntu:18.04
 
 ENV DEBIAN_FRONTEND noninteractive
 
 # en_US locale
 RUN apt-get update && \
-    apt-get install -y locales && \
-    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
+    apt-get install --no-install-recommends -y locales && \
+    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 ENV LANG en_US.utf8
 
 # R
@@ -14,27 +13,27 @@ ENV LANG en_US.utf8
 RUN echo "deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/" \
     > /etc/apt/sources.list.d/cran.list
 
-RUN apt-get install -yy default-jre-headless gnupg curl wget
+RUN apt-get install --no-install-recommends -yy default-jre-headless gnupg curl wget && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-key adv --keyserver keyserver.ubuntu.com \
     --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9
 
-RUN apt-get update && apt-get install -yy \
-    r-base-core r-base-dev
+RUN apt-get update && apt-get install --no-install-recommends -yy \
+    r-base-core r-base-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN useradd jenkins && \
     mkdir /home/jenkins && \
     chown jenkins:jenkins /home/jenkins && \
     addgroup jenkins staff
 
-RUN apt-get install -yy docker.io
+RUN apt-get install --no-install-recommends -yy docker.io && rm -rf /var/lib/apt/lists/*;
 RUN addgroup jenkins docker
 
 RUN apt-get clean
 
 ENV SWARM_CLIENT_VERSION 3.9
 
-RUN curl -s https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${SWARM_CLIENT_VERSION}/swarm-client-${SWARM_CLIENT_VERSION}.jar -o /home/jenkins/swarm-client-${SWARM_CLIENT_VERSION}.jar
+RUN curl -f -s https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client/${SWARM_CLIENT_VERSION}/swarm-client-${SWARM_CLIENT_VERSION}.jar -o /home/jenkins/swarm-client-${SWARM_CLIENT_VERSION}.jar
 
 # Somewhat surprisingly, this persist after mounting the socket, so
 # the jenkins user will have access to Docker