{
  "startTime": 1674255390782,
  "endTime": 1674255391702,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 8,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM jupyter/scipy-notebook:latest\n#FROM tensorflow/tensorflow:latest-gpu\n\nFROM nvidia/cuda:9.0-base-ubuntu16.04\n\nLABEL maintainer=\"Andrea Monacchi\"\n\nENV USE_SUDO=yes\nUSER root\n\n# **************************************\n# https://github.com/tensorflow/tensorflow/blob/master/tensorflow/tools/docker/Dockerfile.gpu\n# Pick up some TF dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-9-0 \\\n        cuda-cublas-9-0 \\\n        cuda-cufft-9-0 \\\n        cuda-curand-9-0 \\\n        cuda-cusolver-9-0 \\\n        cuda-cusparse-9-0 \\\n        curl \\\n        libcudnn7=7.2.1.38-1+cuda9.0 \\\n        libnccl2=2.2.13-1+cuda9.0 \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        python \\\n        python-dev \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        git \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\n        apt-get install -y --no-install-recommends nvinfer-runtime-trt-repo-ubuntu1604-4.0.1-ga-cuda9.0 && \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends libnvinfer4=4.1.2-1+cuda9.0 && rm -rf /var/lib/apt/lists/*;\n\n# **************************************\n# https://github.com/jupyter/docker-stacks/blob/master/base-notebook/Dockerfile\nARG NB_USER=\"jovyan\"\nARG NB_UID=\"1000\"\nARG NB_GID=\"100\"\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get -yq dist-upgrade \\\n && apt-get install -yq --no-install-recommends \\\n    wget \\\n    bzip2 \\\n    ca-certificates \\\n    sudo \\\n    locales \\\n    fonts-liberation \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n# Configure environment\nENV CONDA_DIR=/opt/conda \\\n    SHELL=/bin/bash \\\n    NB_USER=$NB_USER \\\n    NB_UID=$NB_UID \\\n    NB_GID=$NB_GID \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8\n\nENV PATH=$CONDA_DIR/bin:$PATH \\\n    HOME=/home/$NB_USER\n\n#ADD fix-permissions /usr/local/bin/fix-permissions\nRUN wget -O /usr/local/bin/fix-permissions https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/fix-permissions && chmod a+x /usr/local/bin/fix-permissions\n\n\n# Create jovyan user with UID=1000 and in the 'users' group\n# and make sure these dirs are writable by the `users` group.\nRUN groupadd wheel -g 11 && \\\n    echo \"auth required pam_wheel.so use_uid\" >> /etc/pam.d/su && \\\n    useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p $CONDA_DIR && \\\n    chown $NB_USER:$NB_GID $CONDA_DIR && \\\n    chmod g+w /etc/passwd && \\\n    fix-permissions $HOME && \\\n    fix-permissions $CONDA_DIR\n\nUSER $NB_UID\n\n# Setup work directory for backward-compatibility\nRUN mkdir /home/$NB_USER/work && \\\n    fix-permissions /home/$NB_USER\n\n# Install conda as jovyan and check the md5 sum provided on the download site\nENV MINICONDA_VERSION 4.5.11\nRUN cd /tmp && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \\\n    echo \"e1045ee415162f944b6aebfe560b8fee *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - && \\\n    /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \\\n    $CONDA_DIR/bin/conda config --system --prepend channels conda-forge && \\\n    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \\\n    $CONDA_DIR/bin/conda config --system --set show_channel_urls true && \\\n    $CONDA_DIR/bin/conda install --quiet --yes conda=\"${MINICONDA_VERSION%.*}.*\" && \\\n    $CONDA_DIR/bin/conda update --all --quiet --yes && \\\n    conda clean -tipsy && \\\n    rm -rf /home/$NB_USER/.cache/yarn && \\\n    fix-permissions $CONDA_DIR && \\\n    fix-permissions /home/$NB_USER\n\n# Install Tini\nRUN conda install --quiet --yes 'tini=0.18.0' && \\\n    conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned && \\\n    conda clean -tipsy && \\\n    fix-permissions $CONDA_DIR && \\\n    fix-permissions /home/$NB_USER\n\n# Install Jupyter Notebook, Lab, and Hub\n# Generate a notebook server config\n# Cleanup temporary files\n# Correct permissions\n# Do all this in a single RUN command to avoid duplicating all of the\n# files across image layers when the permissions change\nRUN conda install --quiet --yes \\\n    'notebook=5.7.2' \\\n    'jupyterhub=0.9.4' \\\n    'jupyterlab=0.35.4' && \\\n    conda clean -tipsy && \\\n    jupyter labextension install @jupyterlab/hub-extension@^0.12.0 && \\\n    npm cache clean --force && \\\n    jupyter notebook --generate-config && \\\n    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \\\n    rm -rf /home/$NB_USER/.cache/yarn && \\\n    fix-permissions $CONDA_DIR && \\\n    fix-permissions /home/$NB_USER\n\nUSER root\n\nEXPOSE 8888\nWORKDIR $HOME\n\n# Configure container startup\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\nCMD [\"start-notebook.sh\"]\n\n# Add local files as late as possible to avoid cache busting\n#COPY start.sh /usr/local/bin/\nRUN wget -O /usr/local/bin/start.sh https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start.sh \\\n    && chmod a+x /usr/local/bin/start.sh\n\n#COPY start-notebook.sh /usr/local/bin/\nRUN wget -O /usr/local/bin/start-notebook.sh https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start-notebook.sh \\\n    && chmod a+x /usr/local/bin/start-notebook.sh\n\n#COPY start-singleuser.sh /usr/local/bin/\nRUN wget -O /usr/local/bin/start-singleuser.sh https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/start-singleuser.sh \\\n    && chmod a+x /usr/local/bin/start-singleuser.sh\n\n#COPY jupyter_notebook_config.py /etc/jupyter/\nRUN mkdir /etc/jupyter/ && wget -O /etc/jupyter/jupyter_notebook_config.py https://raw.githubusercontent.com/jupyter/docker-stacks/master/base-notebook/jupyter_notebook_config.py \\\n    && chmod a+x /etc/jupyter/jupyter_notebook_config.py\n\nRUN fix-permissions /etc/jupyter/\n\n# Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n\n# ***************************************\n# adding dependencies from scipy-notebook\n# https://github.com/jupyter/docker-stacks/blob/master/scipy-notebook/Dockerfile\n\nUSER root\n\n# ffmpeg for matplotlib anim\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends ffmpeg && \\\n    rm -rf /var/lib/apt/lists/*\n\nUSER $NB_UID\n\n# Install Python 3 packages\n# Remove pyqt and qt pulled in for matplotlib since we're only ever going to\n# use notebook-friendly backends in these images\nRUN conda install --quiet --yes \\\n    'conda-forge::blas=*=openblas' \\\n    'ipywidgets=7.4*' \\\n    'pandas=0.23*' \\\n    'numexpr=2.6*' \\\n    'matplotlib=2.2*' \\\n    'scipy=1.1*' \\\n    'seaborn=0.9*' \\\n    'scikit-learn=0.20*' \\\n    'scikit-image=0.14*' \\\n    'sympy=1.1*' \\\n    'cython=0.28*' \\\n    'patsy=0.5*' \\\n    'statsmodels=0.9*' \\\n    'cloudpickle=0.5*' \\\n    'dill=0.2*' \\\n    'numba=0.38*' \\\n    'bokeh=0.13*' \\\n    'sqlalchemy=1.2*' \\\n    'hdf5=1.10*' \\\n    'h5py=2.7*' \\\n    'vincent=0.4.*' \\\n    'beautifulsoup4=4.6.*' \\\n    'protobuf=3.*' \\\n    # client libraries to be added\n    's3fs' \\\n    'conda-forge::dask' \\\n    'conda-forge::distributed' \\\n    'tqdm' \\\n    'pytables' \\\n    # ----\n    'xlrd'  && \\\n    conda remove --quiet --yes --force qt pyqt && \\\n    conda clean -tipsy && \\\n    # Activate ipywidgets extension in the environment that runs the notebook server\n    jupyter nbextension enable --py widgetsnbextension --sys-prefix && \\\n    # Also activate ipywidgets extension for JupyterLab\n    # Check this URL for most recent compatibilities\n    # https://github.com/jupyter-widgets/ipywidgets/tree/master/packages/jupyterlab-manager\n    jupyter labextension install @jupyter-widgets/jupyterlab-manager@^0.38.1 && \\\n    jupyter labextension install jupyterlab_bokeh@0.6.3 && \\\n    npm cache clean --force && \\\n    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \\\n    rm -rf /home/$NB_USER/.cache/yarn && \\\n    rm -rf /home/$NB_USER/.node-gyp && \\\n    fix-permissions $CONDA_DIR && \\\n    fix-permissions /home/$NB_USER\n\n# Install facets which does not have a pip or conda package at the moment\nRUN cd /tmp && \\\n    git clone https://github.com/PAIR-code/facets.git && \\\n    cd facets && \\\n    jupyter nbextension install facets-dist/ --sys-prefix && \\\n    cd && \\\n    rm -rf /tmp/facets && \\\n    fix-permissions $CONDA_DIR && \\\n    fix-permissions /home/$NB_USER\n\n# Import matplotlib the first time to build the font cache.\nENV XDG_CACHE_HOME /home/$NB_USER/.cache/\nRUN MPLBACKEND=Agg python -c \"import matplotlib.pyplot\" && \\\n    fix-permissions /home/$NB_USER\n\nUSER $NB_UID\n\n# ***************************************\n# adding packages of tensorflow-notebook\n# https://github.com/jupyter/docker-stacks/tree/master/tensorflow-notebook\n# Install Tensorflow\nUSER root\n\nRUN conda install --quiet --yes \\\n    'tensorflow-gpu=1.12*' \\\n    'keras=2.2*' && \\\n    conda clean -tipsy && \\\n    fix-permissions $CONDA_DIR && \\\n    fix-permissions /home/$NB_USER\n\nUSER $NB_UID\n"
}