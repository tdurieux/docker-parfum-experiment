{
  "startTime": 1674248154241,
  "endTime": 1674248154918,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# create container stage to build out package\nFROM alpine:3.6\n\n# copy the source code into the container\nCOPY ./ /tmp/geoipupdate/\n# run all of our commands inside the project source code\nWORKDIR /tmp/geoipupdate\n# install the development dependencies needed to compile the project\nRUN apk add --no-cache --update \\\n        autoconf \\\n        automake \\\n        libtool \\\n        alpine-sdk \\\n        zlib-dev \\\n        curl-dev\n\n# build the project\nRUN ./bootstrap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\n# create a new image that contains only the binary\nFROM alpine:3.6\n# install the libraries needed to run the project\nRUN apk add --no-cache --update libcurl zlib\n# copy over the compiled project files from the build step\nCOPY --from=0 /usr/local/bin/geoipupdate /usr/local/bin/geoipupdate\nCOPY --from=0 /usr/local/etc/GeoIP.conf /usr/local/etc/GeoIP.conf\nCOPY --from=0 /usr/local/share/doc/geoipupdate /usr/local/share/doc/geoipupdate\nCOPY --from=0 /usr/local/share/GeoIP /usr/local/share/GeoIP\n# use the binary as the entrypoint for the image\nENTRYPOINT [\"/usr/local/bin/geoipupdate\"]\n"
}