{
  "startTime": 1674216646887,
  "endTime": 1674216647381,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.9.4-alpine AS build\n\nWORKDIR /app\n\nADD config/config.exs config/\nADD config/prod.exs config/\nADD config/prod.secret.exs config/\n\nRUN apk add --no-cache --update git build-base nodejs yarn python npm\n\nENV MIX_ENV=prod\nADD mix.exs mix.lock ./\nRUN mix do local.hex --force, local.rebar --force, deps.get, deps.compile\n\nADD assets assets/\nRUN cd assets      && \\\n    npm install && \\\n    npm run deploy && npm cache clean --force;\n\nRUN mix phx.digest\n\nADD priv priv/\nADD lib lib/\nADD rel rel/\n\nRUN mix compile && \\\n    mix release\n\n#######################################\nFROM alpine:3.10\n\nRUN apk add --no-cache --update bash openssl\n\nWORKDIR /app\nCOPY --from=build /app/_build/prod/rel/markdown_live ./\nRUN chown -R nobody: /app\nUSER nobody\n\nADD docker/default.md /default.md\n\nCMD [\"/app/bin/markdown_live\", \"start\"]"
}