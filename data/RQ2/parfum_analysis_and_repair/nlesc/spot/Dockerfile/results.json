{
  "startTime": 1674249378291,
  "endTime": 1674249378987,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build stage\nFROM node:lts-alpine as build-stage\nLABEL maintainer=\"f.diblen@esciencecenter.nl\"\nENV NPM_CONFIG_LOGLEVEL info\n\nWORKDIR /app\n#ENV DEBUG=\"*\"\nRUN echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories\nRUN apk update && apk upgrade && \\\n    apk --no-cache add curl && \\\n    apk --no-cache add --update \\\n    nodejs nodejs-npm \\\n    nano \\\n    git \\\n    build-base \\\n    libtool \\\n    autoconf \\\n    automake \\\n    jq \\\n    nasm \\\n    libexecinfo-dev@edge \\\n    gcc \\\n    musl-dev \\\n    make \\\n    tiff \\\n    jpeg \\\n    zlib \\\n    zlib-dev \\\n    file \\\n    pkgconf\n\nCOPY package*.json ./\nRUN npm install --silent && npm cache clean --force;\nCOPY . .\nCOPY .env.sample .env\n\nRUN npm run build\n\n# EXPOSE 80 443 8080 9966\n# CMD [\"npm\", \"run\", \"start\"]\n\n\n# production stage - nginx\nFROM nginx:stable-alpine as production-stage\nCOPY --from=build-stage /app/dist /usr/share/nginx/html\n\nRUN mv /etc/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf.orig\nCOPY conf/nginx.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}