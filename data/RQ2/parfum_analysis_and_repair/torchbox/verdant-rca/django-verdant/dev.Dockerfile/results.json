{
  "startTime": 1674250004977,
  "endTime": 1674250005304,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# We use Debian images because they are considered more stable than the alpine\n# ones becase they use a different C compiler. Debian images also come with\n# all useful packages required for image manipulation out of the box. They\n# however weight a lot, approx. up to 1.5GiB per built image.\nFROM python:2.7-stretch\n\nRUN useradd verdant-rca\n\nWORKDIR /app\n\n# Set default environment variables. They are used at build time and runtime.\n# If you specify your own environment variables on Heroku or Dokku, they will\n# override the ones set here. The ones below serve as sane defaults only.\n#  * PYTHONUNBUFFERED - This is useful so Python does not hold any messages\n#    from being output.\n#    https://docs.python.org/3.8/using/cmdline.html#envvar-PYTHONUNBUFFERED\n#    https://docs.python.org/3.8/using/cmdline.html#cmdoption-u\n#  * PYTHONPATH - enables use of django-admin command.\n#  * DJANGO_SETTINGS_MODULE - default settings used in the container.\n#  * PORT - default port used. Please match with EXPOSE so it works on Dokku.\n#    Heroku will ignore EXPOSE and only set PORT variable. PORT variable is\n#    read/used by Gunicorn.\n#  * WEB_CONCURRENCY - number of workers used by Gunicorn. The variable is\n#    read by Gunicorn.\n#  * GUNICORN_CMD_ARGS - additional arguments to be passed to Gunicorn. This\n#    variable is read by Gunicorn\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONPATH=/app \\\n    DJANGO_SETTINGS_MODULE=rcasite.settings.production \\\n    PORT=8000 \\\n    WEB_CONCURRENCY=3 \\\n    GUNICORN_CMD_ARGS=\"-c gunicorn-conf.py --max-requests 1200 --access-logfile -\"\n\n# Port exposed by this container. Should default to the port used by your WSGI\n# server (Gunicorn). This is read by Dokku only. Heroku will ignore this.\nEXPOSE 8000\n\n# Install operating system dependencies.\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y apt-transport-https rsync libldap2-dev libsasl2-dev && \\\n    curl -f -sL https://deb.nodesource.com/setup_8.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    rm -rf /var/lib/apt/lists/*\n\n\n# Intsall WSGI server - Gunicorn - that will serve the application.\nRUN pip install --no-cache-dir \"gunicorn== 19.9.0\"\n\nWORKDIR /app\n\n# Install front-end dependencies.\n# TODO: Once new npm LTS version is released, please switch to using \"npm ci\"\n# instead of \"npm install\" - https://docs.npmjs.com/cli/ci.\n# COPY --chown=verdant-rca ./package.json ./package-lock.json ./\n# RUN npm install\n\n# Install your app's Python requirements.\nCOPY requirements.txt ./requirements.txt\nRUN pip install --no-cache-dir -r ./requirements.txt\n\n# Copy gunicorn config overrides.\nCOPY gunicorn-conf.py ./\n\n# Copy application code.\nCOPY --chown=verdant-rca . .\n\n# Install less\nRUN npm install less@^3.13.1 -g && npm cache clean --force;\n\n# Collect static. This command will move static files from application\n# directories and \"static_compiled\" folder to the main static directory that\n# will be served by the WSGI server.\nRUN SECRET_KEY=none django-admin collectstatic --noinput --clear\n\n# Don't use the root user as it's an anti-pattern and Heroku does not run\n# containers as root either.\n# https://devcenter.heroku.com/articles/container-registry-and-runtime#dockerfile-commands-and-runtime\nUSER verdant-rca\n\n# Run the WSGI server. It reads GUNICORN_CMD_ARGS, PORT and WEB_CONCURRENCY\n# environment variable hence we don't specify a lot options below.\nCMD gunicorn rcasite.wsgi:application\n"
}