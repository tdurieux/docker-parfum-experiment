{
  "startTime": 1674249046698,
  "endTime": 1674249047147,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This Dockerfile creates a docker image for the pico engine with an external mount point for the image\n#\n# To build:\n#    docker build -t <username>/<container-name> github.com/picolab/pico-engine\n#\n# For example:\n#    docker build -t pjw/pico-engine github.com/picolab/pico-engine\n#\n# To run:\n#    docker run -p <port>:3000  -v <mount-point>:/var/pico-image -d <username>/container-name>\n#\n# For example:\n#    docker run -p 3001:3000  -v ~/images/pico-image:/var/pico-image -d pjw/pico-engine\n#\n# runs the docker with a port of 3001 and the image files located at ~/tmp/pico-image on the local machine.\n#\n# If you need to set the URL for your engine, you can add the PICO_ENGINE_BASE_URL env variable:\n#\n#    docker run -p 443:3000  -v ~/images/pico-image:/var/pico-image -d pjw/pico-engine -e PICO_ENGINE_BASE_URL=https://picos.picolabs.io\n#\n# You can run the same container multiple times with different ports and mount points to have multiple engines\n# running at the same time.\n#\n\nFROM node:lts-alpine\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Create mount point for image\nVOLUME [\"/var/pico-image\"]\nENV PICO_ENGINE_HOME=/var/pico-image\n\n# install the production pico-engine\nRUN npm install -g pico-engine && npm cache clean --force;\n\n# run it on port 3000 (default)\nEXPOSE 3000\nCMD [\"pico-engine\"]\n\n# This might be useful for creating a docker image of the dev env (includes parser, etc.)\n# # Install app dependencies\n# # A wildcard is used to ensure both package.json AND package-lock.json are copied\n# # where available (npm@5+)\n# COPY package*.json ./\n\n# RUN npm install\n\n# # Bundle app source\n# COPY . .\n\n# EXPOSE 3000\n# RUN npm run clean-setup\n# CMD [ \"npm\", \"start\" ]\n"
}