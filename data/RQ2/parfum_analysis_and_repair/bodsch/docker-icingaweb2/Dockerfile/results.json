{
  "startTime": 1674219497644,
  "endTime": 1674219499161,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10 as stage1\n\n# hadolint ignore=DL3018\nRUN \\\n  apk update  --quiet --no-cache\n\n# hadolint ignore=DL3018\nRUN \\\n  apk add     --quiet --no-cache \\\n    build-base \\\n    ca-certificates \\\n    curl \\\n    php7-dev \\\n    php7-fpm \\\n    php7-ctype \\\n    php7-curl \\\n    php7-dom \\\n    php7-fpm \\\n    php7-gettext \\\n    php7-gd \\\n    php7-iconv \\\n    php7-intl \\\n    php7-json \\\n    php7-ldap \\\n    php7-mbstring \\\n    php7-openssl \\\n    php7-pdo_mysql \\\n    php7-pear \\\n    php7-phar \\\n    php7-session \\\n    php7-simplexml \\\n    php7-tokenizer \\\n    php7-xml \\\n    yaml \\\n    yaml-dev\n\n# patch fucking pecl to read php.ini\nRUN \\\n  sed -i \"s|$PHP -C -n -q |$PHP -C -q |\" /usr/bin/pecl\n\nRUN \\\n  pecl channel-update pecl.php.net\n\n# hadolint ignore=DL4006\nRUN \\\n  (yes '' | pecl install yaml) && \\\n  (yes '' | pecl install xdebug)\n\n# ---------------------------------------------------------------------------------------\n\nFROM alpine:3.10 as stage2\n\nARG VCS_REF\nARG BUILD_DATE\nARG BUILD_VERSION\nARG BUILD_TYPE\nARG ICINGAWEB_VERSION\nARG INSTALL_THEMES\nARG INSTALL_MODULES\n\n# hadolint ignore=DL3018\nRUN \\\n  apk update  --quiet --no-cache && \\\n  apk add     --quiet --no-cache \\\n    bash \\\n    ca-certificates \\\n    curl \\\n    composer \\\n    jq \\\n    git\n\n# hadolint ignore=DL3018\nRUN \\\n  apk add     --quiet --no-cache \\\n    php7 \\\n    php7-ctype \\\n    php7-openssl \\\n    php7-intl \\\n    php7-gettext\n\nCOPY build /build\n\nWORKDIR /tmp\n\n# hadolint ignore=DL3003,DL4006\nRUN \\\n  mkdir /usr/share/webapps && \\\n  if [ -z \"${BUILD_TYPE}\" ] || [ \"${BUILD_TYPE}\" = \"stable\" ] ; then \\\n    echo \"install icingaweb2 v${ICINGAWEB_VERSION}\" && \\\n    curl -f \\\n      --silent \\\n      --location \\\n      --retry 3 \\\n      --cacert /etc/ssl/certs/ca-certificates.crt \\\n      \"https://github.com/Icinga/icingaweb2/archive/v${ICINGAWEB_VERSION}.tar.gz\" \\\n      | gunzip \\\n      | tar x -C /usr/share/webapps/ && \\\n    ln -s \"/usr/share/webapps/icingaweb2-${ICINGAWEB_VERSION}\" /usr/share/webapps/icingaweb2; \\\n  else \\\n    echo \"install icingaweb2 from git \" && \\\n    git clone https://github.com/Icinga/icingaweb2.git && \\\n    cd icingaweb2 && \\\n    version=$(git describe --tags --always | sed 's/^v//') && \\\n    echo \"  version: ${version}\" && \\\n    rm -rf /tmp/icingaweb2/.git* && \\\n    rm -rf /tmp/icingaweb2/.puppet && \\\n    mv /tmp/icingaweb2 /usr/share/webapps/ ; \\\n  fi\n\nRUN \\\n  ln -s /usr/share/webapps/icingaweb2/bin/icingacli /usr/bin/icingacli && \\\n  mkdir -p /var/log/icingaweb2 && \\\n  mkdir -p /etc/icingaweb2/modules && \\\n  mkdir -p /etc/icingaweb2/enabledModules\n\n#RUN \\\n#  /build/install_modules.sh\n\n#RUN \\\n#  /build/install_themes.sh\n\nCOPY build/icingaweb2-modules /usr/share/webapps/icingaweb2/modules/\nCOPY build/icingaweb2-themes  /usr/share/webapps/icingaweb2/modules/\n\nRUN \\\n  /build/install_themes.sh\n\n# ---------------------------------------------------------------------------------------\n\nFROM alpine:3.10 as final\n\nARG VCS_REF\nARG BUILD_DATE\nARG BUILD_VERSION\nARG BUILD_TYPE\nARG ICINGAWEB_VERSION\nARG INSTALL_THEMES\nARG INSTALL_MODULES\n\nCOPY --from=stage1 /usr/lib/php7/modules/yaml.so   /usr/lib/php7/modules/\nCOPY --from=stage1 /usr/lib/php7/modules/xdebug.so /usr/lib/php7/modules/\nCOPY --from=stage2 /usr/share/webapps              /usr/share/webapps\nCOPY --from=stage2 /etc/icingaweb2                 /etc/icingaweb2\n\n# hadolint ignore=DL3017,DL3018\nRUN \\\n  apk update  --quiet --no-cache && \\\n  apk upgrade --quiet --no-cache && \\\n  apk add     --quiet --no-cache \\\n    bash \\\n    bind-tools \\\n    ca-certificates \\\n    curl \\\n    inotify-tools \\\n    jq \\\n    mysql-client \\\n    nginx \\\n    netcat-openbsd \\\n    openssl \\\n    php7 \\\n    php7-ctype \\\n    php7-fpm \\\n    php7-pdo_mysql \\\n    php7-openssl \\\n    php7-intl \\\n    php7-ldap \\\n    php7-gettext \\\n    php7-json \\\n    php7-mbstring \\\n    php7-curl \\\n    php7-iconv \\\n    php7-session \\\n    php7-xml \\\n    php7-dom \\\n    php7-soap \\\n    php7-sockets \\\n    php7-posix \\\n    php7-pcntl \\\n    php7-gmp \\\n    shadow \\\n    tzdata \\\n    pwgen \\\n    yaml \\\n    yajl-tools && \\\n  cp /usr/share/zoneinfo/Europe/Berlin /etc/localtime && \\\n  echo \"extension=yaml.so\"        > /etc/php7/conf.d/ext-yaml.ini && \\\n  echo \"zend_extension=xdebug.so\" > /etc/php7/conf.d/ext-xdebug.ini.disabled && \\\n  sed -i -e '/^#/ d' -e '/^;/ d'  -e '/^ *$/ d' /etc/php7/php.ini && \\\n  ln -s /usr/share/webapps/icingaweb2/bin/icingacli /usr/bin/icingacli && \\\n  mkdir -p /var/log/icingaweb2 && \\\n  /usr/bin/icingacli module disable setup && \\\n  /usr/bin/icingacli module enable monitoring  2> /dev/null && \\\n  /usr/bin/icingacli module enable translation 2> /dev/null && \\\n  /usr/bin/icingacli module enable doc         2> /dev/null && \\\n  mkdir /run/nginx && \\\n  mkdir /var/log/php-fpm && \\\n  apk del --quiet \\\n    tzdata && \\\n  rm -rf \\\n    /build \\\n    /tmp/* \\\n    /var/cache/apk/*\n\nCOPY rootfs/ /\n\nWORKDIR /etc/icingaweb2\n\nVOLUME [\"/etc/icingaweb2\", \"/usr/share/webapps/icingaweb2\", \"/init/custom.d\"]\n\nHEALTHCHECK \\\n  --interval=5s \\\n  --timeout=2s \\\n  --retries=12 \\\n  CMD curl --silent --fail http://localhost/health || exit 1\n\nCMD [\"/init/run.sh\"]\n\n# ---------------------------------------------------------------------------------------\n\n# Build-time metadata as defined at http://label-schema.org\nLABEL \\\n  version=${BUILD_VERSION} \\\n  maintainer=\"Bodo Schulz <bodo@boone-schulz.de>\" \\\n  org.label-schema.build-date=${BUILD_DATE} \\\n  org.label-schema.name=\"IcingaWeb2 Docker Image\" \\\n  org.label-schema.description=\"Inofficial IcingaWeb2 Docker Image\" \\\n  org.label-schema.url=\"https://www.icinga.org/\" \\\n  org.label-schema.vcs-ref=${VCS_REF} \\\n  org.label-schema.vcs-url=\"https://github.com/bodsch/docker-icingaweb2\" \\\n  org.label-schema.vendor=\"Bodo Schulz\" \\\n  org.label-schema.version=${ICINGAWEB_VERSION} \\\n  org.label-schema.schema-version=\"1.0\" \\\n  com.microscaling.docker.dockerfile=\"/Dockerfile\" \\\n  com.microscaling.license=\"GNU General Public License v3.0\"\n\n# ---------------------------------------------------------------------------------------\n"
}