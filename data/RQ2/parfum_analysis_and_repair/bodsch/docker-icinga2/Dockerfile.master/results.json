{
  "startTime": 1674255385447,
  "endTime": 1674255386408,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 26,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 11
      }
    }
  ],
  "repairedDockerfile": "ARG BUILD_IMAGE\n# hadolint ignore=DL3006\nFROM $BUILD_IMAGE\n\nARG BUILD_DATE\nARG BUILD_VERSION\nARG ICINGA2_VERSION\nARG CERT_SERVICE_TYPE\nARG CERT_SERVICE_VERSION\n\nENV \\\n  TERM=xterm \\\n  DEBIAN_FRONTEND=noninteractive \\\n  TZ='Europe/Berlin'\n\nEXPOSE 5665 8080\n\n# ---------------------------------------------------------------------------------------\n\nCOPY build/ruby-icinga-cert-service      /tmp/ruby-icinga-cert-service\n\nWORKDIR /tmp\n\n# hadolint ignore=DL3003,DL3008,DL3014,DL3027,DL3028\nRUN \\\n  export ICINGA2_TYPE=Master && \\\n  apt-get install -y \\\n    --assume-yes \\\n    --no-install-recommends \\\n      libffi-dev \\\n      g++ \\\n      make \\\n      git \\\n      libssl-dev \\\n      ruby-dev \\\n      bind9utils \\\n      bsd-mailx \\\n      mariadb-client \\\n      nagios-nrpe-server \\\n      openssl \\\n      ruby \\\n      bundler \\\n      ssmtp && \\\n  echo 'gem: --no-document' >> /etc/gemrc && \\\n  gem install --quiet --no-rdoc --no-ri \\\n    io-console bundler && \\\n  bash /tmp/ruby-icinga-cert-service/bin/installer.sh && \\\n  apt-get remove \\\n    --assume-yes \\\n    --purge \\\n      apt-utils \\\n      libffi-dev \\\n      gcc \\\n      make \\\n      git \\\n      gnupg \\\n      libssl-dev \\\n      ruby-dev \\\n      python3-pip && \\\n  rm -f /etc/apt/sources.list.d/* && \\\n  apt-get clean && \\\n  apt autoremove \\\n    --assume-yes && \\\n  rm -rf \\\n    /tmp/* \\\n    /var/cache/debconf/* \\\n    /usr/share/doc/* \\\n    /root/.gem \\\n    /root/.cache \\\n    /root/.bundle 2> /dev/null && \\\n  echo \"export ICINGA2_TYPE=${ICINGA2_TYPE}\"       >> /etc/profile.d/icinga2.sh && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /etc/icinga2\n\n# ---------------------------------------------------------------------------------------\n\nLABEL \\\n  version=\"${BUILD_VERSION}\" \\\n  maintainer=\"Bodo Schulz <bodo@boone-schulz.de>\" \\\n  org.label-schema.build-date=${BUILD_DATE} \\\n  org.label-schema.name=\"Icinga2 Docker Image\" \\\n  org.label-schema.vcs-ref=${VCS_REF} \\\n  org.label-schema.description=\"Inofficial Icinga2 Docker Image\" \\\n  org.label-schema.url=\"https://www.icinga.org/\" \\\n  org.label-schema.vcs-url=\"https://github.com/bodsch/docker-icinga2\" \\\n  org.label-schema.vendor=\"Bodo Schulz\" \\\n  org.label-schema.version=${ICINGA2_VERSION} \\\n  org.label-schema.schema-version=\"1.0\" \\\n  com.microscaling.docker.dockerfile=\"/Dockerfile\" \\\n  com.microscaling.license=\"GNU General Public License v3.0\"\n\n# ---------------------------------------------------------------------------------------\n"
}