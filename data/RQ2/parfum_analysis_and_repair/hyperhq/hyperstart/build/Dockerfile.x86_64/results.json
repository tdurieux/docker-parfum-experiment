{
  "startTime": 1674250750729,
  "endTime": 1674250752043,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nMAINTAINER Hyper Developers <dev@hyper.sh>\n\nRUN yum install -y patch gcc ncurses-devel make openssl-devel bc perl && rm -rf /var/cache/yum\n\nENV KERNEL_VERSION 4.12.4\nENV LOCALVERSION -hyper\nENV KERNEL_RELEASE ${KERNEL_VERSION}${LOCALVERSION}\n\nENV KBUILD_BUILD_USER    dev\nENV KBUILD_BUILD_HOST    hyper.sh\nENV KBUILD_BUILD_VERSION 1\n\nRUN mkdir /root/build/ && mkdir /root/build/result/\nRUN curl -fSL https://cdn.kernel.org/pub/linux/kernel/v4.x/linux-${KERNEL_VERSION}.tar.gz | tar -zx -C /root/build\n\nCOPY kernel_config /root/build/linux-${KERNEL_VERSION}/.config\nCOPY kernel_patch/ /root/build/kernel_patch/\n\nRUN cd /root/build/linux-${KERNEL_VERSION}/ && for patch in /root/build/kernel_patch/*.patch; do patch -p1 <$patch || exit 1; done\nRUN cd /root/build/linux-${KERNEL_VERSION}/ && make silentoldconfig && make -j 8\n\n# install to /root/build/result/ so that we can get them from it\nRUN cp /root/build/linux-${KERNEL_VERSION}/arch/x86_64/boot/bzImage /root/build/result/kernel\nRUN mkdir /root/build/result/modules &&\\\n    cd /root/build/linux-${KERNEL_VERSION}/ && make modules_install INSTALL_MOD_PATH=\"/root/build/result/modules\" &&\\\n    cd /root/build/result/modules/lib/modules/ && rm -f ${KERNEL_RELEASE}/{build,source} &&\\\n    tar -cf /root/build/result/modules.tar ${KERNEL_RELEASE}/ && rm -rf /root/build/result/modules && rm /root/build/result/modules.tar\nRUN cp /root/build/linux-${KERNEL_VERSION}/.config /root/build/result/kernel_config\n"
}