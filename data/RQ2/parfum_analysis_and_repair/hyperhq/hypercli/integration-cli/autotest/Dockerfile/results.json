{
  "startTime": 1674251907838,
  "endTime": 1674251908479,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.3.1611\n\n#This Dockerfile is used for autotest hypercli\n#REF: integration-cli/README.md\n\n###################################\n##    install common package     ##\n###################################\nRUN yum install -y\\\n automake \\\n autoconf \\\n make \\\n gcc \\\n wget \\\n time \\\n git \\\n which \\\n screen && \\\n yum clean all && rm -rf /var/cache/yum\n\n\n########################################\n##        prepare java run env        ##\n########################################\nRUN wget --no-check-certificate --no-cookies \\\n        --header \"Cookie: oraclelicense=accept-securebackup-cookie\" \\\n        https://download.oracle.com/otn-pub/java/jdk/8u141-b15/336fa29ff2bb4ef291e347e091f7f4a7/jdk-8u141-linux-x64.rpm \\\n\t\t&& rpm -ivh jdk-8u141-linux-x64.rpm && rm -rf jdk-8u141-linux-x64.rpm\n\nENV JAVA_HOME /usr/java/jdk1.8.0_141\nENV PATH $PATH:$JAVA_HOME/bin\n\n\n###########################\n##    install golang     ##\n###########################\nENV GO_VERSION 1.8.3\nRUN wget https://golangtc.com/static/go/${GO_VERSION}/go${GO_VERSION}.linux-amd64.tar.gz\nRUN tar -xzf go${GO_VERSION}.linux-amd64.tar.gz -C /usr/local && rm go${GO_VERSION}.linux-amd64.tar.gz\nENV GOROOT /usr/local/go\nENV PATH $GOROOT/bin:$PATH\n\n\n##########################################\n##    prepare jenkins slave run env     ##\n##########################################\nENV HOME /home/jenkins\nRUN groupadd -g 10000 jenkins\nRUN useradd -c \"Jenkins user\" -d $HOME -u 10000 -g 10000 -m jenkins\nRUN mkdir /home/jenkins/.tmp\nVOLUME [\"/home/jenkins\"]\n\nWORKDIR $HOME\nUSER root\n\n################################\n##    prepare for build env   ##\n################################\n## Env\nENV PATH /go/bin:/usr/local/go/bin:/usr/bin:/usr/local/bin:$PATH\nENV GOPATH /go:/go/src/github.com/hyperhq/hypercli/integration-cli/vendor:/go/src/github.com/hyperhq/hypercli/vendor\n\n#TARGET_REGION could be: us-west-1|eu-central-1|RegionOne\nENV TARGET_REGION=${TARGET_REGION:-us-west-1}\nENV BRANCH=${BRANCH:-master}\nENV TEST_CASE_REG=${TEST_CASE_REG:-TestCli.*}\n\n## hyper account for test\nENV ACCESS_KEY=\nENV SECRET_KEY=\n\n## slack parameter\nENV SLACK_TOKEN=\nENV SLACK_CHANNEL_ID=\n\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\nCOPY script/slack.sh /usr/local/bin/slack.sh\nCOPY script/run.sh /usr/local/bin/run.sh\n\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"run.sh\"]"
}