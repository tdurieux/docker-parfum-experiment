{
  "startTime": 1674249607827,
  "endTime": 1674249609074,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 26,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file describes the standard way to build Docker, using docker\n#\n# Usage:\n#\n# # Assemble the full dev environment. This is slow the first time.\n# docker build -t docker .\n#\n# # Mount your source in an interactive container for quick testing:\n# docker run -v `pwd`:/go/src/github.com/docker/docker --privileged -i -t docker bash\n#\n# # Run the test suite:\n# docker run --privileged docker hack/make.sh test\n#\n# # Publish a release:\n# docker run --privileged \\\n#  -e AWS_S3_BUCKET=baz \\\n#  -e AWS_ACCESS_KEY=foo \\\n#  -e AWS_SECRET_KEY=bar \\\n#  -e GPG_PASSPHRASE=gloubiboulga \\\n#  docker hack/release.sh\n#\n# Note: AppArmor used to mess with privileged mode, but this is no longer\n# the case. Therefore, you don't have to disable it anymore.\n#\n\nFROM\tubuntu:14.04\nMAINTAINER\tTianon Gravi <admwiggin@gmail.com> (@tianon)\n\n# Packaged dependencies\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq \\\n\tapt-utils \\\n\taufs-tools \\\n\tautomake \\\n\tbtrfs-tools \\\n\tbuild-essential \\\n\tcurl \\\n\tdpkg-sig \\\n\tgit \\\n\tiptables \\\n\tlibapparmor-dev \\\n\tlibcap-dev \\\n\tlibsqlite3-dev \\\n\tmercurial \\\n\tpandoc \\\n\tparallel \\\n\treprepro \\\n\truby1.9.1 \\\n\truby1.9.1-dev \\\n\ts3cmd=1.1.0* \\\n\t--no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# Get lvm2 source for compiling statically\nRUN\tgit clone --no-checkout https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2 && cd /usr/local/lvm2 && git checkout -q v2_02_103\n# see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags\n# note: we don't use \"git clone -b\" above because it then spews big nasty warnings about 'detached HEAD' state that we can't silence as easily as we can silence them using \"git checkout\" directly\n\n# Compile and install lvm2\nRUN cd /usr/local/lvm2 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static_link && make device-mapper && make install_device-mapper\n# see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL\n\n# Install Go\nRUN curl -f -sSL https://golang.org/dl/go1.3.src.tar.gz | tar -v -C /usr/local -xz\nENV\tPATH\t/usr/local/go/bin:$PATH\nENV\tGOPATH\t/go:/go/src/github.com/docker/docker/vendor\nRUN\tcd /usr/local/go/src && ./make.bash --no-clean 2>&1\n\n# Compile Go for cross compilation\nENV\tDOCKER_CROSSPLATFORMS\t\\\n\tlinux/386 linux/arm \\\n\tdarwin/amd64 darwin/386 \\\n\tfreebsd/amd64 freebsd/386 freebsd/arm\n# (set an explicit GOARM of 5 for maximum compatibility)\nENV\tGOARM\t5\nRUN\tcd /usr/local/go/src && bash -xc 'for platform in $DOCKER_CROSSPLATFORMS; do GOOS=${platform%/*} GOARCH=${platform##*/} ./make.bash --no-clean 2>&1; done'\n\n# Grab Go's cover tool for dead-simple code coverage testing\nRUN\tgo get golang.org/x/tools/cmd/cover\n\n# TODO replace FPM with some very minimal debhelper stuff\nRUN\tgem install --no-rdoc --no-ri fpm --version 1.0.2\n\n# Get the \"busybox\" image source so we can build locally instead of pulling\nRUN\tgit clone -b buildroot-2014.02 https://github.com/jpetazzo/docker-busybox.git /docker-busybox\n\n# Setup s3cmd config\nRUN\t/bin/echo -e '[default]\\naccess_key=$AWS_ACCESS_KEY\\nsecret_key=$AWS_SECRET_KEY' > /.s3cfg\n\n# Set user.email so crosbymichael's in-container merge commits go smoothly\nRUN\tgit config --global user.email 'docker-dummy@example.com'\n\n# Add an unprivileged user to be used for tests which need it\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser\n\nVOLUME\t/var/lib/docker\nWORKDIR\t/go/src/github.com/docker/docker\nENV\tDOCKER_BUILDTAGS\tapparmor selinux\n\n# Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT\t[\"hack/dind\"]\n\n# Upload docker source\nCOPY\t.\t/go/src/github.com/docker/docker\n"
}