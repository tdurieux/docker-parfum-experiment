diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hyperhq/hypercli/Dockerfile.aarch64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hyperhq/hypercli/Dockerfile.aarch64/repaired.Dockerfile
index ee8c889..210ca6f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hyperhq/hypercli/Dockerfile.aarch64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hyperhq/hypercli/Dockerfile.aarch64/repaired.Dockerfile
@@ -54,12 +54,12 @@ RUN apt-get update && apt-get install -y \
 	python-pip \
 	python-websocket \
 	s3cmd=1.1.0* \
-	--no-install-recommends
+	--no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 # Install armhf loader to use armv6 binaries on armv8
 RUN dpkg --add-architecture armhf \
 	&& apt-get update \
-	&& apt-get install -y libc6:armhf
+	&& apt-get install --no-install-recommends -y libc6:armhf && rm -rf /var/lib/apt/lists/*;
 
 # Get lvm2 source for compiling statically
 ENV LVM2_VERSION 2.02.103
@@ -71,7 +71,7 @@ RUN mkdir -p /usr/local/lvm2 \
 # fix platform enablement in lvm2 to support aarch64 properly
 RUN set -e \
 	&& for f in config.guess config.sub; do \
-		curl -fsSL -o "/usr/local/lvm2/autoconf/$f" "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=$f;hb=HEAD"; \
+		curl -fsSL -o "/usr/local/lvm2/autoconf/$f" "https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=$f;hb=HEAD"; \
 	done
 # "arch.c:78:2: error: #error the arch code needs to know about your machine type"
 
@@ -90,13 +90,12 @@ RUN set -x \
 	&& export SECCOMP_PATH="$(mktemp -d)" \
 	&& curl -fsSL "https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz" \
 		| tar -xzC "$SECCOMP_PATH" --strip-components=1 \
-	&& ( \
-		cd "$SECCOMP_PATH" \
-		&& ./configure --prefix=/usr/local \
+	&& ( cd "$SECCOMP_PATH" \
+		&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
 		&& make \
 		&& make install \
-		&& ldconfig \
-	) \
+		&& ldconfig) \
+
 	&& rm -rf "$SECCOMP_PATH"
 
 # Install Go
@@ -110,7 +109,7 @@ RUN mkdir -p /usr/src/go-bootstrap \
 	&& mkdir /usr/src/go \
 	&& curl -fsSL https://storage.googleapis.com/golang/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/src/go -xz --strip-components=1 \
 	&& cd /usr/src/go/src \
-	&& GOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP=/usr/src/go-bootstrap ./make.bash
+	&& GOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP=/usr/src/go-bootstrap ./make.bash && rm -rf /usr/src/go-bootstrap
 ENV PATH /usr/src/go/bin:$PATH
 ENV GOPATH /go:/go/src/github.com/docker/docker/vendor
 
@@ -143,7 +142,7 @@ ENV DOCKER_PY_COMMIT e2878cbcc3a7eef99917adc1be252800b0e41ece
 RUN git clone https://github.com/docker/docker-py.git /docker-py \
 	&& cd /docker-py \
 	&& git checkout -q $DOCKER_PY_COMMIT \
-	&& pip install -r test-requirements.txt
+	&& pip install --no-cache-dir -r test-requirements.txt
 
 # Setup s3cmd config
 RUN { \