{
  "startTime": 1674254096697,
  "endTime": 1674254098021,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "# -----------------------------------------------------------------------------\n# Dockerfile for Larynx (https://github.com/rhasspy/larynx)\n#\n# Requires Docker buildx: https://docs.docker.com/buildx/working-with-buildx/\n# See scripts/build-docker.sh\n# -----------------------------------------------------------------------------\n\nFROM debian:bullseye as build\nARG TARGETARCH\nARG TARGETVARIANT\n\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"Dir::Cache var/cache/apt/${TARGETARCH}${TARGETVARIANT};\" > /etc/apt/apt.conf.d/01cache\n\nRUN --mount=type=cache,id=apt-build,target=/var/cache/apt \\\n    mkdir -p /var/cache/apt/${TARGETARCH}${TARGETVARIANT}/archives/partial && \\\n    apt-get update && \\\n    apt-get install --yes --no-install-recommends \\\n        python3 python3-pip python3-venv \\\n        build-essential python3-dev && rm -rf /var/lib/apt/lists/*;\n\n# Clean up\nRUN rm -f /etc/apt/apt.conf.d/01cache\n\nRUN mkdir -p /home/larynx/app\nWORKDIR /home/larynx/app\n\n# Create virtual environment\nRUN --mount=type=cache,id=pip-venv,target=/root/.cache/pip \\\n    python3 -m venv .venv && \\\n    .venv/bin/pip3 install --upgrade pip && \\\n    .venv/bin/pip3 install --upgrade wheel setuptools\n\n# Put cached Python wheels here\nCOPY download/ /download/\n\nCOPY requirements.txt requirements.txt\n\n# Install base Python requirements (excluding PyTorch)\nRUN --mount=type=cache,id=pip-requirements,target=/root/.cache/pip \\\n    grep -v '^torch' requirements.txt | \\\n    xargs .venv/bin/pip3 install \\\n    -f /download \\\n    -f 'https://synesthesiam.github.io/prebuilt-apps/'\n\n# -----------------------------------------------------------------------------\n\nFROM debian:bullseye as run\nARG TARGETARCH\nARG TARGETVARIANT\n\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"Dir::Cache var/cache/apt/${TARGETARCH}${TARGETVARIANT};\" > /etc/apt/apt.conf.d/01cache\n\nRUN --mount=type=cache,id=apt-run,target=/var/cache/apt \\\n    mkdir -p /var/cache/apt/${TARGETARCH}${TARGETVARIANT}/archives/partial && \\\n    apt-get update && \\\n    apt-get install --yes --no-install-recommends \\\n        python3 sox ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nRUN --mount=type=cache,id=apt-run,target=/var/cache/apt \\\n    if [ \"${TARGETARCH}${TARGETVARIANT}\" = 'armv7' ]; then \\\n        apt-get install --yes --no-install-recommends libatlas3-base libgfortran5; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# Clean up\nRUN rm -f /etc/apt/apt.conf.d/01cache\n\nRUN useradd -ms /bin/bash larynx\n\n# Copy virtual environment\nCOPY --from=build /home/larynx/app/ /home/larynx/app/\n\n# Copy source code\nCOPY larynx/ /home/larynx/app/larynx/\n\n# Copy voices and vocoders\nCOPY local/ /home/larynx/app/local/\n\nUSER larynx\nWORKDIR /home/larynx/app\n\nEXPOSE 5002\n\nENV PYTHONPATH=/home/larynx/app\n\nENTRYPOINT [\"/home/larynx/app/.venv/bin/python3\", \"-m\", \"larynx.server\"]\n"
}