{
  "startTime": 1674254360079,
  "endTime": 1674254360725,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM debian:bullseye as install\nARG TARGETARCH\nARG TARGETVARIANT\n\nRUN --mount=type=cache,id=apt-build,target=/var/cache/apt \\\n    mkdir -p /var/cache/apt/${TARGETARCH}${TARGETVARIANT}/archives/partial && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends --yes python3 libopenblas-base libgomp1 libatomic1 && rm -rf /var/lib/apt/lists/*;\n\nRUN --mount=type=cache,id=apt-build,target=/var/cache/apt \\\n    if [ \"${TARGETARCH}${TARGETVARIANT}\" = 'armv7' ]; then \\\n        apt-get install --no-install-recommends --yes libatlas3-base libgfortran5; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n\nCOPY *.deb /\n\nENV DEBIAN_ARCH=${TARGETARCH}${TARGETVARIANT}\nRUN --mount=type=cache,id=apt-build,target=/var/cache/apt \\\n    if [ \"${DEBIAN_ARCH}\" = 'armv7' ]; then export DEBIAN_ARCH='armhf'; fi && \\\n    apt-get install --yes --no-install-recommends ./larynx-tts_1.0.0_${DEBIAN_ARCH}.deb && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /output\nRUN larynx --debug -q low 'This is a test.' > /output/bullseye_${TARGETARCH}${TARGETVARIANT}.wav\n\n# -----------------------------------------------------------------------------\n\nFROM scratch\n\nCOPY --from=install /output/ /\n"
}