{
  "startTime": 1674218560878,
  "endTime": 1674218562419,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 143,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -----------------------------------------------------------------------------\n# Dockerfile for Rhasspy (https://github.com/rhasspy/rhasspy)\n# Requires NOBUILDX=1 environment variable\n# See scripts/build-docker.sh\n#\n# Builds an image for a single architecture.\n# The virtual environment from the build stage is copied over to the run stage.\n# The Rhasspy source code is then copied into the run stage and executed within\n# that virtual environment.\n#\n# armv6 images (Raspberry Pi 0/1) are derived from balena base images:\n# https://www.balena.io/docs/reference/base-images/base-images/#balena-base-images\n#\n# The IFDEF statements are handled by docker/preprocess.sh. These are just\n# comments that are uncommented if the environment variable after the IFDEF is\n# not empty.\n#\n# The build-docker.sh script will optionally add apt/pypi proxies running locally:\n# * apt - https://docs.docker.com/engine/examples/apt-cacher-ng/\n# * pypi - https://github.com/jayfk/docker-pypi-cache\n# -----------------------------------------------------------------------------\n\nFROM debian:buster-slim as build\n\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\n# IFDEF APT_PROXY\n#! RUN echo 'Acquire::http { Proxy \"http://${APT_PROXY_HOST}:${APT_PROXY_PORT}\"; };' >> /etc/apt/apt.conf.d/01proxy\n# ENDIF\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n        python3 python3-dev python3-setuptools python3-pip python3-venv \\\n        build-essential swig portaudio19-dev \\\n        llvm-7-dev libatlas-base-dev libopenblas-dev gfortran \\\n        gfortran libopenblas-dev liblapack-dev cython \\\n        curl ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nENV LLVM_CONFIG=/usr/bin/llvm-config-7\n\nENV APP_DIR=/usr/lib/rhasspy\nENV BUILD_DIR=/build\n\nARG TARGETARCH\nARG TARGETVARIANT\n\n# Directory of prebuilt tools\nENV DOWNLOAD_DIR=${BUILD_DIR}/download\nCOPY download/shared/ ${DOWNLOAD_DIR}/shared/\nCOPY download/${TARGETARCH}${TARGETVARIANT}/ ${DOWNLOAD_DIR}/${TARGETARCH}${TARGETVARIANT}/\n\n# IFDEF NOAVX\n#! RUN mv ${DOWNLOAD_DIR}/noavx/* ${DOWNLOAD_DIR}/\n# ENDIF\n\n# Copy Rhasspy module requirements\nCOPY rhasspy-server-hermes/requirements.txt ${BUILD_DIR}/rhasspy-server-hermes/\nCOPY rhasspy-wake-snowboy-hermes/requirements.txt ${BUILD_DIR}/rhasspy-wake-snowboy-hermes/\nCOPY rhasspy-wake-porcupine-hermes/requirements.txt ${BUILD_DIR}/rhasspy-wake-porcupine-hermes/\nCOPY rhasspy-wake-precise-hermes/requirements.txt ${BUILD_DIR}/rhasspy-wake-precise-hermes/\nCOPY rhasspy-profile/requirements.txt ${BUILD_DIR}/rhasspy-profile/\nCOPY rhasspy-asr/requirements.txt ${BUILD_DIR}/rhasspy-asr/\nCOPY rhasspy-asr-deepspeech/requirements.txt ${BUILD_DIR}/rhasspy-asr-deepspeech/\nCOPY rhasspy-asr-deepspeech-hermes/requirements.txt ${BUILD_DIR}/rhasspy-asr-deepspeech-hermes/\nCOPY rhasspy-asr-pocketsphinx/requirements.txt ${BUILD_DIR}/rhasspy-asr-pocketsphinx/\nCOPY rhasspy-asr-pocketsphinx-hermes/requirements.txt ${BUILD_DIR}/rhasspy-asr-pocketsphinx-hermes/\nCOPY rhasspy-asr-kaldi/requirements.txt ${BUILD_DIR}/rhasspy-asr-kaldi/\nCOPY rhasspy-asr-kaldi-hermes/requirements.txt ${BUILD_DIR}/rhasspy-asr-kaldi-hermes/\nCOPY rhasspy-dialogue-hermes/requirements.txt ${BUILD_DIR}/rhasspy-dialogue-hermes/\nCOPY rhasspy-fuzzywuzzy/requirements.txt ${BUILD_DIR}/rhasspy-fuzzywuzzy/\nCOPY rhasspy-fuzzywuzzy-hermes/requirements.txt ${BUILD_DIR}/rhasspy-fuzzywuzzy-hermes/\nCOPY rhasspy-hermes/requirements.txt ${BUILD_DIR}/rhasspy-hermes/\nCOPY rhasspy-homeassistant-hermes/requirements.txt ${BUILD_DIR}/rhasspy-homeassistant-hermes/\nCOPY rhasspy-microphone-cli-hermes/requirements.txt ${BUILD_DIR}/rhasspy-microphone-cli-hermes/\nCOPY rhasspy-microphone-pyaudio-hermes/requirements.txt ${BUILD_DIR}/rhasspy-microphone-pyaudio-hermes/\nCOPY rhasspy-nlu/requirements.txt ${BUILD_DIR}/rhasspy-nlu/\nCOPY rhasspy-nlu-hermes/requirements.txt ${BUILD_DIR}/rhasspy-nlu-hermes/\nCOPY rhasspy-rasa-nlu-hermes/requirements.txt ${BUILD_DIR}/rhasspy-rasa-nlu-hermes/\nCOPY rhasspy-remote-http-hermes/requirements.txt ${BUILD_DIR}/rhasspy-remote-http-hermes/\nCOPY rhasspy-silence/requirements.txt ${BUILD_DIR}/rhasspy-silence/\nCOPY rhasspy-snips-nlu/requirements.txt ${BUILD_DIR}/rhasspy-snips-nlu/\nCOPY rhasspy-snips-nlu/etc/languages/ ${BUILD_DIR}/rhasspy-snips-nlu/etc/languages/\nCOPY rhasspy-snips-nlu-hermes/requirements.txt ${BUILD_DIR}/rhasspy-snips-nlu-hermes/\nCOPY rhasspy-speakers-cli-hermes/requirements.txt ${BUILD_DIR}/rhasspy-speakers-cli-hermes/\nCOPY rhasspy-supervisor/requirements.txt ${BUILD_DIR}/rhasspy-supervisor/\nCOPY rhasspy-tts-cli-hermes/requirements.txt ${BUILD_DIR}/rhasspy-tts-cli-hermes/\nCOPY rhasspy-tts-wavenet-hermes/requirements.txt ${BUILD_DIR}/rhasspy-tts-wavenet-hermes/\nCOPY rhasspy-wake-pocketsphinx-hermes/requirements.txt ${BUILD_DIR}/rhasspy-wake-pocketsphinx-hermes/\nCOPY rhasspy-wake-raven/requirements.txt ${BUILD_DIR}/rhasspy-wake-raven/\nCOPY rhasspy-wake-raven-hermes/requirements.txt ${BUILD_DIR}/rhasspy-wake-raven-hermes/\nCOPY rhasspy-tts-larynx-hermes/requirements.txt ${BUILD_DIR}/rhasspy-tts-larynx-hermes/\n\n# Autoconf\nCOPY m4/ ${BUILD_DIR}/m4/\nCOPY configure config.sub config.guess \\\n     install-sh missing aclocal.m4 \\\n     Makefile.in setup.py.in rhasspy.sh.in rhasspy.spec.in \\\n     ${BUILD_DIR}/\n\nRUN cd ${BUILD_DIR} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-in-place --prefix=${APP_DIR}/.venv\n\nCOPY scripts/install/ ${BUILD_DIR}/scripts/install/\n\nCOPY RHASSPY_DIRS ${BUILD_DIR}/\n\n# IFDEF PYPI_PROXY\n#! ENV PIP_INDEX_URL=http://${PYPI_PROXY_HOST}:${PYPI_PROXY_PORT}/simple/\n#! ENV PIP_TRUSTED_HOST=${PYPI_PROXY_HOST}\n# ENDIF\n\nRUN export PIP_INSTALL_ARGS=\"-f ${DOWNLOAD_DIR}/shared -f ${DOWNLOAD_DIR}/${TARGETARCH}${TARGETVARIANT}\" && \\\n    export PIP_PREINSTALL_PACKAGES='numpy==1.20.1 scipy==1.5.1' && \\\n    export PIP_VERSION='pip<=20.2.4' && \\\n    if [ \"${TARGETARCH}${TARGETVARIANT}\" = 'amd64' ]; then \\\n        export PIP_PREINSTALL_PACKAGES=\"${PIP_PREINSTALL_PACKAGES} detect-simd~=0.2.0\"; \\\n    fi && \\\n    if [ ! \"${TARGETARCH}${TARGETVARIANT}\" = 'armv6' ]; then \\\n        export PIP_PREINSTALL_PACKAGES=\"${PIP_PREINSTALL_PACKAGES} scikit-learn==0.23.2\"; \\\n    fi && \\\n    export POCKETSPHINX_FROM_SRC=no && \\\n    cd ${BUILD_DIR} && \\\n    make && \\\n    make install\n\nRUN cd ${APP_DIR}/.venv && \\\n    find . -type f -name 'g2p.fst.gz' -exec gunzip -f {} \\\\;\n\n# -----------------------------------------------------------------------------\n# Run\n# -----------------------------------------------------------------------------\n\nFROM debian:buster-slim as run\n\n# IFDEF APT_PROXY\n#! RUN echo 'Acquire::http { Proxy \"http://${APT_PROXY_HOST}:${APT_PROXY_PORT}\"; };' >> /etc/apt/apt.conf.d/01proxy\n# ENDIF\n\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --yes --no-install-recommends \\\n        python3 libpython3.7 python3-pip python3-setuptools python3-distutils python3-llvmlite  \\\n        libportaudio2 libatlas3-base libgfortran4 \\\n        ca-certificates \\\n        supervisor mosquitto \\\n        perl curl sox alsa-utils libasound2-plugins jq \\\n        espeak flite \\\n        gstreamer1.0-tools gstreamer1.0-plugins-good \\\n        libsndfile1 libgomp1 libatlas3-base libgfortran4 libopenblas-base \\\n        libjbig0 liblcms2-2 libopenjp2-7 libtiff5 libwebp6 libwebpdemux2 libwebpmux3 \\\n        libatomic1 && rm -rf /var/lib/apt/lists/*;\n\n# IFDEF APT_PROXY\n#! RUN rm -f /etc/apt/apt.conf.d/01proxy\n# ENDIF\n\nENV APP_DIR=/usr/lib/rhasspy\nCOPY --from=build ${APP_DIR}/ ${APP_DIR}/\n\nCOPY etc/shflags ${APP_DIR}/etc/\nCOPY etc/wav/ ${APP_DIR}/etc/wav/\nCOPY bin/rhasspy-voltron bin/voltron-run ${APP_DIR}/bin/\nCOPY VERSION RHASSPY_DIRS ${APP_DIR}/\n\n# Copy Rhasspy source\nCOPY rhasspy/ ${APP_DIR}/rhasspy/\nCOPY rhasspy-server-hermes/ ${APP_DIR}/rhasspy-server-hermes/\nCOPY rhasspy-wake-snowboy-hermes/ ${APP_DIR}/rhasspy-wake-snowboy-hermes/\nCOPY rhasspy-wake-porcupine-hermes/ ${APP_DIR}/rhasspy-wake-porcupine-hermes/\nCOPY rhasspy-wake-precise-hermes/ ${APP_DIR}/rhasspy-wake-precise-hermes/\nCOPY rhasspy-profile/ ${APP_DIR}/rhasspy-profile/\nCOPY rhasspy-asr/ ${APP_DIR}/rhasspy-asr/\nCOPY rhasspy-asr-deepspeech/ ${APP_DIR}/rhasspy-asr-deepspeech/\nCOPY rhasspy-asr-deepspeech-hermes/ ${APP_DIR}/rhasspy-asr-deepspeech-hermes/\nCOPY rhasspy-asr-pocketsphinx/ ${APP_DIR}/rhasspy-asr-pocketsphinx/\nCOPY rhasspy-asr-pocketsphinx-hermes/ ${APP_DIR}/rhasspy-asr-pocketsphinx-hermes/\nCOPY rhasspy-asr-kaldi/ ${APP_DIR}/rhasspy-asr-kaldi/\nCOPY rhasspy-asr-kaldi-hermes/ ${APP_DIR}/rhasspy-asr-kaldi-hermes/\nCOPY rhasspy-dialogue-hermes/ ${APP_DIR}/rhasspy-dialogue-hermes/\nCOPY rhasspy-fuzzywuzzy/ ${APP_DIR}/rhasspy-fuzzywuzzy/\nCOPY rhasspy-fuzzywuzzy-hermes/ ${APP_DIR}/rhasspy-fuzzywuzzy-hermes/\nCOPY rhasspy-hermes/ ${APP_DIR}/rhasspy-hermes/\nCOPY rhasspy-homeassistant-hermes/ ${APP_DIR}/rhasspy-homeassistant-hermes/\nCOPY rhasspy-microphone-cli-hermes/ ${APP_DIR}/rhasspy-microphone-cli-hermes/\nCOPY rhasspy-microphone-pyaudio-hermes/ ${APP_DIR}/rhasspy-microphone-pyaudio-hermes/\nCOPY rhasspy-nlu/ ${APP_DIR}/rhasspy-nlu/\nCOPY rhasspy-nlu-hermes/ ${APP_DIR}/rhasspy-nlu-hermes/\nCOPY rhasspy-rasa-nlu-hermes/ ${APP_DIR}/rhasspy-rasa-nlu-hermes/\nCOPY rhasspy-remote-http-hermes/ ${APP_DIR}/rhasspy-remote-http-hermes/\nCOPY rhasspy-silence/ ${APP_DIR}/rhasspy-silence/\nCOPY rhasspy-snips-nlu/ ${APP_DIR}/rhasspy-snips-nlu/\nCOPY rhasspy-snips-nlu-hermes/ ${APP_DIR}/rhasspy-snips-nlu-hermes/\nCOPY rhasspy-speakers-cli-hermes/ ${APP_DIR}/rhasspy-speakers-cli-hermes/\nCOPY rhasspy-supervisor/ ${APP_DIR}/rhasspy-supervisor/\nCOPY rhasspy-tts-cli-hermes/ ${APP_DIR}/rhasspy-tts-cli-hermes/\nCOPY rhasspy-tts-wavenet-hermes/ ${APP_DIR}/rhasspy-tts-wavenet-hermes/\nCOPY rhasspy-wake-pocketsphinx-hermes/ ${APP_DIR}/rhasspy-wake-pocketsphinx-hermes/\nCOPY rhasspy-wake-raven/ ${APP_DIR}/rhasspy-wake-raven/\nCOPY rhasspy-wake-raven-hermes/ ${APP_DIR}/rhasspy-wake-raven-hermes/\nCOPY rhasspy-tts-larynx-hermes/ ${APP_DIR}/rhasspy-tts-larynx-hermes/\n\nEXPOSE 12101\n\nENTRYPOINT [\"bash\", \"/usr/lib/rhasspy/bin/rhasspy-voltron\"]\n"
}