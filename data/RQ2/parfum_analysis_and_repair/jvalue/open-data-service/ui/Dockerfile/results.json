{
  "startTime": 1674218217401,
  "endTime": 1674218217816,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#----------------------------------------------------------#\n# First stage: base image for further building and testing #\n#----------------------------------------------------------#\nFROM node:15-alpine as base\n\nARG UI_BASE_URL\nARG STORAGE_SERVICE_URL\nARG ADAPTER_SERVICE_URL\nARG PIPELINE_SERVICE_URL\nARG NOTIFICATION_SERVICE_URL\nARG SCHEMA_SERVICE_URL\n\n# install dependencies for pact (https://docs.pact.io/docker/)\nRUN apk add --no-cache --virtual build-dependencies build-base\nRUN apk --no-cache add ca-certificates wget bash \\\n  && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \\\n  && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-2.29-r0.apk \\\n  && apk add --no-cache glibc-2.29-r0.apk\n\nWORKDIR /app\n\n# Copy package*.json files first in order to make best use of docker layer caching\nCOPY package*.json ./\n\n# npm clean slate install to get reproducible builds and quicker installs\nRUN npm ci\n\n# copy rest of the files\nCOPY ./src ./src\nCOPY ./public ./public\nCOPY ./*.js ./\nCOPY ./*.json ./\n\nRUN echo \"VUE_APP_BASE_URL=$UI_BASE_URL\" > .env \\\n    && echo \"VUE_APP_ADAPTER_SERVICE_URL=$ADAPTER_SERVICE_URL\" >> .env \\\n    && echo \"VUE_APP_STORAGE_SERVICE_URL=$STORAGE_SERVICE_URL\" >> .env \\\n    && echo \"VUE_APP_PIPELINE_SERVICE_URL=$PIPELINE_SERVICE_URL\" >> .env \\\n    && echo \"VUE_APP_NOTIFICATION_SERVICE_URL=$NOTIFICATION_SERVICE_URL\" >> .env \\\n    && echo \"VUE_APP_SCHEMA_SERVICE_URL=$SCHEMA_SERVICE_URL\" >> .env \\\n    && cat .env\n\n#-------------------------------------------------------#\n# Second stage: image to build and test vue application #\n#-------------------------------------------------------#\nFROM base as build\n\n# lint project\nRUN npm run lint-ci\n\n# build vue.js production bundle to ./dist\nRUN npm run build\n\n# run unit test\nRUN npm run test\n\n#--------------------------------------------------------#\n# Third stage: serve static html and js files with nginx #\n#--------------------------------------------------------#\nFROM nginx:1-alpine\n\n# copy static result of builder to the standard nginx webroot\nCOPY --from=build /app/dist /usr/share/nginx/html\n\n# use custom nginx config\nCOPY default.conf /etc/nginx/conf.d/\n\nEXPOSE 80\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}