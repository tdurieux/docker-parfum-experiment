diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/helium/rosetta-helium/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/helium/rosetta-helium/Dockerfile/repaired.Dockerfile
index 6fff3fb..3c96c22 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/helium/rosetta-helium/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/helium/rosetta-helium/Dockerfile/repaired.Dockerfile
@@ -50,7 +50,7 @@ RUN set -xe \
 	&& REBAR3_DOWNLOAD_SHA256="a14711b09f6e1fc1b080b79d78c304afebcbb7fafed9d0972eb739f0ed89121b" \
 	&& mkdir -p /usr/src/rebar3-src \
 	&& curl -fSL -o rebar3-src.tar.gz "$REBAR3_DOWNLOAD_URL" \
-	&& echo "$REBAR3_DOWNLOAD_SHA256 rebar3-src.tar.gz" | sha256sum -c - \
+	&& echo "$REBAR3_DOWNLOAD_SHA256  rebar3-src.tar.gz" | sha256sum -c - \
 	&& tar -xzf rebar3-src.tar.gz -C /usr/src/rebar3-src --strip-components=1 \
 	&& rm rebar3-src.tar.gz \
 	&& cd /usr/src/rebar3-src \
@@ -70,7 +70,7 @@ RUN set -xe \
 	    && mkdir -p /opt/cmake \
 	    && wget -O /opt/cmake/cmake.tgz \
 	        https://github.com/Kitware/CMake/releases/download/v3.21.3/cmake-3.21.3-linux-x86_64.tar.gz \
-            && tar -zxf /opt/cmake/cmake.tgz -C /opt/cmake --strip-components=1
+            && tar -zxf /opt/cmake/cmake.tgz -C /opt/cmake --strip-components=1 && rm /opt/cmake/cmake.tgz && rm -rf /var/lib/apt/lists/*;
 
 # Install Rust toolchain
 RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
@@ -96,7 +96,7 @@ WORKDIR /usr/src/blockchain-node
 RUN ./rebar3 as ${BUILD_TARGET} tar -n blockchain_node
 
 RUN mkdir -p /opt/blockchain_node \
-	&& tar -zxvf _build/${BUILD_TARGET}/rel/*/*.tar.gz -C /opt/blockchain_node
+	&& tar -zxvf _build/${BUILD_TARGET}/rel/*/*.tar.gz -C /opt/blockchain_node && rm _build/${BUILD_TARGET}/rel/*/*.tar.gz
 
 
 FROM node-builder AS node-testnet
@@ -108,7 +108,7 @@ WORKDIR /usr/src/blockchain-node
 RUN ./rebar3 as ${BUILD_TARGET} tar -n blockchain_node
 
 RUN mkdir -p /opt/blockchain_node \
-	&& tar -zxvf _build/${BUILD_TARGET}/rel/*/*.tar.gz -C /opt/blockchain_node
+	&& tar -zxvf _build/${BUILD_TARGET}/rel/*/*.tar.gz -C /opt/blockchain_node && rm _build/${BUILD_TARGET}/rel/*/*.tar.gz
 
 
 FROM ubuntu:20.04 AS rosetta-builder
@@ -131,8 +131,8 @@ WORKDIR /src
 
 RUN apt update \
       && apt install -y --no-install-recommends \
-         curl ca-certificates git \      
-      && curl -L https://golang.org/dl/go1.17.1.linux-amd64.tar.gz | tar xzf -
+         curl ca-certificates git \
+      && curl -f -L https://golang.org/dl/go1.17.1.linux-amd64.tar.gz | tar xzf - && rm -rf /var/lib/apt/lists/*;
 
 ENV PATH="/src/go/bin:$PATH" \
     CGO_ENABLED=0
@@ -152,7 +152,7 @@ EXPOSE 44158
 
 RUN apt update \
     && apt install -y --no-install-recommends \
-         ca-certificates git npm
+         ca-certificates git npm && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /app
 
@@ -164,6 +164,6 @@ COPY --from=rosetta-builder /src/rosetta-helium/helium-constructor helium-constr
 RUN cd helium-constructor \
       && npm install \
       && npm run build \
-      && chmod +x /app/start.sh
+      && chmod +x /app/start.sh && npm cache clean --force;
 
 ENTRYPOINT ["/app/start.sh"]