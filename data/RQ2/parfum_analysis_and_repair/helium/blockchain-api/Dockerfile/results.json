{
  "startTime": 1674255996826,
  "endTime": 1674255997362,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 20,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#==========================================================\n# Build Stage\n#==========================================================\nARG ELIXIR_VERSION=1.8.2\nFROM elixir:${ELIXIR_VERSION} as build\n\n#==========================================================\n# Use /opt as a typical convention\n#==========================================================\nWORKDIR /opt/app\n\n#==========================================================\n# Build requirements arguments\n#==========================================================\n# The name of your application/release (required)\nARG APP_NAME\n# The version of the application we are building (required)\nARG APP_VSN\n# The environment to build with\nARG MIX_ENV\n\n#==========================================================\n# Set ENV using build args\n#==========================================================\nENV APP_NAME=${APP_NAME} \\\n    APP_VSN=${APP_VSN} \\\n    MIX_ENV=${MIX_ENV} \\\n    REPLACE_OS_VARS=true\n\n#==========================================================\n# Install core deps\n#==========================================================\nENV LD_LIBRARY_PATH /usr/local/lib\nRUN apt-get update && apt-get install --no-install-recommends -y curl locales autoconf automake libtool flex bison libgmp-dev cmake build-essential libssl-dev && rm -rf /var/lib/apt/lists/*;\n# Set the locale\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN git clone -b stable https://github.com/jedisct1/libsodium.git\nRUN cd libsodium && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make check && make install && cd ..\n\n#==========================================================\n# Support private repos (for now)\n#==========================================================\nCOPY --chown=root .ssh/id_rsa /root/.ssh/id_rsa\nRUN chmod 600 /root/.ssh/id_rsa\nRUN ssh-keyscan github.com >> /root/.ssh/known_hosts\nRUN echo \"StrictHostKeyChecking no \" >> /root/.ssh/config\n\n#==========================================================\n# Install build tools\n#==========================================================\nRUN mix local.rebar --force && mix local.hex --force\n\n#==========================================================\n# Copy only required files\n#==========================================================\nCOPY mix.exs .\nCOPY mix.lock .\nCOPY config/ config/\nCOPY lib/ lib/\nCOPY rel/ rel/\nCOPY priv/ priv/\n\n#==========================================================\n# Build Release\n#==========================================================\nRUN mix do deps.get, deps.compile, compile, distillery.release --verbose\n\n#==========================================================\n# Start\n#==========================================================\nCMD trap 'exit' INT; _build/${MIX_ENV}/rel/${APP_NAME}/bin/${APP_NAME} foreground\n"
}