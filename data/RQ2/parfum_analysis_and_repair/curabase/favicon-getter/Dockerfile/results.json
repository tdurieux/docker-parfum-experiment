{
  "startTime": 1674248128226,
  "endTime": 1674248129179,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim\n\nENV DEBIAN_FRONTEND noninteractive\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n            build-essential \\\n            python3-dev \\\n            python3-pip \\\n            python3-setuptools \\\n            python3-wheel \\\n            python3-cffi \\\n            libcairo2 \\\n            libpango-1.0-0 \\\n            libpangocairo-1.0-0 \\\n            libgdk-pixbuf2.0-0 \\\n            libffi-dev \\\n            shared-mime-info && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nCOPY requirements.txt /requirements.txt\nRUN pip install --no-cache-dir -r /requirements.txt\n\nRUN mkdir -p /app\nCOPY src /app\n\n# Pass the command line arg into the ENV arg, persisting it in the docker image\nARG IMAGE_VERSION\nENV IMAGE_VERSION=$IMAGE_VERSION\n\nEXPOSE 8000\n\nCOPY gunicorn_settings.py /gunicorn_settings.py\nRUN mkdir /app/icons && chmod 777 /app/icons\n\nWORKDIR /app\n\nCMD [\"gunicorn\", \"-c\", \"/gunicorn_settings.py\", \"wsgi:app\"]"
}