{
  "startTime": 1674216198092,
  "endTime": 1674216199455,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 8,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "ARG STARTING_IMAGE=nvidia/cuda:11.2.0-runtime-ubuntu20.04\nFROM ${STARTING_IMAGE}\n\n# Set frontend as non-interactive\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update\n\n# Install python and pip\nRUN apt-get install --no-install-recommends -y python3-opencv python3-pip && \\\n    python3 -m pip install --upgrade pip && \\\n    apt-get -y --no-install-recommends install git && rm -rf /var/lib/apt/lists/*;\n\n# Install nebullvm\nARG NEBULLVM_VERSION=latest\nRUN if [ \"$NEBULLVM_VERSION\" = \"latest\" ] ; then \\\n        git clone https://github.com/nebuly-ai/nebullvm.git ; \\\n        cd nebullvm ; \\\n        pip install --no-cache-dir .; \\\n    else \\\n        pip install --no-cache-dir nebullvm==${NEBULLVM_VERSION}; \\\n    fi\n\n# Install required python modules\nRUN pip install --no-cache-dir scipy==1.5.4 && \\\n    pip install --no-cache-dir cmake\n\n# Install default deep learning compilers\nARG COMPILER=all\nENV NO_COMPILER_INSTALLATION=1\nRUN if [ \"$COMPILER\" = \"all\" ] ; then \\\n        python3 -c \"import os; os.environ['NO_COMPILER_INSTALLATION'] = '0'; import nebullvm\" ; \\\n    elif [ \"$COMPILER\" = \"tensorrt\" ] ; then \\\n        python3 -c \"from nebullvm.installers.installers import install_tensor_rt; install_tensor_rt()\" ; \\\n    elif [ \"$COMPILER\" = \"openvino\" ] ; then \\\n        python3 -c \"from nebullvm.installers.installers import install_openvino; install_openvino()\" ; \\\n    elif [ \"$COMPILER\" = \"onnxruntime\" ] ; then \\\n        python3 -c \"from nebullvm.installers.installers import install_onnxruntime; install_onnxruntime()\" ; \\\n    fi\n\n# Install TVM\nRUN if [ \"$COMPILER\" = \"all\" ] || [ \"$COMPILER\" = \"tvm\" ] ; then \\\n        python3 -c \"from nebullvm.installers.installers import install_tvm; install_tvm()\" ; \\\n        python3 -c \"from tvm.runtime import Module\" ; \\\n    fi\n"
}