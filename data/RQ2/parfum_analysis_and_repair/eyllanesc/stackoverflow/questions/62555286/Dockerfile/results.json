{
  "startTime": 1674254548456,
  "endTime": 1674254549076,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nRUN apt-get update && \\\n    apt-get autoclean\n\nRUN apt-get update && apt-get install \\\n    -y --no-install-recommends python3 python3-virtualenv && rm -rf /var/lib/apt/lists/*;\n\nENV USERNAME=qt_user\nRUN useradd -ms /bin/bash $USERNAME\n\nENV XDG_RUNTIME_DIR=/run/user/1000\nRUN mkdir -p -m 0700 $XDG_RUNTIME_DIR && chown -R $USERNAME:users $XDG_RUNTIME_DIR\n\nWORKDIR /home/$USERNAME\n\nENV VIRTUAL_ENV=/home/$USERNAME/venv\nRUN python3 -m virtualenv --python=/usr/bin/python3 $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# Install dependencies:\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -vvv -r requirements.txt\n\nENV QT_VERSION=5.15.0\nENV QT_OUTPUT_DIR=/home/$USERNAME/qt\nRUN python -m aqt install $QT_VERSION linux desktop --outputdir $QT_OUTPUT_DIR\n\nRUN apt-get update && apt-get install \\\n    -y --no-install-recommends \\\n    build-essential \\\n    libgl-dev \\\n    libglib2.0-0 \\\n    libgssapi-krb5-2 && rm -rf /var/lib/apt/lists/*;\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN ln -fs /usr/share/zoneinfo/America/Lima /etc/localtime\n\nRUN apt-get update && apt-get install \\\n    -y --no-install-recommends \\\n    libsqlite3-dev \\\n    libsqlite3-mod-spatialite && rm -rf /var/lib/apt/lists/*;\n\nCOPY qsqlite qsqlite\n\nCOPY *.py /home/$USERNAME/\n\nRUN mkdir build && \\\n    cd build && \\\n    ../qt/5.15.0/gcc_64/bin/qmake ../qsqlite/ && \\\n    make && \\\n    cd .. && \\\n    cp build/libqsqlite.so .\n\nUSER $USERNAME\n"
}