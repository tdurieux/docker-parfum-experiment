diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/qhwa/dockerize/test_projects/phx_1.6/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/qhwa/dockerize/test_projects/phx_1.6/Dockerfile/repaired.Dockerfile
index 3d47769..01c33f2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/qhwa/dockerize/test_projects/phx_1.6/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/qhwa/dockerize/test_projects/phx_1.6/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax = docker/dockerfile:1.0-experimental
-
 # This Dockerfile was generated by [dockerize](https://hex.pm/packages/dockerize)
 # at 2021-09-26 07:07:47.886590Z
 
@@ -43,15 +41,15 @@ FROM debian:buster as elixir-runner
 # here:
 
 RUN apt-get update && \
-  apt-get install -y \
-  # If you're using `:crypto`, you'll need openssl installed \
+  apt-get install --no-install-recommends -y \
+
   libssl-dev \
-  locales
+  locales && rm -rf /var/lib/apt/lists/*;
 
 RUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && \
     locale-gen
-ENV LANG en_US.UTF-8  
-ENV LANGUAGE en_US:en  
+ENV LANG en_US.UTF-8 
+ENV LANGUAGE en_US:en 
 ENV LC_ALL en_US.UTF-8
 
 # -----------------------------------
@@ -118,30 +116,30 @@ RUN mix compile
 # -----------------------------------
 # ## -- BEGIN assets building with Node.js, NPM and webpack
 # FROM node:10-buster-slim as assets
-# 
+#
 # # prepare build dir
 # RUN mkdir -p /app/assets
-# 
+#
 # WORKDIR /src/assets
-# 
+#
 # # set build ENV
 # ENV NODE_ENV=prod
 # ENV NPM_REGISTRY=https://registry.npmjs.com/
-# 
+#
 # # install npm dependencies
 # COPY assets/package.json assets/package-lock.json ./assets/
 # COPY --from=deps deps/phoenix deps/phoenix
 # COPY --from=deps deps/phoenix_html deps/phoenix_html
-# 
+#
 # RUN npm \
 #   --registry ${NPM_REGISTRY} \
 #   --prefer-offline \
 #   --no-audit \
 #   ci
-# 
+#
 # COPY assets/ ./
 # RUN npm run deploy
-# 
+#
 # -----------------------------------
 # - stage: build
 # - job: digest