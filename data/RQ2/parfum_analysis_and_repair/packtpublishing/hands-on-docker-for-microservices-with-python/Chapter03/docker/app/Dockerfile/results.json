{
  "startTime": 1674253127644,
  "endTime": 1674253128390,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########\n# This image will compile the dependencies\n# It will install compilers and other packages, that won't be carried\n# over to the runtime image\n########\nFROM alpine:3.9 AS compile-image\n\n# Add requirements for python and pip\nRUN apk add --no-cache --update python3\n\nRUN mkdir -p /opt/code\nWORKDIR /opt/code\n\n# Install dependencies\nRUN apk add --no-cache python3-dev build-base gcc linux-headers postgresql-dev libffi-dev\n\n# Create a virtual environment for all the Python dependencies\nRUN python3 -m venv /opt/venv\n# Make sure we use the virtualenv:\nENV PATH=\"/opt/venv/bin:$PATH\"\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Install and compile uwsgi\nRUN pip3 install --no-cache-dir uwsgi==2.0.18\n# Install other dependencies\nCOPY ThoughtsBackend/requirements.txt /opt/\nRUN pip3 install --no-cache-dir -r /opt/requirements.txt\n\n########\n# This image is the runtime, will copy the dependencies from the other\n########\nFROM alpine:3.9 AS runtime-image\n\n# Install python\nRUN apk add --no-cache --update python3 curl libffi postgresql-libs\n# Copy uWSGI configuration\nRUN mkdir -p /opt/uwsgi\nADD docker/app/uwsgi.ini /opt/uwsgi/\nADD docker/app/start_server.sh /opt/uwsgi/\n\n# Create a user to run the service\nRUN addgroup -S uwsgi\nRUN adduser -H -D -S uwsgi\nUSER uwsgi\n\n# Copy the venv with compile dependencies from the compile-image\nCOPY --chown=uwsgi:uwsgi --from=compile-image /opt/venv /opt/venv\n# Be sure to activate the venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# Copy the code\nCOPY --chown=uwsgi:uwsgi ThoughtsBackend/ /opt/code/\n\n# Run parameters\nWORKDIR /opt/code\nEXPOSE 8000\nCMD [\"/bin/sh\", \"/opt/uwsgi/start_server.sh\"]\n"
}