{
  "startTime": 1674254555980,
  "endTime": 1674254556995,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is for localdev purposes only, so it won't be\n# optimised for size\nFROM alpine:3.9\n\n# Add the proper env variables for init the db\nARG POSTGRES_DB\nENV POSTGRES_DB $POSTGRES_DB\nARG POSTGRES_USER\nENV POSTGRES_USER $POSTGRES_USER\nARG POSTGRES_PASSWORD\nENV POSTGRES_PASSWORD $POSTGRES_PASSWORD\nARG POSTGRES_PORT\nENV LANG en_US.utf8\nEXPOSE $POSTGRES_PORT\n\n# For usage in startup, etc\nENV POSTGRES_HOST localhost\nENV DATABASE_ENGINE POSTGRESQL\n# Store the data inside the container, as we don't care for\n# persistence\nRUN mkdir -p /opt/data\nENV PGDATA /opt/data\n\nRUN apk update\nRUN apk add --no-cache bash curl su-exec python3\nRUN apk add --no-cache postgresql postgresql-contrib postgresql-dev\nRUN apk add --no-cache python3-dev build-base linux-headers gcc libffi-dev\n\n# Adding our code\nWORKDIR /opt/code\n\nRUN mkdir -p /opt/code/db\n# Add postgres setup\nADD ./docker/db/postgres-setup.sh /opt/code/db/\nRUN  /opt/code/db/postgres-setup.sh\n\n## Install our code to prepare the DB\nADD ./UsersBackend/requirements.txt /opt/code\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n## Need to import all the code, due dependencies to initialise the DB\nADD ./UsersBackend/ /opt/code/\n# Add all DB commanda\nADD ./docker/db/* /opt/code/db/\n\n## get the db ready\nRUN /opt/code/db/prepare_db.sh\n\n# Start the database in normal operation\nUSER postgres\nCMD [\"postgres\"]\n"
}