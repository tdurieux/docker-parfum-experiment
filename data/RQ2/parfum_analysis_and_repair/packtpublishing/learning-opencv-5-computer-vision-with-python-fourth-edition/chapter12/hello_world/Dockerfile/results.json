{
  "startTime": 1674251879609,
  "endTime": 1674251880935,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FUNCTION_DIR=\"/function\"\n\nFROM joeminichino/opencv4.6-python3.9 as build-image\n\n# Install aws-lambda-cpp build dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    g++ \\\n    make \\\n    cmake \\\n    unzip \\\n    libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\nARG FUNCTION_DIR\n\n# Create function directory\nRUN mkdir -p ${FUNCTION_DIR}\n\n# Copy function code\nCOPY app.py requirements.txt entry.sh cascade.xml ${FUNCTION_DIR}/\n\nRUN pip install --no-cache-dir \\\n    --target ${FUNCTION_DIR} \\\n    awslambdaric \\\n    requests\n\n\n# Multi-stage build: grab a fresh copy of the base image\nFROM joeminichino/opencv4.6-python3.9\n\n# Include global arg in this stage of the build\nARG FUNCTION_DIR\n# Set working directory to function root directory\nWORKDIR ${FUNCTION_DIR}\n\n# Copy in the build image dependencies\nCOPY --from=build-image ${FUNCTION_DIR} ${FUNCTION_DIR}\n\nADD https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie /usr/bin/aws-lambda-rie\nCOPY entry.sh /\nRUN chmod 755 /usr/bin/aws-lambda-rie /entry.sh\nENTRYPOINT [ \"/entry.sh\" ]\n\nCMD [ \"app.lambda_handler\" ]"
}