{
  "startTime": 1674253849388,
  "endTime": 1674253850693,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.2.34-apache-stretch\n\nMAINTAINER Imarc <info@imarc.com>\n\n# fix for postgresql-client\nRUN mkdir -p /usr/share/man/man1 && \\\n    mkdir -p /usr/share/man/man7\n\n# install supporting packages\nRUN apt-get update && apt-get install --no-install-recommends -y --fix-missing \\\n    apt-transport-https \\\n    autoconf \\\n    build-essential \\\n    chrpath \\\n    curl \\\n    dnsutils \\\n    freetds-dev \\\n    g++ \\\n    git-core \\\n    gnupg \\\n    imagemagick \\\n    libcurl4-openssl-dev \\\n    libdbd-freetds \\\n    libjpeg62-turbo-dev \\\n    libldap2-dev \\\n    libmagickwand-dev \\\n    libmcrypt-dev \\\n    libmemcached-dev \\\n    libmemcached11 \\\n    libpng-dev \\\n    libpq-dev \\\n    libpspell-dev \\\n    libsqlite3-dev \\\n    mysql-client \\\n    netcat \\\n    pkg-config \\\n    postgresql-client \\\n    python \\\n    subversion \\\n    unixodbc-dev \\\n    vim \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# link libsysbdb libs. (required for sqlsrv extension)\nRUN ln -s /usr/lib/x86_64-linux-gnu/libsybdb.so /usr/lib/libsybdb.so\nRUN ln -s /usr/lib/x86_64-linux-gnu/libsybdb.a /usr/lib/libsybdb.a\n\n# Configure GD with jpeg\nRUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/\n\n# Configure LDAP\nRUN docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/\n\n# install officially supported php extensions\nRUN docker-php-ext-install \\\n    bcmath \\\n    curl \\\n    gd \\\n    iconv \\\n    ldap \\\n    mysqli \\\n    opcache \\\n    pcntl \\\n    pdo \\\n    pdo_dblib \\\n    pdo_mysql \\\n    pdo_pgsql \\\n    pdo_sqlite \\\n    pgsql \\\n    pspell \\\n    soap \\\n    zip\n\n# install redis / xdebug extensions\nRUN pecl install \\\n    imagick \\\n    memcached \\\n    sqlsrv-5.8.0 \\\n    pdo_sqlsrv-5.8.0 \\\n    redis \\\n    xdebug\n\nRUN docker-php-ext-enable \\\n    imagick \\\n    memcached \\\n    pdo_sqlsrv \\\n    redis \\\n    sqlsrv \\\n    xdebug\n\n# cleanup apt\nRUN apt-get clean\nRUN apt-get autoremove -y\nRUN rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/src/*\n\n# install composer\nWORKDIR /tmp\nRUN wget https://getcomposer.org/composer.phar\nRUN mv composer.phar /bin/composer\nRUN chmod 755 /bin/composer\n\n# enable apache modules\nRUN a2enmod \\\n    cache \\\n    cache_disk \\\n    expires \\\n    headers \\\n    macro \\\n    http2 \\\n    lua \\\n    rewrite \\\n    vhost_alias\n\n# copy php.ini\nCOPY php.ini /usr/local/etc/php/conf.d\n\n# copy apache config\nCOPY 000-default.conf /etc/apache2/sites-enabled/000-default.conf\n\n# set working directory\nWORKDIR /var/www\n\n# entrypoint/command\nCOPY docker-entrypoint /usr/local/bin/\nRUN chmod 755 /usr/local/bin/docker-entrypoint\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint\"]\nCMD [\"apache2-foreground\"]\n"
}