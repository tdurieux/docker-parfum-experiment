diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/harisekhon/dockerfiles/backstage/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/harisekhon/dockerfiles/backstage/Dockerfile/repaired.Dockerfile
index dc68da5..5d5c2ac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/harisekhon/dockerfiles/backstage/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/harisekhon/dockerfiles/backstage/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-#  vim:ts=4:sts=4:sw=4:et
 #
 #  Author: Hari Sekhon
 #  Date: 2021-07-08 15:16:50 +0100 (Thu, 08 Jul 2021)
@@ -37,8 +36,8 @@ SHELL ["/bin/bash", "-euxo", "pipefail", "-c"]
 
 # hadolint ignore=DL3008,DL3015
 RUN apt-get update && \
-    apt-get install -y curl && \
-    curl -sSL "$RELEASE_URL" | tar zxv --strip-components=1
+    apt-get install --no-install-recommends -y curl && \
+    curl -f -sSL "$RELEASE_URL" | tar zxv --strip-components=1 && rm -rf /var/lib/apt/lists/*;
     # doc removes these package.json but this breaks the cli dependency in the next stage during yarn tsc:
     #
     # tsconfig.json(2,14): error TS6053: File '@backstage/cli/config/tsconfig.json' not found.
@@ -56,11 +55,11 @@ WORKDIR /app
 
 COPY --from=packages /app .
 
-RUN yarn install --frozen-lockfile --network-timeout 600000 && rm -rf "$(yarn cache dir)"
+RUN yarn install --frozen-lockfile --network-timeout 600000 && rm -rf "$(yarn cache dir)" && yarn cache clean;
 
 # '--jsx preserve' avoids a tonne of errors that exceed the 1MiB docker log and mask later breaking errors
-RUN yarn tsc --jsx preserve
-RUn yarn --cwd packages/backend backstage-cli backend:bundle --build-dependencies
+RUN yarn tsc --jsx preserve && yarn cache clean;
+RUn yarn --cwd packages/backend backstage-cli backend:bundle --build-dependencies && yarn cache clean;
 
 # ============================================================================ #
 # Stage 3 - Build the actual backend image and install production dependencies
@@ -87,7 +86,7 @@ WORKDIR /app
 COPY --from=build /app/yarn.lock /app/package.json /app/packages/backend/dist/skeleton.tar.gz ./
 RUN tar xzf skeleton.tar.gz && rm skeleton.tar.gz
 
-RUN yarn install --frozen-lockfile --production --network-timeout 600000 && rm -rf "$(yarn cache dir)"
+RUN yarn install --frozen-lockfile --production --network-timeout 600000 && rm -rf "$(yarn cache dir)" && yarn cache clean;
 
 # Copy the built packages from the build stage
 # ADD doesn't have --from feature