diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rust-embedded/rust-raspberrypi-os-tutorials/docker/rustembedded-osdev-utils/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rust-embedded/rust-raspberrypi-os-tutorials/docker/rustembedded-osdev-utils/Dockerfile/repaired.Dockerfile
index 7aa705d..fd87f3f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rust-embedded/rust-raspberrypi-os-tutorials/docker/rustembedded-osdev-utils/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rust-embedded/rust-raspberrypi-os-tutorials/docker/rustembedded-osdev-utils/Dockerfile/repaired.Dockerfile
@@ -16,7 +16,7 @@ LABEL maintainer="The resources team <resources@teams.rust-embedded.org>, Andre
 # Ruby gems
 COPY Gemfile .
 
-RUN set -ex;                                      \
+RUN set -ex; \
     tempPkgs='                                    \
         automake                                  \
         bison                                     \
@@ -27,8 +27,8 @@ RUN set -ex;                                      \
         ninja-build                               \
         pkg-config                                \
         wget                                      \
-    ';                                            \
-    apt-get update;                               \
+    '; \
+    apt-get update; \
     apt-get install -q -y --no-install-recommends \
         $tempPkgs                                 \
         # persistent packages
@@ -41,44 +41,44 @@ RUN set -ex;                                      \
         python3                                   \
         ruby                                      \
         ruby-dev                                  \
-    ;                                             \
+    ; \
     # GCC AArch64 tools
     if [ "$(uname -m)" = "aarch64" ]; then wget ${GCC_AARCH64}; else wget ${GCC_X86_64}; fi; \
-    tar -xf gcc-arm-10*;                                                                     \
+    tar -xf gcc-arm-10*; \
     cp                                                                                       \
         gcc-arm-10*/bin/aarch64-none-elf-objdump                                             \
         gcc-arm-10*/bin/aarch64-none-elf-readelf                                             \
         gcc-arm-10*/bin/aarch64-none-elf-nm                                                  \
-        /usr/local/bin/;                                                                     \
-    rm -rf gcc-arm-10*;                                                                      \
+        /usr/local/bin/; \
+    rm -rf gcc-arm-10*; \
     # Ruby dependencies
-    gem install bundler;                             \
+    gem install bundler; \
     bundle config set --local without 'development'; \
-    bundle install --retry 3;                        \
+    bundle install --retry 3; \
     # QEMU
-    git clone https://gitlab.com/qemu-project/qemu.git;        \
-    cd qemu;                                                   \
-    git checkout tags/v6.1.0;                                  \
-    ./configure --target-list=aarch64-softmmu --enable-modules \
-        --enable-tcg-interpreter --enable-debug-tcg            \
-        --python=/usr/bin/python3;                             \
-    make -j10;                                                 \
-    make install;                                              \
-    cd ..;                                                     \
-    rm -rf qemu;                                               \
+    git clone https://gitlab.com/qemu-project/qemu.git; \
+    cd qemu; \
+    git checkout tags/v6.1.0; \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --target-list=aarch64-softmmu --enable-modules \
+        --enable-tcg-interpreter --enable-debug-tcg \
+        --python=/usr/bin/python3; \
+    make -j10; \
+    make install; \
+    cd ..; \
+    rm -rf qemu; \
     # Openocd
     git clone --depth 1 https://git.code.sf.net/p/openocd/code openocd; \
-    cd openocd;                                                         \
-    ./bootstrap;                                                        \
-    ./configure --enable-ftdi;                                          \
-    make -j10;                                                          \
-    make install;                                                       \
+    cd openocd; \
+    ./bootstrap; \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-ftdi; \
+    make -j10; \
+    make install; \
     # GDB
     wget -P ~ git.io/.gdbinit; \
     # Cleanup
     apt-get purge -y --auto-remove $tempPkgs; \
-    apt-get autoremove -q -y;                 \
-    apt-get clean -q -y;                      \
+    apt-get autoremove -q -y; \
+    apt-get clean -q -y; \
     rm -rf /var/lib/apt/lists/*
 
 # Locales