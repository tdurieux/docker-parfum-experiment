diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/b-m-f/wirtbot/Build-Automation/WirtBot/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/b-m-f/wirtbot/Build-Automation/WirtBot/Dockerfile/repaired.Dockerfile
index 0f97634..413801f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/b-m-f/wirtbot/Build-Automation/WirtBot/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/b-m-f/wirtbot/Build-Automation/WirtBot/Dockerfile/repaired.Dockerfile
@@ -18,7 +18,7 @@ ENV NODE_ENV production
 # Install all dependecies via workspaces first
 COPY Interface/package.json  Interface/package.json
 COPY Interface/package-lock.json  Interface/package-lock.json
-COPY Interface/src Interface/src 
+COPY Interface/src Interface/src
 COPY Interface/public Interface/public
 COPY Interface/babel.config.js Interface/babel.config.js
 COPY Interface/vue.config.js Interface/vue.config.js
@@ -69,7 +69,7 @@ FROM docker.io/library/debian:bullseye-slim
 
 ENV DEBIAN_FRONTEND noninteractive
 RUN apt-get update && apt-get upgrade -y
-RUN apt-get install -yy nginx inotify-tools iproute2 wireguard-tools
+RUN apt-get install --no-install-recommends -yy nginx inotify-tools iproute2 wireguard-tools && rm -rf /var/lib/apt/lists/*;
 
 # Set up the s6 overlay init system
 COPY Build-Automation/WirtBot/s6-overlay-amd64-installer-2.1.0.2 /tmp/s6-overlay-amd64-installer
@@ -98,7 +98,7 @@ COPY Build-Automation/WirtBot/service-files/finisher /etc/services.d/interface/f
 
 # Core DNS
 ## CA-certificates are needed for correct DNSoverTLS forwarding of DNS requests
-RUN apt-get install -yy ca-certificates
+RUN apt-get install --no-install-recommends -yy ca-certificates && rm -rf /var/lib/apt/lists/*;
 RUN addgroup --gid ${DNS_GID:-1003} coredns
 RUN useradd --gid ${DNS_GID:-1003} --uid ${DNS_UID:-1003} -r -s /bin/false coredns
 RUN mkdir -p /etc/coredns
@@ -145,7 +145,7 @@ COPY Build-Automation/WirtBot/service-files/wireguard-metrics /etc/services.d/wi
 
 ## Add NFT firewall to allow traffic masquerading when using routed mode
 ARG environment=production
-RUN apt-get install -yy nftables
+RUN apt-get install --no-install-recommends -yy nftables && rm -rf /var/lib/apt/lists/*;
 COPY Build-Automation/WirtBot/service-files/firewall /firewall.sh
 RUN if [ "$environment" = "test" ] ; then rm /firewall.sh && touch /firewall.sh && echo "#! /bin/bash" >> /firewall.sh; fi
 RUN chmod +x /firewall.sh