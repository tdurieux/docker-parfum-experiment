diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ros2/ci/linux_docker_resources/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ros2/ci/linux_docker_resources/Dockerfile/repaired.Dockerfile
index 08f1e36..5f49855 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ros2/ci/linux_docker_resources/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ros2/ci/linux_docker_resources/Dockerfile/repaired.Dockerfile
@@ -15,7 +15,7 @@ ENV DEBIAN_FRONTEND noninteractive
 # https://wiki.ubuntu.com/PhasedUpdates
 RUN echo 'APT::Get::Never-Include-Phased-Updates "true";' > /etc/apt/apt.conf.d/90-phased-updates
 
-RUN apt-get update && apt-get install --no-install-recommends -y locales
+RUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN locale-gen en_US.UTF-8
 ENV LANG en_US.UTF-8
 
@@ -27,20 +27,20 @@ RUN apt-get update && apt-get install --no-install-recommends -y \
   ca-certificates \
   curl \
   gnupg2 \
-  apt-transport-https
+  apt-transport-https && rm -rf /var/lib/apt/lists/*;
 
 # Add the ROS repositories to the apt sources list.
 RUN if test ${UBUNTU_DISTRO} != jammy; then echo "deb http://repositories.ros.org/ubuntu/testing/ `lsb_release -cs` main" > /etc/apt/sources.list.d/ros-latest.list; fi
 RUN if test ${UBUNTU_DISTRO} = jammy; then echo "deb http://repo.ros2.org/ubuntu/testing/ `lsb_release -cs` main" > /etc/apt/sources.list.d/ros2-latest.list; fi
-RUN echo "Bust Cache for key update 2021-06-01" && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | apt-key add -
+RUN echo "Bust Cache for key update 2021-06-01" && curl -f -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | apt-key add -
 
 # Add the OSRF repositories to the apt sources list.
 RUN echo "deb http://packages.osrfoundation.org/gazebo/ubuntu `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-latest.list
-RUN curl --silent http://packages.osrfoundation.org/gazebo.key | apt-key add -
+RUN curl -f --silent https://packages.osrfoundation.org/gazebo.key | apt-key add -
 
 # Install some development tools.
-RUN apt-get update && apt-get install --no-install-recommends -y build-essential ccache cmake pkg-config python3-empy python3-pip python3-setuptools python3-vcstool python3-venv
-RUN apt-get update && apt-get install --no-install-recommends -y python3-lark python3-opencv
+RUN apt-get update && apt-get install --no-install-recommends -y build-essential ccache cmake pkg-config python3-empy python3-pip python3-setuptools python3-vcstool python3-venv && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update && apt-get install --no-install-recommends -y python3-lark python3-opencv && rm -rf /var/lib/apt/lists/*;
 # Install virtualenv 16.7.9 needed for Foxy builds on Focal. https://github.com/ros2/ci/issues/400
 RUN if test ${UBUNTU_DISTRO} = focal; then python3 -m pip install virtualenv==16.7.9; fi
 
@@ -77,29 +77,35 @@ RUN apt-get update && apt-get install --no-install-recommends -y \
   python3-pytest-timeout \
   python3-yaml \
   uncrustify \
-  yamllint
+  yamllint && rm -rf /var/lib/apt/lists/*;
 
 # Install clang if build arg is true
-RUN if test ${COMPILE_WITH_CLANG} = true; then apt-get update && apt-get install --no-install-recommends -y clang libc++-dev libc++abi-dev; fi
+RUN if test ${COMPILE_WITH_CLANG} = true; then \
+ apt-get update && apt-get install --no-install-recommends -y clang libc++-dev libc++abi-dev; rm -rf /var/lib/apt/lists/*; fi
 
 # Install coverage build dependencies.
-RUN apt-get update && apt-get install --no-install-recommends -y lcov
-RUN pip3 install -U lcov_cobertura_fix
+RUN apt-get update && apt-get install --no-install-recommends -y lcov && rm -rf /var/lib/apt/lists/*;
+RUN pip3 install --no-cache-dir -U lcov_cobertura_fix
 
 # Install the Connext binary from the OSRF repositories.
-RUN if test \( ${PLATFORM} = x86 -a ${INSTALL_CONNEXT_DEBS} = true -a ${UBUNTU_DISTRO} != jammy \); then apt-get update && RTI_NC_LICENSE_ACCEPTED=yes apt-get install -y rti-connext-dds-5.3.1; fi
-RUN if test \( ${PLATFORM} = x86 -a ${INSTALL_CONNEXT_DEBS} = true -a ${UBUNTU_DISTRO} = jammy \); then apt-get update && RTI_NC_LICENSE_ACCEPTED=yes apt-get install -y rti-connext-dds-6.0.1; fi
+RUN if test \( ${PLATFORM} = x86 -a ${INSTALL_CONNEXT_DEBS} = true -a ${UBUNTU_DISTRO} != jammy \); then \
+ apt-get update && RTI_NC_LICENSE_ACCEPTED=yes apt-get --no-install-recommends install -y rti-connext-dds-5.3.1; rm -rf /var/lib/apt/lists/*; fi
+RUN if test \( ${PLATFORM} = x86 -a ${INSTALL_CONNEXT_DEBS} = true -a ${UBUNTU_DISTRO} = jammy \); then \
+ apt-get update && RTI_NC_LICENSE_ACCEPTED=yes apt-get --no-install-recommends install -y rti-connext-dds-6.0.1; rm -rf /var/lib/apt/lists/*; fi
 
 # Install the RTI dependencies.
-RUN if test ${PLATFORM} = x86; then apt-get update && apt-get install --no-install-recommends -y default-jre-headless; fi
+RUN if test ${PLATFORM} = x86; then \
+ apt-get update && apt-get install --no-install-recommends -y default-jre-headless; rm -rf /var/lib/apt/lists/*; fi
 
 # Install dependencies for RTI web binaries install script.
-RUN apt-get update && apt-get install --no-install-recommends -y python3-pexpect
+RUN apt-get update && apt-get install --no-install-recommends -y python3-pexpect && rm -rf /var/lib/apt/lists/*;
 
 # Get and install the RTI web binaries.
 # Connext 5.3.1 for focal and earlier.
-RUN if test ${UBUNTU_DISTRO} != jammy; then cd /tmp && curl --silent https://s3.amazonaws.com/RTI/Bundles/5.3.1/Evaluation/rti_connext_dds_secure-5.3.1-eval-x64Linux3gcc5.4.0.tar.gz | tar -xz; fi
-RUN if test ${UBUNTU_DISTRO} != jammy; then cd /tmp && tar -xvf /tmp/openssl-1.0.2n-target-x64Linux3gcc5.4.0.tar.gz; fi
+RUN if test ${UBUNTU_DISTRO} != jammy; then \
+ cd /tmp && curl -f --silent https://s3.amazonaws.com/RTI/Bundles/5.3.1/Evaluation/rti_connext_dds_secure-5.3.1-eval-x64Linux3gcc5.4.0.tar.gz | tar -xz; fi
+RUN if test ${UBUNTU_DISTRO} != jammy; then \
+ cd /tmp && tar -xvf /tmp/openssl-1.0.2n-target-x64Linux3gcc5.4.0.tar.gz; rm /tmp/openssl-1.0.2n-target-x64Linux3gcc5.4.0.tar.gzfi
 # Connext 6.0.1 for jammy, the evaluation bundles don't contain security extensions so we need to distribute the pro binaries to ourselves.
 COPY rticonnextdds-src/ /tmp/rticonnextdds-src
 RUN for splitpkg in \
@@ -117,34 +123,35 @@ ADD rti_web_binaries_install_script.py /tmp/rti_web_binaries_install_script.py
 ADD rticonnextdds-license/rti_license.dat /tmp/rti_license.dat
 
 # Install the eProsima dependencies.
-RUN apt-get update && apt-get install --no-install-recommends -y libasio-dev libssl-dev libtinyxml2-dev valgrind
+RUN apt-get update && apt-get install --no-install-recommends -y libasio-dev libssl-dev libtinyxml2-dev valgrind && rm -rf /var/lib/apt/lists/*;
 
 # Install the CycloneDDS dependencies.
-RUN apt-get update && apt-get install --no-install-recommends -y bison libcunit1-dev
+RUN apt-get update && apt-get install --no-install-recommends -y bison libcunit1-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install OpenCV.
-RUN apt-get update && apt-get install --no-install-recommends -y libopencv-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libopencv-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install console_bridge for class_loader et al.
-RUN apt-get update && apt-get install --no-install-recommends -y libconsole-bridge-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libconsole-bridge-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install build dependencies for rviz et al.
-RUN apt-get update && apt-get install --no-install-recommends -y libassimp-dev libcurl4-openssl-dev libfreetype6-dev libgles2-mesa-dev libglu1-mesa-dev libqt5core5a libqt5gui5 libqt5opengl5 libqt5widgets5 libxaw7-dev libxrandr-dev qtbase5-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libassimp-dev libcurl4-openssl-dev libfreetype6-dev libgles2-mesa-dev libglu1-mesa-dev libqt5core5a libqt5gui5 libqt5opengl5 libqt5widgets5 libxaw7-dev libxrandr-dev qtbase5-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install build dependencies for rqt et al.
-RUN apt-get update && apt-get install --no-install-recommends -y pyqt5-dev python3-pyqt5 python3-pyqt5.qtsvg python3-sip-dev python3-pydot python3-pygraphviz
+RUN apt-get update && apt-get install --no-install-recommends -y pyqt5-dev python3-pyqt5 python3-pyqt5.qtsvg python3-sip-dev python3-pydot python3-pygraphviz && rm -rf /var/lib/apt/lists/*;
 
 # Install dependencies for robot_model and robot_state_publisher
-RUN apt-get update && apt-get install --no-install-recommends -y libtinyxml-dev libeigen3-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libtinyxml-dev libeigen3-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Python3 development files.
-RUN apt-get update && apt-get install --no-install-recommends -y python3-dev
+RUN apt-get update && apt-get install --no-install-recommends -y python3-dev && rm -rf /var/lib/apt/lists/*;
 
 # automatic invalidation once every day.
 RUN echo "@today_str"
 
 # Install build and test dependencies of ros1_bridge if there is a valid ROS 1 distro.
-RUN if test ${BRIDGE} = true -a -n "${ROS1_DISTRO}"; then apt-get update && apt-get install --no-install-recommends -y \
+RUN if test ${BRIDGE} = true -a -n "${ROS1_DISTRO}"; then \
+ apt-get update && apt-get install --no-install-recommends -y \
     ros-${ROS1_DISTRO}-catkin \
     ros-${ROS1_DISTRO}-common-msgs \
     ros-${ROS1_DISTRO}-rosbash \
@@ -153,7 +160,7 @@ RUN if test ${BRIDGE} = true -a -n "${ROS1_DISTRO}"; then apt-get update && apt-
     ros-${ROS1_DISTRO}-rosmsg \
     ros-${ROS1_DISTRO}-roscpp-tutorials \
     ros-${ROS1_DISTRO}-rospy-tutorials \
-    ros-${ROS1_DISTRO}-tf2-msgs; fi
+    ros-${ROS1_DISTRO}-tf2-msgs; rm -rf /var/lib/apt/lists/*; fi
 
 # Install dependencies for RViz visual tests
 RUN apt-get update && apt-get install --no-install-recommends -y \
@@ -162,13 +169,13 @@ RUN apt-get update && apt-get install --no-install-recommends -y \
     libosmesa6 \
     mesa-utils \
     xvfb \
-    matchbox-window-manager
+    matchbox-window-manager && rm -rf /var/lib/apt/lists/*;
 
 # Install dependencies for iceoryx
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     acl \
     libacl1-dev \
-    libncurses5-dev
+    libncurses5-dev && rm -rf /var/lib/apt/lists/*;
 
 # After all packages are installed, update ccache symlinks (see ros2/ci#326).
 # This command is supposed to be invoked whenever a new compiler is installed