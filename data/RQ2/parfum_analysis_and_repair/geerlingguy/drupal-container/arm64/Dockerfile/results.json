{
  "startTime": 1674250485852,
  "endTime": 1674250486893,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\nENV php_version=\"7.4\"\n\n# Add Ondrej Sury's apt repo and requirements.\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y apt-transport-https lsb-release ca-certificates curl wget git \\\n    && wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n    && echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" > /etc/apt/sources.list.d/php.list \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install Apache and PHP.\nRUN apt-get update \\\n    && apt-get install -y \\\n       apache2 libapache2-mod-php${php_version} libpcre3-dev unzip \\\n       php${php_version}-common php${php_version}-dev php${php_version}-gd php${php_version}-curl php${php_version}-imap php${php_version}-opcache php${php_version}-xml php${php_version}-mbstring php${php_version}-mysql php${php_version}-zip php${php_version}-apcu \\\n       mariadb-client --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Force specific version of PHP.\nRUN update-alternatives --set php /usr/bin/php${php_version} \\\n    && update-alternatives --set phar /usr/bin/phar${php_version} \\\n    && update-alternatives --set phar.phar /usr/bin/phar.phar${php_version} \\\n    && update-alternatives --set phpize /usr/bin/phpize${php_version} \\\n    && update-alternatives --set php-config /usr/bin/php-config${php_version}\n\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\nRUN a2enmod rewrite\n\nRUN rm -f /etc/apache2/sites-enabled/000-default.conf\nCOPY vhosts.conf /etc/apache2/sites-enabled/vhosts.conf\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s usr/local/bin/docker-entrypoint.sh / # For backwards compatibility.\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nWORKDIR \"/var/www/html\"\n\nEXPOSE 80\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n"
}