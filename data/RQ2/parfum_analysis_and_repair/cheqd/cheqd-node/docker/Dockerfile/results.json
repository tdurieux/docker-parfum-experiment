{
  "startTime": 1674253857349,
  "endTime": 1674253858443,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################\n###        STAGE 1: Build node binary pre-requisites        ###\n###############################################################\n\nFROM golang:1.17.8-buster as builder\n\nRUN apt-get update && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get -y install --no-install-recommends \\\n    curl \\\n    git \\\n    libprotobuf-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Get go protoc compiler plugins. Taken from: tendermintdev/sdk-proto-gen:v0.2\nENV GOLANG_PROTOBUF_VERSION=1.3.5 \\\n    GOGO_PROTOBUF_VERSION=1.3.2 \\\n    GRPC_GATEWAY_VERSION=1.14.7\n\nRUN go get \\\n    github.com/golang/protobuf/protoc-gen-go@v${GOLANG_PROTOBUF_VERSION} \\\n    github.com/gogo/protobuf/protoc-gen-gogo@v${GOGO_PROTOBUF_VERSION} \\\n    github.com/gogo/protobuf/protoc-gen-gogofast@v${GOGO_PROTOBUF_VERSION} \\\n    github.com/gogo/protobuf/protoc-gen-gogofaster@v${GOGO_PROTOBUF_VERSION} \\\n    github.com/grpc-ecosystem/grpc-gateway/protoc-gen-grpc-gateway@v${GRPC_GATEWAY_VERSION} \\\n    github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger@v${GRPC_GATEWAY_VERSION} \\\n    github.com/regen-network/cosmos-proto/protoc-gen-gocosmos@latest\n\n# Install buf\nSHELL [\"/bin/bash\", \"-euo\", \"pipefail\", \"-c\"]\n\nRUN PREFIX=\"/usr/local\" && \\\n    VERSION=\"1.0.0-rc8\" && \\\n    curl -f -sSL \"https://github.com/bufbuild/buf/releases/download/v${VERSION}/buf-$(uname -s)-$(uname -m).tar.gz\" | \\\n    tar -xvzf - -C \"${PREFIX}\" --strip-components 1\n\n# Copy pre-requisites before building the node binary\nWORKDIR /app\n\nCOPY app ./app\nCOPY cmd ./cmd\nCOPY scripts ./scripts\nCOPY proto ./proto\nCOPY x ./x\nCOPY go.mod .\nCOPY go.sum .\nCOPY Makefile .\n# Required to fetch version\nCOPY .git .\n\n# Make node binary\nRUN make proto-gen build\n\n###############################################################\n###      STAGE 2: Build cheqd binary base container         ###\n###############################################################\n\nFROM ubuntu:focal AS base\n\nLABEL org.opencontainers.image.description \"cheqd CLI Docker image\"\nLABEL org.opencontainers.image.source \"https://github.com/cheqd/cheqd-node\"\nLABEL org.opencontainers.image.documentation \"https://docs.cheqd.io/node\"\n\n# Copy compiled node binary from Stage 1\nCOPY --from=builder /app/build-tools/cheqd-noded /bin\n\n# Set user directory and details\nARG CHEQD_HOME_DIR=\"/home/cheqd\"\nARG UID=1000\nARG GID=1000\n\n# Add cheqd user to use in the container\nRUN groupadd --system --gid $GID cheqd \\\n    && useradd --system --create-home --home-dir ${CHEQD_HOME_DIR} --shell /bin/bash --gid cheqd --uid $UID cheqd\n\nWORKDIR ${CHEQD_HOME_DIR}\nUSER cheqd\n\n# Document default ports to expose to host\nEXPOSE 26656 26657 26660 1317 9090 9091\n\n# Define stop scenarios\nSTOPSIGNAL SIGTERM\n\n# Default entrypoint for cheqd-noded CLI usage\nENTRYPOINT [ \"cheqd-noded\" ]\n\n\n###############################################################\n###             STAGE 3: Build cheqd-node image             ###\n###############################################################\n\nFROM base AS node\n\nLABEL org.opencontainers.image.description \"cheqd Node Docker image\"\nLABEL org.opencontainers.image.source \"https://github.com/cheqd/cheqd-node\"\nLABEL org.opencontainers.image.documentation \"https://docs.cheqd.io/node\"\n\n# Set runner script\nCOPY --chown=cheqd:cheqd docker/entrypoint.sh /bin/node-start\nRUN chmod +x /bin/node-start\n\n# Default entrypoint for cheqd-noded CLI usage\nENTRYPOINT [ \"node-start\" ]\n\n\n###############################################################\n###        STAGE 4: Build Cosmovisor                        ###\n###############################################################\n\nFROM golang:1.17.8-buster AS cosmos_builder\n\nRUN git clone https://github.com/cosmos/cosmos-sdk.git\n\nWORKDIR /go/cosmos-sdk/\n\nRUN git status \\\n    && git checkout cosmovisor/v1.1.0 \\\n    && make cosmovisor\n\n\n###############################################################\n###          STAGE 5: Cosmovisor-based node image           ###\n###############################################################\n\nFROM base AS cosmovisor\n\nCOPY --from=cosmos_builder /go/cosmos-sdk/cosmovisor/cosmovisor /bin\nCOPY --chown=cheqd:cheqd docker/cosmovisor.sh /bin/cosmovisor.sh\n\nARG CHEQD_HOME_DIR=\"/home/cheqd\"\n\nRUN chmod +x /bin/cosmovisor.sh\n\nUSER cheqd\n\nENV DAEMON_HOME=${CHEQD_HOME_DIR}/.cheqdnode\nENV DAEMON_NAME=cheqd-noded\nENV DAEMON_ALLOW_DOWNLOAD_BINARIES=true\nENV DAEMON_RESTART_AFTER_UPGRADE=true\n\nENTRYPOINT [ \"cosmovisor.sh\" ]\n"
}