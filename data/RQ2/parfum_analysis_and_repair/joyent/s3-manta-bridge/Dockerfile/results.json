{
  "startTime": 1674217777048,
  "endTime": 1674217778184,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 8,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 8,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 8,
        "columnEnd": 158
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 8,
        "columnEnd": 23
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 8,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.4\nMAINTAINER Elijah Zupancic <elijah@zupancic.name>\n\nENV TZ=utc\nENV RUNIT_VERSION=2.1.2\nENV NODE_VERSION=4.5.0\nENV RUNSVINIT_VERSION=2.0.0\n\n# Copy the application\nRUN mkdir -p /home/app/tmp\nCOPY package.json /home/app/\nCOPY docker/usr/local/bin/proclimit.sh /usr/local/bin/proclimit.sh\n\nRUN chmod +x /usr/local/bin/proclimit.sh \\\n     && apk upgrade --update \\\n     && apk add curl make gcc g++ linux-headers paxctl musl-dev git \\\n        libgcc libstdc++ binutils-gold python openssl-dev zlib-dev \\\n        nginx \\\n     && mkdir -p /root/src \\\n     && cd /root/src \\\n     && curl -f -sSL https://smarden.org/runit/runit-${RUNIT_VERSION}.tar.gz > /tmp/runit-${RUNIT_VERSION}.tar.gz \\\n     && echo \"398f7bf995acd58797c1d4a7bcd75cc1fc83aa66  /tmp/runit-${RUNIT_VERSION}.tar.gz\" | sha1sum -c \\\n     && mkdir -p /root/src/runit \\\n     && tar -C /root/src/runit -xzf /tmp/runit-${RUNIT_VERSION}.tar.gz \\\n     && cd /root/src/runit/admin/runit-${RUNIT_VERSION}/src \\\n     && make -j$(/usr/local/bin/proclimit.sh || grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \\\n     && cd .. \\\n     && cat package/commands | xargs -I {} mv -f src/{} /sbin/ \\\n     && cd /root/src \\\n     && curl -f -sSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.xz > /tmp/node-v${NODE_VERSION}.tar.xz \\\n     && echo \"97b99d378c56802444208409568e2e66c46332897f06aead74d1ffbe733bd488  /tmp/node-v${NODE_VERSION}.tar.xz\" | sha256sum -c \\\n     && unxz -c /tmp/node-v${NODE_VERSION}.tar.xz | tar xf - \\\n     && cd /root/src/node-* \\\n     && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --without-snapshot \\\n     && make -j$(/usr/local/bin/proclimit.sh || grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) \\\n     && make install \\\n     && paxctl -cm /usr/bin/node \\\n     && npm cache clean --force \\\n     && adduser -h /home/app -s /bin/sh -D app \\\n     && cd /home/app \\\n     && npm install --production \\\n     && npm install pm2@next -g \\\n     && find /home/app/node_modules/ -name \\*.md -type f | xargs rm -rf $1 \\\n     && find /home/app/node_modules/ -name docs -or -name examples -type d | xargs rm -rf $1 \\\n     && curl -f -sSL https://github.com/peterbourgon/runsvinit/releases/download/v${RUNSVINIT_VERSION}/runsvinit-linux-amd64.tgz > /tmp/runsvinit-linux-amd64.tgz \\\n     && echo \"4b357b8eba1b9a53d6368145613012af3aa74ce56576e99bad8478f70d421d9f  /tmp/runsvinit-linux-amd64.tgz\" | sha256sum -c \\\n     && tar -C /usr/local/bin -xzf /tmp/runsvinit-linux-amd64.tgz \\\n     && chmod -v +x /usr/local/bin/runsvinit \\\n     && apk del make gcc g++ python linux-headers git openssl-dev \\\n                paxctl musl-dev binutils-gold openssl-dev zlib-dev \\\n     && rm -rf /root/src /tmp/* /usr/share/man /var/cache/apk/* \\\n        /root/.npm /root/.node-gyp /usr/lib/node_modules/npm/man \\\n        /usr/lib/node_modules/npm/doc /usr/lib/node_modules/npm/html \\\n        /etc/ssl /usr/include \\\n        /tmp/node-v${NODE_VERSION}.tar.xz \\\n        /tmp/runit-${RUNIT_VERSION}.tar.gz && npm cache clean --force;\n\nCOPY lib/ /home/app/lib\nCOPY etc/ /home/app/etc\nCOPY app.js /home/app/\nCOPY docker/home/app/process.yml /home/app/process.yml\nCOPY docker/etc/ /etc\nCOPY docker/usr/local/bin/load_tls_env.sh /usr/local/bin/load_tls_env.sh\nCOPY docker/init /init\n\nRUN chown -R app:app /home/app \\\n    && chmod -v +x /usr/local/bin/load_tls_env.sh \\\n    && chmod -v +x /init \\\n    && chmod -v +x /etc/service/nginx/run \\\n    && chmod -v +x /etc/service/pm2/run \\\n    && mkdir -p /etc/nginx/sites-enabled \\\n    && ln -s /etc/service /service \\\n    && ln -s /etc/nginx/sites-available/s3-manta-bridge.conf /etc/nginx/sites-enabled/s3-manta-bridge.conf\n\nEXPOSE 80\nEXPOSE 443\n\nCMD [\"/init\"]\n"
}