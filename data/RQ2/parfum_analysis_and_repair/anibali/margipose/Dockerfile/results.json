{
  "startTime": 1674249726198,
  "endTime": 1674249727457,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 32,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-base-ubuntu16.04\n\n# Install some basic utilities\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    ca-certificates \\\n    sudo \\\n    git \\\n    bzip2 \\\n    libx11-6 \\\n && rm -rf /var/lib/apt/lists/*\n\n# Create a working directory\nRUN mkdir /app\nWORKDIR /app\n\n# Create a non-root user and switch to it\nRUN adduser --disabled-password --gecos '' --shell /bin/bash user \\\n && chown -R user:user /app\nRUN echo \"user ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/90-user\nUSER user\n\n# All users can use /home/user as their home directory\nENV HOME=/home/user\nRUN chmod 777 /home/user\n\n# Install Miniconda\nENV CONDA_AUTO_UPDATE_CONDA=false\nENV PATH=/home/user/miniconda/bin:$PATH\nRUN curl -f -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p ~/miniconda \\\n && rm ~/miniconda.sh\n\n# Setup conda environment\nCOPY environment.yml .\nRUN conda env update --name base\n\n# Use tkinter as the default matplotlib backend\nRUN mkdir -p $HOME/.config/matplotlib \\\n && echo \"backend : TkAgg\" > $HOME/.config/matplotlib/matplotlibrc\n\n# Install other dependencies from pip\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Replace Pillow with the faster Pillow-SIMD (optional)\nRUN pip uninstall -y pillow \\\n && sudo apt-get update && sudo apt-get install --no-install-recommends -y gcc libjpeg8-dev zlib1g-dev \\\n && pip install --no-cache-dir pillow-simd==6.2.2post1 \\\n && sudo apt-get remove -y gcc \\\n && sudo apt-get autoremove -y \\\n && sudo rm -rf /var/lib/apt/lists/*\n\nCOPY --chown=user:user . /app\nRUN pip install --no-cache-dir -U .\n\n# Set the default command to python3\nCMD [\"python3\"]\n"
}