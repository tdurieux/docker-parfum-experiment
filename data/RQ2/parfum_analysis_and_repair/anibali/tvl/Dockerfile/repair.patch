diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/anibali/tvl/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/anibali/tvl/Dockerfile/repaired.Dockerfile
index ecca3d0..14d44db 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/anibali/tvl/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/anibali/tvl/Dockerfile/repaired.Dockerfile
@@ -4,7 +4,7 @@ FROM nvidia/cuda:10.0-devel-ubuntu18.04 as ffmpeg-builder
 RUN rm /etc/apt/sources.list.d/nvidia-ml.list
 
 RUN apt-get update \
- && apt-get install -y curl git pkg-config yasm libx264-dev checkinstall \
+ && apt-get install --no-install-recommends -y curl git pkg-config yasm libx264-dev checkinstall \
  && rm -rf /var/lib/apt/lists/*
 
 # Install nv-codec-headers for FFmpeg NVIDIA hardware acceleration
@@ -17,11 +17,11 @@ RUN cd /tmp \
 
 # Build FFmpeg, enabling only selected features
 ARG FFMPEG_VERSION=4.2.2
-RUN cd /tmp && curl -sLO http://ffmpeg.org/releases/ffmpeg-$FFMPEG_VERSION.tar.bz2 \
+RUN cd /tmp && curl -f -sLO http://ffmpeg.org/releases/ffmpeg-$FFMPEG_VERSION.tar.bz2 \
  && tar xf ffmpeg-$FFMPEG_VERSION.tar.bz2 \
  && rm ffmpeg-$FFMPEG_VERSION.tar.bz2 \
  && cd ffmpeg-$FFMPEG_VERSION \
- && ./configure --prefix=/usr/local \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
     --disable-static \
     --enable-shared \
     --enable-gpl \
@@ -43,13 +43,13 @@ FROM nvidia/cuda:10.0-devel-ubuntu18.04 as tvl-builder
 RUN rm /etc/apt/sources.list.d/nvidia-ml.list
 
 RUN apt-get update \
- && apt-get install -y curl git \
+ && apt-get install --no-install-recommends -y curl git \
  && rm -rf /var/lib/apt/lists/*
 
 # Install Miniconda and Python 3.6.13
 ENV CONDA_AUTO_UPDATE_CONDA=false
 ENV PATH=/root/miniconda/bin:$PATH
-RUN curl -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh \
+RUN curl -f -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh \
  && chmod +x ~/miniconda.sh \
  && ~/miniconda.sh -b -p ~/miniconda \
  && rm ~/miniconda.sh \
@@ -57,7 +57,7 @@ RUN curl -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py39
  && conda clean -ya
 
 RUN apt-get update \
- && apt-get install -y pkg-config \
+ && apt-get install --no-install-recommends -y pkg-config \
  && rm -rf /var/lib/apt/lists/*
 
 # Install project requirements
@@ -73,7 +73,7 @@ RUN dpkg -i /tmp/ffmpeg.deb && rm /tmp/ffmpeg.deb
 # Add a stub version of libnvcuvid.so for building (required for CUDA backends).
 # This library is provided by nvidia-docker at runtime when the environment variable
 # NVIDIA_DRIVER_CAPABILITIES includes "video".
-RUN curl -sLo /usr/lib/x86_64-linux-gnu/libnvcuvid.so.1 \
+RUN curl -f -sLo /usr/lib/x86_64-linux-gnu/libnvcuvid.so.1 \
     https://raw.githubusercontent.com/NVIDIA/nvvl/bde20830cf171af8d10ef8222449237382b178ef/pytorch/test/docker/libnvcuvid.so \
  && ln -s /usr/local/nvidia/lib64/libnvcuvid.so.1 /usr/local/lib/libnvcuvid.so \
  && ln -s libnvcuvid.so.1 /usr/lib/x86_64-linux-gnu/libnvcuvid.so
@@ -94,13 +94,13 @@ FROM nvidia/cuda:10.0-devel-ubuntu18.04
 RUN rm /etc/apt/sources.list.d/nvidia-ml.list
 
 RUN apt-get update \
- && apt-get install -y curl git \
+ && apt-get install --no-install-recommends -y curl git \
  && rm -rf /var/lib/apt/lists/*
 
 # Install Miniconda and Python 3.6.13
 ENV CONDA_AUTO_UPDATE_CONDA=false
 ENV PATH=/root/miniconda/bin:$PATH
-RUN curl -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh \
+RUN curl -f -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py39_4.10.3-Linux-x86_64.sh \
  && chmod +x ~/miniconda.sh \
  && ~/miniconda.sh -b -p ~/miniconda \
  && rm ~/miniconda.sh \
@@ -108,7 +108,7 @@ RUN curl -sLo ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-py39
  && conda clean -ya
 
 RUN apt-get update \
- && apt-get install -y pkg-config \
+ && apt-get install --no-install-recommends -y pkg-config \
  && rm -rf /var/lib/apt/lists/*
 
 # Install project requirements
@@ -119,7 +119,7 @@ RUN conda env update -n base -f /tmp/environment.yml \
 
 # Install X display server client
 RUN apt-get update \
- && apt-get install -y libx11-6 \
+ && apt-get install --no-install-recommends -y libx11-6 \
  && rm -rf /var/lib/apt/lists/*
 
 # Install FFmpeg
@@ -131,12 +131,12 @@ WORKDIR /app
 
 # Install OpenCV dependencies
 RUN apt-get update \
- && apt-get install -y libsm6 libxext6 libxrender1 \
+ && apt-get install --no-install-recommends -y libsm6 libxext6 libxrender1 \
  && rm -rf /var/lib/apt/lists/*
 
 # Install tvl
 COPY --from=tvl-builder /app/dist/tvl*.whl /tmp/
-RUN pip install -f /tmp \
+RUN pip install --no-cache-dir -f /tmp \
     tvl \
     tvl-backends-nvdec \
     tvl-backends-opencv \