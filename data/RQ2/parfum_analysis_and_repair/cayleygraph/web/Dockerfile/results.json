{
  "startTime": 1674221140822,
  "endTime": 1674221141761,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# Build static files using node\nFROM node as builder\n\nADD package.json .\nADD yarn.lock .\n\nRUN yarn && yarn cache clean;\n\n# Copy files relevant to build only\nADD src src\nADD public public\nADD scripts scripts\nADD tsconfig.json tsconfig.json\nADD .eslintrc.json .eslintrc.json\n\nRUN yarn build && yarn cache clean;\n\n# For the acutal serving only nginx is required\nFROM nginx\n\n# Copy build results to NGINX HTML directory\nCOPY --from=builder /build /usr/share/nginx/html\n# Copy NGINX configuration\nCOPY nginx.conf /etc/nginx\n# Copy entrypoint script\nCOPY docker-entrypoint.sh /entrypoint.sh\n# Give entrypoint script access permission\nRUN chmod 755 /entrypoint.sh\n\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\nCMD [\"nginx\"]\n"
}