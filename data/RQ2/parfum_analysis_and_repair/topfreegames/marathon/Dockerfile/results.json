{
  "startTime": 1674249710149,
  "endTime": 1674249711461,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 57,
        "columnEnd": 76
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright (c) 2016 TFG Co <backend@tfgco.com>\n# Author: TFG Co <backend@tfgco.com>\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy of\n# this software and associated documentation files (the \"Software\"), to deal in\n# the Software without restriction, including without limitation the rights to\n# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n# the Software, and to permit persons to whom the Software is furnished to do so,\n# subject to the following conditions:\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n#\n\nFROM golang:1.12-alpine\n\nMAINTAINER TFG Co <backend@tfgco.com>\n\nRUN apk update\nRUN apk add --no-cache make git g++ bash python wget pkgconfig\n\nENV LIBRDKAFKA_VERSION 0.11.6\nRUN wget -O /root/librdkafka-${LIBRDKAFKA_VERSION}.tar.gz https://github.com/edenhill/librdkafka/archive/v${LIBRDKAFKA_VERSION}.tar.gz && \\\n    tar -xzf /root/librdkafka-${LIBRDKAFKA_VERSION}.tar.gz -C /root && \\\n    cd /root/librdkafka-${LIBRDKAFKA_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && make clean && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --clean && \\\n    go get -u github.com/golang/dep/cmd/dep && rm /root/librdkafka-${LIBRDKAFKA_VERSION}.tar.gz\n\nRUN mkdir -p /go/src/github.com/topfreegames/marathon\nWORKDIR /go/src/github.com/topfreegames/marathon\n\nADD Gopkg.lock /go/src/github.com/topfreegames/marathon\nADD Gopkg.toml /go/src/github.com/topfreegames/marathon\nRUN dep ensure -vendor-only\n\nADD . /go/src/github.com/topfreegames/marathon\n\nENV CPLUS_INCLUDE_PATH /usr/local/include\nENV LIBRARY_PATH /usr/local/lib\nENV LD_LIBRARY_PATH /usr/local/lib\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && make build\n\nRUN mkdir /app\nRUN mv /go/src/github.com/topfreegames/marathon/bin/marathon /app/marathon\nRUN mv /go/src/github.com/topfreegames/marathon/config /app/config\nRUN rm -r /go/src/github.com/topfreegames/marathon\n\nWORKDIR /app\n\nEXPOSE 8080 8081\nVOLUME /app/config\n\nCMD /app/marathon start-api -c /app/config/default.yaml\n"
}