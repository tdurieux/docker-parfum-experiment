diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xiaopeng163/docker-k8s-lab/code/docker/best-practise/6-no-root/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xiaopeng163/docker-k8s-lab/code/docker/best-practise/6-no-root/Dockerfile/repaired.Dockerfile
index 8bd75d4..9c5ec7a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xiaopeng163/docker-k8s-lab/code/docker/best-practise/6-no-root/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xiaopeng163/docker-k8s-lab/code/docker/best-practise/6-no-root/Dockerfile/repaired.Dockerfile
@@ -21,37 +21,37 @@ ENV GOSU_VERSION 1.12
 ENV JSYAML_VERSION 3.13.1
 
 RUN set -ex; \
-    \
+
     savedAptMark="$(apt-mark showmanual)"; \
     apt-get update; \
     apt-get install -y --no-install-recommends \
     wget \
     ; \
-    if ! command -v gpg > /dev/null; then \
+    if ! command -v gpg > /dev/null;then \
     apt-get install -y --no-install-recommends gnupg dirmngr; \
     savedAptMark="$savedAptMark gnupg dirmngr"; \
-    elif gpg --version | grep -q '^gpg (GnuPG) 1\.'; then \
+    elif gpg --batch --version | grep -q '^gpg (GnuPG) 1\.'; then \
     # "This package provides support for HKPS keyservers." (GnuPG 1.x only)
     apt-get install -y --no-install-recommends gnupg-curl; \
     fi; \
     rm -rf /var/lib/apt/lists/*; \
-    \
+
     dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
     wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; \
     wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; \
-    export GNUPGHOME="$(mktemp -d)"; \
+    export GNUPGHOME="$(mktemp -d)"; rm -rf -d \
     gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
     gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
     command -v gpgconf && gpgconf --kill all || :; \
     rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc; \
-    \
+
     wget -O /js-yaml.js "https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js"; \
     # TODO some sort of download verification here
-    \
+
     apt-mark auto '.*' > /dev/null; \
     apt-mark manual $savedAptMark > /dev/null; \
     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
-    \
+
     # smoke test
     chmod +x /usr/local/bin/gosu; \
     gosu --version; \
@@ -61,7 +61,7 @@ RUN mkdir /docker-entrypoint-initdb.d
 
 ENV GPG_KEYS 9DA31620334BD75D9DCB49F368818C72E52529D4
 RUN set -ex; \
-    export GNUPGHOME="$(mktemp -d)"; \
+    export GNUPGHOME="$(mktemp -d)"; rm -rf -d \
     for key in $GPG_KEYS; do \
     gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
     done; \
@@ -87,7 +87,7 @@ RUN set -x \
     # installing "mongodb-enterprise" pulls in "tzdata" which prompts for input
     && export DEBIAN_FRONTEND=noninteractive \
     && apt-get update \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
     ${MONGO_PACKAGE}=$MONGO_VERSION \
     ${MONGO_PACKAGE}-server=$MONGO_VERSION \
     ${MONGO_PACKAGE}-shell=$MONGO_VERSION \