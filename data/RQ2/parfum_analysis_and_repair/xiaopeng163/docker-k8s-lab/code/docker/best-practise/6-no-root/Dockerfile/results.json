{
  "startTime": 1674255462219,
  "endTime": 1674255463813,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 9,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 94,
        "columnStart": 7,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r mongodb && useradd -r -g mongodb mongodb\n\nRUN set -eux; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    jq \\\n    numactl \\\n    ; \\\n    if ! command -v ps > /dev/null; then \\\n    apt-get install -y --no-install-recommends procps; \\\n    fi; \\\n    rm -rf /var/lib/apt/lists/*\n\n# grab gosu for easy step-down from root (https://github.com/tianon/gosu/releases)\nENV GOSU_VERSION 1.12\n# grab \"js-yaml\" for parsing mongod's YAML config files (https://github.com/nodeca/js-yaml/releases)\nENV JSYAML_VERSION 3.13.1\n\nRUN set -ex; \\\n\n    savedAptMark=\"$(apt-mark showmanual)\"; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n    wget \\\n    ; \\\n    if ! command -v gpg > /dev/null;then \\\n    apt-get install -y --no-install-recommends gnupg dirmngr; \\\n    savedAptMark=\"$savedAptMark gnupg dirmngr\"; \\\n    elif gpg --batch --version | grep -q '^gpg (GnuPG) 1\\.'; then \\\n    # \"This package provides support for HKPS keyservers.\" (GnuPG 1.x only)\n    apt-get install -y --no-install-recommends gnupg-curl; \\\n    fi; \\\n    rm -rf /var/lib/apt/lists/*; \\\n\n    dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n    wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n    wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n    gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n    command -v gpgconf && gpgconf --kill all || :; \\\n    rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\n    wget -O /js-yaml.js \"https://github.com/nodeca/js-yaml/raw/${JSYAML_VERSION}/dist/js-yaml.js\"; \\\n    # TODO some sort of download verification here\n\n    apt-mark auto '.*' > /dev/null; \\\n    apt-mark manual $savedAptMark > /dev/null; \\\n    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\n    # smoke test\n    chmod +x /usr/local/bin/gosu; \\\n    gosu --version; \\\n    gosu nobody true\n\nRUN mkdir /docker-entrypoint-initdb.d\n\nENV GPG_KEYS 9DA31620334BD75D9DCB49F368818C72E52529D4\nRUN set -ex; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n    for key in $GPG_KEYS; do \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n    done; \\\n    gpg --batch --export $GPG_KEYS > /etc/apt/trusted.gpg.d/mongodb.gpg; \\\n    command -v gpgconf && gpgconf --kill all || :; \\\n    rm -r \"$GNUPGHOME\"; \\\n    apt-key list\n\n# Allow build-time overrides (eg. to build image with MongoDB Enterprise version)\n# Options for MONGO_PACKAGE: mongodb-org OR mongodb-enterprise\n# Options for MONGO_REPO: repo.mongodb.org OR repo.mongodb.com\n# Example: docker build --build-arg MONGO_PACKAGE=mongodb-enterprise --build-arg MONGO_REPO=repo.mongodb.com .\nARG MONGO_PACKAGE=mongodb-org\nARG MONGO_REPO=repo.mongodb.org\nENV MONGO_PACKAGE=${MONGO_PACKAGE} MONGO_REPO=${MONGO_REPO}\n\nENV MONGO_MAJOR 4.0\nENV MONGO_VERSION 4.0.20\n# bashbrew-architectures:amd64 arm64v8\nRUN echo \"deb http://$MONGO_REPO/apt/ubuntu xenial/${MONGO_PACKAGE%-unstable}/$MONGO_MAJOR multiverse\" | tee \"/etc/apt/sources.list.d/${MONGO_PACKAGE%-unstable}.list\"\n\nRUN set -x \\\n    # installing \"mongodb-enterprise\" pulls in \"tzdata\" which prompts for input\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    ${MONGO_PACKAGE}=$MONGO_VERSION \\\n    ${MONGO_PACKAGE}-server=$MONGO_VERSION \\\n    ${MONGO_PACKAGE}-shell=$MONGO_VERSION \\\n    ${MONGO_PACKAGE}-mongos=$MONGO_VERSION \\\n    ${MONGO_PACKAGE}-tools=$MONGO_VERSION \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/lib/mongodb \\\n    && mv /etc/mongod.conf /etc/mongod.conf.orig\n\nRUN mkdir -p /data/db /data/configdb \\\n    && chown -R mongodb:mongodb /data/db /data/configdb\nVOLUME /data/db /data/configdb\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 27017\nCMD [\"mongod\"]"
}