{
  "startTime": 1674215458673,
  "endTime": 1674215459994,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  g++ \\\n  make \\\n  file \\\n  wget \\\n  curl \\\n  ca-certificates \\\n  python3 \\\n  git \\\n  cmake \\\n  xz-utils \\\n  sudo \\\n  gdb \\\n  patch \\\n  libssl-dev \\\n  pkg-config && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build/\n\nCOPY scripts/musl-toolchain.sh /build/\n# We need to mitigate rust-lang/rust#34978 when compiling musl itself as well\nRUN CFLAGS=\"-Wa,-mrelax-relocations=no -Wa,--compress-debug-sections=none -Wl,--compress-debug-sections=none\" \\\n    CXXFLAGS=\"-Wa,-mrelax-relocations=no -Wa,--compress-debug-sections=none -Wl,--compress-debug-sections=none\" \\\n    REPLACE_CC=1 bash musl-toolchain.sh x86_64 && rm -rf build\n\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\n\nENV HOSTS=x86_64-unknown-linux-musl\n\nENV RUST_CONFIGURE_ARGS \\\n      --musl-root-x86_64=/usr/local/x86_64-linux-musl \\\n      --enable-extended \\\n      --disable-docs \\\n      --enable-lld \\\n      --set target.x86_64-unknown-linux-musl.crt-static=false \\\n      --build $HOSTS\n\n# Newer binutils broke things on some vms/distros (i.e., linking against\n# unknown relocs disabled by the following flag), so we need to go out of our\n# way to produce \"super compatible\" binaries.\n#\n# See: https://github.com/rust-lang/rust/issues/34978\n# And: https://github.com/rust-lang/rust/issues/59411\nENV CFLAGS_x86_64_unknown_linux_musl=\"-Wa,-mrelax-relocations=no -Wa,--compress-debug-sections=none \\\n    -Wl,--compress-debug-sections=none\"\n\n# To run native tests replace `dist` below with `test`\nENV SCRIPT python3 ../x.py dist --build $HOSTS\n"
}