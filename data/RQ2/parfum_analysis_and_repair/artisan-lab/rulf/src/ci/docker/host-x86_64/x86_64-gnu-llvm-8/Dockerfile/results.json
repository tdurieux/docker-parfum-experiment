{
  "startTime": 1674248314230,
  "endTime": 1674248314759,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  g++ \\\n  g++-arm-linux-gnueabi \\\n  make \\\n  file \\\n  curl \\\n  ca-certificates \\\n  python2.7 \\\n  git \\\n  cmake \\\n  sudo \\\n  gdb \\\n  llvm-8-tools \\\n  libedit-dev \\\n  libssl-dev \\\n  pkg-config \\\n  zlib1g-dev \\\n  xz-utils \\\n  nodejs && rm -rf /var/lib/apt/lists/*;\n\nCOPY scripts/sccache.sh /scripts/\nRUN sh /scripts/sccache.sh\n\n# using llvm-link-shared due to libffi issues -- see #34486\nENV RUST_CONFIGURE_ARGS \\\n      --build=x86_64-unknown-linux-gnu \\\n      --llvm-root=/usr/lib/llvm-8 \\\n      --enable-llvm-link-shared \\\n      --set rust.thin-lto-import-instr-limit=10\n\nENV SCRIPT python2.7 ../x.py test --exclude src/tools/tidy && \\\n           # Run the `mir-opt` tests again but this time for a 32-bit target.\n           # This enforces that tests using `// EMIT_MIR_FOR_EACH_BIT_WIDTH` have\n           # both 32-bit and 64-bit outputs updated by the PR author, before\n           # the PR is approved and tested for merging.\n           # It will also detect tests lacking `// EMIT_MIR_FOR_EACH_BIT_WIDTH`,\n           # despite having different output on 32-bit vs 64-bit targets.\n           #\n           # HACK(eddyb) `armv5te` is used (not `i686`) to support older LLVM than LLVM 9:\n           # https://github.com/rust-lang/compiler-builtins/pull/311#issuecomment-612270089.\n           # This also requires `--pass=build` because we can't execute the tests\n           # on the `x86_64` host when they're built as `armv5te` binaries.\n           # (we're only interested in the MIR output, so this doesn't matter)\n           python2.7 ../x.py test src/test/mir-opt --pass=build \\\n                                  --target=armv5te-unknown-linux-gnueabi && \\\n           # Run the UI test suite again, but in `--pass=check` mode\n           #\n           # This is intended to make sure that both `--pass=check` continues to\n           # work.\n           #\n           # FIXME: We ideally want to test this in 32-bit mode, but currently\n           # (due to the LLVM problems mentioned above) that isn't readily\n           # possible.\n           python2.7 ../x.py test src/test/ui --pass=check && \\\n           # Run tidy at the very end, after all the other tests.\n           python2.7 ../x.py test src/tools/tidy\n\n# The purpose of this container isn't to test with debug assertions and\n# this is run on all PRs, so let's get speedier builds by disabling these extra\n# checks.\nENV NO_DEBUG_ASSERTIONS=1\nENV NO_LLVM_ASSERTIONS=1\n"
}