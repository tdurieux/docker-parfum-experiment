{
  "startTime": 1674247928851,
  "endTime": 1674247929771,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU_VERSION\nFROM ubuntu:${UBUNTU_VERSION}\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get --yes update \\\n  && apt-get install --no-install-recommends --yes \\\n  bison \\\n  build-essential \\\n  clang-10 \\\n  clang-format-10 \\\n  clang-tools-10 \\\n  gcc-multilib \\\n  g++-7-multilib \\\n  cmake \\\n  curl \\\n  doxygen \\\n  expect \\\n  flex \\\n  git \\\n  libboost-all-dev \\\n  libcap-dev \\\n  libffi-dev \\\n  libgoogle-perftools-dev \\\n  libncurses5-dev \\\n  libsqlite3-dev \\\n  libssl-dev \\\n  libtcmalloc-minimal4 \\\n  lib32stdc++-7-dev \\\n  libgmp-dev \\\n  libgmpxx4ldbl \\\n  lld-10 \\\n  llvm-10 \\\n  ncurses-doc \\\n  ninja-build \\\n  perl \\\n  pkg-config \\\n  python \\\n  python3 \\\n  python3-minimal \\\n  python3-pip \\\n  subversion \\\n  sudo \\\n  unzip \\\n  wget \\\n  # Cleanup\n  && apt-get clean \\\n  # Install Python packages\n  && pip3 install --no-cache-dir setuptools \\\n  && pip3 install --no-cache-dir \\\n    argparse \\\n    colored \\\n    lit \\\n    tabulate \\\n    termcolor \\\n    toml \\\n    wllvm && rm -rf /var/lib/apt/lists/*;\n\nARG USERNAME\nARG USER_UID\nARG USER_GID\nARG USER_HOME=/home/${USERNAME}\nARG FUZZ_TARGET_GENERATOR_DIR=${USER_HOME}/Fuzzing-Target-Generator\n\nENV PATH=\"${USER_HOME}/.cargo/bin:${PATH}\"\nENV PATH=\"${FUZZ_TARGET_GENERATOR_DIR}/build/x86_64-unknown-linux-gnu/stage2/bin:${PATH}\"\nENV PATH=\"${FUZZ_TARGET_GENERATOR_DIR}/build/x86_64-unknown-linux-gnu/stage2-tools-bin:${PATH}\"\n\nRUN (groupadd --gid=${USER_GID} ${USERNAME} || true) \\\n  && (useradd --shell=/bin/bash --uid=${USER_UID} --gid=${USER_GID} --create-home ${USERNAME} || true) \\\n  && echo \"${USERNAME}  ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n#install rustup\nUSER ${USERNAME}\nWORKDIR ${USER_HOME}\n\nRUN curl -f --location https://sh.rustup.rs > /tmp/rustup \\\n  && sh /tmp/rustup -y --default-toolchain=none \\\n  && rustup --version \\\n  && rm /tmp/rustup\n\n\n\n#create a .bashrc\nRUN echo \"export PATH=\\\"${PATH}\\\"\" >> ${USER_HOME}/.bashrc \\\n  && echo \"ulimit -c0\" >> ${USER_HOME}/.bashrc\n\n# change default cargo config\nSHELL [\"/bin/bash\", \"-c\"]\nRUN echo $'[source.crates-io] \\n\\ \nregistry = \\\"https://github.com/rust-lang/crates.io-index\\\" \\n\\ \nreplace-with = \\'ustc\\' \\n\\ \n[source.ustc] \\n\\ \nregistry = \\\"git://mirrors.ustc.edu.cn/crates.io-index\\\"' > ${USER_HOME}/.cargo/config\n\nENV USER=\"${USERNAME}\"\n\nRUN mkdir ${FUZZ_TARGET_GENERATOR_DIR}\nWORKDIR ${FUZZ_TARGET_GENERATOR_DIR}\n"
}