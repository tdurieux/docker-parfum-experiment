{
  "startTime": 1674255609204,
  "endTime": 1674255610195,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 53,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 5,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 5,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends git curl wget gnupg2 ca-certificates lsb-release software-properties-common unzip -y && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O- https://apt.corretto.aws/corretto.key | gpg --batch --dearmor | tee /etc/apt/trusted.gpg.d/winehq.gpg >/dev/null && \\\n    add-apt-repository 'deb https://apt.corretto.aws stable main' && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y java-17-amazon-corretto-jdk=1:17.0.3.6-1 && rm -rf /var/lib/apt/lists/*;\n\nENV JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto\nWORKDIR /build\n\nRUN curl -f -L \"https://www.mirrorservice.org/sites/ftp.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.zip\" --output maven.zip \\\n  && unzip maven.zip \\\n  && git clone --depth=1 --progress --verbose https://github.com/questdb/questdb.git\n\nWORKDIR /build/questdb\n\nRUN ../apache-maven-3.6.3/bin/mvn clean package -Djdk.lang.Process.launchMechanism=vfork -DskipTests -P build-web-console,build-binaries\n\nWORKDIR /build/questdb/core/target\n\nRUN tar xvfz questdb-*-rt-*.tar.gz && rm questdb-*-rt-*.tar.gz\n\nRUN rm questdb-*-rt-*.tar.gz\n\nENV GOSU_VERSION 1.14\nRUN dpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n    wget -O gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\" && \\\n    wget -O gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\" && \\\n    export GNUPGHOME=\"$(mktemp -d)\" && \\\n    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \\\n    gpg --batch --verify gosu.asc gosu && \\\n    gpgconf --kill all && \\\n    rm -rf \"$GNUPGHOME\" gosu.asc && \\\n    chmod +x gosu && \\\n    ./gosu --version && \\\n    ./gosu nobody true\n\nFROM debian:bullseye-slim\n\nWORKDIR /app\n\nCOPY --from=0 /build/questdb/core/target/questdb-*-rt-* .\nCOPY --from=0 /build/questdb/core/target/gosu /usr/local/bin/gosu\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\n\n# Create questdb user and group\nRUN groupadd -g 10001 questdb && \\\n    useradd -u 10001 -g 10001 -d /var/lib/questdb -M -s /sbin/nologin questdb && \\\n    mkdir -p /var/lib/questdb && \\\n    chown -R questdb:questdb /var/lib/questdb\n\n# Make working folder the quest db folder\nWORKDIR /var/lib/questdb\n\n# Make port 9000 available to the world outside this container\nEXPOSE 9000/tcp\nEXPOSE 8812/tcp\nEXPOSE 9009/tcp\n\n#\n# Run QuestDB when the container launches\n#\n# 'conf/log.conf' is a placeholder, it does not exist out of box\n# which make logger use default configuration. However, when user configures\n# a volume with something like:\n#\n# docker run -v \"$(pwd):/var/lib/questdb/\"  questdb/questdb\n#\n# then one can create 'log.conf' in the 'conf' dir and override logger fully\n#\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}