{
  "startTime": 1674251653624,
  "endTime": 1674251654289,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# small is beautiful\nFROM docker:18.06.3-ce\n\n# The container listens on port 8110, map as needed\nEXPOSE 80\nEXPOSE 443\n\n# This is where the repositories will be stored, and\n# should be mounted from the host (or a volume container)\nVOLUME [\"/app\"]\n\n# We need the following:\n# - git, because that gets us the git-http-backend CGI script\n# - fcgiwrap, because that is how nginx does CGI\n# - spawn-fcgi, to launch fcgiwrap and to create the unix socket\n# - nginx, because it is our frontend\nRUN apk add --update nginx && \\\n    apk add --update bash && \\\n    apk add --update git && \\\n    apk add --update git-daemon && \\\n    apk add --update fcgiwrap && \\\n    apk add --update spawn-fcgi && \\\n    apk add --update apache2-utils && \\\n    apk add --update py-pip && \\\n    apk add --update python-dev libffi-dev openssl-dev gcc libc-dev make && \\\n    rm -rf /var/cache/apk/*\n\nCOPY ./etc/nginx/.users /etc/nginx/.users\nCOPY ./etc/nginx/tevun.conf /etc/nginx/tevun.conf\nCOPY ./etc/nginx/ssl /etc/nginx/ssl\nCOPY ./etc/nginx/nginx.conf /etc/nginx/nginx.conf\n\nRUN pip install --no-cache-dir docker-compose\n\nRUN addgroup -S tevun && adduser -u 1000 -S tevun -G tevun\n\n# launch fcgiwrap via spawn-fcgi; launch nginx in the foreground\n# so the container doesn't die on us; supposedly we should be\n# using supervisord or something like that instead, but this\n# will do\nCMD spawn-fcgi -s /run/fcgi.sock /usr/bin/fcgiwrap && \\\n    nginx -g \"daemon off;\""
}