{
  "startTime": 1674250093901,
  "endTime": 1674250094935,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Install common dependencies\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install sudo \\\n    build-essential \\\n    autoconf \\\n    avahi-daemon \\\n    avahi-utils \\\n    cura-engine \\\n    libavahi-client-dev \\\n    libfreetype6-dev \\\n    libgnutls28-dev \\\n    libharfbuzz-dev \\\n    libjbig2dec0-dev \\\n    libjpeg-dev \\\n    libmupdf-dev \\\n    libnss-mdns \\\n    libopenjp2-7-dev \\\n    libpng-dev \\\n    zlib1g-dev \\\n    net-tools \\\n    iputils-ping \\\n    vim \\\n    avahi-daemon \\\n    tcpdump \\\n    man \\\n    curl \\\n    openssl \\\n    clang \\\n    graphviz-dev \\\n    git \\\n    libgnutls28-dev \\\n    python-pip \\\n    nano \\\n    net-tools \\\n    gdb && rm -rf /var/lib/apt/lists/*;\n\n# Make changes necessary to run bonjour\nRUN sed -ie 's/rlimit-nproc=3/rlimit-nproc=8/' /etc/avahi/avahi-daemon.conf\nRUN update-rc.d dbus defaults\nRUN update-rc.d avahi-daemon defaults\n\n# Create entrypoint.sh script to start dbus and avahi-daemon\nRUN echo '#!/bin/bash\\n\\\nsudo service dbus start\\n\\\nsudo service avahi-daemon start\\n\\\nmkdir /tmp/spool\\n\\\n$*\\n\\\n' > /usr/bin/entrypoint.sh && chmod +x /usr/bin/entrypoint.sh\nENTRYPOINT [\"bash\", \"/usr/bin/entrypoint.sh\"]\n\n# Add a new user ubuntu, pass: ubuntu\nRUN groupadd ubuntu && \\\n    useradd -rm -d /home/ubuntu -s /bin/bash -g ubuntu -G sudo -u 1000 ubuntu -p \"$(openssl passwd -1 ubuntu)\"\n\nRUN echo \"ALL ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# Use ubuntu as default username\nUSER ubuntu\nWORKDIR /home/ubuntu\n\n# Download and compile AFLNet\nENV LLVM_CONFIG=\"llvm-config-6.0\"\n\n# Set up fuzzers\nRUN git clone https://github.com/harrypale/aflnet.git && \\\n    cd aflnet && \\\n    make clean all && \\\n    cd llvm_mode && make\n\n# Set up environment variables for AFLNet\nENV WORKDIR=\"/home/ubuntu/experiments\"\nENV AFLNET=\"/home/ubuntu/aflnet\"\nENV PATH=\"${PATH}:${AFLNET}:/home/ubuntu/.local/bin:${WORKDIR}\"\nENV AFL_PATH=\"${AFLNET}\"\n\nENV AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES=1 \\\n    AFL_SKIP_CPUFREQ=1 \\\n    AFL_NO_AFFINITY=1\n\nRUN mkdir $WORKDIR && \\\n    pip install --no-cache-dir gcovr\n\nCOPY --chown=ubuntu:ubuntu ipp.dict ${WORKDIR}/ipp.dict\nCOPY --chown=ubuntu:ubuntu in-ipp ${WORKDIR}/in-ipp\nCOPY --chown=ubuntu:ubuntu ippcleanup.sh ${WORKDIR}/ippcleanup.sh\n\n# Download and compile ippsample\nRUN cd $WORKDIR && \\\n    git clone https://github.com/istopwg/ippsample.git ippsample && \\\n    cd ippsample && \\\n    git checkout 1ee7bcd4d0ed0e1e49b434c0ab296bb0c9499c0d && \\\n    CC=$AFLNET/afl-clang ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make clean all\n# RUN sudo make install\n"
}