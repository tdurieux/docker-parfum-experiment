{
  "startTime": 1674254298201,
  "endTime": 1674254299116,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 38,
        "columnStart": 21,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image\nFROM ubuntu:20.04\n\n# Labels and Credits\nLABEL \\\n    name=\"reNgine\" \\\n    author=\"Yogesh Ojha <yogesh.ojha11@gmail.com>\" \\\n    description=\"reNgine is a automated pipeline of recon process, useful for information gathering during web application penetration testing.\"\n\n# Environment Variables\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    DATABASE=\"postgres\"\n\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# Install essentials\nRUN apt update -y && apt install -y  --no-install-recommends \\\n    build-essential \\\n    cmake \\\n    firefox \\\n    gcc \\\n    git \\\n    libpq-dev \\\n    libpq-dev \\\n    libpcap-dev \\\n    netcat \\\n    postgresql \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    python3-netaddr \\\n    wget \\\n    x11-utils \\\n    xvfb \\\n    python3-cffi \\\n    python3-brotli \\\n    libpango-1.0-0 \\\n    libpangoft2-1.0-0 && rm -rf /var/lib/apt/lists/*;\n\n\n# Download and install go 1.17\nRUN wget https://golang.org/dl/go1.17.2.linux-amd64.tar.gz\nRUN tar -xvf go1.17.2.linux-amd64.tar.gz && rm go1.17.2.linux-amd64.tar.gz\nRUN rm go1.17.2.linux-amd64.tar.gz\nRUN mv go /usr/local\n\n# Download geckodriver\nRUN wget https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz\nRUN tar -xvf geckodriver-v0.26.0-linux64.tar.gz && rm geckodriver-v0.26.0-linux64.tar.gz\nRUN rm geckodriver-v0.26.0-linux64.tar.gz\nRUN mv geckodriver /usr/bin\n\n# ENV for Go\nENV GOROOT=\"/usr/local/go\"\nENV PATH=\"${PATH}:${GOROOT}/bin\"\nENV PATH=\"${PATH}:${GOPATH}/bin\"\n\nENV GOPATH=$HOME/go\nENV PATH=\"${PATH}:${GOROOT}/bin:${GOPATH}/bin\"\n\n# Make directory for app\nWORKDIR /usr/src/app\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# Download Go packages\nRUN go install -v github.com/hakluke/hakrawler@latest\n\nRUN GO111MODULE=on go install -v -v github.com/bp0lr/gauplus@latest\n\nRUN GO111MODULE=on go install -v github.com/jaeles-project/gospider@latest\n\nRUN go install -v github.com/OWASP/Amass/v3/...@latest\n\nRUN go install -v github.com/ffuf/ffuf@latest\n\nRUN go install -v github.com/tomnomnom/assetfinder@latest\nRUN GO111MODULE=on go install -v github.com/tomnomnom/gf@latest\nRUN GO111MODULE=on go install -v github.com/tomnomnom/unfurl@latest\nRUN GO111MODULE=on go install -v github.com/tomnomnom/waybackurls@latest\n\nRUN GO111MODULE=on go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest\nRUN GO111MODULE=on go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest\nRUN GO111MODULE=on go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest\nRUN GO111MODULE=on go install -v github.com/projectdiscovery/naabu/v2/cmd/naabu@latest\n\n\n# Update Nuclei and Nuclei-Templates\nRUN nuclei -update\nRUN nuclei -update-templates\n\n# Copy requirements\nCOPY ./requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir --upgrade setuptools pip && \\\n    pip3 install --no-cache-dir -r /tmp/requirements.txt\n\n# install eyewitness\n\nRUN python3 -m pip install fuzzywuzzy \\\n    selenium \\\n    python-Levenshtein \\\n    pyvirtualdisplay \\\n    netaddr\n\n# Copy source code\nCOPY . /usr/src/app/\n"
}