{
  "startTime": 1674255353793,
  "endTime": 1674255354604,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 141
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1.1-cli\nWORKDIR /usr/src/myapp\n\nRUN apt-get update && apt-get install --no-install-recommends zip unzip git -y \\\n    && pecl install xdebug \\\n    && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n    && php -r \"if (hash_file('sha384', 'composer-setup.php') === '906a84df04cea2aa72f40b5f787e49f22d4c2f19492ac310e8cba5b96ac8b64115ac402c8cd292b8a03482574915d1a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n    && php composer-setup.php --install-dir=/usr/bin --filename=composer \\\n    && php -r \"unlink('composer-setup.php');\" \\\n    && mkdir /.composer && chmod 777 /.composer && rm -rf /var/lib/apt/lists/*;\n\nRUN version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && architecture=$(uname -m) \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/$architecture/$version \\\n    && mkdir -p /tmp/blackfire \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire-*.so $(php -r \"echo ini_get ('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8307\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n    && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz\n\nRUN mkdir -p /tmp/blackfire \\\n    && architecture=$(uname -m) \\\n    && curl -f -A \"Docker\" -L https://blackfire.io/api/v1/releases/cli/linux/$architecture | tar zxp -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n    && rm -Rf /tmp/blackfire\n"
}