{
  "startTime": 1674254688903,
  "endTime": 1674254689396,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10.1-slim as base\n\n# Setup env\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONFAULTHANDLER 1\nENV PYTHONUNBUFFERED=1\nENV PYTHONHASHSEED=random\nENV DJANGO_SETTINGS_MODULE={{ cookiecutter.repo_name }}.config.settings.prod\n\n\nFROM node:lts-alpine AS js-deps\n# Install application into container\nCOPY . .\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\nFROM base AS python-deps\n# Install poetry and compilation dependencies\nRUN pip install --no-cache-dir poetry\n# Install python dependencies in /.venv\nCOPY pyproject.toml .\nCOPY poetry.lock .\nENV POETRY_VIRTUALENVS_IN_PROJECT true\nrun poetry install --no-dev --no-interaction\n\n\nFROM base AS runtime\n\n# Copy virtual env from python-deps stage\nCOPY --from=python-deps /.venv /.venv\nENV PATH=\"/.venv/bin:$PATH\"\n\n# Create and switch to a new user\nWORKDIR app\n\n# Install application into container\nCOPY . .\nCOPY --from=js-deps /{{cookiecutter.repo_name}}/static ./{{cookiecutter.repo_name}}/static\n\nRUN DJANGO_SECRET_KEY=\"!!! CHANGE ME !!!\" DJANGO_ALLOWED_HOSTS=\"*\" APP_VERSION_RELEASE=\"build\" ENVIRONMENT=\"build\" SENTRY_DSN=\"\" REDIS_URL=\"\" DATABASE_URL=\"\" ALLOWED_HOSTS=\"*\" SECRET_KEY=\"foobar\" python ./manage.py collectstatic --noinput\nCMD gunicorn {{cookiecutter.repo_name}}.config.asgi:application --bind 0.0.0.0:8080  -k uvicorn.workers.UvicornWorker --access-logfile - --preload\n"
}