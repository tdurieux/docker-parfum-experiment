{
  "startTime": 1674219660032,
  "endTime": 1674219660870,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 746
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 746
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 746
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t patrikx3/openwrt-insomnia:base .\n# docker container ls\n# docker exec -it <containerIdOrName> bash\n# docker attach <id>\n# docker run -t -i patrikx3/openwrt-base bash\n# maybe bullseye is not ready!\nFROM debian:bullseye\nMAINTAINER patrikx3/openwrt-insomnia:base - Patrik Laszlo - alabard@gmail.com\n\nENV DEBIAN_FRONTEND=noninteractive\nENV FORCE_UNSAFE_CONFIGURE=1\nENV SHELL=/bin/bash\n\nRUN apt-get -y update && apt -y --no-install-recommends install libatomic-ops-dev python3 g++ make python3-pip gcc-multilib g++-multilib asciidoc bash bc time bcc bin86 binutils build-essential bzip2 cmake curl default-jdk fastjar file flex gawk gcc genisoimage gettext git git-core intltool jikespg libboost-dev libgtk2.0-dev libncurses5-dev libssl-dev libusb-dev libxml-parser-perl make mc mercurial nano ncdu patch perl-modules python python-dev python2.7-dev quilt rsync ruby sdcc sharutils software-properties-common sshpass subversion sudo unzip util-linux wget xsltproc xz-utils zlib1g-dev g++-multilib swig python3 python3-dev python3-distutils python3-setuptools help2man libelf-dev ecj java-wrappers nasm bzr libpcap-dev pwgen locales ccache java-propose-classpath libncursesw5-dev && rm -rf /var/lib/apt/lists/*; # if we are using testing\n#RUN apt-get -y --with-new-pkgs upgrade\n\n# for stretch / buster / testing / bullseye\n# libboost1.55-dev => libboost-dev\n# openjdk-7-jdk => default-jdk\n# python2.6-dev => python-dev - (though not existing in jessie)\n\n# classpath\n# apt install openjdk-8* ecj java-wrappers nasm bzr libpcap-ng-dev\n# apt install ecj java-wrappers nasm bzr libpcap-dev\n# libpcap-ng-dev => libpcap-dev\n\n# jeff added to the build bots => pwgen locales ccache\n\n# based on => https://openwrt.org/docs/guide-developer/build-system/install-buildsystem\n\n\n#before it was needed nethack*, still?\n# nethack\n\nRUN echo \"docker:x:10000:docker\" >> \"/etc/group\"\nRUN useradd -u 10000 -g 10000 -m docker && echo \"docker:docker\" | chpasswd && adduser docker sudo\nRUN mkdir -p /etc/sudoers.d\nRUN echo 'docker ALL=NOPASSWD: ALL' > /etc/sudoers.d/openwrt\n\nENV PATH=\"/build/source:${PATH}\"\n\nRUN mkdir build\nRUN chown docker:docker /build\n\n# clean up\nRUN apt-get autoremove -y\nRUN apt-get autoclean -y\nRUN apt-get clean -y\n\nUSER docker\n\n#RUN echo \"set linenumbers\" > \"/home/docker/.nanorc\"\nRUN echo \"alias ll='ls -l'\" >> /home/docker/.bashrc\n#RUN echo \"sudo chown -R docker:docker /build\" >> /home/docker/.bashrc\nRUN echo \"SELECTED_EDITOR=\\\"/bin/nano\\\"\" > /home/docker/.selected_editor\n\nWORKDIR build\n\nRUN git clone https://git.openwrt.org/project/usign.git\nWORKDIR /build/usign\nRUN cmake .\nRUN make\nRUN sudo cp ./usign /usr/bin/usign\nRUN sudo chmod +x /usr/bin/usign\n\nRUN sudo unlink /etc/localtime\nRUN sudo ln -s /usr/share/zoneinfo/CET /etc/localtime\n\nWORKDIR /build\n\nCMD /bin/bash\n"
}