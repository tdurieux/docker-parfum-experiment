{
  "startTime": 1674248776496,
  "endTime": 1674248777344,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Specify the image (Base Image) on which to base this image\nFROM node:lts-alpine\n\n# Create 'app' directory\n# and specify it as working directory\n# (RUN lets us execute commands inside of our Docker image working directory)\nRUN mkdir -p /app\n# (In the workingdirectory commands like 'RUN', 'CMD', .. will be executed)\n# https://www.educative.io/edpresso/what-is-the-workdir-command-in-docker\nWORKDIR /app\n\n# Environment Variables\nENV APP_VERSION=v1\n\n# Install app dependencies using yarn\n# (With './' we reference the current working directory -> '/app')\nCOPY package.json ./\nCOPY yarn.lock ./\nRUN yarn install && yarn cache clean;\n\n# Move required app source into the working directory referenced with './'\nCOPY src ./src\nCOPY tsconfig.json ./\n\n# For debugging:\n# Lists all the files and folder that we have copied inside the working directory.\n# Note: To actually see the output of this command we need to specify the flag '--progress=plain '\nRUN ls -l\n\n# Bundle app source\nRUN yarn build\n\n# Start Container\n# (CMD specifies the default command that runs when your container starts)\n# https://nickjanetakis.com/blog/docker-tip-7-the-difference-between-run-and-cmd\nCMD [ \"yarn\", \"start\" ]\n\nEXPOSE 5000\n"
}