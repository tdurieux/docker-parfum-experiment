diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googleapis/artman/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googleapis/artman/Dockerfile/repaired.Dockerfile
index 7ecb5b9..a8825f2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googleapis/artman/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googleapis/artman/Dockerfile/repaired.Dockerfile
@@ -63,13 +63,13 @@ RUN apt-get update \
 
 # Download and unpack Node.js v10
 RUN mkdir -p /opt \
-  && curl -L https://nodejs.org/dist/v10.16.0/node-v10.16.0-linux-x64.tar.xz -o /opt/node-v10.16.0-linux-x64.tar.xz \
+  && curl -f -L https://nodejs.org/dist/v10.16.0/node-v10.16.0-linux-x64.tar.xz -o /opt/node-v10.16.0-linux-x64.tar.xz \
   && tar -C /opt -xJf /opt/node-v10.16.0-linux-x64.tar.xz \
   && rm -f /opt/node-v10.16.0-linux-x64.tar.xz
 ENV PATH /opt/node-v10.16.0-linux-x64/bin:$PATH
 
 # Install google-gax for Node.js
-RUN npm install -g google-gax@^1.2.1
+RUN npm install -g google-gax@^1.2.1 && npm cache clean --force;
 # Run the compileProtos script for the first time to download runtime dependencies; ignore exit code
 RUN compileProtos || true
 
@@ -78,7 +78,7 @@ ADD install_protoc.sh /
 RUN bash install_protoc.sh
 
 # Install grpc_csharp_plugin
-RUN curl -L https://www.nuget.org/api/v2/package/Grpc.Tools/1.17.1 -o temp.zip \
+RUN curl -f -L https://www.nuget.org/api/v2/package/Grpc.Tools/1.17.1 -o temp.zip \
   && unzip -p temp.zip tools/linux_x64/grpc_csharp_plugin > /usr/local/bin/grpc_csharp_plugin \
   && chmod +x /usr/local/bin/grpc_csharp_plugin \
   && rm temp.zip
@@ -90,8 +90,8 @@ RUN export JAVA_HOME
 # Install Go.
 RUN mkdir -p /golang \
   && cd /golang \
-  && curl -L https://golang.org/dl/go1.14.6.linux-amd64.tar.gz > go.tar.gz \
-  && (echo '5c566ddc2e0bcfc25c26a5dc44a440fcc0177f7350c1f01952b34d5989a0d287 go.tar.gz' | sha256sum -c) \
+  && curl -f -L https://golang.org/dl/go1.14.6.linux-amd64.tar.gz > go.tar.gz \
+  && ( echo '5c566ddc2e0bcfc25c26a5dc44a440fcc0177f7350c1f01952b34d5989a0d287  go.tar.gz' | sha256sum -c) \
   && tar xzf go.tar.gz \
   && rm go.tar.gz \
   && cd /
@@ -121,21 +121,21 @@ RUN git clone -b v1.17.1 --recurse-submodules --depth=1 https://github.com/grpc/
   && rm -r /temp/grpc
 
 # Install PHP formatting tools
-RUN curl -L https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/v2.9.1/php-cs-fixer.phar -o /usr/local/bin/php-cs-fixer \
+RUN curl -f -L https://github.com/FriendsOfPHP/PHP-CS-Fixer/releases/download/v2.9.1/php-cs-fixer.phar -o /usr/local/bin/php-cs-fixer \
   && chmod a+x /usr/local/bin/php-cs-fixer \
   && cd /
-RUN curl -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar -o /usr/local/bin/phpcbf \
+RUN curl -f -L https://squizlabs.github.io/PHP_CodeSniffer/phpcbf.phar -o /usr/local/bin/phpcbf \
   && chmod a+x /usr/local/bin/phpcbf \
   && cd /
 
 # Used to add docstrings to the Python protoc output.
-RUN pip3 install git+https://github.com/googleapis/protoc-docs-plugin.git@proto3-optional#egg=protoc-docs-plugin
+RUN pip3 install --no-cache-dir git+https://github.com/googleapis/protoc-docs-plugin.git@proto3-optional#egg=protoc-docs-plugin
 
 # Install .NET Core SDK
 ENV DOTNET_SDK_VERSION 1.0.4
 ENV DOTNET_SDK_DOWNLOAD_URL https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-dev-ubuntu.16.04-x64.$DOTNET_SDK_VERSION.tar.gz
 
-RUN curl -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz \
+RUN curl -f -SL $DOTNET_SDK_DOWNLOAD_URL --output dotnet.tar.gz \
     && mkdir -p /usr/share/dotnet \
     && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \
     && rm dotnet.tar.gz \
@@ -172,12 +172,13 @@ RUN mkdir -p /root/
 ADD artman-user-config-in-docker.yaml /root/.artman/config.yaml
 
 # Fix the setuptools version incompatibility with google-auth v1.7.0
-RUN pip install --upgrade pip
-RUN pip install --upgrade setuptools
+RUN pip install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir --upgrade setuptools
 
 # Install artman.
 ADD . /artman
 ARG install_artman_from_source=false
 # installing master version of plugin
-RUN pip3 install git+https://github.com/googleapis/protoc-java-resource-names-plugin.git#egg=protoc-java-resource-names-plugin
-RUN if [ "$install_artman_from_source" = true ]; then pip3 install -e /artman; else pip3 install googleapis-artman==$ARTMAN_VERSION; rm -r /artman; fi
+RUN pip3 install --no-cache-dir git+https://github.com/googleapis/protoc-java-resource-names-plugin.git#egg=protoc-java-resource-names-plugin
+RUN if [ "$install_artman_from_source" = true ]; then \
+ pip3 install --no-cache-dir -e /artman; else pip3 install --no-cache-dir googleapis-artman==$ARTMAN_VERSION; rm -r /artman;fi