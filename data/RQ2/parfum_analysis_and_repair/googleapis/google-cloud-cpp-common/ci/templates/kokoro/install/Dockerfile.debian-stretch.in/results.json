{
  "startTime": 1674255973671,
  "endTime": 1674255974333,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n@WARNING_GENERATED_FILE_FRAGMENT@\n\nARG DISTRO_VERSION=stretch\nFROM debian:${DISTRO_VERSION} AS devtools\nARG NCPU=4\n\n## [START INSTALL.md]\n\n# First install the development tools and libcurl.\n# On Debian 9, libcurl links against openssl-1.0.2, and one must link\n# against the same version or risk an inconsistent configuration of the library.\n# This is especially important for multi-threaded applications, as openssl-1.0.2\n# requires explicitly setting locking callbacks. Therefore, to use libcurl one\n# must link against openssl-1.0.2. To do so, we need to install libssl1.0-dev.\n# Note that this removes libssl-dev if you have it installed already, and would\n# prevent you from compiling against openssl-1.1.0.\n\n# ```bash\nRUN apt-get update && \\\n    apt-get --no-install-recommends install -y apt-transport-https apt-utils \\\n        automake build-essential ccache cmake ca-certificates git gcc g++ \\\n        libc-ares-dev libc-ares2 libcurl4-openssl-dev libssl1.0-dev make m4 \\\n        pkg-config tar wget zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n# ```\n\n# #### Protobuf\n\n# We need to install a version of Protobuf that is recent enough to support the\n# Google Cloud Platform proto files:\n\n# ```bash\n@INSTALL_PROTOBUF_FROM_SOURCE@\n# ```\n\n# #### gRPC\n\n# To install gRPC we first need to configure pkg-config to find the version of\n# Protobuf we just installed in `/usr/local`:\n\n# ```bash\n@INSTALL_GRPC_FROM_SOURCE@\n# ```\n\n@BUILD_AND_TEST_PROJECT_FRAGMENT@\n"
}