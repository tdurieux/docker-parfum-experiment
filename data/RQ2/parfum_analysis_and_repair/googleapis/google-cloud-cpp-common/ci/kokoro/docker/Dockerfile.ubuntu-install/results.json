{
  "startTime": 1674252564242,
  "endTime": 1674252566797,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG DISTRO_VERSION=18.04\nFROM ubuntu:${DISTRO_VERSION}\nARG NCPU=4\n\nRUN apt-get update && \\\n    apt-get --no-install-recommends install -y \\\n        abi-compliance-checker \\\n        abi-dumper \\\n        apt-transport-https \\\n        apt-utils \\\n        automake \\\n        build-essential \\\n        ca-certificates \\\n        ccache \\\n        clang \\\n        clang-format-7 \\\n        cmake \\\n        ctags \\\n        curl \\\n        doxygen \\\n        gawk \\\n        git \\\n        gcc \\\n        g++ \\\n        cmake \\\n        libssl-dev \\\n        libtool \\\n        lsb-release \\\n        make \\\n        ninja-build \\\n        pkg-config \\\n        python3 \\\n        python3-pip \\\n        shellcheck \\\n        tar \\\n        unzip \\\n        wget \\\n        zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install protobuf using CMake. Some distributions include protobuf, but gRPC\n# requires 3.4.x or newer, and many of those distribution use older versions.\n# We need to install both the debug and Release version because:\n# - When using pkg-config, only the release version works, the pkg-config\n#   file is hard-coded to search for `libprotobuf.so` (or `.a`)\n# - When using CMake, only the version compiled with the same CMAKE_BUILD_TYPE\n#   as the dependent (gRPC or google-cloud-cpp) works.\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/protobuf/archive/v3.11.3.tar.gz\nRUN tar -xf v3.11.3.tar.gz && rm v3.11.3.tar.gz\nWORKDIR /var/tmp/build/protobuf-3.11.3/cmake\nRUN for build_type in \"Debug\" \"Release\"; do \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=\"${build_type}\" \\\n        -DBUILD_SHARED_LIBS=yes \\\n        -Dprotobuf_BUILD_TESTS=OFF \\\n        -H. -Bcmake-out-${build_type}; \\\n    cmake --build cmake-out-${build_type} --target install -- -j ${NCPU}; \\\n  done\nRUN ldconfig\n\n# Many distributions include c-ares, but they do not include the CMake support\n# files for the library, so manually install it.  c-ares requires two install\n# steps because (1) the CMake-based build does not install pkg-config files,\n# and (2) the Makefile-based build does not install CMake config files.\nWORKDIR /var/tmp/build\nRUN apt-get remove -y libc-ares-dev libc-ares2\nRUN wget -q https://github.com/c-ares/c-ares/archive/cares-1_14_0.tar.gz\nRUN tar -xf cares-1_14_0.tar.gz && rm cares-1_14_0.tar.gz\nWORKDIR /var/tmp/build/c-ares-cares-1_14_0\nRUN cmake \\\n      -DCMAKE_BUILD_TYPE=\"Release\" \\\n      -DBUILD_SHARED_LIBS=yes \\\n      -H. -Bcmake-out\nRUN cmake --build cmake-out --target install -- -j ${NCPU}\nRUN ./buildconf\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN install -m 644 -D -t /usr/local/lib/pkgconfig libcares.pc\nRUN ldconfig\n\n# Install gRPC. Note that we use the system's zlib and ssl libraries.\n# For similar reasons to c-ares (see above), we need two install steps.\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/grpc/grpc/archive/78ace4cd5dfcc1f2eced44d22d752f103f377e7b.tar.gz\nRUN tar -xf 78ace4cd5dfcc1f2eced44d22d752f103f377e7b.tar.gz && rm 78ace4cd5dfcc1f2eced44d22d752f103f377e7b.tar.gz\nWORKDIR /var/tmp/build/grpc-78ace4cd5dfcc1f2eced44d22d752f103f377e7b\nRUN cmake \\\n      -DCMAKE_BUILD_TYPE=\"Release\" \\\n      -DBUILD_SHARED_LIBS=yes \\\n      -DgRPC_BUILD_TESTS=OFF \\\n      -DgRPC_ZLIB_PROVIDER=package \\\n      -DgRPC_SSL_PROVIDER=package \\\n      -DgRPC_CARES_PROVIDER=package \\\n      -DgRPC_PROTOBUF_PROVIDER=package \\\n      -H. -Bcmake-out/grpc\nRUN cmake --build cmake-out/grpc --target install -- -j ${NCPU}\nRUN make install-pkg-config_c install-pkg-config_cxx install-certs\nRUN ldconfig\n\n# Install googleapis.\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/googleapis/cpp-cmakefiles/archive/v0.9.0.tar.gz\nRUN tar -xf v0.9.0.tar.gz && rm v0.9.0.tar.gz\nWORKDIR /var/tmp/build/cpp-cmakefiles-0.9.0\nRUN cmake \\\n    -DBUILD_SHARED_LIBS=YES \\\n    -H. -Bcmake-out\nRUN cmake --build cmake-out --target install -- -j ${NCPU}\nRUN ldconfig\n\n# Install googletest.\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/googletest/archive/release-1.10.0.tar.gz\nRUN tar -xf release-1.10.0.tar.gz && rm release-1.10.0.tar.gz\nWORKDIR /var/tmp/build/googletest-release-1.10.0\nRUN cmake \\\n      -DCMAKE_BUILD_TYPE=\"Release\" \\\n      -DBUILD_SHARED_LIBS=yes \\\n      -H. -Bcmake-out/googletest\nRUN cmake --build cmake-out/googletest --target install -- -j ${NCPU}\nRUN ldconfig\n\nRUN find /usr/local -type d | xargs chmod 777\n\n# Install Bazel because some of the builds need it.\nWORKDIR /var/tmp/ci\nCOPY . /var/tmp/ci\nRUN /var/tmp/ci/install-bazel.sh\n"
}