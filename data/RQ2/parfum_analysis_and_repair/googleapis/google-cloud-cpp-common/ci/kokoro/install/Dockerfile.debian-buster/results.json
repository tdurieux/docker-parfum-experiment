{
  "startTime": 1674251106634,
  "endTime": 1674251107705,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# WARNING: This is an automatically generated file. Consider changing the\n#     sources instead. You can find the source templates and scripts at:\n#     https://github.com/googleapis/google-cloud-cpp-common/tree/master/ci/templates\n#\n\nARG DISTRO_VERSION=buster\nFROM debian:${DISTRO_VERSION} AS devtools\nARG NCPU=4\n\n## [START INSTALL.md]\n\n# Install the minimal development tools, libcurl, and OpenSSL:\n\n# ```bash\nRUN apt-get update && \\\n    apt-get --no-install-recommends install -y apt-transport-https apt-utils \\\n        automake build-essential ca-certificates cmake git gcc g++ cmake \\\n        libc-ares-dev libc-ares2 libcurl4-openssl-dev libssl-dev m4 make \\\n        pkg-config tar wget zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n# ```\n\n# Debian 10 includes versions of gRPC and Protobuf that support the\n# Google Cloud Platform proto files. We simply install these pre-built versions:\n\n# ```bash\nRUN apt-get update && \\\n    apt-get --no-install-recommends install -y libgrpc++-dev libprotobuf-dev libc-ares-dev \\\n        protobuf-compiler protobuf-compiler-grpc && rm -rf /var/lib/apt/lists/*;\n# ```\n\n# #### googleapis\n\n# We need a recent version of the Google Cloud Platform proto C++ libraries:\n\n# ```bash\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/googleapis/cpp-cmakefiles/archive/v0.9.0.tar.gz && \\\n    tar -xf v0.9.0.tar.gz && \\\n    cd cpp-cmakefiles-0.9.0 && \\\n    cmake -DBUILD_SHARED_LIBS=YES -H. -Bcmake-out && \\\n    cmake --build cmake-out -- -j ${NCPU:-4} && \\\n    cmake --build cmake-out --target install -- -j ${NCPU:-4} && \\\n    ldconfig && rm v0.9.0.tar.gz\n# ```\n\n# #### googletest\n\n# We need a recent version of GoogleTest to compile the unit and integration\n# tests.\n\n# ```bash\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/googletest/archive/release-1.10.0.tar.gz && \\\n    tar -xf release-1.10.0.tar.gz && \\\n    cd googletest-release-1.10.0 && \\\n    cmake -DCMAKE_BUILD_TYPE=\"Release\" -DBUILD_SHARED_LIBS=yes -H. -Bcmake-out && \\\n    cmake --build cmake-out -- -j ${NCPU:-4} && \\\n    cmake --build cmake-out --target install -- -j ${NCPU:-4} && \\\n    ldconfig && rm release-1.10.0.tar.gz\n# ```\n\nFROM devtools AS install\nARG NCPU=4\n\n# #### Compile and install the main project\n\n# We can now compile, test, and install `google-cloud-cpp-common`.\n\n# ```bash\nWORKDIR /home/build/project\nCOPY . /home/build/project\nRUN cmake -H. -Bcmake-out\nRUN cmake --build cmake-out -- -j \"${NCPU:-4}\"\nWORKDIR /home/build/project/cmake-out\nRUN ctest -LE integration-tests --output-on-failure\nRUN cmake --build . --target install\n# ```\n\n## [END INSTALL.md]\n\n# Verify that the installed files are actually usable\nWORKDIR /home/build/test-install-plain-make\nCOPY ci/test-install /home/build/test-install-plain-make\nCOPY google/cloud/samples/common_install_test.cc /home/build/test-install-plain-make\nRUN make\n\nWORKDIR /home/build/test-install-cmake\nCOPY ci/test-install /home/build/test-install-cmake\nCOPY google/cloud/samples/common_install_test.cc /home/build/test-install-cmake\n# Always unset PKG_CONFIG_PATH before building with CMake, this is to ensure\n# that CMake does not depend on pkg-config to discover the project.\nRUN env -u PKG_CONFIG_PATH cmake -H. -B/i\nRUN cmake --build /i -- -j \"${NCPU:-4}\"\n"
}