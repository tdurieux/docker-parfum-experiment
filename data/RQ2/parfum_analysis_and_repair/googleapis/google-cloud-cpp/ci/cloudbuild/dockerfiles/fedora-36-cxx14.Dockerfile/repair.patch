diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googleapis/google-cloud-cpp/ci/cloudbuild/dockerfiles/fedora-36-cxx14.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googleapis/google-cloud-cpp/ci/cloudbuild/dockerfiles/fedora-36-cxx14.Dockerfile/repaired.Dockerfile
index 68403f9..59b2e45 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googleapis/google-cloud-cpp/ci/cloudbuild/dockerfiles/fedora-36-cxx14.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googleapis/google-cloud-cpp/ci/cloudbuild/dockerfiles/fedora-36-cxx14.Dockerfile/repaired.Dockerfile
@@ -35,8 +35,8 @@ RUN echo 'root:' | chpasswd
 
 # Install the Python modules needed to run the storage emulator
 RUN dnf makecache && dnf install -y python3-devel
-RUN pip3 install --upgrade pip
-RUN pip3 install setuptools wheel
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip3 install --no-cache-dir setuptools wheel
 
 # Fedora's version of `pkg-config` (https://github.com/pkgconf/pkgconf) is slow
 # when handling `.pc` files with lots of `Requires:` deps, which happens with
@@ -44,9 +44,9 @@ RUN pip3 install setuptools wheel
 # from this bottleneck. For more details see
 # https://github.com/googleapis/google-cloud-cpp/issues/7052
 WORKDIR /var/tmp/build/pkg-config-cpp
-RUN curl -sSL https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz | \
+RUN curl -f -sSL https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz | \
     tar -xzf - --strip-components=1 && \
-    ./configure --with-internal-glib && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-internal-glib && \
     make -j ${NCPU:-4} && \
     make install && \
     ldconfig
@@ -55,7 +55,7 @@ ENV PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib
 # Install Abseil, remove the downloaded files and the temporary artifacts
 # after a successful build to keep the image smaller (and with fewer layers)
 WORKDIR /var/tmp/build
-RUN curl -sSL https://github.com/abseil/abseil-cpp/archive/20211102.0.tar.gz | \
+RUN curl -f -sSL https://github.com/abseil/abseil-cpp/archive/20211102.0.tar.gz | \
     tar -xzf - --strip-components=1 && \
     sed -i 's/^#define ABSL_OPTION_USE_\(.*\) 2/#define ABSL_OPTION_USE_\1 0/' "absl/base/options.h" && \
     cmake \
@@ -71,7 +71,7 @@ RUN curl -sSL https://github.com/abseil/abseil-cpp/archive/20211102.0.tar.gz | \
 # Install googletest, remove the downloaded files and the temporary artifacts
 # after a successful build to keep the image smaller (and with fewer layers)
 WORKDIR /var/tmp/build
-RUN curl -sSL https://github.com/google/googletest/archive/release-1.11.0.tar.gz | \
+RUN curl -f -sSL https://github.com/google/googletest/archive/release-1.11.0.tar.gz | \
     tar -xzf - --strip-components=1 && \
     cmake \
       -DCMAKE_CXX_STANDARD=14 \
@@ -84,7 +84,7 @@ RUN curl -sSL https://github.com/google/googletest/archive/release-1.11.0.tar.gz
 
 # Download and compile Google microbenchmark support library:
 WORKDIR /var/tmp/build
-RUN curl -sSL https://github.com/google/benchmark/archive/v1.6.1.tar.gz | \
+RUN curl -f -sSL https://github.com/google/benchmark/archive/v1.6.1.tar.gz | \
     tar -xzf - --strip-components=1 && \
     cmake \
         -DCMAKE_CXX_STANDARD=14 \
@@ -97,7 +97,7 @@ RUN curl -sSL https://github.com/google/benchmark/archive/v1.6.1.tar.gz | \
     cd /var/tmp && rm -fr build
 
 WORKDIR /var/tmp/build
-RUN curl -sSL https://github.com/google/crc32c/archive/1.1.2.tar.gz | \
+RUN curl -f -sSL https://github.com/google/crc32c/archive/1.1.2.tar.gz | \
     tar -xzf - --strip-components=1 && \
     cmake \
       -DCMAKE_CXX_STANDARD=14 \
@@ -112,7 +112,7 @@ RUN curl -sSL https://github.com/google/crc32c/archive/1.1.2.tar.gz | \
     cd /var/tmp && rm -fr build
 
 WORKDIR /var/tmp/build
-RUN curl -sSL https://github.com/nlohmann/json/archive/v3.10.5.tar.gz | \
+RUN curl -f -sSL https://github.com/nlohmann/json/archive/v3.10.5.tar.gz | \
     tar -xzf - --strip-components=1 && \
     cmake \
       -DCMAKE_CXX_STANDARD=14 \
@@ -126,7 +126,7 @@ RUN curl -sSL https://github.com/nlohmann/json/archive/v3.10.5.tar.gz | \
     cd /var/tmp && rm -fr build
 
 WORKDIR /var/tmp/build/protobuf
-RUN curl -sSL https://github.com/protocolbuffers/protobuf/archive/v21.2.tar.gz | \
+RUN curl -f -sSL https://github.com/protocolbuffers/protobuf/archive/v21.2.tar.gz | \
     tar -xzf - --strip-components=1 && \
     cmake \
         -DCMAKE_CXX_STANDARD=14 \
@@ -141,7 +141,7 @@ RUN curl -sSL https://github.com/protocolbuffers/protobuf/archive/v21.2.tar.gz |
 
 WORKDIR /var/tmp/build/grpc
 RUN dnf makecache && dnf install -y c-ares-devel re2-devel
-RUN curl -sSL https://github.com/grpc/grpc/archive/v1.47.0.tar.gz | \
+RUN curl -f -sSL https://github.com/grpc/grpc/archive/v1.47.0.tar.gz | \
     tar -xzf - --strip-components=1 && \
     cmake \
         -DCMAKE_CXX_STANDARD=14 \
@@ -176,6 +176,6 @@ RUN dnf makecache && dnf install -y java-latest-openjdk-devel
 # those library directories will be found.
 RUN ldconfig /usr/local/lib*
 
-RUN curl -o /usr/bin/bazelisk -sSL "https://github.com/bazelbuild/bazelisk/releases/download/v1.12.0/bazelisk-linux-amd64" && \
+RUN curl -f -o /usr/bin/bazelisk -sSL "https://github.com/bazelbuild/bazelisk/releases/download/v1.12.0/bazelisk-linux-amd64" && \
     chmod +x /usr/bin/bazelisk && \
     ln -s /usr/bin/bazelisk /usr/bin/bazel