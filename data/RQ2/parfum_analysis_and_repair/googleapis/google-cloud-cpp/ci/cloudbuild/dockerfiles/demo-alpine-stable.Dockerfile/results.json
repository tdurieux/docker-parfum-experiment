{
  "startTime": 1674251782602,
  "endTime": 1674251783259,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 48,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM alpine:3.16\nARG NCPU=4\n\n## [BEGIN packaging.md]\n\n# Install the minimal development tools, libcurl, and OpenSSL:\n\n# ```bash\nRUN apk update && \\\n    apk add --no-cache bash ca-certificates ccache cmake curl git \\\n        gcc g++ make tar unzip zip zlib-dev\n# ```\n\n# Alpine's version of `pkg-config` (https://github.com/pkgconf/pkgconf) is slow\n# when handling `.pc` files with lots of `Requires:` deps, which happens with\n# Abseil, so we use the normal `pkg-config` binary, which seems to not suffer\n# from this bottleneck. For more details see\n# https://github.com/pkgconf/pkgconf/issues/229\n# https://github.com/googleapis/google-cloud-cpp/issues/7052\nWORKDIR /var/tmp/build/pkg-config-cpp\nRUN curl -f -sSL https://pkgconfig.freedesktop.org/releases/pkg-config-0.29.2.tar.gz | \\\n    tar -xzf - --strip-components=1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-internal-glib && \\\n    make -j ${NCPU:-4} && \\\n    make install\nENV PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig:/usr/local/lib/pkgconfig:/usr/lib64/pkgconfig\n\n# #### Dependencies\n\n# The versions of Abseil, Protobuf, gRPC, OpenSSL, and nlohmann-json included\n# with Alpine >= 3.16 meet `google-cloud-cpp`'s requirements. We can simply\n# install the development packages\n\nRUN apk update && \\\n    apk add --no-cache abseil-cpp-dev c-ares-dev curl-dev grpc-dev \\\n        protobuf-dev nlohmann-json openssl-dev re2-dev\n\n# #### crc32c\n\n# The project depends on the Crc32c library, we need to compile this from\n# source:\n\n# ```bash\nWORKDIR /var/tmp/build/crc32c\nRUN curl -f -sSL https://github.com/google/crc32c/archive/1.1.2.tar.gz | \\\n    tar -xzf - --strip-components=1 && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DBUILD_SHARED_LIBS=yes \\\n        -DCRC32C_BUILD_TESTS=OFF \\\n        -DCRC32C_BUILD_BENCHMARKS=OFF \\\n        -DCRC32C_USE_GLOG=OFF \\\n        -S . -B cmake-out && \\\n    cmake --build cmake-out -- -j ${NCPU:-4} && \\\n    cmake --build cmake-out --target install -- -j ${NCPU:-4}\n# ```\n\n## [DONE packaging.md]\n"
}