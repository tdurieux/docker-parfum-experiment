{
  "startTime": 1674254912025,
  "endTime": 1674254912728,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Use a multi-stage docker build to limit production dependencies.\n\n# Use the official lightweight Node.js 14 image.\n# https://hub.docker.com/_/node\nFROM node:14-slim AS BUILD\n\n# Create and change to the app directory.\nWORKDIR /usr/cli\n\n# Copy application dependency manifests to the container image.\n# A wildcard is used to ensure copying both package.json AND package-lock.json (when available).\n# Copying this first prevents re-running npm install on every code change.\nCOPY package*.json ./\n\n# Install build dependencies.\nRUN npm ci\n\n# Now copy all the code so we can compile\nCOPY . ./\n\nRUN npm run compile\n\nFROM node:14-slim\n\n# Create and change to the app directory.\nWORKDIR /usr/cli\n\nCOPY package*.json ./\nCOPY --from=BUILD /usr/cli/build build\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\nRUN npm ci --only=production\n\nENV NODE_ENV \"production\"\n\n# Run the web service on container startup.\nENTRYPOINT [ \"node\", \"/usr/cli/build/cli.js\" ]\n\n"
}