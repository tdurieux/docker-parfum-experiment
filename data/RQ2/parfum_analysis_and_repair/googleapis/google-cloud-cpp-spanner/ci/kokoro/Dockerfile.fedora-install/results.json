{
  "startTime": 1674215521778,
  "endTime": 1674215522639,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG DISTRO_VERSION=30\nFROM fedora:${DISTRO_VERSION}\n\n# Fedora includes packages for gRPC, libcurl, and OpenSSL that are recent enough\n# for `google-cloud-cpp`. Install these packages and additional development\n# tools to compile the dependencies:\nRUN dnf makecache && \\\n    dnf install -y abi-compliance-checker abi-dumper \\\n        clang clang-tools-extra cmake diffutils doxygen findutils gcc-c++ git \\\n        grpc-devel grpc-plugins libcxx-devel libcxxabi-devel libcurl-devel \\\n        make openssl-devel pkgconfig protobuf-compiler \\\n        python3 python3-pip ShellCheck \\\n        tar w3m wget zlib-devel\n\n# Install the the buildifier tool, which does not compile with the default\n# golang compiler for Ubuntu 16.04 and Ubuntu 18.04.\nRUN wget -q -O /usr/bin/buildifier https://github.com/bazelbuild/buildtools/releases/download/0.17.2/buildifier\nRUN chmod 755 /usr/bin/buildifier\n\n# Install cmake_format to automatically format the CMake list files.\n#     https://github.com/cheshirekow/cmake_format\n# Pin this to an specific version because the formatting changes when the\n# \"latest\" version is updated, and we do not want the builds to break just\n# because some third party changed something.\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir setuptools cmake_format==0.6.8\n\n# Download and compile googletest, we need a recent version.\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/googletest/archive/release-1.10.0.tar.gz\nRUN tar -xf release-1.10.0.tar.gz && rm release-1.10.0.tar.gz\nWORKDIR /var/tmp/build/googletest-release-1.10.0\nRUN cmake \\\n          -DBUILD_SHARED_LIBS=yes \\\n          -H. -Bcmake-out/gtest\nRUN cmake --build cmake-out/gtest --target install -- -j $(nproc)\n\n# Download and compile Google microbenchmark support library:\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/benchmark/archive/v1.5.0.tar.gz\nRUN tar -xf v1.5.0.tar.gz && rm v1.5.0.tar.gz\nWORKDIR /var/tmp/build/benchmark-1.5.0\nRUN cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DBUILD_SHARED_LIBS=yes \\\n        -DBENCHMARK_ENABLE_TESTING=OFF \\\n        -H. -Bcmake-out/benchmark\nRUN cmake --build cmake-out/benchmark --target install -- -j $(nproc)\n\n# Download and compile googleapis/cpp-cmakefiles:\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/googleapis/cpp-cmakefiles/archive/v0.9.0.tar.gz\nRUN tar -xf v0.9.0.tar.gz && rm v0.9.0.tar.gz\nWORKDIR /var/tmp/build/cpp-cmakefiles-0.9.0\n# Compile without the tests because we are testing spanner, not the base\n# libraries\nRUN cmake -H. -Bcmake-out \\\n    -DBUILD_SHARED_LIBS=yes \\\n    -DBUILD_TESTING=OFF \\\n    -DGOOGLE_CLOUD_CPP_TESTING_UTIL_ENABLE_INSTALL=ON\nRUN cmake --build cmake-out -- -j $(nproc)\nRUN cmake --build cmake-out --target install\n\n# Download and compile google-cloud-cpp from source too:\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/googleapis/google-cloud-cpp-common/archive/v0.25.0.tar.gz && \\\n    tar -xf v0.25.0.tar.gz && \\\n    cd /var/tmp/build/google-cloud-cpp-common-0.25.0 && \\\n    cmake -H. -Bcmake-out \\\n      -DBUILD_SHARED_LIBS=YES \\\n      -DBUILD_TESTING=OFF \\\n      -DGOOGLE_CLOUD_CPP_TESTING_UTIL_ENABLE_INSTALL=ON && \\\n    cmake --build cmake-out --target install -- -j ${NCPU} && \\\n    ldconfig && \\\n    cd /var/tmp && rm -fr build && rm v0.25.0.tar.gz\n"
}