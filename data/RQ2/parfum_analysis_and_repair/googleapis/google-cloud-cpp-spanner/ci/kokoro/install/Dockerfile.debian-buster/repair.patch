diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googleapis/google-cloud-cpp-spanner/ci/kokoro/install/Dockerfile.debian-buster b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googleapis/google-cloud-cpp-spanner/ci/kokoro/install/Dockerfile.debian-buster/repaired.Dockerfile
index 553a0bd..961263f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googleapis/google-cloud-cpp-spanner/ci/kokoro/install/Dockerfile.debian-buster
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googleapis/google-cloud-cpp-spanner/ci/kokoro/install/Dockerfile.debian-buster/repaired.Dockerfile
@@ -31,7 +31,7 @@ RUN apt-get update && \
     apt-get --no-install-recommends install -y apt-transport-https apt-utils \
         automake build-essential ca-certificates cmake git gcc g++ cmake \
         libc-ares-dev libc-ares2 libcurl4-openssl-dev libssl-dev m4 make \
-        pkg-config tar wget zlib1g-dev
+        pkg-config tar wget zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 # ```
 
 # Debian 10 includes versions of gRPC and Protobuf that support the
@@ -40,7 +40,7 @@ RUN apt-get update && \
 # ```bash
 RUN apt-get update && \
     apt-get --no-install-recommends install -y libgrpc++-dev libprotobuf-dev libc-ares-dev \
-        protobuf-compiler protobuf-compiler-grpc
+        protobuf-compiler protobuf-compiler-grpc && rm -rf /var/lib/apt/lists/*;
 # ```
 
 # #### googleapis
@@ -55,7 +55,7 @@ RUN wget -q https://github.com/googleapis/cpp-cmakefiles/archive/v0.9.0.tar.gz &
     cmake -DBUILD_SHARED_LIBS=YES -H. -Bcmake-out && \
     cmake --build cmake-out -- -j ${NCPU:-4} && \
     cmake --build cmake-out --target install -- -j ${NCPU:-4} && \
-    ldconfig
+    ldconfig && rm v0.9.0.tar.gz
 # ```
 
 # #### google-cloud-cpp-common
@@ -71,7 +71,7 @@ RUN wget -q https://github.com/googleapis/google-cloud-cpp-common/archive/v0.25.
     cmake -H. -Bcmake-out -DBUILD_TESTING=OFF && \
     cmake --build cmake-out -- -j ${NCPU:-4} && \
     cmake --build cmake-out --target install -- -j ${NCPU:-4} && \
-    ldconfig
+    ldconfig && rm v0.25.0.tar.gz
 # ```
 
 FROM devtools AS install