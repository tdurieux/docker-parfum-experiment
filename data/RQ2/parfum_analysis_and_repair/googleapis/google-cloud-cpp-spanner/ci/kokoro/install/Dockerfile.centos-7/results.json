{
  "startTime": 1674256002919,
  "endTime": 1674256004399,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 19,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# WARNING: This is an automatically generated file. Consider changing the\n#     sources instead. You can find the source templates and scripts at:\n#     https://github.com/googleapis/google-cloud-cpp-common/tree/master/ci/templates\n#\n\nARG DISTRO_VERSION=7\nFROM centos:${DISTRO_VERSION} AS devtools\nARG NCPU=4\n\n## [START INSTALL.md]\n\n# First install the development tools and OpenSSL. The development tools\n# distributed with CentOS 7 (notably CMake) are too old to build\n# the project. In these instructions, we use `cmake3` obtained from\n# [Software Collections](https://www.softwarecollections.org/).\n\n# ```bash\nRUN rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm\nRUN yum install -y centos-release-scl yum-utils && rm -rf /var/cache/yum\nRUN yum-config-manager --enable rhel-server-rhscl-7-rpms\nRUN yum makecache && \\\n    yum install -y automake cmake3 curl-devel gcc gcc-c++ git libtool \\\n        make openssl-devel pkgconfig tar wget which zlib-devel && rm -rf /var/cache/yum\nRUN ln -sf /usr/bin/cmake3 /usr/bin/cmake && ln -sf /usr/bin/ctest3 /usr/bin/ctest\n# ```\n\n# The following steps will install libraries and tools in `/usr/local`. By\n# default CentOS-7 does not search for shared libraries in these directories,\n# there are multiple ways to solve this problem, the following steps are one\n# solution:\n\n# ```bash\nRUN (echo \"/usr/local/lib\" ; echo \"/usr/local/lib64\") | \\\n    tee /etc/ld.so.conf.d/usrlocal.conf\nENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig\nENV PATH=/usr/local/bin:${PATH}\n# ```\n\n# #### Protobuf\n\n# We need to install a version of Protobuf that is recent enough to support the\n# Google Cloud Platform proto files:\n\n# ```bash\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/google/protobuf/archive/v3.11.3.tar.gz && \\\n    tar -xf v3.11.3.tar.gz && \\\n    cd protobuf-3.11.3/cmake && \\\n    cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DBUILD_SHARED_LIBS=yes \\\n        -Dprotobuf_BUILD_TESTS=OFF \\\n        -H. -Bcmake-out && \\\n    cmake --build cmake-out -- -j ${NCPU:-4} && \\\n    cmake --build cmake-out --target install -- -j ${NCPU:-4} && \\\n    ldconfig && rm v3.11.3.tar.gz\n# ```\n\n# #### c-ares\n\n# Recent versions of gRPC require c-ares >= 1.11, while CentOS-7\n# distributes c-ares-1.10. Manually install a newer version:\n\n# ```bash\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/c-ares/c-ares/archive/cares-1_14_0.tar.gz && \\\n    tar -xf cares-1_14_0.tar.gz && \\\n    cd c-ares-cares-1_14_0 && \\\n    ./buildconf && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j ${NCPU:-4} && \\\n    make install && \\\n    ldconfig && rm cares-1_14_0.tar.gz\n# ```\n\n# #### gRPC\n\n# We also need a version of gRPC that is recent enough to support the Google\n# Cloud Platform proto files. We manually install it using:\n\n# ```bash\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/grpc/grpc/archive/78ace4cd5dfcc1f2eced44d22d752f103f377e7b.tar.gz && \\\n    tar -xf 78ace4cd5dfcc1f2eced44d22d752f103f377e7b.tar.gz && \\\n    cd grpc-78ace4cd5dfcc1f2eced44d22d752f103f377e7b && \\\n    make -j ${NCPU:-4} && \\\n    make install && \\\n    ldconfig && rm 78ace4cd5dfcc1f2eced44d22d752f103f377e7b.tar.gz\n# ```\n\n# #### googleapis\n\n# We need a recent version of the Google Cloud Platform proto C++ libraries:\n\n# ```bash\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/googleapis/cpp-cmakefiles/archive/v0.9.0.tar.gz && \\\n    tar -xf v0.9.0.tar.gz && \\\n    cd cpp-cmakefiles-0.9.0 && \\\n    cmake -DBUILD_SHARED_LIBS=YES -H. -Bcmake-out && \\\n    cmake --build cmake-out -- -j ${NCPU:-4} && \\\n    cmake --build cmake-out --target install -- -j ${NCPU:-4} && \\\n    ldconfig && rm v0.9.0.tar.gz\n# ```\n\n# #### google-cloud-cpp-common\n\n# The project also depends on google-cloud-cpp-common, the libraries shared by\n# all the Google Cloud C++ client libraries:\n\n# ```bash\nWORKDIR /var/tmp/build\nRUN wget -q https://github.com/googleapis/google-cloud-cpp-common/archive/v0.25.0.tar.gz && \\\n    tar -xf v0.25.0.tar.gz && \\\n    cd google-cloud-cpp-common-0.25.0 && \\\n    cmake -H. -Bcmake-out -DBUILD_TESTING=OFF && \\\n    cmake --build cmake-out -- -j ${NCPU:-4} && \\\n    cmake --build cmake-out --target install -- -j ${NCPU:-4} && \\\n    ldconfig && rm v0.25.0.tar.gz\n# ```\n\nFROM devtools AS install\n\n# #### Compile and install the main project\n\n# We can now compile, test, and install `google-cloud-cpp-spanner`.\n\n# ```bash\nWORKDIR /home/build/project\nCOPY . /home/build/project\nRUN cmake -H. -Bcmake-out -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=Release\nRUN cmake --build cmake-out -- -j \"${NCPU:-4}\"\nRUN cmake --build cmake-out --target install\n# ```\n\n## [END INSTALL.md]\n\nENV PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig\n\n# Verify that the installed files are actually usable\nWORKDIR /home/build/test-install-cmake\nCOPY google/cloud/spanner/quickstart /home/build/test-install-cmake\n# Disable pkg-config with CMake to verify it is not used in package discovery.\nRUN env -u PKG_CONFIG_PATH cmake -H. -B/i\nRUN cmake --build /i -- -j \"${NCPU:-4}\"\n"
}