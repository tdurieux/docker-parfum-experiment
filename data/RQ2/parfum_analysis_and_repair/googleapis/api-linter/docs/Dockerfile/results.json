{
  "startTime": 1674215095776,
  "endTime": 1674215096566,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.7-alpine\n\n# Copy the existing code into the Docker image.\n#\n# This will copy everything *at build time* (not at runtime), so it is\n# still important to use `--mount` to get a reasonable development loop.\n# This makes the image work for both purposes, though.\nCOPY . /code/\nWORKDIR /code/\n\n# Install bundler and gems for this project.\nRUN echo \"gem: --no-ri --no-rdoc\" > ~/.gemrc && \\\n  apk add --no-cache alpine-sdk && \\\n  gem update --system && \\\n  gem install bundler && \\\n  bundle install && \\\n  apk del --no-cache alpine-sdk && \\\n  rm ~/.gemrc && rm -rf /root/.gem;\n\n# Install git. (Jekyll expects it.)\nRUN apk add --no-cache git\n\n# Set environment variables that GitHub Pages expects.\nENV PAGES_REPO_NWO googleapis/googleapis.github.io\n\n# Expose appropriate ports.\nEXPOSE 4000\nEXPOSE 35729\n\n# Run Jekyll's dev server.\n# Reminder: Use -p with `docker run` to publish ports.\nENTRYPOINT [\"bundle\", \"exec\", \"jekyll\", \"serve\", \\\n  \"--destination\", \"/site\", \\\n  \"--host\", \"0.0.0.0\"]\n"
}