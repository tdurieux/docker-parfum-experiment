{
  "startTime": 1674249547746,
  "endTime": 1674249549090,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04 as toolchain\n\nENV OSX_SDK_URL=https://s3.dockerproject.org/darwin/v2/ \\\n    OSX_SDK=MacOSX10.10.sdk \\\n    OSX_MIN=10.10 \\\n    CTNG=1.23.0\n\n# FIRST PART\n# build osx64 toolchain (stripped of man documentation)\n# the toolchain produced is not self contained, it needs clang at runtime\n#\n# SECOND PART\n# build gcc (no g++) centos6-x64 toolchain\n# doc: https://crosstool-ng.github.io/docs/\n# apt-get should be all dep to build toolchain\n# sed and 1st echo are for convenience to get the toolchain in /tmp/x86_64-centos6-linux-gnu\n# other echo are to enable build by root (crosstool-NG refuse to do that by default)\n# the last 2 rm are just to save some time and space writing docker layers\n#\n# THIRD PART\n# build fpm and creates a set of deb from gem\n# ruby2.0 depends on ruby1.9.3 which is install as default ruby\n# rm/ln are here to change that\n# created deb depends on rubygem-json but json gem is not build\n# so do by hand\n\n\n# might wanna make sure osx cross and the other tarball as well as the packages ends up somewhere other than tmp\n# might also wanna put them as their own layer to not have to unpack them every time?\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        clang-3.8 patch libxml2-dev \\\n        ca-certificates \\\n        curl \\\n        git \\\n        make \\\n        cmake \\\n        libssl-dev \\\n        xz-utils && \\\n    git clone https://github.com/tpoechtrager/osxcross.git  /tmp/osxcross && \\\n    curl -f -L ${OSX_SDK_URL}/${OSX_SDK}.tar.xz -o /tmp/osxcross/tarballs/${OSX_SDK}.tar.xz && \\\n    ln -s /usr/bin/clang-3.8 /usr/bin/clang && \\\n    ln -s /usr/bin/clang++-3.8 /usr/bin/clang++ && \\\n    ln -s /usr/bin/llvm-dsymutil-3.8 /usr/bin/dsymutil && \\\n    UNATTENDED=yes OSX_VERSION_MIN=${OSX_MIN} /tmp/osxcross/build.sh && \\\n    rm -rf /tmp/osxcross/target/SDK/${OSX_SDK}/usr/share && \\\n    cd /tmp && \\\n    tar cfJ osxcross.tar.xz osxcross/target && \\\n    rm -rf /tmp/osxcross && \\\n    apt-get install --no-install-recommends -y \\\n        bison curl flex gawk gcc g++ gperf help2man libncurses5-dev make patch python-dev texinfo xz-utils && \\\n    curl -f -L https://crosstool-ng.org/download/crosstool-ng/crosstool-ng-${CTNG}.tar.xz \\\n         | tar -xJ -C /tmp/ && \\\n    cd /tmp/crosstool-ng-${CTNG} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-local && \\\n    make && \\\n    ./ct-ng x86_64-centos6-linux-gnu && \\\n    sed -i '/CT_PREFIX_DIR=/d' .config && \\\n    echo 'CT_PREFIX_DIR=\"/tmp/${CT_HOST:+HOST-${CT_HOST}/}${CT_TARGET}\"' >> .config && \\\n    echo 'CT_EXPERIMENTAL=y' >> .config && \\\n    echo 'CT_ALLOW_BUILD_AS_ROOT=y' >> .config && \\\n    echo 'CT_ALLOW_BUILD_AS_ROOT_SURE=y' >> .config && \\\n    ./ct-ng build && \\\n    cd /tmp && \\\n    rm /tmp/x86_64-centos6-linux-gnu/build.log.bz2 && \\\n    tar cfJ x86_64-centos6-linux-gnu.tar.xz x86_64-centos6-linux-gnu/ && \\\n    rm -rf /tmp/x86_64-centos6-linux-gnu/ && \\\n    rm -rf /tmp/crosstool-ng-${CTNG} && rm osxcross.tar.xz && rm -rf /var/lib/apt/lists/*;\n\n# base image to crossbuild grafana\nFROM ubuntu:14.04\n\nENV GOVERSION=1.12.9 \\\n    PATH=/usr/local/go/bin:$PATH \\\n    GOPATH=/go \\\n    NODEVERSION=10.14.2\n\nCOPY --from=toolchain /tmp/x86_64-centos6-linux-gnu.tar.xz /tmp/\nCOPY --from=toolchain /tmp/osxcross.tar.xz /tmp/\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        clang-3.8 gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf gcc-mingw-w64-x86-64 \\\n        apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        libfontconfig1 \\\n        gcc \\\n        g++ \\\n        git \\\n        make \\\n        rpm \\\n        xz-utils \\\n        expect \\\n        gnupg2 \\\n        unzip && \\\n    ln -s /usr/bin/clang-3.8 /usr/bin/clang && \\\n    ln -s /usr/bin/clang++-3.8 /usr/bin/clang++ && \\\n    ln -s /usr/bin/llvm-dsymutil-3.8 /usr/bin/dsymutil && \\\n    curl -f -L https://nodejs.org/dist/v${NODEVERSION}/node-v${NODEVERSION}-linux-x64.tar.xz \\\n      | tar -xJ --strip-components=1 -C /usr/local && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb [arch=amd64] https://dl.yarnpkg.com/debian/ stable main\"     \\\n      | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && apt-get install -y --no-install-recommends yarn && \\\n    curl -f -L https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz \\\n      | tar -xz -C /usr/local && \\\n    git clone https://github.com/raspberrypi/tools.git /opt/rpi-tools --depth=1 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y \\\n        gcc libc-dev make && \\\n    gpg2 --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 7D2BAF1CF37B13E2069D6956105BD0E739499BDB && \\\n    curl -f -sSL https://get.rvm.io | bash -s stable && \\\n    /bin/bash -l -c \"rvm requirements && rvm install 2.2 && gem install -N fpm\" && rm -rf /var/lib/apt/lists/*;\n\nADD ./bootstrap.sh /tmp/bootstrap.sh\n"
}