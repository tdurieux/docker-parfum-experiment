{
  "startTime": 1674255918260,
  "endTime": 1674255919211,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### build stage\nFROM rust:1.51-slim as builder\nENV USER root\nENV CI_PROJECT_NAME docker\nRUN apt-get update && apt-get install --no-install-recommends -y git cmake pkg-config libssl-dev git clang libclang-dev && rm -rf /var/lib/apt/lists/*;\nRUN rustup default nightly && rustup target add wasm32-unknown-unknown\nCOPY . .\nRUN CI_PROJECT_NAME=docker sh scripts/init.sh\nRUN cargo build --release\n\n### package stage\nFROM debian:stretch-slim\n# metadata\nARG VCS_REF\nARG BUILD_DATE\n# show backtraces\nENV RUST_BACKTRACE 1\n# install tools and dependencies\nRUN apt-get update && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n\t\tlibssl1.1 \\\n\t\tca-certificates \\\n\t\tcurl && \\\n# apt cleanup\n\tapt-get autoremove -y && \\\n\tapt-get clean && \\\n\tfind /var/lib/apt/lists/ -type f -not -name lock -delete; rm -rf /var/lib/apt/lists/*; \\\n# add user\n\tuseradd -m -u 1000 -U -s /bin/sh -d /metaverse mvs\n# add binary to docker image\nCOPY --from=builder /target/release/hyperspace /usr/local/bin/metaverse\nCOPY --from=builder /hyperspace.json ./mainnet\nCOPY --from=builder /hyperspace.json .\nCOPY --from=builder /testnet.json ./testnet\nCOPY --from=builder /testnet.json .\nUSER mvs\n# check if executable works in this container\nRUN /usr/local/bin/metaverse --version\n# 30333 p2p\n# 9933 http rpc\n# 9944 ws rpc\n# 9615 prometheus\nEXPOSE 30333 9933 9944 9615\nVOLUME [\"/metaverse\"]\nENTRYPOINT [\"/usr/local/bin/metaverse\", \"--unsafe-rpc-external\", \"--unsafe-ws-external\"]\n"
}