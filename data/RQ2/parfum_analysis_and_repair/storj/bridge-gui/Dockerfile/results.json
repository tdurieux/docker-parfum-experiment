{
  "startTime": 1674255467498,
  "endTime": 1674255468423,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:6\n\n# Apt\nRUN apt-get update && apt-get install --no-install-recommends -y git wget curl && rm -rf /var/lib/apt/lists/*;\n\n# Create directory for the app\nRUN mkdir -p /opt/bridge-gui\nWORKDIR /opt/bridge-gui\n\nADD package.json .\nRUN npm install --production && npm cache clean --force;\n\nRUN rm -rf node_modules/bitcore-lib && mv node_modules/bitcore-ecies/node_modules/bitcore-lib node_modules/\n\n# Copy over the app and install\nCOPY . /opt/bridge-gui/\n\n# Clean any extra files that got coppied from the host's repo\n# Commenting this so we can build something thats not in the upstream repo\n#RUN git reset --hard\n#RUN git clean -fdx\n\n# Install node modules for production (i.e. don't install devdeps)\n#RUN npm i --production\n\nARG NODE_ENV=NODE_ENV_ENV\nARG APIHOST=APIHOST_ENV\nARG APIPORT=APIPORT_ENV\nARG APIPROTOCOL=APIPROTOCOL_ENV\nARG APOLLO_CLIENT_URL=APOLLO_CLIENT_URL_ENV\nARG STRIPE_PUBLISHABLE_KEY=STRIPE_PUBLISHABLE_KEY_ENV\nARG OUTPUT_PUBLIC_PATH_PROTOCOL=OUTPUT_PUBLIC_PATH_PROTOCOL_ENV\nARG OUTPUT_PUBLIC_PATH_URL=OUTPUT_PUBLIC_PATH_URL_ENV\n\nENV NODE_ENV $NODE_ENV\nENV APIHOST $APIHOST\nENV APIPORT $APIPORT\nENV APIPROTOCOL $APIPROTOCOL\nENV APOLLO_CLIENT_URL $APOLLO_CLIENT_URL\nENV STRIPE_PUBLISHABLE_KEY $STRIPE_PUBLISHABLE_KEY\nENV OUTPUT_PUBLIC_PATH_PROTOCOL $OUTPUT_PUBLIC_PATH_PROTOCOL\nENV OUTPUT_PUBLIC_PATH_URL $OUTPUT_PUBLIC_PATH_URL\n\n\n# Build for production\nRUN npm run build\n\n# Expose listen port\nEXPOSE 8080\n\n# Start the app\nCMD [ \"./dockerfiles/scripts/start-bridge-gui\" ]\n\n# Use for testing\n#CMD [ \"/bin/sleep\", \"5000\" ]\n"
}