{
  "startTime": 1674255267035,
  "endTime": 1674255268426,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 87,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 321
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 321
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 22,
        "columnEnd": 295
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/comparative-genomics-toolkit/ubuntu:22.04 AS builder\n\n# apt dependencies for build\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y build-essential git python3 python3-dev python3-pip zlib1g-dev wget libbz2-dev pkg-config libhdf5-dev liblzo2-dev libtokyocabinet-dev wget liblzma-dev libxml2-dev libssl-dev libpng-dev uuid-dev libcurl4-gnutls-dev libffi-dev python3-virtualenv rsync && rm -rf /var/lib/apt/lists/*;\n\n# build cactus binaries\nRUN mkdir -p /home/cactus\nCOPY . /home/cactus\n\n# Make sure abpoa doesn't build with -march=native, but something more portable\n# Todo: It would be more portable to use \"sse41\", but that leads to segfaults in rare cases\n# https://github.com/yangao07/abPOA/issues/26\nENV avx2 1\n\n# install Phast and enable halPhyloP compilation\nRUN cd /home/cactus && ./build-tools/downloadPhast\nENV ENABLE_PHYLOP 1\n\n# Install UCSC browser libraries to compile UDC\n# remote access.  The browser common.mk file checks for\nRUN cd /home/cactus && ./build-tools/downloadUcscLib\nENV ENABLE_UDC 1\nENV KENTSRC /home/cactus/submodules/kent/src\n\n# clean and build\nRUN find /home/cactus -name include.local.mk -exec rm -f {} \\; && \\\n\t cd /home/cactus && rm -rf bin/* && make clean -j $(nproc) && \\\n\t make -j $(nproc)\n\n# download open-licenses kent binaries used by hal for assembly hubs\nRUN cd /home/cactus/bin && for i in wigToBigWig faToTwoBit bedToBigBed bigBedToBed; do wget -q https://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/${i}; chmod ugo+x ${i};done\n\n# bedSort and hgGcPercent are part of a more restricted licence: https://hgdownload.cse.ucsc.edu/admin/exe/\n# if you agree to it, uncomment this line:\n# RUN cd /home/cactus/bin && for i in bedSort hgGcPercent; do wget -q http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/${i}; chmod ugo+x ${i}; done\n\n# download tools used for pangenome pipeline\nRUN cd /home/cactus && ./build-tools/downloadPangenomeTools\n\n# remove test executables\nRUN cd /home/cactus && rm -f ${binPackageDir}/bin/*test ${binPackageDir}/bin/*tests ${binPackageDir}/bin/*Test ${binPackageDir}/bin/*Tests\n\n# make the binaries smaller by removing debug symbols (but leave them in cactus_consolidated)\nRUN /bin/bash -O extglob -c \"cd /home/cactus && strip -d bin/!(cactus_consolidated) 2> /dev/null || true\"\n\n# check the linking on all our binaries (those kent tools above aren't static)\nRUN for i in /usr/local/bin/* ; do if [ -f ${i} ] && [ $(ldd ${i} | grep \"not found\" | wc -l) -ge 1 ]; then exit 1; fi; done\n\n# build cactus python3\nRUN cd /home/cactus && rm -rf cactus_env && \\\n\t python3 -m virtualenv -p python3 cactus_env  && \\\n\t . cactus_env/bin/activate && \\\n\t python3 -m pip install -U setuptools pip==21.3.1 && \\\n\t python3 -m pip install -U -r ./toil-requirement.txt && \\\n\t python3 -m pip install -U .\n\n# prep the hal python install which is not part of the setup\nRUN rm -rf /home/cactus/hal_lib && \\\n\t rsync -avm --include='*.py' -f 'hide,! */' /home/cactus/submodules/hal /home/cactus/hal_lib\n\n# Create a thinner final Docker image in which only the binaries and necessary data exist.\nFROM quay.io/comparative-genomics-toolkit/ubuntu:22.04\n\n# apt dependencies for runtime\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends git python3 python3-pip python3-distutils zlib1g libbz2-1.0 net-tools libhdf5-103 liblzo2-2 libtokyocabinet9 libkrb5-3 libk5crypto3 time liblzma5 libcurl4 libcurl4-gnutls-dev libxml2 libgomp1 libffi7 && rm -rf /var/lib/apt/lists/*;\n\n# required for ubuntu22 but won't work anywhere else\nRUN bash -c \"if ! command -v catchsegv > /dev/null; then apt-get install glibc-tools; fi\"\n\n# copy cactus runtime essentials (note: important cactus_env keeps its path)\nRUN mkdir /home/cactus\nCOPY --from=builder /home/cactus/cactus_env /home/cactus/cactus_env\nCOPY --from=builder /home/cactus/hal_lib/hal /home/cactus/hal\nCOPY --from=builder /home/cactus/bin /home/cactus/bin\n\n# update the environment\nENV PATH=\"/home/cactus/cactus_env/bin:/home/cactus/bin:$PATH\"\nENV PYTHONPATH=\"/home/cactus\"\n\n# sanity check to make sure cactus at least runs\nRUN cactus --help\n\n# wrapper.sh is used when running using the docker image with --binariesMode docker\nRUN mkdir /opt/cactus/\nCOPY runtime/wrapper.sh /opt/cactus/\nRUN chmod 777 /opt/cactus/wrapper.sh\n\n# log the memory usage (with --realTimeLogging) for local commands\nENV CACTUS_LOG_MEMORY 1\n\n# UCSC convention is to work in /data\nRUN mkdir -p /data\nWORKDIR /data\n\n"
}