{
  "startTime": 1674253956279,
  "endTime": 1674253957475,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.4.3-devel-ubuntu20.04 as builder\n\n# Prevent dpkg from trying to ask any questions, ever\nENV DEBIAN_FRONTEND noninteractive\n\n# system dependencies are installed by ./installUbuntu.sh below, but we need sudo first\nRUN apt-get -qq -y update && \\\n    apt-get -qq -y upgrade && \\\n    apt-get -qq --no-install-recommends -y install \\\n    sudo git cmake && rm -rf /var/lib/apt/lists/*;\n\n# Use the commit from the file\nCOPY build-tools/Segalign.commit /\n\n# clone Segalign\nRUN git clone https://github.com/ComparativeGenomicsToolkit/SegAlign.git /WGA_GPU && cd WGA_GPU && git checkout $(cat /Segalign.commit) && git submodule update --init --recursive\n\n# build and install everything but cuda using the install script\nRUN cd /WGA_GPU && rm -rf build && ./scripts/installUbuntu.sh -c && git rev-parse HEAD > /Segalign.commit\n\n# Create a thinner final Docker image with only runtime dependencies\nFROM nvidia/cuda:11.4.3-runtime-ubuntu20.04\n\n# Install runtime dependencies\nRUN apt-get -qq -y update && \\\n    apt-get -qq -y upgrade && \\\n    apt-get -qq --no-install-recommends -y install \\\n    libkrb5-3 \\\n    libk5crypto3 \\\n    libboost-dev \\\n    libboost-program-options-dev \\\n    zlib1g \\\n    parallel && rm -rf /var/lib/apt/lists/*;\n\n# copy all the binaries\nCOPY --from=builder /usr/local/bin /usr/local/bin\n\n# copy the tbb shared library\nCOPY --from=builder /WGA_GPU/build/tbb_cmake_build/tbb_cmake_build_subdir_release/lib* /usr/local/lib/\n\n# add the library path\nENV LD_LIBRARY_PATH=\"/usr/local/lib/:${LD_LIBRARY_PATH}\"\n\n# remember that commit\nCOPY --from=builder /Segalign.commit /\n\n# UCSC convention is to work in /data\nRUN mkdir -p /data\nWORKDIR /data\n"
}