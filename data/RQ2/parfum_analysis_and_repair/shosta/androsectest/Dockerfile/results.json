{
  "startTime": 1674249819661,
  "endTime": 1674249820621,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 21,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 72,
        "columnStart": 21,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Download the Required Hacking Tools\nFROM ubuntu:20.04 as ubuntu-downloader\n\nENV HACKTOOLS_DIR=/home/Developpement/HackingTools\n\nWORKDIR $HACKTOOLS_DIR\n\n# Install adb tools, unzip, wget, signapk and apktool\nRUN apt update -y && apt install -y  --no-install-recommends \\\n    wget \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install SignApk\nRUN mkdir -p SignApkUtils && \\\n    wget --no-check-certificate --quiet -O ./SignApkUtils/signapk.jar https://github.com/techexpertize/SignApk/blob/master/signapk.jar\n\n# Install jadx\nRUN wget --no-check-certificate --quiet https://github.com/skylot/jadx/releases/download/v1.1.0/jadx-1.1.0.zip && \\\n    mkdir -p ./DecompilingAndroidAppUtils/jadx && \\\n    unzip jadx-1.1.0.zip -d ./DecompilingAndroidAppUtils/jadx && rm jadx-1.1.0.zip\n\n# Download apktool-2 & Rename downloaded jar to apktool.jar\nRUN mkdir -p ./DecompilingAndroidAppUtils/apktool && \\\n    wget --no-check-certificate --quiet -O ./DecompilingAndroidAppUtils/apktool/apktool.jar https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_2.4.1.jar\n\n# Install Humpty-dumpty\nRUN mkdir -p ./humpty-dumpty-android-master && \\\n    wget --no-check-certificate --quiet -O ./humpty-dumpty-android-master/humpty.sh https://github.com/Pixplicity/humpty-dumpty-android/blob/master/humpty.sh\n\n\n\n# Build the AndroSecTest App on the golang latest image.\nFROM golang:latest as go-builder\n\n# Environmentn variables\nENV SRC_DIR=/go/src/github.com/Shosta/androSecTest\nENV GIT_SSL_NO_VERIFY=1\n\n# Set the Current Working Directory inside the container\nWORKDIR $SRC_DIR\n\n# Copy the source from the current directory to the Working Directory inside the container\nCOPY . $SRC_DIR\n\n# Dowload the Go Dependancies\nRUN go get $SRC_DIR/...\n\n# Build the Go app for a Linux target\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o androSecTest .\n\n\n\n# Pull Ubuntu LTS image.\nFROM ubuntu:20.04\n\n# Labels and Credits\nLABEL \\\n    name=\"AndroSecTest on Ubuntu\" \\\n    author=\"Rémi Lavedrine <remi@github.com>\" \\\n    maintainer=\"Rémi Lavedrine <remi@github.com>\" \\\n    description=\"Android Security Test (AndroSecTest) is an automated, all-in-one mobile application (Android) security assessment framework capable of performing static.\"\n\nENV SRC_DIR=/root/go/src/github.com/Shosta/androSecTest\nENV HACKTOOLS_DIR=/home/Developpement/HackingTools\nWORKDIR $SRC_DIR\n\n# Install adb tools, unzip, wget, signapk and apktool\nRUN apt update -y && apt install -y --no-install-recommends \\\n    openjdk-8-jdk \\\n    usbutils \\\n    unzip \\\n    android-tools-adb \\\n    bash-completion && rm -rf /var/lib/apt/lists/*;\n\n# Copy jadx and apktool\nCOPY --from=ubuntu-downloader $HACKTOOLS_DIR/DecompilingAndroidAppUtils $HACKTOOLS_DIR/DecompilingAndroidAppUtils\nRUN chmod +x $HACKTOOLS_DIR/DecompilingAndroidAppUtils/apktool/apktool.jar\n\n# Copy Humpty-dumpty\nCOPY --from=ubuntu-downloader $HACKTOOLS_DIR/humpty-dumpty-android-master $HACKTOOLS_DIR/humpty-dumpty-android-master\n\n# Copy the built executable from the go-builder container and add it to this container.\nCOPY --from=go-builder /go/src/github.com/Shosta/androSecTest/androSecTest $SRC_DIR\n\n# Copy the User Settings\nRUN mkdir  $SRC_DIR/.res\nCOPY --from=go-builder /go/src/github.com/Shosta/androSecTest/res/ $SRC_DIR/.res/\n\n# Copy SignApk to Proper Location in Container\nRUN mv $SRC_DIR/.res/SignApk $HACKTOOLS_DIR/SignApkUtils/ && \\\n    chmod +x $HACKTOOLS_DIR/SignApkUtils/signapk.jar\n"
}