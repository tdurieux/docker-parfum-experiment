diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/famura/simurlacra/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/famura/simurlacra/Dockerfile/repaired.Dockerfile
index d9dffa4..224ef5a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/famura/simurlacra/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/famura/simurlacra/Dockerfile/repaired.Dockerfile
@@ -38,15 +38,15 @@ ARG CI=TRUE
 ARG DEBIAN_FRONTEND=noninteractive
 
 # Install ubuntu packages
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     curl ca-certificates sudo git bzip2 libx11-6 \
     gcc g++ make cmake zlib1g-dev swig libsm6 libxext6 \
     build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev \
-    wget llvm libncurses5-dev xz-utils tk-dev libxrender1\
-    libxml2-dev libxmlsec1-dev libffi-dev libcairo2-dev libjpeg-dev libgif-dev\
-    doxygen texlive graphviz ghostscript;\
-    adduser --disabled-password --gecos '' --shell /bin/bash user && chown -R user:user /home/user;\
-    mkdir /home/user/SimuRLacra && chown user:user /home/user/SimuRLacra;\
+    wget llvm libncurses5-dev xz-utils tk-dev libxrender1 \
+    libxml2-dev libxmlsec1-dev libffi-dev libcairo2-dev libjpeg-dev libgif-dev \
+    doxygen texlive graphviz ghostscript; rm -rf /var/lib/apt/lists/*; \
+    adduser --disabled-password --gecos '' --shell /bin/bash user && chown -R user:user /home/user; \
+    mkdir /home/user/SimuRLacra && chown user:user /home/user/SimuRLacra; \
     echo 'user ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/90-pyrado
 USER user
 WORKDIR /home/user
@@ -71,7 +71,7 @@ SHELL ["conda", "run", "-n", "pyrado", "/bin/bash", "-c"]
 
 # Copy the file and install the required python packages
 COPY --chown=user:user requirements.txt requirements.txt
-RUN pip install -r requirements.txt; \
+RUN pip install --no-cache-dir -r requirements.txt; \
     conda init bash ; rm -fr /home/user/.cache
 
 # Add env variables
@@ -89,20 +89,20 @@ RUN python setup_deps.py dep_libraries -j8
 ARG OPTION=sacher
 ARG J=8
 
-RUN if [ $OPTION == 'blackforest' ]; then\
-    python setup_deps.py w_rcs_w_pytorch -j$J;\
-    elif [ $OPTION == 'sacher' ]; then\
-    pip install torch==1.8.1\
-    && python setup_deps.py w_rcs_wo_pytorch -j$J;\
-    elif [ $OPTION == 'redvelvet' ]; then\
-    pip install torch==1.8.1 &&\
-    python setup_deps.py wo_rcs_wo_pytorch -j$J &&\
-    rm -fr Rcs RcsPySim;\
+RUN if [ $OPTION == 'blackforest' ];then\
+    python setup_deps.py w_rcs_w_pytorch -j$J; \
+    elif [ $OPTION == 'sacher' ]; then \
+    pip install --no-cache-dir torch==1.8.1 \
+    && python setup_deps.py w_rcs_wo_pytorch -j$J; \
+    elif [ $OPTION == 'redvelvet' ]; then \
+    pip install --no-cache-dir torch==1.8.1 && \
+    python setup_deps.py wo_rcs_wo_pytorch -j$J && \
+    rm -fr Rcs RcsPySim; \
     elif [ $OPTION == 'malakoff' ]; then\
     python setup_deps.py wo_rcs_w_pytorch -j$J &&\
     rm -fr Rcs RcsPySim;\
-    fi;\
-    rm -fr ~/.cache 
+    fi; \
+    rm -fr ~/.cache
 
 COPY --chown=user:user RcsPySim RcsPySim