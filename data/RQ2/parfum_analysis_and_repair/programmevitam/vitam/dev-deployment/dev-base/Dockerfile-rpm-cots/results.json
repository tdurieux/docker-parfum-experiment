{
  "startTime": 1674255255723,
  "endTime": 1674255256691,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#########################################################################################\n# Dockerfile to run vitam on one server\n# Based on CentOS\n#\n# Maintained by Vitam Integration Team\n# Image name: vitam/jenkins-slave-base\n#########################################################################################\n\n# Set the base image to Centos 7\nFROM centos:7.7.1908\nMAINTAINER French Prime minister Office/SGMAP/DINSIC/Vitam Program <contact.vitam@culture.gouv.fr>\n\n# Make sure the package repository and packages are up to date.\nRUN yum install -y epel-release && yum -y update && yum -y upgrade && yum clean all && rm -rf /var/cache/yum\n\n################################  Configure systemd  ###############################\n\n# Hint for systemd that we are running inside a container\nENV container docker\n\n# Remove useless units\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n    rm -f /lib/systemd/system/multi-user.target.wants/*;\\\n    rm -f /etc/systemd/system/*.wants/*;\\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/basic.target.wants/*;\\\n    rm -f /lib/systemd/system/anaconda.target.wants/*;\n\n################################  Install build tools (rpm / maven / java)  ###############################\n\nRUN yum remove -y java-1.8*\n\nRUN yum install -y \\\n    \tjava-11-openjdk-devel \\\n    \trpm-build \\\n        rpmdevtools \\\n        initscripts.x86_64 \\\n        golang \\\n        npm \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# Add Java to path\nENV JAVA_HOME /usr/lib/jvm/java\n\n# Install & configure maven\nRUN curl -f -k https://repo.maven.apache.org/maven2/org/apache/maven/apache-maven/3.3.9/apache-maven-3.3.9-bin.tar.gz --output /tmp/maven.tgz \\\n    && tar xvzf /tmp/maven.tgz --directory /opt \\\n    && rm -f /tmp/maven.tgz \\\n    && ln -s /opt/apache-maven-3.3.9 /opt/maven \\\n    && mkdir -p /devhome/.m2 \\\n    && chmod -R 777 /devhome\n\n# Add Maven & java to path\nENV M2_HOME /opt/maven\nENV PATH ${M2_HOME}/bin:${JAVA_HOME}/bin:${PATH}\n\n################################  Install deployment tools  ###############################\n\n# for sudo in automatic deployment ; note : ansible needs epel repo\nRUN yum install -y sudo ansible openssl which && yum clean all && rm -rf /var/cache/yum\n\n##################################  install git and vim  #################################\n\nRUN yum install -y git vim && yum clean all && rm -rf /var/cache/yum\n\n##################################  Declare local rpm repo  #################################\n\n# Note : declare at the end ; else other yum commandes will fail. Ideally, we would need a \"createrepo\" here, but it wouldn't work, as the volume /code is normally mounter externally.\nRUN yum install -y createrepo \\\n    && yum clean all && rm -rf /var/cache/yum\nCOPY rpm/devlocal.repo /etc/yum.repos.d/devlocal.repo\n\n################################## Add dev helpers #################################\n\nCOPY rpm/vitam-build-repo /usr/bin\nCOPY vitam-deploy /usr/bin\nCOPY vitam-deploy-extra /usr/bin\nCOPY rpm/vitam-maven-build-only /usr/bin\nCOPY vitam-redeploy /usr/bin\nCOPY vitam-redeploy-extra /usr/bin\nCOPY vitam-command /usr/bin\nCOPY rpm/vitam-deploy-cots /usr/bin\nRUN chmod a+x /usr/bin/vitam-*\n\nCOPY rpm/profile-build-repo.sh /etc/profile.d\nCOPY profile-prompt-usage.sh /etc/profile.d\nCOPY .bashrc /devhome\nCOPY vitam-usage.txt /etc\nCOPY rpm/wheel-nopwd /etc/sudoers.d\nRUN chmod 664 /etc/sudoers.d/wheel-nopwd\n\n# Disable fastestmirror ; helps gain several seconds per yum invocation\nCOPY rpm/fastestmirror.conf /etc/yum/pluginconf.d\n\nENV TERM xterm\n\n##################################  CONTAINER SETTINGS  #################################\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nVOLUME [ \"/code\" ]\nVOLUME [ \"/devhome/.m2\" ]\n\nWORKDIR /code\n\n# Entry Point to systemd init\nCMD [\"/usr/sbin/init\"]\n\nCOPY vitam-stop /usr/bin\nCOPY vitam-start /usr/bin\nCOPY vitam-restart /usr/bin\nCOPY vitam-bench-ingest /usr/bin\nCOPY vitam-mongo-cli /usr/bin\nCOPY vitam-mongo-cli-rs /usr/bin\nCOPY rpm/vitam-recreate-repo /usr/bin\n\nRUN chmod a+x /usr/bin/vitam-*\nRUN chmod 644 /etc/sudoers.d/wheel-nopwd\n\nCOPY rpm/vitam-build-griffins /usr/bin\n\nRUN yum install -y --disablerepo=local selinux-policy selinux-policy-devel && rm -rf /var/cache/yum\n"
}