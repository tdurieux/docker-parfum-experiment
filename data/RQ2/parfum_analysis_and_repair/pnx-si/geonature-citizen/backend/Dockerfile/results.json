{
  "startTime": 1674255671900,
  "endTime": 1674255672840,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# STAGE BASE\nFROM python:3.8.10 as python-base\n\nENV PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    POETRY_VIRTUALENVS_IN_PROJECT=true \\\n    # do not ask any interactive question\n    POETRY_NO_INTERACTION=1 \\\n    \\\n    # paths\n    # this is where our requirements + virtual environment will live\n    PYSETUP_PATH=\"/opt/pysetup\" \\\n    VENV_PATH=\"/opt/pysetup/.venv\"\n\nENV PATH=\"$POETRY_PATH/bin:$VENV_PATH/bin:$PATH\"\n\n# STAGE POETRY\nFROM python-base as poetry\n\nWORKDIR $PYSETUP_PATH\nRUN pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir poetry\n\nCOPY poetry.lock pyproject.toml ./\nRUN poetry install\n\n# STAGE RUNTIME\nFROM python-base as runtime\nWORKDIR /app\n\nCOPY --from=poetry $PYSETUP_PATH $PYSETUP_PATH\nCOPY . .\n\nCMD [\"gunicorn\", \"-w\", \"2\", \"-b\", \"0.0.0.0:5002\", \"--timeout=30\", \"--reload\", \"wsgi:app\"]\n"
}