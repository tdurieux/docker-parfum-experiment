diff --git "a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eryajf/eryajf.github.io/docs/01.\350\277\220\347\273\264\350\247\202\346\255\242/35.Docker/07.\345\210\251\347\224\250Dockerfile\345\210\233\345\273\272\344\270\200\344\272\233\345\237\272\347\241\200\351\225\234\345\203\217.md" "b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eryajf/eryajf.github.io/docs/01.\350\277\220\347\273\264\350\247\202\346\255\242/35.Docker/07.\345\210\251\347\224\250Dockerfile\345\210\233\345\273\272\344\270\200\344\272\233\345\237\272\347\241\200\351\225\234\345\203\217.md/repaired.Dockerfile"
index bda988a..72c6667 100644
--- "a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eryajf/eryajf.github.io/docs/01.\350\277\220\347\273\264\350\247\202\346\255\242/35.Docker/07.\345\210\251\347\224\250Dockerfile\345\210\233\345\273\272\344\270\200\344\272\233\345\237\272\347\241\200\351\225\234\345\203\217.md"
+++ "b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eryajf/eryajf.github.io/docs/01.\350\277\220\347\273\264\350\247\202\346\255\242/35.Docker/07.\345\210\251\347\224\250Dockerfile\345\210\233\345\273\272\344\270\200\344\272\233\345\237\272\347\241\200\351\225\234\345\203\217.md/repaired.Dockerfile"
@@ -3,14 +3,14 @@ title: 利用Dockerfile创建一些基础镜像
 titleTag: 原创
 date: 2018-11-09 22:10:14
 permalink: /pages/2030.html
-categories: 
+categories:
   - 运维观止
   - Docker
-tags: 
+tags:
   - docker
   - dockerfile
 
-description: 
+description:
 ---
 
 在学习 docker 的过程中，我们会经常与镜像打交道，同时也要经常与网络打交道，下载远程镜像的快慢几乎都是靠人品来支撑，这样以来，学习的效率会大大降低，而且远程的一些镜像，很多时候未必适合自己使用的需求，因此，制作一些基础镜像用于日常使用，就显得非常必要了。
@@ -60,33 +60,33 @@ aliyun-epel.repo  aliyun-mirror.repo  Dockerfile  supervisord.conf
 #
 #需要一个基础镜像，这里从国内的daocloud下载，速度比较快。
 FROM       daocloud.io/library/centos:centos7.4.1708
- 
+
 #维护者
 MAINTAINER eryajf <Linuxlql@163.com>
- 
+
 #设置一个时区的环境变量
 ENV TZ "Asia/Shanghai"
- 
+
 #虚拟终端
 ENV TERM xterm
- 
+
 #dockerfile中有2条命令可以复制文件，1.COPY 2.ADD， ADD比COPY多2个功能，可以写成连接 直接COPY到container，如果是压缩文件，add能自动解压
 ADD aliyun-mirror.repo /etc/yum.repos.d/CentOS-Base.repo
 ADD aliyun-epel.repo /etc/yum.repos.d/epel.repo
- 
+
 RUN yum install -y curl wget tar bzip2 unzip vim-enhanced passwd sudo yum-utils hostname net-tools rsync man && \
     yum install -y gcc gcc-c++ git make automake cmake patch logrotate python-devel libpng-devel libjpeg-devel && \
     yum install -y --enablerepo=epel pwgen python-pip python-setuptools.noarch lrzsz ntp docker-client && \
-    yum clean all
- 
+    yum clean all && rm -rf /var/cache/yum
+
 #配置supervisor 进程管理工具，运行单个进程可以不使用
 RUN easy_install supervisor && \
     mkdir -m 755 -p /etc/supervisor && \
     mkdir -m 755 /etc/supervisor/conf.d
 ADD supervisord.conf /etc/supervisor/supervisord.conf
- 
+
 EXPOSE 22
- 
+
 ENTRYPOINT ["/usr/bin/supervisord", "-n", "-c", "/etc/supervisor/supervisord.conf"]
 ```
 
@@ -110,7 +110,7 @@ failovermethod=priority
 enabled=1
 gpgcheck=0
 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
- 
+
 [epel-debuginfo]
 name=Extra Packages for Enterprise Linux 7 - $basearch - Debug
 baseurl=http://mirrors.aliyun.com/epel/7/$basearch/debug
@@ -119,7 +119,7 @@ failovermethod=priority
 enabled=0
 gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
 gpgcheck=0
- 
+
 [epel-source]
 name=Extra Packages for Enterprise Linux 7 - $basearch - Source
 baseurl=http://mirrors.aliyun.com/epel/7/SRPMS
@@ -149,7 +149,7 @@ gpgcheck=0
 # remarked out baseurl= line instead.
 #
 #
- 
+
 [base]
 name=CentOS-$releasever - Base - mirrors.aliyun.com
 failovermethod=priority
@@ -157,7 +157,7 @@ baseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/
 #mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os
 gpgcheck=1
 gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7
- 
+
 #released updates
 [updates]
 name=CentOS-$releasever - Updates - mirrors.aliyun.com
@@ -166,7 +166,7 @@ baseurl=http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/
 #mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=updates
 gpgcheck=1
 gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7
- 
+
 #additional packages that may be useful
 [extras]
 name=CentOS-$releasever - Extras - mirrors.aliyun.com
@@ -175,7 +175,7 @@ baseurl=http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/
 #mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extras
 gpgcheck=1
 gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7
- 
+
 #additional packages that extend functionality of existing packages
 [centosplus]
 name=CentOS-$releasever - Plus - mirrors.aliyun.com
@@ -185,7 +185,7 @@ baseurl=http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/
 gpgcheck=1
 enabled=0
 gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7
- 
+
 #contrib - packages by Centos Users
 [contrib]
 name=CentOS-$releasever - Contrib - mirrors.aliyun.com
@@ -207,7 +207,7 @@ gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7
 [root@localhost centos7]$cat supervisord.conf
 [unix_http_server]
 file=/tmp/supervisor.sock   ; the path to the socket file
- 
+
 [supervisord]
 logfile=/tmp/supervisord.log ; main log file; default $CWD/supervisord.log
 logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
@@ -217,13 +217,13 @@ pidfile=/tmp/supervisord.pid ; supervisord pidfile; default supervisord.pid
 nodaemon=false               ; start in foreground if true; default false
 minfds=1024                  ; min. avail startup file descriptors; default 1024
 minprocs=200                 ; min. avail process descriptors;default 200
- 
+
 [rpcinterface:supervisor]
 supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface
- 
+
 [supervisorctl]
 serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
- 
+
 [include]
 files = /etc/supervisor/conf.d/*.ini
 ```
@@ -310,10 +310,10 @@ Dockerfile  jdk.tar.gz
 ```sh
 FROM       idocker.io/eryajf/centos:7.4
 MAINTAINER eryajf <Linuxlql@163.com>
- 
+
 # Install jdk
 ADD  jdk.tar.gz   /usr/local/
- 
+
 ENV JAVA_HOME /usr/local/jdk1.8.0_144
 ENV PATH $PATH:$JAVA_HOME/bin
 ```
@@ -376,8 +376,8 @@ Dockerfile  tomcat.ini  tomcat.tar.gz
 [root@localhost tomcat]$cat Dockerfile
 FROM       idocker.io/eryajf/jdk:1.8
 MAINTAINER eryajf <Linuxlql@163.com>
- 
- 
+
+
 # Install jdk
 ADD  tomcat.tar.gz   /usr/local/
 ADD  tomcat.ini /etc/supervisor/conf.d
@@ -456,10 +456,10 @@ Dockerfile  maven.tar.gz  ROOT.war
 [root@localhost jenkins]$cat Dockerfile
 FROM       idocker.io/eryajf/tomcat:8.5
 MAINTAINER eryajf <Linuxlql@163.com>
- 
+
 ADD  maven.tar.gz /usr/local/
 COPY ROOT.war /usr/local/tomcat/webapps/
- 
+
 ENV JAVA_HOME /usr/local/jdk1.8.0_144
 ENV MAVEN_HOME=/usr/local/maven
 ENV JENKINS_HOME=/home/.jenkins_home