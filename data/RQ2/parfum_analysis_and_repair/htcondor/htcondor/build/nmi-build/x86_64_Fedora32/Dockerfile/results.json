{
  "startTime": 1674246038682,
  "endTime": 1674246040308,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 51,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:32\nENV TZ=\"America/Chicago\"\n\n# Use the bash shell for commands\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Add users that might be used in CHTC\n# The HTCondor that runs inside the container needs to have the user defined\nRUN for i in {1..161}; do \\\n        uid=$(($i+5000)); \\\n        useradd --uid  $uid --gid wheel --shell /bin/bash --create-home slot$i; \\\n    done\n\nRUN for i in {1..161}; do \\\n        uid=$(($i+5299)); \\\n        useradd --uid  $uid --gid wheel --shell /bin/bash --create-home slot1_$i; \\\n    done\n\nRUN useradd --uid  6004 --gid wheel --shell /bin/bash --create-home condorauto && \\\n    useradd --uid 22537 --gid wheel --shell /bin/bash --create-home bbockelm && \\\n    useradd --uid 20343 --gid wheel --shell /bin/bash --create-home blin && \\\n    useradd --uid 20003 --gid wheel --shell /bin/bash --create-home cat && \\\n    useradd --uid 20849 --gid wheel --shell /bin/bash --create-home ckoch5 && \\\n    useradd --uid 21640 --gid wheel --shell /bin/bash --create-home coatsworth && \\\n    useradd --uid 20342 --gid wheel --shell /bin/bash --create-home edquist && \\\n    useradd --uid 20006 --gid wheel --shell /bin/bash --create-home gthain && \\\n    useradd --uid 20839 --gid wheel --shell /bin/bash --create-home iaross && \\\n    useradd --uid 21356 --gid wheel --shell /bin/bash --create-home jcpatton && \\\n    useradd --uid 20007 --gid wheel --shell /bin/bash --create-home jfrey && \\\n    useradd --uid 20018 --gid wheel --shell /bin/bash --create-home johnkn && \\\n    useradd --uid 22968 --gid wheel --shell /bin/bash --create-home kcramer && \\\n    useradd --uid 20005 --gid wheel --shell /bin/bash --create-home kupsch && \\\n    useradd --uid 20383 --gid wheel --shell /bin/bash --create-home lmichael && \\\n    useradd --uid 20020 --gid wheel --shell /bin/bash --create-home matyas && \\\n    useradd --uid 10006 --gid wheel --shell /bin/bash --create-home moate && \\\n    useradd --uid 20013 --gid wheel --shell /bin/bash --create-home tannenba && \\\n    useradd --uid 20345 --gid wheel --shell /bin/bash --create-home tim && \\\n    useradd --uid 22109 --gid wheel --shell /bin/bash --create-home tjslauson && \\\n    useradd --uid 20015 --gid wheel --shell /bin/bash --create-home tlmiller && \\\n    useradd --uid 20017 --gid wheel --shell /bin/bash --create-home zmiller\n\n# Provide a condor_config.generic\nRUN mkdir -p /usr/local/condor/etc/examples && \\\n    echo 'use SECURITY : HOST_BASED' > /usr/local/condor/etc/examples/condor_config.generic\n\n# Add tools to add the HTCondor repository\nRUN dnf install -y \\\n    https://research.cs.wisc.edu/htcondor/repo/9.1/htcondor-release-current.fc32.noarch.rpm \\\n    && dnf clean all\n\n# Need HTCondor to build and test HTCondor (BaTLab style)\nRUN dnf install -y \\\n    condor \\\n    java \\\n    openssh-clients \\\n    openssh-server \\\n    'openssl' \\\n    'openssl-devel' \\\n    'perl(Digest::SHA)' \\\n    'perl(Env)' \\\n    'perl(Net::Domain)' \\\n    'perl(Time::HiRes)' \\\n    'perl(XML::Parser)' \\\n    'procps-ng' \\\n    'which' \\\n    && dnf clean all\n\n# Tools needed for building\nRUN dnf install -y \\\n    hostname \\\n    make \\\n    patchelf \\\n    rpm-build \\\n    dnf-utils \\\n    && dnf clean all\n\n# Useful tools for debugging\nRUN dnf install -y \\\n    gdb \\\n    git \\\n    iputils \\\n    less \\\n    nano \\\n    rpmlint \\\n    strace \\\n    sudo \\\n    vim \\\n    && dnf clean all\n\n# Container users can sudo\nRUN echo '%wheel ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/wheel\n\n# HTCondor build dependencies\nRUN dnf install -y \\\n    'bind-utils' \\\n    'bison' \\\n    'bison-devel' \\\n    'boost-devel' \\\n    'boost-python3-devel' \\\n    'byacc' \\\n    'c-ares-devel' \\\n    'cmake' \\\n    'expat-devel' \\\n    'flex' \\\n    'gcc-c++' \\\n    'glibc-static' \\\n    'krb5-devel' \\\n    'libcgroup-devel' \\\n    'libcurl-devel' \\\n    'libtool' \\\n    'libtool-ltdl-devel' \\\n    'libuuid-devel' \\\n    'libvirt-devel' \\\n    'libX11-devel' \\\n    'libxml2-devel' \\\n    'libXScrnSaver-devel' \\\n    'm4' \\\n    'nss-devel' \\\n    'openldap-devel' \\\n    'pam-devel' \\\n    'pcre-devel' \\\n    'pcre2-devel' \\\n    'perl(Archive::Tar)' \\\n    'perl(Data::Dumper)' \\\n    'perl(Digest::MD5)' \\\n    'podman' \\\n    'python3-devel' \\\n    'python3-setuptools' \\\n    'python-devel' \\\n    'python-setuptools' \\\n    'python-sphinx' \\\n    'python-sphinx_rtd_theme' \\\n    'sqlite-devel' \\\n    'systemd-devel' \\\n    && dnf clean all\n\n# blahp build dependencies\nRUN dnf install -y \\\n    'autoconf' \\\n    'automake' \\\n    'docbook-style-xsl' \\\n    'libxslt' \\\n    && dnf clean all\n\n# Additional dependencies for OSG style build\nRUN dnf install -y \\\n    globus-callout-devel \\\n    globus-common-devel \\\n    globus-ftp-client-devel \\\n    globus-ftp-control-devel \\\n    globus-gass-server-ez-devel \\\n    globus-gass-transfer-devel \\\n    globus-gram-client-devel \\\n    globus-gsi-callback-devel \\\n    globus-gsi-cert-utils-devel \\\n    globus-gsi-credential-devel \\\n    globus-gsi-openssl-error-devel \\\n    globus-gsi-proxy-core-devel \\\n    globus-gsi-proxy-ssl-devel \\\n    globus-gsi-sysconfig-devel \\\n    globus-gss-assist-devel \\\n    globus-gssapi-error-devel \\\n    globus-gssapi-gsi-devel \\\n    globus-io-devel \\\n    globus-openssl-module-devel \\\n    globus-rsl-devel \\\n    globus-xio-devel \\\n    munge-devel \\\n    scitokens-cpp-devel \\\n    voms-devel \\\n    && dnf clean all\n\nRUN dnf install -y python3-pip && dnf clean all && pip3 install --no-cache-dir pytest pytest-httpserver\n\n# Enable daily repo to get latest packages for tarballs\nRUN dnf config-manager --set-enabled htcondor-daily && dnf list -y blahp && dnf clean all\n"
}