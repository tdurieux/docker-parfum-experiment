{
  "startTime": 1674216232529,
  "endTime": 1674216233108,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 20,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 34,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "# Alias this container as builder:\nFROM bitwalker/alpine-elixir-phoenix as builder\n\n# Install aws cli and yarn\nRUN apk --no-cache update && \\\n    apk --no-cache add python py-pip py-setuptools ca-certificates groff less && \\\n    pip --no-cache-dir install awscli && \\\n    apk --no-cache add yarn && \\\n    rm -rf /var/cache/apk/*\n\nARG HOST\nARG ERLANG_COOKIE\nARG ROLLBAR_ACCESS_TOKEN\nARG SENDGRID_API_KEY\nARG SUBS_ADMIN_EMAIL\nARG PHOENIX_SECRET_KEY_BASE\nARG SESSION_COOKIE_NAME\nARG SESSION_COOKIE_SIGNING_SALT\nARG SESSION_COOKIE_ENCRYPTION_SALT\nARG GUARDIAN_SECRET_KEY\nARG AWS_ACCESS_KEY_ID\nARG AWS_SECRET_ACCESS_KEY\nARG AWS_DEFAULT_REGION\nARG OPENSUBS_S3_SECRETS_BUCKET\nARG DATABASE_URL\n\nENV MIX_ENV=prod \\\n    SUBS_WEB_KEYKEY=/etc/letsencrypt/live/$HOST/privkey.pem \\\n    SUBS_WEB_CERTFILE=/etc/letsencrypt/live/$HOST/cert.pem \\\n    SUBS_WEB_CACERTFILE=/etc/letsencrypt/live/$HOST/chain.pem \\\n    HOST=$HOST \\\n    ERLANG_COOKIE=$ERLANG_COOKIE \\\n    ROLLBAR_ACCESS_TOKEN=$ROLLBAR_ACCESS_TOKEN \\\n    SENDGRID_API_KEY=$SENDGRID_API_KEY \\\n    SUBS_ADMIN_EMAIL=$SUBS_ADMIN_EMAIL \\\n    PHOENIX_SECRET_KEY_BASE=$PHOENIX_SECRET_KEY_BASE \\\n    SESSION_COOKIE_NAME=$SESSION_COOKIE_NAME \\\n    SESSION_COOKIE_SIGNING_SALT=$SESSION_COOKIE_SIGNING_SALT \\\n    SESSION_COOKIE_ENCRYPTION_SALT=$SESSION_COOKIE_ENCRYPTION_SALT \\\n    GUARDIAN_SECRET_KEY=$GUARDIAN_SECRET_KEY \\\n    AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \\\n    AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \\\n    AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \\\n    OPENSUBS_S3_SECRETS_BUCKET=$OPENSUBS_S3_SECRETS_BUCKET \\\n    DATABASE_URL=$DATABASE_URL\n\nWORKDIR /subs\n\n# Copy ssl files into builder container tmp folder\nRUN mkdir tmp\nRUN aws s3 sync s3://$OPENSUBS_S3_SECRETS_BUCKET/ssl tmp\n\n# Umbrella\nCOPY mix.exs mix.lock ./\nCOPY config config\nCOPY services.json services.json\n\n# Apps\nCOPY apps apps\nRUN mix do deps.get, deps.compile\nRUN cd deps/comeonin && make clean && make\n\n# Build assets in production mode:\nWORKDIR /subs/apps/subs_web/frontend\nRUN yarn install && yarn build && yarn cache clean;\n\nWORKDIR /subs/apps/subs_web\nRUN mix phx.digest\n\nWORKDIR /subs\nCOPY rel rel\n\nRUN mix release --env=prod --verbose\nRUN cp services.json ./rel/releases/subs_web/services.json\n\n### Release\n\nFROM alpine:3.6\n\nARG HOST\n\n# We need bash and openssl for Phoenix\nRUN apk upgrade --no-cache && \\\n    apk add --no-cache bash openssl\n\nENV MIX_ENV=prod \\\n    REPLACE_OS_VARS=true \\\n    SHELL=/bin/bash\n\n# Dir where phoenix is looking for cert files. Default for letsencrypt\nWORKDIR /etc/letsencrypt/live/$HOST\n\nCOPY --from=builder /subs/tmp .\n\nWORKDIR /subs\n\nCOPY --from=builder /subs/rel/releases .\n\nCMD [\"subs_web/bin/subs\", \"foreground\"]\n"
}