{
  "startTime": 1674248339454,
  "endTime": 1674248340691,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt update -y && apt autoremove -y && apt clean -y && apt autoclean -y && apt upgrade -y\nRUN apt install --no-install-recommends -y wget build-essential git nano && rm -rf /var/lib/apt/lists/*;\n\n# The following is done to make sure that tzdata package doesnt prompt for timezone during installation\nARG TZ=\"Europe/Stockholm\"\nRUN DEBIAN_FRONTEND=\"noninteractive\" TZ=$TZ apt-get --no-install-recommends -y install tzdata && rm -rf /var/lib/apt/lists/*;\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone &\n\n#Installing dependencies for sgtsne\nRUN apt install --no-install-recommends -y libmetis-dev libtbb-dev libfftw3-dev lib32gcc-7-dev libflann-dev libcilkrts5 && rm -rf /var/lib/apt/lists/*;\n\n# Installing lastest Miniconda3\nRUN wget -O miniconda_inst \"https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\" && \\\n\tbash miniconda_inst -b && \\\n\trm miniconda_inst\n\n# Exporting PATH and also saving it in bashrc for next session\n# /workspace/bin is so that sgtsne can be found\nRUN echo \"export PATH=$PATH:/root/miniconda3/bin:/workspace/bin\" >> /root/.bashrc\nENV PATH=$PATH:/root/miniconda3/bin:/workspace/bin\n\n# Installing numpy and pybind11 beforehand because sometimes they don't install so well from requirements.txt\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -U numpy pybind11\nRUN pip install --no-cache-dir -U dask<=2021.03.1\n\n# Needed for dask\nRUN conda install -c conda-forge 'fsspec>=0.3.3'\n\n# This for interactive programming purposes\nRUN pip install --no-cache-dir jupyterlab ipython-autotime\n#RUN conda install nodejs\n\n# For compiling docs\nRUN pip install --no-cache-dir Sphinx sphinx-autodoc-typehints nbsphinx sphinx_rtd_theme\n\n# For building vignettes\nRUN conda install -y nodejs\nRUN conda install -y -c conda-forge pandoc\nRUN pip install --no-cache-dir jupytext\nRUN jupyter lab build -y\n\nRUN pip install --no-cache-dir scarf\n\n# Building from Github repo\n#RUN mkdir -p /tmp/scarf\n#COPY . /tmp/scarf/\n#RUN pip install -e /tmp/scarf/\n\nRUN mkdir workspace && \\\n    echo \"jupyter lab --port 9734 --ip=0.0.0.0 --allow-root --no-browser\" > launch_jupyter.sh\n\n# If you want to launch jupyter manually then feel free to comment this out.\nCMD cd workspace && \\\n\tbash ../launch_jupyter.sh\n"
}