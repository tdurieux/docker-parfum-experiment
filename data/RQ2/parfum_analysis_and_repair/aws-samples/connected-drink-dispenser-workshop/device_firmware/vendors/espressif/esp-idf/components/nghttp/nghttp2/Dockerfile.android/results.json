{
  "startTime": 1674217690308,
  "endTime": 1674217692197,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 94,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build nghttp2 android binary\n#\n# $ sudo docker build -t nghttp2-android - < Dockerfile.android\n#\n# After successful build, android binaries are located under\n# /root/build/nghttp2.  You can copy the binary using docker cp.  For\n# example, to copy nghttpx binary to host file system location\n# /path/to/dest, do this:\n#\n# $ sudo docker run -v /path/to/dest:/out nghttp2-android cp /root/build/nghttp2/src/nghttpx /out\n\nFROM ubuntu:vivid\n\nMAINTAINER Tatsuhiro Tsujikawa\n\nENV ANDROID_HOME /root/android\nENV PREFIX $ANDROID_HOME/usr/local\nENV TOOLCHAIN $ANDROID_HOME/toolchain\nENV PATH $TOOLCHAIN/bin:$PATH\n\n# It would be better to use nearest ubuntu archive mirror for faster\n# downloads.\n# RUN sed -ie 's/archive\\.ubuntu/jp.archive.ubuntu/g' /etc/apt/sources.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y make binutils autoconf automake autotools-dev libtool \\\n    pkg-config git curl dpkg-dev libxml2-dev \\\n    genisoimage libc6-i386 lib32stdc++6 && rm -rf /var/lib/apt/lists/*; # genisoimage, libc6-i386 and lib32stdc++6 are required to decompress ndk.\n\n\n\n\nWORKDIR /root/build\nRUN curl -f -L -O http://dl.google.com/android/ndk/android-ndk-r10d-linux-x86_64.bin && \\\n    chmod a+x android-ndk-r10d-linux-x86_64.bin && \\\n    ./android-ndk-r10d-linux-x86_64.bin && \\\n    rm android-ndk-r10d-linux-x86_64.bin\n\nWORKDIR /root/build/android-ndk-r10d\nRUN /bin/bash build/tools/make-standalone-toolchain.sh \\\n    --install-dir=$ANDROID_HOME/toolchain \\\n    --toolchain=arm-linux-androideabi-4.9 --llvm-version=3.5 \\\n    --system=linux-x86_64\n\nWORKDIR /root/build\nRUN git clone https://github.com/tatsuhiro-t/spdylay\nWORKDIR /root/build/spdylay\nRUN autoreconf -i && \\\n    ./configure \\\n    --disable-shared \\\n    --host=arm-linux-androideabi \\\n    --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n    --prefix=$PREFIX \\\n    --without-libxml2 \\\n    --disable-src \\\n    --disable-examples \\\n    CPPFLAGS=\"-I$PREFIX/include\" \\\n    PKG_CONFIG_LIBDIR=\"$PREFIX/lib/pkgconfig\" \\\n    LDFLAGS=\"-L$PREFIX/lib\" && \\\n    make install\n\nWORKDIR /root/build\nRUN curl -f -L -O https://www.openssl.org/source/openssl-1.0.2d.tar.gz && \\\n    tar xf openssl-1.0.2d.tar.gz && \\\n    rm openssl-1.0.2d.tar.gz\n\nWORKDIR /root/build/openssl-1.0.2d\nRUN export CROSS_COMPILE=$TOOLCHAIN/bin/arm-linux-androideabi- && \\\n    ./Configure --prefix=$PREFIX android && \\\n    make && make install_sw\n\nWORKDIR /root/build\nRUN curl -f -L -O http://dist.schmorp.de/libev/libev-4.19.tar.gz && \\\n    curl -f -L -O https://gist.github.com/tatsuhiro-t/48c45f08950f587180ed/raw/80a8f003b5d1091eae497c5995bbaa68096e739b/libev-4.19-android.patch && \\\n    tar xf libev-4.19.tar.gz && \\\n    rm libev-4.19.tar.gz\n\nWORKDIR /root/build/libev-4.19\nRUN patch -p1 < ../libev-4.19-android.patch && \\\n    ./configure \\\n    --host=arm-linux-androideabi \\\n    --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n    --prefix=$PREFIX \\\n    --disable-shared \\\n    --enable-static \\\n    CPPFLAGS=-I$PREFIX/include \\\n    LDFLAGS=-L$PREFIX/lib && \\\n    make install\n\nWORKDIR /root/build\nRUN curl -f -L -O http://zlib.net/zlib-1.2.8.tar.gz && \\\n    tar xf zlib-1.2.8.tar.gz && \\\n    rm zlib-1.2.8.tar.gz\n\nWORKDIR /root/build/zlib-1.2.8\nRUN HOST=arm-linux-androideabi \\\n    CC=$HOST-gcc \\\n    AR=$HOST-ar \\\n    LD=$HOST-ld \\\n    RANLIB=$HOST-ranlib \\\n    STRIP=$HOST-strip \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n\n\n\n    --prefix=$PREFIX \\\n    --libdir=$PREFIX/lib \\\n    --includedir=$PREFIX/include \\\n    --static && \\\n    make install\n\nWORKDIR /root/build\nRUN git clone https://github.com/nghttp2/nghttp2\nWORKDIR /root/build/nghttp2\nRUN autoreconf -i && \\\n    ./configure \\\n    --disable-shared \\\n    --host=arm-linux-androideabi \\\n    --build=`dpkg-architecture -qDEB_BUILD_GNU_TYPE` \\\n    --with-xml-prefix=\"$PREFIX\" \\\n    --without-libxml2 \\\n    --disable-python-bindings \\\n    --disable-examples \\\n    --disable-threads \\\n    LIBSPDYLAY_CFLAGS=-I$PREFIX/usr/local/include \\\n    LIBSPDYLAY_LIBS=\"-L$PREFIX/usr/local/lib -lspdylay\" \\\n    CPPFLAGS=\"-fPIE -I$PREFIX/include\" \\\n    CXXFLAGS=\"-fno-strict-aliasing\" \\\n    PKG_CONFIG_LIBDIR=\"$PREFIX/lib/pkgconfig\" \\\n    LDFLAGS=\"-fPIE -pie -L$PREFIX/lib\" && \\\n    make && \\\n    arm-linux-androideabi-strip src/nghttpx src/nghttpd src/nghttp\n"
}