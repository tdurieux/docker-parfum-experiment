diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/connected-drink-dispenser-workshop/device_firmware/vendors/espressif/esp-idf/components/nghttp/nghttp2/Dockerfile.android b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/connected-drink-dispenser-workshop/device_firmware/vendors/espressif/esp-idf/components/nghttp/nghttp2/Dockerfile.android/repaired.Dockerfile
index 3ea4cf3..183a2a0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/connected-drink-dispenser-workshop/device_firmware/vendors/espressif/esp-idf/components/nghttp/nghttp2/Dockerfile.android
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/connected-drink-dispenser-workshop/device_firmware/vendors/espressif/esp-idf/components/nghttp/nghttp2/Dockerfile.android/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# vim: ft=dockerfile:
 # Dockerfile to build nghttp2 android binary
 #
 # $ sudo docker build -t nghttp2-android - < Dockerfile.android
@@ -23,14 +22,15 @@ ENV PATH $TOOLCHAIN/bin:$PATH
 # downloads.
 # RUN sed -ie 's/archive\.ubuntu/jp.archive.ubuntu/g' /etc/apt/sources.list
 
-RUN apt-get update
-# genisoimage, libc6-i386 and lib32stdc++6 are required to decompress ndk.
-RUN apt-get install -y make binutils autoconf automake autotools-dev libtool \
+RUN apt-get update && apt-get install --no-install-recommends -y make binutils autoconf automake autotools-dev libtool \
     pkg-config git curl dpkg-dev libxml2-dev \
-    genisoimage libc6-i386 lib32stdc++6
+    genisoimage libc6-i386 lib32stdc++6 && rm -rf /var/lib/apt/lists/*; # genisoimage, libc6-i386 and lib32stdc++6 are required to decompress ndk.
+
+
+
 
 WORKDIR /root/build
-RUN curl -L -O http://dl.google.com/android/ndk/android-ndk-r10d-linux-x86_64.bin && \
+RUN curl -f -L -O http://dl.google.com/android/ndk/android-ndk-r10d-linux-x86_64.bin && \
     chmod a+x android-ndk-r10d-linux-x86_64.bin && \
     ./android-ndk-r10d-linux-x86_64.bin && \
     rm android-ndk-r10d-linux-x86_64.bin
@@ -59,7 +59,7 @@ RUN autoreconf -i && \
     make install
 
 WORKDIR /root/build
-RUN curl -L -O https://www.openssl.org/source/openssl-1.0.2d.tar.gz && \
+RUN curl -f -L -O https://www.openssl.org/source/openssl-1.0.2d.tar.gz && \
     tar xf openssl-1.0.2d.tar.gz && \
     rm openssl-1.0.2d.tar.gz
 
@@ -69,8 +69,8 @@ RUN export CROSS_COMPILE=$TOOLCHAIN/bin/arm-linux-androideabi- && \
     make && make install_sw
 
 WORKDIR /root/build
-RUN curl -L -O http://dist.schmorp.de/libev/libev-4.19.tar.gz && \
-    curl -L -O https://gist.github.com/tatsuhiro-t/48c45f08950f587180ed/raw/80a8f003b5d1091eae497c5995bbaa68096e739b/libev-4.19-android.patch && \
+RUN curl -f -L -O http://dist.schmorp.de/libev/libev-4.19.tar.gz && \
+    curl -f -L -O https://gist.github.com/tatsuhiro-t/48c45f08950f587180ed/raw/80a8f003b5d1091eae497c5995bbaa68096e739b/libev-4.19-android.patch && \
     tar xf libev-4.19.tar.gz && \
     rm libev-4.19.tar.gz
 
@@ -87,7 +87,7 @@ RUN patch -p1 < ../libev-4.19-android.patch && \
     make install
 
 WORKDIR /root/build
-RUN curl -L -O http://zlib.net/zlib-1.2.8.tar.gz && \
+RUN curl -f -L -O http://zlib.net/zlib-1.2.8.tar.gz && \
     tar xf zlib-1.2.8.tar.gz && \
     rm zlib-1.2.8.tar.gz
 
@@ -98,7 +98,13 @@ RUN HOST=arm-linux-androideabi \
     LD=$HOST-ld \
     RANLIB=$HOST-ranlib \
     STRIP=$HOST-strip \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
+
+
+
+
     --prefix=$PREFIX \
     --libdir=$PREFIX/lib \
     --includedir=$PREFIX/include \