diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/deep-learning-models/models/nlp/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/deep-learning-models/models/nlp/Dockerfile/repaired.Dockerfile
index 4ee8083..5308c12 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/deep-learning-models/models/nlp/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/deep-learning-models/models/nlp/Dockerfile/repaired.Dockerfile
@@ -43,22 +43,22 @@ RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-
         python${PYTHON_VERSION}-distutils \
         librdmacm1 \
         libibverbs1 \
-        ibverbs-providers
+        ibverbs-providers && rm -rf /var/lib/apt/lists/*;
 
 # Install Python
 RUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python
-RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \
     python get-pip.py && \
     rm get-pip.py
 
 # Install TensorFlow, Keras, PyTorch and MXNet
-RUN pip install future typing
-RUN pip install numpy \
+RUN pip install --no-cache-dir future typing
+RUN pip install --no-cache-dir numpy \
         keras \
         h5py
 
-RUN pip install ${TENSORFLOW_PIP}==${TENSORFLOW_VERSION}
-RUN pip install torch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION}
+RUN pip install --no-cache-dir ${TENSORFLOW_PIP}==${TENSORFLOW_VERSION}
+RUN pip install --no-cache-dir torch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION}
 
 # Install Open MPI
 RUN mkdir /tmp/openmpi && \
@@ -66,11 +66,11 @@ RUN mkdir /tmp/openmpi && \
     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz && \
     tar zxf openmpi-4.0.0.tar.gz && \
     cd openmpi-4.0.0 && \
-    ./configure --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make -j $(nproc) all && \
     make install && \
     ldconfig && \
-    rm -rf /tmp/openmpi
+    rm -rf /tmp/openmpi && rm openmpi-4.0.0.tar.gz
 
 # Install Horovod, no CUDA stubs needed because we set LD_LIBRARY_PATH
 RUN HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_GPU_BROADCAST=NCCL HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 \
@@ -78,7 +78,7 @@ RUN HOROVOD_GPU_ALLREDUCE=NCCL HOROVOD_GPU_BROADCAST=NCCL HOROVOD_WITH_TENSORFLO
 
 # Install OpenSSH for MPI to communicate between containers
 RUN apt-get install -y --no-install-recommends openssh-client openssh-server && \
-    mkdir -p /var/run/sshd
+    mkdir -p /var/run/sshd && rm -rf /var/lib/apt/lists/*;
 
 # Allow OpenSSH to talk to containers without asking for confirmation
 RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
@@ -88,7 +88,7 @@ RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_confi
 # Download examples
 RUN apt-get install -y --no-install-recommends subversion && \
     svn checkout https://github.com/horovod/horovod/trunk/examples && \
-    rm -rf /examples/.svn
+    rm -rf /examples/.svn && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR "/examples"
 
@@ -111,7 +111,7 @@ CMD ["/bin/bash"]
 
 ###### Modifications specifically for SageMaker are below
 # Install SSH on SageMaker machines
-RUN apt-get install -y --no-install-recommends openssh-client openssh-server
+RUN apt-get install -y --no-install-recommends openssh-client openssh-server && rm -rf /var/lib/apt/lists/*;
 RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
 RUN mkdir -p /root/.ssh/ && \
     mkdir -p /var/run/sshd && \