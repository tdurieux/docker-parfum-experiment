diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/containerized-game-servers/supertuxkart/ci/game-server/linux-aarch64/serverfiles/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/containerized-game-servers/supertuxkart/ci/game-server/linux-aarch64/serverfiles/Dockerfile/repaired.Dockerfile
index 6d21a1e..3c48859 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/containerized-game-servers/supertuxkart/ci/game-server/linux-aarch64/serverfiles/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/containerized-game-servers/supertuxkart/ci/game-server/linux-aarch64/serverfiles/Dockerfile/repaired.Dockerfile
@@ -1,30 +1,30 @@
 FROM public.ecr.aws/debian/debian:stable-slim as debian_base
 RUN apt-get update -y
-RUN apt-get install build-essential cmake libbluetooth-dev libsdl2-dev \
+RUN apt-get install --no-install-recommends build-essential cmake libbluetooth-dev libsdl2-dev \
 libcurl4-openssl-dev libenet-dev libfreetype6-dev libharfbuzz-dev \
 libjpeg-dev libogg-dev libopenal-dev libpng-dev \
-libssl-dev libvorbis-dev libmbedtls-dev pkg-config zlib1g-dev git sqlite3 subversion -y
-RUN apt install -y python3-pip
-RUN pip install pyenet
-RUN apt install -y curl vim unzip jq
+libssl-dev libvorbis-dev libmbedtls-dev pkg-config zlib1g-dev git sqlite3 subversion -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir pyenet
+RUN apt install --no-install-recommends -y curl vim unzip jq && rm -rf /var/lib/apt/lists/*;
 
 #Install aws cli
 #RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
-RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "awscliv2.zip"
+RUN curl -f "https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip" -o "awscliv2.zip"
 RUN unzip awscliv2.zip
 RUN ./aws/install
 RUN mkdir /root/.aws
 COPY config /root/.aws
 
 # Install and configure psql
-RUN DEBIAN_FRONTEND=noninteractive apt-get install --fix-missing -y postgresql
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --fix-missing -y postgresql && rm -rf /var/lib/apt/lists/*;
 
 #Install kubectl for the simulator pod scaler
-RUN apt-get install -y apt-transport-https ca-certificates
+RUN apt-get install --no-install-recommends -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*;
 RUN curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
 RUN echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list
 RUN apt-get update
-RUN apt-get install -y kubectl
+RUN apt-get install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;
 RUN kubectl version --client
 
 FROM debian_base AS build_art
@@ -32,7 +32,7 @@ RUN svn co https://svn.code.sf.net/p/supertuxkart/code/stk-assets stk-assets
 
 FROM debian_base AS build_code
 COPY --from=1 /stk-assets /stk-assets
-RUN apt-get install git -y
+RUN apt-get install --no-install-recommends git -y && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://github.com/yahavb/stk-code stk-code
 #RUN git clone https://github.com/supertuxkart/stk-code stk-code
 RUN cd stk-code