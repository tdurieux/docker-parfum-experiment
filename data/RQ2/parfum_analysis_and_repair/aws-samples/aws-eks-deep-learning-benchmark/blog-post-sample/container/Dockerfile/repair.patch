diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/aws-eks-deep-learning-benchmark/blog-post-sample/container/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/aws-eks-deep-learning-benchmark/blog-post-sample/container/Dockerfile/repaired.Dockerfile
index 84eb511..d9f5af6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/aws-eks-deep-learning-benchmark/blog-post-sample/container/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/aws-eks-deep-learning-benchmark/blog-post-sample/container/Dockerfile/repaired.Dockerfile
@@ -23,16 +23,16 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
         libjpeg-dev \
         libpng-dev \
         python${PYTHON_VERSION} \
-        python${PYTHON_VERSION}-dev
+        python${PYTHON_VERSION}-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python
 
-RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \
     python get-pip.py && \
     rm get-pip.py
 
 # Install TensorFlow, Keras
-RUN pip install tensorflow-gpu==${TENSORFLOW_VERSION} keras h5py
+RUN pip install --no-cache-dir tensorflow-gpu==${TENSORFLOW_VERSION} keras h5py
 
 # Install Open MPI 4.0.0
 RUN mkdir /tmp/openmpi && \
@@ -40,11 +40,11 @@ RUN mkdir /tmp/openmpi && \
     wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.0.tar.gz && \
     tar zxf openmpi-4.0.0.tar.gz && \
     cd openmpi-4.0.0 && \
-    ./configure --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make -j $(nproc) all && \
     make install && \
     ldconfig && \
-    rm -rf /tmp/openmpi
+    rm -rf /tmp/openmpi && rm openmpi-4.0.0.tar.gz
 
 # Install Horovod, temporarily using CUDA stubs
 # /usr/local/cuda links to /usr/local/cuda-10.0
@@ -69,7 +69,7 @@ RUN echo NCCL_DEBUG=INFO >> /etc/nccl.conf
 
 # Install OpenSSH for MPI to communicate between containers
 RUN apt-get install -y --no-install-recommends openssh-client openssh-server && \
-    mkdir -p /var/run/sshd
+    mkdir -p /var/run/sshd && rm -rf /var/lib/apt/lists/*;
 
 # Allow OpenSSH to talk to containers without asking for confirmation
 RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
@@ -88,4 +88,3 @@ CMD mpirun \
     --fp16 \
     --lr_decay_mode=poly \
     --synthetic
-    
\ No newline at end of file