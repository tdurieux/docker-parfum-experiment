diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/aws-nitro-enclaves-workshop/resources/code/getting-started/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/aws-nitro-enclaves-workshop/resources/code/getting-started/Dockerfile/repaired.Dockerfile
index 6163907..7230a66 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/aws-nitro-enclaves-workshop/resources/code/getting-started/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/aws-nitro-enclaves-workshop/resources/code/getting-started/Dockerfile/repaired.Dockerfile
@@ -6,14 +6,14 @@ FROM public.ecr.aws/amazonlinux/amazonlinux:2 as builder
 
 RUN yum upgrade -y
 RUN amazon-linux-extras enable epel
-RUN yum clean -y metadata && yum install -y epel-release
-RUN yum install -y cmake3 gcc git tar make
+RUN yum clean -y metadata && yum install -y epel-release && rm -rf /var/cache/yum
+RUN yum install -y cmake3 gcc git tar make && rm -rf /var/cache/yum
 RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain 1.55
 
-RUN yum install -y gcc-c++
-RUN yum install -y go
-RUN yum install -y ninja-build
-RUN yum install -y quilt
+RUN yum install -y gcc-c++ && rm -rf /var/cache/yum
+RUN yum install -y go && rm -rf /var/cache/yum
+RUN yum install -y ninja-build && rm -rf /var/cache/yum
+RUN yum install -y quilt && rm -rf /var/cache/yum
 
 # We keep the build artifacts in the -build directory
 WORKDIR /tmp/crt-builder
@@ -66,7 +66,7 @@ RUN source $HOME/.cargo/env && cd aws-nitro-enclaves-nsm-api && cargo build --re
 RUN mv aws-nitro-enclaves-nsm-api/target/release/libnsm.so /usr/lib64
 RUN mv aws-nitro-enclaves-nsm-api/target/release/nsm.h /usr/include
 
-RUN yum install -y doxygen
+RUN yum install -y doxygen && rm -rf /var/cache/yum
 RUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja \
 	-S aws-nitro-enclaves-sdk-c -B aws-nitro-enclaves-sdk-c/build
 RUN cmake3 --build aws-nitro-enclaves-sdk-c/build --target install