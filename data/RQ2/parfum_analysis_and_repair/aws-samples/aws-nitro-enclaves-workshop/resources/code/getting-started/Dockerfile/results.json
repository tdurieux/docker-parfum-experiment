{
  "startTime": 1674252513044,
  "endTime": 1674252513892,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 29,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n# // SPDX-License-Identifier: MIT-0\n\n## build kms-enclave-cli from this docker file https://github.com/aws/aws-nitro-enclaves-sdk-c/blob/main/containers/Dockerfile.al2\nFROM public.ecr.aws/amazonlinux/amazonlinux:2 as builder\n\nRUN yum upgrade -y\nRUN amazon-linux-extras enable epel\nRUN yum clean -y metadata && yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y cmake3 gcc git tar make && rm -rf /var/cache/yum\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal --default-toolchain 1.55\n\nRUN yum install -y gcc-c++ && rm -rf /var/cache/yum\nRUN yum install -y go && rm -rf /var/cache/yum\nRUN yum install -y ninja-build && rm -rf /var/cache/yum\nRUN yum install -y quilt && rm -rf /var/cache/yum\n\n# We keep the build artifacts in the -build directory\nWORKDIR /tmp/crt-builder\n\nRUN git clone --depth 1 -b v0.2.1  https://github.com/aws/aws-nitro-enclaves-sdk-c\n\nRUN git clone -b v1.0.2 https://github.com/awslabs/aws-lc.git aws-lc #\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-lc -B aws-lc/build .\nRUN go env -w GOPROXY=direct\nRUN cmake3 --build aws-lc/build --target install\n\nRUN git clone -b v1.3.11 https://github.com/aws/s2n-tls.git\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -S s2n-tls -B s2n-tls/build\nRUN cmake3 --build s2n-tls/build --target install\n\nRUN git clone -b v0.6.20 https://github.com/awslabs/aws-c-common.git\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-common -B aws-c-common/build\nRUN cmake3 --build aws-c-common/build --target install\n\nRUN git clone -b v0.1.2 https://github.com/awslabs/aws-c-sdkutils.git\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-sdkutils -B aws-c-sdkutils/build\nRUN cmake3 --build aws-c-sdkutils/build --target install\n\nRUN git clone -b v0.5.17 https://github.com/awslabs/aws-c-cal.git\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-cal -B aws-c-cal/build\nRUN cmake3 --build aws-c-cal/build --target install\n\nRUN git clone -b v0.10.21 https://github.com/awslabs/aws-c-io.git\nRUN cmake3 -DUSE_VSOCK=1 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-io -B aws-c-io/build\nRUN cmake3 --build aws-c-io/build --target install\n\nRUN git clone -b v0.2.14 http://github.com/awslabs/aws-c-compression.git\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-compression -B aws-c-compression/build\nRUN cmake3 --build aws-c-compression/build --target install\n\nRUN git clone -b v0.6.13 https://github.com/awslabs/aws-c-http.git\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-http -B aws-c-http/build\nRUN cmake3 --build aws-c-http/build --target install\n\nRUN git clone -b v0.6.11 https://github.com/awslabs/aws-c-auth.git\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja -S aws-c-auth -B aws-c-auth/build\nRUN cmake3 --build aws-c-auth/build --target install\n\nRUN git clone -b json-c-0.16-20220414 https://github.com/json-c/json-c.git\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -DBUILD_SHARED_LIBS=OFF -GNinja -S json-c -B json-c/build\nRUN cmake3 --build json-c/build --target install\n\nRUN git clone -b v0.1.0 https://github.com/aws/aws-nitro-enclaves-nsm-api.git\nRUN source $HOME/.cargo/env && cd aws-nitro-enclaves-nsm-api && cargo build --release -p nsm-lib\nRUN mv aws-nitro-enclaves-nsm-api/target/release/libnsm.so /usr/lib64\nRUN mv aws-nitro-enclaves-nsm-api/target/release/nsm.h /usr/include\n\nRUN yum install -y doxygen && rm -rf /var/cache/yum\nRUN cmake3 -DCMAKE_PREFIX_PATH=/usr -DCMAKE_INSTALL_PREFIX=/usr -GNinja \\\n\t-S aws-nitro-enclaves-sdk-c -B aws-nitro-enclaves-sdk-c/build\nRUN cmake3 --build aws-nitro-enclaves-sdk-c/build --target install\nRUN cmake3 --build aws-nitro-enclaves-sdk-c/build --target docs\n\n# Create a workshop base image with libnsm.so and kmstool_enclave_cli\nFROM public.ecr.aws/amazonlinux/amazonlinux:2 as enclave_base\nWORKDIR /app\nCOPY --from=builder /usr/lib64/libnsm.so /usr/lib64/libnsm.so /app/\nCOPY --from=builder /usr/bin/kmstool_enclave_cli /app/\n"
}