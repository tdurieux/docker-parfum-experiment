{
  "startTime": 1674252769309,
  "endTime": 1674252769811,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the same base image as the AWS SAM CLI to build the deployment package\nFROM lambci/lambda-base-2:build\n# Use the same python and pip install strategy as the lambci python3.8 Dockerfile\nENV PATH=/var/lang/bin:$PATH \\\n    LD_LIBRARY_PATH=/var/lang/lib:$LD_LIBRARY_PATH \\\n    AWS_EXECUTION_ENV=AWS_Lambda_python3.8 \\\n    PYTHONPATH=/var/runtime \\\n    PKG_CONFIG_PATH=/var/lang/lib/pkgconfig:/usr/lib64/pkgconfig:/usr/share/pkgconfig\nRUN rm -rf /var/runtime /var/lang /var/rapid && \\\n  curl -f https://lambci.s3.amazonaws.com/fs/python3.8.tgz | tar -zx -C /\nRUN pip install -U pip setuptools --no-cache-dir\n# Copy our code over to the container\nRUN mkdir /tmp/build\nADD lambda_function.py /tmp/build/lambda_function.py\nADD requirements.txt /tmp/requirements.txt\n# Build the deployment package\nRUN pip install --no-cache-dir -r /tmp/requirements.txt -t /tmp/build\nRUN ls -l /tmp/build\n# Create a zip file of the deployment package\nWORKDIR /tmp/build\nRUN zip -r -J ../kibana_lambda.zip *\n"
}