diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/aws-panorama-samples/samples/mot_analysis/mot_analysis_app/packages/123456789012-MOT_ANALYSIS_CODE-1.0/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/aws-panorama-samples/samples/mot_analysis/mot_analysis_app/packages/123456789012-MOT_ANALYSIS_CODE-1.0/Dockerfile/repaired.Dockerfile
index d37361e..2c6c3de 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aws-samples/aws-panorama-samples/samples/mot_analysis/mot_analysis_app/packages/123456789012-MOT_ANALYSIS_CODE-1.0/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aws-samples/aws-panorama-samples/samples/mot_analysis/mot_analysis_app/packages/123456789012-MOT_ANALYSIS_CODE-1.0/Dockerfile/repaired.Dockerfile
@@ -2,10 +2,10 @@ FROM public.ecr.aws/panorama/panorama-application:1.1.0-arm64v8
 
 #compile opencv for gstreamer activation
 RUN apt-get update -y
-RUN pip3 install numpy --upgrade --ignore-installed
-RUN apt-get install -y wget build-essential cmake git pkg-config libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev
-RUN apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
-RUN apt-get install -y libpython3.7-dev
+RUN pip3 install --no-cache-dir numpy --upgrade --ignore-installed
+RUN apt-get install --no-install-recommends -y wget build-essential cmake git pkg-config libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libpython3.7-dev && rm -rf /var/lib/apt/lists/*;
 
 #install opencv
 ENV VERSION=4.5.5
@@ -15,23 +15,23 @@ RUN cd opencv/build && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX
 RUN rm -rf /opencv
 
 #install gstreamer plugins
-RUN apt-get install -y gstreamer1.0-tools gstreamer1.0-plugins-good gstreamer1.0-plugins-bad-videoparsers gstreamer1.0-plugins-ugly
+RUN apt-get install --no-install-recommends -y gstreamer1.0-tools gstreamer1.0-plugins-good gstreamer1.0-plugins-bad-videoparsers gstreamer1.0-plugins-ugly && rm -rf /var/lib/apt/lists/*;
 
 #install kvssink
 RUN git clone https://github.com/awslabs/amazon-kinesis-video-streams-producer-sdk-cpp.git
 RUN mkdir -p amazon-kinesis-video-streams-producer-sdk-cpp/build && cd amazon-kinesis-video-streams-producer-sdk-cpp/build && cmake -DBUILD_GSTREAMER_PLUGIN=TRUE -DBUILD_TEST=FALSE .. && make && make install && ldconfig
 
 #add env
-RUN rm -rf 
+RUN rm -rf
 ENV LD_LIBRARY_PATH "$LD_LIBRARY_PATH:/amazon-kinesis-video-streams-producer-sdk-cpp/open-source/local/lib"
 ENV GST_PLUGIN_PATH "$GST_PLUGIN_PATH:/usr/local/lib/gstreamer-1.0/:/amazon-kinesis-video-streams-producer-sdk-cpp/build"
 
 #Copy app finally
-RUN pip3 install boto3
-RUN pip3 install torch==1.8.1 torchvision==0.9.1
-RUN pip3 install lap
-RUN pip3 install cython
-RUN pip3 install cython-bbox
-RUN pip3 install scipy
+RUN pip3 install --no-cache-dir boto3
+RUN pip3 install --no-cache-dir torch==1.8.1 torchvision==0.9.1
+RUN pip3 install --no-cache-dir lap
+RUN pip3 install --no-cache-dir cython
+RUN pip3 install --no-cache-dir cython-bbox
+RUN pip3 install --no-cache-dir scipy
 COPY kvs_log_configuration /amazon-kinesis-video-streams-producer-sdk-cpp
 COPY src /panorama
\ No newline at end of file