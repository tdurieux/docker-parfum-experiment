{
  "startTime": 1674251189972,
  "endTime": 1674251191278,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 173,
        "lineEnd": 173,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile fetches the image tagged latest by default\n# To use a specific version of the image, refer to https://gallery.ecr.aws/panorama/panorama-application\n# and tag the image in the Dockerfile with the version you're planning to use.\n\n\n\nFROM public.ecr.aws/panorama/panorama-application\n\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    gnupg2 \\\n    ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nCOPY jetson-ota-public.key /etc/jetson-ota-public.key\nRUN apt-key add /etc/jetson-ota-public.key\n\nARG CUDA=10.2\nARG RELEASE=r32.4\n\nRUN echo \"deb https://repo.download.nvidia.com/jetson/common $RELEASE main\" >> /etc/apt/sources.list\nRUN echo \"deb https://repo.download.nvidia.com/jetson/t194 $RELEASE main\" >> /etc/apt/sources.list\n\n\n#\n# install prerequisites - https://docs.nvidia.com/deeplearning/frameworks/install-tf-jetson-platform/index.html#prereqs\n#\nRUN apt-get update && \\\n apt-get install -y --no-install-recommends \\\n       python3-dev \\\n       python3.7-dev \\\n       libpython3.7-dev \\\n       python3-pip \\\n       gfortran \\\n       build-essential \\\n       liblapack-dev \\\n       libblas-dev \\\n       libhdf5-serial-dev \\\n       hdf5-tools \\\n       libhdf5-dev \\\n       zlib1g-dev \\\n       zip \\\n       libjpeg8-dev && rm -rf /var/lib/apt/lists/*;\n\n#RUN mkdir -p /usr/lib/python3.7/lib-dynload\n#RUN cp /usr/lib/python3.7/lib-dynload/panoramasdk.so /usr/lib/python3.7/lib-dynload/panoramasdk.so\n\n#\n# Install Cuda, cuDNN, TensorRT\n#\nRUN CUDAPKG=$(echo $CUDA | sed 's/\\./-/'); \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n\tcuda-libraries-$CUDAPKG \\\n\tcuda-nvtx-$CUDAPKG \\\n\tcuda-libraries-dev-$CUDAPKG \\\n\tcuda-minimal-build-$CUDAPKG \\\n\tcuda-license-$CUDAPKG \\\n\tcuda-command-line-tools-$CUDAPKG \\\n    libcudnn8 \\\n    tensorrt \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get clean\n\n#Remove static libraries to save space\nRUN rm -rf /usr/local/cuda-$CUDA/targets/aarch64-linux/lib/*.a\nRUN rm -rf /usr/local/cuda-$CUDA/lib64/*.a\nRUN rm -rf /usr/lib/aarch64-linux-gnu/libnvinfer_static.a\nRUN rm -rf /usr/lib/aarch64-linux-gnu/libnvinfer_plugin_static.a\n\nENV LIBRARY_PATH /usr/local/cuda/lib64/stubs\n\nRUN echo \"/usr/lib/aarch64-linux-gnu/tegra\" >> /etc/ld.so.conf.d/nvidia-tegra.conf && \\\n    echo \"/usr/lib/aarch64-linux-gnu/tegra-egl\" >> /etc/ld.so.conf.d/nvidia-tegra.conf\n\n#RUN rm /usr/share/glvnd/egl_vendor.d/50_mesa.json\nRUN mkdir -p /usr/share/glvnd/egl_vendor.d/ && echo '\\\n{\\\n    \"file_format_version\" : \"1.0.0\",\\\n    \"ICD\" : {\\\n        \"library_path\" : \"libEGL_nvidia.so.0\"\\\n    }\\\n}' > /usr/share/glvnd/egl_vendor.d/10_nvidia.json\n\nRUN mkdir -p /usr/share/egl/egl_external_platform.d/ && echo '\\\n{\\\n    \"file_format_version\" : \"1.0.0\",\\\n    \"ICD\" : {\\\n        \"library_path\" : \"libnvidia-egl-wayland.so.1\"\\\n    }\\\n}' > /usr/share/egl/egl_external_platform.d/nvidia_wayland.json\n\nRUN echo \"/usr/local/cuda-10.2/targets/aarch64-linux/lib\" >> /etc/ld.so.conf.d/nvidia.conf\n\nRUN ln -s /usr/local/cuda-$CUDA /usr/local/cuda && \\\n    ln -s /usr/local/cuda-$CUDA/targets/aarch64-linux/include /usr/local/cuda/include && \\\n    ln -s /usr/local/cuda-$CUDA/targets/aarch64-linux/lib /usr/local/cuda/lib64\n\nENV PATH /usr/local/cuda-$CUDA/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/cuda-$CUDA/targets/aarch64-linux/lib:${LD_LIBRARY_PATH}\n\nENV DEBIAN_FRONTEND=noninteractive\nARG HDF5_DIR=\"/usr/lib/aarch64-linux-gnu/hdf5/serial/\"\nARG MAKEFLAGS=-j$(nproc)\n\nRUN printenv\n\n#\n# Install tensorflow dependencies\n#\nRUN python3.7 -m pip install --no-cache-dir setuptools Cython wheel\nRUN python3.7 -m pip install --no-cache-dir --verbose numpy\nRUN python3.7 -m pip install --no-cache-dir --verbose h5py==2.10.0\nRUN python3.7 -m pip install --no-cache-dir --verbose future==0.18.2 mock==3.0.5 h5py==2.10.0 keras_preprocessing==1.1.1 keras_applications==1.0.8 gast==0.2.2 futures protobuf==3.20.1 pybind11\n\n#\n# TensorFlow 2.4. See build instructions for building tensorflow wheel here: https://apivovarov.medium.com/run-tensorflow-2-object-detection-models-with-tensorrt-on-jetson-xavier-using-tf-c-api-e34548818ac6\n#\nCOPY tensorflow-2.4.4-cp37-cp37m-linux_aarch64.whl .\nARG TENSORFLOW_WHL=tensorflow-2.4.4-cp37-cp37m-linux_aarch64.whl\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends wget && rm -rf /var/lib/apt/lists/*;\n\nRUN python3.7 -m pip install --pre --verbose ${TENSORFLOW_WHL} && \\\n    rm ${TENSORFLOW_WHL}\n\n#\n# PyCUDA\n#\nENV PATH=\"/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\"\nRUN echo \"$PATH\" && echo \"$LD_LIBRARY_PATH\"\n\nRUN python3.7 -m pip install --no-cache-dir --verbose pycuda six\nRUN pip3 install --no-cache-dir --upgrade numpy\n#\n# Run ld config\n#\nRUN ldconfig\n\n#\n# Set environment variables\n# Note: These environment variables don't get persisted for runtime.\n#\n#ENV NVIDIA_VISIBLE_DEVICES all\n#ENV NVIDIA_DRIVER_CAPABILITIES all\n\n#CMD [ \"/bin/bash\" ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRUN apt-get update && apt-get install --no-install-recommends -y libglib2.0-0 && rm -rf /var/lib/apt/lists/*;\nRUN python3.7 -m pip install opencv-python boto3\nRUN python3.7 -m pip install matplotlib\n\n\n\n\nRUN apt-get install --no-install-recommends gcc --yes && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends python3.7-dev --yes && rm -rf /var/lib/apt/lists/*;\nRUN pip3.7 install jupyterlab\n\n\n\n\n\nCOPY src /panorama\n\n\n"
}