{
  "startTime": 1674215427164,
  "endTime": 1674215428469,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 68,
        "columnEnd": 93
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This will pip install glow and build a virtualenv tar.gz\nFROM python:3.7.9-buster AS python_build\n\nENV VIRTUAL_ENV=/opt/venv\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\nRUN pip install --no-cache-dir \\\n    glow.py==1.1.2 \\\n    venv-pack==0.2.0\n\nRUN mkdir /output && venv-pack -o /output/pyspark_glow.tar.gz\n\n\n# This will clone the same version of glow and build an uberjar\nFROM mozilla/sbt:8u292_1.5.7 AS jar_build\n\n# We need conda for Glow build\nRUN curl -f https://repo.anaconda.com/pkgs/misc/gpgkeys/anaconda.asc | gpg --batch --dearmor > conda.gpg && \\\n    install -o root -g root -m 644 conda.gpg /usr/share/keyrings/conda-archive-keyring.gpg && \\\n    gpg --batch --keyring /usr/share/keyrings/conda-archive-keyring.gpg --no-default-keyring --fingerprint 34161F5BF5EB1D4BFBBB8F0A8AEB4F8B29D82806 && \\\n    echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/conda-archive-keyring.gpg] https://repo.anaconda.com/pkgs/misc/debrepo/conda stable main\" > /etc/apt/sources.list.d/conda.list\n\nRUN apt update && \\\n    apt install --no-install-recommends -y \\\n    conda && rm -rf /var/lib/apt/lists/*;\n\n# Set up conda and change the shell to bash\nRUN echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc\nSHELL [\"/bin/bash\", \"-c\"]\n\nWORKDIR /build\n\n# Normally I would just download the release archive, but sbt core/assembly requires the git info\nRUN git clone https://github.com/projectglow/glow.git && \\\n    cd glow && \\\n    git checkout v1.1.2\n\nWORKDIR /build/glow\n\nRUN source ~/.bashrc && conda env create -f python/environment.yml && \\\n    conda activate glow && \\\n    sbt core/assembly\n\n\n# Finally, copy both the main artifacts to a scratch image that we can export\nFROM scratch AS export\nCOPY --from=python_build /output/pyspark_glow.tar.gz /\nCOPY --from=jar_build /build/glow/core/target/scala-2.12/glow-spark3-assembly-1.1.2-SNAPSHOT.jar /"
}