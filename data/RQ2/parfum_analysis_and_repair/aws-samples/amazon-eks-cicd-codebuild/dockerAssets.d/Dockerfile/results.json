{
  "startTime": 1674254226140,
  "endTime": 1674254226828,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM public.ecr.aws/amazonlinux/amazonlinux:latest\n\n\nENV KUBECONFIG /home/kubectl/.kube/kubeconfig\nENV HOME /home/kubectl\n# ENV KUBECONFIG /root/.kube/kubeconfig\n\nARG KUBECTL_VERSION=1.18.8/2020-09-18\n\nRUN yum install -y unzip jq && \\\n\tamazon-linux-extras install docker && rm -rf /var/cache/yum\n\n# install aws-cli v2\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && \\\n\tunzip awscliv2.zip && \\\n\t./aws/install\n\n\n# RUN \\\n# \tmkdir /root/bin /aws; \\\n# \tapk -Uuv add groff less bash python py-pip jq curl docker && \\\n# \tpip install --upgrade pip; \\\n# \tpip install awscli && \\\n# \tapk --purge -v del py-pip && \\\n# \trm /var/cache/apk/* && \\\n# \t# Create non-root user (with a randomly chosen UID/GUI).\n# \tadduser kubectl -Du 5566\n\n# ADD https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl /usr/local/bin/kubectl\n# #COPY kubectl /usr/local/bin/kubectl\n\n# install kubectl\nRUN curl -f -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \\\n\tchmod +x kubectl && \\\n\tmv kubectl /usr/local/bin/kubectl\n\nWORKDIR $HOME\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\nRUN chmod a+x /usr/local/bin/kubectl /usr/local/bin/entrypoint.sh\n\n\n# USER kubectl\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}