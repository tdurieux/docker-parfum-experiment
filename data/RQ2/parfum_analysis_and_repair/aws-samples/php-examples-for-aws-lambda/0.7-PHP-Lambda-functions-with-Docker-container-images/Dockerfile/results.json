{
  "startTime": 1674249826635,
  "endTime": 1674249827122,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 153
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Lambda base image Amazon linux\nFROM public.ecr.aws/lambda/provided as builder\n# Set desired PHP Version\nARG php_version=\"7.3.6\"\nRUN yum clean all && \\\n    yum install -y autoconf \\\n                bison \\\n                bzip2-devel \\\n                gcc \\\n                gcc-c++ \\\n                git \\\n                gzip \\\n                libcurl-devel \\\n                libxml2-devel \\\n                make \\\n                openssl-devel \\\n                tar \\\n                unzip \\\n                zip && rm -rf /var/cache/yum\n\n# Download the PHP source, compile, and install both PHP and Composer\nRUN curl -f -sL https://github.com/php/php-src/archive/php-${php_version}.tar.gz | tar -xvz && \\\n    cd php-src-php-${php_version} && \\\n    ./buildconf --force && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/php-7-bin/ --with-openssl --with-curl --with-zlib --without-pear --enable-bcmath --with-bz2 --enable-mbstring --with-mysqli && \\\n    make -j 5 && \\\n    make install && \\\n    /opt/php-7-bin/bin/php -v && \\\n    curl -f -sS https://getcomposer.org/installer | /opt/php-7-bin/bin/php -- --install-dir=/opt/php-7-bin/bin/ --filename=composer\n\n# Prepare runtime files\n# RUN mkdir -p /lambda-php-runtime/bin && \\\n    # cp /opt/php-7-bin/bin/php /lambda-php-runtime/bin/php\nCOPY runtime/bootstrap /lambda-php-runtime/\nRUN chmod 0755 /lambda-php-runtime/bootstrap\n\n# Install Guzzle, prepare vendor files\nRUN mkdir /lambda-php-vendor && \\\n    cd /lambda-php-vendor && \\\n    /opt/php-7-bin/bin/php /opt/php-7-bin/bin/composer require guzzlehttp/guzzle\n\n\n###### Create runtime image ######\nFROM public.ecr.aws/lambda/provided as runtime\n# Layer 1: PHP Binaries\nCOPY --from=builder /opt/php-7-bin /var/lang\n# Layer 2: Runtime Interface Client\nCOPY --from=builder /lambda-php-runtime /var/runtime\n# Layer 3: Vendor\nCOPY --from=builder /lambda-php-vendor/vendor /opt/vendor\n\nCOPY src/ /var/task/\n\nCMD [ \"index\" ]\n"
}