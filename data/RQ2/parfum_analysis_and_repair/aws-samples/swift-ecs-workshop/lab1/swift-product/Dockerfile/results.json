{
  "startTime": 1674255085818,
  "endTime": 1674255086908,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 55,
        "columnEnd": 69
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 171
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nENV SWIFT_BRANCH swift-3.0-release\nARG SWIFT_VERSION\nENV SWIFT_VERSION ${SWIFT_VERSION}\nENV SWIFT_PLATFORM ubuntu14.04\n\n# Install related packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential wget libmysqlclient-dev libcurl4-openssl-dev clang libedit-dev python2.7 python2.7-dev libicu-dev binutils rsync libxml2 git awscli && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install Swift keys\nRUN wget -q -O - https://swift.org/keys/all-keys.asc | gpg --batch --import - && \\\n    gpg --batch --keyserver hkp://ha.pool.sks-keyservers.net --refresh-keys Swift\n\n# Install Swift Ubuntu 14.04 Snapshot\nRUN SWIFT_ARCHIVE_NAME=swift-$SWIFT_VERSION-$SWIFT_PLATFORM && \\\n    SWIFT_URL=https://swift.org/builds/$SWIFT_BRANCH/$(echo \"$SWIFT_PLATFORM\" | tr -d .)/swift-$SWIFT_VERSION/$SWIFT_ARCHIVE_NAME.tar.gz && \\\n    wget -q $SWIFT_URL && \\\n    wget -q $SWIFT_URL.sig && \\\n    gpg --batch --verify $SWIFT_ARCHIVE_NAME.tar.gz.sig && \\\n    tar -xzf $SWIFT_ARCHIVE_NAME.tar.gz --directory / --strip-components=1 && \\\n    rm -rf $SWIFT_ARCHIVE_NAME* /tmp/* /var/tmp/* && rm $SWIFT_ARCHIVE_NAME.tar.gz\n\n# Set Swift Path\nENV PATH /usr/bin:$PATH\n\n# vapor specific part\n\n# fix for /usr/lib/swift/CoreFoundation not being world readable in 05-09 (and possible others)\nRUN chmod -R o+r /usr/lib/swift/CoreFoundation\n\n# set up user\nENV USERNAME vapor\nRUN adduser --disabled-password ${USERNAME}\n\nWORKDIR /vapor\nRUN chown -R ${USERNAME}:${USERNAME} /vapor\n\n# Specify repository and revision via --build-args\n# e.g. --build-arg REPO=vapor-example --build-arg REVISION=b389e2a\n# REVISION can be a tag or branch\n#ARG REPO_CLONE_URL\n#ENV REPO_CLONE_URL ${REPO_CLONE_URL}\n\n#RUN echo ${REPO_CLONE_URL}\nUSER ${USERNAME}\n#RUN git clone ${REPO_CLONE_URL}\n#WORKDIR /vapor/swift-product\n#ADD . /vapor/swift-product\n#RUN cd /vapor/swift-product\nADD . /vapor\nRUN swift build -Xswiftc -DNOJSON\n\nEXPOSE 8080\n\nCMD .build/debug/App\n"
}