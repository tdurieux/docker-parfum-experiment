{
  "startTime": 1674255042358,
  "endTime": 1674255043969,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM wordpress:latest\n\nRUN apt-get update && apt-get install -y\n\nRUN apt-get -y --no-install-recommends install vim && rm -rf /var/lib/apt/lists/*;\n\n# Install wp-cli\nRUN curl -f -o /bin/wp-cli.phar https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nRUN chmod +x /bin/wp-cli.phar\nRUN cd /bin && mv wp-cli.phar wp\n\n# Install Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# Install and configure xDebug\nRUN yes | pecl install xdebug \\\n    && echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" > /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.remote_autostart=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.profiler_enable=1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.profiler_output_name=cachegrind.out.%t\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.profiler_output_dir=/tmp\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && echo \"xdebug.mode=coverage\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n    && rm -rf /usr/local/etc/php/conf.d/opcache-recommended.ini\n\n# PHP ini changes\nRUN cp /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini && \\\n    sed -i -e \"s/^ *memory_limit.*/memory_limit = 128M/g\" /usr/local/etc/php/php.ini\n"
}