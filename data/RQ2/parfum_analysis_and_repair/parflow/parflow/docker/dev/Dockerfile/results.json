{
  "startTime": 1674248713344,
  "endTime": 1674248714387,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 94,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 113,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -----------------------------------------------------------------------------\n# Dockerfile for building ParFlow image on Ubuntu\n# -----------------------------------------------------------------------------\n# Build options (* = default)\n#\n#  BASE_IMAGE\n#       ubuntu:18.04\n#    *  ubuntu:20.04\n#\n#  CMAKE_URL\n#    *  https://cmake.org/files/v3.18/cmake-3.18.2-Linux-x86_64.tar.gz\n#\n#  HDF5_URL\n#    *  https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.0/src/hdf5-1.12.0.tar.gz\n#\n#  NETCDF_URL\n#    *  https://github.com/Unidata/netcdf-c/archive/v4.7.4.tar.gz\n#\n#  SILO_URL\n#    *  https://wci.llnl.gov/sites/wci/files/2021-01/silo-4.10.2.tgz\n#\n#  HYPRE_VERSION\n#    *  v2.19.0\n#       master\n#\n# -----------------------------------------------------------------------------\n\nARG BASE_IMAGE=ubuntu:20.04\nFROM ${BASE_IMAGE}\n\n# Non interactive mode\nENV DEBIAN_FRONTEND noninteractive\n\n# Fetch the latest definitions of packages\nRUN apt-get update && \\\n    ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime && \\\n    apt-get install --no-install-recommends -y tzdata && \\\n    dpkg-reconfigure --frontend noninteractive tzdata && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        curl \\\n        libcurl4 \\\n        git \\\n        vim \\\n        gfortran \\\n        libopenblas-dev \\\n        liblapack-dev \\\n        openssh-client \\\n        openssh-server \\\n        openmpi-bin \\\n        libopenmpi-dev \\\n        python3 \\\n        python3-pip \\\n        python3-venv \\\n        tcl-dev \\\n        tk-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd -g 1000 ubuntu && \\\n    useradd -u 1000 -g ubuntu -m -N -s /bin/bash ubuntu\n\nUSER ubuntu\nWORKDIR /home/ubuntu/\nENV BASE_PATH /home/ubuntu/\n\nRUN mkdir -p                              \\\n    $BASE_PATH/parflow/build               \\\n    $BASE_PATH/parflow/dependencies/cmake   \\\n    $BASE_PATH/parflow/dependencies/silo-src \\\n    $BASE_PATH/parflow/dependencies/hdf5-src  \\\n    $BASE_PATH/parflow/dependencies/hypre-src  \\\n    $BASE_PATH/parflow/dependencies/netcdf-src\n\n# -----------------------------------------------------------------------------\n# Setup CMake 3.18.2\n# -----------------------------------------------------------------------------\n\nARG CMAKE_URL=https://cmake.org/files/v3.18/cmake-3.18.2-Linux-x86_64.tar.gz\n\nRUN cd $BASE_PATH/parflow/dependencies/cmake && \\\n    curl -f -L $CMAKE_URL | tar --strip-components=1 -xzv\n\nENV CMAKE $BASE_PATH/parflow/dependencies/cmake/bin/cmake\nENV CTEST $BASE_PATH/parflow/dependencies/cmake/bin/ctest\n\n# -----------------------------------------------------------------------------\n# Install HDF5\n# -----------------------------------------------------------------------------\n\nARG HDF5_URL=https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.0/src/hdf5-1.12.0.tar.gz\n\nENV HDF5_DIR /opt/hdf5\n\nWORKDIR $BASE_PATH/parflow/dependencies/hdf5-src\nRUN curl -f -L $HDF5_URL | tar --strip-components=1 -xzv && \\\n    CC=mpicc ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n      --prefix=$HDF5_DIR \\\n      --enable-parallel && \\\n    make\n\nUSER root\nRUN make install\nUSER ubuntu\n\n# -----------------------------------------------------------------------------\n# Install NetCDF\n# -----------------------------------------------------------------------------\n\nARG NETCDF_URL=https://github.com/Unidata/netcdf-c/archive/v4.7.4.tar.gz\n\nENV NETCDF_DIR /opt/netcdf\n\nWORKDIR $BASE_PATH/parflow/dependencies/netcdf-src\nRUN curl -f -L $NETCDF_URL | tar --strip-components=1 -xzv && \\\n    CC=mpicc CPPFLAGS=-I$HDF5_DIR/include LDFLAGS=-L$HDF5_DIR/lib \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --disable-shared --disable-dap --prefix=${NETCDF_DIR} && \\\n    make\n\nUSER root\nRUN make install\nUSER ubuntu\n\n# -----------------------------------------------------------------------------\n# Install SILO\n# -----------------------------------------------------------------------------\n\nARG SILO_URL=https://wci.llnl.gov/sites/wci/files/2021-01/silo-4.10.2.tgz\n\nENV SILO_DIR /opt/silo\n\nWORKDIR $BASE_PATH/parflow/dependencies/silo-src\nRUN curl -f -L $SILO_URL | tar --strip-components=1 -xzv && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$SILO_DIR --disable-silex --disable-hzip --disable-fpzip && \\\n    make\n\nUSER root\nRUN make install\nUSER ubuntu\n\n# -----------------------------------------------------------------------------\n# Install Hypre\n# -----------------------------------------------------------------------------\n\nARG HYPRE_VERSION=v2.19.0\n\nENV HYPRE_DIR /opt/hypre\n\nWORKDIR $BASE_PATH/parflow/dependencies/hypre-src\nRUN git clone https://github.com/hypre-space/hypre.git --single-branch --branch $HYPRE_VERSION\n\nWORKDIR $BASE_PATH/parflow/dependencies/hypre-src/hypre/src\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HYPRE_DIR --with-MPI\n\nUSER root\nRUN make install\nUSER ubuntu\n\n# -----------------------------------------------------------------------------\n# Install Parflow\n# -----------------------------------------------------------------------------\n\nCOPY --chown=ubuntu:ubuntu . $BASE_PATH/parflow/src\nRUN pip3 install --no-cache-dir -r $BASE_PATH/parflow/src/pftools/python/requirements_all.txt\n\n# ARG PARFLOW_VERSION=master\n# ARG PARFLOW_GIT_URL=\n# RUN git clone                           \\\n#     --recursive --single-branch          \\\n#     --branch $PARFLOW_VERSION             \\\n#     $PARFLOW_GIT_URL                       \\\n#     $BASE_PATH/parflow/src\n\nRUN $CMAKE                     \\\n    -S $BASE_PATH/parflow/src   \\\n    -B $BASE_PATH/parflow/build  \\\n    -D CMAKE_BUILD_TYPE=Release   \\\n    -D HDF5_ROOT=$HDF5_DIR         \\\n    -D PARFLOW_ENABLE_HDF5=TRUE     \\\n    -D HYPRE_ROOT=$HYPRE_DIR         \\\n    -D PARFLOW_ENABLE_HYPRE=TRUE      \\\n    -D PARFLOW_ENABLE_SILO=TRUE        \\\n    -D SILO_ROOT=$SILO_DIR              \\\n    -D PARFLOW_HAVE_CLM=TRUE             \\\n    -D PARFLOW_ENABLE_PYTHON=TRUE         \\\n    -D PARFLOW_ENABLE_TIMING=TRUE          \\\n    -D PARFLOW_AMPS_LAYER=mpi1              \\\n    -D PARFLOW_AMPS_SEQUENTIAL_IO=TRUE       \\\n    -D PARFLOW_ENABLE_NETCDF=TRUE             \\\n    -D NETCDF_DIR=$NETCDF_DIR                  \\\n    -D CURL_LIBRARY=/usr/lib/x86_64-linux-gnu/libcurl.so.4\n\nRUN $CMAKE --build $BASE_PATH/parflow/build\n\nUSER root\nRUN $CMAKE --install $BASE_PATH/parflow/build --prefix /opt/parflow\nUSER ubuntu\n\nENV PARFLOW_DIR /opt/parflow/\nWORKDIR /opt/parflow/\n"
}