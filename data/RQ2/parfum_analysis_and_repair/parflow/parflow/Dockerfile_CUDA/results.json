{
  "startTime": 1674249629407,
  "endTime": 1674249630655,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 3,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Dockerfile for ParFlow GPU version\n\n### IMPORTANT NOTES FOR GPU CONTAINER USAGE ###\n# Prerequisites:\n#  -NVIDIA drivers, GPU with CUDA compute capability >=6.0, and \"nvidia-container-toolkit\" package\n#  -The container must be created with \"--gpus all\" flag, ie, \"docker run -it --gpus all image_hash\"\n\n#-----------------------------------------------------------------------------\n# Start by building the basic CUDA container\n#-----------------------------------------------------------------------------\nFROM nvidia/cuda:10.2-devel-ubuntu18.04\nMAINTAINER Jaro Hokkanen <j.hokkanen@fz-juelich.de>\n\n#-----------------------------------------------------------------------------\n# Set environment vars\n#-----------------------------------------------------------------------------\nENV DEBIAN_FRONTEND noninteractive\nENV CMAKE_DIR /home/parflow/cmake-3.14.0-Linux-x86_64\nENV CUDA_HOME /usr/local/cuda\nENV PARFLOW_DIR /usr/local\nENV LD_LIBRARY_PATH $PARFLOW_DIR/openmpi-cuda/lib:$LD_LIBRARY_PATH\nENV PATH $CMAKE_DIR/bin:$PARFLOW_DIR/openmpi-cuda/bin:$PARFLOW_DIR/bin:$PATH\n\n#-----------------------------------------------------------------------------\n#  Package dependencies\n#-----------------------------------------------------------------------------\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    autoconf \\\n    automake \\\n    curl \\\n    gcc \\\n    g++ \\\n    gfortran \\\n    git \\\n    hdf5-helpers \\\n    libhdf5-openmpi-100 \\\n    libhdf5-openmpi-dev \\\n    libtool \\\n    m4 \\\n    make \\\n    tcl-dev \\\n    tk-dev \\\n    wget && mkdir -p /home/parflow && rm -rf /var/lib/apt/lists/*;\n\n#-----------------------------------------------------------------------------\n# Install CMake\n#-----------------------------------------------------------------------------\nWORKDIR /home/parflow\nRUN wget -nv --no-check-certificate https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.tar.gz && \\\n    tar -xvf cmake-3.14.0-Linux-x86_64.tar.gz && \\\n    rm -fr cmake-3.14.0-Linux-x86_64.tar.gz\n\n#-----------------------------------------------------------------------------\n# Install UCX and OpenMPI\n#-----------------------------------------------------------------------------\nWORKDIR /home/parflow\nRUN wget https://github.com/openucx/ucx/releases/download/v1.8.0-rc1/ucx-1.8.0.tar.gz && \\\n    tar -xvf ucx-1.8.0.tar.gz && \\\n    cd ucx-1.8.0 && \\\n    ./contrib/configure-release --prefix=$PARFLOW_DIR/ucx-cuda --with-cuda=$CUDA_HOME --with-java=no --disable-numa && \\\n    make -j8 install && \\\n    cd .. && \\\n    rm -fr ucx-1.8.0 ucx-1.8.0.tar.gz\n\nWORKDIR /home/parflow\nRUN wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.3.tar.gz && \\\n    tar -xvf openmpi-4.0.3.tar.gz && \\\n    cd openmpi-4.0.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PARFLOW_DIR/openmpi-cuda --with-cuda=$CUDA_HOME --with-ucx=$PARFLOW_DIR/ucx-cuda && \\\n    make -j8 install && \\\n    ldconfig && \\\n    cd .. && \\\n    rm -fr openmpi-4.0.3 openmpi-4.0.3.tar.gz\n\n#-----------------------------------------------------------------------------\n# Build libraries\n#-----------------------------------------------------------------------------\n\n#\n# SILO\n#\nWORKDIR /home/parflow\nRUN curl -f \"https://wci.llnl.gov/sites/wci/files/2021-01/silo-4.10.2.tgz\" -o \"silo-4.10.2.tar.gz\" && \\\n    tar -xf silo-4.10.2.tar.gz && \\\n    cd silo-4.10.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PARFLOW_DIR --disable-silex --disable-hzip --disable-fpzip && \\\n    make install && \\\n    cd .. && \\\n    rm -fr silo-4.10.2 silo-4.10.2.tar.gz\n\n#\n# Hypre\n#\nWORKDIR /home/parflow\nRUN wget -q https://github.com/hypre-space/hypre/archive/v2.18.2.tar.gz && \\\n   tar -xvf v2.18.2.tar.gz && \\\n   cd hypre-2.18.2/src && \\\n   ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PARFLOW_DIR && \\\n   make install && \\\n   cd ../.. && \\\n   rm -fr hypre-2.18.2 v2.18.2.tar.gz\n\n#\n# RMM\n#\nWORKDIR /home/parflow\nRUN git clone -b branch-0.10 --single-branch --recurse-submodules https://github.com/rapidsai/rmm.git && \\\n    cd rmm && \\\n    cmake . -DCMAKE_INSTALL_PREFIX=$PARFLOW_DIR && \\\n    make -j && \\\n    make install && \\\n    cd .. && \\\n    rm -fr rmm\n\n#-----------------------------------------------------------------------------\n# Parflow configure and build\n#-----------------------------------------------------------------------------\nENV UCX_MEMTYPE_CACHE n\nENV OMPI_ALLOW_RUN_AS_ROOT 1\nENV OMPI_ALLOW_RUN_AS_ROOT_CONFIRM 1\nENV OMPI_MCA_rmaps_base_oversubscribe 1\n\nWORKDIR /home/parflow\n\nRUN git clone -b master --single-branch https://github.com/parflow/parflow.git parflow\nRUN mkdir -p build && \\\n    cd build && \\\n    CC=mpicc CXX=mpicxx FC=mpif90 && \\\n    cmake ../parflow \\\n       -DCMAKE_C_FLAGS=-lcuda \\\n       -DPARFLOW_AMPS_LAYER=mpi1 \\\n       -DPARFLOW_AMPS_SEQUENTIAL_IO=TRUE \\\n       -DHYPRE_ROOT=$PARFLOW_DIR \\\n       -DSILO_ROOT=$PARFLOW_DIR \\\n       -DPARFLOW_ENABLE_HDF5=TRUE \\\n       -DPARFLOW_ENABLE_TIMING=TRUE \\\n       -DPARFLOW_HAVE_CLM=TRUE \\\n       -DCMAKE_INSTALL_PREFIX=$PARFLOW_DIR \\\n       -DPARFLOW_ACCELERATOR_BACKEND=cuda \\\n       -DRMM_ROOT=$PARFLOW_DIR && \\\n     make install\n\nRUN cd .. && \\\n    rm -fr parflow build\n\nWORKDIR /data\n\nENTRYPOINT [\"tclsh\"]\n"
}