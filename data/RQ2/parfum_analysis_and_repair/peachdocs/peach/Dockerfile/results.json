{
  "startTime": 1674254738022,
  "endTime": 1674254738887,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine3.15 AS binarybuilder\nRUN apk --no-cache --no-progress add --virtual \\\n    build-deps \\\n    build-base \\\n    git\n\n# Install Task\nRUN wget --quiet https://github.com/go-task/task/releases/download/v3.12.0/task_linux_amd64.tar.gz -O task_linux_amd64.tar.gz \\\n  && sh -c 'echo \"803d3c1752da31486cbfb4ddf7d8ba5e0fa8c8ebba8acf227a9cd76ff9901343  task_linux_amd64.tar.gz\" | sha256sum -c' \\\n  && tar -xzf task_linux_amd64.tar.gz \\\n  && mv task /usr/local/bin/task && rm task_linux_amd64.tar.gz\n\nWORKDIR /dist\nCOPY . .\nRUN task build\n\nFROM alpine:3.15\nRUN echo https://dl-cdn.alpinelinux.org/alpine/edge/community/ >> /etc/apk/repositories \\\n  && apk --no-cache --no-progress add \\\n  ca-certificates \\\n  git\n\n# Install gosu\nRUN export url=\"https://github.com/tianon/gosu/releases/download/1.14/gosu-\"; \\\n  if [ `uname -m` == \"aarch64\" ]; then \\\n       wget --quiet ${url}arm64 -O /usr/sbin/gosu \\\n    && sh -c 'echo \"73244a858f5514a927a0f2510d533b4b57169b64d2aa3f9d98d92a7a7df80cea  /usr/sbin/gosu\" | sha256sum -c'; \\\n  elif [ `uname -m` == \"armv7l\" ]; then \\\n       wget --quiet ${url}armhf -O /usr/sbin/gosu \\\n    && sh -c 'echo \"abb1489357358b443789571d52b5410258ddaca525ee7ac3ba0dd91d34484589  /usr/sbin/gosu\" | sha256sum -c'; \\\n  else \\\n       wget --quiet ${url}amd64 -O /usr/sbin/gosu \\\n    && sh -c 'echo \"bd8be776e97ec2b911190a82d9ab3fa6c013ae6d3121eea3d0bfd5c82a0eaf8c  /usr/sbin/gosu\" | sha256sum -c'; \\\n  fi \\\n  && chmod +x /usr/sbin/gosu\n\nWORKDIR /app/asouldocs/\nCOPY --from=binarybuilder /dist/asouldocs .\n\nVOLUME [\"/app/asouldocs/custom\"]\nEXPOSE 5555\nCMD [\"/app/asouldocs/asouldocs\", \"web\"]\n"
}