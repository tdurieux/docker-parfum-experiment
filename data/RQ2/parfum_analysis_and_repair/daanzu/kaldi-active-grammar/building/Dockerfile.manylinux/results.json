{
  "startTime": 1674251399214,
  "endTime": 1674251400030,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 21,
        "columnEnd": 8
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux2010_x86_64\n\nLABEL description=\"A docker image for building portable Python linux binary wheels with Kaldi for kaldi-active-grammar\"\nLABEL maintainer=\"daanzu@gmail.com\"\n\nRUN yum -y update && yum -y install \\\n    wget \\\n    && yum clean all && rm -rf /var/cache/yum\n# Kaldi default suggested dependencies: zlib-devel wget sox subversion python27 python34 centos-release-scl\n\nRUN cd /opt \\\n    && wget --no-verbose https://registrationcenter-download.intel.com/akdlm/irc_nas/tec/16533/l_mkl_2020.1.217.tgz \\\n    && tar zxf l_mkl_2020.1.217.tgz \\\n    && cd l_mkl_2020.1.217 \\\n    && sed -i.bak -e 's/ACCEPT_EULA=decline/ACCEPT_EULA=accept/g' -e 's/ARCH_SELECTED=ALL/ARCH_SELECTED=INTEL64/g' silent.cfg \\\n    && ./install.sh --silent silent.cfg \\\n    && cd .. \\\n    && rm -rf l_mkl_2020.1.217* && rm l_mkl_2020.1.217.tgz\n\nARG NCPU=10\nARG KFAG_BRANCH=master\n\nRUN cd /opt \\\n    && export OPENFST_CONFIGURE=\"--enable-static --enable-shared --enable-far --enable-ngram-fsts --enable-lookahead-fsts --with-pic\" \\\n    && git clone --depth 1 --branch ${KFAG_BRANCH} https://github.com/daanzu/kaldi-fork-active-grammar kaldi \\\n    && cd kaldi/tools \\\n    && sed -i 's/status=0/exit 0/g' extras/check_dependencies.sh \\\n    && make -j ${NCPU} openfst \\\n    && cd ../src \\\n    && export CXXFLAGS=\"-O2\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --shared --static-math --mathlib=MKL --mkl-root=/opt/intel/mkl/ --use-cuda=no \\\n    && make -j ${NCPU} depend \\\n    && make -j ${NCPU} dragonfly dragonflybin bin fstbin lmbin \\\n    && cat kaldi.mk \\\n    && find /opt/kaldi -name \"*.o\" -exec rm {} \\; \\\n    && find /opt/kaldi -name \"*.so\" | xargs strip\n\n# OPENFST_CONFIGURE=--disable-bin\n\n# RUN cd /opt \\\n#     && git clone --depth 1 --branch ${KAG_BRANCH} https://github.com/daanzu/kaldi-active-grammar kaldi-active-grammar \\\n#     && cd kaldi-active-grammar \\\n#     && mkdir -p kaldi_active_grammar/exec/linux \\\n#     && cp ../kaldi/tools/openfst/bin/{fstarcsort,fstcompile,fstinfo} ../kaldi/src/fstbin/fstaddselfloops ../kaldi/src/dragonfly/libkaldi-dragonfly.so ../kaldi/src/dragonflybin/compile-graph-agf kaldi_active_grammar/exec/linux \\\n#     && find kaldi_active_grammar/exec/linux/ -type f | xargs strip \\\n#     && env KALDIAG_SETUP_RAW=1 python3 setup.py bdist_wheel \\\n#     && for whl in dist/*.whl; do auditwheel repair \"\" --plat ${WHEEL_PLAT} -w /io/wheelhouse/; done \\\n"
}