{
  "startTime": 1674249742997,
  "endTime": 1674249744490,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 139
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# builder\nFROM            golang:1.17-alpine as builder\nRUN             apk --no-cache --update add npm make gcc g++ musl-dev openssl-dev git perl-utils curl\nWORKDIR         /go/src/pathwar.land\nENV             GO111MODULE=on GOPROXY=https://proxy.golang.org,direct\nCOPY            go.mod go.sum ./\nRUN             go mod download\nCOPY            . .\nWORKDIR         ./go\nRUN             make install\n\n# runtime\nFROM devago/docker-compose\nENV GLIBC_VERSION 2.34-r0\nRUN apk add --update curl && \\\n    curl -f -Lo /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    curl -f -Lo glibc.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-${GLIBC_VERSION}.apk\" && \\\n    curl -f -Lo glibc-bin.apk \"https://github.com/sgerrand/alpine-pkg-glibc/releases/download/${GLIBC_VERSION}/glibc-bin-${GLIBC_VERSION}.apk\" && \\\n    apk add --force glibc-bin.apk glibc.apk && \\\n    /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib && \\\n    echo 'hosts: files mdns4_minimal [NOTFOUND=return] dns mdns4' >> /etc/nsswitch.conf && \\\n    apk del curl && \\\n    rm -rf glibc.apk glibc-bin.apk /var/cache/apk/*\nCOPY --from=builder /go/bin/pathwar /bin/\nENTRYPOINT [\"/bin/pathwar\"]\n"
}