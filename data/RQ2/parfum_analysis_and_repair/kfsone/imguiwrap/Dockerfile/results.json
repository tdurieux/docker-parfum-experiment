{
  "startTime": 1674254272288,
  "endTime": 1674254273143,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 1,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 20,
        "columnStart": 1,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for building imguiwrap in a Linux environment. See also\n# docker-build.sh\n\nFROM ubuntu:latest AS base-os\n\n# If you have a local cache or proxy for apt packages; see apt-cacher-ng.\n# e.g: APT_CACHE=http://apt-cache.local:3142/\nARG APT_CACHE\n\nRUN \\\n\tif [ -z \"${APT_CACHE}\"; then echo \"Acquire::http::Proxy \\\"${APT_CACHE}\\\";\" >/etc/apt/apt.conf.d/02proxy; fi; \\\n\techo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections ; \\\n\tmkdir /src\n\nRUN apt update && \\\n\tapt install --no-install-recommends -qy --upgrade apt-transport-https apt-utils && \\\n\tapt upgrade -qy && \\\n\tapt install --no-install-recommends -qy --upgrade \\\n        build-essential \\\n        cmake ninja-build cmake-doc \\\n\t\tclang-11 clang-tidy-11 clang-format-11 && \\\n\tapt autoremove -qy && apt clean auto && rm -rf /var/lib/apt/lists/*\n\nFROM base-os AS imgui-packages\n\nRUN apt update && \\\n\tapt install --no-install-recommends -qy \\\n\t\tlibx11-dev \\\n\t\tlibsdl2-dev \\\n\t\tlibglfw3-dev && \\\n\tapt autoremove -qy && apt clean auto && rm -rf /var/lib/apt/lists/*\n\nFROM imgui-packages\n\n# Mount this folder as /src, e.g.\n# docker --rm -it -v ${pwd}:/src kfsone/imguibuild\nVOLUME /src\n\nENTRYPOINT [\"/src/docker-build.sh\"]\n"
}