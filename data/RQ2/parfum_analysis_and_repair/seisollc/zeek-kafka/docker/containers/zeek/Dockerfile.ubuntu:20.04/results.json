{
  "startTime": 1674218240014,
  "endTime": 1674218241202,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "#\n#  Copyright 2020-2022 Zeek-Kafka\n#  Copyright 2015-2020 The Apache Software Foundation\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n#\nFROM ubuntu:20.04\n\nARG ZEEK_VERSION\nARG LIBRDKAFKA_VERSION\n\n# copy in the .screenrc\nCOPY .screenrc /root\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    bc \\\n    bison \\\n    bsdmainutils \\\n    cmake \\\n    curl \\\n    flex \\\n    g++ \\\n    gcc \\\n    git \\\n    jq \\\n    lcov \\\n    libkrb5-dev \\\n    libmaxminddb-dev \\\n    libpcap-dev \\\n    libssl-dev \\\n    make \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    ruby \\\n    screen \\\n    sqlite3 \\\n    swig \\\n    tree \\\n    unzip \\\n    vim \\\n    wget \\\n    zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir junit2html\nRUN gem install coveralls-lcov\n\n# install zeek (and zkg by default, as of 4.0.0)\nWORKDIR /root\nRUN git clone https://github.com/zeek/zeek\nWORKDIR zeek/\nRUN git checkout \"v${ZEEK_VERSION}\" \\\n && git submodule update --init --recursive \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make -j $(nproc --all || echo 1) \\\n && make install \\\n && ldconfig\nENV PATH=\"${PATH}:/usr/local/zeek/bin\"\nENV PATH=\"${PATH}:/usr/bin\"\n\n# install pip3 and zkg dependencies\nWORKDIR /root\nCOPY requirements.txt requirements.txt\nRUN apt-get -y --no-install-recommends install diffutils \\\n                       python3-pip \\\n && apt-get clean all \\\n && python3 -m pip install --upgrade pip \\\n && python3 -m pip install -r requirements.txt && rm -rf /var/lib/apt/lists/*;\n\n# install librdkafka\nWORKDIR /root\nRUN curl -f -L \"https://github.com/edenhill/librdkafka/archive/v${LIBRDKAFKA_VERSION}.tar.gz\" | tar xvz\nWORKDIR \"librdkafka-${LIBRDKAFKA_VERSION}/\"\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-sasl --install-deps \\\n && make -j $(nproc --all || echo 1) \\\n && make install \\\n && ldconfig\n"
}