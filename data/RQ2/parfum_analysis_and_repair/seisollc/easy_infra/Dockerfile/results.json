{
  "startTime": 1674253376366,
  "endTime": 1674253377816,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 186
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 188,
        "lineEnd": 188,
        "columnStart": 4,
        "columnEnd": 176
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 195,
        "lineEnd": 195,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 65,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FROM_IMAGE=ubuntu\nARG FROM_IMAGE_TAG=20.04\n\nFROM \"${FROM_IMAGE}\":\"${FROM_IMAGE_TAG}\" AS minimal\n\n# minimal setup\nARG FLUENT_BIT_VERSION\nENV FLUENT_BIT_VERSION=\"${FLUENT_BIT_VERSION}\"\nARG CONSUL_TEMPLATE_VERSION\nENV CONSUL_TEMPLATE_VERSION=\"${CONSUL_TEMPLATE_VERSION}\"\nARG ENVCONSUL_VERSION\nENV ENVCONSUL_VERSION=\"${ENVCONSUL_VERSION}\"\nARG ANSIBLE_VERSION\nENV ANSIBLE_VERSION=\"${ANSIBLE_VERSION}\"\nARG TERRAFORM_VERSION\nENV TERRAFORM_VERSION=\"${TERRAFORM_VERSION}\"\nARG TERRATAG_VERSION\nENV TERRATAG_VERSION=\"${TERRATAG_VERSION}\"\nARG TFENV_VERSION\nENV TFENV_VERSION=\"${TFENV_VERSION}\"\nARG CHECKOV_VERSION\nENV CHECKOV_VERSION=\"${CHECKOV_VERSION}\"\nENV SKIP_CHECKOV=\"false\"\nARG KICS_VERSION\nENV KICS_VERSION=\"${KICS_VERSION}\"\nENV SKIP_KICS=\"false\"\nENV KICS_INCLUDE_QUERIES_PATH=\"/home/easy_infra/.kics/assets/queries\"\nENV KICS_LIBRARY_PATH=\"/home/easy_infra/.kics/assets/libraries\"\nENV KICS_JSON_REPORT_PATH=\"/tmp/reports/kics\"\nENV AUTODETECT=\"false\"\nENV DISABLE_HOOKS=\"false\"\nENV PATH=\"/home/easy_infra/.local/bin:${PATH}\"\nARG DEBIAN_FRONTEND=\"noninteractive\"\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n# hadolint ignore=DL3003,DL3008,DL3013,SC1091\nRUN groupadd --gid 53150 -r easy_infra \\\n && useradd -r -g easy_infra -s \"$(which bash)\" --create-home --uid 53150 easy_infra \\\n && apt-get update \\\n && apt-get -y install --no-install-recommends ansible=${ANSIBLE_VERSION} \\\n                                               bsdmainutils \\\n                                               ca-certificates \\\n                                               curl \\\n                                               gettext \\\n                                               git \\\n                                               groff \\\n                                               jq \\\n                                               less \\\n                                               nodejs \\\n                                               python3 \\\n                                               python3-pip \\\n                                               time \\\n                                               tini \\\n                                               unzip \\\n && apt-get -y upgrade \\\n && python3 -m pip install --upgrade --no-cache-dir pip \\\n && su - easy_infra -c \"pip install --user --no-cache-dir checkov==${CHECKOV_VERSION}\" \\\n && echo \"export PATH=/home/easy_infra/.local/bin:${PATH}\" >> /home/easy_infra/.bashrc \\\n && curl -f -L https://github.com/checkmarx/kics/releases/download/${KICS_VERSION}/kics_${KICS_VERSION#v}_linux_x64.tar.gz -o /usr/local/bin/kics.tar.gz \\\n && tar -xvf /usr/local/bin/kics.tar.gz -C /usr/local/bin/ kics \\\n && rm -f /usr/local/bin/kics.tar.gz \\\n && chmod 0755 /usr/local/bin/kics \\\n && chown root: /usr/local/bin/kics \\\n && su easy_infra -c \"git clone https://github.com/checkmarx/kics.git /home/easy_infra/.kics --depth 1 --branch ${KICS_VERSION}\" \\\n && rm -rf /home/easy_infra/.kics/.git \\\n && curl -f -L https://github.com/env0/terratag/releases/download/${TERRATAG_VERSION}/terratag_${TERRATAG_VERSION#v}_linux_amd64.tar.gz -o /usr/local/bin/terratag.tar.gz \\\n && tar -xvf /usr/local/bin/terratag.tar.gz -C /usr/local/bin/ terratag \\\n && rm -f /usr/local/bin/terratag.tar.gz \\\n && chmod 0755 /usr/local/bin/terratag \\\n && chown root: /usr/local/bin/terratag \\\n && su easy_infra -c \"git clone https://github.com/tfutils/tfenv.git /home/easy_infra/.tfenv --depth 1 --branch ${TFENV_VERSION}\" \\\n && rm -rf /home/easy_infra/.tfenv/.git \\\n && su easy_infra -c \"mkdir -p /home/easy_infra/.local/bin/\" \\\n && ln -s /home/easy_infra/.tfenv/bin/* /home/easy_infra/.local/bin \\\n && su easy_infra -c \"mkdir -p /home/easy_infra/.terraform.d/plugin-cache\" \\\n && su - easy_infra -c \"tfenv install ${TERRAFORM_VERSION}\" \\\n && su - easy_infra -c \"tfenv use ${TERRAFORM_VERSION}\" \\\n && su - easy_infra -c \"terraform -install-autocomplete\" \\\n && curl -f -L https://releases.hashicorp.com/consul-template/${CONSUL_TEMPLATE_VERSION#v}/consul-template_${CONSUL_TEMPLATE_VERSION#v}_linux_amd64.zip -o /usr/local/bin/consul-template.zip \\\n && unzip /usr/local/bin/consul-template.zip -d /usr/local/bin/ \\\n && rm -f /usr/local/bin/consul-template.zip \\\n && chmod 0755 /usr/local/bin/consul-template \\\n && curl -f -L https://releases.hashicorp.com/envconsul/${ENVCONSUL_VERSION#v}/envconsul_${ENVCONSUL_VERSION#v}_linux_amd64.zip -o /usr/local/bin/envconsul.zip \\\n && unzip /usr/local/bin/envconsul.zip -d /usr/local/bin/ \\\n && rm -f /usr/local/bin/envconsul.zip \\\n && chmod 0755 /usr/local/bin/envconsul \\\n && apt-get install -y --no-install-recommends cmake build-essential flex bison \\\n && git clone https://github.com/fluent/fluent-bit --depth 1 --branch ${FLUENT_BIT_VERSION} \\\n && cd fluent-bit/build \\\n && cmake ../ && make && make install \\\n && cd ../.. \\\n && rm -rf fluent-bit \\\n && apt-get remove -y cmake build-essential flex bison \\\n && echo \"source /functions\" >> /home/easy_infra/.bashrc \\\n && su easy_infra -c \"mkdir /home/easy_infra/.ansible\" \\\n && apt-get clean autoclean \\\n && apt-get -y autoremove \\\n && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/log/* /var/cache/debconf/*-old \\\n && touch /var/log/easy_infra.log /var/log/fluent-bit.log \\\n && chown easy_infra: /var/log/easy_infra.log /var/log/fluent-bit.log\nUSER easy_infra\n\nCOPY --chown=easy_infra:easy_infra functions /functions\nCOPY --chown=easy_infra:easy_infra .terraformrc /home/easy_infra/\nCOPY --chown=easy_infra:easy_infra docker-entrypoint.sh /usr/local/bin/\nCOPY --chown=easy_infra:easy_infra common.sh /usr/local/bin/\nCOPY --chown=easy_infra:easy_infra hooks /opt/hooks/bin/\nCOPY --chown=easy_infra:easy_infra fluent-bit.conf /usr/local/etc/fluent-bit/fluent-bit.conf\nCOPY --chown=easy_infra:easy_infra fluent-bit.inputs.conf /usr/local/etc/fluent-bit/fluent-bit.inputs.conf\nCOPY --chown=easy_infra:easy_infra fluent-bit.outputs.conf /usr/local/etc/fluent-bit/fluent-bit.outputs.conf\n\nENV BASH_ENV=/functions\nWORKDIR /iac\nENTRYPOINT [\"tini\", \"-g\", \"--\", \"/usr/local/bin/docker-entrypoint.sh\"]\n\nARG VERSION\nARG COMMIT_HASH\n\nLABEL org.opencontainers.image.authors=\"Jon Zeolla\"\nLABEL org.opencontainers.image.licenses=\"BSD-3-Clause\"\nLABEL org.opencontainers.image.vendor=\"Seiso\"\nLABEL org.opencontainers.image.version=\"${VERSION}\"\nLABEL org.opencontainers.image.title=\"easy_infra\"\nLABEL org.opencontainers.image.description=\"This is a docker container that simplifies and secures Infrastructure as Code deployments\"\nLABEL org.opencontainers.image.url=\"https://seisollc.com\"\nLABEL org.opencontainers.image.source=\"https://github.com/SeisoLLC/easy_infra\"\nLABEL org.opencontainers.image.revision=\"${COMMIT_HASH}\"\n\n\nFROM minimal AS az\nUSER root\nARG AZURE_CLI_VERSION\nENV AZURE_CLI_VERSION=\"${AZURE_CLI_VERSION}\"\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n# hadolint ignore=DL3008\nRUN apt-get update \\\n #####\n # Per Microsoft recommendation at https://docs.microsoft.com/en-us/cli/azure/install-azure-cli-linux?pivots=apt\n && apt-get remove azure-cli -y \\\n && apt-get autoremove -y \\\n #####\n && apt-get -y install --no-install-recommends ca-certificates \\\n                                               curl \\\n                                               apt-transport-https \\\n                                               lsb-release \\\n                                               gnupg \\\n && curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.gpg > /dev/null \\\n && AZ_REPO=$(lsb_release -cs) \\\n && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main\" | tee /etc/apt/sources.list.d/azure-cli.list \\\n && apt-get update \\\n && apt-get -y install --no-install-recommends azure-cli=${AZURE_CLI_VERSION} \\\n && apt-get clean autoclean \\\n && apt-get -y autoremove \\\n && rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* /tmp/* /var/tmp/* /var/cache/debconf/*-old \\\n && su easy_infra -c \"ansible-galaxy collection install azure.azcollection\"\nUSER easy_infra\n\n\nFROM minimal AS aws\nUSER root\nARG AWS_CLI_VERSION\nENV AWS_CLI_VERSION=\"${AWS_CLI_VERSION}\"\nRUN curl -f -L https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWS_CLI_VERSION}.zip -o /tmp/awscliv2.zip \\\n && unzip /tmp/awscliv2.zip -d /tmp/ \\\n && /tmp/aws/install --bin-dir /aws-cli-bin/ \\\n # Required for the *-aws images to be functional\n && ln -sf /aws-cli-bin/* /usr/local/bin/ \\\n && rm -rf /tmp/* /var/tmp/* /var/cache/debconf/*-old \\\n && su easy_infra -c \"ansible-galaxy collection install amazon.aws\" \\\n && echo 'complete -C /usr/local/bin/aws_completer aws' >> /home/easy_infra/.bashrc\nUSER easy_infra\n\n\nFROM minimal AS final\n\nUSER root\n# binary downloads and pip installs\nARG PACKER_VERSION\nENV PACKER_VERSION=\"${PACKER_VERSION}\"\nARG TERRASCAN_VERSION\nENV TERRASCAN_VERSION=\"${TERRASCAN_VERSION}\"\nENV SKIP_TERRASCAN=\"false\"\nARG TFSEC_VERSION\nENV TFSEC_VERSION=\"${TFSEC_VERSION}\"\nENV SKIP_TFSEC=\"false\"\nRUN curl -f -L https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip -o /usr/local/bin/packer.zip \\\n && unzip /usr/local/bin/packer.zip -d /usr/local/bin/ \\\n && rm -f /usr/local/bin/packer.zip \\\n && chmod 0755 /usr/local/bin/packer \\\n && curl -f -L https://github.com/accurics/terrascan/releases/download/${TERRASCAN_VERSION}/terrascan_${TERRASCAN_VERSION#v}_Linux_x86_64.tar.gz -o /usr/local/bin/terrascan.tar.gz \\\n && tar -xvf /usr/local/bin/terrascan.tar.gz -C /usr/local/bin/ terrascan \\\n && rm -f /usr/local/bin/terrascan.tar.gz \\\n && chmod 0755 /usr/local/bin/terrascan \\\n && chown root: /usr/local/bin/terrascan \\\n && su easy_infra -c \"terrascan init\" \\\n && rm -rf /home/easy_infra/.terrascan \\\n && curl -f -L https://github.com/aquasecurity/tfsec/releases/download/${TFSEC_VERSION}/tfsec-linux-amd64 -o /usr/local/bin/tfsec \\\n && chmod 0755 /usr/local/bin/tfsec\nUSER easy_infra\n\n# AWS\nCOPY --from=aws --chown=easy_infra:easy_infra /usr/local/aws-cli/ /usr/local/aws-cli/\nCOPY --from=aws --chown=easy_infra:easy_infra /aws-cli-bin/ /usr/local/bin/\nCOPY --from=aws --chown=easy_infra:easy_infra /home/easy_infra/.bashrc /home/easy_infra/.bashrc\nCOPY --from=aws --chown=easy_infra:easy_infra /home/easy_infra/.ansible/collections/ansible_collections/amazon /home/easy_infra/.ansible/collections/ansible_collections/amazon\nARG AWS_CLI_VERSION\nENV AWS_CLI_VERSION=\"${AWS_CLI_VERSION}\"\n\n# Workaround due to moby/moby#37965 and docker-py BuildKit support is pending\n# docker/docker-py#2230\nRUN true\n\n# Azure\nCOPY --from=az --chown=easy_infra:easy_infra /opt/az /opt/az\nCOPY --from=az --chown=easy_infra:easy_infra /usr/bin/az /usr/bin/az\nCOPY --from=az --chown=easy_infra:easy_infra /etc/apt/trusted.gpg.d/microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg\nCOPY --from=az --chown=easy_infra:easy_infra /etc/apt/sources.list.d/azure-cli.list /etc/apt/sources.list.d/azure-cli.list\nCOPY --from=az --chown=easy_infra:easy_infra /home/easy_infra/.ansible/collections/ansible_collections/azure /home/easy_infra/.ansible/collections/ansible_collections/azure\nARG AZURE_CLI_VERSION\nENV AZURE_CLI_VERSION=\"${AZURE_CLI_VERSION}\"\n"
}