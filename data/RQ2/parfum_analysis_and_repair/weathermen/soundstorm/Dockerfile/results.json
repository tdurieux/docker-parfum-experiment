{
  "startTime": 1674252203883,
  "endTime": 1674252204874,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Docker image build script for Soundstorm\n#\n\n# Use latest Ruby\nFROM ruby:2.6.5-alpine\n\n# Install system dependencies\nRUN apk update\nRUN apk add --no-cache --update build-base \\\n                                curl \\\n                                linux-headers \\\n                                ffmpeg \\\n                                git \\\n                                nodejs \\\n                                yarn \\\n                                tzdata \\\n                                postgresql-dev \\\n                                libsndfile-dev \\\n                                imagemagick \\\n                                yajl\n\n# Create working directory\nENV APP_PATH=/usr/src/app\nRUN mkdir -p $APP_PATH\nWORKDIR $APP_PATH\n\n# Add application dependency manifests\nCOPY Gemfile $APP_PATH/Gemfile\nCOPY Gemfile.lock $APP_PATH/Gemfile.lock\nCOPY package.json $APP_PATH/package.json\nCOPY yarn.lock $APP_PATH/yarn.lock\n\n# Install Ruby dependencies\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update bundler && rm -rf /root/.gem;\nRUN bundle install --jobs `expr $(cat /proc/cpuinfo | grep -c \"cpu cores\") - 1` --retry 3\n\n# Define build environment\nARG RAILS_ENV=development\nARG SECRET_KEY_BASE\nENV NODE_ENV=$RAILS_ENV \\\n    RAILS_LOG_TO_STDOUT=true\n\n# Install JavaScript dependencies\nRUN yarn install --check-files && yarn cache clean;\n\n# Copy in application source code\nCOPY . $APP_PATH\n\n# Precompile assets in production\nRUN if [ \"$RAILS_ENV\" = \"production\" ] ; then rails assets:precompile; fi\n\n# Install entrypoint script\nCOPY bin/entrypoint.sh /usr/bin/\nRUN chmod +x /usr/bin/entrypoint.sh\nENTRYPOINT [\"/usr/bin/entrypoint.sh\"]\n\n# Set up container defaults\nEXPOSE 3000\nCMD [\"bundle\", \"exec\", \"rails\", \"server\", \"-b\", \"0.0.0.0\"]\nHEALTHCHECK CMD curl --fail \"http://localhost:3000/health\" || exit 1\n"
}