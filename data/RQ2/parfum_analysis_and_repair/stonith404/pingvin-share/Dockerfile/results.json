{
  "startTime": 1674253032563,
  "endTime": 1674253033149,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install dependencies only when needed\nFROM node:16-alpine AS deps\nWORKDIR /opt/app\nCOPY package.json package-lock.json ./\nRUN npm ci\n\nFROM node:16-alpine AS builder\nENV NODE_ENV=production\nWORKDIR /opt/app\nCOPY . .\nCOPY --from=deps /opt/app/node_modules ./node_modules\nRUN npm run build\n\nFROM node:16-alpine AS script-builder\nWORKDIR /opt/app\nCOPY .setup .setup\nWORKDIR /opt/app/.setup\nRUN npm install && npm cache clean --force;\nRUN npm i -g @vercel/ncc && npm cache clean --force;\nRUN ncc build index.ts\n\n# Production image, copy all the files and run next\nFROM node:16-alpine AS runner\nWORKDIR /opt/app\nENV NODE_ENV=production\nCOPY ./functions ./functions\nCOPY --from=builder /opt/app/next.config.js ./\nCOPY --from=builder /opt/app/public ./public\nCOPY --from=builder /opt/app/.next ./.next\nCOPY --from=builder /opt/app/node_modules ./node_modules\nCOPY --from=script-builder /opt/app/.setup/dist/index.js ./scripts/setup.js\n\nEXPOSE 3000\nCMD [\"node_modules/.bin/next\", \"start\"]"
}