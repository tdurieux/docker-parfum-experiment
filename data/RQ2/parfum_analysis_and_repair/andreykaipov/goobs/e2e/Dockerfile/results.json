{
  "startTime": 1674249184632,
  "endTime": 1674249185632,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.14 AS build\nENV obs_studio_version    27.0.1\nENV obs_websocket_version 4.9.1\n\nRUN apk add --no-cache -U git build-base cmake\nRUN apk add --no-cache -U qt5-qtbase-dev ffmpeg-dev curl-dev wayland-dev x264-dev qt5-qtsvg-dev\n\n# install obs (https://obsproject.com/wiki/install-instructions#linux-portable-mode-all-distros)\nWORKDIR /work\nRUN git clone --recursive https://github.com/obsproject/obs-studio.git\nWORKDIR /work/obs-studio/build\nRUN git checkout \"$obs_studio_version\"\nRUN cmake -DUNIX_STRUCTURE=0 -DCMAKE_INSTALL_PREFIX=/opt/obs -DBUILD_BROWSER=OFF -DBUILD_VST=OFF DENABLE_PIPEWIRE=OFF ..\nRUN make -j4\nRUN make install\n\n# install obs-websocket (https://github.com/Palakis/obs-websocket/issues/586#issuecomment-769836454)\nWORKDIR /work\nRUN git clone --recursive https://github.com/Palakis/obs-websocket.git\nWORKDIR /work/obs-websocket/build\nRUN git checkout 4.9.1\nENV LIBRARY_PATH /opt/obs/bin/64bit\nRUN cmake -DLIBOBS_INCLUDE_DIR=/work/obs-studio/libobs -DCMAKE_INSTALL_PREFIX=/opt/obs-websocket -DUSE_UBUNTU_FIX=true ..\nRUN make -j4\nRUN cp obs-websocket.so /opt/obs/obs-plugins/64bit/\n\nFROM alpine:3.14\nCOPY --from=build /opt /opt\nCOPY --from=build /lib/libmount.so.1 /lib/libmount.so.1\nCOPY --from=build /lib/libblkid.so.1 /lib/libblkid.so.1\nCOPY --from=build /usr/lib /usr/lib\nCOPY basic.ini /root/.config/obs-studio/basic/profiles/Untitled/basic.ini\nWORKDIR /opt/obs/bin/64bit/\n\n# --init doesn't seem to work within a GH actions service container, so we add\n# the init system ourselves to essentially always run with --init\nENV tini_version v0.19.0\nADD https://github.com/krallin/tini/releases/download/${tini_version}/tini-static /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\nRUN apk add --no-cache -U xvfb-run mesa-dri-gallium\nCMD [\"xvfb-run\", \"-s\", \"-screen 0 800x600x24\", \"./obs\"]\n"
}