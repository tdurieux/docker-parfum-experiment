{
  "startTime": 1674249524437,
  "endTime": 1674249525403,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM awesto/fedora-uwsgi-python:5\n\nLABEL Description=\"Run django-angular demo\" Maintainer=\"Jacob Rief <jacob.rief@gmail.com>\"\n\n# install and configure Redis\nRUN dnf install -y redis\nRUN mkdir -p /web/redis\nCOPY docker-files/redis.ini /etc/uwsgi.d/redis.ini\nCOPY docker-files/redis.conf /etc/redis.conf\nRUN chown redis.redis /etc/uwsgi.d/redis.ini\nRUN chown -R redis.redis /web/redis\n\nRUN useradd -M -d /web -g uwsgi -s /bin/bash django\n\n# install the basic Django package\nRUN echo 2 | alternatives --config python\nRUN python -V\n# RUN pip install --upgrade pip\n# RUN pip install --force-reinstall uwsgi\nRUN pip install --no-cache-dir django==1.10.7\n\n# copy the local django-angular file into a temporary folder\nRUN mkdir -p /tmp/django-angular\nCOPY LICENSE.txt /tmp/django-angular\nCOPY README.md /tmp/django-angular\nCOPY MANIFEST.in /tmp/django-angular\nCOPY setup.py /tmp/django-angular\nADD djng /tmp/django-angular/djng\n# and from there install it into the site-package using setup.py\nRUN pip install --no-cache-dir /tmp/django-angular\nRUN rm -rf /tmp/django-angular\n\n# create the example project\nRUN mkdir -p /web/workdir/{media,static}\nADD examples/server /web/django-angular-demo/server\nADD client /web/django-angular-demo/client\nCOPY docker-files/wsgi_runserver.py /web/django-angular-demo/wsgi_runserver.py\nCOPY docker-files/wsgi_websocket.py /web/django-angular-demo/wsgi_websocket.py\nCOPY examples/manage.py /web/django-angular-demo/manage.py\nCOPY examples/package.json /web/django-angular-demo/package.json\nCOPY examples/requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\nRUN pip install --no-cache-dir django-websocket-redis\n\n# install packages under node_modules/ outside of PyPI\nWORKDIR /web/django-angular-demo\nRUN npm install && npm cache clean --force;\n\n# add uwsgi.ini file into workdir, so that touching this file restarts the Django server\nCOPY docker-files/uwsgi-emperor.ini /etc/uwsgi.ini\nCOPY docker-files/uwsgi-websocket.ini /web/workdir/uwsgi-websocket.ini\nRUN ln -s /web/workdir/uwsgi-websocket.ini /etc/uwsgi.d/djangular-websocket.ini\nCOPY docker-files/uwsgi-runserver.ini /web/workdir/uwsgi-runserver.ini\nRUN ln -s /web/workdir/uwsgi-runserver.ini /etc/uwsgi.d/djangular-runserver.ini\n\n# collect static files\nRUN CLIENT_SRC_DIR=/web/django-angular-demo/client/src NODE_MODULES_DIR=/web/django-angular-demo/node_modules DJANGO_STATIC_ROOT=/web/workdir/static ./manage.py collectstatic --noinput\nRUN chown -R django.uwsgi /web/{logs,workdir}\n\n# share media files\nVOLUME /web/workdir/media\n\n# when enabling the CMD disable deamonize in uwsgi.ini\nEXPOSE 9002\nCMD [\"/usr/sbin/uwsgi\", \"--ini\", \"/etc/uwsgi.ini\"]\n"
}