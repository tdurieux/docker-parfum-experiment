diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/frostwire/frostwire-jlibtorrent/swig/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/frostwire/frostwire-jlibtorrent/swig/Dockerfile/repaired.Dockerfile
index 6854d75..53374cc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/frostwire/frostwire-jlibtorrent/swig/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/frostwire/frostwire-jlibtorrent/swig/Dockerfile/repaired.Dockerfile
@@ -4,29 +4,29 @@ ENV DEBIAN_FRONTEND noninteractive
 
 RUN apt update -y
 # Common Java tooling
-RUN apt install -y openjdk-11-jdk-headless
+RUN apt install --no-install-recommends -y openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;
 # Common tooling
-RUN apt install -y wget
-RUN apt install -y unzip
-RUN apt install -y less
-RUN apt install -y python
-RUN apt install -y perl
-RUN apt install -y make
-RUN apt install -y cmake
-RUN apt install -y g++
-RUN apt install -y git
-RUN apt install -y ssh
-RUN apt install -y build-essential
-RUN apt install -y libtool
-RUN apt install -y libpcre3-dev
-RUN apt install -y libpcre3
+RUN apt install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y less && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y python && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y perl && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y make && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y g++ && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y ssh && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y libtool && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y libpcre3-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y libpcre3 && rm -rf /var/lib/apt/lists/*;
 # Windows toolchain
-RUN apt install -y g++-mingw-w64-x86-64
+RUN apt install --no-install-recommends -y g++-mingw-w64-x86-64 && rm -rf /var/lib/apt/lists/*;
 # Linux Toolchain
-RUN apt install -y g++-7
-RUN apt install -y g++-7-multilib
+RUN apt install --no-install-recommends -y g++-7 && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y g++-7-multilib && rm -rf /var/lib/apt/lists/*;
 # For testing and debugging
-RUN apt install -y emacs-nox
+RUN apt install --no-install-recommends -y emacs-nox && rm -rf /var/lib/apt/lists/*;
 
 ENV LIBTORRENT_REVISION="RC_1_2_239500acf2bc60dcb91330bf3c21b939d9f603af"
 ENV SWIG_VERSION="4.0.2"
@@ -60,9 +60,9 @@ RUN cd /src \
 		&& wget -nv https://dl.frostwire.com/other/swig/swig-${SWIG_VERSION}.tar.gz \
 		&& tar xzf swig-${SWIG_VERSION}.tar.gz \
 		&& cd /src/swig-${SWIG_VERSION} \
-		&& ./configure \
+		&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 		&& make -j 8 \
-    && make install
+    && make install && rm swig-${SWIG_VERSION}.tar.gz
 
 RUN swig -version
 
@@ -71,7 +71,7 @@ RUN cd /src \
     && wget -nv -O boost.tar.gz https://boostorg.jfrog.io/artifactory/main/release/${BOOST_DOT_VERSION}/source/boost_${BOOST_UNDERSCORE_VERSION}.tar.gz \
     && tar xzf boost.tar.gz \
     && cd boost_${BOOST_UNDERSCORE_VERSION} \
-    && ./bootstrap.sh
+    && ./bootstrap.sh && rm boost.tar.gz
 
 # download android NDK
 RUN cd /src \
@@ -83,7 +83,7 @@ RUN cd /src \
 RUN cd /src \
     && wget -nv -O openssl.tar.gz https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \
     && tar xzf openssl.tar.gz \
-    && mv openssl-${OPENSSL_VERSION} openssl-src
+    && mv openssl-${OPENSSL_VERSION} openssl-src && rm openssl.tar.gz
 
 ENV ANDROID_TOOLCHAIN="/src/android-ndk/toolchains/llvm/prebuilt/linux-x86_64"
 ENV AR="${ANDROID_TOOLCHAIN}/bin/llvm-ar"
@@ -145,7 +145,7 @@ RUN cd /src \
     && make install_sw \
     && cd /openssl-windows-x86_64/lib \
     && cp libcrypto.a libcrypto.lib \
-    && cp libssl.a libssl.lib
+    && cp libssl.a libssl.lib && rm openssl.tar.gz
 
 #Build OpenSSL for Linux x86_64
 RUN export CC=gcc-7 \