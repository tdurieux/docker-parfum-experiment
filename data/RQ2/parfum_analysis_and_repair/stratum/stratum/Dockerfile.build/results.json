{
  "startTime": 1674250989231,
  "endTime": 1674250990184,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 22,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018-present Open Networking Foundation\n# SPDX-License-Identifier: Apache-2.0\n\nARG BAZELISK_VERSION=1.8.0\nARG PI_COMMIT=a5fd855d4b3293e23816ef6154e83dc6621aed6a\nARG BMV2_COMMIT=b0fb01ecacbf3a7d7f0c01e2f149b0c6a957f779\nARG JDK_URL=https://mirror.bazel.build/openjdk/azul-zulu11.29.3-ca-jdk11.0.2/zulu11.29.3-ca-jdk11.0.2-linux_x64.tar.gz\nARG LLVM_REPO_NAME=\"deb http://apt.llvm.org/stretch/  llvm-toolchain-stretch-11 main\"\n\n# Reasonable for CI\nARG JOBS=2\n\nFROM debian:9@sha256:d8ee86bf0afeb901de293c692a540307a670306cbdb7a06e2c840f17b0c35374\nLABEL maintainer=\"Stratum dev <stratum-dev@lists.stratumproject.org>\"\nLABEL description=\"This Docker image sets up a development environment for Stratum\"\n\nARG JOBS\n\n# bazelisk dependencies\n# + wget to download bazelisk binary\n# + ca-certificates for wget HTPPS connection\n# LLVM dependencies\n# + gnupg2 for apt-key\n# + software-properties-common for add-apt-repository\n# OpenNSA dependencies\n# + libelf-dev to build the kernel modules\n# BF SDE dependecies\n# + libelf-dev to build the kernel modules\n# Tools and libraries for p4lang/target-syslibs and p4lang/target-utils\n# + cmake libedit-dev expat\nENV PKG_DEPS pkg-config zip zlib1g-dev unzip python wget ca-certificates \\\n    ssh git gdb vim emacs-nox sudo libudev-dev libjudy-dev bison flex \\\n    libfl-dev libgmp-dev libi2c-dev python-yaml libyaml-dev build-essential \\\n    lcov curl autoconf automake libtool libgmp-dev libpcap-dev \\\n    libboost-thread-dev libboost-filesystem-dev libboost-program-options-dev \\\n    gnupg2 software-properties-common python-pip python-dev python3-dev \\\n    apt-transport-https libelf-dev cmake libedit-dev expat\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends $PKG_DEPS && rm -rf /var/lib/apt/lists/*;\n\n# LLVM toolchain\nARG LLVM_REPO_NAME\nRUN wget --quiet -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN add-apt-repository \"$LLVM_REPO_NAME\"\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends clang-format-11 clang-11 && rm -rf /var/lib/apt/lists/*;\n# Versioned LLVM releases don't come with the meta packages for the\n# clang -> clang-12 symlinks. We create them manually here.\nRUN ln -s ../lib/llvm-11/bin/clang /usr/bin/clang\nRUN ln -s ../lib/llvm-11/bin/clang++ /usr/bin/clang++\nRUN ln -s ../lib/llvm-11/bin/clang-format /usr/bin/clang-format\n\n# Install java and lcov for Bazel coverage\nARG JDK_URL\nENV JAVA_HOME /usr/local/lib/jvm\nRUN wget --quiet $JDK_URL -O $HOME/jdk_11.0.2.tar.gz && \\\n    mkdir -p $JAVA_HOME && \\\n    tar xf $HOME/jdk_11.0.2.tar.gz -C $JAVA_HOME --strip-components=1 && \\\n    rm $HOME/jdk_11.0.2.tar.gz\nENV PATH=$PATH:/usr/local/lib/jvm/bin\n\nARG PI_COMMIT\nRUN git clone https://github.com/p4lang/PI.git /tmp/PI && \\\n    cd /tmp/PI && git checkout ${PI_COMMIT} && \\\n    git submodule update --init --recursive && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-bmv2 --without-proto --without-fe-cpp \\\n        --without-cli --without-internal-rpc && \\\n    make -j${JOBS} && make install && ldconfig && \\\n    rm -rf /tmp/PI\n\nARG BMV2_COMMIT\nENV BMV2_INSTALL /usr/local\nRUN git clone https://github.com/p4lang/behavioral-model.git /tmp/bmv2 && \\\n    cd /tmp/bmv2 && git checkout ${BMV2_COMMIT} && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-targets --with-pi --disable-elogger \\\n        --without-nanomsg --without-thrift --prefix=${BMV2_INSTALL} \\\n        CXXFLAGS=\"-I${PWD}/targets/simple_switch -DWITH_SIMPLE_SWITCH -isystem$BMV2_INSTALL/include -isystem$PI_INSTALL/include -L$PI_INSTALL/lib\" && \\\n    make -j${JOBS} && make install && ldconfig && \\\n    cd targets/simple_switch && \\\n    make -j${JOBS} && make install && ldconfig && \\\n    cp /tmp/bmv2/tools/veth* ${BMV2_INSTALL}/bin/ && \\\n    rm -rf /tmp/bmv2\n\n# Bazelisk and Bazel\nADD .bazelversion .\nADD BUILD .\nADD WORKSPACE .\nARG BAZELISK_VERSION\nRUN wget --quiet https://github.com/bazelbuild/bazelisk/releases/download/v${BAZELISK_VERSION}/bazelisk-linux-amd64 && \\\n    mv bazelisk-linux-amd64 /usr/local/bin/bazel && \\\n    chmod +x /usr/local/bin/bazel && \\\n    bazel version\n\n# Tools for style and license checking\nRUN pip install --no-cache-dir setuptools wheel && \\\n    pip install --no-cache-dir 'cpplint==1.*'\nRUN wget --quiet -O /usr/local/bin/buildifier https://github.com/bazelbuild/buildtools/releases/download/4.0.0/buildifier\nRUN chmod +x /usr/local/bin/buildifier\n\n# Docker CLI for CI builds\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -\nRUN add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/debian \\\n   $(lsb_release -cs) \\\n   stable\"\nRUN apt-get update && apt-get install -y --no-install-recommends docker-ce-cli && rm -rf /var/lib/apt/lists/*;\n"
}