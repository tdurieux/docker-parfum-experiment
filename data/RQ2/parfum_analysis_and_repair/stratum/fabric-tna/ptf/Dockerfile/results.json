{
  "startTime": 1674218285909,
  "endTime": 1674218286734,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021-present Open Networking Foundation\n# SPDX-License-Identifier: Apache-2.0\n#\n# Docker image to run PTF-based tests\n\nARG GRPC_VER=1.26\nARG PROTOBUF_VER=3.12\nARG SCAPY_VER=2.4.5\nARG PTF_VER=c5299ea2e27386653209af458757b3b15e5dec5d\nARG P4RUNTIME_SHELL_VER=0.0.1\nARG TREX_VER=3b19ddcf67e33934f268b09d3364cd87275d48db\nARG TREX_EXT_LIBS=/external_libs\nARG TREX_LIBS=/trex_python\nARG UNITTEST_XML_REPORTING_VER=3.0.4\n\nFROM python:3.8 as proto-deps\n\nARG GRPC_VER\n\nENV BUILD_DEPS \\\n    autoconf \\\n    automake \\\n    ca-certificates \\\n    curl \\\n    g++ \\\n    net-tools\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y $BUILD_DEPS && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir grpcio-tools==$GRPC_VER\n\nRUN mkdir -p /output\nRUN echo \"Building gnmi proto\"\nRUN git clone https://github.com/openconfig/gnmi.git /tmp/github.com/openconfig/gnmi && \\\n    cd /tmp/github.com/openconfig/gnmi/proto && \\\n    sed -i \"s|github.com/openconfig/gnmi/proto/gnmi_ext|gnmi_ext|g\" /tmp/github.com/openconfig/gnmi/proto/gnmi/gnmi.proto && \\\n    python -m grpc_tools.protoc -I=/tmp/github.com/openconfig/gnmi/proto --python_out=/output gnmi_ext/gnmi_ext.proto && \\\n    python -m grpc_tools.protoc -I=/tmp/github.com/openconfig/gnmi/proto --python_out=/output --grpc_python_out=/output gnmi/gnmi.proto\n\nENV PROTOS=\"\\\n/tmp/github.com/p4lang/p4runtime/proto/p4/v1/p4data.proto \\\n/tmp/github.com/p4lang/p4runtime/proto/p4/v1/p4runtime.proto \\\n/tmp/github.com/p4lang/p4runtime/proto/p4/config/v1/p4info.proto \\\n/tmp/github.com/p4lang/p4runtime/proto/p4/config/v1/p4types.proto \\\n/tmp/github.com/googleapis/googleapis/google/rpc/status.proto \\\n/tmp/github.com/googleapis/googleapis/google/rpc/code.proto\"\n\nRUN echo \"Building p4runtime proto\"\nRUN git clone https://github.com/p4lang/p4runtime.git /tmp/github.com/p4lang/p4runtime && \\\n    git clone https://github.com/googleapis/googleapis /tmp/github.com/googleapis/googleapis && \\\n    cd /tmp/github.com/p4lang/p4runtime/proto && \\\n    python -m grpc_tools.protoc -I=/tmp/github.com/p4lang/p4runtime/proto:/tmp/github.com/googleapis/googleapis --python_out=/output --grpc_python_out=/output $PROTOS\n\nRUN echo \"Building testvector proto\"\nRUN git clone https://github.com/stratum/testvectors /tmp/github.com/stratum/testvectors && \\\n    cd /tmp/github.com/stratum/testvectors/proto && \\\n    python -m grpc_tools.protoc -I=.:/tmp/github.com/openconfig/gnmi/proto:/tmp/github.com/p4lang/p4runtime/proto:/tmp/github.com/googleapis/googleapis --python_out=/output testvector/tv.proto && \\\n    python -m grpc_tools.protoc -I=. --python_out=/output target/target.proto && \\\n    python -m grpc_tools.protoc -I=. --python_out=/output portmap/portmap.proto && \\\n    cp /tmp/github.com/stratum/testvectors/utils/python/tvutils.py /output/testvector/tvutils.py && \\\n    cp /tmp/github.com/stratum/testvectors/utils/python/pmutils.py /output/portmap/pmutils.py && \\\n    cp /tmp/github.com/stratum/testvectors/utils/python/targetutils.py /output/target/targetutils.py\n\nRUN touch /output/gnmi_ext/__init__.py\nRUN touch /output/gnmi/__init__.py\nRUN touch /output/google/__init__.py\nRUN touch /output/google/rpc/__init__.py\nRUN touch /output/__init__.py\nRUN touch /output/p4/__init__.py\nRUN touch /output/p4/config/__init__.py\nRUN touch /output/p4/config/v1/__init__.py\nRUN touch /output/p4/v1/__init__.py\nRUN touch /output/testvector/__init__.py\nRUN touch /output/target/__init__.py\nRUN touch /output/portmap/__init__.py\n\nFROM ubuntu:20.04 as ptf-deps\n\nARG GRPC_VER\nARG PROTOBUF_VER\nARG SCAPY_VER\nARG PTF_VER\nARG P4RUNTIME_SHELL_VER\nARG UNITTEST_XML_REPORTING_VER\n\nENV RUNTIME_DEPS \\\n    python3 \\\n    python3-pip \\\n    python3-setuptools \\\n    git\n\nENV PIP_DEPS \\\n    git+https://github.com/p4lang/ptf@$PTF_VER \\\n    protobuf==$PROTOBUF_VER \\\n    grpcio==$GRPC_VER \\\n    p4runtime-shell==$P4RUNTIME_SHELL_VER \\\n    unittest-xml-reporting==$UNITTEST_XML_REPORTING_VER\n\nRUN apt update && \\\n    apt install --no-install-recommends -y $RUNTIME_DEPS && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --root /python_output $PIP_DEPS\n\n# Install TRex deps\nFROM alpine:3.12.1 as trex-builder\nARG TREX_VER\nARG TREX_EXT_LIBS\nARG TREX_LIBS\n# Install Trex library\nENV TREX_SCRIPT_DIR=/trex-core-${TREX_VER}/scripts\n# RUN apt update && apt install -y wget\nRUN wget https://github.com/stratum/trex-core/archive/${TREX_VER}.zip && \\\n    unzip -qq ${TREX_VER}.zip && \\\n    mkdir -p /output/${TREX_EXT_LIBS} && \\\n    mkdir -p /output/${TREX_LIBS} && \\\n    cp -r ${TREX_SCRIPT_DIR}/automation/trex_control_plane/interactive/* /output/${TREX_LIBS} && \\\n    cp -r ${TREX_SCRIPT_DIR}/external_libs/* /output/${TREX_EXT_LIBS} && \\\n    cp -r ${TREX_SCRIPT_DIR}/automation/trex_control_plane/stf/trex_stf_lib /output/${TREX_LIBS}\n\nFROM ubuntu:20.04\n\nARG TREX_EXT_LIBS\nARG TREX_LIBS\nARG SCAPY_VER\n\n#FIXME: Remove tcpdump, netbase after removing ptf\nENV RUNTIME_DEPS \\\n    make \\\n    net-tools \\\n    python3 \\\n    python3-setuptools \\\n    iproute2 \\\n    tcpdump \\\n    dumb-init \\\n    python3-dev \\\n    build-essential \\\n    python3-pip \\\n    wget \\\n    netbase \\\n    # below packages are necessary dependencies for installing scipy in PyPy\n    libatlas-base-dev \\\n    gfortran\n\nRUN apt update && \\\n    apt install --no-install-recommends -y $RUNTIME_DEPS && \\\n    rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir scipy==1.5.4 numpy==1.19.4 matplotlib==3.3.3 pyyaml==5.4.1\n\nENV TREX_EXT_LIBS=${TREX_EXT_LIBS}\nENV PYTHONPATH=${TREX_EXT_LIBS}:${TREX_LIBS}\nCOPY --from=trex-builder /output /\nCOPY --from=proto-deps /output /usr/lib/python3.8/dist-packages\nCOPY --from=ptf-deps /python_output /\n# Install custom scapy version from TRex\nRUN cd ${TREX_EXT_LIBS}/scapy-${SCAPY_VER}/ && python3 setup.py install\n# Build pypy from source for traffic trace tests\nRUN cd /opt/ && \\\n    wget -nv https://downloads.python.org/pypy/pypy3.7-v7.3.5-linux64.tar.bz2 && \\\n    tar xf pypy3.7-v7.3.5-linux64.tar.bz2 && \\\n    ln -s /opt/pypy3.7-v7.3.5-linux64/bin/pypy /usr/local/bin/pypy && rm pypy3.7-v7.3.5-linux64.tar.bz2\nRUN pypy -m ensurepip && \\\n    pypy -mpip install -U pip wheel\nRUN pypy -mpip install --no-cache-dir six scipy==1.5.4 numpy==1.19.4 matplotlib==3.3.3 pyyaml==5.4.1 scapy==2.4.5\nRUN ldconfig\n\nENTRYPOINT []\n"
}