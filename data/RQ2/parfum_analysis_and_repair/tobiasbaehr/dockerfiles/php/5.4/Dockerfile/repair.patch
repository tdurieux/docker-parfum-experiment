diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tobiasbaehr/dockerfiles/php/5.4/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tobiasbaehr/dockerfiles/php/5.4/Dockerfile/repaired.Dockerfile
index 2a61f15..43226ac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tobiasbaehr/dockerfiles/php/5.4/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tobiasbaehr/dockerfiles/php/5.4/Dockerfile/repaired.Dockerfile
@@ -50,27 +50,27 @@ RUN set -xe; \
   gnupg \
   openssl \
   ; \
-  \
-  mkdir -p /usr/src; \
+
+  mkdir -p /usr/src; rm -rf /usr/src \
   cd /usr/src; \
-  \
+
   wget -O php.tar.gz "$PHP_URL"; \
-  \
+
   if [ -n "$PHP_SHA256" ]; then \
-    echo "$PHP_SHA256 *php.tar.gz" | sha256sum -c -; \
+    echo "$PHP_SHA256  *php.tar.gz" | sha256sum -c -; \
   fi; \
   if [ -n "$PHP_MD5" ]; then \
     echo "$PHP_MD5 *php.tar.gz" | md5sum -c -; \
   fi; \
-  \
+
   if [ -n "$PHP_ASC_URL" ]; then \
     wget -O php.tar.gz.asc "$PHP_ASC_URL"; \
     export GNUPGHOME="$(mktemp -d)"; \
-    gpg --import /tmp/5DA04B5D.asc; \
+    gpg --batch --import /tmp/5DA04B5D.asc; \
     gpg --batch --verify php.tar.gz.asc php.tar.gz; \
     rm -rf "$GNUPGHOME"; \
   fi; \
-  \
+
   apk del .fetch-deps
 
 COPY docker-php-source /usr/local/bin/
@@ -93,13 +93,13 @@ RUN set -xe \
     LDFLAGS="$PHP_LDFLAGS" \
   && docker-php-source extract \
   && cd /usr/src/php \
-  && ./configure \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     --sysconfdir="$PHP_INI_DIR" \
     --with-layout=GNU \
     --with-config-file-path="$PHP_INI_DIR" \
     --with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
     --with-apxs2=/usr/bin/apxs \
-    \
+
     --disable-rpath \
     --disable-debug \
     --disable-static \
@@ -112,7 +112,7 @@ RUN set -xe \
     --without-qdbm \
     --without-pdo_sqlite \
     --without-sqlite3 \
-    \
+
 # --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)
   --enable-ftp \
 # --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)
@@ -121,7 +121,7 @@ RUN set -xe \
   --enable-mysqlnd \
   --enable-pdo \
   --enable-zip \
-    \
+
     --with-curl \
     --with-libedit \
     --with-openssl \
@@ -133,11 +133,11 @@ RUN set -xe \
     --with-jpeg-dir=/usr/include/ \
     --with-png-dir=/usr/include/ \
     --with-pdo-mysql=mysqlnd \
-    \
+
     # bundled pcre does not support JIT on s390x
     # https://manpages.debian.org/stretch/libpcre3-dev/pcrejit.3.en.html#AVAILABILITY_OF_JIT_SUPPORT
     $(test "$gnuArch" = 's390x-linux-gnu' && echo '--without-pcre-jit') \
-    \
+
     $PHP_EXTRA_CONFIGURE_ARGS \
   && make -j "$(nproc)" \
   && make install \
@@ -146,7 +146,7 @@ RUN set -xe \
   && { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \
   && make clean \
   && docker-php-source delete \
-  \
+
   && runDeps="$( \
     scanelf --needed --nobanner --recursive /usr/local \
       | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
@@ -155,9 +155,9 @@ RUN set -xe \
       | sort -u \
   )" \
   && apk add --no-cache --virtual .php-rundeps $runDeps \
-  \
+
   && apk del .build-deps \
-  \
+
 # https://github.com/docker-library/php/issues/443
 && pecl update-channels \
 && rm -rf /tmp/pear ~/.pearrc \