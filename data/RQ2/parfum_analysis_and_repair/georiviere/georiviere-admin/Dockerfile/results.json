{
  "startTime": 1674217101163,
  "endTime": 1674217102058,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 45,
        "columnStart": 26,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 71,
        "columnStart": 26,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal as base\n# stage with general requirements\nARG UID=1000\n\nENV DEBIAN_FRONTEND noninteractive\nENV PYTHONUNBUFFERED 1\nENV LANG C.UTF-8\nENV TZ UTC\n\nENV SERVER_NAME localhost\nENV CONVERSION_HOST convertit\nENV CAPTURE_HOST screamshotter\nENV POSTGRES_HOST postgres\nENV PGPORT 5432\nENV CUSTOM_SETTINGS_FILE /opt/georiviere-admin/var/conf/custom.py\n\nRUN mkdir -p /opt/georiviere-admin/var\n\nRUN useradd -ms /bin/bash django --uid ${UID}\nRUN chown -R django:django /opt\n\nCOPY .docker/update.sh /usr/local/bin/update.sh\nCOPY .docker/entrypoint.sh /usr/local/bin/entrypoint.sh\n\nWORKDIR /opt/georiviere-admin\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -qq \\\n    python3.9 \\\n    gettext \\\n    # geodjango \\\n    binutils \\\n    gdal-bin \\\n    libproj-dev \\\n    # manage \\\n    netcat \\\n    tzdata \\\n    # mapentity\n    iproute2 \\\n    # weasyprint\n    fonts-liberation \\\n    libcairo2 \\\n    libfreetype6 \\\n    libgdk-pixbuf2.0 \\\n    libpango1.0-0 \\\n    libpangocairo-1.0-0 \\\n    libpq5 && \\\n    apt-get install -y -qq --no-install-recommends postgis && \\\n    apt-get clean all && rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/apt/*\n\nUSER django\nENTRYPOINT [\"entrypoint.sh\"]\nEXPOSE 8000\n\nFROM base as build\n# stage with build requirements\nUSER root\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -qq \\\n    git \\\n    python3.9-dev \\\n    python3.9-venv \\\n    build-essential \\\n    graphviz \\\n    libffi-dev \\\n    libfreetype6-dev \\\n    libgdk-pixbuf2.0-dev \\\n    libssl-dev \\\n    libpq-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libgraphviz-dev \\\n    pkg-config && \\\n    apt-get clean all && rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/apt/*\n\nUSER django\n\nRUN python3.9 -m venv /opt/venv\nRUN  /opt/venv/bin/pip install --no-cache-dir pip setuptools wheel -U\n# geotrek setup fix : it required django before being installed... TODO: fix it in geotrek setup.py\nRUN  /opt/venv/bin/pip install --no-cache-dir django==2.2.*\n\nCOPY requirements.txt /opt/requirements.txt\nRUN  /opt/venv/bin/pip install --no-cache-dir -r /opt/requirements.txt\n\nFROM build as dev\n# stage with dev requirements\nCOPY dev-requirements.txt /opt/dev-requirements.txt\nRUN  /opt/venv/bin/pip install --no-cache-dir -r /opt/dev-requirements.txt\n\nCMD ./manage.py runserver 0.0.0.0:8000\n\nFROM base as prod\n# stage with prod requirements only\nENV GUNICORN_CMD_ARGS \"--workers 1 --timeout 3600 --bind 0.0.0.0:8000 --timeout 3600\"\n\nUSER root\n\nRUN apt-get update -qq && \\\n    apt-get full-upgrade -y -qq && \\\n    apt-get clean all && rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/apt/*\n\nCOPY --chown=django:django --from=build /opt/venv /opt/venv\nCOPY --chown=django:django georiviere /opt/georiviere-admin/georiviere\nCOPY --chown=django:django manage.py /opt/georiviere-admin/manage.py\n\nUSER django\n\nRUN SECRET_KEY=temp-secret-key /opt/venv/bin/python ./manage.py compilemessages\n\nCMD [\"gunicorn\", \"georiviere.wsgi:application\"]\n"
}