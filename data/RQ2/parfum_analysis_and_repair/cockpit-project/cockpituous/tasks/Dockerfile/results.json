{
  "startTime": 1674256250439,
  "endTime": 1674256251210,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:35\nLABEL maintainer='cockpit-devel@lists.fedorahosted.org'\n\nRUN dnf -y update && \\\n    dnf -y install \\\n        'dnf-command(builddep)' \\\n        byobu \\\n        chromium-headless \\\n        curl \\\n        dbus-glib \\\n        diffstat \\\n        expect \\\n        fedpkg \\\n        firefox \\\n        fpaste \\\n        gcc-c++ \\\n        git \\\n        git-lfs \\\n        gnupg \\\n        intltool \\\n        jq \\\n        lcov \\\n        libappstream-glib \\\n        libvirt-daemon-driver-storage-core \\\n        libvirt-daemon-driver-qemu \\\n        libvirt-client \\\n        libvirt-python3 \\\n        libXt \\\n        nc \\\n        net-tools \\\n        nodejs-devel \\\n        npm \\\n        origin-clients \\\n        psmisc \\\n        procps-ng \\\n        python3-pyflakes \\\n        python3 \\\n        python3-pycodestyle \\\n        python3-pika \\\n        python3-pillow \\\n        qemu-kvm-core \\\n        rpm-build \\\n        rpmdevtools \\\n        rsync \\\n        sassc \\\n        socat \\\n        strace \\\n        tar \\\n        vim-enhanced \\\n        virt-install \\\n        wget && \\\n    curl -f -o /tmp/cockpit.spec -s https://raw.githubusercontent.com/cockpit-project/cockpit/main/tools/cockpit.spec | \\\n    dnf -y builddep /tmp/cockpit.spec && \\\n    rm /tmp/cockpit.spec && \\\n    dnf -y install \\\n        audit-libs-devel \\\n        libtool \\\n        gettext-devel \\\n        gtk3-devel \\\n        gtk-doc \\\n        gtk3-devel-docs \\\n        glib2-doc \\\n        gobject-introspection-devel \\\n        glade-devel \\\n        libgnomekbd-devel \\\n        libxklavier-devel \\\n        make \\\n        pango-devel \\\n        python3-devel \\\n        rpm-devel \\\n        libarchive-devel \\\n        libtimezonemap-devel \\\n        gdk-pixbuf2-devel \\\n        libxml2 \\\n        gsettings-desktop-schemas \\\n        desktop-file-utils && \\\n    dnf clean all\n\nCOPY cockpit-tasks install-service webhook github_handler.py /usr/local/bin/\n\nRUN groupadd -g 1111 -r user && useradd -r -g user -u 1111 user --home-dir /work && \\\n    mkdir -p /usr/local/bin /secrets /cache/images /cache/github && \\\n    mkdir -p /work/.config /work/.config/cockpit-dev /work/.ssh /work/.cache /work/.rhel && \\\n    printf '[user]\\n\\t\\nemail = cockpituous@cockpit-project.org\\n\\tname = Cockpituous\\n[cockpit \"bots\"]\\n\\timages-data-dir = /cache/images\\n' >/work/.gitconfig && \\\n    ln -snf /secrets/ssh-config /work/.ssh/config && \\\n    ln -snf /secrets/codecov-token /work/.config/codecov-token && \\\n    ln -snf /secrets/s3-keys /work/.config/cockpit-dev/s3-keys && \\\n    ln -snf /run/secrets/webhook/.config--github-token /work/.config/github-token && \\\n    chmod g=u /etc/passwd && \\\n    chmod -R ugo+w /cache /secrets /cache /work && \\\n    chown -R user:user /cache /work && \\\n    printf '[libdefaults]\\ndefault_ccache_name = FILE:/tmp/krb5.ccache\\n' > /etc/krb5.conf.d/0_file_ccache && \\\n    echo 'user ALL=NOPASSWD: /usr/bin/chmod 666 /dev/kvm' > /etc/sudoers.d/user-fix-kvm\n\nENV LANG=C.UTF-8 \\\n    TEST_OVERLAY_DIR=/tmp\n\nVOLUME /cache/images\n\nUSER user\nWORKDIR /work\nCMD [\"/usr/local/bin/cockpit-tasks\", \"--publish\", \"$TEST_PUBLISH\", \"--verbose\"]\n\n# We execute the script in the host, but it doesn't exist on the host. So pipe it in\nLABEL INSTALL /usr/bin/docker run -ti --rm --privileged --volume=/:/host:rw --user=root IMAGE /bin/bash -c \\\"/usr/sbin/chroot /host /bin/sh -s < /usr/local/bin/install-service\\\"\n\n# Run a simple interactive instance of the tests container\nLABEL RUN /usr/bin/docker run -ti --rm --volume=/var/lib/cockpit-secrets/tasks:/secrets:ro --volume=/var/cache/cockpit-tasks/images:/cache/images:rw IMAGE /bin/bash -i\n\n# Start a container in the background; attach to it with \"docker exec -it <name> byobu\"\nLABEL DEV /usr/bin/docker run -d --volume=/var/cache/cockpit-tasks/images:/cache/images:rw IMAGE sleep infinity\n"
}