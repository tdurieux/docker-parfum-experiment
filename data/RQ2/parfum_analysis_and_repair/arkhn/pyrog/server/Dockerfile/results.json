{
  "startTime": 1674219136532,
  "endTime": 1674219137627,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 30,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 32,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:13-alpine AS build-image\n\nRUN apk update && apk add --no-cache openssl-dev libssl1.1 wget unzip git\n\nWORKDIR /build\n\nENV POSTGRES_URL=postgresql://required:by@prisma/generate\n\n# Install deps for production only\nCOPY package.json package.json\nCOPY tsconfig.json tsconfig.json\nCOPY tsconfig.build.json tsconfig.build.json\nCOPY yarn.lock yarn.lock\n\nRUN yarn --frozen-lockfile && yarn cache clean;\nRUN yarn cache clean --force && yarn cache clean;\n\nCOPY prisma prisma\nCOPY src src\n\nRUN yarn build && yarn cache clean;\n\nFROM node:13-alpine AS runtime-image\n\nWORKDIR /srv\n\nCOPY [\"package.json\",  \"tsconfig.json\", \"tsconfig.build.json\", \"docker-entrypoint.sh\", \"/srv/\"]\nCOPY prisma prisma\nCOPY scripts scripts\nCOPY src src\n\nCOPY --from=build-image /build/node_modules ./node_modules\nCOPY --from=build-image /build/dist ./dist\n\nEXPOSE 1000\n\nRUN chmod +x /srv/docker-entrypoint.sh\nENTRYPOINT [ \"/srv/docker-entrypoint.sh\" ]\n"
}