{
  "startTime": 1674215347310,
  "endTime": 1674215348135,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 41,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# DOSee Dockerfile\n#\n# Instructions for use:\n#\n# docker build -t dosee .\n# docker run --name dosee_app -i -p 8086:80 dosee\n#\n# docker build --tag dosee:latest .\n# docker run --name dosee_app --interactive --publish 8086:80 dosee:latest\n#\n#\n# To remove and cleanup:\n#\n# docker stop dosee_app\n# docker container rm dosee_app\n# docker image rm dosee\n\n# Multi-stage Docker build to reduce the overall image size\n# DOSee will be built in this temporary Node.JS image\nFROM node:current-alpine AS build\n\n# Install and update the build dependencies\nRUN apk update && \\\n    apk add --no-cache --update yarn && \\\n    npm update --global npm\n\n# Copy source files\nCOPY . /dosee\n\n# Compile and build DOSee\nWORKDIR /dosee\nRUN yarn install --audit --production && yarn cache clean;\n\n# DOSee will be served on this permanent nginx image\n# It should only ammount to around 50 MB in size\n# The nginx stable image is used due to its less frequent updates\nFROM nginx:stable-alpine\nLABEL net.dosee.description=\"DOSee an MS-DOS emulator for the web\"\n\n# Copy DOSee from the build image to the nginx webroot\nRUN rm /usr/share/nginx/html/*\nCOPY --from=build /dosee/build/ /usr/share/nginx/html\n"
}