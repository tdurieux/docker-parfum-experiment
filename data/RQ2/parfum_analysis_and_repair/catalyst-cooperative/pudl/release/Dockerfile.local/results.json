{
  "startTime": 1674253648998,
  "endTime": 1674253649969,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First, build a base image with miniconda, pudl-dev environment\n# and all dependencies installed.\n\n# Build pypi tarball from the local source\nFROM python:3.8 AS pudl-pypi-builder\nWORKDIR /pudl/repo\nCOPY . /pudl/repo\nRUN mkdir /pudl/dist && mkdir /pudl/src\nRUN python setup.py sdist -d /pudl/dist && mv /pudl/dist/*tar.gz /pudl/dist/pudl.tar.gz\nRUN tar xzf /pudl/dist/pudl.tar.gz -C /pudl/src --strip-components=1 && rm /pudl/dist/pudl.tar.gz\nRUN rm -Rf /pudl/repo\n\n# Create pudl-dev environment based on the environment.yml from the source\nFROM continuumio/miniconda3:latest AS pudl-conda-base\nWORKDIR /pudl\nCOPY --from=pudl-pypi-builder /pudl/src/devtools/environment.yml .\nRUN conda env create -f environment.yml\n\nRUN echo \"source activate pudl-dev\" > ~/.bashrc\n# ENV PATH /opt/conda/envs/env/bin:$PATH\nSHELL [\"conda\", \"run\", \"-n\", \"pudl-dev\", \"/bin/bash\", \"-c\"]\n\n\n# Copy source code and install pypi package with pip\nFROM pudl-conda-base AS pudl-dev\nWORKDIR /pudl/src\nCOPY --from=pudl-pypi-builder /pudl/src .\nCOPY --from=pudl-pypi-builder /pudl/dist/pudl.tar.gz /pudl/dist/pudl.tar.gz\nRUN pip install --no-cache-dir /pudl/dist/pudl.tar.gz\n\nRUN mkdir /pudl/inputs\nRUN mkdir /pudl/outputs\nRUN pudl_setup --pudl_in /pudl/inputs --pudl_out /pudl/outputs\n\n# Mark inputs and outputs as mountable volumes\nVOLUME /pudl/inputs/data\nVOLUME /pudl/outputs\n\n# Sets the default configuration to use with the release.\nENV PUDL_SETTINGS=/pudl/src/release/settings/release.yml\n# TODO(rousik): Set default entrypoint to release/data-release.sh\n# so that release is kicked off once this container is started.\n"
}