diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tellapart/aurproxy/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tellapart/aurproxy/Dockerfile/repaired.Dockerfile
index f2ac38e..a72c4d9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tellapart/aurproxy/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tellapart/aurproxy/Dockerfile/repaired.Dockerfile
@@ -12,16 +12,16 @@ MAINTAINER thanos@tellapart.com
 RUN apt-get update
 
 # Install python prerequisites
-RUN apt-get install -y python-pip python-dev build-essential
+RUN apt-get install --no-install-recommends -y python-pip python-dev build-essential && rm -rf /var/lib/apt/lists/*;
 
 # Install libpcap
-RUN apt-get install -y libpcap-dev
+RUN apt-get install --no-install-recommends -y libpcap-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install go
-RUN echo 'e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a go1.6.2.linux-amd64.tar.gz' >go.sha256sum \
- && curl -s -L -o go1.6.2.linux-amd64.tar.gz https://storage.googleapis.com/golang/go1.6.2.linux-amd64.tar.gz \
+RUN echo 'e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a  go1.6.2.linux-amd64.tar.gz' >go.sha256sum \
+ && curl -f -s -L -o go1.6.2.linux-amd64.tar.gz https://storage.googleapis.com/golang/go1.6.2.linux-amd64.tar.gz \
  && sha256sum -c go.sha256sum \
- && tar -C /usr/local -xzf go1.6.2.linux-amd64.tar.gz
+ && tar -C /usr/local -xzf go1.6.2.linux-amd64.tar.gz && rm go1.6.2.linux-amd64.tar.gz
 
 # Install gor
 ENV PATH=$PATH:/usr/local/go/bin
@@ -33,12 +33,12 @@ RUN mkdir -p $GOPATH \
 
 # Aurora/Mesos requirements (see AURORA-1487)
 RUN apt-get update \
- && apt-get install -y libcurl4-nss-dev libapr1-dev libsvn-dev
+ && apt-get install --no-install-recommends -y libcurl4-nss-dev libapr1-dev libsvn-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install nginx
 ENV NGX_REQS openssl libssl1.0.0 libxml2 libxslt1.1 libgeoip1 libpcre3 zlib1g
 RUN apt-get update \
- && apt-get install -y $NGX_REQS \
+ && apt-get install --no-install-recommends -y $NGX_REQS \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*
 
@@ -51,17 +51,17 @@ ENV NGX_ECHO_VER 0.57
 ENV DEV_PKGS build-essential curl libpcre3-dev zlib1g-dev libssl-dev libxml2-dev libgeoip-dev
 
 RUN apt-get update \
- && apt-get install -y $DEV_PKGS \
+ && apt-get install --no-install-recommends -y $DEV_PKGS \
  && mkdir -p /tmp/build && cd /tmp/build \
- && curl -s -L -o ngx_devel.tar.gz \
+ && curl -f -s -L -o ngx_devel.tar.gz \
       https://github.com/simpl/ngx_devel_kit/archive/v$NGX_DEV_KIT_VER.tar.gz \
- && curl -s -L -o ngx.tar.gz \
-      http://nginx.org/download/nginx-$NGX_VER.tar.gz \
- && curl -s -L -o ngx_statsd.tar.gz \
+ && curl -f -s -L -o ngx.tar.gz \
+      https://nginx.org/download/nginx-$NGX_VER.tar.gz \
+ && curl -f -s -L -o ngx_statsd.tar.gz \
       https://github.com/zebrafishlabs/nginx-statsd/archive/$NGX_STATSD_VER.tar.gz \
- && curl -s -L -o ngx_headers_more.tar.gz \
+ && curl -f -s -L -o ngx_headers_more.tar.gz \
       https://github.com/openresty/headers-more-nginx-module/archive/v$NGX_HEADERS_MORE_VER.tar.gz \
- && curl -s -L -o ngx_echo.tar.gz \
+ && curl -f -s -L -o ngx_echo.tar.gz \
       https://github.com/openresty/echo-nginx-module/archive/v$NGX_ECHO_VER.tar.gz \
  && echo "$NGX_MD5 ngx.tar.gz" | md5sum -c - || (echo "MD5 for ngx.tar.gz didn't match expected!" && exit 1) \
  && tar -xvf ngx_devel.tar.gz \
@@ -70,7 +70,7 @@ RUN apt-get update \
  && tar -xvf ngx_headers_more.tar.gz \
  && tar -xvf ngx_echo.tar.gz \
  && cd /tmp/build/nginx-$NGX_VER \
- && ./configure --prefix=/usr \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr \
                 --conf-path=/etc/nginx/nginx.conf \
                 --error-log-path=/var/log/nginx/error.log \
                 --http-client-body-temp-path=/var/lib/nginx/body \
@@ -105,7 +105,7 @@ RUN apt-get update \
  && apt-get autoremove -y \
  && apt-get purge -y \
  && apt-get clean \
- && rm -rf /var/lib/apt/lists/*
+ && rm -rf /var/lib/apt/lists/* && rm ngx_devel.tar.gz
 
 RUN mkdir -p /etc/nginx/sites-enabled \
  && mkdir -p /etc/nginx/sites-available \
@@ -143,7 +143,7 @@ RUN mkdir -p /opt/aurproxy/
 ADD ./requirements.txt /opt/aurproxy/requirements.txt
 
 #  Install application requirements
-RUN pip install -r /opt/aurproxy/requirements.txt
+RUN pip install --no-cache-dir -r /opt/aurproxy/requirements.txt
 
 
 ######