{
  "startTime": 1674255459207,
  "endTime": 1674255460645,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "# Newer python base images may break gevent.\n# See https://github.com/docker-library/python/issues/29#issuecomment-70727289\nFROM python:2.7.7\nMAINTAINER thanos@tellapart.com\n\n\n######\n# System prerequisite installation\n######\n\n# Update apt repository\nRUN apt-get update\n\n# Install python prerequisites\nRUN apt-get install --no-install-recommends -y python-pip python-dev build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Install libpcap\nRUN apt-get install --no-install-recommends -y libpcap-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install go\nRUN echo 'e40c36ae71756198478624ed1bb4ce17597b3c19d243f3f0899bb5740d56212a  go1.6.2.linux-amd64.tar.gz' >go.sha256sum \\\n && curl -f -s -L -o go1.6.2.linux-amd64.tar.gz https://storage.googleapis.com/golang/go1.6.2.linux-amd64.tar.gz \\\n && sha256sum -c go.sha256sum \\\n && tar -C /usr/local -xzf go1.6.2.linux-amd64.tar.gz && rm go1.6.2.linux-amd64.tar.gz\n\n# Install gor\nENV PATH=$PATH:/usr/local/go/bin\nENV GOPATH=/opt/go\nRUN mkdir -p $GOPATH \\\n && go get github.com/buger/gor \\\n && cd $GOPATH/src/github.com/buger/gor \\\n && go build\n\n# Aurora/Mesos requirements (see AURORA-1487)\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y libcurl4-nss-dev libapr1-dev libsvn-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install nginx\nENV NGX_REQS openssl libssl1.0.0 libxml2 libxslt1.1 libgeoip1 libpcre3 zlib1g\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y $NGX_REQS \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nENV NGX_DEV_KIT_VER 0.2.19\nENV NGX_VER 1.9.0\nENV NGX_MD5 487c26cf0470d8869c41a73621847268\nENV NGX_STATSD_VER b756a12abf110b9e36399ab7ede346d4bb86d691\nENV NGX_HEADERS_MORE_VER 0.26\nENV NGX_ECHO_VER 0.57\nENV DEV_PKGS build-essential curl libpcre3-dev zlib1g-dev libssl-dev libxml2-dev libgeoip-dev\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y $DEV_PKGS \\\n && mkdir -p /tmp/build && cd /tmp/build \\\n && curl -f -s -L -o ngx_devel.tar.gz \\\n      https://github.com/simpl/ngx_devel_kit/archive/v$NGX_DEV_KIT_VER.tar.gz \\\n && curl -f -s -L -o ngx.tar.gz \\\n      https://nginx.org/download/nginx-$NGX_VER.tar.gz \\\n && curl -f -s -L -o ngx_statsd.tar.gz \\\n      https://github.com/zebrafishlabs/nginx-statsd/archive/$NGX_STATSD_VER.tar.gz \\\n && curl -f -s -L -o ngx_headers_more.tar.gz \\\n      https://github.com/openresty/headers-more-nginx-module/archive/v$NGX_HEADERS_MORE_VER.tar.gz \\\n && curl -f -s -L -o ngx_echo.tar.gz \\\n      https://github.com/openresty/echo-nginx-module/archive/v$NGX_ECHO_VER.tar.gz \\\n && echo \"$NGX_MD5 ngx.tar.gz\" | md5sum -c - || (echo \"MD5 for ngx.tar.gz didn't match expected!\" && exit 1) \\\n && tar -xvf ngx_devel.tar.gz \\\n && tar -xvf ngx.tar.gz \\\n && tar -xvf ngx_statsd.tar.gz \\\n && tar -xvf ngx_headers_more.tar.gz \\\n && tar -xvf ngx_echo.tar.gz \\\n && cd /tmp/build/nginx-$NGX_VER \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n                --conf-path=/etc/nginx/nginx.conf \\\n                --error-log-path=/var/log/nginx/error.log \\\n                --http-client-body-temp-path=/var/lib/nginx/body \\\n                --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \\\n                --http-log-path=/var/log/nginx/access.log \\\n                --http-proxy-temp-path=/var/lib/nginx/proxy \\\n                --http-scgi-temp-path=/var/lib/nginx/scgi \\\n                --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \\\n                --lock-path=/var/lock/nginx.lock \\\n                --pid-path=/var/run/nginx.pid \\\n                --with-debug \\\n                --with-http_addition_module \\\n                --with-http_dav_module \\\n                --with-http_geoip_module \\\n                --with-http_gzip_static_module \\\n                --with-http_realip_module \\\n                --with-http_stub_status_module \\\n                --with-http_ssl_module \\\n                --with-http_sub_module \\\n                --with-stream \\\n                --with-ipv6 \\\n                --with-sha1=/usr/include/openssl \\\n                --with-md5=/usr/include/openssl \\\n                --add-module=/tmp/build/nginx-statsd-$NGX_STATSD_VER/ \\\n                --add-module=/tmp/build/headers-more-nginx-module-$NGX_HEADERS_MORE_VER \\\n                --add-module=/tmp/build/echo-nginx-module-$NGX_ECHO_VER \\\n && make -j4 \\\n && make install \\\n && cd / \\\n && rm -rf /tmp/build \\\n && apt-get purge -y $DEV_PKGS \\\n && apt-get autoremove -y \\\n && apt-get purge -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* && rm ngx_devel.tar.gz\n\nRUN mkdir -p /etc/nginx/sites-enabled \\\n && mkdir -p /etc/nginx/sites-available \\\n && mkdir -p /var/lib/nginx\n\n######\n# System prerequisite configuration\n######\n\n# Set up run directory for pids\nRUN mkdir -p /var/run\n\n# Remove default nginx config\nRUN rm /etc/nginx/nginx.conf\n\n# Symlink aurproxy nginx config\nRUN mkdir -p /etc/aurproxy/nginx\nRUN ln -sf /etc/aurproxy/nginx/nginx.conf /etc/nginx\n\n# Create dynamic gor config location\nRUN mkdir -p /etc/aurproxy/gor\n\n######\n# Application prerequisite installation\n######\n\n# Set up application sandbox\n# (Gets mounted by aurora in production)\nRUN mkdir -p /mnt/mesos/sandbox/sandbox\n\n# Set up application directory\nRUN mkdir -p /opt/aurproxy/\n\n# Add application requirements\nADD ./requirements.txt /opt/aurproxy/requirements.txt\n\n#  Install application requirements\nRUN pip install --no-cache-dir -r /opt/aurproxy/requirements.txt\n\n\n######\n# Application setup\n######\nADD ./tellapart/__init__.py /opt/aurproxy/tellapart/__init__.py\nADD ./tellapart/aurproxy /opt/aurproxy/tellapart/aurproxy\nADD ./templates /opt/aurproxy/tellapart/aurproxy/templates\n\n# Not intended to be run\n# Command will come from aurproxy.aur\nCMD [\"echo done\"]\n"
}