{
  "startTime": 1674220690333,
  "endTime": 1674220690947,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 18,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ros:melodic-perception\n\n# System settings\n# max watches on files (commented out because it's not necessary right now)\n# RUN echo \"fs.inotify.max_user_watches = 524288\" >> /etc/sysctl.conf && sysctl -p --system\n\n# Install some basic utilities\nRUN apt update && apt install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    libopencv-dev \\\n    libgoogle-glog-dev \\\n    libatlas-base-dev \\\n    libeigen3-dev \\\n    libsuitesparse-dev \\\n    libpng++-dev \\\n    git \\\n    libx11-6 \\\n    libgtk2.0-0 \\\n    vim \\\n    nano \\\n    wget \\\n    python-catkin-tools \\\n    ros-melodic-opencv-apps \\\n    ros-melodic-diagnostic-updater \\\n    ros-melodic-tf-conversions \\\n    lcov \\\n    tmux \\\n    python-pip \\\n    && apt clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /tmp/*\n\nRUN pip install --no-cache-dir pykitti \\\n    jupyter \\\n    jupytext --upgrade\n\n# Install ceres solver\n# Why is rm necessary? remove it when solved.\n# WORKDIR /opt\n# RUN rm -rf /opt/ceres-solver \\\n#     && git clone https://ceres-solver.googlesource.com/ceres-solver \\\n#     && mkdir -p /opt/ceres-solver/build\nRUN apt update && apt install --no-install-recommends -y libceres-dev && rm -rf /var/lib/apt/lists/*;\n\n# WORKDIR /opt/ceres-solver/build\n# RUN cmake .. -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF \\\n#     && make \\\n#     && make install\n\n# Make catkin workspace\nRUN rm -rf /workspace \\\n    && mkdir -p /workspace/limo_ws/src \\\n    && /bin/bash -c 'source /opt/ros/melodic/setup.bash && catkin_init_workspace /workspace/limo_ws/src'\n\n# WORKDIR /workspace/limo_ws\n# RUN catkin config --profile limo_release -x _limo_release --cmake-args -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_CXX_FLAGS=-Wall -Wextra -Wno-unused-parameter -Werror=address -Werror=array-bounds=1 -Werror=bool-compare -Werror=comment -Werror=enum-compare -Werror=format -Werror=init-self -Werror=logical-not-parentheses -Werror=maybe-uninitialized -Werror=memset-transposed-args -Werror=nonnull -Werror=nonnull-compare -Werror=openmp-simd -Werror=parentheses -Werror=return-type -Werror=sequence-point -Werror=sizeof-pointer-memaccess -Werror=switch -Werror=tautological-compare -Werror=trigraphs -Werror=uninitialized -Werror=volatile-register-var\n\n# Install limo\nWORKDIR /workspace/limo_ws/src\nRUN rm -rf /workspace/limo_ws/src/limo \\\n    && git clone https://github.com/johannes-graeter/limo.git \\\n    && rm -rf /workspace/limo_ws/src/feature_tracking \\\n    && git clone https://github.com/johannes-graeter/feature_tracking.git \\\n    && cd feature_tracking \\\n    && git checkout python_binding \\\n    && cd .. \\\n    && rm -rf /workspace/limo_ws/src/mono_lidar_depth \\\n    && git clone https://github.com/johannes-graeter/mono_lidar_depth.git \\\n    && rm -rf /workspace/limo_ws/src/viso2.git \\\n    && git clone https://github.com/johannes-graeter/viso2.git \\\n    && rm -rf /workspace/limo_ws/src/mrt_cmake_modules \\\n    && git clone https://github.com/johannes-graeter/mrt_cmake_modules.git \\\n    && rm -rf /workspace/limo_ws/src/rosinterface_handler \\\n    && git clone https://github.com/johannes-graeter/rosinterface_handler.git\n\n# solve issue https://github.com/johannes-graeter/limo/issues/50\nRUN cp -rf /usr/include/eigen3/Eigen /usr/include/Eigen -R\nRUN ln -sf /usr/include/eigen3/Eigen /usr/include/Eigen\n\nWORKDIR /workspace/limo_ws/\nRUN /bin/bash -c 'source /opt/ros/melodic/setup.bash && catkin build'\n\nWORKDIR /workspace/limo_ws/src/feature_tracking/feature_tracking_core/notebook\nRUN jupytext feature_tracking_notebook.py --to notebook\n\nCOPY entry.sh /entry.sh\nRUN chmod +x /entry.sh\n\nENTRYPOINT [\"/entry.sh\"]\n# CMD [\"bash\"]\nCMD /bin/bash -c 'source /opt/ros/melodic/setup.bash && source /workspace/limo_ws/devel/setup.bash && jupyter notebook --port=8888 --no-browser --ip=0.0.0.0 --allow-root /workspace/limo_ws/src/feature_tracking/feature_tracking_core/notebook/feature_tracking_notebook.ipynb'\n"
}