{
  "startTime": 1674252151739,
  "endTime": 1674252152788,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 102,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 102,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 102,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 97,
        "columnStart": 102,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 102,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 102,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 102,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 97,
        "columnStart": 102,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 as base\nARG DEBIAN_FRONTEND=noninteractive\nLABEL email=sam.silverberg@gmail.com\nLABEL author=\"Sam Silverberg\"\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt update && DEBIAN_FRONTEND=\"noninteractive\" apt upgrade -y && DEBIAN_FRONTEND=\"noninteractive\" apt --no-install-recommends install -y \\\n\t\topenjdk-11-jdk \\\n        maven \\\n        libfuse2 \\\n        ssh \\\n        openssh-server \\\n        jsvc \\\n        libxml2 \\\n        ruby-dev \\\n        build-essential \\\n        libxml2-utils \\\n        fuse \\\n        alien \\\n        git && rm -rf /var/lib/apt/lists/*;\n\nRUN gem install fpm\nCOPY .git /sdfs-build/\nCOPY pom.xml /sdfs-build/\nWORKDIR \"/sdfs-build\"\nENV VERSION=master\nENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/\nWORKDIR \"/sdfs-build/\"\nRUN mvn dependency:copy-dependencies\nENTRYPOINT ls -lah\n\n\nFROM base AS builder\nARG DEBIAN_FRONTEND=noninteractive\nLABEL email=sam.silverberg@gmail.com\nLABEL author=\"Sam Silverberg\"\nENV VERSION=master\nCOPY pom.xml /sdfs-build/\nCOPY src /sdfs-build/src/\nCOPY .git /sdfs-build/.git\nCOPY install-packages /sdfs-build/install-packages/\nWORKDIR \"/sdfs-build\"\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt update && DEBIAN_FRONTEND=\"noninteractive\" apt upgrade -y && DEBIAN_FRONTEND=\"noninteractive\" apt --no-install-recommends install -y \\\n    -y nsis && rm -rf /var/lib/apt/lists/*;\nRUN wget https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip && \\\n    unzip EnVar_plugin.zip -d /usr/share/nsis/\nRUN wget https://nsis.sourceforge.io/mediawiki/images/4/4a/AccessControl.zip && \\\n    unzip AccessControl.zip -d /usr/share/nsis/ && \\\n    cp /usr/share/nsis/Plugins/i386-unicode/AccessControl.dll /usr/share/nsis/Plugins/x86-unicode/\nRUN wget https://cdn.azul.com/zulu/bin/zulu11.48.21-ca-jre11.0.11-win_x64.zip && \\\n    rm -rf install-packages/windows/bin/jre && \\\n    unzip zulu11.48.21-ca-jre11.0.11-win_x64.zip -d /tmp/ && \\\n    mv /tmp/zulu11.48.21-ca-jre11.0.11-win_x64  install-packages/windows/bin/jre\nRUN wget https://cdn.azul.com/zulu/bin/zulu11.35.13-ca-jdk11.0.5-linux_x64.tar.gz && \\\n    rm -rf install-packages/deb/usr/share/sdfs/bin/jre && \\\n    tar -xzvf zulu11.35.13-ca-jdk11.0.5-linux_x64.tar.gz && \\\n    mkdir -p install-packages/deb/usr/share/sdfs/bin/ && \\\n    cp -rf zulu11.35.13-ca-jdk11.0.5-linux_x64 install-packages/deb/usr/share/sdfs/bin/jre && rm zulu11.35.13-ca-jdk11.0.5-linux_x64.tar.gz\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt update && DEBIAN_FRONTEND=\"noninteractive\" apt upgrade -y && DEBIAN_FRONTEND=\"noninteractive\" apt --no-install-recommends install -y \\\n        git && rm -rf /var/lib/apt/lists/*;\nENV VERSION=master\nENV PKG_VERSION=0.0.1\nENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64/\nENV DEBFILE=\"sdfs_${PKG_VERSION}_amd64.deb\"\nRUN echo $DEBFILE\nWORKDIR \"/sdfs-build/install-packages/\"\nRUN rm -rf deb/usr/share/sdfs/lib/*\nWORKDIR \"/sdfs-build/\"\nRUN mvn package\n\nRUN cp target/lib/*.jar install-packages/deb/usr/share/sdfs/lib/ && \\\n    cp target/sdfs-${VERSION}.jar install-packages/deb/usr/share/sdfs/lib/sdfs.jar && \\\n    cp target/sdfs-${VERSION}.jar install-packages\nWORKDIR \"/sdfs-build/install-packages/windows\"\nRUN makensis -V4 -DVERSION=${PKG_VERSION} -DJARVERSION=${VERSION} sdfs_win.nsi\nWORKDIR \"/sdfs-build/install-packages/\"\nRUN rm -rf *.deb *.rpm && \\\n    cp ../src/readme.txt deb/usr/share/sdfs/ && \\\n    fpm -s dir -t deb -n sdfs -v $PKG_VERSION -C deb/ -d fuse --url http://www.opendedup.org -d libxml2 -d libxml2-utils -m sam.silverberg@gmail.com --vendor datishsystems --description \"SDFS is an inline deduplication based filesystem\" && \\\n    fpm -s dir -t rpm -n sdfs -v $PKG_VERSION -C deb/ -d fuse --url http://www.opendedup.org -d libxml2 -m sam.silverberg@gmail.com --vendor datishsystems --description \"SDFS is an inline deduplication based filesystem\"\nWORKDIR \"/sdfs-build/install-packages/\"\nRUN echo \"tar cvf - sdfs-${VERSION}-jar-with-dependencies.jar sdfs_${PKG_VERSION}_amd64.deb sdfs-${PKG_VERSION}-1.x86_64.rpm SDFS-${PKG_VERSION}-Setup.exe\" > export_data.sh && \\\n    chmod 700 export_data.sh\nENTRYPOINT tar cvf - sdfs-${VERSION}.jar sdfs_${PKG_VERSION}_amd64.deb sdfs-${PKG_VERSION}-1.x86_64.rpm\nFROM ubuntu:20.04\nENV VERSION=master\nLABEL email=samsilverberg@google.com\nLABEL author=\"Sam Silverberg\"\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt update && DEBIAN_FRONTEND=\"noninteractive\" apt upgrade -y && DEBIAN_FRONTEND=\"noninteractive\" apt --no-install-recommends install -y \\\n\t\topenjdk-11-jdk \\\n        maven \\\n        libfuse2 \\\n        ssh \\\n        openssh-server \\\n        jsvc \\\n        libxml2 \\\n        ruby-dev \\\n        build-essential \\\n        libxml2-utils \\\n        fuse && rm -rf /var/lib/apt/lists/*;\nWORKDIR \"/tmp\"\nCOPY --from=builder /sdfs-build/install-packages/sdfs_${VERSION}_amd64.deb .\nRUN dpkg -i sdfs_${VERSION}_amd64.deb && \\\n    rm sdfs_${VERSION}_amd64.deb\nRUN echo \"* hard nofile 65535\" >> /etc/security/limits.conf\nRUN\techo \"* soft nofile 65535\" >> /etc/security/limits.conf\nCOPY --from=builder /sdfs-build/install-packages/docker_run.sh /usr/share/sdfs/docker_run.sh\nRUN chmod 700 /usr/share/sdfs/docker_run.sh\nENV DOCKER_DETATCH=\"-nodetach\"\nENV CAPACITY=1TB\n\nCMD [\"/usr/share/sdfs/docker_run.sh\"]"
}