{
  "startTime": 1674216070880,
  "endTime": 1674216072016,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 12,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 12,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 5,
        "columnEnd": 92
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 12,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 160
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 12,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\nFROM centos:centos7\n\nRUN echo root:changeme | chpasswd\n\n## Install some basic utilities that aren't in the default image\nRUN yum clean all -y && yum update -y\nRUN yum -y install vim wget rpm-build sudo which telnet tar openssh-server openssh-clients ntp git python-setuptools python-devel httpd java-1.8.0-openjdk-devel && rm -rf /var/cache/yum\nRUN yum -q -y install \\\n             curl \\\n             gcc \\\n             gcc-c++ \\\n             git \\\n             java-1.8.0-openjdk-devel \\\n             make \\\n             openssl \\\n             python \\\n             python-devel \\\n             python-setuptools \\\n             rpm-build \\\n             which \\\n             zip \\\n             unzip \\\n             python-setuptools \\\n             rpm-build \\\n             which \\\n             autoconf automake cppunit-devel ant libtool \\\n             fuse-devel fuse cmake fuse-libs lzo-devel openssl-devel \\\n             cyrus-sasl-devel  cyrus-sasl-gssapi krb5-devel openldap-devel  sqlite-devel \\\n           && yum clean all && rm -rf /var/cache/yum\n# phantomjs dependency\nRUN yum -y install fontconfig freetype libfreetype.so.6 libfontconfig.so.1 libstdc++.so.6 && rm -rf /var/cache/yum\nRUN rpm -e --nodeps --justdb glibc-common\nRUN yum -y install glibc-common && rm -rf /var/cache/yum\n\n\nWORKDIR     /opt\nRUN curl -f -OL https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.zip\nRUN         unzip protobuf-2.5.0.zip\nWORKDIR      /opt/protobuf-2.5.0\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN          make\nRUN         make install\nRUN        protoc --version\n\nWORKDIR     /opt\nRUN curl -f -OL https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3.tar.gz\nRUN tar -xzf cmake-3.15.3.tar.gz && rm cmake-3.15.3.tar.gz\nWORKDIR     /opt/cmake-3.15.3\nRUN         ./bootstrap && make && make install\n\n\n\nENV HOME /root\nENV JAVA_HOME /usr/lib/jvm/java\n\n#Install Maven\nRUN mkdir -p /opt/maven\nWORKDIR /opt/maven\nRUN wget https://mirrors.standaloneinstaller.com/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz\nRUN tar -xvzf /opt/maven/apache-maven-3.6.3-bin.tar.gz && rm /opt/maven/apache-maven-3.6.3-bin.tar.gz\nRUN rm -rf /opt/maven/apache-maven-3.6.3-bin.tar.gz\nENV M2_HOME /opt/maven/apache-maven-3.6.3\nENV MAVEN_OPTS -Xmx2048m -XX:MaxPermSize=256m\nENV PATH $PATH:$JAVA_HOME/bin:$M2_HOME/bin\n\n\n# SSH key\nRUN ssh-keygen -f /root/.ssh/id_rsa -t rsa -N ''\nRUN cat /root/.ssh/id_rsa.pub > /root/.ssh/authorized_keys\nRUN chmod 600 /root/.ssh/authorized_keys\nRUN sed -ri 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config\n\n#To allow bower install behind proxy. See https://github.com/bower/bower/issues/731\nRUN git config --global url.\"https://\".insteadOf git://\n\n# Install python, nodejs and npm\nRUN yum -y install epel-release && rm -rf /var/cache/yum\n\nWORKDIR '/tmp'\nENV NPM_CONFIG_LOGLEVEL info\nENV NODE_VERSION 12.14.0\nRUN yum install -y xz \\\n  && curl -f -SLO \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz\" \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-x64.tar.xz\" -C /usr/local --strip-components=1 \\\n  && rm -f \"/node-v$NODE_VERSION-linux-x64.tar.xz\" && rm -rf /var/cache/yum\nRUN node -v\nRUN npm install -g bower yarn && npm cache clean --force;\n\n# Once run some mvn commands to cache .m2/repository\nWORKDIR /tmp\n# RUN git clone https://github.com/apache/ambari.git\n# WORKDIR /tmp/ambari\n\n# RUN mvn -B -X clean install package rpm:rpm -DskipTests -Dpython.ver=\"python >= 2.6\" -Preplaceurl\n\n# # clean git code because I want to use the one on local filesystem.\n# WORKDIR /tmp\n# RUN rm -rf /tmp/ambari\n\n# RUN mkdir -p /tmp/ambari-build-docker/blueprints\n# ADD ./blueprints /tmp/ambari-build-docker/blueprints\n# RUN mkdir -p /tmp/ambari-build-docker/bin\n# ADD ./bin /tmp/ambari-build-docker/bin\n\nWORKDIR /tmp\n\n"
}