diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clemlabprojects/ambari/dev-support/docker/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clemlabprojects/ambari/dev-support/docker/docker/Dockerfile/repaired.Dockerfile
index 3e93d92..d311fc0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/clemlabprojects/ambari/dev-support/docker/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/clemlabprojects/ambari/dev-support/docker/docker/Dockerfile/repaired.Dockerfile
@@ -16,7 +16,7 @@ RUN echo root:changeme | chpasswd
 
 ## Install some basic utilities that aren't in the default image
 RUN yum clean all -y && yum update -y
-RUN yum -y install vim wget rpm-build sudo which telnet tar openssh-server openssh-clients ntp git python-setuptools python-devel httpd java-1.8.0-openjdk-devel
+RUN yum -y install vim wget rpm-build sudo which telnet tar openssh-server openssh-clients ntp git python-setuptools python-devel httpd java-1.8.0-openjdk-devel && rm -rf /var/cache/yum
 RUN yum -q -y install \
              curl \
              gcc \
@@ -38,25 +38,25 @@ RUN yum -q -y install \
              autoconf automake cppunit-devel ant libtool \
              fuse-devel fuse cmake fuse-libs lzo-devel openssl-devel \
              cyrus-sasl-devel  cyrus-sasl-gssapi krb5-devel openldap-devel  sqlite-devel \
-           && yum clean all
+           && yum clean all && rm -rf /var/cache/yum
 # phantomjs dependency
-RUN yum -y install fontconfig freetype libfreetype.so.6 libfontconfig.so.1 libstdc++.so.6
+RUN yum -y install fontconfig freetype libfreetype.so.6 libfontconfig.so.1 libstdc++.so.6 && rm -rf /var/cache/yum
 RUN rpm -e --nodeps --justdb glibc-common
-RUN yum -y install glibc-common
+RUN yum -y install glibc-common && rm -rf /var/cache/yum
 
 
 WORKDIR     /opt
-RUN         curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.zip
+RUN curl -f -OL https://github.com/protocolbuffers/protobuf/releases/download/v2.5.0/protobuf-2.5.0.zip
 RUN         unzip protobuf-2.5.0.zip
 WORKDIR      /opt/protobuf-2.5.0
-RUN         ./configure
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
 RUN          make
 RUN         make install
 RUN        protoc --version
 
 WORKDIR     /opt
-RUN         curl -OL https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3.tar.gz
-RUN         tar -xzf cmake-3.15.3.tar.gz
+RUN curl -f -OL https://github.com/Kitware/CMake/releases/download/v3.15.3/cmake-3.15.3.tar.gz
+RUN tar -xzf cmake-3.15.3.tar.gz && rm cmake-3.15.3.tar.gz
 WORKDIR     /opt/cmake-3.15.3
 RUN         ./bootstrap && make && make install
 
@@ -68,8 +68,8 @@ ENV JAVA_HOME /usr/lib/jvm/java
 #Install Maven
 RUN mkdir -p /opt/maven
 WORKDIR /opt/maven
-RUN wget http://mirrors.standaloneinstaller.com/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
-RUN tar -xvzf /opt/maven/apache-maven-3.6.3-bin.tar.gz
+RUN wget https://mirrors.standaloneinstaller.com/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz
+RUN tar -xvzf /opt/maven/apache-maven-3.6.3-bin.tar.gz && rm /opt/maven/apache-maven-3.6.3-bin.tar.gz
 RUN rm -rf /opt/maven/apache-maven-3.6.3-bin.tar.gz
 ENV M2_HOME /opt/maven/apache-maven-3.6.3
 ENV MAVEN_OPTS -Xmx2048m -XX:MaxPermSize=256m
@@ -86,17 +86,17 @@ RUN sed -ri 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config
 RUN git config --global url."https://".insteadOf git://
 
 # Install python, nodejs and npm
-RUN yum -y install epel-release
+RUN yum -y install epel-release && rm -rf /var/cache/yum
 
 WORKDIR '/tmp'
 ENV NPM_CONFIG_LOGLEVEL info
 ENV NODE_VERSION 12.14.0
 RUN yum install -y xz \
-  && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz" \
+  && curl -f -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz" \
   && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1 \
-  && rm -f "/node-v$NODE_VERSION-linux-x64.tar.xz"
+  && rm -f "/node-v$NODE_VERSION-linux-x64.tar.xz" && rm -rf /var/cache/yum
 RUN node -v
-RUN npm install -g bower yarn
+RUN npm install -g bower yarn && npm cache clean --force;
 
 # Once run some mvn commands to cache .m2/repository
 WORKDIR /tmp