{
  "startTime": 1674246767132,
  "endTime": 1674246767763,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 33,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# KuberDock - is a platform that allows users to run applications using Docker\n# container images and create SaaS / PaaS based on these applications.\n# Copyright (C) 2017 Cloud Linux INC\n#\n# This file is part of KuberDock.\n#\n# KuberDock is free software; you can redistribute it and/or\n# modify it under the terms of the GNU General Public License\n# as published by the Free Software Foundation; either version 2\n# of the License, or (at your option) any later version.\n#\n# KuberDock is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with KuberDock; if not, see <http://www.gnu.org/licenses/>.\n#\n\nFROM centos:7\n\nRUN yum -y install epel-release && \\\n    yum -y update && \\\n    yum -y install openssl-devel libffi-devel python-pip python-devel postgresql-contrib postgresql-devel gcc nmap && \\\n    yum clean all && rm -rf /var/cache/yum\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir virtualenv\n\n# Pre-build test env. Before test run requirements are checked again.\n# It is much faster to check/install-missing than full install.\nCOPY requirements.txt requirements-dev.txt /\n\n# FIXME http://stackoverflow.com/questions/38836293/make-python-libraries-installed-with-requirements-txt-immediately-available\nRUN cd / && \\\n    virtualenv venv && \\\n    source venv/bin/activate && \\\n    pip install --no-cache-dir requests==2.4.3 && \\\n    pip install --no-cache-dir -r requirements.txt -r && \\\n    rm -f requirements.txt requirements-dev.txt\n\n# Rebuild & push with (always bump X):\n# docker build -t lobur/centos7-test-base:vX -f Dockerfile.centos7-test-base --rm=true --no-cache=true --pull .\n# docker push lobur/centos7-test-base:vX\n\n# Always bump X, including Dockerfile.test, this is\n# needed to make sure the new image gets pulled on Jenkins\n# If you are not lobur use your own hub.docker.com account\n"
}