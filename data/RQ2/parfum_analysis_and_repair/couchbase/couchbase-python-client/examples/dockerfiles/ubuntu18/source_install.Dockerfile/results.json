{
  "startTime": 1674255866722,
  "endTime": 1674255867565,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# This is an *unsupported* and *unofficial* Dockerfile.  The purpose of this Dockerfile is to demonstrate the steps\n# required to have a working build system to build/install the Couchbase Python 4.x SDK.  No optimization has been\n# done.\n#\n# Build System checklist:\n#   - Compiler that supports C++ 17\n#   - CMake >= 3.18\n#   - OpenSSL >= 1.1.1\n#   - Python >= 3.7\n#\n# The 4.0.2 release of the Couchbase Python SDK provides manylinux wheels.  A Python package wheel provides a pre-built\n# binary that enables significantly faster install and users do not need to worry about setting up the appropriate\n# build system (i.e. no need to install/update compiler and/or CMake).\n#\n# **NOTE:** All versions of the 4.x Python SDK, require OpenSSL >= 1.1.1 and Python >= 3.7\n#\n# Example usage:\n#   build:\n#       docker build -t <name of image> -f <path including Dockerfile> <path to Dockerfile directory>\n#   run:\n#       docker run --rm --name <name of running container> -it <name of image> /bin/bash\n#\n\nFROM --platform=linux/amd64 ubuntu:18.04\n\n# can update to a different timezone if desired\nENV TZ=America/Chicago\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# Update the following ARGs to desired specification\n\n# CMake must be >= 3.18\nARG CMAKE_VERSION=3.19.8\n# Python must be >= 3.7\nARG PYTHON_VERSION=3.8.10\n# NOTE:  the Python version chosen will impact what python executable to use when pip\n#           installing packages (see commands at bottom)\nARG PYTHON_EXE=python3.8\n# OpenSSL must be >= 1.1.1\nARG OPENSSL_VERSION=1.1.1l\nARG COUCHBASE_PYTHON_SDK=4.0.2\n\n# basic setup\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yq git-all python3-dev python3-pip \\\n    python3-setuptools build-essential libssl-dev make zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# OPTIONAL: useful tools\nRUN apt-get install --no-install-recommends -y wget vim zip unzip && rm -rf /var/lib/apt/lists/*;\n# OPTIONAL: more useful tools\n# RUN apt-get install -y lsof lshw sysstat net-tools\n\n# update GCC\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yq software-properties-common && \\\n    add-apt-repository ppa:ubuntu-toolchain-r/test -y && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -yq gcc-9 g++-9 && rm -rf /var/lib/apt/lists/*;\n\nENV CC=/usr/bin/gcc-9 \\\n    CXX=/usr/bin/g++-9\n\n# install/update CMake\nRUN cd /usr/src && \\\n    wget https://github.com/Kitware/CMake/releases/download/v$CMAKE_VERSION/cmake-$CMAKE_VERSION.tar.gz && \\\n    tar -xvf cmake-$CMAKE_VERSION.tar.gz && cd cmake-$CMAKE_VERSION && \\\n    ./bootstrap && \\\n    make && make install && rm cmake-$CMAKE_VERSION.tar.gz\n\n# OPTIONAL:  update OpenSSL\n#   - Ubuntu 18.04 *should* come with a compatible version of OpenSSL (>= v1.1.1)\n\n# RUN apt-get install -y build-essential checkinstall\n# RUN cd /usr/src && \\\n#     wget https://www.openssl.org/source/old/1.1.1/openssl-$OPENSSL_VERSION.tar.gz && \\\n#     tar -xvf openssl-$OPENSSL_VERSION.tar.gz && \\\n#     mv openssl-$OPENSSL_VERSION openssl && \\\n#     cd openssl && \\\n#     ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl shared zlib && \\\n#     make -j4 && \\\n#     make install && \\\n#     echo \"/usr/local/openssl/lib\" > /etc/ld.so.conf.d/openssl-$OPENSSL_VERSION.conf && \\\n#     ldconfig -v && \\\n#     mv /usr/bin/openssl /usr/bin/openssl-backup && \\\n#     mv /usr/bin/c_rehash /usr/bin/c_rehash-backup\n\n# # install new Python version\nRUN apt-get install --no-install-recommends -y libffi-dev && rm -rf /var/lib/apt/lists/*;\nRUN cd /usr/src && \\\n    wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz && \\\n    tar -xf Python-$PYTHON_VERSION.tgz && \\\n    cd Python-$PYTHON_VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && \\\n    make altinstall && rm Python-$PYTHON_VERSION.tgz\n\n# Install Couchbase Python SDK 4.x\nRUN $PYTHON_EXE -m pip install --upgrade pip setuptools wheel\n# To do a source install:\n#   - make sure the build system has been setup appropriately\n#   - if installed/updated OpenSSL, might need to set PYCBC_OPENSSL_DIR\n#   - use the --no-binary option to force an install from source\nRUN $PYTHON_EXE -m pip install couchbase==$COUCHBASE_PYTHON_SDK --no-binary couchbase\n\n# cleanup\nRUN apt-get autoremove && apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}