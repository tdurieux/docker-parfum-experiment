{
  "startTime": 1674251611621,
  "endTime": 1674251612225,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nMAINTAINER Korrigan Clark <korrigan.clark@couchbase.com>\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    PATH=\"/opt/pyenv/shims:/opt/pyenv/bin:$PATH\" \\\n    PYENV_ROOT=\"/opt/pyenv\" \\\n    PYENV_SHELL=\"bash\"\n\nRUN apt update && apt upgrade -y\nRUN apt update\nRUN apt install --no-install-recommends -y bash apt-utils make git libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \\\ncurl llvm libncurses5-dev libncursesw5-dev xz-utils tk-dev libffi-dev \\\nliblzma-dev python-openssl software-properties-common libcurl4-gnutls-dev \\\nlibffi-dev libsnappy-dev libssl-dev lsb-core maven openjdk-8-jdk python3 \\\npython-pip python-virtualenv && rm -rf /var/lib/apt/lists/*\n\nCOPY pyenv-version.txt python-versions.txt /\n\nRUN git clone -b `cat /pyenv-version.txt` --single-branch --depth 1 https://github.com/pyenv/pyenv.git $PYENV_ROOT \\\n    && for version in `cat /python-versions.txt`; do pyenv install $version; done \\\n    && pyenv global `cat /python-versions.txt` \\\n    && find $PYENV_ROOT/versions -type d '(' -name '__pycache__' -o -name 'test' -o -name 'tests' ')' -exec rm -rf '{}' + \\\n    && find $PYENV_ROOT/versions -type f '(' -name '*.pyo' -o -name '*.exe' ')' -exec rm -f '{}' + \\\n && rm -rf /tmp/*\n\nWORKDIR /opt\nRUN git clone https://github.com/couchbase/perfrunner.git\nWORKDIR /opt/perfrunner\nRUN make docker-cloud-worker\n\n\n"
}