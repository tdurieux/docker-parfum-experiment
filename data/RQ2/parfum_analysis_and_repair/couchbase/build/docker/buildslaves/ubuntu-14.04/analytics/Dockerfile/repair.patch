diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/couchbase/build/docker/buildslaves/ubuntu-14.04/analytics/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/couchbase/build/docker/buildslaves/ubuntu-14.04/analytics/Dockerfile/repaired.Dockerfile
index 1fa399b..c31d9cc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/couchbase/build/docker/buildslaves/ubuntu-14.04/analytics/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/couchbase/build/docker/buildslaves/ubuntu-14.04/analytics/Dockerfile/repaired.Dockerfile
@@ -10,9 +10,9 @@ USER root
 
 # Install SSH server (required to serve as Jenkins slave).
 RUN apt-get update && \
-    apt-get install -y openssh-server curl && \
+    apt-get install --no-install-recommends -y openssh-server curl && \
     rm -f /var/cache/apt/archives/*.deb && \
-    mkdir /var/run/sshd # update 2
+    mkdir /var/run/sshd && rm -rf /var/lib/apt/lists/*; # update 2
 
 # Create couchbase user with password-less sudo privs
 RUN useradd couchbase -G sudo -m -s /bin/bash && \
@@ -22,35 +22,35 @@ RUN useradd couchbase -G sudo -m -s /bin/bash && \
 # Oracle JDK.
 RUN mkdir /tmp/deploy && \
     cd /tmp/deploy && \
-    curl -L --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" \
-    http://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz -o jdk.tgz && \
+    curl -f -L --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" \
+    https://download.oracle.com/otn-pub/java/jdk/8u91-b14/jdk-8u91-linux-x64.tar.gz -o jdk.tgz && \
     cd /usr/local && \
     tar xvzf /tmp/deploy/jdk.tgz && \
     ln -s jdk* java && \
     for file in /usr/local/java/bin/*; do ln -s $file /usr/local/bin; done && \
-    rm -rf /tmp/deploy
+    rm -rf /tmp/deploy && rm /tmp/deploy/jdk.tgz
 ENV JAVA_HOME=/usr/local/java
 
 # Maven.
 RUN mkdir /tmp/deploy && \
     cd /tmp/deploy && \
-    curl -L http://mirror.cogentco.com/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz \
+    curl -f -L https://mirror.cogentco.com/pub/apache/maven/maven-3/3.3.9/binaries/apache-maven-3.3.9-bin.tar.gz \
        -o maven.tar.gz && \
     cd /usr/local && \
     tar xzf /tmp/deploy/maven.tar.gz && \
     ln -s /usr/local/apache-maven-3.3.9/bin/mvn /usr/local/bin/mvn && \
-    rm -rf /tmp/deploy
+    rm -rf /tmp/deploy && rm /tmp/deploy/maven.tar.gz
 
 # CMake (for cbq).
 RUN mkdir /tmp/deploy && \
-    curl https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.sh -o /tmp/deploy/cmake.sh && \
+    curl -f https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.sh -o /tmp/deploy/cmake.sh && \
     (echo y ; echo n) | sh /tmp/deploy/cmake.sh --prefix=/usr/local && \
     rm -rf /tmp/deploy
 
 # C build essentials (required by C callouts from CBQ Go code).
 RUN apt-get update && \
-    apt-get install -y make gcc && \
-    rm -f /var/cache/apt/archives/*.deb
+    apt-get install --no-install-recommends -y make gcc && \
+    rm -f /var/cache/apt/archives/*.deb && rm -rf /var/lib/apt/lists/*;
 
 # Expose SSH daemon and run our builder startup script
 EXPOSE 22