{
  "startTime": 1674246541006,
  "endTime": 1674246541970,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t mgrast/shock .\n# docker run --rm --name test -ti mgrast/shock /bin/ash\n\n# Note the setcap Linux command will only succeed if run as root.\n# This allows the shock-server to bind to port 80 if desired.\n#setcap 'cap_net_bind_service=+ep' bin/shock-server\n\nFROM golang:alpine\n\nENV PYTHONUNBUFFERED=1\n\nRUN apk update && apk add --no-cache git curl && \\\n    echo \"**** install Python ****\" && \\\n    apk add --no-cache python3 && \\\n    if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi && \\\n\n    echo \"**** install pip ****\" && \\\n    python3 -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --no-cache --upgrade pip setuptools wheel && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    pip3 install --no-cache-dir boto3\n\nENV DIR=/go/src/github.com/MG-RAST/Shock\nWORKDIR /go/bin\n\nCOPY . /go/src/github.com/MG-RAST/Shock\n\nRUN mkdir -p /var/log/shock /usr/local/shock/data ${DIR}\n\n# set version\n#RUN cd ${DIR} && \\\n#  VERSION=$(cat VERSION) && \\\n#  sed -i \"s/\\[% VERSION %\\]/${VERSION}/\" shock-server/conf/conf.go\n\n# compile\nRUN cd ${DIR} && \\\n     go get github.com/MG-RAST/go-shock-client  &&\\\n     ./compile-server.sh\n\nRUN mkdir -p /etc/shock.d/ ; touch /etc/shock.d/shock-server.conf\nCMD [\"/go/bin/shock-server\"]\n"
}