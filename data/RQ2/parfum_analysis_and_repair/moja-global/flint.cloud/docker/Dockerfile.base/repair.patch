diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/moja-global/flint.cloud/docker/Dockerfile.base b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/moja-global/flint.cloud/docker/Dockerfile.base/repaired.Dockerfile
index 522c6d7..ea320dd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/moja-global/flint.cloud/docker/Dockerfile.base
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/moja-global/flint.cloud/docker/Dockerfile.base/repaired.Dockerfile
@@ -43,7 +43,7 @@ RUN apt-get update -y \
       libspatialite-dev libsqlite3-dev sqlite3 \
       libpq-dev postgresql-client-12 postgresql-server-dev-12 postgis\
     && apt-get -y autoremove \
-  	&& apt-get clean
+   && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y
 
@@ -81,7 +81,7 @@ RUN wget -q https://github.com/pocoproject/poco/archive/refs/tags/poco-${POCO_VE
     && make --quiet -j $NUM_CPU \
     && make --quiet install/strip \
     && make clean \
-    && cd ..
+    && cd .. && rm poco-${POCO_VERSION}-release.tar.gz
 
 # build user-config.jam files
 RUN echo "using python : 3.6 : /usr ;" > ~/user-config.jam
@@ -93,7 +93,7 @@ RUN wget -q https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION_D
     && ./bootstrap.sh --prefix=$ROOTDIR \
     && ./b2 -d0 -j $NUM_CPU cxxstd=14 install variant=release link=shared  \
     && ./b2 clean \
-    && cd $ROOTDIR/src
+    && cd $ROOTDIR/src && rm boost_${BOOST_VERSION}.tar.bz2
 
 # Download and install FMT formatting library
 RUN wget -q https://github.com/fmtlib/fmt/archive/${FMT_VERSION}.tar.gz \
@@ -107,12 +107,12 @@ RUN wget -q https://github.com/fmtlib/fmt/archive/${FMT_VERSION}.tar.gz \
             -DFMT_TEST=OFF . \
     && make --quiet -j $NUM_CPU install/strip \
     && make clean \
-    && cd $ROOTDIR/src
+    && cd $ROOTDIR/src && rm ${FMT_VERSION}.tar.gz
 
 # Download and install GDAL
-RUN wget -q http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \
+RUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \
     && tar -xvf gdal-${GDAL_VERSION}.tar.gz && cd gdal-${GDAL_VERSION} \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --without-libtool \
         --with-hide-internal-symbols \
         --with-python \
@@ -127,7 +127,7 @@ RUN wget -q http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.
     && make --quiet -j $NUM_CPU \
     && make install \
     && make clean \
-    && cd $ROOTDIR/src
+    && cd $ROOTDIR/src && rm gdal-${GDAL_VERSION}.tar.gz
 
 RUN strip -s $ROOTDIR/lib/libgdal.so
 RUN for i in $ROOTDIR/lib/python3/dist-packages/osgeo/*.so; do strip -s $i 2>/dev/null || /bin/true; done