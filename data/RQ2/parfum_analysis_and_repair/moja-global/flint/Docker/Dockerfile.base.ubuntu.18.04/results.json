{
  "startTime": 1674253124258,
  "endTime": 1674253125324,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 121,
        "lineEnd": 124,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 38,
        "columnEnd": 114
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 35,
        "columnStart": 25,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ==================================================================================================================\n#\n# Docker to ubuntu 18.04 base image (for required libraries) used by flint docker\n#\n# Building this Docker:\n#   docker build -f Dockerfile.base.ubuntu.18.04 --build-arg NUM_CPU=4 -t moja/baseimage:ubuntu-18.04 .\n#\n# ==================================================================================================================\n\n# Ubuntu 18.04 Bionic Beaver\nFROM ubuntu@sha256:9b1702dcfe32c873a770a32cfd306dd7fc1c4fd134adfb783db68defc8894b3c\n\nLABEL maintainer=\"info@moja.global\"\n\nARG DEBIAN_FRONTEND=noninteractive\n\nENV ROOTDIR /usr/local\nENV GDAL_VERSION 2.4.1\nENV CMAKE_VERSION 3.15.0\nENV POCO_VERSION 1.9.2\nENV BOOST_VERSION 1_72_0\nENV BOOST_VERSION_DOT 1.72.0\nENV FMT_VERSION 6.1.2\nENV SQLITE_VERSION 3.31.1\n\nWORKDIR $ROOTDIR/\n\n# Install basic dependencies\nRUN apt-get update -y && apt-get install -y --fix-missing --no-install-recommends \\\n    software-properties-common build-essential ca-certificates \\\n    libtool automake zlib1g-dev libspatialite-dev pkg-config libsqlite3-dev sqlite3 \\\n\tpython3-dev python3-numpy python3-pip openssl libssl-dev libpq-dev \\\n    libcurl4-gnutls-dev libproj-dev libxml2-dev libexpat-dev libxerces-c-dev \\\n    libgeos-dev libpoppler-dev \\\n    git wget bash-completion nasm \\\n    postgresql-client-10 postgresql-server-dev-10 \\\n    && apt-get -y autoremove \\\n\t&& apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# set environment variables\nENV PATH $ROOTDIR/bin:$PATH\nENV LD_LIBRARY_PATH $ROOTDIR/lib:$LD_LIBRARY_PATH\nENV PYTHONPATH $ROOTDIR/lib:$PYTHONPATH\n\nARG NUM_CPU=1\n\nWORKDIR $ROOTDIR/src\n\nRUN wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}.tar.gz \\\n    && tar xzf cmake-${CMAKE_VERSION}.tar.gz \\\n    && cd cmake-${CMAKE_VERSION} \\\n    && ./bootstrap --system-curl --parallel=$NUM_CPU \\\n\t&& make --quiet install \\\n\t&& make clean \\\n    && cd .. && rm cmake-${CMAKE_VERSION}.tar.gz\n\n# RUN wget https://github.com/azadkuh/sqlite-amalgamation/archive/${SQLITE_VERSION}.tar.gz \\\n#     && tar -xzf ${SQLITE_VERSION}.tar.gz && mkdir -p sqlite-amalgamation-${SQLITE_VERSION}/build && cd sqlite-amalgamation-${SQLITE_VERSION}/build  \\\n#     && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=RELEASE \\\n# \t\t\t-DCMAKE_POSITION_INDEPENDENT_CODE:BOOL=ON \\\n#             -DBUILD_SHARED_LIBS=ON \\\n# \t\t\t-DCMAKE_INSTALL_PREFIX=$ROOTDIR .. \\\n#     && make --quiet -j $NUM_CPU install/strip \\\n#     && make clean \\\n#     && cd $ROOTDIR/src\n\n# # fix sqlite include location\n# RUN mv $ROOTDIR/include/sqlite3/sqlite3.h  $ROOTDIR/include\n\nRUN wget https://pocoproject.org/releases/poco-${POCO_VERSION}/poco-${POCO_VERSION}-all.tar.gz \\\n    && tar -xzf poco-${POCO_VERSION}-all.tar.gz && mkdir poco-${POCO_VERSION}-all/cmake-build && cd poco-${POCO_VERSION}-all/cmake-build \\\n    &&  cmake -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$ROOTDIR \\\n            -DPOCO_UNBUNDLED=ON \\\n            -DPOCO_STATIC=OFF \\\n            -DENABLE_ENCODINGS=OFF \\\n            -DENABLE_ENCODINGS_COMPILER=OFF \\\n            -DENABLE_XML=OFF \\\n            -DENABLE_JSON=ON \\\n            -DENABLE_MONGODB=OFF \\\n            -DENABLE_REDIS=OFF \\\n            -DENABLE_PDF=OFF \\\n            -DENABLE_UTIL=OFF \\\n            -DENABLE_NET=OFF \\\n            -DENABLE_NETSSL=OFF \\\n            -DENABLE_CRYPTO=OFF \\\n            -DENABLE_DATA=ON \\\n            -DENABLE_DATA_SQLITE=ON \\\n            -DENABLE_DATA_MYSQL=OFF \\\n            -DENABLE_DATA_ODBC=OFF \\\n            -DENABLE_SEVENZIP=OFF \\\n            -DENABLE_ZIP=OFF \\\n            -DENABLE_PAGECOMPILER=OFF \\\n            -DENABLE_PAGECOMPILER_FILE2PAGE=OFF \\\n            -DENABLE_TESTS:BOOL=OFF .. \\\n\t&& make --quiet -j $NUM_CPU \\\n    && make --quiet install/strip \\\n    && make clean \\\n    && cd $ROOTDIR/src && rm poco-${POCO_VERSION}-all.tar.gz\n\n# build user-config.jam files\nRUN echo \"using python : 3.6 : /usr ;\" > ~/user-config.jam\n\nRUN wget https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boost_${BOOST_VERSION}.tar.bz2 \\\n    && tar --bzip2 -xf boost_${BOOST_VERSION}.tar.bz2 && cd boost_${BOOST_VERSION}  \\\n    && ./bootstrap.sh --prefix=$ROOTDIR \\\n    && ./b2 -d0 -j $NUM_CPU cxxstd=14 install variant=release link=shared  \\\n    && ./b2 clean \\\n    && cd $ROOTDIR/src && rm boost_${BOOST_VERSION}.tar.bz2\n\nRUN wget https://github.com/fmtlib/fmt/archive/${FMT_VERSION}.tar.gz \\\n    && mkdir libfmt-${FMT_VERSION} && tar -xzf ${FMT_VERSION}.tar.gz -C libfmt-${FMT_VERSION} --strip-components=1 &&  cd libfmt-${FMT_VERSION} \\\n    && cmake -G\"Unix Makefiles\" -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$ROOTDIR \\\n            -DFMT_DOC=OFF \\\n            -DFMT_TEST=OFF . \\\n    && make --quiet -j $NUM_CPU install/strip \\\n    && make clean \\\n    && cd $ROOTDIR/src && rm ${FMT_VERSION}.tar.gz\n\n\nRUN wget https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \\\n    && tar -xvf gdal-${GDAL_VERSION}.tar.gz && cd gdal-${GDAL_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-libtool --with-hide-internal-symbols \\\n        --with-python --with-spatialite --with-pg --with-curl --prefix=$ROOTDIR \\\n        --with-libtiff=internal --with-rename-internal-libtiff-symbols \\\n        --with-geotiff=internal --with-rename-internal-libgeotiff-symbols \\\n    && make --quiet -j $NUM_CPU \\\n    && make install \\\n    && make clean \\\n    && cd $ROOTDIR/src && rm gdal-${GDAL_VERSION}.tar.gz\nRUN strip -s $ROOTDIR/lib/libgdal.so\nRUN for i in $ROOTDIR/lib/python3/dist-packages/osgeo/*.so; do strip -s $i 2>/dev/null || /bin/true; done\nRUN strip -s $ROOTDIR/bin/gdal_contour && strip -s $ROOTDIR/bin/gdal_grid \\\n    && strip -s $ROOTDIR/bin/gdal_rasterize && strip -s $ROOTDIR/bin/gdal_translate && strip -s $ROOTDIR/bin/gdaladdo \\\n    && strip -s $ROOTDIR/bin/gdalbuildvrt && strip -s $ROOTDIR/bin/gdaldem && strip -s $ROOTDIR/bin/gdalenhance \\\n    && strip -s $ROOTDIR/bin/gdalinfo && strip -s $ROOTDIR/bin/gdallocationinfo && strip -s $ROOTDIR/bin/gdalmanage \\\n    && strip -s $ROOTDIR/bin/gdalserver && strip -s $ROOTDIR/bin/gdalsrsinfo && strip -s $ROOTDIR/bin/gdaltindex \\\n    && strip -s $ROOTDIR/bin/gdaltransform && strip -s $ROOTDIR/bin/gdalwarp && strip -s $ROOTDIR/bin/gnmanalyse \\\n    && strip -s $ROOTDIR/bin/gnmmanage && strip -s $ROOTDIR/bin/nearblack && strip -s $ROOTDIR/bin/ogr2ogr \\\n    && strip -s $ROOTDIR/bin/ogrinfo && strip -s $ROOTDIR/bin/ogrlineref && strip -s $ROOTDIR/bin/ogrtindex \\\n    && strip -s $ROOTDIR/bin/testepsg\n\nENV CURL_CA_BUNDLE /etc/ssl/certs/ca-certificates.crt\nENV GDAL_DATA=/usr/local/share/gdal\nENV GDAL_HTTP_VERSION 2\n\nRUN apt-get update -y \\\n    && apt-get remove -y --purge build-essential \\\n    && cd $ROOTDIR/src/gdal-${GDAL_VERSION}/swig/python \\\n    && python3 setup.py build \\\n    && python3 setup.py install\n\nRUN ldconfig\nRUN rm -r $ROOTDIR/src/*\n"
}