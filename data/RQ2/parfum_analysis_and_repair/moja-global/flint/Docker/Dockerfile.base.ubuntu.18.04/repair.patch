diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/moja-global/flint/Docker/Dockerfile.base.ubuntu.18.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/moja-global/flint/Docker/Dockerfile.base.ubuntu.18.04/repaired.Dockerfile
index 58eb49e..c347283 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/moja-global/flint/Docker/Dockerfile.base.ubuntu.18.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/moja-global/flint/Docker/Dockerfile.base.ubuntu.18.04/repaired.Dockerfile
@@ -35,7 +35,7 @@ RUN apt-get update -y && apt-get install -y --fix-missing --no-install-recommend
     git wget bash-completion nasm \
     postgresql-client-10 postgresql-server-dev-10 \
     && apt-get -y autoremove \
-	&& 	apt-get clean
+	&& apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # set environment variables
 ENV PATH $ROOTDIR/bin:$PATH
@@ -52,7 +52,7 @@ RUN wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cm
     && ./bootstrap --system-curl --parallel=$NUM_CPU \
 	&& make --quiet install \
 	&& make clean \
-    && cd ..
+    && cd .. && rm cmake-${CMAKE_VERSION}.tar.gz
 
 # RUN wget https://github.com/azadkuh/sqlite-amalgamation/archive/${SQLITE_VERSION}.tar.gz \
 #     && tar -xzf ${SQLITE_VERSION}.tar.gz && mkdir -p sqlite-amalgamation-${SQLITE_VERSION}/build && cd sqlite-amalgamation-${SQLITE_VERSION}/build  \
@@ -95,7 +95,7 @@ RUN wget https://pocoproject.org/releases/poco-${POCO_VERSION}/poco-${POCO_VERSI
 	&& make --quiet -j $NUM_CPU \
     && make --quiet install/strip \
     && make clean \
-    && cd $ROOTDIR/src
+    && cd $ROOTDIR/src && rm poco-${POCO_VERSION}-all.tar.gz
 
 # build user-config.jam files
 RUN echo "using python : 3.6 : /usr ;" > ~/user-config.jam
@@ -105,7 +105,7 @@ RUN wget https://dl.bintray.com/boostorg/release/${BOOST_VERSION_DOT}/source/boo
     && ./bootstrap.sh --prefix=$ROOTDIR \
     && ./b2 -d0 -j $NUM_CPU cxxstd=14 install variant=release link=shared  \
     && ./b2 clean \
-    && cd $ROOTDIR/src
+    && cd $ROOTDIR/src && rm boost_${BOOST_VERSION}.tar.bz2
 
 RUN wget https://github.com/fmtlib/fmt/archive/${FMT_VERSION}.tar.gz \
     && mkdir libfmt-${FMT_VERSION} && tar -xzf ${FMT_VERSION}.tar.gz -C libfmt-${FMT_VERSION} --strip-components=1 &&  cd libfmt-${FMT_VERSION} \
@@ -114,19 +114,19 @@ RUN wget https://github.com/fmtlib/fmt/archive/${FMT_VERSION}.tar.gz \
             -DFMT_TEST=OFF . \
     && make --quiet -j $NUM_CPU install/strip \
     && make clean \
-    && cd $ROOTDIR/src
+    && cd $ROOTDIR/src && rm ${FMT_VERSION}.tar.gz
 
 
-RUN wget http://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \
+RUN wget https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz \
     && tar -xvf gdal-${GDAL_VERSION}.tar.gz && cd gdal-${GDAL_VERSION} \
-    && ./configure  --without-libtool --with-hide-internal-symbols \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --without-libtool --with-hide-internal-symbols \
         --with-python --with-spatialite --with-pg --with-curl --prefix=$ROOTDIR \
         --with-libtiff=internal --with-rename-internal-libtiff-symbols \
         --with-geotiff=internal --with-rename-internal-libgeotiff-symbols \
     && make --quiet -j $NUM_CPU \
     && make install \
     && make clean \
-    && cd $ROOTDIR/src
+    && cd $ROOTDIR/src && rm gdal-${GDAL_VERSION}.tar.gz
 RUN strip -s $ROOTDIR/lib/libgdal.so
 RUN for i in $ROOTDIR/lib/python3/dist-packages/osgeo/*.so; do strip -s $i 2>/dev/null || /bin/true; done
 RUN strip -s $ROOTDIR/bin/gdal_contour && strip -s $ROOTDIR/bin/gdal_grid \