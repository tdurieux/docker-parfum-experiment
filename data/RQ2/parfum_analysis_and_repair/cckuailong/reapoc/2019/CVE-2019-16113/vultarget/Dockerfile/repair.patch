diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cckuailong/reapoc/2019/CVE-2019-16113/vultarget/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cckuailong/reapoc/2019/CVE-2019-16113/vultarget/Dockerfile/repaired.Dockerfile
index f8d968d..e2582cf 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cckuailong/reapoc/2019/CVE-2019-16113/vultarget/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cckuailong/reapoc/2019/CVE-2019-16113/vultarget/Dockerfile/repaired.Dockerfile
@@ -1,16 +1,16 @@
-FROM ubuntu:xenial 
+FROM ubuntu:xenial
 # 基础镜像是Ubuntu16.04-xenial
 MAINTAINER dxy
 # 设置生成这个镜像的作者
 
-ADD sources.list /etc/apt/ 
+ADD sources.list /etc/apt/
 # 换源
 
 # ENV设置环境变量，无论是后面的其它指令如RUN，还是运行时的应用，都可以直接使用这里定义的环境变量。
 ENV OS_LOCALE="en_US.UTF-8"
 ENV bludit_url https://www.bludit.com/releases/bludit-3-9-2.zip
 
-RUN apt-get update && apt-get install -y locales && locale-gen ${OS_LOCALE} && apt-get install -y apt-transport-https
+RUN apt-get update && apt-get install --no-install-recommends -y locales && locale-gen ${OS_LOCALE} && apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;
 # xenial系统区域语言设置为中文
 
 ENV LANG=${OS_LOCALE} \
@@ -29,8 +29,8 @@ ENV APACHE_CONF_DIR=/etc/apache2 \
 COPY entrypoint.sh /sbin/entrypoint.sh
 # 将本地的文件or文件夹复制到镜像中的指定路径下
 
-RUN	\
-# 在xenial系统中进行基础LAMP环境安装
+RUN \
+
     BUILD_DEPS='software-properties-common python-software-properties' \
     && dpkg-reconfigure locales \
 	&& apt-get install --no-install-recommends -y $BUILD_DEPS \
@@ -41,7 +41,7 @@ RUN	\
         && find /etc/apt/sources.list.d/ -type f -name "ondrej-ubuntu-php-xenial.list" -exec sed -i.bak -r 's#deb(-src)?\s*http(s)?://ppa.launchpad.net#deb\1 https\2://launchpad.proxy.ustclug.org#ig' {} \;\	
         && find /etc/apt/sources.list.d/ -type f -name "ondrej-ubuntu-apache2-xenial.list" -exec sed -i.bak -r 's#deb(-src)?\s*http(s)?://ppa.launchpad.net#deb\1 https\2://launchpad.proxy.ustclug.org#ig' {} \;\
         && apt-get update \
-    && apt-get install -y vim unzip curl apache2 libapache2-mod-php5.6 php5.6-cli php5.6-readline php5.6-mbstring php5.6-intl php5.6-zip php5.6-xml php5.6-json php5.6-curl php5.6-mcrypt php5.6-gd php5.6-pgsql php5.6-mysql php-pear \
+    && apt-get install --no-install-recommends -y vim unzip curl apache2 libapache2-mod-php5.6 php5.6-cli php5.6-readline php5.6-mbstring php5.6-intl php5.6-zip php5.6-xml php5.6-json php5.6-curl php5.6-mcrypt php5.6-gd php5.6-pgsql php5.6-mysql php-pear \
 # Apache settings 网页服务器 设置
     && cp /dev/null ${APACHE_CONF_DIR}/conf-available/other-vhosts-access-log.conf \
     # 清空 other-vhosts-access-log.conf
@@ -55,7 +55,7 @@ RUN	\
     # Composer 是 PHP 的一个依赖管理工具。我们可以在项目中声明所依赖的外部工具库，Composer 会帮你安装这些依赖的库文件，
     # 有了它，我们就可以很轻松的使用一个命令将其他人的优秀代码引用到我们的项目中来。
     # https://www.runoob.com/w3cnote/composer-install-and-usage.html
-	&& curl -sS https://getcomposer.org/installer | php -- --version=1.6.4 --install-dir=/usr/local/bin --filename=composer \
+	&& curl -f -sS https://getcomposer.org/installer | php -- --version=1.6.4 --install-dir=/usr/local/bin --filename=composer \
 # Cleaning 主要是为了减少最终镜像的大小
 	&& apt-get purge -y --auto-remove $BUILD_DEPS \
 	&& apt-get autoremove -y \
@@ -83,14 +83,14 @@ COPY ./configs/php.ini  ${PHP_CONF_DIR}/apache2/conf.d/custom.ini
 
 
 WORKDIR /tmp
-RUN curl -o /tmp/bludit.zip ${bludit_url} \
+RUN curl -f -o /tmp/bludit.zip ${bludit_url} \
     && unzip /tmp/bludit.zip \
     && mkdir /var/www/app/ \
-    && mv bludit-*/* /var/www/app/  \
-    && chmod 755 /var/www/app/bl-content  \
+    && mv bludit-*/* /var/www/app/ \
+    && chmod 755 /var/www/app/bl-content \
     && sed -i "s/'DEBUG_MODE', FALSE/'DEBUG_MODE', TRUE/g" /var/www/app/bl-kernel/boot/init.php \
     #　就是把文件中 的  “原字符”'DEBUG_MODE', FALSE 替换成 “新字符”'DEBUG_MODE', TRUE。
-    && rm -f /tmp/bludit.zip \ 
+    && rm -f /tmp/bludit.zip \
     && chmod 777 /var/www/app \
     && chmod 777 /var/www/app/bl-content　
     #　所有用户都可读可写可执行