diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cckuailong/reapoc/2020/CVE-2020-23342/vultarget/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cckuailong/reapoc/2020/CVE-2020-23342/vultarget/Dockerfile/repaired.Dockerfile
index 420226b..bfd119c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cckuailong/reapoc/2020/CVE-2020-23342/vultarget/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cckuailong/reapoc/2020/CVE-2020-23342/vultarget/Dockerfile/repaired.Dockerfile
@@ -1,13 +1,13 @@
-FROM ubuntu:xenial 
+FROM ubuntu:xenial
 # 基础镜像是Ubuntu16.04-xenial
 MAINTAINER dxy
 # 设置生成这个镜像的作者
 
-ADD sources.list /etc/apt/ 
+ADD sources.list /etc/apt/
 # 换源
 ENV OS_LOCALE="en_US.UTF-8"
 
-RUN apt-get update && apt-get install -y locales && locale-gen ${OS_LOCALE} && apt-get install -y apt-transport-https
+RUN apt-get update && apt-get install --no-install-recommends -y locales && locale-gen ${OS_LOCALE} && apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;
 # xenial系统区域语言设置为中文
 
 ENV LANG=${OS_LOCALE} \
@@ -26,8 +26,8 @@ ENV APACHE_CONF_DIR=/etc/apache2 \
 COPY entrypoint.sh /sbin/entrypoint.sh
 # 将本地的文件or文件夹复制到镜像中的指定路径下
 
-RUN	\
-# 在xenial系统中进行基础LAMP环境安装
+RUN \
+
     BUILD_DEPS='software-properties-common python-software-properties' \
 	&& apt-get install --no-install-recommends -y $BUILD_DEPS \
 	&& add-apt-repository -y ppa:ondrej/php \
@@ -37,7 +37,7 @@ RUN	\
     && find /etc/apt/sources.list.d/ -type f -name "ondrej-ubuntu-php-xenial.list" -exec sed -i.bak -r 's#deb(-src)?\s*http(s)?://ppa.launchpad.net#deb\1 https\2://launchpad.proxy.ustclug.org#ig' {} \;\	
     && find /etc/apt/sources.list.d/ -type f -name "ondrej-ubuntu-apache2-xenial.list" -exec sed -i.bak -r 's#deb(-src)?\s*http(s)?://ppa.launchpad.net#deb\1 https\2://launchpad.proxy.ustclug.org#ig' {} \;\
     && apt-get update \
-    && apt-get install -y git vim unzip curl apache2 php7.1-mbstring php7.1-mcrypt php7.1-curl php7.1-json php7.1-pdo php7.1-gd php7.1-intl php7.1-opcache libapache2-mod-php7.1 php7.1-cli php7.1-readline php7.1-pgsql php7.1-mysql php-pear \
+    && apt-get install --no-install-recommends -y git vim unzip curl apache2 php7.1-mbstring php7.1-mcrypt php7.1-curl php7.1-json php7.1-pdo php7.1-gd php7.1-intl php7.1-opcache libapache2-mod-php7.1 php7.1-cli php7.1-readline php7.1-pgsql php7.1-mysql php-pear \
 # Apache settings 网页服务器 设置
     && cp /dev/null ${APACHE_CONF_DIR}/conf-available/other-vhosts-access-log.conf \
     # 清空 other-vhosts-access-log.conf
@@ -47,7 +47,7 @@ RUN	\
     # 重启php7
 # PHP settings
 	&& phpenmod mcrypt \
-    && curl -sS https://getcomposer.org/installer | php -- --version=1.6.4 --install-dir=/usr/local/bin --filename=composer \
+    && curl -f -sS https://getcomposer.org/installer | php -- --version=1.6.4 --install-dir=/usr/local/bin --filename=composer \
 # Cleaning 主要是为了减少最终镜像的大小
 	&& apt-get purge -y --auto-remove $BUILD_DEPS \
 	&& apt-get autoremove -y \