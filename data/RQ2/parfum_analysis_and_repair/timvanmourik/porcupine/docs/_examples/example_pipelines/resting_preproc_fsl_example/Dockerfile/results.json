{
  "startTime": 1674249724240,
  "endTime": 1674249725794,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generated by Porcupine\n# Modelled after Neurodocker v0.2.0-dev. https://github.com/kaczmarj/neurodocker\n\nFROM timvanmourik/porcupine\n\n#----------------------------------------------------------\n# Install common dependencies and create default entrypoint\n#----------------------------------------------------------\nARG DEBIAN_FRONTEND=noninteractive\nENV LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C\" \\\n    ND_ENTRYPOINT=\"/porcupine/startup.sh\"\nRUN apt-get update -qq && apt-get install -yq --no-install-recommends  \\\n    \tbzip2 ca-certificates curl unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && chmod 777 /opt && chmod a+s /opt \\\n    && mkdir /porcupine \\\n    && echo '#!/usr/bin/env bash' >> $ND_ENTRYPOINT \\\n    && echo 'set +x' >> $ND_ENTRYPOINT \\\n    && echo 'if [ -z \"$*\" ]; then /usr/bin/env bash; else $*; fi' >> $ND_ENTRYPOINT \\\n    && chmod -R 777 /porcupine && chmod a+s /porcupine\nENTRYPOINT [\"/porcupine/startup.sh\"]\n\n#---------------\n# Install Nipype\n#---------------\nRUN curl -f -sSLO https://repo.continuum.io/miniconda/Miniconda3-4.3.11-Linux-x86_64.sh && \\\n    bash Miniconda3-4.3.11-Linux-x86_64.sh -b -p /usr/local/miniconda && \\\n    rm Miniconda3-4.3.11-Linux-x86_64.sh\n\nENV PATH=/usr/local/miniconda/bin:$PATH \\\n    LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8\n\n# Installing precomputed python packages\nRUN conda install -y mkl=2017.0.1 mkl-service &&  \\\n    conda install -y numpy=1.12.0 \\\n                     scipy=0.18.1 \\\n                     scikit-learn=0.18.1 \\\n                     matplotlib=2.0.0 \\\n                     pandas=0.19.2 \\\n                     libxml2=2.9.4 \\\n                     libxslt=1.1.29\\\n                     traits=4.6.0 \\\n                     boto\n\nRUN chmod +x /usr/local/miniconda/bin/* && conda clean --all -y\nRUN echo 'export PATH=/usr/local/miniconda/bin:$PATH' >> /etc/profile\nRUN pip install --no-cache-dir nipype\nRUN apt-get update && apt-get install --no-install-recommends -y graphviz && rm -rf /var/lib/apt/lists/*;\n#-----------------------------------------------------------\n# Install FSL v5.0.10\n# FSL is non-free. If you are considering commerical use\n# of this Docker image, please consult the relevant license:\n# https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence\n#-----------------------------------------------------------\nRUN echo \"Downloading FSL ...\" \\\n    && curl -f -sSL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.10-centos6_64.tar.gz \\\n    | tar zx -C /opt \\\n    && /bin/bash /opt/fsl/etc/fslconf/fslpython_install.sh -q -f /opt/fsl \\\n    && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \\\n    && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \\\n    && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \\\n    && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT\nENV FSLDIR=/opt/fsl \\\n    PATH=/opt/fsl/bin:$PATH\n\n#--------------------------------\n# Add custom analysis file as CMD\n#--------------------------------\nADD ./porcupine_generated_pipeline.py /run.py\nCMD [\"python\", \"/run.py\"]\n"
}