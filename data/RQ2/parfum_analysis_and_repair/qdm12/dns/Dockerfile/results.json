{
  "startTime": 1674250929705,
  "endTime": 1674250930421,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=3.14\nARG GO_VERSION=1.16\n\nFROM --platform=$BUILDPLATFORM golang:${GO_VERSION}-alpine${ALPINE_VERSION} AS base\nRUN apk --update --no-cache add git\nENV CGO_ENABLED=0\nWORKDIR /tmp/gobuild\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY cmd/ ./cmd/\nCOPY pkg/ ./pkg/\nCOPY internal/ ./internal/\n\nFROM --platform=$BUILDPLATFORM base AS test\n# Note on the go race detector:\n# - we set CGO_ENABLED=1 to have it enabled\n# - we install g++ to support the race detector\nENV CGO_ENABLED=1\nRUN apk --update --no-cache add g++\n\nFROM --platform=$BUILDPLATFORM base AS lint\nARG GOLANGCI_LINT_VERSION=v1.41.1\nRUN wget -O- -nv https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | \\\n    sh -s -- -b /usr/local/bin ${GOLANGCI_LINT_VERSION}\nCOPY .golangci.yml ./\nRUN golangci-lint run --timeout=10m\n\nFROM --platform=$BUILDPLATFORM base AS tidy\nRUN git init && \\\n    git config user.email ci@localhost && \\\n    git config user.name ci && \\\n    git add -A && git commit -m ci && \\\n    sed -i '/\\/\\/ indirect/d' go.mod && \\\n    go mod tidy && \\\n    git diff --exit-code -- go.mod\n\nFROM --platform=$BUILDPLATFORM base AS build\nCOPY --from=qmcgaw/xcputranslate:v0.4.0 /xcputranslate /usr/local/bin/xcputranslate\nARG TARGETPLATFORM\nARG VERSION=unknown\nARG BUILD_DATE=\"an unknown date\"\nARG COMMIT=unknown\nRUN GOARCH=\"$(xcputranslate -field arch -targetplatform ${TARGETPLATFORM})\" \\\n    GOARM=\"$(xcputranslate -field arm -targetplatform ${TARGETPLATFORM})\" \\\n    go build -trimpath -ldflags=\"-s -w \\\n    -X 'main.version=$VERSION' \\\n    -X 'main.buildDate=$BUILD_DATE' \\\n    -X 'main.commit=$COMMIT' \\\n    \" -o entrypoint cmd/main.go\n\nFROM alpine:${ALPINE_VERSION}\nARG VERSION=unknown\nARG BUILD_DATE=\"an unknown date\"\nARG COMMIT=unknown\nLABEL \\\n    org.opencontainers.image.authors=\"quentin.mcgaw@gmail.com\" \\\n    org.opencontainers.image.version=$VERSION \\\n    org.opencontainers.image.created=$BUILD_DATE \\\n    org.opencontainers.image.revision=$COMMIT \\\n    org.opencontainers.image.url=\"https://github.com/qdm12/dns\" \\\n    org.opencontainers.image.documentation=\"https://github.com/qdm12/dns/blob/master/README.md\" \\\n    org.opencontainers.image.source=\"https://github.com/qdm12/dns\" \\\n    org.opencontainers.image.title=\"DNS over TLS upstream server\" \\\n    org.opencontainers.image.description=\"Runs a local DNS server connected to Cloudflare DNS server 1.1.1.1 over TLS (and more)\"\nEXPOSE 53/udp\nENV \\\n    PROVIDERS=cloudflare \\\n    PRIVATE_ADDRESS=127.0.0.1/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,169.254.0.0/16,::1/128,fc00::/7,fe80::/10,::ffff:7f00:1/104,::ffff:a00:0/104,::ffff:a9fe:0/112,::ffff:ac10:0/108,::ffff:c0a8:0/112 \\\n    LISTENINGPORT=53 \\\n    VERBOSITY=1 \\\n    VERBOSITY_DETAILS=0 \\\n    VALIDATION_LOGLEVEL=0 \\\n    CACHING=on \\\n    IPV4=on \\\n    IPV6=off \\\n    BLOCK_MALICIOUS=on \\\n    BLOCK_SURVEILLANCE=off \\\n    BLOCK_ADS=off \\\n    BLOCK_IPS= \\\n    BLOCK_HOSTNAMES= \\\n    UNBLOCK= \\\n    CHECK_DNS=on \\\n    UPDATE_PERIOD=24h\nENTRYPOINT /entrypoint\nHEALTHCHECK --interval=5m --timeout=15s --start-period=5s --retries=1 CMD /entrypoint healthcheck\nWORKDIR /unbound\nRUN apk --update --no-cache add unbound libcap ca-certificates && \\\n    mv /usr/sbin/unbound . && \\\n    mv /etc/ssl/certs/ca-certificates.crt . && \\\n    chown 1000 -R . && \\\n    chmod 700 . && \\\n    chmod 400 ca-certificates.crt && \\\n    chmod 500 unbound && \\\n    setcap 'cap_net_bind_service=+ep' unbound && \\\n    apk del libcap && \\\n    rm -rf /var/cache/apk/* /etc/unbound/* /usr/sbin/unbound-*\nCOPY --from=build --chown=1000 /tmp/gobuild/entrypoint /entrypoint\nUSER 1000\n# Downloads and install some files\nRUN /entrypoint build\n"
}