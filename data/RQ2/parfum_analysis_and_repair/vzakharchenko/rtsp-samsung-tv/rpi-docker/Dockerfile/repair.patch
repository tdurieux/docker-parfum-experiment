diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/vzakharchenko/rtsp-samsung-tv/rpi-docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/vzakharchenko/rtsp-samsung-tv/rpi-docker/Dockerfile/repaired.Dockerfile
index 8be4f9b..981cdba 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/vzakharchenko/rtsp-samsung-tv/rpi-docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/vzakharchenko/rtsp-samsung-tv/rpi-docker/Dockerfile/repaired.Dockerfile
@@ -4,14 +4,14 @@ LABEL author="Vasyl Zakharchenko"
 LABEL email="vaszakharchenko@gmail.com"
 LABEL name="rtsp-samsung-tv RaspberryPi optimization"
 ENV DEBIAN_FRONTEND noninteractive
-RUN apt-get update && apt-get install -y gnupg2 ca-certificates lsb-release wget
+RUN apt-get update && apt-get install --no-install-recommends -y gnupg2 ca-certificates lsb-release wget && rm -rf /var/lib/apt/lists/*;
 RUN update-ca-certificates --fresh
 RUN apt-get purge curl
 RUN wget -qO-  https://deb.nodesource.com/setup_14.x | bash
-RUN apt-get update && apt-get install -y nodejs curl
-RUN npm i pm2 -g
+RUN apt-get update && apt-get install --no-install-recommends -y nodejs curl && rm -rf /var/lib/apt/lists/*;
+RUN npm i pm2 -g && npm cache clean --force;
 COPY /opt/vc /opt/vc
-RUN  apt-get update -qq &&  apt-get -y install \
+RUN apt-get update -qq && apt-get -y --no-install-recommends install \
       autoconf \
       automake \
       build-essential \
@@ -32,15 +32,15 @@ RUN  apt-get update -qq &&  apt-get -y install \
       texinfo \
       wget \
       yasm \
-      zlib1g-de
+      zlib1g-de && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://github.com/FFmpeg/FFmpeg /opt/FFmpeg
 #RUN cd FFmpeg && git checkout origin/release/3.2
-RUN cd /opt/FFmpeg && ./configure --arch=armel --target-os=linux --enable-libx264  --enable-gpl --enable-mmal  --enable-omx --enable-omx-rpi --enable-libfdk-aac --enable-nonfree
+RUN cd /opt/FFmpeg && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --arch=armel --target-os=linux --enable-libx264 --enable-gpl --enable-mmal --enable-omx --enable-omx-rpi --enable-libfdk-aac --enable-nonfree
 RUN  cd /opt/FFmpeg && make -j4
 RUN  cd /opt/FFmpeg && make install
 
 # Bundle APP files
-RUN npm i rtsp-samsung-tv -g
+RUN npm i rtsp-samsung-tv -g && npm cache clean --force;
 
 # Install app dependencies
 ENV NPM_CONFIG_LOGLEVEL warn