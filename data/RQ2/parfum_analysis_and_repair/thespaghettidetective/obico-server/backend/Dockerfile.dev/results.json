{
  "startTime": 1674253294726,
  "endTime": 1674253295448,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 67,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM thespaghettidetective/web:base-1.8\n\nARG uid=0\nARG gid=0\nARG user=root\nARG group=root\nARG home=/root\n\nRUN apk add --no-cache --update sqlite inotify-tools nodejs npm && npm install -g yarn && npm cache clean --force;\n\nRUN if [[ \"$uid\" != 0 ]]; then \\\n    (addgroup --gid $gid $group || echo \"group with gid $gid exists\") && \\\n    adduser --disabled-password --uid $uid --ingroup $(cat /etc/group|grep \":$gid:\" |cut -d: -f1) $user && \\\n    mkdir -p $home $home/.cache $home/.ipython $home/.local && \\\n    mkdir -p /app/ /app/frontend /app/static_build && \\\n    chown -R $uid:$gid /app $home \\\n    ; fi\n\nRUN pip install --no-cache-dir -U pip\n\nUSER $user\n\nEXPOSE 3334\nADD . /app\nRUN if [[ \"$uid\" != 0 ]]; then \\\n    pip install --no-cache-dir -r requirements.txt --src $home/.local/src \\\n    ; else \\\n    pip install --no-cache-dir -r requirements.txt \\\n    ; fi\n\n\nVOLUME /app\nVOLUME $home/.cache\nVOLUME $home/.ipython\nVOLUME $home/.local\n\nWORKDIR /app\n\nENV PYTHONPATH \"$home/.local:${PYTHONPATH}\"\nENV PATH \"$home/.local/bin:${PATH}\"\n"
}