{
  "startTime": 1674220170569,
  "endTime": 1674220171999,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 110
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.2.17-fpm-stretch\n\nARG TZ=UTC\nARG USERID=1001\nARG GROUPID=1001\nENV DEBIAN_FRONTEND noninteractive\nENV TZ=${TZ} USERID=${USERID} GROUPID=${GROUPID}\n\n# Change container timezone\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# Install os packages\nRUN apt-get update && apt-get install -y \\\n    sudo \\\n    g++ \\\n    zip \\\n    vim \\\n    curl \\\n    procps \\\n    telnet \\\n    postfix \\\n    mailutils \\\n    logrotate \\\n    supervisor \\\n    sasl2-bin \\\n    libpq-dev \\\n    libmemcached-dev \\\n    libjpeg-dev \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    libmcrypt-dev \\\n    libpng-dev \\\n    libmcrypt-dev \\\n    libicu-dev \\\n    libsqlite3-dev \\\n    libssl-dev \\\n    libcurl3-dev \\\n    libxml2-dev \\\n    libzzip-dev \\\n    libpcre3-dev \\\n    libzip-dev \\\n    liblz4-dev \\\n    libevent-dev \\\n    libsasl2-2 \\\n    libsasl2-dev \\\n    libsasl2-modules \\\n    --no-install-recommends apt-utils \\\n    && rm -r /var/lib/apt/lists/*\n\n# Configure GD library\nRUN docker-php-ext-configure gd \\\n    --enable-gd-native-ttf \\\n    --with-jpeg-dir=/usr/lib \\\n    --with-freetype-dir=/usr/include/freetype2\n\n# Install mongodb, xdebug, igbinary, msgpack, mcrypt\nRUN pecl install mongodb xdebug memcached-3.1.3 mcrypt-1.0.2 igbinary-3.0.1 msgpack-2.0.3 \\\n    && docker-php-ext-enable mongodb xdebug mcrypt igbinary msgpack\n\n# Install memcached with sasl\nRUN mkdir -p mkdir -p /usr/src/php/ext/memcached \\\n    && tar -C /usr/src/php/ext/memcached -zxvf \"$(pecl config-get download_dir)/memcached-3.1.3.tgz\" --strip 1 \\\n    && docker-php-ext-configure memcached \\\n    --with-php-config=/usr/local/bin/php-config \\\n    --with-libmemcached-dir \\\n    --with-zlib-dir \\\n    --with-system-fastlz=no \\\n    --enable-sasl=yes \\\n    --enable-memcached-igbinary=yes \\\n    --enable-memcached-msgpack=yes \\\n    --enable-memcached-json=yes \\\n    --enable-memcached-protocol=no \\\n    --enable-memcached-sasl=yes \\\n    --enable-memcached-session=yes \\\n    && docker-php-ext-install memcached && rm -rf mkdir\n\n# Install extensions using the helper script provided by the base image\nRUN docker-php-ext-install \\\n    gd \\\n    bcmath \\\n    pdo_mysql \\\n    pdo_pgsql \\\n    zip \\\n    mysqli\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n# Make composer global\nRUN sudo chmod 755 /usr/local/bin/composer\n\nWORKDIR /var/www/app\n\nCOPY php/php.ini /usr/local/etc/php/php.ini\n\nCOPY php/php-fpm.conf /usr/local/etc/php-fpm.conf\n\nCOPY php/www.conf /usr/local/etc/php-fpm.d/www.conf\n\nCOPY php/php-worker /etc/logrotate.d/php-worker\n\nCOPY php/crontab/cron.minutely.schedule /etc/cron.minutely/schedule\n\nCOPY php/crontab/cron.daily.logrotate /etc/cron.daily/logrotate\n\nCOPY php/crontab/crontab /etc/crontab\n\nCOPY php/php-worker.conf /etc/supervisor/conf.d/php-worker.conf\n\nCOPY php/*.sh /scripts/\n\nCOPY common/wait-for-it.sh /scripts/\n\nRUN chmod a+x /scripts/*.sh\n\n# Create new username: php-fpm\nRUN useradd -ms /bin/bash php-fpm --no-log-init\n# Modify php-fpm user_id:group_id to current host_user_id:host_group_id\nRUN usermod -u $USERID php-fpm\nRUN groupmod -g $GROUPID php-fpm || exit 0\n# Make php-fpm user can sudo without password\nRUN sudo echo \"php-fpm ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/php-fpm\n# Set user to running image\nUSER php-fpm\n\nEXPOSE 9000\n\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n\nCMD [\"/scripts/command.sh\"]\n"
}