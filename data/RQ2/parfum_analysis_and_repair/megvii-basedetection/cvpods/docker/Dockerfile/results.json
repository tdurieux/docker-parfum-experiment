{
  "startTime": 1674253610033,
  "endTime": 1674253611059,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.1-cudnn7-devel\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tpython3-opencv ca-certificates python3-dev git wget sudo && rm -rf /var/lib/apt/lists/*;\nRUN ln -sv /usr/bin/python3 /usr/bin/python\n\n# create a non-root user\nARG USER_ID=1000\nRUN useradd -m --no-log-init --system  --uid ${USER_ID} appuser -g sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER appuser\nWORKDIR /home/appuser\n\nENV PATH=\"/home/appuser/.local/bin:${PATH}\"\nRUN wget https://bootstrap.pypa.io/get-pip.py && \\\n\tpython3 get-pip.py --user && \\\n\trm get-pip.py\n\n# install dependencies\n# See https://pytorch.org/ for other options if you use a different version of CUDA\nRUN pip install --no-cache-dir --user tensorboard cmake# cmake from apt-get is too old\nRUN pip install --no-cache-dir --user torch==1.7.1+cu101 torchvision==0.8.2+cu101 -f https://download.pytorch.org/whl/torch_stable.html\n\n# install cvpods\nRUN git clone https://github.com/megvii-basedetection/cvpods cvpods_repo\n# set FORCE_CUDA because during `docker build` cuda is not accessible\nENV FORCE_CUDA=\"1\"\n# This will by default build detectron2 for all common cuda architectures and take a lot more time,\n# because inside `docker build`, there is no way to tell which architecture will be used.\nARG TORCH_CUDA_ARCH_LIST=\"Kepler;Kepler+Tesla;Maxwell;Maxwell+Tegra;Pascal;Volta;Turing\"\nENV TORCH_CUDA_ARCH_LIST=\"${TORCH_CUDA_ARCH_LIST}\"\n\nWORKDIR /home/appuser/cvpods_repo\nRUN python3 setup.py build develop --user\n"
}