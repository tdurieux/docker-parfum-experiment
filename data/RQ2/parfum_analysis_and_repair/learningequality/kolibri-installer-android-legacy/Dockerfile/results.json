{
  "startTime": 1674250163897,
  "endTime": 1674250164854,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic as build\nLABEL maintainer=\"Learning Equality <info@learningequality.org>\" tag=\"kolibrikivy\"\nENV DEBIAN_FRONTEND noninteractive\n\n# Install the dependencies for the build system\nRUN dpkg --add-architecture i386 && \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n    ant \\\n    autoconf \\\n    automake \\\n    build-essential \\\n    ccache \\\n    curl \\\n    cython \\\n    gcc \\\n    git \\\n    iproute2 \\\n    libffi-dev \\\n    libltdl-dev \\\n    libncurses5:i386 \\\n    libssl-dev \\\n    libstdc++6:i386 \\\n    libtool \\\n    locales \\\n    lsb-release \\\n    openjdk-8-jdk \\\n    python-dev \\\n    unzip \\\n    vim \\\n    wget \\\n    xclip \\\n    zip \\\n    xsel \\\n    zlib1g-dev \\\n    zlib1g:i386 \\\n    python-wxgtk3.0 \\\n    libgtk-3-dev \\\n    python3 \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Use java 1.8 because Ubuntu's gradle version doesn't support 1.11\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV PATH=$PATH:$JAVA_HOME\n\nRUN curl -f https://bootstrap.pypa.io/pip/3.6/get-pip.py -o get-pip.py && python3 get-pip.py\n\n# Ensure that python is using python3\n# copying approach from official python images\nENV PATH /usr/local/bin:$PATH\nRUN cd /usr/local/bin && \\\n  ln -s $(which python3) python\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\n\n# Install Android SDK\nENV ANDROID_HOME=/opt/android\nENV ANDROIDSDK=$ANDROID_HOME/sdk\nENV ANDROIDNDK=$ANDROIDSDK/ndk-bundle\nCOPY Makefile /tmp/\nRUN make -C /tmp setup SDK=$ANDROIDSDK && \\\n  rm -f /tmp/Makefile\n\n# install python dependencies\nCOPY requirements.txt /tmp/\nRUN pip install --no-cache-dir -r /tmp/requirements.txt && \\\n  rm -f /tmp/requirements.txt\n\n# Configure gradle for use in docker. Disable gradle's automatically\n# detected rich console doesn't work in docker. Disable the gradle\n# daemon since it will be stopped as soon as the container exits.\nENV GRADLE_OPTS=\"-Dorg.gradle.console=plain -Dorg.gradle.daemon=false\"\n\n# Create a mount point for the build cache and make it world writable so\n# that the volume can be used by an unprivileged user without additional\n# setup.\nRUN mkdir /cache && chmod 777 /cache\n\nCMD [ \"make\", \"kolibri.apk\" ]\n"
}