{
  "startTime": 1674252291733,
  "endTime": 1674252292583,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 36,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 136
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 36,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 136
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN apt-get update --fix-missing && apt-get -y --no-install-recommends install curl && rm -rf /var/lib/apt/lists/*;\n\n# Set the timezone\nRUN ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime\n\n# install node\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash -\n\nENV DEBIAN_FRONTEND noninteractive\n# Default Python file.open file encoding to UTF-8 instead of ASCII, workaround for le-utils setup.py issue\nENV LANG C.UTF-8\nRUN apt-get update && apt-get -y --no-install-recommends install nodejs python-minimal python3.6 python3-pip python3-dev gcc libpq-dev make git curl libjpeg-dev && rm -rf /var/lib/apt/lists/*;\n\n# Ensure that python is using python3\n# copying approach from official python images\nENV PATH /usr/local/bin:$PATH\nRUN cd /usr/local/bin && \\\n  ln -s $(which python3) python && \\\n  ln -s $(which pip3) pip\n\nRUN npm install -g yarn && npm cache clean --force;\n\nCOPY ./package.json .\nCOPY ./yarn.lock .\nRUN yarn install && yarn cache clean;\n\nCOPY requirements.txt .\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir --ignore-installed -r requirements.txt\n\nCOPY  . /contentcuration/\nWORKDIR /contentcuration\n\n# generate the node bundles\nRUN mkdir -p contentcuration/static/js/bundles\nRUN ln -s /node_modules /contentcuration/node_modules\nRUN yarn run build -p\n\nEXPOSE 8000\n\nENTRYPOINT [\"make\", \"setup\", \"altprodserver\"]\n"
}