{
  "startTime": 1674255307135,
  "endTime": 1674255307946,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3 AS builder\n\nRUN apk add --no-cache --update make libffi libffi-dev rust cargo build-base\n\n# Per https://github.com/containers/buildah/issues/1849#issuecomment-635579332,\n# the presence of a .dockerignore slows down the build process. To work around\n# this, we add the necessary files/directories explicitly, instead of using\n# `ADD . /inko/` to add files.\nADD Cargo.lock Cargo.toml LICENSE Makefile /inko/\nADD .cargo /inko/.cargo/\nADD cli /inko/cli/\nADD compiler /inko/compiler/\nADD runtime /inko/runtime/\nADD vm /inko/vm/\n\nWORKDIR /inko\nRUN make build FEATURES='libinko/libffi-system' PREFIX='/usr'\nRUN strip target/release/inko\nRUN make install PREFIX='/usr'\n\nFROM alpine:3\n\n# libgcc is needed because libgcc is dynamically linked to the executable.\nRUN apk add --no-cache --update libffi libffi-dev ruby ruby-json libgcc\n\nCOPY --from=builder [\"/usr/bin/inko\", \"/usr/bin/inko\"]\nCOPY --from=builder [\"/usr/lib/inko\", \"/usr/lib/inko/\"]\nCOPY --from=builder [\"/usr/share/licenses/inko\", \"/usr/share/licenses/inko/\"]\n\n# Disable any warnings about the Ruby compiler.\nENV RUBYOPT '-W:no-deprecated -W:no-experimental'\n"
}