{
  "startTime": 1674218587549,
  "endTime": 1674218589253,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG SDK_BASE_IMAGE=mcr.microsoft.com/dotnet/nightly/sdk:6.0-bullseye-slim\nFROM $SDK_BASE_IMAGE\n\n# Build latest msquic locally\nWORKDIR /msquic\nRUN apt-get update -y && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y cmake clang ruby-dev gem lttng-tools libssl-dev && \\\n    gem install fpm && rm -rf /var/lib/apt/lists/*;\nRUN git clone --recursive https://github.com/dotnet/msquic\nRUN cd msquic/src/msquic && \\\n    mkdir build && \\\n    cmake -B build -DCMAKE_BUILD_TYPE=Release -DQUIC_ENABLE_LOGGING=false -DQUIC_USE_SYSTEM_LIBCRYPTO=true -DQUIC_BUILD_TOOLS=off -DQUIC_BUILD_TEST=off -DQUIC_BUILD_PERF=off && \\\n    cd build && \\\n    cmake --build . --config Release\nRUN cd msquic/src/msquic/build/bin/Release && \\\n    rm libmsquic.so && \\\n    fpm -f -s dir -t deb -n libmsquic -v $( find -type f | cut -d \".\" -f 4- ) \\\n    --license MIT --url https://github.com/microsoft/msquic --log error \\\n    $( ls ./* | cut -d \"/\" -f 2 | sed -r \"s/(.*)/\\1=\\/usr\\/lib\\/\\1/g\" ) && \\\n    dpkg -i libmsquic_*.deb\n\nARG VERSION=7.0\nARG CONFIGURATION=Release\n\n# Build the stress server\nWORKDIR /app\nCOPY . .\n\nRUN dotnet build -c $CONFIGURATION \\\n    -p:TargetingPacksTargetsLocation=/live-runtime-artifacts/targetingpacks.targets \\\n    -p:MicrosoftNetCoreAppRefPackDir=/live-runtime-artifacts/microsoft.netcore.app.ref/ \\\n    -p:MicrosoftNetCoreAppRuntimePackDir=/live-runtime-artifacts/microsoft.netcore.app.runtime.linux-x64/$CONFIGURATION/\n\n# Enable dump collection\nENV COMPlus_DbgEnableMiniDump=1\nENV COMPlus_DbgMiniDumpType=MiniDumpWithFullMemory\nENV COMPlus_DbgMiniDumpName=\"/dumps-share/coredump.%p\"\n\nEXPOSE 5001\n\nENV VERSION=$VERSION\nENV CONFIGURATION=$CONFIGURATION\nENV HTTPSTRESS_ARGS=''\nCMD /live-runtime-artifacts/testhost/net$VERSION-Linux-$CONFIGURATION-x64/dotnet exec \\\n    ./bin/$CONFIGURATION/net$VERSION/HttpStress.dll $HTTPSTRESS_ARGS\n"
}