{
  "startTime": 1674251309575,
  "endTime": 1674251310937,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright (c) .NET Foundation and contributors. All rights reserved.\n# Licensed under the MIT license. See LICENSE file in the project root for full license information.\n#\n\n# Dockerfile that creates a container suitable to build dotnet-cli\nFROM centos:7.1.1503\n\n# Swap the \"fakesystemd\" package with the real \"systemd\" package, because fakesystemd conflicts with openssl-devel.\n# The CentOS Docker image uses fakesystemd instead of systemd to reduce disk space.\nRUN yum -q -y swap -- remove fakesystemd -- install systemd systemd-libs\n\nRUN yum -q -y install deltarpm && rm -rf /var/cache/yum\nRUN yum -q -y install epel-release && rm -rf /var/cache/yum\n# RUN yum -y update\n\n# This could become a \"microsoft/coreclr\" image, since it just installs the dependencies for CoreCLR (and stdlib)\n# Install CoreCLR and CoreFx dependencies\nRUN yum -q -y install unzip libunwind gettext libcurl-devel openssl-devel zlib libicu-devel && rm -rf /var/cache/yum\n\n# RUN apt-get update && \\\n#     apt-get -qqy install unzip curl libicu-dev libunwind8 gettext libssl-dev libcurl3-gnutls zlib1g liblttng-ust-dev lldb-3.6-dev lldb-3.6\n\n# Install Build Prereqs\n# CMake 3.3.2 from GhettoForge; LLVM 3.6.2 built from source ourselves;\nRUN yum install -y http://mirror.symnds.com/distributions/gf/el/7/plus/x86_64/cmake-3.3.2-1.gf.el7.x86_64.rpm \\\n        https://matell.blob.core.windows.net/rpms/clang-3.6.2-1.el7.centos.x86_64.rpm \\\n        https://matell.blob.core.windows.net/rpms/clang-libs-3.6.2-1.el7.centos.x86_64.rpm \\\n        https://matell.blob.core.windows.net/rpms/lldb-3.6.2-1.el7.centos.x86_64.rpm \\\n        https://matell.blob.core.windows.net/rpms/lldb-devel-3.6.2-1.el7.centos.x86_64.rpm \\\n        https://matell.blob.core.windows.net/rpms/llvm-3.6.2-1.el7.centos.x86_64.rpm \\\n        https://matell.blob.core.windows.net/rpms/llvm-libs-3.6.2-1.el7.centos.x86_64.rpm \\\n        which \\\n        make && rm -rf /var/cache/yum\n\nRUN yum -q -y install tar git && rm -rf /var/cache/yum\n\n# Use clang as c++ compiler\nRUN update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 100\nRUN update-alternatives --set c++ /usr/bin/clang++\n\nRUN yum -q -y install sudo && rm -rf /var/cache/yum\n\n# Setup User to match Host User, and give superuser permissions\nARG USER_ID=0\nRUN useradd -m code_executor -u ${USER_ID} -g root\nRUN echo 'code_executor ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# With the User Change, we need to change permssions on these directories\nRUN chmod -R a+rwx /usr/local\nRUN chmod -R a+rwx /home\nRUN chmod -R 755 /usr/bin/sudo\n\n# Set user to the one we just created\nUSER ${USER_ID}\n\n# Set working directory\nWORKDIR /opt/code\n"
}