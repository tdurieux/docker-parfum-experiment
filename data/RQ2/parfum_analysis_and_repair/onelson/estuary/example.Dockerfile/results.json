{
  "startTime": 1674216972209,
  "endTime": 1674216972646,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile serves as an example of how to run Estuary\n\nFROM rust:1-slim-buster\n\n# Estuary relies on being able to run `git` on the command-line.\n# It additionally uses the `git2` crate which indirectly depends on `libssl`.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  git \\\n  pkg-config libssl-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN cargo install estuary\n\n\n# Use a volume to store our service data\nVOLUME [\"/var/lib/estuary\"]\n\n# Configure the service.\n#\n# These env vars will get the files Estuary needs to write into our volume and\n# enable some basic logging HOWEVER you'll still need to configure the\n# **base url** based on the public host/port you want to use.\nENV ESTUARY_INDEX_DIR=\"/var/lib/estuary/index\" \\\n    ESTUARY_CRATE_DIR=\"/var/lib/estuary/crates\" \\\n    RUST_LOG=\"actix_web=INFO,estuary=INFO\"\n\nEXPOSE 7878\n\n# When running the container, don't forget you'll need to specify the base url\n# either via a flag or environment variable.\nENTRYPOINT [\"estuary\"]\n"
}