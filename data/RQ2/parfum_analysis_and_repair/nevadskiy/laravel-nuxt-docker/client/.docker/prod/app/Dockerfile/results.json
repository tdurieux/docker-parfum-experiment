{
  "startTime": 1674255028765,
  "endTime": 1674255029481,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builder image\nFROM node:16-alpine as builder\n\n# Set up the working directory\nWORKDIR /var/www/html\n\n# Copy all files into the container\nCOPY ./ ./\n\n# Install build dependencies\nRUN yarn install \\\n  --prefer-offline \\\n  --frozen-lockfile \\\n  --non-interactive \\\n  --production=false && yarn cache clean;\n\n# Build the app\nRUN yarn build\n\n# Install prod dependencies\nRUN rm -rf node_modules && \\\n  NODE_ENV=production yarn install \\\n  --prefer-offline \\\n  --pure-lockfile \\\n  --non-interactive \\\n  --production=true && yarn cache clean;\n\n# Serving image\nFROM node:16-alpine\n\n# Set up the working directory\nWORKDIR /var/www/html\n\n# Copy the built app\nCOPY --from=builder /var/www/html ./\n\n# Specify the host variable\nENV HOST 0.0.0.0\n\n# Expose the Nuxt port\nEXPOSE 3000\n\n# Init the command\nCMD [\"yarn\", \"start\"]\n"
}