{
  "startTime": 1674249965869,
  "endTime": 1674249966629,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bitwalker/alpine-elixir:1.11.0 AS release-builder\n\n# Important!  Update this no-op ENV variable when this Dockerfile\n# is updated with the current date. It will force refresh of all\n# of the base images and things like `apt-get update` won't be using\n# old cached versions when the Dockerfile is built.\nENV REFRESHED_AT=2021-01-20\n\n# Install NPM\nRUN \\\n    mkdir -p /opt/app && \\\n    chmod -R 777 /opt/app && \\\n    apk update && \\\n    apk --no-cache --update add \\\n      make \\\n      g++ \\\n      wget \\\n      curl \\\n      inotify-tools \\\n      nodejs \\\n      nodejs-npm && \\\n    npm install npm -g --no-progress && \\\n    update-ca-certificates --fresh && \\\n    rm -rf /var/cache/apk/* && npm cache clean --force;\n\n# Add local node module binaries to PATH\nENV PATH=./node_modules/.bin:$PATH\n\n# Ensure latest versions of Hex/Rebar are installed on build\nONBUILD RUN mix do local.hex --force, local.rebar --force\n\nENV MIX_ENV=prod\n\nWORKDIR /opt/app\n\n# Cache elixir deps\nCOPY mix.exs mix.lock ./\nCOPY config config\nRUN mix deps.get\nRUN mix deps.compile\n\n# Compile project\nCOPY priv priv\nCOPY lib lib\nRUN mix compile\n\n# Build release\nCOPY rel rel\nRUN mix release\n\n# Release image\nFROM alpine:3.9\n\nRUN apk add --no-cache bash libstdc++ openssl\n\nWORKDIR /opt/app\n\nCOPY --from=release-builder /opt/app/_build/prod/rel/liquid_voting .\n\nEXPOSE 4000\nENV PORT=4000 MIX_ENV=prod\n\nENTRYPOINT [\"./bin/liquid_voting\"]\n\n# docker run -e SECRET_KEY_BASE=$(mix phx.gen.secret) -e liquid_voting:latest\nCMD [\"start\"]\n"
}