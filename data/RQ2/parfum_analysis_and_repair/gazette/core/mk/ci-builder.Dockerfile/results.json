{
  "startTime": 1674251871940,
  "endTime": 1674251872715,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Note that this image will be cached in Github Actions, and the cache key is computed by hashing\n# this file. This works only so long as there are no _other_ files that go into the final image.\n# So if you add any ADD or COPY directives, be sure to update the cache key in the github actions\n# workflow yaml\nFROM ubuntu:20.04\n\nRUN apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends -y \\\n      build-essential \\\n      ca-certificates \\\n      curl \\\n      git \\\n      libbz2-dev \\\n      libjemalloc-dev \\\n      liblz4-dev \\\n      libprotobuf-dev \\\n      libsnappy-dev \\\n      libsqlite3-dev \\\n      libzstd-dev \\\n      protobuf-compiler \\\n      zlib1g-dev \\\n      zip \\\n && rm -rf /var/lib/apt/lists/*\n\nARG GOLANG_VERSION=1.16.6\nARG GOLANG_SHA256=be333ef18b3016e9d7cb7b1ff1fdb0cac800ca0be4cf2290fe613b3d069dfe0d\n\nARG DOCKER_VERSION=19.03.8\nARG DOCKER_SHA256=7f4115dc6a3c19c917f8b9664d7b51c904def1c984e082c4600097433323cf6f\n\nARG ETCD_VERSION=v3.5.0\nARG ETCD_SHA256=864baa0437f8368e0713d44b83afe21dce1fb4ee7dae4ca0f9dd5f0df22d01c4\n\nENV PATH=/usr/local/go/bin:$PATH\n\nRUN curl -f -L -o /tmp/golang.tgz \\\n      https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz \\\n && echo \"${GOLANG_SHA256}  /tmp/golang.tgz\" | sha256sum -c - \\\n && tar --extract \\\n      --file /tmp/golang.tgz \\\n      --directory /usr/local \\\n && rm /tmp/golang.tgz \\\n && go version\n\nRUN curl -f -L -o /tmp/docker.tgz \\\n      https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n && echo \"${DOCKER_SHA256}  /tmp/docker.tgz\" | sha256sum -c - \\\n && tar --extract \\\n      --file /tmp/docker.tgz \\\n      --strip-components 1 \\\n      --directory /usr/local/bin/ \\\n && rm /tmp/docker.tgz \\\n && docker --version\n\nRUN curl -f -L -o /tmp/etcd.tgz \\\n     https://github.com/etcd-io/etcd/releases/download/${ETCD_VERSION}/etcd-${ETCD_VERSION}-linux-amd64.tar.gz \\\n && echo \"${ETCD_SHA256}  /tmp/etcd.tgz\" | sha256sum -c - \\\n && tar --extract \\\n      --file /tmp/etcd.tgz \\\n      --directory /tmp/ \\\n && mv /tmp/etcd-${ETCD_VERSION}-linux-amd64/etcd /tmp/etcd-${ETCD_VERSION}-linux-amd64/etcdctl /usr/local/bin \\\n && chown 1000:1000 /usr/local/bin/etcd /usr/local/bin/etcdctl \\\n && rm -r /tmp/etcd-${ETCD_VERSION}-linux-amd64/ \\\n && rm /tmp/etcd.tgz \\\n && etcd --version\n\nWORKDIR /gazette\n\n"
}