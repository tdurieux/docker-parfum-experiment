{
  "startTime": 1674246259736,
  "endTime": 1674246261236,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build with\n# sudo docker build -t xsplot .\n\n# run with\n# sudo docker run --network host -t xsplot\n\n# maintained at https://github.com/openmc-data-storage/xsplot.com/\n\nFROM ghcr.io/openmc-data-storage/nuclear_data_base_docker\n\n# the base image nuclear_data_base_docker is based on continuumio/miniconda3:4.9.2\n\nRUN pip install --no-cache-dir dash\n\nRUN pip install --no-cache-dir gunicorn==20.0.4\n\nCOPY assets assets\nCOPY app.py .\n\nENV PORT 8080\n\nEXPOSE 8080\n\n# Run the web service on container startup. Here we use the gunicorn\n# webserver, with one worker process and 8 threads.\n# For environments with multiple CPU cores, increase the number of workers\n# to be equal to the cores available.\n# Timeout is set to 0 to disable the timeouts of the workers to allow Cloud Run\n# to handle instance scaling. For more details see\n# https://cloud.google.com/run/docs/quickstarts/build-and-deploy/python\nCMD exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 0 app:server\n"
}