{
  "startTime": 1674219148758,
  "endTime": 1674219151190,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2018-2019, NVIDIA CORPORATION. All rights reserved.\n#\n# Redistribution and use in source and binary forms, with or without\n# modification, are permitted provided that the following conditions\n# are met:\n#  * Redistributions of source code must retain the above copyright\n#    notice, this list of conditions and the following disclaimer.\n#  * Redistributions in binary form must reproduce the above copyright\n#    notice, this list of conditions and the following disclaimer in the\n#    documentation and/or other materials provided with the distribution.\n#  * Neither the name of NVIDIA CORPORATION nor the names of its\n#    contributors may be used to endorse or promote products derived\n#    from this software without specific prior written permission.\n#\n# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS ``AS IS'' AND ANY\n# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n# OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n#\n# Multistage build.\n#\n\nARG BASE_IMAGE=tensorrtserver\nARG BUILD_IMAGE=tensorrtserver_build\nARG CLIENT_IMAGE=tensorrtserver_client\nARG INPROCESS_IMAGE=tensorrtserver_inprocess\n\n############################################################################\n## Copy artifacts from build container\n############################################################################\nFROM ${BUILD_IMAGE} AS build\n\n# Update the qa/ directory with test executables, models, etc.\nWORKDIR /workspace\nRUN mkdir -p qa/common && \\\n    cp /opt/tensorrtserver/bin/caffe2plan qa/common/. && \\\n    mkdir qa/L0_simple_example/models && \\\n    cp -r docs/examples/model_repository/simple qa/L0_simple_example/models/. && \\\n    mkdir qa/L0_simple_string_example/models && \\\n    cp -r docs/examples/model_repository/simple_string qa/L0_simple_string_example/models/. && \\\n    mkdir -p qa/L0_simple_custom_example/models/simple/1 && \\\n    cp /opt/tensorrtserver/custom/libaddsub.so \\\n       qa/L0_simple_custom_example/models/simple/1/. && \\\n    mkdir -p qa/L0_simple_ensemble/models/ensemble_add_sub_int32_int32_int32/1 && \\\n    mkdir -p qa/L0_simple_ensemble/models/simple/1 && \\\n    cp /opt/tensorrtserver/custom/libaddsub.so \\\n       qa/L0_simple_ensemble/models/simple/1/. && \\\n    mkdir -p qa/L0_multiple_ports/models/simple/1 && \\\n    cp /opt/tensorrtserver/custom/libaddsub.so \\\n      qa/L0_multiple_ports/models/simple/1/. && \\\n    mkdir qa/L0_simple_inprocess/models && \\\n    cp -r docs/examples/model_repository/simple qa/L0_simple_inprocess/models/. && \\\n    mkdir -p qa/L0_custom_image_preprocess/models/image_preprocess_nhwc_224x224x3/1 && \\\n    cp /opt/tensorrtserver/custom/libimagepreprocess.so \\\n       qa/L0_custom_image_preprocess/models/image_preprocess_nhwc_224x224x3/1/. && \\\n    mkdir -p qa/L0_custom_param/models/param/1 && \\\n    cp /opt/tensorrtserver/custom/libparam.so \\\n       qa/L0_custom_param/models/param/1/. && \\\n    mkdir -p qa/L0_simple_sequence_example/models/simple_sequence/1 && \\\n    cp /opt/tensorrtserver/custom/libsequence.so \\\n       qa/L0_simple_sequence_example/models/simple_sequence/1/. && \\\n    cp /opt/tensorrtserver/custom/libidentity.so qa/L0_infer/. && \\\n    cp /opt/tensorrtserver/custom/libidentity.so qa/L0_infer_variable/. && \\\n    cp /opt/tensorrtserver/custom/libidentity.so qa/L0_infer_reshape/. && \\\n    cp /opt/tensorrtserver/custom/libidentity.so qa/L0_infer_zero/. && \\\n    cp /opt/tensorrtserver/custom/libidentity.so qa/L0_sequence_batcher/. && \\\n    mkdir -p qa/custom_models/custom_int32_int32_int32/1 && \\\n    cp /opt/tensorrtserver/custom/libaddsub.so \\\n       qa/custom_models/custom_int32_int32_int32/1/. && \\\n    mkdir -p qa/custom_models/custom_nobatch_int32_int32_int32/1 && \\\n    cp /opt/tensorrtserver/custom/libaddsub.so \\\n       qa/custom_models/custom_nobatch_int32_int32_int32/1/. && \\\n    mkdir -p qa/custom_models/custom_float32_float32_float32/1 && \\\n    cp /opt/tensorrtserver/custom/libaddsub.so \\\n       qa/custom_models/custom_float32_float32_float32/1/. && \\\n    mkdir -p qa/custom_models/custom_nobatch_float32_float32_float32/1 && \\\n    cp /opt/tensorrtserver/custom/libaddsub.so \\\n       qa/custom_models/custom_nobatch_float32_float32_float32/1/. && \\\n    mkdir -p qa/custom_models/custom_sequence_int32/1 && \\\n    cp /opt/tensorrtserver/custom/libsequence.so \\\n       qa/custom_models/custom_sequence_int32/1/.\n\n# Generating the docs requires the docs source and the source code so\n# copy that into L0_docs so that it is available when that test runs.\nRUN cp VERSION qa/L0_docs/. && \\\n    cp README.rst qa/L0_docs/. && \\\n    cp -r docs qa/L0_docs/. && \\\n    cp -r src qa/L0_docs/.\n\n############################################################################\n## Copy artifacts from client container\n############################################################################\nFROM ${CLIENT_IMAGE} AS client\n\nWORKDIR /workspace\nCOPY --from=build /workspace/qa/ qa/\nRUN mkdir -p qa/clients && mkdir -p qa/pkgs && \\\n    cp /tmp/client/bin/* qa/clients/. && \\\n    cp /tmp/client/python/*.py qa/clients/. && \\\n    cp /tmp/client/python/tensorrtserver*.whl qa/pkgs/.\n\n############################################################################\n## Copy artifacts from in-process container\n############################################################################\nFROM ${INPROCESS_IMAGE} AS inprocess\n\nWORKDIR /workspace\nCOPY --from=client /workspace/qa/ qa/\nRUN cp build/simple_inprocess qa/L0_simple_inprocess/.\n\n############################################################################\n## Create CI enabled image\n############################################################################\nFROM $BASE_IMAGE\n\nARG PYVER=3.5\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n                              jmeter \\\n                              jmeter-http \\\n                              libcurl3 \\\n                              libopencv-dev \\\n                              libopencv-core-dev \\\n                              libpng12-dev \\\n                              libzmq3-dev \\\n                              python$PYVER \\\n                              python$PYVER-dev \\\n                              python$PYVER-numpy \\\n                              python`echo $PYVER | cut -c1-1`-pil \\\n                              python-protobuf \\\n                              swig && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Use the PYVER version of python\nRUN rm -f /usr/bin/python && \\\n    rm -f /usr/bin/python`echo $PYVER | cut -c1-1` && \\\n    ln -s /usr/bin/python$PYVER /usr/bin/python && \\\n    ln -s /usr/bin/python$PYVER /usr/bin/python`echo $PYVER | cut -c1-1`\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python$PYVER get-pip.py && \\\n    rm get-pip.py\nRUN pip install --no-cache-dir --upgrade numpy future grpcio\n\n# CI expects tests in /opt/tensorrtserver/qa\nWORKDIR /opt/tensorrtserver\nCOPY --from=inprocess /workspace/qa/ qa/\n\n# Remove CI tests that are meant to run only on build image and\n# install the tensorrtserver python client APIs.\nRUN rm -fr qa/L0_copyrights qa/L0_unit_test qa/L1_tfs_unit_test && \\\n    pip install --no-cache-dir --upgrade qa/pkgs/tensorrtserver-*.whl\n\nENV PYVER ${PYVER}\n"
}