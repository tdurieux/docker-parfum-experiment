{
  "startTime": 1674251531468,
  "endTime": 1674251532450,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 84,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build an image for OSKAR CI.\n# Install the casacore Tables library and its dependencies.\n#\nFROM nvidia/cuda:11.3.1-base-ubuntu20.04 AS build\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n    bison \\\n    build-essential \\\n    cmake \\\n    flex \\\n    gfortran \\\n    liblapack-dev && rm -rf /var/lib/apt/lists/*;\nWORKDIR /build/casacore\nADD https://github.com/casacore/casacore/archive/v3.2.0.tar.gz casacore.tar.gz\nRUN mkdir casacore-src && \\\n    tar zxf casacore.tar.gz -C casacore-src --strip-components 1 && \\\n    cmake casacore-src/ -DMODULE=tables -DBUILD_TESTING=OFF -DBUILD_PYTHON=OFF \\\n    -DUSE_FFTW3=OFF -DUSE_OPENMP=ON -DUSE_HDF5=OFF -DUSE_THREADS=ON && \\\n    make -j4 && make install && rm casacore.tar.gz\n\n# Install Singularity build dependencies.\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    git \\\n    golang \\\n    libssl-dev \\\n    uuid-dev \\\n    libgpgme11-dev \\\n    squashfs-tools \\\n    libseccomp-dev \\\n    pkg-config \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# Compile Singularity.\nRUN go get -u github.com/golang/dep/cmd/dep\nWORKDIR /build/singularity\nRUN export VERSION=3.8.4 && \\\n    wget https://github.com/sylabs/singularity/releases/download/v${VERSION}/singularity-ce-${VERSION}.tar.gz && \\\n    tar -xzf singularity-ce-${VERSION}.tar.gz  && \\\n    cd singularity-ce-${VERSION} && \\\n    ./mconfig && make -C ./builddir && make -C ./builddir install && rm singularity-ce-${VERSION}.tar.gz\n\n# Copy casacore and Singularity into a new image with other\n# build dependencies installed.\nFROM nvidia/cuda:11.3.1-base-ubuntu20.04\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    clang-tidy \\\n    cuda-cudart-dev-11-3 \\\n    cuda-nvcc-11-3 \\\n    git \\\n    lcov \\\n    libcufft-dev-11-3 \\\n    libhdf5-dev \\\n    nvidia-opencl-dev \\\n    python3 \\\n    python3-pip \\\n    python3-sphinx \\\n    libssl-dev \\\n    uuid-dev \\\n    libgpgme11-dev \\\n    squashfs-tools \\\n    libseccomp-dev \\\n    pkg-config && \\\n    apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Need to install CMake >= 3.21.0 for JUnit test output.\n# Following instructions at https://apt.kitware.com/\nRUN apt-get update && apt-get -qq -y --no-install-recommends install gpg wget && \\\n    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null && \\\n    echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null && \\\n    apt-get update && \\\n    rm /usr/share/keyrings/kitware-archive-keyring.gpg && \\\n    apt-get -qq -y --no-install-recommends install kitware-archive-keyring cmake && \\\n    apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Install Python packages.\nRUN pip3 install --no-cache-dir numpy sphinx-rtd-theme\n\n# Copy casacore and Singularity from build stage.\nCOPY --from=build /usr/local/bin/run-singularity /usr/local/bin/\nCOPY --from=build /usr/local/bin/singularity /usr/local/bin/\nCOPY --from=build /usr/local/etc /usr/local/etc/\nCOPY --from=build /usr/local/lib /usr/local/lib/\nCOPY --from=build /usr/local/libexec /usr/local/libexec/\nCOPY --from=build /usr/local/var /usr/local/var/\nCOPY --from=build /usr/local/include/casacore /usr/local/include/casacore/\n"
}