{
  "startTime": 1674254305173,
  "endTime": 1674254305845,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.15.1-alpine as builder\n\nRUN apk update \\\n    && apk add --no-cache --virtual build-dependencies \\\n        build-base \\\n        gcc \\\n        wget \\\n        git \\\n    && apk add --no-cache \\\n        bash\n\nRUN npm install npm@latest -g && npm cache clean --force;\n\n# Install python for native dependencies\nRUN apk --no-cache add --virtual native-deps \\\r\n  g++ gcc libgcc libstdc++ linux-headers make python && \\\n  npm install --quiet node-gyp -g && npm cache clean --force;\n\nWORKDIR /usr/noia-node\n\n# Copy only package.json to skip image rebuilding, when a list of dependencies has not changed since last time\nCOPY ./package.json ./package.json\n\nRUN npm install && npm cache clean --force;\n\n# Copy the rest of the sources for building\nCOPY ./src ./src\nCOPY ./tsconfig.json .\n\n# Build from sources\nRUN npm run build\n\n\n\n# Separate runtime from builder\nFROM node:8.11.4-alpine\n\n# Add libc6-compat\n# https://github.com/grpc/grpc/issues/6126\nRUN apk --no-cache add libc6-compat\n\nWORKDIR /usr/noia-node\nCOPY --from=builder /usr/noia-node .\n\n# Required ports\nEXPOSE 8048/tcp 8058/udp\n\nENV NOIA_NODE_MASTER_ADDRESS wss://csl-masters.noia.network:5565\n\n# Run application\nENTRYPOINT [ \"node\", \"./dist/index.js\"]\n"
}