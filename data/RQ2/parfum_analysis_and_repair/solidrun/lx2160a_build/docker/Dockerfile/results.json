{
  "startTime": 1674216260365,
  "endTime": 1674216261330,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 21,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 21,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# use debian base\nFROM debian:buster-slim\n\n# apt proxy (optional)\nARG APTPROXY=\nRUN test -n \"$APTPROXY\" && printf 'Acquire::http { Proxy \"%s\"; }\\n' $APTPROXY | tee -a /etc/apt/apt.conf.d/proxy || true\n\n# update\nRUN set -e; \\\n\tapt-get update; \\\n\tapt-get -y upgrade; \\\n\t:\n\nRUN apt-get update ; apt-get -y --no-install-recommends install build-essential wget make p7zip p7zip-full \\\n        device-tree-compiler acpica-tools xz-utils sudo gcc libssl-dev python2 \\\n        bison flex u-boot-tools git bc fuseext2 e2tools multistrap \\\n        qemu-system-arm g++ cpio python unzip rsync dosfstools tar pandoc \\\n        python3 meson ninja-build squashfs-tools parted mtools kmod && rm -rf /var/lib/apt/lists/*;\n\n# build environment\nWORKDIR /work\nCOPY shflags /\nCOPY entry.sh /\nENTRYPOINT [\"/bin/sh\", \"/entry.sh\"]\n"
}