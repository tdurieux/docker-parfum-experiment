{
  "startTime": 1674253290102,
  "endTime": 1674253290609,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 19,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 4
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:6.11\n\n# Force git to use HTTPS transport\nRUN git config --global url.https://github.com/.insteadOf git://github.com/\n\n# Install application dependencies (copie from node:6.11-onbuild)\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\nARG NODE_ENV\nENV NODE_ENV $NODE_ENV\nCOPY package.json /usr/src/app/\nRUN npm install && npm cache clean --force\nCOPY . /usr/src/app\n\n# Install extra tools\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  jq && rm -rf /var/lib/apt/lists/*;\n\n# Install typescript globally so we can rebuild scripts upon startup\nRUN npm install -g typescript && npm cache clean --force;\n\n# Prepare the application (done in dev startup script)\n# RUN scripts/setup.sh\n\n# Make sure we have some logs directory ready for use\nRUN mkdir logs\n\n# Setup proxy environment for runtime use (ie after build)\n# REMOVE THIS PART IF YOU DO NOT NEED PROXY SUPPORT\nCOPY Docker/etc_apt_apt.conf /etc/apt/apt.conf\nCOPY Docker/etc_environment /etc/environment\n\n\n# Change this according to the `server.*.json` content\nEXPOSE 8080\n\n\nCMD [ \"sh\", \"scripts/startup.dev.server\" ]"
}