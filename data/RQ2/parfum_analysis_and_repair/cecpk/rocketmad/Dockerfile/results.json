{
  "startTime": 1674255707743,
  "endTime": 1674255708390,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Basic docker image for RocketMap\n# Usage:\n#   docker build -t rocketmap .\n#   docker run -d -P rocketmap -a ptc -u YOURUSERNAME -p YOURPASSWORD -l \"Seattle, WA\" -st 10 --gmaps-key CHECKTHEWIKI\n\n# Stage 0: build static assets using Node\nFROM node:12-slim\n\nWORKDIR /usr/src/app\n\nCOPY package.json /usr/src/app/\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        ca-certificates git unzip \\\n && npm install && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nCOPY Gruntfile.js static01.zip /usr/src/app/\nCOPY static /usr/src/app/static\n\n# Build the assets - later we'll copy it to the app's image\nRUN npm run build\n\n\n# Stage 1: Build the actual image\nFROM python:3.6-slim\n\n# Working directory for the application\nWORKDIR /usr/src/app\n\nCOPY requirements.txt /usr/src/app\n\n# Install app's dependencies\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n        build-essential curl imagemagick \\\n && pip install --no-cache-dir dumb-init \\\n && pip install --no-cache-dir -r requirements.txt \\\n && rm -rf /var/lib/apt/lists/* \\\n && apt-get purge -y --auto-remove build-essential\n\n# Default port the webserver runs on\nEXPOSE 5000\n\n# Copy everything to the working directory (Python files, templates, config) in one go.\nCOPY . /usr/src/app\n\n# Remove samples to allow mounting config directory from outside the container\nRUN rm -rf /usr/src/app/config\n\n# Copy compiled statics from stage 0\nCOPY --from=0 /usr/src/app/static /usr/src/app/static\n\n# Set Entrypoint with hard-coded options\nENTRYPOINT [\"dumb-init\", \"-r\", \"15:2\", \"python\", \"./runserver.py\", \"--host\", \"0.0.0.0\"]\n"
}