{
  "startTime": 1674253139315,
  "endTime": 1674253140218,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts-alpine\nARG BUILD_DATE\nARG CI_JOB_ID\nARG CI_PIPELINE_ID\nARG VERSION\nARG VCS_REF\nLABEL org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.name=\"firebase-tools\" \\\n      org.label-schema.version=${VERSION} \\\n      org.label-schema.build-date=${BUILD_DATE} \\\n      org.label-schema.description=\"Firebase CLI on the NodeJS image\" \\\n      org.label-schema.url=\"https://github.com/firebase/firebase-tools/\" \\\n      org.label-schema.vcs-url=\"https://github.com/AndreySenov/dockerfiles/\" \\\n      org.label-schema.vcs-ref=${VCS_REF} \\\n      ci_job_id=${CI_JOB_ID} \\\n      ci_pipeline_id=${CI_PIPELINE_ID}\nENV FIREBASE_TOOLS_VERSION=${VERSION}\nENV HOME=/home/node\nRUN yarn global add firebase-tools@${VERSION} && \\\n    yarn cache clean && \\\n    firebase -V && \\\n    mkdir $HOME/.cache && \\\n    chown -R node:node $HOME\n#USER node\nVOLUME $HOME/.cache\n\n#WORKDIR $HOME\nWORKDIR /usr/app\n\n#COPY package*.json ./\n\n\n# If you are building your code for production\n# RUN npm install --only=production\n\n# Bundle app source\nCOPY . .\n\nRUN cd ./functions && npm install && npm cache clean --force;\n\nRUN ln -s /home/node/.firebaserc /usr/app/.firebaserc\n\nEXPOSE 9005 5000\n\nCMD [\"sh\"]\n\n"
}