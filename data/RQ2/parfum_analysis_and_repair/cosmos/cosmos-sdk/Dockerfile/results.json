{
  "startTime": 1674256019835,
  "endTime": 1674256021053,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Simple usage with a mounted data directory:\n# > docker build -t simapp .\n#\n# Server:\n# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.simapp:/root/.simapp simapp simd init test-chain\n# TODO: need to set validator in genesis so start runs\n# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.simapp:/root/.simapp simapp simd start\n#\n# Client: (Note the simapp binary always looks at ~/.simapp we can bind to different local storage)\n# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.simappcli:/root/.simapp simapp simd keys add foo\n# > docker run -it -p 26657:26657 -p 26656:26656 -v ~/.simappcli:/root/.simapp simapp simd keys list\n# TODO: demo connecting rest-server (or is this in server now?)\nFROM golang:1.18-alpine AS build-env\n\n# Install minimum necessary dependencies\nENV PACKAGES curl make git libc-dev bash gcc linux-headers eudev-dev python3\nRUN apk add --no-cache $PACKAGES\n\n# Set working directory for the build\nWORKDIR /go/src/github.com/cosmos/cosmos-sdk\n\n# Add source files\nCOPY . .\n\n# install simapp, remove packages\nRUN make build-linux\n\n\n# Final image\nFROM alpine:edge\n\n# Install ca-certificates\nRUN apk add --no-cache --update ca-certificates\nWORKDIR /root\n\n# Copy over binaries from the build-env\nCOPY --from=build-env /go/src/github.com/cosmos/cosmos-sdk/build/simd /usr/bin/simd\n\nEXPOSE 26656 26657 1317 9090\n\n# Run simd by default, omit entrypoint to ease using container with simcli\nCMD [\"simd\"]\n"
}