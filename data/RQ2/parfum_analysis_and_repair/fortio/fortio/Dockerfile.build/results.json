{
  "startTime": 1674254526212,
  "endTime": 1674254526830,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 25,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dependencies and linters for build:\nFROM golang:1.18.3\n# Need gcc for -race test (and some linters though those work with CGO_ENABLED=0)\nRUN apt-get -y update && \\\n  apt-get --no-install-recommends -y upgrade && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install libc6-dev apt-transport-https ssh \\\n  ruby-dev build-essential rpm gnupg zip netcat && rm -rf /var/lib/apt/lists/*;\n\n# Install FPM\nRUN gem install --no-document fpm\nRUN go version # check it's indeed the version we expect\n\n# golangci-lint\nRUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin\nRUN golangci-lint version\n\n# Docker:\nRUN set -x;if [ x\"$(dpkg --print-architecture)\" != x\"s390x\" ]; then \\\n    curl -fsSL \"https://download.docker.com/linux/debian/gpg\" | apt-key add; \\\n    echo \"deb [arch=$(dpkg --print-architecture)] https://download.docker.com/linux/debian bullseye stable\" > /etc/apt/sources.list.d/docker.list && \\\n    apt-get -y update && apt-get install --no-install-recommends -y docker-ce; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nWORKDIR /build\nVOLUME /build\nCOPY .golangci.yml .\n"
}