{
  "startTime": 1674218789815,
  "endTime": 1674218791152,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "# ---------------------------------------------------------------------------\n# Install base\n# ---------------------------------------------------------------------------\nFROM debian:stable\nMAINTAINER gm@gm.lv\n\n# Gather args\nARG PHP_VERSION=8.1\n\n# Avoid interactive cli blockers\nENV DEBIAN_FRONTEND noninteractive\n\n# OS dependecies\nRUN apt-get update -yq \\\n    && apt-get install --no-install-recommends -yq apt-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -yq apt-transport-https lsb-release ca-certificates \\\n        nano wget curl unzip git rsync supervisor build-essential && rm -rf /var/lib/apt/lists/*;\n\n\n# ---------------------------------------------------------------------------\n# Install python\n# ---------------------------------------------------------------------------\nRUN apt-get install --no-install-recommends -y python3 python3-pip && rm -rf /var/lib/apt/lists/*;\n\n\n# ---------------------------------------------------------------------------\n# Install php\n# ---------------------------------------------------------------------------\nRUN wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg \\\n    && sh -c 'echo \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" > /etc/apt/sources.list.d/php.list' \\\n    && apt-get update -yq \\\n    && apt-get install --no-install-recommends -yq php${PHP_VERSION}-cli php${PHP_VERSION}-dev php${PHP_VERSION}-curl php${PHP_VERSION}-bcmath \\\n        php${PHP_VERSION}-xml php${PHP_VERSION}-zip php${PHP_VERSION}-mbstring php${PHP_VERSION}-gd \\\n        php${PHP_VERSION}-pgsql php${PHP_VERSION}-mysql php${PHP_VERSION}-ldap && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /bin/sed /usr/bin/sed\n\n# PHP composer\n# Source: https://stackoverflow.com/a/42147748\nRUN wget -O /tmp/composer-setup.php https://getcomposer.org/installer \\\n    && wget -O /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n    # Make sure we're installing what we think we're installing!\n    && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n    && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --stable \\\n    && rm -f /tmp/composer-setup.*\n\n\n# ---------------------------------------------------------------------------\n# Install node.js and npm\n# ---------------------------------------------------------------------------\nRUN wget -O - https://deb.nodesource.com/setup_16.x | bash \\\n    && apt-get install --no-install-recommends nodejs -yq \\\n    && wget -O /usr/lib/ssl/cert.pem https://curl.haxx.se/ca/cacert.pem \\\n    && npm install -g npm@latest && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n\n# ---------------------------------------------------------------------------\n# Copy files, Install dependecies\n# ---------------------------------------------------------------------------\nWORKDIR /srv/sites/cache\n\n# Cache scripts and dependecies first\nCOPY . /root/docker/common/\nRUN cp /root/docker/common/data/* ./\n\n# PHP\nRUN composer install\n\n# NPM\nRUN npm install --no-optional \\\n    && npm cache clean --force\n\n# # Python\n# RUN python3 -m pip install -r requirements.txt\n\nWORKDIR /srv/sites/web\n"
}