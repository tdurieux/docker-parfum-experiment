{
  "startTime": 1674216923178,
  "endTime": 1674216924063,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build as\n# docker build -t fredhutch/motuz_app:latest -f deployment/docker/app/Dockerfile .\n\nFROM python:3.7.3-slim as build-image\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN set -x \\\n    && apt-get update -y \\\n    && apt-get install -y --no-install-recommends --no-install-suggests \\\n        build-essential \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV PATH=/root/.local/bin:$PATH\nCOPY ./requirements.txt /code/requirements.txt\nRUN pip install --no-cache-dir --user -r /code/requirements.txt\n\n\n\n\n\n\nFROM python:3.7.3-slim\n\nCOPY --from=build-image /root/.local /root/.local\nENV PATH=/root/.local/bin:$PATH\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN set -x \\\n    && apt-get update -y \\\n    && apt-get install -y --no-install-recommends --no-install-suggests \\\n        krb5-user \\\n        libpam-krb5 \\\n        sssd \\\n        libpam-sss \\\n        sudo \\\n        curl \\\n        unzip \\\n    && curl -f -LO https://downloads.rclone.org/v1.47.0/rclone-v1.47.0-linux-amd64.zip \\\n    && unzip rclone-v1.47.0-linux-amd64.zip \\\n    && cp rclone-v1.47.0-linux-amd64/rclone /usr/local/bin/ \\\n    && rm -rf rclone-v1.47.0-linux-amd64.zip rclone-v1.47.0-linux-amd64/ \\\n    && apt-get remove --purge --auto-remove -y \\\n        unzip \\\n        curl \\\n    && apt-get purge -y --auto-remove \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV PYTHONUNBUFFERED 1\nENV DOCKER_CONTAINER 1\nENV FLASK_ENV development\nENV MOTUZ_HOST 0.0.0.0\n# libpython3.7m.so.1.0 cannot be found if /etc is remapped\nENV LD_LIBRARY_PATH /usr/local/lib\n\nRUN set -x \\\n    && install -d -m 755 /root/.config/rclone/ \\\n    && touch /root/.config/rclone/rclone.conf\n\nCOPY ./src/backend /app/src/backend\nCOPY \\\n    ./deployment/docker/app/app-entrypoint.sh \\\n    ./deployment/docker/wait-for-it.sh \\\n    ./deployment/docker/load-secrets.sh \\\n    /app/src/backend/\n\nWORKDIR /app/src/backend\nCMD /app/src/backend/app-entrypoint.sh\n"
}