{
  "startTime": 1674218707085,
  "endTime": 1674218708266,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 1,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0-%%VARIANT%%\n\nLABEL maintainer=\"pierre@piwik.org\"\n\nENV PHP_MEMORY_LIMIT=256M\n\nRUN set -ex; \\\n\n\tapk add --no-cache --virtual .build-deps \\\n\t\t$PHPIZE_DEPS \\\n\t\tautoconf \\\n\t\tfreetype-dev \\\n\t\ticu-dev \\\n\t\tlibjpeg-turbo-dev \\\n\t\tlibpng-dev \\\n\t\tlibzip-dev \\\n\t\topenldap-dev \\\n\t\tpcre-dev \\\n\t\tprocps \\\n\t; \\\n\n\tdocker-php-ext-configure gd --with-freetype --with-jpeg; \\\n\tdocker-php-ext-configure ldap; \\\n\tdocker-php-ext-install -j \"$(nproc)\" \\\n\t\tgd \\\n\t\tbcmath \\\n\t\tldap \\\n\t\tmysqli \\\n\t\topcache \\\n\t\tpdo_mysql \\\n\t\tzip \\\n\t; \\\n\n# pecl will claim success even if one install fails, so we need to perform each install separately\n\tpecl install APCu-5.1.21; \\\n\tpecl install redis-5.3.6; \\\n\n\tdocker-php-ext-enable \\\n\t\tapcu \\\n\t\tredis \\\n\t; \\\n\trm -r /tmp/pear; \\\n\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \\\n\t\t| tr ',' '\\n' \\\n\t\t| sort -u \\\n\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --virtual .matomo-phpext-rundeps $runDeps; \\\n\tapk del .build-deps\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nENV MATOMO_VERSION %%VERSION%%\n\nRUN set -ex; \\\n\tapk add --no-cache --virtual .fetch-deps \\\n\t\tgnupg \\\n\t; \\\n\t\\\n\tcurl -fsSL -o matomo.tar.gz \\\n\t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz\"; \\\n\tcurl -fsSL -o matomo.tar.gz.asc \\\n\t\t\"https://builds.matomo.org/matomo-${MATOMO_VERSION}.tar.gz.asc\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys F529A27008477483777FC23D63BB30D0E5D2C749; \\\n\tgpg --batch --verify matomo.tar.gz.asc matomo.tar.gz; \\\n\tgpgconf --kill all; \\\n\trm -rf \"$GNUPGHOME\" matomo.tar.gz.asc; \\\n\ttar -xzf matomo.tar.gz -C /usr/src/; \\\n\trm matomo.tar.gz; \\\n\tapk del .fetch-deps\n\nCOPY php.ini /usr/local/etc/php/conf.d/php-matomo.ini\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\n# WORKDIR is /var/www/html (inherited via \"FROM php\")\n# \"/entrypoint.sh\" will populate it at container startup from /usr/src/matomo\nVOLUME /var/www/html\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"%%CMD%%\"]\n"
}