{
  "startTime": 1674219029489,
  "endTime": 1674219030342,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stable\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get -y upgrade\nRUN apt-get -y --no-install-recommends install curl make libtool bzip2 nasm && rm -rf /var/lib/apt/lists/*;\n\n# Fetch and extract the toolchain from Aboriginal Linux. This can build static binaries.\nWORKDIR /tmp\nRUN curl -f -O http://landley.net/aboriginal/downloads/old/binaries/1.3.0/cross-compiler-x86_64.tar.bz2\nRUN echo '1587ea6d018e419b7fd31b738fa7c1db1af97ff7  cross-compiler-x86_64.tar.bz2' | sha1sum -c\nRUN tar xf cross-compiler-x86_64.tar.bz2 -C /usr/local/ && rm cross-compiler-x86_64.tar.bz2\nENV PATH /usr/local/cross-compiler-x86_64/bin:$PATH\n\n# Fetch and build djpeg.\nRUN curl -f -O -L https://storage.googleapis.com/camlistore-release/djpeg/libjpeg-turbo-1.4.1.tar.gz\nRUN echo '363a149f644211462c45138a19674f38100036d3  libjpeg-turbo-1.4.1.tar.gz' | sha1sum -c\nRUN mkdir /src\nRUN tar xf libjpeg-turbo-1.4.1.tar.gz -C /src && rm libjpeg-turbo-1.4.1.tar.gz\nWORKDIR /src/libjpeg-turbo-1.4.1\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CXX=x86_64-c++ CC=x86_64-gcc LDFLAGS=\"-static\"\nRUN make LDFLAGS=\"-all-static\"\n"
}