{
  "startTime": 1674248691779,
  "endTime": 1674248692640,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2021  IBM Corporation\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nARG FROM_IMAGE\n\n# multi-stage for caching\nFROM $FROM_IMAGE AS cache\n\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n    python3-vcstool \\\n    && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# clone underlay source (cartographer)\nENV UNDERLAY_WS /opt/underlay_ws\nRUN mkdir -p $UNDERLAY_WS/src\nWORKDIR $UNDERLAY_WS\n\nCOPY ./cartographer     ./src/cartographer\nCOPY ./cartographer_ros ./src/cartographer_ros\n\n# copy overlay source (others)\nENV OVERLAY_WS /opt/overlay_ws\nRUN mkdir -p $OVERLAY_WS/src\nWORKDIR $OVERLAY_WS\n\nCOPY ./xsens_driver ./src/xsens_driver\nCOPY ./velodyne     ./src/velodyne\n\n# copy manifests for caching\nWORKDIR /opt\nRUN mkdir -p /tmp/package && \\\n    mkdir -p /tmp/pip && \\\n    mkdir -p /tmp/npm\nRUN find ./ -name \"package.xml\" | \\\n    xargs cp --parents -t /tmp/package\n#RUN find ./ -name \"requirements.txt\" | \\\n#    xargs cp --parents -t /tmp/pip\n#RUN find ./ -name \"package.json\" | \\\n#    xargs cp --parents -t /tmp/npm\n\n\nFROM $FROM_IMAGE AS build\nARG ROS_DISTRO=noetic\nARG TZ=\"Etc/UTC\"\nENV ROS_DISTRO=$ROS_DISTRO \\\n\tDEBIAN_FRONTEND=\"noninteractive\" \\\n\tTZ=$TZ\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n    ninja-build \\\n    git \\\n    stow \\\n    && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# copy underlay manifests\nCOPY --from=cache /tmp/package /opt\nENV UNDERLAY_WS /opt/underlay_ws\n\n# install proto3\nWORKDIR $UNDERLAY_WS\nCOPY ./install_proto3_isolated.sh .\nRUN ./install_proto3_isolated.sh\n\n# install abseil\nCOPY ./cartographer/scripts/install_abseil.sh .\nRUN ./install_abseil.sh\n\n# install underlay dependencies\nWORKDIR $UNDERLAY_WS\nRUN . /opt/ros/$ROS_DISTRO/setup.sh && \\\n    apt update && rosdep install -q -y \\\n      --from-paths src \\\n      --ignore-src \\\n    && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# copy underlay source\nCOPY --from=cache $UNDERLAY_WS ./\n\nRUN . /opt/ros/$ROS_DISTRO/setup.sh && \\\n    PATH=\"${PWD}/protobuf/install/bin:${PATH}\" \\\n    PROTOBUF_INCLUDE_DIRS=\"${PWD}/protobuf/install/include\"  \\\n    PROTOBUF_LIBRARY=\"${PWD}/protobuf/install/lib/libprotobuf.a\" \\\n    PROTOBUF_PROTOC_EXECUTABLE=\"${PWD}/protobuf/install/bin/protoc\" \\\n    catkin_make_isolated --install --use-ninja \\\n    -DCMAKE_PREFIX_PATH=\"${PWD}/install_isolated;${CMAKE_PREFIX_PATH}\"\n\nRUN sed -i 's:ros/$ROS_DISTRO:underlay_ws/install_isolated:' /ros_entrypoint.sh\n\n# install overlay dependencies\nENV OVERLAY_WS /opt/overlay_ws\nWORKDIR $OVERLAY_WS\nRUN . $UNDERLAY_WS/install_isolated/setup.sh && \\\n    apt update && rosdep install -q -y \\\n      --from-paths src \\\n      --ignore-src \\\n    && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n## install wireless packges\n\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n    wget \\\n    && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable xenial main\" > /etc/apt/sources.list.d/gazebo-stable.list' && \\\n    wget https://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -\n\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n    ros-${ROS_DISTRO}-rosbridge-suite && \\\n    apt install -y --no-install-recommends \\\n    nodejs \\\n    npm \\\n    python3-pip \\\n    ros-${ROS_DISTRO}-tf2-geometry-msgs \\\n    ros-${ROS_DISTRO}-gazebo-msgs \\\n    ros-${ROS_DISTRO}-velodyne-description \\\n    ros-${ROS_DISTRO}-realsense2-description \\\n    && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=cache /tmp/pip /opt\nCOPY --from=cache /tmp/npm /opt\n# WORKDIR /tmp\n# COPY ./requirements.txt .\n# COPY ./package.json .\n# RUN pip install -r requirements.txt\n# RUN npm install -g\n\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n    ros-${ROS_DISTRO}-tf-conversions \\\n    ros-${ROS_DISTRO}-map-server \\\n    python3-matplotlib \\\n    python3-sklearn \\\n    && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir \\\n    requests==2.24.0 \\\n    certifi==2020.06.20 \\\n    pyproj==2.2.1\n\n## install cvi client packages\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n    ros-${ROS_DISTRO}-people-msgs \\\n    ros-${ROS_DISTRO}-rosserial-python \\\n    python3-tk \\\n    python-is-python3 \\\n    && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY ./launch.sh /\n\n# setup for display\nENV USERNAME developer\n\n### replace 1000 with your user/group id\nARG UID=1000\nRUN useradd -m $USERNAME && \\\n    echo \"$USERNAME:$USERNAME\" | chpasswd && \\\n    usermod --shell /bin/bash $USERNAME && \\\n    usermod -aG sudo $USERNAME && \\\n    mkdir -p /etc/sudoers.d/ && \\\n    echo \"$USERNAME ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/$USERNAME && \\\n    chmod 0440 /etc/sudoers.d/$USERNAME && \\\n    usermod  --uid $UID $USERNAME && \\\n    groupmod --gid $UID $USERNAME\n\nUSER $USERNAME\n\nENV HOME /home/$USERNAME\nWORKDIR $HOME/loc_ws\n"
}