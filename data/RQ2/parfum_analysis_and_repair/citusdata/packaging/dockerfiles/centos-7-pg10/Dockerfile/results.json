{
  "startTime": 1674214900903,
  "endTime": 1674214902068,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 11,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 12,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 6,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 39,
        "columnEnd": 68
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 142
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 59,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 65,
        "columnEnd": 84
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 13,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 6,
        "columnEnd": 122
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 56,
        "columnEnd": 105
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 48,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 11,
        "columnEnd": 71
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 12,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nRUN [[ centos != centos ]] || [[ 7 != 8 ]] || ( \\\n    cd /etc/yum.repos.d/ && sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* \\\n    && sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.epel.cloud|g' /etc/yum.repos.d/CentOS-* \\\n    )\n\nRUN yum -y update\n\n# FIXME: Hack around docker/docker#10180\nRUN ( yum install -y yum-plugin-ovl || yum install -y yum-plugin-ovl || touch /var/lib/rpm/* ) \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# Enable some other repos for some dependencies in OL/7\n# see https://yum.oracle.com/getting-started.html#installing-from-oracle-linux-yum-server\nRUN [[ centos != oraclelinux ]] || [[ 7 != 7 ]] || ( \\\n       yum install -y oraclelinux-release-el7 oracle-softwarecollection-release-el7 oracle-epel-release-el7  oraclelinux-developer-release-el7 \\\n       && yum-config-manager --enable \\\n            ol7_software_collections \\\n            ol7_developer \\\n            ol7_developer_EPEL \\\n            ol7_optional_latest \\\n            ol7_optional_archive \\\n            ol7_u9_base \\\n            ol7_security_validation \\\n            ol7_addons \\\n         ) && rm -rf /var/cache/yum\n\n# lz4 1.8 is preloaded in oracle 7 however, lz4-devel is not loaded and only 1.7.5 version exists\n# in oracle 7 repos. So package from centos repo was used\n# There is no package in oracle repos for lz4. Also it is not preloaded. So both lz4 and lz4-devel packages\n# were downloaded from centos el/6 repos\nRUN if [[ centos   == oraclelinux ]] && [[ 7 == 7 ]]; then \\\n yum install -y wget \\\n        && wget https://mirror.centos.org/centos/7/os/x86_64/Packages/lz4-devel-1.8.3-1.el7.x86_64.rpm \\\n        && rpm -ivh lz4-devel-1.8.3-1.el7.x86_64.rpm; rm -rf /var/cache/yum \\\n        elif [[ centos   == oraclelinux ]] && [[ 7 == 6 ]]; then \\\n        yum install -y wget \\\n        && wget https://cbs.centos.org/kojifiles/packages/lz4/r131/1.el6/x86_64/lz4-r131-1.el6.x86_64.rpm \\\n        && rpm -ivh lz4-r131-1.el6.x86_64.rpm \\\n        && wget https://cbs.centos.org/kojifiles/packages/lz4/r131/1.el6/x86_64/lz4-devel-r131-1.el6.x86_64.rpm \\\n        && rpm -ivh lz4-devel-r131-1.el6.x86_64.rpm; rm -rf /var/cache/yum \\\n        else yum install -y lz4 lz4-devel; rm -rf /var/cache/yum fi\n\n\n# install build tools and PostgreSQL development files\nRUN ( yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm \\\n    && [[ -z \"epel-release centos-release-scl-rh\" ]] || yum install -y epel-release centos-release-scl-rh) \\\n    && yum groupinstall -y 'Development Tools' \\\n    && yum install -y \\\n        curl \\\n        flex \\\n        gcc-c++ \\\n        hunspell-en \\\n        libcurl-devel \\\n        libicu-devel \\\n        libstdc++-devel \\\n        libxml2-devel \\\n        libxslt-devel \\\n        openssl-devel \\\n        pam-devel \\\n        readline-devel \\\n        rpm-build \\\n        rpmlint \\\n        spectool \\\n        tar \\\n        libzstd \\\n        libzstd-devel \\\n        llvm-toolset-7-clang llvm5.0 \\\n    && ( [[ 7 < 8 ]] || dnf -qy module disable postgresql ) \\\n    && yum install -y postgresql10-server postgresql10-devel \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# install jq to process JSON API responses\nRUN curl -f -sL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n         -o /usr/bin/jq \\\n    && chmod +x /usr/bin/jq\n\n# install devtoolset-8-gcc on distros where it is available\nRUN { \\\n        { yum search devtoolset-8-gcc 2>&1 | grep 'No matches found' ; } \\\n        || yum install -y devtoolset-8-gcc devtoolset-8-libstdc++-devel; \\\n    } \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# install sphinx on distros with python3\nRUN { \\\n        { yum search python3-pip 2>&1 | grep 'No matches found' ; } \\\n        || { \\\n         yum install -y python3-pip && \\\n            pip3 install --no-cache-dir sphinx==1.8 \\\n            ; \\\n           } \\\n          } \\\n    && yum clean all && rm -rf /var/cache/yum\n\n\nRUN touch /rpmlintrc \\\n    && echo '%_build_pkgcheck %{_bindir}/rpmlint -f /rpmlintrc' >> /etc/rpm/macros\n\n# set PostgreSQL version, place scripts on path, and declare output volume\nENV PGVERSION=10 \\\n    PATH=/scripts:$PATH\nCOPY scripts /scripts\nVOLUME /packages\n\nENTRYPOINT [\"/scripts/fetch_and_build_rpm\"]\n"
}