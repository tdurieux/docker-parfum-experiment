diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/citusdata/packaging/dockerfiles/oraclelinux-8-pg10/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/citusdata/packaging/dockerfiles/oraclelinux-8-pg10/Dockerfile/repaired.Dockerfile
index fe3bb5f..95a2a3d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/citusdata/packaging/dockerfiles/oraclelinux-8-pg10/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/citusdata/packaging/dockerfiles/oraclelinux-8-pg10/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# vim:set ft=dockerfile:
 FROM oraclelinux:8
 
 RUN [[ oraclelinux != centos ]] || [[ 8 != 8 ]] || ( \
@@ -10,9 +9,9 @@ RUN yum -y update
 
 # FIXME: Hack around docker/docker#10180
 RUN ( yum install -y yum-plugin-ovl || yum install -y yum-plugin-ovl || touch /var/lib/rpm/* ) \
-    && yum clean all
+    && yum clean all && rm -rf /var/cache/yum
 
-# Enable some other repos for some dependencies in OL/7 
+# Enable some other repos for some dependencies in OL/7
 # see https://yum.oracle.com/getting-started.html#installing-from-oracle-linux-yum-server
 RUN [[ oraclelinux != oraclelinux ]] || [[ 8 != 7 ]] || ( \
        yum install -y oraclelinux-release-el7 oracle-softwarecollection-release-el7 oracle-epel-release-el7  oraclelinux-developer-release-el7 \
@@ -25,21 +24,23 @@ RUN [[ oraclelinux != oraclelinux ]] || [[ 8 != 7 ]] || ( \
             ol7_u9_base \
             ol7_security_validation \
             ol7_addons \
-         )
+         ) && rm -rf /var/cache/yum
 
 # lz4 1.8 is preloaded in oracle 7 however, lz4-devel is not loaded and only 1.7.5 version exists
 # in oracle 7 repos. So package from centos repo was used
 # There is no package in oracle repos for lz4. Also it is not preloaded. So both lz4 and lz4-devel packages
 # were downloaded from centos el/6 repos
-RUN if [[ oraclelinux   == oraclelinux ]] && [[ 8 == 7 ]]; then yum install -y wget \
-        && wget http://mirror.centos.org/centos/7/os/x86_64/Packages/lz4-devel-1.8.3-1.el7.x86_64.rpm \
-        && rpm -ivh lz4-devel-1.8.3-1.el7.x86_64.rpm ; \
-        elif [[ oraclelinux   == oraclelinux ]] && [[ 8 == 6 ]]; then yum install -y wget \
+RUN if [[ oraclelinux   == oraclelinux ]] && [[ 8 == 7 ]]; then \
+ yum install -y wget \
+        && wget https://mirror.centos.org/centos/7/os/x86_64/Packages/lz4-devel-1.8.3-1.el7.x86_64.rpm \
+        && rpm -ivh lz4-devel-1.8.3-1.el7.x86_64.rpm; rm -rf /var/cache/yum \
+        elif [[ oraclelinux   == oraclelinux ]] && [[ 8 == 6 ]]; then \
+        yum install -y wget \
         && wget https://cbs.centos.org/kojifiles/packages/lz4/r131/1.el6/x86_64/lz4-r131-1.el6.x86_64.rpm \
         && rpm -ivh lz4-r131-1.el6.x86_64.rpm \
         && wget https://cbs.centos.org/kojifiles/packages/lz4/r131/1.el6/x86_64/lz4-devel-r131-1.el6.x86_64.rpm \
-        && rpm -ivh lz4-devel-r131-1.el6.x86_64.rpm;  \
-        else yum install -y lz4 lz4-devel; fi
+        && rpm -ivh lz4-devel-r131-1.el6.x86_64.rpm; rm -rf /var/cache/yum \
+        else yum install -y lz4 lz4-devel; rm -rf /var/cache/yumfi
 
 
 # install build tools and PostgreSQL development files
@@ -68,10 +69,10 @@ RUN ( yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-8
         llvm-toolset ccache \
     && ( [[ 8 < 8 ]] || dnf -qy module disable postgresql ) \
     && yum install -y postgresql10-server postgresql10-devel \
-    && yum clean all
+    && yum clean all && rm -rf /var/cache/yum
 
 # install jq to process JSON API responses
-RUN curl -sL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \
+RUN curl -f -sL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \
          -o /usr/bin/jq \
     && chmod +x /usr/bin/jq
 
@@ -80,18 +81,18 @@ RUN { \
         { yum search devtoolset-8-gcc 2>&1 | grep 'No matches found' ; } \
         || yum install -y devtoolset-8-gcc devtoolset-8-libstdc++-devel; \
     } \
-    && yum clean all
+    && yum clean all && rm -rf /var/cache/yum
 
 # install sphinx on distros with python3
 RUN { \
         { yum search python3-pip 2>&1 | grep 'No matches found' ; } \
         || { \
-            yum install -y python3-pip && \
-            pip3 install sphinx==1.8 \
+         yum install -y python3-pip && \
+            pip3 install --no-cache-dir sphinx==1.8 \
             ; \
-        } \
-    } \
-    && yum clean all
+           } \
+          } \
+    && yum clean all && rm -rf /var/cache/yum
 
 
 RUN touch /rpmlintrc \