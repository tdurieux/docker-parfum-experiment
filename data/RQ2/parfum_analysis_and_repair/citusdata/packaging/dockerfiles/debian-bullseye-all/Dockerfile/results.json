{
  "startTime": 1674215049288,
  "endTime": 1674215050290,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye\nARG DEBIAN_FRONTEND=noninteractive\n\n# See https://github.com/tianon/docker-brew-debian/issues/49 for discussion of the following\n#\n# https://bugs.debian.org/830696 (apt uses gpgv by default in newer releases, rather than gpg)\nRUN set -x \\\n\t&& apt-get update \\\n# Fix ipv6 issue on travis: https://github.com/f-secure-foundry/usbarmory-debian-base_image/issues/9#issuecomment-466594168\n\t&& mkdir ~/.gnupg && echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf \\\n\t&& { \\\n\t\twhich gpg \\\n# prefer gnupg2, to match APT's Recommends\n\t\t|| apt-get install -y --no-install-recommends gnupg2 \\\n\t\t|| apt-get install -y --no-install-recommends gnupg \\\n\t; } \\\n# Ubuntu includes \"gnupg\" (not \"gnupg2\", but still 2.x), but not dirmngr, and gnupg 2.x requires dirmngr\n# so, if we're not running gnupg 1.x, explicitly install dirmngr too \\\n\t&& { \\\n\t\tgpg --batch --version | grep -q '^gpg (GnuPG) 1\\.' \\\n\t\t|| apt-get install -y --no-install-recommends dirmngr \\\n\t; \\\n} \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN set -ex; \\\n# pub   4096R/ACCC4CF8 2011-10-13 [expires: 2019-07-02]\n#       Key fingerprint = B97B 0AFC AA1A 47F0 44F2  44A0 7FCC 7D46 ACCC 4CF8\n# uid                  PostgreSQL Debian Repository\n    key='B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8'; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n# Fix ipv6 issue on travis: https://github.com/f-secure-foundry/usbarmory-debian-base_image/issues/9#issuecomment-466594168\n    echo \"disable-ipv6\" >> $GNUPGHOME/dirmngr.conf; \\\n    gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys \"$key\"; \\\n    gpg --batch --export \"$key\" > /etc/apt/trusted.gpg.d/postgres.gpg; \\\n    command -v gpgconf > /dev/null && gpgconf --kill all; \\\n    rm -rf \"$GNUPGHOME\"; \\\n    apt-key list\n\n# install build tools and PostgreSQL development files\n\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ bullseye-pgdg main' > /etc/apt/sources.list.d/pgdg.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        autotools-dev \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        debhelper \\\n        devscripts \\\n        fakeroot \\\n        flex \\\n        libcurl4-openssl-dev \\\n        libdistro-info-perl \\\n        libedit-dev \\\n        libfile-fcntllock-perl \\\n        libicu-dev \\\n        libkrb5-dev \\\n        libpam0g-dev \\\n        libreadline-dev \\\n        libselinux1-dev \\\n        libssl-dev \\\n        libxslt-dev \\\n        lintian \\\n        postgresql-server-dev-all \\\n        wget \\\n        zlib1g-dev \\\n        python3-pip \\\n        python3-setuptools \\\n        liblz4-dev \\\n        liblz4-1 \\\n        libzstd1 \\\n        libzstd-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir sphinx\n\n# install jq to process JSON API responses\nRUN curl -f -sL https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64 \\\n         -o /usr/bin/jq \\\n    && chmod +x /usr/bin/jq\n\n# install packagecloud repos for pg_auto_failover\nRUN curl -f -s https://packagecloud.io/install/repositories/citusdata/community/script.deb.sh | bash \\\n    && rm -rf /var/lib/apt/lists/*\n\n# patch pg_buildext to use multiple processors\nCOPY make_pg_buildext_parallel.patch /\nRUN patch `which pg_buildext` < /make_pg_buildext_parallel.patch\n\n# place scripts on path and declare output volume\nENV PATH /scripts:$PATH\nCOPY scripts /scripts\nVOLUME /packages\n\nENTRYPOINT [\"/scripts/fetch_and_build_deb\"]\n"
}