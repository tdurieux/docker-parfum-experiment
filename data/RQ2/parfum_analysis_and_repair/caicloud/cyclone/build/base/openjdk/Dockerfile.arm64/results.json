{
  "startTime": 1674247874062,
  "endTime": 1674247875669,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 147
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM arm64v8/openjdk:8-alpine3.8\n\nRUN apk add --no-cache curl grep sed unzip bash nodejs nodejs-npm\n\n# Set timezone to CST\nENV TZ=America/Chicago\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nWORKDIR /usr/src\n\nRUN curl -f --insecure -o ./sonarscanner.zip -L https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip && \\\n\tunzip sonarscanner.zip && \\\n\trm sonarscanner.zip && \\\n\tmv sonar-scanner-3.3.0.1492-linux /usr/lib/sonar-scanner && \\\n\tln -s /usr/lib/sonar-scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner\n\nENV SONAR_RUNNER_HOME=/usr/lib/sonar-scanner\n\nCOPY build/base/openjdk/sonar-runner.properties /usr/lib/sonar-scanner/conf/sonar-scanner.properties\n\n#   ensure Sonar uses the provided Java for musl instead of a borked glibc one\nRUN sed -i 's/use_embedded_jre=true/use_embedded_jre=false/g' /usr/lib/sonar-scanner/bin/sonar-scanner\n\n# Separating ENTRYPOINT and CMD operations allows for core execution variables to\n# be easily overridden by passing them in as part of the `docker run` command.\n# This allows the default /usr/src base dir to be overridden by users as-needed.\n\n# ENTRYPOINT [\"sonar-scanner\"]\nCMD [\"-Dsonar.projectBaseDir=/usr/src\"]\n\n# ==================== #\n# Contents above copied from https://github.com/newtmitch/docker-sonar-scanner/blob/master/Dockerfile.sonarscanner-3.3.0-alpine,\n# in order to build an arm64 supported image of newtmitch/sonar-scanner:3.3.0-alpine\n# ==================== #\n\n# FROM newtmitch/sonar-scanner:3.3.0-alpine\n\nLABEL maintainer=\"zhujian@caicloud.io\"\n\nRUN apk update && \\\n    apk add --no-cache ca-certificates bash coreutils curl jq\n\n\n"
}