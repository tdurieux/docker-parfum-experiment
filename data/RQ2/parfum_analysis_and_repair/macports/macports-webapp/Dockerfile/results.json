{
  "startTime": 1674254790533,
  "endTime": 1674254791106,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM arjunsalyan/macports-ubuntu\nARG USER=0:0\n\n# Install required packages and remove the apt packages cache when done.\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y \\\n        git \\\n        python3 \\\n        python3-dev \\\n        python3-setuptools \\\n        python3-pip \\\n        nginx \\\n        cron \\\n        rsync \\\n        python-dev \\\n        libpq-dev \\\n        tcllib \\\n        supervisor && \\\n    pip3 install --no-cache-dir -U pip setuptools && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install uwsgi now because it takes a little while\nRUN pip3 install --no-cache-dir uwsgi\n\n# setup all the configfiles\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nCOPY config/nginx.conf /etc/nginx/sites-available/default\nCOPY config/supervisor.conf /etc/supervisor/conf.d/\n\n# COPY requirements.txt and RUN pip install BEFORE adding the rest of your code, this will cause Docker's caching mechanism\n# to prevent re-installing (all your) dependencies when you made a change a line or two in your app.\n\nCOPY app/requirements.txt /code/app/\nRUN pip3 install --no-cache-dir -r /code/app/requirements.txt\n\n# Setup cron\nCOPY config/crons /etc/cron.d/crons\nRUN chmod 0644 /etc/cron.d/crons\n\n# add (the rest of) our code\nCOPY . /code/\n\nRUN touch /var/log/buildhistorycron.log\nRUN touch /var/log/portinfocron.log\nRUN chown -R ${USER} /var/log/buildhistorycron.log /var/log/portinfocron.log /var/log/supervisor /var/log/nginx /var/lib/nginx /code\nRUN chown ${USER} /run\n\nUSER ${USER}\nEXPOSE 8080\nCMD [\"/usr/bin/supervisord\", \"-n\"]\n"
}