{
  "startTime": 1674254716471,
  "endTime": 1674254717614,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 151,
        "columnEnd": 176
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 29,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER EMC{code} <http://community.emccode.com>\n\n# Install Dependencies\n\nRUN apt-get update -q --fix-missing\nRUN apt-get -qy --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*; # (for add-apt-repository)\nRUN add-apt-repository ppa:george-edison55/cmake-3.x\nRUN apt-get update -q\nRUN apt-cache policy cmake\nRUN apt-get -qy install \\\n  autoconf \\\n  automake \\\n  build-essential \\\n  ca-certificates \\\n  cmake=3.2.2-2~ubuntu14.04.1~ppa1 \\\n  curl \\\n  g++ \\\n  git-core \\\n  gdb \\\n  heimdal-clients \\\n  libapr1-dev \\\n  libboost-dev \\\n  libcurl4-nss-dev \\\n  libffi-dev \\\n  libgoogle-glog-dev \\\n  libprotobuf-dev \\\n  libpython-dev \\\n  libsasl2-dev \\\n  libsasl2-modules-gssapi-heimdal \\\n  libssl-dev \\\n  libsvn-dev \\\n  libtool \\\n  make \\\n  python \\\n  python2.7 \\\n  python-dev \\\n  python-pip \\\n  python-protobuf \\\n  python-setuptools \\\n  unzip \\\n  wget \\\n  --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir --upgrade pyopenssl ndg-httpsclient pyasn1\n\n# Install the picojson headers\nRUN wget https://raw.githubusercontent.com/kazuho/picojson/v1.3.0/picojson.h -O /usr/local/include/picojson.h\n\n# Prepare to build Mesos\nRUN mkdir -p /mesos\nRUN mkdir -p /tmp\nRUN mkdir -p /usr/share/java/\nRUN wget https://search.maven.org/remotecontent?filepath=com/google/protobuf/protobuf-java/2.6.1/protobuf-java-2.6.1.jar -O protobuf.jar\nRUN mv protobuf.jar /usr/share/java/\n\nWORKDIR /mesos\nENV LD_LIBRARY_PATH /usr/local/lib\n\nENV PROTOBUF_DEST /mesos/3rdparty/libprocess/3rdparty\n\n#ENV MESOS_VERSION=0.23.1 GIT_CHECKOUT_HASH=a9ea8b1 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=0.24.2 GIT_CHECKOUT_HASH=e2eb20b PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=0.25.1 GIT_CHECKOUT_HASH=c46b9c8 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=0.26.1 GIT_CHECKOUT_HASH=a041e3a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=0.26.2 GIT_CHECKOUT_HASH=5edc7ba PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=0.27.2 GIT_CHECKOUT_HASH=3c9ec4a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=0.27.3 GIT_CHECKOUT_HASH=68dd1f6 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=0.28.2 GIT_CHECKOUT_HASH=ceecad6 PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=0.28.3 GIT_CHECKOUT_HASH=52a0b0a PROTOBUF_VERSION=2.5.0 PROTOBUF_SOURCE=/mesos/3rdparty/libprocess/3rdparty\n#ENV MESOS_VERSION=1.0.0 GIT_CHECKOUT_HASH=c9b7058 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#ENV MESOS_VERSION=1.0.1 GIT_CHECKOUT_HASH=3611eb0 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#ENV MESOS_VERSION=1.1.0 GIT_CHECKOUT_HASH=a44b077 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\n#ENV MESOS_VERSION=1.2.0 GIT_CHECKOUT_HASH=de306b5 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\nENV MESOS_VERSION=1.2.1 GIT_CHECKOUT_HASH=7a0cc55 PROTOBUF_VERSION=2.6.1 PROTOBUF_SOURCE=/mesos/3rdparty\nENV ISOLATOR_VERSION $MESOS_VERSION\nENV GIT_SOURCE git://git.apache.org/mesos.git\n\n# Clone Mesos\nRUN git clone $GIT_SOURCE /mesos\nRUN git checkout $GIT_CHECKOUT_HASH\nRUN git log -n 1\n\n# Install protobuf\nRUN mkdir -p $PROTOBUF_DEST\nRUN cd ${PROTOBUF_SOURCE} && tar -xzvf protobuf-${PROTOBUF_VERSION}.tar.gz -C ${PROTOBUF_DEST} && cd ${PROTOBUF_DEST}/protobuf-${PROTOBUF_VERSION}/ && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make -j 2 && make install && rm protobuf-${PROTOBUF_VERSION}.tar.gz\n\n# Bootstrap\nRUN ./bootstrap\n\n# Configure\nRUN mkdir build && cd build && ../configure --disable-java --disable-optimize --without-included-zookeeper --with-glog=/usr/local --with-protobuf=/usr --with-boost=/usr/local\n\n# Build Mesos\nRUN cd build && make -j 2 install\n\n# Install python eggs\nRUN easy_install /mesos/build/src/python/dist/mesos.interface-*.egg\n#RUN easy_install /mesos/build/src/python/dist/mesos.native-*.egg\n\n# This image builds mesos and retains the resulting headers and binaries.\n# It is intended to support mesos isolator module development and production builds.\n# A source code tree for the isolator should be mounted at /isolator if using the default entrypoint.\n\nVOLUME [\"/isolator\"]\n\nCOPY ./docker-isolator-entrypoint.sh /\nENTRYPOINT [\"/docker-isolator-entrypoint.sh\"]\nCMD [\"/usr/bin/make\", \"all\"]\n\n# To build Docker image:\n# docker build -t <docker-user-name>/mesos-build-module-dev:<ver> -f Dockerfile-mesos-modules-dev .\n\n# default COMMAND simply builds isolator\n# use it like this:\n# docker run -ti -v <path-to-git-clone>/mesos-module-dvdi/isolator/:/isolator <docker-user-name>/mesos-build-module-dev:<ver>\n\n# to extract the newly built .so to the mounted source directory volume mount - you should over-ride the default CMD like this:\n# docker run -ti -v <path-to-git-clone>/mesos-module-dvdi/isolator/:/isolator <docker-user-name>/mesos-build-module-dev:<ver> /bin/bash -c  '/usr/bin/make all && cp /isolator/build/.libs/libmesos_dvdi_isolator-${ISOLATOR_VERSION}.so /isolator/'\n"
}