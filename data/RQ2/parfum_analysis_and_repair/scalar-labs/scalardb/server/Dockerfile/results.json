{
  "startTime": 1674218380389,
  "endTime": 1674218381082,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/busybox:1.32 AS tools\n\nENV GRPC_HEALTH_PROBE_VERSION v0.4.11\nENV DOCKERIZE_VERSION v0.6.1\n\n# Install grpc_health_probe for kubernetes.\n# https://kubernetes.io/blog/2018/10/01/health-checking-grpc-servers-on-kubernetes/\nRUN set -x && \\\n    wget -q -O grpc_health_probe \"https://github.com/grpc-ecosystem/grpc-health-probe/releases/download/${GRPC_HEALTH_PROBE_VERSION}/grpc_health_probe-linux-amd64\" && \\\n    chmod +x grpc_health_probe\n\n# Install dockerize\n# Support for use cases where environment variables are used to configure the database\nRUN set -x && \\\n    wget -q \"https://github.com/jwilder/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz\" && \\\n    tar -xzvf \"dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz\" && \\\n    ./dockerize --version && rm \"dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz\"\n\nFROM ghcr.io/scalar-labs/jre8:1.1.4\n\nCOPY --from=tools dockerize /usr/local/bin/\nCOPY --from=tools grpc_health_probe /usr/local/bin/\n\nWORKDIR /scalardb\n\n# The path should be relative from build/docker. Running `gradle docker`\n# (provided by com.palantir.docker plugin) will copy this Dockerfile and\n# server.tar, log4j2.properties and database.properties.tmpl to build/docker.\nADD server.tar .\n\nENV SCALAR_DB_CONTACT_POINTS 'cassandra'\nENV SCALAR_DB_CONTACT_PORT '9042'\nENV SCALAR_DB_USERNAME ''\nENV SCALAR_DB_PASSWORD ''\nENV SCALAR_DB_STORAGE 'cassandra'\nENV SCALAR_DB_TRANSACTION_MANAGER 'consensus-commit'\nENV SCALAR_DB_ISOLATION_LEVEL ''\nENV SCALAR_DB_CONSENSUSCOMMIT_SERIALIZABLE_STRATEGY ''\n\nWORKDIR /scalardb/server\n\nCOPY database.properties.tmpl .\nCOPY log4j2.properties.tmpl .\nCOPY docker-entrypoint.sh .\n\nRUN groupadd -r --gid 201 scalardb && \\\n    useradd -r --uid 201 -g scalardb scalardb\nRUN chown -R scalardb:scalardb /scalardb/server\n\nUSER 201\n\nENV JAVA_OPT_MAX_RAM_PERCENTAGE '70.0'\nENV JAVA_OPTS '-Dlog4j.configurationFile=file:log4j2.properties'\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n\nCMD [\"dockerize\", \"-template\", \"database.properties.tmpl:database.properties\", \\\n    \"-template\", \"log4j2.properties.tmpl:log4j2.properties\", \\\n    \"./bin/scalardb-server\", \"--config=database.properties\"]\n\nEXPOSE 60051 8080\n"
}