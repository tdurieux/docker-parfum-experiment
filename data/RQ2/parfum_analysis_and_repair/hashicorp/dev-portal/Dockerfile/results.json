{
  "startTime": 1674250998348,
  "endTime": 1674250998906,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.mirror.hashicorp.services/node:14.17.0-alpine AS deps\n\nRUN apk add --update --no-cache \\\n    autoconf \\\n    automake \\\n    bash \\\n    git \\\n    g++ \\\n    libtool \\\n    libc6-compat \\\n    libjpeg-turbo-dev \\\n    libpng-dev \\\n    make \\\n    nasm\n\nWORKDIR /app\nCOPY package.json package-lock.json ./\nRUN npm install -g npm@latest && npm cache clean --force;\n\n# While imagemin/optipng-bin doesn't support arm64, set this env var as a workaround\n# - `npm ls imagemin`\n# - see https://github.com/imagemin/optipng-bin/issues/118\nRUN CPPFLAGS=\"-DPNG_ARM_NEON_OPT=0\" npm install && npm cache clean --force;\n\nFROM docker.mirror.hashicorp.services/node:14.17.0-alpine AS builder\nWORKDIR /app\nCOPY . ./website-preview\nCOPY --from=deps /app/node_modules ./website-preview/node_modules\n\nEXPOSE 3000\n\nENTRYPOINT [\"/bin/sh\", \"-c\"]\nCMD [\"cd website-preview && ./scripts/content-repo-preview/start.sh\"]\n"
}