{
  "startTime": 1674218152994,
  "endTime": 1674218153849,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ========================================================================\n#\n# This Dockerfile contains multiple targets.\n# Use 'docker build --target=<name> .' to build one.\n# e.g. `docker build --target=release-light .`\n#\n# All non-dev targets have a VERSION argument that must be provided\n# via --build-arg=VERSION=<version> when building.\n# e.g. --build-arg VERSION=1.11.2\n#\n# For local dev and testing purposes, please build and use the `dev` docker image.\n#\n# ========================================================================\n\n\n# Development docker image primarily used for development and debugging.\n# This image builds from the locally generated binary in ./bin/.\n# To generate the local binary, run `make dev`.\nFROM docker.mirror.hashicorp.services/alpine:latest as dev\n\nRUN apk add --no-cache git bash openssl ca-certificates\n\nCOPY bin/packer /bin/packer\n\nENTRYPOINT [\"/bin/packer\"]\n\n\n# Official docker image that includes binaries from releases.hashicorp.com.\n# This downloads the release from releases.hashicorp.com and therefore requires that\n# the release is published before building the Docker image.\nFROM docker.mirror.hashicorp.services/alpine:latest as official\n\n# This is the release of Packer to pull in.\nARG VERSION\n\nLABEL name=\"Packer\" \\\n      maintainer=\"HashiCorp Packer Team <packer@hashicorp.com>\" \\\n      vendor=\"HashiCorp\" \\\n      version=$VERSION \\\n      release=$VERSION \\\n      summary=\"Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.\" \\\n      description=\"Packer is a tool for creating identical machine images for multiple platforms from a single source configuration. Please submit issues to https://github.com/hashicorp/packer/issues\"\n\n# This is the location of the releases.\nENV HASHICORP_RELEASES=https://releases.hashicorp.com\n\nRUN set -eux && \\\n    apk add --no-cache git bash wget openssl gnupg && \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys C874011F0AB405110D02105534365D9472D7468F && \\\n    mkdir -p /tmp/build && \\\n    cd /tmp/build && \\\n    apkArch=\"$(apk --print-arch)\" && \\\n    case \"${apkArch}\" in \\\n        aarch64) packerArch='arm64' ;; \\\n        armhf) packerArch='arm' ;; \\\n        x86) packerArch='386' ;; \\\n        x86_64) packerArch='amd64' ;; \\\n        *) echo >&2 \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/packer/${VERSION}/)\" && exit 1 ;; \\\n    esac && \\\n    wget ${HASHICORP_RELEASES}/packer/${VERSION}/packer_${VERSION}_linux_${packerArch}.zip && \\\n    wget ${HASHICORP_RELEASES}/packer/${VERSION}/packer_${VERSION}_SHA256SUMS && \\\n    wget ${HASHICORP_RELEASES}/packer/${VERSION}/packer_${VERSION}_SHA256SUMS.sig && \\\n    gpg --batch --verify packer_${VERSION}_SHA256SUMS.sig packer_${VERSION}_SHA256SUMS && \\\n    grep packer_${VERSION}_linux_${packerArch}.zip packer_${VERSION}_SHA256SUMS | sha256sum -c && \\\n    unzip -d /tmp/build packer_${VERSION}_linux_${packerArch}.zip && \\\n    cp /tmp/build/packer /bin/packer && \\\n    cd /tmp && \\\n    rm -rf /tmp/build && \\\n    gpgconf --kill all && \\\n    apk del gnupg openssl && \\\n    rm -rf /root/.gnupg && \\\n    # Tiny smoke test to ensure the binary we downloaded runs\n    packer version\n\nENTRYPOINT [\"/bin/packer\"]\n\n\n# Light docker image which can be used to run the binary from a container.\n# This image builds from the locally generated binary in ./bin/, and from CI-built binaries within CI.\n# To generate the local binary, run `make dev`.\n# This image is published to DockerHub under the `light`, `light-$VERSION`, and `latest` tags.\nFROM docker.mirror.hashicorp.services/alpine:latest as release-light\n\nARG VERSION\nARG BIN_NAME\n\n# TARGETARCH and TARGETOS are set automatically when --platform is provided.\nARG TARGETOS TARGETARCH\n\nLABEL name=\"Packer\" \\\n      maintainer=\"HashiCorp Packer Team <packer@hashicorp.com>\" \\\n      vendor=\"HashiCorp\" \\\n      version=$VERSION \\\n      release=$VERSION \\\n      summary=\"Packer is a tool for creating identical machine images for multiple platforms from a single source configuration.\" \\\n      description=\"Packer is a tool for creating identical machine images for multiple platforms from a single source configuration. Please submit issues to https://github.com/hashicorp/packer/issues\"\n\nRUN apk add --no-cache git bash wget openssl gnupg\n\nCOPY dist/$TARGETOS/$TARGETARCH/$BIN_NAME /bin/\n\nENTRYPOINT [\"/bin/packer\"]\n\n\n# Set default target to 'dev'.\nFROM dev"
}