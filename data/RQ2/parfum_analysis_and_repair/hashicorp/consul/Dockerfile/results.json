{
  "startTime": 1674218986597,
  "endTime": 1674218987733,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 231,
        "lineEnd": 235,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile contains multiple targets.\n# Use 'docker build --target=<name> .' to build one.\n# e.g. `docker build --target=official .`\n#\n# All non-dev targets have a VERSION argument that must be provided\n# via --build-arg=VERSION=<version> when building.\n# e.g. --build-arg VERSION=1.11.2\n#\n# `default` is the production docker image which cannot be built locally.\n# For local dev and testing purposes, please build and use the `dev` docker image.\n\n\n# Official docker image that includes binaries from releases.hashicorp.com. This\n# downloads the release from releases.hashicorp.com and therefore requires that\n# the release is published before building the Docker image.\nFROM docker.mirror.hashicorp.services/alpine:3.15 as official\n\n# This is the release of Consul to pull in.\nARG VERSION\n\nLABEL org.opencontainers.image.authors=\"Consul Team <consul@hashicorp.com>\" \\\n      org.opencontainers.image.url=\"https://www.consul.io/\" \\\n      org.opencontainers.image.documentation=\"https://www.consul.io/docs\" \\\n      org.opencontainers.image.source=\"https://github.com/hashicorp/consul\" \\\n      org.opencontainers.image.version=$VERSION \\\n      org.opencontainers.image.vendor=\"HashiCorp\" \\\n      org.opencontainers.image.title=\"consul\" \\\n      org.opencontainers.image.description=\"Consul is a datacenter runtime that provides service discovery, configuration, and orchestration.\"\n\n# This is the location of the releases.\nENV HASHICORP_RELEASES=https://releases.hashicorp.com\n\n# Create a consul user and group first so the IDs get set the same way, even as\n# the rest of this may change over time.\nRUN addgroup consul && \\\n    adduser -S -G consul consul\n\n# Set up certificates, base tools, and Consul.\n# libc6-compat is needed to symlink the shared libraries for ARM builds\nRUN set -eux && \\\n    apk add --no-cache ca-certificates curl dumb-init gnupg libcap openssl su-exec iputils jq libc6-compat iptables tzdata && \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys C874011F0AB405110D02105534365D9472D7468F && \\\n    mkdir -p /tmp/build && \\\n    cd /tmp/build && \\\n    apkArch=\"$(apk --print-arch)\" && \\\n    case \"${apkArch}\" in \\\n        aarch64) consulArch='arm64' ;; \\\n        armhf) consulArch='arm' ;; \\\n        x86) consulArch='386' ;; \\\n        x86_64) consulArch='amd64' ;; \\\n        *) echo >&2 \"error: unsupported architecture: ${apkArch} (see ${HASHICORP_RELEASES}/consul/${VERSION}/)\" && exit 1 ;; \\\n    esac && \\\n    wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_linux_${consulArch}.zip && \\\n    wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_SHA256SUMS && \\\n    wget ${HASHICORP_RELEASES}/consul/${VERSION}/consul_${VERSION}_SHA256SUMS.sig && \\\n    gpg --batch --verify consul_${VERSION}_SHA256SUMS.sig consul_${VERSION}_SHA256SUMS && \\\n    grep consul_${VERSION}_linux_${consulArch}.zip consul_${VERSION}_SHA256SUMS | sha256sum -c && \\\n    unzip -d /tmp/build consul_${VERSION}_linux_${consulArch}.zip && \\\n    cp /tmp/build/consul /bin/consul && \\\n    if [ -f /tmp/build/EULA.txt ]; then mkdir -p /usr/share/doc/consul; mv /tmp/build/EULA.txt /usr/share/doc/consul/EULA.txt; fi && \\\n    if [ -f /tmp/build/TermsOfEvaluation.txt ]; then mkdir -p /usr/share/doc/consul; mv /tmp/build/TermsOfEvaluation.txt /usr/share/doc/consul/TermsOfEvaluation.txt; fi && \\\n    cd /tmp && \\\n    rm -rf /tmp/build && \\\n    gpgconf --kill all && \\\n    apk del gnupg openssl && \\\n    rm -rf /root/.gnupg && \\\n# tiny smoke test to ensure the binary we downloaded runs\n    consul version\n\n# The /consul/data dir is used by Consul to store state. The agent will be started\n# with /consul/config as the configuration directory so you can add additional\n# config files in that location.\nRUN mkdir -p /consul/data && \\\n    mkdir -p /consul/config && \\\n    chown -R consul:consul /consul\n\n# set up nsswitch.conf for Go's \"netgo\" implementation which is used by Consul,\n# otherwise DNS supercedes the container's hosts file, which we don't want.\nRUN test -e /etc/nsswitch.conf || echo 'hosts: files dns' > /etc/nsswitch.conf\n\n# Expose the consul data directory as a volume since there's mutable state in there.\nVOLUME /consul/data\n\n# Server RPC is used for communication between Consul clients and servers for internal\n# request forwarding.\nEXPOSE 8300\n\n# Serf LAN and WAN (WAN is used only by Consul servers) are used for gossip between\n# Consul agents. LAN is within the datacenter and WAN is between just the Consul\n# servers in all datacenters.\nEXPOSE 8301 8301/udp 8302 8302/udp\n\n# HTTP and DNS (both TCP and UDP) are the primary interfaces that applications\n# use to interact with Consul.\nEXPOSE 8500 8600 8600/udp\n\n# Consul doesn't need root privileges so we run it as the consul user from the\n# entry point script. The entry point script also uses dumb-init as the top-level\n# process to reap any zombie processes created by Consul sub-processes.\nCOPY .release/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\n# By default you'll get an insecure single-node development server that stores\n# everything in RAM, exposes a web UI and HTTP endpoints, and bootstraps itself.\n# Don't use this configuration for production.\nCMD [\"agent\", \"-dev\", \"-client\", \"0.0.0.0\"]\n\n\n# Production docker image that uses CI built binaries.\n# Remember, this image cannot be built locally.\nFROM docker.mirror.hashicorp.services/alpine:3.15 as default\n\nARG VERSION\nARG BIN_NAME\n\n# PRODUCT_NAME and PRODUCT_VERSION are the name of the software on releases.hashicorp.com\n# and the version to download. Example: PRODUCT_NAME=consul PRODUCT_VERSION=1.2.3.\nENV BIN_NAME=$BIN_NAME\nENV VERSION=$VERSION\n\nARG PRODUCT_REVISION\nARG PRODUCT_NAME=$BIN_NAME\n\n# TARGETOS and TARGETARCH are set automatically when --platform is provided.\nARG TARGETOS TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"Consul Team <consul@hashicorp.com>\" \\\n      org.opencontainers.image.url=\"https://www.consul.io/\" \\\n      org.opencontainers.image.documentation=\"https://www.consul.io/docs\" \\\n      org.opencontainers.image.source=\"https://github.com/hashicorp/consul\" \\\n      org.opencontainers.image.version=$VERSION \\\n      org.opencontainers.image.vendor=\"HashiCorp\" \\\n      org.opencontainers.image.title=\"consul\" \\\n      org.opencontainers.image.description=\"Consul is a datacenter runtime that provides service discovery, configuration, and orchestration.\"\n\n# Set up certificates and base tools.\n# libc6-compat is needed to symlink the shared libraries for ARM builds\nRUN apk add -v --no-cache \\\n\t\tdumb-init \\\n\t\tlibc6-compat \\\n\t\tiptables \\\n\t\ttzdata \\\n\t\tcurl \\\n\t\tca-certificates \\\n\t\tgnupg \\\n\t\tiputils \\ \n\t\tlibcap \\\n\t\topenssl \\\n\t\tsu-exec \\\n\t\tjq\n\n# Create a consul user and group first so the IDs get set the same way, even as\n# the rest of this may change over time.\nRUN addgroup $BIN_NAME && \\\n    adduser -S -G $BIN_NAME $BIN_NAME\nCOPY dist/$TARGETOS/$TARGETARCH/$BIN_NAME /bin/\n\n\nRUN mkdir -p /consul/data && \\\n    mkdir -p /consul/config && \\\n    chown -R consul:consul /consul\n\n# Set up nsswitch.conf for Go's \"netgo\" implementation which is used by Consul,\n# otherwise DNS supercedes the container's hosts file, which we don't want.\nRUN test -e /etc/nsswitch.conf || echo 'hosts: files dns' > /etc/nsswitch.conf\n\n# Expose the consul data directory as a volume since there's mutable state in there.\nVOLUME /consul/data\n\n# Server RPC is used for communication between Consul clients and servers for internal\n# request forwarding.\nEXPOSE 8300\n\n# Serf LAN and WAN (WAN is used only by Consul servers) are used for gossip between\n# Consul agents. LAN is within the datacenter and WAN is between just the Consul\n# servers in all datacenters.\nEXPOSE 8301 8301/udp 8302 8302/udp\n\n# HTTP and DNS (both TCP and UDP) are the primary interfaces that applications\n# use to interact with Consul.\nEXPOSE 8500 8600 8600/udp\n\n# Consul doesn't need root privileges so we run it as the consul user from the\n# entry point script. The entry point script also uses dumb-init as the top-level\n# process to reap any zombie processes created by Consul sub-processes.\n\nCOPY .release/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\n# By default you'll get an insecure single-node development server that stores\n# everything in RAM, exposes a web UI and HTTP endpoints, and bootstraps itself.\n# Don't use this configuration for production.\nCMD [\"agent\", \"-dev\", \"-client\", \"0.0.0.0\"]\n\n\n# Red Hat UBI-based image\n# This target is used to build a Consul image for use on OpenShift.\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.6 as ubi\n\nARG PRODUCT_NAME\nARG PRODUCT_VERSION\nARG PRODUCT_REVISION\nARG BIN_NAME\n\n# PRODUCT_NAME and PRODUCT_VERSION are the name of the software on releases.hashicorp.com\n# and the version to download. Example: PRODUCT_NAME=consul PRODUCT_VERSION=1.2.3.\nENV BIN_NAME=$BIN_NAME\nENV PRODUCT_VERSION=$PRODUCT_VERSION\n\nARG PRODUCT_NAME=$BIN_NAME\n\n# TARGETOS and TARGETARCH are set automatically when --platform is provided.\nARG TARGETOS TARGETARCH\n\nLABEL org.opencontainers.image.authors=\"Consul Team <consul@hashicorp.com>\" \\\n      org.opencontainers.image.url=\"https://www.consul.io/\" \\\n      org.opencontainers.image.documentation=\"https://www.consul.io/docs\" \\\n      org.opencontainers.image.source=\"https://github.com/hashicorp/consul\" \\\n      org.opencontainers.image.version=$VERSION \\\n      org.opencontainers.image.vendor=\"HashiCorp\" \\\n      org.opencontainers.image.title=\"consul\" \\\n      org.opencontainers.image.description=\"Consul is a datacenter runtime that provides service discovery, configuration, and orchestration.\"\n\n# Copy license for Red Hat certification.\nCOPY LICENSE /licenses/mozilla.txt\n\n# Set up certificates and base tools.\n# dumb-init is downloaded directly from GitHub because there's no RPM package.\n# Its shasum is hardcoded. If you upgrade the dumb-init verion you'll need to\n# also update the shasum.\nRUN set -eux && \\\n    microdnf install -y ca-certificates curl gnupg libcap openssl iputils jq iptables wget unzip tar && \\\n    wget -O /usr/bin/dumb-init https://github.com/Yelp/dumb-init/releases/download/v1.2.5/dumb-init_1.2.5_x86_64 && \\\n    echo 'e874b55f3279ca41415d290c512a7ba9d08f98041b28ae7c2acb19a545f1c4df  /usr/bin/dumb-init' > dumb-init-shasum && \\\n    sha256sum --check dumb-init-shasum && \\\n    chmod +x /usr/bin/dumb-init\n\n# Create a non-root user to run the software. On OpenShift, this\n# will not matter since the container is run as a random user and group\n# but this is kept for consistency with our other images.\nRUN groupadd $BIN_NAME && \\\n    adduser --uid 100 --system -g $BIN_NAME $BIN_NAME\nCOPY dist/$TARGETOS/$TARGETARCH/$BIN_NAME /bin/\n\n# The /consul/data dir is used by Consul to store state. The agent will be started\n# with /consul/config as the configuration directory so you can add additional\n# config files in that location.\n# In addition, change the group of the /consul directory to 0 since OpenShift\n# will always execute the container with group 0.\nRUN mkdir -p /consul/data && \\\n    mkdir -p /consul/config && \\\n    chown -R consul /consul && \\\n    chgrp -R 0 /consul && chmod -R g+rwX /consul\n\n# set up nsswitch.conf for Go's \"netgo\" implementation which is used by Consul,\n# otherwise DNS supercedes the container's hosts file, which we don't want.\nRUN test -e /etc/nsswitch.conf || echo 'hosts: files dns' > /etc/nsswitch.conf\n\n# Expose the consul data directory as a volume since there's mutable state in there.\nVOLUME /consul/data\n\n# Server RPC is used for communication between Consul clients and servers for internal\n# request forwarding.\nEXPOSE 8300\n\n# Serf LAN and WAN (WAN is used only by Consul servers) are used for gossip between\n# Consul agents. LAN is within the datacenter and WAN is between just the Consul\n# servers in all datacenters.\nEXPOSE 8301 8301/udp 8302 8302/udp\n\n# HTTP and DNS (both TCP and UDP) are the primary interfaces that applications\n# use to interact with Consul.\nEXPOSE 8500 8600 8600/udp\n\nCOPY .release/docker/docker-entrypoint-ubi.sh /usr/local/bin/docker-entrypoint.sh\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\n# OpenShift by default will run containers with a random user, however their\n# scanner requires that containers set a non-root user.\nUSER 100\n\n# By default you'll get an insecure single-node development server that stores\n# everything in RAM, exposes a web UI and HTTP endpoints, and bootstraps itself.\n# Don't use this configuration for production.\nCMD [\"agent\", \"-dev\", \"-client\", \"0.0.0.0\"]"
}