{
  "startTime": 1674255243934,
  "endTime": 1674255244694,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 47,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile contains multiple targets.\n# Use 'docker build --target=<name> .' to build one.\n# e.g. `docker build --target=dev .`\n#\n# All non-dev targets have a VERSION argument that must be provided\n# via --build-arg=VERSION=<version> when building.\n# e.g. --build-arg=0.7.4\n#\n# `default` is the production docker image which cannot be built locally.\n# For local dev and testing purposes, please build and use the `dev` docker image.\n\n\n# Development docker image\nFROM docker.mirror.hashicorp.services/alpine:3.13.6 as dev\n\nRUN set -eux && \\\n    addgroup boundary && \\\n    adduser -s /bin/sh -S -G boundary boundary && \\\n    apk add --no-cache wget ca-certificates dumb-init gnupg libcap openssl su-exec iputils libc6-compat iptables\n\nADD bin/boundary /bin/boundary\n\nRUN mkdir /boundary/\nADD .release/docker/config.hcl /boundary/config.hcl\nRUN chown -R boundary:boundary /boundary/\n\nEXPOSE 9200 9201 9202\nVOLUME /boundary/\n\nCOPY .release/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"server\", \"-config\", \"/boundary/config.hcl\"]\n\n\n# Official docker image that uses binaries from releases.hashicorp.com\nFROM docker.mirror.hashicorp.services/alpine:3.13.6 as official\n\nARG VERSION\n\nLABEL name=\"Boundary\" \\\n      maintainer=\"HashiCorp Boundary Team <boundary@hashicorp.com>\" \\\n      vendor=\"HashiCorp\" \\\n      version=$VERSION \\\n      release=$VERSION \\\n      summary=\"Boundary provides simple and secure access to hosts and services\" \\\n      description=\"The Boundary Docker image is designed to enable practitioners to run Boundary in server mode on a container scheduler\"\n\nRUN set -eux && \\\n    addgroup boundary && \\\n    adduser -s /bin/sh -S -G boundary boundary && \\\n    apk add --no-cache wget ca-certificates dumb-init gnupg libcap openssl su-exec iputils libc6-compat iptables && \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys C874011F0AB405110D02105534365D9472D7468F && \\\n    cd /tmp && \\\n    apkArch=\"$(apk --print-arch)\" && \\\n    case \"${apkArch}\" in \\\n        aarch64) boundaryArch='arm64' ;; \\\n        armhf) boundaryArch='armhfv6' ;; \\\n        x86) boundaryArch='386' ;; \\\n        x86_64) boundaryArch='amd64' ;; \\\n        * echo >&2 \"error: unsupported architecture: ${apkArch} (see https://releases.hashicorp.com/boundary/${VERSION}/  )\" && exit 1;; \\\n      esac && \\\n    wget https://releases.hashicorp.com/boundary/${VERSION}/boundary_${VERSION}_linux_${boundaryArch}.zip && \\\n    wget https://releases.hashicorp.com/boundary/${VERSION}/boundary_${VERSION}_SHA256SUMS && \\\n    wget https://releases.hashicorp.com/boundary/${VERSION}/boundary_${VERSION}_SHA256SUMS.sig && \\\n    gpg --batch --verify boundary_${VERSION}_SHA256SUMS.sig boundary_${VERSION}_SHA256SUMS && \\\n    grep boundary_${VERSION}_linux_${boundaryArch}.zip boundary_${VERSION}_SHA256SUMS | sha256sum -c && \\\n    unzip -d /bin boundary_${VERSION}_linux_${boundaryArch}.zip && \\\n    rm boundary_${VERSION}_linux_${boundaryArch}.zip boundary_${VERSION}_SHA256SUMS boundary_${VERSION}_SHA256SUMS.sig && \\\n    mkdir /boundary\n\nCOPY .release/docker/config.hcl /boundary/config.hcl\n\nRUN chown -R boundary:boundary /boundary/\n\nEXPOSE 9200 9201 9202\nVOLUME /boundary/\n\nCOPY .release/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"server\", \"-config\", \"/boundary/config.hcl\"]\n\n\n# Production docker image\n# Remember, this cannot be built locally\nFROM docker.mirror.hashicorp.services/alpine:3.13.6 as default\n\nARG BIN_NAME\n# NAME and VERSION are the name of the software in releases.hashicorp.com\n# and the version to download. Example: NAME=boundary VERSION=1.2.3.\nARG NAME=boundary\nARG VERSION\n# TARGETARCH and TARGETOS are set automatically when --platform is provided.\nARG TARGETOS TARGETARCH\n\nLABEL name=\"Boundary\" \\\n      maintainer=\"HashiCorp Boundary Team <boundary@hashicorp.com>\" \\\n      vendor=\"HashiCorp\" \\\n      version=$VERSION \\\n      release=$VERSION \\\n      summary=\"Boundary provides simple and secure access to hosts and services\" \\\n      description=\"The Boundary Docker image is designed to enable practitioners to run Boundary in server mode on a container scheduler\"\n\n# Set ARGs as ENV so that they can be used in ENTRYPOINT/CMD\nENV NAME=$NAME\nENV VERSION=$VERSION\n\n# Create a non-root user to run the software.\nRUN addgroup ${NAME} && adduser -s /bin/sh -S -G ${NAME} ${NAME}\n\nRUN apk add --no-cache wget ca-certificates dumb-init gnupg libcap openssl su-exec iputils libc6-compat iptables\n\nCOPY .release/docker/config.hcl /boundary/config.hcl\n\nCOPY dist/$TARGETOS/$TARGETARCH/$BIN_NAME /bin/\n\nRUN chown -R ${NAME}:${NAME} /boundary\n\nEXPOSE 9200 9201 9202\nVOLUME /boundary/\n\nCOPY .release/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"server\", \"-config\", \"/boundary/config.hcl\"]\n"
}