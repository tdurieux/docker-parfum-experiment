{
  "startTime": 1674218359198,
  "endTime": 1674218359644,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 17,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 33,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 71,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM hexpm/elixir:1.13.4-erlang-24.3.3-alpine-3.15.3 as build\n\n# install build dependencies\nRUN apk add --no-cache --update git build-base nodejs yarn\n\n# prepare build dir\nRUN mkdir /app\nWORKDIR /app\n\n# install hex + rebar\nRUN mix local.hex --force && \\\n    mix local.rebar --force\n\n# set build ENV\nENV MIX_ENV=prod\n\n# install mix dependencies\nCOPY mix.exs mix.lock ./\nCOPY config config\nRUN mix deps.get\nRUN mix deps.compile\n\n# build assets\nCOPY assets assets\nRUN cd assets && yarn install && yarn run webpack --mode production && yarn cache clean;\nRUN mix phx.digest\n\n# build project\nCOPY priv priv\nCOPY lib lib\nRUN mix compile\n\n# build release\nCOPY rel rel\nRUN mix release\n\n# prepare release image\nFROM alpine:3.15.3 AS app\nRUN apk add --no-cache --update bash openssl git libstdc++\n\nRUN mkdir /app\nWORKDIR /app\n\nCOPY --from=build /app/_build/prod/rel/diff ./\nRUN chown -R nobody: /app\nUSER nobody\n\nENV HOME=/app\n"
}