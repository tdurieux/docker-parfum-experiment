{
  "startTime": 1674216856072,
  "endTime": 1674216857205,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A minimal Docker image with Node, google-chrome-stable and Xvfb\n# Author: Nikolai Tschacher\n# Website: https://scrapeulous.com/\n\n# Run with: docker run tschachn/crawler:latest\n\n# Inspired/based upon:\n# - https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-in-docker\n# - https://github.com/browserless/chrome/blob/master/Dockerfile\n# - https://github.com/apifytech/apify-actor-docker/blob/master/node-chrome/Dockerfile\n\nFROM node:slim\n\nLABEL maintainer=\"hire@incolumitas.com (Nikolai Tschacher)\"\nLABEL description=\"The base image for the crawler using google-chrome-stable and xvfb\"\n\n# Application parameters and variables\nENV HOST=0.0.0.0\nENV APP_DIR=/crawler\n# generate with:\n# cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1\n\nENV API_URL=https://167.99.241.135:9001/\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD 1\nENV PUPPETEER_EXECUTABLE_PATH /usr/bin/google-chrome-stable\n# Tell Node.js this is a production environemnt\nENV NODE_ENV=production\n# when this env var is set, a headful test is done before\n# launching the crawl server\nENV TEST_PPTR_HEADFUL 0\n# use pptr unstable instead of stable\nENV USE_CHROME_UNSTABLE 0\nENV CHROME_EXECUTABLE \"google-chrome-stable\"\n# whether the virtual framebuffer x server is launched\nENV USING_XVFB 1\nENV EXECUTION_ENV 'docker'\n\n# Select Chrome version, must be compatible with Puppeteer version!\n# Find versions at https://www.ubuntuupdates.org/pm/google-chrome-stable\n# or https://www.ubuntuupdates.org/package/google_chrome/stable/main/base/google-chrome-stable\n\n# !!! IMPORTANT: REMOVE THE TRAILING -1 FROM THE VERSION. 84.0.4147.135-1 => 84.0.4147.135\nENV CHROME_VERSION=\"84.0.4147.135\"\n\n# Create app directory\nWORKDIR $APP_DIR\n\n# update environment variables when we want to use google-chrome-unstable\nRUN if [ \"$USE_CHROME_UNSTABLE\" = \"1\" ]; then \\\n    CHROME_EXECUTABLE=google-chrome-unstable &&\\\n    PUPPETEER_EXECUTABLE_PATH=\"/usr/bin/$CHROME_EXECUTABLE\"; \\\n  fi\n\n# Install latest Chrome dev packages and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer installs, work.\n# adapted from here: https://github.com/apifytech/apify-actor-docker/blob/master/node-chrome/Dockerfile\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y wget gnupg2 ca-certificates \\\n && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | DEBIAN_FRONTEND=noninteractive apt-key add - \\\n && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n && DEBIAN_FRONTEND=noninteractive apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y procps unzip git $CHROME_EXECUTABLE fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont --no-install-recommends \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /src/*.deb \\\n && DEBIAN_FRONTEND=noninteractive apt-get purge --auto-remove -y\n\n# Remove yarn, it's not needed\nRUN rm -rf /opt/yarn /usr/local/bin/yarn /usr/local/bin/yarnpkg\n\n# Install xvfb frame buffer needed for non-headless Chrome\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y xvfb \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /src/*.deb\n\n# Bundle app source and install dependencies\n# dont copy node_modules directory\nCOPY . .\n\n# install node packages\nRUN npm install && npm cache clean --force;\n\n# add dumb-init to prevent chrome zombie processes\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n\n# Set up xvfb\nENV DISPLAY=:99\n# By default, only screen 0 exists and has the dimensions 1280x1024x8\nENV XVFB_WHD=1280x720x16\n\n# Install default dependencies, print versions of everything\nRUN echo \"Node.js version:\" \\\n && node --version \\\n && echo \"NPM version:\" \\\n && npm --version \\\n && echo \"Google Chrome version:\" \\\n && $CHROME_EXECUTABLE --version \\\n && echo \"Npm Package versions:\" \\\n && node -p \"require('./package.json').dependencies\" \\\n && pwd\n\nCMD [ \"/usr/local/bin/dumb-init\",  \"worker_images/with_node_slim/start_xvfb_and_run_cmd.sh\" ]\n"
}