{
  "startTime": 1674255400606,
  "endTime": 1674255401646,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15 as base\n\nLABEL MAINTAINER=\"Cameron Carney <ccarney16@live.com>\"\n\nRUN \\\n    apk --update --no-cache add curl gettext mariadb-client nginx php7 php7 php7-bcmath php7-common php7-dom php7-fileinfo \\\n    php7-fpm php7-gd php7-memcached php7-mbstring php7-openssl php7-pdo php7-phar php7-json php7-sodium \\\n    php7-pdo_mysql php7-session php7-simplexml php7-tokenizer php7-ctype php7-zlib php7-zip php7-xmlwriter \\\n    tini \\\n    && mkdir -p /var/www/html /run/nginx /etc/nginx/conf.d/\n\n# Build phase of the container\n# This is where composer is added and pterodactyl properly setup\nFROM base as build\n\nARG VERSION\nARG GIT_BRANCH=release/${VERSION}\n\nENV VERSION=${VERSION}\n\nWORKDIR /var/www/html\n\nRUN \\\n    apk add --no-cache yarn git;\n\nRUN \\\n    git clone https://github.com/pterodactyl/panel ./ --depth 1 --branch ${GIT_BRANCH}; \\\n    rm .git -rf; \\\n    chmod -R 755 storage/* bootstrap/cache; \\\n    find storage -type d > .storage.tmpl; \\\n    curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer; \\\n    cp .env.example .env; \\\n    composer install --ansi --no-dev --optimize-autoloader; \\\n    chown -R nginx:nginx *;\n\nRUN \\\n    yarn install --production; yarn cache clean; \\\n    yarn add cross-env; \\\n    yarn run build:production; \\\n    rm -rf node_modules;\n\n# Remove persistent data folders as they will be symlinked further down\nRUN rm .env ./storage -rf\n\n# Final Production phase of the controller\n# All build requirements get scrapped as to maintain a small image\nFROM base as production\n\nARG VERSION\n\nENV VERSION=${VERSION}\n\nWORKDIR /var/www/html\n\nCOPY --from=build --chown=nginx:nginx /var/www /var/www\nCOPY ./root/ /\n\n# Symlink storage, config and cache to /data\nRUN \\\n    ln -s /data/storage storage; \\\n    ln -s /data/pterodactyl.conf .env;\n\nEXPOSE 80 443\nVOLUME [ \"/data\" ]\n\nENTRYPOINT [ \"/sbin/tini\", \"--\", \"/entrypoint.sh\" ]\nCMD [ \"p:start\" ]\n"
}