diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eager-dev/eagerx/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eager-dev/eagerx/Dockerfile/repaired.Dockerfile
index 4f75245..fafa037 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eager-dev/eagerx/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eager-dev/eagerx/Dockerfile/repaired.Dockerfile
@@ -28,7 +28,7 @@ RUN apt-get install -y --no-install-recommends apt-utils \
   rm -rf /var/lib/apt/lists/*
 
 # Install Anaconda and dependencies for using the specified python version
-RUN curl -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
+RUN curl -f -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
      chmod +x ~/miniconda.sh && \
      ~/miniconda.sh -b -p /opt/conda && \
      rm ~/miniconda.sh && \
@@ -40,8 +40,8 @@ ENV PATH /opt/conda/bin:$PATH
 SHELL ["conda", "run", "-n", "base", "/bin/bash", "-c"]
 
 # System deps:
-RUN pip3 install --upgrade pip
-RUN pip3 install "poetry==$POETRY_VERSION"
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip3 install --no-cache-dir "poetry==$POETRY_VERSION"
 
 # When installing stable-baselines3, we want to use the appropriate pytorch version (cpu or gpu)
 # if [ ${ADD_SB} ] ; then /opt/conda/bin/conda install -y pytorch $PYTORCH_DEPS -c pytorch; fi && \
@@ -59,12 +59,13 @@ COPY . /code
 # Install ROS
 RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
 RUN echo "deb http://packages.ros.org/ros-testing/ubuntu focal main" > /etc/apt/sources.list.d/ros-latest.list
-RUN apt-get update && apt-get install -y --no-install-recommends ros-noetic-ros-base ros-noetic-cv-bridge
+RUN apt-get update && apt-get install -y --no-install-recommends ros-noetic-ros-base ros-noetic-cv-bridge && rm -rf /var/lib/apt/lists/*;
 RUN echo "source /opt/ros/noetic/setup.bash" >> /root/.bashrc
 RUN echo "export ROSLAUNCH_SSH_UNKNOWN=1" >> /root/.bashrc
 
 # Install eagerx-tutorials if ADD_SB, this will also install stable-baselines3
-RUN if [ ${ADD_SB} ] ; then pip install eagerx-tutorials; fi
+RUN if [ ${ADD_SB} ] ; then \
+ pip install --no-cache-dir eagerx-tutorials; fi
 
 # Use headless opencv
-RUN pip uninstall -y opencv-python && pip install opencv-python-headless && rm -rf $HOME/.cache/pip
+RUN pip uninstall -y opencv-python && pip install --no-cache-dir opencv-python-headless && rm -rf $HOME/.cache/pip