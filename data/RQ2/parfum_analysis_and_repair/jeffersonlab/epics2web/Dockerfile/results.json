{
  "startTime": 1674251088554,
  "endTime": 1674251089030,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 10,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_IMAGE=gradle:7.4-jdk17-alpine\nARG RUN_IMAGE=tomcat:9.0.39-jdk8-adoptopenjdk-hotspot\n\n################## Stage 0\nFROM ${BUILD_IMAGE} as builder\nARG CUSTOM_CRT_URL\nUSER root\nWORKDIR /\nRUN if [ -z \"${CUSTOM_CRT_URL}\" ] ; then echo \"No custom cert needed\"; else \\\n       wget -O /usr/local/share/ca-certificates/customcert.crt $CUSTOM_CRT_URL \\\n       && update-ca-certificates \\\n       && keytool -import -alias custom -file /usr/local/share/ca-certificates/customcert.crt -cacerts -storepass changeit -noprompt \\\n       && export OPTIONAL_CERT_ARG=--cert=/etc/ssl/certs/ca-certificates.crt \\\n    ; fi\nCOPY . /app\nRUN cd /app && gradle build -x test --no-watch-fs $OPTIONAL_CERT_ARG\n\n################## Stage 1\nFROM ${RUN_IMAGE} as runner\nARG CUSTOM_CRT_URL\nARG RUN_USER=tomcat\nARG APP_HOME=/usr/local/tomcat/webapps\nUSER root\nCOPY --from=builder /app/build/libs /usr/local/tomcat/webapps\nRUN useradd -m tomcat \\\n    && if [ -z \"${CUSTOM_CRT_URL}\" ] ;then echo \"No custom cert needed\";else \\\n       mkdir -p /usr/local/share/ca-certificates \\\n       && curl -f -o /usr/local/share/ca-certificates/customcert.crt $CUSTOM_CRT_URL \\\n       && update-ca-certificates \\\n    ; fi \\\n    && chown -R ${RUN_USER}:0 ${APP_HOME} \\\n    && chmod -R g+rw ${APP_HOME}\nUSER ${RUN_USER}"
}