{
  "startTime": 1674251189764,
  "endTime": 1674251191052,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 7,
        "columnEnd": 163
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim-buster AS base\n\n# requires git to install requirements with git+https\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends build-essential git gcc libffi-dev libssl-dev libxml2-dev libxslt1-dev libxslt-dev libjpeg62-turbo-dev zlib1g-dev \\\n    && python -m venv /opt/venv && rm -rf /var/lib/apt/lists/*;\n\n# skip cryptography rust compilation (required for armv7 builds)\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\n\n# Make sure we use the virtualenv:\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nCOPY . .\nRUN pip install --no-cache-dir -U setuptools wheel pip >=20.0.0 \\\n    && pip install --no-cache-dir Cython==0.29.21 \\\n    && pip install --no-cache-dir --prefer-binary -r requirements.txt \\\n    && python setup.py install\n\nFROM python:3.8-slim-buster\n\nARG TENTACLES_URL_TAG=\"\"\nENV TENTACLES_URL_TAG=$TENTACLES_URL_TAG\n\nWORKDIR /octobot\nCOPY --from=base /opt/venv /opt/venv\nCOPY octobot/config /octobot/octobot/config\nCOPY docker-entrypoint.sh docker-entrypoint.sh\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends curl libxslt-dev libxcb-xinput0 libjpeg62-turbo-dev zlib1g-dev libblas-dev liblapack-dev libatlas-base-dev libopenjp2-7 libtiff-dev \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && ln -s /opt/venv/bin/OctoBot OctoBot # Make sure we use the virtualenv \\\n    && chmod +x docker-entrypoint.sh\n\nVOLUME /octobot/backtesting\nVOLUME /octobot/logs\nVOLUME /octobot/tentacles\nVOLUME /octobot/user\nEXPOSE 5001\n\nHEALTHCHECK --interval=1m --timeout=30s --retries=3 CMD curl --fail http://localhost:5001 || exit 1\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n"
}