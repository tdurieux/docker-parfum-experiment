{
  "startTime": 1674215429707,
  "endTime": 1674215430775,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 19,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 452
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:fermium\n\nARG COUNTLY_PLUGINS=mobile,web,desktop,plugins,density,locale,browser,sources,views,enterpriseinfo,logger,systemlogs,populator,reports,crashes,push,star-rating,slipping-away-users,compare,server-stats,dbviewer,assistant,times-of-day,compliance-hub,alerts,onboarding,consolidate,remote-config,hooks,dashboards\n# Enterprise Edition:\n#ARG COUNTLY_PLUGINS=mobile,web,desktop,plugins,density,locale,browser,sources,views,drill,funnels,retention_segments,flows,cohorts,surveys,remote-config,ab-testing,formulas,activity-map,concurrent_users,revenue,logger,systemlogs,populator,reports,crashes,push,geo,block,users,star-rating,slipping-away-users,compare,server-stats,assistant,dbviewer,crash_symbolication,groups,white-labeling,alerts,times-of-day,compliance-hub,onboarding,active_users,performance-monitoring,config-transfer,consolidate,data-manager,hooks,dashboards,heatmaps\nEXPOSE 3001\nHEALTHCHECK --start-period=400s CMD curl --fail http://localhost:3001/o/ping || exit 1\n\nUSER root\n\n# Core dependencies\n## Tini\nENV COUNTLY_CONTAINER=\"api\" \\\n\tCOUNTLY_DEFAULT_PLUGINS=\"${COUNTLY_PLUGINS}\" \\\n\tCOUNTLY_CONFIG_API_API_WORKERS=\"1\" \\\n\tCOUNTLY_CONFIG_API_API_HOST=\"0.0.0.0\" \\\n\tTINI_VERSION=\"0.18.0\"\n\nWORKDIR /opt/countly\nCOPY . .\n\nRUN curl -f -s -L -o /tmp/tini.deb \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb\" && \\\n\tdpkg -i /tmp/tini.deb && \\\n\n\t# modify standard distribution\n\tapt-get update && apt-get install --no-install-recommends -y sqlite3 && \\\n\t./bin/docker/modify.sh && \\\n\n\t# preinstall\n\tcp -n ./api/config.sample.js ./api/config.js && \\\n\tcp -n ./frontend/express/config.sample.js ./frontend/express/config.js && \\\n\tHOME=/tmp npm install --unsafe-perm=true --allow-root && \\\n\tHOME=/tmp npm install argon2 --build-from-source --unsafe-perm=true --allow-root && \\\n\t./bin/docker/preinstall.sh && \\\n\tbash /opt/countly/bin/scripts/detect.init.sh && \\\n\n\t# cleanup & chown\n\tnpm remove -y --no-save mocha nyc should supertest && \\\n\tapt-get remove -y git gcc g++ make automake autoconf libtool pkg-config unzip sqlite3 && \\\n\tapt-get -y --no-install-recommends install gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n\trm -rf test /tmp/* /tmp/.??* /var/tmp/* /var/tmp/.??* /var/log/* /root/.npm && \\\n\n\t# temporary to remove npm bug message\n\tmkdir /.npm && chown -R 1001:0 /.npm && \\\n\n\t# More tests needed\n\t# (find / -perm +6000 -type f -exec chmod a-s {} \\; || true) && \\\n\tchown -R 1001:0 /opt/countly && \\\n\tchmod -R g=u /opt/countly && npm cache clean --force;\n\n\nUSER 1001:0\n\nENTRYPOINT [\"/usr/bin/tini\", \"-v\", \"--\"]\n\nCMD [\"/opt/countly/bin/docker/cmd.sh\"]"
}