{
  "startTime": 1674250609461,
  "endTime": 1674250610855,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 455
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:bionic-1.0.0\n\nARG COUNTLY_PLUGINS=mobile,web,desktop,plugins,density,locale,browser,sources,views,enterpriseinfo,logger,systemlogs,populator,reports,crashes,push,star-rating,slipping-away-users,compare,server-stats,dbviewer,assistant,times-of-day,compliance-hub,alerts,onboarding,consolidate,remote-config,hooks,dashboards\n# Enterprise Edition:\n#ARG COUNTLY_PLUGINS=mobile,web,desktop,plugins,density,locale,browser,sources,views,drill,funnels,retention_segments,flows,cohorts,surveys,remote-config,ab-testing,formulas,activity-map,concurrent_users,revenue,logger,systemlogs,populator,reports,crashes,push,geo,block,users,star-rating,slipping-away-users,compare,server-stats,assistant,dbviewer,crash_symbolication,groups,white-labeling,alerts,times-of-day,compliance-hub,onboarding,active_users,performance-monitoring,config-transfer,consolidate,data-manager,hooks,dashboards,heatmaps\n\nARG COUNTLY_CONFIG_API_MONGODB_HOST=localhost\nARG COUNTLY_CONFIG_FRONTEND_MONGODB_HOST=localhost\n\nCMD [\"/sbin/my_init\"]\n\n## Setup Countly\nENV COUNTLY_CONTAINER=\"both\" \\\n    COUNTLY_DEFAULT_PLUGINS=\"${COUNTLY_PLUGINS}\" \\\n    COUNTLY_CONFIG_API_API_HOST=\"0.0.0.0\" \\\n    COUNTLY_CONFIG_FRONTEND_WEB_HOST=\"0.0.0.0\"\n\nEXPOSE 80\nUSER root\n\nWORKDIR /opt/countly\nCOPY . .\n\nRUN useradd -r -M -U -d /opt/countly -s /bin/false countly && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        # standard\n        build-essential libkrb5-dev git sqlite3 wget sudo \\\n        # nginx\n        nginx \\\n        # puppeteer\n        gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 \\\n        libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 \\\n        libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils \\\n        # push / nghttp2\n        gcc g++ make binutils autoconf automake autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libev-dev \\\n        libevent-dev libjansson-dev libjemalloc-dev cython python3-dev python-setuptools && \\\n    # node\n    wget -qO- https://deb.nodesource.com/setup_14.x | bash - && \\\n    # data_migration (mongo clients)\n    wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add - && \\\n    echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-4.4.list && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install nodejs mongodb-org-shell mongodb-org-tools && \\\n\n    # configs\n    cp ./bin/config/nginx.server.conf /etc/nginx/sites-enabled/default && \\\n    cp ./bin/config/nginx.conf /etc/nginx/nginx.conf && \\\n    cp ./api/config.sample.js ./api/config.js && \\\n    cp ./frontend/express/config.sample.js ./frontend/express/config.js && \\\n    cp ./frontend/express/public/javascripts/countly/countly.config.sample.js ./frontend/express/public/javascripts/countly/countly.config.js && \\\n\n    # npm dependencies\n    ./bin/docker/modify.sh && \\\n    HOME=/tmp npm install --unsafe-perm && \\\n    ./bin/docker/preinstall.sh && \\\n\n    # web sdk\n    bash ./bin/scripts/detect.init.sh && \\\n    countly update sdk-web && \\\n\n    # services and such\n    mkdir -p /etc/my_init.d && cp ./bin/docker/postinstall.sh /etc/my_init.d/ && \\\n    mkdir /etc/service/nginx && \\\n    mkdir /etc/service/countly-api && \\\n    mkdir /etc/service/countly-dashboard && \\\n    echo \"\" >> /etc/nginx/nginx.conf && \\\n    echo \"daemon off;\" >> /etc/nginx/nginx.conf && \\\n    cp ./bin/commands/docker/nginx.sh /etc/service/nginx/run && \\\n    cp ./bin/commands/docker/countly-api.sh /etc/service/countly-api/run && \\\n    cp ./bin/commands/docker/countly-dashboard.sh /etc/service/countly-dashboard/run && \\\n    chown -R countly:countly /opt/countly && \\\n    # cleanup\n    npm remove -y --no-save mocha nyc should supertest && \\\n    apt-get -y remove build-essential libkrb5-dev sqlite3 wget \\\n        gcc g++ make binutils autoconf automake autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libev-dev libevent-dev libjansson-dev libjemalloc-dev cython python3-dev python-setuptools && \\\n    apt-get -y --no-install-recommends install gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /tmp/.??* /var/tmp/* /var/tmp/.??* ~/.npm ~/.cache && \\\n\n    # temporary to remove npm bug message\n    mkdir /.npm && chown -R countly:countly /.npm && npm cache clean --force;\n\n# USER 1001:0\n"
}