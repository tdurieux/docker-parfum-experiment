diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tarepan/voiceconversionlab/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tarepan/voiceconversionlab/.devcontainer/Dockerfile/repaired.Dockerfile
index fc3ea40..5a714c9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tarepan/voiceconversionlab/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tarepan/voiceconversionlab/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -21,8 +21,8 @@ RUN apt-get update \
     # Verify common dependencies and utilities are installed
     && apt-get -y install --no-install-recommends apt-utils dialog git openssh-client curl less iproute2 procps 2>&1 \
     #
-    # Create a non-root user to use if not already available - see https://aka.ms/vscode-remote/containers/non-root-user.
-    && if [ $(getent passwd $USERNAME) ]; then \
+    # Create a non-root user to use if not already available - see https://aka.ms/vscode-remote/containers/non-root-user. \
+    && if [ $(getent passwd $USERNAME) ];then \
     # If exists, see if we need to tweak the GID/UID
     if [ "$USER_GID" != "1011" ] || [ "$USER_UID" != "1011" ]; then \
     groupmod --gid $USER_GID $USERNAME \
@@ -30,18 +30,18 @@ RUN apt-get update \
     && chown -R $USER_UID:$USER_GID /home/$USERNAME; \
     fi; \
     else \
-    # Otherwise ccreate the non-root user
+
     groupadd --gid $USER_GID $USERNAME \
     && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
-    # Add sudo support for the non-root user
-    && apt-get install -y sudo \
-    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
+    # Add sudo support for the non-root user \
+    && apt-get install --no-install-recommends -y sudo \
+    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
     && chmod 0440 /etc/sudoers.d/$USERNAME; \
     fi \
     #
     # Use Docker script from script library to set things up
-    && curl -sSL $DOCKER_SCRIPT_SOURCE -o /tmp/docker-setup.sh \
-    && ([ "${DOCKER_SCRIPT_SHA}" = "dev-mode" ] || (echo "${DOCKER_SCRIPT_SHA} */tmp/docker-setup.sh" | sha256sum -c -)) \
+    && curl -f -sSL $DOCKER_SCRIPT_SOURCE -o /tmp/docker-setup.sh \
+    && ( [ "${DOCKER_SCRIPT_SHA}" = "dev-mode" ] || ( echo "${DOCKER_SCRIPT_SHA}  */tmp/docker-setup.sh" | sha256sum -c -)) \
     && /bin/bash /tmp/docker-setup.sh "${ENABLE_NONROOT_DOCKER}" "${SOURCE_SOCKET}" "${TARGET_SOCKET}" "${USERNAME}" \
     && rm /tmp/docker-setup.sh \
     #
@@ -50,8 +50,8 @@ RUN apt-get update \
     && apt-get clean -y \
     && rm -rf /var/lib/apt/lists/*
 
-# Setting the ENTRYPOINT to docker-init.sh will configure non-root access to 
-# the Docker socket if "overrideCommand": false is set in devcontainer.json. 
+# Setting the ENTRYPOINT to docker-init.sh will configure non-root access to
+# the Docker socket if "overrideCommand": false is set in devcontainer.json.
 # The script will also execute CMD if you need to alter startup behaviors.
 ENTRYPOINT [ "/usr/local/share/docker-init.sh" ]
 CMD [ "sleep", "infinity" ]
\ No newline at end of file