{
  "startTime": 1674221205953,
  "endTime": 1674221206632,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:slim\n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs, work.\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y wget gnupg \\\n  && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n  && apt-get update \\\n  && apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf libxss1 --no-install-recommends \\\n  && rm -rf /var/lib/apt/lists/*\n\n# If running Docker >= 1.13.0 use docker run's --init arg to reap zombie processes, otherwise\n# uncomment the following lines to have `dumb-init` as PID 1\n# ADD https://github.com/Yelp/dumb-init/releases/download/v1.2.2/dumb-init_1.2.2_x86_64 /usr/local/bin/dumb-init\n# RUN chmod +x /usr/local/bin/dumb-init\n# ENTRYPOINT [\"dumb-init\", \"--\"]\n\n# Uncomment to skip the chromium download when installing puppeteer. If you do,\n# you'll need to launch puppeteer with:\n#     browser.launch({executablePath: 'google-chrome-unstable'})\n# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n\n# # Install puppeteer so it's available in the container.\n# RUN npm init -y &&  \\\n#     npm i puppeteer \\\n#     # Add user so we don't need --no-sandbox.\n#     # same layer as npm install to keep re-chowned files from using up several hundred MBs more space\n#     && groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \\\n#     && mkdir -p /home/pptruser/Downloads \\\n#     && chown -R pptruser:pptruser /home/pptruser \\\n#     && chown -R pptruser:pptruser /node_modules \\\n#     && chown -R pptruser:pptruser /package.json \\\n#     && chown -R pptruser:pptruser /package-lock.json\n\n# # Run everything after as non-privileged user.\n# USER pptruser\n\n# CMD [\"google-chrome-unstable\"]\nCOPY entrypoint.sh .\nRUN chmod +x ./entrypoint.sh\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}