diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/shesek/spark-wallet/scripts/builder.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/shesek/spark-wallet/scripts/builder.Dockerfile/repaired.Dockerfile
index df44b31..38b8a46 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/shesek/spark-wallet/scripts/builder.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/shesek/spark-wallet/scripts/builder.Dockerfile/repaired.Dockerfile
@@ -6,14 +6,14 @@ ENV PATH=./node_modules/.bin:$PATH
 RUN npm config set unsafe-perm true
 
 RUN apt-get update && apt-get install -y --no-install-recommends software-properties-common=0.96.20.2-2.1 \
-  faketime=0.9.8-9 fuse=2.9.9-5 disorderfs=0.5.11-1
+  faketime=0.9.8-9 fuse=2.9.9-5 disorderfs=0.5.11-1 && rm -rf /var/lib/apt/lists/*;
 
 # Wine for Electron Windows builds
 # copied from https://github.com/electron-userland/electron-builder/blob/master/docker/wine/Dockerfile
 RUN dpkg --add-architecture i386 \
   && apt-key adv --keyserver hkp://keyserver.ubuntu.com --recv-keys D43F640145369C51D786DDEA76F1A20FF987672F \
   && apt-add-repository https://dl.winehq.org/wine-builds/debian \
-  && apt-get update && apt-get install -y --no-install-recommends winehq-stable=6.0.2~bullseye-1
+  && apt-get update && apt-get install -y --no-install-recommends winehq-stable=6.0.2~bullseye-1 && rm -rf /var/lib/apt/lists/*;
 ENV WINEDEBUG -all,err+all
 ENV WINEDLLOVERRIDES winemenubuilder.exe=d
 
@@ -30,23 +30,23 @@ WORKDIR /root
 # Java 8 (OpenJDK)
 RUN apt-add-repository 'deb http://security.debian.org/debian-security stretch/updates main' && apt-get update \
   && apt-get install -y --no-install-recommends openjdk-8-jdk-headless=8u302-b08-1~deb9u1 \
-  && apt-add-repository --remove 'deb http://security.debian.org/debian-security stretch/updates main' && apt-get update
+  && apt-add-repository --remove 'deb http://security.debian.org/debian-security stretch/updates main' && apt-get update && rm -rf /var/lib/apt/lists/*;
 
 # Android SKD tools
 RUN wget -q -O sdktools.zip https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip \
-  && echo "92ffee5a1d98d856634e8b71132e8a95d96c83a63fde1099be3d86df3106def9 sdktools.zip" | sha256sum -c - \
+  && echo "92ffee5a1d98d856634e8b71132e8a95d96c83a63fde1099be3d86df3106def9  sdktools.zip" | sha256sum -c - \
   && unzip -q sdktools.zip -d $ANDROID_HOME && rm sdktools.zip \
   && yes | (sdkmanager platform-tools "platforms;android-27" "build-tools;27.0.3" && sdkmanager --licenses) > /dev/null 2>&1
 # Gradle 4.1
 RUN wget -q https://services.gradle.org/distributions/gradle-4.1-bin.zip \
-  && echo "d55dfa9cfb5a3da86a1c9e75bb0b9507f9a8c8c100793ccec7beb6e259f9ed43 gradle-4.1-bin.zip" | sha256sum -c - \
+  && echo "d55dfa9cfb5a3da86a1c9e75bb0b9507f9a8c8c100793ccec7beb6e259f9ed43  gradle-4.1-bin.zip" | sha256sum -c - \
   && unzip -q gradle-4.1-bin.zip -d ~ && rm gradle-4.1-bin.zip
 
 
 # Electron dependencies
 WORKDIR /opt/spark/electron
 COPY electron/package.json electron/npm-shrinkwrap.json electron/hook-afterPack.js ./
-RUN npm install
+RUN npm install && npm cache clean --force;
 # build a dummy electron app, to trigger a download of all the required artifacts files in docker build time
 # see https://github.com/electron-userland/electron-builder/issues/3220 for details.
 RUN mkdir www && echo '/**/' > main.js && electron-builder --linux --mac --win -c.extraMetadata.version=0.0.0 && rm -rf www main.js dist
@@ -55,7 +55,7 @@ RUN mkdir www && echo '/**/' > main.js && electron-builder --linux --mac --win -
 WORKDIR /opt/spark/cordova
 COPY cordova/package.json cordova/npm-shrinkwrap.json cordova/config.xml ./
 COPY cordova/res ./res
-RUN npm install && cordova telemetry off
+RUN npm install && cordova telemetry off && npm cache clean --force;
 # build a dummy cordova app to download required artifacts in docker build time
 # `electron prepare` sometimes fails on the first attempt but works on the second. this appears related to  https://github.com/apache/cordova-plugin-screen-orientation/issues/55
 RUN mkdir www && (cordova prepare || cordova prepare) && cordova build && rm -r www platforms/android/app/build
@@ -64,12 +64,12 @@ RUN mkdir www && (cordova prepare || cordova prepare) && cordova build && rm -r
 WORKDIR /opt/spark/client
 COPY client/package.json client/npm-shrinkwrap.json ./
 COPY client/fonts ./fonts
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # Spark main
 WORKDIR /opt/spark
 COPY package.json npm-shrinkwrap.json ./
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 COPY . .