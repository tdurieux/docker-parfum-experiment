{
  "startTime": 1674255765166,
  "endTime": 1674255765665,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 20,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM parseplatform/parse-server:latest\n\n# Install necessary dependencies and setup folders a root\nUSER root\nRUN apk add --no-cache bash && apk add --no-cache postgresql-client\nRUN npm install --production netreconlab/parse-server-carekit#main parse-server-any-analytics-adapter@^1.x.x @analytics/google-analytics@^0.5.x && npm cache clean --force;\nRUN npm install --force --production parse-hipaa-dashboard@^1.x.x clamscan@^2.x.x @parse/s3-files-adapter@^1.x.x parse-server-api-mail-adapter@^2.x.x newrelic@^8.x.x && npm cache clean --force;\nRUN npm install --production pm2@^5.x.x -g && npm cache clean --force;\nRUN mkdir ./files\nCOPY ./scripts/ ./scripts/\nRUN chmod +x ./scripts/wait-for-postgres.sh ./scripts/parse_idempotency_delete_expired_records.sh ./scripts/setup-dbs.sh ./scripts/setup-parse-index.sh ./scripts/setup-pgaudit.sh\nRUN chown -R node ./files ./scripts\n\n# Complete parse-hipaa setup as node\nUSER node\nCOPY ./ecosystem.config.js ./\nCOPY ./process.yml ./\nCOPY ./index.js ./\nCOPY ./parse-dashboard-config.json ./\nCOPY ./cloud/ ./cloud/\n\nENV CLUSTER_INSTANCES=1\n\nENTRYPOINT []\nCMD [\"./scripts/wait-for-postgres.sh\", \"node\", \"index.js\"]\n"
}