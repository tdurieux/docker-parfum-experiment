diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oregondigital/oregondigital/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oregondigital/oregondigital/docker/Dockerfile/repaired.Dockerfile
index 7a0aa79..521ef92 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oregondigital/oregondigital/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oregondigital/oregondigital/docker/Dockerfile/repaired.Dockerfile
@@ -14,11 +14,11 @@ FROM ubuntu:16.04
 MAINTAINER Jeremy Echols <jechols@uoregon.edu>
 
 #apt won't find some libs if this isn't run
-RUN apt-get update --fix-missing && apt-get install -y pkg-config \
+RUN apt-get update --fix-missing && apt-get install --no-install-recommends -y pkg-config \
   python-software-properties software-properties-common automake \
   build-essential gtk-doc-tools libglib2.0-dev libjpeg-turbo8-dev libpng12-dev \
   libwebp-dev libtiff5-dev libexif-dev libgsf-1-dev liblcms2-dev libxml2-dev \
-  swig libmagickcore-dev curl && mkdir -p /opt/libvips
+  swig libmagickcore-dev curl && mkdir -p /opt/libvips && rm -rf /var/lib/apt/lists/*;
 
 # Vips!
 #RUN apt-get install -y automake build-essential \
@@ -27,17 +27,17 @@ RUN apt-get update --fix-missing && apt-get install -y pkg-config \
 #                       libgsf-1-dev liblcms2-dev libxml2-dev swig libmagickcore-dev curl
 
 WORKDIR /opt/libvips
-RUN curl -L https://github.com/libvips/libvips/releases/download/v8.6.3/vips-8.6.3.tar.gz | tar zx
+RUN curl -f -L https://github.com/libvips/libvips/releases/download/v8.6.3/vips-8.6.3.tar.gz | tar zx
 WORKDIR /opt/libvips/vips-8.6.3
-RUN ./configure --enable-debug=no --enable-docs=no --enable-cxx=yes --without-python --without-orc --without-fftw && make && make install && ldconfig
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-debug=no --enable-docs=no --enable-cxx=yes --without-python --without-orc --without-fftw && make && make install && ldconfig
 
 # Various derivative libs
-RUN apt-get purge libreoffice* && add-apt-repository -y ppa:libreoffice/ppa &&\
-  apt-get install -y poppler-utils poppler-data ghostscript libreoffice \
+RUN apt-get purge libreoffice* && add-apt-repository -y ppa:libreoffice/ppa && \
+  apt-get install --no-install-recommends -y poppler-utils poppler-data ghostscript libreoffice \
   libmagic-dev libmagickwand-dev ffmpeg libavcodec-ffmpeg-extra56 \
   libvorbis-dev graphicsmagick graphicsmagick-libmagick-dev-compat \
   libmysqlclient-dev libsqlite3-dev nodejs git tzdata libssl-dev \
-  libreadline-dev
+  libreadline-dev && rm -rf /var/lib/apt/lists/*;
 
 # Grab Ruby manually - can't install the default for Ubuntu 12.04
 #
@@ -46,9 +46,9 @@ RUN apt-get purge libreoffice* && add-apt-repository -y ppa:libreoffice/ppa &&\
 # with a major change (like OS) that would require a ruby rebuild anyway
 RUN  mkdir -p /opt/ruby
 WORKDIR /opt/ruby
-RUN curl https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.8.tar.gz | tar zx
+RUN curl -f https://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.8.tar.gz | tar zx
 WORKDIR /opt/ruby/ruby-2.3.8
-RUN ./configure && make && make install && gem install bundler -v '1.17.3'
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && gem install bundler -v '1.17.3'
 
 # Set an environment variable to store where the app is installed to inside
 # of the Docker image
@@ -83,7 +83,7 @@ RUN chmod +x /link-set-content.sh && /link-set-content.sh && bundle exec \
   ln -s /oregondigital/media /oregondigital/public/media && \
   ln -s /oregondigital/media/thumbnails /oregondigital/public/thumbnails && \
   chmod +x /entrypoint.sh
-  
+
 
 # Expose a volume so that the web server can read assets
 VOLUME ["$INSTALL_PATH/public"]