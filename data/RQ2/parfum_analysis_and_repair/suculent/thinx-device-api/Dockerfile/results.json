{
  "startTime": 1674252288606,
  "endTime": 1674252289156,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM thinxcloud/base:alpine\n\nLABEL maintainer=\"Matej Sychra <suculent@me.com>\"\nLABEL name=\"THiNX API\" version=\"1.7.1915\"\n\nARG DEBIAN_FRONTEND=noninteractive\n\nARG THINX_HOSTNAME\nENV THINX_HOSTNAME=${THINX_HOSTNAME}\n\nARG THINX_OWNER_EMAIL\nENV THINX_OWNER_EMAIL=${THINX_OWNER_EMAIL}\n\nARG COUCHDB_USER\nENV COUCHDB_USER=${COUCHDB_USER}\nARG COUCHDB_PASS\nENV COUCHDB_PASS=${COUCHDB_PASS}\nARG REDIS_PASSWORD\nENV REDIS_PASSWORD=${REDIS_PASSWORD}\n\nARG CODACY_PROJECT_TOKEN\nENV CODACY_PROJECT_TOKEN=${CODACY_PROJECT_TOKEN}\nARG SONAR_TOKEN\nENV SONAR_TOKEN=${SONAR_TOKEN}\nARG ROLLBAR_ACCESS_TOKEN\nENV ROLLBAR_ACCESS_TOKEN=${ROLLBAR_ACCESS_TOKEN}\nARG ROLLBAR_ENVIRONMENT\nARG ROLLBAR_ENVIRONMENT=${ROLLBAR_ENVIRONMENT}\nARG AQUA_SEC_TOKEN\nENV AQUA_SEC_TOKEN=${AQUA_SEC_TOKEN}\nARG SNYK_TOKEN\nENV SNYK_TOKEN=${SNYK_TOKEN}\nARG SQREEN_TOKEN\nENV SQREEN_TOKEN=${SQREEN_TOKEN}\n\nARG ENVIRONMENT\nENV ENVIRONMENT=${ENVIRONMENT}\n\nARG NODE_ENV=production\nENV NODE_ENV=${NODE_ENV}\n\nARG SQREEN_APP_NAME\nENV SQREEN_APP_NAME=${SQREEN_APP_NAME}\n\nARG REVISION\nENV REVISION=${REVISION}\n\nARG GOOGLE_OAUTH_ID\nENV GOOGLE_OAUTH_ID=${GOOGLE_OAUTH_ID}\nARG GOOGLE_OAUTH_SECRET\nENV GOOGLE_OAUTH_SECRET=${GOOGLE_OAUTH_SECRET}\n\nARG GITHUB_CLIENT_ID\nENV GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}\nARG GITHUB_CLIENT_SECRET\nENV GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}\n\nARG SLACK_BOT_TOKEN\nENV SLACK_BOT_TOKEN=${SLACK_BOT_TOKEN}\n\nARG ENTERPRISE\nENV ENTERPRISE=${ENTERPRISE}\n\nARG WORKER_SECRET\nENV WORKER_SECRET=${WORKER_SECRET}\n\n# Create app directory\nWORKDIR /opt/thinx/thinx-device-api\n\n# Install app dependencies\nCOPY package.json ./\n\nRUN npm install -g npm@8.6.0 \\\n && npm install --unsafe-perm --only-prod . && npm cache clean --force;\n\n# THiNX Web & Device API (HTTP)\nEXPOSE 7442\n\n# THiNX Device API (HTTPS)\nEXPOSE 7443\n\n#Â GitLab Webbook (optional, moved to HTTPS)\nEXPOSE 9002\n\n# Copy app source code\nCOPY . .\n\n# TODO: Implement Snyk Container Scanning here in addition to DockerHub manual scans...\n\nCOPY ./docker-entrypoint.sh /docker-entrypoint.sh\n\nENTRYPOINT [ \"/docker-entrypoint.sh\" ]\n"
}