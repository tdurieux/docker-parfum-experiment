{
  "startTime": 1674252254087,
  "endTime": 1674252254709,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 48,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 384
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 47,
        "columnEnd": 115
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 384
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 47,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n\nARG UBUNTU_MIRROR\nRUN [ -z \"${UBUNTU_MIRROR}\" ] || sed -i.bak s/archive.ubuntu.com/${UBUNTU_MIRROR}/g /etc/apt/sources.list\n\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q sudo software-properties-common golang-go git gcc g++ cmake swig psmisc procps pcscd pcsc-tools yubico-piv-tool libhidapi-dev libassuan-dev libgcrypt20-dev libksba-dev libnpth0-dev opensc openssl openssh-server libpcsclite-dev libudev-dev libusb-dev libcmocka-dev python3-pip python3-setuptools python3-wheel lcov && \\\n    apt-add-repository -y ppa:yubico/stable && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q yubikey-manager && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --upgrade pip\n\nCOPY go.mod go.sum /root/\nCOPY test-via-pcsc /root/test-via-pcsc\nCOPY test-real /root/test-real\nRUN ls -la /root\n\nRUN cd /root && ./test-via-pcsc/build_fido_tests.sh\nRUN cd /root && ./test-via-pcsc/build_gpg.sh && gpg --batch --version\nRUN cp /root/test-real/libccid_Info.plist /etc/libccid_Info.plist && echo -e '\\\nStrictModes no \\n\\\nUsePAM no \\n\\\nPort 2200 \\n\\\n' >/etc/sshd_config\n\nRUN cd /root &&\\\n    go test -v test-via-pcsc/admin_test.go ;\\\n    go test -v test-via-pcsc/ndef_test.go ;\\\n    go test -v test-via-pcsc/openpgp_test.go ;\\\n    go test -v test-via-pcsc/oath_test.go ;\\\n    true # build tests\n\nWORKDIR /root\nUSER root\n"
}