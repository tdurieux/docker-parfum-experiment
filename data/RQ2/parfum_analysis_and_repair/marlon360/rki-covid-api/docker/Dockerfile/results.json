{
  "startTime": 1674248409182,
  "endTime": 1674248410292,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine3.14\n\n# common build flags\nENV CFLAGS=-O3\nENV CXXFLAGS=-O3\n\nARG VIPS_VERSION=8.11.4\n\n# System update, build dependencies, compile vips-8.11.x and cleanup.\nRUN set -x -o pipefail \\\n  && wget -O- https://github.com/libvips/libvips/releases/download/v${VIPS_VERSION}/vips-${VIPS_VERSION}.tar.gz | tar xzC /tmp \\\n  && apk update \\\n  && apk upgrade \\\n  && apk add \\\n    zlib libxml2 glib gobject-introspection libjpeg-turbo \\\n    libexif lcms2 fftw giflib libpng libwebp orc tiff poppler-glib \\\n    librsvg libgsf openexr libheif libimagequant pango fontconfig \\\n  && apk add --virtual .ms-fonts msttcorefonts-installer \\\n  && update-ms-fonts 2>/dev/null \\\n  && fc-cache -f \\\n  && apk del .ms-fonts\\\n  && apk add \\\n    --virtual .vips-dependencies build-base binutils zlib-dev \\\n    libxml2-dev glib-dev gobject-introspection-dev libjpeg-turbo-dev \\\n    libexif-dev lcms2-dev fftw-dev giflib-dev libpng-dev libwebp-dev \\\n    orc-dev tiff-dev poppler-dev librsvg-dev libgsf-dev openexr-dev \\\n    libheif-dev libimagequant-dev pango-dev py-gobject3-dev \\\n  && cd /tmp/vips-${VIPS_VERSION} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n                 --disable-static \\\n                 --disable-dependency-tracking \\\n                 --enable-silent-rules \\\n  && make -s install-strip \\\n  && cd .. \\\n  && rm -rf /tmp/vips-${VIPS_VERSION} \\\n  && apk del --purge .vips-dependencies \\\n  && rm -rf /var/cache/apk/*\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY ./package*.json ./\n\n# Inside \"npm install\" the build tools and dev packages are needed to compile \"sharp\"\n# against globaly installed lib vips in newest version\n# Install the buildtools, dev packages of the required shared libs\n# execute \"npm install\" and remove the buildtools and dev packages afterwards\nRUN apk add --no-cache --virtual .vips-deps build-base binutils zlib-dev libxml2-dev glib-dev gobject-introspection-dev \\\n     libjpeg-turbo-dev libexif-dev lcms2-dev fftw-dev giflib-dev libpng-dev libwebp-dev orc-dev tiff-dev \\\n     poppler-dev librsvg-dev libgsf-dev openexr-dev libheif-dev libimagequant-dev pango-dev py-gobject3-dev \\\n  && npm install \\\n  && apk del .vips-deps && npm cache clean --force;\n\n# If you are building your code for production\n# RUN npm ci --only=production\n\nRUN npm install pm2 -g && npm cache clean --force;\n\n# Bundle app source\nCOPY . .\n\nRUN npm run build\n\nEXPOSE 8080\nCMD [\"pm2-runtime\", \"dist/server.js\", \"-i\", \"-1\"]\n"
}