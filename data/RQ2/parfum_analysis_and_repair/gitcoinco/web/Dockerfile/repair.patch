diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gitcoinco/web/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gitcoinco/web/Dockerfile/repaired.Dockerfile
index 2f561ce..35b4af8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gitcoinco/web/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gitcoinco/web/Dockerfile/repaired.Dockerfile
@@ -12,27 +12,27 @@ ARG CYPRESS_DEPS="libgtk2.0-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libx
 
 # Install general dependencies.
 RUN apt-get update
-RUN apt-get install -y software-properties-common
+RUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN add-apt-repository universe
 RUN apt-get update
-RUN apt-get install -y $PACKAGES
+RUN apt-get install --no-install-recommends -y $PACKAGES && rm -rf /var/lib/apt/lists/*;
 RUN apt-get update --fix-missing
-RUN apt-get install -y $BUILD_DEPS --fix-missing
+RUN apt-get install --no-install-recommends -y $BUILD_DEPS --fix-missing && rm -rf /var/lib/apt/lists/*;
 
 
-RUN curl https://bootstrap.pypa.io/get-pip.py > /tmp/get-pip.py
+RUN curl -f https://bootstrap.pypa.io/get-pip.py > /tmp/get-pip.py
 RUN python3.7 /tmp/get-pip.py
 RUN rm /tmp/get-pip.py
 
 # Install google chrome for cypress testing
 WORKDIR /usr/src
-RUN apt-get update && apt-get install -y wget
+RUN apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;
 RUN wget "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
-RUN apt-get install -y $CHROME_DEPS
+RUN apt-get install --no-install-recommends -y $CHROME_DEPS && rm -rf /var/lib/apt/lists/*;
 RUN dpkg -i google-chrome-stable_current_amd64.deb
 
 # Install cypress dependencies
-RUN apt-get install -y $CYPRESS_DEPS
+RUN apt-get install --no-install-recommends -y $CYPRESS_DEPS && rm -rf /var/lib/apt/lists/*;
 
 # Move to /code dir and copy in working dir content
 WORKDIR /code
@@ -45,14 +45,14 @@ RUN mkdir -p /usr/share/GeoIP/ && \
     tar -xvf GeoLite2-City.mmdb.tar && \
     tar -xvf GeoLite2-Country.mmdb.tar && \
     mv GeoLite2-City_20200128/*.mmdb /usr/share/GeoIP/ && \
-    mv GeoLite2-Country_20200128/*.mmdb /usr/share/GeoIP/
+    mv GeoLite2-Country_20200128/*.mmdb /usr/share/GeoIP/ && rm GeoLite2-City.mmdb.tar
 
 # Upgrade package essentials.
-RUN pip3 install --upgrade pip==20.0.2 setuptools wheel dumb-init pipenv
+RUN pip3 install --no-cache-dir --upgrade pip==20.0.2 setuptools wheel dumb-init pipenv
 
 # Install pip packages
 COPY requirements/ /code/
-RUN pip3 install --upgrade -r test.txt
+RUN pip3 install --no-cache-dir --upgrade -r test.txt
 
 # Copy over docker-command (start-up script)
 COPY bin/docker-command.bash /bin/docker-command.bash
@@ -66,15 +66,15 @@ RUN dos2unix /bin/review-env-initial-data.bash
 COPY app/ /code/app/
 
 # Install yarn and set node version
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
 RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
 RUN apt-get update
-RUN apt-get install -y yarn
+RUN apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;
 RUN yarn global add n
 RUN n stable
 
 COPY package.json /code/
-RUN cd /code && yarn install
+RUN cd /code && yarn install && yarn cache clean;
 
 # Increase number of file watches (524288 is the max we can set this to)
 RUN echo fs.inotify.max_user_watches=524288 >> /etc/sysctl.conf