{
  "startTime": 1674253739424,
  "endTime": 1674253740277,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-License-Identifier: MIT OR LGPL-2.0-or-later\n# SPDX-FileCopyrightText: 2020 Philip Chimento <philip.chimento@gmail.com>\n\n# === Build stage ===\n\nFROM registry.fedoraproject.org/fedora:34 AS build\nARG MOZJS_BRANCH=mozjs91\nARG MOZJS_BUILDDEPS=${MOZJS_BRANCH}\nARG BUILD_OPTS=\n\nENV SHELL=/bin/bash\n\nRUN dnf -y install 'dnf-command(builddep)' autoconf213 clang-devel cmake git \\\n    llvm-devel make ninja-build which xz clang llvm rust\nRUN dnf -y builddep ${MOZJS_BUILDDEPS}\n\nWORKDIR /root\n\nRUN mkdir -p include-what-you-use/_build\nADD https://include-what-you-use.org/downloads/include-what-you-use-0.16.src.tar.gz /root/include-what-you-use/\nWORKDIR /root/include-what-you-use\nRUN tar xzf include-what-you-use-0.16.src.tar.gz --strip-components=1 && rm include-what-you-use-0.16.src.tar.gz\n\nWORKDIR /root/include-what-you-use/_build\n\nRUN cmake -G Ninja -DCMAKE_INSTALL_PREFIX=/usr ..\nRUN ninja\nRUN DESTDIR=/root/iwyu-install ninja install\n\nWORKDIR /root\n\nRUN git clone --no-tags --depth 1 https://github.com/ptomato/mozjs.git -b ${MOZJS_BRANCH}\nRUN mkdir -p mozjs/_build\n\nWORKDIR /root/mozjs/_build\n\nRUN ../js/src/configure --prefix=/usr --libdir=/usr/lib64 --disable-jemalloc \\\n    --with-system-zlib --with-intl-api --enable-debug \\\n    ${BUILD_OPTS}\nRUN make -j$(nproc)\nRUN DESTDIR=/root/mozjs-install make install\nRUN rm -f /root/mozjs-install/usr/lib64/libjs_static.ajs\n\n# === Actual Docker image ===\n\nFROM registry.fedoraproject.org/fedora:34\n\nARG LOCALES=tr_TR\nENV SHELL=/bin/bash\n\n# List is comprised of base dependencies for CI scripts, gjs, and debug packages\n# needed for informative stack traces, e.g. in Valgrind.\n#\n# Do everything in one RUN command so that the dnf cache is not cached in the\n# final Docker image.\nRUN dnf -y install --enablerepo=fedora-debuginfo,updates-debuginfo \\\n    binutils \\\n    cairo-debuginfo \\\n    cairo-debugsource \\\n    cairo-gobject-devel \\\n    clang \\\n    compiler-rt \\\n    dbus-daemon \\\n    dbus-x11 \\\n    diffutils \\\n    fontconfig-debuginfo \\\n    fontconfig-debugsource \\\n    gcc-c++ \\\n    git \\\n    glib2-debuginfo \\\n    glib2-debugsource \\\n    glib2-devel \\\n    glibc-debuginfo \\\n    glibc-debuginfo-common \\\n    glibc-locale-source \\\n    gnome-desktop-testing \\\n    gobject-introspection-debuginfo \\\n    gobject-introspection-debugsource \\\n    gobject-introspection-devel \\\n    gtk3-debuginfo \\\n    gtk3-debugsource \\\n    gtk3-devel \\\n    gtk4-debuginfo \\\n    gtk4-debugsource \\\n    gtk4-devel \\\n    lcov \\\n    libasan \\\n    libubsan \\\n    libtsan \\\n    meson \\\n    ninja-build \\\n    pkgconf \\\n    readline-devel \\\n    sysprof-devel \\\n    systemtap-sdt-devel \\\n    valgrind \\\n    which \\\n    Xvfb \\\n    xz \\\n    && \\\n    dnf clean all && rm -rf /var/cache/dnf\n\nCOPY --from=build /root/mozjs-install/usr /usr\nCOPY --from=build /root/iwyu-install/usr /usr\nRUN ln -s /usr/bin/iwyu_tool.py /usr/bin/iwyu_tool\n\n# Enable sudo for wheel users\nRUN sed -i -e 's/# %wheel/%wheel/' -e '0,/%wheel/{s/%wheel/# %wheel/}' \\\n    /etc/sudoers\n\nENV HOST_USER_ID 5555\nRUN useradd -u $HOST_USER_ID -G wheel -ms /bin/bash user\n\n# Enable locales needed for specific tests\nRUN for locale in ${LOCALES}; do \\\n        localedef --verbose --force -i \"$locale\" \"$locale\" || true; \\\n        localedef --verbose --force -i \"$locale\" -f UTF-8 \"$locale\".UTF-8 || true; \\\n    done\n\nUSER user\nWORKDIR /home/user\n\nENV LANG C.UTF-8\n"
}