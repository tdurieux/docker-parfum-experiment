{
  "startTime": 1674255660998,
  "endTime": 1674255661957,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:argon\n\n# Set up environment variables\nENV NODE_ENV production\nENV BUILD_VERSION 11\n\n# List the Google Analytics ID as an arg to docker build, and save as env var\nARG GOOGLE_ANALYTICS_ID_ARG\nENV GOOGLE_ANALYTICS_ID $GOOGLE_ANALYTICS_ID_ARG\n# Same for stripe vars\nARG STRIPE_PUBKEY_LIVE_ARG\nENV STRIPE_PUBKEY_LIVE $STRIPE_PUBKEY_LIVE_ARG\nARG STRIPE_PUBKEY_TEST_ARG\nENV STRIPE_PUBKEY_TEST $STRIPE_PUBKEY_TEST_ARG\nARG GRADIENTZOO_WWW_DOMAIN_ARG\nENV GRADIENTZOO_WWW_DOMAIN $GRADIENTZOO_WWW_DOMAIN_ARG\n\n# Create app directory\nRUN mkdir -p /app\nWORKDIR /app\n\n# Install app dependencies\nCOPY package.json /app\nRUN npm install && npm cache clean --force;\n\n# Bundle app source\nCOPY . /app\n\n# Remove any bundles if they exist\nRUN rm -f /app/dist/bundle.js\n\n# Build production bundle\nRUN node /app/node_modules/webpack/bin/webpack.js --config /app/webpack.config.prod.js\n\nEXPOSE 4000\nCMD [ \"npm\", \"run\", \"prod\" ]"
}