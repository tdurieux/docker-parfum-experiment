{
  "startTime": 1674254692654,
  "endTime": 1674254693737,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 101,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Christopher Kennedy - Objective Perceptual Analysis Encoders Dockerfile\n#\n# Access to Git ORG using SSH KEY CERT\n# by setting ARG SSH_PRIVATE_KEY=<rsa_id_file>\n# must put clear public key (no passphrase) into objective_perceptual_analysis/id_rsa\n# during building the docker to allow github access for building ffmpeg.\n#\n## create docker container\n# docker build --rm --build-arg SSH_PRIVATE_KEY=id_rsa -t opaencoder .\n#\n## execute scripts on files via docker\n# docker run --rm -v `pwd`/tests:/opaencoder/tests opaencoder sh scripts/run_example.sh\n#\n## open a shell in docker container\n# docker run --rm -it opaencoder /bin/bash\nFROM centos:7 as devbuild\n\nARG SSH_PRIVATE_KEY\nWORKDIR /root/\n\n# Dev\nRUN yum install -y -q https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum\nRUN yum -y -q group install \"Development Tools\"\nRUN yum install -y -q \\\n\t\twget \\\n\t\tgit \\\n         clang \\\n         cargo \\\n         rust \\\n         cmake3 \\\n         sudo \\\n         gnuplot \\\n         mediainfo \\\n\t\tfreetype-devel \\\n         libass-devel \\\n\t\tfontconfig-devel \\\n         meson \\\n         ninja-build \\\n\t\tzlib-devel \\\n\t\tlibpng-devel \\\n\t\tbzip2 \\\n         which \\\n\t\tyasm \\\n         python \\\n\t\tmediainfo && rm -rf /var/cache/yum\n\n# Setup GitHub Credentials\nRUN mkdir /root/.ssh/\nCOPY ${SSH_PRIVATE_KEY} /root/.ssh/id_rsa\nRUN touch /root/.ssh/known_hosts\nRUN chmod 600 /root/.ssh/*\nRUN ssh-keyscan github.com >> /root/.ssh/known_hosts\n\n# Get opaencoder\nRUN git clone git@github.com:crunchyroll/objective_perceptual_analysis.git opaencoder\n\nENV PATH=/root/opaencoder/bin:/root/opaencoder:/usr/local/bin:$PATH\n\n# Build system\nRUN cd opaencoder && make\n\nRUN yum clean all\nRUN rm -rf /var/cache/yum\n\n# Clean up\nRUN cp /root/opaencoder/FFmpeg/ffmpeg /root/opaencoder/bin/ffmpeg\nRUN cp /root/opaencoder/FFmpeg/ffprobe /root/opaencoder/bin/ffprobe\nRUN rm -rf /root/opaencoder/FFmpeg\nRUN rm -rf /root/opaencoder/x264\nRUN rm -rf /root/opaencoder/aom\nRUN rm -rf /root/opaencoder/rav1e\nRUN rm -rf /root/opaencoder/SVT-AV1\nRUN rm -rf /root/opaencoder/opencv*\nRUN rm -rf /root/opaencoder/libvpx\nRUN rm -rf /root/opaencoder/dav1d\nRUN rm -rf /root/opaencoder/vmaf\nRUN rm -rf /root/opaencoder/nasm*\nRUN rm -rf /root/opaencoder/gcc-5.4.0*\nRUN rm -rf /root/opaencoder/.git\nRUN rm -rf /usr/local/lib/*.a\nRUN rm -rf /usr/local/include\n\n# Debug build entrypoint\nENTRYPOINT [\"bash\"]\n\n# Actual Docker build\nFROM centos:7\nCOPY --from=0 /root/opaencoder /opaencoder\nCOPY --from=0 /usr/local/ /usr/local/\nCOPY --from=0 /etc/ld.so.conf.d/local.conf /etc/ld.so.conf.d/local.conf\nCOPY --from=0 /usr/lib/libopencv* /usr/lib/\nCOPY --from=0 /usr/lib/libaom.so* /usr/lib/\nCOPY --from=0 /usr/lib/libx264.so* /usr/lib/\nWORKDIR /opaencoder\n\nLABEL version=\"0.1\"\nLABEL description=\"Objective Perceptual Analysis Encoder\"\n\n# Runtime\nRUN yum install -y -q https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum\nRUN yum install -y -q \\\n\t\tfontconfig \\\n         libass \\\n         freetype \\\n         libpng \\\n         zlib \\\n         fribidi \\\n         harfbuzz \\\n         bzip2 \\\n         gnuplot \\\n\t\tmediainfo \\\n\t\tpython && rm -rf /var/cache/yum\nRUN yum clean all\nRUN rm -rf /var/cache/yum\nRUN rm -rf /var/lib/rpm\n\nENV PATH=/opaencoder/bin:/opaencoder:/usr/local/bin:$PATH\nRUN ldconfig\nRUN ffmpeg -version\n\nCMD [\"ffmpeg\", \"-h\", \"full\"]\n\n"
}