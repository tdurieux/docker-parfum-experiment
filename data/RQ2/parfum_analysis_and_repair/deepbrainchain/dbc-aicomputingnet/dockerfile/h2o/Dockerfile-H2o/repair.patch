diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/deepbrainchain/dbc-aicomputingnet/dockerfile/h2o/Dockerfile-H2o b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/deepbrainchain/dbc-aicomputingnet/dockerfile/h2o/Dockerfile-H2o/repaired.Dockerfile
index ef382b3..e1674e7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/deepbrainchain/dbc-aicomputingnet/dockerfile/h2o/Dockerfile-H2o
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/deepbrainchain/dbc-aicomputingnet/dockerfile/h2o/Dockerfile-H2o/repaired.Dockerfile
@@ -23,21 +23,21 @@ RUN \
   rm -rf /var/cache/apt/* && \
 
 # Install Oracle Java 8
-  DEBIAN_FRONTEND=noninteractive apt-get install -y wget unzip python-pip python-sklearn python-pandas python-numpy python-matplotlib software-properties-common python-software-properties && \
+  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y wget unzip python-pip python-sklearn python-pandas python-numpy python-matplotlib software-properties-common python-software-properties && \
   add-apt-repository -y ppa:webupd8team/java && \
   apt-get update -q && \
   echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \
   echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections && \
-  DEBIAN_FRONTEND=noninteractive apt-get install -y oracle-java8-installer && \
+  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y oracle-java8-installer && \
   apt-get clean && \
 
 # Fetch h2o latest_stable
-  wget http://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest && \
+  wget https://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest && \
   wget --no-check-certificate -i latest -O /opt/h2o.zip && \
   unzip -d /opt /opt/h2o.zip && \
   rm /opt/h2o.zip && \
   cd /opt && \
-  cd `find . -name 'h2o.jar' | sed 's/.\///;s/\/h2o.jar//g'` && \ 
+  cd `find . -name 'h2o.jar' | sed 's/.\///;s/\/h2o.jar//g'` && \
   cp h2o.jar /opt && \
   /usr/bin/pip install `find . -name "*.whl"` && \
   cd / && \
@@ -45,27 +45,27 @@ RUN \
   chmod +x start-h2o-docker.sh && \
 
 # Get Content
-  wget http://s3.amazonaws.com/h2o-training/mnist/train.csv.gz && \
-  gunzip train.csv.gz && \ 
-  wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Extraction_Script.py  && \
+  wget https://s3.amazonaws.com/h2o-training/mnist/train.csv.gz && \
+  gunzip train.csv.gz && \
+  wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Extraction_Script.py && \
   wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Transformation_Script.py && \
-  wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Modeling_Script.py
+  wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Modeling_Script.py && rm -rf /var/lib/apt/lists/*;
 
 #RUN \
    #apt-get install net-tools && \
-   #apt-get install inetutils-ping  
-   #apt-get install  tzdata   
-   #echo "${TIME_ZONE}" > /etc/timezone && \ 
+   #apt-get install inetutils-ping 
+   #apt-get install  tzdata  
+   #echo "${TIME_ZONE}" > /etc/timezone && \
    #ln -sf /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime
 
 #install ipfs
-ADD go-ipfs_v0.4.15_linux-amd64.tar.gz /opt  
+ADD go-ipfs_v0.4.15_linux-amd64.tar.gz /opt 
 #RUN tar -zxvf /opt/go-ipfs* -C /opt && \
 RUN  cd /opt/go-ipfs && \
      ./install.sh  && \
      rm -rf /opt/go-ipfs
-     
-RUN pip install ipfsapi
+
+RUN pip install --no-cache-dir ipfsapi
 
 ADD swarm.key /
 ADD dbc_task.sh /
@@ -84,12 +84,12 @@ RUN cd /opt && \
     tar -zxvf spark-2.3.1-bin-without-hadoop.tgz && \
     mv spark-2.3.1-bin-without-hadoop spark && \
     mkdir -p /opt/spark/work && \
-    chmod 0777 /opt/spark/work
+    chmod 0777 /opt/spark/work && rm spark-2.3.1-bin-without-hadoop.tgz
 
 # Install Sparkling water latest version
 RUN cd /opt && \
-  wget http://h2o-release.s3.amazonaws.com/sparkling-water/rel-2.3/1/sparkling-water-2.3.1.zip && \
-  unzip sparkling-water-2.3.1.zip  && \
+  wget https://h2o-release.s3.amazonaws.com/sparkling-water/rel-2.3/1/sparkling-water-2.3.1.zip && \
+  unzip sparkling-water-2.3.1.zip && \
   rm sparkling-water-2.3.1.zip
 
 # Setup environment