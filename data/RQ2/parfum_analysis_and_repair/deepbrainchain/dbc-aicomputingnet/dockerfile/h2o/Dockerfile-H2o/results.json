{
  "startTime": 1674255217265,
  "endTime": 1674255219176,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 62
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 187
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 187
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########################################################################\n# Dockerfile for Oracle JDK 8 on Ubuntu 16.04\n########################################################################\n\n# pull base image\nFROM ubuntu:16.04\n\n# maintainer details\nMAINTAINER h2oai \"h2o.ai\"\n\n# add a post-invoke hook to dpkg which deletes cached deb files\n# update the sources.list\n# update/dist-upgrade\n# clear the caches\n\n\nRUN \\\n  echo 'DPkg::Post-Invoke {\"/bin/rm -f /var/cache/apt/archives/*.deb || true\";};' | tee /etc/apt/apt.conf.d/no-cache && \\\n  echo \"deb http://mirror.math.princeton.edu/pub/ubuntu xenial main universe\" >> /etc/apt/sources.list && \\\n  apt-get update -q -y && \\\n  apt-get dist-upgrade -y && \\\n  apt-get clean && \\\n  rm -rf /var/cache/apt/* && \\\n\n# Install Oracle Java 8\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y wget unzip python-pip python-sklearn python-pandas python-numpy python-matplotlib software-properties-common python-software-properties && \\\n  add-apt-repository -y ppa:webupd8team/java && \\\n  apt-get update -q && \\\n  echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n  echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y oracle-java8-installer && \\\n  apt-get clean && \\\n\n# Fetch h2o latest_stable\n  wget https://h2o-release.s3.amazonaws.com/h2o/latest_stable -O latest && \\\n  wget --no-check-certificate -i latest -O /opt/h2o.zip && \\\n  unzip -d /opt /opt/h2o.zip && \\\n  rm /opt/h2o.zip && \\\n  cd /opt && \\\n  cd `find . -name 'h2o.jar' | sed 's/.\\///;s/\\/h2o.jar//g'` && \\\n  cp h2o.jar /opt && \\\n  /usr/bin/pip install `find . -name \"*.whl\"` && \\\n  cd / && \\\n  wget https://raw.githubusercontent.com/h2oai/h2o-3/master/docker/start-h2o-docker.sh && \\\n  chmod +x start-h2o-docker.sh && \\\n\n# Get Content\n  wget https://s3.amazonaws.com/h2o-training/mnist/train.csv.gz && \\\n  gunzip train.csv.gz && \\\n  wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Extraction_Script.py && \\\n  wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Transformation_Script.py && \\\n  wget https://raw.githubusercontent.com/laurendiperna/Churn_Scripts/master/Modeling_Script.py && rm -rf /var/lib/apt/lists/*;\n\n#RUN \\\n   #apt-get install net-tools && \\\n   #apt-get install inetutils-ping \n   #apt-get install  tzdata  \n   #echo \"${TIME_ZONE}\" > /etc/timezone && \\\n   #ln -sf /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime\n\n#install ipfs\nADD go-ipfs_v0.4.15_linux-amd64.tar.gz /opt \n#RUN tar -zxvf /opt/go-ipfs* -C /opt && \\\nRUN  cd /opt/go-ipfs && \\\n     ./install.sh  && \\\n     rm -rf /opt/go-ipfs\n\nRUN pip install --no-cache-dir ipfsapi\n\nADD swarm.key /\nADD dbc_task.sh /\nADD upload_training_result.py /\nRUN cd / && \\\n    chmod +x dbc_task.sh\n# Define a mountable data directory\n#VOLUME \\\n#  [\"/data\"]\n\n# Define the working directory\n#WORKDIR \\\n#  /data\nRUN cd /opt && \\\n    wget https://archive.apache.org/dist/spark/spark-2.3.1/spark-2.3.1-bin-without-hadoop.tgz && \\\n    tar -zxvf spark-2.3.1-bin-without-hadoop.tgz && \\\n    mv spark-2.3.1-bin-without-hadoop spark && \\\n    mkdir -p /opt/spark/work && \\\n    chmod 0777 /opt/spark/work && rm spark-2.3.1-bin-without-hadoop.tgz\n\n# Install Sparkling water latest version\nRUN cd /opt && \\\n  wget https://h2o-release.s3.amazonaws.com/sparkling-water/rel-2.3/1/sparkling-water-2.3.1.zip && \\\n  unzip sparkling-water-2.3.1.zip && \\\n  rm sparkling-water-2.3.1.zip\n\n# Setup environment\nENV SPARK_HOME /opt/spark\nENV SPARKLING_WATER_HOME /opt/sparkling-water\n\nEXPOSE 54321\nEXPOSE 54322\n\n#ENTRYPOINT [\"java\", \"-Xmx4g\", \"-jar\", \"/opt/h2o.jar\"]\n# Define default command\n\nCMD \\\n  [\"/bin/bash\"]\n"
}