{
  "startTime": 1674218426579,
  "endTime": 1674218428144,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 172
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 172
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedDockerfile": "FROM nvcr.io/nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n#FROM ubuntu:16.04\n# maintainer details\nMAINTAINER deepbrainchain \"h2o.ai\"\n\nENV HOME=/root\nENV CUDA_HOME=/usr/local/cuda\nENV PATH=/usr/local/cuda/bin:$PATH\nENV CUDADIR=/usr/local/cuda/include/\nENV LD_LIBRARY_PATH=/usr/lib64:/usr/local/lib:$LD_LIBRARY_PATH\n\nENV MINICONDA_VERSION=4.4.10\nENV PILLOW_VERSION=4.2.1\n\n\nRUN \\\r\n  echo 'DPkg::Post-Invoke {\"/bin/rm -f /var/cache/apt/archives/*.deb || true\";};' | tee /etc/apt/apt.conf.d/no-cache && \\\r\n  echo \"deb http://mirror.math.princeton.edu/pub/ubuntu xenial main universe\" >> /etc/apt/sources.list && \\\r\n  apt-get update -q -y && \\\r\n  apt-get dist-upgrade -y && \\\r\n  apt-get clean && \\\r\n  rm -rf /var/cache/apt/* && \\\r\n\r\n# Install Oracle Java 8\r\n  DEBIAN_FRONTEND=noninteractive apt-get install -y wget unzip python-pip python-sklearn python-pandas python-numpy python-matplotlib software-properties-common python-software-properties && \\\r\n  add-apt-repository -y ppa:webupd8team/java && \\\r\n  apt-get update -q && \\\r\n  echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\r\n  echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections && \\\r\n  DEBIAN_FRONTEND=noninteractive apt-get install -y oracle-java8-installer && \\\r\n  apt-get clean\n\nRUN apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Setup gcc etc.\nRUN apt-get install -y --no-install-recommends gcc g++ libgomp1 libc6 libc6-dev libc6-dbg libstdc++6 && rm -rf /var/lib/apt/lists/*;\n\n\n# Git requirements\nRUN apt-get install -y --no-install-recommends git libcurl4-openssl-dev zlib1g-dev asciidoc xmlto wget make cmake autoconf gettext libpcre3 libpcre3-dev pbzip2 libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\n\n# H2O4GPU requirements + util programs\nRUN apt-get install -y --no-install-recommends \\\r\n    libncurses5-dev \\\r\n        bzip2 \\\r\n        axel \\\r\n        openssl libssl-dev \\\r\n        libpng-dev \\\r\n        libfreetype6-dev \\\r\n        libblas-dev  \\\r\n        libboost-all-dev \\\r\n        libopenblas-dev && \\\r\n    wget https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-`arch`.sh && \\\n    bash Miniconda3-${MINICONDA_VERSION}-Linux-`arch`.sh -b -p /opt/h2oai/h2o4gpu/python && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/opt/h2oai/h2o4gpu/python/bin:$PATH\n\n#\n# Builds from source due to too old versions in\n#\nWORKDIR $HOME\n\n# Arrow\nRUN bash -c 'if [ `arch` = \"ppc64le\" ]; then \\\r\n\tgit clone https://github.com/apache/arrow.git && \\\r\n\tcd $HOME/arrow/cpp && \\\r\n\tgit checkout tags/apache-arrow-0.8.0 && \\\r\n  \tpip install numpy cython && \\\r\n\tcmake -DARROW_CXXFLAGS=\"-lutil\" -DARROW_PYTHON=on && make -j && make install && \\\r\n\tcd $HOME/arrow/python && \\\r\n\tARROW_HOME=/usr/local python setup.py install && \\\r\n\tapt-get install -y --no-install-recommends libjpeg-dev;\\\r\n\tfi'\n\n# Pillow\nRUN bash -c 'if [ `arch` = \"ppc64le\" ]; then \\\r\n\twget https://files.pythonhosted.org/packages/55/aa/f7f983fb72710a9daa4b3374b7c160091d3f94f5c09221f9336ade9027f3/Pillow-${PILLOW_VERSION}.tar.gz && \\\r\n\ttar xvf Pillow-${PILLOW_VERSION}.tar.gz && \\\r\n\tcd $HOME/Pillow-${PILLOW_VERSION} && \\\r\n\tsed -i \"s/'ppc64'/'ppc64le'/g\" setup.py && \\\r\n\tpython setup.py install && \\\r\n\tcd $HOME && \\\r\n\trm -rf Pillow-${PILLOW_VERSION}*; \\\r\n\tfi'\n\n#\n# Install Python requirements\n#\nRUN pip install --no-cache-dir numpy setuptools\n\n#COPY src/interface_py/requirements_buildonly.txt requirements_buildonly.txt\nCOPY src/interface_py/requirements_runtime.txt requirements_runtime.txt\nCOPY src/interface_py/requirements_runtime_demos.txt requirements_runtime_demos.txt\n\nRUN pip install --no-cache-dir -r requirements_buildonly.txt\nRUN pip install --no-cache-dir -r requirements_runtime.txt\n#RUN pip install -r requirements_runtime_demos.txt\n\nRUN chmod -R o+rwx /opt/h2oai/h2o4gpu/python\nRUN chmod -R o+rwx /root\n\n#RUN cd /opt && \\\n#    wget https://s3.amazonaws.com/h2o-release/h2o4gpu/releases/stable/ai/h2o/h2o4gpu/0.2-nccl-cuda9/h2o4gpu-0.2.0-cp36-cp36m-linux_x86_64.whl && \\\n#    pip install h2o4gpu-0.2.0-cp36-cp36m-linux_x86_64.whl\n\n#WORKDIR $HOME\n\n\n\nWORKDIR /\n\n\n# Add a canned jupyter notebook demo to the container\nRUN \\\r\n  mkdir -p jupyter/demos\nCOPY examples/py/demos/H2O4GPU_Ridge.ipynb /jupyter/demos/H2O4GPU_Ridge.ipynb\nCOPY examples/py/demos/H2O4GPU_LinearRegression.ipynb /jupyter/demos/H2O4GPU_LinearRegression.ipynb\nCOPY examples/py/demos/H2O4GPU_GBM.ipynb /jupyter/demos/H2O4GPU_GBM.ipynb\nCOPY examples/py/demos/H2O4GPU_GLM.ipynb /jupyter/demos/H2O4GPU_GLM.ipynb\nCOPY examples/py/demos/H2O4GPU_Lasso.ipynb /jupyter/demos/H2O4GPU_Lasso.ipynb\nCOPY examples/py/demos/H2O4GPU_KMeans_Images.ipynb /jupyter/demos/H2O4GPU_KMeans_Images.ipynb\nCOPY examples/py/demos/H2O4GPU_KMeans_Quantization.ipynb /jupyter/demos/H2O4GPU_KMeans_Quantization.ipynb\nCOPY examples/py/demos/Multi-GPU-H2O-GLM-simple.ipynb /jupyter/demos/Multi-GPU-H2O-GLM-simple.ipynb\nCOPY examples/py/demos/H2O4GPU_TruncatedSVD.ipynb /jupyter/demos/H2O4GPU_TruncatedSVD.ipynb\nCOPY examples/py/demos/H2O4GPU_PCA.ipynb /jupyter/demos/H2O4GPU_PCA.ipynb\nCOPY examples/py/demos/H2O4GPU_Daal_LinearRegression.ipynb /jupyter/demos/H2O4GPU_Daal_LinearRegression.ipynb\nCOPY examples/py/demos/figures /jupyter/demos/figures\nRUN \\\r\n  cd /jupyter/demos && \\\r\n  chmod -R a+rwx /jupyter && \\\r\n  mkdir /scikit_learn_data && \\\r\n  chmod -R a+rwx /scikit_learn_data && \\\r\n  mkdir -p /jupyter/scikit_learn_data/covertype && \\\r\n  chmod -R a+rwx /jupyter/scikit_learn_data/covertype && \\\r\n  mkdir -p /jupyter/scikit_learn_data/lfw_home && \\\r\n  chmod -R a+rwx /jupyter/scikit_learn_data/lfw_home && \\\r\n  HOME=/jupyter jupyter notebook --generate-config && \\\r\n  sed -i \"s/#c.NotebookApp.token = '<generated>'/c.NotebookApp.token = 'h2o'/\" /jupyter/.jupyter/jupyter_notebook_config.py && \\\r\n  chmod -R a+rwx /jupyter/.jupyter\n\n# Add shell wrapper\nCOPY scripts/run.sh /run.sh\nRUN \\\r\n  chmod a+rwx run.sh\n\n#install ipfs\nADD go-ipfs_v0.4.15_linux-amd64.tar.gz /opt \n#RUN tar -zxvf /opt/go-ipfs* -C /opt && \\\nRUN  cd /opt/go-ipfs && \\\r\n     ./install.sh  && \\\r\n     rm -rf /opt/go-ipfs\n\nRUN pip install --no-cache-dir ipfsapi\n\nADD swarm.key /\nADD dbc_task.sh /\nADD upload_training_result.py /\nRUN cd / && \\\r\n    chmod +x dbc_task.sh\n\n\nARG h2o4gpu_VERSION\nARG h2o4gpu_COMMIT\nARG DOCKER_VERSION_TAG\nLABEL \\\r\nh2o4gpu_commit=\"$h2o4gpu_COMMIT\" \\\r\ndocker_version_tag=\"$DOCKER_VERSION_TAG\"\n\n#ENTRYPOINT [\"./run.sh\"]\nEXPOSE 8888\nEXPOSE 54321\nEXPOSE 54322\n\nCMD \\\r\n  [\"/bin/bash\"]\n\n"
}