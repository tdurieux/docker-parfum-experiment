{
  "startTime": 1674248877007,
  "endTime": 1674248878112,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nMAINTAINER Jarle Aase <jgaa@jgaa.com>\n\nRUN echo \"root:password\" | chpasswd\n\n# We need to create a valid user on the same uid that jenkins use on the host machine.\n# Else, we run into failing commands because the current user cannot be resolved.\nRUN useradd -u 106 -m -d /home/jenkins -s /bin/bash jenkins\nRUN echo \"jenkins:jenkins\" | chpasswd\n\nRUN yum -y update &&\\\n    yum -y install centos-release-scl &&\\\n    yum -y install git jre-openjdk zlib-devel openssl-devel openssh-server bzip2 which make &&\\\n    yum -y update && \\\n    yum -y install devtoolset-7-gcc* && rm -rf /var/cache/yum\n\n# Install cmake > verssion 3.0\nRUN mkdir -p /opt/cmake && \\\n    curl -f -L -o cmake.sh https://github.com/Kitware/CMake/releases/download/v3.12.4/cmake-3.12.4-Linux-x86_64.sh && \\\n    chmod +x cmake.sh && \\\n    ./cmake.sh --skip-license --prefix=/opt/cmake --exclude-subdir\n\nENV PATH=\"/opt/cmake/bin:${PATH}\"\n\n# Build boost and install to /opt/boost\n# Note: I skip some large boost libraries that is not used in the target-project\nRUN mkdir boost &&\\\n    cd boost && \\\n    curl -f -o boost.tar.bz2 -L https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.bz2 && \\\n    tar -xjf boost.tar.bz2 && \\\n    source scl_source enable devtoolset-7 && \\\n    cd boost_1_* && \\\n    ./bootstrap.sh --prefix=/opt/boost && \\\n    ./b2 install --prefix=/opt/boost --without-python --without-wave --without-graph --without-mpi --without-test -j8 && \\\n    cd && rm -rf boost && rm boost.tar.bz2\n\n# expose the ssh port\nEXPOSE 22\n\n# entrypoint by starting sshd\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n\n# We need \"scl enable devtoolset-7 bash\" or \"source scl_source enable devtoolset-7\" in the build-script\n"
}