{
  "startTime": 1674248637322,
  "endTime": 1674248638046,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu16.04\n\nARG PYTHON_VERSION=3.7\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\nENV LD_LIBRARY_PATH /opt/conda/lib/:$LD_LIBRARY_PATH\nENV PATH /opt/conda/bin:$PATH\n\nCOPY 7fa2af80.pub ./\nRUN apt-key add 7fa2af80.pub\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    libgl1-mesa-glx \\\n    libglib2.0-0 \\\n    libsm6 \\\n    libxext6 \\\n    libxrender-dev \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends nginx net-tools\\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -L -o ~/miniconda.sh https://nwcd-samples.s3.cn-northwest-1.amazonaws.com.cn/software/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p /opt/conda \\\n && rm ~/miniconda.sh\nRUN conda update -n base conda\nRUN conda install -y python=$PYTHON_VERSION\n\nRUN pip install --no-cache-dir flask gevent gunicorn boto3 -i https://opentuna.cn/pypi/web/simple && \\\n        rm -rf /root/.cache\n\nRUN conda install paddlepaddle-gpu==2.0.2 cudatoolkit=10.1 -c paddle\nCOPY aws /root/.aws\nWORKDIR /opt/ml/code\nCOPY dockersource ./\nRUN pip install --no-cache-dir -r requirements.txt -i https://opentuna.cn/pypi/web/simple\n\n\n# Set some environment variables. PYTHONUNBUFFERED keeps Python from buffering our standard\n# output stream, which means that logs can be delivered to the user quickly. PYTHONDONTWRITEBYTECODE\n# keeps Python from writing the .pyc files which are unnecessary in this case. We also update\n# PATH so that the train and serve programs are found when the container is invoked.\n\nENV PYTHONUNBUFFERED=TRUE\nENV PYTHONDONTWRITEBYTECODE=TRUE\nENV PATH=\"/opt/ml/code/:${PATH}\"\nENV USE_GPU=True\nENV CUDA_VISIBLE_DEVICES=0\n\nENTRYPOINT [\"python3\"]"
}