{
  "startTime": 1674249380384,
  "endTime": 1674249382972,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM sensu/sensu-ruby-runtime-2.4.4-alpine3.8:latest as builder\nARG ASSET_GEM\nARG GIT_REF\nARG GIT_REPO\nWORKDIR /assets/build/\nRUN apk add --no-cache git libcurl curl\n\nRUN \\\n  gem install --no-ri --no-doc bundler && \\\n  printf \"source 'https://rubygems.org'\\n\\ngem \\\"%s\\\", :git => \\\"%s\\\" , :ref => \\\"%s\\\"\\n\" ${ASSET_GEM} ${GIT_REPO} ${GIT_REF}| tee Gemfile\n\nRUN bundle install --path=lib/ --binstubs=bin/ --standalone\n\nRUN LIBS=$(find /usr/lib/libcurl* -type f -exec ldd {} 2>/dev/null \\;|  grep \"=>\" | grep -v \"vdso.so.1\" | grep -v \"ldd\" | awk '{print $3}'| sort -u ) && \\\n  for f in $LIBS; do if [ -e $f ]; then echo \"Copying Library: $f\" && cp $f /assets/build/lib/; fi; done\n\nRUN cp /usr/bin/curl /assets/build/bin/\nRUN LIBS=$(ldd /assets/build/bin/curl 2>/dev/null \\;|  grep \"=>\" | grep -v \"vdso.so.1\" | grep -v \"ldd\" | awk '{print $3}'| sort -u ) && \\\n  for f in $LIBS; do if [ -e $f ]; then echo \"Copying Library: $f\" && cp $f /assets/build/lib/; fi; done\n\nRUN tar -czf /assets/${ASSET_GEM}.tar.gz -C /assets/build/ . && rm /assets/${ASSET_GEM}.tar.gz\n\nFROM scratch\nARG ASSET_GEM\nCOPY --from=builder /assets/${ASSET_GEM}.tar.gz /\n"
}