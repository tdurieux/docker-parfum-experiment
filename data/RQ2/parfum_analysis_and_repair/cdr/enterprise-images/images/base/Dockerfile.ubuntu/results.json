{
  "startTime": 1674253219446,
  "endTime": 1674253220195,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nCOPY containerd-pin /etc/apt/preferences.d/\n\n# Install the Docker apt repository\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install --yes ca-certificates && rm -rf /var/lib/apt/lists/*;\nCOPY docker-archive-keyring.gpg /usr/share/keyrings/docker-archive-keyring.gpg\nCOPY docker.list /etc/apt/sources.list.d/docker.list\n\n# Install baseline packages\n# We use an old containerd.io because it contains a version of runc that works\n# with sysbox correctly.\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install --yes \\\n      bash \\\n      build-essential \\\n      ca-certificates \\\n      containerd.io=1.5.11-1 \\\n      curl \\\n      docker-ce \\\n      docker-ce-cli \\\n      docker-compose-plugin \\\n      htop \\\n      locales \\\n      man \\\n      python3 \\\n      python3-pip \\\n      software-properties-common \\\n      sudo \\\n      systemd \\\n      systemd-sysv \\\n      unzip \\\n      vim \\\n      wget && \\\n    # Install latest Git using their official PPA\n    add-apt-repository ppa:git-core/ppa && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install --yes git && rm -rf /var/lib/apt/lists/*;\n\n# Enables Docker starting with systemd\nRUN systemctl enable docker\n\n# Add docker-compose\nRUN curl -f -L \"https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nRUN chmod +x /usr/local/bin/docker-compose\n\n# Add a user `coder` so that you're not developing as the `root` user\nRUN useradd coder \\\n      --create-home \\\n      --shell=/bin/bash \\\n      --groups=docker \\\n      --uid=1000 \\\n      --user-group && \\\n    echo \"coder ALL=(ALL) NOPASSWD:ALL\" >>/etc/sudoers.d/nopasswd\n\nUSER coder\n\n# install Homebrew, must be as a non-root user\nRUN /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\nENV PATH /home/linuxbrew/.linuxbrew/bin:${PATH}\n"
}