{
  "startTime": 1674256208122,
  "endTime": 1674256209021,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 15,
        "columnEnd": 82
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-buster\n\nWORKDIR /usr/src/app\n\n# (workaround) Install cookiecutter and mkdocs to avoid the need to run docker in docker\nRUN cd /tmp && curl -f -O https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tar.xz && \\\n    tar -xvf Python-3.8.2.tar.xz && \\\n    cd Python-3.8.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && \\\n    make -j 4 && \\\n    make altinstall && rm Python-3.8.2.tar.xz\n\nRUN apt update && apt install --no-install-recommends -y mkdocs && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3.8 install mkdocs-techdocs-core\n\nRUN pip3.8 install cookiecutter && \\\n    apt remove -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libsqlite3-dev libreadline-dev libffi-dev libbz2-dev g++ python-pip python-dev && \\\n    rm -rf /var/cache/apt/* /tmp/Python-3.8.2\n\n# Copy repo skeleton first, to avoid unnecessary docker cache invalidation.\n# The skeleton contains the package.json of each package in the monorepo,\n# and along with yarn.lock and the root package.json, that's enough to run yarn install.\nADD yarn.lock package.json skeleton.tar ./\n\nRUN yarn install --frozen-lockfile --production && yarn cache clean;\n\n# This will copy the contents of the dist-workspace when running the build-image command.\n# Do not use this Dockerfile outside of that command, as it will copy in the source code instead.\nCOPY . .\n\nCMD [\"node\", \"packages/backend\", \"--config\", \"app-config.yaml\", \"--config\", \"app-config.development.yaml\"]\n"
}