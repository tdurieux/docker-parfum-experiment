diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/polycube-network/polycube/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/polycube-network/polycube/Dockerfile/repaired.Dockerfile
index 30ad1e6..d15e8dc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/polycube-network/polycube/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/polycube-network/polycube/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,6 @@
-# syntax = tonistiigi/dockerfile:runmount20180618
 ###############################################
 # STEP 1: using an Ubuntu 18.04 image to install the entire Polycube framework with all dependencies.
-# 
+#
 # During this step an ubuntu image is used to compile Polycube with all its dependencies.
 # This dockerfile is reused for all the DEFAULT_MODE (default, pcn-iptables, pcn-k8s) which, thanks to install.sh and pre-requirements.sh scripts,
 # enable/disable Polycube services and install specific tools.
@@ -15,7 +14,7 @@ SUDO="" USER="root" WORKDIR="/tmp/dev" ./scripts/install.sh $MODE && \
 # install pcn-k8s only components
 if [ "$MODE" = "pcn-k8s" ] ; then \
     cd /tmp && mkdir -p tmp && cd tmp && \
-    curl -sS -L https://storage.googleapis.com/kubernetes-release/network-plugins/cni-0799f5732f2a11b329d9e3d51b9c8f2e3759f2ff.tar.gz -o cni.tar.gz && \
+    curl -f -sS -L https://storage.googleapis.com/kubernetes-release/network-plugins/cni-0799f5732f2a11b329d9e3d51b9c8f2e3759f2ff.tar.gz -o cni.tar.gz && \
     tar -xvf cni.tar.gz && \
     cp bin/loopback /cni && \
     cd /tmp/polycube/src/components/k8s/cni/polycube && \
@@ -23,7 +22,7 @@ if [ "$MODE" = "pcn-k8s" ] ; then \
     cd /tmp/polycube/src/components/k8s/cni/conf && \
     GOOS=linux go build -o /cni-conf . && \
     cd /tmp/polycube/src/components/k8s/pcn_k8s/ && \
-    GOOS=linux go build -o /pcn_k8s . ; \
+    GOOS=linux go build -o /pcn_k8s .; rm cni.tar.gz \
 fi
 
 # copying cni scripts (will be removed if not needed)
@@ -31,7 +30,7 @@ ADD src/components/k8s/cni/cni-install.sh src/components/k8s/cni/cni-uninstall.s
 
 ###############################################
 # STEP 2: using an Ubuntu 18.04 image and extracting executables obtained by the image created at STEP 1.
-# 
+#
 # During this final step a new fresh ubuntu image is used and all the previously generated executables/libraries are copied.
 # This way, this final image contains only the result of the compilation and NOT the entire softwares/scripts needed at compile-time.
 # Moreover, depending on the DEFAULT_MODE, some tools that are needed at runtime (like iptables and iproute2 for the DEFAULT_MODE=pcn-k8s) are
@@ -49,7 +48,7 @@ COPY --from=builder /usr/lib/lib*.so /usr/lib/
 # copying libpistache libyang libtins libprometheus .so
 COPY --from=builder /usr/local/lib/lib*.so /usr/local/lib/
 # copying libyang folder containing plugins (needed for yanglint)
-COPY --from=builder /usr/local/lib/libyang /usr/local/lib/libyang 
+COPY --from=builder /usr/local/lib/libyang /usr/local/lib/libyang
 # copying main OS libraries
 COPY --from=builder /usr/lib/x86_64-linux-gnu/libnl*.so /usr/lib/x86_64-linux-gnu/libcrypto*.so\
 	/usr/lib/x86_64-linux-gnu/libelf*.so /usr/lib/x86_64-linux-gnu/libssl*.so \
@@ -64,8 +63,8 @@ COPY --from=builder /opt/cni/bin/polycube /opt/cni/bin/
 RUN mkdir -p /var/log/polycube && touch /var/log/polycube/polycubed.log && \
 # install pcn-k8s only essential tools, else remove useless scripts
 if [ "$MODE" = "pcn-k8s" ] ; then \
-    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -yq iptables iproute2 && \
-    apt-get purge --auto-remove && apt-get clean ; \
+    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq iptables iproute2 && \
+    apt-get purge --auto-remove && apt-get clean; rm -rf /var/lib/apt/lists/*; \
 else \
     rm -rf /opt/cni/bin/polycube /*.sh /pcn_k8s /cni*; \
 fi && ldconfig