{
  "startTime": 1674252065584,
  "endTime": 1674252066482,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lukemathwalker/cargo-chef:latest-rust-1.59.0 as chef\nWORKDIR /app\nRUN apt update && apt install --no-install-recommends lld clang -y && rm -rf /var/lib/apt/lists/*;\n\nFROM chef as planner\nCOPY . .\n# Compute a lock-like file for our project\nRUN cargo chef prepare  --recipe-path recipe.json\n\nFROM chef as builder\nCOPY --from=planner /app/recipe.json recipe.json\n# Build our project dependencies, not our application!\nRUN cargo chef cook --release --recipe-path recipe.json\nCOPY . .\nENV SQLX_OFFLINE true\n# Build our project\nRUN cargo build --release --bin zero2prod\n\nFROM debian:bullseye-slim AS runtime\nWORKDIR /app\nRUN apt-get update -y \\\n    && apt-get install -y --no-install-recommends openssl ca-certificates \\\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\nCOPY --from=builder /app/target/release/zero2prod zero2prod\nCOPY configuration configuration\nENV APP_ENVIRONMENT production\nENTRYPOINT [\"./zero2prod\"]\n"
}