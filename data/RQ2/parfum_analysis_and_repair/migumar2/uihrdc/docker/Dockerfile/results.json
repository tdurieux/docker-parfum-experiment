{
  "startTime": 1674255482261,
  "endTime": 1674255483109,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 81,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 73,
        "columnEnd": 84
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 28,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# UBUNTU IMAGES @ DOCKERHUB https://hub.docker.com/_/ubuntu/\n# WE will use ubuntu xenial 16.04 version.\n\n############################################################################\n\n# Set the base image to Ubuntu\n# --- In our experimental framework we used ubuntu 14.04-64bit\n# https://hub.docker.com/_/ubuntu/\n#\n  ##ubuntu 14.04\nFROM ubuntu:trusty  \n\n\t##ubuntu 16\n#FROM ubuntu:xenial \n\n#FROM ubuntu\n#FROM gcc:4.8\n\n############################################################################\n\n# File Author / Maintainer\nMAINTAINER Miguel A. Martínez-Prieto & Antonio Fariña\n\n########################################################################\n# Installs required software:\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tcmake \\\n\tgcc-multilib \\\n\tg++-multilib \\\n\tlibboost-all-dev \\\n\tp7zip-full \\\n\tscreen \\\n\ttexlive-latex-base \\\n\ttexlive-fonts-recommended \\\n\tghostscript \\\n\topenssh-server && rm -rf /var/lib/apt/lists/*;\n\n\t#we do not install gnuplot with apt because gnuplot4.4.3 is required to obtain\n\t#the exact figures of our \"parent paper\" in Information Systems.\n\t#gnuplot-qt \\\t\n\n\t#texlive-latex-extra\n\t#sudo apt-get install texlive-fonts-recommended\n\n\n########################################################################\n# permits us to connect to SSH/SFTP port #22\n\nRUN mkdir /var/run/sshd\n\nRUN echo 'root:screencast' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin without-password/' /etc/ssh/sshd_config\n\n## SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n\n########################################################################\n##### Creates user 'user' with password 'userR1'\n\t#RUN useradd --create-home --skel /etc/skel -p user1 --shel /bin/bash user\n\nRUN adduser user --gecos \"First Lst, RoomNumber, WorkPhone, HomePhone\" --disabled-password\nRUN adduser user sudo\n\n###password is set below (once uiHRDC repository is copied into /home/user/uihrdc!)\n########################################################################\n\n\n########################################################################\n# COPIES local uiHRDC repository & docker directory.\n\n#RUN cd /home/user\n\n#Copies local uiHRDC repository\nCOPY uiHRDC /home/user/uiHRDC\n\n#Copies local docker directory\nCOPY docker /home/user/docker\n\n# Clone git repository\n\t#RUN cd /home/user  && git clone https://github.com/migumar2/uiHRDC.git\n\n\n########################################################################\n# Installs gnuplot4.4.3 (the version used in the parent paper to generate the figures)\n\tRUN mkdir toInstallGnuplot\n\tRUN cp /home/user/uiHRDC/benchmark/software/gnuplot-4.4.3.tar.gz toInstallGnuplot/gnuplot-4.4.3.tar.gz\n\tRUN cd toInstallGnuplot && tar xzvf gnuplot-4.4.3.tar.gz && cd gnuplot-4.4.3 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && rm gnuplot-4.4.3.tar.gz\n\tRUN rm -rf toInstallGnuplot\n\n########################################################################\n# Installs snappy-1.1.1\n\tRUN mkdir toInstall\n\tRUN cp /home/user/uiHRDC/indexes/NOPOS/EliasFano.OV14/partitioned_elias_fano/snappy-1.1.1.tar.gz toInstall/snappy-1.1.1.tar.gz\n\t\t#COPY snappy-1.1.1.tar.gz toInstall/snappy-1.1.1.tar.gz\n\tRUN cd toInstall && tar xzvf snappy-1.1.1.tar.gz && cd snappy-1.1.1 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install && rm snappy-1.1.1.tar.gz\n\tRUN rm -rf /toInstall\n\n########################################################################\n#Sets user 'user' password 'userR1'\n\nRUN cd /home/user/docker && sh setpassword.sh\n\n########################################################################\n# Grants permissions for user in its home folder  (anyway experiments *MUST* be run as root user!!\n\nRUN chown user:user -R /home/user/\n\n########################################################################\n# configures -screen- manager terminal emulator\n\tRUN cp /home/user/docker/screenrc /root/.screenrc\n\tRUN cp /home/user/docker/screenrc /home/user/.screenrc\n\tRUN chown user:user /home/user/.screenrc\n\n\n\n########################################################################\n# Shows information regarding configuration of the image/container\n## Shows Ubutu release.\n#RUN lsb_release -a  ##works on ubuntu 14, not on 16\n#RUN gcc --version\n#RUN g++ --version\n#RUN cmake --version\n\n\n########################################################################\n# shows final welcome message and helpful information\n\nRUN cat /home/user/docker/final.docker.message.txt\n\n########################################################################\n\n\n"
}