{
  "startTime": 1674248003632,
  "endTime": 1674248004312,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-alpine\n\nENV PYCURL_SSL_LIBRARY=openssl \\\n    PYTHONPATH=. \\\n    DOCKER=True\n\n# compile requirements for some python libraries\nRUN apk --no-cache add curl-dev bash postgresql-dev \\\n    build-base libffi-dev libressl-dev tini && \\\n    python3 -m pip install invoke alembic poetry\n\n# install python reqs\nCOPY [\"pyproject.toml\", \"pyproject.lock\", \"/app/\"]\nWORKDIR /app\n\nRUN export PYCURL_SSL_LIBRARY=openssl && \\\n    poetry config virtualenvs.create false && \\\n    poetry install -vvv --no-dev\n\n\n# build frontend\nCOPY tmeister/static /app/tmeister/static\nRUN apk --no-cache add nodejs npm git && \\\n    cd /app/tmeister/static && \\\n    npm install && \\\n    npm run build && \\\n    apk --no-cache del nodejs git && \\\n    rm -rf node_modules spec src bin && \\\n    cd /app && npm cache clean --force;\n\n\nEXPOSE 8445\nCMD [\"tini\", \"./startup.sh\"]\nCOPY . /app\n"
}