diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hradec/pipevfx/docker/Dockerfile.pkgs b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hradec/pipevfx/docker/Dockerfile.pkgs/repaired.Dockerfile
index cf72bdb..21395ad 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hradec/pipevfx/docker/Dockerfile.pkgs
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hradec/pipevfx/docker/Dockerfile.pkgs/repaired.Dockerfile
@@ -1,4 +1,3 @@
-
 # this pipevfx_centos_pkgs image is the main parent image to build pipeVFX
 # so we don't have to download packages all the time.
 
@@ -25,8 +24,8 @@ ENV _POS_CMD=$POS_CMD
 
 # install gcc, git, wget, zip and scons so we can run sconstruct
 RUN yum groupinstall -y "Development Tools"
-RUN yum -y install python2-scons wget git zip zlib-devel openssl-devel 
-RUN yum -y install source-highlight
+RUN yum -y install python2-scons wget git zip zlib-devel openssl-devel && rm -rf /var/cache/yum
+RUN yum -y install source-highlight && rm -rf /var/cache/yum
 
 #COPY docker/run.sh /run.sh
 COPY pipeline/tools/scripts/pipevfx_docker_init.sh /run.sh
@@ -39,11 +38,11 @@ RUN mkdir -p /atomo/pipeline/build/.download/
 COPY --from=hradec/pipevfx_pkgs:centos7_latest /atomo/pipeline/build/.download  /atomo/pipeline/build/.download/
 
 # install scons
-RUN yum -y install wget git zip
-RUN yum -y install python-setuptools
-RUN curl -s https://bootstrap.pypa.io/pip/2.7/get-pip.py > get-pip.py && python2 ./get-pip.py
+RUN yum -y install wget git zip && rm -rf /var/cache/yum
+RUN yum -y install python-setuptools && rm -rf /var/cache/yum
+RUN curl -f -s https://bootstrap.pypa.io/pip/2.7/get-pip.py > get-pip.py && python2 ./get-pip.py
 RUN python2 -m pip install SCons
-RUN yum -y install libffi-devel
+RUN yum -y install libffi-devel && rm -rf /var/cache/yum
 
 # cleanup download folder
 RUN cd /atomo/pipeline/build && \
@@ -128,7 +127,7 @@ RUN yum -y install \
     libXrandr-devel \
     libXinerama-devel \
     libXi-devel \
-    mesa-libGLU-devel
+    mesa-libGLU-devel && rm -rf /var/cache/yum
 
 
 # RUN ln -s /lib64/libssl.so /lib64/libssl.so.10 && \