{
  "startTime": 1674247930441,
  "endTime": 1674247932450,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 36,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 98
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 37,
        "columnEnd": 64
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 37,
        "columnEnd": 83
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 75,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 112,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 28,
        "columnEnd": 54
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 58,
        "columnEnd": 83
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 127,
        "lineEnd": 131,
        "columnStart": 34,
        "columnEnd": 10
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 131,
        "lineEnd": 134,
        "columnStart": 14,
        "columnEnd": 10
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 189,
        "lineEnd": 189,
        "columnStart": 34,
        "columnEnd": 62
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 191,
        "lineEnd": 191,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 194,
        "lineEnd": 211,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# we can use any centos as base image...\n# but we choose to use the pipvfx_pkgs\n# one since we have it!\n\nARG PACKAGES\nARG BASE_IMAGE\nARG http\nARG https\n\nFROM $BASE_IMAGE\n#FROM centos:7.6.1810\n\n\nENV http_proxy=$http\nENV https_proxy=$https\nENV package_image=$PACKAGES\n\n# yum parallel download\nRUN [ ! -e /etc/yum/pluginconf.d/multithread.conf ] && \\\n    curl -f -O https://raw.githubusercontent.com/mjschultz/yum-multithread/master/multithread.py && \\\n    curl -f -O https://raw.githubusercontent.com/mjschultz/yum-multithread/master/multithread.conf && \\\n    mv ./multithread.py /usr/lib/yum-plugins && \\\n    mv ./multithread.conf /etc/yum/pluginconf.d/multithread.conf || \\\n    echo \"done\"\n\nRUN echo yum update -y && yum install -y csh tcsh xz \\\n    nano libXp libXmu libXpm libXi libtiff libpng12 \\\n    xorg-x11-server-Xorg xorg-x11-server-Xvfb xorg-x11-fonts* \\\n    libXinerama-devel libXext-devel libXrandr-devel libXi-devel \\\n    libXcursor-devel libXxf86vm-devel libXinerama \\\n    mesa-libGL-devel mesa-libGLU  mesa-libGLU-devel SDL \\\n    git gcc gcc-c++ make scons binutils elfutils dbus-devel glibc-devel \\\n    readline-devel dbus-glib-devel cmake yaml-cpp* tinyxml* enca \\\n    ncurses ncurses-devel ncurses-static libcurl-devel \\\n    flex-devel sqlite-devel libdb-devel gdbm-devel \\\n    zip wget vulkan-devel && rm -rf /var/cache/yum\n\nRUN yum install -y mesa-utils tkinter gstreamer-plugins-base.x86_64 gamin freetype2 python2-scons || true && rm -rf /var/cache/yum\n\n# RUN yum groupinstall -y \"X Window System\" \"Fonts\"\nRUN yum groupinstall -y \"Development Tools\" && fc-cache\n\nRUN [ ! -f /etc/fedora-release ] && yum -y install epel-release || true && rm -rf /var/cache/yum\n# remove mirrors from epel or else it will fail if there are no mirrors\n# in the country the build machine is running\n# RUN cat /etc/yum.repos.d/epel.repo \\\n#     | sed 's/.baseurl/baseurl/' \\\n#     | sed 's/metalink/#metalink/' > /tmp/epel.repo && \\\n#     /bin/mv /tmp/epel.repo /etc/yum.repos.d/epel.repo\nRUN [ ! -f /etc/fedora-release ] && yum -y install centos-release-scl devtoolset-6 || true && rm -rf /var/cache/yum\n\nRUN ln -s /lib64/libbz2.so.1 /lib64/libbz2.so.1.0 ; \\\n    ln -s libcrypto.so.1.0.2k /usr/lib64/libcrypto.so.10 ; \\\n    ln -s libcrypto.so.0.9.8e /usr/lib64/libcrypto.so.6 ; \\\n    ln -s libssl.so.1.0.2k /usr/lib64/libssl.so.10 ; \\\n    ln -s libssl.so.0.9.8e /usr/lib64/libssl.so.6 ; \\\n    ln -s /usr/bin/ar /usr/sbin/ar ; \\\n    ln -s /usr/bin/ranlib /usr/sbin/ranlib\n\n#_tkinter           bsddb185           dl\n#imageop            sunaudiodev\n\n# add default to gcc 6.3.1 to /etc/bashrc, so running bash will automatically set it\n# RUN printf \"\\nsource scl_source enable devtoolset-6\\n\" >> /etc/bashrc\n\n#\tInstall OSL dependencies\nRUN yum install -y flex bison && rm -rf /var/cache/yum\n\n# we need this to build python3\nRUN yum -y install libffi-devel tcl-devel tk-devel libXt-devel gcc-objc++ && rm -rf /var/cache/yum\n\n#\tInstall Qt dependencies\nRUN yum install -y fontconfig-devel.x86_64 && rm -rf /var/cache/yum\n# and we need this for qt 5.x\nRUN yum -y install xcb-util-wm-devel libxcb-devel.x86_64 \\\n    xcb-util-image-devel.x86_64 xcb-util-keysyms-devel.x86_64 \\\n    xcb-util-renderutil-devel.x86_64 xcb-util-wm-devel.x86_64 \\\n    xkeyboard-config.noarch && rm -rf /var/cache/yum\n\nRUN yum -y install xcb*devel && rm -rf /var/cache/yum\n\n# opencl\nRUN yum -y install opencl-headers ocl-icd-devel || true && rm -rf /var/cache/yum\n\n# cuda\n# this package won't install from yum for some reason\n# RUN yumPlugin=$(curl https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/ | grep yum-plugin | awk -F\"'\" '{print $4}' | sort  | tail -1) && \\\n#     curl -L https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/$yumPlugin -O && \\\n#     rpm -i $yumPlugin && \\\n#     rm -rf $yumPlugin\n#\n# RUN yum-config-manager --add-repo http://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo && \\\n#     yum clean all && \\\n#     yum -y install nvidia-driver-latest-dkms cuda cuda-drivers\n\n# to get colors in the build log.\nRUN yum -y install source-highlight && rm -rf /var/cache/yum\n\n# add strace\nRUN yum -y install strace && rm -rf /var/cache/yum\n\n# we need this for alembic opengl with maya\nRUN yum -y install libXmu-devel && rm -rf /var/cache/yum\n\n# we need inkscape for gaffer\nRUN yum -y install inkscape wget git zip && rm -rf /var/cache/yum\n\n# we need pulseaudio to run maya\nRUN yum -y install pulseaudio && rm -rf /var/cache/yum\n\n# we need this for pygobject\nRUN yum -y install cairo-devel \\\n    gobject-introspection-devel cairo-gobject-devel && rm -rf /var/cache/yum\n\n# we need this to build pythonldap\nRUN yum -y install openldap-devel && rm -rf /var/cache/yum\n\n# maya needs this to run with audio\nRUN yum -y install audiofile-devel && rm -rf /var/cache/yum\n\n# install python2 scons\nRUN yum -y install python2 && rm -rf /var/cache/yum\nRUN python2 -m ensurepip || yum -y install python2-pip || yum install -y python-pip && rm -rf /var/cache/yum\nRUN python2 -m pip install SCons || /usr/bin/python2 -m pip install SCons || ls -l /usr/bin/pip*\n\n# fedora expecific packages needed when building with fedora\nRUN [ -f /etc/fedora-release ] && yum -y install \\\n    lbzip2 \\\n    rsync \\\n    expat-devel \\\n    sphinx || yum -y install \\\n    rsync \\\n    expat-devel \\\n    sphinx && rm -rf /var/cache/yum\nRUN python2 -m pip install sphinx || true\n\n# to avoid clashing in osl\n# RUN yum -y remove boost\n# RUN yum -y reinstall boost-filesystem\n\n# cleanup\nRUN yum -y install sudo && rm -rf /var/cache/yum\nRUN yum -y install patchelf && rm -rf /var/cache/yum\nRUN yum clean all\nRUN rm -rf /var/cache/yum/*\n\n# copy over the latest packages from the latest pkg TAG image!\n# this makes upload/download a large layer all the time,\n# but prevents this image from being rebuild all the time when we add\n# a new package.\nRUN mkdir -p /atomo/pipeline/build/.download/\nCOPY --from=hradec/pipevfx_pkgs:centos7_latest /atomo/pipeline/build/.download  /atomo/pipeline/build/.download/\n\nRUN yum -y reinstall  boost boost-filesystem inkscape || true\n\n# qt 5.15 now needs these!!\nRUN yum -y install libxkbcommon-devel libxkbcommon-x11-devel || true && rm -rf /var/cache/yum\n\n# we need mesa to build gaffer\nRUN yum -y install mesa-dri-drivers && rm -rf /var/cache/yum\nRUN yum -y install mesa-libGLw && rm -rf /var/cache/yum\n\n\n# # Gaffer Cycles\n# # =============================================================================\n# #\n# # CUDA 11.5.1\n# #\n# RUN\twget -O cuda.rpm https://developer.download.nvidia.com/compute/cuda/11.5.1/local_installers/cuda-repo-rhel7-11-5-local-11.5.1_495.29.05-1.x86_64.rpm --progress=dot:mega \\\n# \t&& rpm -i cuda.rpm && yum install -y cuda && rm cuda.rpm\n# #\n# # ISPC 1.16.1\n# #\n# RUN wget -O ispc.tar.gz https://github.com/ispc/ispc/releases/download/v1.16.1/ispc-v1.16.1-linux.tar.gz -- \\\n# \t&& mkdir /ispc && tar xf ispc.tar.gz -C /ispc --strip-components=1 && mv /ispc/bin/ispc /usr/bin/ispc && rm -rf /ispc\n# #\n# # OptiX 7.4.0\n# #\n# COPY NVIDIA-OptiX-SDK-7.4.0-linux64-x86_64.sh /\n# RUN mkdir /optix && chmod +x NVIDIA-OptiX-SDK-7.4.0-linux64-x86_64.sh && ./NVIDIA-OptiX-SDK-7.4.0-linux64-x86_64.sh --skip-license --prefix=/optix --exclude-subdir\n# #\n# # ROCm/HIP 4.5\n# #\n# RUN echo -e \"[ROCm]\\nname=ROCm\\nbaseurl=https://repo.radeon.com/rocm/yum/4.5\\nenabled=1\\ngpgcheck=0\" >> /etc/yum.repos.d/rocm.repo \\\n# \t&& yum install -y rocm-dev rocm-libs\n# # =============================================================================\n\n\nRUN [ -f /etc/centos-release ] && yum -y install python2-scons || true && rm -rf /var/cache/yum\n\nRUN yum install -y dbus-daemon && rm -rf /var/cache/yum\n\n# maya\nRUN yum install -y libpng15 \\\n    xorg-x11-fonts-ISO8859-1-100dpi \\\n    xorg-x11-fonts-ISO8859-1-75dpi \\\n    liberation-mono-fonts \\\n    liberation-fonts-common \\\n    liberation-sans-fonts \\\n    liberation-serif-fonts \\\n    libXmu libXt libXi libXinerama libxcb tcsh \\\n    audiofile audiofile-devel \\\n    libpng15 \\\n    audiofile audiofile-devel e2fsprogs-libs libpng12 \\\n    x11vnc xrdp mesa-libGLw mesa-libGLU libXp \\\n    libXcursor-devel \\\n    libXrandr-devel \\\n    libXinerama-devel \\\n    libXi-devel \\\n    mesa-libGLU-devel \\\n    libuuid-devel && rm -rf /var/cache/yum\n\nRUN ln -s /lib64/libssl.so /lib64/libssl.so.10 && \\\n    ln -s /lib64/libcrypto.so /lib64/libcrypto.so.10 && \\\n    ln -s /lib64/libtinfo.so.6 /lib64/libtinfo.so.5 && \\\n    ln -s /lib64/libnsl.so.2 /lib64/libnsl.so.1\n\n\nRUN yum clean all\nENV TERM=xterm\nENTRYPOINT \"/run.sh\"\n\n# download packages so the image contain all tarballs.\n# RUN echo \"nameserver 8.8.8.8\" > /etc/resolv.conf && \\\n#     export TERM=xterm && \\\n#     export ftp_proxy=$http_proxy && \\\n#     touch /atomo/.root && \\\n#     mkdir -p /atomo/pipeline/build/ && \\\n#     cd /atomo/pipeline/build && \\\n#     ln -s $(which python2) /bin/python && \\\n#     env && \\\n#     PYTHONPATH=/atomo/pipeline/tools/python \\\n#     scons download -j $(( $(grep MHz /proc/cpuinfo | wc -l) * 2 ))\n"
}