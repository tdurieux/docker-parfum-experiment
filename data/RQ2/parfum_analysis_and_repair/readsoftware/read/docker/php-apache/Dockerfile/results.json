{
  "startTime": 1674252383722,
  "endTime": 1674252385652,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache\n\nRUN apt-get update -y --fix-missing \\\n    && apt-get upgrade -y \\\n    && apt-get install -y --fix-missing --no-install-recommends \\\n    git \\\n    nano \\\n    unzip \\\n    zip \\\n    libpq-dev \\\n    libzip-dev \\\n    zlib1g-dev -y \\\n    libmagick++-dev \\\n    libmagickwand-dev \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    libpng-dev \\\n    libedit-dev && rm -rf /var/lib/apt/lists/*;\n\n# FOR DEVELOPMENT DEBUGGING (REMOVE FOR PRODUCTION)\n# Install php extension like XDebug to debug php files\nRUN pecl install -f xdebug\\\n  && docker-php-ext-enable xdebug\n\n# Install php extension need for READ\nRUN docker-php-ext-configure gd \\\n    --with-jpeg --with-freetype \\\n  && docker-php-ext-install gd \\\n  && docker-php-ext-configure zip \\\n  && docker-php-ext-install zip\n\nRUN docker-php-ext-install opcache \\\n  && docker-php-ext-install pgsql \\\n  && docker-php-ext-install exif\n\n\n# compose will create a shared folder to postgresql tools like pg_dump and psql\n# so they can be used in this container\n# add the postgresql tools directory to the PATH environment variable\nENV PATH $PATH:/usr/lib/postgresql/bin\n\n# Note to document that this container \"read\" is exposed to the host on port 8081\n# this will not actually do the mapping which is done in the ports: sections of the\n# docker-compose.yml\nEXPOSE 80\n\nWORKDIR /usr/local/etc/php\n# create a php.ini file from the development version change to copy php.ini-production => php.ini for production\nRUN cp php.ini-development php.ini\n# Update Php Settings\nRUN sed -E -i -e 's/max_execution_time = 30/max_execution_time = 200/' php.ini \\\n && sed -E -i -e 's/memory_limit = 128M/memory_limit = 512M/' php.ini \\\n && sed -E -i -e 's/post_max_size = 8M/post_max_size = 32000000/' php.ini \\\n && sed -E -i -e 's/upload_max_filesize = 2M/upload_max_filesize = 32000000/' php.ini\n\n# enable xdebug\n\n# FOR DEVELOPMENT DEBUGGING (REMOVE FOR PRODUCTION)\n# precreate log file for xdebug\nRUN echo \" \" >> xdebug.log \\\n&& chown www-data:www-data xdebug.log \\\n&& chmod 774 xdebug.log \\\n# precreate directory for xdebug output\n&& mkdir debugoutput \\\n&& chown www-data:www-data debugoutput \\\n&& chmod 774 debugoutput\n# precreate directory for xdebug profiler\n#&& mkdir profiles \\\n#&& chown www-data:www-data profiles \\\n#&& chmod 774 profiles\\\n# precreate directory for xdebug tracer\n#&& mkdir traces \\\n#&& chown www-data:www-data traces \\\n#&& chmod 774 traces\n\n# FOR DEVELOPMENT DEBUGGING (REMOVE FOR PRODUCTION)\n# create and move xdebug.ini initialization file to start up dir\n# Add Xdebug to PHP configuration\n# See https://xdebug.org/docs/all_settings\nRUN echo \"\" >> xdebug.ini \\\n && echo \"[xdebug]\" >> xdebug.ini \\\n && echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" >> xdebug.ini \\\n && echo \"xdebug.mode = debug\" >> xdebug.ini \\\n && echo \"xdebug.start_with_request = trigger\" >> xdebug.ini \\\n#profile setting\n# && echo \"xdebug.profiler_enable = 0\" >> xdebug.ini \\\n# use url param XDEBUG_PROFILE nothing or secret found in profile_enable_trigger_value\n# && echo \"xdebug.profiler_enable_trigger = 1\" >> xdebug.ini \\\n && echo \"xdebug.profiler_output_name = readxdebug.out.%t.pro\" >> xdebug.ini \\\n && echo \"xdebug.output_dir = /usr/local/etc/php/debugoutput\" >> xdebug.ini \\\n#trace setting\n# && echo \"xdebug.trace_enable_trigger = 1\" >> xdebug.ini \\\n# use url param XDEBUG_TRACE nothing or secret found in trace_enable_trigger_value\n && echo \"xdebug.trace_output_name = readtrace.%c\" >> xdebug.ini \\\n# && echo \"xdebug.trace_output_dir = /usr/local/etc/php/traces\" >> xdebug.ini \\\n#\n# && echo \"xdebug.remote_autostart = 1\" >> xdebug.ini \\\n && echo \"xdebug.client_host = host.docker.internal\" >> xdebug.ini \\\n# && echo \"xdebug.default_enable=0\" >> xdebug.ini \\\n && echo \"xdebug.client_port=9003\" >> xdebug.ini \\\n# && echo \"xdebug.remote_connect_back=0\" >> xdebug.ini \\\n # change line below for your favorite editor\n && echo \"xdebug.idekey=VSCODE\" >> xdebug.ini \\\n && echo \"xdebug.log=/usr/local/etc/php/xdebug.log\" >> xdebug.ini \\\n && mv xdebug.ini /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini \\\n && echo \"ServerName localhost\" >> /etc/apache2/apache2.conf\n\nWORKDIR /var/www/html\n"
}