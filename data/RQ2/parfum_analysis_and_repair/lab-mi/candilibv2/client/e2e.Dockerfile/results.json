{
  "startTime": 1674216128980,
  "endTime": 1674216129681,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 54,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#######################\n# Step 1: Base target #\n#######################\nFROM cypress/browsers:node16.14.0-chrome99-ff97 as base\nARG http_proxy\nARG https_proxy\nARG npm_registry\nARG no_proxy\n\n# Base dir /app\nWORKDIR /app\n\nRUN ln -snf /usr/share/zoneinfo/Europe/Paris /etc/localtime && echo \"Europe/Paris\" > /etc/timezone\n# use proxy & private npm registry\nRUN if [ ! -z \"$http_proxy\" ] ; then \\\n        npm config delete proxy; \\\n        npm config set proxy $http_proxy; \\\n        npm config set https-proxy $https_proxy; \\\n        npm config set no-proxy $no_proxy; \\\n   fi ; \\\n   [ -z \"$npm_registry\" ] || npm config set registry=$npm_registry; \\\n   [ -z \"$npm_registry\" ] || npm config set strict-ssl false ; \\\n   [ -z \"$sass_registry\" ] || npm config set sass-binary-site=$sass_registry;\n\n################################\n# Step 2: \"development\" target #\n################################\nFROM base as development\nARG CYPRESS_DOWNLOAD_MIRROR\nARG APP_VERSION\nENV CI=1\nCOPY src src/\nCOPY tests tests/\nCOPY package.json package-lock.json ./\nCOPY cypress.json cypress.env.json ./\nCOPY e2e-entrypoint.sh /e2e-entrypoint.sh\n# Install app dependencies\nRUN ssl=\"$(npm config get strict-ssl)\" ; [ \"x$ssl\" = \"xfalse\" ] && export NODE_TLS_REJECT_UNAUTHORIZED=0 || true ; \\\n    npm --no-git-tag-version version ${APP_VERSION} ; npm install cypress-file-upload && npm cache clean --force;\nRUN [ -f /e2e-entrypoint.sh ]&& chmod +x /e2e-entrypoint.sh\n\n#CMD [\"npm\",\"run\", \"cypress\"]\nENTRYPOINT [\"/e2e-entrypoint.sh\"]\n"
}