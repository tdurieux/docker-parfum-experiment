{
  "startTime": 1674252627455,
  "endTime": 1674252628724,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 55,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#######################\n# Step 1: Base target #\n#######################\nFROM node:12.13.1-slim as base\nARG http_proxy\nARG https_proxy\nARG npm_registry\nARG no_proxy\n\n# Base dir /app\nWORKDIR /app\n# Expose the listening port of your app\nEXPOSE 8090\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo \"Europe/Paris\" > /etc/timezone ; \\\n# use proxy & private npm registry\n    if [ ! -z \"$http_proxy\" ] ; then \\\n        npm config delete proxy; \\\n        npm config set proxy $http_proxy; \\\n        npm config set https-proxy $https_proxy; \\\n        npm config set no-proxy $no_proxy; \\\n   fi ; \\\n   [ -z \"$npm_registry\" ] || npm config set registry=$npm_registry; \\\n   [ -z \"$npm_registry\" ] || npm config set strict-ssl false\n\n################################\n# Step 2: \"development\" target #\n################################\nFROM base as development\nARG APP_VERSION\nCOPY app.js index.js ./\nCOPY package.json package-lock.json ./\n# Install app dependencies\n# RUN ssl=\"$(npm config get strict-ssl)\" ; [ \"x$ssl\" = \"xfalse\" ] && export NODE_TLS_REJECT_UNAUTHORIZED=0 || true ; \\\n#     npm --no-git-tag-version version ${APP_VERSION} ; npm install\nRUN npm --no-git-tag-version version ${APP_VERSION} ; npm install && npm cache clean --force;\n\nCMD [\"npm\", \"start\"]\n"
}