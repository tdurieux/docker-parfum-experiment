{
  "startTime": 1674251619218,
  "endTime": 1674251619994,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -- build stage --\nFROM elixir:1.11.4-alpine AS build\nENV MIX_ENV=prod \\\n  LANG=C.UTF-8\n\nRUN apk update\nRUN apk add --no-cache make gcc libc-dev nodejs yarn\n\n# hex & rebar\nRUN mix local.hex --force && \\\n    mix local.rebar --force\n\n# Create the application directory.\nRUN mkdir /app\nWORKDIR /app\n\nCOPY config ./config\nCOPY lib ./lib\nCOPY priv ./priv\nCOPY assets ./assets\nCOPY mix.exs .\nCOPY mix.lock .\n\nRUN mix deps.get\nRUN mix deps.compile\nRUN yarn --cwd assets install && yarn cache clean;\nRUN yarn --cwd assets run deploy\nRUN mix phx.digest\nRUN mix release\n\n# -- application stage --\nFROM alpine:3.13\nENV LANG=C.UTF-8\n\nRUN apk add --no-cache ncurses-dev\nRUN mkdir /app\n\nCOPY --from=build /app/_build/prod/rel/open890 /app\n\nWORKDIR /app\nCMD [\"/app/bin/open890\", \"start\"]\n\n"
}