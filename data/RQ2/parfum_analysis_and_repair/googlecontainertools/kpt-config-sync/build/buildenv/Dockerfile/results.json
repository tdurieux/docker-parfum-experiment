{
  "startTime": 1674249064327,
  "endTime": 1674249064887,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 78,
        "columnStart": 5,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 78,
        "columnStart": 5,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# NOTE: When updating this file, you will also need to do the following:\n#\n# 1. Increment the BUILDENV_IMAGE variable in Makefile\n# 2. Run the following locally to test the build then push the image so it's\n#    accessible by CI:\n#    $ make build-buildenv && make build && make push-buildenv\n# 3. Upload your change for review and check the CI results.  Note that Prow\n#    will fail if you have not uploaded your new image.\n#\n\n# TODO: Change the image to be from gcr.io\n# when the go1.17 image is released in it.\n# Note that we shouldn't use the -alpine image here\n# since it is not allowed due to busybox for licensing.\nARG GOLANG_CONTAINER=golang:1.17.7-buster\n\n# Environment to build the helper binaries from.\nFROM ${GOLANG_CONTAINER} AS tools-base\n\n# Set GOPATH since it is not already set.\nENV GOPATH=/go\n\n# Update PATH with go specific locations.\nENV PATH \"/go/bin:/usr/local/go/bin:$PATH\"\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n  bash \\\n  git && rm -rf /var/lib/apt/lists/*;\n\nENV GO111MODULE=on\n# Build static binaries\nENV CGO_ENABLED=0\n\n# Install goimports.\n# This is required by the `make fmt-go` target, even though it isn't used\n# in building the Nomos image. This was previously included in golang:alpine,\n# but not any more so we have to install it ourselves.\nRUN go install golang.org/x/tools/cmd/goimports\n\n# gotopt2 parses command line options\n# v0.1.2\nARG GOTOPT2_REPO=\"github.com/filmil/gotopt2\"\nRUN go install ${GOTOPT2_REPO}/cmd/gotopt2@v0.1.2\n\n# The build environment docker file.\nFROM ${GOLANG_CONTAINER}\n\n# Set GOPATH since it is not already set.\nENV GOPATH=/go\n\n# Update PATH with go specific locations.\nENV PATH \"/go/bin:/usr/local/go/bin:$PATH\"\n\n# Adds support for building dynamically linked libraries.\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n  bash \\\n  gcc \\\n  git \\\n  musl-dev \\\n  python-pip \\\n  upx \\\n  wget && rm -rf /var/lib/apt/lists/*;\n\n# Starting from go 1.10, build and test results are cached, which speeds up\n# following runs.\nENV GOCACHE=/go/cache\n\nCOPY --from=tools-base /go/bin/* /bin/\n\n# To disable an existing ENTRYPOINT, set an empty array. This allows arguments\n# to 'docker run' to exec as normal.\nENTRYPOINT []\n"
}