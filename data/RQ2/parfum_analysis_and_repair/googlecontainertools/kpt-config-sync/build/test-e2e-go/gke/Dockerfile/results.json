{
  "startTime": 1674219603944,
  "endTime": 1674219605068,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2022 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Build intermediate image for gcloud / kubectl\nFROM gcr.io/google.com/cloudsdktool/cloud-sdk:369.0.0-slim as gcloud-install\nRUN apt-get install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;\n\n# Build e2e image\nFROM golang:1.17.7-alpine\n\nWORKDIR /repo\n\n# Since go modules isn't enabled by default.\nENV GO111MODULE=on\n# Build static binaries; otherwise go test complains.\nENV CGO_ENABLED=0\n# Set Kubernetes environment.\nENV KUBERNETES_ENV=GKE\n\nRUN apk add --no-cache bash curl docker gcc git jq make openssh-client python3 diffutils\n\nARG HELM_VERSION=v3.6.3\nARG KUSTOMIZE_VERSION=v4.5.2\nARG HELM_INFLATOR_FUNCTIOPN_VERSION=v0.2.0\n\n# Install the render-helm-chart function.\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on \\\n  go install github.com/GoogleContainerTools/kpt-functions-catalog/functions/go/render-helm-chart@${HELM_INFLATOR_FUNCTIOPN_VERSION}\n\n# Install Helm\nRUN wget https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz -O /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz && \\\n  tar -zxvf /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz -C /tmp && \\\n  mv /tmp/linux-amd64/helm /usr/local/bin/helm && \\\n  rm -rf /tmp/linux-amd64 /tmp/helm-${HELM_VERSION}-linux-amd64.tar.gz\n\n# Install Kustomize\nRUN wget https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz -O /tmp/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && \\\n  tar -zxvf /tmp/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz -C /tmp && \\\n  mv /tmp/kustomize /usr/local/bin/kustomize && \\\n  rm /tmp/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz\n\n# Copy installed gcloud and kubectl into image\nCOPY --from=gcloud-install /usr/lib/google-cloud-sdk /opt/gcloud/google-cloud-sdk\nCOPY --from=gcloud-install /usr/bin/kubectl /opt/gcloud/google-cloud-sdk/bin/kubectl\nENV PATH /opt/gcloud/google-cloud-sdk/bin:$PATH\n\n# Get go-junit-report\nRUN go install github.com/jstemmer/go-junit-report@v1.0.0\n\n# Steps after here can't be cached since they touch the local filesystem.\n\n# Just copy everything in the nomos repository so we have whatever we might need.\nCOPY . .\n\n# Make sure the nomos command is available for tests.\nRUN go install kpt.dev/configsync/cmd/nomos\n\n# We want bats to be in PATH rather than having to alias it.\nCOPY third_party/bats-core/bin/bats /bin\n"
}