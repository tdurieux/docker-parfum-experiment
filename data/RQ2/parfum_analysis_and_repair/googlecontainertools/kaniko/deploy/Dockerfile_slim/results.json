{
  "startTime": 1674217343956,
  "endTime": 1674217344467,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 18,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 18,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google, Inc. All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Builds the static Go image to execute in a Kubernetes job\nFROM golang:1.17\n\n# This arg is passed by docker buildx & contains the target CPU architecture (e.g., amd64, arm64, etc.)\nARG TARGETARCH\n\nWORKDIR /src\nCOPY . .\n\nRUN \\\n    --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg \\\n    make GOARCH=$TARGETARCH\n\n# Generate latest ca-certificates\nFROM debian:bullseye-slim AS certs\nRUN apt update && apt install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nFROM scratch\n\n# Create kaniko directory with world write permission to allow non root run\n# use musl busybox since it's staticly compiled\nRUN --mount=from=busybox:musl,dst=/usr/ [\"busybox\", \"sh\", \"-c\", \"mkdir -p /kaniko && chmod 777 /kaniko\"]\nCOPY --from=0 /src/out/executor /kaniko/executor\nCOPY files/nsswitch.conf /etc/nsswitch.conf\nCOPY --from=certs /etc/ssl/certs/ca-certificates.crt /kaniko/ssl/certs/\nENV HOME /root\nENV USER root\nENV PATH /usr/local/bin:/kaniko\nENV SSL_CERT_DIR=/kaniko/ssl/certs\n\nENTRYPOINT [\"/kaniko/executor\"]\n\n"
}