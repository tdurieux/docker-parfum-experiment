{
  "startTime": 1674255818908,
  "endTime": 1674255820075,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 40,
        "lineEnd": 42,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 45,
        "lineEnd": 51,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 54,
        "lineEnd": 57,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 60,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 9
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://www.foundry.com/products/nuke/requirements\nFROM centos:7 AS install\n\n# Example: https://mirrors.aliyun.com/pypi/simple\nARG PIP_INDEX_URL\nRUN set -ex ; \\\n    yum -y install \\\n        # nuke common requires\n        xorg-x11-server-Xvfb \\\n        xorg-x11-server-utils \\\n        alsa-lib \\\n        mesa-libGLU \\\n        # utils\n        unzip \\\n        gettext \\\n        sudo \\\n        ; rm -rf /var/cache/yum \\\n    curl -f https://bootstrap.pypa.io/pip/2.7/get-pip.py | python; \\\n    pip install -U --no-cache-dir virtualenv ; \\\n    yum -y clean all ; \\\n    rm -rf /var/cache ; \\\n    useradd -rmU -s /bin/bash nuke ; \\\n    echo \"nuke ALL=(ALL) NOPASSWD:ALL\" | (EDITOR='tee -a' visudo) ;\n\nARG NUKE_MAJOR=10\nARG NUKE_MINOR=5\nARG NUKE_PATCH=8\n\nENV NUKE_MAJOR=${NUKE_MAJOR}\nENV NUKE_MINOR=${NUKE_MINOR}\nENV NUKE_PATCH=${NUKE_PATCH}\nENV NUKE_VERSION=${NUKE_MAJOR}.${NUKE_MINOR}v${NUKE_PATCH}\n\nRUN set -ex ; \\\n    if [ \"${NUKE_MAJOR}\" == 13 ]; then \\\n        yum -y install \\\n            libXv \\\n        ; rm -rf /var/cache/yum \\\n    fi; \\\n    if [ \"${NUKE_MAJOR}\" == 12 ]; then \\\n        yum -y install \\\n            libXv \\\n        ; rm -rf /var/cache/yum \\\n    fi; \\\n    if [ \"${NUKE_MAJOR}\" == 11 ]; then \\\n        yum -y install \\\n            libXft \\\n            pulseaudio-libs \\\n            libfontconfig \\\n            libXcomposite \\\n            libXtst \\\n        ; rm -rf /var/cache/yum \\\n    fi; \\\n    if [ \"${NUKE_MAJOR}\" == 10 ]; then \\\n        yum -y install \\\n            libXft \\\n            libfontconfig \\\n        ; rm -rf /var/cache/yum \\\n    fi; \\\n    if [ \"${NUKE_MAJOR}\" == 9 ]; then \\\n        yum -y install \\\n            libXft \\\n            libXv \\\n            libfontconfig \\\n            SDL \\\n            libpng12 \\\n        ; rm -rf /var/cache/yum \\\n    fi; \\\n    yum -y clean all ; \\\n    rm -rf /var/cache ;\n\nWORKDIR /usr/local/Nuke${NUKE_VERSION}\nARG NUKE_DOWNLOAD_URL=https://thefoundry.s3.amazonaws.com/products/nuke/releases/${NUKE_VERSION}/Nuke${NUKE_VERSION}-linux-x86-release-64.tgz\nARG NUKE_FILE_EXCLUDE=\"Documentation plugins/OCIOConfigs/configs/aces_* plugins/caravr plugins/air libtorch* libcudnn* libcublas* libcusparse* libcusolver* libmkl*\"\nRUN set -ex ; \\\n    mkdir -p /tmp/Nuke/ ; \\\n    curl -f -o /tmp/Nuke/Nuke${NUKE_VERSION}.tgz $(echo ${NUKE_DOWNLOAD_URL} | envsubst); \\\n    tar -C /tmp/Nuke/ -xvzf /tmp/Nuke/Nuke${NUKE_VERSION}.tgz ; rm /tmp/Nuke/Nuke${NUKE_VERSION}.tgz \\\n    if [ -e \"/tmp/Nuke/Nuke${NUKE_VERSION}-linux-x86-release-64-installer\" ]; then \\\n        unzip /tmp/Nuke/Nuke${NUKE_VERSION}-linux-x86-release-64-installer ;\\\n    else \\\n        `ls /tmp/Nuke/Nuke*.run` --prefix=.. --accept-foundry-eula ;\\\n    fi &&\\\n    rm -rf /tmp/Nuke ; \\\n    if [ -n \"${NUKE_FILE_EXCLUDE}\" ];then \\\n        rm -rfv ${NUKE_FILE_EXCLUDE} ;\\\n    fi ; \\\n    LD_LIBRARY_PATH=`pwd` ldd Nuke${NUKE_MAJOR}.${NUKE_MINOR} libstudio* | (set +e; grep 'not found'; case $? in 0) exit 1;; 1) exit 0;; *) exit $?;; esac;) ; \\\n    ln -s `pwd`/Nuke${NUKE_MAJOR}.${NUKE_MINOR} /usr/local/bin/Nuke ; \\\n    ln -s `pwd`/Nuke${NUKE_MAJOR}.${NUKE_MINOR} /usr/local/bin/Nuke${NUKE_MAJOR} ; \\\n    ln -s `pwd`/Nuke${NUKE_MAJOR}.${NUKE_MINOR} /usr/local/bin/Nuke${NUKE_MAJOR}.${NUKE_MINOR} ; \\\n    # only allow root to write\n    chmod -R go-w . ; \\\n    if [ -e \"python\" ]; then \\\n        ln -s python py ;\\\n        # fix permission issue for 9.0v9\n        chmod +x python python2 python2.7 ;\\\n    elif [ -e \"python3\" ]; then \\\n        ln -s python3 py ;\\\n    else \\\n        ls ;\\ \n            echo \"python not found\" && exit 1;\\\n    fi;\n\nENV NUKE_PYTHON=/usr/local/Nuke${NUKE_VERSION}/py\n\nWORKDIR /home/nuke\nUSER nuke\n\nFROM install AS test\n\nRUN python --version\nRUN pip --version\nRUN Nuke --version\nRUN virtualenv --version\nRUN ${NUKE_PYTHON} --version\n# Example: 5053@10.0.2.2\nARG foundry_LICENSE\nRUN if [ -n \"${foundry_LICENSE}\" ];then \\\n        ${NUKE_PYTHON} -c 'import nuke; print(nuke.NUKE_VERSION_STRING)' ;\\\n    fi\nRUN sudo echo testing_sudo\n\nFROM install AS release\n\nLABEL author='NateScarlet@Gmail.com'\nCMD [\"Nuke\", \"-t\"]\n"
}