{
  "startTime": 1674252345820,
  "endTime": 1674252346638,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 3,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 6,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FROM_IMAGE\nARG FROM_TAG=latest\nFROM quay.io/continuouspipe/${FROM_IMAGE}:${FROM_TAG}\nARG REQUIRE_HEM=${REQUIRE_HEM:-false}\nARG HEM_PACKAGE=\"\"\nARG NODE_LTS_VERSION=\"6.x\"\n# Install hem and npm\nRUN if [ \"$REQUIRE_HEM\" = \"true\" ]; then \\\n   curl -f -q https://dx6pc3giz7k1r.cloudfront.net/GPG-KEY-inviqa-tools | apt-key add - \\\n   && echo \"deb https://dx6pc3giz7k1r.cloudfront.net/repos/debian jessie main\" | tee /etc/apt/sources.list.d/inviqa-tools.list \\\n   && export HEM_PACKAGE=hem; \\\n fi \\\n && curl -f -sL \"https://deb.nodesource.com/setup_${NODE_LTS_VERSION}\" > /tmp/install-node.sh \\\n && bash /tmp/install-node.sh \\\n && apt-get update -qq -y \\\n && DEBIAN_FRONTEND=noninteractive apt-get -qq -y --no-install-recommends install \\\n    awscli \\\n    \"$HEM_PACKAGE\" \\\n    nodejs \\\n    php-imagick \\\n    redis-tools \\\n    rsyslog \\\n    sudo \\\n\n # Configure Node dependencies \\\n && if [ \"$NODE_LTS_VERSION\" = \"6.x\" ]; then \\\n   npm config set --global loglevel warn \\\n   && npm install --global \\\n      gulp \\\n      marked \\\n      node-gyp \\\n      node-sass@4.14.1 \\\n   \\\n   && npm rebuild node-sass \\\n   && npm cache clean --force; \\\n fi \\\n\n # Clean the image \\\n && apt-get remove -qq -y php7.0-dev pkg-config libmagickwand-dev build-essential \\\n && apt-get auto-remove -qq -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n\n # Set up hem directories \\\n && if [ \"$REQUIRE_HEM\" = \"true\" ]; \\\n     then \\\n      mkdir -p /home/build/.hem/gems/ \\\n   && chown -R build:build /home/build/.hem/ ;\\\n    fi\n\nWORKDIR /app\n\nCOPY ./etc/ /etc/\nCOPY ./usr/ /usr/\nRUN if [ \"$REQUIRE_HEM\" != \"true\" ]; \\\n    then \\\n        rm -f /etc/confd/conf.d/hem* \\\n     && rm -rf /etc/confd/templates/hem ;\\\n    fi\n"
}