{
  "startTime": 1674219104699,
  "endTime": 1674219106321,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 100,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "ARG FROM_TAG=latest\nFROM quay.io/continuouspipe/ubuntu16.04:${FROM_TAG}\n\nARG PHP_FULL_VERSION\nENV PHP_FULL_VERSION=${PHP_FULL_VERSION}\nRUN export PHP_VERSION=${PHP_FULL_VERSION%.[0-9]*} \\\n && apt-get update -qq \\\n && DEBIAN_FRONTEND=noninteractive apt-get -qq -y --no-install-recommends install \\\n    awscli \\\n    jq \\\n    nginx \\\n    postfix \\\n    mysql-client \\\n    postgresql-client \\\n    \\\n    autoconf \\\n    automake \\\n    apache2-dev \\\n    bison \\\n    build-essential \\\n    freetds-dev \\\n    libbz2-dev \\\n    libc-client-dev \\\n    libcurl4-openssl-dev \\\n    libedit-dev \\\n    libgd-dev \\\n    libglib2.0-dev \\\n    libgmp3-dev \\\n    libicu-dev \\\n    libjpeg-dev \\\n    libltdl-dev \\\n    \"$( dpkg --compare-versions \"$PHP_VERSION\" ge 7.2 || echo \"libmcrypt-dev\" )\" \\\n    libmemcached-dev \\\n    libmysqlclient-dev \\\n    libpng-dev \\\n    libpq-dev \\\n    libjpeg-dev \\\n    libsqlite3-dev \\\n    libssl-dev \\\n    libtidy-dev \\\n    libwebp-dev \\\n    libwrap0-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    libzip-dev \\\n    pkg-config \\\n    re2c \\\n    zlib1g-dev \\\n \\\n # Compile PHP \\\n && wget \"https://secure.php.net/distributions/php-${PHP_FULL_VERSION}.tar.bz2\" \\\n && tar -xf \"php-${PHP_FULL_VERSION}.tar.bz2\" \\\n && cd \"php-${PHP_FULL_VERSION}\" \\\n && mkdir build-cli build-fpm \\\n && cd build-cli \\\n && ln -s ../configure \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n   --prefix=/usr \\\n   --sysconfdir=/etc \\\n   --localstatedir=/var \\\n   --with-libedit=shared,/usr \\\n   --enable-cli \\\n   --disable-cgi \\\n   --disable-phpdbg \\\n   --enable-pcntl \\\n   --enable-bcmath \\\n   --with-bz2=/usr \\\n   --with-curl \\\n   --with-gd \\\n   --enable-gd-native-ttf \\\n   --with-freetype-dir=/usr \\\n   --with-jpeg-dir=/usr \\\n   --with-png-dir=/usr \\\n   --with-xpm-dir=/usr/X11R6 \\\n   --with-webp-dir=/usr \\\n   --enable-intl \\\n   --enable-mbstring \\\n   \"$( dpkg --compare-versions \"$PHP_VERSION\" ge 7.2 || echo \"--with-mcrypt\" )\" \\\n   --with-mhash \\\n\n\n\n   --with-mysql-sock=/var/run/mysqld/mysqld.sock \\\n   --with-openssl \\\n   --with-pdo-mysql \\\n   --with-pdo-pgsql \\\n   --with-pdo-sqlite \\\n   --enable-soap \\\n   --with-sqlite3 \\\n   --with-tidy \\\n   --with-xsl \\\n   --enable-zip \\\n   --with-zlib \\\n   \"--with-config-file-path=/etc/php/${PHP_VERSION}/cli\" \\\n   \"--with-config-file-scan-dir=/etc/php/${PHP_VERSION}/cli/conf.d\" \\\n && make -j2 \\\n && make install \\\n && cd .. \\\n && cd build-fpm \\\n && ln -s ../configure \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n   --prefix=/usr \\\n   \"--sysconfdir=/etc/php/${PHP_VERSION}/fpm\" \\\n   --localstatedir=/var \\\n   --enable-fpm \\\n   --disable-cgi \\\n   --disable-phpdbg \\\n   --enable-bcmath \\\n   --with-bz2=/usr \\\n   --with-curl \\\n   --with-gd \\\n   --enable-gd-native-ttf \\\n   --with-freetype-dir=/usr \\\n   --with-jpeg-dir=/usr \\\n   --with-png-dir=/usr \\\n   --with-xpm-dir=/usr/X11R6 \\\n   --with-webp-dir=/usr \\\n   --enable-intl \\\n   --enable-mbstring \\\n   \"$( dpkg --compare-versions \"$PHP_VERSION\" ge 7.2 || echo \"--with-mcrypt\" )\" \\\n   --with-mhash \\\n\n\n\n   --with-mysql-sock=/var/run/mysqld/mysqld.sock \\\n   --with-openssl \\\n   --with-pdo-mysql \\\n   --with-pdo-pgsql \\\n   --with-pdo-sqlite \\\n   --enable-soap \\\n   --with-sqlite3 \\\n   --with-tidy \\\n   --with-xsl \\\n   --enable-zip \\\n   --with-zlib \\\n   --with-libevent-dir=/usr \\\n   --with-fpm-user=www-data --with-fpm-group=www-data \\\n   \"--with-config-file-path=/etc/php/${PHP_VERSION}/fpm\" \\\n   \"--with-config-file-scan-dir=/etc/php/${PHP_VERSION}/fpm/conf.d\" \\\n && make -j2 \\\n && make install-fpm \\\n && cd ../.. \\\n && rm -rf php-${PHP_FULL_VERSION} php-${PHP_FULL_VERSION}.tar.bz2 \\\n\n # update php locations \\\n && mv /usr/sbin/php-fpm \"/usr/sbin/php-fpm${PHP_VERSION}\" \\\n\n # set up configuration folders \\\n && mkdir -p \"/etc/php/${PHP_VERSION}/cli/conf.d\" \"/etc/php/${PHP_VERSION}/fpm/conf.d\" \\\n && mkdir -p \"/etc/php/${PHP_VERSION}/fpm/pool.d\" \\\n\n # build pecl modules \\\n && if bash -c '[[ \"${PHP_FULL_VERSION}\" =~ ^5\\. ]]'; then \\\n   pecl install memcached-2.2.0; \\\n else \\\n   pecl install memcached; \\\n fi \\\n && echo -e '; priority=25\\nextension=memcached.so' | tee /etc/php/${PHP_VERSION}/fpm/conf.d/25-memcached.ini > /etc/php/${PHP_VERSION}/cli/conf.d/25-memcached.ini \\\n\n # Clean the image \\\n && apt-get auto-remove -qq -y \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n\n # Install composer for PHP dependencies \\\n && wget https://getcomposer.org/installer -O /tmp/composer-setup.php -q \\\n && [ \"$(wget https://composer.github.io/installer.sig -O - -q)\" = \"$(sha384sum /tmp/composer-setup.php | awk '{ print $1 }')\" ] \\\n && php /tmp/composer-setup.php --install-dir='/usr/local/bin/' --filename='composer' --quiet \\\n && rm /tmp/composer-setup.php\n\nUSER build\n\nRUN composer global require \"hirak/prestissimo\" --no-interaction --no-ansi --quiet --no-progress --prefer-dist \\\n && composer clear-cache --no-ansi --quiet \\\n && chmod -R go-w ~/.composer/vendor\n\nUSER root\n\nCOPY ./shared/ ./nginx/ /\n\nRUN export PHP_VERSION=${PHP_FULL_VERSION%.[0-9]*} \\\n && find /etc/confd/conf.d/ -name \"*.toml\" -type f -exec sed -i'' \"s/\\$PHP_VERSION/$PHP_VERSION/\" {} \\;\n"
}