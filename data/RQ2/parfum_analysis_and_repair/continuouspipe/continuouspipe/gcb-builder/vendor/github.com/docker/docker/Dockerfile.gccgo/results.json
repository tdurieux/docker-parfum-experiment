{
  "startTime": 1674250188153,
  "endTime": 1674250188809,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 11,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file describes the standard way to build Docker, using docker\n#\n# Usage:\n#\n# # Assemble the full dev environment. This is slow the first time.\n# docker build -t docker -f Dockerfile.gccgo .\n#\n\nFROM gcc:6.1\n\n# Packaged dependencies\nRUN apt-get update && apt-get install -y \\\n\tapparmor \\\n\taufs-tools \\\n\tbtrfs-tools \\\n\tbuild-essential \\\n\tcurl \\\n\tgit \\\n\tiptables \\\n\tjq \\\n\tnet-tools \\\n\tlibapparmor-dev \\\n\tlibcap-dev \\\n\tlibsqlite3-dev \\\n\tmercurial \\\n\tnet-tools \\\n\tparallel \\\n\tpython-dev \\\n\tpython-mock \\\n\tpython-pip \\\n\tpython-websocket \\\n\t--no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# Get lvm2 source for compiling statically\nRUN git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2\n# see https://git.fedorahosted.org/cgit/lvm2.git/refs/tags for release tags\n\n# Compile and install lvm2\nRUN cd /usr/local/lvm2 \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static_link \\\n\t&& make device-mapper \\\n\t&& make install_device-mapper\n# see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL\n\n# install seccomp: the version shipped in jessie is too old\nENV SECCOMP_VERSION v2.3.1\nRUN set -x \\\n    && export SECCOMP_PATH=$(mktemp -d) \\\n    && git clone https://github.com/seccomp/libseccomp.git \"$SECCOMP_PATH\" \\\n    && ( cd \"$SECCOMP_PATH\" \\\n        && git checkout \"$SECCOMP_VERSION\" \\\n        && ./autogen.sh \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n        && make \\\n        && make install) \\\n\n    && rm -rf \"$SECCOMP_PATH\"\n\nENV GOPATH /go:/go/src/github.com/docker/docker/vendor\n\n# Get the \"docker-py\" source so we can run their integration tests\nENV DOCKER_PY_COMMIT 7befe694bd21e3c54bb1d7825270ea4bd6864c13\nRUN git clone https://github.com/docker/docker-py.git /docker-py \\\n\t&& cd /docker-py \\\n\t&& git checkout -q $DOCKER_PY_COMMIT\n\n# Add an unprivileged user to be used for tests which need it\nRUN groupadd -r docker\nRUN useradd --create-home --gid docker unprivilegeduser\n\nVOLUME /var/lib/docker\nWORKDIR /go/src/github.com/docker/docker\nENV DOCKER_BUILDTAGS apparmor seccomp selinux\n\n# Install runc\nENV RUNC_COMMIT 50a19c6ff828c58e5dab13830bd3dacde268afe5\nRUN set -x \\\n\t&& export GOPATH=\"$(mktemp -d)\" \\\n    && git clone https://github.com/docker/runc.git \"$GOPATH/src/github.com/opencontainers/runc\" \\\n\t&& cd \"$GOPATH/src/github.com/opencontainers/runc\" \\\n\t&& git checkout -q \"$RUNC_COMMIT\" \\\n\t&& make static BUILDTAGS=\"seccomp apparmor selinux\" \\\n\t&& cp runc /usr/local/bin/docker-runc \\\n\t&& rm -rf \"$GOPATH\"\n\n# Install containerd\nENV CONTAINERD_COMMIT 2a5e70cbf65457815ee76b7e5dd2a01292d9eca8\nRUN set -x \\\n\t&& export GOPATH=\"$(mktemp -d)\" \\\n\t&& git clone https://github.com/docker/containerd.git \"$GOPATH/src/github.com/docker/containerd\" \\\n\t&& cd \"$GOPATH/src/github.com/docker/containerd\" \\\n\t&& git checkout -q \"$CONTAINERD_COMMIT\" \\\n\t&& make static \\\n\t&& cp bin/containerd /usr/local/bin/docker-containerd \\\n\t&& cp bin/containerd-shim /usr/local/bin/docker-containerd-shim \\\n\t&& cp bin/ctr /usr/local/bin/docker-containerd-ctr \\\n\t&& rm -rf \"$GOPATH\"\n\n# Wrap all commands in the \"docker-in-docker\" script to allow nested containers\nENTRYPOINT [\"hack/dind\"]\n\n# Upload docker source\nCOPY . /go/src/github.com/docker/docker\n"
}