{
  "startTime": 1674254121541,
  "endTime": 1674254122467,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 5,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3-jdk-11 as builder\n\nRUN rm /dev/random && ln -s /dev/urandom /dev/random\n\nWORKDIR /tmp/opentosca/container\nCOPY . /tmp/opentosca/container\n\nRUN mvn package -DskipTests=true -Dmaven.javadoc.skip=true -B \\\n    && mkdir /tmp/build \\\n    && unzip /tmp/opentosca/container/org.opentosca.container.war/target/OpenTOSCA-container.war -d /tmp/build/container\n\nFROM tomcat:9.0-jdk11\nLABEL maintainer = \"Benjamin Weder <weder@iaas.uni-stuttgart.de>, Lukas Harzenetter <lharzenetter@gmx.de>, Michael Wurster <miwurster@gmail.com>\"\n\nARG DOCKERIZE_VERSION=v0.6.1\n\nENV CONTAINER_HOSTNAME localhost\nENV CONTAINER_PORT 1337\n\nENV CONTAINER_REPOSITORY_HOSTNAME localhost\nENV CONTAINER_REPOSITORY_PORT 8091\nENV CONTAINER_REPOSITORY_CONTEXT winery\n\nENV CONTAINER_BUS_MANAGEMENT_MOCK false\nENV CONTAINER_DEPLOYMENT_TESTS false\n\nENV ENGINE_IA_HOSTNAME localhost\nENV ENGINE_IA_PORT 8090\nENV ENGINE_IA_USER admin\nENV ENGINE_IA_PASSWORD admin\nENV ENGINE_IA_JAVA17_HOSTNAME localhost\nENV ENGINE_IA_JAVA17_PORT 8093\nENV ENGINE_IA_JAVA17_USER admin\nENV ENGINE_IA_JAVA17_PASSWORD admin\nENV ENGINE_IA_KEEP_FILES true\n\nENV ENGINE_PLAN_BPEL ODE\nENV ENGINE_PLAN_BPEL_USER \"\"\nENV ENGINE_PLAN_BPEL_PASSWORD \"\"\nENV ENGINE_PLAN_BPEL_HOSTNAME localhost\nENV ENGINE_PLAN_BPEL_PORT 9763\nENV ENGINE_PLAN_BPEL_CONTEXT ode\nENV ENGINE_PLAN_BPEL_SERVICES_PATH processes\n\nENV ENGINE_PLAN_BPMN Camunda\nENV ENGINE_PLAN_BPMN_USER admin\nENV ENGINE_PLAN_BPMN_PASSWORD admin\nENV ENGINE_PLAN_BPMN_HOSTNAME localhost\nENV ENGINE_PLAN_BPMN_PORT 8092\nENV ENGINE_PLAN_BPMN_CONTEXT engine-rest\n\nENV MQTT_BROKER_PORT 1883\nENV MQTT_BROKER_USER admin\nENV MQTT_BROKER_PASSWORD admin\n\nENV COLLABORATION_MODE false\nENV COLLABORATION_HOSTNAMES \"\"\nENV COLLABORATION_PORTS \"\"\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y wget \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN rm /dev/random && ln -s /dev/urandom /dev/random \\\n    && wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nRUN rm -rf ${CATALINA_HOME}/webapps/*\nCOPY --from=builder /tmp/build/container ${CATALINA_HOME}/webapps/ROOT\n\nCOPY .docker/application.properties.tpl /tmp/opentosca/container/application.properties.tpl\nCOPY .docker/server.xml.tpl /tmp/opentosca/container/server.xml.tpl\n\nEXPOSE ${CONTAINER_PORT}\n\nCMD dockerize -template /tmp/opentosca/container/application.properties.tpl:${CATALINA_HOME}/webapps/ROOT/WEB-INF/classes/application.properties \\\n    -template /tmp/opentosca/container/server.xml.tpl:${CATALINA_HOME}/conf/server.xml \\\n    && export spring_config_location=${CATALINA_HOME}/webapps/ROOT/WEB-INF/classes/application.properties \\\n    && ${CATALINA_HOME}/bin/catalina.sh run\n"
}