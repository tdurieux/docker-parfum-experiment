{
  "startTime": 1674251198760,
  "endTime": 1674251199469,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 28,
        "columnEnd": 140
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.7\nMAINTAINER tomwillfixit\n\nRUN apk add --update \\\n    git \\\n    tini \\\n    openssh-client \\\n    curl \\\n    fontconfig \\\n    openjdk8 \\\n    zip \\\n    bash \\ \n    ttf-dejavu \\\n && rm /var/cache/apk/*\n\n#Add plugin cache to reduce rebuild times\nADD plugin_cache /tmp/plugin_cache\n\n# Set Jenkins Environment Variables\nENV JENKINS_HOME /var/jenkins_home\nENV JENKINS_SLAVE_AGENT_PORT 50000\n\nARG JENKINS_VERSION\nENV JENKINS_VERSION ${JENKINS_VERSION}\n\nENV JENKINS_UC https://updates.jenkins-ci.org\nENV COPY_REFERENCE_FILE_LOG $JENKINS_HOME/copy_reference_file.log\n\nARG JAVA_OPTS\nENV JAVA_OPTS ${JAVA_OPTS:--Xmx2048m -Djenkins.install.runSetupWizard=false}\nENV JENKINS_OPTS=\"--handlerCountMax=300 --logfile=/var/log/jenkins/jenkins.log  --webroot=/var/cache/jenkins/war\"\n\nRUN echo \"JENKINS_VERSION=$JENKINS_VERSION\" ; echo \"JAVA_OPTS=$JAVA_OPTS\"\n\nARG user=jenkins\nARG group=jenkins\nARG uid=1000\nARG gid=1000\n\n# Jenkins is run with user `jenkins`, uid = 1000\n# If you bind mount a volume from the host or a data container,\n# ensure you use the same uid\nRUN addgroup -g ${gid} ${group} \\\n    && adduser -h \"$JENKINS_HOME\" -u ${uid} -G ${group} -s /bin/bash -D ${user}\n\nRUN mkdir -p /usr/share/jenkins/ref/init.groovy.d\n\n# Install Jenkins\nRUN echo $JENKINS_VERSION ; curl -fL https://mirrors.jenkins-ci.org/war-stable/$JENKINS_VERSION/jenkins.war -o /usr/share/jenkins/jenkins.war\n\n# Prep Jenkins Directories\nRUN mkdir /var/log/jenkins\nRUN mkdir /var/cache/jenkins\nRUN chown -R jenkins:jenkins /var/log/jenkins\nRUN chown -R jenkins:jenkins /var/cache/jenkins\n\n# Install Plugins\nCOPY plugins.sh /usr/local/bin/plugins.sh\nCOPY plugins.list /usr/share/jenkins/plugins.list\nRUN chmod +x  /usr/local/bin/plugins.sh\nRUN /usr/local/bin/plugins.sh /usr/share/jenkins/plugins.list\n\n# Add groovy scripts to config master on start\n# Groovy scripts will be copied to /var/jenkins_home/init.groovy.d at initialization\n\nADD configuration /usr/share/jenkins/ref/init.groovy.d\n\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\n\n# jenkins.sh will start the jenkins master\nRUN chmod +x /usr/local/bin/jenkins.sh\n\n# All files are in place. Ensure ownership is correctly set to jenkins user\nRUN chown -R jenkins:jenkins \"$JENKINS_HOME\" /usr/share/jenkins\n\n# Expose Ports for web, websocket and slave agents\nEXPOSE 8080\nEXPOSE 8081\nEXPOSE 50000\n\n# New to docker 1.12\nHEALTHCHECK --interval=5s --timeout=3s --retries=3 \\\n      CMD curl http://localhost:8080 || exit 1\n\n# Remove plugin cache\nRUN rm -rf /tmp/plugin_cache\n\n# Switch to the jenkins user\nUSER jenkins\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\n\n"
}