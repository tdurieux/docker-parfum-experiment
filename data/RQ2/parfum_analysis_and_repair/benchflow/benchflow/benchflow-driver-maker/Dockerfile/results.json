{
  "startTime": 1674256280216,
  "endTime": 1674256281569,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 60,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 156
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 151
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM benchflow/base-images:dns-envconsul-java8_dev\n\nMAINTAINER Vincenzo FERME <info@vincenzoferme.it>\n\nENV JAVA_HOME /usr/lib/jvm/java8\n\nENV FABAN_DRIVERS_MAKER_VERSION v-dev\nENV RELEASE_VERSION v-dev\nENV FABAN_VERSION dev\nENV FABAN_ROOT /app/\nENV FABAN_HOME ${FABAN_ROOT}faban\n\nENV CLIENT_VERSION v-dev\nENV SUT_LIBRARIES_VERSION v-dev\nENV SUT_PLUGINS_VERSION v-dev\n\nENV GENERATION_RESOURCES_ROOT /app/drivers\nENV LIBRARIES_ROOT ${GENERATION_RESOURCES_ROOT}/libraries\nENV PLUGINS_ROOT ${GENERATION_RESOURCES_ROOT}/plugins\nENV TEMPLATES_ROOT ${GENERATION_RESOURCES_ROOT}/templates\nENV BENCHFLOW_SERVICES_ROOT /app/benchflow-services\nENV BENCHFLOW_COLLECTORS_ROOT ${BENCHFLOW_SERVICES_ROOT}/collectors\nENV BENCHFLOW_MONITORS_ROOT ${BENCHFLOW_SERVICES_ROOT}/monitors\n\n# Get benchflow-drivers-maker\nRUN wget -q --no-check-certificate -O /app/benchflow-drivers-maker.jar https://github.com/benchflow/drivers-maker/releases/download/$FABAN_DRIVERS_MAKER_VERSION/benchflow-drivers-maker.jar\n\nCOPY configuration.yml /app/\n\n# copy driver skeleton\nCOPY ./application/src/main/resources/app/drivers/templates /app/drivers/templates/\n\n# copy cloud.benchflow.driversmaker.generation package classes\nCOPY ./application/src/main/java/cloud/benchflow/driversmaker/generation /app/application/src/main/java/cloud/benchflow/driversmaker/generation/\n\n# Get benchflow-drivers-maker dependencies\nRUN apk --update add wget tar && \\\n\twget -q --no-check-certificate -O /tmp/faban.tar.gz https://github.com/benchflow/faban/releases/download/${RELEASE_VERSION}/faban-kit-${FABAN_VERSION}.tar.gz && \\\n\tmkdir -p ${FABAN_ROOT}/ && \\\n\ttar -xzvf /tmp/faban.tar.gz -C ${FABAN_ROOT}/ && \\\n\t# Unpack faban master\n\tmkdir -p ${FABAN_HOME}/master/webapps/faban && \\\n\tcd ${FABAN_HOME}/master/webapps/faban && \\\n\tJAVA=`readlink -f $(which java) | sed 's|/bin/java$||'` && \\\n\t# Unjar faban.war\n\t$JAVA/bin/jar xvf ../faban.war && \\\n\t# Remove unused Faban assets\n\trm -f ${FABAN_HOME}/*.* && \\\n\trm -rf ${FABAN_HOME}/benchmarks ${FABAN_HOME}/bin ${FABAN_HOME}/config ${FABAN_HOME}/legal \\\n\t       ${FABAN_HOME}/logs ${FABAN_HOME}/output ${FABAN_HOME}/resources ${FABAN_HOME}/samples ${FABAN_HOME}/services && \\\n\tfind ${FABAN_HOME}/master/ -not -path \"/app/faban/master/\" -not -path \"${FABAN_HOME}/master/webapps\" -not -path \"${FABAN_HOME}/master/webapps/faban\" -not -path \"${FABAN_HOME}/master/webapps/faban/WEB-INF\"  -not -path \"${FABAN_HOME}/master/webapps/faban/WEB-INF/classes*\" | xargs rm -rf && \\\n    # Get sut-libraries\n    mkdir -p ${LIBRARIES_ROOT} && \\\n    wget -q --no-check-certificate -O - https://github.com/benchflow/sut-libraries/archive/$SUT_LIBRARIES_VERSION.tar.gz \\\n    | tar xz --strip-components=1 -C ${LIBRARIES_ROOT} sut-libraries-$SUT_LIBRARIES_VERSION && \\\n    # Get sut-plugins\n    mkdir -p ${PLUGINS_ROOT} && \\\n    wget -q --no-check-certificate -O - https://github.com/benchflow/sut-plugins/archive/$SUT_PLUGINS_VERSION.tar.gz \\\n    | tar xz --strip-components=1 -C ${PLUGINS_ROOT} sut-plugins-$SUT_PLUGINS_VERSION && \\\n    # Download monitors library into driver skeleton\n    wget -q --no-check-certificate -O ${TEMPLATES_ROOT}/skeleton/benchmark/lib/benchflow-monitors-driver-library.jar \\\n    https://github.com/simonedavico/monitors/releases/download/${RELEASE_VERSION}/benchflow-monitors-driver-library.jar && \\\n    cp ${TEMPLATES_ROOT}/skeleton/benchmark/lib/benchflow-monitors-driver-library.jar ${TEMPLATES_ROOT}/skeleton/benchmark/build/lib/ && \\\n    # Download monitors release, extract deployment descriptors, move them to the right place, and delete the rest\n    mkdir -p /tmp/monitors-deployment-descriptors && \\\n    mkdir -p ${BENCHFLOW_MONITORS_ROOT} && \\\n    wget -q --no-check-certificate -O /tmp/monitors-deployment-descriptors/v-dev.tar.gz https://github.com/benchflow/monitors/archive/v-dev.tar.gz && \\\n    tar -xzf /tmp/monitors-deployment-descriptors/v-dev.tar.gz -C /tmp/monitors-deployment-descriptors/ --wildcards --no-anchored '*.monitor.yml' && \\\n    find /tmp/monitors-deployment-descriptors/ -name '*.monitor.yml' -type f -exec mv -i {} ${BENCHFLOW_MONITORS_ROOT} \\; && \\\n    rm -rf /tmp/monitors-deployment-descriptors/ && \\\n    # Download collectors release, extract deployment descriptors, move them to the right place, and delete the rest\n    mkdir -p /tmp/collectors-deployment-descriptors && \\\n    mkdir -p ${BENCHFLOW_COLLECTORS_ROOT} && \\\n    wget -q --no-check-certificate -O /tmp/collectors-deployment-descriptors/v-dev.tar.gz https://github.com/benchflow/collectors/archive/v-dev.tar.gz && \\\n    tar -xzf /tmp/collectors-deployment-descriptors/v-dev.tar.gz -C /tmp/collectors-deployment-descriptors/ --wildcards --no-anchored '*.collector.yml' && \\\n    find /tmp/collectors-deployment-descriptors/ -name '*.collector.yml' -type f -exec mv -i {} ${BENCHFLOW_COLLECTORS_ROOT} \\; && \\\n    rm -rf /tmp/collectors-deployment-descriptors/ && \\\n       # Cleanup\n\tapk del --purge tar && \\\n    rm -rf /var/cache/apk/* /tmp/* /var/tmp/* *.gz && rm /tmp/faban.tar.gz\n\n\n# Install Ant (Source: https://hub.docker.com/r/webratio/ant/~/dockerfile/)\nENV ANT_VERSION 1.9.4\nRUN mkdir -p /opt/ant && \\\n    wget -q --no-check-certificate -O /apache-ant-${ANT_VERSION}-bin.tar.gz https://archive.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz && \\\n    tar -xzf /apache-ant-${ANT_VERSION}-bin.tar.gz && \\\n    mv /apache-ant-${ANT_VERSION} /opt/ant && \\\n    rm /apache-ant-${ANT_VERSION}-bin.tar.gz && \\\n    apk del --purge wget\nENV ANT_HOME /opt/ant\nENV PATH ${PATH}:/opt/ant/bin\n\n\nCOPY ./services/envcp/config.tpl /app/config.tpl\nCOPY ./services/envcp/add_servers_info.sh /app/add_servers_info.sh\nRUN chmod +x /app/add_servers_info.sh\n\nCOPY ./services/300-drivers-maker.conf /apps/chaperone.d/300-drivers-maker.conf\n\nEXPOSE 8080\n"
}