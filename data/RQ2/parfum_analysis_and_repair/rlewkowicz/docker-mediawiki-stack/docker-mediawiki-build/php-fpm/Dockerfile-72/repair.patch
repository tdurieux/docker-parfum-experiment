diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rlewkowicz/docker-mediawiki-stack/docker-mediawiki-build/php-fpm/Dockerfile-72 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rlewkowicz/docker-mediawiki-stack/docker-mediawiki-build/php-fpm/Dockerfile-72/repaired.Dockerfile
index c254713..edbd132 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rlewkowicz/docker-mediawiki-stack/docker-mediawiki-build/php-fpm/Dockerfile-72
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rlewkowicz/docker-mediawiki-stack/docker-mediawiki-build/php-fpm/Dockerfile-72/repaired.Dockerfile
@@ -44,11 +44,10 @@ MAINTAINER Mahmoud Zalt <mahmoud@zalt.me>
 
 ARG INSTALL_SOAP=false
 RUN if [ ${INSTALL_SOAP} = true ]; then \
-    # Install the soap extension
     apt-get update -yqq && \
-    apt-get -y install libxml2-dev php-soap && \
+    apt-get -y --no-install-recommends install libxml2-dev php-soap && \
     docker-php-ext-install soap \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # pgsql
@@ -67,13 +66,12 @@ RUN if [ ${INSTALL_PGSQL} = true ]; then \
 
 ARG INSTALL_PG_CLIENT=false
 RUN if [ ${INSTALL_PG_CLIENT} = true ]; then \
-    # Create folders if not exists (https://github.com/tianon/docker-brew-debian/issues/65)
     mkdir -p /usr/share/man/man1 && \
     mkdir -p /usr/share/man/man7 && \
     # Install the pgsql client
     apt-get update -yqq && \
-    apt-get install -y postgresql-client \
-;fi
+    apt-get install --no-install-recommends -y postgresql-client \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # xDebug:
@@ -96,11 +94,11 @@ COPY ./xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini
 ARG INSTALL_BLACKFIRE=false
 RUN if [ ${INSTALL_XDEBUG} = false -a ${INSTALL_BLACKFIRE} = true ]; then \
     version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
-    && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \
+    && curl -f -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/amd64/$version \
     && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp \
     && mv /tmp/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so \
     && printf "extension=blackfire.so\nblackfire.agent_socket=tcp://blackfire:8707\n" > $PHP_INI_DIR/conf.d/blackfire.ini \
-;fi
+; rm /tmp/blackfire-probe.tar.gz fi
 
 #####################################
 # PHP REDIS EXTENSION FOR PHP 7.0
@@ -143,11 +141,11 @@ RUN if [ ${INSTALL_MONGO} = true ]; then \
 ARG INSTALL_AMQP=false
 RUN if [ ${INSTALL_AMQP} = true ]; then \
     apt-get update && \
-    apt-get install librabbitmq-dev -y && \
+    apt-get install --no-install-recommends librabbitmq-dev -y && \
     # Install the amqp extension
     pecl install amqp && \
     docker-php-ext-enable amqp \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # ZipArchive:
@@ -175,11 +173,10 @@ RUN if [ ${INSTALL_BCMATH} = true ]; then \
 
 ARG INSTALL_GMP=false
 RUN if [ ${INSTALL_GMP} = true ]; then \
-    # Install the GMP extension
 	apt-get update -yqq && \
-	apt-get install -y libgmp-dev && \
+	apt-get install --no-install-recommends -y libgmp-dev && \
     docker-php-ext-install gmp \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # PHP Memcached:
@@ -187,21 +184,19 @@ RUN if [ ${INSTALL_GMP} = true ]; then \
 
 ARG INSTALL_MEMCACHED=false
 RUN if [ ${INSTALL_MEMCACHED} = true ]; then \
-    # Install the php memcached extension
-    curl -L -o /tmp/memcached.tar.gz "https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz" \
+    curl -f -L -o /tmp/memcached.tar.gz "https://github.com/php-memcached-dev/php-memcached/archive/php7.tar.gz" \
     && mkdir -p memcached \
     && tar -C memcached -zxvf /tmp/memcached.tar.gz --strip 1 \
-    && ( \
-        cd memcached \
+    && ( cd memcached \
         && phpize \
-        && ./configure \
+        && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         && make -j$(nproc) \
-        && make install \
-    ) \
+        && make install) \
+
     && rm -r memcached \
     && rm /tmp/memcached.tar.gz \
     && docker-php-ext-enable memcached \
-;fi
+; fi
 
 #####################################
 # Exif:
@@ -224,22 +219,20 @@ ENV INSTALL_AEROSPIKE ${INSTALL_AEROSPIKE}
 COPY ./aerospike.ini /usr/local/etc/php/conf.d/aerospike.ini
 
 RUN if [ ${INSTALL_AEROSPIKE} = true ]; then \
-    # Fix dependencies for PHPUnit within aerospike extension
     apt-get update -yqq && \
-    apt-get -y install sudo wget && \
+    apt-get -y --no-install-recommends install sudo wget && \
 
-    # Install the php aerospike extension (using 7.2.0-in-progress branch until support for 7.2 on master)
-    curl -L -o /tmp/aerospike-client-php.tar.gz "https://github.com/aerospike/aerospike-client-php/archive/7.2.0-in-progress.tar.gz" \
+    # In -f ta l he php aerospike extension (usin  7.2.0-in-progress branch until support for 7.2 on master) \
+    cu l -L -o /tmp/aerospike-client \
     && mkdir -p aerospike-client-php \
     && tar -C aerospike-client-php -zxvf /tmp/aerospike-client-php.tar.gz --strip 1 \
     && ( \
         cd aerospike-client-php/src \
         && phpize \
         && ./build.sh \
-        && make install \
+    
     ) \
-    && rm /tmp/aerospike-client-php.tar.gz \
-;fi
+    ; rm -rf /var/lib/apt/lists/*; fi
 
 RUN if [ ${INSTALL_AEROSPIKE} = false ]; then \
     rm /usr/local/etc/php/conf.d/aerospike.ini \
@@ -281,12 +274,11 @@ RUN if [ ${INSTALL_TOKENIZER} = true ]; then \
 
 ARG INSTALL_INTL=false
 RUN if [ ${INSTALL_INTL} = true ]; then \
-    # Install intl and requirements
     apt-get update -yqq && \
-    apt-get install -y zlib1g-dev libicu-dev g++ && \
+    apt-get install --no-install-recommends -y zlib1g-dev libicu-dev g++ && \
     docker-php-ext-configure intl && \
     docker-php-ext-install intl \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # GHOSTSCRIPT:
@@ -294,13 +286,11 @@ RUN if [ ${INSTALL_INTL} = true ]; then \
 
 ARG INSTALL_GHOSTSCRIPT=false
 RUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \
-    # Install the ghostscript extension
-    # for PDF editing
     apt-get update -yqq \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
     poppler-utils \
     ghostscript \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # LDAP:
@@ -309,10 +299,10 @@ RUN if [ ${INSTALL_GHOSTSCRIPT} = true ]; then \
 ARG INSTALL_LDAP=false
 RUN if [ ${INSTALL_LDAP} = true ]; then \
     apt-get update -yqq && \
-    apt-get install -y libldap2-dev && \
+    apt-get install --no-install-recommends -y libldap2-dev && \
     docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu/ && \
     docker-php-ext-install ldap \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # SQL SERVER:
@@ -321,23 +311,17 @@ RUN if [ ${INSTALL_LDAP} = true ]; then \
 ARG INSTALL_MSSQL=false
 ENV INSTALL_MSSQL ${INSTALL_MSSQL}
 RUN if [ ${INSTALL_MSSQL} = true ]; then \
-    #####################################
-    # Ref from https://github.com/Microsoft/msphpsql/wiki/Dockerfile-for-adding-pdo_sqlsrv-and-sqlsrv-to-official-php-image
-    #####################################
-    # Add Microsoft repo for Microsoft ODBC Driver 13 for Linux
-    apt-get update -yqq && apt-get install -y apt-transport-https gnupg \
-        && curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
-        && curl https://packages.microsoft.com/config/debian/8/prod.list > /etc/apt/sources.list.d/mssql-release.list \
+    apt-get update -yqq && apt-get install --no-install-recommends -y apt-transport-https gnupg \
+        && curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \
+        && curl -f https://packages.microsoft.com/config/debian/8/prod.list > /etc/apt/sources.list.d/mssql-release.list \
         && apt-get update -yqq \
-
-    # Install Dependencies
-        && ACCEPT_EULA=Y apt-get install -y unixodbc unixodbc-dev libgss3 odbcinst msodbcsql locales \
-        && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen \
-
-    # Install pdo_sqlsrv and sqlsrv from PECL. Replace pdo_sqlsrv-4.1.8preview with preferred version.
-        && pecl install pdo_sqlsrv-4.1.8preview sqlsrv-4.1.8preview \
-        && docker-php-ext-enable pdo_sqlsrv sqlsrv \
-;fi
+       
+    st ll Dependencies \
+        && ACCEPT_EULA=Y apt-get install -y unixodbc ni odbc-dev l \
+            && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen \
+       
+    st ll pdo_sqlsrv and sqlsrv from PECL. Rep \
+        ; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # Image optimizers:
@@ -347,8 +331,8 @@ ARG INSTALL_IMAGE_OPTIMIZERS=false
 ENV INSTALL_IMAGE_OPTIMIZERS ${INSTALL_IMAGE_OPTIMIZERS}
 RUN if [ ${INSTALL_IMAGE_OPTIMIZERS} = true ]; then \
     apt-get update -yqq && \
-    apt-get install -y --force-yes jpegoptim optipng pngquant gifsicle \
-;fi
+    apt-get install --no-install-recommends -y --force-yes jpegoptim optipng pngquant gifsicle \
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # ImageMagick:
@@ -358,10 +342,10 @@ ARG INSTALL_IMAGEMAGICK=false
 ENV INSTALL_IMAGEMAGICK ${INSTALL_IMAGEMAGICK}
 RUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \
     apt-get update -y && \
-    apt-get install -y libmagickwand-dev imagemagick && \
+    apt-get install --no-install-recommends -y libmagickwand-dev imagemagick && \
     pecl install imagick && \
     docker-php-ext-enable imagick \
-;fi
+; rm -rf /var/lib/apt/lists/*; fi
 
 #####################################
 # IMAP:
@@ -370,11 +354,11 @@ ARG INSTALL_IMAP=false
 ENV INSTALL_IMAP ${INSTALL_IMAP}
 RUN if [ ${INSTALL_IMAP} = true ]; then \
     apt-get update && \
-    apt-get install -y libc-client-dev libkrb5-dev && \
+    apt-get install --no-install-recommends -y libc-client-dev libkrb5-dev && \
     rm -r /var/lib/apt/lists/* && \
     docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \
     docker-php-ext-install imap \
-;fi
+; fi
 
 
 #####################################
@@ -384,9 +368,9 @@ ARG INSTALL_GIT=true
 ENV INSTALL_GIT ${INSTALL_GIT}
 RUN if [ ${INSTALL_GIT} = true ]; then \
     apt-get update && \
-    apt-get install -y git && \
+    apt-get install --no-install-recommends -y git && \
     rm -r /var/lib/apt/lists/* \
-;fi
+; fi
 
 
 #####################################
@@ -404,9 +388,9 @@ RUN if [ true = true ]; then \
 #####################################
 RUN if [ true = true ]; then \
   apt-get update && \
-  apt-get install -y python && \
+  apt-get install --no-install-recommends -y python && \
   rm -r /var/lib/apt/lists/* \
-;fi
+; fi
 
 
 #####################################
@@ -414,7 +398,7 @@ RUN if [ true = true ]; then \
 #####################################
 ADD https://bootstrap.pypa.io/get-pip.py /
 RUN python /get-pip.py && \
-pip install Pygments
+ pip install --no-cache-dir Pygments
 
 
 #####################################