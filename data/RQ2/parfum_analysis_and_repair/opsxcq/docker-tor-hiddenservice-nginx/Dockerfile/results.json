{
  "startTime": 1674248409129,
  "endTime": 1674248409946,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "FROM debian:jessie\n\nLABEL maintainer \"opsxcq@strm.sh\"\n\n# Base packages\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n    nginx \\\n    tor torsocks ntpdate && rm -rf /var/lib/apt/lists/*;\n\n# Compile shallot\nADD ./shallot /shallot\nRUN apt-get -y --no-install-recommends install \\\n    build-essential \\\n    libssl-dev && \\\n    cd /shallot && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    mv ./shallot /bin && \\\n    cd / && \\\n    rm -Rf /shallot && \\\n    apt-get -y purge build-essential libssl-dev && \\\n    rm -Rf /var/lib/apt/lists/*\n\n# Security and permissions\nRUN useradd --system --uid 666 -M --shell /usr/sbin/nologin hidden\n\n# Configure nginx logs to go to Docker log collection (via stdout/stderr)\nRUN ln --symbolic --force /dev/stdout /var/log/nginx/access.log\nRUN ln --symbolic --force /dev/stderr /var/log/nginx/error.log\n\n# Main script\nADD ./main.sh /main.sh\n\n# Tor Config\nADD ./torrc /etc/tor/torrc\n\n# Add nginx default configuration\nADD ./nginx.conf /etc/nginx/nginx.conf\n\n# Configuration files and data output folder\nVOLUME /web\nWORKDIR /web\n\nENTRYPOINT [\"/main.sh\"]\nCMD [\"serve\"]\n\n"
}