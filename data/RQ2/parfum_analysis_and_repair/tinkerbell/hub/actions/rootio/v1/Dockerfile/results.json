{
  "startTime": 1674251149268,
  "endTime": 1674251150091,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 47
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 114,
        "columnEnd": 149
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 20,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 20,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build mkfs as an static\nFROM gcc:10.2.0 as mke2fs\nRUN wget https://mirrors.edge.kernel.org/pub/linux/kernel/people/tytso/e2fsprogs/v1.45.6/e2fsprogs-1.45.6.tar.gz; tar -xvzf ./e2fsprogs-1.45.6.tar.gz && rm ./e2fsprogs-1.45.6.tar.gz\nWORKDIR /e2fsprogs-1.45.6/\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static=yes CFLAGS='-g -O2 -static'\nRUN make\nRUN make -C misc mke2fs.static\n\n# build swap as static\nFROM gcc:10.2.0 as swap\nRUN git clone git://git.kernel.org/pub/scm/utils/util-linux/util-linux.git\nWORKDIR /util-linux/\nRUN apt-get update; apt-get install --no-install-recommends -y gettext bison autopoint && rm -rf /var/lib/apt/lists/*;\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" LDFLAGS=\"-static\"\nRUN make LDFLAGS=\"-all-static\" swapon\nRUN make LDFLAGS=\"-all-static\" mkswap\n\n# Build rootio\nFROM golang:1.15-alpine as rootio\nRUN apk add --no-cache git ca-certificates gcc linux-headers musl-dev\nCOPY . /go/src/github.com/thebsdbox/rootio/\nWORKDIR /go/src/github.com/thebsdbox/rootio\nENV GO111MODULE=on\nRUN --mount=type=cache,sharing=locked,id=gomod,target=/go/pkg/mod/cache \\\n    --mount=type=cache,sharing=locked,id=goroot,target=/root/.cache/go-build \\\n    CGO_ENABLED=1 GOOS=linux go build -a -ldflags \"-linkmode external -extldflags '-static' -s -w\" -o rootio\n\n# build fattools as static\nFROM gcc:10.2.0 as fattools\nRUN git clone https://github.com/dosfstools/dosfstools\nWORKDIR /dosfstools/\nRUN ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make LDFLAGS=\"--static\"\n\n# Build final image\nFROM scratch\nCOPY --from=mke2fs /e2fsprogs-1.45.6/misc/mke2fs.static /sbin/mke2fs\nCOPY --from=swap util-linux/swapon /sbin/swapon\nCOPY --from=swap util-linux/mkswap /sbin/mkswap\nCOPY --from=fattools dosfstools/src/mkfs.fat /sbin/mkfs.fat\nCOPY --from=rootio /go/src/github.com/thebsdbox/rootio/rootio .\nENTRYPOINT [\"/rootio\"]\n"
}