{
  "startTime": 1674249934017,
  "endTime": 1674249934902,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 121
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.13.6 as builder\nENV QEMU_NAME=\"qemu\"\nARG QEMU_REV=\"6.1.0\"\nENV QEMU_SRC_BASENAME=\"${QEMU_NAME}-${QEMU_REV}\"\nENV QEMU_SRC_URL=\"https://download.qemu.org/${QEMU_SRC_BASENAME}.tar.xz\"\n\nRUN apk add --no-cache --update --upgrade \\\n    gcc \\\n    glib-dev glib-static \\\n    libc-dev \\\n    linux-headers \\\n    make \\\n    perl \\\n    pkgconf \\\n    python3 \\\n    samurai \\\n    zlib-dev zlib-static \\\n    bash git parted patch xz \\\n    curl-dev curl-static nettle-dev nettle-static brotli-dev brotli-static nghttp2-dev nghttp2-static openssl-libs-static\n\nWORKDIR /work\nRUN wget \"${QEMU_SRC_URL}\" -O- | tar xJ\nWORKDIR /work/${QEMU_SRC_BASENAME}\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --disable-debug-info \\\n    --disable-system \\\n    --disable-werror \\\n    --disable-linux-user \\\n    --enable-nettle \\\n    --enable-curl \\\n    --enable-tools \\\n    --static\n\n# Fixup brotli linking\nRUN sed -e 's|-lbrotlidec|-lbrotlicommon-static -lbrotlidec-static -lbrotlienc-static|' -i build/build.ninja\n\nRUN make -j$(nproc) qemu-img\nRUN cp build/qemu-img /bin/qemu-img\n\n# Build partprobe\nFROM golang:1.17-alpine as partprobe\nCOPY . /src\nWORKDIR /src\nRUN go mod tidy\nRUN go build partprobe.go\n\nFROM scratch as collect\nCOPY --from=builder /bin/qemu-img /bin/qemu-img\nCOPY --from=builder /bin/sh /bin/sh\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=builder /lib/ld-musl*  /lib/\nCOPY --from=partprobe /src/partprobe /bin/partprobe\nCOPY entrypoint.sh /entrypoint.sh\n\nFROM scratch\nCOPY --from=collect / /\nENTRYPOINT /entrypoint.sh\n"
}