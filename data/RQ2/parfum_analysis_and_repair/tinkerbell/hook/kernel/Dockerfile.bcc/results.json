{
  "startTime": 1674250356731,
  "endTime": 1674250358174,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE\nFROM ${IMAGE} as ksrc\n\nFROM linuxkit/alpine:e2391e0b164c57db9f6c4ae110ee84f766edc430 AS build\nRUN apk update && apk upgrade -a && \\\n  apk add --no-cache \\\n  argp-standalone \\\n  autoconf \\\n  automake \\\n  bison \\\n  build-base \\\n  clang \\\n  clang-dev \\\n  clang-static \\\n  cmake \\\n  curl \\\n  flex-dev \\\n  fts-dev \\\n  gettext-dev \\\n  git \\\n  iperf3 \\\n  libedit-dev \\\n  libtool \\\n  llvm \\\n  llvm-dev \\\n  llvm-static \\\n  luajit-dev \\\n  m4 \\\n  python \\\n  zlib-dev \\\n  && true\n\nRUN ln -s /usr/lib/cmake/llvm5/ /usr/lib/cmake/llvm && \\\n    ln -s /usr/include/llvm5/llvm-c/ /usr/include/llvm-c && \\\n    ln -s /usr/include/llvm5/llvm/ /usr/include/llvm\n\nWORKDIR /build\n\nCOPY ./bcc.patches/ ./\nRUN mv error.h /usr/include/ && \\\n    mv cdefs.h /usr/include/sys/\n\nENV ELFUTILS_VERSION=0.165\nENV ELFUTILS_SHA256=\"a7fc9277192caaa5f30b47e8c0518dbcfd8c4a19c6493a63d511d804290ce972\"\nRUN curl -f -sSL -O https://fedorahosted.org/releases/e/l/elfutils/0.165/elfutils-$ELFUTILS_VERSION.tar.bz2 && \\\n    echo \"${ELFUTILS_SHA256}  /build/elfutils-$ELFUTILS_VERSION.tar.bz2\" | sha256sum -c - && \\\n    tar xjf elfutils-$ELFUTILS_VERSION.tar.bz2 && \\\n    cd elfutils-$ELFUTILS_VERSION && \\\n    patch -p1 < ../100-musl-compat.patch && \\\n    patch -p0 < ../decl.patch && \\\n    patch -p0 < ../intl.patch && rm elfutils-$ELFUTILS_VERSION.tar.bz2\n\nENV BCC_COMMIT=0fa419a64e71984d42f107c210d3d3f0cc82d59a\nRUN git clone https://github.com/iovisor/bcc.git && \\\n    cd bcc && \\\n    git checkout $BCC_COMMIT\n\nENV LJSYSCALL_COMMIT=e587f8c55aad3955dddab3a4fa6c1968037b5c6e\nRUN git clone https://github.com/justincormack/ljsyscall.git && \\\n    cd ljsyscall && \\\n    git checkout $LJSYSCALL_COMMIT\n\nCOPY --from=ksrc /kernel-headers.tar /build\nCOPY --from=ksrc /kernel-dev.tar /build\nCOPY --from=ksrc /kernel.tar /build\nRUN tar xf /build/kernel-headers.tar && \\\n    tar xf /build/kernel-dev.tar && \\\n    tar xf /build/kernel.tar && rm /build/kernel-headers.tar\n\nRUN cd elfutils-$ELFUTILS_VERSION && \\\n    aclocal && \\\n    automake && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr CFLAGS=\"-Wno-strict-aliasing -Wno-error\" && \\\n    make -C libelf && make -C libelf install\n\nRUN mkdir -p bcc/build && cd bcc/build && \\\n    cmake .. -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON \\\n             -DCMAKE_C_FLAGS=\"-I/build/usr/include\" \\\n             -DCMAKE_CXX_FLAGS=\"-I/build/usr/include\" \\\n             -DCMAKE_INSTALL_PREFIX=/usr \\\n             -DLUAJIT_INCLUDE_DIR=/usr/include/luajit-2.1 && \\\n    make && \\\n    make install\n\nRUN mkdir -p /usr/local/share/lua/5.1/ && \\\n    cd ljsyscall && \\\n    cp -a *.lua syscall /usr/local/share/lua/5.1/\nRUN mkdir -p /out/usr/ && \\\n    cp -a /build/usr/src /out/usr/ && \\\n    cp -a /build/usr/include /out/usr\nRUN mkdir -p /out/usr/lib && \\\n    cp -a /usr/lib/libelf* /out/usr/lib/ && \\\n    cp -a /usr/lib/libstdc* /out/usr/lib/ && \\\n    cp -a /usr/lib/libintl* /out/usr/lib/ && \\\n    cp -a /usr/lib64/* /out/usr/lib/\nRUN mkdir -p /out/usr/lib/python2.7 && \\\n    cp -a /usr/lib/python2.7/site-packages /out/usr/lib/python2.7/\nRUN mkdir -p /out/usr/share && \\\n    cp -a /usr/share/bcc /out/usr/share/\nRUN mkdir -p /out/usr/bin && \\\n    cp -a /usr/bin/bcc-lua /out/usr/bin/\nRUN mkdir -p /out/usr/local/share/ && \\\n    cp -a /usr/local/share/lua /out/usr/local/share/\n\nFROM linuxkit/alpine:e2391e0b164c57db9f6c4ae110ee84f766edc430 as mirror\nRUN mkdir -p /out/etc/apk && cp -r /etc/apk/* /out/etc/apk/\nRUN apk update && apk upgrade -a && \\\n  apk add --no-cache --initdb -p /out \\\n  busybox \\\n  luajit \\\n  python \\\n  zlib \\\n  && true\n\nFROM scratch\nENTRYPOINT []\nCMD []\nWORKDIR /\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/usr/lib64\nCOPY --from=mirror /out /\nCOPY --from=build /out /\n"
}