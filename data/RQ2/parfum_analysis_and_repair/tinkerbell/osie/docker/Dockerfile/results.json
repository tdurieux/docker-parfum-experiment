{
  "startTime": 1674249617104,
  "endTime": 1674249618960,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 4,
        "columnEnd": 153
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 6,
        "columnEnd": 77
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 8,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 24,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 24,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nVOLUME /statedir\nENTRYPOINT [\"/entrypoint.sh\"]\n\nENV DEBIAN_FRONTEND=noninteractive\nENV LANG=C.UTF-8\n\n# apt sources fix\nCOPY sources.list.aarch64 /tmp/osie/\nRUN if [ \"$(uname -m)\" = 'aarch64' ]; then \\\n        mv /tmp/osie/sources.list.aarch64 /etc/apt/sources.list; \\\n    fi && \\\n    rm -rf /tmp/osie\n\n# runtime packages\nCOPY get-package-list.sh git-lfs-linux-*-v2.5.1-4-g2f166e02 /tmp/osie/\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y $(/tmp/osie/get-package-list.sh) && \\\n    apt-get -qy autoremove && \\\n    apt-get -qy clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/osie\n\n# gron - grep for JSON\nCOPY lfs/gron-0.6.0-amd64 /tmp/osie/\nRUN if [ \"$(uname -m)\" = 'x86_64' ]; then \\\n        mv /tmp/osie/gron-0.6.0-amd64 /usr/bin/gron; \\\n    fi && \\\n    rm -rf /tmp/osie\n\n# build lshw, done here so we can keep it cached as long as possible\nCOPY build-lshw.sh /tmp/osie/\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y build-essential && \\\n    (cd /tmp/osie/ && ./build-lshw.sh) && \\\n    apt-get -qy remove build-essential && \\\n    apt-get -qy autoremove && \\\n    apt-get -qy clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/osie/\n\n# build nvme cli, done here so we can keep it cached as long as possible\nCOPY build-nvme-cli.sh /tmp/osie/\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y build-essential && \\\n    (cd /tmp/osie/ && ./build-nvme-cli.sh) && \\\n    apt-get -qy remove build-essential && \\\n    apt-get -qy autoremove && \\\n    apt-get -qy clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/osie/\n\n# build mstflint, done here so we can keep it cached as long as possible\nCOPY build-mstflint.sh /tmp/osie/\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y build-essential && \\\n    (cd /tmp/osie/ && ./build-mstflint.sh) && \\\n    apt-get -qy remove build-essential && \\\n    apt-get -qy autoremove && \\\n    apt-get -qy clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/osie/\n\n# build smartmontools, done here so we can keep it cached as long as possible\nCOPY build-smartmontools.sh /tmp/osie/\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y build-essential && \\\n    (cd /tmp/osie/ && ./build-smartmontools.sh) && \\\n    apt-get -qy remove build-essential && \\\n    apt-get -qy autoremove && \\\n    apt-get -qy clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/osie/\n\n# ironlib cli wrapper, a prereq for packet-hardware since we don't run it from its container\nCOPY lfs/getbiosconfig /tmp/osie/\nRUN cd /tmp/osie && \\\n    if [ \"$(uname -m)\" = 'x86_64' ]; then \\\n      install -m755 /tmp/osie/getbiosconfig /usr/sbin/getbiosconfig; \\\n    fi && \\\n    rm -rf /tmp/osie/\n\nARG PACKET_HARDWARE_COMMIT=ddbafcbc74ef3db0677d56733442cd9f6f76a317\nARG PACKET_NETWORKING_COMMIT=2ac8cbd684195ade26b514a9870c71fd3902ad6e\n\nRUN curl -f https://bootstrap.pypa.io/pip/3.5/get-pip.py | python3 && \\\n    pip3 install --no-cache-dir git+https://github.com/packethost/packet-hardware.git@${PACKET_HARDWARE_COMMIT} && \\\n    pip3 install --no-cache-dir git+https://github.com/packethost/packet-networking.git@${PACKET_NETWORKING_COMMIT} && \\\n    rm -rf ~/.cache/pip*\n\n# static prebuilt git-lfs packages\nCOPY lfs/git-lfs-linux-*-v2.5.1-4-g2f166e02 /tmp/osie/\nRUN mv /tmp/osie/git-lfs-linux-$(uname -m)-* /usr/bin/git-lfs && \\\n    chmod 755 /usr/bin/git-lfs && \\\n    git-lfs install && \\\n    rm -rf /tmp/osie\n\n# LSI CLI\nCOPY lfs/megacli-noarch-bin.tar /tmp/osie/\nRUN tar -xvC / -f /tmp/osie/megacli-noarch-bin.tar && \\\n    ln -nsf /opt/MegaRAID/MegaCli/MegaCli64 /usr/bin/ && \\\n    rm -rf /tmp/osie && rm /tmp/osie/megacli-noarch-bin.tar\n\n# PERC CLI\nCOPY lfs/perccli-7.1020.0000.tar.gz /tmp/osie/\nRUN tar -zxvC / -f /tmp/osie/perccli-7.1020.0000.tar.gz && \\\n    ln -nsf /opt/MegaRAID/perccli/perccli64 /usr/bin/ && \\\n    rm -rf /tmp/osie && rm /tmp/osie/perccli-7.1020.0000.tar.gz\n\n# Marvell CLI\nCOPY lfs/mvcli-4.1.13.31_A01.zip /tmp/osie/\nRUN cd /tmp/osie && \\\n    unzip mvcli-4.1.13.31_A01.zip && \\\n    cd mvcli-4.1.13.31_A01/x64/cli && \\\n    cp -f mvcli /usr/bin && \\\n    cp -f libmvraid.so /usr/lib && \\\n    chmod 755 /usr/bin/mvcli && \\\n    cd && \\\n    rm -r /tmp/osie\n\n# SSA CLI\nRUN if [ \"$(uname -m)\" = 'x86_64' ]; then \\\n      temp=\"$(mktemp)\" && \\\n      wget -O \"$temp\" 'https://downloads.linux.hpe.com/SDR/repo/mcp/pool/non-free/ssacli-4.17-6.0_amd64.deb' && \\\n      dpkg -i \"$temp\" && \\\n      rm -rf \"$temp\"; \\\n    fi ;\n\n# IPMICFG\nCOPY lfs/ipmicfg /tmp/osie/\nRUN cd /tmp/osie && \\\n    install -m 755 /tmp/osie/ipmicfg /usr/bin/ipmicfg && \\\n    rm -rf /tmp/osie\n\n# RACADM\nCOPY dchipm.ini /tmp/osie/\nRUN cd /tmp/osie && \\\n    if [ \"$(uname -m)\" != 'aarch64' ]; then \\\n      apt-get update && apt-get install --no-install-recommends -y alien && \\\n      rpm --import http://linux.dell.com/repo/pgp_pubkeys/0x1285491434D8786F.asc && \\\n      wget --quiet \\\n        https://dl.dell.com/FOLDER07423496M/1/DellEMC-iDRACTools-Web-LX-10.1.0.0-4566_A00.tar.gz \\\n        https://linux.dell.com/repo/community/openmanage/10100/focal/pool/main/s/srvadmin-omilcore/srvadmin-omilcore_10.1.0.0_amd64.deb && \\\n      tar --extract --file DellEMC-iDRACTools-Web-LX-10.1.0.0-4566_A00.tar.gz && \\\n      alien --install iDRACTools/racadm/RHEL8/x86_64/*.rpm && \\\n      dpkg --install *.deb && \\\n      ln -s /opt/dell/srvadmin/bin/idracadm7 /usr/bin/racadm && \\\n      apt-get purge -y alien && \\\n      apt-get autoremove -y && \\\n      cp dchipm.ini /opt/dell/srvadmin/etc/srvadmin-hapi/ini/; rm DellEMC-iDRACTools-Web-LX-10.1.0.0-4566_A00.tar.gz rm -rf /var/lib/apt/lists/*; \\\n    fi && \\\n    rm -rf /tmp/osie\n\n# SuperMicro SUM\nCOPY lfs/sum_2.4.0_Linux_x86_64_20191206.tar.gz /tmp/osie/\nRUN if [ \"$(uname -m)\" = 'x86_64' ]; then \\\n      mkdir -p /opt/supermicro && \\\n        tar -zxvf /tmp/osie/sum_2.4.0_Linux_x86_64_20191206.tar.gz -C /opt/supermicro && \\\n        ln -s /opt/supermicro/sum_2.4.0_Linux_x86_64 /opt/supermicro/sum; rm /tmp/osie/sum_2.4.0_Linux_x86_64_20191206.tar.gz \\\n    fi;\n\n# URL=http://www.mellanox.com/downloads/firmware/mlxup\n# VERSION=4.6.0\nCOPY lfs/mlxup-* /tmp/osie/\nRUN install -m755 -D /tmp/osie/mlxup-$(uname -m) /opt/mellanox/mlxup && rm -rf /tmp/osie/\n\nARG ECLYPSIUM_AGENT_VERSION=2.5.0\nARG ECLYPSIUM_AGENT_SHA256=662e383946d499481bee591dadb3b8ca3ee8d5c9084a35f109cffc2c1dcb633b\nARG ECLYPSIUM_AGENT_FILENAME=eclypsiumapp-${ECLYPSIUM_AGENT_VERSION}.deb\n\nCOPY lfs/${ECLYPSIUM_AGENT_FILENAME} /tmp/\nRUN if [ \"$(uname -m)\" = 'x86_64' ]; then \\\n        cd /tmp && \\\n        echo \"${ECLYPSIUM_AGENT_SHA256}  ${ECLYPSIUM_AGENT_FILENAME}\" | sha256sum -c && \\\n        dpkg --unpack \"${ECLYPSIUM_AGENT_FILENAME}\" && \\\n        sed -i 's/try_restart_service /#try_restart_service /g' /var/lib/dpkg/info/eclypsiumapp.postinst && \\\n        dpkg --configure eclypsiumapp && \\\n        rm -f \"${ECLYPSIUM_AGENT_FILENAME}\"; \\\n    fi ;\n\nARG ASRR_BIOS_APP_VERSION=1.0.3\nARG ASRR_BIOS_APP_SHA512=5dbb458dd105d872f61f0256ec1a57c5de922328a23cd42e636b35c5bbda7e1e1d957b271de76b49345c35a55a97845842de106aea61f930ac440ad6e21f344a\nARG ASRR_BIOS_APP_FILENAME=\"BIOSControl_v${ASRR_BIOS_APP_VERSION}.zip\"\n\nCOPY lfs/${ASRR_BIOS_APP_FILENAME} /tmp/osie/\nRUN cd /tmp/osie && \\\n    echo \"${ASRR_BIOS_APP_SHA512} ${ASRR_BIOS_APP_FILENAME}\" | sha512sum -c && \\\n    unzip ${ASRR_BIOS_APP_FILENAME} && \\\n    install -D -m 755 BIOSControl /usr/sbin/BIOSControl && \\\n    rm -rf /tmp/osie/BIOSControl /tmp/osie/driver /tmp/osie/ReadMe.txt\n\n# freebsd ufs fs fuse\nCOPY lfs/osie-fuse-* /tmp/osie/\nRUN mv /tmp/osie/osie-fuse*$(uname -m).deb /tmp/ && rm -rf /tmp/osie/\n\nRUN useradd packet -d /home/packet -m -U && \\\n    chown -R packet:packet /home/packet\nWORKDIR /home/packet\n\nARG METAL_BLOCK_STORAGE_COMMIT=95972b5a45a2c1be43dcb9288c551bee77557489\nRUN curl -f --remote-name \"https://raw.githubusercontent.com/packethost/metal-block-storage/$METAL_BLOCK_STORAGE_COMMIT/metal-block-storage-{attach,detach}\" && \\\n    chmod +x /home/packet/metal-block-storage*\n\nCOPY entrypoint.sh /entrypoint.sh\nCOPY scripts/ /home/packet/\n\nARG GITVERSION\nARG GITBRANCH\nARG DRONEBUILD\nENV OSIE_VERSION=${GITVERSION} OSIE_BRANCH=${GITBRANCH} DRONE_BUILD=${DRONEBUILD}\n\n# ensure we always have up to date packages\nRUN apt-get -y update && \\\n    apt-get -y dist-upgrade && \\\n    apt-get -y autoremove && \\\n    apt-get -y clean && \\\n    rm -rf /var/lib/apt/lists/* /home/packet/requirements.txt\n"
}