{
  "startTime": 1674254402710,
  "endTime": 1674254404236,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12\n\nRUN apk add --no-cache --no-progress --update --upgrade \\\n        bash \\\n        bridge-utils \\\n        coreutils \\\n        cpio \\\n        curl \\\n        diffutils \\\n        dnsmasq \\\n        docker \\\n        eudev \\\n        file \\\n        findutils \\\n        gcc \\\n        git \\\n        go \\\n        gptfdisk \\\n        iptables \\\n        jq \\\n        libarchive-tools \\\n        make \\\n        musl-dev \\\n        ncurses \\\n        ovmf \\\n        pigz \\\n        py3-pip \\\n        python3 \\\n        python3-dev \\\n        qemu-system-aarch64 \\\n        qemu-system-x86_64 \\\n        rsync \\\n        socat \\\n        util-linux \\\n        && \\\n    mv /etc/apk/repositories /etc/apk/repositories.old && \\\n    apk add --no-cache --update --upgrade \\\n        --repository=http://dl-cdn.alpinelinux.org/alpine/v3.11/main \\\n        --repository=http://dl-cdn.alpinelinux.org/alpine/v3.11/community \\\n        lshw \\\n        && \\\n    mv /etc/apk/repositories.old /etc/apk/repositories && \\\n    apk add --no-cache --update --upgrade \\\n        --repository=http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n        cfssl \\\n   ;\n\n\nCOPY ./proxy /tmp/proxy/\nRUN cd /tmp/proxy && \\\n    CGO_ENABLED=0 go build -v -tags \"caddyserver0.9 caddyserver1.0\"  -o /bin/proxy && \\\n    /bin/proxy --version # this is going to break if/when we update to go1.15 (maybe 1.14?), at that point HAProxy + lua upload service is probably the way to go\n\nRUN mkdir $HOME/bin && \\\n    wget \"https://dl.minio.io/client/mc/release/linux-amd64/mc\" -O bin/mc && \\\n    chmod +x bin/mc\n\nENV PATH=$HOME/bin:$PATH\n\nRUN curl -fL https://github.com/mvdan/sh/releases/download/v2.3.0/shfmt_v2.3.0_linux_amd64 >/bin/shfmt && \\\n    echo 'eef540565962cf1f5432c7e3cf212c333e096f9f481d6d441197c1cf878746d0  /bin/shfmt' | sha256sum -c && \\\n    chmod +x /bin/shfmt\n\nRUN pip3 install --no-cache-dir click j2cli packet-python==1.38.2 && \\\n    pip3 install --no-cache-dir coverage\n\nRUN curl -f -L https://github.com/git-lfs/git-lfs/releases/download/v2.5.1/git-lfs-linux-amd64-v2.5.1.tar.gz >/tmp/git-lfs.tar.gz && \\\n    echo '9565fa9c2442c3982567a3498c9352cda88e0f6a982648054de0440e273749e7  /tmp/git-lfs.tar.gz' | sha256sum -c && \\\n    tar -zxf /tmp/git-lfs.tar.gz -C /usr/bin git-lfs && \\\n    git-lfs install && rm /tmp/git-lfs.tar.gz\n\nCOPY tls/ /tls/\nENV TERM=xterm-256color\n"
}