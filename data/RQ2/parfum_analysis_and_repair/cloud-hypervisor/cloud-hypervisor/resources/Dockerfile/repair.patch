diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cloud-hypervisor/cloud-hypervisor/resources/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cloud-hypervisor/cloud-hypervisor/resources/Dockerfile/repaired.Dockerfile
index 405516a..1a4abda 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cloud-hypervisor/cloud-hypervisor/resources/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cloud-hypervisor/cloud-hypervisor/resources/Dockerfile/repaired.Dockerfile
@@ -17,7 +17,7 @@ ENV PATH="$PATH:$CARGO_HOME/bin"
 # Install all CI dependencies
 RUN apt-get update \
 	&& apt-get -yq upgrade \
-	&& DEBIAN_FRONTEND=noninteractive apt-get install -yq \
+	&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq \
 	build-essential \
 	bc \
 	curl \
@@ -58,18 +58,14 @@ RUN update-alternatives --set ovs-vswitchd /usr/lib/openvswitch-switch-dpdk/ovs-
 RUN if [ "$TARGETARCH" = "amd64" ]; then \
 	apt-get update \
 	&& apt-get -yq upgrade \
-	&& DEBIAN_FRONTEND=noninteractive apt-get install -yq gcc-multilib \
+	&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq gcc-multilib \
 	&& apt-get clean \
-    && rm -rf /var/lib/apt/lists/*;	fi
+    && rm -rf /var/lib/apt/lists/*; fi
 
 RUN if [ "$TARGETARCH" = "arm64" ]; then \
-        # On AArch64, `setcap` binary should be installed via `libcap2-bin`.
-        # The `setcap` binary is used in integration tests.
-        # `libguestfs-tools` is used for modifying cloud image kernel, and it requires
-        # kernel (any version) image in `/boot` and modules in `/lib/modules`.
         apt-get update \
         && apt-get -yq upgrade \
-        && DEBIAN_FRONTEND=noninteractive apt-get install -yq \
+        && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq \
         libcap2-bin \
         libguestfs-tools \
         linux-image-generic \
@@ -79,7 +75,7 @@ RUN if [ "$TARGETARCH" = "arm64" ]; then \
         perl \
         texinfo \
         && apt-get clean \
-        && rm -rf /var/lib/apt/lists/*;	fi
+        && rm -rf /var/lib/apt/lists/*; fi
 
 # Fix the libssl-dev install
 RUN export ARCH="$(uname -m)" \
@@ -117,7 +113,7 @@ RUN if [ "$TARGETARCH" = "amd64" ]; then \
        && apt-get update \
        && ./scripts/pkgdep.sh \
        && apt-get clean \
-       && ./configure --with-vfio-user \
+       && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-vfio-user \
        && make -j `nproc` \
        && mkdir /usr/local/bin/spdk-nvme \
        && cp ./build/bin/nvmf_tgt /usr/local/bin/spdk-nvme \