{
  "startTime": 1674216438045,
  "endTime": 1674216439024,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 16,
        "columnEnd": 32
      }
    }
  ],
  "repairedDockerfile": "FROM alpine:3.15.0 AS ui-build\n\nENV PROJECT_PATH=/chirpstack\n\nRUN apk add --no-cache make git bash build-base nodejs npm yarn\n\nRUN mkdir -p $PROJECT_PATH\nCOPY ./api/grpc-web $PROJECT_PATH/api/grpc-web\nCOPY ./ui $PROJECT_PATH/ui\n\nRUN cd $PROJECT_PATH/ui && \\\n\t\tyarn install --network-timeout 600000 && \\\n\t\tyarn build && yarn cache clean;\n\nFROM chirpstack/chirpstack-dev-cache:latest AS rust-build\n\nCOPY . $PROJECT_PATH\nCOPY --from=ui-build $PROJECT_PATH/ui/build $PROJECT_PATH/ui/build\nRUN cd $PROJECT_PATH/chirpstack && cargo build --release\n\nFROM debian:buster-slim as production\n\nRUN apt-get update && \\\n\t\tapt-get install --no-install-recommends -y \\\n\t\tca-certificates \\\n\t\tlibpq5 \\\n\t\t&& rm -rf /var/lib/apt/lists/*\n\nCOPY --from=rust-build /target/release/chirpstack /usr/bin/chirpstack\nCOPY --from=rust-build /chirpstack/chirpstack/configuration/* /etc/chirpstack/\nUSER nobody:nogroup\nENTRYPOINT [\"/usr/bin/chirpstack\"]\n"
}