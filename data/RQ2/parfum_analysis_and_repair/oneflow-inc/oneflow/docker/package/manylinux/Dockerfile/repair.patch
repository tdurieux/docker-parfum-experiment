diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oneflow-inc/oneflow/docker/package/manylinux/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oneflow-inc/oneflow/docker/package/manylinux/Dockerfile/repaired.Dockerfile
index d4d21c0..c3165e7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oneflow-inc/oneflow/docker/package/manylinux/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oneflow-inc/oneflow/docker/package/manylinux/Dockerfile/repaired.Dockerfile
@@ -24,7 +24,7 @@ RUN if [ "${use_tuna_yum}" = "1" ]; then mv /tmp/CentOS-Base.repo /etc/yum.repos
 RUN yum-config-manager --disable cuda nvidia-ml
 
 ARG MANYLINUX_SHA=b634044
-RUN yum -y install unzip && curl -L -o manylinux.zip https://github.com/Oneflow-Inc/manylinux/archive/${MANYLINUX_SHA}.zip && unzip manylinux.zip -d tmp && cp -r tmp/*/docker/build_scripts /build_scripts && bash build_scripts/build.sh && rm -r build_scripts tmp manylinux.zip
+RUN yum -y install unzip && curl -f -L -o manylinux.zip https://github.com/Oneflow-Inc/manylinux/archive/${MANYLINUX_SHA}.zip && unzip manylinux.zip -d tmp && cp -r tmp/*/docker/build_scripts /build_scripts && bash build_scripts/build.sh && rm -r build_scripts tmp manylinux.zip && rm -rf /var/cache/yum
 
 ENV SSL_CERT_FILE=/opt/_internal/certs.pem
 # manylinux2014 end
@@ -33,17 +33,17 @@ RUN yum-config-manager --add-repo https://yum.repos.intel.com/oneapi && \
     rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \
     yum update -y && yum install -y epel-release && \
     yum -y install centos-release-scl && \
-    yum install -y intel-oneapi-mkl-devel-2021.2.0 nasm rdma-core-devel devtoolset-7-gcc* rsync gdb
+    yum install -y intel-oneapi-mkl-devel-2021.2.0 nasm rdma-core-devel devtoolset-7-gcc* rsync gdb && rm -rf /var/cache/yum
 
 RUN /opt/python/cp35-cp35m/bin/pip install $pip_args -U cmake==3.18.4.post1 && ln -s /opt/_internal/cpython-3.5.9/bin/cmake /usr/bin/cmake
 
 RUN mkdir -p /tmp && cd /tmp && \
-    curl -L -o patchelf-src.zip \
+    curl -f -L -o patchelf-src.zip \
     https://github.com/Oneflow-Inc/patchelf/archive/64bf5388ef7d45d3697c4aadbd3f5d7d68a22aa3.zip && \
-    unzip patchelf-src.zip && cd patchelf-* && ./bootstrap.sh && ./configure && make -j`nproc` && \
+    unzip patchelf-src.zip && cd patchelf-* && ./bootstrap.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j`nproc` && \
     make install && cd .. && rm -rf patchelf-*
 
-RUN curl -L $bazel_url -o /usr/local/bin/bazel \
+RUN curl -f -L $bazel_url -o /usr/local/bin/bazel \
     && chmod +x /usr/local/bin/bazel \
     && bazel