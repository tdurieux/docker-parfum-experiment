{
  "startTime": 1674254978979,
  "endTime": 1674254980994,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 21,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 16,
        "columnStart": 21,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# warning: never share the container image this dockerfile produces\nARG CUDA=10.0\n\nFROM nvidia/cuda:${CUDA}-cudnn7-devel-centos7\nRUN yum-config-manager --add-repo https://yum.repos.intel.com/setup/intelproducts.repo && \\\n    rpm --import https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB\nRUN yum update -y && yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum update -y && yum install -y rdma-core-devel \\\n    nasm \\\n    cmake3 \\\n    make \\\n    git \\\n    centos-release-scl \\\n    intel-mkl-2020.0-088 \\\n    zlib-devel \\\n    curl-devel \\\n    which && rm -rf /var/cache/yum\n\nRUN ln -sf /usr/bin/cmake3 /usr/bin/cmake\n\nRUN mkdir -p /tmp/download/cmake-extracted && \\\n    cd /tmp/download && \\\n    curl -f --location https://github.com/Kitware/CMake/releases/download/v3.14.0/cmake-3.14.0.tar.gz --output cmake.tar.gz && \\\n    tar -xvzf cmake.tar.gz --directory cmake-extracted && \\\n    cd cmake-extracted/* && \\\n    mkdir /cmake-install && rm cmake.tar.gz\nRUN cd /tmp/download/cmake-extracted/* && \\\n    cmake . -DCMAKE_USE_SYSTEM_CURL=ON -DCMAKE_INSTALL_PREFIX=/cmake-install && \\\n    make -j $(nproc) && \\\n    make install\nENV PATH=\"/cmake-install/bin:${PATH}\"\n\nARG USE_PYTHON_3_OR_2=3\n\nRUN if [ \"${USE_PYTHON_3_OR_2}\" -eq 2 ] ; then \\\n yum update -y \\\n    && yum install -y python-devel.x86_64 \\\n    && curl -f https://bootstrap.pypa.io/get-pip.py --output ./get-pip.py \\\n    && python ./get-pip.py \\\n    && rm get-pip.py \\\n    && pip install --no-cache-dir numpy==1.12.0 protobuf; rm -rf /var/cache/yumfi\n\nCOPY dev-requirements.txt /workspace/dev-requirements.txt\n\nRUN if [ \"${USE_PYTHON_3_OR_2}\" -eq 3 ] ; then \\\n yum update -y \\\n    && yum install -y rh-python36 python36-devel.x86_64 python36-devel \\\n    && python3 -m ensurepip \\\n    && pip3 install --no-cache-dir /workspace/dev-requirements.txt; rm -rf /var/cache/yumfi\n\nWORKDIR /workspace/build\n\nCOPY cmake /workspace/cmake\nCOPY CMakeLists.txt /workspace/CMakeLists.txt\n\n# BUILD DEPENDENCY\nCOPY build/third_party /workspace/build/third_party\nRUN cmake -DTHIRD_PARTY=ON -DCMAKE_BUILD_TYPE=Release -DRELEASE_VERSION=ON .. && make -j\n\n# BUILD ONEFLOW\nCOPY oneflow /workspace/oneflow\nCOPY tools /workspace/tools\n\nRUN export LD_LIBRARY_PATH=/opt/intel/lib/intel64_lin:/opt/intel/mkl/lib/intel64:$LD_LIBRARY_PATH; \\\n    cmake -DTHIRD_PARTY=OFF .. && make -j $(nproc) ;\n\n## BUILD WHEEL\nWORKDIR /workspace\nRUN pip${USE_PYTHON_3_OR_2} install --no-cache-dir wheel\nCOPY setup.py /workspace/setup.py\nRUN python${USE_PYTHON_3_OR_2} setup.py bdist_wheel\nRUN pip${USE_PYTHON_3_OR_2} install --no-cache-dir /workspace/dist/*.whl\n\nRUN rm -rf oneflow third_party cmake CMakeLists.txt\n"
}