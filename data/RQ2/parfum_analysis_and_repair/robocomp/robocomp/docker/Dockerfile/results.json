{
  "startTime": 1674246464167,
  "endTime": 1674246465715,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 5,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 18,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG base_image=\"nvidia/opengl\"\nARG base_tag=\"base-ubuntu20.04\"\nARG branch=\"development\"\nARG robocomp_version=\"dsr-components\"\n\nFROM ${base_image}:${base_tag} AS dependencies-version\n# Disable Prompt During Packages Installation\nARG DEBIAN_FRONTEND=noninteractive\nARG branch\n# DEFAULT LD_LIBRARY_PATH vaiables from the nvidia/opengl image confuses pyside2 about the qt5 Library paths\nENV LD_LIBRARY_PATH=\"/lib:/usr/lib\"\nRUN export LD_LIBRARY_PATH=\"/lib:/usr/lib\"\nRUN apt-get update && apt-get install -y --no-install-recommends  \\\n      ca-certificates \\\n      curl \\\n      sudo \\\n    && rm -rf /var/lib/apt/lists/*\nRUN cd ~ && export branch=$branch \\\n    && curl -f -sL https://raw.githubusercontent.com/robocomp/robocomp/$branch/tools/install/resources/robocomp_prerequisites_install.sh | bash -s $branch\nRUN export uid=1000 gid=1000 && \\\n    mkdir -p /home/robolab && \\\n    echo \"robolab:x:${uid}:${gid}:Robolab,,,:/home/robolab:/bin/bash\" >> /etc/passwd && \\\n    echo \"robolab:x:${uid}:\" >> /etc/group && \\\n    echo \"robolab:robolab\"|chpasswd && \\\n    echo \"robolab ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/robolab-user && \\\n    chown ${uid}:${gid} -R /home/robolab\nUSER robolab\nWORKDIR /home/robolab/\n\n\nFROM dependencies-version AS base-version\nARG branch\n# Using robocomp installation script\nRUN cd ~ && export branch=$branch \\\n    && curl -f -sL https://raw.githubusercontent.com/robocomp/robocomp/$branch/tools/install/robocomp_install.sh | bash -s $branch\nENV PATH=$PATH:/opt/robocomp/bin/:'/home/robolab/.local/bin'\nENV ROBOCOMP=/home/robolab/robocomp\nRUN export ROBOCOMP=/home/robolab/robocomp\nRUN export PATH=$PATH:/opt/robocomp/bin/:'/home/robolab/.local/bin'\n#RUN sudo pip3 install /home/robolab/robocomp/tools/cli/\n#RUN cd robocomp && rcconfig init && mkdir build && cd build && cmake .. && make -j$(nproc) && sudo make install\n#RUN sudo sh -c \"echo '/opt/robocomp/lib/' >> /etc/ld.so.conf\"\n#RUN sudo ldconfig\nWORKDIR robocomp\nRUN git annex get \\\n  files/innermodel/simpleworld.xml \\\n  files/osgModels/textures/wood.jpg \\\n  files/innermodel/tar36h11-*.png \\\n  files/osgModels/textures/Metal.jpg \\\n  files/osgModels/robex/robex.ive\nRUN cp -r -L files /home/robolab/files 2>/dev/null || :\n\n\nFROM base-version AS fcl-version\nUSER root\nRUN apt update && apt-get install --no-install-recommends --yes \\\n  libfcl-dev && rm -rf /var/lib/apt/lists/*;\nUSER robolab\nRUN cd /home/robolab/robocomp && mkdir -p build && cd build && cmake -DFCL_SUPPORT=True .. && make -j$(nproc)\nUSER root\nRUN cd /home/robolab/robocomp/build && make install\nUSER robolab\n\n\nFROM fcl-version AS dsr-version\nUSER root\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  g++-10 \\\n  gcc-10 \\\n  libeigen3-dev \\\n  python3-dev \\\n  python3-pybind11 \\\n  libqglviewer-dev-qt5 \\\n  libasio-dev \\\n  libtinyxml2-dev  \\\n  libqt5svg5-dev \\\n  && rm -rf /var/lib/apt/lists/*\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 1\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 1\nRUN python3 -m pip install pyrep\n\n# ICE fix\nCOPY Connection.h /usr/include/Ice/Connection.h\n\n### Third party dependencies\nRUN ( curl -f -O https://raw.githubusercontent.com/robocomp/robocomp/development/classes/threadpool/threadpool.h && mkdir -p /usr/include/threadpool && mv threadpool.h /usr/include/threadpool)\nRUN curl -f -S https://raw.githubusercontent.com/robocomp/cortex/development/installation.sh | bash -x\nRUN rm -r /usr/local/include/cppitertools\nRUN git clone https://github.com/ryanhaining/cppitertools /usr/local/include/cppitertools\nUSER robolab\n\n\nFROM dsr-version AS dsr-components-version\nUSER root\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  libopencv-dev \\\n  python3-zeroc-ice  \\\n  psmisc \\\n  && rm -rf /var/lib/apt/lists/*\n#Compilation of DSR components\nUSER robolab\nWORKDIR /home/robolab/robocomp/components/\nRUN git clone --progress https://github.com/robocomp/dsr-graph.git\nWORKDIR /home/robolab/robocomp/components/dsr-graph/components/\nRUN cd idserver && cmake . && make -j10\nRUN cd pioneer_dsr && cmake . && make -j10\nRUN cd path_follower && cmake . && make -j10\nRUN cd path_planner_astar && cmake . && make -j10\nRUN cd elastic_band && cmake . && make -j10\n\n\nFROM ${robocomp_version}-version AS final\nARG robocomp_version\nRUN echo \"Built ${robocomp_version}\"\n"
}