{
  "startTime": 1674248339924,
  "endTime": 1674248341403,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 20,
        "columnEnd": 45
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 20,
        "columnEnd": 45
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 24,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 23,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nMAINTAINER leoatchina,leoatchina@outlook.com\nADD sources.list /etc/apt/sources.list\nWORKDIR /var/build\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt update -y && apt upgrade -y && \\\n    apt install --no-install-recommends -y wget curl net-tools iputils-ping \\\n      zip unzip bzip2 apt-utils screen \\\n      htop xclip cmake sudo tree jq time && \\\n    apt install --no-install-recommends -y software-properties-common language-pack-zh-hans locales && locale-gen en_US.UTF-8 && \\\n    apt autoremove -y && apt clean -y && apt purge -y && rm -rf /tmp/* /var/tmp/* /root/.cpan/* && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository ppa:ubuntugis/ppa -y && apt update -y && \\\n    apt install --no-install-recommends -y --fix-missing \\\n      vim rsync gdebi-core pytho gdebi-core python2.7-dev git ripgrep zsh locate bison flex && \\\n    apt install --no-install-recommends -y --fix-missing \\\n      gdal-bin proj-bin psmisc r psmisc rrdtool libzmq3-dev \\\n      libjansson-dev libcairo2-dev libxt-dev librdf0 librdf0-dev \\\n      libudunits2-dev libproj-dev libapparmor1 libedit2 libc6 apt-transport-https \\\n      libtool libevent-dev \\\n      libx11-dev libxext-dev \\\n      libgdal-dev libgeos-dev \\\n      libclang-dev cscope libncurses5-dev && \\\n    apt autoremove -y && apt clean -y && apt purge -y && rm -rf /tmp/* /var/tmp/* /root/.cpan/* && rm -rf /var/lib/apt/lists/*;\n\n# neovim ctags gtags tmux\nRUN cd /tmp && \\\n    git clone --depth=1 https://gitclone.com/github.com/universal-ctags/ctags.git && cd ctags && \\\n    ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && \\\n    cd /tmp && \\\n    git clone --depth=1 https://gitclone.com/github.com/tmux/tmux.git && cd tmux && \\\n    ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && \\\n    cd /tmp && \\\n    curl -f -L https://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.16.tar.gz -o libiconv.tar.gz && \\\n    tar xzf libiconv.tar.gz && \\\n    cd libiconv-1.16 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make && make install && \\\n    cd /tmp && \\\n    curl -f -L https://www.openssl.org/source/openssl-1.1.1n.tar.gz -o openssl.tar.gz && \\\n    tar xzf openssl.tar.gz && \\\n    cd openssl-1.1.1n && ./config --prefix=/usr && make && make install && \\\n    cd /tmp && \\\n    curl -f -L https://ftp.gnu.org/pub/gnu/global/global-6.6.8.tar.gz -o global.tar.gz && \\\n    tar xzf global.tar.gz && \\\n    cd global-6.6.8 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --with-sqlite3 && make && make install && \\\n    apt autoremove -y && apt clean -y && apt purge -y && rm -rf /tmp/* /var/tmp/* /root/.cpan/* && rm libiconv.tar.gz\n\n# config dirs\nRUN mkdir -p /opt/config /opt/log /opt/rc && chmod -R 755 /opt/config /opt/log\n\n# code-server\nRUN cd /tmp && \\\n    curl -f -L https://github.do/https://github.com/coder/code-server/releases/download/v4.3.0/code-server-4.3.0-linux-amd64.tar.gz -o code-server.tar.gz && \\\n    tar xzf code-server.tar.gz && \\\n    mv code-server-4.3.0-linux-amd64 /opt/code-server && \\\n    rm -rf /tmp/*.* && rm code-server.tar.gz\nENV PASSWD=datasci\nEXPOSE 8080\nENTRYPOINT [\"bash\", \"/opt/config/entrypoint.sh\"]\nCOPY entrypoint.sh /opt/config/\n"
}