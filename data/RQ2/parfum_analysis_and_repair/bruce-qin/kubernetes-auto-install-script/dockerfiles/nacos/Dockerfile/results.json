{
  "startTime": 1674250544429,
  "endTime": 1674250545540,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 8,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#阶段一 修改mysql数据库连接版本 并构建\n\nFROM alpine AS build\n\nARG NACOS_VERSION=2.0.1\nARG SPRING_BOOT_VERSION=2.4.5\nARG MYSQL_VERSION=8.0.24\nARG MINA_IO_VERSION=2.1.4\nARG TOMCAT_EMBED_JASPER_VERSION=9.0.45\nARG PROTOC_VERSION=3.15.8\nARG GRPC_JAVA_VERSION=1.37.0\nARG PROTO_GOOGLE_COMMON_PROTOS_VERSION=2.1.0\nARG GSON_VERSION=2.8.6\n\nRUN apk add --no-cache wget openjdk8 maven tar protoc ;\\\n    apk add --no-cache --update --repository http://nl.alpinelinux.org/alpine/edge/testing grpc-java\nENV JAVA_HOME=/usr/lib/jvm/java-1.8-openjdk\nENV CLASSPATH=.:$JAVA_HOME/lib\nENV PATH=$PATH:$JAVA_HOME/bin\n\n\nWORKDIR /tmp\nRUN wget https://github.com/alibaba/nacos/archive/refs/tags/${NACOS_VERSION}.tar.gz ; \\\n        tar -xzf ${NACOS_VERSION}.tar.gz && rm ${NACOS_VERSION}.tar.gz\n\nRUN cd nacos-${NACOS_VERSION}; \\\n        sed -i \"$(sed -n -e '/<spring-boot-dependencies.version>/=' pom.xml)s/<spring-boot-dependencies.version>.*/<spring-boot-dependencies.version>${SPRING_BOOT_VERSION}<\\/spring-boot-dependencies.version>/g\" pom.xml;\\\n        sed -i \"$(sed -n -e '/<mysql-connector-java.version>/=' pom.xml)s/<mysql-connector-java.version>.*/<mysql-connector-java.version>${MYSQL_VERSION}<\\/mysql-connector-java.version>/g\" pom.xml;\\\n        sed -i \"$(sed -n -e '/<mina-core.version>/=' pom.xml)s/<mina-core.version>.*/<mina-core.version>${MINA_IO_VERSION}<\\/mina-core.version>/g\" pom.xml;\\\n        sed -i \"$(sed -n -e '/<tomcat-embed-jasper.version>/=' pom.xml)s/<tomcat-embed-jasper.version>.*/<tomcat-embed-jasper.version>${TOMCAT_EMBED_JASPER_VERSION}<\\/tomcat-embed-jasper.version>/g\" pom.xml;\\\n\tsed -i \"$(sed -n -e '/<protobuf-java.version>/=' pom.xml)s/<protobuf-java.version>.*/<protobuf-java.version>${PROTOC_VERSION}<\\/protobuf-java.version>/g\" pom.xml;\\\n\tsed -i \"$(sed -n -e '/<grpc-java.version>/=' pom.xml)s/<grpc-java.version>.*/<grpc-java.version>${GRPC_JAVA_VERSION}<\\/grpc-java.version>/g\" pom.xml;\\\n\tsed -i \"$(sed -n -e '/<proto-google-common-protos.version>/=' pom.xml)s/<proto-google-common-protos.version>.*/<proto-google-common-protos.version>${PROTO_GOOGLE_COMMON_PROTOS_VERSION}<\\/proto-google-common-protos.version>/g\" pom.xml;\\\n        # 更新grpc后gson作用域变成了runtime了，需要更新依赖，不然编译不过\n\tsed -i \"$(($(sed -n  -e '/<dependencies>/=' ./client/pom.xml)+1))i\\\\\\t<dependency>\\n\\t\\t<groupId>com.google.code.gson</groupId>\\n\\t\\t<artifactId>gson</artifactId>\\n\\t\\t<version>${GSON_VERSION}</version>\\n\\t</dependency>\" ./client/pom.xml;\\\n\tsed -i \"/<pluginArtifact>/d\" ./consistency/pom.xml ;\\\n        sed -i \"/<\\/pluginArtifact>/d\" ./consistency/pom.xml ;\\\n        sed -i \"/<pluginArtifact>/d\" ./istio/pom.xml ;\\\n        sed -i \"/<\\/pluginArtifact>/d\" ./istio/pom.xml ;\\\n        mvn -Prelease-nacos -Dmaven.test.skip=true clean install -DprotocExecutable=protoc -DpluginExecutable=protoc-gen-grpc-java\n\n#阶段二 拉取nacos官方镜像\nFROM nacos/nacos-server:2.0.1 AS standard\n\nRUN SED_LINE=$(sed -n -e '/DEFAULT_SEARCH_LOCATIONS=/=' ./bin/docker-startup.sh); \\\n        echo \"fix sed line: ${SED_LINE}\"; \\\n        sed -i \"${SED_LINE}s/file:/optional:file:/g\" ./bin/docker-startup.sh ; \\\n        sed -i \"${SED_LINE}s/classpath:/optional:classpath:/g\" ./bin/docker-startup.sh\n\n#阶段三 重新发布\nFROM  justtin/alpine-openjdk8-jre AS release\n\nARG NACOS_VERSION=2.0.1\n\n\nENV MODE=\"cluster\" \\\n        PREFER_HOST_MODE=\"ip\"\\\n        BASE_DIR=\"/home/nacos\" \\\n        CLASSPATH=\".:/home/nacos/conf:$CLASSPATH\" \\\n        CLUSTER_CONF=\"/home/nacos/conf/cluster.conf\" \\\n        FUNCTION_MODE=\"all\" \\\n        NACOS_USER=\"nacos\" \\\n        JVM_XMS=\"384m\" \\\n        JVM_XMX=\"1g\" \\\n        JVM_MS=\"128m\" \\\n        JVM_MMS=\"320m\" \\\n        JVM_XMN=\"256m\" \\\n        NACOS_DEBUG=\"n\" \\\n        JAVA=\"java\" \\\n        TOMCAT_ACCESSLOG_ENABLED=\"false\" \\\n        LANG=zh_CN.UTF-8 \\\n        JAVA_OPT_EXT=\"--server.tomcat.basedir=/home/nacos/logs\"\n\nWORKDIR /$BASE_DIR\n\nCOPY --from=standard $BASE_DIR/bin/ bin/\nCOPY --from=standard $BASE_DIR/conf/ conf/\nCOPY --from=standard $BASE_DIR/init.d/ init.d/\nCOPY --from=standard $BASE_DIR/logs/ logs/\nCOPY --from=build /tmp/nacos-${NACOS_VERSION}/distribution/target/nacos-server-${NACOS_VERSION}/nacos/target/nacos-server.jar target/\n\nRUN  apk add --no-cache bash libstdc++ dos2unix \\\n\t&& dos2unix bin/docker-startup.sh conf/* \\\n\t&& chmod +x bin/docker-startup.sh \\\n\t&& apk del dos2unix \\\n\t&& touch logs/start.out \\\n\t&& ln -sf /dev/stdout logs/start.out \\\n\t&& ln -sf /dev/stderr logs/start.out\n\nEXPOSE 8848\nENTRYPOINT [\"bash\", \"bin/docker-startup.sh\"]\n"
}