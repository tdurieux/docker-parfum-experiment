{
  "startTime": 1674218061774,
  "endTime": 1674218062908,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This generates a production image for RAIS with the S3 plugin enabled\n#\n# Examples:\n#\n#     # Simple case: just build the latest production image\n#     docker build --rm -t uolibraries/rais:latest -f ./docker/Dockerfile .\n#\n#     # Generate the build image to simplify local development\n#     docker build --rm -t uolibraries/rais:build --target build -f ./docker/Dockerfile .\nFROM golang:1 AS build\nLABEL maintainer=\"Jeremy Echols <jechols@uoregon.edu>\"\n\n# Install all the build dependencies\nRUN apt-get update -y && apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y libopenjp2-7-dev libmagickcore-dev git gcc make tar findutils && rm -rf /var/lib/apt/lists/*;\n\n# Make sure the build box can lint code\nRUN go get -u golang.org/x/lint/golint\n\n# Add the go mod stuff first so we aren't re-downloading dependencies except\n# when they actually change\nWORKDIR /opt/rais-src\nADD ./go.mod /opt/rais-src/go.mod\nADD ./go.sum /opt/rais-src/go.sum\nRUN go mod download\n\n# Make sure we don't just add every little thing, otherwise unimportant changes\n# trigger a rebuild\nADD ./Makefile /opt/rais-src/Makefile\nADD ./src /opt/rais-src/src\nADD ./scripts /opt/rais-src/scripts\nRUN make\n\n# Manually build the ImageMagick plugin since we exclude it by default\nRUN make bin/plugins/imagick-decoder.so\n\n\n\n# Production image just installs runtime deps and copies in the binaries\nFROM debian:buster AS production\nLABEL maintainer=\"Jeremy Echols <jechols@uoregon.edu>\"\n\n# Stolen from mariadb dockerfile: add our user and group first to make sure\n# their IDs get assigned consistently\nRUN groupadd -r rais && useradd -r -g rais rais\n\n# Install the core dependencies needed for both build and production\nRUN apt-get update -y && apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y libopenjp2-7 imagemagick && rm -rf /var/lib/apt/lists/*;\n\nENV RAIS_TILEPATH /var/local/images\nENV RAIS_PLUGINS \"*.so\"\nRUN touch /etc/rais.toml && chown rais:rais /etc/rais.toml\nCOPY --from=build /opt/rais-src/bin /opt/rais/\n\nUSER rais\nEXPOSE 12415\nENTRYPOINT [\"/opt/rais/rais-server\"]\n"
}