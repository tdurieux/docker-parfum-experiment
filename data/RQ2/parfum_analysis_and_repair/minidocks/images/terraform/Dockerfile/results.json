{
  "startTime": 1674246062462,
  "endTime": 1674246063174,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TERRAGRUNT_VERSION=0.36.1\nARG TERRAFORMER_VERSION=0.8.18\nARG TERRAFORMER_PROVIDER=all\n\nFROM minidocks/base AS terraform\nLABEL maintainer=\"Martin Haso≈à <martin.hason@gmail.com>\"\n\nRUN apk add --no-cache terraform@edge && clean\n\nCOPY rootfs /\n\nCMD [ \"terraform\" ]\n\nFROM terraform AS terragrunt\n\nARG TARGETARCH\nARG TERRAGRUNT_VERSION\n\nRUN wget -O /usr/bin/terragrunt \"https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_${TARGETARCH}\"\n\nFROM golang:alpine AS terraformer-build\n\nRUN apk add --no-cache git\n\nARG TERRAFORMER_VERSION\nARG TERRAFORMER_PROVIDER\n\nRUN wget -O tf.tar.gz \"https://github.com/GoogleCloudPlatform/terraformer/archive/refs/tags/${TERRAFORMER_VERSION}.tar.gz\" \\\n    && tar -xzf tf.tar.gz && mv terraformer*/ terraformer && rm tf.tar.gz\n\nWORKDIR /go/terraformer\n\nRUN go mod download\n\nRUN go run build/main.go \"$TERRAFORMER_PROVIDER\"\n\nFROM terraform AS terraformer\n\nARG TERRAFORMER_PROVIDER\n\nCOPY --from=terraformer-build \"/go/terraformer/terraformer-${TERRAFORMER_PROVIDER}\" /usr/local/bin/terraformer\n\nFROM terraform AS latest\n"
}