{
  "startTime": 1674251985490,
  "endTime": 1674251986760,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 37,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 74,
        "columnEnd": 98
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 36,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 10,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG version=3.10\nARG suffix=\"\"\n\nFROM minidocks/base:3.15 AS base_2.7\n\nFROM minidocks/base:3.15-build AS base_2.7-build\n\nFROM minidocks/base:3.13 AS base_3.8\n\nFROM minidocks/base:3.13-build AS base_3.8-build\n\nFROM minidocks/base:3.15 AS base_3.9\n\nFROM minidocks/base:3.15-build AS base_3.9-build\n\nFROM minidocks/base:3.16 AS base_3.10\n\nFROM minidocks/base:3.16-build AS base_3.10-build\n\nFROM base_$version$suffix AS latest\nLABEL maintainer=\"Martin Hasoň <martin.hason@gmail.com>\"\n\nARG version\n\nENV PIP_NO_COMPILE=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    PIP_CACHE_DIR=/pip-cache \\\n    PIPENV_VENV_IN_PROJECT=1 \\\n    CLEAN=\"$CLEAN:\\$PIP_CACHE_DIR/:pyclean\"\n\nCOPY rootfs /\n\n# make some useful symlinks that are expected to exist\nRUN if [ \"${version::1}\" = 3 ]; then \\\n        ln -s /usr/bin/python3 /usr/bin/python; \\\n        ln -s /usr/bin/pip3 /usr/bin/pip; \\\n        ln -s /usr/bin/easy_install-$version /usr/bin/easy_install; \\\n        ln -s /usr/bin/pydoc3 /usr/bin/pydoc; \\\n        ln -s /usr/bin/python3-config /usr/bin/python-config; \\\n    fi\n\nRUN mkdir \"$PIP_CACHE_DIR\" && chmod a+rwx \"$PIP_CACHE_DIR\" \\\n    && apk add --no-cache \"python${version::1}\" && \"python${version::1}\" -m ensurepip --upgrade \\\n    && pip install --no-cache-dir -U pip setuptools wheel \\\n    && clean\n\nRUN if [ \"${version::1}\" = 2 ]; then \\\n pip install --no-cache-dir micropipenv==1.2.0; else pip install --no-cache-dir micropipenv; fi && clean\n\nCMD [ \"python\" ]\n\nFROM latest AS packaging\n\nARG version\n\nRUN if [ \"${version::1}\" = 3 ]; then \\\n        apk add --no-cache py3-cryptography && pip install --no-cache-dir poetry flit; \\\n    fi && pip install --no-cache-dir virtualenv pipenv twine && clean\n\nFROM packaging AS build\n\nARG version\n\nRUN apk -U --no-cache add \"python${version::1}-dev\" libffi-dev openssl-dev && clean\n\nFROM latest AS uwsgi\nLABEL maintainer=\"Martin Hasoň <martin.hason@gmail.com>\"\n\nRUN apk --update --no-cache add nginx \\\n        uwsgi \\\n        uwsgi-alarm_curl \\\n        uwsgi-cache \\\n        uwsgi-carbon \\\n        uwsgi-cgi \\\n        uwsgi-cheaper_backlog2 \\\n        uwsgi-cheaper_busyness \\\n        uwsgi-corerouter \\\n        uwsgi-curl_cron \\\n        uwsgi-dumbloop \\\n        uwsgi-dummy \\\n        uwsgi-echo \\\n        uwsgi-emperor_amqp \\\n        uwsgi-emperor_pg \\\n        uwsgi-emperor_zeromq \\\n        uwsgi-fastrouter \\\n        uwsgi-forkptyrouter \\\n        uwsgi-geoip \\\n        uwsgi-gevent \\\n        uwsgi-gevent3 \\\n        uwsgi-graylog2 \\\n        uwsgi-http \\\n        uwsgi-legion_cache_fetch \\\n        uwsgi-logcrypto \\\n        uwsgi-logfile \\\n        uwsgi-logpipe \\\n        uwsgi-logsocket \\\n        uwsgi-logzmq \\\n        uwsgi-lua \\\n        uwsgi-msgpack \\\n        uwsgi-nagios \\\n        uwsgi-notfound \\\n        uwsgi-pam \\\n        uwsgi-ping \\\n        uwsgi-pty \\\n        uwsgi-python3 \\\n        uwsgi-rawrouter \\\n        uwsgi-redislog \\\n        uwsgi-router_basicauth \\\n        uwsgi-router_cache \\\n        uwsgi-router_expires \\\n        uwsgi-router_hash \\\n        uwsgi-router_http \\\n        uwsgi-router_memcached \\\n        uwsgi-router_metrics \\\n        uwsgi-router_radius \\\n        uwsgi-router_redirect \\\n        uwsgi-router_redis \\\n        uwsgi-router_rewrite \\\n        uwsgi-router_static \\\n        uwsgi-router_uwsgi \\\n        uwsgi-rpc \\\n        uwsgi-rrdtool \\\n        uwsgi-rsyslog \\\n        uwsgi-signal \\\n        uwsgi-spooler \\\n        uwsgi-sslrouter \\\n        uwsgi-stats_pusher_file \\\n        uwsgi-stats_pusher_socket \\\n        uwsgi-stats_pusher_statsd \\\n        uwsgi-symcall \\\n        uwsgi-syslog \\\n        uwsgi-transformation_chunked \\\n        uwsgi-transformation_gzip \\\n        uwsgi-transformation_offload \\\n        uwsgi-transformation_template \\\n        uwsgi-transformation_tofile \\\n        uwsgi-tuntap \\\n        uwsgi-ugreen \\\n        uwsgi-webdav \\\n        uwsgi-xslt \\\n        uwsgi-zabbix \\\n        uwsgi-zergpool \\\n    && clean\n\nCOPY rootfs-uwsgi /\n\nCMD [ \"uwsgi\", \"--ini\", \"/etc/uwsgi/uwsgi.ini\" ]\n\nFROM latest\n"
}