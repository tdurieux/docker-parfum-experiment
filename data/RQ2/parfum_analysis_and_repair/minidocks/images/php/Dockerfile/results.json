{
  "startTime": 1674217115918,
  "endTime": 1674217117585,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 39,
        "columnEnd": 182
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG version=8.1\nARG major=8\nARG composer1_version=1.10.26\nARG composer2_version=2.3.7\nARG blackfire_version=1.78.0\nARG newrelic_version=9.21.0.311\n\nFROM minidocks/base:3.15 AS v7.4\n\nFROM minidocks/base:3.16 AS v8.0\n\nFROM minidocks/base:3.16 AS v8.1\n\nFROM v$version AS base\nLABEL maintainer=\"Martin Haso≈à <martin.hason@gmail.com>\"\n\nARG version\nARG major\n\n# 82 is the standard uid/gid for \"www-data\" in Alpine\nRUN getent group www-data >/dev/null || addgroup -g 82 -S www-data; getent passwd www-date >/dev/null || adduser -u 82 -S -s /bin/sh -G www-data www-data\n\nRUN if [ \"$version\" = \"8.1\" ]; then suffix=\"81\"; else suffix=\"$major\"; fi \\\n    && for module in ctype curl iconv json mbstring openssl pcntl pecl-apcu phar posix tokenizer; do modules=\"$modules php$suffix-$module\"; done \\\n    && if [ \"$version\" == \"7.2\" ]; then libiconv_version=\"@community\"; fi \\\n    && apk add --no-cache \"gnu-libiconv$libiconv_version\" \"php$suffix\" $modules && clean \\\n    && if [ ! -f /usr/bin/php ]; then ln -s \"/usr/bin/php$suffix\" /usr/bin/php; fi \\\n    && if [ ! -f /usr/bin/phar ]; then ln -s \"/usr/bin/phar$suffix\" /usr/bin/phar; fi \\\n    && if [ ! -d /etc/php$major ]; then ln -s \"/etc/php$suffix\" \"/etc/php$major\"; fi \\\n    && if [ ! -d /usr/lib/php$major ]; then ln -s \"/usr/lib/php$suffix\" \"/usr/lib/php$major\"; fi\n\nENV LD_PRELOAD /usr/lib/preloadable_libiconv.so php\n\n#Psysh\nRUN wget https://psysh.org/psysh && chmod +x psysh && mv psysh /usr/bin/psysh\n\nENV PHP_INI_DIR=/etc/php$major \\\n    PHP_ERROR_LOG=/dev/stderr.pipe \\\n    COMPOSER_ALLOW_SUPERUSER=1 \\\n    COMPOSER_HOME=/composer \\\n    COMPOSER_CACHE_DIR=/composer-cache \\\n    COMPOSER_HTACCESS_PROTECT=0 \\\n    COMPOSER_MEMORY_LIMIT=-1 \\\n    CLEAN=\"$CLEAN:\\$COMPOSER_CACHE_DIR/\"\n\nARG composer1_version\nARG composer2_version\n\nRUN mkdir -p /var/www \"$COMPOSER_HOME\" \"$COMPOSER_CACHE_DIR\" && chown www-data:www-data /var/www \"$COMPOSER_HOME\" \"$COMPOSER_CACHE_DIR\" && chmod a+rwx \"$COMPOSER_HOME\" \"$COMPOSER_CACHE_DIR\"\n\n# Composer\nRUN php --version && wget -O composer-setup.php https://getcomposer.org/installer \\\n    && php composer-setup.php --install-dir=/usr/bin --filename=composer1.phar --version=\"$composer1_version\" \\\n    && php composer-setup.php --install-dir=/usr/bin --filename=composer2.phar --version=\"$composer2_version\" \\\n    && php -r \"unlink('composer-setup.php');\" \\\n    && clean\n\nCOPY rootfs /\n\nCMD [ \"psysh\", \"-c\", \"/etc/psysh\" ]\n\nFROM base AS latest\n\nARG version\nARG major\n\nRUN if [ \"$version\" = \"8.1\" ]; then suffix=\"81\"; else suffix=\"$major\"; fi \\\n    && for module in \\\n        bcmath \\\n        calendar \\\n        cgi \\\n        dom \\\n        exif \\\n        fileinfo \\\n        fpm \\\n        ftp \\\n        gd \\\n        gettext \\\n        gmp \\\n        ldap \\\n        mysqli \\\n        mysqlnd \\\n        opcache \\\n        pecl-redis \\\n        pecl-xdebug \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        pdo_sqlite \\\n        pgsql \\\n        session \\\n        simplexml \\\n        soap \\\n        sockets \\\n        sodium \\\n        sqlite3 \\\n        xml \\\n        xmlreader \\\n        xmlwriter \\\n        xsl \\\n        zip \\\n    ; do modules=\"$modules php$suffix-$module\"; done \\\n    && if [ \"$major\" != \"8\" ]; then modules=\"$modules php$suffix-xmlrpc\"; else modules=\"$modules php$suffix-pecl-xmlrpc@edge\"; fi \\\n    && if [ \"$major\" = \"8\" ] || [ \"$version\" = \"7.4\" ]; then modules=\"$modules php$suffix-ffi\"; fi \\\n    && if [ \"$version\" != \"7.2\" ]; then modules=\"$modules php$suffix-pecl-uploadprogress\"; fi \\\n    && if [ \"$version\" != \"8.1\" ]; then modules=\"$modules php$suffix-pecl-mcrypt\"; else modules=\"$modules php$suffix-pecl-mcrypt@edge\"; fi \\\n    && apk add --no-cache $modules \\\n    && if [ ! -f /usr/bin/php-fpm ]; then ln -s \"/usr/sbin/php-fpm$([ \"$version\" = \"8.1\" ] && echo \"81\" || echo $major)\" /usr/bin/php-fpm; fi \\\n    && clean\n\nENV PHP_EXT_XDEBUG=0 \\\n    FPM_PID=run/php-fpm.pid \\\n    FPM_DAEMONIZE=no \\\n    FPM_ERROR_LOG=/dev/stderr.pipe \\\n    FPM_WWW_ACCESS__LOG=/dev/stdout.pipe \\\n    FPM_WWW_CATCH_WORKERS_OUTPUT=yes \\\n    FPM_WWW_CLEAR_ENV=no \\\n    FPM_WWW_GROUP=www-data \\\n    FPM_WWW_LISTEN=\"[::]:9000\" \\\n    FPM_WWW_USER=www-data \\\n    FPM_WWW_SLOWLOG=/dev/stdout.pipe \\\n    PHP_XDEBUG__REMOTE_ENABLE=1 \\\n    PHP_XDEBUG__REMOTE_HOST=172.17.0.1 \\\n    PHP_XDEBUG__REMOTE_PORT=9000 \\\n    PHP_XDEBUG__REMOTE_CONNECT_BACK=0 \\\n    PHP_XDEBUG__IDEKEY=PHPSTORM \\\n    RAWEXEC=\"$RAWEXEC php-fpm php-fpm$major\"\n\nARG TARGETARCH\nARG blackfire_version\n\n# Blackfire\nRUN wget -O \"/usr/lib/php${major}/modules/blackfire.so\" https://packages.blackfire.io/binaries/blackfire-php/${blackfire_version}/blackfire-php-alpine_${TARGETARCH}-php-${version/./}.so \\\n    && mkdir /var/run/blackfire \\\n    && chmod a+x /var/run/blackfire/ \"/usr/lib/php${major}/modules/blackfire.so\" \\\n    && echo -e \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8307\" > \"${PHP_INI_DIR}/conf.d/blackfire.ini\"\n\nARG newrelic_version\n\n# NewRelic\nRUN if [ \"$TARGETARCH\" = amd64 ]; then \\\n wget -O /tmp/nr.tar.gz \"https://download.newrelic.com/php_agent/archive/${newrelic_version}/newrelic-php5-${newrelic_version}-linux-musl.tar.gz\" \\\n    && tar -xzf /tmp/nr.tar.gz -C /tmp \\\n    && NR_INSTALL_SILENT=1 NR_INSTALL_USE_CP_NOT_LN=1 NR_INSTALL_INITFILE=/tmp/nr NR_INSTALL_DAEMONPATH=/tmp/nr-daemon /tmp/newrelic*/newrelic-install install \\\n    && rm -rf /etc/newrelic && clean; rm /tmp/nr.tar.gz fi\n\nEXPOSE 9000\n\nFROM latest AS nginx\n\nRUN apk add --no-cache nginx && clean\n\nCOPY rootfs-nginx /\n\n# Fix https://gitlab.alpinelinux.org/alpine/aports/-/issues/9364\nRUN chmod 1777 /var/lib/nginx/tmp\n\nFROM nginx AS intl\n\nARG version\nARG major\n\nRUN if [ \"$version\" = \"8.1\" ]; then suffix=\"81\"; else suffix=\"$major\"; fi \\\n    && apk add --no-cache \"php$suffix-intl\" && clean\n\nFROM latest\n"
}