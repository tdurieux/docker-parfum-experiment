{
  "startTime": 1674253570922,
  "endTime": 1674253572304,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 19,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 14,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.13\n# 3.12 alpine contains node 12.x.x which is specified in frontend/.nvmrc\n# alpine 3.13 + has node v14+, which is incompatible atm with frontend\n# 3.10 has incorrect version , but doesnt have issues with mariadb\n\nENV DB_DATA_PATH=/var/lib/mysql \\\n    DB_ROOT_PASS=pypass_root \\\n    DB_USER=pychat \\\n    DB_PASS=pypass \\\n    NGINX_VERSION=1.15.3 \\\n    NGINX_UPLOAD_MODULE_VERSION=2.3.0\n\nWORKDIR /srv/http\n\nRUN set -x &&\\\n    apk update &&\\\n    apk add --no-cache --virtual .build-deps \\\n            gcc \\\n            libc-dev \\\n            make \\\n            gettext \\\n            pcre-dev \\\n            zlib-dev \\\n            gnupg \\\n            libxslt-dev \\\n            gd-dev \\\n            geoip-dev \\\n            jpeg-dev \\\n            mariadb-dev \\\n            python3-dev \\\n            build-base \\\n            mariadb-client \\\n            linux-headers &&\\\n    apk add --no-cache \\\n            tzdata \\\n            mariadb-connector-c \\\n            redis \\\n            yarn \\\n            nodejs \\\n            python3 \\\n            openrc \\\n            mariadb \\\n            coturn \\\n            git \\\n            coturn-openrc \\\n            curl \\\n            bash \\\n            libffi-dev \\\n            vim \\\n            py3-pip\n# mariadb-client - mysqlamin for db install\n# mariadb-connector-c  for pip install mysqlclient\nCOPY ./download_content.sh .\n\n# compile nginx with upload module\nRUN  set -x && \\\n    bash download_content.sh build_nginx $NGINX_VERSION $NGINX_UPLOAD_MODULE_VERSION /tmp/runDepsFile &&\\\n    runDeps=$(cat /tmp/runDepsFile) &&\\\n    rm /tmp/runDepsFile &&\\\n    apk add --no-cache --virtual .nginx-rundeps $runDeps &&\\\n    mv /tmp/envsubst /usr/local/bin/\n\n# https://github.com/gliderlabs/docker-alpine/issues/297#issuecomment-368695866 libffi-dev\n\nCOPY ./backend/requirements.txt ./backend/\n\nRUN set -x && pip install --no-cache-dir -r backend/requirements.txt\n\n\n# copies files from .dockerignore\nCOPY . ./\n\n# 2022-04-03  9:46:54 0 [ERROR] mysqld: Got error 'File size bigger than expected' when trying to use aria control file '/var/lib/mysql/aria_log_control'\n# w/o /var/lib/mysql/aria_log_control mysql wont start, seems like createdb creates invalid file\n\n\n# this doesn't print errors to sdterr :(\n#     ln -sf /dev/stderr /var/mysql.err && \\\nRUN set -x && \\\n    ln -s `which python3` \"$(dirname `which python3`)/python\" &&\\\n    sed -i 's/^\\(tty\\d\\:\\:\\)/#\\1/g' /etc/inittab &&\\\n    sed -i \\\n        -e 's/#rc_sys=\".*\"/rc_sys=\"docker\"/g' \\\n        -e 's/#rc_env_allow=\".*\"/rc_env_allow=\"\\*\"/g' \\\n        -e 's/#rc_crashed_stop=.*/rc_crashed_stop=NO/g' \\\n        -e 's/#rc_crashed_start=.*/rc_crashed_start=YES/g' \\\n        -e 's/#rc_provide=\".*\"/rc_provide=\"loopback net\"/g' \\\n        /etc/rc.conf &&\\\n    rm -f /etc/init.d/hwdrivers \\\n        /etc/init.d/hwclock \\\n        /etc/init.d/hwdrivers \\\n        /etc/init.d/modules \\\n        /etc/init.d/modules-load \\\n        /etc/init.d/modloop &&\\\n    sed -i 's/cgroup_add_service /# cgroup_add_service /g' /lib/rc/sh/openrc-run.sh &&\\\n    sed -i 's/VSERVER/DOCKER/Ig' /lib/rc/sh/init.sh &&\\\n    sed -ie 's/use net/use net\\n\\tneed populate/g' /etc/init.d/mariadb &&\\\n    sed -ie 's/use net localmount logger/use net localmount logger\\n\\tneed populate/g' /etc/init.d/redis &&\\\n    sed -ie 's/logfile .*/logfile \\/dev\\/stdout/g' /etc/redis.conf && \\\n    sed -ie 's/--syslog //g' /etc/init.d/mariadb && \\\n    sed -ie 's/\\[mysqld\\]/[mysqld]\\nslow_query_log = 1 \\n slow_query_log_file=\\/dev\\/stdout \\n general_log = 1 \\n general_log_file=\\/tmp\\/mysql.out \\n log_error=\\/tmp\\/mysql.err \\n/g' /etc/my.cnf.d/mariadb-server.cnf && \\\n    adduser -D -g '' http &&\\\n    addgroup -S nginx &&\\\n    adduser -D -S -h /var/cache/nginx -s /sbin/nologin -G nginx nginx &&\\\n    addgroup nginx tty &&\\\n    addgroup mysql tty && \\\n    mv ./docker/populate /etc/init.d/  &&\\\n    mv ./docker/tornado /etc/init.d/ &&\\\n    mv ./docker/nginx /etc/init.d/ &&\\\n    mv ./docker/nginx.conf /etc/nginx/ && \\\n    cp ./backend/chat/settings_docker.py ./backend/chat/settings.py &&\\\n    echo 'SECRET_KEY=\"123\"'>> ./backend/chat/settings.py &&\\\n    rm -f /tmp/mysql.err && \\\n    rm -f /tmp/mysql.out && \\\n    bash download_content.sh create_db && \\\n    rm -f /tmp/mysql.err && \\\n    rm -f /tmp/mysql.out && \\\n    rm ./backend/chat/settings.py && \\\n    rm -rf ./docker &&\\\n    mv /var/lib/mysql ./mysql &&\\\n    chmod a+x /etc/init.d/tornado &&\\\n    chmod a+x /etc/init.d/populate &&\\\n    chmod a+x /etc/init.d/nginx &&\\\n    rc-update add mariadb default &&\\\n    rc-update add nginx default &&\\\n    rc-update add populate default &&\\\n    rc-update add tornado default &&\\\n    rc-update add redis default &&\\\n    rc-update add turnserver default &&\\\n    chown -R http:http . &&\\\n    rm -rf /var/lib/redis &&\\\n    mv ./backend/chat/migrations . &&\\\n    ln -sf /data/settings.py ./backend/chat/settings.py && \\\n    ln -sf /data/production.json ./frontend/build/production.json && \\\n    ln -sf /data/turnserver.conf /etc/coturn/turnserver.conf && \\\n    mkdir /etc/nginx/ssl &&\\\n    ln -sf /data/certificate.crt /etc/nginx/ssl && \\\n    ln -sf /data/server.key /etc/nginx/ssl && \\\n    ln -sf /data/photos ./backend && \\\n    ln -sf /data/redis /var/lib && \\\n    ln -sf /data/mysql /var/lib && \\\n    ln -sf /dev/stderr /var/log/nginx/error.log && \\\n    ln -sf /data/migrations ./backend/chat\n\nRUN cd frontend && yarn install --frozen-lockfile && yarn cache clean;\n\nVOLUME [ \"/sys/fs/cgroup\" ]\n\nEXPOSE 443\nCMD [\"/sbin/init\"]\n\n\n\n"
}