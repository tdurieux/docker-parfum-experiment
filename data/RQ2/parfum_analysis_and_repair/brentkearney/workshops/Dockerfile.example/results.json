{
  "startTime": 1674255151365,
  "endTime": 1674255152722,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 6,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 6,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 6,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "# See: https://github.com/phusion/passenger-docker\n# Latest image versions: https://github.com/phusion/passenger-docker/blob/master/CHANGELOG.md\nFROM phusion/passenger-ruby26:1.0.10\n\nENV HOME /root\n\n# Use baseimage-docker's init process.\nCMD [\"/sbin/my_init\"]\n\n# prevent gpg from using IPv6 to connect to keyservers\nRUN mkdir -p ~/.gnupg\nRUN echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf\n\n# Yarn package\nRUN curl -f -sS https://raw.githubusercontent.com/yarnpkg/releases/gh-pages/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\n# Postgres\nRUN curl -f -sS https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\n\nRUN apt-get update -qq && apt-get dist-upgrade --yes && \\\n  apt-get install --no-install-recommends --yes pkg-config apt-utils build-essential cmake automake \\\n  && apt-get upgrade --fix-missing --yes --allow-remove-essential \\\n  -o Dpkg::Options::=\"--force-confold\" && rm -rf /var/lib/apt/lists/*;\n\n  RUN apt-get install --no-install-recommends --yes tzdata udev locales curl git gnupg ca-certificates \\\n      libpq-dev nodejs wget libxrender1 libxext6 libsodium23 libsodium-dev yarn \\\n      gcc make zlib1g-dev sqlite3 libgmp-dev libc6-dev gcc-multilib g++-multilib \\\n      && apt-get clean && apt-get autoremove --yes \\\n      && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Use en_CA.utf8 as our locale\nRUN locale-gen en_CA.utf8\nENV LANG en_CA.utf8\nENV LANGUAGE en_CA:en\nENV LC_ALL en_CA.utf8\n\n# Container uses 999 for docker user\nRUN /usr/sbin/usermod -u 999 app\n\n#ADD rails-env.conf /etc/nginx/main.d/rails-env.conf\n#RUN chmod 644 /etc/nginx/main.d/rails-env.conf\nENV APP_HOME /home/app/workshops\nADD . $APP_HOME\nWORKDIR $APP_HOME\nRUN rm docker-compose.yml\nRUN rm Dockerfile\nRUN touch config/app.yml\nRUN echo \"disable-ipv6\" >> ~/.gnupg/dirmngr.conf\nRUN chown app -R ./\n\nEXPOSE 80 443\nADD entrypoint.sh /sbin/\nRUN rm entrypoint.sh\nRUN chmod 755 /sbin/entrypoint.sh\nRUN mkdir -p /etc/my_init.d\nRUN ln -s /sbin/entrypoint.sh /etc/my_init.d/entrypoint.sh\nRUN echo 'export PATH=$PATH:./bin:/usr/local/rvm/rubies/ruby-2.6.6/bin' >> /root/.bashrc\nRUN echo 'alias rspec=\"bundle exec rspec\"' >> /root/.bashrc\nENTRYPOINT [\"/sbin/entrypoint.sh\"]\n"
}