{
  "startTime": 1674216135722,
  "endTime": 1674216136855,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 115
      }
    }
  ],
  "repairedDockerfile": "# Since deskmate-sdl2 depends on the desmkate library,\n# this Docker image has to be constructed from the repo's\n# root directory:\n# docker build -f ./code/sdl2/Dockerfile.ubuntu -t deskmate-sdl2-ubuntu .\nFROM ubuntu:20.04\n\nENV TZ=America/New_York\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install git make cmake clang clang-format ninja-build libsdl2-dev libsdl2-ttf-dev libsdl2-gfx-dev && rm -rf /var/lib/apt/lists/*;\n\n# Paho dependencies.\nRUN apt-get -y --no-install-recommends install build-essential gcc make cmake cmake-gui cmake-curses-gui libssl-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /app\n\nWORKDIR /app/code/sdl2\n\n# Install dependencies\nRUN git submodule update --init --recursive && \\\n    cd third-party/paho.mqtt.c && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -GNinja -DPAHO_WITH_SSL=TRUE -DPAHO_BUILD_SAMPLES=TRUE .. && \\\n    ninja\n\n# Build deskmate-sdl2\nRUN cd /app/code/sdl2 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make"
}