{
  "startTime": 1674217160679,
  "endTime": 1674217161997,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 45,
        "columnStart": 3,
        "columnEnd": 4
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 3,
        "columnEnd": 99
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 3,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 3
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build from the official docker python base image, based on Debian\nFROM python:3.6-stretch\n\n# Install pre-reqs (commented ones are already in base image)\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n#curl \\\ndoxygen \\\nemacs \\\nffmpeg \\\n#g++ \\\ngsl-bin \\\nhdf5-tools \\\nless \\\nlibboost-all-dev \\\nlibeigen3-dev \\\nlibgsl-dev \\\nlibhdf5-serial-dev \\\nlibxpm-dev \\\nopenmpi-bin \\\nrsync \\\nswig \\\nvalgrind \\\nvim \\\n#zlib1g-dev \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Install additional useful python packages\nRUN pip install --no-cache-dir --upgrade pip \\\n&& pip install --no-cache-dir \\\nemcee==2.2.1 \\\nh5py \\\nhic \\\nhsluv \\\njupyter \\\nmatplotlib \\\nnbdime \\\nnumpy \\\npandas \\\npathlib \\\nptemcee \\\npyhepmc_ng \\\npyyaml \\\nscikit-learn \\\nscipy \\\nseaborn \\\ntqdm\n\n# We need cmake >= 3.13.5 for the analysis package heppy\nRUN cd /opt \\\n&& wget https://github.com/Kitware/CMake/releases/download/v3.17.0/cmake-3.17.0-Linux-x86_64.sh \\\n&& echo \"y\" | bash ./cmake-3.17.0-Linux-x86_64.sh \\\n&& ln -s /opt/cmake-3.17.0-Linux-x86_64/bin/* /usr/local/bin\n\n# Install ROOT6 from source\nENV ROOTSYS=\"/usr/local/root\"\nENV PATH=\"${ROOTSYS}/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"${ROOTSYS}/lib:${LD_LIBRARY_PATH}\"\nENV PYTHONPATH=\"${ROOTSYS}/lib\"\nRUN mkdir -p ${ROOTSYS} && mkdir -p ${HOME}/root && cd ${HOME}/root \\\n&& git clone --depth 1 --branch v6-18-04 https://github.com/root-project/root.git src \\\n&& mkdir build && cd build \\\n&& cmake ../src -DCMAKE_INSTALL_PREFIX=${ROOTSYS} \\\n&& make -j8 install \\\n&& rm -r ${HOME}/root\n\n# Install HepMC 3.1.1\nRUN curl -f -SL https://hepmc.web.cern.ch/hepmc/releases/HepMC3-3.1.1.tar.gz | tar -xvzC /usr/local \\\n&& cd /usr/local \\\n&& mkdir hepmc3-build \\\n&& cd hepmc3-build \\\n&& cmake ../HepMC3-3.1.1 -DCMAKE_INSTALL_PREFIX=/usr/local -DHEPMC3_ENABLE_ROOTIO=ON -DROOT_DIR=${ROOTSYS} -DHEPMC3_BUILD_EXAMPLES=ON \\\n&& make -j8 install \\\n&& rm -r /usr/local/hepmc3-build\nENV LD_LIBRARY_PATH=\"/usr/local/lib:${LD_LIBRARY_PATH}\"\n\n# Install Pythia8 (8.235 is needed by SMASH, and it should be installed in a folder called pythia8235)\nRUN curl -f -SL https://home.thep.lu.se/~torbjorn/pythia8/pythia8235.tgz \\\n| tar -xvzC /usr/local \\\n&& cd /usr/local/pythia8235 \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --prefix=/usr/local/pythia8235 --with-hepmc3=/usr/local/HepMC3-3.1.1 \\\n&& make -j8 \\\n&& make -j8 install\n\n# Set environmental variables for cmake to know where things are (needed for SMASH, heppy)\nARG username=jetscape-user\nENV JETSCAPE_DIR=\"/home/${username}/JETSCAPE\"\nENV SMASH_DIR=\"${JETSCAPE_DIR}/external_packages/smash/smash_code\"\nENV EIGEN3_ROOT /usr/include/eigen3\nENV PYTHIA8DIR /usr/local/pythia8235\nENV PYTHIA8_ROOT_DIR /usr/local/pythia8235\nENV PATH $PATH:$PYTHIA8DIR/bin\n\n# Build heppy (various HEP tools via python)\nRUN git clone https://github.com/matplo/heppy.git \\\n&& cd heppy \\\n&& ./external/fastjet/build.sh \\\n&& ./external/lhapdf6/build.sh \\\n&& ./external/hepmc2/build.sh \\\n&& ./cpptools/build.sh\n\n# Install environment modules\nRUN curl -f -SL https://sourceforge.net/projects/modules/files/Modules/modules-4.5.1/modules-4.5.1.tar.gz \\\n| tar -xvzC /usr/local \\\n&& cd /usr/local/modules-4.5.1 \\\n&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --modulefilesdir=/heppy/modules \\\n&& make -j8 \\\n&& make -j8 install\n\n# To load heppy, from inside the container:\n# source /usr/local/init/profile.sh\n# module load heppy/1.0\n\n# Set up a user group\nARG id=1234\nRUN groupadd -g ${id} ${username} \\\n&& useradd --create-home --home-dir /home/${username} -u ${id} -g ${username} ${username}\nUSER ${username}\nENV HOME /home/${username}\nWORKDIR ${HOME}\n\nENTRYPOINT /bin/bash\n"
}