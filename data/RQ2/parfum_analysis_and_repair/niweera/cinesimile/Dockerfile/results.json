{
  "startTime": 1674250142955,
  "endTime": 1674250143518,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Project\n# ------------------------------------------------------\nFROM node:lts-buster-slim as builder\n\nWORKDIR /frontend\n\nCOPY package*.json ./\n\nRUN npm install --only=production --silent && npm cache clean --force;\n\nCOPY . .\n\nRUN npm run build\n\nRUN rm -rf node_modules public src *.json\n\n# Production\n# ------------------------------------------------------\nFROM alpine:3.7\nCOPY --from=builder /frontend/build ./www\n\n# Add nginx\nRUN apk add --no-cache --update nginx\n\n# Create the directories workflow\nRUN mkdir -p /var/log/nginx\nRUN mkdir -p /var/www/html\n\n# Copy the nginx configuration files\nCOPY nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY nginx/default.conf /etc/nginx/conf.d/default.conf\n\n# copy the built app to our served directory\nRUN cp -r www/* /var/www/html\n\n# make all files belongs to the nginx user\nRUN chown nginx:nginx /var/www/html\n\nEXPOSE 80\n\n# start nginx\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}