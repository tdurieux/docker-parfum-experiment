{
  "startTime": 1674255942655,
  "endTime": 1674255943138,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 16,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:alpine\n\n# Add Bash\nRUN echo \"ipv6\" >> /etc/modules\n\n# Install Mongo (we only need the client)\nRUN echo 'http://nl.alpinelinux.org/alpine/edge/main' >> /etc/apk/repositories && \\\n  echo 'http://nl.alpinelinux.org/alpine/edge/community' >> /etc/apk/repositories && \\\n  echo 'http://nl.alpinelinux.org/alpine/edge/testing' >> /etc/apk/repositories && \\\n  apk update && \\\n  apk upgrade && \\\n  apk add --no-cache mongodb\n\nRUN apk --update add --virtual build-dependencies build-base ruby-dev openssl-dev \\\n  libxml2-dev libxslt-dev libc-dev linux-headers curl \\\n  nodejs tzdata bash && \\\n  rm -rf /var/cache/apk/*\n\nRUN echo \"@edge http://nl.alpinelinux.org/alpine/edge/main\" >> /etc/apk/repositories && \\\n  apk update && apk add --no-cache \"postgresql-dev@edge<9.6\" \"postgresql-client@edge<9.6\"\n\nADD Gemfile /app/\nADD Gemfile.lock /app/\n\nRUN gem install bundler && \\\n    cd /app ; bundle install --without development test\n\nADD . /app\nRUN chown -R nobody:nogroup /app\nUSER nobody\n\nEXPOSE 5000\nENV PORT 5000\nENV RAILS_ENV production\nENV RAILS_LOG_TO_STDOUT true\nENV RAILS_SERVE_STATIC_FILES true\n\n\nWORKDIR /app\n\nCMD [\"./run.sh\"]\n"
}