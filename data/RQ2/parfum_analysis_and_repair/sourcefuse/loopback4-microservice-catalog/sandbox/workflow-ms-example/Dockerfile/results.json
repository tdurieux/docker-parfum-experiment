{
  "startTime": 1674218624470,
  "endTime": 1674218626052,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Check out https://hub.docker.com/_/node to select a new base image\nFROM node:16-alpine\n\n# Set to a non-root built-in user `node`\nUSER node\n\n# Create app directory (with user `node`)\nRUN mkdir -p /home/node/app\n\nWORKDIR /home/node/app\n\nARG WORKFLOW_MIGRATION_SKIP\nENV WORKFLOW_MIGRATION_SKIP=$WORKFLOW_MIGRATION_SKIP\nARG WORKFLOW_MIGRATION_COPY\nENV WORKFLOW_MIGRATION_COPY=$WORKFLOW_MIGRATION_COPY \n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY --chown=node package*.json ./\nCOPY --chown=node . .\n\nRUN npm install && npm cache clean --force;\n\n# Bundle app source code\n\nRUN npm run build\n\n# Bind to all network interfaces so that it can be mapped to the host OS\nENV HOST=0.0.0.0 PORT=3000\n\nEXPOSE ${PORT}\nCMD [ \"node\", \".\" ]\n"
}