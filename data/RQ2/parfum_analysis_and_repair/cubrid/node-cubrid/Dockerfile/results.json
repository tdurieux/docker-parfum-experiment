{
  "startTime": 1674250931953,
  "endTime": 1674250934414,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 1,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 1,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 122
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a Dockerfile to build an image for running\n# node-cubrid tests.\n\nFROM node:4.5.0\n\nMAINTAINER Esen Sagynov <kadishmal@gmail.com>\n\nWORKDIR /node-cubrid\n\n# According to http://docs.travis-ci.com/user/build-configuration/\n# prepare the system to install prerequisites or dependencies.\n# Update the OS before installing prerequisites.\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential zlib1g-dev libssl-dev libreadline6-dev libyaml-dev wget ssl-cert libffi6 libffi-dev && rm -rf /var/lib/apt/lists/*; # Install Ruby prerequisites. Necessary to run Chef.\n\n\n# Install Chef Solo prerequisites.\n# Ruby >=2.0.0 is required by one of the Chef dependencies.\n# Build Ruby from source. Will auto install gem.\n# Download Ruby source into the current directory.\nRUN \\\n\tRUBY_MAJOR_VERSION=2.2 && \\\n\tRUBY_VERSION=$RUBY_MAJOR_VERSION.0 && \\\n\twget https://cache.ruby-lang.org/pub/ruby/$RUBY_MAJOR_VERSION/ruby-$RUBY_VERSION.tar.gz && \\\n\ttar -xvzf ruby-$RUBY_VERSION.tar.gz && \\\n\tcd ruby-$RUBY_VERSION && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && \\\n\tmake && \\\n\tmake install && \\\n\tcd .. && \\\n\trm -rf ruby-$RUBY_VERSION* && rm ruby-$RUBY_VERSION.tar.gz\n\n# Install Chef Solo.\n# Chef Solo 11.4.4 is broken, so install one of the later versions.\n# The bug was supposed to be fixed in 11.4.5 which is already released.\nRUN gem install chef --no-rdoc --no-ri\n\n# Make sure the target directory for cookbooks exists.\nRUN mkdir -p /tmp/chef-solo\n\n# CUBRID requires `libgcrypt11` while the base Docker image does not\n# have it.\nRUN \\\n\tLIBGCRYPT11_FILE_NAME=libgcrypt11_1.5.0-5+deb7u3_amd64.deb \\\n\tcurl -f \\\n\t-L https://security.debian.org/debian-security/pool/updates/main/libg/libgcrypt11/$LIBGCRYPT11_FILE_NAME > $LIBGCRYPT11_FILE_NAME \\\n\tdpkg -i $LIBGCRYPT11_FILE_NAME \\\n\trm $LIBGCRYPT11_FILE_NAME\n\nENV NODE_ENV test\nENV CUBRID_VERSION=9.1.0\n\nENTRYPOINT /bin/bash\n"
}