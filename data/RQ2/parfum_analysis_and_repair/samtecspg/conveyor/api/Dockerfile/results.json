{
  "startTime": 1674249157437,
  "endTime": 1674249158121,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 44,
        "columnEnd": 63
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.4.1-alpine\n\n# progress=false stops npm from slowing to show a progress bar (because can't be seen in docker anyway)\nRUN npm set progress=false && \\\n    npm config set depth 0\n\nRUN npm install -g yarn && npm cache clean --force;\n\nRUN mkdir /usr/src && mkdir /usr/src/app && mkdir /usr/src/data && rm -rf /usr/src\n\n# Dockerize is used to set the startup order in the main compose that uses this image\nRUN apk add --no-cache dockerize --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/testing/\n\nWORKDIR /usr/src/app\nCOPY package.json yarn.lock ./\nRUN yarn install && yarn cache clean;\n\n# Copy this whole directory into /usr/src/app\n\nCOPY . .\n\nCMD [\"node\", \"start.js\"]\n"
}