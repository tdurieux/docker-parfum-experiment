{
  "startTime": 1674248022295,
  "endTime": 1674248023758,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 1,
        "columnEnd": 45
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 5,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 75,
        "columnStart": 9,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal-20210119\nARG TARGETPLATFORM\n\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    apt-transport-https \\\n    autoconf \\\n    bison \\\n    ca-certificates \\\n    clang-10 \\\n    cmake \\\n    curl \\\n    flex \\\n    g++ \\\n    git \\\n    gnupg2 \\\n    libncurses-dev \\\n    libtinfo-dev \\\n    lsof \\\n    make \\\n    netbase \\\n    openjdk-8-jre \\\n    openssh-client \\\n    patchelf \\\n    python-is-python3 \\\n    python3 \\\n    python3.8-venv \\\n    unzip \\\n && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 100 \\\n    --slave /usr/bin/clang++ clang++ /usr/bin/clang++-10 \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# We need a newer version of cmake.\n#\n# NOTE: When upgrading cmake, bump the rebuild counters in\n# c-deps/*-rebuild to force recreating the makefiles. This prevents\n# strange build errors caused by those makefiles depending on the\n# installed version of cmake.\nRUN case ${TARGETPLATFORM} in \\\n    \"linux/amd64\") ARCH=x86_64; SHASUM=97bf730372f9900b2dfb9206fccbcf92f5c7f3b502148b832e77451aa0f9e0e6 ;; \\\n    \"linux/arm64\") ARCH=aarch64; SHASUM=77620f99e9d5f39cf4a49294c6a68c89a978ecef144894618974b9958efe3c2a ;; \\\n  esac \\\n && curl -fsSL \"https://github.com/Kitware/CMake/releases/download/v3.20.3/cmake-3.20.3-linux-$ARCH.tar.gz\" -o cmake.tar.gz \\\n && echo \"$SHASUM  cmake.tar.gz\" | sha256sum -c - \\\n && tar --strip-components=1 -C /usr -xzf cmake.tar.gz \\\n && rm cmake.tar.gz\n\n# git - Upgrade to a more modern version\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install dh-autoreconf libcurl4-gnutls-dev libexpat1-dev gettext libz-dev libssl-dev -y && \\\n    curl -fsSL https://github.com/git/git/archive/v2.29.2.zip -o \"git-2.29.2.zip\" && \\\n    unzip \"git-2.29.2.zip\" && \\\n    cd git-2.29.2 && \\\n    make configure && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf git-2.29.2.zip git-2.29.2 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && echo 'deb https://packages.cloud.google.com/apt cloud-sdk main' | tee /etc/apt/sources.list.d/gcloud.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    google-cloud-sdk && rm -rf /var/lib/apt/lists/*;\n\n# chrome is needed for UI tests. Unfortunately it is only distributed for x86_64\n# and not for ARM. Chrome shouldn't need to be installed when we migrate away\n# from Karma for UI testing.\nRUN case ${TARGETPLATFORM} in \\\n    \"linux/amd64\") \\\n      curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n      && echo \"deb [arch=amd64] https://dl.google.com/linux/chrome/deb/ stable main\" | tee /etc/apt/sources.list.d/google.list \\\n      && apt-get update \\\n      && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      google-chrome-stable ;; \\\n    esac && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get purge -y \\\n    apt-transport-https \\\n    flex \\\n    gettext \\\n && apt-get autoremove -y\n\n# awscli - roachtests\n# NB: we don't use apt-get because we need an up to date version of awscli\n# If you update the below, you should probably also update build/builder/Dockerfile.\nRUN case ${TARGETPLATFORM} in \\\n    \"linux/amd64\") ARCH=x86_64; SHASUM=7ee475f22c1b35cc9e53affbf96a9ffce91706e154a9441d0d39cbf8366b718e ;; \\\n    \"linux/arm64\") ARCH=aarch64; SHASUM=624ebb04705d4909eb0d56d467fe6b8b5c53a8c59375ed520e70236120125077 ;; \\\n  esac && \\\n curl -fsSL \"https://awscli.amazonaws.com/awscli-exe-linux-$ARCH-2.0.30.zip\" -o \"awscliv2.zip\" && \\\n echo \"$SHASUM  awscliv2.zip\" | sha256sum -c - && \\\n unzip awscliv2.zip && \\\n ./aws/install && \\\n rm -rf aws awscliv2.zip\n\n# Install Bazelisk as Bazel.\n# NOTE: you should keep this in sync with build/packer/teamcity-agent.sh and\n# build/bootstrap/bootstrap-debian.sh -- if an update is necessary here, it's probably\n# necessary in the agent as well.\nRUN case ${TARGETPLATFORM} in \\\n    \"linux/amd64\") ARCH=amd64; SHASUM=4cb534c52cdd47a6223d4596d530e7c9c785438ab3b0a49ff347e991c210b2cd ;; \\\n    \"linux/arm64\") ARCH=arm64; SHASUM=c1de6860dd4f8d5e2ec270097bd46d6a211b971a0b8b38559784bd051ea950a1 ;; \\\n  esac \\\n && curl -fsSL \"https://github.com/bazelbuild/bazelisk/releases/download/v1.10.1/bazelisk-linux-$ARCH\" > /tmp/bazelisk \\\n && echo \"$SHASUM  /tmp/bazelisk\" | sha256sum -c - \\\n && chmod +x /tmp/bazelisk \\\n && mv /tmp/bazelisk /usr/bin/bazel\n\nRUN rm -rf /tmp/* /var/lib/apt/lists/*\n\nRUN case ${TARGETPLATFORM} in \\\n    \"linux/amd64\") ARCH=amd64; SHASUM=442dae58b727a79f81368127fac141d7f95501ffa05f8c48943d27c4e807deb7 ;; \\\n    \"linux/arm64\") ARCH=arm64; SHASUM=b216bebfbe30c3c156144cff07233654e23025e26ab5827058c9b284e130599e ;; \\\n   esac \\\n  && curl -fsSL \"https://github.com/benesch/autouseradd/releases/download/1.3.0/autouseradd-1.3.0-$ARCH.tar.gz\" -o autouseradd.tar.gz \\\n  && echo \"$SHASUM  autouseradd.tar.gz\" | sha256sum -c - \\\n  && tar xzf autouseradd.tar.gz --strip-components 1 \\\n  && rm autouseradd.tar.gz\n\nENTRYPOINT [\"autouseradd\", \"--user\", \"roach\", \"--no-create-home\"]\nCMD [\"/usr/bin/bash\"]\n"
}