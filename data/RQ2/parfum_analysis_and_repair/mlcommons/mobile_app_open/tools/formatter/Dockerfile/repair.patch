diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlcommons/mobile_app_open/tools/formatter/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlcommons/mobile_app_open/tools/formatter/Dockerfile/repaired.Dockerfile
index 3e54be3..e872eb3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlcommons/mobile_app_open/tools/formatter/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlcommons/mobile_app_open/tools/formatter/Dockerfile/repaired.Dockerfile
@@ -21,49 +21,49 @@ ENV DEBIAN_FRONTEND="noninteractive"
 
 # Install dev packages
 RUN apt-get update && apt-get upgrade -y && apt-get install -y --no-install-recommends \
-    gcc make git curl wget zip unzip tar gzip
+    gcc make git curl wget zip unzip tar gzip && rm -rf /var/lib/apt/lists/*;
 
 ENV FORMATTER_HOME /opt/formatters/bin
 ENV PATH=${PATH}:${FORMATTER_HOME}
 RUN mkdir -p ${FORMATTER_HOME}
 
 # Add Java formatter
-RUN apt-get update && apt-get install -y \
-    openjdk-11-jdk-headless
-RUN curl --output `dirname ${FORMATTER_HOME}`/google-java-format-1.9-all-deps.jar \
+RUN apt-get update && apt-get install --no-install-recommends -y \
+    openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;
+RUN curl -f --output `dirname ${FORMATTER_HOME}`/google-java-format-1.9-all-deps.jar \
          -L https://github.com/google/google-java-format/releases/download/google-java-format-1.9/google-java-format-1.9-all-deps.jar
 
 # Add buildifier
-RUN apt-get update && apt-get install -y \
-    golang-1.16-go
+RUN apt-get update && apt-get install --no-install-recommends -y \
+    golang-1.16-go && rm -rf /var/lib/apt/lists/*;
 ENV PATH=$PATH:/usr/lib/go-1.16/bin:~/go/bin
 RUN /usr/lib/go-1.16/bin/go get github.com/bazelbuild/buildtools/buildifier
 RUN cp ~/go/bin/buildifier ${FORMATTER_HOME}/
 
 # Add CLang formatter
-RUN apt-get update && apt-get install -y \
-    clang-format-10
+RUN apt-get update && apt-get install --no-install-recommends -y \
+    clang-format-10 && rm -rf /var/lib/apt/lists/*;
 RUN cp $(which clang-format-10) ${FORMATTER_HOME}/clang-format
 
 # Add dos2unix to format line endings
-RUN apt-get update && apt-get install -y \
-    dos2unix
+RUN apt-get update && apt-get install --no-install-recommends -y \
+    dos2unix && rm -rf /var/lib/apt/lists/*;
 
 # Install Node.js and NPM
 ENV NODE_ENV="production"
 RUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
-RUN apt-get update && apt-get install -y nodejs && node -v
-RUN npm install --location=global npm@8.13.2 && npm --version
-RUN apt-get update && apt-get install -y build-essential
+RUN apt-get update && apt-get install --no-install-recommends -y nodejs && node -v && rm -rf /var/lib/apt/lists/*;
+RUN npm install --location=global npm@8.13.2 && npm --version && npm cache clean --force;
+RUN apt-get update && apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;
 
 # Add Markdown formatter
-RUN npm install -g markdownlint-cli@0.26.0
-RUN npm install -g markdown-link-check@3.9.0
+RUN npm install -g markdownlint-cli@0.26.0 && npm cache clean --force;
+RUN npm install -g markdown-link-check@3.9.0 && npm cache clean --force;
 
 # Add YAML linter
-RUN apt-get update && apt-get install -y \
-	python3-pip
-RUN pip install yamllint==1.26.3
+RUN apt-get update && apt-get install --no-install-recommends -y \
+	python3-pip && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir yamllint==1.26.3
 
 # Setup permission to run Flutter as non-root user
 # this is needed to share Flutter cache with host machine