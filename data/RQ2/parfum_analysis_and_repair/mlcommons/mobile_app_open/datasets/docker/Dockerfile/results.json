{
  "startTime": 1674253426618,
  "endTime": 1674253427751,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 25,
        "columnEnd": 218
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image name: mlcommons/mlperf_mobile\nFROM ubuntu:bionic\nLABEL maintainer=\"quic_mcharleb@quicinc.com\"\n\n# Update the apt configuration and set timezone first or image creation waits\n# for selection of timezone\nRUN apt-get update && apt-get upgrade -y && apt-get autoremove -y && \\\n    apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get upgrade -y && apt-get autoremove -y && \\\n    apt-get install -y --no-install-recommends \\\n       python3 python3-pip libpython3.6-dev python3.6-venv libgl1-mesa-glx libglib2.0 cython3 gcc make curl unzip libc++1-8 \\\n       git locales openssh-client ca-certificates tar gzip parallel \\\n       zip bzip2 gnupg wget python3-six python3-pip libncurses5 openjdk-11-jdk-headless clang-format-10 golang-1.13-go && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir pip==19.3.1 setuptools==31.0.1\nRUN pip3 install --no-cache-dir tensorflow-cpu==1.15\nRUN pip3 install --no-cache-dir Pillow opencv-python setuptools matplotlib tensorflow_hub tf-slim \\\n                 absl-py numpy\n\nRUN ln -s /usr/bin/python3 /usr/bin/python\nRUN apt-get clean\n\n# Protoc 3.6.1\nRUN curl -f -OL https://github.com/google/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip && \\\n    unzip protoc-3.6.1-linux-x86_64.zip -d protoc3 && \\\n    mv protoc3/bin/* /usr/local/bin/ && \\\n    mv protoc3/include/* /usr/local/include/ && \\\n    rm -rf protoc-3.6.1-linux-x86_64.zip protoc3\n\n# Install bazel\nRUN echo \"deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8\" | tee /etc/apt/sources.list.d/bazel.list\nRUN curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add -\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y --allow-unauthenticated bazel-3.7.2 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean\n\n# Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Use unicode\nRUN locale-gen en_US.UTF-8 || true\nENV LANG=en_US.UTF-8\n\nARG android_home=/opt/android/sdk\n\n# Install Android SDK and NDK\nRUN mkdir -p ${android_home} && \\\n    wget -O /tmp/sdk_tools.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip && \\\n    unzip -q /tmp/sdk_tools.zip -d ${android_home}/cmdline-tools/ && \\\n    mv ${android_home}/cmdline-tools/cmdline-tools ${android_home}/cmdline-tools/tools && \\\n    rm /tmp/sdk_tools.zip\n\n# Set environment variables\nENV ANDROID_HOME ${android_home}\nENV ANDROID_NDK_HOME ${android_ndk_home}\nENV ADB_INSTALL_TIMEOUT 120\nENV PATH=${ANDROID_HOME}/emulator:${ANDROID_HOME}/cmdline-tools/tools/bin:${ANDROID_HOME}/tools/bin:${ANDROID_HOME}/build-tools/29.0.3:${PATH}\n\nRUN mkdir ~/.android && echo '### User Sources for Android SDK Manager' > ~/.android/repositories.cfg\n\n# Update SDK manager and install system image, platform and build tools\nRUN yes | sdkmanager --licenses && sdkmanager --update\nRUN yes | sdkmanager \\\n    \"tools\" \\\n    \"platform-tools\" \\\n    \"extras;android;m2repository\" \\\n    \"extras;google;m2repository\" \\\n    \"extras;google;google_play_services\" \\\n    \"build-tools;29.0.3\"\n\nARG android_version=30\nRUN sdkmanager \"platforms;android-${android_version}\" \"cmake;3.6.4111459\"\n\nARG ndk_version=android-ndk-r21e\nARG android_ndk_home=/opt/android/${ndk_version}\n\n# Install the NDK\n# Use wget instead of curl to avoid \"Error in the HTTP2 framing layer\"\nRUN cd /tmp &&  wget -nv https://dl.google.com/android/repository/${ndk_version}-linux-x86_64.zip && \\\n    unzip -q /tmp/${ndk_version}-linux-x86_64.zip -d /opt/android && \\\n    rm /tmp/${ndk_version}-linux-x86_64.zip\n\nENV ANDROID_NDK_HOME ${android_ndk_home}\n\n# Add Java format checker and buildifier\nENV GOBIN /opt/formatters/bin\nRUN mkdir -p ${GOBIN} && curl -f --output `dirname ${GOBIN}`/google-java-format-1.9-all-deps.jar -L https://github.com/google/google-java-format/releases/download/google-java-format-1.9/google-java-format-1.9-all-deps.jar\nRUN /usr/lib/go-1.13/bin/go get github.com/bazelbuild/buildtools/buildifier\nENV PATH=${PATH}:${GOBIN}\n\nRUN mkdir -p /home/mlperf && chmod 777 /home/mlperf\nENV HOME /home/mlperf\nENV JAVA_HOME /usr/lib/jvm/java-11-openjdk-amd64"
}