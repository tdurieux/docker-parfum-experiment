diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlcommons/mobile_app_open/datasets/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlcommons/mobile_app_open/datasets/docker/Dockerfile/repaired.Dockerfile
index 49a58ae..5ebf973 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlcommons/mobile_app_open/datasets/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlcommons/mobile_app_open/datasets/docker/Dockerfile/repaired.Dockerfile
@@ -5,24 +5,24 @@ LABEL maintainer="quic_mcharleb@quicinc.com"
 # Update the apt configuration and set timezone first or image creation waits
 # for selection of timezone
 RUN apt-get update && apt-get upgrade -y && apt-get autoremove -y && \
-    apt-get install -y --no-install-recommends tzdata
+    apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && apt-get upgrade -y && apt-get autoremove -y && \
     apt-get install -y --no-install-recommends \
        python3 python3-pip libpython3.6-dev python3.6-venv libgl1-mesa-glx libglib2.0 cython3 gcc make curl unzip libc++1-8 \
        git locales openssh-client ca-certificates tar gzip parallel \
-       zip bzip2 gnupg wget python3-six python3-pip libncurses5 openjdk-11-jdk-headless clang-format-10 golang-1.13-go
+       zip bzip2 gnupg wget python3-six python3-pip libncurses5 openjdk-11-jdk-headless clang-format-10 golang-1.13-go && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install pip==19.3.1 setuptools==31.0.1
-RUN pip3 install tensorflow-cpu==1.15
-RUN pip3 install Pillow opencv-python setuptools matplotlib tensorflow_hub tf-slim \
+RUN pip3 install --no-cache-dir pip==19.3.1 setuptools==31.0.1
+RUN pip3 install --no-cache-dir tensorflow-cpu==1.15
+RUN pip3 install --no-cache-dir Pillow opencv-python setuptools matplotlib tensorflow_hub tf-slim \
                  absl-py numpy
 
 RUN ln -s /usr/bin/python3 /usr/bin/python
 RUN apt-get clean
 
 # Protoc 3.6.1
-RUN curl -OL https://github.com/google/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip && \
+RUN curl -f -OL https://github.com/google/protobuf/releases/download/v3.6.1/protoc-3.6.1-linux-x86_64.zip && \
     unzip protoc-3.6.1-linux-x86_64.zip -d protoc3 && \
     mv protoc3/bin/* /usr/local/bin/ && \
     mv protoc3/include/* /usr/local/include/ && \
@@ -30,9 +30,9 @@ RUN curl -OL https://github.com/google/protobuf/releases/download/v3.6.1/protoc-
 
 # Install bazel
 RUN echo "deb [arch=amd64] http://storage.googleapis.com/bazel-apt stable jdk1.8" | tee /etc/apt/sources.list.d/bazel.list
-RUN curl https://bazel.build/bazel-release.pub.gpg | apt-key add -
+RUN curl -f https://bazel.build/bazel-release.pub.gpg | apt-key add -
 RUN apt-get update && \
-    apt-get install -y --allow-unauthenticated bazel-3.7.2
+    apt-get install --no-install-recommends -y --allow-unauthenticated bazel-3.7.2 && rm -rf /var/lib/apt/lists/*;
 RUN apt-get clean
 
 # Set timezone to UTC by default
@@ -85,7 +85,7 @@ ENV ANDROID_NDK_HOME ${android_ndk_home}
 
 # Add Java format checker and buildifier
 ENV GOBIN /opt/formatters/bin
-RUN mkdir -p ${GOBIN} && curl --output `dirname ${GOBIN}`/google-java-format-1.9-all-deps.jar -L https://github.com/google/google-java-format/releases/download/google-java-format-1.9/google-java-format-1.9-all-deps.jar
+RUN mkdir -p ${GOBIN} && curl -f --output `dirname ${GOBIN}`/google-java-format-1.9-all-deps.jar -L https://github.com/google/google-java-format/releases/download/google-java-format-1.9/google-java-format-1.9-all-deps.jar
 RUN /usr/lib/go-1.13/bin/go get github.com/bazelbuild/buildtools/buildifier
 ENV PATH=${PATH}:${GOBIN}