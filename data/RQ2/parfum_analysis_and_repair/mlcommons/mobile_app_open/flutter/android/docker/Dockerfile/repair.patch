diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlcommons/mobile_app_open/flutter/android/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlcommons/mobile_app_open/flutter/android/docker/Dockerfile/repaired.Dockerfile
index 0ce0a69..5b12ef7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlcommons/mobile_app_open/flutter/android/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlcommons/mobile_app_open/flutter/android/docker/Dockerfile/repaired.Dockerfile
@@ -5,8 +5,8 @@ FROM ubuntu:20.04
 #   which makes reading layer info harder, so we set this env for for individual commands only.
 # JDK package downloads ~500 MB from slow mirrors, which can take a lot of time,
 #   so a separate layer for it makes image rebuild faster in case we change any other dependencies.
-RUN apt-get update >/dev/null && DEBIAN_FRONTEND=noninteractive apt-get install -y openjdk-11-jdk-headless
-RUN apt-get update >/dev/null && DEBIAN_FRONTEND=noninteractive apt-get install -y \
+RUN apt-get update >/dev/null && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update >/dev/null && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
     apt-transport-https \
     curl \
     git \
@@ -14,17 +14,17 @@ RUN apt-get update >/dev/null && DEBIAN_FRONTEND=noninteractive apt-get install
     make \
     protobuf-compiler \
     python3 \
-    python3-pip
+    python3-pip && rm -rf /var/lib/apt/lists/*;
 RUN ln -s /usr/bin/python3 /usr/bin/python
 RUN python3 -m pip install numpy absl-py
 
-RUN curl -L https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 -o /usr/local/bin/bazel && \
+RUN curl -f -L https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 -o /usr/local/bin/bazel && \
     chmod +x /usr/local/bin/bazel
 
 ENV ANDROID_SDK_ROOT=/opt/android
 WORKDIR $ANDROID_SDK_ROOT/cmdline-tools
 # sdkmanager expects to be placed into `$ANDROID_SDK_ROOT/cmdline-tools/tools`
-RUN curl -L https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip | jar x && \
+RUN curl -f -L https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip | jar x && \
     mv cmdline-tools tools && \
     chmod --recursive +x tools/bin
 ENV PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/tools/bin
@@ -45,7 +45,7 @@ WORKDIR $HOME
 
 ENV PUB_CACHE=$HOME/.cache/.pub-cache
 ENV PATH=$PATH:$HOME/flutter/bin:$PUB_CACHE/bin
-RUN curl -L https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_2.10.5-stable.tar.xz | tar Jxf - && chmod --recursive a=u $HOME/flutter
+RUN curl -f -L https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_2.10.5-stable.tar.xz | tar Jxf - && chmod --recursive a=u $HOME/flutter
 RUN git config --global --add safe.directory $HOME/flutter
 RUN flutter config --no-analytics && dart --disable-analytics
 RUN dart pub global activate protoc_plugin && chmod --recursive a=u $PUB_CACHE