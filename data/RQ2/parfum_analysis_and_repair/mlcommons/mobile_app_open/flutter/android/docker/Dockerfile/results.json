{
  "startTime": 1674250599499,
  "endTime": 1674250600466,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 33,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 33,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 33,
        "columnEnd": 106
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 33,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Without DEBIAN_FRONTEND=noninteractive arg apt-get waits for user input.\n#   Docker desktop shows all previously defined args for each of the commands,\n#   which makes reading layer info harder, so we set this env for for individual commands only.\n# JDK package downloads ~500 MB from slow mirrors, which can take a lot of time,\n#   so a separate layer for it makes image rebuild faster in case we change any other dependencies.\nRUN apt-get update >/dev/null && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update >/dev/null && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    apt-transport-https \\\n    curl \\\n    git \\\n    gnupg \\\n    make \\\n    protobuf-compiler \\\n    python3 \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/python3 /usr/bin/python\nRUN python3 -m pip install numpy absl-py\n\nRUN curl -f -L https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 -o /usr/local/bin/bazel && \\\n    chmod +x /usr/local/bin/bazel\n\nENV ANDROID_SDK_ROOT=/opt/android\nWORKDIR $ANDROID_SDK_ROOT/cmdline-tools\n# sdkmanager expects to be placed into `$ANDROID_SDK_ROOT/cmdline-tools/tools`\nRUN curl -f -L https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip | jar x && \\\n    mv cmdline-tools tools && \\\n    chmod --recursive +x tools/bin\nENV PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/tools/bin\n\nRUN yes | sdkmanager --licenses >/dev/null\nRUN yes | sdkmanager \\\n    \"platform-tools\" \\\n    \"build-tools;30.0.3\" \\\n    \"platforms;android-29\" \\\n    \"platforms;android-31\"\n# Install NDK in a separate layer to decrease max layer size.\nRUN yes | sdkmanager \"ndk;21.4.7075529\"\nENV ANDROID_NDK_ROOT=$ANDROID_SDK_ROOT/ndk/21.4.7075529\nENV ANDROID_NDK_HOME=$ANDROID_NDK_ROOT\n\nENV HOME=/image-workdir\nWORKDIR $HOME\n\nENV PUB_CACHE=$HOME/.cache/.pub-cache\nENV PATH=$PATH:$HOME/flutter/bin:$PUB_CACHE/bin\nRUN curl -f -L https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_2.10.5-stable.tar.xz | tar Jxf - && chmod --recursive a=u $HOME/flutter\nRUN git config --global --add safe.directory $HOME/flutter\nRUN flutter config --no-analytics && dart --disable-analytics\nRUN dart pub global activate protoc_plugin && chmod --recursive a=u $PUB_CACHE\n\nRUN mkdir -p $HOME/.cache/ && chmod 777 $HOME/.cache/\nRUN mkdir -p $HOME/.cache/.gradle && chmod 777 $HOME/.cache/.gradle\nENV GRADLE_USER_HOME=$HOME/.cache/.gradle\nENV ANDROID_SDK_HOME=$HOME/.cache/.android\n\nRUN mkdir $ANDROID_SDK_HOME && chmod 777 $HOME/.cache/.android && \\\n    keytool -genkey -v -keystore $ANDROID_SDK_HOME/debug.keystore -storepass android -alias androiddebugkey -keypass android -dname \"CN=Android Debug,O=Android,C=US\"\n\nRUN chmod 777 $HOME\n\nRUN mkdir -p /mnt/cache && chmod 777 /mnt/cache\nRUN mkdir -p /mnt/project/flutter/build && chmod 777 /mnt/project/flutter/build\nRUN mkdir -p $HOME/.cache/bazelisk && chmod 777 $HOME/.cache/bazelisk\n"
}