{
  "startTime": 1674255959611,
  "endTime": 1674255960472,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 26,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.1-cudnn8-devel-ubuntu16.04\n\nENV PYTHON_VERSION=3.7\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV PATH /opt/anaconda3/bin:$PATH\n\nWORKDIR /root\nENV HOME /root\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      git \\\n      build-essential \\\n      software-properties-common \\\n      ca-certificates \\\n      wget \\\n      curl \\\n      htop \\\n      zip \\\n      unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /opt && \\\n    wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.6.14-Linux-x86_64.sh -O miniconda.sh && \\\n    /bin/bash ./miniconda.sh -b -p /opt/anaconda3 && \\\n    rm miniconda.sh && \\\n    /opt/anaconda3/bin/conda clean -tipsy && \\\n    ln -s /opt/anaconda3/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/anaconda3/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc && \\\n    conda config --set always_yes yes --set changeps1 no\n\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir cython future pillow onnx opencv-python-headless && \\\n    ln -s /usr/local/cuda/lib64 /usr/local/cuda/lib && \\\n    cp /usr/lib/x86_64-linux-gnu/libnccl* /usr/local/cuda/lib && \\\n    ldconfig\n\nRUN conda install pytorch torchvision -c pytorch\nRUN pip install --no-cache-dir tensorflow onnxruntime-gpu\nRUN pip install --no-cache-dir Cython && pip install --no-cache-dir pycocotools\n\n\nRUN cd /tmp && \\\n    git clone --recursive https://github.com/mlcommons/inference && \\\n    cd inference/loadgen && \\\n    pip install --no-cache-dir pybind11 && \\\n    CFLAGS=\"-std=c++14\" python setup.py install && \\\n    rm -rf mlperf\n\nRUN  echo \"/usr/local/cuda/compat\" >> /etc/ld.so.conf.d/cuda-10-0.conf && \\\n    ldconfig\n\nENTRYPOINT [\"/bin/bash\"]\n"
}