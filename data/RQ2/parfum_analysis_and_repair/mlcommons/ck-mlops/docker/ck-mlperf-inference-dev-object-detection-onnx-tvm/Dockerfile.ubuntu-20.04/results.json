{
  "startTime": 1674219080132,
  "endTime": 1674219081373,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Adaptive container with the CK interface\n# Concept: https://arxiv.org/abs/2011.01149\n\nFROM ubuntu:20.04\n\n# Contact\nLABEL maintainer=\"Grigori Fursin <grigori@octoml.ai>\"\n\n# Shell info\nSHELL [\"/bin/bash\", \"-c\"]\n#ENTRYPOINT [\"/bin/bash\", \"-c\"]\n\n# Set noninteractive mode for apt (do not use ENV)\nARG DEBIAN_FRONTEND=noninteractive\n\n# Notes: https://runnable.com/blog/9-common-dockerfile-mistakes\n# Install system dependencies\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n           apt-utils \\\n           git wget zip bzip2 libz-dev libbz2-dev cmake curl unzip \\\n           openssh-client vim mc tree \\\n           gcc g++ autoconf autogen libtool make libc6-dev build-essential patch \\\n           gfortran libblas-dev liblapack-dev \\\n           libsndfile1-dev libssl-dev libbz2-dev libxml2-dev libtinfo-dev libffi-dev \\\n           python3 python3-pip python3-dev \\\n           libtinfo-dev \\\n           python-is-python3 \\\n           libncurses-dev \\\n           sudo && rm -rf /var/lib/apt/lists/*;\n\n# Prepare a user with a user group with a random id\nRUN groupadd -g 1111 ckuser\nRUN useradd -u 2222 -g ckuser --create-home --shell /bin/bash ckuser\nRUN echo \"ckuser:ckuser\" | chpasswd\nRUN adduser ckuser sudo\nRUN echo \"ckuser   ALL=(ALL)  NOPASSWD:ALL\" >> /etc/sudoers\n\n# Set user\nUSER ckuser:ckuser\nWORKDIR /home/ckuser\nENV PATH=\"/home/ckuser/.local/bin:${PATH}\"\nRUN mkdir .ssh\n\n# Install CK\nRUN export DUMMY_CK=A\nRUN ${DUMMY_CK} pip3 install virtualenv\nRUN ${DUMMY_CK} pip3 install ck\n\n# Clone CK repo\nRUN ck pull repo:mlcommons@ck-mlops\n\n# Install packages to CK env entries\nRUN ck setup kernel --var.install_to_env=yes\n\nRUN ck detect platform.os --platform_init_uoa=generic-linux-dummy\nRUN ck detect soft:compiler.python --full_path=/usr/bin/python3\n\nRUN ck detect soft:compiler.gcc --full_path=`which gcc`\n\nRUN ck install package --tags=tool,cmake,prebuilt,v3.18.2\n\nRUN ck install package --tags=lib,python-package,absl\nRUN ck install package --tags=lib,python-package,numpy\nRUN ck install package --tags=lib,python-package,scipy\nRUN ck install package --tags=lib,python-package,matplotlib\nRUN ck install package --tags=lib,python-package,cython\nRUN ck install package --tags=lib,python-package,pillow\nRUN ck install package --tags=lib,python-package,opencv-python-headless\n\n# Need to change to OctoML branch soon\nRUN ck install package --tags=mlperf,inference,src,octoml.dev\nRUN ck install package --tags=lib,python-package,mlperf,loadgen\n\nRUN ck install package --tags=tool,coco,api\n\nRUN ck install package --tags=dataset,coco,val,2017,full\n\nRUN ck install package --tags=lib,python-package,onnxruntime-cpu,1.7.0\nRUN ck install package --tags=lib,python-package,onnx,1.9.0\n\nRUN ck install package --tags=compiler,llvm,prebuilt,v12.0.0\n\nRUN ck install package --tags=compiler,tvm,dev --env.CK_HOST_CPU_NUMBER_OF_PROCESSORS=4\n\nRUN ck install package --tags=model,object-detection,mlperf,onnx,ssd-mobilenet,side.300,non-quantized,opset-8\nRUN ck install package --tags=model,object-detection,mlperf,onnx,ssd-mobilenet,side.300,non-quantized,opset-11\nRUN ck install package --tags=model,object-detection,mlperf,onnx,ssd-resnet34,side.1200,non-quantized,opset-8\n\n# Install MLPerf task requirements\nRUN ck run program:mlperf-inference-bench-object-detection-tvm-onnx-cpu --cmd_key=install-python-requirements\n\n# Run TVM-based MLPerf inference benchmark (Offline;Accuracy)\nCMD ck run program:mlperf-inference-bench-object-detection-tvm-onnx-cpu \\\n          --cmd_key=accuracy-offline \\\n          --env.MLPERF_TVM_TARGET=\"llvm -mcpu=znver2\" \\\n          --env.MLPERF_TVM_EXECUTOR=vm \\\n          --env.EXTRA_OPS=\"--count 100 --thread 1 --max-batchsize 1\"\n"
}