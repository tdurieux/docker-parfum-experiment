{
  "startTime": 1674246538822,
  "endTime": 1674246539411,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Adaptive container with the CK interface\n# Concept: https://arxiv.org/abs/2011.01149\n\n# (CK automation 6ab9df569d0d1e6b)\nFROM ubuntu:20.04\n\nLABEL maintainer=\"Grigori Fursin <grigori@octoml.ai>\"\n\nSHELL [\"/bin/bash\", \"-c\"]\nENTRYPOINT [\"/bin/bash\", \"-c\"]\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# (CK automation ee47d84311b9373d)\n# Notes: https://runnable.com/blog/9-common-dockerfile-mistakes\n# Install system dependencies\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n           apt-utils \\\n           git wget zip bzip2 libz-dev libbz2-dev cmake curl unzip \\\n           openssh-client vim mc tree \\\n           gcc g++ autoconf autogen libtool make libc6-dev \\\n           libssl-dev libbz2-dev libffi-dev \\\n           python3 python3-pip python3-dev \\\n           sudo && rm -rf /var/lib/apt/lists/*;\n\n# Prepare a user with a user group with a random id (CK automation 7b3ec2b6534f3394)\nRUN groupadd -g 1111 ckuser\nRUN useradd -u 2222 -g ckuser --create-home --shell /bin/bash ckuser\nRUN echo \"ckuser:ckuser\" | chpasswd\nRUN adduser ckuser sudo\nRUN echo \"ckuser   ALL=(ALL)  NOPASSWD:ALL\" >> /etc/sudoers\n\n# Set user (CK automation 8b8944a9b2c1f341)\nUSER ckuser:ckuser\nWORKDIR /home/ckuser\nENV PATH=\"/home/ckuser/.local/bin:${PATH}\"\nRUN mkdir .ssh\n\n# Set the CK web service defaults.\nENV CK_PORT=3344 \\\n    WFE_PORT=3344\n\nEXPOSE ${CK_PORT}\n\n# Install CK (CK automation f49f20744aba90e2)\nRUN export DUMMY_CK=B\nRUN ${DUMMY_CK} python3 -m pip install setuptools\nRUN ${DUMMY_CK} python3 -m pip install virtualenv\nRUN ${DUMMY_CK} python3 -m pip install ck\n\n# Clone CK repo(s) or pull them from Zenodo (CK automation f49f20744aba90e2)\nRUN ck pull repo:ck-ml\n\n# Configure CK (CK automation ddea4415c4133ef9)\nRUN ck setup kernel --var.install_to_env=yes\n\nRUN ck detect platform.os --platform_init_uoa=generic-linux-dummy\nRUN ck detect soft:compiler.python --full_path=/usr/bin/python3\nRUN ck detect soft:compiler.gcc --full_path=`which gcc`\n\n# Install CK packages (CK automation 271a9004c9799191)\n\n# Start bash\nCMD bash\n"
}