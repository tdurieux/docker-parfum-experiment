{
  "startTime": 1674248365787,
  "endTime": 1674248367418,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Adaptive container with the CK interface\n# Concept: https://arxiv.org/abs/2011.01149\n\nFROM ubuntu:20.04\n\n# Contact\nLABEL maintainer=\"Grigori Fursin <grigori@octoml.ai>\"\n\n# Shell info\nSHELL [\"/bin/bash\", \"-c\"]\nENTRYPOINT [\"/bin/bash\", \"-c\"]\n\n# Set noninteractive mode for apt (do not use ENV)\nARG DEBIAN_FRONTEND=noninteractive\n\n# Notes: https://runnable.com/blog/9-common-dockerfile-mistakes\n# Install system dependencies\nRUN apt update && \\\n    apt install -y --no-install-recommends \\\n           apt-utils \\\n           git wget zip bzip2 libz-dev libbz2-dev cmake curl unzip \\\n           openssh-client vim mc tree \\\n           gcc g++ autoconf autogen libtool make libc6-dev build-essential \\\n           libssl-dev libbz2-dev libffi-dev \\\n           python3 python3-pip python3-dev \\\n           sudo && rm -rf /var/lib/apt/lists/*;\n\n# Prepare a user with a user group with a random id\nRUN groupadd -g 1111 ckuser\nRUN useradd -u 2222 -g ckuser --create-home --shell /bin/bash ckuser\nRUN echo \"ckuser:ckuser\" | chpasswd\nRUN adduser ckuser sudo\nRUN echo \"ckuser   ALL=(ALL)  NOPASSWD:ALL\" >> /etc/sudoers\n\n# Set user\nUSER ckuser:ckuser\nWORKDIR /home/ckuser\nENV PATH=\"/home/ckuser/.local/bin:${PATH}\"\nRUN mkdir .ssh\n\n# Install CK\nRUN export DUMMY_CK=C\nRUN ${DUMMY_CK} pip3 install virtualenv\nRUN ${DUMMY_CK} pip3 install ck\n\n# Clone CK repo\nRUN ck pull repo:mlcommons@ck-mlops\n\n# Install packages to CK env entries\nRUN ck setup kernel --var.install_to_env=yes\n\nRUN ck detect platform.os --platform_init_uoa=generic-linux-dummy\nRUN ck detect soft:compiler.python --full_path=/usr/bin/python3\n\nRUN ck detect soft:compiler.gcc --full_path=`which gcc`\n\nRUN ck install package --tags=tool,cmake,prebuilt --quiet\n\nRUN ck install package --tags=lib,python-package,absl\nRUN ck install package --tags=lib,python-package,numpy\nRUN ck install package --tags=lib,python-package,matplotlib\nRUN ck install package --tags=lib,python-package,cython\nRUN ck install package --tags=lib,python-package,pillow\nRUN ck install package --tags=lib,python-package,opencv-python-headless\n\nRUN ck install package --tags=mlperf,inference,src,r1.0\nRUN ck install package --tags=lib,mlperf,loadgen,static\n\nRUN ck install package --tags=lib,tflite,via-cmake,v2.4.1,with.ruy\n\nRUN ck install package --ask --tags=dataset,coco,val,2017\nRUN ck install package --tags=tool,coco,api\n\nRUN ck install package --tags=api,model,tensorflow,r2.3.0\nRUN ck install package --tags=dataset,object-detection,preprocessed,full,side.300,using-pillow\n\nRUN ck install package --tags=model,tflite,object-detection,ssd-mobilenet,non-quantized,from-zenodo\n\nCMD [\"ck benchmark program:object-detection-tflite-loadgen \\\n      --env.CK_SILENT_MODE=YES \\\n      --skip_print_timers \\\n      --dep_add_tags.compiler=gcc \\\n      --dep_add_tags.python=v3 \\\n      --dep_add_tags.mlperf-inference-src=r1.0 \\\n      --dep_add_tags.weights=ssd-mobilenet \\\n      --dep_add_tags.dataset=dataset,object-detection,preprocessed,full,using-pillow \\\n      --dep_add_tags.library=tflite,v2.4.1,with.ruy \\\n      --env.CK_LOADGEN_DATASET_SIZE=50 \\\n      --env.USE_NMS=regular \\\n      --env.CK_VERBOSE=1 \\\n      --env.CK_LOADGEN_SCENARIO=SingleStream \\\n      --env.CK_LOADGEN_MODE=AccuracyOnly \\\n      --skip_stat_analysis \\\n      --process_multi_keys \\\n      --repetitions=1 \\\n      --record \\\n      --record_repo=local \\\n      --record_uoa=mlperf-closed-amd-tflite-v2.4.1-ruy-ssd-mobilenet-non-quantized-singlestream-accuracy-target-latency-20 \\\n      --tags=mlperf,division.closed,task.object-detection,platform.amd,inference_engine.tflite,inference_engine_version.v2.4.1,inference_engine_backend.ruy,scenario.singlestream,mode.accuracy,workload.ssd-mobilenet-non-quantized,preprocessed_using.pillow,target_latency.20\"]\n"
}