diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlcommons/ck-mlops/docker/ck-mlperf-inference-dev-image-classification-onnx-tvm/Dockerfile.ubuntu-16.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlcommons/ck-mlops/docker/ck-mlperf-inference-dev-image-classification-onnx-tvm/Dockerfile.ubuntu-16.04/repaired.Dockerfile
index 501bd9c..d61683a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlcommons/ck-mlops/docker/ck-mlperf-inference-dev-image-classification-onnx-tvm/Dockerfile.ubuntu-16.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlcommons/ck-mlops/docker/ck-mlperf-inference-dev-image-classification-onnx-tvm/Dockerfile.ubuntu-16.04/repaired.Dockerfile
@@ -18,9 +18,9 @@ ARG DEBIAN_FRONTEND=noninteractive
 # * libtinfo-dev is needed to build TVM
 # * python-is-python3 for MLPerf inference via run_local.sh
 RUN apt update \
- && apt install -y apt-utils \
+ && apt install --no-install-recommends -y apt-utils \
  && apt upgrade -y \
- && apt install -y \
+ && apt install --no-install-recommends -y \
            git wget zip bzip2 libz-dev libbz2-dev cmake curl unzip \
            openssh-client vim mc tree \
            gcc g++ autoconf autogen libtool make libc6-dev build-essential patch \
@@ -29,7 +29,7 @@ RUN apt update \
            python3 python3-pip python3-dev \
            libtinfo-dev \
            sudo \
- && apt clean
+ && apt clean && rm -rf /var/lib/apt/lists/*;
 
 # Install Python 3.7.11 (If upgrading to 3.8 or higher, also change CK_PYTHON below.)
 ENV PYTHON_VERSION=3.7.11
@@ -37,7 +37,7 @@ RUN cd /usr/src \
  && wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
  && tar xzf Python-${PYTHON_VERSION}.tgz \
  && rm Python-${PYTHON_VERSION}.tgz \
- && cd /usr/src/Python-${PYTHON_VERSION} && ./configure --enable-optimizations && make altinstall \
+ && cd /usr/src/Python-${PYTHON_VERSION} && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations && make altinstall \
  && rm -rf /usr/src/Python-${PYTHON_VERSION}*
 
 ENV CK_PYTHON=python3.7