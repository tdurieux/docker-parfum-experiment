{
  "startTime": 1674246224803,
  "endTime": 1674246225627,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 48,
        "columnEnd": 115
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 48,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Please use one of the following base images for your container.\n# This makes sure it can be run successfully in the federated evaluation.\nFROM nvcr.io/nvidia/pytorch:20.08-py3\n# FROM nvcr.io/nvidia/tensorflow:20.08-tf2-py3\n# FROM nvcr.io/nvidia/tensorflow:20.08-tf1-py3\n# TODO maybe bump these to a later version\n\n# fill in your info here\nLABEL author=\"chuck@norris.org\"\nLABEL team=\"A-team\"\nLABEL application=\"your application name\"\nLABEL maintainer=\"chuck@norris.org\"\nLABEL version=\"0.0.1\"\nLABEL status=\"beta\"\n\n# basic\nRUN apt-get -y update && apt -y full-upgrade && apt-get -y --no-install-recommends install apt-utils wget git tar build-essential curl nano && rm -rf /var/lib/apt/lists/*;\n\n# install all python requirements\nWORKDIR /mlcube_project\nCOPY ./requirements.txt ./requirements.txt\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# copy all files\nCOPY ./ /mlcube_project\n\n# NOTE: to be able to run this with singularity, an absolute path is required here.\nENTRYPOINT [ \"python3\", \"/mlcube_project/mlcube.py\"]\n"
}