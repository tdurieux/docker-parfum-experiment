diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/talk2megooseman/stream_closed_captioner_phoenix/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/talk2megooseman/stream_closed_captioner_phoenix/.devcontainer/Dockerfile/repaired.Dockerfile
index 0488299..875fc27 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/talk2megooseman/stream_closed_captioner_phoenix/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/talk2megooseman/stream_closed_captioner_phoenix/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -30,19 +30,19 @@ ENV PATH=${NVM_DIR}/current/bin:${PATH}
 RUN apt-get update \
   && export DEBIAN_FRONTEND=noninteractive \
   && apt-get -y install --no-install-recommends curl ca-certificates 2>&1 \
-  && curl -sSL ${COMMON_SCRIPT_SOURCE} -o /tmp/common-setup.sh \
-  && ([ "${COMMON_SCRIPT_SHA}" = "dev-mode" ] || (echo "${COMMON_SCRIPT_SHA} */tmp/common-setup.sh" | sha256sum -c -)) \
+  && curl -f -sSL ${COMMON_SCRIPT_SOURCE} -o /tmp/common-setup.sh \
+  && ( [ "${COMMON_SCRIPT_SHA}" = "dev-mode" ] || ( echo "${COMMON_SCRIPT_SHA}    */tmp/common-setup.sh" | sha256sum -c -)) \
   && /bin/bash /tmp/common-setup.sh "${INSTALL_ZSH}" "${USERNAME}" "${USER_UID}" "${USER_GID}" "${UPGRADE_PACKAGES}" \
   #
   # [Optional] Install Node.js for use with web applications
   && if [ "$INSTALL_NODE" = "true" ]; then \
-  curl -sSL ${NODE_SCRIPT_SOURCE} -o /tmp/node-setup.sh \
-  && ([ "${NODE_SCRIPT_SHA}" = "dev-mode" ] || (echo "${COMMON_SCRIPT_SHA} */tmp/node-setup.sh" | sha256sum -c -)) \
+  curl -f -sSL ${NODE_SCRIPT_SOURCE} -o /tmp/node-setup.sh \
+  && ( [ "${NODE_SCRIPT_SHA}" = "dev-mode" ] || ( echo "${COMMON_SCRIPT_SHA}    */tmp/node-setup.sh" | sha256sum -c -)) \
   && /bin/bash /tmp/node-setup.sh "${NVM_DIR}" "${NODE_VERSION}" "${USERNAME}"; \
   fi \
   #
   # Install dependencies
-  && apt-get install -y build-essential inotify-tools \
+  && apt-get install --no-install-recommends -y build-essential inotify-tools \
   #
   # Clean up
   && apt-get autoremove -y \
@@ -61,4 +61,4 @@ RUN su ${USERNAME} -c "mix local.hex --force \
 # [Optional] Uncomment this line to install additional package.
 # RUN  mix ...
 
-RUN (curl -Ls https://cli.doppler.com/install.sh || wget -qO- https://cli.doppler.com/install.sh) | sh
+RUN ( curl -f -Ls https://cli.doppler.com/install.sh || wget -qO- https://cli.doppler.com/install.sh) | sh