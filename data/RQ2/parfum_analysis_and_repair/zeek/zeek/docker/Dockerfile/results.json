{
  "startTime": 1674253700772,
  "endTime": 1674253701598,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See the file \"COPYING\" in the main distribution directory for copyright.\n\n# Layer to build Zeek.\nFROM debian:bullseye-slim AS build\n\n# Configure system for build.\nRUN apt-get -q update \\\n && apt-get install -q -y --no-install-recommends \\\n     bind9 \\\n     bison \\\n     cmake \\\n     flex \\\n     g++ \\\n     gcc \\\n     libfl2 \\\n     libfl-dev \\\n     libmaxminddb-dev \\\n     libpcap-dev \\\n     libssl-dev \\\n     libz-dev \\\n     make \\\n     python3-minimal \\\n     python3.9-dev \\\n     swig \\\n     ninja-build \\\n     python3-pip \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Copy over the Zeek source tree.\n# NOTE: This assumes that we build in the context of the parent directory (the\n# Git checkout root). We e.g., ensure that in the `Makefile` in this directory.\nCOPY . /src/zeek\nRUN make -C /src/zeek distclean\n\nARG CONFFLAGS=\"--generator=Ninja --build-type=Release\"\n\nWORKDIR /src/zeek\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $CONFFLAGS && ninja -C build install\n\n# Final layer containing all artifacts.\nFROM debian:bullseye-slim AS final\n\nRUN apt-get -q update \\\n && apt-get install -q -y --no-install-recommends \\\n     ca-certificates \\\n     git \\\n     libmaxminddb0 \\\n     libpython3.9 \\\n     libpcap0.8 \\\n     libssl1.1 \\\n     libz1 \\\n     python3-minimal \\\n     python3-git \\\n     python3-semantic-version \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Copy over Zeek installation.\nCOPY --from=build /usr/local/zeek /usr/local/zeek\nENV PATH \"/usr/local/zeek/bin:${PATH}\"\nENV PYTHONPATH \"/usr/local/zeek/lib/zeek/python:${PYTHONPATH}\"\n"
}