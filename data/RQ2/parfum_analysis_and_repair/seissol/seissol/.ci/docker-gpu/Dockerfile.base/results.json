{
  "startTime": 1674249183470,
  "endTime": 1674249185413,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 0,
        "columnEnd": 112
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 0,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 0,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 0,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 0,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 26,
        "columnStart": 0,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 54,
        "columnStart": 0,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 0,
        "columnEnd": 91
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 0,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 0,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 0,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 0,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 0,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 0,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 0,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 0,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 0,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 0,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 0,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 1,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 1,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "ARG BASE_IMAGE_NAME=seissol/gpu-ci-compiler-image:custom\nFROM $BASE_IMAGE_NAME\n\nRUN apt-get update -yqq && \\\n apt-get install --no-install-recommends -yqq autotools-dev autoconf libtool \\\nlibnuma-dev libnuma1 \\\nflex libopenblas-dev bzip2 python-pip \\\nvim gdb vim && \\\n pip install --no-cache-dir scons==3.1.0 && \\\n pip3 install --no-cache-dir numpy scons==3.1.0 && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /tmp\n\n\n# Install hwloc\nRUN export VERSION=2.2.0 && \\\n wget --progress=bar:force:noscroll https://www.open-mpi.org/software/hwloc/v2.2/downloads/hwloc-${VERSION}.tar.gz && \\\ntar -xvf ./hwloc-${VERSION}.tar.gz && cd hwloc-${VERSION} && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n--disable-opencl \\\n--disable-cairo \\\n--disable-nvml \\\n--disable-gl \\\n--disable-cuda \\\n--disable-libudev \\\n--enable-shared && \\\nmake -j $(nproc) && make install && cd .. && rm -rf ./hwloc* && rm ./hwloc-${VERSION}.tar.gz\n\n\n# Install OpenMPI\nRUN export VERSION=4.0.1 && \\\nwget --progress=bar:force:noscroll https://github.com/open-mpi/ompi/archive/refs/tags/v${VERSION}.tar.gz && \\\ntar -xvf ./v${VERSION}.tar.gz && cd ./ompi-${VERSION} && \\\n./autogen.pl && mkdir ./build && cd ./build && \\\n../configure \\\n--prefix=/usr \\\n--with-memory-manager=none \\\n--enable-static=yes \\\n--enable-shared \\\n--with-hwloc=/usr \\\n--enable-mpirun-prefix-by-default \\\n--with-cuda=/usr/local/cuda && \\\nmake -j $(nproc) && make install && cd ../.. && rm -rf ./ompi* && rm -rf ./v* && rm ./v${VERSION}.tar.gz\n\n\nRUN export VERSION=1.10.7 && \\\nwget --progress=bar:force:noscroll https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-${VERSION}/src/hdf5-${VERSION}.tar.bz2 && \\ \ntar -xvf hdf5-${VERSION}.tar.bz2 && cd hdf5-${VERSION} && \\\n CFLAGS=\"-fPIC\" CC=mpicc FC=mpif90 ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n--enable-parallel \\\n--with-zlib \\\n--disable-shared \\\n--enable-fortran \\\n--prefix=/usr && \\\nmake -j $(nproc) && make install && \\\ncd .. && rm -rf ./hdf5* && rm hdf5-${VERSION}.tar.bz2\n\n\nRUN export VERSION=4.7.4 && \\\nwget --progress=bar:force:noscroll ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-c-${VERSION}.tar.gz && \\\ntar -xvf netcdf-c-${VERSION}.tar.gz && \\\ncd netcdf-c-${VERSION} && \\\n CFLAGS=\"-fPIC\" CC=/usr/bin/h5pcc ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared=no --prefix=/usr --disable-dap && \\\nmake -j $(nproc) && make install && \\\ncd .. && rm -rf ./netcdf-c* && rm netcdf-c-${VERSION}.tar.gz\n\n\nRUN export VERSION=4.0.3 && \\\n wget https://glaros.dtc.umn.edu/gkhome/fetch/sw/parmetis/parmetis-${VERSION}.tar.gz && \\\ntar -xvf parmetis-${VERSION}.tar.gz && \\\ncd parmetis-${VERSION} && \\\nsed -i 's/IDXTYPEWIDTH 32/IDXTYPEWIDTH 64/g'  ./metis/include/metis.h && \\\nCC=mpicc CXX=mpicxx make config prefix=/usr && \\\nmake -j $(nproc) && make install && \\\ncp build/Linux-x86_64/libmetis/libmetis.a /usr/lib && \\\ncp metis/include/metis.h /usr/include && \\\ncd .. && rm -rf ./parmetis-* && rm parmetis-${VERSION}.tar.gz\n\n\nRUN export VERSION=1.16.1 && \\\ngit clone https://github.com/hfp/libxsmm.git && \\\ncd libxsmm && \\\ngit checkout ${VERSION} && \\\nmake -j $(nproc) generator && \\\ncp bin/libxsmm_gemm_generator /usr/bin && \\\ncd .. && rm -rf ./libxsmm*\n\n\nRUN export VERSION=4.9.3 && \\ \ngit clone https://github.com/OSGeo/PROJ.git && \\\ncd PROJ && git checkout ${VERSION} && \\\nmkdir build && cd build && \\\nCC=mpicc CXX=mpicxx cmake .. -DCMAKE_INSTALL_PREFIX=/usr && \\\nmake -j $(nproc) && make install && \\\ncd ../.. && rm -rf ./PROJ*\n\n\nRUN git clone https://github.com/SCOREC/core.git && \\\ncd core && \\\ngit checkout v2.2.6 && \\\nmkdir -p ./build && cd ./build && \\\ncmake .. -DCMAKE_INSTALL_PREFIX=/usr \\\n-DCMAKE_C_COMPILER=mpicc \\\n-DCMAKE_CXX_COMPILER=mpicxx \\\n-DCMAKE_BUILD_TYPE=Release \\\n-DSCOREC_CXX_FLAGS=\"-Wno-error=array-bounds\" && \\\nmake -j $(nproc) && make install && \\\ncd ../.. && rm -rf ./core\n\n\nRUN git clone --recurse-submodules https://github.com/SeisSol/PUMGen.git pumgen && \\\nmkdir -p ./pumgen/build && cd ./pumgen/build && \\\ncmake .. -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_C_COMPILER=mpicc -DCMAKE_CXX_COMPILER=mpicxx -DCMAKE_BUILD_TYPE=Release && \\\nmake -j $(nproc) && make install && \\\ncd ../.. && rm -rf ./pumgen\n\n\nRUN export VERSION=2.6.2 && \\\n apt install --no-install-recommends -yqq libjpeg-dev && \\\n apt install --no-install-recommends -yqq locales && locale-gen en_US.UTF-8 && \\\n pip3 install --no-cache-dir pytest==6.2.5 && \\\nwget --progress=bar:force:noscroll https://github.com/pybind/pybind11/archive/v${VERSION}.tar.gz && \\\ntar -xvf ./v${VERSION}.tar.gz && \\\ncd ./pybind11-${VERSION} && mkdir build && cd build && \\\nPYBIND11_USE_CMAKE=1 cmake .. -DPYTHON_EXECUTABLE=$(which python3) && \\\nmake -j $(nproc) && make install && cd .. && \\\nLANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8' python3 ./setup.py install && \\\ncd .. && rm -rf ./pybind11-${VERSION} ./v${VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n\nRUN export VERSION=0.6.2 && \\\ngit clone --depth 1 --branch yaml-cpp-${VERSION} https://github.com/jbeder/yaml-cpp.git yaml-cpp && \\\nmkdir -p yaml-cpp/build && cd yaml-cpp/build && \\\ncmake .. -DCMAKE_CXX_FLAGS=\"-fPIC\" && \\\nmake -j $(nproc) && make install && \\\ncd ../.. && rm -rf ./yaml-cpp\n\n\nRUN export VERSION=3.4.0 && \\\nwget --progress=bar:force:noscroll https://gitlab.com/libeigen/eigen/-/archive/${VERSION}/eigen-${VERSION}.tar.gz && \\\ntar -xf eigen-${VERSION}.tar.gz && \\\nmkdir eigen-${VERSION}/build && cd eigen-${VERSION}/build && \\\ncmake .. -DCMAKE_INSTALL_PREFIX=/usr && make -j $(nproc) install && \\\ncd ../.. && rm -rf ./eigen-${VERSION}* && rm eigen-${VERSION}.tar.gz\n\nARG SEISSOL_SHA_COMMIT=master\n\nRUN git clone https://github.com/SeisSol/SeisSol.git seissol && cd ./seissol && \\\ngit reset $SEISSOL_SHA_COMMIT --hard && \\\ngit submodule update --init --recursive && \\\nDIR=./preprocessing/meshing/cube_c/build && \\\nmkdir -p $DIR && cd $DIR && \\\nCC=mpicc CXX=mpicxx cmake .. && make -j $(nproc) && \\\ncp ./cubeGenerator /usr/bin && \\\ncd .. && rm -rf ./build\n\n\nRUN DIR=./seissol/preprocessing/meshing/gmsh2gambit && \\\nmkdir -p $DIR && cd $DIR && \\\nCC=gcc CXX=g++ scons && \\\ncp ./build/bin/gmsh2gambit /usr/bin && \\ \nrm -rf ./build\n\n\nRUN DIR=./seissol/preprocessing/science/rconv/build && \\\nmkdir -p $DIR && cd $DIR && \\\necho \"find_package(HDF5 REQUIRED COMPONENTS C HL)\" >> ../CMakeLists.txt && \\\necho \"target_link_libraries(SeisSol-rconv PUBLIC \\${HDF5_C_HL_LIBRARIES} \\${HDF5_C_LIBRARIES})\" >> ../CMakeLists.txt && \\\nCC=mpicc CXX=mpicxx cmake .. && make -j $(nproc) && \\\ncp ./rconv /usr/bin && \\\ncd /tmp && rm -rf ./seissol\n\n\n# Clean-up\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*\n\n\nWORKDIR /\n"
}