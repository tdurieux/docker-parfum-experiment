{
  "startTime": 1674252736204,
  "endTime": 1674252737825,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 0,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 0,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 0,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 0,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 0,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 0,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 0,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 0,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 0,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 0,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 0,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 0,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 0,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 0,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 0,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 0,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 0,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 0,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 0,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 1,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 1,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 1,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:10.2-devel-ubuntu18.04\n\n\nRUN apt-get update -yqq && \\\n apt-get install --no-install-recommends -yqq software-properties-common apt-utils build-essential wget git curl && \\\n apt-get install --no-install-recommends -yqq pkg-config tree && \\\n apt-get install --no-install-recommends -yqq python3 python3-dev python3-pip && \\\n pip3 install --no-cache-dir pylint pep8 flake8 && rm -rf /var/lib/apt/lists/*;\n\n\n# Install GCC compilers\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test && \\\n apt-get install --no-install-recommends -yqq gcc-8 g++-8 gfortran-8 && \\\n apt-get install --no-install-recommends -yqq gcc-9 g++-9 gfortran-9 && \\\nupdate-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 && \\\nupdate-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 100 && \\\nupdate-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-8 100 && rm -rf /var/lib/apt/lists/*;\n\n\n# Install cmake\nRUN export VERSION=3.20.0 && \\\nwget --progress=bar:force:noscroll https://github.com/Kitware/CMake/releases/download/v${VERSION}/cmake-${VERSION}-Linux-x86_64.sh && \\\nchmod +x ./cmake-${VERSION}-Linux-x86_64.sh && \\\n./cmake-${VERSION}-Linux-x86_64.sh --skip-license --prefix=/usr && \\\nrm ./cmake-${VERSION}-Linux-x86_64.sh && \\\ncmake --version\n\n\n# Install yaml-cpp\nRUN export VERSION=0.6.2 && \\\ngit clone --depth 1 --branch yaml-cpp-${VERSION} https://github.com/jbeder/yaml-cpp.git && \\\nmkdir -p yaml-cpp/build && cd yaml-cpp/build && \\\ncmake .. -DCMAKE_BUILD_TYPE=Release \\\n-DCMAKE_INSTALL_PREFIX=/usr/local \\\n-DBUILD_SHARED_LIBS=ON \\\n-DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n-DYAML_CPP_BUILD_TESTS=OFF && \\\nmake -j $(nproc) && \\\nmake install && \\\ncd ../.. && rm -rf ./yaml-cpp\n\n\n# Install googletest\nRUN export VERSION=1.10.0 && \\\ngit clone --depth 1 --branch release-${VERSION} https://github.com/google/googletest && \\\nmkdir -p googletest/build && cd googletest/build && \\\ncmake .. -DBUILD_GTEST=ON -DBUILD_GMOCK=ON -Dgtest_disable_pthreads=ON -DBUILD_SHARED_LIBS=ON && \\\nmake -j $(nproc) && \\\nmake install && \\\ncd ../.. && rm -rf ./googletest\n\n\n# Install ROCm 4.2\nRUN export VERSION=4.2 && \\\n apt-get install --no-install-recommends -yqq libnuma-dev gnupg2 && \\\n curl -f -sL https://repo.radeon.com/rocm/rocm.gpg.key | apt-key add - && \\\nsh -c 'echo deb [arch=amd64] http://repo.radeon.com/rocm/apt/${VERSION}/ ubuntu main > /etc/apt/sources.list.d/rocm.list' && \\\napt-get update -yqq && \\\n apt-get install --no-install-recommends -y rocm-dev && \\\necho 'export PATH=$PATH:/opt/rocm/bin:/opt/rocm/rocprofiler/bin:/opt/rocm/opencl/bin' | tee -a /etc/profile.d/rocm.sh && \\\necho 'export HIPCC_VERBOSE=7' | tee -a /etc/profile.d/rocm.sh && \\\necho 'export HIP_PLATFORM=nvidia' | tee -a /etc/profile.d/rocm.sh && rm -rf /var/lib/apt/lists/*;\n\n\n# Install boost\nRUN export VERSION=1_69_0 && \\\nDOT_VERSION=$(echo $VERSION | sed 's/\\([0-9]*\\)_\\([0-9]*\\)_\\([0-9]*\\)/\\1\\.\\2\\.\\3/') && \\\nwget --progress=bar:force:noscroll https://boostorg.jfrog.io/artifactory/main/release/${DOT_VERSION}/source/boost_${VERSION}.tar.gz && \\\ntar -xvf ./boost_${VERSION}.tar.gz && \\\ncd boost_${VERSION} && \\\n./bootstrap.sh --prefix=/usr/local --with-toolset=gcc --with-libraries=serialization,wave,date_time,iostreams,locale,math,random,context,regex,program_options,atomic,timer,log,fiber,chrono,thread,exception,system,test,graph,filesystem && \\\necho \"using gcc : : /usr/bin/g++-9 ;\" > user-config.jam && \\\n./b2 --clean && \\\n./b2 install threading=multi variant=release toolset=gcc link=shared cxxflags=\"-std=c++17\" visibility=hidden address-model=64 architecture=x86 -j $(nproc) --user-config=\"user-config.jam\" && \\\ncd ../ && rm -rf ./boost* && rm ./boost_${VERSION}.tar.gz\n\n\n# Install llvm and clang\nRUN export VERSION=11.0.1 && \\\ngit clone --depth 1 --branch llvmorg-${VERSION} https://github.com/llvm/llvm-project.git && \\\nmkdir -p llvm-project/build && cd llvm-project/build && \\\nCC=/usr/bin/gcc-9 CXX=/usr/bin/g++-9 cmake ../llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS=clang -DGCC_INSTALL_PREFIX=/usr && \\\nmake -j $(nproc) && \\\nmake install && \\\ncd ../../ && rm -rf ./llvm-project\n\n\n# Install hipsycl\nRUN export VERSION=0.9.1 && \\\n apt install --no-install-recommends -yqq libomp-dev && \\\ngit clone --depth 1 --branch v${VERSION} https://github.com/illuhad/hipSYCL.git hipsycl && \\\ncd hipsycl && \\\ngit submodule update --init --recursive && \\\nmkdir build && cd build && \\\nCC=/usr/bin/gcc-9 CXX=/usr/bin/g++-9 cmake .. \\\n-DCMAKE_BUILD_TYPE:STRING=Release \\\n-DCMAKE_INSTALL_PREFIX=/usr/local \\\n-DWITH_CPU_BACKEND:Bool=TRUE \\\n-DWITH_ROCM_BACKEND:Bool=FALSE \\\n-DWITH_CUDA_BACKEND:Bool=TRUE \\\n-DLLVM_DIR:String=/usr/local/lib/cmake/llvm \\\n-DCLANG_INCLUDE_PATH:String=/usr/local/lib/clang/11.0.1/include \\\n-DCLANG_EXECUTABLE_PATH:String=/usr/local/bin/clang++ \\\n-DCUDA_TOOLKIT_ROOT_DIR:String=/usr/local/cuda && \\\nmake -j $(nproc) && make install && cd ../.. && rm -rf ./hipsycl && rm -rf /var/lib/apt/lists/*;\n\n\n# Clean-up\nRUN apt-get clean &&   rm -rf /var/lib/apt/lists/*\n"
}