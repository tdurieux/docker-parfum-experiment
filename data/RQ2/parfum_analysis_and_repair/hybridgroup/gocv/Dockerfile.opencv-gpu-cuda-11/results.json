{
  "startTime": 1674248256401,
  "endTime": 1674248257271,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# to build this docker image:\n#   docker build -f Dockerfile.opencv-gpu-cuda-11 -t gocv/opencv:4.6.0-gpu-cuda-11 .\nFROM nvidia/cuda:11.5.2-cudnn8-devel-ubuntu20.04 AS opencv-gpu-cuda-11-base\nLABEL maintainer=\"hybridgroup\"\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n            git build-essential cmake pkg-config unzip libgtk2.0-dev \\\n            wget curl ca-certificates libcurl4-openssl-dev libssl-dev \\\n            libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev \\\n            libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev && \\\n            rm -rf /var/lib/apt/lists/*\n\nARG OPENCV_VERSION=\"4.6.0\"\nENV OPENCV_VERSION $OPENCV_VERSION\n\nRUN curl -f -Lo opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \\\n    unzip -q opencv.zip && \\\n    curl -f -Lo opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip && \\\n    unzip -q opencv_contrib.zip && \\\n    rm opencv.zip opencv_contrib.zip && \\\n    cd opencv-${OPENCV_VERSION} && \\\n    mkdir build && cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n            -D WITH_IPP=OFF \\\n            -D WITH_OPENGL=OFF \\\n            -D WITH_QT=OFF \\\n            -D CMAKE_INSTALL_PREFIX=/usr/local \\\n            -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-${OPENCV_VERSION}/modules \\\n            -D OPENCV_ENABLE_NONFREE=ON \\\n            -D WITH_JASPER=OFF \\\n            -D BUILD_DOCS=OFF \\\n            -D BUILD_EXAMPLES=OFF \\\n            -D BUILD_TESTS=OFF \\\n            -D BUILD_PERF_TESTS=OFF \\\n            -D BUILD_opencv_java=NO \\\n            -D BUILD_opencv_python=NO \\\n            -D BUILD_opencv_python2=NO \\\n            -D BUILD_opencv_python3=NO \\\n            -D WITH_TBB=ON \\\n            -D WITH_CUDA=ON \\\n            -D ENABLE_FAST_MATH=1 \\\n            -D CUDA_FAST_MATH=1 \\\n            -D WITH_CUBLAS=1 \\\n            -D CUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda/ \\\n            -D BUILD_opencv_cudacodec=OFF \\\n            -D WITH_CUDNN=ON \\\n            -D OPENCV_DNN_CUDA=ON \\\n            -D CUDA_GENERATION=Auto \\\n            -D OPENCV_GENERATE_PKGCONFIG=ON .. && \\\n    make -j $(nproc --all) && \\\n    make preinstall && make install && ldconfig && \\\n    cd / && rm -rf opencv*\n\n# install golang here\nFROM opencv-gpu-cuda-11-base AS opencv-gpu-cuda-11-golang\n\nENV GO_RELEASE=1.18.3\nRUN wget https://dl.google.com/go/go${GO_RELEASE}.linux-amd64.tar.gz && \\\n    tar xfv go${GO_RELEASE}.linux-amd64.tar.gz -C /usr/local && \\\n    rm go${GO_RELEASE}.linux-amd64.tar.gz\nENV PATH=\"${PATH}:/usr/local/go/bin\"\n\nCMD [\"go version\"]\n"
}