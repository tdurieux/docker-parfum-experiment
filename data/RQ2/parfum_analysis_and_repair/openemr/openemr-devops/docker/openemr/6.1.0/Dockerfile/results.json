{
  "startTime": 1674215602589,
  "endTime": 1674215603742,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15\n\n#Install dependencies and fix issue in apache\nRUN apk --no-cache upgrade\nRUN apk add --no-cache \\\n    apache2 apache2-ssl apache2-utils git php8 php8-tokenizer php8-ctype php8-session php8-apache2 \\\n    php8-json php8-pdo php8-pdo_mysql php8-curl php8-ldap php8-openssl php8-iconv \\\n    php8-xml php8-xsl php8-gd php8-zip php8-soap php8-mbstring php8-zlib \\\n    php8-mysqli php8-sockets php8-xmlreader php8-redis php8-simplexml php8-xmlwriter php8-phar php8-fileinfo \\\n    php8-sodium php8-calendar php8-intl \\\n    perl mysql-client tar curl imagemagick nodejs npm \\\n    python2 python3 openssl py-pip openssl-dev dcron \\\n    rsync shadow ncurses \\\n    && sed -i 's/^Listen 80$/Listen 0.0.0.0:80/' /etc/apache2/httpd.conf\n# Needed to ensure permissions work across shared volumes with openemr, nginx, and php-fpm dockers\nRUN usermod -u 1000 apache\n\n#BELOW LINE NEEDED TO SUPPORT PHP8 ON ALPINE 3.13+; SHOULD BE ABLE TO REMOVE THIS IN FUTURE ALPINE VERSIONS\nRUN cp /usr/bin/php8 /usr/bin/php\n# Install composer for openemr package building\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer\n\nRUN apk add --no-cache git build-base libffi-dev python3-dev cargo \\\n    && git clone https://github.com/openemr/openemr.git --branch rel-610 --depth 1 \\\n    && rm -rf openemr/.git \\\n    && cd openemr \\\n    && composer install --no-dev \\\n    && npm install --unsafe-perm \\\n    && npm run build \\\n    && cd ccdaservice \\\n    && npm install --unsafe-perm \\\n    && cd ../ \\\n    && composer global require phing/phing \\\n    && /root/.composer/vendor/bin/phing vendor-clean \\\n    && /root/.composer/vendor/bin/phing assets-clean \\\n    && composer global remove phing/phing \\\n    && composer dump-autoload -o \\\n    && composer clearcache \\\n    && npm cache clear --force \\\n    && rm -fr node_modules \\\n    && cd ../ \\\n    && chmod 666 openemr/sites/default/sqlconf.php \\\n    && chown -R apache openemr/ \\\n    && mv openemr /var/www/localhost/htdocs/ \\\n    && git clone https://github.com/letsencrypt/letsencrypt --depth 1 /opt/certbot \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir -e /opt/certbot/acme -e \\\n    && mkdir -p /etc/ssl/certs /etc/ssl/private \\\n    && apk del --no-cache git build-base libffi-dev python3-dev cargo \\\n    && sed -i 's/^ *CustomLog/#CustomLog/' /etc/apache2/httpd.conf \\\n    && sed -i 's/^ *ErrorLog/#ErrorLog/' /etc/apache2/httpd.conf \\\n    && sed -i 's/^ *CustomLog/#CustomLog/' /etc/apache2/conf.d/ssl.conf \\\n    && sed -i 's/^ *TransferLog/#TransferLog/' /etc/apache2/conf.d/ssl.conf\n\nWORKDIR /var/www/localhost/htdocs/openemr\nVOLUME [ \"/etc/letsencrypt/\", \"/etc/ssl\" ]\n#configure apache & php properly\nENV APACHE_LOG_DIR=/var/log/apache2\nCOPY php.ini /etc/php8/php.ini\nCOPY openemr.conf /etc/apache2/conf.d/\n#add runner and auto_configure and prevent auto_configure from being run w/o being enabled\nCOPY openemr.sh ssl.sh xdebug.sh auto_configure.php /var/www/localhost/htdocs/openemr/\nCOPY utilities/unlock_admin.php utilities/unlock_admin.sh /root/\nRUN chmod 500 openemr.sh ssl.sh xdebug.sh /root/unlock_admin.sh \\\n    && chmod 000 auto_configure.php /root/unlock_admin.php\n#bring in pieces used for automatic upgrade process\nCOPY upgrade/docker-version \\\n     upgrade/fsupgrade-1.sh \\\n     upgrade/fsupgrade-2.sh \\\n     upgrade/fsupgrade-3.sh \\\n     /root/\nRUN chmod 500 \\\n    /root/fsupgrade-1.sh \\\n    /root/fsupgrade-2.sh \\\n    /root/fsupgrade-3.sh\n#fix issue with apache2 dying prematurely\nRUN mkdir -p /run/apache2\n#Copy dev tools library to root\nCOPY utilities/devtoolsLibrary.source /root/\n#Ensure swarm/orchestration pieces are available if needed\nRUN mkdir /swarm-pieces \\\n    && rsync --owner --group --perms --delete --recursive --links /etc/ssl /swarm-pieces/ \\\n    && rsync --owner --group --perms --delete --recursive --links /var/www/localhost/htdocs/openemr/sites /swarm-pieces/\n#go\nCMD [ \"./openemr.sh\" ]\n\nEXPOSE 80 443\n"
}