{
  "startTime": 1674256013079,
  "endTime": 1674256014140,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file describes an image that is capable of building Flux.\n\n# \"Wait,\" you ask. \"What's going on here?\" Rather than handling rustup validation\n# and verification, we can list the rust container as a prior build stage, and\n# then pull in the artifacts we need. There is an added benefit that tagged versions\n# also include minor releases, so 1.2 includes 1.2.1 and so on, for bugfix releases.\nFROM rust:1.55 as RUSTBUILD\n\nFROM golang:1.17\n\n# Install common packages\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    openssl libtinfo5 ruby \\\n    ca-certificates curl file gnupg \\\n    build-essential cmake nodejs npm \\\n    libxml2-dev libssl-dev zlib1g-dev \\\n    autoconf automake autotools-dev libtool xutils-dev valgrind && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install rust and rust tooling\nCOPY --from=RUSTBUILD /usr/local/cargo /usr/local/cargo\nCOPY --from=RUSTBUILD /usr/local/rustup /usr/local/rustup\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:/usr/local/bin:/usr/local/ragel7/bin:$PATH\nRUN rustup component add rustfmt clippy && \\\n    # Use sccache rustc wrapper for friendly build caching\n    cargo install sccache && \\\n    cargo install wasm-pack && \\\n    rustup component add rust-std --target wasm32-unknown-unknown\n# This is defined separately, so it doesn't attempt to use sccache until it is\n# actually installed.\nENV RUSTC_WRAPPER=sccache\n\n# Install additional tooling and requirements for building flux.\nENV COLM_VERSION=0.14.2\nENV RAGEL7_VERSION=7.0.1\nCOPY .thurston.asc thurston.asc\nRUN gpg --batch --import thurston.asc && \\\n    curl -f https://www.colm.net/files/colm/colm-${COLM_VERSION}.tar.gz -O && \\\n    curl -f https://www.colm.net/files/colm/colm-${COLM_VERSION}.tar.gz.asc -O && \\\n    gpg --batch --verify colm-${COLM_VERSION}.tar.gz.asc colm-${COLM_VERSION}.tar.gz && \\\n    tar -xzf colm-${COLM_VERSION}.tar.gz && \\\n    cd colm-${COLM_VERSION}/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/ragel7 --disable-manual && \\\n    make && \\\n    make install && \\\n    cd .. && rm -rf colm-${COLM_VERSION}* && \\\n    curl -f https://www.colm.net/files/ragel/ragel-${RAGEL7_VERSION}.tar.gz -O && \\\n    curl -f https://www.colm.net/files/ragel/ragel-${RAGEL7_VERSION}.tar.gz.asc -O && \\\n    gpg --batch --verify ragel-${RAGEL7_VERSION}.tar.gz.asc ragel-${RAGEL7_VERSION}.tar.gz && \\\n    tar -xzf ragel-${RAGEL7_VERSION}.tar.gz && \\\n    cd ragel-${RAGEL7_VERSION}/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/ragel7 --with-colm=/usr/local/ragel7 --disable-manual && \\\n    make && \\\n    make install && \\\n    cd .. && rm -rf ragel-${RAGEL7_VERSION}* && rm colm-${COLM_VERSION}.tar.gz\nENV FLATBUFFERS_VERSION=2.0.0 \\\n    FLATBUFFERS_CHECKSUM=9ddb9031798f4f8754d00fca2f1a68ecf9d0f83dfac7239af1311e4fd9a565c4\nRUN curl -f -LS https://github.com/google/flatbuffers/archive/v${FLATBUFFERS_VERSION}.tar.gz -O && \\\n    echo \"${FLATBUFFERS_CHECKSUM}  v${FLATBUFFERS_VERSION}.tar.gz\" | sha256sum --check -- && \\\n    tar xvzf v${FLATBUFFERS_VERSION}.tar.gz && \\\n    mkdir flatbuffers-${FLATBUFFERS_VERSION}/build && \\\n    cd flatbuffers-${FLATBUFFERS_VERSION}/build && \\\n    cmake -G \"Unix Makefiles\" .. && \\\n    make && make install && \\\n    cd ../.. && rm -rf flatbuffers-${FLATBUFFERS_VERSION} v${FLATBUFFERS_VERSION}.tar.gz\n\n# Add builder user\nENV UNAME=builder\nARG UID=1000\nARG GID=1000\nRUN groupadd -g $GID -o $UNAME\nRUN useradd -m -u $UID -g $UNAME -s /bin/bash $UNAME\nUSER $UNAME\nENV HOME=/home/$UNAME \\\n    CARGO_HOME=/home/$UNAME/.cargo\n\nWORKDIR $HOME\n"
}