{
  "startTime": 1674215279389,
  "endTime": 1674215280374,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 36,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 70,
        "columnEnd": 112
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 184,
        "columnEnd": 200
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-alpine\n\nWORKDIR /opt/service\n\n# update all OS dependencies to prevent vuln's\nRUN apk update && apk upgrade apk-tools\n\n# Copy PJ, changes should invalidate entire image\nCOPY package.json yarn.lock /opt/service/\n\n# Copy commong typings\nCOPY typings /opt/service/typings\n\n# Copy TS configs\nCOPY tsconfig* /opt/service/\n\n# Build backend\nCOPY src /opt/service/src\n\n# Build Frontend\nCOPY webpack.*.js README.md /opt/service/\n\nCOPY tools /opt/service/tools\n\n# Install dependencies\nRUN yarn --cache-folder ../ycach && NODE_ENV=production yarn build && yarn --production --cache-folder ../ycache && rm -rf ../ycache && rm -rf src && rm -rf tools && rm -rf typings && yarn cache clean;\n\nENV NODE_ENV=production\n\nEXPOSE 8080\n\nENTRYPOINT [\"npm\", \"run\", \"start\", \"--\"]\n"
}