{
  "startTime": 1674253370034,
  "endTime": 1674253370809,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#   Copyright 2020 Docker Compose CLI authors\n\n#   Licensed under the Apache License, Version 2.0 (the \"License\");\n#   you may not use this file except in compliance with the License.\n#   You may obtain a copy of the License at\n\n#       http://www.apache.org/licenses/LICENSE-2.0\n\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n\n# Distro options: ubuntu, centos\nARG DISTRO=ubuntu\n\nFROM ubuntu:20.04 AS base-ubuntu\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f https://get.docker.com | sh\n\nFROM centos:7 AS base-centos\nRUN curl -f https://get.docker.com | sh\n\nFROM base-${DISTRO} AS install\n\nRUN apt-get update && apt-get -y --no-install-recommends install sudo && rm -rf /var/lib/apt/lists/*;\nRUN adduser --disabled-password --gecos '' newuser\nRUN adduser newuser sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER newuser\nWORKDIR /home/newuser\n\nCOPY install_linux.sh /scripts/install_linux.sh\nRUN sudo chmod +x /scripts/install_linux.sh\nARG DOWNLOAD_URL=\nRUN DOWNLOAD_URL=${DOWNLOAD_URL} /scripts/install_linux.sh\nRUN docker version | grep Cloud\n\nFROM install AS upgrade\n\nUSER newuser\nWORKDIR /home/newuser\n\nRUN DOWNLOAD_URL=${DOWNLOAD_URL} /scripts/install_linux.sh\nRUN docker version | grep Cloud\n\n# To run this test locally, start an HTTP server that serves the dist/ folder\n# then run a docker build passing the DOWNLOAD_URL as a build arg:\n# $ cd dist/ && python3 -m http.server &\n# $ docker build -f test.Dockerfile --build-arg DOWNLOAD_URL=http://192.168.0.22:8000/docker-linux-amd64.tar.gz .\n#\n# You can specify centos or ubuntu as distros using the DISTRO build arg.\n"
}