{
  "startTime": 1674251434508,
  "endTime": 1674251435296,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VERSION=3.7\n\nFROM python:${PYTHON_VERSION}\n\nARG APT_MIRROR\nRUN sed -ri \"s/(httpredir|deb).debian.org/${APT_MIRROR:-deb.debian.org}/g\" /etc/apt/sources.list \\\n    && sed -ri \"s/(security).debian.org/${APT_MIRROR:-security.debian.org}/g\" /etc/apt/sources.list\n\nRUN apt-get update && apt-get -y install --no-install-recommends \\\n    gnupg2 \\\n    pass && rm -rf /var/lib/apt/lists/*;\n\n# Add SSH keys and set permissions\nCOPY tests/ssh-keys /root/.ssh\nRUN chmod -R 600 /root/.ssh\n\nCOPY ./tests/gpg-keys /gpg-keys\nRUN gpg2 --import gpg-keys/secret\nRUN gpg2 --import-ownertrust gpg-keys/ownertrust\nRUN yes | pass init $(gpg2 --no-auto-check-trustdb --list-secret-key | awk '/^sec/{getline; $1=$1; print}')\nRUN gpg2 --check-trustdb\nARG CREDSTORE_VERSION=v0.6.3\nRUN curl -f -sSL -o /opt/docker-credential-pass.tar.gz \\\n    https://github.com/docker/docker-credential-helpers/releases/download/$CREDSTORE_VERSION/docker-credential-pass-$CREDSTORE_VERSION-amd64.tar.gz && \\\n    tar -xf /opt/docker-credential-pass.tar.gz -O > /usr/local/bin/docker-credential-pass && \\\n    rm -rf /opt/docker-credential-pass.tar.gz && \\\n    chmod +x /usr/local/bin/docker-credential-pass\n\nWORKDIR /src\nCOPY requirements.txt /src/requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY test-requirements.txt /src/test-requirements.txt\nRUN pip install --no-cache-dir -r test-requirements.txt\n\nCOPY . /src\nRUN pip install --no-cache-dir .\n"
}