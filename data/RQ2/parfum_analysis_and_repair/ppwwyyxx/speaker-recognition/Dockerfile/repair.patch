diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ppwwyyxx/speaker-recognition/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ppwwyyxx/speaker-recognition/Dockerfile/repaired.Dockerfile
index 708eb51..b2fd5db 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ppwwyyxx/speaker-recognition/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ppwwyyxx/speaker-recognition/Dockerfile/repaired.Dockerfile
@@ -1,21 +1,21 @@
 ###############################################################################
 # Dockerfile for https://github.com/ppwwyyxx/speaker-recognition
 # -----------------------------------------------------------------------------
-# Docker provides a way to run applications securely isolated in a container, 
+# Docker provides a way to run applications securely isolated in a container,
 # packaged with all its dependencies and libraries.
 #
 # This Dockerfile produces a docker image, from which containers can be created
-# * An image is a lightweight, stand-alone, executable package that includes 
+# * An image is a lightweight, stand-alone, executable package that includes
 #   everything needed to run a piece of software, including the code, a runtime,
 #   libraries, environment variables, and config files.
 # * A container is a runtime instance of an image – what the image becomes in
-#   memory when actually executed. It runs completely isolated from the host 
-#   environment by default, only accessing host files and ports if configured 
+#   memory when actually executed. It runs completely isolated from the host
+#   environment by default, only accessing host files and ports if configured
 #   to do so.
 #
-# Containers run apps natively on the host machine’s kernel. 
+# Containers run apps natively on the host machine’s kernel.
 # They have better performance than virtual machines that only get virtual
-# access to host resources through a hypervisor. 
+# access to host resources through a hypervisor.
 # Images or containers can easily be exchanged and many users publish images in
 # the docker hub (https://hub.docker.com/).  Docker further enables upscaling
 # of solutions from single workstation to server farms through docker swarms.
@@ -27,8 +27,8 @@
 # -----------------------------------------------------------------------------
 # Pull an image from the docker hub
 # > docker pull <image name>
-# 
-# Build this Dockerfile (place it in an empty folder and cd to it): 
+#
+# Build this Dockerfile (place it in an empty folder and cd to it):
 # > docker build -f Dockerfile -t speaker-recognition .
 #
 # Instantiate a container from an image
@@ -38,7 +38,7 @@
 #
 # Run a stopped container
 # > docker start -ai speaker-recognitionInstance
-# 
+#
 # Run the speaker_recognition.py directly thorough the configured entry point
 # > docker run -v local_path:remote_path speaker-recognition
 #
@@ -54,8 +54,8 @@ ENV DEBIAN_FRONTEND=noninteractive
 # Prepare package management
 ###############################################################################
 RUN apt-get update && \
-    apt-get install -y nano sudo tzdata apt-utils && \
-    apt-get -y dist-upgrade
+    apt-get install --no-install-recommends -y nano sudo tzdata apt-utils && \
+    apt-get -y dist-upgrade && rm -rf /var/lib/apt/lists/*;
 
 
 # Set timezone
@@ -83,27 +83,27 @@ RUN useradd -m $USERNAME && \
 
 # Python 2
 ###############################################################################
-RUN apt-get update && apt-get install -y python python-pip && \
-    pip2 list --outdated | cut -d' ' -f1 | xargs -n 1 pip2 install --upgrade
+RUN apt-get update && apt-get install --no-install-recommends -y python python-pip && \
+    pip2 list --outdated | cut -d' ' -f1 | xargs -n 1 pip2 install --upgrade && rm -rf /var/lib/apt/lists/*;
 
 
 # Base Dependencies
 ###############################################################################
-RUN apt-get install -y portaudio19-dev libopenblas-base libopenblas-dev pkg-config git-core cmake python-dev liblapack-dev libatlas-base-dev libblitz0-dev libboost-all-dev libhdf5-serial-dev libqt4-dev libsvm-dev libvlfeat-dev  python-nose python-setuptools python-imaging build-essential libmatio-dev python-sphinx python-matplotlib python-scipy
+RUN apt-get install --no-install-recommends -y portaudio19-dev libopenblas-base libopenblas-dev pkg-config git-core cmake python-dev liblapack-dev libatlas-base-dev libblitz0-dev libboost-all-dev libhdf5-serial-dev libqt4-dev libsvm-dev libvlfeat-dev python-nose python-setuptools python-imaging build-essential libmatio-dev python-sphinx python-matplotlib python-scipy && rm -rf /var/lib/apt/lists/*;
 # additional dependencies for bob
-RUN apt-get install -y libfftw3-dev libtiff5-dev libgif-dev libpng-dev libjpeg-dev
+RUN apt-get install --no-install-recommends -y libfftw3-dev libtiff5-dev libgif-dev libpng-dev libjpeg-dev && rm -rf /var/lib/apt/lists/*;
 
 # Spear
 # https://gitlab.idiap.ch/bob/bob/wikis/Dependencies
 # Takes a very long time to install python packages because compilation is happening in the background
 ###############################################################################
-RUN pip2 install scipy scikit-learn scikits.talkbox numpy pyside pyssp PyAudio argparse h5py
-RUN pip2 install bob.extension
-RUN pip2 install bob.blitz
-RUN pip2 install bob.core
-RUN pip2 install bob.io.base
-RUN pip2 install bob.bio.spear
-RUN pip2 install bob.sp
+RUN pip2 install --no-cache-dir scipy scikit-learn scikits.talkbox numpy pyside pyssp PyAudio argparse h5py
+RUN pip2 install --no-cache-dir bob.extension
+RUN pip2 install --no-cache-dir bob.blitz
+RUN pip2 install --no-cache-dir bob.core
+RUN pip2 install --no-cache-dir bob.io.base
+RUN pip2 install --no-cache-dir bob.bio.spear
+RUN pip2 install --no-cache-dir bob.sp
 
 
 # Realtime Speaker Recognition