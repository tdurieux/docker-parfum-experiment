{
  "startTime": 1674252355258,
  "endTime": 1674252356083,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# For lint test\n# CI docker lint env\n# tag: v0.60\nFROM ubuntu:18.04\n\nRUN apt-get update --fix-missing\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget git sudo make parallel && rm -rf /var/lib/apt/lists/*;\n\nCOPY install/ubuntu1804_install_python.sh /install/ubuntu1804_install_python.sh\nRUN bash /install/ubuntu1804_install_python.sh\n\n# Globally disable pip cache\nRUN pip config set global.no-cache-dir false\n\nRUN apt-get update && apt-get install --no-install-recommends -y doxygen graphviz curl shellcheck && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir cpplint pylint==2.4.4 mypy==0.902 black==22.3.0 flake8==3.9.2 blocklint==0.2.3 jinja2==3.0.3\n\n# Rust env (build early; takes a while)\nCOPY install/ubuntu_install_rust.sh /install/ubuntu_install_rust.sh\nRUN bash /install/ubuntu_install_rust.sh\nENV RUSTUP_HOME /opt/rust\nENV CARGO_HOME /opt/rust\nENV PATH $PATH:$CARGO_HOME/bin\n\n# java deps for rat\nCOPY install/ubuntu_install_java.sh /install/ubuntu_install_java.sh\nRUN bash /install/ubuntu_install_java.sh\n\nCOPY install/ubuntu_install_rat.sh /install/ubuntu_install_rat.sh\nRUN bash /install/ubuntu_install_rat.sh\n\nCOPY install/ubuntu1804_install_clang_format.sh /install/ubuntu1804_install_clang_format.sh\nRUN bash /install/ubuntu1804_install_clang_format.sh\n\nCOPY install/ubuntu_install_nodejs.sh /install/ubuntu_install_nodejs.sh\nRUN bash /install/ubuntu_install_nodejs.sh\n\n# To prevent `black` command line errors caused by ASCII encoding\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n"
}