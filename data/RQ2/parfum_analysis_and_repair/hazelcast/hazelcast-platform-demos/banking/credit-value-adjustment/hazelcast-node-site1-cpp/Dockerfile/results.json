{
  "startTime": 1674248825740,
  "endTime": 1674248826627,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM hazelcast-platform-demos/cva-cpp:latest\n\nRUN apt update\nRUN cd /tmp ; \\\n    wget -q https://download.java.net/java/GA/jdk17/0d483333a00540d886896bac774ff48b/35/GPL/openjdk-17_linux-x64_bin.tar.gz ; \\\n    tar xf openjdk-17_linux-x64_bin.tar.gz ; rm openjdk-17_linux-x64_bin.tar.gz\nRUN update-alternatives --install /usr/bin/java java /tmp/jdk-17/bin/java 1\nRUN java --version\n\nCOPY --from=hazelcast-platform-demos/cva-hazelcast-node-site1  application.jar /application.jar\n\n# Wrapper script starts Jet node and gRPC server(s)\nCOPY target/classes/cvaWrapper.sh /cvaWrapper.sh\nRUN chmod u+x /cvaWrapper.sh\n\n# Default values provided\nENV MY_KUBERNETES_ENABLED \"true\"\nENV MY_INITSIZE \"\"\nENV MY_PARTITIONS \"\"\n\nENV JAVA_ARGS \"\"\nENV JAVA_HEAP_SIZE \"4g\"\nENV JAVA_OPTS \"--add-modules java.se --add-exports java.base/jdk.internal.ref=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.management/sun.management=ALL-UNNAMED --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED\"\n\nENTRYPOINT exec /cvaWrapper.sh $0 $1 \\\n  $JAVA_ARGS \\\n  -XX:+UseG1GC -XX:ActiveProcessorCount=1 \\\n  -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp -XX:+ShowMessageBoxOnError \\\n  -Xmx$JAVA_HEAP_SIZE -Xms$JAVA_HEAP_SIZE $JAVA_OPTS \\\n -Dmy.docker.enabled=true \\\n -Dmy.kubernetes.enabled=$MY_KUBERNETES_ENABLED \\\n -Dmy.initSize=$MY_INITSIZE \\\n -Dmy.partitions=$MY_PARTITIONS\n"
}