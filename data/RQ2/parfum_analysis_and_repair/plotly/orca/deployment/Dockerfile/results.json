{
  "startTime": 1674253020687,
  "endTime": 1674253021926,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 17,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 22,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 25,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 22,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\n####################\n# Install node and dependencies\n# From: https://github.com/nodejs/docker-node/blob/master/6.11/Dockerfile\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        gnupg curl ca-certificates xz-utils wget libgtk2.0-0 libgconf-2-4 \\\n        libxss1 \\\n    && rm -rf /var/lib/apt/lists/* && apt-get clean\n\n# From https://github.com/nodejs/docker-node/blob/main/14/buster/Dockerfile\nRUN groupadd --gid 1000 node \\\n&& useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\nENV NODE_VERSION 8.17.0\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  # gpg keys listed at https://github.com/nodejs/node#release-keys\n  && set -ex \\\n  && for key in \\\n    4ED778F539E3634C779C87C6D7062848A1AB005C \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    74F12602B6F1C4E913FAA37AD3A89613643B6201 \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n    108F52B48DB57BB0CC439B2997B01419BD92F80A \\\n    B9E2F5981AA6E0CD28160D9FF13993A75599653C \\\n  ; do \\\n      # From https://github.com/nodejs/docker-node/issues/1500#issuecomment-865693819\n      gpg --batch --keyserver hkp://keyserver.ubuntu.com --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://keys.openpgp.org --recv-keys \"$key\" ; \\\n  done \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n  # smoke tests\n  && node --version \\\n  && npm --version\n\n####################\n# Download fonts\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y \\\n        fontconfig \\\n        fonts-ipafont-gothic \\\n        fonts-ipafont-mincho \\\n        subversion \\\n        && \\\n    rm -rf /var/lib/apt/lists/* && apt-get clean && \\\n    cd /usr/share/fonts/truetype && \\\n    for font in \\\n      https://github.com/google/fonts/trunk/apache/droidsansmono \\\n      https://github.com/google/fonts/trunk/apache/droidsans \\\n      https://github.com/google/fonts/trunk/apache/droidserif \\\n      https://github.com/google/fonts/trunk/apache/roboto \\\n      https://github.com/google/fonts/trunk/apache/opensans \\\n      https://github.com/google/fonts/trunk/ofl/gravitasone \\\n      https://github.com/google/fonts/trunk/ofl/oldstandardtt \\\n      https://github.com/google/fonts/trunk/ofl/ptsansnarrow \\\n      https://github.com/google/fonts/trunk/ofl/raleway \\\n      https://github.com/google/fonts/trunk/ofl/overpass \\\n    ; do \\\n      svn checkout $font ; \\\n    done && \\\n    mkdir /usr/share/fonts/user && \\\n    fc-cache -fv && apt-get --auto-remove -y remove subversion\n\n####################\n# Download mathjax (same version as plotly.js extras/)\n\nRUN mkdir /mathjax && cd /mathjax && \\\n    curl -f -L https://github.com/mathjax/MathJax/archive/2.3.0.tar.gz \\\n    | tar -xvzf - --strip-components=2 MathJax-2.3.0/unpacked\n\n####################\n# Install and configure monit\nCOPY deployment/monitrc /etc\nRUN cd /opt && \\\n    wget -q -O - https://mmonit.com/monit/dist/binary/5.25.1/monit-5.25.1-linux-x64.tar.gz | \\\n        tar xvzf - && \\\n    ln -s monit-* monit && \\\n    chmod 600 /etc/monitrc\n\n####################\n# Install latest stable Inkscape\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common python-software-properties \\\n    && add-apt-repository -y ppa:inkscape.dev/stable \\\n    && apt-get update && apt-get install --no-install-recommends -y inkscape=0.92.5+68~ubuntu16.04.1 \\\n    && rm -rf /var/lib/apt/lists/* && apt-get clean\n\n# Copy Inkscape defaults\nCOPY deployment/preferences.xml /root/.config/inkscape/\n\n####################\n# Download geo-assets (same version as plotly.js extras/)\n\nRUN wget https://raw.githubusercontent.com/plotly/plotly.js/master/dist/plotly-geo-assets.js -O /plotly-geo-assets.js\n\n####################\n# Configure ImageMagick policy\n\nCOPY deployment/ImageMagickPolicy.xml /etc/ImageMagick-6/policy.xml\n\n####################\n# Copy and set up Orca\n\nRUN apt-get update && apt-get install --no-install-recommends -y chromium-browser fonts-liberation xvfb poppler-utils git libxss1 \\\n    && rm -rf /var/lib/apt/lists/* && apt-get clean\n\nCOPY package.json /var/www/image-exporter/\nCOPY package-lock.json /var/www/image-exporter/\nWORKDIR /var/www/image-exporter\nRUN npm install && mkdir build && npm cache clean --force;\nCOPY bin /var/www/image-exporter/bin\nCOPY src /var/www/image-exporter/src\n\n####################\n# Add entrypoint script\nCOPY deployment/entrypoint.sh /\n# Add server script\nCOPY deployment/run_server /\n# Symlink to entrypoint\nRUN ln -s /entrypoint.sh /usr/bin/orca\n\nEXPOSE 9091\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"--mathjax\", \"/mathjax/MathJax.js\", \"--topojson\", \"/plotly-geo-assets.js\"]\n"
}