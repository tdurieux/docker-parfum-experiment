{
  "startTime": 1674254204509,
  "endTime": 1674254205744,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE\n\nFROM ${BASE_IMAGE}\n\n# For this build, we pull the entire ros image, and then merge the filesystem\n# with the nvidia/opengl image, so that displaying to the screen on GPU\n# (or without GPU) works through docker.\n# I was unable to use the ROS_DISTRO variable here due to this issue:\n# https://github.com/docker/for-mac/issues/2155\nCOPY --from=osrf/ros:melodic-desktop-full / /\n\n# Add ROS env vars to the bashrc\nENV BASH_ENV=\"/root/launch.sh\"\nSHELL [\"/bin/bash\", \"-c\"]\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nARG ROS_DISTRO\nRUN echo \"source /opt/ros/${ROS_DISTRO}/setup.bash\" >> $BASH_ENV\n\n# Copy myCobot ROS package\nWORKDIR /catkin_ws/src\nCOPY . mycobot_ros\n\n# Install build dependencies\nRUN curl -f -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        # ROS Build dependencies\n        python-rosinstall \\\n        python-rosinstall-generator \\\n        python-wstool \\\n        build-essential \\\n        python3-pip && \\\n    # Project-specific build dependencies\n    rosdep install -r -y -i --from-paths . && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install python dependencies\nARG PYMYCOBOT_VERSION\nRUN pip3 install --no-cache-dir \"pymycobot $PYMYCOBOT_VERSION\" --user\n\n# Build the project\nWORKDIR /catkin_ws\nRUN catkin_make\n\n# Let ROS know about the projects launch options\nRUN echo \"source /catkin_ws/devel/setup.bash\" >> $BASH_ENV\n"
}