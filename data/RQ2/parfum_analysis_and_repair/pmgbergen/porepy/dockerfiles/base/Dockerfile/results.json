{
  "startTime": 1674215821487,
  "endTime": 1674215822254,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 45,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 45,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# To build:\n#\n#    docker build . --tag porepy\n#\n# To run (sharing the current directory with the container)\n#\n#    docker run -ti -v $(pwd):/home/porepy/ porepy:latest\n#\n# To save a modified container, from host:\n#\n#    docker commit porepy TAG_FOR_NEW_IMAGE\n#    docker run -ti TAG_FOR_NEW_IMAGE  # will contain modifications.\n#\n\nFROM continuumio/miniconda3:latest\n\nMAINTAINER PorePy Development Team\n\n# Adding wget and bzip2\nRUN apt-get update && yes|apt-get upgrade && apt-get install --no-install-recommends -y wget vim && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y wget bzip2 git gcc libglu1-mesa libxrender1 libxcursor1 libxft2 libxinerama1 && rm -rf /var/lib/apt/lists/*;\n\n# Add sudo\nRUN apt-get -y --no-install-recommends install sudo && rm -rf /var/lib/apt/lists/*;\n\n# Updating Anaconda packages\nRUN conda update conda\nRUN conda update --all\n\n# Add user ubuntu with no password, add to sudo group\nRUN adduser --disabled-password --gecos '' ubuntu\nRUN adduser ubuntu sudo\nRUN adduser --disabled-password porepy\nRUN adduser porepy sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nUSER ubuntu\nWORKDIR /home/ubuntu/\nRUN chmod a+rwx /home/ubuntu/\n\nUSER porepy\n\nENV POREPY_HOME /home/porepy\nRUN touch $POREPY_HOME/.sudo_as_admin_successful && \\\n    mkdir $POREPY_HOME/shared\nVOLUME /home/porepy/shared\n\nENV TMP_DIR /tmp\n\n# Name of top directory for porepy installation\nENV POREPY_HOME=/home/porepy\n# .. and the directory for the PorePy source\nENV POREPY_SRC=${POREPY_HOME}/pp\n\n## Pull PorePy\n# Clone PorePy from GitHub\nRUN git clone https://github.com/pmgbergen/porepy.git ${POREPY_SRC}\nWORKDIR ${POREPY_SRC}/dockerfiles\n\n### Set up the conda environment\n\n# Copy the file environment.yml from host into the container if it exists.\n# Copying the dockerfile is necessary to avoid errors environment.yml\n# does not exist, and the * and / in hte below expression are also necessary.\n# Source: https://redgreenrepeat.com/2018/04/13/how-to-conditionally-copy-file-in-dockerfile/\n\n# First make sure there is a file environment (if this is empty, the below\n# parsing will assign sensible values)\nRUN touch ${TMP_DIR}/environment.yml\n\n# Then copy the environment file from the host if it exists\nCOPY environment.yml* ${TMP_DIR}/\n\n# Copy the parse_environment file from the PorePy directory to /tmp\nRUN cp ${POREPY_SRC}/dockerfiles/parse_environment.py ${TMP_DIR}\nWORKDIR ${TMP_DIR}\n\n# Modify the environment file to:\n#  1) Ensure that the environment name is pp_env; if not, below commands\n#     are invalid.\n#  2) Set a version of Python, if not specified.\n\n# First, install pyyaml. This we do with pip since installing with\n# conda at this stage gave strange error messages (installation will only\n# have effect in the conda base environment).\nRUN pip install --no-cache-dir pyyaml\n\n# Prepare Conda to work with bash\nRUN conda init bash\n\n# Create the Conda environment, we call this pp_env\n# NOTE: While it would have been preferrable to set the environment name\n# in as a variable, combining this with the activation commands below\n# was not worth the effort. Instead, we enforce the name pp_env when parsing\n# the environment.yml file, and take for granted that is the name of the\n# environment below.\nRUN conda env create -f environment.yml\n\nENV PATH /home/porepy/.conda/bin:$PATH\n\n# Activating the conda environment inside the Docker container is\n# not straightforward, since every RUN command is executed in a separate\n# shell. Use a workaround:\n# Main source: https://pythonspeed.com/articles/activate-conda-dockerfile/\nSHELL [\"conda\", \"run\", \"-n\", \"pp_env\", \"/bin/bash\", \"-c\"]\n\n# Activate the new Conda environment when logging into the container\n# First, make conda commands available for bash\nRUN echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc\n\n# Next add activation to the .bashrc\n# Source: https://stackoverflow.com/questions/64323539/docker-run-interactive-with-conda-environment-already-activated\nRUN echo \"conda activate pp_env\" >> ~/.bashrc\n\n# Add conda-forge as a channel\nRUN conda config --add channels conda-forge\n"
}