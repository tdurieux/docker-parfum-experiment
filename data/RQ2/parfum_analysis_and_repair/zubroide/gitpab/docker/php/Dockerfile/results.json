{
  "startTime": 1674256312194,
  "endTime": 1674256313286,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8 as builder\n\nRUN mkdir /frontend\nWORKDIR /frontend\n\nCOPY ./package.json .\nCOPY ./package-lock.json .\n\nRUN npm ci\n\nCOPY ./webpack.mix.js ./webpack.mix.js\nCOPY ./resources/assets ./resources/assets\n\nRUN npm run prod\n\n# ---------------------\n\nFROM php:7.1-fpm\n\nWORKDIR /var/www/html\n\n# Install packages\nRUN apt update -y \\\n    && apt install --no-install-recommends -y ssh git zip bzip2 wget libmcrypt-dev cron mc && rm -rf /var/lib/apt/lists/*;\n\n# Install PHP extensions\n# todo: libpng12-0 libpng12-dev libjasper-dev\nRUN apt update -y \\\n    && apt install --no-install-recommends -y libpq-dev libpng-dev \\\n        libjpeg-dev libjpeg-progs libjpeg62 libfftw3-3 libfftw3-dev libwmf-dev \\\n        libx11-dev libxt-dev libxext-dev libxml2-dev libfreetype6-dev libexif-dev \\\n        libltdl3-dev graphviz pkg-config libperl-dev perl \\\n        libz-dev libbz2-dev libmemcached-dev libtidy-dev zlib1g-dev libicu-dev g++ \\\n    && docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n    && docker-php-ext-configure intl \\\n    && docker-php-ext-configure gd \\\n        --with-freetype-dir=/usr/lib/ \\\n        --with-png-dir=/usr/lib/ \\\n        --with-jpeg-dir=/usr/lib/ \\\n        --with-gd \\\n    && docker-php-ext-install pdo_pgsql zip pcntl gd intl mcrypt \\\n    && pecl install -o -f redis \\\n    && pecl install -o -f memcached \\\n    && rm -rf /tmp/pear \\\n    && docker-php-ext-enable redis memcached && rm -rf /var/lib/apt/lists/*;\n\n# composer install: https://hub.docker.com/_/composer?tab=description#php-extensions\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\nENV COMPOSER_ALLOW_SUPERUSER=1\n\nRUN touch /var/log/cron.log\n\nADD ./docker/php/entrypoint.sh /root/entrypoint.sh\nADD ./docker/wait-for-it.sh /root/wait-for-it.sh\nRUN chmod 755 /root/entrypoint.sh \\\n    && chmod 755 /root/wait-for-it.sh\n\nCOPY ./docker/cron/crontab /etc/cron.d/app\nRUN crontab /etc/cron.d/app\n\nCOPY ./composer.json .\nCOPY ./composer.lock .\nRUN composer install --no-dev --no-autoloader\n\n# npm run build\nCOPY --from=builder /frontend/public/css ./public/css\nCOPY --from=builder /frontend/public/js ./public/js\n\n# Project files\nADD . .\nCOPY ./docker/php/.env.template ./.env\nRUN composer dump-autoload\n\nENTRYPOINT [\"/root/entrypoint.sh\"]\n"
}