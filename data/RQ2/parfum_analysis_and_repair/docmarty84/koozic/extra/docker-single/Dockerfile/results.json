{
  "startTime": 1674253496185,
  "endTime": 1674253497245,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 72,
        "columnStart": 8,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 80,
        "columnStart": 8,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 63,
        "columnStart": 8,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 80,
        "columnStart": 8,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 80,
        "columnStart": 8,
        "columnEnd": 29
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER DocMarty84 <nicolas.martinelli@pm.me>\n\n# Reconfigure locales to use UTF-8 encoding\nRUN set -x; \\\n        apt-get update -qq && \\\n        apt-get install -y --no-install-recommends -qq locales && rm -rf /var/lib/apt/lists/*;\n\nRUN set -x; \\\n        dpkg-reconfigure -fnoninteractive locales && \\\n        sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/g' /etc/locale.gen && \\\n        locale-gen en_US.UTF-8 && \\\n        /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# Install apt dependencies\nARG DEBIAN_FRONTEND=noninteractive\nRUN set -x; \\\n        apt-get update -qq && \\\n        apt-get install -y --no-install-recommends -qq \\\n            adduser \\\n            build-essential \\\n            ffmpeg \\\n            libtag1-dev \\\n            lsb-base \\\n            mediainfo \\\n            postgresql-common \\\n            python3-babel \\\n            python3-chardet \\\n            python3-dateutil \\\n            python3-decorator \\\n            python3-dev \\\n            python3-docutils \\\n            python3-feedparser \\\n            python3-gevent \\\n            python3-html2text \\\n            python3-jinja2 \\\n            python3-libsass \\\n            python3-lxml \\\n            python3-mako \\\n            python3-mock \\\n            python3-passlib \\\n            python3-pil \\\n            python3-pip \\\n            python3-polib \\\n            python3-psutil \\\n            python3-psycopg2 \\\n            python3-pydot \\\n            python3-pyldap \\\n            python3-pyparsing \\\n            python3-pypdf2 \\\n            python3-qrcode \\\n            python3-reportlab \\\n            python3-requests \\\n            python3-setuptools \\\n            python3-tz \\\n            python3-vatnumber \\\n            python3-vobject \\\n            python3-werkzeug \\\n            python3-wheel \\\n            python3-xlsxwriter \\\n            python3-yaml \\\n            python3-zeep \\\n            wget && \\\n        apt-get clean -qq && rm -rf /var/lib/apt/lists/*;\n\n# Install pip dependencies\nRUN set -x; \\\n        pip3 install --no-cache-dir \\\n            mutagen==1.43.0 \\\n            pytaglib==1.4.5 \\\n            num2words==0.5.6 \\\n            webvtt-py==0.4.2\n\n# PostgreSQL install: deactivate automatic cluster creation since it will created at runtime in a\n# mounted location. Copied from https://github.com/docker-library/postgres/tree/master/10\nRUN set -x; \\\n        sed -ri 's/#(create_main_cluster) .*$/\\1 = false/' /etc/postgresql-common/createcluster.conf && \\\n        apt-get install -y --no-install-recommends -qq \\\n            postgresql \\\n            postgresql-client && rm -rf /var/lib/apt/lists/*;\n\n# Set up user and mount point\nRUN set -x; \\\n        useradd -m koozic && \\\n        mkdir -p /mnt/host && \\\n        chown -R koozic /mnt/host\n\n# Install KooZic\nRUN set -x; \\\n        v=v3.1.0 && \\\n        wget -q https://github.com/DocMarty84/koozic/releases/download/${v}/koozic-${v}.tar.gz && \\\n        tar xfz koozic-*.tar.gz && \\\n        rm -rf koozic-*.tar.gz\nRUN set -x; \\\n        mv koozic /usr/local/ && \\\n        chown -R koozic /usr/local/koozic\n\n# Copy entrypoint script\nCOPY ./entrypoint.sh /\n\n# Expose KooZic services\nEXPOSE 8069 8072\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}