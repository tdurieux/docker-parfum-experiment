{
  "startTime": 1674246454141,
  "endTime": 1674246455352,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 0,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 18,
        "columnEnd": 197
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 218
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 18,
        "columnEnd": 197
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04 AS builder\n#maven:3-jdk-8 AS builder\nARG rainbow_version=SWIM1.0\nRUN apt update && apt-get install --no-install-recommends -y software-properties-common zip unzip tar gzip libboost-all-dev libyaml-cpp-dev make automake autoconf g++ ant wget libpcre3-dev socat swig curl bash git-core && rm -rf /var/lib/apt/lists/*;\n\n# To ensure the right versions of the libraries in the build\n# we need to FROM the same root, so that means installing Java\n# and Maven manually\n\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\n# Install Maven\nARG MAVEN_VERSION=3.3.9\nARG USER_HOME_DIR=\"/root\"\nRUN mkdir -p /usr/share/maven && \\\n curl -fsSL https://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1 && \\\nln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\n# speed up Maven JVM a bit\nENV MAVEN_OPTS=\"-XX:+TieredCompilation -XX:TieredStopAtLevel=1\"\n\n# Install pladapt\nWORKDIR /root/\nRUN git clone https://github.com/cps-sei/pladapt.git\n\nWORKDIR /root/pladapt\nRUN reach/build.sh\n\nRUN autoreconf -fvi && \\\n    mkdir build && \\\n    cd build && \\\n    ../configure && \\\n    make\n\nWORKDIR /root/pladapt/java\n### Bug fix to get around the fact that uname returns unknown for maven:3-jdk-8\nRUN sed 's/$(shell uname -i)/x86_64/' Makefile > Makefile-bugfix && \\\n    make -f Makefile-bugfix mvn-install\n# RUN  make mvn-install\n#RUN mvn install:install-file -Dfile=pladapt_wrap.jar -DgroupId=pladapt -DartifactId=pladapt_wrap -Dversion=1.0.1 -Dpackaging=jar\n# Install Hogna and Opera\nCOPY deployments/rainbow-swim/deps .\nRUN unzip hogna.zip libs/Hogna.jar libs/Opera.jar && \\\n    mvn install:install-file -Dfile=libs/Hogna.jar -DgroupId=opera -DartifactId=hogna -Dversion=1.0 -Dpackaging=jar && \\\n    mvn install:install-file -Dfile=libs/Opera.jar -DgroupId=opera -DartifactId=opera -Dversion=1.0 -Dpackaging=jar\n\nADD deployments /root/rainbow/deployments\nADD libs /root/rainbow/libs\nADD ide /root/rainbow/ide\nADD rainbow /root/rainbow/rainbow\nADD targets /root/rainbow/targets\nADD license.html /root/rainbow\nADD build.sh /root/rainbow\nADD scripts /root/rainbow/scripts\nWORKDIR /root/rainbow\nRUN ls\nRUN  ./build.sh -s -d rainbow-swim -t swim i-v${rainbow_version} install\nCMD [/bin/bash]\n\nFROM gabrielmoreno/swim:1.0\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install software-properties-common dbus dbus-x11 xorg xserver-xorg-legacy xinit xterm libboost-all-dev libyaml-cpp-dev libpcre3-dev socat && rm -rf /var/lib/apt/lists/*;\n\nRUN sed -i \"s/allowed_users=console/allowed_users=anybody/;$ a needs_root_rights=yes\" /etc/X11/Xwrapper.config\n\nRUN \\\n  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n  add-apt-repository -y ppa:webupd8team/java && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y oracle-java8-installer --allow-unauthenticated && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  rm -rf /var/cache/oracle-jdk8-installer\n\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\nRUN mkdir /rainbow\nWORKDIR /rainbow\nCOPY --from=builder /root/pladapt ./pladapt\nENV PLADAPT /rainbow/pladapt\nCOPY --from=builder /root/rainbow/Rainbow-build .\nRUN echo \"export SOCAT_PORT=4242\" >> /headless/.bashrc\nCOPY deployments/rainbow-swim/docker/rainbow.png /headless/\nCOPY deployments/rainbow-swim/docker/SWIM.png /headless/\nCOPY deployments/rainbow-swim/docker/Rainbow.desktop /headless/Desktop\nCOPY deployments/rainbow-swim/docker/SWIM.desktop /headless/Desktop\nRUN chmod +x /headless/Desktop/Rainbow.desktop /headless/Desktop/SWIM.desktop\n#ENTRYPOINT [\"./rainbow-oracle.sh\", \"swim\"]\n"
}