{
  "startTime": 1674218606568,
  "endTime": 1674218608125,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 0,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 18,
        "columnEnd": 197
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 218
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 18,
        "columnEnd": 197
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04 AS builder\n#maven:3-jdk-8 AS builder\nARG rainbow_version=SWIM1.0\nRUN apt update && apt-get install --no-install-recommends -y software-properties-common zip unzip tar gzip libboost-all-dev libyaml-cpp-dev make automake autoconf g++ ant wget libpcre3-dev socat swig curl bash git-core && rm -rf /var/lib/apt/lists/*;\n\n# To ensure the right versions of the libraries in the build\n# we need to FROM the same root, so that means installing Java\n# and Maven manually\n\nRUN apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\n# Install Maven\nARG MAVEN_VERSION=3.3.9\nARG USER_HOME_DIR=\"/root\"\nRUN mkdir -p /usr/share/maven && \\\n curl -fsSL https://apache.osuosl.org/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz | tar -xzC /usr/share/maven --strip-components=1 && \\\nln -s /usr/share/maven/bin/mvn /usr/bin/mvn\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\n# speed up Maven JVM a bit\nENV MAVEN_OPTS=\"-XX:+TieredCompilation -XX:TieredStopAtLevel=1\"\n\nADD libs /root/rainbow/libs\nWORKDIR /root/rainbow/libs/auxtestlib\nRUN mvn -DskipTests install\nWORKDIR /root/rainbow/libs/incubator\nRUN mvn -DskipTests install\nWORKDIR /root/rainbow/libs/parsec\nRUN mvn -DskipTests javacc:javacc install\nWORKDIR /root/rainbow/libs/typelib\nRUN mvn -DskipTests javacc:javacc install\nWORKDIR /root/rainbow/libs/eseblib\nRUN mvn -DskipTests install\n\nADD rainbow /root/rainbow/rainbow\nWORKDIR /root/rainbow/rainbow/rainbow-core\nRUN mvn -DskipTests install\nWORKDIR ../rainbow-gui\nRUN mvn -DskipTests install\nWORKDIR ../rainbow-acme-model\nRUN mvn -DskipTests install\nWORKDIR ../rainbow-stitch\nRUN mvn -DskipTests install\nWORKDIR ../rainbow-utility-model\nRUN mvn -DskipTests install\n\nWORKDIR ../rainbow-mem-comms\nRUN mvn -DskipTests install\n\nADD deployments /root/rainbow/deployments\nWORKDIR /root/rainbow/deployments/rainbow-example\nRUN mvn -DskipTests install\nCMD [/bin/bash]\n\n\nFROM gabrielmoreno/swim:1.0\nARG BUILD_ENV\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install software-properties-common dbus dbus-x11 xorg xserver-xorg-legacy xinit xterm libboost-all-dev libyaml-cpp-dev libpcre3-dev socat && rm -rf /var/lib/apt/lists/*;\n\nRUN sed -i \"s/allowed_users=console/allowed_users=anybody/;$ a needs_root_rights=yes\" /etc/X11/Xwrapper.config\n\nRUN \\\n  add-apt-repository -y ppa:openjdk-r/ppa && \\\n  apt-get update && \\\n  apt-get -y --no-install-recommends install openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /rainbow\nWORKDIR /rainbow\nCOPY scripts/* ./\nCOPY targets/rainbow-example targets/rainbow-example\nCOPY license.html .\nCOPY --from=builder /root/rainbow/deployments/rainbow-example/target/lib/* lib/\nCOPY --from=builder /root/rainbow/deployments/rainbow-example/target/*.jar lib/\n\n\nRUN echo \"export SOCAT_PORT=4242\" >> /headless/.bashrc\nRUN echo \"export JAVA_FONTS=/usr/local/share/fonts/ms_fonts\" >> /headless/.bashrc\nCOPY deployments/rainbow-example/docker/rainbow.png /headless/\nCOPY deployments/rainbow-example/docker/SWIM.png /headless/\nCOPY deployments/rainbow-example/docker/Rainbow.desktop /headless/Desktop\n#COPY deployments/rainbow-example/docker/SWIM.desktop /headless/Desktop\nCOPY deployments/rainbow-example/docker/Rainbow-debug.desktop /headless/Desktop\nCOPY deployments/rainbow-example/docker/SWIM-driver.desktop /headless/Desktop\nCOPY deployments/rainbow-example/docker/swim-driver.sh /rainbow\nRUN chmod +x /rainbow/swim-driver.sh\nRUN echo \"BUILD_ENV=$BUILD_ENV\"\nRUN if [ \"$BUILD_ENV\" != \"debug\" ]; then rm -f /headless/Desktop/Rainbow-debug.desktop; fi\nRUN chmod +x /headless/Desktop/*\nRUN mkdir /rainbow/logs\n\n# Add a test trace\nWORKDIR /headless/seams-swim/swim/simulations/swim\nCOPY deployments/rainbow-example/docker/sudden-increase.delta traces\nRUN sed 's/delta\",/delta\", \"traces\\/sudden-increase.delta\",/' < swim.ini > swim-new.ini && \\\n    mv swim-new.ini swim.ini\n#ENTRYPOINT [\"./rainbow-oracle.sh\", \"swim\"]\n"
}