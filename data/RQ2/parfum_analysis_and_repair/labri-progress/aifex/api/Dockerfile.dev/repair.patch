diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/labri-progress/aifex/api/Dockerfile.dev b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/labri-progress/aifex/api/Dockerfile.dev/repaired.Dockerfile
index 48ce283..951cfaf 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/labri-progress/aifex/api/Dockerfile.dev
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/labri-progress/aifex/api/Dockerfile.dev/repaired.Dockerfile
@@ -1,40 +1,40 @@
-FROM node as builder
-
-# install python (needed by npm-gyp)
-RUN apt-get update && apt-get install python make gcc g++ -y
-
-# Create app directory
-WORKDIR /app
-RUN mkdir logs
-
-
-COPY ./package.json /app/package.json
-RUN npm install
-
-# Install app dependencies
-COPY ./tsconfig.json /app
-COPY ./src /app/src
-
-RUN npm run compile
-
-
-
-FROM node
-
-# Set the working directory to /app
-WORKDIR /app
-
-# Install any needed packages specified in requirements.txt=
-
-COPY --from=builder /app/dist /app/dist
-COPY --from=builder /app/node_modules /app/node_modules
-COPY ./package.json /app/package.json
-COPY ./nodemon.json /app/nodemon.json
-COPY ./tsconfig.json /app
-
-
-# Run when the container launches
-CMD npm run dev
-
-# Make port available to the world outside this container
+FROM node as builder
+
+# install python (needed by npm-gyp)
+RUN apt-get update && apt-get install --no-install-recommends python make gcc g++ -y && rm -rf /var/lib/apt/lists/*;
+
+# Create app directory
+WORKDIR /app
+RUN mkdir logs
+
+
+COPY ./package.json /app/package.json
+RUN npm install && npm cache clean --force;
+
+# Install app dependencies
+COPY ./tsconfig.json /app
+COPY ./src /app/src
+
+RUN npm run compile
+
+
+
+FROM node
+
+# Set the working directory to /app
+WORKDIR /app
+
+# Install any needed packages specified in requirements.txt=
+
+COPY --from=builder /app/dist /app/dist
+COPY --from=builder /app/node_modules /app/node_modules
+COPY ./package.json /app/package.json
+COPY ./nodemon.json /app/nodemon.json
+COPY ./tsconfig.json /app
+
+
+# Run when the container launches
+CMD npm run dev
+
+# Make port available to the world outside this container
 EXPOSE 80
\ No newline at end of file