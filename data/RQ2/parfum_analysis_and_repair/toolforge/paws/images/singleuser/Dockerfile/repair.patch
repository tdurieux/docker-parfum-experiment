diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/toolforge/paws/images/singleuser/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/toolforge/paws/images/singleuser/Dockerfile/repaired.Dockerfile
index baae8c9..ba5120a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/toolforge/paws/images/singleuser/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/toolforge/paws/images/singleuser/Dockerfile/repaired.Dockerfile
@@ -23,10 +23,10 @@ RUN adduser --disabled-password \
 WORKDIR ${HOME}
 
 RUN apt-get update && \
-    apt-get install --yes \
+    apt-get install --no-install-recommends --yes \
         python3-venv \
         pip \
-        python3
+        python3 && rm -rf /var/lib/apt/lists/*;
 
 ENV LC_ALL en_US.UTF-8
 ENV LANG en_US.UTF-8
@@ -53,23 +53,23 @@ USER root
 
 # Base building utilities that'll always be required, probably
 RUN apt-get update && \
-    apt-get install --yes \
+    apt-get install --no-install-recommends --yes \
         git \
         locales \
         pkg-config \
         build-essential \
         gcc \
-        apt-transport-https
+        apt-transport-https && rm -rf /var/lib/apt/lists/*;
 
 
 RUN apt-get update --yes && \
-    apt-get install --yes \
+    apt-get install --no-install-recommends --yes \
         python3-dev \
         openjdk-11-jdk \
-        nodejs
+        nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Utilities
-RUN apt-get install --yes \
+RUN apt-get install --no-install-recommends --yes \
         curl \
         wget \
         less \
@@ -79,11 +79,11 @@ RUN apt-get install --yes \
         nano \
         vim \
         lsof \
-        mariadb-client
+        mariadb-client && rm -rf /var/lib/apt/lists/*;
 
 # pyaudio
-RUN apt-get install --yes \
-        portaudio19-dev
+RUN apt-get install --no-install-recommends --yes \
+        portaudio19-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
     locale-gen
@@ -103,21 +103,21 @@ RUN echo "deb https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/" > /etc
 
 # Install languages needed and their core dev packages
 RUN apt-get update --yes && \
-    apt-get install --yes \
+    apt-get install --no-install-recommends --yes \
         r-recommended \
         r-base-dev \
         r-cran-littler \
         git \
         curl \
         gdebi \
-        # For R's mysql
+
         libmariadb-dev \
-        # For R's curl
+
         libcurl4-openssl-dev \
-        # for ipython kernels
+
         libzmq3-dev \
-        # For R's devtools
-        libssl-dev
+
+        libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install RStudio
 # give access to libssl1.1 for rstudio-server
@@ -166,29 +166,29 @@ USER root
 # Setup OpenRefine
 ENV OPENREFINE_DIR /srv/openrefine
 RUN mkdir -p ${OPENREFINE_DIR} && cd ${OPENREFINE_DIR} && \
-    curl -L https://github.com/OpenRefine/OpenRefine/releases/download/3.5.2/openrefine-linux-3.5.2.tar.gz | tar xzf - --strip=1
+    curl -f -L https://github.com/OpenRefine/OpenRefine/releases/download/3.5.2/openrefine-linux-3.5.2.tar.gz | tar xzf - --strip=1
 COPY proxies/openrefine-logo.svg ${OPENREFINE_DIR}/openrefine-logo.svg
 
 # Machine-learning type stuff
 RUN apt-get update && \
-    apt-get install --yes \
-    # For scipy & friends
+    apt-get install --no-install-recommends --yes \
+
     libblas-dev \
     liblapack-dev \
     libquadmath0 \
     gfortran \
-    # for lxml
+
     libxml2-dev \
     libxslt1-dev \
-    # for matplotlib
+
     libfreetype6-dev \
     libpng-dev \
-    # for ipython kernels
+
     libzmq3-dev \
     libreadline-dev \
-    # For PDFs and stuff
+
     pandoc \
-    texlive-xetex
+    texlive-xetex && rm -rf /var/lib/apt/lists/*;
 
 
 # Install Julia directories and depot path
@@ -240,9 +240,9 @@ RUN /tmp/install-julia
 # SPARQL
 USER root
 RUN apt-get update && \
-    apt-get install --yes \
-    # For sparql kernel
-    graphviz
+    apt-get install --no-install-recommends --yes \
+
+    graphviz && rm -rf /var/lib/apt/lists/*;
 
 USER ${NB_USER}
 RUN pip install --no-cache-dir sparqlkernel