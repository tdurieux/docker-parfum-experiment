{
  "startTime": 1674254231548,
  "endTime": 1674254232882,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 105,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 173,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 242,
        "lineEnd": 244,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 105,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 173,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 242,
        "lineEnd": 244,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:22.04\n\nENV PYWIKIBOT_VERSION=7.4.0\nENV EDITOR=/bin/nano\nENV PYWIKIBOT_DIR=/srv/paws\nENV DEBIAN_FRONTEND=noninteractive\n\n## Begin minimal setup ##\n# Use bash as default shell, rather than sh\nENV SHELL /bin/bash\n\n# Set up user\nENV NB_USER tools.paws\nENV NB_UID 52771\nENV HOME /home/paws\n\nRUN adduser --disabled-password \\\n    --gecos \"Default user\" \\\n    --uid ${NB_UID} \\\n    --home ${HOME} \\\n    --force-badname \\\n    ${NB_USER}\nWORKDIR ${HOME}\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n        python3-venv \\\n        pip \\\n        python3 && rm -rf /var/lib/apt/lists/*;\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Create venv directory, and let users install into it\nENV VENV_DIR /srv/paws\nRUN install -d -o ${NB_USER} -g ${NB_USER} ${VENV_DIR}\n\nENV PATH=/srv/paws/pwb:/srv/paws/bin:/srv/paws:/srv/julia/bin:$PATH\n\nUSER ${NB_USER}\nRUN python3 -m venv /srv/paws\nRUN pip --no-cache-dir install -U pip setuptools wheel\n\n# Install base notebook packages\nRUN pip install --prefix=/srv/paws --no-cache-dir \\\n    jupyterhub==2.3.0 \\\n    jupyterlab==3.3.4\n\n## End minimal setup ##\n\nUSER root\n\n# Base building utilities that'll always be required, probably\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n        git \\\n        locales \\\n        pkg-config \\\n        build-essential \\\n        gcc \\\n        apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n\nRUN apt-get update --yes && \\\n    apt-get install --no-install-recommends --yes \\\n        python3-dev \\\n        openjdk-11-jdk \\\n        nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Utilities\nRUN apt-get install --no-install-recommends --yes \\\n        curl \\\n        wget \\\n        less \\\n        dnsutils \\\n        emacs \\\n        links \\\n        nano \\\n        vim \\\n        lsof \\\n        mariadb-client && rm -rf /var/lib/apt/lists/*;\n\n# pyaudio\nRUN apt-get install --no-install-recommends --yes \\\n        portaudio19-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n# Setup nodesource, because node on Ubuntu is far too old to be useful\nADD node/nodesource.gpg.key /etc/apt/trusted.gpg.d/nodesource.gpg.key\nADD node/nodesource.list /etc/apt/sources.list.d/nodesource.list\nRUN apt-key add /etc/apt/trusted.gpg.d/nodesource.gpg.key\n\n## Install R ##\n# Use newer version of R\n# Binary packages from packagemanager.rstudio.com work against this.\n# Base R from Focal is only 3.6.\nCOPY E298A3A825C0D65DFD57CBB651716619E084DAB9.asc /tmp/\nRUN apt-key add /tmp/E298A3A825C0D65DFD57CBB651716619E084DAB9.asc && rm /tmp/E298A3A825C0D65DFD57CBB651716619E084DAB9.asc\nRUN echo \"deb https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/\" > /etc/apt/sources.list.d/cran.list\n\n# Install languages needed and their core dev packages\nRUN apt-get update --yes && \\\n    apt-get install --no-install-recommends --yes \\\n        r-recommended \\\n        r-base-dev \\\n        r-cran-littler \\\n        git \\\n        curl \\\n        gdebi \\\n\n        libmariadb-dev \\\n\n        libcurl4-openssl-dev \\\n\n        libzmq3-dev \\\n\n        libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install RStudio\n# give access to libssl1.1 for rstudio-server\nRUN echo \"deb http://archive.ubuntu.com/ubuntu/ focal main restricted\" > /etc/apt/sources.list.d/focal.list\nRUN apt-get update\n\nENV RSTUDIO_SERVER_URL https://download2.rstudio.org/server/bionic/amd64/rstudio-server-2022.02.3-492-amd64.deb\nRUN curl --silent --location --fail ${RSTUDIO_SERVER_URL} > /tmp/rstudio-server.deb\nRUN gdebi -n /tmp/rstudio-server.deb && rm /tmp/rstudio-server.deb\n# remove focal repo\nRUN rm /etc/apt/sources.list.d/focal.list && apt-get update\n\n\n# Create user owned R libs dir\n# This lets users temporarily install packages\nENV R_LIBS_USER /srv/r\nRUN install -d -o ${NB_USER} -g ${NB_USER} ${R_LIBS_USER}\n\n# R_LIBS_USER is set by default in /etc/R/Renviron, which RStudio loads.\n# We uncomment the default, and set what we wanna - so it picks up\n# the packages we install. Without this, RStudio doesn't see the packages\n# that R does.\n# Stolen from https://github.com/jupyterhub/repo2docker/blob/6a07a48b2df48168685bb0f993d2a12bd86e23bf/repo2docker/buildpacks/r.py\nRUN sed -i -e '/^R_LIBS_USER=/s/^/#/' /etc/R/Renviron && \\\n    echo \"R_LIBS_USER=${R_LIBS_USER}\" >> /etc/R/Renviron\n\nUSER ${NB_USER}\nRUN pip install --no-cache-dir \\\n    jupyter-server-proxy \\\n    git+https://github.com/toolforge/jupyter-rsession-proxy.git@57d89b4\n\n# Set CRAN mirror to rspm before we install anything\nCOPY Rprofile.site /usr/lib/R/etc/Rprofile.site\n# RStudio needs its own config\nCOPY rsession.conf /etc/rstudio/rsession.conf\n\n# Install the R Kernel\nRUN r -e \"install.packages('IRkernel', version='1.1.1')\" && \\\n    r -e \"IRkernel::installspec(prefix='${VENV_DIR}')\" && \\\n    rm -rf /tmp/downloaded_packages\n\n## Done installing R\n\n\nUSER root\n# Setup OpenRefine\nENV OPENREFINE_DIR /srv/openrefine\nRUN mkdir -p ${OPENREFINE_DIR} && cd ${OPENREFINE_DIR} && \\\n    curl -f -L https://github.com/OpenRefine/OpenRefine/releases/download/3.5.2/openrefine-linux-3.5.2.tar.gz | tar xzf - --strip=1\nCOPY proxies/openrefine-logo.svg ${OPENREFINE_DIR}/openrefine-logo.svg\n\n# Machine-learning type stuff\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n\n    libblas-dev \\\n    liblapack-dev \\\n    libquadmath0 \\\n    gfortran \\\n\n    libxml2-dev \\\n    libxslt1-dev \\\n\n    libfreetype6-dev \\\n    libpng-dev \\\n\n    libzmq3-dev \\\n    libreadline-dev \\\n\n    pandoc \\\n    texlive-xetex && rm -rf /var/lib/apt/lists/*;\n\n\n# Install Julia directories and depot path\nENV JULIA_DEPOT_PATH /srv/julia-depot/\nRUN install -d -o ${NB_USER} -g ${NB_USER} /srv/julia\nRUN install -d -o ${NB_USER} -g ${NB_USER} ${JULIA_DEPOT_PATH}\n\nUSER ${NB_USER}\nRUN pip install --no-cache-dir \\\n    retrolab \\\n    jupyterlab-link-share>=0.2.4 \\\n    nbgitpuller==0.9.0 \\\n    voila \\\n    bash_kernel\n\n# Install the bash kernel\nRUN python -m bash_kernel.install --sys-prefix\n\n\n\n# Install mass amount of python libraries!\nCOPY --chown=tools.paws:tools.paws requirements.txt /tmp/requirements.txt\n\nRUN pip --no-cache-dir install -r /tmp/requirements.txt\n\n# Install pywikibot\nRUN git clone --branch $PYWIKIBOT_VERSION --recursive https://gerrit.wikimedia.org/r/pywikibot/core.git /srv/paws/pwb\nCOPY --chown=tools.paws:tools.paws user-config.py /srv/paws/\nCOPY --chown=tools.paws:tools.paws user-fixes.py /srv/paws/\n\nCOPY install-pwb /usr/local/bin/\nRUN /usr/local/bin/install-pwb\n\nCOPY install-extensions /usr/local/bin/\nRUN /usr/local/bin/install-extensions\n\nCOPY banner /etc/bash.bashrc\n\n# use custom css to hide clusters tab\nCOPY --chown=tools.paws:tools.paws hide_clusters_tab.css /home/paws/.jupyter/custom/custom.css\n\n# Setup custom config as needed\nCOPY jupyter_notebook_config.py /srv/paws/etc/jupyter/jupyter_notebook_config.py\n\n# install julia and julia kernel\nCOPY install-julia /tmp/install-julia\nRUN /tmp/install-julia\n\n# SPARQL\nUSER root\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n\n    graphviz && rm -rf /var/lib/apt/lists/*;\n\nUSER ${NB_USER}\nRUN pip install --no-cache-dir sparqlkernel\nRUN python3 -m jupyter sparqlkernel install --sys-prefix\n\nEXPOSE 8888\n"
}