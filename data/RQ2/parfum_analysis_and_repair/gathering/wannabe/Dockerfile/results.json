{
  "startTime": 1674256231013,
  "endTime": 1674256231621,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION\n\n### Builder\nFROM composer as Builder\nARG GIT_BRANCH\nRUN echo \"Building app from ${GIT_BRANCH:-prod} branch\"\n\nRUN apk add --no-cache git\nRUN git clone --single-branch --branch ${GIT_BRANCH:-prod} https://github.com/gathering/wannabe.git ./\n\n# Remove lock file since it's currently configured only for PHP 5\nRUN rm -f ./composer.lock\nRUN composer install --no-interaction\n\n# App\nRUN chmod +x build/prepare.sh && build/prepare.sh\n\n\n### Production\nFROM php:${PHP_VERSION:-5}-fpm-alpine as production\nRUN apk add --no-cache libpng libpng-dev libjpeg-turbo-dev libmcrypt-dev gettext gettext-dev\nRUN docker-php-ext-configure gd \\\n    --with-gd \\\n    --with-jpeg-dir \\\n    --with-png-dir\nRUN docker-php-ext-install pdo pdo_mysql gd exif mcrypt gettext\nCOPY --from=builder /app/app /var/www/html/wannabe/app\nCOPY --from=builder /app/lib /var/www/html/wannabe/lib\nCOPY --from=builder /app/index.php /var/www/html/wannabe/index.php\n\n\n### Development\nFROM php:${PHP_VERSION:-5}-fpm as Development\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tmariadb-client \\\n\tpython-dev \\\n\tpython-pip \\\n\tpython-mysqldb-dbg \\\n\tgit \\\n\tvim \\\n\tman \\\n\tzip \\\n\tlibpng-dev \\\n\tlibjpeg-dev \\\n\tunzip && rm -rf /var/lib/apt/lists/*;\nRUN docker-php-ext-configure gd \\\n    --with-gd \\\n    --with-jpeg-dir \\\n    --with-png-dir\nRUN docker-php-ext-install pdo pdo_mysql gd exif\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\nCOPY --from=builder /app /var/www/html/wannabe\nCOPY --from=builder /app/build/development-entrypoint.sh /usr/bin/development-entrypoint\nCOPY --from=builder /app/build/tooling-entrypoint.sh /usr/bin/tooling-entrypoint\nRUN chmod a+x /usr/bin/development-entrypoint\nRUN chmod a+x /usr/bin/tooling-entrypoint\nENTRYPOINT [\"development-entrypoint\"]\nCMD [\"php-fpm\"]\n"
}