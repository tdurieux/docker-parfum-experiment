{
  "startTime": 1674254141934,
  "endTime": 1674254143111,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official Debian-hosted Python image\nFROM python:3.8-slim-buster\n\nARG DEBIAN_PACKAGES=\"build-essential\"\n\n# Prevent apt from showing prompts\nENV DEBIAN_FRONTEND=noninteractive\n\n# Ensure we have an up to date baseline, install dependencies\n# Create a user so we don't run the app as root\nRUN set -ex; \\\n    apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends $DEBIAN_PACKAGES && \\\n    apt-get install -y --no-install-recommends software-properties-common apt-transport-https ca-certificates gnupg2 gnupg-agent curl && \\\n    curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    curl -f -s https://download.docker.com/linux/debian/gpg | apt-key add - && \\\n    add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" && \\\n    echo \"deb https://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list && \\\n    echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \\\n    curl -f https://baltocdn.com/helm/signing.asc | apt-key add - && \\\n    echo \"deb https://baltocdn.com/helm/stable/debian/ all main\" | tee /etc/apt/sources.list.d/helm-stable-debian.list && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends git kubectl helm google-cloud-sdk jq docker-ce && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir openshift ansible docker && \\\n    useradd -ms /bin/bash app -d /home/app -u 1000 -p \"$(openssl passwd -1 passw0rd)\" && \\\n    usermod -aG docker app && \\\n    mkdir -p /app && \\\n    chown app:app /app\n\n# Switch to the new user (need ot run as root for docker build)\n#USER app\nWORKDIR /app\n\n# Add the rest of the source code. This is done last so we don't invalidate all\n# layers when we change a line of code.\nADD --chown=app:app . /app\n\n# Install ansible dependencies\nRUN set -ex; \\\n    ansible-galaxy collection install community.general community.kubernetes\n\n# Entry point\nENTRYPOINT [\"/bin/bash\",\"./docker-entrypoint.sh\"]\n"
}