{
  "startTime": 1674221146345,
  "endTime": 1674221147088,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\n# install wget to download golang source code\n# install git\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget git make gcc vim tree software-properties-common && \\\n    add-apt-repository ppa:webupd8team/java -y && \\\n    apt-get update && \\\n    echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \\\n    apt-get install --no-install-recommends -y oracle-java8-installer && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install swagger2markup\nRUN wget --quiet -O /root/swagger2markup-cli-1.3.1.jar https://central.maven.org/maven2/io/github/swagger2markup/swagger2markup-cli/1.3.1/swagger2markup-cli-1.3.1.jar\n\n# set go version this image use\nENV GO_VERSION=1.12.6\nENV ARCH=amd64\n\n# install golang which version is GO_VERSION\nRUN wget https://storage.googleapis.com/golang/go${GO_VERSION}.linux-${ARCH}.tar.gz \\\n    && tar -C /usr/local -xzf go${GO_VERSION}.linux-${ARCH}.tar.gz \\\n    && rm go${GO_VERSION}.linux-${ARCH}.tar.gz\n\n# create GOPATH\nRUN mkdir /go\nWORKDIR /go\nENV GOPATH=/go\n\n# set go binary path to local $PATH\n# go binary path is /usr/local/go/bin\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\n# try to skip StrictHostKeyChecking when executing git\nRUN echo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config\n\nRUN mkdir -p /go/src/github.com/alibaba \\\n    && cd /go/src/github.com/alibaba \\\n    && git clone https://github.com/pouchrobot/pouch.git \\\n    && cd pouch \\\n    && git remote remove origin \\\n    && git remote add origin git@github.com:pouchrobot/pouch.git \\\n    && git remote add upstream https://github.com/alibaba/pouch.git \\\n    && git config user.name \"pouchrobot\" \\ \n    && git config user.email \"pouch-dev@list.alibaba-inc.com\"\n\nEXPOSE 6789\n\nCOPY . /go/src/github.com/pouchcontainer/pouchrobot\n\nRUN cd /go/src/github.com/pouchcontainer/pouchrobot \\\n    && go build \\\n    && mv pouchrobot /usr/local/bin/pouchrobot\n\nWORKDIR /go/src/github.com/alibaba/pouch\n"
}