{
  "startTime": 1674255348579,
  "endTime": 1674255349687,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 74,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0-fpm-alpine\n\nENV LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8\n\nRUN \\\n\n    sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/g' /etc/apk/repositories \\\n    && echo \"Asia/Shanghai\" > /etc/timezone \\\n    # php extensions \\\n    && apk add --no-cache \\\n        freetype \\\n        freetype-dev \\\n        libpng \\\n        libpng-dev \\\n        gmp-dev \\\n        oniguruma-dev \\\n        libjpeg-turbo \\\n        libjpeg-turbo-dev \\\n    && docker-php-ext-configure gd --with-freetype --with-jpeg \\\n    && docker-php-ext-install -j$(nproc) gd gmp pdo_mysql exif \\\n    # complier & shadow & rsync\n    && apk add --no-cache autoconf automake make gcc g++ libtool pkgconfig shadow rsync \\\n    # APCu\n    && pecl install apcu \\\n    && docker-php-ext-enable apcu --ini-name 10-docker-php-ext-apcu.ini \\\n    # composer\n    && curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    # set uid\n    && usermod -u 1000 www-data \\\n    && groupmod -g 1000 www-data\n    # clean\n    # && apk del autoconf automake make gcc g++ libtool pkgconfig shadow \\\n    #     freetype-dev \\\n    #     libpng-dev \\\n    #     libjpeg-turbo-dev \\\n    # && rm /var/cache/apk/*\n\n# xdebug\nRUN apk add --no-cache $PHPIZE_DEPS \\\n    && pecl install xdebug-3.1.0beta2 \\\n    && docker-php-ext-enable xdebug\n\n# xhprof\nRUN set -xe \\\n    && apk add --no-cache --virtual .build-deps graphviz ttf-freefont \\\n    $PHPIZE_DEPS \\\n    && cd /tmp && wget -O tideways.tar.gz https://github.com/tideways/php-xhprof-extension/archive/v5.0.4.tar.gz \\\n    && tar xfvz tideways.tar.gz && cd php-xhprof-extension-* && phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n    && docker-php-ext-enable opcache tideways_xhprof \\\n    && rm -rf /tmp/* /var/www/* \\\n    && echo 'tideways.auto_prepend_library=0' >> ${PHP_INI_DIR}/conf.d/docker-php-ext-tideways.ini && rm tideways.tar.gz\n\n# start up\nENTRYPOINT [\"docker-php-entrypoint\"]\nSTOPSIGNAL SIGQUIT\nEXPOSE 9000\n\n# flarum start script\nCOPY ./start.sh /usr/local/bin/start\nRUN chmod u+x /usr/local/bin/start\nCMD [\"/usr/local/bin/start\"]\n"
}