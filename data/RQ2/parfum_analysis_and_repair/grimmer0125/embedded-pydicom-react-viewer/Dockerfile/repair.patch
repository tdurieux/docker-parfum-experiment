diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grimmer0125/embedded-pydicom-react-viewer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grimmer0125/embedded-pydicom-react-viewer/Dockerfile/repaired.Dockerfile
index dbe8cf3..3104ee8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grimmer0125/embedded-pydicom-react-viewer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grimmer0125/embedded-pydicom-react-viewer/Dockerfile/repaired.Dockerfile
@@ -1,15 +1,15 @@
 FROM ubuntu:20.04
-# debian GNU/Linux 9 
-# FROM node:15.14.0 
+# debian GNU/Linux 9
+# FROM node:15.14.0
 
-# Issue 1: no print anything. 
+# Issue 1: no print anything.
 # Solution: https://stackoverflow.com/questions/64804749/docker-build-not-showing-any-output-from-commands
 # RUN ls
 # RUN echo $HOME
 
 # RUN curl -sL https://deb.nodesource.com/setup_15.x | bash -
 # 15.14+
-# RUN apt-get install -y nodejs 
+# RUN apt-get install -y nodejs
 # ENV WORK_DIR /root/pyodide-reactapp
 WORKDIR /root/pyodide_react_dicom_viewer
 
@@ -17,22 +17,22 @@ WORKDIR /root/pyodide_react_dicom_viewer
 RUN rm /bin/sh && ln -s /bin/bash /bin/sh
 
 RUN apt-get update
-RUN apt-get install -y curl unzip git
+RUN apt-get install --no-install-recommends -y curl unzip git && rm -rf /var/lib/apt/lists/*;
 # For python
-RUN DEBIAN_FRONTEND="noninteractive" apt-get -y install tzdata
-RUN apt-get install -y --no-install-recommends make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
+RUN DEBIAN_FRONTEND="noninteractive" apt-get --no-install-recommends -y install tzdata && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install -y --no-install-recommends make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev && rm -rf /var/lib/apt/lists/*;
 
 ENV NVM_DIR /root/.nvm
 ENV NODE_VERSION 15.14.0
 ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
-RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash   
+RUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
 
-# Issue 2: seems "cd" not be inherited, 
-# https://stackoverflow.com/questions/17891981/docker-run-cd-does-not-work-as-expected 
-# RUN cd $HOME/.nvm 
+# Issue 2: seems "cd" not be inherited,
+# https://stackoverflow.com/questions/17891981/docker-run-cd-does-not-work-as-expected
+# RUN cd $HOME/.nvm
 # RUN cd ../nvm
 
-# Issue 3 (nvm/node path): neither source ~/.bashrc or source $NVM_DIR/nvm.sh does work 
+# Issue 3 (nvm/node path): neither source ~/.bashrc or source $NVM_DIR/nvm.sh does work
 # Answer: https://stackoverflow.com/questions/25899912/how-to-install-nvm-in-docker
 
 # ref: https://gist.github.com/remarkablemark/aacf14c29b3f01d6900d13137b21db3a
@@ -43,12 +43,12 @@ ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH
 # confirm installation
 RUN node -v
 RUN npm -v
-RUN npm install --global yarn
+RUN npm install --global yarn && npm cache clean --force;
 
 # RUN apt install -y software-properties-common
 # RUN add-apt-repository -y ppa:deadsnakes/ppa
-## it will install 3.9.4 
-# RUN apt-get install -y python3.9 
+## it will install 3.9.4
+# RUN apt-get install -y python3.9
 
 ENV PYTHON_VERSION 3.9.2
 # ref: https://gist.github.com/jprjr/7667947#gistcomment-3684823
@@ -58,7 +58,7 @@ ENV PYENV_ROOT /root/.pyenv
 ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
 # Install pyenv, rehash is about shims & "pyenv init" will use it
 RUN set -ex \
-    && curl https://pyenv.run | bash \
+    && curl -f https://pyenv.run | bash \
     && pyenv update \
     && pyenv install $PYTHON_VERSION \
     && pyenv global $PYTHON_VERSION \
@@ -69,19 +69,19 @@ RUN python --version
 
 RUN echo "Install poetry"
 # ref:
-# https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker 
+# https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker
 # Install and setup poetry
-RUN pip install -U pip \
-    && apt install -y netcat \
-    && curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
+RUN pip install --no-cache-dir -U pip \
+    && apt install --no-install-recommends -y netcat \
+    && curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python && rm -rf /var/lib/apt/lists/*;
 ENV PATH="${PATH}:/root/.poetry/bin"
 
 COPY . .
 RUN git submodule update --init --recursive
 RUN sh ./download_pyodide.sh
-RUN yarn install
+RUN yarn install && yarn cache clean;
 RUN poetry install
-RUN yarn build 
+RUN yarn build
 
 EXPOSE 8080
 CMD [ "poetry", "run", "uvicorn", "--host", "0.0.0.0", "main:app"]