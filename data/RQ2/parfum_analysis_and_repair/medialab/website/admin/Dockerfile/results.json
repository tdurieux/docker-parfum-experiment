{
  "startTime": 1674251866844,
  "endTime": 1674251867544,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.9.3-alpine AS static_admin\n\n# NOTE: builds in parent folder to link specs\n\nENV NODE_ENV production\n\nARG API_URL=http://localhost:3000\nENV API_URL=${API_URL}\n\nADD ./admin /admin\nADD ./specs /specs\n\nWORKDIR /admin\n\nRUN apk add --no-cache --virtual .build-deps git build-base python \\\n    && npm install --quiet --production false --no-audit \\\n    && npm run build \\\n    && apk del .build-deps \\\n    && rm -rf ./node_modules /root/.npm /root/.node-gyp /root/.config /usr/lib/node_modules && npm cache clean --force;\n\n###\n\nFROM nginx:alpine\n\nRUN mkdir /admin\n\nCOPY --from=static_admin --chown=nginx:nginx /admin/build /admin/build\nCOPY --from=static_admin --chown=nginx:nginx /admin/index.html /admin/index.html\nCOPY --from=static_admin --chown=nginx:nginx /admin/docker-cmd.sh /admin/docker-cmd.sh\n\nRUN rm /etc/nginx/conf.d/default.conf\n\nCOPY ./admin/docker-nginx.conf /etc/nginx/conf.d/docker.template\n\nCMD /bin/sh /admin/docker-cmd.sh\n"
}