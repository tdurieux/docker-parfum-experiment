{
  "startTime": 1674250528001,
  "endTime": 1674250529071,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 32,
        "columnStart": 27,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 32,
        "columnStart": 27,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0.10-fpm-buster as backend\n\nLABEL maintainer=\"4programmers.net <support@4programmers.net>\"\n\nWORKDIR /var/www\n\nRUN curl -f -sS https://deb.nodesource.com/setup_16.x | bash -\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\n\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\nRUN apt-get update -yqq && apt-get install --no-install-recommends -y \\\n    gnupg \\\n    libmcrypt-dev \\\n    libpq-dev \\\n    locales \\\n    libpng-dev \\\n    libjpeg-dev \\\n    libwebp-dev \\\n    libfreetype6-dev \\\n    libzip-dev \\\n    zlib1g-dev \\\n    git \\\n    libgmp-dev \\\n    libxml2-dev \\\n    libcurl4-openssl-dev \\\n    pkg-config \\\n    libssl-dev \\\n    libonig-dev \\\n    cron \\\n    gnupg2 \\\n    nodejs \\\n    yarn && rm -rf /var/lib/apt/lists/*;\n\nRUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ --with-webp \\\n    && docker-php-ext-install -j$(nproc) pgsql gd soap pdo_pgsql mbstring zip opcache iconv gmp\n\nRUN pecl install xdebug redis && docker-php-ext-enable redis\n\nRUN curl -f --insecure https://getcomposer.org/composer-stable.phar -o /usr/bin/composer && chmod +x /usr/bin/composer\n\nRUN echo Europe/Warsaw >/etc/timezone && \\\n    ln -sf /usr/share/zoneinfo/Europe/Warsaw /etc/localtime && \\\n    dpkg-reconfigure -f noninteractive tzdata\n\nARG UID=1000\nARG GID=1000\n\nENV php_conf /usr/local/etc/php-fpm.conf\nENV fpm_conf /usr/local/etc/php-fpm.d/www.conf\nENV php_vars /usr/local/etc/php/conf.d/docker-vars.ini\n\nRUN groupadd -g ${GID} nginx\nRUN useradd -u ${UID} -m -g nginx nginx\n\nRUN echo \"cgi.fix_pathinfo=0\" > ${php_vars} &&\\\n    echo \"upload_max_filesize = 50M\"  >> ${php_vars} &&\\\n    echo \"post_max_size = 50M\"  >> ${php_vars} &&\\\n    echo \"variables_order = \\\"EGPCS\\\"\"  >> ${php_vars} && \\\n    echo \"memory_limit = 512M\"  >> ${php_vars} && \\\n    echo \"opcache.enable = 1\" >> ${php_vars} && \\\n    echo \"opcache.jit_buffer_size = 256M\" >> ${php_vars} && \\\n    sed -i \\\n        -e \"s/;catch_workers_output\\s*=\\s*yes/catch_workers_output = yes/g\" \\\n        -e \"s/pm.max_children = 5/pm.max_children = 64/g\" \\\n        -e \"s/pm.start_servers = 2/pm.start_servers = 10/g\" \\\n        -e \"s/pm.min_spare_servers = 1/pm.min_spare_servers = 4/g\" \\\n        -e \"s/pm.max_spare_servers = 3/pm.max_spare_servers = 16/g\" \\\n        -e \"s/;pm.max_requests = 500/pm.max_requests = 500/g\" \\\n        -e \"s/user = www-data/user = nginx/g\" \\\n        -e \"s/group = www-data/group = nginx/g\" \\\n        -e \"s/;listen.mode = 0660/listen.mode = 0666/g\" \\\n        -e \"s/;listen.owner = www-data/listen.owner = nginx/g\" \\\n        -e \"s/;listen.group = www-data/listen.group = nginx/g\" \\\n        -e \"s/^;clear_env = no$/clear_env = no/\" \\\n        ${fpm_conf}\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    sed -i -e 's/# pl_PL.UTF-8 UTF-8/pl_PL.UTF-8 UTF-8/' /etc/locale.gen && \\\n    sed -i -e 's/# de_DE.UTF-8 UTF-8/de_DE.UTF-8 UTF-8/' /etc/locale.gen && \\\n    sed -i -e 's/# sv_SE.UTF-8 UTF-8/sv_SE.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\n\nENV LANG=pl_PL.UTF-8\nENV LANGUAGE=pl_PL.UTF-8\nENV LC_ALL=pl_PL.UTF-8\n\nCOPY ./docker/php/cron /etc/cron.d/coyote\nRUN chmod 0644 /etc/cron.d/coyote\nRUN crontab /etc/cron.d/coyote\n\nRUN rm -rf /var/lib/apt/lists/*\n\nADD ./docker/php/entrypoint.sh /entrypoint.sh\nRUN chmod 755 /entrypoint.sh\n\nCMD [\"/entrypoint.sh\"]\n"
}