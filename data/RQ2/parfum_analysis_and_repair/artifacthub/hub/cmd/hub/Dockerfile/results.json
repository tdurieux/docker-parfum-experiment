{
  "startTime": 1674215031825,
  "endTime": 1674215032393,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# Build backend\nFROM golang:1.18-alpine3.15 AS backend-builder\nWORKDIR /go/src/github.com/artifacthub/hub\nCOPY go.* ./\nCOPY cmd/hub cmd/hub\nCOPY internal internal\nWORKDIR /go/src/github.com/artifacthub/hub/cmd/hub\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o /hub .\n\n# Build frontend\nFROM node:14-alpine3.15 AS frontend-builder\nRUN apk --no-cache add jq\nWORKDIR /web\nCOPY web .\nENV NODE_OPTIONS=--max_old_space_size=4096\nRUN yarn install && yarn cache clean;\nRUN yarn build && yarn cache clean;\n\n# Build widget\nFROM node:14-alpine3.15 AS widget-builder\nWORKDIR /widget\nCOPY widget .\nENV NODE_OPTIONS=--max_old_space_size=4096\nRUN yarn install && yarn cache clean;\nRUN yarn build && yarn cache clean;\n\n# Build docs\nFROM klakegg/hugo:0.78.2 AS docs-builder\nWORKDIR /\nCOPY scripts scripts\nCOPY docs docs\nRUN scripts/prepare-docs.sh\nWORKDIR /docs/www\nRUN hugo\n\n# Final stage\nFROM alpine:3.15\nRUN apk --no-cache add ca-certificates && addgroup -S hub && adduser -S hub -G hub\nUSER hub\nWORKDIR /home/hub\nCOPY --from=backend-builder /hub ./\nCOPY --from=frontend-builder /web/build ./web\nCOPY --from=frontend-builder /web/package.json ./web\nCOPY --from=widget-builder /widget/build ./widget\nCOPY --from=docs-builder /web/build/docs ./web/docs\nCOPY --from=docs-builder /docs/api ./web/docs/api\nCMD [\"./hub\"]\nEXPOSE 8000\n"
}