{
  "startTime": 1674253541758,
  "endTime": 1674253542309,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Use this dockerfile to run the application.\n#\n# Start the server using docker-compose:\n#\n#   docker-compose build\n#   docker-compose up\n#\n# NOTE: In future examples replace {{volume_name}} with your projects desired volume name\n#\n# You can install dependencies via the container:\n#\n#   docker-compose run {{volume_name}} composer install\n#\n# You can manipulate dev mode from the container:\n#\n#   docker-compose run {{volume_name}} composer development-enable\n#   docker-compose run {{volume_name}} composer development-disable\n#   docker-compose run {{volume_name}} composer development-status\n#\n# OR use plain old docker\n#\n#   docker build -f Dockerfile-dev -t {{volume_name}} .\n#   docker run -it -p \"8080:80\" -v $PWD:/var/www {{volume_name}}\n#\nFROM php:7.2-apache\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y vim git zlib1g-dev mariadb-client libzip-dev \\\n && docker-php-ext-install zip mysqli pdo_mysql \\\n && pecl install xdebug \\\n && docker-php-ext-enable xdebug \\\n && echo 'xdebug.remote_enable=on' >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo 'xdebug.remote_host=host.docker.internal' >> /usr/local/etc/php/conf.d/xdebug.ini \\\n && echo 'xdebug.remote_port=9000' >>  /usr/local/etc/php/conf.d/xdebug.ini \\\n && a2enmod rewrite \\\n && sed -i 's!/var/www/html!/var/www/public!g' /etc/apache2/sites-available/000-default.conf \\\n && mv /var/www/html /var/www/public \\\n && curl -f -sS https://getcomposer.org/installer \\\n  | php -- --install-dir=/usr/local/bin --filename=composer \\\n && echo \"AllowEncodedSlashes On\" >> /etc/apache2/apache2.conf && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /var/www\n"
}