{
  "startTime": 1674251019351,
  "endTime": 1674251020156,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 36,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile constructs a docker image that contains an installation\n# of the Neuropythy library.\n#\n# Example build:\n#   docker build --no-cache --tag nben/neuropythy `pwd`\n#\n#   (but really, use docker-compose up instead).\n#\n\n# Start with the Jupyter scipy notebook docker-image.\n# We tag this to a specific version so that we're assured of future success.\nFROM jupyter/scipy-notebook:lab-3.4.3\n\n# Note the Maintainer.\nMAINTAINER Noah C. Benson <nben@uw.edu>\n\n# Install some stuff...\nRUN conda update --yes -n base conda && conda install --yes py4j nibabel s3fs\nRUN conda install --yes -c conda-forge ipywidgets\nRUN conda install --yes pip\nRUN pip3 install --no-cache-dir --upgrade setuptools\n\n# We need additional stuff for ipyvolume to work in Jupyter Labs\nRUN conda install --yes -c conda-forge ipyvolume nodejs\nRUN jupyter labextension install @jupyter-widgets/jupyterlab-manager\nRUN jupyter labextension install ipyvolume\nRUN jupyter labextension install jupyter-threejs\n\nRUN mkdir /home/$NB_USER/neuropythy\nCOPY ./setup.py ./setup.cfg ./MANIFEST.in ./LICENSE.txt ./README.md \\\n     ./requirements-dev.txt ./requirements.txt \\\n     /home/$NB_USER/neuropythy/\nCOPY ./neuropythy /home/$NB_USER/neuropythy/neuropythy\nRUN cd /home/$NB_USER/neuropythy && pip install --no-cache-dir -r requirements-dev.txt && python setup.py install\n\nRUN mkdir -p /home/$NB_USER/.jupyter\n\n# Copy over some files...\nCOPY ./docker/npythyrc /home/$NB_USER/.npythyrc\nCOPY ./docker/jupyter_notebook_config.py /home/$NB_USER/.jupyter/\n\n# Install collapsible cell extensions...\nRUN conda install -c conda-forge jupyter_contrib_nbextensions\nRUN jupyter contrib nbextension install --user\nRUN jupyter nbextension enable collapsible_headings/main \\\n && jupyter nbextension enable select_keymap/main\n\n\n\n# The root operations ...\nUSER root\n\n# Copy the README and license over.\nRUN apt-get update && apt-get install -y --no-install-recommends curl && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y default-jdk fonts-open-sans && rm -rf /var/lib/apt/lists/*;\nCOPY ./LICENSE.txt              /LICENSE.txt\nCOPY ./README.md                /README.md\nRUN mkdir -p /data/required_subjects\nRUN curl -f -L -o /data/required_subjects/fsaverage.tar.gz https://github.com/noahbenson/neuropythy/wiki/files/fsaverage.tar.gz && \\\n    curl -f -L -o /data/required_subjects/fsaverage_sym.tar.gz https://github.com/noahbenson/neuropythy/wiki/files/fsaverage_sym.tar.gz && \\\n    cd /data/required_subjects && tar zxf fsaverage.tar.gz && tar zxf fsaverage_sym.tar.gz && rm ./fsaverage.tar.gz ./fsaverage_sym.tar.gz && \\\n    chown -R root:root /data/required_subjects && chmod -R 755 /data/required_subjects\n\n# Make some global directories in the user's name also\nRUN mkdir -p /data/hcp && \\\n    chown $NB_USER /data /data/hcp && \\\n    chmod 755 /data /data/hcp\n\n# Make sure we have the run.sh script ready:\nCOPY docker/main.sh /main.sh\nCOPY docker/help.txt /help.txt\nRUN chmod 755 /main.sh /help.txt\n\nUSER $NB_USER\n\n# As the use (now with curl!), install the helvetica neue font (for figures)\nRUN mkdir -p ~/.local/share/fonts/helvetica_neue_tmp\nRUN curl -f -L -o ~/.local/share/fonts/helvetica_neue_tmp/helveticaneue.zip \\\n         https://github.com/noahbenson/neuropythy/wiki/files/helveticaneue.zip\nRUN cd ~/.local/share/fonts/helvetica_neue_tmp \\\n && unzip helveticaneue.zip \\\n && mv *.ttf .. \\\n && cd .. \\\n && rm -r ~/.local/share/fonts/helvetica_neue_tmp\nRUN fc-cache -f -v\nRUN rm -r ~/.cache/matplotlib\n\n# And mark it as the entrypoint\n#CMD [\"/main.sh\"]\nENTRYPOINT [\"tini\", \"-g\", \"--\", \"/main.sh\"]\n"
}