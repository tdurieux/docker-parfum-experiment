{
  "startTime": 1674253055674,
  "endTime": 1674253056334,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-alpine\n\nWORKDIR /app\n\nRUN apk add --no-cache \\\n    git \\\n    # === MDBTools Deps ===\n    sqlite \\\n    wget \\\n    ca-certificates \\\n    autoconf \\\n    automake \\\n    build-base \\\n    glib \\\n    glib-dev \\\n    libc-dev \\\n    libtool \\\n    linux-headers \\\n    bison flex-dev unixodbc unixodbc-dev \\\n    p7zip && \\\n    cd /tmp && \\\n    wget \"https://github.com/brianb/mdbtools/archive/0.7.1.zip\" && \\\n    unzip 0.7.1.zip && rm 0.7.1.zip && \\\n    cd mdbtools-0.7.1 && \\\n    autoreconf -i -f && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-unixodbc=/usr/local --disable-man && make && make install && \\\n    cd /tmp && \\\n    apk del autoconf automake build-base glib-dev libc-dev unixodbc-dev flex-dev && \\\n    rm -rf mdbtools-0.7.1\n\nRUN apk add --no-cache python3\n\nCOPY Backend/package.json ./Backend/package.json\nCOPY Backend/package-lock.json ./Backend/package-lock.json\nCOPY SharedUtils/package.json ./SharedUtils/package.json\nCOPY SharedUtils/package-lock.json ./SharedUtils/package-lock.json\n\nRUN cd Backend && npm install && npm cache clean --force;\nRUN cd SharedUtils && npm install && npm cache clean --force;\n\nCOPY Backend Backend\nCOPY SharedUtils SharedUtils\n\n# Include version build arg within the container env\nARG VERSION\nENV VERSION=$VERSION\n\nWORKDIR /app/Backend\n"
}