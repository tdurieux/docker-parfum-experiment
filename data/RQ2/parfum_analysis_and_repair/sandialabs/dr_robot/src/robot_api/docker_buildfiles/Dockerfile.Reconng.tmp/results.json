{
  "startTime": 1674218101367,
  "endTime": 1674218102326,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.7\n\nENV http_proxy $proxy\nENV https_proxy $proxy\nENV dns $dns\nENV GIT_SSL_NO_VERIFY 1\nENV REQUESTS_CA_BUNDLE=/etc/ssl/certs/\n\nRUN mkdir -p /home/\n\nRUN if [ -n $dns ]; \\\n    then echo \"nameserver \" >> /etc/resolv.conf;\\\n    fi; \\\n    apt-get install --no-install-recommends -y git ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nADD certs/ /usr/local/share/ca-certificates/\nADD certs/ /etc/ssl/certs/\nRUN update-ca-certificates\n\nRUN if [ -n $dns ]; \\\n    then echo \"nameserver \" >> /etc/resolv.conf;\\\n    fi;\\\n    git clone https://github.com/lanmaster53/recon-ng.git /home/recon-ng\n\nWORKDIR /home/recon-ng\n\nRUN if [ -n $dns ]; \\\n\tthen echo \"nameserver \" >> /etc/resolv.conf;\\\n\tfi; \\\n\tpip install --no-cache-dir --trusted-host pypi.org --trusted-host -r REQUIREMENTS;\n\nRUN if [ -n $dns ]; \\\n\tthen echo \"nameserver \" >> /etc/resolv.conf;\\\n\tfi;\\\n\techo -e \"marketplace install recon/domains-hosts/\\nexit\" > /tmp/loadmodules || true && \\\n\t./recon-ng -r /tmp/loadmodules\n\nRUN echo './recon-cli -m recon/domains-hosts/threatcrowd  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\" -x | grep host > $output/threatcrowd.txt' > run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/bing_domain_web  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\"  -x | grep host > $output/bing_domain_web.txt' >> run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/bing_domain_api  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\"  -x | grep host > $output/bing_domain_api.txt' >> run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/findsubdomains  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\"  -x | grep host > $output/findsubdomains.txt' >> run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/google_site_web  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\"  -x | grep host > $output/google_site_web.txt' >> run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/netcraft  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\"  -x | grep host > $output/netcraft.txt' >> run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/threatminer  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\"  -x | grep host > $output/threatminer.txt' >> run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/ssl_san  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\"  -x | grep host > $output/ssl_san.txt' >> run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/binaryedge  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\" -x | grep host > $output/threatcrowd.txt' > run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/ssl_san  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\" -x | grep host > $output/threatcrowd.txt' > run.sh\n\nRUN echo './recon-cli -m recon/domains-hosts/mx_spf_ip  -o SOURCE=\"$target\" -o PROXY=\"$http_proxy\" -o NAMESERVER=\"$dns\" -x | grep host > $output/threatcrowd.txt' > run.sh\n\nRUN chmod +x run.sh\n\nRUN mkdir -p $output\n\nENTRYPOINT ./run.sh\n"
}