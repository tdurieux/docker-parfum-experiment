{
  "startTime": 1674250478778,
  "endTime": 1674250479790,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020-2021 Huawei Technologies Co., Ltd.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM swr.cn-north-4.myhuaweicloud.com/eg-common/golang:1.14.2-alpine3.11 as builder\n\nENV HOME=/usr/mep\n\nRUN apk update &&\\\n    apk add --no-cache libc-dev gcc shadow\n\nRUN mkdir -p $HOME\n\nWORKDIR /go/cache\n\nADD go.mod .\nADD go.sum .\nRUN go mod download\n\nCOPY . $HOME\n\nWORKDIR $HOME\n\nRUN go build -buildmode=pie -ldflags '-linkmode \"external\" -extldflags \"-static\"' src/main/main.go\n\nRUN chmod 550 $HOME/main &&\\\n    chmod -R 750 $HOME/conf &&\\\n    chmod 640 $HOME/conf/app_conf.yaml &&\\\n    chmod 500 -R $HOME/views &&\\\n    chmod 440 -R $HOME/views/error/404.tpl\n\nFROM swr.cn-north-4.myhuaweicloud.com/eg-common/alpine:latest\nRUN sed -i \"s|umask 022|umask 027|g\" /etc/profile\n\n# Set the home directory to our app user's home.\nENV HOME=/usr/mep\nENV UID=166\nENV GID=166\nENV USER_NAME=eguser\nENV GROUP_NAME=eggroup\nENV ENV=\"/etc/profile\"\n\n# Create the home directory for the new app user.\nRUN mkdir -p /usr/mep\nRUN mkdir -p /usr/mep/bin\n\n# Create an app user so our program doesn't run as root.\nRUN apk update && \\\n    apk add --no-cache shadow && \\\n    groupadd -r -g $GID $GROUP_NAME && \\\n    useradd -r -u $UID -g $GID -d $HOME -s /sbin/nologin -c \"Docker image user\" $USER_NAME\n\n## SETTING UP THE APP ##\nWORKDIR $HOME\n\n# Create log and cert directory\nRUN chmod 750 $HOME &&\\\n    chmod 550 -R $HOME/bin &&\\\n    mkdir -p -m 750 $HOME/log &&\\\n    mkdir -p -m 750 $HOME/conf &&\\\n    mkdir -p -m 500 $HOME/views &&\\\n    chown -hR $USER_NAME:$GROUP_NAME $HOME\n\n# Copy in the application exe.\nCOPY --from=builder --chown=$USER_NAME:$GROUP_NAME $HOME/main $HOME/bin\nCOPY --from=builder --chown=$USER_NAME:$GROUP_NAME $HOME/conf/ $HOME/conf/\nCOPY --from=builder --chown=$USER_NAME:$GROUP_NAME $HOME/views/ $HOME/views/\n\n# Change to the app user.\nUSER $USER_NAME\n\nENTRYPOINT [\"./bin/main\"]"
}