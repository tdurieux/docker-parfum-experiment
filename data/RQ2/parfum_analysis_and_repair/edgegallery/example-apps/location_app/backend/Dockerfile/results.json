{
  "startTime": 1674251554525,
  "endTime": 1674251555157,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright 2020 Huawei Technologies Co., Ltd.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n# Prepare stage for multistage image build\n## START OF STAGE0 ##\nFROM python:3.6-slim-stretch\n\n# # CREATE APP USER ##\n# Set umask\nRUN sed -i \"s|umask 022|umask 027|g\" /etc/profile\n\n# Create the home directory for the new app user.\nRUN mkdir -p /usr/app\nRUN mkdir -p /usr/app/bin\nRUN mkdir -p /usr/app/location\n\n# Set the home directory to our app user's home.\nENV APP_HOME=/usr/app\nENV UID=166\nENV GID=166\nENV USER_NAME=eguser\nENV GROUP_NAME=eggroup\nENV ENV=\"/etc/profile\"\n\n# Create an app user so our program doesn't run as root.\nRUN apt-get -y update &&\\\n    groupadd -r -g $GID $GROUP_NAME &&\\\n    useradd -r -u $UID -g $GID -d $APP_HOME -s /sbin/nologin -c \"Docker image user\" $USER_NAME\n\nRUN apt-get install --no-install-recommends -y --fix-missing \\\n    build-essential \\\n    cmake \\\n    gfortran \\\n    git \\\n    wget \\\n    curl \\\n    graphicsmagick \\\n    libgraphicsmagick1-dev \\\n    libatlas-dev \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libgtk2.0-dev \\\n    libjpeg-dev \\\n    liblapack-dev \\\n    libswscale-dev \\\n    pkg-config \\\n    python3-dev \\\n    python3-numpy \\\n    software-properties-common \\\n    zip \\\n    && apt-get clean && rm -rf /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\n# Set the working directory.\nWORKDIR $APP_HOME\n\n# Copy the application & scripts\nCOPY config.py requirements.txt run.py constants.py clientsdk.py restclient.py $APP_HOME/\nCOPY location $APP_HOME/location/\nCOPY configs/*.sh $APP_HOME/bin\n\nRUN chmod 750 $APP_HOME &&\\\n    chmod -R 550 $APP_HOME/bin &&\\\n    mkdir -p -m 750 $APP_HOME/log &&\\\n    mkdir -p -m 700 $APP_HOME/ssl &&\\\n    chown -R $USER_NAME:$GROUP_NAME $APP_HOME\n\n# Exposed port\nEXPOSE 8079\n\n# Change to the app user.\nUSER $USER_NAME\n\n# Install requirements\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Execute script & application\nENTRYPOINT [\"sh\", \"./bin/start.sh\"]\n"
}