{
  "startTime": 1674215042076,
  "endTime": 1674215042582,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n#    Copyright 2020 Huawei Technologies Co., Ltd.\n#\n#    Licensed under the Apache License, Version 2.0 (the \"License\");\n#    you may not use this file except in compliance with the License.\n#    You may obtain a copy of the License at\n#\n#        http://www.apache.org/licenses/LICENSE-2.0\n#\n#    Unless required by applicable law or agreed to in writing, software\n#    distributed under the License is distributed on an \"AS IS\" BASIS,\n#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#    See the License for the specific language governing permissions and\n#    limitations under the License.\n#\nFROM swr.cn-north-4.myhuaweicloud.com/eg-common/openjdk:8u201-jre-alpine\n#define all environment variable here\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\nENV TZ='Asia/Shanghai'\nENV APP_FILE mec-developer-platform.jar\nENV APP_HOME /usr/app\nENV UID=166\nENV GID=166\nENV USER_NAME=eguser\nENV GROUP_NAME=eggroup\nENV ENV=\"/etc/profile\"\n\n# # CREATE APP USER ##\n# Set umask\nRUN sed -i \"s|umask 022|umask 027|g\" /etc/profile\n\n# Create the home directory for the new app user.\nRUN mkdir -p /usr/app\nRUN mkdir -p /usr/app/bin\nRUN mkdir -p /usr/app/lib\n\n# Create an app user so our program doesn't run as root.\nRUN apk update && \\\n    apk add --no-cache shadow && \\\n    groupadd -r -g $GID $GROUP_NAME\n\nRUN apk add --no-cache openssh\n\nRUN  useradd -r -u $UID -g $GID -d $APP_HOME -s /sbin/nologin -c \"Docker image user\" $USER_NAME\n\nRUN groupadd -g 1166 docker && \\\n    gpasswd -a $USER_NAME docker\n\nWORKDIR $APP_HOME\n\nRUN chmod -R 750 $APP_HOME &&\\\n    chmod -R 550 $APP_HOME/bin &&\\\n    mkdir -p -m 550 $APP_HOME/bin/lib &&\\\n    mkdir -p -m 750 $APP_HOME/config &&\\\n    mkdir -p -m 750 $APP_HOME/log &&\\\n    mkdir -p -m 700 $APP_HOME/ssl &&\\\n    mkdir -p -m 750 $APP_HOME/user &&\\\n    mkdir -p -m 750 $APP_HOME/user/app &&\\\n    mkdir -p -m 750 $APP_HOME/user/plugin &&\\\n    mkdir -p -m 750 $APP_HOME/user/workspace &&\\\n    mkdir -p -m 750 $APP_HOME/user/workspace/csar &&\\\n    mkdir -p -m 750 $APP_HOME/user/uploaded_files &&\\\n    mkdir -p -m 750 $APP_HOME/mep_capability &&\\\n    mkdir -p -m 750 $APP_HOME/mep_capability/images &&\\\n    chown -R $USER_NAME:$GROUP_NAME $APP_HOME &&\\\n    chown -R $USER_NAME:$GROUP_NAME $APP_HOME/log &&\\\n    chown -R $USER_NAME:$GROUP_NAME $APP_HOME/user &&\\\n    chown -R $USER_NAME:$GROUP_NAME $APP_HOME/user/workspace &&\\\n    chown -R $USER_NAME:$GROUP_NAME $APP_HOME/user/uploaded_files\n\nCOPY --chown=$USER_NAME:$GROUP_NAME target/*.jar $APP_HOME/bin\nCOPY --chown=$USER_NAME:$GROUP_NAME target/output $APP_HOME\nCOPY --chown=$USER_NAME:$GROUP_NAME configs/mep_capability $APP_HOME/mep_capability\nCOPY --chown=$USER_NAME:$GROUP_NAME configs/mep_capability/images $APP_HOME/mep_capability/images\nCOPY --chown=$USER_NAME:$GROUP_NAME target/lib/ $APP_HOME/bin/lib/\n\nEXPOSE 9080\n\n# Change to the app user.\nUSER $USER_NAME\n\n# Execute script & application\nENTRYPOINT [\"sh\", \"-c\"]\nCMD [\"exec java -Dlog4j2.formatMsgNoLookups=true -jar ./bin/$APP_FILE\"]\n"
}