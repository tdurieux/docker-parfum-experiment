{
  "startTime": 1674253582772,
  "endTime": 1674253583646,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020-2021 Huawei Technologies Co., Ltd.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM swr.cn-north-4.myhuaweicloud.com/eg-common/golang:1.14.2 as builder\n\n# ENV GOPROXY https://goproxy.io\n# ENV GO111MODULE on\nENV HOME=/usr/mep\n\nRUN apt update && \\\n    apt install -y --no-install-recommends libc-dev gcc && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p $HOME\n\nWORKDIR /go/cache\n\nADD go.mod .\nADD go.sum .\nRUN go mod download\n\nCOPY . $HOME\n\nWORKDIR $HOME\n\nRUN GOOS=linux go build -buildmode=pie -ldflags '-linkmode \"external\" -extldflags \"-static\"' -o app\n\nRUN chmod -R 550 $HOME/app &&\\\n    chmod -R 750 $HOME/conf &&\\\n    chmod 640 $HOME/conf/app.conf &&\\\n    chmod 640 $HOME/conf/mep/config.yaml &&\\\n    chmod 550 $HOME/start.sh\n\nFROM swr.cn-north-4.myhuaweicloud.com/eg-common/alpine:latest\nRUN sed -i \"s|umask 022|umask 027|g\" /etc/profile\n# Create the home directory for the new mep user.\nRUN mkdir -p /usr/mep\nRUN mkdir -p /usr/mep/bin\n\n# Set the home directory to our app user's home.\nENV HOME=/usr/mep\nENV UID=166\nENV GID=166\nENV USER_NAME=eguser\nENV GROUP_NAME=eggroup\nENV ENV=\"/etc/profile\"\n\n# Create an app user so our program doesn't run as root.\nRUN apk update && \\\n    apk add --no-cache shadow && \\\n    groupadd -r -g $GID $GROUP_NAME && \\\n    useradd -r -u $UID -g $GID -d $HOME -s /sbin/nologin -c \"Docker image user\" $USER_NAME\n\n## SETTING UP THE APP ##\nWORKDIR $HOME\n\nRUN chmod 750 $HOME &&\\\n    chmod 550 -R $HOME/bin &&\\\n    mkdir -p -m 700 $HOME/ssl &&\\\n    mkdir -p -m 750 $HOME/log &&\\\n    mkdir -p -m 700 $HOME/keys  &&\\\n    mkdir -p -m 700 $HOME/cprop  &&\\\n    mkdir -p -m 700 $HOME/sprop  &&\\\n    mkdir -p -m 700 $HOME/wprop  &&\\\n    mkdir -p -m 700 $HOME/wnprop &&\\\n    mkdir -p -m 750 $HOME/conf &&\\\n    chown -hR $USER_NAME:$GROUP_NAME $HOME\n\n# Copy in the application exe.\nCOPY --from=builder --chown=$USER_NAME:$GROUP_NAME $HOME/app $HOME/bin\nCOPY --from=builder --chown=$USER_NAME:$GROUP_NAME $HOME/conf/ $HOME/conf/\nCOPY --from=builder --chown=$USER_NAME:$GROUP_NAME $HOME/start.sh $HOME/bin\n\nUSER $USER_NAME\n\nEXPOSE 8088\n\nCMD [\"sh\", \"-c\", \"$HOME/bin/start.sh\"]"
}