{
  "startTime": 1674254961748,
  "endTime": 1674254962922,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Get latest ca-certificates\nFROM alpine AS certs\nRUN apk --update --no-cache add ca-certificates\n\nFROM golang:1.18.3-alpine AS base\n\n# To fix go get and build with cgo\nRUN apk add --no-cache --virtual .build-deps \\\n    bash \\\n    gcc \\\n    git \\\n    musl-dev\n\nRUN mkdir build\nWORKDIR /build\n\nCOPY go.mod .\nCOPY go.sum .\n\nRUN go mod download\n\n# Build the image\nFROM base as builder\nCOPY . .\nARG VERSION=dev-docker\nARG DATE=\nARG COMMIT=\n\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo \\\n    -ldflags \"-X 'main.version=${VERSION}' -X 'main.date=${DATE}' -X 'main.commit=${COMMIT}' -extldflags '-static'\" \\\n    -o dctna-server ./cmd/dctna-server\n\n# Collect certificates and binary\nFROM gcr.io/distroless/base-debian11\nEXPOSE 8086 8443\nCOPY --from=certs /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\n# root user required as the volumes mount as root\n# files in the volumes can only be accessed by the owner of the files\n# which are in this case root\n# TODO: find a way arround this.\nWORKDIR /root\nVOLUME [ \"/root/.notary\", \"/root/.docker/trust\", \"/root/certs\" ]\nCOPY certs/ /root/certs/\nCOPY .notary/config.json /root/.notary/config.json\nCOPY --from=builder /build/dctna-server /root/\nCMD [ \"./dctna-server\" ]\n"
}