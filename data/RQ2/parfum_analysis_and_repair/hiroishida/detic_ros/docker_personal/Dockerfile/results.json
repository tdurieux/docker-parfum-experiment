{
  "startTime": 1674249531769,
  "endTime": 1674249532901,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 18,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 18,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 18,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 18,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 101
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.0-devel-ubuntu20.04\n\nRUN echo 'Etc/UTC' > /etc/timezone && \\\n    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \\\n    apt-get update && \\\n    apt-get install -q -y --no-install-recommends tzdata && \\\n    rm -rf /var/lib/apt/lists/*\n\n\nRUN apt update\n\n# install minimum tools:\nRUN apt install --no-install-recommends -y build-essential sudo git vim tmux openssh-server net-tools && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  useradd user && \\\n  echo \"user ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/user && \\\n  chmod 0440 /etc/sudoers.d/user && \\\n  mkdir -p /home/user && \\\n  chown user:user /home/user && \\\n  chsh -s /bin/bash user\n\nRUN echo 'root:root' | chpasswd\nRUN echo 'user:user' | chpasswd\n\n# set up ssh\n# https://github.com/IMC3ofC/db2express-c.docker/issues/12\nRUN mkdir /var/run/sshd\nRUN sed -i 's/\\#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN sed -i 's/\\(^Port\\)/#\\1/' /etc/ssh/sshd_config && echo Port 2233 >> /etc/ssh/sshd_config\nEXPOSE 2233\n\n# install packages\nRUN apt-get update && apt-get install -q -y --no-install-recommends \\\n    dirmngr \\\n    gnupg2 \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu focal main\" > /etc/apt/sources.list.d/ros1-latest.list\n\n# setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nENV ROS_DISTRO noetic\n\n# install ros packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ros-noetic-ros-core=1.5.0-1* \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install bootstrap tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    python3-rosdep \\\n    python3-rosinstall \\\n    python3-vcstools \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install ros packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ros-noetic-ros-base=1.5.0-1* \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt update && apt install --no-install-recommends python3-osrf-pycommon python3-catkin-tools -y && rm -rf /var/lib/apt/lists/*;\nRUN apt update && apt install --no-install-recommends ros-noetic-jsk-tools -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /home/user\nUSER user\nCMD /bin/bash\nSHELL [\"/bin/bash\", \"-c\"]\n\n#RUN sudo apt install python3-pip -y\n#RUN pip3 install torch torchvision\n#RUN git clone https://github.com/facebookresearch/detectron2.git\n#RUN cd detectron2 && pip3 install . --user\n#\n#RUN source /opt/ros/noetic/setup.bash\n#RUN mkdir -p ~/detic_ws/src\n#RUN cd ~/detic_ws/src && git clone https://github.com/HiroIshida/detic_ros.git\n#RUN cd ~/detic_ws/src/detic_ros && git submodule update --init --recursive\n#RUN cd ~/detic_ws/src/detic_ros/Detic && pip3 install -r requirements.txt\n#RUN cd ~/detic_ws/src/detic_ros && ./prepare_dataset.sh\n#\n#RUN source /opt/ros/noetic/setup.bash && cd ~/detic_ws && catkin build\n\n# setup dotfiles (also source)\nRUN git clone https://github.com/HiroIshida/dotfiles2.git\nRUN cd dotfiles2 && ./install --light && exec bash\nRUN echo \"source /opt/ros/noetic/setup.bash\" >> ~/.bash/user_specific.sh\nRUN echo \"source ~/detic_ws/devel/setup.bash\" >> ~/.bash/user_specific.sh\nRUN echo 'export PATH=\\\"$PATH:$HOME/.local/bin\"' >> ~/.bash/user_specific.sh\n"
}