diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/infinum/default_rails_template/docker/Dockerfile.with_node b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/infinum/default_rails_template/docker/Dockerfile.with_node/repaired.Dockerfile
index 23041ee..0e93c1d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/infinum/default_rails_template/docker/Dockerfile.with_node
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/infinum/default_rails_template/docker/Dockerfile.with_node/repaired.Dockerfile
@@ -7,7 +7,7 @@ ARG PG_MAJOR=13
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get update -qq \
   && apt-get install -yq --no-install-recommends curl gnupg2 \
-  && curl -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
+  && curl -f -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
   && echo 'deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list \
   && apt-get update -qq \
   && apt-get -yq dist-upgrade \
@@ -34,10 +34,15 @@ ENV BUNDLE_BIN=/usr/local/bin \
 
 RUN groupadd --gid 1001 nonroot \
   && useradd --uid 1001 --gid nonroot --shell /bin/bash --create-home nonroot
+RUN mkdir -p /usr/local/etc \
+  && { \
+    echo 'install: --no-document'; \
+    echo 'update: --no-document'; \
+  } >> /usr/local/etc/gemrc;
 
 RUN gem update --system && \
   rm -f /usr/local/bin/ruby/gems/*/specifications/default/bundler-*.gemspec && \
-  gem install bundler -v $BUNDLER_VERSION
+  gem install bundler -v $BUNDLER_VERSION && rm -rf /root/.gem;
 
 # chown /app so it's writable by yarn & bootsnap
 RUN mkdir /app && chown -R nonroot:nonroot /app
@@ -57,8 +62,8 @@ RUN apt-get update -qq \
 
 # add node and yarn
 # TODO: can we somehow pin Node to a specific version?
-RUN curl -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -
-RUN curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
+RUN curl -f -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
   && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list
 RUN apt-get update -qq \
   && apt-get install -yq --no-install-recommends \
@@ -72,7 +77,7 @@ FROM builder as gems_and_npm_packages
 
 COPY --chown=nonroot:nonroot package.json yarn.lock /app/
 ENV NODE_ENV=production
-RUN yarn install && (rm -rf /tmp/* || true)
+RUN yarn install && (rm -rf /tmp/* || true) && yarn cache clean;
 
 COPY --chown=nonroot:nonroot .bundle/ci-deploy/config /app/.bundle/config
 COPY --chown=nonroot:nonroot Gemfile* /app/
@@ -100,7 +105,7 @@ RUN --mount=type=secret,id=app_secrets,target=/app/config/application.yml bundle
   && find $BUNDLE_PATH/ruby -name "*.o" -delete \
   && find $BUNDLE_PATH/ruby -name ".git"  -type d -prune -execdir rm -rf {} + \
   && bundle exec rails tmp:clear \
-  && bundle exec bootsnap precompile --gemfile app/ lib/
+  && bundle exec bootsnap precompile --gemfile app/ lib/ && yarn cache clean;
 
 # https://github.com/rubygems/rubygems/issues/3225
 RUN rm -rf /usr/local/bundle/ruby/*/cache