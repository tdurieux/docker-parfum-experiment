{
  "startTime": 1674250918840,
  "endTime": 1674250919509,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker in this repo is only supported for running tests locally\n# as an alternative to virtualenv natively - johnnagro 2022-02-11\nFROM ubuntu:focal as app\nMAINTAINER sre@edx.org\n\n\n# Packages installed:\n# git; Used to pull in particular requirements from github rather than pypi,\n# and to check the sha of the code checkout.\n\n# build-essentials; so we can use make with the docker container\n\n# language-pack-en locales; ubuntu locale support so that system utilities have a consistent\n# language and time zone.\n\n# python; ubuntu doesnt ship with python, so this is the python we will use to run the application\n\n# python3-pip; install pip to install application requirements.txt files\n\n# libmysqlclient-dev; to install header files needed to use native C implementation for\n# MySQL-python for performance gains.\n\n# libssl-dev; # mysqlclient wont install without this.\n\n# python3-dev; to install header files for python extensions; much wheel-building depends on this\n\n# gcc; for compiling python extensions distributed with python packages like mysql-client\n\n# If you add a package here please include a comment above describing what it is used for\nRUN apt-get update && apt-get -qy install --no-install-recommends \\\n language-pack-en \\\n locales \\\n python3.8 \\\n python3-pip \\\n python3.8-venv \\\n libmysqlclient-dev \\\n libssl-dev \\\n python3-dev \\\n gcc \\\n build-essential \\\n git \\\n curl && rm -rf /var/lib/apt/lists/*;\n\n\nRUN pip install --no-cache-dir --upgrade pip setuptools\n# delete apt package lists because we do not need them inflating our image\nRUN rm -rf /var/lib/apt/lists/*\n\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV DJANGO_SETTINGS_MODULE enterprise.settings.test\n\n# Env vars: path\nENV VIRTUAL_ENV='/edx/app/venvs/edx-enterprise'\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\nENV PATH=\"/edx/app/edx-enterprise/node_modules/.bin:${PATH}\"\nENV PATH=\"/edx/app/edx-enterprise/bin:${PATH}\"\nENV PATH=\"/edx/app/nodeenv/bin:${PATH}\"\n\nRUN useradd -m --shell /bin/false app\n\nWORKDIR /edx/app/edx-enterprise\n\nRUN python3.8 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# Copy the requirements explicitly even though we copy everything below\n# this prevents the image cache from busting unless the dependencies have changed.\nCOPY requirements/ /edx/app/edx-enterprise/requirements/\n\n# Dependencies are installed as root so they cannot be modified by the application user.\nRUN pip install --no-cache-dir -r requirements/dev.txt\nRUN pip install --no-cache-dir nodeenv\n\n# Set up a Node environment and install Node requirements.\n# Must be done after Python requirements, since nodeenv is installed\n# via pip.\n# The node environment is already 'activated' because its .../bin was put on $PATH.\nRUN nodeenv /edx/app/nodeenv --node=16.15.1 --prebuilt\n\nRUN mkdir -p /edx/var/log\n\n# Code is owned by root so it cannot be modified by the application user.\n# So we copy it before changing users.\nUSER app\n\n# This line is after the requirements so that changes to the code will not\n# bust the image cache\nCOPY . /edx/app/edx-enterprise\n\n"
}