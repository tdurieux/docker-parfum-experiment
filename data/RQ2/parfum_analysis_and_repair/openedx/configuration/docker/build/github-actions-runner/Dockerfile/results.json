{
  "startTime": 1674254193513,
  "endTime": 1674254194395,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 138
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\n# Set the github runner version\nARG RUNNER_VERSION=\"2.279.0\"\n\nENV GITHUB_ORGANIZATION=\"\"\nENV GITHUB_ACCESS_TOKEN=\"\"\n\n# Update and install necessary packages\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y curl iputils-ping jq software-properties-common build-essential libssl-dev \\\n    libffi-dev python3 python3-venv python3-dev libmysqlclient-dev yamllint && rm -rf /var/lib/apt/lists/*;\n\n# Add a github action runner user\nRUN useradd -m actions-runner\n\n# cd into the user directory, download and unzip the github actions runner\nRUN cd /home/actions-runner && mkdir actions-runner && cd actions-runner \\\n    && curl -f -O -L https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz \\\n    && tar xzf ./actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz \\\n    && ./bin/installdependencies.sh \\\n    && chown -R actions-runner ~actions-runner \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get clean && rm ./actions-runner-linux-x64-${RUNNER_VERSION}.tar.gz\n\n# Install sudo to execute commands with root privileges\nRUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\n\n# Install packages needed for Docker installation\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https gnupg-agent && rm -rf /var/lib/apt/lists/*;\n\n# Add Docker's GPG key and repository\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - && \\\n    add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n    $(lsb_release -cs) stable\"\n\n# Install Docker - for Docker CI running by github action runner\nRUN apt-get update && apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Add the github actions-runner user to the docker group to allow the github action runner user to run docker commands.\n# See: https://docs.docker.com/engine/installation/linux/ubuntulinux/\nRUN usermod -aG docker actions-runner\n\n# copy over the actions-runner.sh script\nADD docker/build/github-actions-runner/actions-runner.sh /actions-runner.sh\n\n# make the script executable\nRUN chmod +x actions-runner.sh\n\n#set the user to \"actions-runner\" so all subsequent commands are run as the actions-runner user\nUSER actions-runner\n\n# set the entrypoint to the actions-runner.sh script\nENTRYPOINT [\"./actions-runner.sh\"]\n"
}