diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openedx/course-discovery/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openedx/course-discovery/Dockerfile/repaired.Dockerfile
index 70a81a6..94cfa4b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/openedx/course-discovery/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/openedx/course-discovery/Dockerfile/repaired.Dockerfile
@@ -4,7 +4,7 @@ FROM ubuntu:focal as app
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get update && \
 	apt-get upgrade -qy
-RUN apt-get install --yes \
+RUN apt-get install --no-install-recommends --yes \
 	git \
 	language-pack-en \
 	python3-venv \
@@ -16,7 +16,7 @@ RUN apt-get install --yes \
 	libxml2-dev \
 	libxslt1-dev \
 	libjpeg-dev \
-	libssl-dev
+	libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN rm -rf /var/lib/apt/lists/*
 
@@ -24,7 +24,7 @@ ENV VIRTUAL_ENV=/venv
 RUN python3.8 -m venv $VIRTUAL_ENV
 ENV PATH="$VIRTUAL_ENV/bin:$PATH"
 
-RUN pip install pip==20.2.3 setuptools==50.3.0 nodeenv
+RUN pip install --no-cache-dir pip==20.2.3 setuptools==50.3.0 nodeenv
 
 # Use UTF-8.
 RUN locale-gen en_US.UTF-8
@@ -45,13 +45,13 @@ COPY package.json package.json
 COPY package-lock.json package-lock.json
 RUN nodeenv /edx/app/nodeenv --node=16.14.2 --npm=8.5.x --prebuilt
 ENV PATH /edx/app/nodeenv/bin:${PATH}
-RUN npm install --production
+RUN npm install --production && npm cache clean --force;
 COPY bower.json bower.json
 RUN ./node_modules/.bin/bower install --allow-root --production
 
 # Copy just Python requirements & install them.
 COPY requirements/ requirements/
-RUN pip install -r requirements/production.txt
+RUN pip install --no-cache-dir -r requirements/production.txt
 
 # Copy over rest of code.
 # We do this AFTER requirements so that the requirements cache isn't busted
@@ -64,5 +64,5 @@ EXPOSE 8381
 CMD gunicorn --bind=0.0.0.0:8381 --workers 2 --max-requests=1000 -c course_discovery/docker_gunicorn_configuration.py course_discovery.wsgi:application
 
 FROM app as newrelic
-RUN pip install newrelic
+RUN pip install --no-cache-dir newrelic
 CMD newrelic-admin run-program gunicorn --bind=0.0.0.0:8381 --workers 2 --max-requests=1000 -c course_discovery/docker_gunicorn_configuration.py course_discovery.wsgi:application