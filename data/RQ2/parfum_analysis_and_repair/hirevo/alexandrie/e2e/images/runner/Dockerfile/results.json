{
  "startTime": 1674248930400,
  "endTime": 1674248931340,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.50\n\n# install a few system dependencies\nRUN apt update && apt install --no-install-recommends -y curl jq && rm -rf /var/lib/apt/lists/*;\n\n# copy the test runner script into the container\nCOPY ./runner/runner.sh /home/runner/runner.sh\n\nARG USER_ID=1000\nARG GROUP_ID=1000\n\n# combine run instructions to reduce docker layers & overall image size\nRUN \\\n    # make a non-root user\n    groupadd -g ${GROUP_ID} runner && \\\n    useradd -u ${USER_ID} -g ${GROUP_ID} runner && \\\n    # make the user directory & give them access to everything in it\n    # mkdir -p /home/runner && \\\n    mkdir -p /home/runner/.ssh && \\\n    chown -R ${USER_ID}:${GROUP_ID} /home/runner && \\\n    # give runner ownership of the startup script & make it executable\n    chmod +x /home/runner/runner.sh\n\n# switch to the non-root user to run the main process\nUSER runner\nWORKDIR /home/runner\n\nCMD [ \"./runner.sh\" ]\n"
}