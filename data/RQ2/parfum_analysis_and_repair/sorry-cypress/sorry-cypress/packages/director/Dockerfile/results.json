{
  "startTime": 1674255130700,
  "endTime": 1674255131268,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine AS build\nWORKDIR /app\nCOPY packages/director/ ./packages/director/\nCOPY packages/common/ ./packages/common\nCOPY packages/mongo/ ./packages/mongo\nCOPY packages/logger/ ./packages/logger\nCOPY package.json ./\nCOPY yarn.lock ./\nCOPY tsconfig.json ./\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nRUN yarn workspace @sorry-cypress/common build && yarn cache clean;\nRUN yarn workspace @sorry-cypress/mongo build && yarn cache clean;\nRUN yarn workspace @sorry-cypress/logger build && yarn cache clean;\nRUN yarn workspace @sorry-cypress/director build && yarn cache clean;\n\nRUN yarn install --production --frozen-lockfile && yarn cache clean;\nRUN apk --no-cache add curl && \\\n    curl -sf https://gobinaries.com/tj/node-prune | sh && \\\n    node-prune\n\nFROM node:14-alpine\nWORKDIR /app\nCOPY --chown=node:node --from=build /app/packages/ packages/\nCOPY --chown=node:node --from=build /app/node_modules/ node_modules/\nRUN apk add --no-cache tini\nENV NODE_ENV=production\nUSER node\nEXPOSE 1234\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"./node_modules/.bin/pm2-runtime\", \"packages/director/dist\"]\n"
}