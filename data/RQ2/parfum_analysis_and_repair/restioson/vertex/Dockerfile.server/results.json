{
  "startTime": 1674248674019,
  "endTime": 1674248674682,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 60,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rustlang/rust:nightly-slim as build\n\nWORKDIR /vertex/server\nCOPY server/Cargo.* .\n\n# Build deps except for vertex_common\nRUN mkdir src/ && rustc --version && echo \"fn main() {}\" > src/main.rs \\\n    && sed -i 's/vertex = /#vertex = /g' Cargo.toml && cargo +nightly  build --release\n\n# Build vertex_common\nCOPY common/ ../common/\nRUN sed -i 's/#vertex = /vertex = /g' Cargo.toml && cargo +nightly  build --release && rm src/main.rs\n\n# Build project\nCOPY server/src src\nRUN touch src/main.rs && cargo +nightly build --release\n\n# Run\nFROM debian:stretch\n\nRUN echo \"Installing psql\" && apt-get update > /dev/null && apt-get install --no-install-recommends postgresql-client -y > /dev/null && \\\n    rm -r /var/lib/apt/lists/* && echo \"psql installed\"\nCOPY --from=build /vertex/server/target/release/vertex_server ./vertex_server\n\n# Copy config files\nCOPY server/docker/config.toml server/docker/key.pe[m] server/docker/cert.pe[m] /root/.config/vertex_server/\nCOPY server/docker/db.conf /root/.config/vertex_server/\n\nARG VERTEX_SERVER_PORT\nENV VERTEX_SERVER_PORT=$VERTEX_SERVER_PORT\n\nCOPY wait-for-postgres.sh .\nEXPOSE 443\nCMD [\"/bin/sh\", \"wait-for-postgres.sh\", \"db\", \"5342\"]\n"
}