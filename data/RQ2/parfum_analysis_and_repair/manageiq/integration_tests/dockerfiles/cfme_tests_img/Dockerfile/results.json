{
  "startTime": 1674253022757,
  "endTime": 1674253023911,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 33,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 33,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Our custom docker image with app\nFROM patchkez/cfme_tests_base\nMAINTAINER <RH>\n\nLABEL company=\"Redhat\" product=\"CFME\" environment=\"dev\" tier=\"test\"\n\nRUN pip install --no-cache-dir -U pip && pip install --no-cache-dir -U virtualenv\n\nENV PROJECTS /projects\n\nENV CFMEENV cfme_env\n\nENV WORK $PROJECTS/$CFMEENV\n\nRUN mkdir $PROJECTS && cd $PROJECTS\n\n# VOLUME /mnt/data/dock_vm_images/docker_volumes/rh_cfme_tests:$PROJECTS\n\nWORKDIR $PROJECTS\n\nRUN virtualenv $CFMEENV\n\nWORKDIR $CFMEENV\n\nRUN echo \"export PYTHONPATH=$WORK/:${PYTHONPATH}\" >> ~/.bashrc\n\nRUN echo \"source $WORK/bin/activate\" >> ~/.bashrc\n\nRUN echo \"cd $WORK\" >> ~/.bashrc\n\nRUN echo \"export CFME_ENV=$WORK\" >> ~/.bashrc\n\nRUN echo \"export PYTHONPATH=${PYTHON_PATH}:$WORK/cfme_tests\" >> bin/activate\n\nRUN echo \"PYTHONDONTWRITEBYTECODE=\\\"yes\\\"\" >> bin/activate\n\nRUN export PYCURL_SSL_LIBRARY=nss\n\nRUN pip install --no-cache-dir -Ur https://raw.githubusercontent.com/RedHatQE/cfme_tests/master/requirements.txt && rm -rf ~/.cache/pip\n\nRUN mkdir selenium; cd selenium; curl -f -L https://goo.gl/yLJLZg > selenium_latest.jar\n\nRUN mkdir ~/.vnc\n\nADD xstartup /root/.vnc/xstartup\n\nRUN chmod 755 /root/.vnc/xstartup\n\nEXPOSE 5999\n\nCMD vncserver :99 -SecurityTypes None\n"
}