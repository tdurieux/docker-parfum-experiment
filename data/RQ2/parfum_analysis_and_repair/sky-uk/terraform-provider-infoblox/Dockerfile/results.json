{
  "startTime": 1674250553507,
  "endTime": 1674250554241,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 20,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 20,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "# Use phusion/baseimage as base image. To make your builds\n# reproducible, make sure you lock down to a specific version, not\n# to `latest`! See\n# https://github.com/phusion/baseimage-docker/blob/master/Changelog.md\n# for a list of version numbers.\nFROM phusion/baseimage:0.9.22\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# Install some packages.\nRUN apt-get update; apt-get -y --no-install-recommends install aptitude wget unzip git && rm -rf /var/lib/apt/lists/*;\n\n# Install Golang binaries\nRUN wget https://storage.googleapis.com/golang/go1.9.1.linux-amd64.tar.gz\nRUN tar -xvf go1.9.1.linux-amd64.tar.gz; rm go1.9.1.linux-amd64.tar.gz mv go /usr/local/\n\n# Install Terraform.\nRUN mkdir /terraform;\nWORKDIR /terraform\nRUN wget https://releases.hashicorp.com/terraform/0.10.7/terraform_0.10.7_linux_amd64.zip\nRUN unzip terraform_0.10.7_linux_amd64.zip\nWORKDIR /\nRUN mv /terraform /usr/local/\n\n# Set up environment\nRUN mkdir -p /gows\nENV GOPATH /gows\nENV GOBIN $GOPATH/bin\nENV PATH $PATH:/usr/local/terraform:/usr/local/go/bin:$GOBIN\n\n# Setup golang deps\nRUN go get -v github.com/tools/godep\nRUN go get -v github.com/golang/lint/golint\nRUN go get -v github.com/axw/gocov\n# gocov isn't automatically building and placing binary in $GOBIN\nRUN cd ${GOPATH}/src/github.com/axw/gocov/gocov && go build -o ${GOBIN}/gocov\nRUN go get -v github.com/AlekSi/gocov-xml\nRUN go get -v github.com/matm/gocov-html\nRUN go get -v github.com/go-playground/overalls\n\n# Install Terraform linter.\nRUN mkdir /terraform-linter\nWORKDIR /terraform-linter\nRUN wget https://github.com/wata727/tflint/releases/download/v0.4.2/tflint_linux_amd64.zip\nRUN unzip tflint_linux_amd64.zip\nWORKDIR /\nRUN mv /terraform-linter/tflint /usr/bin/\nENV PATH $PATH:/usr/local/terraform:/usr/local/go/bin\n\nRUN apt-get -y --no-install-recommends install make binutils && rm -rf /var/lib/apt/lists/*;\n\n# Build the Infoblox provider\nADD . /gows/src/github.com/sky-uk/terraform-provider-infoblox\nRUN cd /gows/src/github.com/sky-uk/terraform-provider-infoblox; make fmt; make ; cp /gows/bin/terraform-provider-infoblox /usr/local/terraform/\n\n# Clean up APT when done.\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.ssh/id_rsa*\n\n"
}