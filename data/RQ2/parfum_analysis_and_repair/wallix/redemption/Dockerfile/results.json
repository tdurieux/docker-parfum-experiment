{
  "startTime": 1674253081070,
  "endTime": 1674253081827,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 26,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 30,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 26,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 26,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 30,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 26,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Install build dependencies\nRUN apt-get -qq update && apt-get install --no-install-recommends -y g++ libboost-tools-dev libboost-test-dev libssl-dev libkrb5-dev \\\n    libgssglue-dev libsnappy-dev libpng-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev \\\n    libx264-dev libbz2-dev && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n# Create build directory\nRUN mkdir -p /gcc/\n# Set container working directory\nWORKDIR /gcc/\n# Copy source code into build container\nCOPY . /gcc/\n# Clone ppocr repository; could be replaced with `git submodule update --init` but\n# if this runs from another git repository (a fork for example) the owner of the\n# fork must ensure they also fork ppocr and make sure that ../ppocr leads to the proper git repository\nRUN cd modules && rm -rf ppocr && git clone https://github.com/wallix/ppocr.git ppocr\n# Build rdpproxy\nRUN bjam linkflags=-static-libstdc++ variant=release -q --toolset=gcc cxxflags='-DREDEMPTION_DISABLE_NO_BOOST_PREPROCESSOR_WARNING' rdpproxy\n# Install rdpproxy into /usr/local\nRUN bjam --toolset=gcc variant=release install --prefix=/usr/local || echo \"done\"\n\nFROM ubuntu:20.04\n# Install runtime dependencies\nRUN apt-get -qq update && apt-get install --no-install-recommends -y python3 libgssapi-krb5-2 libpng16-16 libsnappy1v5 && rm -rf /var/lib/apt/lists/*;\n# Copy built rdpporxy\nCOPY --from=0 /usr/local /usr/local\n# Copy built rdpproxy configuration\nCOPY --from=0 /etc /etc\n# Expose RDP Server port\nEXPOSE 3389\n# Copy container startup script\nCOPY ./start.sh /\n# Copy passthrough script\nCOPY ./tools/passthrough /usr/local/share/passthrough/\n# Container entry point\nCMD [ \"/start.sh\" ]\n"
}