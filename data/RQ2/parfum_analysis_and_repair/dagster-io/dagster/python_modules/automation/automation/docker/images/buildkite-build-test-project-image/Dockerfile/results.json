{
  "startTime": 1674255529740,
  "endTime": 1674255530304,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################################################################################\n#\n# DAGSTER BUILDKITE TEST IMAGE BUILDER\n#\n# This Dockerfile specifies an image with a test Dagster project. It is built\n# during every run of BK. The base image is `buildkite-test-image-builder-base`.\n#\n####################################################################################################\n# This image is used to bootstrap the test image building process\nARG BASE_IMAGE\nFROM \"${BASE_IMAGE}\"\n\n# Next two commands lifted from https://github.com/jpetazzo/dind/blob/master/Dockerfile\n\n# Let's start with some basic stuff.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    lxc \\\n    iptables && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sSL https://get.docker.com/ > install_docker.sh\n\nRUN pip install --no-cache-dir pex==2.1.12\n\nADD requirements.txt .\n\nRUN pex -r requirements.txt -m awscli -o aws.pex\n\n# Now we usage a multistage build to remove the cruft above\n# that was needed to get the shell script\n\nFROM \"${BASE_IMAGE}\"\n\nWORKDIR /scriptdir\n\nCOPY --from=0 install_docker.sh .\n\nCOPY --from=0 aws.pex .\n\nRUN sh install_docker.sh && \\\n    chmod +x aws.pex && \\\n    # Buildkite mounts the checkout to /workdir\n    # Requires git in order to do that\n    apt-get update && \\\n    apt-get install --no-install-recommends -y git rsync && \\\n    apt-get remove -yqq && \\\n    apt-get autoremove -yqq --purge && \\\n    apt-get clean && \\\n    rm install_docker.sh && \\\n    rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*\n"
}