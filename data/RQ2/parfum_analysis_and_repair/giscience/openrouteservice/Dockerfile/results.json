{
  "startTime": 1674249143995,
  "endTime": 1674249144616,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:11-jdk\n\nENV MAVEN_OPTS=\"-Dmaven.repo.local=.m2/repository -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true\"\nENV MAVEN_CLI_OPTS=\"--batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true\"\n\nARG ORS_CONFIG=./openrouteservice/src/main/resources/ors-config-sample.json\nARG OSM_FILE=./openrouteservice/src/main/files/heidelberg.osm.gz\nENV BUILD_GRAPHS=\"False\"\nARG UID=1000\nARG TOMCAT_VERSION=8.5.69\n\n# Create user\nRUN useradd -u $UID -md /ors-core ors\n\n# Create directories\nRUN mkdir -p /usr/local/tomcat /ors-conf /var/log/ors && \\\n    chown ors:ors /usr/local/tomcat /ors-conf /var/log/ors\n\n# Install dependencies and locales\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -qq -y locales nano maven moreutils jq && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    locale-gen en_US.UTF-8\n\nUSER ors:ors\nWORKDIR /ors-core\n\nCOPY --chown=ors:ors openrouteservice /ors-core/openrouteservice\nCOPY --chown=ors:ors $OSM_FILE /ors-core/data/osm_file.pbf\nCOPY --chown=ors:ors $ORS_CONFIG /ors-core/openrouteservice/src/main/resources/ors-config-sample.json\nCOPY --chown=ors:ors ./docker-entrypoint.sh /ors-core/docker-entrypoint.sh\n\n# Install tomcat\nRUN wget -q https://archive.apache.org/dist/tomcat/tomcat-8/v${TOMCAT_VERSION}/bin/apache-tomcat-${TOMCAT_VERSION}.tar.gz -O /tmp/tomcat.tar.gz && \\\n    cd /tmp && \\\n    tar xvfz tomcat.tar.gz && \\\n    cp -R /tmp/apache-tomcat-${TOMCAT_VERSION}/* /usr/local/tomcat/ && \\\n    rm -r /tmp/tomcat.tar.gz /tmp/apache-tomcat-${TOMCAT_VERSION}\n\n# Configure ors config\nRUN cp /ors-core/openrouteservice/src/main/resources/ors-config-sample.json /ors-core/openrouteservice/src/main/resources/ors-config.json && \\\n    # Replace paths in ors-config.json to match docker setup\n    jq '.ors.services.routing.sources[0] = \"data/osm_file.pbf\"' /ors-core/openrouteservice/src/main/resources/ors-config.json |sponge /ors-core/openrouteservice/src/main/resources/ors-config.json && \\\n    jq '.ors.services.routing.profiles.default_params.elevation_cache_path = \"data/elevation_cache\"' /ors-core/openrouteservice/src/main/resources/ors-config.json |sponge /ors-core/openrouteservice/src/main/resources/ors-config.json && \\\n    jq '.ors.services.routing.profiles.default_params.graphs_root_path = \"data/graphs\"' /ors-core/openrouteservice/src/main/resources/ors-config.json |sponge /ors-core/openrouteservice/src/main/resources/ors-config.json && \\\n    # init_threads = 1, > 1 been reported some issues\n    jq '.ors.services.routing.init_threads = 1' /ors-core/openrouteservice/src/main/resources/ors-config.json |sponge /ors-core/openrouteservice/src/main/resources/ors-config.json && \\\n\n    # Delete all profiles but car\n    jq 'del(.ors.services.routing.profiles.active[1,2,3,4,5,6,7,8])' /ors-core/openrouteservice/src/main/resources/ors-config.json |sponge /ors-core/openrouteservice/src/main/resources/ors-config.json\n\n# Make all directories writable, to allow the usage of other uids via \"docker run -u\"\nRUN chmod -R go+rwX /ors-core /ors-conf /usr/local/tomcat /var/log/ors\n\n# Define volumes\nVOLUME [\"/ors-core/data/graphs\", \"/ors-core/data/elevation_cache\", \"/ors-conf\", \"/usr/local/tomcat/logs\", \"/var/log/ors\"]\n\n# Start the container\nEXPOSE 8080\nENTRYPOINT [\"/bin/bash\", \"/ors-core/docker-entrypoint.sh\"]\n"
}