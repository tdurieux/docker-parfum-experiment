{
  "startTime": 1674252602547,
  "endTime": 1674252603157,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# gunicorn-flask\n\n# requires this ubuntu version due to protobuf library update\nFROM ubuntu:18.04\nMAINTAINER Nils Nolde <nils@openrouteservice.org>\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y locales git python3-venv && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n# oes/flask variables\nENV OES_LOGLEVEL INFO\nENV FLASK_APP manage\nENV FLASK_ENV production\nENV APP_SETTINGS openelevationservice.server.config.ProductionConfig\n\n# tzdata is being annoying otherwise\nRUN /bin/bash -c \"DEBIAN_FRONTEND=noninteractive apt-get install -y tzdata\"\nRUN ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime\nRUN dpkg-reconfigure --frontend noninteractive tzdata\n\n# Needs postgis installation locally for raster2pgsql\nRUN apt-get install --no-install-recommends -y postgis && rm -rf /var/lib/apt/lists/*;\n\n# Setup flask application\nRUN mkdir -p /deploy/app\n\nCOPY gunicorn_config.py /deploy/gunicorn_config.py\nCOPY manage.py /deploy/app/manage.py\n\nCOPY requirements.txt /deploy/app/requirements.txt\n\nRUN python3 -m venv /oes_venv\n\nRUN /bin/bash -c \"source /oes_venv/bin/activate\"\n\nRUN /oes_venv/bin/pip3 install -r /deploy/app/requirements.txt\n\nCOPY openelevationservice /deploy/app/openelevationservice\nCOPY ops_settings_docker.yml /deploy/app/openelevationservice/server/ops_settings.yml\n\nWORKDIR /deploy/app\n\nEXPOSE 5000\n\n# Start gunicorn\nCMD [\"/oes_venv/bin/gunicorn\", \"--config\", \"/deploy/gunicorn_config.py\", \"manage:app\"]"
}