{
  "startTime": 1674249488520,
  "endTime": 1674249489787,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 12,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 12,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 12,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 12,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM    debian:buster\n\nENV     DEBIAN_FRONTEND noninteractive\nARG\tGITREPO=conversence/idealoom\nARG\tGITBRANCH=main\nARG DOCKER_RC=assembl/configs/docker.rc\nARG BUILDING_DOCKER=true\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n            apt-utils \\\n            apt-transport-https \\\n            ca-certificates \\\n            locales \\\n            python3 \\\n            python3-pip \\\n            python3-future \\\n            python3-virtualenv \\\n            python3-wheel \\\n            python3-setuptools \\\n            python3-nose \\\n            python3-venv \\\n            python3-psycopg2 \\\n            git \\\n            openssh-server \\\n            sudo \\\n            net-tools \\\n            nodejs \\\n            uwsgi \\\n            curl \\\n            fail2ban \\\n            uwsgi-plugin-python && \\\n            echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list && \\\n            curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n            apt-get update && \\\n            apt-get install --no-install-recommends -y yarn && \\\n            pip3 install --no-cache-dir Fabric3 && rm -rf /var/lib/apt/lists/*;\nRUN         useradd -m -U -G www-data idealoom_user && \\\n            ssh-keygen -P '' -f ~/.ssh/id_rsa && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys && \\\n            sudo -u idealoom_user -i sh -c \"cd && mkdir .ssh && ssh-keygen -P '' -f .ssh/id_rsa && cat .ssh/id_rsa.pub >> .ssh/authorized_keys\" && \\\n            cat ~/.ssh/id_rsa.pub >> ~idealoom_user/.ssh/authorized_keys\nWORKDIR /opt\nRUN     cd /opt ; set -x ; git clone -b $GITBRANCH https://github.com/$GITREPO.git ; chown -R idealoom_user:idealoom_user idealoom\nWORKDIR /opt/idealoom\nENV LC_ALL C.UTF-8\nENV LC_CTYPE C.UTF-8\nRUN     /etc/init.d/ssh start && \\\n           ssh-keyscan localhost && \\\n           touch empty.rc && \\\n           ssh -o StrictHostKeyChecking=no localhost uptime && \\\n           cat ~/.ssh/known_hosts >> ~idealoom_user/.ssh/known_hosts && \\\n           eval `ssh-agent` && \\\n           ssh-add ~/.ssh/id_rsa && \\\n           fab -f assembl/fabfile.py -c empty.rc install_assembl_server_deps && \\\n           rm -rf __pycache__ fabfile.pyc empty.rc && \\\n           /etc/init.d/ssh stop\nRUN     /etc/init.d/ssh start && \\\n           sudo -i -u idealoom_user sh -c 'eval `ssh-agent` ; ssh-add ~/.ssh/id_rsa ; cd /opt/idealoom ; fab -f assembl/fabfile.py -c assembl/configs/docker.rc build_virtualenv' && \\\n           /etc/init.d/ssh stop\nRUN     /etc/init.d/ssh start && \\\n           sudo -i -u idealoom_user sh -c 'eval `ssh-agent` ; ssh-add ~/.ssh/id_rsa ; cd /opt/idealoom ; fab -f assembl/fabfile.py -c assembl/configs/docker.rc app_update_dependencies' && \\\n           /etc/init.d/ssh stop\nRUN        /etc/init.d/ssh start && \\\n           sudo -i -u idealoom_user sh -c 'eval `ssh-agent` ; ssh-add ~/.ssh/id_rsa ; cd /opt/idealoom ; . venv/bin/activate ; fab -c assembl/configs/docker.rc app_compile_nodbupdate ; fab -c assembl/configs/docker.rc set_file_permissions' && \\\n           /etc/init.d/ssh stop\nCMD     /etc/init.d/ssh start && \\\n        sudo -i -u idealoom_user sh -c 'eval `ssh-agent` ; ssh-add ~/.ssh/id_rsa ; cd /opt/idealoom ; . venv/bin/activate ; fab -c assembl/configs/docker.rc docker_startup' && \\\n        tail -f /dev/null\n"
}