{
  "startTime": 1674252268618,
  "endTime": 1674252269099,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:9\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY ./server/package*.json ./server/\nCOPY ./web/package*.json ./web/\n\n# Install the dependencies\nWORKDIR /usr/src/app/server\nRUN npm install && npm cache clean --force;\nWORKDIR /usr/src/app/web\nRUN npm install && npm cache clean --force;\n\n# Production build for React\n# TODO: production build for Firebase\nWORKDIR /usr/src/app\nCOPY ./web ./web/\nRUN mv ./web/.env.production ./web/.env\n\nWORKDIR /usr/src/app/web\nRUN npm run build\n\n# Copy smart contracts, install truffle\nWORKDIR /usr/src/app\nRUN mkdir ethereum\nCOPY ./ethereum ./ethereum/\nRUN npm install -g truffle@5.0.11 --unsafe-perm && npm cache clean --force;\n\n# Copy the API code over\nWORKDIR /usr/src/app\nCOPY ./server ./server/\n\nEXPOSE 3000\nEXPOSE 3001\nEXPOSE 8080\n\nWORKDIR /usr/src/app\nCMD sleep 5; cd ./ethereum; truffle migrate --network production; cd ../server; npm start\n"
}