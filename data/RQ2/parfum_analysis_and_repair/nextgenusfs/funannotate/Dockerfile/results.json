{
  "startTime": 1674218005434,
  "endTime": 1674218006905,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# start with miniconda3 as build environment\nFROM continuumio/miniconda3 AS build\n\n# Update, install mamba and conda-pack:\nRUN conda update -n base -c defaults --yes conda && \\\n    conda install -c conda-forge -n base --yes mamba conda-pack\n\n# Install funannotate deps from bioconda\n# here specifying specific versions to be able to set ENV below\nRUN mamba create -c conda-forge -c bioconda -c defaults \\\n    -n funannotate --yes \"python>=3.6,<3.9\" biopython \\\n    \"trinity==2.8.5\" \"evidencemodeler==1.1.1\" \"pasa==2.4.1\" \"codingquarry==2.0\" \\\n    \"proteinortho==6.0.16\" goatools matplotlib-base natsort numpy pigz \\\n    pandas psutil requests scikit-learn scipy seaborn \"blast=2.2.31\" \\\n    tantan bedtools hmmer exonerate \"diamond>=2.0.5\" tbl2asn blat \"trnascan-se>=2.0\" \\\n    ucsc-pslcdnafilter trimmomatic raxml iqtree trimal \"mafft>=7\" hisat2 \\\n    \"kallisto==0.46.1\" minimap2 stringtie \"salmon>=0.9\" \"samtools>=1.9\" \\\n    glimmerhmm bamtools perl perl-yaml perl-file-which perl-local-lib perl-dbd-mysql perl-clone perl-hash-merge \\\n    perl-soap-lite perl-json perl-logger-simple perl-scalar-util-numeric perl-math-utils perl-mce \\\n    perl-text-soundex perl-parallel-forkmanager perl-db-file perl-perl4-corelibs ete3 distro \\\n    && conda clean -a -y\n\n# Since we want the most recent, install from repo, remove snap as broken\nSHELL [\"conda\", \"run\", \"-n\", \"funannotate\", \"/bin/bash\", \"-c\"]\nRUN python -m pip install git+https://github.com/nextgenusfs/funannotate.git\n\n# package with conda-pack\nRUN conda-pack -n funannotate -o /tmp/env.tar && \\\n    mkdir /venv && cd /venv && tar xf /tmp/env.tar && \\\n    rm /tmp/env.tar\n\n# We've put venv in same path it'll be in final image\nRUN /venv/bin/conda-unpack\n\n# Now build environment\nFROM debian:buster AS runtime\n\n# Copy /venv from the previous stage:\nCOPY --from=build /venv /venv\n\n# Install debian snap via apt-get\nRUN apt-get update && apt-get install --no-install-recommends -y snap augustus augustus-data locales locales-all libgl1 && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    ln -s /usr/bin/snap-hmm /usr/bin/snap && \\\n    rm \"/venv/bin/fasta\" && \\\n    ln -s \"/venv/bin/fasta36\" \"/venv/bin/fasta\"\n\n# add it to the PATH and add env variables\nENV PATH=\"/venv/bin:$PATH\" \\\n    AUGUSTUS_CONFIG_PATH=\"/usr/share/augustus/config\" \\\n    EVM_HOME=\"/venv/opt/evidencemodeler-1.1.1\" \\\n    PASAHOME=\"/venv/opt/pasa-2.4.1\" \\\n    TRINITYHOME=\"/venv/opt/trinity-2.8.5\" \\\n    QUARRY_PATH=\"/venv/opt/codingquarry-2.0/QuarryFiles\" \\\n    ZOE=\"/usr/share/snap\" \\\n    USER=\"me\" \\\n    FUNANNOTATE_DB=\"/opt/databases\"\n\n# When image is run, run the code with the environment\nSHELL [\"/bin/bash\", \"-c\"]\nCMD funannotate\n"
}