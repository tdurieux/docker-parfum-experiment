{
  "startTime": 1674254425447,
  "endTime": 1674254426363,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2022 Mycroft AI Inc.\n#\n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU Affero General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU Affero General Public License for more details.\n#\n# You should have received a copy of the GNU Affero General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n# -----------------------------------------------------------------------------\n# Dockerfile for Mimic 3 (https://github.com/MycroftAI/mimic3)\n#\n# Creates source code distributions for PyPI.\n#\n# Requires Docker buildx: https://docs.docker.com/buildx/working-with-buildx/\n# -----------------------------------------------------------------------------\nFROM debian:bullseye as build\nARG TARGETARCH\nARG TARGETVARIANT\n\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"Dir::Cache var/cache/apt/${TARGETARCH}${TARGETVARIANT};\" > /etc/apt/apt.conf.d/01cache\n\nRUN --mount=type=cache,id=apt-build,target=/var/cache/apt \\\n    mkdir -p /var/cache/apt/${TARGETARCH}${TARGETVARIANT}/archives/partial && \\\n    apt-get update && \\\n    apt-get install --yes --no-install-recommends \\\n        python3 python3-venv python3-pip && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build/mimic3\n\nCOPY wheels/ ./wheels/\n\nCOPY opentts_abc/ ./opentts_abc/\nCOPY mimic3_http/ ./mimic3_http/\nCOPY mimic3_tts/ ./mimic3_tts/\nCOPY LICENSE MANIFEST.in README.md setup.py requirements.txt ./\nCOPY build-dist.sh ./\n\n# Create sdists\nRUN ./build-dist.sh\n\n# -----------------------------------------------------------------------------\n\nFROM debian:bullseye as test\nARG TARGETARCH\nARG TARGETVARIANT\n\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"Dir::Cache var/cache/apt/${TARGETARCH}${TARGETVARIANT};\" > /etc/apt/apt.conf.d/01cache\n\nCOPY debian/control.in.* ./debian/\n\n# Use dependencies from Debian package control file\nRUN --mount=type=cache,id=apt-run,target=/var/cache/apt \\\n    mkdir -p /var/cache/apt/${TARGETARCH}${TARGETVARIANT}/archives/partial && \\\n    apt-get update && \\\n    grep 'Depends:' \"debian/control.in.${TARGETARCH}${TARGETVARIANT}\" | cut -d' ' -f2- | sed -e 's/,/\\n/g' | \\\n    xargs apt-get install --yes --no-install-recommends \\\n        python3 python3-venv python3-pip \\\n        build-essential python3-dev\n\nWORKDIR /test\n\nCOPY wheels/ ./wheels/\n\nCOPY --from=build /build/mimic3/dist/*.tar.gz ./dist/\n\n# Install mimic3 using source distribution\nRUN --mount=type=cache,id=pip-requirements,target=/root/.cache/pip \\\n    python3 -m venv .venv && \\\n    .venv/bin/pip3 install --upgrade pip && \\\n    .venv/bin/pip3 install --upgrade wheel setuptools && \\\n    .venv/bin/pip3 install \\\n        -f wheels/ \\\n        -f https://synesthesiam.github.io/prebuilt-apps/ \\\n        -f dist/ \\\n        mycroft-mimic3-tts\n\n# Download default voice\nCOPY voices/ /root/.local/share/mycroft/mimic3/voices/\nRUN .venv/bin/mimic3-download --debug 'en_UK/apope_low'\n\n# Run test\nCOPY tests/* tests/\n\n# Generate sample and check\nRUN export expected_sample=\"tests/apope_sample_${TARGETARCH}${TARGETVARIANT}.wav\" && \\\n    .venv/bin/mimic3 \\\n    --deterministic \\\n    --voice 'en_UK/apope_low' \\\n    < tests/apope_sample.txt \\\n    > tests/actual_sample.wav && \\\n    tests/samples_match.py tests/actual_sample.wav \"${expected_sample}\"\n\n# -----------------------------------------------------------------------------\n\nFROM scratch\nARG TARGETARCH\nARG TARGETVARIANT\n\nCOPY --from=build /build/mimic3/dist/*.tar.gz /\n\n# Ensure test runs\nCOPY --from=test /test/tests/actual_sample.wav \"/apope_sample_${TARGETARCH}${TARGETVARIANT}.wav\"\n"
}