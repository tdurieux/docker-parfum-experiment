diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/qbs/qbs/docker/focal/test-android-no-qt.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/qbs/qbs/docker/focal/test-android-no-qt.Dockerfile/repaired.Dockerfile
index e162204..bfb3e41 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/qbs/qbs/docker/focal/test-android-no-qt.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/qbs/qbs/docker/focal/test-android-no-qt.Dockerfile/repaired.Dockerfile
@@ -18,14 +18,14 @@ ENV TERM=xterm-color
 ARG USER_UID=1000
 ARG USER_NAME=devel
 RUN apt-get update -qq && \
-    apt-get install -qq -y \
+    apt-get install --no-install-recommends -qq -y \
         ca-certificates \
         gosu \
         sudo && \
     groupadd -g ${USER_UID} ${USER_NAME} && \
     useradd -s /bin/bash -u ${USER_UID} -g ${USER_NAME} -o -c "" -m ${USER_NAME} && \
     usermod -a -G sudo ${USER_NAME} && \
-    echo "%devel         ALL = (ALL) NOPASSWD: ALL" >> /etc/sudoers
+    echo "%devel         ALL = (ALL) NOPASSWD: ALL" >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;
 
 COPY docker/focal/entrypoint.sh /sbin/entrypoint.sh
 ENTRYPOINT ["/sbin/entrypoint.sh"]
@@ -39,7 +39,7 @@ RUN apt-get update -qq && \
         libglib2.0-0 \
         openjdk-8-jdk-headless \
         p7zip-full \
-        unzip
+        unzip && rm -rf /var/lib/apt/lists/*;
 
 ENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
 RUN echo "export JAVA_HOME=${JAVA_HOME}" > /etc/profile.d/android.sh && \
@@ -64,7 +64,7 @@ RUN mkdir ${ANDROID_HOME}
 
 # Get Android command line tools
 ARG COMMAND_LINE_TOOLS_VERSION="6858069"
-RUN curl -s https://dl.google.com/android/repository/commandlinetools-linux-${COMMAND_LINE_TOOLS_VERSION}_latest.zip > ${ANDROID_HOME}/commandlinetools.zip && \
+RUN curl -f -s https://dl.google.com/android/repository/commandlinetools-linux-${COMMAND_LINE_TOOLS_VERSION}_latest.zip > ${ANDROID_HOME}/commandlinetools.zip && \
     unzip ${ANDROID_HOME}/commandlinetools.zip -d ${ANDROID_HOME} && \
     rm -v ${ANDROID_HOME}/commandlinetools.zip
 
@@ -84,7 +84,7 @@ RUN /usr/lib/jvm/java-8-openjdk-amd64/bin/keytool -genkey -keystore /home/${USER
 
 # Install ndk samples in ${ANDROID_NDK_ROOT}/samples
 RUN cd ${ANDROID_NDK_ROOT} && \
-    curl -sLO https://github.com/android/ndk-samples/archive/master.zip && \
+    curl -f -sLO https://github.com/android/ndk-samples/archive/master.zip && \
     unzip -q master.zip && \
     rm -v master.zip && \
     mv ndk-samples-master samples
@@ -92,14 +92,14 @@ RUN cd ${ANDROID_NDK_ROOT} && \
 # Install android-BasicMediaDecoder in ${ANDROID_SDK_ROOT}/samples
 RUN mkdir ${ANDROID_SDK_ROOT}/samples && \
     cd ${ANDROID_SDK_ROOT}/samples && \
-    curl -sLO https://github.com/googlearchive/android-BasicMediaDecoder/archive/master.zip && \
+    curl -f -sLO https://github.com/googlearchive/android-BasicMediaDecoder/archive/master.zip && \
     unzip -q master.zip && \
     rm -v master.zip && \
     mv android-BasicMediaDecoder-master android-BasicMediaDecoder
 
 # Download buildtool to generate aab packages in ${ANDROID_SDK_ROOT}
 RUN cd ${ANDROID_SDK_ROOT} && \
-    curl -sLO https://github.com/google/bundletool/releases/download/1.3.0/bundletool-all-1.3.0.jar
+    curl -f -sLO https://github.com/google/bundletool/releases/download/1.3.0/bundletool-all-1.3.0.jar
 
 USER root