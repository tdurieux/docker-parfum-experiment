{
  "startTime": 1674249175667,
  "endTime": 1674249176449,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Install Qt and Qbs for Linux\n#\nFROM ubuntu:focal\nLABEL Description=\"Ubuntu development environment for Qbs with Qt and various dependencies for testing Qbs modules and functionality\"\nARG QT_VERSION\nARG QTCREATOR_VERSION\n\n# Allow colored output on command line.\nENV TERM=xterm-color\n\n#\n# Make it possible to change UID/GID in the entrypoint script. The docker\n# container usually runs as root user on Linux hosts. When the Docker container\n# mounts a folder on the host and creates files there, those files would be\n# owned by root instead of the current user. Thus we create a user here who's\n# UID will be changed in the entrypoint script to match the UID of the current\n# host user.\n#\nARG USER_UID=1000\nARG USER_NAME=devel\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -qq -y \\\n        ca-certificates \\\n        gosu \\\n        sudo && \\\n    groupadd -g ${USER_UID} ${USER_NAME} && \\\n    useradd -s /bin/bash -u ${USER_UID} -g ${USER_NAME} -o -c \"\" -m ${USER_NAME} && \\\n    usermod -a -G sudo ${USER_NAME} && \\\n    echo \"%devel         ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;\n\nCOPY docker/focal/entrypoint.sh /sbin/entrypoint.sh\nENTRYPOINT [\"/sbin/entrypoint.sh\"]\n\n# Qbs build dependencies\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=\"noninteractive\" apt-get install -qq -y --no-install-recommends \\\n        bison \\\n        build-essential \\\n        ca-certificates \\\n        capnproto \\\n        ccache \\\n        clang-8 \\\n        clang-tidy-8 \\\n        cmake \\\n        curl \\\n        flex \\\n        git \\\n        help2man \\\n        icoutils \\\n        libcapnp-dev \\\n        libdbus-1-3 \\\n        libfreetype6 \\\n        libfontconfig1 \\\n        libgl1-mesa-dev \\\n        libgl1-mesa-glx \\\n        libnanopb-dev \\\n        libprotobuf-dev \\\n        libgrpc++-dev \\\n        libxkbcommon-x11-0 \\\n        nanopb \\\n        ninja-build \\\n        nsis \\\n        pkg-config \\\n        protobuf-compiler \\\n        protobuf-compiler-grpc \\\n        psmisc \\\n        python3-pip \\\n        python3-setuptools \\\n        p7zip-full \\\n        subversion \\\n        unzip \\\n        zip && \\\n    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 100 && \\\n    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 100 && \\\n    update-alternatives --install /usr/bin/clang-check clang-check /usr/bin/clang-check-8 100 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3 100 && \\\n    pip install --no-cache-dir beautifulsoup4 lxml protobuf pyyaml && rm -rf /var/lib/apt/lists/*;\n\nENV LLVM_INSTALL_DIR=/usr/lib/llvm-8\n\n\n#\n# Install Qt and Qbs for Linux from qt.io\n#\nCOPY scripts/install-qt.sh install-qt.sh\n\nRUN ./install-qt.sh --version ${QT_VERSION} qtbase qtdeclarative qtscript qttools qtx11extras qtscxml qt5compat icu && \\\n    ./install-qt.sh --version ${QTCREATOR_VERSION} qtcreator && \\\n    echo \"export PATH=/opt/Qt/${QT_VERSION}/gcc_64/bin:/opt/Qt/Tools/QtCreator/bin:\\${PATH}\" > /etc/profile.d/qt.sh\n\nENV PATH=/opt/Qt/${QT_VERSION}/gcc_64/bin:/opt/Qt/Tools/QtCreator/bin:${PATH}\n\n\n# Configure Qbs\nUSER $USER_NAME\nRUN qbs-setup-toolchains /usr/bin/g++ gcc && \\\n    qbs-setup-toolchains /usr/bin/clang clang && \\\n    qbs-setup-qt /opt/Qt/${QT_VERSION}/gcc_64/bin/qmake qt-gcc_64 && \\\n    qbs config profiles.qt-gcc_64.baseProfile gcc && \\\n    qbs-setup-qt /opt/Qt/${QT_VERSION}/gcc_64/bin/qmake qt-clang_64 && \\\n    qbs config profiles.qt-clang_64.baseProfile clang && \\\n    qbs config defaultProfile qt-gcc_64\n\n# Switch back to root user for the entrypoint script.\nUSER root\n\n# Work-around for QTBUG-79020\nRUN echo \"export QT_NO_GLIB=1\" >> /etc/profile.d/qt.sh\n"
}