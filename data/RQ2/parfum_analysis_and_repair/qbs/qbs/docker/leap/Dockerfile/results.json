{
  "startTime": 1674218516864,
  "endTime": 1674218518259,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Install Qt and Qbs for Linux\n#\nFROM opensuse/leap:15.3\nLABEL Description=\"OpenSUSE development environment for Qbs with Qt and various dependencies for testing Qbs modules and functionality\"\nARG QT_VERSION\nARG QTCREATOR_VERSION\n\n# Allow colored output on command line.\nENV TERM=xterm-color\n\n#\n# Make it possible to change UID/GID in the entrypoint script. The docker\n# container usually runs as root user on Linux hosts. When the Docker container\n# mounts a folder on the host and creates files there, those files would be\n# owned by root instead of the current user. Thus we create a user here who's\n# UID will be changed in the entrypoint script to match the UID of the current\n# host user.\n#\nARG USER_UID=1000\nARG USER_NAME=devel\nRUN zypper in -y \\\n        ca-certificates \\\n        sudo \\\n        system-user-mail \\\n        system-group-wheel && \\\n    groupadd -g ${USER_UID} ${USER_NAME} && \\\n    useradd -s /bin/bash -u ${USER_UID} -g ${USER_NAME} -o -c \"\" -m ${USER_NAME} && \\\n    usermod -a -G wheel ${USER_NAME} && \\\n    echo \"%devel         ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nCOPY docker/leap/entrypoint.sh /sbin/entrypoint.sh\nENTRYPOINT [\"/sbin/entrypoint.sh\"]\n\n# # Qbs build dependencies\nRUN zypper install -y \\\n        bison \\\n        capnproto \\\n        ccache \\\n        cmake \\\n        command-not-found \\\n        curl \\\n        gcc10 \\\n        gcc10-c++ \\\n        glibc-devel-static \\\n        flex \\\n        fontconfig \\\n        git \\\n        gzip \\\n        help2man \\\n        icoutils \\\n        libcapnp-devel \\\n        libgthread-2_0-0 \\\n        libfreetype6 \\\n        Mesa-libGL-devel \\\n        Mesa-libGL1 \\\n        nanopb-devel \\\n        ninja \\\n        perl \\\n        pkg-config \\\n        psmisc \\\n        python3-pip \\\n        p7zip-full \\\n        subversion \\\n        tar \\\n        unzip \\\n        which \\\n        zip && \\\n    update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 && \\\n    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 100 && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir beautifulsoup4 lxml\n\n#\n# Install Qt and Qbs for Linux from qt.io\n#\nCOPY scripts/install-qt.sh install-qt.sh\n\nRUN ./install-qt.sh --version ${QT_VERSION} qtbase qtdeclarative qtscript qttools qtx11extras qtscxml qt5compat icu && \\\n    ./install-qt.sh --version ${QTCREATOR_VERSION} qtcreator && \\\n    echo \"export PATH=/opt/Qt/${QT_VERSION}/gcc_64/bin:/opt/Qt/Tools/QtCreator/bin:\\${PATH}\" > /etc/profile.d/qt.sh\n\nENV PATH=/opt/Qt/${QT_VERSION}/gcc_64/bin:/opt/Qt/Tools/QtCreator/bin:${PATH}\n\n# Configure Qbs\nUSER $USER_NAME\nRUN qbs-setup-toolchains /usr/bin/g++ gcc && \\\n    qbs-setup-qt /opt/Qt/${QT_VERSION}/gcc_64/bin/qmake qt-gcc_64 && \\\n    qbs config profiles.qt-gcc_64.baseProfile gcc && \\\n    qbs config defaultProfile qt-gcc_64\n\n# Switch back to root user for the entrypoint script.\nUSER root\n\n# Work-around for QTBUG-79020\nRUN echo \"export QT_NO_GLIB=1\" >> /etc/profile.d/qt.sh\n"
}