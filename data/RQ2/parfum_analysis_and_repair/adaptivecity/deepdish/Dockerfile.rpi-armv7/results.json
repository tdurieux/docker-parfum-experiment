{
  "startTime": 1674249901215,
  "endTime": 1674249902636,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 209
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 365
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 204
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 755
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 755
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 755
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 779
      }
    }
  ],
  "repairedDockerfile": "FROM balenalib/raspberrypi3-debian-python:3.7.9-build\n\nRUN [ \"cross-build-start\" ]\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"deb https://packages.cloud.google.com/apt coral-edgetpu-stable main\" > /etc/apt/sources.list.d/coral-edgetpu.list\nRUN echo \"deb https://packages.cloud.google.com/apt coral-cloud-stable main\" > /etc/apt/sources.list.d/coral-cloud.list\nRUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\nRUN apt-get update -y && apt-get upgrade -y\nRUN apt-get install --no-install-recommends -y --allow-downgrades \\\n            git vim less wget \\\n            python3-matplotlib python3-numpy python3-sklearn python3-opencv python3-h5py python3-pandas python3-scipy python3-uvloop \\\n            libmosquitto-dev \\\n            fonts-freefont-ttf \\\n            libatlas-base-dev \\\n            libfreetype6-dev \\\n            libjpeg-dev \\\n            zlib1g-dev \\\n            libpng-dev \\\n            libedgetpu-dev libedgetpu1-std && rm -rf /var/lib/apt/lists/*;\n\n# OpenCV deps\nRUN apt-get install --no-install-recommends -y libaom0 libatlas3-base libavcodec58 libavformat58 libavutil56 libbluray2 libcairo2 libchromaprint1 libcodec2-0.8.1 libcroco3 libdatrie1 libdrm2 libfontconfig1 libgdk-pixbuf2.0-0 libgfortran5 libgme0 libgraphite2-3 libgsm1 libharfbuzz0b libjbig0 libmp3lame0 libmpg123-0 libogg0 libopenjp2-7 libopenmpt0 libopus0 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0 libpixman-1-0 librsvg2-2 libshine3 libsnappy1v5 libsoxr0 libspeex1 libssh-gcrypt-4 libswresample3 libswscale5 libthai0 libtheora0 libtiff5 libtwolame0 libva-drm2 libva-x11-2 libva2 libvdpau1 libvorbis0a libvorbisenc2 libvorbisfile3 libvpx5 libwavpack1 libwebp6 libwebpmux3 libx264-155 libx265-165 libxcb-render0 libxcb-shm0 libxfixes3 libxrender1 libxvidcore4 libzvbi0 && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir --upgrade pip wheel setuptools\n\n# Hold numpy at 1.19.2 to support various binary packages\nRUN pip3 install --no-cache-dir --index-url https://www.piwheels.org/simple --only-binary=:all: opencv-python-headless==4.5.1.48 numpy==1.19.2\n\nWORKDIR /tmp\n#RUN wget https://raw.githubusercontent.com/PINTO0309/TensorflowLite-bin/main/2.7.0/download_tflite_runtime-2.7.0-cp37-none-linux_armv7l.whl.sh\n#RUN bash download_tflite_runtime-2.7.0-cp37-none-linux_armv7l.whl.sh\n#RUN pip3 install --only-binary=:all: tflite_runtime-2.7.0-cp37-none-linux_armv7l.whl\nRUN curl -f -OL https://github.com/PINTO0309/TensorflowLite-bin/releases/download/v2.9.0-rc0/tflite_runtime-2.9.0rc0-cp37-none-linux_armv7l.whl\nRUN pip3 install --no-cache-dir --only-binary=:all: tflite_runtime-2.9.0rc0-cp37-none-linux_armv7l.whl\n\n\n# RUN pip3 install --index-url https://www.piwheels.org/simple -U -i https://www.piwheels.org/simple opencv-python keras pandas==1.1.5 matplotlib cycler uvloop==0.14.0 numpy quart gmqtt cameratransform pillow pytz python-dateutil  # --platform linux/arm/v7  --only-binary=:all:\nRUN pip3 install --no-cache-dir --index-url https://www.piwheels.org/simple --only-binary=:all: -U keras==2.3.1 pandas==1.1.5 matplotlib cycler uvloop==0.14.0 quart hypercorn gmqtt cameratransform pillow pytz python-dateutil\n\nRUN pip3 install --no-cache-dir --extra-index-url https://www.piwheels.org/simple https://files.pythonhosted.org/packages/74/7e/622d9849abf3afb81e482ffc170758742e392ee129ce1540611199a59237/tensorflow_estimator-2.4.0-py2.py3-none-any.whl https://files.pythonhosted.org/packages/02/83/179c8f76e5716030cc3ee9433721161cfcc1d854e9ba20c9205180bb100a/tensorboard-2.4.0-py3-none-any.whl\nRUN pip3 install --no-cache-dir --extra-index-url https://www.piwheels.org/simple --only-binary=:all: https://github.com/bitsy-ai/tensorflow-arm-bin/releases/download/v2.4.0/tensorflow-2.4.0-cp37-none-linux_armv7l.whl\n\n# RUN pip3 install https://github.com/google-coral/pycoral/releases/download/release-frogfish/tflite_runtime-2.5.0-cp37-cp37m-linux_armv7l.whl \\\n#                  https://github.com/google-coral/pycoral/releases/download/v1.0.1/pycoral-1.0.1-cp37-cp37m-linux_armv7l.whl\n\nRUN pip3 install --no-cache-dir tflite_support psutil\n\n\nUSER root\n\nRUN mkdir -p /deepdish/detectors/yolo\nRUN wget -O /deepdish/detectors/yolo/yolo.h5 https://github.com/OlafenwaMoses/ImageAI/releases/download/1.0/yolo.h5\n\nARG USER_ID\nARG GROUP_ID\n\nRUN addgroup --gid $GROUP_ID user\nRUN adduser --disabled-password --gecos '' --uid $USER_ID --gid 0 user\nRUN adduser user plugdev\nRUN adduser user video\n\nRUN mkdir -p /work\nRUN chown -R user:user /work # /yolo\n\n# Allow password-less 'root' login with 'su'\nRUN passwd -d root\nRUN sed -i 's/nullok_secure/nullok/' /etc/pam.d/common-auth\n\nRUN echo '#!/bin/bash\\nPYTHONPATH=/deepdish:$PYTHONPATH DEEPDISHHOME=/deepdish python3 /deepdish/deepdish.py $@' > /usr/bin/deepdish.sh\nCOPY yolov5-demo.sh /usr/bin\n\nRUN chmod +x /usr/bin/deepdish.sh /usr/bin/yolov5-demo.sh\n\nCOPY *.py /deepdish/\nCOPY detectors/mobilenet/* /deepdish/detectors/mobilenet/\nCOPY detectors/efficientdet_lite0/* /deepdish/detectors/efficientdet_lite0/\nCOPY detectors/yolov5/* /deepdish/detectors/yolov5/\nCOPY encoders/* /deepdish/encoders/\nCOPY tools/*.py /deepdish/tools/\nCOPY deep_sort/*.py /deepdish/deep_sort/\nCOPY deepdish/*.py /deepdish/deepdish/\nCOPY bicycle_test1.mp4 /deepdish\n\nRUN [ \"cross-build-end\" ]\n\nUSER user\n\nWORKDIR /work\n\nCMD /bin/bash\n\n"
}