{
  "startTime": 1674219312028,
  "endTime": 1674219312969,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 32,
        "columnEnd": 48
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 21,
        "columnEnd": 37
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 51,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-buster-slim as BUILD\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    cmake \\\n    libffi-dev \\\n    libgstreamer1.0-dev \\\n    libgstreamer-plugins-base1.0-dev \\\n    gstreamer1.0-plugins-good \\\n    gstreamer1.0-plugins-ugly \\\n    libosmesa6 \\\n    libegl1-mesa \\\n    libgbm1 \\\n    libwayland-egl1-mesa \\\n    libwayland-server0 \\\n    xwayland \\\n    xauth \\\n    xxd \\\n    && apt-get autoremove -y \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nWORKDIR /app\n\nCOPY [\"package.json\", \"yarn.lock\", \"./\"]\nRUN yarn global add cmake-js && yarn cache clean;\nRUN yarn install && yarn cache clean;\n\nCOPY . .\nRUN yarn generate && yarn cache clean;\nRUN yarn build && yarn cache clean;\n\nFROM node:16-buster-slim\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    libffi6 \\\n    gstreamer1.0-plugins-base \\\n    gstreamer1.0-plugins-good \\\n    gstreamer1.0-plugins-ugly \\\n    gstreamer1.0-gl \\\n    libosmesa6 \\\n    libegl1-mesa \\\n    libgbm1 \\\n    libwayland-egl1-mesa \\\n    xwayland \\\n    xauth \\\n    xxd \\\n    inotify-tools \\\n    && apt-get autoremove -y \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nWORKDIR /app\nCOPY --from=BUILD /app/package.json .\nCOPY --from=BUILD /app/yarn.lock .\nCOPY --from=BUILD /app/dist .\nCOPY --from=BUILD /app/docker-entrypoint.sh .\nRUN yarn install --production --ignore-optional && yarn cache clean;\nCOPY --from=BUILD /app/node_modules/westfield-proxy /app/node_modules/westfield-proxy\nCOPY --from=BUILD /app/node_modules/epoll /app/node_modules/epoll\nCOPY --from=BUILD /app/node_modules/bindings /app/node_modules/bindings\nCOPY --from=BUILD /app/node_modules/file-uri-to-path /app/node_modules/file-uri-to-path\n\nENV NODE_ENV=production\nWORKDIR /home/node\n\nRUN usermod -a -G video node\nRUN mkdir -p /var/run/compositor-proxy && chown 1000:1000 /var/run/compositor-proxy && touch /var/run/compositor-proxy/starting\nCOPY wait-until-ready.sh /app\nCMD [\"setpriv\", \"--reuid=1000\", \"--regid=1000\", \"--init-groups\", \"sh\", \"/app/docker-entrypoint.sh\"]\n"
}