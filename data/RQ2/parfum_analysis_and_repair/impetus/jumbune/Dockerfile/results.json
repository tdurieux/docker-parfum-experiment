{
  "startTime": 1674217543700,
  "endTime": 1674217545178,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "#\n# Dockerfile - Jumbune\n#\nFROM     ubuntu:16.04\nMAINTAINER Jumbune-Dev <dev@collaborate.jumbune.org>\nRUN echo \"nameserver 8.8.8.8\" | tee /etc/resolv.conf > /dev/null\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Upgradation and installation of required packages.\nRUN apt-get update && apt-get install --no-install-recommends -y curl supervisor openssh-server net-tools iputils-ping nano zip maven git && rm -rf /var/lib/apt/lists/*;\n\n# Installing JDK and adding JAVA HOME\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:openjdk-r/ppa\nRUN apt-get update\nRUN apt-get install --no-install-recommends --fix-missing -y -f openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n#RUN update-java-alternatives -s java-1.7.0-openjdk-amd64\n#ENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64\n\n\n\n\n# Setup JAVA_HOME, this is useful for docker commandline\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\nRUN export JAVA_HOME\n\n\n\nRUN echo \"export JAVA_HOME=$JAVA_HOME\" >> /etc/profile\nRUN echo export PATH=\"$PATH:$JAVA_HOME/bin\" >> /etc/profile\nRUN echo $JAVA_HOME\n#Fetch Apache Hadoop and untar\nENV SRC_DIR /opt\nENV HADOOP_URL https://archive.apache.org/dist/hadoop/core/\nENV HADOOP_VERSION hadoop-2.7.1\nRUN cd $SRC_DIR &&  wget --no-check-certificate \"$HADOOP_URL/$HADOOP_VERSION/$HADOOP_VERSION.tar.gz\" \\\n && tar xzf $HADOOP_VERSION.tar.gz ; rm -f $HADOOP_VERSION.tar.gz\n# Adding the required env variables to /etc/profile\nENV HADOOP_PREFIX $SRC_DIR/$HADOOP_VERSION\nENV HADOOP_HOME $HADOOP_PREFIX\nENV PATH $PATH:$HADOOP_PREFIX/bin:$HADOOP_PREFIX/sbin\nENV HADOOP_MAPRED_HOME $HADOOP_PREFIX\nENV HADOOP_COMMON_HOME $HADOOP_PREFIX\nENV HADOOP_HDFS_HOME $HADOOP_PREFIX\nENV YARN_HOME $HADOOP_PREFIX\nRUN echo '# Hadoop' >> /etc/profile \\\n && echo \"export HADOOP_PREFIX=$HADOOP_PREFIX\" >> /etc/profile \\\n && echo 'export HADOOP_HOME=$HADOOP_PREFIX' >> /etc/profile \\\n && echo 'export PATH=$PATH:$HADOOP_PREFIX/bin:$HADOOP_PREFIX/sbin' >> /etc/profile \\\n && echo 'export HADOOP_MAPRED_HOME=$HADOOP_PREFIX' >> /etc/profile \\\n && echo 'export HADOOP_COMMON_HOME=$HADOOP_PREFIX' >> /etc/profile \\\n && echo 'export HADOOP_HDFS_HOME=$HADOOP_PREFIX' >> /etc/profile \\\n && echo 'export YARN_HOME=$HADOOP_PREFIX' >> /etc/profile\n\n# Adding Hadoop configurations\nADD docker-conf/core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml\nADD docker-conf/hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\nADD docker-conf/yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\nADD docker-conf/mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\n\n#House keeping\nRUN rm /opt/$HADOOP_VERSION/bin/hadoop.cmd\n\n# Adding JAVA_HOME to hadoop-env.sh and exposing JMX ports for monitoring\nRUN sed -i '/^export JAVA_HOME/ s:.*:export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64/:' $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN echo 'export HADOOP_NAMENODE_OPTS=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=5677\"' >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN echo 'export HADOOP_DATANODE_OPTS=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=5679\"' >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nRUN echo 'export YARN_NODEMANAGER_OPTS=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=5678\"' >> $HADOOP_PREFIX/etc/hadoop/yarn-env.sh\nRUN echo 'export YARN_RESOURCEMANAGER_OPTS=\"-Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.port=5680\"'>> $HADOOP_PREFIX/etc/hadoop/yarn-env.sh\n\n# Native\n# https://gist.github.com/ruo91/7154697#comment-936487\nRUN echo 'export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_PREFIX/lib/native' >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && echo 'export HADOOP_OPTS=-Djava.library.path=$HADOOP_PREFIX/lib' >> $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh \\\n && echo 'export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_PREFIX/lib/native' >> $HADOOP_PREFIX/etc/hadoop/yarn-env.sh \\\n && echo 'export HADOOP_OPTS=-Djava.library.path=$HADOOP_PREFIX/lib' >> $HADOOP_PREFIX/etc/hadoop/yarn-env.sh\n\n# SSH keygen\nRUN cd /root && ssh-keygen -t dsa -P '' -f \"/root/.ssh/id_dsa\" \\\n && cat /root/.ssh/id_dsa.pub >> /root/.ssh/authorized_keys && chmod 644 /root/.ssh/authorized_keys\nRUN java -version\n# Name node foramt\nRUN $HADOOP_PREFIX/bin/hdfs namenode -format\n\n# Supervisor\nRUN mkdir -p /var/log/supervisor\nADD docker-conf/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# SSH\nRUN mkdir /var/run/sshd\nRUN sed -i 's/without-password/yes/g' /etc/ssh/sshd_config\nRUN sed -i 's/UsePAM yes/UsePAM no/g' /etc/ssh/sshd_config\nRUN sed -i 's/prohibit-password/yes/' /etc/ssh/sshd_config\nRUN echo 'SSHD: ALL' >> /etc/hosts.allow\nRUN echo \"NoHostAuthenticationForLocalhost yes\" >>~/.ssh/config\nRUN echo \"StrictHostKeyChecking no\" >>~/.ssh/config\n\n#Adding the Jumbune specific ENV variables to /etc/profile\nENV JUMBUNE_HOME /root/jumbune\nENV AGENT_HOME /root/agent\nRUN mkdir $JUMBUNE_HOME\nRUN mkdir $AGENT_HOME\nRUN echo '#jumbune' >> /etc/profile \\\n && echo \"export JUMBUNE_HOME=$JUMBUNE_HOME\" >> /etc/profile \\\n && echo \"export AGENT_HOME=$AGENT_HOME\" >> /etc/profile\n#########################################################\n#\t\t\t\t\t\t\t#\n# Fetching latest Jumbune release (stable) build\t#\n#\t\t\t\t\t\t\t#\n#########################################################\n###\n# UnComment below lines (if you wish to fetch latest Jumbune release rather than building from latest snapshot codebase)\n###\n#ENV JUMBUNE_VERSION 1.6\n#RUN mkdir -p /jumbune_code/distribution/target/ \\\n# && wget -O /jumbune_code/distribution/target/jumbune-dist-$JUMBUNE_VERSION-bin.jar  http://www.jumbune.org/jar/current/yarn/jumbune-dist-$JUMBUNE_VERSION-bin.jar\n###\n# Uncomment Above lines  (if you wish to fetch latest Jumbune release rather than building from latest snapshot codebase)\n###\n#########################################################\n#                                                       #\n# Fetching latest Jumbune SNAPSHOT codebase             #\n#                                                       #\n#########################################################\n###\n# UnComment below lines (if you wish to build from the latest snapshot codebase and not the latest Jumbune release)\n###\nRUN git clone https://github.com/Impetus/jumbune.git jumbune_code/ -b master \\\n && cd jumbune_code/ \\\n && export MAVEN_OPTS=\"-Xmx512m -XX:MaxPermSize=350m\" \\\n && mvn -Dhttps.protocols=TLSv1.2 install -P yarn\n###\n# Uncomment Above lines (if you wish to build from the latest snapshot codebase and not the latest Jumbune release)\n###\nADD docker-conf/deploynRun.sh /root/deploynRun.sh\nADD docker-conf/sampleJson.json /root/sampleJson.json\nRUN chmod +x /root/deploynRun.sh\nADD docker-conf/cluster-configuration.properties /root/agent/cluster-configuration.properties\n\n#Setting the username and password\nRUN echo 'root:hadoop' |chpasswd\nEXPOSE 22 9080 50070 8088\nRUN /usr/sbin/sshd\n\n# Daemon\nCMD [\"/usr/bin/supervisord\"]\n"
}