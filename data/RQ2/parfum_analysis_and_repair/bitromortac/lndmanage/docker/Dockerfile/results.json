{
  "startTime": 1674252274498,
  "endTime": 1674252275479,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# for optimized python builds\n# we follow solution #2 described in https://pythonspeed.com/articles/multi-stage-docker-python/\n\nFROM python:3.10-slim as builder\n\nRUN python -m venv /root/.venv\n\nENV PATH=\"/root/.venv/bin:$PATH\"\n\nARG LNDMANAGE_HOST_SRC_PATH=.\n\nCOPY \"$LNDMANAGE_HOST_SRC_PATH/requirements.txt\" .\nCOPY \"$LNDMANAGE_HOST_SRC_PATH/pyproject.toml\" .\nCOPY \"$LNDMANAGE_HOST_SRC_PATH/setup.py\" .\nCOPY \"$LNDMANAGE_HOST_SRC_PATH/lndmanage/__init__.py\" ./lndmanage/\n\nRUN pip install --no-cache-dir .\n\n# ---------------------------------------------------------------------------------------------------------------------------\n\nFROM python:3.10-slim as final\n\nARG LNDMANAGE_EXTRA_PACKAGES\nRUN ([ ! -z $LNDMANAGE_EXTRA_PACKAGES ] && \\\n\tapt-get update && \\\n\tapt-get install -y --no-install-recommends ${LNDMANAGE_EXTRA_PACKAGES} && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*) || true\n\n# this is for better handling docker-compose signals\nARG TINI_VERSION=v0.19.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\n# copy python environment from builder\nCOPY --from=builder /root/.venv /root/.venv\n\nENV PATH=\"/root/.venv/bin:$PATH:/root\"\nENV TLS_CERT_FILE /root/aux/tls.cert\nENV ADMIN_MACAROON_FILE /root/aux/admin.macaroon\n\n# copy sources under /root/lndmanage\nWORKDIR /root/lndmanage\nARG LNDMANAGE_HOST_SRC_PATH=.\nCOPY \"$LNDMANAGE_HOST_SRC_PATH\" .\n\nWORKDIR /root\nCOPY \"$LNDMANAGE_HOST_SRC_PATH/docker/home\" .\n"
}