diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hathornetwork/hathor-core/Dockerfile.pypy b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hathornetwork/hathor-core/Dockerfile.pypy/repaired.Dockerfile
index 4f04e03..084c9d4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hathornetwork/hathor-core/Dockerfile.pypy
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hathornetwork/hathor-core/Dockerfile.pypy/repaired.Dockerfile
@@ -8,9 +8,9 @@ FROM pypy:$PYTHON-slim-$DEBIAN as stage-0
 ARG PYTHON
 # install runtime first deps to speedup the dev deps and because layers will be reused on stage-1
 RUN apt-get -qy update && apt-get -qy upgrade
-RUN apt-get -qy install libssl1.1 graphviz librocksdb6.11
+RUN apt-get -qy --no-install-recommends install libssl1.1 graphviz librocksdb6.11 && rm -rf /var/lib/apt/lists/*;
 # dev deps for this build start here
-RUN apt-get -qy install libssl-dev libffi-dev build-essential zlib1g-dev libbz2-dev libsnappy-dev liblz4-dev librocksdb-dev cargo git pkg-config
+RUN apt-get -qy --no-install-recommends install libssl-dev libffi-dev build-essential zlib1g-dev libbz2-dev libsnappy-dev liblz4-dev librocksdb-dev cargo git pkg-config && rm -rf /var/lib/apt/lists/*;
 # install all deps in a virtualenv so we can just copy it over to the final image
 RUN pip --no-input --no-cache-dir install --upgrade pip wheel poetry
 ENV POETRY_VIRTUALENVS_IN_PROJECT=true
@@ -27,7 +27,7 @@ RUN poetry run pip install dist/hathor-*.whl
 FROM pypy:$PYTHON-slim-$DEBIAN
 ARG PYTHON
 RUN apt-get -qy update && apt-get -qy upgrade
-RUN apt-get -qy install libssl1.1 graphviz librocksdb6.11
+RUN apt-get -qy --no-install-recommends install libssl1.1 graphviz librocksdb6.11 && rm -rf /var/lib/apt/lists/*;
 COPY --from=stage-0 /app/.venv/lib/pypy${PYTHON}/site-packages/ /opt/pypy/lib/pypy${PYTHON}/site-packages/
 EXPOSE 40403 8080
 ENTRYPOINT ["pypy", "-m", "hathor"]