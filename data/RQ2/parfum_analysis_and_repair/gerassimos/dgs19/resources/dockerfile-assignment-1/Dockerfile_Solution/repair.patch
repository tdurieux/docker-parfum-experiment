diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gerassimos/dgs19/resources/dockerfile-assignment-1/Dockerfile_Solution b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gerassimos/dgs19/resources/dockerfile-assignment-1/Dockerfile_Solution/repaired.Dockerfile
index 341ec88..53d9d06 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gerassimos/dgs19/resources/dockerfile-assignment-1/Dockerfile_Solution
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gerassimos/dgs19/resources/dockerfile-assignment-1/Dockerfile_Solution/repaired.Dockerfile
@@ -13,9 +13,9 @@
 # push to Docker Hub, then go to https://hub.docker.com and verify
 # then remove local image from cache
 # then start a new container from your Hub image, and watch how it auto downloads and runs
-# test again that it works 
+# test again that it works
 # access again the web application from your browser at http://<docker-host-ip>
-# in the end you should be using FROM, RUN, WORKDIR, COPY, EXPOSE, and CMD instructions 
+# in the end you should be using FROM, RUN, WORKDIR, COPY, EXPOSE, and CMD instructions
 
 # Instructions from the app developer
 # - you should use the 'node' official image, with the alpine 6.x branch
@@ -24,9 +24,9 @@ FROM node:6-alpine
 #  so it will respond to http://<Docker-Host-IP>:80 on your computer
 EXPOSE 3000
 # - then it should use alpine package manager to install tini: 'apk add --update tini'
-RUN apk add --update tini
+RUN apk add --no-cache --update tini
 # - then it should create directory /usr/src/app for app files with 'mkdir -p /usr/src/app'
-RUN mkdir -p /usr/src/app
+RUN mkdir -p /usr/src/app && rm -rf /usr/src/app
 # - Node uses a "package manager", so it needs to copy in package.json file
 WORKDIR /usr/src/app
 COPY package.json package.json