{
  "startTime": 1674253821321,
  "endTime": 1674253822586,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 5,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 115
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 8,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG USER_ID\nARG USER_NAME\nARG GROUP_ID\nARG GROUP_NAME\nARG THREAD_COUNT=1\n\nARG DEBIAN_FRONTEND=noninteractive\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nWORKDIR /root\n\nRUN groupadd -g ${GROUP_ID} ${GROUP_NAME}\nRUN useradd -ms /bin/bash -u ${USER_ID} -g ${GROUP_NAME} ${USER_NAME}\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    wget \\\n    ca-certificates \\\n    git \\\n    build-essential \\\n    cmake \\\n    ccache \\\n    libunwind-dev \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN BOOST_VERSION=1.71.0 ;\\\n    BOOSTDIR=boost_${BOOST_VERSION//[.]/_} ;\\\n    wget https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/${BOOSTDIR}.tar.bz2 -O ${BOOSTDIR}.tar.bz2 \\\n && tar xf ${BOOSTDIR}.tar.bz2 \\\n && rm ${BOOSTDIR}.tar.bz2 \\\n && (cd ${BOOSTDIR} \\\n     && ./bootstrap.sh \\\n     && ./b2 \\\n          --prefix=/opt/boost \\\n          --with-filesystem \\\n          --with-thread \\\n          --with-program_options \\\n          -j${THREAD_COUNT} \\\n          install) \\\n && rm -rf ${BOOSTDIR}\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n    libgraphicsmagick1-dev \\\n    libpango1.0-dev \\\n    libmariadbclient-dev \\\n    mariadb-client-core-10.3 \\\n    libpq-dev \\\n    libsqlite3-dev \\\n    zlib1g-dev \\\n    libpng-dev \\\n    libssl-dev \\\n    libfcgi-dev \\\n    qtbase5-dev \\\n    curl \\\n    ca-certificates \\\n    gnupg \\\n    unzip \\\n    autoconf \\\n    libtool-bin \\\n && ( curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -) \\\n && ( curl -f https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list) \\\n && apt-get update \\\n && ACCEPT_EULA=Y apt-get install --no-install-recommends -y msodbcsql17 \\\n && wget https://github.com/libharu/libharu/archive/RELEASE_2_3_0.zip -O haru.zip \\\n && unzip haru.zip \\\n && ( cd libharu-RELEASE_2_3_0 \\\n     && ./buildconf.sh --force \\\n     && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/haru \\\n     && make -j${THREAD_COUNT} \\\n     && make install) \\\n && rm -rf libharu-RELEASE_2_3_0 \\\n && rm haru.zip \\\n && apt-get -y remove unzip autoconf libtool-bin curl gnupg \\\n && apt-get -y autoremove \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n    unixodbc-dev \\\n && rm -rf /var/lib/apt/lists/*\n"
}