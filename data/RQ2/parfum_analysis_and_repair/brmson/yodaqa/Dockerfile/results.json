{
  "startTime": 1674249324085,
  "endTime": 1674249325159,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Inherit official Java image, see https://hub.docker.com/_/java/\nFROM java:8\n\n# Update and install dependencies [cmp. https://docs.docker.com/engine/articles/dockerfile_best-practices/]\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    gradle \\\n    libgfortran3 && rm -rf /var/lib/apt/lists/*;\n\n# JAVA_HOME is not set by default\nENV JAVA_HOME /usr/lib/jvm/java-1.8.0-openjdk-amd64/\n\n# Same as \"export TERM=dumb\"; prevents error \"Could not open terminal for stdout: $TERM not set\"\nENV TERM dumb\n\n# Copy source code into image\nADD . /yodaqa\n# Alternative: Only take this Dockerfile and obtain Yoda source by cloning the official Git repository\n# RUN git clone https://github.com/brmson/yodaqa.git\n\n# Define working directory\nWORKDIR /yodaqa\n\n# Run YodaQA preparation steps\nRUN ./gradlew check\nRUN echo | ./gradlew run\n\n# Expose port for web interface\n# NOTE: \"./gradlew web -q\" only works after https://github.com/brmson/yodaqa/issues/15 is solved in the container\n#       If the container is not commited to the image afterwards, launching a new instance will fail again\n#       Commit syntax: \"docker commit -m \"<message>\" -a \"<author>\" <container_id> <image_name>:<tag_name>\"\n#                      (find container_id and image_name with \"docker ps -a\", tag_name is optional)\nEXPOSE 4567\n\n# Can be built with: \"docker build -t <image_name> .\"\n# Can be run with: \"docker run -it --entrypoint=\"./gradlew\" <image_name> run -q\"\n# NOTE: For web interface you need to specify port in Docker command with parameter \"-p 4567:4567\"\n\n# BEWARE: Due to https://github.com/brmson/yodaqa/issues/15 it is necessary to use \"docker run -it --entrypoint=\"/bin/bash\" -p 4567:4567 <image_name>\", in bash \"./gradlew run -q\" and then to follow the advice in the bug report to ask a question repeatedly until the exception disappears for now (known bug in YodaQA 1.4)\n\n# You can define a default command with CMD here, cmp. http://docs.docker.com/engine/reference/builder/#cmd\n# After building you can inherit the image with \"FROM <image_name>\"\n\n# To enter container:\n# 1) \"docker run -v /usr/local/bin:/target jpetazzo/nsenter\" and \"PID=$(docker inspect --format {{.State.Pid}} <container_id>)\" and \"nsenter --target $PID --mount --uts --ipc --net --pid\"\n# or\n# 2) \"docker run -it --entrypoint=\"/bin/bash\" -p 4567:4567 <image_name>\" (can also be used in exec)\n\n# Use \"docker rm $(docker ps -a -q)\" to remove all containers\n"
}