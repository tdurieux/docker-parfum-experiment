{
  "startTime": 1674251267904,
  "endTime": 1674251268690,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 173
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 72,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.18 as builder\n\nWORKDIR /vcluster-dev\nARG TARGETOS\nARG TARGETARCH\n\n# Install kubectl for development\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl\n\n# Install helm binary\nRUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh\n\n# Install Delve for debugging\nRUN if [ \"${TARGETARCH}\" = \"amd64\" ]; then go install github.com/go-delve/delve/cmd/dlv@latest; fi\n\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\nCOPY vendor/ vendor/\n\n# Copy the go source\nCOPY cmd/vcluster cmd/vcluster\nCOPY cmd/vclusterctl cmd/vclusterctl\nCOPY pkg/ pkg/\n\n# Symlink /manifests folder to the synced location for development purposes\nRUN ln -s \"$(pwd)/manifests\" /manifests\n\nENV GO111MODULE on\nENV DEBUG true\n\n# create and set GOCACHE now, this should slightly speed up the first build inside of the container\n# also create /.config folder for GOENV, as dlv needs to write there when starting debugging\nRUN mkdir -p /.cache /.config\nENV GOCACHE=/.cache\nENV GOENV=/.config\n\n# Set home to \"/\" in order to for kubectl to automatically pick up vcluster kube config\nENV HOME /\n\n# Build cmd\nRUN CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} GO111MODULE=on go build -mod vendor -o /vcluster cmd/vcluster/main.go\n\n# RUN useradd -u 12345 nonroot\n# USER nonroot\n\nENTRYPOINT [\"go\", \"run\", \"-mod\", \"vendor\", \"cmd/vcluster/main.go\"]\n\n# we use alpine for easier debugging\nFROM alpine:3.15.4\n\n# Set root path as working directory\nWORKDIR /\n\nCOPY --from=builder /vcluster .\nCOPY --from=builder /usr/local/bin/helm /usr/local/bin/helm\nCOPY manifests/ /manifests/\n\n# RUN useradd -u 12345 nonroot\n# USER nonroot\n\nENTRYPOINT [\"/vcluster\", \"start\"]\n"
}