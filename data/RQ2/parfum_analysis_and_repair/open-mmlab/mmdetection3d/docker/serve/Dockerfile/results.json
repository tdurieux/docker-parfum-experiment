{
  "startTime": 1674248248098,
  "endTime": 1674248249527,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTORCH=\"1.6.0\"\nARG CUDA=\"10.1\"\nARG CUDNN=\"7\"\nFROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-devel\n\nARG MMCV=\"1.3.8\"\nARG MMSEGMENTATION=\"0.14.1\"\nARG MMDET=\"2.14.0\"\nARG MMDET3D=\"0.17.1\"\n\nENV PYTHONUNBUFFERED TRUE\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n    ca-certificates \\\n    g++ \\\n    openjdk-11-jre-headless \\\n    # MMDet3D Requirements\n    ffmpeg libsm6 libxext6 git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV PATH=\"/opt/conda/bin:$PATH\"\nRUN export FORCE_CUDA=1\n\n# TORCHSEVER\nRUN pip install --no-cache-dir torchserve torch-model-archiver\n\n# MMLAB\nARG PYTORCH\nARG CUDA\nRUN [\"/bin/bash\", \"-c\", \"pip install mmcv-full==${MMCV} -f https://download.openmmlab.com/mmcv/dist/cu${CUDA//./}/torch${PYTORCH}/index.html\"]\nRUN pip install --no-cache-dir mmdet==${MMDET}\nRUN pip install --no-cache-dir mmsegmentation==${MMSEGMENTATION}\nRUN pip install --no-cache-dir mmdet3d==${MMDET3D}\n\n\nRUN useradd -m model-server \\\n    && mkdir -p /home/model-server/tmp\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\nRUN chmod +x /usr/local/bin/entrypoint.sh \\\n    && chown -R model-server /home/model-server\n\nCOPY config.properties /home/model-server/config.properties\nRUN mkdir /home/model-server/model-store && chown -R model-server /home/model-server/model-store\n\nEXPOSE 8080 8081 8082\n\nUSER model-server\nWORKDIR /home/model-server\nENV TEMP=/home/model-server/tmp\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nCMD [\"serve\"]\n"
}