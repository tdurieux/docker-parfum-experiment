diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xilinx/vitis-ai/docker/dockerfiles/vitis-ai-gpu.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xilinx/vitis-ai/docker/dockerfiles/vitis-ai-gpu.Dockerfile/repaired.Dockerfile
index e885952..fdc111e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xilinx/vitis-ai/docker/dockerfiles/vitis-ai-gpu.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xilinx/vitis-ai/docker/dockerfiles/vitis-ai-gpu.Dockerfile/repaired.Dockerfile
@@ -73,7 +73,7 @@ RUN chmod 1777 /tmp \
         vim \
         wget \
         yasm \
-        zstd
+        zstd && rm -rf /var/lib/apt/lists/*;
 
 RUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen \
     && echo "LC_ALL=en_US.UTF-8" >> /etc/environment \
@@ -83,7 +83,7 @@ RUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen \
     && dpkg-reconfigure locales
 
 # Tools for building vitis-ai-library in the docker container
-RUN apt-get -y install \
+RUN apt-get -y --no-install-recommends install \
         libgtest-dev \
         libeigen3-dev \
         rpm \
@@ -104,23 +104,23 @@ RUN apt-get -y install \
         opencl-headers \
         pocl-opencl-icd \
     && add-apt-repository -y ppa:ubuntu-toolchain-r/test \
-    && apt install -y gcc-8 g++-8 gcc-9 g++-9 \
-    && wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
+    && apt install --no-install-recommends -y gcc-8 g++-8 gcc-9 g++-9 \
+    && wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null \
     && echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ bionic main' | sudo tee /etc/apt/sources.list.d/kitware.list >/dev/null \
     && apt-get update -y \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
         cmake=3.16.0-0kitware1 \
         cmake-data=3.16.0-0kitware1 \
         kitware-archive-keyring \
-    && apt-get install -y ffmpeg \
+    && apt-get install --no-install-recommends -y ffmpeg \
     && cd /usr/src/gtest \
     && mkdir -p build \
     && cd build \
     && cmake .. \
     && make \
-    && make install
+    && make install && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install \
+RUN pip3 install --no-cache-dir \
         Flask \
         setuptools \
         wheel
@@ -128,15 +128,15 @@ RUN pip3 install \
 # Install XRT
 RUN wget --progress=dot:mega -O xrt.deb ${XRT_URL} \
     && ls -lhd ./xrt.deb \
-    && apt-get update -y  \
-   &&  apt-get install -y ./xrt.deb \
-    && rm -fr /tmp/*
+    && apt-get update -y \
+   && apt-get install --no-install-recommends -y ./xrt.deb \
+    && rm -fr /tmp/* && rm -rf /var/lib/apt/lists/*;
 
 # Install XRM
 RUN wget --progress=dot:mega -O xrm.deb ${XRM_URL} \
     && ls -lhd ./xrm.deb \
-    && apt-get install -y ./xrm.deb \
-    && rm -fr /tmp/*
+    && apt-get install --no-install-recommends -y ./xrm.deb \
+    && rm -fr /tmp/* && rm -rf /var/lib/apt/lists/*;
 
 # glog 0.4.0
 RUN cd /tmp \
@@ -149,14 +149,14 @@ RUN cd /tmp \
     && cmake -DBUILD_SHARED_LIBS=ON .. \
     && make -j \
     && make install \
-    && rm -fr /tmp/*
+    && rm -fr /tmp/* && rm glog.0.4.0.tar.gz
 
 # protobuf 3.4.0
 RUN cd /tmp; wget --progress=dot:mega https://codeload.github.com/google/protobuf/zip/v3.4.0 \
     && unzip v3.4.0 \
     && cd protobuf-3.4.0 \
     && ./autogen.sh \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make -j \
     && make install \
     && ldconfig \
@@ -174,7 +174,7 @@ RUN export PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" \
     && make install \
     && ldconfig \
     && export PATH="${VAI_ROOT}/conda/bin:${VAI_ROOT}/utility:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" \
-    && rm -fr /tmp/*
+    && rm -fr /tmp/* && rm 3.4.3.tar.gz
 
 # gflags 2.2.2
 RUN cd /tmp; wget --progress=dot:mega https://github.com/gflags/gflags/archive/v2.2.2.tar.gz \
@@ -185,7 +185,7 @@ RUN cd /tmp; wget --progress=dot:mega https://github.com/gflags/gflags/archive/v
     && cmake -DBUILD_SHARED_LIBS=ON .. \
     && make -j \
     && make install \
-    && rm -fr /tmp/*
+    && rm -fr /tmp/* && rm v2.2.2.tar.gz
 
 # pybind 2.5.0
 RUN cd /tmp; git clone https://github.com/pybind/pybind11.git \
@@ -208,7 +208,7 @@ RUN source ~/.bashrc \
     && cmake -DBUILD_SHARED_LIBS=ON .. \
     && make -j \
     && make install \
-    && rm -Rf /tmp/*
+    && rm -Rf /tmp/* && rm json-c-0.15-20200726.tar.gz
 
 ENV GOSU_VERSION 1.12
 
@@ -220,7 +220,7 @@ RUN groupadd vitis-ai-group \
     && usermod -aG sudo vitis-ai-user \
     && echo 'ALL ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \
     && echo 'Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/vitis_ai/conda/bin"' >> /etc/sudoers \
-    && curl -sSkLo /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)" \
+    && curl -f -sSkLo /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)" \
     && chmod +x /usr/local/bin/gosu \
     && echo ". $VAI_ROOT/conda/etc/profile.d/conda.sh" >> ~vitis-ai-user/.bashrc \
     && echo "conda activate base" >> ~vitis-ai-user/.bashrc \
@@ -269,7 +269,7 @@ ARG CACHEBUST=1
 RUN if [[ ${VAI_CONDA_CHANNEL} =~ .*"tar.gz" ]]; then \
        cd /scratch/; \
        wget -O conda-channel.tar.gz --progress=dot:mega ${VAI_CONDA_CHANNEL}; \
-       tar -xzvf conda-channel.tar.gz; \
+       tar -xzvf conda-channel.tar.gz; rm conda-channel.tar.gz \
        export VAI_CONDA_CHANNEL=file:///scratch/conda-channel; \
     fi; \
     . $VAI_ROOT/conda/etc/profile.d/conda.sh \
@@ -284,17 +284,17 @@ RUN if [[ ${VAI_CONDA_CHANNEL} =~ .*"tar.gz" ]]; then \
     && mamba env create -f /scratch/vitis-ai-optimizer_tensorflow2.yml \
     && mamba env create -f /scratch/vitis-ai-pytorch.yml \
         && conda activate vitis-ai-pytorch \
-        && pip install graphviz==0.19.1 \
+        && pip install --no-cache-dir graphviz==0.19.1 \
     && mamba env create -f /scratch/vitis-ai-tensorflow.yml \
         && conda activate vitis-ai-tensorflow \
-        && pip install -r /scratch/pip_requirements.txt \
+        && pip install --no-cache-dir -r /scratch/pip_requirements.txt \
     && mamba env create -f /scratch/vitis-ai-tensorflow2.yml \
         && conda activate vitis-ai-tensorflow2 \
         && mamba install --no-update-deps -y vai_q_tensorflow2_gpu pydot pyyaml jupyter ipywidgets \
             dill progressbar2 pytest scikit-learn pandas matplotlib \
             pillow -c conda-forge -c defaults \
-        && pip install -r /scratch/pip_requirements.txt \
-        && pip install --ignore-installed tensorflow==2.8 keras==2.8 protobuf==3.11.* \
+        && pip install --no-cache-dir -r /scratch/pip_requirements.txt \
+        && pip install --no-cache-dir --ignore-installed tensorflow==2.8 keras==2.8 protobuf==3.11.* \
         && pip uninstall -y h5py \
         && mamba install -y --override-channels --force-reinstall h5py=2.10.0 -c conda-forge -c anaconda \
     && conda clean -y --force-pkgs-dirs \
@@ -306,7 +306,7 @@ RUN if [[ ${VAI_CONDA_CHANNEL} =~ .*"tar.gz" ]]; then \
         && conda activate vitis-ai-pytorch \
         && sudo cp -r $CONDA_PREFIX/lib/python3.7/site-packages/vaic/arch $VAI_ROOT/compiler/arch \
     && cat /dev/null > /etc/conda/condarc \
-    && cat /dev/null > ~/.condarc 
+    && cat /dev/null > ~/.condarc
 
 USER root
 # VAI-1372: Workaround to fix GCC 9 in vitis-ai-tensorflow
@@ -332,7 +332,7 @@ RUN cd /tmp \
     && wget -O aks.deb https://www.xilinx.com/bin/public/openDownload?filename=aks_2.0.0-r102_amd64.deb \
     && apt-get install -y --no-install-recommends /tmp/*.deb \
     && rm -rf /tmp/* \
-    && ldconfig
+    && ldconfig && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get clean -y \
     && rm -rf /var/lib/apt/lists/* \