{
  "startTime": 1674252569891,
  "endTime": 1674252570849,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 26,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 26,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#  Copyright (C) 2021 Xilinx, Inc\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n\nFROM ubuntu:18.04\n\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\n\nWORKDIR /workspace\n\nARG GID\nARG GNAME\nARG UNAME\nARG UID\n\n# Install conda system prerequisites, commands based on: https://github.com/conda/conda-docker/blob/master/miniconda3/debian/Dockerfile\nRUN apt-get -qq update && apt-get -qq --no-install-recommends -y install curl bzip2 \\\n    && apt-get autoclean \\\n    && rm -rf /var/lib/apt/lists/* /var/log/dpkg.log\n\n# Install LogicNets system prerequisites\nRUN apt-get -qq update && apt-get -qq --no-install-recommends -y install verilator build-essential libx11-6 git \\\n    && apt-get autoclean \\\n    && rm -rf /var/lib/apt/lists/* /var/log/dpkg.log\n\n# Adding LogicNets dependency on OHMYXILINX\nRUN git clone https://bitbucket.org/maltanar/oh-my-xilinx.git\nENV OHMYXILINX=/workspace/oh-my-xilinx\n\n# Add Nitro-parts-library\nRUN  git clone https://github.com/dirjud/Nitro-Parts-lib-Xilinx.git\nENV NITROPARTSLIB=/workspace/Nitro-Parts-lib-Xilinx\n\n# Create the user account to run LogicNets\nRUN groupadd -g $GID $GNAME\nRUN useradd -m -u $UID $UNAME -g $GNAME\nENV UNAME_HOME=/home/$UNAME\nUSER $UNAME\nENV USER=$UNAME\nENV HOME=/home/$UNAME\n\n# Install conda\nENV CONDA_ROOT=$HOME/.local/miniconda3\nRUN mkdir -p $CONDA_ROOT\nENV PATH=$CONDA_ROOT/bin:$PATH\nRUN curl -f -sSL https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -o /tmp/miniconda.sh \\\n    && bash /tmp/miniconda.sh -bfp $CONDA_ROOT \\\n    && rm -rf /tmp/miniconda.sh \\\n    && conda install -y python=3 \\\n    && conda update -y conda \\\n    && conda clean --all --yes\n\n# Install LogicNets prerequisites\nRUN conda install -y pytorch==1.4.0 torchvision==0.5.0 cpuonly -c pytorch && \\\n    conda clean -ya\n# Install Brevitas prerequisites\nRUN conda install -y packaging pyparsing && \\\n    conda clean -ya\nRUN conda install -y docrep -c conda-forge && \\\n    conda clean -ya\nRUN pip install --no-cache-dir git+https://github.com/Xilinx/brevitas.git@67be9b58c1c63d3923cac430ade2552d0db67ba5\n# Install prerequisites for pyverilator\nRUN pip install --no-cache-dir pyverilator\n# Install prerequisites for oh-my-xilinx\nRUN conda install -y zsh -c conda-forge && \\\n    conda clean -ya\n\n# Install LogicNets library - SKIP this step and install during entry-point\n#RUN git clone git@github.com:Xilinx/logicnets.git && \\\n#    cd logicnets && \\\n#    pip install --upgrade .\n\n# Install prerequisites for the JSC examples\nRUN conda install -y wget && \\\n    conda clean -ya\nRUN conda install -y h5py pyyaml numpy pandas scikit-learn tensorboard && \\\n    conda clean -ya\n\n# Add entry point script to install LogicNets and setup vivado.\nENV LOCAL_PATH=$HOME/.local/bin\nRUN mkdir -p $LOCAL_PATH\nCOPY docker/entry-point.sh $LOCAL_PATH\nENV PATH=$LOCAL_PATH:$PATH\nENTRYPOINT [\"entry-point.sh\"]\nCMD [\"bash\"]\n"
}