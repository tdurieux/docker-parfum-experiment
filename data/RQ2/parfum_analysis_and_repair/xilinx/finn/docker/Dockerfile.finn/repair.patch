diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xilinx/finn/docker/Dockerfile.finn b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xilinx/finn/docker/Dockerfile.finn/repaired.Dockerfile
index 4d03e2f..eba8bb0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xilinx/finn/docker/Dockerfile.finn
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xilinx/finn/docker/Dockerfile.finn/repaired.Dockerfile
@@ -41,48 +41,48 @@ RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 
 RUN apt-get update
 RUN apt-get -y upgrade
-RUN apt-get install -y build-essential
-RUN apt-get install -y libglib2.0-0
-RUN apt-get install -y libsm6
-RUN apt-get install -y libxext6
-RUN apt-get install -y libxrender-dev
-RUN apt-get install -y verilator
-RUN apt-get install -y nano
-RUN apt-get install -y zsh
-RUN apt-get install -y rsync
-RUN apt-get install -y git
-RUN apt-get install -y sshpass
-RUN apt-get install -y wget
-RUN apt-get install -y sudo
-RUN apt-get install -y unzip
-RUN apt-get install -y zip
+RUN apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libglib2.0-0 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libsm6 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libxext6 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libxrender-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y verilator && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y nano && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y zsh && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y rsync && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y sshpass && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y zip && rm -rf /var/lib/apt/lists/*;
 RUN echo "StrictHostKeyChecking no" >> /etc/ssh/ssh_config
 
 # install XRT
 RUN wget https://www.xilinx.com/bin/public/openDownload?filename=$XRT_DEB_VERSION.deb -O /tmp/$XRT_DEB_VERSION.deb
-RUN apt install -y /tmp/$XRT_DEB_VERSION.deb
+RUN apt install --no-install-recommends -y /tmp/$XRT_DEB_VERSION.deb && rm -rf /var/lib/apt/lists/*;
 RUN rm /tmp/$XRT_DEB_VERSION.deb
 
 # versioned Python package requirements for FINN compiler
 # these are given in requirements.txt
 COPY requirements.txt .
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 RUN rm requirements.txt
 # extra Python package dependencies (for testing and interaction)
-RUN pip install pygments==2.4.1
-RUN pip install ipykernel==5.5.5
-RUN pip install jupyter==1.0.0
-RUN pip install matplotlib==3.3.1 --ignore-installed
-RUN pip install pytest-dependency==0.5.1
-RUN pip install sphinx==3.1.2
-RUN pip install sphinx_rtd_theme==0.5.0
-RUN pip install pytest-xdist==2.0.0
-RUN pip install pytest-parallel==0.1.0
-RUN pip install "netron>=5.0.0"
-RUN pip install pandas==1.1.5
-RUN pip install scikit-learn==0.24.1
-RUN pip install tqdm==4.31.1
-RUN pip install -e git+https://github.com/fbcotter/dataset_loading.git@0.0.4#egg=dataset_loading
+RUN pip install --no-cache-dir pygments==2.4.1
+RUN pip install --no-cache-dir ipykernel==5.5.5
+RUN pip install --no-cache-dir jupyter==1.0.0
+RUN pip install --no-cache-dir matplotlib==3.3.1 --ignore-installed
+RUN pip install --no-cache-dir pytest-dependency==0.5.1
+RUN pip install --no-cache-dir sphinx==3.1.2
+RUN pip install --no-cache-dir sphinx_rtd_theme==0.5.0
+RUN pip install --no-cache-dir pytest-xdist==2.0.0
+RUN pip install --no-cache-dir pytest-parallel==0.1.0
+RUN pip install --no-cache-dir "netron>=5.0.0"
+RUN pip install --no-cache-dir pandas==1.1.5
+RUN pip install --no-cache-dir scikit-learn==0.24.1
+RUN pip install --no-cache-dir tqdm==4.31.1
+RUN pip install --no-cache-dir -e git+https://github.com/fbcotter/dataset_loading.git@0.0.4#egg=dataset_loading
 
 # git-based Python repo dependencies
 # these are installed in editable mode for easier co-development
@@ -99,23 +99,23 @@ ARG AVNET_BDF_COMMIT="2d49cfc25766f07792c0b314489f21fe916b639b"
 # finn-base
 RUN git clone https://github.com/Xilinx/finn-base.git /workspace/finn-base
 RUN git -C /workspace/finn-base checkout $FINN_BASE_COMMIT
-RUN pip install -e /workspace/finn-base
+RUN pip install --no-cache-dir -e /workspace/finn-base
 # Install qonnx without dependencies, currently its only dependency is finn-base
 RUN git clone https://github.com/fastmachinelearning/qonnx.git /workspace/qonnx
 RUN git -C /workspace/qonnx checkout $QONNX_COMMIT
-RUN pip install --no-dependencies -e /workspace/qonnx
+RUN pip install --no-cache-dir --no-dependencies -e /workspace/qonnx
 # finn-experimental
 RUN git clone https://github.com/Xilinx/finn-experimental.git /workspace/finn-experimental
 RUN git -C /workspace/finn-experimental checkout $FINN_EXP_COMMIT
-RUN pip install -e /workspace/finn-experimental
+RUN pip install --no-cache-dir -e /workspace/finn-experimental
 # brevitas
 RUN git clone https://github.com/Xilinx/brevitas.git /workspace/brevitas
 RUN git -C /workspace/brevitas checkout $BREVITAS_COMMIT
-RUN pip install -e /workspace/brevitas
+RUN pip install --no-cache-dir -e /workspace/brevitas
 # pyverilator
 RUN git clone https://github.com/maltanar/pyverilator.git /workspace/pyverilator
 RUN git -C /workspace/pyverilator checkout $PYVERILATOR_COMMIT
-RUN pip install -e /workspace/pyverilator
+RUN pip install --no-cache-dir -e /workspace/pyverilator
 # other git-based dependencies (non-Python)
 # cnpy
 RUN git clone https://github.com/rogersce/cnpy.git /workspace/cnpy