{
  "startTime": 1674216039920,
  "endTime": 1674216040503,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Spiderfoot Dockerfile\n#\n# http://www.spiderfoot.net\n#\n# Written by: Michael Pellon <m@pellon.io>\n# Updated by: Chandrapal <bnchandrapal@protonmail.com>\n# Updated by: Steve Micallef <steve@binarypool.com>\n# Updated by: Steve Bate <svc-spiderfoot@stevebate.net>\n#    -> Inspired by https://github.com/combro2k/dockerfiles/tree/master/alpine-spiderfoot\n#\n# Usage:\n#\n#   sudo docker build -t spiderfoot .\n#   sudo docker run -p 5001:5001 --security-opt no-new-privileges spiderfoot\n#\n# Using Docker volume for spiderfoot data\n#\n#   sudo docker run -p 5001:5001 -v /mydir/spiderfoot:/var/lib/spiderfoot spiderfoot\n#\n# Using SpiderFoot remote command line with web server\n#\n#   docker run --rm -it spiderfoot sfcli.py -s http://my.spiderfoot.host:5001/\n#\n# Running spiderfoot commands without web server (can optionally specify volume)\n#\n#   sudo docker run --rm spiderfoot sf.py -h\n#\n# Running a shell in the container for maintenance\n#   sudo docker run -it --entrypoint /bin/sh spiderfoot\n#\n# Running spiderfoot unit tests in container\n#\n#   sudo docker build -t spiderfoot-test --build-arg REQUIREMENTS=test/requirements.txt .\n#   sudo docker run --rm spiderfoot-test -m pytest --flake8 .\n\nFROM alpine:3.12.4 AS build\nARG REQUIREMENTS=requirements.txt\nRUN apk add --no-cache gcc git curl python3 python3-dev py3-pip swig tinyxml-dev \\\n python3-dev musl-dev openssl-dev libffi-dev libxslt-dev libxml2-dev jpeg-dev \\\n openjpeg-dev zlib-dev cargo rust\nRUN python3 -m venv /opt/venv\nENV PATH=\"/opt/venv/bin\":$PATH\nCOPY $REQUIREMENTS requirements.txt ./\nRUN ls\nRUN echo \"$REQUIREMENTS\"\nRUN pip3 install --no-cache-dir -U pip\nRUN pip3 install --no-cache-dir -r \"$REQUIREMENTS\"\n\n\n\nFROM alpine:3.13.0\nWORKDIR /home/spiderfoot\n\n# Place database and logs outside installation directory\nENV SPIDERFOOT_DATA /var/lib/spiderfoot\nENV SPIDERFOOT_LOGS /var/lib/spiderfoot/log\nENV SPIDERFOOT_CACHE /var/lib/spiderfoot/cache\n\n# Run everything as one command so that only one layer is created\nRUN apk --update --no-cache add python3 musl openssl libxslt tinyxml libxml2 jpeg zlib openjpeg \\\n    && addgroup spiderfoot \\\n    && adduser -G spiderfoot -h /home/spiderfoot -s /sbin/nologin \\\n               -g \"SpiderFoot User\" -D spiderfoot \\\n    && rm -rf /var/cache/apk/* \\\n    && rm -rf /lib/apk/db \\\n    && rm -rf /root/.cache \\\n    && mkdir -p $SPIDERFOOT_DATA || true \\\n    && mkdir -p $SPIDERFOOT_LOGS || true \\\n    && mkdir -p $SPIDERFOOT_CACHE || true \\\n    && chown spiderfoot:spiderfoot $SPIDERFOOT_DATA \\\n    && chown spiderfoot:spiderfoot $SPIDERFOOT_LOGS \\\n    && chown spiderfoot:spiderfoot $SPIDERFOOT_CACHE\n\nCOPY . .\nCOPY --from=build /opt/venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nUSER spiderfoot\n\nEXPOSE 5001\n\n# Run the application.\nENTRYPOINT [\"/opt/venv/bin/python\"]\nCMD [\"sf.py\", \"-l\", \"0.0.0.0:5001\"]\n"
}