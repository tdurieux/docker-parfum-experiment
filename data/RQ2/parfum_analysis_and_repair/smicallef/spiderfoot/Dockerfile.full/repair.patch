diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/smicallef/spiderfoot/Dockerfile.full b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/smicallef/spiderfoot/Dockerfile.full/repaired.Dockerfile
index 1c9bfa1..799d080 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/smicallef/spiderfoot/Dockerfile.full
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/smicallef/spiderfoot/Dockerfile.full/repaired.Dockerfile
@@ -9,20 +9,20 @@
 FROM python:3
 
 # Install tools/dependencies from apt
-RUN apt-get -y update && apt-get -y install nbtscan onesixtyone nmap
+RUN apt-get -y update && apt-get -y --no-install-recommends install nbtscan onesixtyone nmap && rm -rf /var/lib/apt/lists/*;
 
 # Compile other tools from source
 RUN mkdir /tools || true
 WORKDIR /tools
 
 # Install Golang tools
-RUN apt-get -y update && apt-get -y install golang
+RUN apt-get -y update && apt-get -y --no-install-recommends install golang && rm -rf /var/lib/apt/lists/*;
 ENV GOPATH="/go"
 ENV PATH="$GOPATH/bin:$PATH"
 RUN mkdir -p "$GOPATH/src" "$GOPATH/bin"
 
 # Install Ruby tools for WhatWeb
-RUN apt-get -y update && apt-get -y install ruby ruby-dev bundler
+RUN apt-get -y update && apt-get -y --no-install-recommends install ruby ruby-dev bundler && rm -rf /var/lib/apt/lists/*;
 # Install WhatWeb
 RUN git clone https://github.com/urbanadventurer/WhatWeb \
     && gem install rchardet mongo json && cd /tools/WhatWeb \
@@ -35,24 +35,24 @@ RUN groupadd spiderfoot \
 # Install RetireJS
 RUN apt remove -y cmdtest \
     && apt remove -y yarn \
-    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
+    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
     && echo 'deb https://dl.yarnpkg.com/debian/ stable main' |tee /etc/apt/sources.list.d/yarn.list \
     && apt-get update \
-    && apt-get install yarn -y \
+    && apt-get install --no-install-recommends yarn -y \
     && yarn install \
     && curl -fsSL https://deb.nodesource.com/setup_17.x | bash - \
-    && apt-get install -y nodejs \
-    && npm install -g retire
+    && apt-get install --no-install-recommends -y nodejs \
+    && npm install -g retire && npm cache clean --force; && yarn cache clean; && rm -rf /var/lib/apt/lists/*;
 
 # Install Google Chrome the New Way (Not via apt-key)
-RUN wget -qO - https://dl.google.com/linux/linux_signing_key.pub | gpg --dearmor -o /usr/share/keyrings/googlechrome-linux-keyring.gpg \
+RUN wget -qO - https://dl.google.com/linux/linux_signing_key.pub | gpg --batch --dearmor -o /usr/share/keyrings/googlechrome-linux-keyring.gpg \
     && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/googlechrome-linux-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main" | tee /etc/apt/sources.list.d/google-chrome.list \
-    && apt -y update && apt install --allow-unauthenticated -y google-chrome-stable
+    && apt -y update && apt install --no-install-recommends --allow-unauthenticated -y google-chrome-stable && rm -rf /var/lib/apt/lists/*;
 
 # Install Wappalyzer
 RUN git clone https://github.com/AliasIO/wappalyzer.git \
     && cd wappalyzer \
-    && yarn install && yarn run link
+    && yarn install && yarn run link && yarn cache clean;
 
 # Install Nuclei
 RUN wget https://github.com/projectdiscovery/nuclei/releases/download/v2.6.5/nuclei_2.6.5_linux_amd64.zip \
@@ -60,11 +60,11 @@ RUN wget https://github.com/projectdiscovery/nuclei/releases/download/v2.6.5/nuc
     && git clone https://github.com/projectdiscovery/nuclei-templates.git
 
 # Install testssl.sh
-RUN apt-get install -y bsdmainutils dnsutils coreutils
+RUN apt-get install --no-install-recommends -y bsdmainutils dnsutils coreutils && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://github.com/drwetter/testssl.sh.git
 
 # Install Snallygaster and TruffleHog
-RUN pip3 install snallygaster trufflehog
+RUN pip3 install --no-cache-dir snallygaster trufflehog
 
 # Place database and logs outside installation directory
 ENV SPIDERFOOT_DATA /var/lib/spiderfoot
@@ -95,15 +95,15 @@ RUN chown -R spiderfoot:spiderfoot "/home/spiderfoot"
 
 USER spiderfoot
 
-RUN pip install -U pip
-RUN pip install -r "$REQUIREMENTS"
+RUN pip install --no-cache-dir -U pip
+RUN pip install --no-cache-dir -r "$REQUIREMENTS"
 
 # Install Python tools
-RUN pip install dnstwist
+RUN pip install --no-cache-dir dnstwist
 # CMSeeK
 WORKDIR /tools
 RUN git clone https://github.com/Tuhinshubhra/CMSeeK && cd CMSeeK \
-    && pip install -r requirements.txt && mkdir Results
+    && pip install --no-cache-dir -r requirements.txt && mkdir Results
 
 # Install wafw00f
 RUN git clone https://github.com/EnableSecurity/wafw00f \