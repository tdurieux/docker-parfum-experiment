{
  "startTime": 1674255356092,
  "endTime": 1674255357691,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 67,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 25,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 24,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 25,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 24,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedDockerfile": "#\n# Spiderfoot Dockerfile (Full - includes all CLI tools, etc.)\n#\n# http://www.spiderfoot.net\n#\n# Written by: TheTechromancer\n#\n\nFROM python:3\n\n# Install tools/dependencies from apt\nRUN apt-get -y update && apt-get -y --no-install-recommends install nbtscan onesixtyone nmap && rm -rf /var/lib/apt/lists/*;\n\n# Compile other tools from source\nRUN mkdir /tools || true\nWORKDIR /tools\n\n# Install Golang tools\nRUN apt-get -y update && apt-get -y --no-install-recommends install golang && rm -rf /var/lib/apt/lists/*;\nENV GOPATH=\"/go\"\nENV PATH=\"$GOPATH/bin:$PATH\"\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\"\n\n# Install Ruby tools for WhatWeb\nRUN apt-get -y update && apt-get -y --no-install-recommends install ruby ruby-dev bundler && rm -rf /var/lib/apt/lists/*;\n# Install WhatWeb\nRUN git clone https://github.com/urbanadventurer/WhatWeb \\\n    && gem install rchardet mongo json && cd /tools/WhatWeb \\\n    && bundle install && cd /tools\n\nRUN groupadd spiderfoot \\\n    && useradd -m -g spiderfoot -d /home/spiderfoot -s /sbin/nologin \\\n    -c \"SpiderFoot User\" spiderfoot\n\n# Install RetireJS\nRUN apt remove -y cmdtest \\\n    && apt remove -y yarn \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo 'deb https://dl.yarnpkg.com/debian/ stable main' |tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends yarn -y \\\n    && yarn install \\\n    && curl -fsSL https://deb.nodesource.com/setup_17.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && npm install -g retire && npm cache clean --force; && yarn cache clean; && rm -rf /var/lib/apt/lists/*;\n\n# Install Google Chrome the New Way (Not via apt-key)\nRUN wget -qO - https://dl.google.com/linux/linux_signing_key.pub | gpg --batch --dearmor -o /usr/share/keyrings/googlechrome-linux-keyring.gpg \\\n    && echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/googlechrome-linux-keyring.gpg] http://dl.google.com/linux/chrome/deb/ stable main\" | tee /etc/apt/sources.list.d/google-chrome.list \\\n    && apt -y update && apt install --no-install-recommends --allow-unauthenticated -y google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n# Install Wappalyzer\nRUN git clone https://github.com/AliasIO/wappalyzer.git \\\n    && cd wappalyzer \\\n    && yarn install && yarn run link && yarn cache clean;\n\n# Install Nuclei\nRUN wget https://github.com/projectdiscovery/nuclei/releases/download/v2.6.5/nuclei_2.6.5_linux_amd64.zip \\\n    && unzip nuclei_2.6.5_linux_amd64.zip \\\n    && git clone https://github.com/projectdiscovery/nuclei-templates.git\n\n# Install testssl.sh\nRUN apt-get install --no-install-recommends -y bsdmainutils dnsutils coreutils && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/drwetter/testssl.sh.git\n\n# Install Snallygaster and TruffleHog\nRUN pip3 install --no-cache-dir snallygaster trufflehog\n\n# Place database and logs outside installation directory\nENV SPIDERFOOT_DATA /var/lib/spiderfoot\nENV SPIDERFOOT_LOGS /var/lib/spiderfoot/log\nENV SPIDERFOOT_CACHE /var/lib/spiderfoot/cache\n\nRUN mkdir -p $SPIDERFOOT_DATA || true \\\n    && mkdir -p $SPIDERFOOT_LOGS || true \\\n    && mkdir -p $SPIDERFOOT_CACHE || true \\\n    && chown spiderfoot:spiderfoot $SPIDERFOOT_DATA \\\n    && chown spiderfoot:spiderfoot $SPIDERFOOT_LOGS \\\n    && chown spiderfoot:spiderfoot $SPIDERFOOT_CACHE\n\nWORKDIR /home/spiderfoot\nCOPY . .\n\nENV VIRTUAL_ENV=/opt/venv\nRUN mkdir -p \"$VIRTUAL_ENV\" || true\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\nRUN python -m venv \"$VIRTUAL_ENV\"\n\nARG REQUIREMENTS=requirements.txt\nCOPY \"$REQUIREMENTS\" requirements.txt\n\nRUN chown -R spiderfoot:spiderfoot /tools\nRUN chown -R spiderfoot:spiderfoot \"$VIRTUAL_ENV\"\nRUN chown -R spiderfoot:spiderfoot \"/home/spiderfoot\"\n\nUSER spiderfoot\n\nRUN pip install --no-cache-dir -U pip\nRUN pip install --no-cache-dir -r \"$REQUIREMENTS\"\n\n# Install Python tools\nRUN pip install --no-cache-dir dnstwist\n# CMSeeK\nWORKDIR /tools\nRUN git clone https://github.com/Tuhinshubhra/CMSeeK && cd CMSeeK \\\n    && pip install --no-cache-dir -r requirements.txt && mkdir Results\n\n# Install wafw00f\nRUN git clone https://github.com/EnableSecurity/wafw00f \\\n    && cd wafw00f \\\n    && python3 setup.py install\nWORKDIR /home/spiderfoot\n\nEXPOSE 5001\n\n# Run the application\nCMD python -c 'from spiderfoot import SpiderFootDb; \\\ndb = SpiderFootDb({\"__database\": \"/var/lib/spiderfoot/spiderfoot.db\"}); \\\ndb.configSet({ \\\n    \"sfp_tool_dnstwist:dnstwistpath\": \"/opt/venv/bin/dnstwist\", \\\n    \"sfp_tool_cmseek:cmseekpath\": \"/tools/CMSeeK/cmseek.py\", \\\n    \"sfp_tool_whatweb:whatweb_path\": \"/tools/WhatWeb/whatweb\", \\\n    \"sfp_tool_wafw00f:wafw00f_path\": \"/opt/venv/bin/wafw00f\", \\\n    \"sfp_tool_onesixtyone:onesixtyone_path\": \"/usr/bin/onesixtyone\", \\\n    \"sfp_tool_retirejs:retirejs_path\": \"/usr/bin/retire\", \\\n    \"sfp_tool_testsslsh:testsslsh_path\": \"/tools/testssl.sh/testssl.sh\", \\\n    \"sfp_tool_snallygaster:snallygaster_path\": \"/usr/local/bin/snallygaster\", \\\n    \"sfp_tool_trufflehog:trufflehog_path\": \"/usr/local/bin/trufflehog\", \\\n    \"sfp_tool_nuclei:nuclei_path\": \"/tools/nuclei\", \\\n    \"sfp_tool_nuclei:template_path\": \"/tools/nuclei-templates\", \\\n    \"sfp_tool_wappalyzer:wappalyzer_path\": \"/tools/wappalyzer/src/drivers/npm/cli.js\", \\\n    \"sfp_tool_nbtscan:nbtscan_path\": \"/usr/bin/nbtscan\", \\\n    \"sfp_tool_nmap:nmappath\": \"DISABLED_BECAUSE_NMAP_REQUIRES_ROOT_TO_WORK\" \\\n})' || true && ./sf.py -l 0.0.0.0:5001\n"
}