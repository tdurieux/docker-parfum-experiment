diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dsc-spidal/twister2/docker/tutorial/image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dsc-spidal/twister2/docker/tutorial/image/Dockerfile/repaired.Dockerfile
index 9ee7547..0ca7a9e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dsc-spidal/twister2/docker/tutorial/image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dsc-spidal/twister2/docker/tutorial/image/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM ubuntu:18.04
 # FROM uptodate
 
-RUN apt-get update && apt-get install -y openssh-server net-tools telnet
+RUN apt-get update && apt-get install --no-install-recommends -y openssh-server net-tools telnet && rm -rf /var/lib/apt/lists/*;
 RUN mkdir /var/run/sshd
 RUN mkdir /twister2-volatile
 RUN mkdir -p /twister2/persistent
@@ -19,16 +19,16 @@ RUN echo "export VISIBLE=now" >> /etc/profile
 
 # Install OpenJDK-8
 RUN apt-get update && \
-    apt-get install -y openjdk-8-jdk && \
-    apt-get install -y ant && \
-    apt-get clean;
+    apt-get install --no-install-recommends -y openjdk-8-jdk && \
+    apt-get install --no-install-recommends -y ant && \
+    apt-get clean; rm -rf /var/lib/apt/lists/*;
 
 # Fix certificate issues
 RUN apt-get update && \
-    apt-get install ca-certificates-java && \
+    apt-get install -y --no-install-recommends ca-certificates-java && \
     apt-get clean && \
-    apt-get install -y curl && \
-    update-ca-certificates -f;
+    apt-get install --no-install-recommends -y curl && \
+    update-ca-certificates -f; rm -rf /var/lib/apt/lists/*;
 
 # Setup JAVA_HOME -- useful for docker commandline
 ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/
@@ -42,21 +42,21 @@ ENV DEBIAN_FRONTEND noninteractive
 RUN apt-get update && \
     apt-get install -yq --no-install-recommends \
     locales wget ca-certificates ssh build-essential && \
-    apt-get install -y g++ && \
-    apt-get install -y maven && \
+    apt-get install --no-install-recommends -y g++ && \
+    apt-get install --no-install-recommends -y maven && \
     apt-get clean && apt-get purge && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
     rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*
 
 
 # openmpi install
 RUN wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz
-RUN tar -zxvf openmpi-3.0.0.tar.gz -C /
+RUN tar -zxvf openmpi-3.0.0.tar.gz -C / && rm openmpi-3.0.0.tar.gz
 ENV OMPI_BUILD="/openmpi-build"
 ENV OMPI_300="/openmpi-3.0.0"
 ENV PATH="${OMPI_BUILD}/bin:${PATH}"
 ENV LD_LIBRARY_PATH="${OMPI_BUILD}/lib:${LD_LIBRARY_PATH}"
 RUN export OMPI_BUILD OMPI_300 PATH LD_LIBRARY_PATH
-RUN cd /openmpi-3.0.0 && ls -la && ./configure --prefix=$OMPI_BUILD --enable-mpi-java --enable-mpirun-prefix-by-default --enable-orterun-prefix-by-default && make;make install
+RUN cd /openmpi-3.0.0 && ls -la && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=$OMPI_BUILD --enable-mpi-java --enable-mpirun-prefix-by-default --enable-orterun-prefix-by-default && make; make install
 RUN rm openmpi-3.0.0.tar.gz
 
 
@@ -66,6 +66,6 @@ EXPOSE 2022 2023 30000 30001 30002 30003 30004 30005 30006 30007 30008 30009 300
 COPY rootfs/config /root/.ssh/
 COPY twister2-0.8.0-SNAPSHOT /twister2-0.8.0-SNAPSHOT/
 
-RUN apt-get update && apt-get install -y python python-dev python-pip python-virtualenv rsync
+RUN apt-get update && apt-get install --no-install-recommends -y python python-dev python-pip python-virtualenv rsync && rm -rf /var/lib/apt/lists/*;
 CMD ["/init.sh","-bash"]