diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dsc-spidal/twister2/docker/kubernetes/baseimage-j11/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dsc-spidal/twister2/docker/kubernetes/baseimage-j11/Dockerfile/repaired.Dockerfile
index 81cd524..d4f9b7e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dsc-spidal/twister2/docker/kubernetes/baseimage-j11/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dsc-spidal/twister2/docker/kubernetes/baseimage-j11/Dockerfile/repaired.Dockerfile
@@ -5,7 +5,7 @@ ENV DEBIAN_FRONTEND noninteractive
 
 ##############################################################################
 # install apt-utils and locales, set up language
-RUN apt-get update && apt-get install -y apt-utils locales locales-all
+RUN apt-get update && apt-get install --no-install-recommends -y apt-utils locales locales-all && rm -rf /var/lib/apt/lists/*;
 ENV LC_ALL en_US.UTF-8
 ENV LANG en_US.UTF-8
 ENV LANGUAGE en_US.UTF-8
@@ -52,7 +52,7 @@ RUN set -eux; \
          ;; \
     esac; \
     curl -LfsSo /tmp/openjdk.tar.gz ${BINARY_URL}; \
-    echo "${ESUM} */tmp/openjdk.tar.gz" | sha256sum -c -; \
+    echo "${ESUM}  */tmp/openjdk.tar.gz" | sha256sum -c -; \
     mkdir -p /opt/java/openjdk; \
     cd /opt/java/openjdk; \
     tar -xf /tmp/openjdk.tar.gz --strip-components=1; \
@@ -76,7 +76,7 @@ ARG WITH_CUDA="false"
 RUN apt-get update && \
     apt-get install -yq --no-install-recommends \
       wget ca-certificates ssh build-essential && \
-    rm -rf /var/cache/apt/archives/*
+    rm -rf /var/cache/apt/archives/* && rm -rf /var/lib/apt/lists/*;
 
 #
 # install openmpi
@@ -88,7 +88,7 @@ RUN cd /tmp && \
   cd /tmp/openmpi-$OPENMPI_VERSION && \
   if [ "$WITH_CUDA" = "true" ]; then export WITH_CUDA_OPT="--with-cuda"; else export WITH_CUDA_OPT=""; fi && \
   echo "WITH_CUDA_OPT=$WITH_CUDA_OPT" && \
-  ./configure --prefix=/usr --enable-mpi-java $WITH_CUDA_OPT && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --enable-mpi-java $WITH_CUDA_OPT && \
   make -j2 && \
   make install && \
   rm -rf /tmp/openmpi-$OPENMPI_VERSION /tmp/openmpi-$OPENMPI_VERSION.tar.bz2
@@ -134,6 +134,6 @@ RUN if [ "$WITH_CUDA" = "true" ]; then \
 # install python
 # clear apt-get cache, no more apt usage after this point
 RUN apt-get update && \
-    apt-get install -y python3 nano && \
+    apt-get install --no-install-recommends -y python3 nano && \
     rm -rf /var/lib/apt/lists/*