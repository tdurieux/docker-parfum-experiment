{
  "startTime": 1674216895947,
  "endTime": 1674216897559,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.8-buster\n\nMAINTAINER Manuel Holtgrewe <manuel.holtgrewe@bih-charite.de>\nLABEL org.opencontainers.image.source https://github.com/bihealth/varfish-server\n\nARG app_git_url=https://github.com/bihealth/varfish-server.git\nARG app_git_tag\nARG app_git_depth=1\n\nENV DEBIAN_FRONTEND noninteractive\nENV CUSTOM_STATIC_DIR /usr/src/app/local-static\n\n## Add the wait script to the image\nADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.7.3/wait /usr/local/bin/wait\nRUN chmod +x /usr/local/bin/wait\n\n# Copy source code into Docker image.\nRUN mkdir -p /usr/src && rm -rf /usr/src\nRUN git clone --depth $app_git_depth --branch $app_git_tag $app_git_url /usr/src/app\n\n# Add postgres 12 repository\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc \\\n        | apt-key add - && \\\n    echo \"deb http://apt.postgresql.org/pub/repos/apt buster-pgdg main\" \\\n    > /etc/apt/sources.list.d/pgdg.list\n\n# Install system dependencies.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        gcc \\\n        ldap-utils \\\n        libldap2-dev \\\n        libsasl2-dev \\\n        make \\\n        postgresql-client-12 \\\n        wget \\\n        xmlsec1 \\\n        gnupg2 && rm -rf /var/lib/apt/lists/*;\n\n# Install Python dependencies.\nRUN cd /usr/src/app && \\\n    pip install --no-cache-dir -r requirements/production.txt && \\\n    pip install --no-cache-dir -r requirements/local.txt && \\\n    python -m nltk.downloader stopwords\n\n# Build sphinx manual.\nRUN cd /usr/src/app/docs_manual && \\\n    make clean html\n\n# Install miniconda3 and setup environment for annotation, required for Kiosk.\nRUN [\"/bin/bash\",\"-c\", \"cd /tmp && \\\n        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n        bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 && \\\n        source /opt/miniconda3/bin/activate && \\\n        conda install -c conda-forge -y mamba && \\\n        mamba create -c bioconda -y -n varfish-annotator \\\n            varfish-annotator-cli=0.10=0 \\\n            htslib=1.9 \\\n            bcftools=1.9 && \\\n        rm -f Miniconda3-latest-Linux-x86_64.sh\"]\n\n# Install modern nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt install -y --no-install-recommends nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install npm dependencies.\nRUN cd /usr/src/app/varfish/vueapp && \\\n    npm ci && \\\n    npm run build\n\n# Download files from CDN.\nRUN mkdir -p /usr/src/app/local-static/local/css && \\\n    mkdir -p /usr/src/app/local-static/local/fonts && \\\n    mkdir -p /usr/src/app/local-static/local/js && \\\n    cd /usr/src/app/local-static/local/fonts && \\\n    wget \\\n        https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/FontAwesome.otf \\\n        https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.eot \\\n        https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.svg \\\n        https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.ttf \\\n        https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.woff \\\n        https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/fonts/fontawesome-webfont.woff2 && \\\n    \\\n    cd /usr/src/app/local-static/local/css && \\\n    wget \\\n        https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css \\\n        https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css \\\n        https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/css/bootstrap-select.min.css \\\n        https://cdn.datatables.net/1.10.24/css/dataTables.jqueryui.min.css \\\n        https://cdn.jsdelivr.net/npm/bootstrap4-tagsinput@4.1.3/tagsinput.css && \\\n    \\\n    cd /usr/src/app/local-static/local/js && \\\n    wget \\\n        https://code.jquery.com/jquery-3.5.1.min.js \\\n        https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.bundle.min.js \\\n        https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.4/js/tether.min.js \\\n        https://cdnjs.cloudflare.com/ajax/libs/shepherd/1.8.1/js/shepherd.min.js \\\n        https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js \\\n        https://browser.sentry-cdn.com/6.2.5/bundle.tracing.min.js \\\n        https://cdn.datatables.net/1.10.24/js/jquery.dataTables.min.js \\\n        https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.13.18/js/bootstrap-select.min.js \\\n        https://cdn.jsdelivr.net/npm/bootstrap4-tagsinput@4.1.3/tagsinput.js \\\n        https://cdnjs.cloudflare.com/ajax/libs/jsrender/1.0.11/jsrender.min.js \\\n        https://cdn.plot.ly/plotly-1.54.5.min.js \\\n        https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js \\\n        https://cdnjs.cloudflare.com/ajax/libs/google-palette/1.1.0/palette.min.js \\\n        https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.21/lodash.min.js && rm -rf /usr/src/app/local-static/local/css\n\n# Get icons\nRUN cd /usr/src/app && \\\n    DJANGO_SECRET_KEY=for-build-only \\\n    DJANGO_SETTINGS_MODULE=config.settings.production \\\n    DATABASE_URL=postgres://sodar:sodar@fake/sodar \\\n    python manage.py geticons -c mdi bi cil fa-regular fa-solid fluent gridicons octicon\n\n# Prepare static files\nRUN cd /usr/src/app && \\\n    mkdir -p /usr/src/app/varfish/vueapp/dist && \\\n    DJANGO_SECRET_KEY=for-build-only \\\n    DJANGO_SETTINGS_MODULE=config.settings.production \\\n    DATABASE_URL=postgres://varfish:varfish@fake/varfish \\\n    python manage.py collectstatic --no-input && rm -rf /usr/src/app/varfish/vueapp/dist\n\n# Define the entry point.\nCOPY docker-entrypoint.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/docker-entrypoint.sh && \\\n    ln -s /usr/local/bin/docker-entrypoint.sh / # backwards compat\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"wsgi\"]\nEXPOSE 8080/tcp\n"
}