{
  "startTime": 1674217793671,
  "endTime": 1674217794767,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 27,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 27,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:0.9.18\nMAINTAINER Naftuli Tzvi Kay <rfkrocktk@gmail.com>\n\nENV HOME /root\nENV LANG en_US.UTF-8\nENV PUPPET_VERSION=3.8.6-1puppetlabs1\nENV IMAGE_RELEASE=3\nRUN locale-gen en_US.UTF-8\n\n# Fixes Docker Automated Build problem\nRUN ln -s -f /bin/true /usr/bin/chfn\n\n# Install tools\nRUN apt-get update -q 2 && DEBIAN_FRONTEND=noninteractive \\\n    apt-get upgrade -y > /dev/null && \\\n    apt-get install --no-install-recommends -y apt-transport-https ca-certificates > /dev/null && rm -rf /var/lib/apt/lists/*;\n\n# Install Phusion Passenger Repository for Passenger/NGINX\nADD conf/apt/passenger.list /etc/apt/sources.list.d/\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 561F9B9CAC40B2F7 \\\n    && chmod 0600 /etc/apt/sources.list.d/passenger.list\n\n# Install Puppet Labs Repository for Trusty\nRUN curl -f -o puppet.deb -s https://apt.puppetlabs.com/puppetlabs-release-trusty.deb && \\\n    DEBIAN_FRONTEND=noninteractive dpkg -i puppet.deb > /dev/null && \\\n    rm puppet.deb\n\n# Install puppet, puppetmaster, nginx, and passenger\nRUN apt-get update -q 2 && DEBIAN_FRONTEND=noninteractive \\\n    apt-get --no-install-recommends install --yes -q 2 puppetmaster=$PUPPET_VERSION puppet=$PUPPET_VERSION \\\n        nginx-extras passenger >/dev/null && rm -rf /var/lib/apt/lists/*;\n\n# Install the nginx configuration and sites\nADD conf/nginx/nginx.conf /etc/nginx/nginx.conf\nRUN ln -s /etc/nginx/sites-available/puppetmaster /etc/nginx/sites-enabled/puppetmaster \\\n    && rm /etc/nginx/sites-enabled/default\n\n# Install the Puppet Master's rack server\nRUN mkdir -p /usr/share/puppet/rack/puppetmaster/tmp /usr/share/puppet/rack/puppetmaster/public \\ \n    && chown puppet:puppet -R /usr/share/puppet/rack/puppetmaster\n\n# Backup the Puppet config files, we'll regenerate them on boot if they're not present\nRUN mkdir -p /usr/lib/puppet/default \\\n    && find /etc/puppet -maxdepth 1 -type f -iname \"*.conf\" -exec mv {} /usr/lib/puppet/default \\; \\\n    && cp /usr/share/puppet/ext/rack/config.ru /usr/lib/puppet/default\n\n# Install boot scripts\nADD scripts/10_generate_puppet_config.rb /etc/my_init.d/\nADD scripts/11_generate_nginx_site.rb /etc/my_init.d/\nADD scripts/12_generate_puppetmaster_keys.sh /etc/my_init.d/\nADD scripts/13_add_puppet_cron.sh /etc/my_init.d/\nRUN chmod +x /etc/my_init.d/*\n\n# Install Puppet Agent script\nADD scripts/run-puppet-agent.sh /sbin/run-puppet-agent\nRUN chmod +x /sbin/run-puppet-agent\n\n# Install runit scripts\nADD scripts/nginx-startup.sh /etc/service/nginx/run\nRUN chmod +x /etc/service/nginx/run\n\n# Expose Puppet Master port\nEXPOSE 8140\n\n# use baseimage's init system\nCMD [\"/sbin/my_init\"]\n"
}