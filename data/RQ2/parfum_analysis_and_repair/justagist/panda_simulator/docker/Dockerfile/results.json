{
  "startTime": 1674250590260,
  "endTime": 1674250590734,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM osrf/ros:kinetic-desktop-full-xenial\nFROM osrf/ros:noetic-desktop-full\n\nENV ROS_DISTRO=${ROS_DISTRO}\n\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    build-essential git swig sudo python3-future libcppunit-dev python3-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-$ROS_DISTRO-libfranka \\\n    python3-catkin-tools ros-$ROS_DISTRO-gazebo-ros-control \\\n    ros-${ROS_DISTRO}-rospy-message-converter ros-${ROS_DISTRO}-effort-controllers \\\n    ros-${ROS_DISTRO}-joint-state-controller \\\n    ros-${ROS_DISTRO}-moveit ros-${ROS_DISTRO}-moveit-commander \\\n    ros-${ROS_DISTRO}-moveit-visual-tools ros-${ROS_DISTRO}-combined-robot-hw && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir --upgrade numpy numpy-quaternion==2020.5.11.13.33.35 osrf-pycommon\n\nRUN apt-get update && apt-get upgrade -y\n\n# nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES \\\n    ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES \\\n    ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\n\nLABEL PS_VERSION v1.0.0-noetic\n\n# setup entrypoint, need entrypoint.sh in the same folder with Dockerfile\nCOPY ./ros_entrypoint.sh /\nENTRYPOINT [\"/ros_entrypoint.sh\"]\n\nCMD [\"bash\"]"
}