{
  "startTime": 1674215003835,
  "endTime": 1674215005575,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 44,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 30,
        "columnEnd": 182
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 208
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 10,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 30,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 29,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 10,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 10,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 68,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 30,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 29,
        "columnEnd": 125
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 10,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 9,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 10,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 68,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 9,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM {{BASE_IMAGE}}\n\n#\n# Install Java 11 LTS / OpenJDK 11\n#\nRUN if grep -q Debian /etc/os-release && grep -q stretch /etc/os-release;then \\\n\t\techo 'deb http://deb.debian.org/debian stretch-backports main' | sudo tee -a /etc/apt/sources.list.d/stretch-backports.list; \\\n\telif grep -q Ubuntu /etc/os-release && grep -q xenial /etc/os-release; then \\\n\t\tsudo apt-get update && sudo apt-get install --no-install-recommends -y software-properties-common && \\\n\t\tsudo add-apt-repository -y ppa:openjdk-r/ppa; rm -rf /var/lib/apt/lists/*; \\\n\tfi && \\\n\tsudo apt-get update && sudo apt-get install --no-install-recommends -y openjdk-11-jre openjdk-11-jre-headless openjdk-11-jdk openjdk-11-jdk-headless && \\\n\tsudo apt-get install --no-install-recommends -y bzip2 libgconf-2-4 && rm -rf /var/lib/apt/lists/*; # for extracting firefox and running chrome, respectively\n\n# install firefox\n#\nRUN FIREFOX_URL=\"https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-US\" \\\n  && ACTUAL_URL=$( curl -f -Ls -o /dev/null -w %{url_effective} $FIREFOX_URL) \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/firefox.tar.bz2 $ACTUAL_URL \\\n  && sudo tar -xvjf /tmp/firefox.tar.bz2 -C /opt \\\n  && sudo ln -s /opt/firefox/firefox /usr/local/bin/firefox \\\n  && sudo apt-get install --no-install-recommends -y libgtk3.0-cil-dev libasound2 libasound2 libdbus-glib-1-2 libdbus-1-3 libasound2 \\\n  && rm -rf /tmp/firefox.* \\\n  && firefox --version && rm /tmp/firefox.tar.bz2 && rm -rf /var/lib/apt/lists/*;\n\n# install geckodriver\n\nRUN export GECKODRIVER_LATEST_RELEASE_URL=$( curl -f https://api.github.com/repos/mozilla/geckodriver/releases/latest | jq -r \".assets[] | select(.name | test(\\\"linux64.tar.gz$\\\")) | .browser_download_url\") \\\n     && curl --silent --show-error --location --fail --retry 3 --output /tmp/geckodriver_linux64.tar.gz \"$GECKODRIVER_LATEST_RELEASE_URL\" \\\n     && cd /tmp \\\n     && tar xf geckodriver_linux64.tar.gz \\\n     && rm -rf geckodriver_linux64.tar.gz \\\n     && sudo mv geckodriver /usr/local/bin/geckodriver \\\n     && sudo chmod +x /usr/local/bin/geckodriver \\\n     && geckodriver --version\n\n# install chrome\n\nRUN cd /home/circleci && wget -O google-chrome-stable_current_amd64.deb -t 5 \"https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\" \\\n    && (sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -fy install)  \\\n    && rm -rf google-chrome-stable_current_amd64.deb \\\n    && sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n        \"/opt/google/chrome/google-chrome\" \\\n    && google-chrome --version\n\nRUN CHROME_VERSION=\"$(google-chrome --version)\" \\\n    && export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's/^Google Chrome //')\" && export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*} \\\n    && CHROMEDRIVER_VERSION=$( curl --silent --show-error --location --fail --retry 4 --retry-delay 5 https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROMEDRIVER_RELEASE}) \\\n    && curl --silent --show-error --location --fail --retry 4 --retry-delay 5 --output /tmp/chromedriver_linux64.zip \"https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip\" \\\n    && cd /tmp \\\n    && unzip chromedriver_linux64.zip \\\n    && rm -rf chromedriver_linux64.zip \\\n    && sudo mv chromedriver /usr/local/bin/chromedriver \\\n    && sudo chmod +x /usr/local/bin/chromedriver \\\n    && chromedriver --version\n\n# Google Chrome < v85 had libxss1 as a dependency. It no longer does but people\n# have been depending on it so installing manually.\nRUN sudo apt-get install --no-install-recommends -y libxss1 && rm -rf /var/lib/apt/lists/*;\n\n# start xvfb automatically to avoid needing to express in circle.yml\nENV DISPLAY :99\nRUN printf '#!/bin/sh\\nXvfb :99 -screen 0 1280x1024x24 &\\nexec \"$@\"\\n' > /tmp/entrypoint \\\n  && chmod +x /tmp/entrypoint \\\n        && sudo mv /tmp/entrypoint /docker-entrypoint.sh\n\n# ensure that the build agent doesn't override the entrypoint\nLABEL com.circleci.preserve-entrypoint=true\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/bin/sh\"]\n"
}