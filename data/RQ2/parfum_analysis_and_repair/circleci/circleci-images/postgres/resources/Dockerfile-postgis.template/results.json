{
  "startTime": 1674249823656,
  "endTime": 1674249824481,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 6,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 9,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM {{BASE_IMAGE}}\n\nENV PGUSER $POSTGRES_USER\n# PostGIS version for versions prior to v12 PostgreSQL\n# v12 and above defaults to PostGIS v3\nENV POSTGIS_PKG_VER 2.5\nENV POSTGIS_VERSION 2.5.3\n\nRUN if which apt-get > /dev/null ;then \\\n      if [ $PG_MAJOR -ge 12 ]; then \\\n\t    echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg-testing main\" >> /etc/apt/sources.list.d/pgdg.list && \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n            postgresql-$PG_MAJOR-postgis-3 postgresql-$PG_MAJOR-postgis-3-scripts postgis; \\\n\t  else \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n            postgresql-$PG_MAJOR-postgis-$POSTGIS_PKG_VER postgresql-$PG_MAJOR-postgis-$POSTGIS_PKG_VER-scripts postgis; \\\n\t  fi && \\\n      rm -rf /var/lib/apt/lists/* \\\n    ;else \\\n      apk add --no-cache --virtual .fetch-deps \\\n          ca-certificates \\\n          openssl \\\n          tar \\\n      \\\n      && wget -O postgis.tar.gz \"https://github.com/postgis/postgis/archive/$POSTGIS_VERSION.tar.gz\" \\\n      && mkdir -p /usr/src/postgis \\\n      && tar \\\n          --extract \\\n          --file postgis.tar.gz \\\n          --directory /usr/src/postgis \\\n          --strip-components 1 \\\n      && rm postgis.tar.gz \\\n      \\\n      && apk add --no-cache --virtual .build-deps \\\n          autoconf \\\n          automake \\\n          g++ \\\n          json-c-dev \\\n          libtool \\\n          libxml2-dev \\\n          make \\\n          perl \\\n      \\\n      && apk add --no-cache --virtual .build-deps-testing \\\n          --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n          --repository http://dl-cdn.alpinelinux.org/alpine/edge/main \\\n          gdal-dev \\\n          geos-dev \\\n\t  && wget \"https://download.osgeo.org/proj/proj-4.9.3.tar.gz\" \\\n\t  && wget \"https://download.osgeo.org/proj/proj-datumgrid-1.6.zip\" \\\n\t  && tar xfz proj-4.9.3.tar.gz \\\n\t  && rm proj-4.9.3.tar.gz \\\n\t  && cd proj-4.9.3 \\\n\t\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && mkdir data && cd .. \\\n\t\t\t&& unzip proj-datumgrid-1.6.zip -d proj-4.9.3/data/ \\\n\t\t\t&& rm proj-datumgrid-1.6.zip \\\n\t\t\t&& cd proj-4.9.3 \\\n\t\t\t&& make && make install \\\n      && cd /usr/src/postgis \\\n      && ./autogen.sh \\\n  # configure options taken from:\n  # https://anonscm.debian.org/cgit/pkg-grass/postgis.git/tree/debian/rules?h=jessie\n      && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  #       --with-gui \\\n      && make \\\n      && make install \\\n      && apk add --no-cache --virtual .postgis-rundeps \\\n          json-c \\\n      && apk add --no-cache --virtual .postgis-rundeps-testing \\\n          --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n          geos \\\n          gdal \\\n          wget \\\n      && cd / \\\n      && rm -rf /usr/src/postgis \\\n      && apk del .fetch-deps .build-deps .build-deps-testing \\\n    ; fi\n\nADD https://raw.githubusercontent.com/appropriate/docker-postgis/master/initdb-postgis.sh /docker-entrypoint-initdb.d/postgis.sh\nADD https://raw.githubusercontent.com/appropriate/docker-postgis/master/update-postgis.sh /usr/local/bin/update-postgis.sh\n\nRUN chmod +r /docker-entrypoint-initdb.d/postgis.sh && chmod +rx /usr/local/bin/update-postgis.sh\n"
}