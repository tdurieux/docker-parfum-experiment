diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/robotology/yarp/extern/thrift/thrift/build/docker/ubuntu-bionic/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/robotology/yarp/extern/thrift/thrift/build/docker/ubuntu-bionic/Dockerfile/repaired.Dockerfile
index c8ecd8e..9f492c9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/robotology/yarp/extern/thrift/thrift/build/docker/ubuntu-bionic/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/robotology/yarp/extern/thrift/thrift/build/docker/ubuntu-bionic/Dockerfile/repaired.Dockerfile
@@ -30,15 +30,15 @@ RUN apt-get update && \
       curl \
       dirmngr \
       software-properties-common \
-      wget
+      wget && rm -rf /var/lib/apt/lists/*;
 
 # Dart
-RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
-    curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > \
+RUN curl -f https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
+    curl -f https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > \
       /etc/apt/sources.list.d/dart_stable.list
 
 # dotnet (netcore)
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg && \
     wget -q -O /etc/apt/sources.list.d/microsoft-prod.list https://packages.microsoft.com/config/ubuntu/18.04/prod.list && \
     chown root:root /etc/apt/trusted.gpg.d/microsoft.gpg && \
     chown root:root /etc/apt/sources.list.d/microsoft-prod.list
@@ -48,7 +48,7 @@ RUN wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc |
     echo "deb https://packages.erlang-solutions.com/ubuntu bionic contrib" | tee /etc/apt/sources.list.d/erlang.list
 
 # node.js
-RUN curl -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
+RUN curl -f -sL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
     echo "deb https://deb.nodesource.com/node_10.x bionic main" | tee /etc/apt/sources.list.d/nodesource.list
 
 ### install general dependencies
@@ -70,13 +70,13 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
       pkg-config \
       unzip \
       valgrind \
-      vim
+      vim && rm -rf /var/lib/apt/lists/*;
 ENV PATH /usr/lib/llvm-6.0/bin:$PATH
 
 # lib/as3 (ActionScript)
 RUN mkdir -p /usr/local/adobe/flex/4.6 && \
     cd /usr/local/adobe/flex/4.6 && \
-    wget -q "http://download.macromedia.com/pub/flex/sdk/flex_sdk_4.6.zip" && \
+    wget -q "https://download.macromedia.com/pub/flex/sdk/flex_sdk_4.6.zip" && \
     unzip flex_sdk_4.6.zip
 ENV FLEX_HOME /usr/local/adobe/flex/4.6
 
@@ -87,19 +87,19 @@ RUN apt-get install -y --no-install-recommends \
       libssl-dev \
       qt5-default \
       qtbase5-dev \
-      qtbase5-dev-tools
+      qtbase5-dev-tools && rm -rf /var/lib/apt/lists/*;
 
 ENV SBCL_VERSION 1.5.3
 RUN \
-`# Common Lisp (sbcl) dependencies` \
+ `# Common Lisp (sbcl) dependencies` \
     curl --version && \
-    curl -o sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 -J -L https://sourceforge.net/projects/sbcl/files/sbcl/${SBCL_VERSION}/sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2/download?use_mirror=managedway# && \
+    curl -f -o sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 -J -L https://sourceforge.net/projects/sbcl/files/sbcl/${SBCL_VERSION}/sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2/download?use_mirror=managedway# && \
     tar xjf sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 && \
     cd sbcl-${SBCL_VERSION}-x86-64-linux && \
     ./install.sh && \
     sbcl --version && \
     cd .. && \
-    rm -rf sbcl*
+    rm -rf sbcl* && rm sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2
 
 ENV D_VERSION     2.087.0
 ENV DMD_DEB       dmd_2.087.0-0_amd64.deb
@@ -121,23 +121,23 @@ RUN \
 ENV DART_VERSION 2.4.0-1
 RUN apt-get install -y --no-install-recommends \
       `# Dart dependencies` \
-      dart=$DART_VERSION
+      dart=$DART_VERSION && rm -rf /var/lib/apt/lists/*;
 ENV PATH /usr/lib/dart/bin:$PATH
 
 RUN apt-get install -y --no-install-recommends \
 `# dotnet core dependencies` \
-      dotnet-sdk-3.1
+      dotnet-sdk-3.1 && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Erlang dependencies` \
       erlang && \
     wget https://s3.amazonaws.com/rebar3/rebar3 -O /usr/bin/rebar3 && \
     chmod 755 /usr/bin/rebar3 && \
-    rebar3 --version
+    rebar3 --version && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# GlibC dependencies` \
-      libglib2.0-dev
+      libglib2.0-dev && rm -rf /var/lib/apt/lists/*;
 
 # golang
 ENV GOLANG_VERSION 1.15.7
@@ -152,7 +152,7 @@ RUN curl -fsSL "$GOLANG_DOWNLOAD_URL" -o golang.tar.gz && \
 RUN apt-get install -y --no-install-recommends \
 `# Haskell dependencies` \
       ghc \
-      cabal-install
+      cabal-install && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Haxe dependencies` \
@@ -160,38 +160,38 @@ RUN apt-get install -y --no-install-recommends \
       neko \
       neko-dev && \
     haxelib setup --always /usr/share/haxe/lib && \
-    haxelib install --always hxcpp 2>&1 > /dev/null
+    haxelib install --always hxcpp 2>&1 > /dev/null && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Java dependencies` \
       ant \
       ant-optional \
       maven \
-      openjdk-11-jdk-headless
+      openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Lua dependencies` \
       lua5.2 \
-      lua5.2-dev
+      lua5.2-dev && rm -rf /var/lib/apt/lists/*;
 # https://bugs.launchpad.net/ubuntu/+source/lua5.3/+bug/1707212
 # lua5.3 does not install alternatives!
 # need to update our luasocket code, lua doesn't have luaL_openlib any more
 
 RUN apt-get install -y --no-install-recommends \
 `# Node.js dependencies` \
-      nodejs
+      nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Test dependencies for running puppeteer
 RUN apt-get install -y --no-install-recommends \
 `# JS dependencies` \
-      libxss1
+      libxss1 && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# OCaml dependencies` \
       ocaml \
       opam && \
     opam init --yes && \
-    opam install --yes oasis
+    opam install --yes oasis && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Perl dependencies` \
@@ -200,7 +200,7 @@ RUN apt-get install -y --no-install-recommends \
       libcrypt-ssleay-perl \
       libio-socket-ssl-perl \
       libnet-ssleay-perl \
-      libtest-exception-perl
+      libtest-exception-perl && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Php dependencies` \
@@ -210,7 +210,7 @@ RUN apt-get install -y --no-install-recommends \
       php-json \
       php-pear \
       re2c \
-      composer
+      composer && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Python dependencies` \
@@ -225,7 +225,7 @@ RUN apt-get install -y --no-install-recommends \
       python-twisted \
       python-wheel \
       python-zope.interface && \
-   pip install --upgrade backports.ssl_match_hostname
+   pip install --no-cache-dir --upgrade backports.ssl_match_hostname && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Python3 dependencies` \
@@ -238,13 +238,13 @@ RUN apt-get install -y --no-install-recommends \
       python3-tornado \
       python3-twisted \
       python3-wheel \
-      python3-zope.interface
+      python3-zope.interface && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Ruby dependencies` \
       ruby \
       ruby-dev \
-      ruby-bundler
+      ruby-bundler && rm -rf /var/lib/apt/lists/*;
 
 # Rust dependencies
 RUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain 1.40.0 -y
@@ -262,10 +262,10 @@ RUN apt-get install -y --no-install-recommends \
 `# Static Code Analysis dependencies` \
       cppcheck \
       sloccount && \
-    pip install flake8 && \
+    pip install --no-cache-dir flake8 && \
     wget -q "https://launchpad.net/ubuntu/+source/cppcheck/1.83-2/+build/14874703/+files/cppcheck_1.83-2_amd64.deb" && \
     dpkg -i cppcheck_1.83-2_amd64.deb && \
-    rm cppcheck_1.83-2_amd64.deb
+    rm cppcheck_1.83-2_amd64.deb && rm -rf /var/lib/apt/lists/*;
 
 # Clean up
 RUN rm -rf /var/cache/apt/* && \