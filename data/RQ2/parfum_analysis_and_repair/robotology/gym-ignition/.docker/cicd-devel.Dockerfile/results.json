{
  "startTime": 1674253859281,
  "endTime": 1674253860397,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG from=diegoferigo/gym-ignition:base\nFROM ${from}\n\nRUN pip3 install --no-cache-dir vcstool colcon-common-extensions && \\\n    rm -r $HOME/.cache/pip\n\nARG CMAKE_BUILD_TYPE=\"Release\"\nARG ignition_codename=\"fortress\"\nARG IGNITION_DEFAULT_CHANNEL=\"stable\"\n\nRUN echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-${IGNITION_DEFAULT_CHANNEL} `lsb_release -cs` main\" > \\\n        /etc/apt/sources.list.d/gazebo-${IGNITION_DEFAULT_CHANNEL}.list && \\\n    wget https://packages.osrfoundation.org/gazebo.key -O - | apt-key add - && \\\n    apt-get update && \\\n    mkdir -p /workspace/src && \\\n    cd /workspace/src && \\\n    wget https://raw.githubusercontent.com/ignition-tooling/gazebodistro/master/collection-${ignition_codename}.yaml && \\\n    vcs import < collection-${ignition_codename}.yaml && \\\n    apt -y install --no-install-recommends \\\n        $(sort -u $(find . -iname 'packages-'$(lsb_release -cs)'.apt' -o -iname 'packages.apt') | grep -v -E \"dart|^libignition|^libsdformat\" | tr '\\n' ' ') && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    cd /workspace && \\\n    colcon graph && \\\n    colcon build \\\n        --cmake-args \\\n            -GNinja \\\n            -DBUILD_TESTING:BOOL=OFF \\\n            -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} \\\n        --merge-install \\\n        && \\\n    find build/ -type f -not -name 'CMakeCache.txt' -delete && \\\n    echo \"source /workspace/install/setup.bash\" >> /etc/bash.bashrc\n\n# Source /etc/bash.bashrc before each command\nSHELL [\"/bin/bash\", \"-i\", \"-c\"]\n\nCOPY entrypoint.sh /entrypoint.sh\nCOPY setup_virtualenv.sh /setup_virtualenv.sh\nRUN chmod 755 /entrypoint.sh\nRUN chmod 755 /setup_virtualenv.sh\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"bash\"]\n"
}