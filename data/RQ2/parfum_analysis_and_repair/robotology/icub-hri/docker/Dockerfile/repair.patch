diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/robotology/icub-hri/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/robotology/icub-hri/docker/Dockerfile/repaired.Dockerfile
index 770fc8c..c56418d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/robotology/icub-hri/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/robotology/icub-hri/docker/Dockerfile/repaired.Dockerfile
@@ -11,7 +11,7 @@ RUN echo "HEAD /" | nc `cat /tmp/host_ip.txt` 8000 | grep squid-deb-proxy \
 
 #create icub user
 RUN apt-get update && \
-    apt-get -y install sudo git
+    apt-get -y --no-install-recommends install sudo git && rm -rf /var/lib/apt/lists/*;
 
 RUN useradd -m icub && echo "icub:icub" | chpasswd && adduser icub sudo && usermod -aG video icub && usermod -s /bin/bash icub
 
@@ -27,7 +27,7 @@ WORKDIR $SRC_FOLDER
 RUN git clone https://github.com/opencv/opencv.git 	
 RUN git clone https://github.com/opencv/opencv_contrib.git
 RUN git clone https://github.com/robotology/yarp.git
-RUN git clone https://github.com/robotology/icub-main.git 
+RUN git clone https://github.com/robotology/icub-main.git
 RUN git clone https://github.com/robotology/icub-contrib-common.git
 RUN git clone https://github.com/kmarkus/rFSM.git
 RUN git clone https://github.com/robotology/robots-configuration.git
@@ -48,7 +48,7 @@ RUN git clone https://github.com/towardthesea/karmaWYSIWYD.git
 
 # Install icub ppa
 RUN sh -c 'echo "deb http://www.icub.org/ubuntu xenial contrib/science" > /etc/apt/sources.list.d/icub.list'
-RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 57A5ACB6110576A6 && apt-get update && apt-get install -y wget
+RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 57A5ACB6110576A6 && apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;
 
 #Python
 RUN wget https://repo.continuum.io/archive/Anaconda2-4.2.0-Linux-x86_64.sh
@@ -60,76 +60,76 @@ RUN cd $SRC_FOLDER && bash Anaconda2-4.2.0-Linux-x86_64.sh -b -p ./anaconda2 	&&
 	rm -r $SRC_FOLDER/anaconda2/lib/cmake/Qt5*
 
 #Install required libraries
-RUN apt-get update && apt-get install -y icub-common 		\
-	build-essential 	\
-	cmake-curses-gui 	\
-	pciutils 			\
-	wget 				\
-	libgtk2.0-dev 		\
-	mesa-utils git 		\
-	pkg-config 			\
-	libavcodec-dev 		\
-	libavformat-dev 	\
-	libswscale-dev 		\
-	libtbb2 			\
-	libtbb-dev 			\
-	libjpeg-dev 		\
-	libpng-dev 			\
-	libtiff-dev 		\
-	libjasper-dev 		\
-	libdc1394-22-dev 	\
-	checkinstall 		\
-	libopenblas-dev 	\
-	liblapack-dev 		\
-	liblapacke-dev 		\
-	libboost-all-dev 	\
-	doxygen 			\
-	libeigen3-dev 		\
-	bash-completion 	\
-	apt-utils  			\
-	vim					\
-	net-tools			\
+RUN apt-get update && apt-get install --no-install-recommends -y icub-common \
+	build-essential \
+	cmake-curses-gui \
+	pciutils \
+	wget \
+	libgtk2.0-dev \
+	mesa-utils git \
+	pkg-config \
+	libavcodec-dev \
+	libavformat-dev \
+	libswscale-dev \
+	libtbb2 \
+	libtbb-dev \
+	libjpeg-dev \
+	libpng-dev \
+	libtiff-dev \
+	libjasper-dev \
+	libdc1394-22-dev \
+	checkinstall \
+	libopenblas-dev \
+	liblapack-dev \
+	liblapacke-dev \
+	libboost-all-dev \
+	doxygen \
+	libeigen3-dev \
+	bash-completion \
+	apt-utils \
+	vim \
+	net-tools \
 	software-properties-common \
-	swig3.0				\
-	liblua5.2-dev	    \
-	xterm 				\
-	gdb					\
-	gedit				\
-	libopenblas-dev		\
-	libatlas-dev		\
-	libboost-all-dev	\
-	libprotobuf-dev 	\
-	protobuf-compiler	\
-	libgoogle-glog-dev	\
-	libgflags-dev		\
-	libleveldb-dev		\
-	libhdf5-serial-dev	\
-	liblmdb-dev			\
-	libsnappy-dev		\
-	hdf5-tools 			\
-	libatlas-base-dev 	\
-	libatlas3-base		\
-	libglew-dev 		\
-	libdevil-dev		\
-	python-tk 			\
-	usbutils 			\
-	iputils-ping 		\
-	openssh-server 		\
-	libopenni-dev 		\
-	bison 				\
-	flex 				\
-	libpq-dev			\
-	libsqlite3-dev		\
-	postgresql 			\
-	pgadmin3			\
-	expect 				\
-	libasound2 			\
-	libpango1.0-0 		\
-	pulseaudio-utils 	\
-	alsa-base 			\
-	alsa-utils
-
-ENV PYTHONPATH=$SRC_FOLDER/anaconda2/bin 
+	swig3.0 \
+	liblua5.2-dev \
+	xterm \
+	gdb \
+	gedit \
+	libopenblas-dev \
+	libatlas-dev \
+	libboost-all-dev \
+	libprotobuf-dev \
+	protobuf-compiler \
+	libgoogle-glog-dev \
+	libgflags-dev \
+	libleveldb-dev \
+	libhdf5-serial-dev \
+	liblmdb-dev \
+	libsnappy-dev \
+	hdf5-tools \
+	libatlas-base-dev \
+	libatlas3-base \
+	libglew-dev \
+	libdevil-dev \
+	python-tk \
+	usbutils \
+	iputils-ping \
+	openssh-server \
+	libopenni-dev \
+	bison \
+	flex \
+	libpq-dev \
+	libsqlite3-dev \
+	postgresql \
+	pgadmin3 \
+	expect \
+	libasound2 \
+	libpango1.0-0 \
+	pulseaudio-utils \
+	alsa-base \
+	alsa-utils && rm -rf /var/lib/apt/lists/*;
+
+ENV PYTHONPATH=$SRC_FOLDER/anaconda2/bin
 ENV PATH=$PYTHONPATH:$PATH
 
 RUN wget https://download.sublimetext.com/sublime-text_build-3126_amd64.deb && \
@@ -166,7 +166,7 @@ RUN mkdir opencv3/build 	&& cd opencv3/build 	&& mkdir ./install 							&& \
 				-DPYTHON2_PACKAGES_PATH=$SRC_FOLDER/anaconda2/lib/python2.7/site-packages 						&& 	\
 	make -j$cores && make -j$cores install
 
-ENV OPENCV_DIR=$SRC_FOLDER/opencv3 OPENCV_ROOT=$SRC_FOLDER/opencv3/build/install 
+ENV OPENCV_DIR=$SRC_FOLDER/opencv3 OPENCV_ROOT=$SRC_FOLDER/opencv3/build/install
 ENV OPENCV_LIB=$OPENCV_ROOT/lib OPENCV_BIN=$OPENCV_ROOT/bin \
 	OPENCV_INCLUDE=$OPENCV_ROOT/include OPENCV_PYTHONLIB=$OPENCV_DIR/build/lib
 ENV PATH=$OPENCV_BIN:$OPENCV_INCLUDE:$PATH \
@@ -211,7 +211,7 @@ RUN mkdir yarp/build && cd yarp/build 									&& 	\
 				-DENABLE_yarpmod_serial=ON 									\
 				-DENABLE_yarpmod_serialport=ON 								\
 				-DYARP_USE_PYTHON_VERSION=2								&& 	\
-	make -j$cores && make install 
+	make -j$cores && make install
 
 ENV LUA_CPATH=$SRC_FOLDER/yarp/build/lib/lua/?.so  YARP_ROOT=$SRC_FOLDER/yarp
 ENV YARP_DIR=$YARP_ROOT/build/install
@@ -238,7 +238,7 @@ RUN mkdir icub-main/build 	&& 	cd icub-main/build 			&& 	\
 			 -DENABLE_icubmod_cartesiancontrollerserver=ON 	&&	\
 	make -j$cores && make -j$cores install
 
-ENV ICUB_ROOT=$SRC_FOLDER/icub-main 
+ENV ICUB_ROOT=$SRC_FOLDER/icub-main
 ENV ICUB_DIR=$ICUB_ROOT/build/install
 ENV ICUB_LIB=$ICUB_DIR/lib 	\
 	ICUB_BIN=$ICUB_DIR/bin 	\
@@ -252,7 +252,7 @@ RUN mkdir icub-contrib-common/build && cd icub-contrib-common/build							&& 	\
 			 -DCMAKE_BUILD_TYPE=Release														&&	\
 	make && make install
 
-ENV ICUBCONTRIB_ROOT=$SRC_FOLDER/icub-contrib-common 
+ENV ICUBCONTRIB_ROOT=$SRC_FOLDER/icub-contrib-common
 ENV ICUBCONTRIB_DIR=$ICUBCONTRIB_ROOT/build/install
 ENV ICUBCONTRIB_BIN=$ICUBCONTRIB_DIR/bin \
 	CMAKE_PREFIX_PATH=$ICUBCONTRIB_DIR
@@ -285,7 +285,7 @@ RUN cd caffe && git checkout -b localBranch $caffeHash && mkdir build 	&& cd bui
 	make -j$cores && make -j$cores install
 RUN cd caffe && scripts/download_model_binary.py models/bvlc_reference_caffenet && \
 	./data/ilsvrc12/get_ilsvrc_aux.sh
-ENV CAFFE_ROOT=$SRC_FOLDER/caffe/build 
+ENV CAFFE_ROOT=$SRC_FOLDER/caffe/build
 ENV CAFFE_DIR=$CAFFE_ROOT/install
 ENV CAFFE_LIB=$CAFFE_DIR/lib 	\
 	CAFFE_BIN=$CAFFE_DIR/bin
@@ -314,7 +314,7 @@ ENV PATH=$SIFTGPU_BIN:$SIFTGPU_INCLUDE_DIRS:$PATH \
 	LD_LIBRARY_PATH=$SIFTGPU_LIB:$LIBSVMLIN_DIR:$LUA_PATH:$LD_LIBRARY_PATH
 
 #LIBLINEAR
-RUN cd himrep && wget https://www.csie.ntu.edu.tw/~cjlin/liblinear/oldfiles/liblinear-1.91.tar.gz 
+RUN cd himrep && wget https://www.csie.ntu.edu.tw/~cjlin/liblinear/oldfiles/liblinear-1.91.tar.gz
 RUN cd himrep && tar xvzf liblinear-1.91.tar.gz && rm liblinear-1.91.tar.gz
 RUN cd himrep/liblinear-1.91 && mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=RELEASE && make && cp libLiblinear.a ../
 ENV LIBSVMLIN_DIR=$SRC_FOLDER/himrep/liblinear-1.91
@@ -375,7 +375,7 @@ RUN cd iol && git checkout -b localBranch $iolHash && mkdir build && cd build 	&
 #NITE
 ARG NITED=NITE-Bin-Dev-Linux-x64-v1.5.2.21
 ARG NITEZ=nite-bin-linux-x64-v1.5.2.21.tar.bz2
-RUN wget http://ilab.usc.edu/packages/forall/ubuntu-12.04lts/old/nite-bin-linux-x64-v1.5.2.21.tar.bz2
+RUN wget https://ilab.usc.edu/packages/forall/ubuntu-12.04lts/old/nite-bin-linux-x64-v1.5.2.21.tar.bz2
 RUN tar xvfj $NITEZ && cd $NITED && ./install.sh && rm $SRC_FOLDER/$NITEZ
 
 #SensorKinect
@@ -392,7 +392,7 @@ RUN cd kinect-wrapper && git checkout -b localBranch $kinectHash && mkdir build
 	make -j$cores && make -j$cores install
 
 USER root
-RUN pip install --upgrade pip && pip install paramz && conda install ipyparallel -y && conda install 'pyqt<5' -y
+RUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir paramz && conda install ipyparallel -y && conda install 'pyqt<5' -y
 
 ARG karmaWYSIWYDHash=e14488ffc7fcca750db54122174fe8c06fa397a0
 RUN cd karmaWYSIWYD && git checkout -b localBranch $karmaWYSIWYDHash && mkdir build && cd build && 	\
@@ -403,7 +403,7 @@ RUN cd karmaWYSIWYD && git checkout -b localBranch $karmaWYSIWYDHash && mkdir bu
 
 # Git clone GPY and WYSIWYD
 ARG GPYHash=845168af3bb5e61dafed4dd860644546e9c4666a
-RUN cd GPy && git checkout -b localBranch $GPYHash && python setup.py build_ext --inplace 
+RUN cd GPy && git checkout -b localBranch $GPYHash && python setup.py build_ext --inplace
 ENV GPY_ROOT=$SRC_FOLDER/GPy \
 	GPY_DIR=$SRC_FOLDER/GPy/build
 
@@ -416,7 +416,7 @@ ENV GPY_ROOT=$SRC_FOLDER/GPyOpt \
 ENV PYTHONPATH=$PYTHONPATH:$GPYOPT_DIR:$GPYOPT_ROOT
 
 #Install dlib
-RUN wget http://dlib.net/files/dlib-19.2.tar.bz2 && tar xvfj dlib-19.2.tar.bz2 && \
+RUN wget https://dlib.net/files/dlib-19.2.tar.bz2 && tar xvfj dlib-19.2.tar.bz2 && \
 	cd dlib-19.2/examples && mkdir build && cd build && \
 	cmake .. -DOpenCV_DIR=$SRC_FOLDER/opencv3/build/install/share/OpenCV && make -j$cores && rm $SRC_FOLDER/dlib-19.2.tar.bz2
 
@@ -457,7 +457,7 @@ RUN cd icub-client && git checkout -b localBranch $icubClientHash && mkdir build
  				-DICUBCLIENT_COMPILE_TESTS=ON 													&& 	\
 	make -j$cores && make -j$cores install
 
-ENV ICUBCLIENT_ROOT=$SRC_FOLDER/icub-client/build 
+ENV ICUBCLIENT_ROOT=$SRC_FOLDER/icub-client/build
 ENV ICUBCLIENT_DIR=$ICUBCLIENT_ROOT/install 									\
 	ICUBCLIENT_BIN=$ICUBCLIENT_ROOT/install/bin 								\
 	ICUBCLIENT_LIB=$ICUBCLIENT_ROOT/install/lib