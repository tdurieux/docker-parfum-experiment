{
  "startTime": 1674252028174,
  "endTime": 1674252028698,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install dependencies only when needed\nFROM node:lts-alpine AS deps\n\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\n\nENV PATH /app/node_modules/.bin:$PATH\n\nCOPY package.json yarn.lock ./\nCOPY ./packages/common/package.json ./packages/common/\nCOPY ./packages/eden-subchain-client/package.json ./packages/eden-subchain-client/\nCOPY ./packages/box/package.json ./packages/box/\n\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# Rebuild the source code only when needed\nFROM node:lts-alpine AS builder\nWORKDIR /app\n\nCOPY ./packages/common ./packages/common\nCOPY ./packages/eden-subchain-client ./packages/eden-subchain-client\nCOPY ./packages/box ./packages/box\nCOPY .eslintignore .eslintrc.js .prettierrc.json lerna.json package.json tsconfig.build.json tsconfig.json yarn.lock ./\n\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY --from=deps /app/packages/common/node_modules ./packages/common/node_modules\nCOPY --from=deps /app/packages/box/node_modules ./packages/box/node_modules\nCOPY ./build/eden-micro-chain.wasm /app/build/\n\nRUN yarn build --stream\n\n# Production image, copy all the files and run next\nFROM node:lts-alpine AS runner\nWORKDIR /app\n\nENV NODE_ENV production\n\n# You only need to copy next.config.js if you are NOT using the default configuration\nCOPY --from=builder /app .\n\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S box -u 1001\nRUN chown -R box:nodejs /app\nUSER box\n\nEXPOSE 3032\n\nCMD [\"yarn\", \"start\", \"--stream\"]\n"
}