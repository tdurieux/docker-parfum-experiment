{
  "startTime": 1674253928757,
  "endTime": 1674253929990,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------\n# Copyright(C) 2019 Intel Corporation.\n# Licensed under the MIT License.\n#--------------------------------------------------------------------------\n\nFROM ubuntu:18.04\n\nARG DEVICE=CPU_FP32\nARG ONNXRUNTIME_REPO=https://github.com/microsoft/onnxruntime.git\nARG ONNXRUNTIME_BRANCH=master\n\nWORKDIR /code\nARG MY_ROOT=/code\n\nENV PATH /opt/miniconda/bin:/code/cmake-3.14.3-Linux-x86_64/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/miniconda/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\n\nENV INTEL_OPENVINO_DIR=/opt/intel/openvino_2021.3.394\nENV InferenceEngine_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/share\nENV IE_PLUGINS_PATH=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/lib/intel64\nENV LD_LIBRARY_PATH=/opt/intel/opencl:${INTEL_OPENVINO_DIR}/inference_engine/external/gna/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/mkltiny_lnx/lib:$INTEL_OPENVINO_DIR/deployment_tools/ngraph/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/omp/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/lib:${IE_PLUGINS_PATH}:${LD_LIBRARY_PATH}\nENV OpenCV_DIR=${INTEL_OPENVINO_DIR}/opencv/share/OpenCV\nENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/opencv/lib:${INTEL_OPENVINO_DIR}/opencv/share/OpenCV/3rdparty/lib:${LD_LIBRARY_PATH}\nENV HDDL_INSTALL_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/hddl\nENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/hddl/lib:$LD_LIBRARY_PATH\nENV ngraph_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/ngraph/cmake\nENV LANG en_US.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\n\n\nRUN apt update && apt -y install --no-install-recommends apt-transport-https ca-certificates gnupg python3 python3-pip udev unzip zip x11-apps lsb-core wget curl cpio sudo libboost-python-dev libpng-dev zlib1g-dev git libnuma1 ocl-icd-libopencl1 clinfo libboost-filesystem1.65-dev libboost-thread1.65-dev protobuf-compiler libprotoc-dev autoconf automake libtool libjson-c-dev unattended-upgrades && \\\n    unattended-upgrade && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    cd /opt && \\\n# libusb1.0.22\n    curl -f -L https://github.com/libusb/libusb/archive/v1.0.22.zip --output v1.0.22.zip && \\\n    unzip v1.0.22.zip && \\\n    cd /opt/libusb-1.0.22 && \\\n# bootstrap steps\n    ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-udev --enable-shared && \\\n    make -j4 && \\\n    cd /opt/libusb-1.0.22/libusb && \\\n# configure libusb1.0.22\n    /bin/mkdir -p '/usr/local/lib' && \\\n    /bin/bash ../libtool --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' && \\\n    /bin/mkdir -p '/usr/local/include/libusb-1.0' && \\\n    /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' && \\\n    /bin/mkdir -p '/usr/local/lib/pkgconfig' && \\\n# Install OpenVINO\n    cd ${MY_ROOT} && \\\n    wget https://apt.repos.intel.com/openvino/2021/GPG-PUB-KEY-INTEL-OPENVINO-2021 && \\\n    apt-key add GPG-PUB-KEY-INTEL-OPENVINO-2021 && rm GPG-PUB-KEY-INTEL-OPENVINO-2021 && \\\n    cd /etc/apt/sources.list.d && \\\n    echo \"deb https://apt.repos.intel.com/openvino/2021 all main\">intel-openvino-2021.list && \\\n    apt update && \\\n    apt -y --no-install-recommends install intel-openvino-dev-ubuntu18-2021.3.394 && \\\n    cd ${INTEL_OPENVINO_DIR}/install_dependencies && ./install_openvino_dependencies.sh -y && \\\n    cd ${INTEL_OPENVINO_DIR} && rm -rf documentation data_processing && cd deployment_tools/ && rm -rf model_optimizer tools open_model_zoo demo && cd inference_engine && rm -rf samples && \\\n    cd /opt/libusb-1.0.22/ && \\\n    /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' && \\\n    cp /opt/intel/openvino_2021/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ && \\\n    ldconfig && \\\n# Install GPU runtime and drivers\n    cd ${MY_ROOT} && \\\n    mkdir /tmp/opencl && \\\n    cd /tmp/opencl && \\\n    apt update && \\\n    apt install -y --no-install-recommends ocl-icd-libopencl1 && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-gmmlib_19.3.2_amd64.deb\" && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-igc-core_1.0.2597_amd64.deb\" && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-igc-opencl_1.0.2597_amd64.deb\" && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-opencl_19.41.14441_amd64.deb\" && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/19.41.14441/intel-ocloc_19.41.14441_amd64.deb\" && \\\n    dpkg -i /tmp/opencl/*.deb && \\\n    ldconfig && \\\n    rm -rf /tmp/opencl && \\\n    cd ${MY_ROOT} && \\\n    locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8 && \\\n    pip3 install --no-cache-dir cython && \\\n# Download and build ONNX Runtime\n    cd ${MY_ROOT} && \\\n    git clone --recursive -b ${ONNXRUNTIME_BRANCH} ${ONNXRUNTIME_REPO} && \\\n    /bin/sh onnxruntime/dockerfiles/scripts/install_common_deps.sh && \\\n    cd onnxruntime/cmake/external/onnx && python3 setup.py install && \\\n    cd ${MY_ROOT}/onnxruntime && ./build.sh --config Release --update --build --parallel --use_openvino ${DEVICE} --build_shared_lib --build_wheel && \\\n    pip install --no-cache-dir build/Linux/Release/dist/*-linux_x86_64.whl && \\\n    cd ${MY_ROOT}/ && rm -rf onnxruntime && cd /opt && rm -rf v1.0.22.zip && cd ${MY_ROOT} && \\\n    apt remove -y cmake && cd /usr/share/python-wheels/ && rm -rf *.whl && \\\n    cd /usr/lib/ && rm -rf python2.7 python3.6 python3.8 && cd && rm -rf .cache\n"
}