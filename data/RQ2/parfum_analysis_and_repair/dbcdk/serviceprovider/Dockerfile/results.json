{
  "startTime": 1674251072427,
  "endTime": 1674251073767,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_BASEIMAGE=docker-dbc.artifacts.dbccloud.dk/dbc-node:latest\n# ---- Base Node ----\nFROM  $NODE_BASEIMAGE AS build\n# set working directory\nWORKDIR /home/node/app\n# copy project file\nCOPY . .\nCOPY .babelrc .\n\nENV CI=true\n\n# install postgres for test purposes\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y postgresql && rm -rf /var/lib/apt/lists/*;\n\n# install node packages\nRUN npm set progress=false && npm config set depth 0 && \\\n  npm install --only=production && \\\n  mkdir prod_build && \\\n  cp -R --preserve=links node_modules prod_build/node_modules && \\\n  npm install && npm cache clean --force;\n\n# make produktion build\nRUN cp -R src prod_build/src && \\\n  cp -R package.json prod_build/package.json && \\\n  cp -R doc prod_build/doc && \\\n  cp -R .babelrc prod_build/.babelrc && \\\n  cp -R context-sample.json prod_build/context.json\n\n\nUSER postgres\n\nRUN /etc/init.d/postgresql start &&\\\n  psql --command \"CREATE USER storage WITH SUPERUSER PASSWORD 'storage';\" &&\\\n  createdb -O storage storage\n\nUSER root\nENV PG_CONNECTION_STRING=\"postgresql://storage:storage@localhost:5432/storage\"\n\n# run test @see package.json\nRUN ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime\nRUN dpkg-reconfigure -f noninteractive tzdata\nENV HTTP_ONLY=true\nRUN /etc/init.d/postgresql start &&\\\n  npm run test\n\n#\n# ---- Release ----\nFROM $NODE_BASEIMAGE AS release\nWORKDIR /home/node/app\nENV  BABEL_CACHE_PATH=~/app/babel.cache.json\nCOPY --chown=node:node --from=build /home/node/app/prod_build ./\nEXPOSE 3000\nUSER node\nCMD node src/main.js\n"
}