{
  "startTime": 1674219670041,
  "endTime": 1674219671290,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 31,
        "columnStart": 64,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 31,
        "columnStart": 64,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base configuration\nFROM ubuntu:18.04 as base\nENV DEBIAN_FRONTEND=noninteractive\n\n# install required packages\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common sudo curl && rm -rf /var/lib/apt/lists/*;\n\n# configure user\nRUN useradd -ms /bin/bash -u 1337 rpi && adduser rpi sudo && echo 'rpi ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nRUN add-apt-repository ppa:ondrej/php\n\nRUN apt-get update && \\\n    curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install --no-install-recommends -y \\\n    build-essential cron sqlite3 curl unzip supervisor \\\n    nginx ssh nodejs git redis-server \\\n    dnsmasq kpartx nfs-kernel-server \\\n    php8.0-fpm php8.0-cli \\\n    php8.0-sqlite3 \\\n    php8.0-redis \\\n    php8.0-gd \\\n    php8.0-ssh2 \\\n    php8.0-curl \\\n    php8.0-imap \\\n    php8.0-mbstring \\\n    php8.0-xml \\\n    php8.0-zip \\\n    php8.0-bcmath \\\n    php8.0-intl \\\n    php8.0-readline \\\n    php8.0-msgpack \\\n    php8.0-igbinary && \\\n    php -r \"readfile('http://getcomposer.org/installer');\" | php -- --install-dir=/usr/bin/ --filename=composer && \\\n    mkdir /run/php && \\\n    apt-get -y autoremove && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /nfs/backups /nfs/boot /nfs/root && chown -R rpi:rpi /nfs/backups\n#RUN mkdir -p /nfs/backups /.data/baseImage/boot /.data/baseImage/root\n#RUN ln -s /.data/baseImage/boot /nfs/boot && ln -s /.data/baseImage/root /nfs/root\nVOLUME /nfs\n\n# configure dnsmasq\nRUN echo \"ENABLED=1\\nIGNORE_RESOLVCONF=yes\" > /etc/default/dnsmasq\n\n# configure nginx\nCOPY .docker/config/nginx/nginx.conf /etc/nginx/nginx.conf\n\n# configure php-fpm\nCOPY .docker/config/php-fpm/php-fpm.conf /etc/php/8.0/fpm/php-fpm.conf\nCOPY .docker/config/php-fpm/www.conf /etc/php/8.0/fpm/pool.d/www.conf\n\n# configure supervisor\nCOPY .docker/config/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# configure crontab\nCOPY .docker/schedule.sh /schedule.sh\nRUN chmod +x /schedule.sh\n\n# configure nfs\nCOPY .docker/config/nfs-exports /etc/exports\n\n# entrypoint\nCOPY .docker/start-container /usr/local/bin/start-container\nRUN chmod +x /usr/local/bin/start-container\n\n# development only configuration\nFROM base as development\n\nENTRYPOINT [\"start-container\"]\n\n# production only configuration\nFROM base as production\n\n# dnsmasq\nCOPY .docker/config/dnsmasq/pxeservice.conf /etc/dnsmasq.d/pxeservice.conf\n\n# nginx\nRUN rm /etc/nginx/sites-enabled/default\nCOPY .docker/config/nginx/virtualhosts/api.conf /etc/nginx/sites-enabled/api.conf\nCOPY .docker/config/nginx/virtualhosts/web.conf /etc/nginx/sites-enabled/web.conf\n\nRUN mkdir /baseImages /api /web && chown rpi:rpi /baseImages\n\nUSER rpi\nRUN git clone https://github.com/knobik/rpicloud.git /tmp/rpicloud && \\\n    composer install -d /tmp/rpicloud/api && \\\n    bash -c \"cd /tmp/rpicloud/web && npm install && npm run build\"\n\nUSER root\n\nRUN mkdir -p /.data && chown -R rpi:rpi /.data\nVOLUME /.data\n\n# cleanup\nRUN mv /tmp/rpicloud/api / && \\\n    mv /tmp/rpicloud/web/dist /web/dist && \\\n    rm -rf /tmp/rpicloud\n\nENTRYPOINT [\"start-container\"]\n"
}