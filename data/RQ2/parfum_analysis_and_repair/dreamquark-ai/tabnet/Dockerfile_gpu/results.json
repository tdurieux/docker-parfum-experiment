{
  "startTime": 1674251837372,
  "endTime": 1674251839188,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 1,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 199,
        "lineEnd": 199,
        "columnStart": 18,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 199,
        "lineEnd": 199,
        "columnStart": 18,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# GENERATED FROM SCRIPTS\nFROM nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04@sha256:5f16bff6a7272eed75d070b13020c98f89fc5be4ebf6cdc95adffa2b5dce4a31\n\n# Avoid tzdata interactive action\nENV DEBIAN_FRONTEND noninteractive\n\n# Adding Python to image\n\n# Dockerfile generated fragment to install Python and Pip\n# Source: https://raw.githubusercontent.com/docker-library/python/master/3.7/slim-buster/Dockerfile\n# Python: 3.7.13\n# Pip: 22.0.4\n\n\n\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# runtime dependencies\nRUN set -eux; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tnetbase \\\n\t\ttzdata \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*\n\nENV GPG_KEY 0D96DF4D4110E5C43FBFB17F2D347EA6AA65421D\nENV PYTHON_VERSION 3.7.13\n\nRUN set -eux; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tdpkg-dev \\\n\t\tgcc \\\n\t\tgnupg dirmngr \\\n\t\tlibbluetooth-dev \\\n\t\tlibbz2-dev \\\n\t\tlibc6-dev \\\n\t\tlibexpat1-dev \\\n\t\tlibffi-dev \\\n\t\tlibgdbm-dev \\\n\t\tliblzma-dev \\\n\t\tlibncursesw5-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tmake \\\n\t\ttk-dev \\\n\t\tuuid-dev \\\n\t\twget \\\n\t\txz-utils \\\n\t\tzlib1g-dev \\\n\t; \\\n\t\\\n\twget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"; \\\n\twget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"; \\\n\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\"; \\\n\tgpg --batch --verify python.tar.xz.asc python.tar.xz; \\\n\tcommand -v gpgconf > /dev/null && gpgconf --kill all || :; \\\n\trm -rf \"$GNUPGHOME\" python.tar.xz.asc; \\\n\tmkdir -p /usr/src/python; \\\n\ttar --extract --directory /usr/src/python --strip-components=1 --file python.tar.xz; \\\n\trm python.tar.xz; \\\n\t\\\n\tcd /usr/src/python; \\\n\tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\t./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-optimizations \\\n\t\t--enable-option-checking=fatal \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--without-ensurepip \\\n\t; \\\n\tnproc=\"$(nproc)\"; \\\n\tmake -j \"$nproc\" \\\n\t\tLDFLAGS=\"-Wl,--strip-all\" \\\n# setting PROFILE_TASK makes \"--enable-optimizations\" reasonable: https://bugs.python.org/issue36044 / https://github.com/docker-library/python/issues/160#issuecomment-509426916\n\t\tPROFILE_TASK='-m test.regrtest --pgo \\\n\t\t\ttest_array \\\n\t\t\ttest_base64 \\\n\t\t\ttest_binascii \\\n\t\t\ttest_binhex \\\n\t\t\ttest_binop \\\n\t\t\ttest_bytes \\\n\t\t\ttest_c_locale_coercion \\\n\t\t\ttest_class \\\n\t\t\ttest_cmath \\\n\t\t\ttest_codecs \\\n\t\t\ttest_compile \\\n\t\t\ttest_complex \\\n\t\t\ttest_csv \\\n\t\t\ttest_decimal \\\n\t\t\ttest_dict \\\n\t\t\ttest_float \\\n\t\t\ttest_fstring \\\n\t\t\ttest_hashlib \\\n\t\t\ttest_io \\\n\t\t\ttest_iter \\\n\t\t\ttest_json \\\n\t\t\ttest_long \\\n\t\t\ttest_math \\\n\t\t\ttest_memoryview \\\n\t\t\ttest_pickle \\\n\t\t\ttest_re \\\n\t\t\ttest_set \\\n\t\t\ttest_slice \\\n\t\t\ttest_struct \\\n\t\t\ttest_threading \\\n\t\t\ttest_time \\\n\t\t\ttest_traceback \\\n\t\t\ttest_unicode \\\n\t\t' \\\n\t; \\\n\tmake install && cd /usr/local; \\\n\t\\\n\tcd /; \\\n\trm -rf /usr/src/python; \\\n\t\\\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name 'libpython*.a' \\) \\) \\\n\t\t\t-o \\( -type f -a -name 'wininst-*.exe' \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t; \\\n\t\\\n\tldconfig; \\\n\t\\\n\tapt-mark auto '.*' > /dev/null; \\\n\tapt-mark manual $savedAptMark; \\\n\tfind /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { print $(NF-1) }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t\\\n\tpython3 --version\n\n# make some useful symlinks that are expected to exist (\"/usr/local/bin/python\" and friends)\nRUN set -eux; \\\n\tfor src in idle3 pydoc3 python3 python3-config; do \\\n\t\tdst=\"$(echo \"$src\" | tr -d 3)\"; \\\n\t\t[ -s \"/usr/local/bin/$src\" ]; \\\n\t\t[ ! -e \"/usr/local/bin/$dst\" ]; \\\n\t\tln -svT \"$src\" \"/usr/local/bin/$dst\"; \\\n\tdone\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 22.0.4\n# https://github.com/docker-library/python/issues/365\nENV PYTHON_SETUPTOOLS_VERSION 57.5.0\n# https://github.com/pypa/get-pip\nENV PYTHON_GET_PIP_URL https://github.com/pypa/get-pip/raw/6ce3639da143c5d79b44f94b04080abf2531fd6e/public/get-pip.py\nENV PYTHON_GET_PIP_SHA256 ba3ab8267d91fd41c58dbce08f76db99f747f716d85ce1865813842bb035524d\n\nRUN set -eux; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget; \\\n\n\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \\\n\techo \"$PYTHON_GET_PIP_SHA256  *get-pip.py\" | sha256sum -c -; \\\n\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\texport PYTHONDONTWRITEBYTECODE=1; \\\n\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t--no-compile \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t\t\"setuptools==$PYTHON_SETUPTOOLS_VERSION\" \\\n\t; \\\n\trm -f get-pip.py; \\\n\n\tpip --version\n\nRUN apt update && apt install --no-install-recommends curl make git libopenblas-base -y && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\n\nENV SHELL /bin/bash -l\n\nENV POETRY_CACHE /work/.cache/poetry\n\nENV PIP_CACHE_DIR /work/.cache/pip\n\nENV JUPYTER_RUNTIME_DIR /work/.cache/jupyter/runtime\n\nENV JUPYTER_CONFIG_DIR /work/.cache/jupyter/config\n\nRUN $HOME/.poetry/bin/poetry config virtualenvs.path $POETRY_CACHE\n\nENV PATH /root/.poetry/bin:/bin:/usr/local/bin:/usr/bin\n\nCMD [\"bash\", \"-l\"]\n"
}