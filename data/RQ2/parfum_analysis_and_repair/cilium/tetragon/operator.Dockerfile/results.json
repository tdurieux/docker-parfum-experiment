{
  "startTime": 1674255662994,
  "endTime": 1674255663495,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020-2021 Authors of Cilium\n# SPDX-License-Identifier: Apache-2.0\n\nARG BASE_IMAGE=scratch\nARG GOLANG_IMAGE=docker.io/library/golang:1.16.5@sha256:6ff0e09b47d0e93823978da613c449056cda25c058ebc4031f93c05a76905a8c\nARG ALPINE_IMAGE=docker.io/library/alpine:3.12.7@sha256:36553b10a4947067b9fbb7d532951066293a68eae893beba1d9235f7d11a20ad\n\n# BUILDPLATFORM is an automatic platform ARG enabled by Docker BuildKit.\n# Represents the plataform where the build is happening, do not mix with\n# TARGETARCH\nFROM --platform=${BUILDPLATFORM} ${GOLANG_IMAGE} as builder\n\n# TARGETOS is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETOS\n# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETARCH\nARG NOSTRIP\n\nWORKDIR /go/src/github.com/cilium/tetragon\nRUN --mount=type=bind,readwrite,target=/go/src/github.com/cilium/tetragon --mount=target=/root/.cache,type=cache --mount=target=/go/pkg/mod,type=cache \\\n    make GOARCH=${TARGETARCH} tetragon-operator-image \\\n    && mkdir -p /out/${TARGETOS}/${TARGETARCH}/usr/bin && mv tetragon-operator /out/${TARGETOS}/${TARGETARCH}/usr/bin\n\n# BUILDPLATFORM is an automatic platform ARG enabled by Docker BuildKit.\n# Represents the plataform where the build is happening, do not mix with\n# TARGETARCH\nFROM --platform=${BUILDPLATFORM} ${ALPINE_IMAGE} as certs\nRUN apk --update --no-cache add ca-certificates\n\nFROM ${BASE_IMAGE}\n# TARGETOS is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETOS\n# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETARCH\nLABEL maintainer=\"maintainer@cilium.io\"\nCOPY --from=certs /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=builder /out/${TARGETOS}/${TARGETARCH}/usr/bin/tetragon-operator /usr/bin/tetragon-operator\nWORKDIR /\nENV GOPS_CONFIG_DIR=/\nCMD [\"/usr/bin/tetragon-operator\"]\n"
}