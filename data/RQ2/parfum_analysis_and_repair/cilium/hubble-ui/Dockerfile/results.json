{
  "startTime": 1674215084099,
  "endTime": 1674215084982,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Authors of Cilium\n# SPDX-License-Identifier: Apache-2.0\n\n# BUILDPLATFORM is an automatic platform ARG enabled by Docker BuildKit.\n# Represents the plataform where the build is happening, do not mix with\n# TARGETARCH\n# Do not upgrade to alpine 3.13 as its nslookup tool returns 1, instead of 0\n# for domain name lookups.\nFROM --platform=${BUILDPLATFORM} docker.io/library/node:16-alpine3.12@sha256:c2ed3b2b36b726980474f8bf80025ca3a1aeb90c76286953f9f4b9b1dc3001b0 as stage1\nRUN apk add --no-cache bash\nWORKDIR /app\n\nCOPY package.json package.json\nCOPY package-lock.json package-lock.json\nCOPY scripts/ scripts/\nCOPY patches/ patches/\n\nRUN npm set unsafe-perm true\n# TARGETOS is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETOS\n# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETARCH\nRUN npm --target_arch=${TARGETARCH} install && npm cache clean --force;\nRUN npm set unsafe-perm false\n\nCOPY . .\n\nARG NODE_ENV=production\nRUN npm run build\n\nFROM docker.io/nginxinc/nginx-unprivileged:1.21.6-alpine@sha256:c754b5ff17e6cd39e786855ee31d4eeac21276d26119bf37385cbb3dcc3a9d29\nCOPY --from=stage1 /app/server/public /app\n"
}