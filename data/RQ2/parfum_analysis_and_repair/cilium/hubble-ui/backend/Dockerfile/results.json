{
  "startTime": 1674252746329,
  "endTime": 1674252747780,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Authors of Cilium\n# SPDX-License-Identifier: Apache-2.0\n\nARG GOLANG_IMAGE=docker.io/library/golang:1.18.1-bullseye@sha256:7c4f3edb000e9e0e8b2a3e30d1d4969c1bdca2dff3ba51fb3d965628e5a307f8\n\n# BUILDPLATFORM is an automatic platform ARG enabled by Docker BuildKit.\n# Represents the plataform where the build is happening, do not mix with\n# TARGETARCH\n\nFROM --platform=${BUILDPLATFORM} ${GOLANG_IMAGE} as app-build\nWORKDIR /app\n\nCOPY . .\n# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETARCH\nRUN CGO_ENABLED=0 GOARCH=${TARGETARCH} go build -ldflags \"-s -w\" -o backend\n\n# BUILDPLATFORM is an automatic platform ARG enabled by Docker BuildKit.\n# Represents the plataform where the build is happening, do not mix with\n# TARGETARCH\nFROM --platform=${BUILDPLATFORM} ${GOLANG_IMAGE} as gops\n\nRUN apt-get update && apt-get install --no-install-recommends -y binutils-aarch64-linux-gnu && rm -rf /var/lib/apt/lists/*;\nCOPY ./build-gops.sh .\nRUN --mount=target=/root/.cache,type=cache --mount=target=/go/pkg/mod,type=cache \\\n    ./build-gops.sh\n\n# Do not upgrade to alpine 3.13 as its nslookup tool returns 1, instead of 0\n# for domain name lookups.\nFROM docker.io/library/alpine:3.15.0@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300\n# TARGETOS is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETOS\n# TARGETARCH is an automatic platform ARG enabled by Docker BuildKit.\nARG TARGETARCH\nCOPY --from=app-build /app/backend /usr/bin\nCOPY --from=gops /out/${TARGETOS}/${TARGETARCH}/bin/gops /usr/bin/gops\nRUN mkdir -p /home/gops && chown 1001:1001 /home/gops\n\nENV GOPS_CONFIG_DIR=/home/gops\nCMD [\"/usr/bin/backend\"]\n"
}