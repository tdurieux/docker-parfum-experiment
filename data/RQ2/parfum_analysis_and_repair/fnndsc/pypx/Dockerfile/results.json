{
  "startTime": 1674215890366,
  "endTime": 1674215893059,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 5,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 5,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 5,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for pypx repository.\n#\n# Build with\n#\n#   DOCKER_BUILDKIT=1  docker build -t <name> .\n#\n# For example if building a local version, you could do:\n#\n#   DOCKER_BUILDKIT=1 docker build --build-arg UID=$UID -t local/pypx .\n#\n# In the case of a proxy (located at say 10.41.13.4:3128), do:\n#\n#    export PROXY=\"http://proxy.tch.harvard.edu:3128\"\n#    DOCKER_BUILDKIT=1  docker build --build-arg http_proxy=${PROXY} --build-arg UID=$UID -t local/pypx .\n#\n# To run an interactive shell inside this container, do:\n#\n#   docker run -ti --entrypoint /bin/bash local/pypx\n#\n#\n\n\nFROM fnndsc/ubuntu-python3:latest\n\nLABEL fnndsc=\"dev@babymri.org\"\nLABEL DEBUG_EXAMPLE=\"                                                       \\\ndocker run  --rm -ti                                                        \\\n            -e HOST_IP=$(ip route | grep -v docker | awk '{if(NF==11) print $9}')      \\\n            -v $PWD/pypx:/usr/local/lib/python3.8/dist-packages/pypx        \\\n            -v $PWD/bin/px-do:/usr/local/bin/px-do                          \\\n            -v $PWD/bin/px-echo:/usr/local/bin/px-echo                      \\\n            -v $PWD/bin/px-find:/usr/local/bin/px-find                      \\\n            -v $PWD/bin/px-move:/usr/local/bin/px-move                      \\\n            -v $PWD/bin/px-listen:/usr/local/bin/px-listen                  \\\n            -v $PWD/bin/px-push:/usr/local/bin/px-push                      \\\n            -v $PWD/bin/px-register:/usr/local/bin/px-register              \\\n            -v $PWD/bin/px-report:/usr/local/bin/px-report                  \\\n            -v $PWD/bin/px-smdb:/usr/local/bin/px-smdb                      \\\n            -v $PWD/bin/px-status:/usr/local/bin/px-status                  \\\n            -v $PWD/dicom:/home/dicom                                       \\\n            local/pypx                                                      \\\n            -p 11113:11113                                                  \\\n            --px-find                                                       \\\n            --aet CHRISLOCAL                                                \\\n            --aec ORTHANC                                                   \\\n            --serverIP  192.168.1.189                                       \\\n            --serverPort 4242                                               \\\n            --patientID 4780041                                             \\\n            --db /home/dicom/log                                            \\\n            --verbosity 1                                                   \\\n            --json                                                          \\\n                                                                            \\\n        docker run  --rm -ti                                                \\\n            -e HOST_IP=$(ip route | grep -v docker | awk '{if(NF==11) print $9}')      \\\n            -v $PWD/pypx:/usr/local/lib/python3.8/dist-packages/pypx        \\\n            -v $PWD/bin/px-do:/usr/local/bin/px-do                          \\\n            -v $PWD/bin/px-echo:/usr/local/bin/px-echo                      \\\n            -v $PWD/bin/px-find:/usr/local/bin/px-find                      \\\n            -v $PWD/bin/px-move:/usr/local/bin/px-move                      \\\n            -v $PWD/bin/px-listen:/usr/local/bin/px-listen                  \\\n            -v $PWD/bin/px-push:/usr/local/bin/px-push                      \\\n            -v $PWD/bin/px-register:/usr/local/bin/px-register              \\\n            -v $PWD/bin/px-report:/usr/local/bin/px-report                  \\\n            -v $PWD/bin/px-smdb:/usr/local/bin/px-smdb                      \\\n            -v $PWD/bin/px-status:/usr/local/bin/px-status                  \\\n            -v $PWD/dicom:/home/dicom                                       \\\n            local/pypx                                                      \\\n            -p 11113:11113                                                  \\\n            --px-find                                                       \\\n            --aec CHRIS                                                     \\\n            --aet FNNDSC-CHRISDEV                                           \\\n            --serverIP 134.174.12.21                                        \\\n            --serverPort 104                                                \\\n            --patientID 4777764                                             \\\n\"\n\n# Pass a UID on build command line (see above) to set internal UID\nARG UID=1001\nENV UID=$UID\nENV LISTENPORT=$LISTENPORT\n\nCOPY . /tmp/pypx\nCOPY ./docker-entrypoint.py /dock/docker-entrypoint.py\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends sudo \\\n  && useradd -u $UID -ms /bin/bash localuser \\\n  && addgroup localuser sudo \\\n  && echo \"localuser:localuser\" | chpasswd \\\n  && adduser localuser sudo \\\n  && apt-get install --no-install-recommends -y libssl-dev libcurl4-openssl-dev bsdmainutils vim net-tools inetutils-ping \\\n  && apt-get install --no-install-recommends -y netcat-openbsd xinetd \\\n  && apt-get install --no-install-recommends -y dcmtk \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && pip install --no-cache-dir /tmp/pypx \\\n  && rm -fr /tmp/pypx && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./docker-entrypoint.py /dock/docker-entrypoint.py\nCOPY ./storescp.sh /dock/storescp.sh\nRUN chmod 777 /dock                                                   \\\n  && chmod 777 /dock/docker-entrypoint.py                             \\\n  && echo \"localuser ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n\nENTRYPOINT [\"/dock/docker-entrypoint.py\"]\nCMD [\"/dock/storescp.sh\", \"-p\", \"11113\"]\nEXPOSE 11113\n\n# Start as user $UID\n# USER $UID\n\n"
}