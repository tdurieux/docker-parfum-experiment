{
  "startTime": 1674253589728,
  "endTime": 1674253591117,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 5,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Docker file for ChRIS ui development server\n#\n# Build with\n#\n#   docker build -t <name>:<tag> -f <dockerfile> .\n#\n# For example if building a local version, you could do:\n#\n#   docker build -t local/chris_ui:dev -f Dockerfile_dev .\n#\n# In the case of a proxy (located at say 10.41.13.4:3128), do:\n#\n#    export PROXY=\"http://10.41.13.4:3128\"\n#    docker build --build-arg http_proxy=${PROXY} --build-arg UID=$UID -t local/chris_ui:dev -f Dockerfile_dev .\n#\n# To run the server up during development, do:\n#\n#   docker run --rm -it -v $(pwd):/home/localuser -p 3000:3000 -u $(id -u):$(id -g) --name chris_ui local/chris_ui:dev\n#\n# To run an interactive shell inside this container, do:\n#\n#   docker exec -it chris_ui sh\n#\n\n\n\nFROM node:16 as builder\nMAINTAINER fnndsc \"dev@babymri.org\"\n\n# Pass a UID on build command line (see above) to set internal UID\nARG UID=1001\nENV UID=$UID  HOME=\"/home/localuser\" VERSION=\"0.1\"\n\nRUN adduser --uid $UID --disabled-password localuser \\\n  && npm install chrome -g && npm cache clean --force;\n\n# Start as user localuser\nUSER localuser\n\nWORKDIR $HOME\nEXPOSE 3000\n\nCMD npm install && npm run dev\n"
}