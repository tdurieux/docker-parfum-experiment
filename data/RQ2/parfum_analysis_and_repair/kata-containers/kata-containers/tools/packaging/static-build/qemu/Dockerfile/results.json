{
  "startTime": 1674252818664,
  "endTime": 1674252819922,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 42,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2019 Intel Corporation\n# Copyright (c) 2020 Ant Group\n#\n# SPDX-License-Identifier: Apache-2.0\nfrom ubuntu:20.04\n\n\nWORKDIR /root/qemu\n\n# CACHE_TIMEOUT: date to invalid cache, if the date changes the image will be rebuild\n# This is required to keep build dependencies with security fixes.\nARG CACHE_TIMEOUT\nRUN echo \"$CACHE_TIMEOUT\"\n\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get --no-install-recommends install -y \\\n\t    apt-utils \\\n\t    autoconf \\\n\t    automake \\\n\t    bc \\\n\t    bison \\\n\t    ca-certificates \\\n\t    cpio \\\n\t    flex \\\n\t    gawk \\\n\t    libaudit-dev \\\n\t    libblkid-dev \\\n\t    libcap-dev \\\n\t    libcap-ng-dev \\\n\t    libdw-dev \\\n\t    libelf-dev \\\n\t    libffi-dev \\\n\t    libglib2.0-0 \\\n\t    libglib2.0-dev \\\n\t    libglib2.0-dev git \\\n\t    libltdl-dev \\\n\t    libmount-dev \\\n\t    libpixman-1-dev \\\n\t    libselinux1-dev \\\n\t    libtool \\\n\t    make \\\n\t    ninja-build \\\n\t    pkg-config \\\n\t    libseccomp-dev \\\n\t    libseccomp2 \\\n\t    patch \\\n\t    python \\\n\t    python-dev \\\n\t    rsync \\\n\t    zlib1g-dev && \\\n    if [ \"$(uname -m)\" != \"s390x\" ]; then apt-get install -y --no-install-recommends libpmem-dev; fi && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nARG QEMU_REPO\n# commit/tag/branch\nARG QEMU_VERSION\nARG PREFIX\nARG BUILD_SUFFIX\nARG QEMU_DESTDIR\nARG QEMU_TARBALL\n\nCOPY scripts/configure-hypervisor.sh /root/configure-hypervisor.sh\nCOPY qemu /root/kata_qemu\nCOPY scripts/apply_patches.sh /root/apply_patches.sh\nCOPY scripts/patch_qemu.sh /root/patch_qemu.sh\nCOPY static-build/scripts/qemu-build-post.sh /root/static-build/scripts/qemu-build-post.sh\nCOPY static-build/qemu.blacklist /root/static-build/qemu.blacklist\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN git clone --depth=1 \"${QEMU_REPO}\" qemu && \\\n    cd qemu && \\\n    git fetch --depth=1 origin \"${QEMU_VERSION}\" && git checkout FETCH_HEAD && \\\n    scripts/git-submodule.sh update meson capstone && \\\n    /root/patch_qemu.sh \"${QEMU_VERSION}\" \"/root/kata_qemu/patches\" && \\\n    [ -n \"${BUILD_SUFFIX}\" ] && HYPERVISOR_NAME=\"kata-qemu-${BUILD_SUFFIX}\" || HYPERVISOR_NAME=\"kata-qemu\" && \\\n    [ -n \"${BUILD_SUFFIX}\" ] && PKGVERSION=\"kata-static-${BUILD_SUFFIX}\" || PKGVERSION=\"kata-static\" && \\\n    (PREFIX=\"${PREFIX}\" /root/configure-hypervisor.sh -s \"${HYPERVISOR_NAME}\" | xargs ./configure \\\n\t--with-pkgversion=\"${PKGVERSION}\") && \\\n    make -j\"$(nproc ${CI:+--ignore 1})\" && \\\n    make install DESTDIR=\"${QEMU_DESTDIR}\" && \\\n    /root/static-build/scripts/qemu-build-post.sh\n"
}