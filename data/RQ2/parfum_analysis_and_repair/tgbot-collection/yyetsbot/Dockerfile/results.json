{
  "startTime": 1674253641308,
  "endTime": 1674253642085,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-alpine as pybuilder\nRUN apk update && apk add  --no-cache tzdata ca-certificates alpine-sdk libressl-dev libffi-dev cargo && \\\n    apk add --no-cache tiff-dev jpeg-dev openjpeg-dev zlib-dev freetype-dev lcms2-dev \\\n    libwebp-dev tcl-dev tk-dev harfbuzz-dev fribidi-dev libimagequant-dev libxcb-dev libpng-dev\n\nCOPY requirements.txt /requirements.txt\nRUN pip3 install --no-cache-dir --user -r /requirements.txt && rm /requirements.txt\n\n\nFROM python:3.9-alpine as runner\nRUN apk update && apk add --no-cache libressl jpeg-dev openjpeg-dev libimagequant-dev tiff-dev freetype-dev libxcb-dev\n\n\nFROM node:lts-alpine as nodebuilder\nWORKDIR /build\nARG env\nRUN apk add --no-cache git\nCOPY YYeTsFE/package.json /build/\nCOPY YYeTsFE/yarn.lock /build/\nCOPY scripts/dev_robots.sh /tmp/\nRUN yarn --network-timeout 1000000\nCOPY YYeTsFE /build/\nRUN if [ \"$env\" = \"dev\" ]; then echo \"dev build\"; yarn build; sh /tmp/dev_robots.sh; else echo \"prod build\"; yarn run release; fi\n\n\nFROM runner\nCOPY . /YYeTsBot\nRUN apk add --no-cache mongodb-tools mysql-client\nCOPY --from=pybuilder /root/.local /usr/local\nCOPY --from=pybuilder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=pybuilder /usr/share/zoneinfo /usr/share/zoneinfo\nCOPY --from=nodebuilder /build/build /YYeTsBot/yyetsweb/templates/\n\nENV TZ=Asia/Shanghai\nWORKDIR /YYeTsBot/yyetsbot\nCMD [\"python\", \"yyetsbot.py\"]\n"
}