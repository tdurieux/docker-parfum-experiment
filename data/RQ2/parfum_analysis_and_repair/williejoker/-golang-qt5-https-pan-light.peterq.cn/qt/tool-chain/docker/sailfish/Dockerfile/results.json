{
  "startTime": 1674251239266,
  "endTime": 1674251240509,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 36,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 101,
        "columnEnd": 199
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 121,
        "columnEnd": 218
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 127,
        "columnEnd": 224
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 26,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 26,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM i386/ubuntu:14.04 as base\n\nENV USER user\nENV HOME /home/$USER\nENV GOPATH $HOME/work\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install ca-certificates curl git && rm -rf /var/lib/apt/lists/*;\nRUN GO=go1.11.2.linux-386.tar.gz && curl -f -sL --retry 10 --retry-delay 60 -O https://dl.google.com/go/$GO && tar -xzf $GO -C /usr/local\nRUN /usr/local/go/bin/go get -tags=no_env github.com/peterq/pan-light/qt/cmd/...\n\n\nFROM i386/ubuntu:14.04\nLABEL maintainer therecipe\n\nENV USER user\nENV HOME /home/$USER\nENV GOPATH $HOME/work\nENV SF_SDK_TOOLING_DIR /srv/mer/toolings/SailfishOS-2.2.1.18\nENV PATH /usr/local/go/bin:$PATH\nENV QT_DOCKER true\nENV QT_SAILFISH true\n\nCOPY --from=base /usr/local/go /usr/local/go\nCOPY --from=base $GOPATH/bin $GOPATH/bin\nCOPY --from=base $GOPATH/src/github.com/peterq/pan-light/qt $GOPATH/src/github.com/peterq/pan-light/qt\n\nRUN apt-get -qq update && apt-get --no-install-recommends -qq -y install ca-certificates curl && apt-get -qq clean && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -qq update && apt-get -y -qq purge python && apt-get -qq clean\n\nRUN SF_SDK_TOOLING=Jolla-latest-Sailfish_SDK_Tooling-i486.tar.bz2 && mkdir -p $SF_SDK_TOOLING_DIR && curl -f -sL --retry 10 --retry-delay 60 -O https://releases.sailfishos.org/sdk/latest/$SF_SDK_TOOLING && tar --numeric-owner -p -xjf $SF_SDK_TOOLING -C $SF_SDK_TOOLING_DIR && rm -f $SF_SDK_TOOLING\n\nRUN SF_SDK_TARGET=Jolla-latest-Sailfish_SDK_Target-i486.tar.bz2 && mkdir -p /srv/mer/targets/SailfishOS-2.2.1.18-i486 && curl -f -sL --retry 10 --retry-delay 60 -O https://releases.sailfishos.org/sdk/latest/$SF_SDK_TARGET && tar --numeric-owner -p -xjf $SF_SDK_TARGET -C /srv/mer/targets/SailfishOS-2.2.1.18-i486 && rm -f $SF_SDK_TARGET\n\nRUN SF_SDK_TARGET=Jolla-latest-Sailfish_SDK_Target-armv7hl.tar.bz2 && mkdir -p /srv/mer/targets/SailfishOS-2.2.1.18-armv7hl && curl -f -sL --retry 10 --retry-delay 60 -O https://releases.sailfishos.org/sdk/latest/$SF_SDK_TARGET && tar --numeric-owner -p -xjf $SF_SDK_TARGET -C /srv/mer/targets/SailfishOS-2.2.1.18-armv7hl && rm -f $SF_SDK_TARGET\n\nENV PATH $SF_SDK_TOOLING_DIR/usr/bin/:$PATH\n\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libmpc.so.3 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libmpfr.so.4 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libgmp.so.10 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libpthread_nonshared.a /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libc_nonshared.a /usr/lib/\n\nRUN ln -s $SF_SDK_TOOLING_DIR/opt/cross/bin/i486-meego-linux-gnu-as $SF_SDK_TOOLING_DIR/opt/cross/libexec/gcc/i486-meego-linux-gnu/4.8.3/as\nRUN ln -s $SF_SDK_TOOLING_DIR/opt/cross/bin/i486-meego-linux-gnu-ld $SF_SDK_TOOLING_DIR/opt/cross/libexec/gcc/i486-meego-linux-gnu/4.8.3/ld\n\nRUN ln -s $SF_SDK_TOOLING_DIR/opt/cross/bin/armv7hl-meego-linux-gnueabi-as $SF_SDK_TOOLING_DIR/opt/cross/libexec/gcc/armv7hl-meego-linux-gnueabi/4.8.3/as\nRUN ln -s $SF_SDK_TOOLING_DIR/opt/cross/bin/armv7hl-meego-linux-gnueabi-ld $SF_SDK_TOOLING_DIR/opt/cross/libexec/gcc/armv7hl-meego-linux-gnueabi/4.8.3/ld\n\nRUN cd /srv/mer/targets/SailfishOS-2.2.1.18-i486/ && $SF_SDK_TOOLING_DIR/usr/bin/sb2-init -L \"--sysroot=/\" -C \"--sysroot=/\" -n -N -t / i486-meego-linux-gnu $SF_SDK_TOOLING_DIR/opt/cross/bin/i486-meego-linux-gnu-gcc\n\nRUN cd /srv/mer/targets/SailfishOS-2.2.1.18-i486/ && $SF_SDK_TOOLING_DIR/usr/bin/sb2-init -L \"--sysroot=/\" -C \"--sysroot=/\" -n -N -t / armv7hl-meego-linux $SF_SDK_TOOLING_DIR/opt/cross/bin/i486-meego-linux-gnu-gcc\n\nRUN sed -i 's/--target=$build_tgt/--target=$OPT_TARGET/g' /srv/mer/toolings/SailfishOS-2.2.1.18/usr/bin/mb2\n\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/librpmbuild.so.8 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/librpm.so.8 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/librpmio.so.8 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libdb-4.8.so /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/liblua-5.1.so /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libpython2.7.so.1.0 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libbfd-2.25.so /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libnss3.so /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libelf.so.1 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libnssutil3.so /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libplc4.so /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libplds4.so /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libnspr4.so /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libglib-2.0.so.0 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libpcre.so.1 /usr/lib/\nRUN ln -s $SF_SDK_TOOLING_DIR/usr/lib/libdw.so.1 /usr/lib/\n\nRUN $GOPATH/bin/qtsetup prep\n\nRUN $GOPATH/bin/qtsetup generate sailfish\nRUN $GOPATH/bin/qtsetup install sailfish\nRUN cd $GOPATH/src/github.com/peterq/pan-light/qt/internal/examples/sailfish/listview && $GOPATH/bin/qtdeploy build sailfish && rm -rf ./deploy\n\nRUN $GOPATH/bin/qtsetup generate sailfish-emulator\nRUN $GOPATH/bin/qtsetup install sailfish-emulator\nRUN cd $GOPATH/src/github.com/peterq/pan-light/qt/internal/examples/sailfish/listview && $GOPATH/bin/qtdeploy build sailfish-emulator && rm -rf ./deploy\n"
}