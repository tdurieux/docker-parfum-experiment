{
  "startTime": 1674252757795,
  "endTime": 1674252759062,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########\n# Python dependencies builder\n#\nARG PYTHON_VERSION=3.6\nFROM python:$PYTHON_VERSION-slim AS builder\n\nWORKDIR /app\n# Sets utf-8 encoding for Python et al\nENV LANG=C.UTF-8\nENV PYTHONIOENCODING=utf8\n# Turns off writing .pyc files; superfluous on an ephemeral container.\nENV PYTHONDONTWRITEBYTECODE=1\n# Seems to speed things up\nENV PYTHONUNBUFFERED=1\nENV PIP_DISABLE_PIP_VERSION_CHECK=1\n\n# Ensures that the python and pip executables used\n# in the image will be those from our virtualenv.\nENV PATH=\"/venv/bin:$PATH\"\n\n# Setup the virtualenv\nRUN python -m venv /venv\n\n# Install OS package dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y git gcc && rm -rf /var/lib/apt/lists/*;\n\n# Install Python dependencies and packages not in requirements\nARG GIT_TAG=dev\nRUN git clone https://github.com/nestauk/nesta.git --branch $GIT_TAG --depth 1 --single-branch\nRUN pip install --no-cache-dir -r nesta/requirements.txt \\\n && pip install --no-cache-dir awscli mysql-connector-python python-Levenshtein\n\n\n########\n# app container\n#\nFROM python:$PYTHON_VERSION-slim AS app\n\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\nENV PYTHONIOENCODING=utf8\nENV LANG=C.UTF-8\nENV PATH=\"/venv/bin:$PATH\"\nENV PYTHONPATH /app\nENV MYSQLDB /app/nesta/core/config/mysqldb.config\nENV LUIGI_CONFIG_DIR /appdocker\nENV LUIGI_CONFIG_PATH /app/nesta/core/config/luigi.cfg\nENV PATH \"$PATH:/app/nesta/core/scripts/\"\n\nWORKDIR /app\n\n# Copy in Python environment\nCOPY --from=builder /venv /venv\n\n# Install OS package dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y git zip tree && rm -rf /var/lib/apt/lists/*;\n\n# Use local files and requirements rather than from the repo\n# COPY ./ ./\n# install from local requirements, maybe useful with the above\n# RUN pip install --no-cache-dir --disable-pip-version-check -r requirements.txt\n\n# Comment out the block below if using local files\n# this argument has to be re-declared here as it is cleared by the FROM above\nARG GIT_TAG=dev\nRUN git clone https://github.com/nestauk/nesta.git --branch $GIT_TAG --depth 1 --single-branch .\n\n# Copy in the rest of the app from local to pick up configs\n# TODO: replace when secrets are implemented\nCOPY nesta/core/config/ nesta/core/config/\n\nRUN mkdir -p /var/tmp/batch && \\\n    mkdir -p /var/log/luigi && \\\n    mv docker/run.sh /usr/bin/run.sh && \\\n    chmod +x /usr/bin/run.sh\n\nENTRYPOINT [\"run.sh\"]\n"
}