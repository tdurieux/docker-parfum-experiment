{
  "startTime": 1674249260302,
  "endTime": 1674249261084,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 143
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nLABEL org.opencontainers.image.source https://github.com/splunk/splunk-connect-for-ethereum\nLABEL org.opencontainers.image.description \"Image used for builds in CI of connector packages\"\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends curl ca-certificates software-properties-common build-essential apt-transport-https docker.io \\\n    && add-apt-repository ppa:git-core/ppa \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends git \\\n    && docker --version \\\n    && git --version \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install helm\nRUN curl -f https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash\n\n# Install node + yarn\nRUN curl -f https://nodejs.org/dist/v14.16.0/node-v14.16.0-linux-x64.tar.gz | tar -xzf - -C /usr/local --strip-components=1 --no-same-owner \\\n    && node --version \\\n    && npm --version \\\n    && npm i -g yarn \\\n    && yarn --version && npm cache clean --force;\n\n# Install rust toolchain + wasm-pack\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    RUST_VERSION=1.50.0\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nRUN rustup target add wasm32-unknown-unknown\nRUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh\n"
}