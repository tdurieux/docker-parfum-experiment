{
  "startTime": 1674250221449,
  "endTime": 1674250222790,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.17 as builder\n\n#RUN yum -y install shadow-utils\n\nENV OPERATOR=/manager \\\n    USER_UID=1001 \n\nLABEL name=\"splunk\" \\\n      maintainer=\"support@splunk.com\" \\\n      vendor=\"splunk\" \\\n      version=\"1.1.0\" \\\n      release=\"1\" \\\n      summary=\"Simplify the Deployment & Management of Splunk Products on Kubernetes\" \\\n      description=\"The Splunk Operator for Kubernetes (SOK) makes it easy for Splunk Administrators to deploy and operate Enterprise deployments in a Kubernetes infrastructure. Packaged as a container, it uses the operator pattern to manage Splunk-specific custom resources, following best practices to manage all the underlying Kubernetes objects for you.\"\n\nWORKDIR /\n# Copy the Go Modules manifests\nCOPY . .\n\n# Build\nRUN CGO_ENABLED=0 go get -ldflags \"-s -w -extldflags '-static'\" github.com/go-delve/delve/cmd/dlv\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -gcflags=\"all=-N -l\" -a -o manager main.go\n\nFROM debian:stable\n\nLABEL name=\"splunk\" \\\n      maintainer=\"support@splunk.com\" \\\n      vendor=\"splunk\" \\\n      version=\"1.1.0\" \\\n      release=\"1\" \\\n      summary=\"Simplify the Deployment & Management of Splunk Products on Kubernetes\" \\\n      description=\"The Splunk Operator for Kubernetes (SOK) makes it easy for Splunk Administrators to deploy and operate Enterprise deployments in a Kubernetes infrastructure. Packaged as a container, it uses the operator pattern to manage Splunk-specific custom resources, following best practices to manage all the underlying Kubernetes objects for you.\"\n\n\nRUN mkdir /.config\nRUN chmod -R 0777 /.config\nARG USERNAME=nonroot\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Create the user\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    #\n    # [Optional] Add sudo support. Omit if you don't need to install software after connecting.\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y sudo \\\n    && apt-get install --no-install-recommends -y git \\\n    && apt-get install --no-install-recommends -y curl \\\n    && apt-get install --no-install-recommends -y procps \\\n    && apt install --no-install-recommends -y wget \\\n    && curl -f -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64 \\\n    && sudo install skaffold /usr/local/bin/ \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME && rm -rf /var/lib/apt/lists/*;\n\nENV GOVERSION=\"1.17.7\" \\\n    GOPATH=$HOME/go \\\n    PATH=/usr/local/go/bin:$PATH:$GOPATH/bin:/\n\nRUN wget \"https://golang.org/dl/go${GOVERSION}.linux-amd64.tar.gz\" -4\nRUN tar -C /usr/local -xvf \"go${GOVERSION}.linux-amd64.tar.gz\" && rm \"go${GOVERSION}.linux-amd64.tar.gz\"\n\nWORKDIR /\nCOPY . .\nCOPY --from=builder /go/bin/dlv dlv\nCOPY --from=builder /manager  manager\n\n\nUSER $USERNAME\nENTRYPOINT [ \"/dlv\" , \"--listen=:40000\", \"--headless=true\", \"--api-version=2\", \"--accept-multiclient\", \"exec\", \"manager\"]\n#ENTRYPOINT [\"/manager\"]"
}