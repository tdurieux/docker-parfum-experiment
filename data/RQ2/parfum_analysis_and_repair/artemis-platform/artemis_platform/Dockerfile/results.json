{
  "startTime": 1674255103400,
  "endTime": 1674255104099,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.10.3\n\nARG MIX_ENV=prod\n\nENV MIX_ENV=${MIX_ENV}\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-utils build-essential inotify-tools postgresql-client && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -SL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    npm --global install yarn && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nRUN mix local.hex --force && \\\n    mix local.rebar --force && \\\n    mix archive.install --force hex phx_new 1.5.3\n\nWORKDIR /app\nCOPY . /app/source\n\nRUN cd /app/source && \\\n    MIX_ENV=${MIX_ENV} bin/local/reset-build && \\\n    MIX_ENV=${MIX_ENV} bin/local/reset-assets\n\n# Production uses the following structure:\n#\n#   /app/build/     <- Directory where elixir release is built\n#   /app/entrypoint <- Docker Entrypoint\n#   /app/release/   <- Where the application release is run\n#   /app/source/    <- Raw source code, used primarily for mix actions (create database, seed database, mix tasks)\n#\nRUN if [ \"${MIX_ENV}\" = \"prod\" ]; then \\\n  cp -pr /app/source /app/build && \\\n  cd /app/build && \\\n  cp bin/docker-prod/entrypoint /app/entrypoint && \\\n  bin/docker-prod/build-release && \\\n  mkdir -p /app/release && \\\n  cp -pr _build/${MIX_ENV}/rel/artemis /app/release/artemis; \\\nfi\n"
}