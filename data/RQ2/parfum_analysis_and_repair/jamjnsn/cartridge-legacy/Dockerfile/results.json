{
  "startTime": 1674249968876,
  "endTime": 1674249972061,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache\n\n# Args\nARG PUID=1000\nARG PGID=1000\n\n# Install packages\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        cron \\\n        nodejs \\\n        npm \\\n        git \\\n        unzip \\\n        zip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install extensions\nRUN docker-php-ext-install pdo_mysql\n\n# Get latest Composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\n# Create dirs and move files\nRUN mkdir -p /var/www\nWORKDIR /var/www\nCOPY --chown=www-data:www-data . .\n\nCOPY .env.docker .env\n\n# Install dependencies\nRUN \\\n    echo \"Installing Composer dependencies...\\n\" \\\n    && composer install \\\n        --ignore-platform-reqs \\\n        --no-interaction \\\n        --no-plugins \\\n        --no-scripts \\\n        --prefer-dist \\\n    && echo \"Installing Node dependencies...\\n\" \\\n    && npm install \\\n    && echo \"Running migrations...\\n\" \\\n    && npm run production && npm cache clean --force;\n\n# Configure Apache\nCOPY 000-default.conf /etc/apache2/sites-available/000-default.conf\nRUN a2enmod rewrite\n\n# Install scheduler to cron\nRUN CRONFILE=/etc/cron.d/scheduler && \\\n    mkdir -p /etc/cron.d && \\\n    touch $CRONFILE && \\\n    echo \"* * * * * cd ${PWD} && php artisan schedule:run\" >> $CRONFILE && \\\n    chmod 0644 $CRONFILE && \\\n    crontab $CRONFILE\n\n# Create database if it doesn't exist\nRUN mkdir -p /var/www/storage && \\\n    touch /var/www/storage/db.sqlite && \\\n    chown www-data:www-data /var/www/storage/db.sqlite\n\n# Run\nVOLUME [ \"/games\", \"/var/www/storage\" ]\n\nRUN chmod +x /var/www/docker-entrypoint.sh\nENTRYPOINT [ \"/var/www/docker-entrypoint.sh\" ]\n"
}