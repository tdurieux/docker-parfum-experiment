{
  "startTime": 1674215659404,
  "endTime": 1674215660519,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 160,
        "columnEnd": 217
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 160,
        "columnEnd": 217
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 159,
        "columnEnd": 240
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:21.10\n\nVOLUME [\"/var/www/html\"]\n\nARG PHP_VERSION\nARG COMPOSER_VERSION\nARG NODE_VERSION\nARG PNPM_VERSION\n\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nWORKDIR /tmp\n\n# Install basic packages, including Apache.\nRUN \\\n\texport DEBIAN_FRONTEND=noninteractive \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y language-pack-en-base software-properties-common \\\n\t&& add-apt-repository ppa:ondrej/php \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\tapache2 \\\n\t\tcurl \\\n\t\tgit \\\n\t\tjq \\\n\t\tless \\\n\t\tlibsodium23 \\\n\t\tmysql-client \\\n\t\tnano \\\n\t\tssmtp \\\n\t\tsubversion \\\n\t\tsudo \\\n\t\tunzip \\\n\t\tvim \\\n\t\tzip \\\n\t&& apt-get remove --purge --auto-remove -y software-properties-common \\\n\t&& rm -rf /var/lib/apt/lists/* ~/.launchpadlib\n\n# Enable mod_rewrite in Apache.\nRUN a2enmod rewrite\n\n# Install requested version of PHP.\nRUN \\\n\t: \"${PHP_VERSION:?Build argument PHP_VERSION needs to be set and non-empty.}\" \\\n\t&& export DEBIAN_FRONTEND=noninteractive \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n\t\tlibapache2-mod-php${PHP_VERSION} \\\n\t\tphp${PHP_VERSION} \\\n\t\tphp${PHP_VERSION}-bcmath \\\n\t\tphp${PHP_VERSION}-cli \\\n\t\tphp${PHP_VERSION}-curl \\\n\t\tphp${PHP_VERSION}-intl \\\n\t\tphp${PHP_VERSION}-ldap \\\n\t\tphp${PHP_VERSION}-mbstring \\\n\t\tphp${PHP_VERSION}-mysql \\\n\t\tphp${PHP_VERSION}-opcache \\\n\t\tphp${PHP_VERSION}-pgsql \\\n\t\tphp${PHP_VERSION}-soap \\\n\t\tphp${PHP_VERSION}-sqlite3 \\\n\t\tphp${PHP_VERSION}-xdebug \\\n\t\tphp${PHP_VERSION}-xml \\\n\t\tphp${PHP_VERSION}-xsl \\\n\t\tphp${PHP_VERSION}-zip \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tphp${PHP_VERSION}-apcu \\\n\t\tphp${PHP_VERSION}-gd \\\n\t\tphp${PHP_VERSION}-imagick \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Install requested version of Composer.\nRUN \\\n\t: \"${COMPOSER_VERSION:?Build argument COMPOSER_VERSION needs to be set and non-empty.}\" \\\n\t&& php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n\t&& php composer-setup.php --install-dir=/usr/local/bin --filename=composer --version=$COMPOSER_VERSION \\\n\t&& php -r \"unlink('composer-setup.php');\"\n\n# Install requested version of Node.\n# We add the PPA for ease of updating, while we download the specific node version manually if possible for installation.\nRUN \\\n\t: \"${NODE_VERSION:?Build argument NODE_VERSION needs to be set and non-empty.}\" \\\n\t&& N=${NODE_VERSION%%.*} \\\n\t&& curl -fSL https://deb.nodesource.com/setup_${N}.x | bash - \\\n\t&& DEB=\"$(curl -fSL https://deb.nodesource.com/node_${N}.x/pool/main/n/nodejs/ | perl -nwe 'BEGIN { $v = shift; $arch = shift; $re = qr/nodejs_\\Q$v\\E-.*_\\Q$arch.deb\\E/; $out=\"\"; } $out=$1 if /href=\"($re)\"/; END { print \"$out\"; }' \"${NODE_VERSION}\" \"$(dpkg --print-architecture)\")\" \\\n\t&& if [ -n \"$DEB\" ];then curl -fSL \"https://deb.nodesource.com/node_${N}.x/pool/main/n/nodejs/$DEB\" --output /tmp/nodejs.deb && dpkg -i /tmp/nodejs.deb; else DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y nodejs; fi \\\n\t&& rm -rf /var/lib/apt/lists/* /tmp/nodejs.deb\n\n# Install requested version of pnpm.\nRUN \\\n\t: \"${PNPM_VERSION:?Build argument PNPM_VERSION needs to be set and non-empty.}\" \\\n\t&& npm install --global pnpm@$PNPM_VERSION \\\n\t&& rm -rf ~/.npm && npm cache clean --force;\n\n# Install wp-cli.\nRUN curl -o /usr/local/bin/wp -fSL https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli-nightly.phar \\\n\t&& chmod +x /usr/local/bin/wp\n\n# Install PsySH to use in wp-cli shell.\nRUN mkdir /usr/local/src/psysh \\\n\t&& cd /usr/local/src/psysh \\\n\t&& composer require psy/psysh:@stable \\\n\t&& mkdir ~/.wp-cli \\\n\t&& echo \"require: /usr/local/src/psysh/vendor/autoload.php\" > ~/.wp-cli/config.yml \\\n\t&& rm -rf ~/.cache ~/.composer ~/.config ~/.local ~/.subversion\n\n# Copy a default config file for an apache host.\nCOPY ./config/apache_default /etc/apache2/sites-available/000-default.conf\n\n# Copy a default set of settings for PHP (php.ini).\nCOPY ./config/php.ini /etc/php/${PHP_VERSION}/apache2/conf.d/20-jetpack-wordpress.ini\nCOPY ./config/php.ini /etc/php/${PHP_VERSION}/cli/conf.d/20-jetpack-wordpress.ini\n\n# Copy single site htaccess to /var/lib/jetpack-config. run.sh will move it to the site's base dir if there's none present.\nCOPY ./config/htaccess /var/lib/jetpack-config/htaccess\nCOPY ./config/htaccess-multi /var/lib/jetpack-config/htaccess-multi\n\n# Copy wp-tests-config to /var/lib/jetpack-config. run.sh will move it to the WordPress source code base dir if there's none present.\nCOPY ./config/wp-tests-config.php /var/lib/jetpack-config/wp-tests-config.php\n\n# Copy a default set of settings for SMTP.\nCOPY ./config/ssmtp.conf /etc/ssmtp/ssmtp.conf\n\n# Copy our cmd bash script.\nCOPY ./bin/run.sh /usr/local/bin/run\n\n# Make our cmd script be executable.\nRUN chmod +x /usr/local/bin/run\n\n# Set the working directory for the next commands.\nWORKDIR /var/www/html\n\nCMD [\"/usr/local/bin/run\"]\n"
}