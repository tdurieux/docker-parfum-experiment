diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/automattic/mshots/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/automattic/mshots/Dockerfile/repaired.Dockerfile
index 0f95b3f..3b27279 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/automattic/mshots/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/automattic/mshots/Dockerfile/repaired.Dockerfile
@@ -6,23 +6,23 @@ ENV MSHOTS_CONTAINERIZED 1
 
 # Manually install missing shared libs for Chromium.
 RUN apt-get update && \
-    apt-get install -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
+    apt-get install --no-install-recommends -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
     libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
     libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \
     libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \
-    ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget vim
+    ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget vim && rm -rf /var/lib/apt/lists/*;
 
 # From: https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-in-docker
 # Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)
 # Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer
 # installs work.
 RUN apt-get update \
-    && apt-get install -y wget gnupg \
+    && apt-get install --no-install-recommends -y wget gnupg \
     && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
     && sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list' \
     && apt-get update \
     && apt-get install -y fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf \
-    --no-install-recommends
+    --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 
 # For arm64 builds on M1 Macs, google-chrome-unstable is not available, so we install chromium instead.
@@ -32,29 +32,29 @@ ARG TARGETARCH
 # ARG variables are not available inside the container, we make this visible inside the container
 # using ARCH so that we can switch the puppeteer executable based on ARCH. (see lib/snapshot.js)
 ENV ARCH $TARGETARCH
-RUN apt-get install -y $( if [ "$TARGETARCH" = "arm64" ]; then echo "chromium"; else echo "google-chrome-unstable"; fi; ) --no-install-recommends
+RUN apt-get install -y $( if [ "$TARGETARCH" = "arm64" ]; then echo "chromium"; else echo "google-chrome-unstable"; fi; ) --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 RUN rm -rf /var/lib/apt/lists/*
 
 # Install memcache extension
 RUN apt-get update \
-    && apt-get install -y memcached libmemcached-dev zlib1g-dev
+    && apt-get install --no-install-recommends -y memcached libmemcached-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN pecl install memcache-4.0.5.2 \
     && docker-php-ext-enable memcache
 
 # Install GD
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     libfreetype6-dev \
     libjpeg62-turbo-dev \
     libpng-dev \
     && docker-php-ext-configure gd --with-freetype --with-jpeg \
-    && docker-php-ext-install -j$(nproc) gd
+    && docker-php-ext-install -j$(nproc) gd && rm -rf /var/lib/apt/lists/*;
 
 RUN a2enmod rewrite
 
 # Install Node
-RUN curl -sL https://deb.nodesource.com/setup_14.x | bash -
-RUN apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # configure Apache and PHP
 RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"
@@ -100,7 +100,7 @@ RUN touch /var/run/mshots.pid \
 
 USER $UID
 
-RUN npm install --ignore-scripts
+RUN npm install --ignore-scripts && npm cache clean --force;
 # Force chromium binary installation
 ENV CHROMEDRIVER_SKIP_DOWNLOAD ''
 RUN cd node_modules/puppeteer \