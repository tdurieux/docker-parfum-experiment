{
  "startTime": 1674255674793,
  "endTime": 1674255676117,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.4-apache-buster\n\n# Note ARGs UID, GID and USER are defined later to reduce rebuilding time\n\nENV MSHOTS_CONTAINERIZED 1\n\n# Manually install missing shared libs for Chromium.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \\\n    libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \\\n    libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \\\n    libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \\\n    ca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget vim && rm -rf /var/lib/apt/lists/*;\n\n# From: https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#running-puppeteer-in-docker\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer\n# installs work.\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y wget gnupg \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf \\\n    --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n\n# For arm64 builds on M1 Macs, google-chrome-unstable is not available, so we install chromium instead.\n# We use TARGETARCH to switch between these packages\n# see: https://docs.docker.com/engine/reference/builder/#automatic-platform-args-in-the-global-scope\nARG TARGETARCH\n# ARG variables are not available inside the container, we make this visible inside the container\n# using ARCH so that we can switch the puppeteer executable based on ARCH. (see lib/snapshot.js)\nENV ARCH $TARGETARCH\nRUN apt-get install -y $( if [ \"$TARGETARCH\" = \"arm64\" ]; then echo \"chromium\"; else echo \"google-chrome-unstable\"; fi; ) --no-install-recommends && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\n\n# Install memcache extension\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y memcached libmemcached-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pecl install memcache-4.0.5.2 \\\n    && docker-php-ext-enable memcache\n\n# Install GD\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libfreetype6-dev \\\n    libjpeg62-turbo-dev \\\n    libpng-dev \\\n    && docker-php-ext-configure gd --with-freetype --with-jpeg \\\n    && docker-php-ext-install -j$(nproc) gd && rm -rf /var/lib/apt/lists/*;\n\nRUN a2enmod rewrite\n\n# Install Node\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# configure Apache and PHP\nRUN mv \"$PHP_INI_DIR/php.ini-development\" \"$PHP_INI_DIR/php.ini\"\n\nRUN echo \"\\r\\nlog_errors = On\" >> \"$PHP_INI_DIR/php.ini\"\nRUN echo \"\\r\\nerror_log = /dev/stderr\" >> \"$PHP_INI_DIR/php.ini\"\n\nENV APACHE_DOCUMENT_ROOT /opt/mshots/public_html\n\nRUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf\nRUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf\nRUN sed -i 's/80/8000/g' /etc/apache2/sites-available/000-default.conf /etc/apache2/ports.conf\n# Apache requires us to put our \"AllowEncodedSlashes\" inside our VirtualHost\n# https://stackoverflow.com/questions/4390436/need-to-allow-encoded-slashes-on-apache\n# -> https://bz.apache.org/bugzilla/show_bug.cgi?id=46830\nRUN sed -i '/^<VirtualHost/a   AllowEncodedSlashes On' /etc/apache2/sites-enabled/000-default.conf\n\n# This is where mshots wants to run\nWORKDIR /opt/mshots\nCOPY . /opt/mshots\n\n# Set up node & npm\nENV npm_config_cache=/var/www/.npm\nRUN mkdir -p /var/www/.npm /usr/local/node/bin\nRUN ln -s /usr/bin/node /usr/local/node/bin\n\n# Setup our user and permissions\n# These are overridden by values in ./.env if it exists\nARG UID=33\nARG GID=33\nARG USER=www-data\n\nRUN groupadd --force -g $GID $USER\nRUN adduser --disabled-password --no-create-home --uid $UID --gid $GID --gecos '' $USER || true\n\nRUN touch /var/run/mshots.pid \\\n    && chown -R $UID /var/run/mshots.pid \\\n    && chown -RL $UID /var/run \\\n    && chown -R $UID /var/www/html \\\n    && chown -R $UID /usr/local/node/bin \\\n    && chown -R $UID /opt/mshots \\\n    && chown -R $UID /var/www/.npm\n\nUSER $UID\n\nRUN npm install --ignore-scripts && npm cache clean --force;\n# Force chromium binary installation\nENV CHROMEDRIVER_SKIP_DOWNLOAD ''\nRUN cd node_modules/puppeteer \\\n    && node ./install.js\n\n# Get started\nEXPOSE 8000\n"
}