{
  "startTime": 1674255184723,
  "endTime": 1674255185591,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 168
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TERWAY_POLICY_IMAGE=registry.cn-hongkong.aliyuncs.com/acs/terway:policy-20220610-0439efc@sha256:aa1a7b790add8e208a12e1033f69375d68990409a55de07ddb2c93795283131c\nARG CILIUM_LLVM_IMAGE=quay.io/cilium/cilium-llvm:0147a23fdada32bd51b4f313c645bcb5fbe188d6@sha256:24fd3ad32471d0e45844c856c38f1b2d4ac8bd0a2d4edf64cffaaa3fd0b21202\nARG CILIUM_BPFTOOL_IMAGE=quay.io/cilium/cilium-bpftool:b5ba881d2a7ec68d88ecd72efd60ac551c720701@sha256:458282e59657b8f779d52ae2be2cdbeecfe68c3d807ff87c97c8d5c6f97820a9\nARG CILIUM_IPROUTE2_IMAGE=quay.io/cilium/cilium-iproute2:4db2c4bdf00ce461406e1c82aada461356fac935@sha256:e4c9ba92996a07964c1b7cd97c4aac950754ec75d7ac8c626a99c79acd0479ab\n\nFROM --platform=$TARGETPLATFORM ${TERWAY_POLICY_IMAGE} as policy-dist\nFROM --platform=$TARGETPLATFORM ${CILIUM_LLVM_IMAGE} as llvm-dist\nFROM --platform=$TARGETPLATFORM ${CILIUM_BPFTOOL_IMAGE} as bpftool-dist\nFROM --platform=$TARGETPLATFORM ${CILIUM_IPROUTE2_IMAGE} as iproute2-dist\n\nFROM --platform=$TARGETPLATFORM golang:1.18.0 as builder\nARG GOPROXY\nENV GOPROXY $GOPROXY\nWORKDIR /go/src/github.com/AliyunContainerService/terway/\nCOPY go.sum go.sum\nCOPY go.mod go.mod\nRUN go mod download\nCOPY . .\nRUN cd cmd/terway && CGO_ENABLED=0 GOOS=linux go build -tags default_build \\\n    -ldflags \\\n    \"-X \\\"k8s.io/client-go/pkg/version.gitCommit=`git rev-parse HEAD`\\\" \\\n    -X \\\"k8s.io/client-go/pkg/version.buildDate=`date -u +'%Y-%m-%dT%H:%M:%SZ'`\\\" \\\n    -X \\\"github.com/AliyunContainerService/terway/pkg/aliyun.kubernetesAlicloudIdentity=Kubernetes.Alicloud/`git rev-parse --short HEAD 2>/dev/null`\\\"\" -o terwayd .\nRUN cd plugin/terway && CGO_ENABLED=0 GOOS=linux go build -tags default_build -o terway .\nRUN cd cmd/terway-cli && CGO_ENABLED=0 GOOS=linux go build -tags default_build -o terway-cli .\n\nFROM --platform=$TARGETPLATFORM ubuntu:20.04\nRUN apt-get update && apt-get install --no-install-recommends -y kmod libelf1 libmnl0 iptables nftables kmod curl ipset bash ethtool bridge-utils socat grep findutils jq conntrack iputils-ping && \\\n    apt-get purge --auto-remove && apt-get clean && rm -rf /var/lib/apt/lists/*\nCOPY --from=llvm-dist /usr/local/bin/clang /usr/local/bin/llc /bin/\nCOPY --from=bpftool-dist /usr/local /usr/local\nCOPY --from=iproute2-dist /usr/local /usr/local\nCOPY --from=policy-dist /bin/calico-felix /bin/calico-felix\nCOPY policy/policyinit.sh /bin/\nCOPY policy/uninstall_policy.sh /bin/\nCOPY init.sh /bin/\nCOPY --from=policy-dist /tmp/install/ /\nCOPY --from=builder /go/src/github.com/AliyunContainerService/terway/cmd/terway/terwayd /usr/bin/terwayd\nCOPY --from=builder /go/src/github.com/AliyunContainerService/terway/plugin/terway/terway /usr/bin/terway\nCOPY --from=builder /go/src/github.com/AliyunContainerService/terway/cmd/terway-cli/terway-cli /usr/bin/terway-cli\nCOPY hack/iptables-wrapper-installer.sh /iptables-wrapper-installer.sh\nRUN /iptables-wrapper-installer.sh --no-sanity-check\nENTRYPOINT [\"/usr/bin/terwayd\"]\n"
}