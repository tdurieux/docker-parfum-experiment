diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aliyuncontainerservice/docker-machine-driver-aliyunecs/vendor/github.com/docker/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aliyuncontainerservice/docker-machine-driver-aliyunecs/vendor/github.com/docker/docker/Dockerfile/repaired.Dockerfile
index fdf3522..3d7a3f6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aliyuncontainerservice/docker-machine-driver-aliyunecs/vendor/github.com/docker/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aliyuncontainerservice/docker-machine-driver-aliyunecs/vendor/github.com/docker/docker/Dockerfile/repaired.Dockerfile
@@ -49,7 +49,7 @@ RUN apt-get update && apt-get install -y \
 	ruby1.9.1 \
 	ruby1.9.1-dev \
 	s3cmd=1.1.0* \
-	--no-install-recommends
+	--no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 # Get lvm2 source for compiling statically
 RUN git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/lvm2
@@ -57,7 +57,7 @@ RUN git clone -b v2_02_103 https://git.fedorahosted.org/git/lvm2.git /usr/local/
 
 # Compile and install lvm2
 RUN cd /usr/local/lvm2 \
-	&& ./configure --enable-static_link \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-static_link \
 	&& make device-mapper \
 	&& make install_device-mapper
 # see https://git.fedorahosted.org/cgit/lvm2.git/tree/INSTALL
@@ -65,16 +65,16 @@ RUN cd /usr/local/lvm2 \
 # Install lxc
 ENV LXC_VERSION 1.0.7
 RUN mkdir -p /usr/src/lxc \
-	&& curl -sSL https://linuxcontainers.org/downloads/lxc/lxc-${LXC_VERSION}.tar.gz | tar -v -C /usr/src/lxc/ -xz --strip-components=1
+	&& curl -f -sSL https://linuxcontainers.org/downloads/lxc/lxc-${LXC_VERSION}.tar.gz | tar -v -C /usr/src/lxc/ -xz --strip-components=1 && rm -rf /usr/src/lxc
 RUN cd /usr/src/lxc \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 	&& make \
 	&& make install \
 	&& ldconfig
 
 # Install Go
 ENV GO_VERSION 1.4.1
-RUN curl -sSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/local -xz \
+RUN curl -f -sSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/local -xz \
 	&& mkdir -p /go/bin
 ENV PATH /go/bin:/usr/local/go/bin:$PATH
 ENV GOPATH /go:/go/src/github.com/docker/docker/vendor
@@ -101,7 +101,7 @@ RUN cd /usr/local/go/src \
 
 # We still support compiling with older Go, so need to grab older "gofmt"
 ENV GOFMT_VERSION 1.3.3
-RUN curl -sSL https://storage.googleapis.com/golang/go${GOFMT_VERSION}.$(go env GOOS)-$(go env GOARCH).tar.gz | tar -C /go/bin -xz --strip-components=2 go/bin/gofmt
+RUN curl -f -sSL https://storage.googleapis.com/golang/go${GOFMT_VERSION}.$(go env GOOS)-$(go env GOARCH).tar.gz | tar -C /go/bin -xz --strip-components=2 go/bin/gofmt
 
 # Grab Go's cover tool for dead-simple code coverage testing
 RUN go get golang.org/x/tools/cmd/cover
@@ -113,7 +113,7 @@ RUN gem install --no-rdoc --no-ri fpm --version 1.3.2
 RUN git clone -b buildroot-2014.02 https://github.com/jpetazzo/docker-busybox.git /docker-busybox
 
 # Get the "cirros" image source so we can import it instead of fetching it during tests
-RUN curl -sSL -o /cirros.tar.gz https://github.com/ewindisch/docker-cirros/raw/1cded459668e8b9dbf4ef976c94c05add9bbd8e9/cirros-0.3.0-x86_64-lxc.tar.gz
+RUN curl -f -sSL -o /cirros.tar.gz https://github.com/ewindisch/docker-cirros/raw/1cded459668e8b9dbf4ef976c94c05add9bbd8e9/cirros-0.3.0-x86_64-lxc.tar.gz
 
 # Install registry
 ENV REGISTRY_COMMIT c448e0416925a9876d5576e412703c9b8b865e19