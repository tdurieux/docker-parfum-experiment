{
  "startTime": 1674216202899,
  "endTime": 1674216203764,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 15,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 56,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 1,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 1,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t smartnet-player .\n# do a `git pull` in smartnet-player to update\n\nFROM node:10\n\n#RUN useradd --user-group --create-home --shell /bin/false app &&\\\n#  npm install --global npm@3.7.5\nRUN echo deb http://www.deb-multimedia.org stretch main non-free \\\n\t>>/etc/apt/sources.list && apt-get update && \\\n\tapt-get install --no-install-recommends -y --force-yes deb-multimedia-keyring && \\\n\tapt-get update && \\\n\tapt-get install --no-install-recommends -y ffmpeg cron python build-essential g++ && rm -rf /var/lib/apt/lists/*;\n\nENV HOME=/home/app\n\n\nRUN mkdir -p /home/app\nCOPY package.json /tmp\nRUN cd /tmp && npm --unsafe-perm install -g node-gyp && npm --unsafe-perm install && npm cache clean --force;\nRUN mkdir -p /home/app/upload && cp -a /tmp/node_modules /home/app\n\nWORKDIR $HOME/\nCOPY . $HOME/\n\n# Run the command on container startup\nCMD node index.js\n"
}