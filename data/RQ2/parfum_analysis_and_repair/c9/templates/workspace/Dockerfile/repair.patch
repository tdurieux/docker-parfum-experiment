diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/c9/templates/workspace/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/c9/templates/workspace/Dockerfile/repaired.Dockerfile
index 24cd325..3454f2e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/c9/templates/workspace/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/c9/templates/workspace/Dockerfile/repaired.Dockerfile
@@ -8,19 +8,19 @@ RUN echo "Version 1.13"
 
 # Set mirrors to automatic based off location
 RUN apt-get update --fix-missing
-RUN apt-get install -y curl
+RUN apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;
 ADD files/auto-sources.sh /var/tmp/auto-sources.sh
 #RUN bash /var/tmp/auto-sources.sh && rm /var/tmp/auto-sources.sh
 
 # Install add-apt-repository script
-RUN apt-get install -y software-properties-common apt-transport-https
+RUN apt-get install --no-install-recommends -y software-properties-common apt-transport-https && rm -rf /var/lib/apt/lists/*;
 # Add a recent version of git
 RUN add-apt-repository -y ppa:git-core/ppa
 # 32-bit support
 RUN dpkg --add-architecture i386 && \
     apt-get update --fix-missing && \
-    apt-get install -y libc6:i386 libncurses5:i386 libstdc++6:i386
-RUN apt-get install -y bash console-setup sudo wget curl git python python-pip python3 python3-pip man-db && \
+    apt-get install --no-install-recommends -y libc6:i386 libncurses5:i386 libstdc++6:i386 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y bash console-setup sudo wget curl git python python-pip python3 python3-pip man-db && \
     echo "install console-setup" && \
     echo "console-setup   console-setup/codeset47 select  # Latin1 and Latin5 - western Europe and Turkic languages" | debconf-set-selections && \
     echo "console-setup   console-setup/fontface47        select  Fixed" | debconf-set-selections && \
@@ -36,11 +36,11 @@ RUN apt-get install -y bash console-setup sudo wget curl git python python-pip p
     echo "Create user and enable root access" && \
     useradd --uid 1000 --shell /bin/bash -m --home-dir /home/ubuntu ubuntu && \
     sed -i 's/%sudo\s.*/%sudo ALL=NOPASSWD:ALL/' /etc/sudoers && \
-    usermod -a -G sudo ubuntu
+    usermod -a -G sudo ubuntu && rm -rf /var/lib/apt/lists/*;
 
 # node.js and nvm
 USER ubuntu
-RUN curl https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | sh -e && \
+RUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh | sh -e && \
     echo '[ -s "/home/ubuntu/.nvm/nvm.sh" ] && . "/home/ubuntu/.nvm/nvm.sh" # This loads nvm' >> /home/ubuntu/.profile
 RUN bash -l -c " \
     nvm install 6 && \
@@ -52,45 +52,45 @@ RUN bash -l -c "npm set progress=false"
 USER root
 
 # Java
-RUN apt-get install -y openjdk-7-jre
-RUN apt-get install -y ant maven2
+RUN apt-get install --no-install-recommends -y openjdk-7-jre && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y ant maven2 && rm -rf /var/lib/apt/lists/*;
 
 # editors
-RUN apt-get install -y nano vim vim-addon-manager vim-vimoutliner vim-doc ctags indent
+RUN apt-get install --no-install-recommends -y nano vim vim-addon-manager vim-vimoutliner vim-doc ctags indent && rm -rf /var/lib/apt/lists/*;
 
 # servers
-RUN apt-get install -y redis-server redis-tools nginx mysql-server \
-    rabbitmq-server couchdb
+RUN apt-get install --no-install-recommends -y redis-server redis-tools nginx mysql-server \
+    rabbitmq-server couchdb && rm -rf /var/lib/apt/lists/*;
 
 # Postgres
-RUN apt-get install -y postgresql-9.3 && \
+RUN apt-get install --no-install-recommends -y postgresql-9.3 && \
     /etc/init.d/postgresql start && \
     sudo -u postgres createuser -srd ubuntu && \
-    sudo -u postgres psql -c "create database ubuntu owner=ubuntu"
+    sudo -u postgres psql -c "create database ubuntu owner=ubuntu" && rm -rf /var/lib/apt/lists/*;
 
 # misc tools
-RUN apt-get install -y dnsutils bash-completion xsltproc \
+RUN apt-get install --no-install-recommends -y dnsutils bash-completion xsltproc \
     build-essential fakeroot tmux duplicity lftp htop apt-file \
     parallel strace ltrace flex jq ack-grep gdb valgrind locate tree time \
-    zip unp cmake
+    zip unp cmake && rm -rf /var/lib/apt/lists/*;
 RUN apt-file update
 
 # Version control
-RUN apt-get install -y git-all tig subversion subversion-tools cvs \
-    mercurial bzr bzrtools git-svn
+RUN apt-get install --no-install-recommends -y git-all tig subversion subversion-tools cvs \
+    mercurial bzr bzrtools git-svn && rm -rf /var/lib/apt/lists/*;
 
 # libraries and headers
-RUN apt-get install -y libcairo2-dev libjpeg62-dev libgif-dev libpq-dev \
+RUN apt-get install --no-install-recommends -y libcairo2-dev libjpeg62-dev libgif-dev libpq-dev \
     libboost-all-dev libzmq-dev libwww-curl-perl libbz2-dev dpkg-dev \
     ruby1.9.1-dev dialog python-gtk2 libpango1.0 libpango1.0-dev \
-    libmysqlclient-dev
+    libmysqlclient-dev && rm -rf /var/lib/apt/lists/*;
 
 # Enable repo for alternative python versions
 RUN yes | add-apt-repository ppa:fkrull/deadsnakes
 
 # install ruby/rails/rvm
 ADD ./files/etc/gemrc /etc/gemrc
-RUN apt-get install -y gawk libxml2-dev libxslt-dev libgdbm-dev libgmp-dev sqlite3
+RUN apt-get install --no-install-recommends -y gawk libxml2-dev libxslt-dev libgdbm-dev libgmp-dev sqlite3 && rm -rf /var/lib/apt/lists/*;
 RUN sudo -u ubuntu -i bash -l -c " \
         echo 'Installing rvm...' \
             && gpg -q --keyserver hkp://pgp.mit.edu --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3 \
@@ -109,7 +109,7 @@ RUN wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh -e
 RUN sudo -u ubuntu -i heroku --help
 
 # /opt packages
-RUN curl https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz | tar -C /opt -xz
+RUN curl -f https://storage.googleapis.com/golang/go1.8.3.linux-amd64.tar.gz | tar -C /opt -xz
 RUN git clone https://github.com/lennartcl/gitl.git /opt/gitl
 
 # setup the system
@@ -119,7 +119,7 @@ RUN echo -n "" > /etc/motd && \
     HOME=/root bash -l /etc/bash_completion
 
 # Install apache
-RUN apt-get install -y apache2
+RUN apt-get install --no-install-recommends -y apache2 && rm -rf /var/lib/apt/lists/*;
 
 ADD ./files/etc /etc
 ADD ./files/home /home
@@ -142,12 +142,12 @@ RUN echo "Configure apache2" && \
 RUN echo "Configure php" && \
     /etc/init.d/mysql start && \
     /etc/init.d/postgresql start && \
-    apt-get install -y php5 php5-cli php5-fpm php5-pgsql php5-mysql phpmyadmin phppgadmin && \
+    apt-get install --no-install-recommends -y php5 php5-cli php5-fpm php5-pgsql php5-mysql phpmyadmin phppgadmin && \
     php5enmod c9 && \
     chmod 777 /var/lib/phpmyadmin/tmp && \
     cd /etc/php5/mods-available && ls *.ini | sed 's/\.ini$//' | xargs php5enmod && \
-    curl -sS https://getcomposer.org/installer | php && \
-    mv composer.phar /usr/bin/composer
+    curl -f -sS https://getcomposer.org/installer | php && \
+    mv composer.phar /usr/bin/composer && rm -rf /var/lib/apt/lists/*;
 
 # Add additional repos for users
 # MongoDB (Create the default data dir with correct permissions)