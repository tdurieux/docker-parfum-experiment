{
  "startTime": 1674249926794,
  "endTime": 1674249928315,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 12,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends wget git build-essential cmake gcc g++ gfortran \\\n        lftp clustalo raxml libhmsbeagle1v5 mrbayes r-base-core \\\n        r-recommended r-cran-ape r-cran-ade4 r-cran-vegan r-cran-dbi r-cran-rsqlite r-cran-rcolorbrewer \\\n        r-cran-igraph r-cran-getopt sqlite3 sqlite3-doc libmagick++-dev python python-setuptools \\\n        python-scipy python-numpy python-biopython python-biopython-sql python-igraph \\\n        cython mpi-default-bin mpi-default-dev mrbayes-mpi python-pip \\\n        openjdk-11-jdk openjdk-11-jre parallel libdw1 libdw-dev libgsl23 libgsl-dev \\\n        libxml2-dev libcurl4-openssl-dev locales linuxbrew-wrapper rsync \\\n        libboost-dev libboost-serialization-dev libboost-mpi-dev \\\n        libbpp-core-dev libbpp-phyl-dev libbpp-seq-dev libbpp-seq-omics-dev \\\n        libdatetime-perl libxml-simple-perl libdigest-md5-perl bioperl snp-sites libidn11 \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN echo 'source(\"https://bioconductor.org/biocLite.R\") ; biocLite(\"topGO\") ; install.packages(c(\"phytools\",\"pvclust\"), repos=\"https://pbil.univ-lyon1.fr/CRAN/\")' | R --vanilla\n\n# HOMEBREW\n# apt-get install -y --no-install-recommends linuxbrew-wrapper\n#RUN localedef -i en_US -f UTF-8 en_US.UTF-8 \\\n#   && useradd -m -s /bin/bash linuxbrew \\\n#   && echo 'linuxbrew ALL=(ALL) NOPASSWD:ALL' >>/etc/sudoers\n#USER linuxbrew\n#WORKDIR /home/linuxbrew\n#ENV USER=linuxbrew \\\n#    PATH=/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH \\\n#    SHELL=/bin/bash\n#RUN HOMEBREW_NO_ANALYTICS=1 HOMEBREW_NO_AUTO_UPDATE=1 brew tap brewsci/bio\n#RUN HOMEBREW_NO_ANALYTICS=1 HOMEBREW_NO_AUTO_UPDATE=1 mkdir -p /home/linuxbrew/.linuxbrew/var/homebrew/linked && brew doctor\n#USER root\n#WORKDIR /\n\n# PERL modules\nRUN cpan -T Module::Build Bio::Perl\n\n# PYTHON libs\nRUN pip install --no-cache-dir bcbio-gff==0.6.9 bioscripts.convert\n\n# BLAST+ v2.8.1 ( >= 2.8 required by Prokka)\nARG BLAST_TAG=2.8.1\nARG BLAST_NAME=ncbi-blast-${BLAST_TAG}+\nARG BLAST_ARCHIVE=${BLAST_NAME}-x64-linux.tar.gz\nARG BLAST_URL=ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/${BLAST_TAG}/${BLAST_ARCHIVE}\nRUN cd /opt \\\n    && wget ${BLAST_URL} --progress=dot:giga \\\n    && tar xzf ${BLAST_ARCHIVE} \\\n    && rm ${BLAST_ARCHIVE}\n\n# add relevant locations to the PATH\nENV PATH=\"/pantagruel:/pantagruel/scripts:/pantagruel/scripts/pipeline:/opt/${BLAST_NAME}/bin:/MMseqs2/build/bin:/prokka/bin:/ALE/build/bin:/pal2nal.v14:/mad:/mash-Linux64-v2.2/${PATH}\"\nENV PYTHONPATH=\"/pantagruel/python_libs:${PYTHONPATH}\"\n\n# PROKKA v1.14.5\n#RUN brew install brewsci/bio/prokka && prokka --setupdb\nRUN cd / && git clone https://github.com/tseemann/prokka.git \\\n    && cd prokka && git checkout v1.14.5\n# set up Prokka\nRUN prokka --setupdb\n\n# MMSEQS v10\n#RUN brew install mmseqs2\nRUN cd / && git clone https://github.com/soedinglab/MMseqs2.git \\\n    && cd MMseqs2/ && git checkout 10-6d92c && mkdir build && cd build \\\n    && cmake -DHAVE_SSE4_1=1 -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=. .. \\\n    && make && make install\n\n#PAL2NAL\nRUN cd / && wget https://www.bork.embl.de/pal2nal/distribution/pal2nal.v14.tar.gz \\\n    && tar -xzf pal2nal.v14.tar.gz \\\n    && chmod +x /pal2nal.v14/pal2nal.pl && rm pal2nal.v14.tar.gz\n\n#MAD\nRUN cd / && wget --progress=dot:giga https://www.mikrobio.uni-kiel.de/de/ag-dagan/ressourcen/mad2-2.zip \\\n    && unzip mad2-2.zip && chmod +x /mad/mad\n\n#INTERPROSCAN\n#RUN (cd /usr/local && wget -O interproscan-5.35-74.0-64-bit.tar.gz ftp://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/5.35-74.0/interproscan-5.35-74.0-64-bit.tar.gz)\n\n# LSD\nRUN cd / && wget --progress=dot:giga -O /usr/bin/lsd https://github.com/tothuhien/lsd-0.3beta/releases/download/v0.3.3/lsd_unix \\\n    && chmod +x /usr/bin/lsd\n\n# ALE\nRUN cd / && git clone https://github.com/ssolo/ALE \\\n    && cd ALE \\\n    && git checkout 168274f71ac819047e9cc446fc3608ae32789e27 \\\n\t&& mkdir build && cd build \\\n    && cmake .. && make\n\n# tbl2asn (Prokka dependency)\nRUN cd / && wget --progress=dot:giga ftp://ftp.ncbi.nih.gov/toolbox/ncbi_tools/converters/by_program/tbl2asn/linux64.tbl2asn.gz \\\n    && gzip -d linux64.tbl2asn.gz && chmod +x linux64.tbl2asn && mv -f linux64.tbl2asn /usr/bin/tbl2asn\n\n# MASH\nRUN cd / && wget https://github.com/marbl/Mash/releases/download/v2.2/mash-Linux64-v2.2.tar \\\n    && tar -xf mash-Linux64-v2.2.tar && rm mash-Linux64-v2.2.tar && chmod +x mash-Linux64-v2.2/mash\n\n# make pantagruel executable and scripts available\n# last echo command is a dummy one that can be edited so that build is resumed at this stage\nCOPY . /pantagruel/\nRUN cd /pantagruel \\\n    && echo \"included pantagruel version: $(git log | head -n 1 | awk '{ print $2 }')\" \\\n\t&& echo \"Dockerfile last edited on $(ls -l Dockerfile | awk '{print $6,$7,$8}')\"\n"
}