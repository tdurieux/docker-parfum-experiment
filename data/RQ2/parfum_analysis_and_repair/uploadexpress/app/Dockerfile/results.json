{
  "startTime": 1674219810558,
  "endTime": 1674219811279,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM golang:latest as build-backend\nENV GO111MODULE=on\nADD . /go/src/github.com/uploadexpress/app/\nWORKDIR /go/src/github.com/uploadexpress/app/\nRUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o main ./cmd/server/main.go\n\nFROM node:latest as build-frontend\nWORKDIR /usr/src/app\nCOPY www/package.json www/yarn.lock ./\nRUN yarn && yarn cache clean;\nCOPY ./www ./\nRUN yarn build && yarn cache clean;\n\nFROM alpine:latest\nRUN apk update && apk add ca-certificates && rm -rf /var/cache/apk/*\nWORKDIR /app\nCOPY --from=build-backend /go/src/github.com/uploadexpress/app/main .\nCOPY --from=build-frontend /usr/src/app/build ./front\nEXPOSE 4000\nRUN chmod +x ./main\nCMD [\"./main\"]\n\n"
}