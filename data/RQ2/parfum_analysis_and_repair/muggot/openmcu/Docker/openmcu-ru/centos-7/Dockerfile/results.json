{
  "startTime": 1674251221818,
  "endTime": 1674251222727,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 20,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\n# fail if build with libvpx > 1.5\n\nENV NASM_VER=\"2.13.01\" \\\n MCU_CONF_OPTS=\"--enable-static --disable-v4l --disable-v4l2\" \\\n FFMPEG_VER=\"4.3\" \\\n LIBVPX_VER=\"1.5.0\"\n\nRUN mkdir -p /tmp/build \\\n && cd /tmp/build \\\n && yum install -y wget bzip2 which freetype-devel freetype \\\n kernel-devel gcc gcc-c++ make patch git flex bison autoconf automake pkgconfig \\\n rpm-build libtool libtool-ltdl-devel openssl-devel \\\n && wget https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VER}/nasm-${NASM_VER}.tar.xz \\\n && tar -xvf ./nasm-${NASM_VER}.tar.xz \\\n && cd nasm-${NASM_VER} \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd .. \\\n && git clone https://code.videolan.org/videolan/x264.git ./x264 \\\n && cd ./x264 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared && make && make install && cd .. \\\n && wget https://github.com/webmproject/libvpx/archive/v${LIBVPX_VER}.tar.gz \\\n && tar -xzf v${LIBVPX_VER}.tar.gz \\\n && cd libvpx-${LIBVPX_VER} \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared && make && make install && cd .. \\\n && wget https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VER}.tar.gz \\\n && tar xvfz ./ffmpeg-${FFMPEG_VER}.tar.gz \\\n && cd ./ffmpeg-${FFMPEG_VER} \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-libx264 --enable-libvpx --enable-gpl --disable-static --enable-shared \\\n && make -j 3 && make install && cd .. \\\n && git clone git://github.com/muggot/openmcu.git ./openmcu-ru \\\n && cd ./openmcu-ru \\\n && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $MCU_CONF_OPTS && make -j 3 && make install \\\n && rm -rf /tmp/* \\\n && yum remove -y wget bzip2 which git freetype-devel flex bison autoconf automake pkgconfig \\\n rpm-build libtool libtool-ltdl-devel openssl-devel \\\n && yum clean all || echo \"not all clean\" \\\n && rm -rf /var/cache/yum && rm ./nasm-${NASM_VER}.tar.xz\n\n EXPOSE 5060 5061 1420 1554 1720\n\nCMD [\"/opt/openmcu-ru/bin/openmcu-ru\", \"-x\"]\n"
}