{
  "startTime": 1674253715020,
  "endTime": 1674253716450,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 20,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 25,
        "columnEnd": 53
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 23,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 91,
        "columnEnd": 135
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# OpenMCU-ru with H.323 support\n\nFROM ubuntu:14.04\n\n# Install dependenties\n\nENV MAKE_OPTS=\"-j 3\"\nENV PREFIX=\"/opt\"\nENV LD_LIBRARY_PATH=/opt/openmcu-ru/lib:/opt/lib\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n build-essential libssl-dev flex bison autoconf automake pkg-config \\\n libfreetype6-dev libjpeg62-dev md5deep libtool libavformat-dev libvpx-dev \\\n libavcodec-dev libavutil-dev libswscale-dev libsamplerate0-dev git wget \\\n && cd /tmp && export PATH=$PREFIX/bin:$PATH \\\n && echo \"--------YASM---------\" \\\n && wget https://www.tortall.net/projects/yasm/releases/yasm-1.2.0.tar.gz \\\n && tar xvfz ./yasm-1.2.0.tar.gz && mv ./yasm-1.2.0 ./yasm && rm ./yasm-1.2.0.tar.gz \\\n && cd /tmp/yasm && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PREFIX \\\n && make && make install \\\n && echo \"--------SOFIA-SIP---------\" \\\n && cd .. && wget https://sourceforge.net/projects/sofia-sip/files/sofia-sip/1.12.11/sofia-sip-1.12.11.tar.gz \\\n && tar xvfz ./sofia-sip-1.12.11.tar.gz && mv ./sofia-sip-1.12.11 ./sofia-sip && rm ./sofia-sip-1.12.11.tar.gz \\\n && cd /tmp/sofia-sip && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PREFIX \\\n && make && make install \\\n && echo \"--------OPUS---------\" \\\n && cd .. && wget https://ftp.osuosl.org/pub/xiph/releases/opus/opus-1.1.tar.gz \\\n && tar xvfz ./opus-1.1.tar.gz && mv ./opus-1.1 ./libopus && rm ./opus-1.1.tar.gz \\\n && cd /tmp/libopus && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --prefix=$PREFIX \\\n && make clean && make && make install \\\n && echo \"--------LIBVPX---------\" \\\n && cd .. && wget https://ftp.osuosl.org/pub/blfs/conglomeration/libvpx/libvpx-v1.1.0.tar.bz2 \\\n && tar xvfj ./libvpx-v1.1.0.tar.bz2 && mv ./libvpx-v1.1.0 ./libvpx && rm ./libvpx-v1.1.0.tar.bz2 \\\n && cd /tmp/libvpx && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PREFIX --enable-shared \\\n && make clean && make && make install \\\n && echo \"--------X264---------\" \\\n && cd .. && git clone https://code.videolan.org/videolan/x264.git ./x264 \\\n && cd /tmp/x264 && git checkout `git rev-list -n 1 --before=\"2017-02-22 01:00\" master` && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PREFIX --enable-shared \\\n && make clean && make && make install \\\n && echo \"--------FFMPEG---------\" \\\n && cd .. && wget https://ffmpeg.org/releases/ffmpeg-0.10.4.tar.gz \\\n && tar xvfz ./ffmpeg-0.10.4.tar.gz && mv ./ffmpeg-0.10.4 ./ffmpeg && rm ./ffmpeg-0.10.4.tar.gz && cd /tmp/ffmpeg \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-libx264 --enable-libvpx --enable-gpl --disable-static \\\n --enable-shared --prefix=$PREFIX --extra-cflags=-I$PREFIX/include/ --extra-ldflags=-L$PREFIX/lib/ \\\n && make clean && make && make install \\\n && rm -rf /tmp/* && rm -rf /var/cache/apt/* && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"--------Install OPENMCU---------\" \\\n && cd /tmp && git clone git://github.com/willamowius/openmcu.git ./openmcu-ru \\\n && cd /tmp/openmcu-ru \\\n && ./autogen.sh \\\n && CPPFLAGS=\"-I/opt/include -I/tmp/openmcu-ru/libs/h323plus/include\" LDFLAGS=\"-L/opt/lib -L/opt/openmcu-ru/lib\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make && make install \\\n && rm -rf /tmp/*\n\nEXPOSE 5060-5061/udp 1420 1554 1719/udp 1720 20000-20100 30000-30500/udp\nCMD [\"/opt/openmcu-ru/bin/openmcu-ru\", \"-x\"]\n\n"
}