{
  "startTime": 1674253960567,
  "endTime": 1674253961603,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile to build the image of the tiny_yolov2_onnx_cam application\n#\n\nARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.5.0\nFROM ${BASE_IMAGE}\n\nARG REPOSITORY_NAME=tiny_yolov2_onnx_cam\n#ARG MODEL_URL='https://github.com/onnx/models/raw/master/vision/object_detection_segmentation/tiny-yolov2/model/tinyyolov2-8.tar.gz'\nARG MODEL_URL='https://github.com/onnx/models/raw/main/vision/object_detection_segmentation/tiny-yolov2/model/tinyyolov2-8.tar.gz'\nARG LABEL_URL='https://raw.githubusercontent.com/pjreddie/darknet/master/data/voc.names'\n\nENV DEBIAN_FRONTEND=noninteractive\nENV LANG C.UTF-8\nENV PATH=\"/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\"\n\nWORKDIR /tmp\n\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\nCOPY  nvidia-l4t-apt-source.list /etc/apt/sources.list.d/nvidia-l4t-apt-source.list\nCOPY  jetson-ota-public.asc /etc/apt/trusted.gpg.d/jetson-ota-public.asc\nRUN apt-get update\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y libopencv-python && \\\n    apt-get install -y --no-install-recommends \\\n        python3-pip \\\n        python3-dev \\\n        build-essential \\\n        zlib1g-dev \\\n        zip \\\n        libjpeg8-dev \\\n        protobuf-compiler \\\n        libprotoc-dev \\\n        cmake && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir setuptools Cython wheel\nRUN pip3 install --no-cache-dir numpy\nRUN pip3 install --no-cache-dir \\\n        Pillow >=5.2.0 \\\n        wget >=3.2 \\\n        pycuda >=2017.1.1 \\\n        onnx >=1.6.0 \\\n        paho-mqtt\n\nRUN mkdir /${REPOSITORY_NAME}\nCOPY ./ /${REPOSITORY_NAME}\n\nWORKDIR /${REPOSITORY_NAME}\n\nRUN wget ${LABEL_URL}\nRUN wget ${MODEL_URL}"
}