{
  "startTime": 1674251814024,
  "endTime": 1674251815070,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.4-fpm AS runtime\n\nRUN set -ex \\\n && apt-get update -y \\\n && apt-get upgrade -y \\\n && apt-get install --no-install-recommends -y libzip4 libzip-dev libpng-tools libpng16-16 libpng-dev libxml2-dev zlib1g-dev libldap2-dev \\\n && docker-php-ext-install opcache pdo_mysql ldap zip xml gd intl \\\n# clean up\n && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false \\\n    libzip-dev libpng-dev libxml2-dev zlib1g-dev libldap2-dev \\\n && apt-get -y clean \\\n && rm -rf /usr/src/* \\\n && rm -rf /tmp/* \\\n && rm -rf /var/tmp/* \\\n && for logs in `find /var/log -type f`; do > ${logs}; done \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -f /var/cache/apt/*.bin \\\n && rm -rf /usr/share/man/* /usr/share/groff/* /usr/share/info/* /usr/share/lintian/* /usr/share/linda/* /var/cache/man/* /usr/share/doc/*\n\n\nFROM runtime AS builder\n\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y git unzip curl && rm -rf /var/lib/apt/lists/*;\n# install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --1\nRUN mv composer.phar /usr/local/bin/composer\n\nCOPY . /var/www/html\n\n# install the composer packages\nRUN cd /var/www/html && composer install --no-dev --no-ansi\n\nRUN mkdir -p /var/www/html/app/logs\nRUN mkdir -p /var/www/html/app/cache\nRUN chmod ugo+rwX /var/www/html/app/logs /var/www/html/app/cache\n\n\nFROM runtime\n\nCOPY --from=builder /var/www/html /var/www/html/\n\n# replace entrypoint and add updating ca-certifcates\nRUN echo \"#!/bin/sh\\nset -e\\n/usr/sbin/update-ca-certificates\\nexec \\\"\\$@\\\"\" > /usr/local/bin/docker-php-entrypoint \\\n && echo \"short_open_tag = off\" >> /usr/local/etc/php/conf.d/symfony.ini\n\nVOLUME /var/www/html/app/logs /var/www/html/app/cache\n\nEXPOSE 9000\nWORKDIR /var/www/html\nENTRYPOINT [\"docker-php-entrypoint\"]\nCMD [\"php-fpm\"]\n"
}