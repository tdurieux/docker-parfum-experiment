{
  "startTime": 1674249953381,
  "endTime": 1674249954465,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "######################################\n# STEP 1 build go executable binary\n######################################\nFROM golang:1.14-alpine AS go_builder\n\nRUN apk update && apk add --no-cache git make ca-certificates tzdata && update-ca-certificates\nWORKDIR /flaggio\n\n# Create appuser.\nRUN adduser -D -g '' flaggio\n\nCOPY . .\n\n# Fetch dependencies and build the binary\nRUN make install && \\\n    GOOS=linux GOARCH=amd64 make build\n\n######################################\n# STEP 2 build frontend app\n######################################\nFROM node:12-alpine AS node_builder\n\nENV NODE_ENV production\n\nWORKDIR /flaggio\n\nCOPY --from=go_builder /flaggio/web /flaggio\n\nRUN npm install && npm run build && npm cache clean --force;\n\n######################################\n# STEP 3 build image\n######################################\nFROM scratch\n\nCOPY --from=go_builder /usr/share/zoneinfo /usr/share/zoneinfo\nCOPY --from=go_builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=go_builder /etc/passwd /etc/passwd\n\nCOPY --from=go_builder /flaggio/bin/flaggio /flaggio\nCOPY --from=node_builder /flaggio/build /\n\nUSER flaggio\n\nEXPOSE 8080\nEXPOSE 8081\n\nENTRYPOINT [\"/flaggio\"]\n"
}