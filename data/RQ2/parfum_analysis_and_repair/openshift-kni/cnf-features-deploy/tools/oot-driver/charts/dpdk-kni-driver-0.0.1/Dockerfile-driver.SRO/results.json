{
  "startTime": 1674253939469,
  "endTime": 1674253940490,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 20,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE=registry.access.redhat.com/ubi8:latest\nARG OUTPUT_IMAGE=registry.access.redhat.com/ubi8:latest\n\nFROM $IMAGE as builder\n\nARG KVER\nENV KVER=$KVER\n\nARG KERNEL_SOURCE\nENV KERNEL_SOURCE=$KERNEL_SOURCE\n\nARG DPDK_VERSION\nENV DPDK_VERSION=$DPDK_VERSION\n\nARG SIGN_DRIVER\nENV SIGN_DRIVER=$SIGN_DRIVER\n\nCOPY files/driver ./files/driver\nCOPY files/kernel ./files/kernel\nCOPY signing-keys /signing-key/\n\nRUN if [[ \"${KERNEL_SOURCE}\" == *\"file\"* ]]; then \\\n[[ \"${KVER}\" == *\"rt\"* ]] && export RT=\"rt-\" || export RT=\"\"; \\\nrpm -Uvh --nodeps ./files/kernel/kernel-${RT}devel-${KVER}.rpm --force; \\\nrpm -Uvh --nodeps ./files/kernel/kernel-${RT}core-${KVER}.rpm --force; \\\nfi\n\nENV DPDK_DIR /usr/src/dpdk-stable-${DPDK_VERION}\nENV RTE_TARGET=x86_64-native-linuxapp-gcc\nENV RTE_SDK=${DPDK_DIR}\nENV PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig/\n\n# The second yum install is here to overcome versions mismatch between rpms\nRUN yum install -y wget python3 \\\n make \\\n logrotate \\\n ethtool \\\n patch \\\n which \\\n iproute \\\n libibverbs \\\n lua \\\n git \\\n gcc && \\\n yum clean all && rm -rf /var/cache/yum\n\nRUN pip3 install --no-cache-dir meson ninja\n\nRUN cd /usr/src/ && wget https://fast.dpdk.org/rel/dpdk-${DPDK_VERSION}.tar.xz && tar -xpvf dpdk-${DPDK_VERSION}.tar.xz && rm dpdk-${DPDK_VERSION}.tar.xz && \\\n    cd dpdk-stable-${DPDK_VERSION} && \\\n    meson build -Denable_kmods=true -Dkernel_dir=\"/lib/modules/${KVER}\" && \\\n    cd build && \\\n    ninja && \\\n    ninja install\n\nRUN if [[ ${SIGN_DRIVER} == \"true\" ]]; then \\\n/usr/src/kernels/$KVER/scripts/sign-file sha256 /signing-key/PK.key /signing-key/PK.pem /usr/src/dpdk-stable-${DPDK_VERSION}/build/kernel/linux/kni/rte_kni.ko; \\\nfi\n\nFROM $OUTPUT_IMAGE\n\nARG KVER\nENV KERNEL_VERSION=$KVER\n\nARG DPDK_VERSION\nENV DPDK_VERSION=$DPDK_VERSION\n\nRUN dnf install --setopt=install_weak_deps=False -y kmod\n\nCOPY --from=builder /usr/src/dpdk-stable-${DPDK_VERSION}/build/kernel/linux/kni/rte_kni.ko /oot-driver/\nCOPY files/script/entrypoint.sh /usr/local/bin/\nCOPY script/load.sh /usr/local/bin/\nCOPY script/unload.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/load.sh\nRUN chmod +x /usr/local/bin/unload.sh\n\nCMD [\"/entrypoint.sh\"]"
}