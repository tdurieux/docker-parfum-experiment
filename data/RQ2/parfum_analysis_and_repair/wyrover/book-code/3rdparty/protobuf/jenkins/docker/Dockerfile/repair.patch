diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wyrover/book-code/3rdparty/protobuf/jenkins/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wyrover/book-code/3rdparty/protobuf/jenkins/docker/Dockerfile/repaired.Dockerfile
index 7e65bb4..9244174 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wyrover/book-code/3rdparty/protobuf/jenkins/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wyrover/book-code/3rdparty/protobuf/jenkins/docker/Dockerfile/repaired.Dockerfile
@@ -25,14 +25,14 @@ run echo "deb http://download.mono-project.com/repo/debian wheezy main" | tee /e
 
 # Install dotnet SDK based on https://www.microsoft.com/net/core#debian
 # (Ubuntu instructions need apt to support https)
-RUN apt-get update && apt-get install -y curl libunwind8 gettext && \
-  curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?LinkID=809130 && \
+RUN apt-get update && apt-get install --no-install-recommends -y curl libunwind8 gettext && \
+  curl -f -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?LinkID=809130 && \
   mkdir -p /opt/dotnet && tar zxf dotnet.tar.gz -C /opt/dotnet && \
-  ln -s /opt/dotnet/dotnet /usr/local/bin
+  ln -s /opt/dotnet/dotnet /usr/local/bin && rm dotnet.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 # Install dependencies.  We start with the basic ones require to build protoc
 # and the C++ build
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   autoconf \
   autotools-dev \
   build-essential \
@@ -73,7 +73,7 @@ RUN apt-get update && apt-get install -y \
   ruby \
   # -- For C++ benchmarks --
   cmake \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 ##################
 # C# dependencies
@@ -86,14 +86,14 @@ RUN wget www.nuget.org/NuGet.exe -O /usr/local/bin/nuget.exe
 # These packages exist in apt-get, but their versions are too old, so we have
 # to get updates from pip.
 
-RUN pip install pip --upgrade
-RUN pip install virtualenv tox yattag
+RUN pip install --no-cache-dir pip --upgrade
+RUN pip install --no-cache-dir virtualenv tox yattag
 
 ##################
 # Ruby dependencies
 
 # Install rvm
-RUN gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
+RUN gpg --batch --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
 RUN \curl -sSL https://get.rvm.io | bash -s stable
 
 # Install Ruby 2.1, Ruby 2.2 and JRuby 1.7
@@ -116,7 +116,7 @@ RUN cd /tmp && \
   git clone https://github.com/google/protobuf.git && \
   cd protobuf && \
   ./autogen.sh && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make -j6 && \
   cd java && \
   $MVN install dependency:go-offline -Dmaven.repo.local=$MAVEN_REPO && \
@@ -125,15 +125,15 @@ RUN cd /tmp && \
 
 ##################
 # Go dependencies.
-RUN apt-get install -y  \
-  # -- For go -- \
-  golang
+RUN apt-get install --no-install-recommends -y \
+
+  golang && rm -rf /var/lib/apt/lists/*;
 
 ##################
 # Javascript dependencies.
-Run apt-get install -y \
-  # -- For javascript -- \
-  npm
+Run apt-get install --no-install-recommends -y \
+
+  npm && rm -rf /var/lib/apt/lists/*;
 
 # On Debian/Ubuntu, nodejs binary is named 'nodejs' because the name 'node'
 # is taken by another legacy binary. We don't have that legacy binary and