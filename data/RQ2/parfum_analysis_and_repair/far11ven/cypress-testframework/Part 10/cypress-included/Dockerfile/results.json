{
  "startTime": 1674219418561,
  "endTime": 1674219419504,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 56,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "# WARNING: this file was autogenerated by generate-included-image.js\n# using\n#   npm run add:included -- 9.2.0 cypress/browsers:node16.5.0-chrome94-ff93\n#\n# build this image with command\n#   docker build -t cypress/included:9.2.0 .\n#\nFROM cypress/browsers:node16.5.0-chrome94-ff93\n\n# Update the dependencies to get the latest and greatest (and safest!) packages.\nRUN apt update && apt upgrade -y\n\n# avoid too many progress messages\n# https://github.com/cypress-io/cypress/issues/1243\nENV CI=1\n\n# disable shared memory X11 affecting Cypress v4 and Chrome\n# https://github.com/cypress-io/cypress-docker-images/issues/270\nENV QT_X11_NO_MITSHM=1\nENV _X11_NO_MITSHM=1\nENV _MITSHM=0\n\n# should be root user\nRUN echo \"whoami: $(whoami)\"\nRUN npm config -g set user $(whoami)\n\n# command \"id\" should print:\n# uid=0(root) gid=0(root) groups=0(root)\n# which means the current user is root\nRUN id\n\n# point Cypress at the /root/cache no matter what user account is used\n# see https://on.cypress.io/caching\nENV CYPRESS_CACHE_FOLDER=/root/.cache/Cypress\nRUN npm install -g \"cypress@9.2.0\" && npm cache clean --force;\nRUN cypress verify\n\n# Cypress cache and installed version\n# should be in the root user's home folder\nRUN cypress cache path\nRUN cypress cache list\nRUN cypress info\nRUN cypress version\n\n# give every user read access to the \"/root\" folder where the binary is cached\n# we really only need to worry about the top folder, fortunately\nRUN ls -la /root\nRUN chmod 755 /root\n\n# always grab the latest Yarn\n# otherwise the base image might have old versions\n# NPM does not need to be installed as it is already included with Node.\nRUN npm i -g yarn@latest && npm cache clean --force;\n\n# Show where Node loads required modules from\nRUN node -p 'module.paths'\n\n# should print Cypress version\n# plus Electron and bundled Node versions\nRUN cypress version\nRUN echo \" node version:    $(node -v) \\n\" \\\n  \"npm version:     $(npm -v) \\n\" \\\n  \"yarn version:    $(yarn -v) \\n\" \\\n  \"debian version:  $(cat /etc/debian_version) \\n\" \\\n  \"user:            $(whoami) \\n\" \\\n  \"chrome:          $(google-chrome --version || true) \\n\" \\\n  \"firefox:         $(firefox --version || true) \\n\" && yarn cache clean;\n\nENTRYPOINT [\"npm\", \"run\"]"
}