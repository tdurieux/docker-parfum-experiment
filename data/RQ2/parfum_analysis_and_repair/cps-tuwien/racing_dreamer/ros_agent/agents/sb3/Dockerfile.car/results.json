{
  "startTime": 1674253115632,
  "endTime": 1674253116857,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM ros:noetic-ros-core\n# FROM ros:melodic-ros-core\n\n\n# ##################\n# parts taken from: https://github.com/osrf/docker_images/blob/df19ab7d5993d3b78a908362cdcd1479a8e78b35/ros/noetic/ubuntu/focal/ros-core/Dockerfile\n\n# This is an auto generated Dockerfile for ros:ros-core\n# generated from docker_images/create_ros_core_image.Dockerfile.em\nFROM ubuntu:focal\n\n# setup timezone\nRUN echo 'Etc/UTC' > /etc/timezone && \\\n    ln -s /usr/share/zoneinfo/Etc/UTC /etc/localtime && \\\n    apt-get update && \\\n    apt-get install -q -y --no-install-recommends tzdata && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install packages\nRUN apt-get update && apt-get install -q -y --no-install-recommends \\\n    dirmngr \\\n    gnupg2 \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup keys and setup sources.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 && \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys BA6932366A755776 && \\\n    echo \"deb http://packages.ros.org/ros/ubuntu focal main\" > /etc/apt/sources.list.d/ros1-latest.list && \\\n    echo \"deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu/ focal main\" > /etc/apt/sources.list.d/deadsnakes.list\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV ROS_DISTRO noetic\n\n# ###################\n\nRUN mkdir -p /ws/src/f1tenth_agent_ros/\nWORKDIR /ws/src/f1tenth_agent_ros/\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    python3.6 \\\n    ros-noetic-ros-core=1.5.0-1* \\\n    python3.6 python3.6-dev python3-pip git wget unzip make gcc g++ \\\n    libhdf5-serial-dev hdf5-tools libhdf5-dev zlib1g-dev zip libjpeg8-dev liblapack-dev libblas-dev gfortran libopenblas-base libopenmpi-dev \\\n    libopenblas-dev openmpi-bin openmpi-common \\\n    python3-matplotlib ros-noetic-ackermann-msgs ros-noetic-tf python3-catkin-tools python3-catkin-pkg && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://github.com/bazelbuild/bazel/releases/download/4.0.0/bazel-4.0.0-linux-arm64 -O /bin/bazel && \\\n    chmod +x /bin/bazel\n\nARG AGENT\nCOPY agents/${AGENT}/requirements.car.txt requirements.txt\n\n#\n# PyTorch (for JetPack 4.4 DP)\n#\n#  PyTorch v1.2.0 https://nvidia.box.com/shared/static/lufbgr3xu2uha40cs9ryq1zn4kxsnogl.whl (torch-1.2.0-cp36-cp36m-linux_aarch64.whl)\n#  PyTorch v1.3.0 https://nvidia.box.com/shared/static/017sci9z4a0xhtwrb4ps52frdfti9iw0.whl (torch-1.3.0-cp36-cp36m-linux_aarch64.whl)\n#  PyTorch v1.4.0 https://nvidia.box.com/shared/static/c3d7vm4gcs9m728j6o5vjay2jdedqb55.whl (torch-1.4.0-cp36-cp36m-linux_aarch64.whl)\n#  PyTorch v1.5.0 https://nvidia.box.com/shared/static/3ibazbiwtkl181n95n9em3wtrca7tdzp.whl (torch-1.5.0-cp36-cp36m-linux_aarch64.whl)\n#  PyTorch v1.6.0 https://nvidia.box.com/shared/static/9eptse6jyly1ggt9axbja2yrmj6pbarc.whl (torch-1.6.0-cp36-cp36m-linux_aarch64.whl)\n#  PyTorch v1.7.0 https://nvidia.box.com/shared/static/cs3xn3td6sfgtene6jdvsxlr366m2dhq.whl (torch-1.7.0-cp36-cp36m-linux_aarch64.whl)\n#ARG PYTORCH_URL=https://nvidia.box.com/shared/static/cs3xn3td6sfgtene6jdvsxlr366m2dhq.whl\nARG PYTORCH_URL=https://nvidia.box.com/shared/static/9eptse6jyly1ggt9axbja2yrmj6pbarc.whl\n#ARG PYTORCH_WHL=torch-1.7.0-cp36-cp36m-linux_aarch64.whl\nARG PYTORCH_WHL=torch-1.6.0-cp36-cp36m-linux_aarch64.whl\n\n# install python requirements for this agent\nRUN python3.6 -m pip install -U pip testresources setuptools==49.6.0 && \\\n    python3.6 -m pip install -U numpy==1.16.1 && \\\n    wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${PYTORCH_URL} -O ${PYTORCH_WHL} && \\\n    python3.6 -m pip install ${PYTORCH_WHL} --verbose && \\\n    rm ${PYTORCH_WHL} && \\\n    python3.6 -m pip install --no-cache-dir -r requirements.txt\n\nCOPY entrypoint.sh .\nCOPY CMakeLists.txt .\nCOPY package.xml .\nCOPY agents/${AGENT}/src ./src\nCOPY helpers/* ./src/\n\nRUN /bin/bash -c \"cd /usr/bin/; rm /usr/bin/python3; ln -s python3.6 python3\" && \\\n    /bin/bash -c \"source /opt/ros/noetic/setup.bash; cd /ws; catkin build\" && \\\n    chmod a+x src/* && chmod +x entrypoint.sh\n\nARG MODEL\nCOPY ${MODEL} src/.\n\nWORKDIR /ws\n\nEXPOSE 11311\nENTRYPOINT [\"/ws/src/f1tenth_agent_ros/entrypoint.sh\"]\n\nCMD [\"/bin/bash\", \"-c\", \"python3 ./src/f1tenth_agent_ros/src/agent.py\"]\n\n\n"
}