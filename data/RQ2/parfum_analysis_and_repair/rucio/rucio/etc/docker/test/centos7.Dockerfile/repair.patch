diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rucio/rucio/etc/docker/test/centos7.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rucio/rucio/etc/docker/test/centos7.Dockerfile/repaired.Dockerfile
index 7369946..8ef6ea1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rucio/rucio/etc/docker/test/centos7.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rucio/rucio/etc/docker/test/centos7.Dockerfile/repaired.Dockerfile
@@ -30,20 +30,20 @@ RUN yum install -y epel-release.noarch && \
     if [ "$PYTHON" == "3.6" ] ; then yum -y install python36u python36u-devel python36u-pip python36u-mod_wsgi gfal2-python3 ; fi && \
     if [ "$PYTHON" == "3.7" ] ; then yum -y install httpd-devel ncurses-devel sqlite-devel libffi-devel uuid-devel rpm-build rpmdevtools redhat-rpm-config boost-devel \
             gcc-c++ libicu-devel libstdc++-devel m4 mpich-devel openmpi-devel python2-devel zlib-devel chrpath docbook-dtds docbook-style-xsl cmake glib2-devel gfal2-devel ; fi && \
-    yum clean all
+    yum clean all && rm -rf /var/cache/yum
 
 WORKDIR /usr/local/src
 
-RUN if [ "$PYTHON" == "3.6" ] ; then \
+RUN if [ "$PYTHON" == "3.6" ] ;then \
         python3.6 -m pip --no-cache-dir install --upgrade pip && \
         python3.6 -m pip --no-cache-dir install --upgrade setuptools wheel && \
         rm -f /usr/bin/python && \
         ln -sf python3.6 /usr/bin/python && \
         ln -sf pip3.6 /usr/bin/pip ; \
     elif [ "$PYTHON" == "3.7" ] ; then \
-        curl -sSL https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tar.xz | tar xJv && \
+        curl -f -sSL https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tar.xz | tar xJv && \
         cd Python-3.7.9 && \
-        ./configure --enable-optimizations --enable-shared --libdir=/usr/local/lib LDFLAGS="-Wl,-rpath /usr/local/lib" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations --enable-shared --libdir=/usr/local/lib LDFLAGS="-Wl,-rpath /usr/local/lib" && \
         make -j && \
         make install exec_prefix=/usr && \
         python3.7 -m ensurepip --default-pip && \
@@ -59,10 +59,10 @@ RUN if [ "$PYTHON" == "3.6" ] ; then \
         usermod -G mock -a mockbuild && \
         rpmdev-setuptree && \
         echo -e '\n%_buildshell /bin/bash\n%python3_pkgversion 37\n' >> ~/.rpmmacros && \
-        curl -sSL https://download-ib01.fedoraproject.org/pub/epel/7/source/tree/Packages/b/boost-python3-1.53.0-30.el7.src.rpm > boost-python3-1.53.0-30.el7.src.rpm && \
+        curl -f -sSL https://download-ib01.fedoraproject.org/pub/epel/7/source/tree/Packages/b/boost-python3-1.53.0-30.el7.src.rpm > boost-python3-1.53.0-30.el7.src.rpm && \
         rpm -i boost-python3-1.53.0-30.el7.src.rpm && \
         rm -f boost159-1.59.0-3.el7ost.src.rpm && \
-        curl -sSL https://github.com/boostorg/python/commit/660487c43fde76f3e64f1cb2e644500da92fe582.patch > ~/rpmbuild/SOURCES/boost-python37.patch && \
+        curl -f -sSL https://github.com/boostorg/python/commit/660487c43fde76f3e64f1cb2e644500da92fe582.patch > ~/rpmbuild/SOURCES/boost-python37.patch && \
         sed 's;/src/;/libs/python/src/;g' -i ~/rpmbuild/SOURCES/boost-python37.patch && \
         sed 's;#Patch70: boost-1.53-spirit-lexer.patch;#Patch70: boost-1.53-spirit-lexer.patch\n\n# Fix build with Python 3.7\nPatch71: boost-python37.patch;' -i ~/rpmbuild/SPECS/boost-python3.spec && \
         sed 's;#%patch70 -p2;#%patch70 -p2\n%patch71 -p1;' -i ~/rpmbuild/SPECS/boost-python3.spec && \
@@ -71,17 +71,17 @@ RUN if [ "$PYTHON" == "3.6" ] ; then \
         QA_RPATHS=$[ 0x0001|0x0002 ] rpmbuild -ba ~/rpmbuild/SPECS/boost-python3.spec && \
         rpm -i --nodeps ~/rpmbuild/RPMS/**/* && \
         rm -rf ~/rpmbuild && \
-        curl -sSL https://github.com/cern-fts/gfal2-python/archive/refs/tags/v1.9.5.tar.gz | tar xzv && \
+        curl -f -sSL https://github.com/cern-fts/gfal2-python/archive/refs/tags/v1.9.5.tar.gz | tar xzv && \
         cd gfal2-python-1.9.5/ && \
-        curl -sSL https://github.com/cern-fts/gfal2-python/raw/v1.10.1/cmake/modules/FindPythonEasy.cmake > cmake/modules/FindPythonEasy.cmake && \
+        curl -f -sSL https://github.com/cern-fts/gfal2-python/raw/v1.10.1/cmake/modules/FindPythonEasy.cmake > cmake/modules/FindPythonEasy.cmake && \
         sed 's;find_package(PythonEasy REQUIRED);find_package(PythonEasy REQUIRED)\nset(PYTHON_LIBRARIES_3 "/usr/local/lib/python3.7/")\nset(PYTHON_SITE_PACKAGES_3 "/usr/local/lib/python3.7/site-packages/")\nset(PYTHON_INCLUDE_PATH_3 "/usr/include/python3.7m/")\nset(PYTHON_EXECUTABLE_3 "/usr/bin/python3.7");' -i CMakeLists.txt && \
         sed 's;# Python 2;# Python 2 (OFF)\nif (OFF);' -i src/CMakeLists.txt && \
         sed 's;# If available, Python3;endif ()\n\n# Python 3;' -i src/CMakeLists.txt && \
         python3.7 -m pip --no-cache-dir install . && \
         cd .. && rm -rf gfal2-python-1.9.5 && \
-        curl -sSL https://github.com/GrahamDumpleton/mod_wsgi/archive/4.7.1.tar.gz | tar xzv && \
+        curl -f -sSL https://github.com/GrahamDumpleton/mod_wsgi/archive/4.7.1.tar.gz | tar xzv && \
         cd mod_wsgi-4.7.1 && \
-        ./configure --with-python=/usr/bin/python3.7 --prefix=/usr --libdir=/usr/local/lib && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-python=/usr/bin/python3.7 --prefix=/usr --libdir=/usr/local/lib && \
         make -j && \
         make install && \
         echo -e '# NOTE:\n# Only one mod_wsgi can be loaded at a time.\n# Don'"'"'t attempt to load if already loaded.\n<IfModule !wsgi_module>\n    LoadModule wsgi_module modules/mod_wsgi.so\n</IfModule>\n' > /etc/httpd/conf.modules.d/05-wsgi-python.conf && \
@@ -90,13 +90,13 @@ RUN if [ "$PYTHON" == "3.6" ] ; then \
         ln -sf python3.7 /usr/bin/python && \
         ln -sf python3.7 /usr/bin/python3 && \
         ln -sf pip3.7 /usr/bin/pip && \
-        ln -sf pip3.7 /usr/bin/pip3 ; \
+        ln -sf pip3.7 /usr/bin/pip3; \
     fi
 
 # Install sqlite3 because CentOS ships with an old version without window functions
-RUN curl https://www.sqlite.org/2019/sqlite-autoconf-3290000.tar.gz | tar xzv && \
+RUN curl -f https://www.sqlite.org/2019/sqlite-autoconf-3290000.tar.gz | tar xzv && \
     cd ./sqlite-autoconf-3290000 && \
-    ./configure --prefix=/usr/local --libdir=/usr/local/lib64 && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --libdir=/usr/local/lib64 && \
     make -j && \
     make install && \
     cd .. && rm -rf ./sqlite-autoconf-3290000