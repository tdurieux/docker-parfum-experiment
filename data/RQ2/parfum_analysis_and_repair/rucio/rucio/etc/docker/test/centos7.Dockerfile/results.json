{
  "startTime": 1674251077521,
  "endTime": 1674251079320,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 8,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 8,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 8,
        "columnEnd": 148
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 8,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 8,
        "columnEnd": 118
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 8,
        "columnEnd": 90
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 37,
        "columnEnd": 126
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 37,
        "columnEnd": 173
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020-2021 CERN\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n# Authors:\n# - Benedikt Ziemons <benedikt.ziemons@cern.ch>, 2020-2021\n# - Mario Lassnig <mario.lassnig@cern.ch>, 2020\n# - Martin Barisits <martin.barisits@cern.ch>, 2020-2021\n\nFROM centos:7\nARG PYTHON\nENV LANG=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\n\nRUN yum install -y epel-release.noarch && \\\n    yum -y update && \\\n    yum -y install gcc httpd gmp-devel krb5-devel mod_ssl mod_auth_kerb git openssl-devel bzip2-devel gridsite which libaio memcached ffi-devel nmap-ncat nodejs npm && \\\n    yum -y install https://repo.ius.io/ius-release-el7.rpm && \\\n    yum -y install libxml2-devel xmlsec1-devel xmlsec1-openssl-devel libtool-ltdl-devel python && \\\n    if [ \"$PYTHON\" == \"3.6\" ] ; then yum -y install python36u python36u-devel python36u-pip python36u-mod_wsgi gfal2-python3 ; fi && \\\n    if [ \"$PYTHON\" == \"3.7\" ] ; then yum -y install httpd-devel ncurses-devel sqlite-devel libffi-devel uuid-devel rpm-build rpmdevtools redhat-rpm-config boost-devel \\\n            gcc-c++ libicu-devel libstdc++-devel m4 mpich-devel openmpi-devel python2-devel zlib-devel chrpath docbook-dtds docbook-style-xsl cmake glib2-devel gfal2-devel ; fi && \\\n    yum clean all && rm -rf /var/cache/yum\n\nWORKDIR /usr/local/src\n\nRUN if [ \"$PYTHON\" == \"3.6\" ] ;then \\\n        python3.6 -m pip --no-cache-dir install --upgrade pip && \\\n        python3.6 -m pip --no-cache-dir install --upgrade setuptools wheel && \\\n        rm -f /usr/bin/python && \\\n        ln -sf python3.6 /usr/bin/python && \\\n        ln -sf pip3.6 /usr/bin/pip ; \\\n    elif [ \"$PYTHON\" == \"3.7\" ] ; then \\\n        curl -f -sSL https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tar.xz | tar xJv && \\\n        cd Python-3.7.9 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations --enable-shared --libdir=/usr/local/lib LDFLAGS=\"-Wl,-rpath /usr/local/lib\" && \\\n        make -j && \\\n        make install exec_prefix=/usr && \\\n        python3.7 -m ensurepip --default-pip && \\\n        cd .. && rm -rf Python-3.7.9 && \\\n        cp -al /usr/include/python3.7m/pyconfig.h /usr/local/include/python3.7m/pyconfig.h && \\\n        rm -rf /usr/include/python3.7m/ && \\\n        ln -sf ../local/include/python3.7m /usr/include/python3.7m && \\\n        cp -al /usr/local/lib/* /usr/lib64/ && \\\n        python3.7 -m pip --no-cache-dir install --upgrade pip && \\\n        python3.7 -m pip --no-cache-dir install --upgrade setuptools wheel && \\\n        useradd mockbuild && \\\n        groupadd mock && \\\n        usermod -G mock -a mockbuild && \\\n        rpmdev-setuptree && \\\n        echo -e '\\n%_buildshell /bin/bash\\n%python3_pkgversion 37\\n' >> ~/.rpmmacros && \\\n        curl -f -sSL https://download-ib01.fedoraproject.org/pub/epel/7/source/tree/Packages/b/boost-python3-1.53.0-30.el7.src.rpm > boost-python3-1.53.0-30.el7.src.rpm && \\\n        rpm -i boost-python3-1.53.0-30.el7.src.rpm && \\\n        rm -f boost159-1.59.0-3.el7ost.src.rpm && \\\n        curl -f -sSL https://github.com/boostorg/python/commit/660487c43fde76f3e64f1cb2e644500da92fe582.patch > ~/rpmbuild/SOURCES/boost-python37.patch && \\\n        sed 's;/src/;/libs/python/src/;g' -i ~/rpmbuild/SOURCES/boost-python37.patch && \\\n        sed 's;#Patch70: boost-1.53-spirit-lexer.patch;#Patch70: boost-1.53-spirit-lexer.patch\\n\\n# Fix build with Python 3.7\\nPatch71: boost-python37.patch;' -i ~/rpmbuild/SPECS/boost-python3.spec && \\\n        sed 's;#%patch70 -p2;#%patch70 -p2\\n%patch71 -p1;' -i ~/rpmbuild/SPECS/boost-python3.spec && \\\n        sed 's;BuildRequires: python%{python3_pkgversion}-devel;;' -i ~/rpmbuild/SPECS/boost-python3.spec && \\\n        sed 's;%ldconfig_scriptlets;;' -i ~/rpmbuild/SPECS/boost-python3.spec && \\\n        QA_RPATHS=$[ 0x0001|0x0002 ] rpmbuild -ba ~/rpmbuild/SPECS/boost-python3.spec && \\\n        rpm -i --nodeps ~/rpmbuild/RPMS/**/* && \\\n        rm -rf ~/rpmbuild && \\\n        curl -f -sSL https://github.com/cern-fts/gfal2-python/archive/refs/tags/v1.9.5.tar.gz | tar xzv && \\\n        cd gfal2-python-1.9.5/ && \\\n        curl -f -sSL https://github.com/cern-fts/gfal2-python/raw/v1.10.1/cmake/modules/FindPythonEasy.cmake > cmake/modules/FindPythonEasy.cmake && \\\n        sed 's;find_package(PythonEasy REQUIRED);find_package(PythonEasy REQUIRED)\\nset(PYTHON_LIBRARIES_3 \"/usr/local/lib/python3.7/\")\\nset(PYTHON_SITE_PACKAGES_3 \"/usr/local/lib/python3.7/site-packages/\")\\nset(PYTHON_INCLUDE_PATH_3 \"/usr/include/python3.7m/\")\\nset(PYTHON_EXECUTABLE_3 \"/usr/bin/python3.7\");' -i CMakeLists.txt && \\\n        sed 's;# Python 2;# Python 2 (OFF)\\nif (OFF);' -i src/CMakeLists.txt && \\\n        sed 's;# If available, Python3;endif ()\\n\\n# Python 3;' -i src/CMakeLists.txt && \\\n        python3.7 -m pip --no-cache-dir install . && \\\n        cd .. && rm -rf gfal2-python-1.9.5 && \\\n        curl -f -sSL https://github.com/GrahamDumpleton/mod_wsgi/archive/4.7.1.tar.gz | tar xzv && \\\n        cd mod_wsgi-4.7.1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-python=/usr/bin/python3.7 --prefix=/usr --libdir=/usr/local/lib && \\\n        make -j && \\\n        make install && \\\n        echo -e '# NOTE:\\n# Only one mod_wsgi can be loaded at a time.\\n# Don'\"'\"'t attempt to load if already loaded.\\n<IfModule !wsgi_module>\\n    LoadModule wsgi_module modules/mod_wsgi.so\\n</IfModule>\\n' > /etc/httpd/conf.modules.d/05-wsgi-python.conf && \\\n        cd .. && rm -rf mod_wsgi-4.7.1 && \\\n        rm -f /usr/bin/python && \\\n        ln -sf python3.7 /usr/bin/python && \\\n        ln -sf python3.7 /usr/bin/python3 && \\\n        ln -sf pip3.7 /usr/bin/pip && \\\n        ln -sf pip3.7 /usr/bin/pip3; \\\n    fi\n\n# Install sqlite3 because CentOS ships with an old version without window functions\nRUN curl -f https://www.sqlite.org/2019/sqlite-autoconf-3290000.tar.gz | tar xzv && \\\n    cd ./sqlite-autoconf-3290000 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --libdir=/usr/local/lib64 && \\\n    make -j && \\\n    make install && \\\n    cd .. && rm -rf ./sqlite-autoconf-3290000\n\nWORKDIR /usr/local/src/rucio\n\nCOPY requirements.txt setuputil.py ./\n\n# pre-install requirements\nRUN python -m pip --no-cache-dir install --upgrade -r requirements.txt\n\nCOPY etc etc\n\nRUN mkdir -p /var/log/rucio/trace && \\\n    chmod -R 777 /var/log/rucio && \\\n    cp etc/certs/hostcert_rucio.pem /etc/grid-security/hostcert.pem && \\\n    cp etc/certs/hostcert_rucio.key.pem /etc/grid-security/hostkey.pem && chmod 0400 /etc/grid-security/hostkey.pem && \\\n    cp etc/docker/test/extra/httpd.conf /etc/httpd/conf/httpd.conf && \\\n    cp etc/docker/test/extra/rucio.conf /etc/httpd/conf.d/rucio.conf && \\\n    cp etc/docker/test/extra/00-mpm.conf /etc/httpd/conf.modules.d/00-mpm.conf && \\\n    rm /etc/httpd/conf.d/ssl.conf /etc/httpd/conf.d/autoindex.conf /etc/httpd/conf.d/userdir.conf /etc/httpd/conf.d/welcome.conf /etc/httpd/conf.d/zgridsite.conf && \\\n    cp etc/certs/rucio_ca.pem etc/rucio_ca.pem && \\\n    cp etc/certs/ruciouser.pem etc/ruciouser.pem && \\\n    cp etc/certs/ruciouser.key.pem etc/ruciouser.key.pem && \\\n    chmod 0400 etc/ruciouser.key.pem\n\nRUN rpm -i https://download.oracle.com/otn_software/linux/instantclient/1912000/oracle-instantclient19.12-basiclite-19.12.0.0.0-1.x86_64.rpm && \\\n    echo \"/usr/lib/oracle/19.12/client64/lib\" > /etc/ld.so.conf.d/oracle-instantclient.conf && \\\n    ldconfig\n\n# copy everything else except the git-dir (anything above is cache-friendly)\nCOPY .flake8 .pep8 .pycodestyle pylintrc setup.py setup_rucio.py setup_rucio_client.py setup_webui.py ./\nCOPY tools tools\nCOPY bin bin\nCOPY lib lib\n\n# Install Rucio server + dependencies\nRUN PYEXEC=python ; \\\n    $PYEXEC -m pip --no-cache-dir install --upgrade .[oracle,postgresql,mysql,kerberos,saml,dev] && \\\n    $PYEXEC -m pip list\n\nWORKDIR /opt/rucio\nRUN cp -r /usr/local/src/rucio/{lib,bin,tools,etc} ./\n\nCMD [\"httpd\",\"-D\",\"FOREGROUND\"]\n"
}