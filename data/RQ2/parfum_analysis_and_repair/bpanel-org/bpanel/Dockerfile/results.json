{
  "startTime": 1674251683955,
  "endTime": 1674251685004,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM node:alpine AS base\nFROM mhart/alpine-node:latest AS base\n\n# temporarily use this fork of node:alpine\n# because it has a newer version of npm\n# temporarily update npm manually\n# because of bug introduced in npm 6.0.0\n\nEXPOSE 5000\nRUN mkdir -p /usr/src/app/dist && rm -rf /usr/src/app/dist\n\nWORKDIR /usr/src/app\n\nENTRYPOINT [ \"node\" ]\nCMD [ \"server\" ]\n\nARG NPM_VERSION=6.3.0\n\n# Install updates\nRUN apk upgrade --no-cache && \\\n    apk add --no-cache git python make g++ bash && \\\n    npm install -g npm@$NPM_VERSION && npm cache clean --force;\n\n# install dependencies for node-hid\nRUN apk add --no-cache linux-headers eudev-dev libusb-dev\n# install handshake deps\nRUN apk add --no-cache unbound-dev\n\nCOPY package.json \\\n     package-lock.json \\\n     /usr/src/app/\n\n# Install dependencies\nFROM base AS build\n\n# dont run preinstall scripts here\n# by omitting --unsafe-perm\nRUN npm install && npm cache clean --force;\n\n# this is a grandchild dependency of hsd that gets skipped for some reason\n# and needs to be installed manually\nRUN npm install budp && npm cache clean --force;\n\n# Bundle app\nFROM base\nCOPY --from=build /usr/src/app/node_modules /usr/src/app/node_modules\nCOPY pkg.js /usr/src/app/pkg.js\nCOPY vendor /usr/src/app/vendor\nCOPY scripts /usr/src/app/scripts\nCOPY configs /usr/src/app/configs\nCOPY server /usr/src/app/server\nCOPY webapp /usr/src/app/webapp\nRUN npm run build:dll && \\\n    npm run preinstall --unsafe-perm && \\\n    touch /root/.bpanel/clients/_docker.conf\n"
}