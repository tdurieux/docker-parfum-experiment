{
  "startTime": 1674217090714,
  "endTime": 1674217092011,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 24,
        "columnStart": 27,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_IMAGE_BASE=python:3.6-slim\nFROM ${DOCKER_IMAGE_BASE}\n\n# Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND noninteractive\nENV TERM linux\n\nARG DATABAND_USER_HOME=/usr/local/databand\n\n\n# Define en_US.\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_MESSAGES en_US.UTF-8\n\n# install docker client for k8s staging jobs\nRUN set -ex && \\\n    apt-get update -yqq && apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    ca-certificates \\\n    curl \\\n    gnupg2 \\\n    software-properties-common \\\n    && curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \\\n    && add-apt-repository \\\n    \"deb [arch=amd64] https://download.docker.com/linux/debian \\\n    $(lsb_release -cs) \\\n    stable\" \\\n    && apt-get update -yqq \\\n    && apt-get install --no-install-recommends -y docker-ce docker-ce-cli containerd.io \\\n    && buildDeps=' \\\n    python-dev \\\n    libkrb5-dev \\\n    libsasl2-dev \\\n    libssl-dev \\\n    libffi-dev \\\n    libblas-dev \\\n    liblapack-dev \\\n    libpq-dev \\\n    git \\\n    ' \\\n    && apt-get install -yqq --no-install-recommends \\\n    $buildDeps \\\n    build-essential \\\n    apt-utils \\\n    curl \\\n    rsync \\\n    netcat \\\n    locales \\\n    moreutils \\\n    && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n    && locale-gen \\\n    && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n    && useradd -ms /bin/bash -d ${DATABAND_USER_HOME} databand \\\n    && echo \"install pip==21.3.1 for python 3.6\" \\\n    && pip install --no-cache-dir -U pip==21.3.1 'setuptools<58' wheel apache-airflow[statsd] pytest mock \\\n    && apt-get purge --auto-remove -yqq $buildDeps \\\n    && apt-get autoremove -yqq --purge \\\n    && apt-get clean \\\n    && rm -rf \\\n    /var/lib/apt/lists/* \\\n    /tmp/* \\\n    /var/tmp/* \\\n    /usr/share/man \\\n    /usr/share/doc \\\n    /usr/share/doc-base\n\n\nCOPY ./dbnd-core/dist-python/dbnd.requirements.txt \\\n    ./dbnd-core/dist-python/dbnd-airflow.requirements.txt \\\n    ./dbnd-core/dist-python/dbnd-docker.requirements.txt \\\n    ./dbnd-core/dist-python/dbnd-gcp.requirements.txt \\\n    ./dbnd-core/dist-python/dbnd-mlflow.requirements.txt \\\n    ./dbnd-core/dist-python/dbnd-aws.requirements.txt \\\n    ./dbnd-core/dist-python/dbnd-examples.requirements.txt \\\n    ./dbnd-core/dist-python/dbnd-test-scenarios.requirements.txt \\\n    /dist-python/\n\nARG AIRFLOW_VERSION=1.10.10\n\n# cut after second `.` -> 3.6.15 -> 3.6\nRUN SHORT_PYTHON_VERSION=$(echo ${PYTHON_VERSION} | cut -f1,2 -d'.') && \\\n    pip install --no-cache-dir apache-airflow==$AIRFLOW_VERSION \\\n        --constraint \"https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-${SHORT_PYTHON_VERSION}.txt\"\n\nRUN pip install --no-cache-dir -r /dist-python/dbnd.requirements.txt \\\n     -r /dist-python/dbnd-airflow.requirements.txt \\\n     -r /dist-python/dbnd-docker.requirements.txt \\\n     -r /dist-python/dbnd-gcp.requirements.txt \\\n     -r /dist-python/dbnd-mlflow.requirements.txt \\\n     -r /dist-python/dbnd-aws.requirements.txt \\\n     -r /dist-python/dbnd-examples.requirements.txt \\\n     -r /dist-python/dbnd-test-scenarios.requirements\n\nCOPY ./dbnd-core/dist-python/databand-*.whl \\\n    ./dbnd-core/dist-python/dbnd-*.whl \\\n    ./dbnd-core/dist-python/dbnd_aws-*.whl \\\n    ./dbnd-core/dist-python/dbnd_gcp-*.whl \\\n    ./dbnd-core/dist-python/dbnd_docker-*.whl \\\n    ./dbnd-core/dist-python/dbnd_airflow-*.whl \\\n    ./dbnd-core/dist-python/dbnd_mlflow-*.whl \\\n    /dist-python/\nENV DBND_VERSION=0.81.0\nRUN pip install --no-cache-dir databand[aws,gcp,docker,airflow_bundle,mlflow]==$DBND_VERSION --find-links /dist-python/\n\n\nCOPY ./dbnd-core/setup.cfg \\\n    dbnd-core/plugins/dbnd-test-scenarios/scripts/trigger_ui_functionality.sh \\\n    /app/\n\nCOPY .dbnd  /app/.dbnd\n\nCOPY ./dbnd-core/examples /app/examples\nCOPY ./dbnd-core/plugins/dbnd-test-scenarios /app/plugins/dbnd-test-scenarios\nRUN pip install --no-cache-dir -e /app/examples && \\\n    pip install --no-cache-dir -e /app/plugins/dbnd-test-scenarios\n\nENV DBND_HOME=/app\nWORKDIR  /app\n\nENV DBND__RUN_INFO__SOURCE_VERSION ${SOURCE_VERSION:-\"\"}\n"
}