{
  "startTime": 1674252290322,
  "endTime": 1674252293285,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#BUILD WITH: 'docker build -t istsos-web:v1.0.0 -f Dockerfile .'\n#RUN WITH: 'docker run --rm -d --name istsos-web-c -p 80:80 istsos-web:v1.0.0'\n#RUN TO DEBUG: 'docker run --rm -it --name istsos-web-c -p 80:80 istsos-web:v1.0.0 bash'\n\n# Build Stage\nFROM debian:buster as build-stage\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y rsync grsync && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nCOPY ./ /app/\n\nRUN rm -rf _build && \\\n    mkdir -p _build/istsos/interface/admin && \\\n    mkdir _build/istsos/interface/modules && \\\n    mkdir _build/istsos/logs && \\\n    mkdir _build/istsos/services && \\\n    cp -r interface/admin/www/* _build/istsos/interface/admin && \\\n    cp -r interface/modules/requests/src/xml _build/istsos/interface/modules/requests && \\\n    rsync -a --exclude=*.pyc istsoslib/* _build/istsos/istsoslib && \\\n    rsync -a --exclude=*.pyc scripts/* _build/istsos/scripts && \\\n    cp services/default.cfg.example  _build/istsos/services/default.cfg && \\\n    rsync -a --exclude=*.pyc walib/* _build/istsos/walib && \\\n    rsync -a --exclude=*.pyc wnslib/* _build/istsos/wnslib && \\\n    cp *.py  _build/istsos/ && \\\n    cp *.txt  _build/istsos/ && \\\n    cp httpd-istsos.conf _build/istsos/ && \\\n    cd _build && \\\n    rm -rf `find . -type d -name .svn`\n\nFROM httpd:2.4.48-alpine3.14\n\nWORKDIR /usr/share\n\nCOPY --from=build-stage /app/_build/ /usr/share/\n\nRUN chmod 755 -R /usr/share/istsos && \\\n    chown -R daemon:daemon /usr/share/istsos/services && \\\n    chown -R daemon:daemon /usr/share/istsos/logs && \\\n    mkdir /usr/local/apache2/conf/sites-available /usr/local/apache2/conf/sites-enabled && \\\n    mkdir -p /var/www/html && \\\n    echo \"LoadModule wsgi_module /usr/lib/apache2/mod_wsgi.so\" >> /usr/local/apache2/conf/httpd.conf && \\\n    echo \"IncludeOptional /usr/local/apache2/conf/sites-enabled/*.conf \" >> /usr/local/apache2/conf/httpd.conf && \\\n    cp /usr/share/istsos/httpd-istsos.conf /usr/local/apache2/conf/sites-available && \\\n    ln -s /usr/local/apache2/conf/sites-available/httpd-istsos.conf /usr/local/apache2/conf/sites-enabled/httpd-istsos.conf\n\nRUN apk update && \\\n    set -ex && \\   \n    apk add --no-cache \\\n        apache2-mod-wsgi \\\n        py3-pip \\\n        musl \\\n        xz-libs \\\n        zlib \\\n        libxml2-dev \\\n        libxslt \\\n        libc-dev \\\n        py3-lxml \\\n        libxslt-dev \\ \n        postgresql-dev \\\n        gcc \\\n        python3-dev \\\n        musl-dev\nRUN pip3 install --no-cache-dir -r /usr/share/istsos/requirements.txt\n\nEXPOSE 80\n"
}