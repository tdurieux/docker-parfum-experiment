{
  "startTime": 1674252506533,
  "endTime": 1674252507164,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Docker file generates an image based on Ubuntu 16.04 and installs the\n# packages required for use with Jenkins CI. It also installs all of the\n# dependencies of ros_alarms.\n\nFROM ubuntu:xenial\n\nMAINTAINER Anthony Olive <anthony@iris-systems.net>\n\n# Update the image and install tools needed to create the image\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install sudo \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install lsb-release \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install git \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install wget \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install python-flake8 \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install clang-format-3.8 \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get -y autoremove --purge \\\n\t&& apt-get -y clean \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& rm -f /var/cache/apt/*.bin\n\n# Install all dependencies of txros, which is a dependency of ros_alarms\nRUN echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros.list \\\n\t&& echo \"deb-src http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" >> /etc/apt/sources.list.d/ros.list \\\n\t&& apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116 \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get update \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install ros-kinetic-ros-base \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install ros-kinetic-roscpp-tutorials \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install ros-kinetic-tf \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install python-twisted \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get -y autoremove --purge \\\n\t&& apt-get -y clean \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t&& rm -f /var/cache/apt/*.bin\n\n# Create a jenkins user for Jenkins CI and grant it passwordless sudo access\nRUN useradd --uid 10000 --create-home --shell /bin/bash jenkins \\\n\t&& echo \"\" >> /etc/sudoers \\\n\t&& echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n# Make Jenkins the default user for the image\nUSER jenkins\nWORKDIR /home/jenkins\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Create a volume to access the external files from Jenkins\nRUN mkdir /home/jenkins/.jenkins\nVOLUME /home/jenkins/.jenkins\n\n# Create a catkin workspace for the package\nRUN source /opt/ros/kinetic/setup.bash \\\n\t&& mkdir -p ~/catkin_ws/src \\\n\t&& cd ~/catkin_ws/src \\\n\t&& catkin_init_workspace\n"
}