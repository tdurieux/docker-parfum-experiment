diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sqlpad/sqlpad/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sqlpad/sqlpad/Dockerfile/repaired.Dockerfile
index 823da0d..3627332 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sqlpad/sqlpad/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sqlpad/sqlpad/Dockerfile/repaired.Dockerfile
@@ -1,23 +1,22 @@
-# Need to remote into this image and debug some flow? 
+# Need to remote into this image and debug some flow?
 # docker run -it --rm node:12.22.1-alpine3.12 /bin/ash
 FROM node:lts-buster AS build
 ARG ODBC_ENABLED=false
-RUN apt-get update && apt-get install -y \
-    python3 make g++ python3-dev  \
-    && ( \
-    if [ "$ODBC_ENABLED" = "true" ] ; \
+RUN apt-get update && apt-get install --no-install-recommends -y \
+    python3 make g++ python3-dev \
+    && (if [ "$ODBC_ENABLED" = "true" ] ; \
     then \
-    echo "Installing ODBC build dependencies." 1>&2 ;\
-    apt-get install -y unixodbc-dev ;\
-    npm install -g node-gyp ;\
-    fi\
-    ) \
+    echo "Installing ODBC build dependencies." 1>&2 ; \
+    apt-get install --no-install-recommends -y unixodbc-dev; \
+    npm install -g node-gyp ; npm cache clean --force; \
+    fi) \
+
     && rm -rf /var/lib/apt/lists/*
 RUN npm config set python /usr/bin/python3
 
 WORKDIR /sqlpad
 
-# By copying just the package files and installing node layers, 
+# By copying just the package files and installing node layers,
 # we can take advantage of caching
 # SQLPad is really 3 node projects though
 # * root directory for linting
@@ -56,7 +55,7 @@ RUN npm run test --prefix server
 RUN npm run lint
 
 # Remove any dev dependencies from server
-# We don't care about root or client directories 
+# We don't care about root or client directories
 # as they are not going to be copied to next stage
 WORKDIR /sqlpad/server
 RUN npm prune --production
@@ -68,16 +67,15 @@ ARG ODBC_ENABLED=false
 
 # Create a directory for the hooks and optionaly install ODBC
 RUN mkdir -p /etc/docker-entrypoint.d \
-    && apt-get update && apt-get install -y wget \
-    && ( \
-    if [ "$ODBC_ENABLED" = "true" ] ; \
+    && apt-get update && apt-get install --no-install-recommends -y wget \
+    && (if [ "$ODBC_ENABLED" = "true" ] ; \
     then \
-    echo "Installing ODBC runtime dependencies." 1>&2 ;\
-    apt-get install -y unixodbc libaio1 odbcinst libodbc1 ;\
-    touch /etc/odbcinst.ini ;\
-    fi\
-    ) \
-    && rm -rf /var/lib/apt/lists/* 
+    echo "Installing ODBC runtime dependencies." 1>&2 ; \
+    apt-get install --no-install-recommends -y unixodbc libaio1 odbcinst libodbc1; \
+    touch /etc/odbcinst.ini ; \
+    fi) \
+
+    && rm -rf /var/lib/apt/lists/*
 
 WORKDIR /usr/app
 COPY --from=build /sqlpad/docker-entrypoint /