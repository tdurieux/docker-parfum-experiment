{
  "startTime": 1674251072492,
  "endTime": 1674251073874,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:17-bullseye-slim\n# USER root\n\n# system packages\n#RUN apk --no-cache add \\\n#    gcc g++ libc-dev git curl \\\n#    ca-certificates \\\n#    python3 py3-pip py3-wheel \\\n#    ffmpeg mediainfo \\\n#    util-linux busybox-initscripts procps gcompat \\\n#    libxml2-dev libxslt-dev python3-dev \\\n#    bash icu-libs krb5-libs libgcc libintl libssl1.1 libstdc++ zlib fontconfig\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3 python3-pip \\\n    ffmpeg mediainfo \\\n    bash git curl unzip \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install yarn\n# RUN npm install -g yarn\n\n# libfontconfig1 can't be found\n\n# pip packages\nCOPY ./requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt \\\n    && rm /tmp/requirements.txt \\\n    && pip cache purge\n\n# copy app\nRUN mkdir -p /usr/local/share/twitchautomator \\\n    && chown -R node:node /usr/local/share/twitchautomator \\\n    && chmod -R 775 /usr/local/share/twitchautomator\nCOPY --chown=node:node --chmod=775 . /usr/local/share/twitchautomator/\n# RUN git clone https://github.com/MrBrax/TwitchAutomator /var/www/twitchautomator/\n\n# server\nRUN cd /usr/local/share/twitchautomator/server \\\n    && yarn install --frozen-lockfile \\\n    && yarn lint:ts \\\n    && yarn build \\\n    && rm -rf node_modules \\\n    && yarn cache clean --all\n\n# client\nRUN cd /usr/local/share/twitchautomator/client-vue \\\n    && yarn install --frozen-lockfile \\\n    && yarn build \\\n    && rm -rf node_modules \\\n    && yarn cache clean --all\n\n# chat dumper\nRUN cd /usr/local/share/twitchautomator/twitch-chat-dumper \\\n    && yarn install --frozen-lockfile \\\n    && yarn build \\\n    && rm -rf node_modules && yarn cache clean --all\n\n# vod player\nRUN cd /usr/local/share/twitchautomator/twitch-vod-chat \\\n    && yarn install --frozen-lockfile \\\n    && yarn build --base=/vodplayer \\\n    && rm -rf node_modules && yarn cache clean --all\n\n# install dotnet for twitchdownloader\n# ADD https://dot.net/v1/dotnet-install.sh /tmp/dotnet-install.sh\n# RUN chmod +x /tmp/dotnet-install.sh && /tmp/dotnet-install.sh --channel 3.1 --verbose --install-dir /usr/share/dotnet\n# --runtime dotnet\n\n# download twitchdownloader, is this legal? lmao\nCOPY ./docker/fetch-tdl.sh /tmp/fetch-tdl.sh\nRUN sh /tmp/fetch-tdl.sh\nENV TCD_TWITCHDOWNLOADER_PATH=/usr/local/bin/TwitchDownloaderCLI\n\n# application folder permissions\n# seems like docker does not support recursive chown in the copy command\n# so this is a workaround, doubling the layer size unfortunately.\n# it also takes a very long time on slow storage\n# RUN chown -c -R node:node /usr/local/share/twitchautomator && chmod -R 775 /usr/local/share/twitchautomator\n# RUN chown -c -R node:node /usr/local/share/twitchautomator/data && chmod -R 775 /usr/local/share/twitchautomator/data\n\n# make home folder\nRUN mkdir -p /home/node && chown -R node:node /home/node\nENV HOME /home/node\n\n# fonts\nRUN mkdir /home/node/.fonts && chown node:node /home/node/.fonts\nCOPY ./docker/fonts /home/node/.fonts\n\n# get certs\n# RUN wget https://curl.haxx.se/ca/cacert.pem -O /tmp/cacert.pem\n\n# twitchautomator docker specific configs\nENV TCD_BIN_DIR=/usr/local/bin\nENV TCD_FFMPEG_PATH=/usr/bin/ffmpeg\nENV TCD_MEDIAINFO_PATH=/usr/bin/mediainfo\nENV TCD_NODE_PATH=/usr/local/bin/node\nENV TCD_DOCKER=1\nENV TCD_WEBSOCKET_ENABLED=1\n# ENV TCD_CA_PATH=/tmp/cacert.pem\nENV TCD_SERVER_PORT=8080\n\n# USER node\nWORKDIR /usr/local/share/twitchautomator/server\n\nENTRYPOINT [ \"yarn\", \"run\", \"start\" ]\nEXPOSE 8080"
}