{
  "startTime": 1674249368277,
  "endTime": 1674249369796,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 122,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 122,
        "columnStart": 22,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 AS updated\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -qq && apt-get upgrade -qq\n\nFROM updated as build\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y \\\n  build-essential \\\n  cmake \\\n  git \\\n  graphviz \\\n  libatlas-base-dev \\\n  libboost-filesystem-dev \\\n  libboost-iostreams-dev \\\n  libboost-program-options-dev \\\n  libboost-regex-dev \\\n  libboost-serialization-dev \\\n  libboost-system-dev \\\n  libboost-test-dev \\\n  libboost-graph-dev \\\n  libcgal-dev \\\n  libcgal-qt5-dev \\\n  libfreeimage-dev \\\n  libgflags-dev \\\n  libglew-dev \\\n  libglu1-mesa-dev \\\n  libgoogle-glog-dev \\\n  libjpeg-dev \\\n  libopencv-dev \\\n  libpng-dev \\\n  libqt5opengl5-dev \\\n  libsuitesparse-dev \\\n  libtiff-dev \\\n  libxi-dev \\\n  libxrandr-dev \\\n  libxxf86vm-dev \\\n  libxxf86vm1 \\\n  mediainfo \\\n  mercurial \\\n  qtbase5-dev \\\n  libatlas-base-dev \\\n  libsuitesparse-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp/build\n\n# Install openmvg\nRUN git clone -b develop --recursive https://github.com/openMVG/openMVG.git openmvg && \\\n  mkdir openmvg_build && cd openmvg_build && \\\n  cmake -DCMAKE_BUILD_TYPE=RELEASE . ../openmvg/src -DCMAKE_INSTALL_PREFIX=/opt/openmvg && \\\n  make -j4  && \\\n  make install\n\n# Install eigen\nRUN git clone https://gitlab.com/libeigen/eigen.git --branch 3.2 && \\\n  mkdir eigen_build && cd eigen_build && \\\n  cmake . ../eigen && \\\n  make -j4 && \\\n  make install\n\n# Get vcglib\nRUN git clone https://github.com/cdcseacave/VCG.git vcglib\n\n# Install ceres solver\nRUN git clone https://ceres-solver.googlesource.com/ceres-solver ceres_solver && \\\n  cd ceres_solver && git checkout tags/1.14.0 && cd .. && \\\n  mkdir ceres_build && cd ceres_build && \\\n  cmake . ../ceres_solver/ -DMINIGLOG=OFF -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF && \\\n  make -j4 && \\\n  make install\n\n# Install openmvs\nRUN git clone https://github.com/cdcseacave/openMVS.git openmvs && \\\n  mkdir openmvs_build && cd openmvs_build && \\\n  cmake . ../openmvs -DCMAKE_BUILD_TYPE=Release -DVCG_DIR=\"../vcglib\" -DCMAKE_INSTALL_PREFIX=/opt/openmvs && \\\n  make -j4 && \\\n  make install\n\n# Install cmvs-pmvs\nRUN git clone https://github.com/pmoulon/CMVS-PMVS /tmp/build/cmvs-pmvs && \\\n  mkdir /tmp/build/cmvs-pmvs_build && cd /tmp/build/cmvs-pmvs_build && \\\n  cmake ../cmvs-pmvs/program -DCMAKE_INSTALL_PREFIX=/opt/cmvs && \\\n  make -j4 && \\\n  make install\n\n# Install colmap\nRUN git clone -b master https://github.com/colmap/colmap /tmp/build/colmap && \\\n  mkdir -p /tmp/build/colmap_build && cd /tmp/build/colmap_build && \\\n  cmake . ../colmap -DCMAKE_INSTALL_PREFIX=/opt/colmap && \\\n  make -j4 && \\\n  make install\n\n# ..and then create a more lightweight image to actually run stuff in.\nFROM updated\nENV DEBIAN_FRONTEND=noninteractive\nARG UID=1000\nARG GID=1000\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  curl \\\n  exiftool \\\n  ffmpeg \\\n  mediainfo \\\n  graphviz \\\n  libpng16-16 \\\n  libjpeg-turbo8 \\\n  libtiff5 \\\n  libxxf86vm1 \\\n  libxi6 \\\n  libxrandr2 \\\n  libatlas-base-dev \\\n  libqt5widgets5 \\\n  libboost-iostreams1.65.1 \\\n  libboost-program-options1.65.1 \\\n  libboost-serialization1.65.1 \\\n  libopencv-calib3d3.2 \\\n  libopencv-highgui3.2 \\\n  libgoogle-glog0v5 \\\n  libfreeimage3 \\\n  libcgal13 \\\n  libglew2.0 \\\n  libcholmod3 \\\n  libcxsparse3 \\\n  python-minimal && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build /opt /opt\nCOPY pipeline.py /opt/dpg/pipeline.py\nRUN groupadd -g $GID ptools\nRUN useradd -r -u $UID -m -g ptools ptools\nWORKDIR /\nUSER ptools\nENV PATH=/opt/openmvs/bin/OpenMVS:/opt/openmvg/bin:/opt/cmvs/bin:/opt/colmap/bin:/opt/dpg:$PATH\n"
}