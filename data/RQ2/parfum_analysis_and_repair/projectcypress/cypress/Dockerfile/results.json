{
  "startTime": 1674249325317,
  "endTime": 1674249326383,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pinned to the latest ruby 2.7.3 version of the Passenger base Docker image\nFROM phusion/passenger-ruby27:1.0.15\n\nRUN apt-get update \\\n    && apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\" \\\n    && apt-get install --no-install-recommends -y nodejs tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV RAILS_ENV production\nENV RAILS_SERVE_STATIC_FILES 1\n\nRUN mkdir /home/app/cypress\n\nWORKDIR /home/app/cypress\n\nADD Gemfile /home/app/cypress/Gemfile\nADD Gemfile.lock /home/app/cypress/Gemfile.lock\n\nRUN chown -R app:app .\n\nRUN su app -c 'bundle install --without development test'\n\nADD . /home/app/cypress\n\n# If the tmp directory doesn't exist then the app will not be able to run.\n# By creating it here it will get chowned correctly by the next declaration.\nRUN mkdir -p tmp public/data\n\n# DISABLE_DB disables an initializer that requires the DB to run, so we can precompile in the Docker build phase\n# SECRET_KEY_BASE sets a dummy secret key, so that the precompiler (which doesn't need the secret key for anything) can run\nRUN RAILS_ENV=production DISABLE_DB=true SECRET_KEY_BASE=precompile_only bundle exec rake assets:precompile\n\n# This line is a duplicate however it is done to significantly speed up testing. With this line twice\n# we are able to do the bundle install earlier on which means it is cached more often.\nRUN chown -R app:app .\nRUN chmod -R 0755 .\n\nRUN mkdir /etc/service/unicorn\nADD docker_unicorn_start.sh /etc/service/unicorn/run\nRUN chmod 755 /etc/service/unicorn/run\n\nRUN mkdir /etc/service/cypress_delayed_job_1\nADD docker_delayed_job.sh /etc/service/cypress_delayed_job_1/run\nRUN chmod 755 /etc/service/cypress_delayed_job_1/run\n\n# Setup other workers based on first worker. This makes it where tweaking the number of workers\n# just requires changing this WORKER_COUNT. Unfortunately does not allow tweaking after build is completed.\nARG WORKER_COUNT=4\nRUN if [ $WORKER_COUNT -gt 1 ]; then \\\n      for i in $(seq 2 1 $WORKER_COUNT); do \\\n        cp -R /etc/service/cypress_delayed_job_1 /etc/service/cypress_delayed_job_$i; \\\n      done; \\\n    fi\n\nEXPOSE 3000\n"
}