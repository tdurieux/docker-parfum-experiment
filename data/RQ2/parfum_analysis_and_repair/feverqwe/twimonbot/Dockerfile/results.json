{
  "startTime": 1674253030410,
  "endTime": 1674253031031,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine as node\nENV NO_UPDATE_NOTIFIER true\nRUN npm i -g npm@^8 && npm cache clean --force;\n\nFROM node as base\nWORKDIR /opt/backend\nRUN chown -R nobody:nobody ./ && \\\n    mkdir /.npm && \\\n    chown -R nobody:nobody /.npm\nUSER nobody:nobody\nCOPY ./package.json .\nCOPY ./package-lock.json .\nRUN npm ci --production\n\nFROM base as build\nWORKDIR /opt/backend\nUSER nobody:nobody\nRUN npm ci\nADD ./src ./src\nCOPY ./rollup.config.js .\nCOPY ./tsconfig.json .\nRUN npm run build\n\nFROM base as release\nWORKDIR /opt/backend\nCOPY --from=build /opt/backend/dist ./dist\nUSER nobody:nobody\nCOPY ./liveTime.json .\nCOPY ./config.json .\nENV NODE_ENV=production\nENV DEBUG=app:*\n\nEXPOSE 1339\n\nCMD node ./dist/main.js 1>> ./log/stdout.log 2>> ./log/stderr.log\n"
}