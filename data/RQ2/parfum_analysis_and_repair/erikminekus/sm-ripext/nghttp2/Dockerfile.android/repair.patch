diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/erikminekus/sm-ripext/nghttp2/Dockerfile.android b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/erikminekus/sm-ripext/nghttp2/Dockerfile.android/repaired.Dockerfile
index e033b46..b330724 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/erikminekus/sm-ripext/nghttp2/Dockerfile.android
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/erikminekus/sm-ripext/nghttp2/Dockerfile.android/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# vim: ft=dockerfile:
 # Dockerfile to build nghttp2 android binary
 #
 # $ sudo docker build -t nghttp2-android - < Dockerfile.android
@@ -22,14 +21,14 @@ ENV NDK_VERSION r14b
 
 WORKDIR /root
 RUN apt-get update && \
-    apt-get install -y unzip make binutils autoconf \
+    apt-get install --no-install-recommends -y unzip make binutils autoconf \
       automake autotools-dev libtool pkg-config git \
       curl dpkg-dev libxml2-dev genisoimage libc6-i386 \
-      lib32stdc++6 python&& \
-    rm -rf /var/cache/apk/*
+      lib32stdc++6 python && \
+    rm -rf /var/cache/apk/* && rm -rf /var/lib/apt/lists/*;
 
 # Install toolchain
-RUN curl -L -O https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-x86_64.zip && \
+RUN curl -f -L -O https://dl.google.com/android/repository/android-ndk-$NDK_VERSION-linux-x86_64.zip && \
    unzip -q android-ndk-$NDK_VERSION-linux-x86_64.zip && \
    rm android-ndk-$NDK_VERSION-linux-x86_64.zip && \
    mkdir -p $ANDROID_HOME/toolchain && \
@@ -67,7 +66,7 @@ RUN autoreconf -i && \
     make install
 
 WORKDIR /root/build
-RUN curl -L -O https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz && \
+RUN curl -f -L -O https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz && \
     tar xf openssl-$OPENSSL_VERSION.tar.gz && \
     rm openssl-$OPENSSL_VERSION.tar.gz
 
@@ -77,8 +76,8 @@ RUN export CROSS_COMPILE=$TOOLCHAIN/bin/arm-linux-androideabi- && \
     make && make install_sw
 
 WORKDIR /root/build
-RUN curl -L -O http://dist.schmorp.de/libev/Attic/libev-$LIBEV_VERSION.tar.gz && \
-    curl -L -O https://gist.github.com/tatsuhiro-t/48c45f08950f587180ed/raw/80a8f003b5d1091eae497c5995bbaa68096e739b/libev-4.19-android.patch && \
+RUN curl -f -L -O http://dist.schmorp.de/libev/Attic/libev-$LIBEV_VERSION.tar.gz && \
+    curl -f -L -O https://gist.github.com/tatsuhiro-t/48c45f08950f587180ed/raw/80a8f003b5d1091eae497c5995bbaa68096e739b/libev-4.19-android.patch && \
     tar xf libev-$LIBEV_VERSION.tar.gz && \
     rm libev-$LIBEV_VERSION.tar.gz
 
@@ -95,7 +94,7 @@ RUN patch -p1 < ../libev-4.19-android.patch && \
     make install
 
 WORKDIR /root/build
-RUN curl -L -O https://downloads.sourceforge.net/project/libpng/zlib/$ZLIB_VERSION/zlib-$ZLIB_VERSION.tar.gz && \
+RUN curl -f -L -O https://downloads.sourceforge.net/project/libpng/zlib/$ZLIB_VERSION/zlib-$ZLIB_VERSION.tar.gz && \
     tar xf zlib-$ZLIB_VERSION.tar.gz && \
     rm zlib-$ZLIB_VERSION.tar.gz
 
@@ -106,7 +105,13 @@ RUN HOST=arm-linux-androideabi \
     LD=$HOST-ld \
     RANLIB=$HOST-ranlib \
     STRIP=$HOST-strip \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+
+
+
+
+
     --prefix=$PREFIX \
     --libdir=$PREFIX/lib \
     --includedir=$PREFIX/include \
@@ -115,7 +120,7 @@ RUN HOST=arm-linux-androideabi \
 
 
 WORKDIR /root/build
-RUN curl -L -O https://c-ares.haxx.se/download/c-ares-$CARES_VERSION.tar.gz && \
+RUN curl -f -L -O https://c-ares.haxx.se/download/c-ares-$CARES_VERSION.tar.gz && \
     tar xf c-ares-$CARES_VERSION.tar.gz && \
     rm c-ares-$CARES_VERSION.tar.gz