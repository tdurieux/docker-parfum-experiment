diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/introlab/rtabmap/docker/focal/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/introlab/rtabmap/docker/focal/Dockerfile/repaired.Dockerfile
index 9051b50..fd26506 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/introlab/rtabmap/docker/focal/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/introlab/rtabmap/docker/focal/Dockerfile/repaired.Dockerfile
@@ -4,17 +4,17 @@ FROM ros:noetic-perception
 
 # Install build dependencies
 RUN apt-get update && \
-    apt-get install -y git software-properties-common ros-noetic-rtabmap-ros && \
+    apt-get install --no-install-recommends -y git software-properties-common ros-noetic-rtabmap-ros && \
     apt-get remove -y ros-noetic-rtabmap && \
-    rm -rf /var/lib/apt/lists/
+    rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /root/
 
 # GTSAM
 RUN add-apt-repository ppa:borglab/gtsam-release-4.0 -y
-RUN apt install libgtsam-dev libgtsam-unstable-dev -y
+RUN apt install --no-install-recommends libgtsam-dev libgtsam-unstable-dev -y && rm -rf /var/lib/apt/lists/*;
 
-# libpointmatcher 
+# libpointmatcher
 RUN git clone https://github.com/ethz-asl/libnabo.git
 #commit February 13 2021
 RUN cd libnabo && \
@@ -37,12 +37,12 @@ RUN cd libpointmatcher && \
     make install && \
     cd && \
     rm -r libpointmatcher
-    
+
 # PDAL
-RUN apt-get install -y libpdal-dev
+RUN apt-get install --no-install-recommends -y libpdal-dev && rm -rf /var/lib/apt/lists/*;
 
 # RealSense2
-RUN apt-get install -y ros-noetic-librealsense2
+RUN apt-get install --no-install-recommends -y ros-noetic-librealsense2 && rm -rf /var/lib/apt/lists/*;
 
 ARG TARGETPLATFORM
 ENV TARGETPLATFORM=${TARGETPLATFORM:-linux/amd64}
@@ -53,18 +53,19 @@ ENV DEBIAN_FRONTEND=noninteractive
 # Azure Kinect DK
 # Taken from https://github.com/microsoft/Azure-Kinect-Sensor-SDK/issues/1190#issuecomment-822772494
 # K4A binaries on 20.04 not released yet, we should take those from 18.04
-RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then echo "Installing k4a..." && \
-    apt-get update && apt-get install -y curl && \
+RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
+ echo "Installing k4a..." && \
+    apt-get update && apt-get install --no-install-recommends -y curl && \
     echo "Download libk4a1.3_1.3.0_amd64.deb..." && \
-    curl -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4a1.3/libk4a1.3_1.3.0_amd64.deb > /tmp/libk4a1.3_1.3.0_amd64.deb && \
+    curl -f -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4a1.3/libk4a1.3_1.3.0_amd64.deb > /tmp/libk4a1.3_1.3.0_amd64.deb && \
     echo "Download libk4a1.3-dev_1.3.0_amd64.deb..." && \
-    curl -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4a1.3-dev/libk4a1.3-dev_1.3.0_amd64.deb > /tmp/libk4a1.3-dev_1.3.0_amd64.deb && \
+    curl -f -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4a1.3-dev/libk4a1.3-dev_1.3.0_amd64.deb > /tmp/libk4a1.3-dev_1.3.0_amd64.deb && \
     echo "Download libk4abt1.0_1.0.0_amd64.deb..." && \
-    curl -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4abt1.0/libk4abt1.0_1.0.0_amd64.deb > /tmp/libk4abt1.0_1.0.0_amd64.deb && \
+    curl -f -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4abt1.0/libk4abt1.0_1.0.0_amd64.deb > /tmp/libk4abt1.0_1.0.0_amd64.deb && \
     echo "Download libk4abt1.0-dev_1.0.0_amd64.deb..." && \
-    curl -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4abt1.0-dev/libk4abt1.0-dev_1.0.0_amd64.deb > /tmp/libk4abt1.0-dev_1.0.0_amd64.deb && \
+    curl -f -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/libk/libk4abt1.0-dev/libk4abt1.0-dev_1.0.0_amd64.deb > /tmp/libk4abt1.0-dev_1.0.0_amd64.deb && \
     echo "Download k4a-tools_1.3.0_amd64.deb..." && \
-    curl -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/k/k4a-tools/k4a-tools_1.3.0_amd64.deb > /tmp/k4a-tools_1.3.0_amd64.deb && \
+    curl -f -sSL https://packages.microsoft.com/ubuntu/18.04/prod/pool/main/k/k4a-tools/k4a-tools_1.3.0_amd64.deb > /tmp/k4a-tools_1.3.0_amd64.deb && \
     echo "Accept license..." && \
     echo 'libk4a1.3 libk4a1.3/accepted-eula-hash string 0f5d5c5de396e4fee4c0753a21fee0c1ed726cf0316204edda484f08cb266d76' | debconf-set-selections && \
     echo 'libk4abt1.0	libk4abt1.0/accepted-eula-hash	string	03a13b63730639eeb6626d24fd45cf25131ee8e8e0df3f1b63f552269b176e38' | debconf-set-selections && \
@@ -72,13 +73,14 @@ RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then echo "Installing k4a..." && \
     dpkg -i /tmp/libk4a1.3-dev_1.3.0_amd64.deb && \
     dpkg -i /tmp/libk4abt1.0_1.0.0_amd64.deb && \
     dpkg -i /tmp/libk4abt1.0-dev_1.0.0_amd64.deb && \
-    apt-get install -y libsoundio1 && \
+    apt-get install --no-install-recommends -y libsoundio1 && \
     dpkg -i /tmp/k4a-tools_1.3.0_amd64.deb && \
-    rm /tmp/libk4a* /tmp/k4a*; fi
+    rm /tmp/libk4a* /tmp/k4a*; rm -rf /var/lib/apt/lists/*; fi
 
-# libfreenect2 
-RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then echo "Installing libfreenect2..." && \
-    apt-get update && apt-get install -y mesa-utils xserver-xorg-video-all libusb-1.0-0-dev libturbojpeg0-dev libglfw3-dev && \
+# libfreenect2
+RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
+ echo "Installing libfreenect2..." && \
+    apt-get update && apt-get install --no-install-recommends -y mesa-utils xserver-xorg-video-all libusb-1.0-0-dev libturbojpeg0-dev libglfw3-dev && \
     git clone https://github.com/OpenKinect/libfreenect2 && \
     cd libfreenect2 && \
     mkdir build && \
@@ -87,11 +89,12 @@ RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then echo "Installing libfreenect2
     make -j$(nproc) && \
     make install && \
     cd && \
-    rm -r libfreenect2; fi
+    rm -r libfreenect2; rm -rf /var/lib/apt/lists/*; fi
 
 # zed open capture
-RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then echo "Installing zed-open-capture..." && \
-    apt-get update && apt install libusb-1.0-0-dev libhidapi-libusb0 libhidapi-dev wget && \
+RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
+ echo "Installing zed-open-capture..." && \
+    apt-get update && apt install -y --no-install-recommends libusb-1.0-0-dev libhidapi-libusb0 libhidapi-dev wget && \
     git clone https://github.com/stereolabs/zed-open-capture.git && \
     cd zed-open-capture && \
     mkdir build && \
@@ -100,16 +103,17 @@ RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then echo "Installing zed-open-cap
     make -j$(nproc) && \
     make install && \
     cd && \
-    rm -r zed-open-capture; fi
+    rm -r zed-open-capture; rm -rf /var/lib/apt/lists/*; fi
 
 # AliceVision v2.4.0 modified (Sept 13 2021)
-RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then echo "Installing AliceVision..." && \
-      apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
+RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
+ echo "Installing AliceVision..." && \
+      apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
       libsuitesparse-dev \
       libceres-dev \
       xorg-dev \
       libglu1-mesa-dev \
-      wget; fi
+      wget; rm -rf /var/lib/apt/lists/*; fi
 RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then git clone https://github.com/OpenImageIO/oiio.git && \
     cd oiio && \
     git checkout Release-2.0.12 && \