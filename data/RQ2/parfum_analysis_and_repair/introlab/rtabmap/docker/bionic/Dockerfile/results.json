{
  "startTime": 1674253110460,
  "endTime": 1674253111691,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 51,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 59,
        "columnStart": 69,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 51,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 51,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 59,
        "columnStart": 69,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 1,
        "columnEnd": 44
      }
    }
  ],
  "repairedDockerfile": "# Image: introlab3it/rtabmap:bionic\n\nFROM ros:melodic-perception\n\n# Install build dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git software-properties-common ros-melodic-rtabmap-ros && \\\n    apt-get remove -y ros-melodic-rtabmap && \\\n    rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root/\n\n# GTSAM\nRUN add-apt-repository ppa:borglab/gtsam-release-4.0 -y\nRUN apt install --no-install-recommends libgtsam-dev libgtsam-unstable-dev -y && rm -rf /var/lib/apt/lists/*;\n\n# libpointmatcher\nRUN git clone https://github.com/ethz-asl/libnabo.git\n#commit February 13 2021\nRUN cd libnabo && \\\n    git checkout 3cab7eed92bd5d4aed997347b8c8a2692a83a532 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd && \\\n    rm -r libnabo\nRUN git clone https://github.com/ethz-asl/libpointmatcher.git\n#commit April 6 2021\nRUN cd libpointmatcher && \\\n    git checkout 76f99fce0fe69e6384102a0343fdf8d262626e1f && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd && \\\n    rm -r libpointmatcher\n\nARG TARGETPLATFORM\nENV TARGETPLATFORM=${TARGETPLATFORM:-linux/amd64}\nRUN echo \"I am building for $TARGETPLATFORM\"\n\n# arm64\nRUN if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then ln -s /usr/bin/cmake ~/cmake; fi\n\n# cmake >=3.11 required for amd64 dependencies\nRUN if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \\\n apt install --no-install-recommends -y wget && \\\n    wget -nv https://github.com/Kitware/CMake/releases/download/v3.17.0/cmake-3.17.0-Linux-x86_64.tar.gz && \\\n    tar -xzf cmake-3.17.0-Linux-x86_64.tar.gz && \\\n    rm cmake-3.17.0-Linux-x86_64.tar.gz && \\\n    ln -s ~/cmake-3.17.0-Linux-x86_64/bin/cmake ~/cmake; rm -rf /var/lib/apt/lists/*; fi\n\n# AliceVision v2.4.0 modified (Sept 13 2021)\nRUN if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then \\\n apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      libsuitesparse-dev \\\n      libceres-dev \\\n      xorg-dev \\\n      libglu1-mesa-dev; rm -rf /var/lib/apt/lists/*; fi\nRUN if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then git clone https://github.com/OpenImageIO/oiio.git && \\\n    cd oiio && \\\n    git checkout Release-2.0.12 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DUSE_PYTHON=OFF -DOIIO_BUILD_TESTS=OFF -DOIIO_BUILD_TOOLS=OFF .. && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd && \\\n    rm -r oiio; fi\nRUN if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then git clone https://github.com/assimp/assimp.git && \\\n    cd assimp && \\\n    git checkout 71a87b653cd4b5671104fe49e2e38cf5dd4d8675 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd && \\\n    rm -r assimp; fi\nRUN if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then git clone https://github.com/alicevision/geogram.git && \\\n    cd geogram && \\\n    git checkout v1.7.6 && \\\n    wget https://gist.githubusercontent.com/matlabbe/1df724465106c056ca4cc195c81d8cf0/raw/b3ed4cb8f9b270833a40d57d870a259eabfa4415/geogram_8b2ae61.patch && \\\n    git apply geogram_8b2ae61.patch && \\\n    ./configure.sh && \\\n    cd build/Linux64-gcc-dynamic-Release && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd && \\\n    rm -r geogram; fi\nRUN if [ \"$TARGETPLATFORM\" = \"linux/amd64\" ]; then git clone https://github.com/alicevision/AliceVision.git --recursive && \\\n    cd AliceVision && \\\n    git checkout 0f6115b6af6183c524aa7fcf26141337c1cf3872 && \\\n    wget https://gist.githubusercontent.com/matlabbe/1df724465106c056ca4cc195c81d8cf0/raw/b3ed4cb8f9b270833a40d57d870a259eabfa4415/alicevision_0f6115b.patch && \\\n    git apply alicevision_0f6115b.patch && \\\n    mkdir build && \\\n    cd build && \\\n    ~/cmake -DALICEVISION_USE_CUDA=OFF -DALICEVISION_USE_APRILTAG=OFF -DALICEVISION_BUILD_SOFTWARE=OFF .. && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd && \\\n    rm -r AliceVision; fi\n\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Copy current source code\nCOPY . /root/rtabmap\n\n# Build RTAB-Map project\nRUN source /ros_entrypoint.sh && \\\n    cd rtabmap/build && \\\n    ~/cmake -DWITH_ALICE_VISION=ON .. && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd ../.. && \\\n    rm -rf rtabmap && \\\n    ldconfig\n\n"
}