{
  "startTime": 1674255223176,
  "endTime": 1674255224112,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM ubuntu:trusty\nFROM ubuntu:bionic\nMAINTAINER hans.zandbelt@zmartzone.eu\n\nRUN apt-get update && apt-get install --no-install-recommends -y pkg-config make gcc gdb lcov valgrind vim curl wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y autoconf automake libtool && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libssl-dev libjansson-dev libcurl4-openssl-dev check && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y apache2-dev && rm -rf /var/lib/apt/lists/*;\n#RUN apt-get update && apt-get install -y libcjose-dev\nRUN apt-get update && apt-get install --no-install-recommends -y libpcre3-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nENV NGINX_VERSION 1.16.1\nWORKDIR /root\nRUN wget https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\nRUN tar zxvf nginx-${NGINX_VERSION}.tar.gz && rm nginx-${NGINX_VERSION}.tar.gz\nRUN ln -s nginx-${NGINX_VERSION} nginx\nRUN cd /root/nginx && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-debug\n\n#ENV FLAVOR trusty\nENV FLAVOR bionic\nENV CJOSE_VERSION 0.6.1.5\n\nENV CJOSE_PKG libcjose0_${CJOSE_VERSION}-1~${FLAVOR}+1_arm64.deb\nRUN curl -f -s -L -o ~/${CJOSE_PKG} https://mod-auth-openidc.org/download/${CJOSE_PKG}\nRUN dpkg -i ~/${CJOSE_PKG}\nENV CJOSE_PKG libcjose-dev_${CJOSE_VERSION}-1~${FLAVOR}+1_arm64.deb\nRUN curl -f -s -L -o ~/${CJOSE_PKG} https://mod-auth-openidc.org/download/${CJOSE_PKG}\nRUN dpkg -i ~/${CJOSE_PKG}\nRUN apt-get update && apt-get install -y -f\n\nRUN apt-get update && apt-get install --no-install-recommends -y libmemcached-dev memcached && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libhiredis-dev redis-server && rm -rf /var/lib/apt/lists/*;\n\nENV SRCDIR /root/liboauth2\nRUN mkdir ${SRCDIR}\nWORKDIR ${SRCDIR}\n\nENV LD_LIBRARY_PATH ${SRCDIR}/.libs\nENV CK_FORK \"no\"\n\nRUN sed -i \"s/bind .*/bind 127.0.0.1/g\" /etc/redis/redis.conf\nRUN echo \"requirepass foobared\" >> /etc/redis/redis.conf\n\nRUN echo \"#!/bin/sh\" >> ./start.sh\nRUN echo \"service memcached start\" >> ./start.sh\nRUN echo \"service redis-server start\" >> ./start.sh\nRUN chmod a+x ./start.sh\n\nCOPY . ${SRCDIR}\n\nARG CONFIGURE_ARGS\n\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\tCFLAGS=\"-g -O0 -I/usr/include/apache2\" \\\n\tLDFLAGS=\"-lrt\" \\\n\t--with-nginx=/root/nginx \\\n\t${CONFIGURE_ARGS}\nRUN make all\nRUN make check_liboauth2\n"
}