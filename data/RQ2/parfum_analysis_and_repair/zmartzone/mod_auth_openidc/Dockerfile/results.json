{
  "startTime": 1674254760983,
  "endTime": 1674254766204,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\nMAINTAINER hans.zandbelt@zmartzone.eu\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y pkg-config make gcc gdb lcov valgrind vim curl iputils-ping wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y autoconf automake libtool && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libssl-dev libjansson-dev libcurl4-openssl-dev check && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y apache2 apache2-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libpcre2-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libapache2-mod-php libhiredis-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y libcjose-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN a2enmod ssl\nRUN a2ensite default-ssl\n\nRUN echo \"/usr/sbin/apache2ctl start && tail -f /var/log/apache2/error.log \" >> /root/run.sh\nRUN chmod a+x /root/run.sh\n\nCOPY . /root/mod_auth_openidc\nWORKDIR /root/mod_auth_openidc\n\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-g -O0\" LDFLAGS=\"-lrt\"\n#-I/usr/include/apache2\nRUN make clean && make check\nRUN make install\n\nWORKDIR /root\n\nADD openidc.conf /etc/apache2/conf-available\nRUN a2enconf openidc\nRUN /usr/sbin/apache2ctl start\n\nRUN mkdir -p /var/www/html/protected\nRUN echo \"<html><body><h1>Hello, <?php echo($_SERVER['REMOTE_USER']) ?></h1><pre><?php print_r(array_map(\\\"htmlentities\\\", apache_request_headers())); ?></pre><a href=\\\"/protected/?logout=https%3A%2F%2Flocalhost.zmartzone.eu%2Floggedout.html\\\">Logout</a></body></html>\" >  /var/www/html/protected/index.php\nRUN mkdir -p /var/www/html/api && cp /var/www/html/protected/index.php /var/www/html/api\n\n# docker run -p 443:443 -it mod_auth_openidc /bin/bash -c \"source /etc/apache2/envvars && valgrind --leak-check=full /usr/sbin/apache2 -X\"\n"
}