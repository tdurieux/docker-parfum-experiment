{
  "startTime": 1674254030966,
  "endTime": 1674254032270,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.10\n\nENV MOD_AUTH_OPENIDC_REPOSITORY https://github.com/zmartzone/mod_auth_openidc.git\n\nENV MOD_AUTH_OPENIDC_BRANCH master\n\nENV BUILD_DIR /tmp/mod_auth_openidc\n\nENV APACHE_LOG_DIR /var/log/apache2\n\nENV APACHE_DEFAULT_CONF /etc/apache2/httpd.conf\n\n# add testing repository (for cjose library)\nRUN echo \"http://nl.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\n\n# ADD source\nRUN mkdir ${BUILD_DIR}\n\n# add dependencies, build and install mod_auth_openidc, need atomic operation for image size\nRUN apk update && apk add --no-cache \\\n  apache2 \\\n  apache2-proxy \\\n  wget \\\n  jansson \\\n  hiredis \\\n  cjose \\\n  cjose-dev \\\n  git \\\n  autoconf \\\n  build-base \\\n  automake \\\n  curl \\\n  apache2-dev \\\n  curl-dev \\\n  pcre-dev \\\n  libtool \\\n  && \\\n  cd ${BUILD_DIR} && \\\n  git clone -b ${MOD_AUTH_OPENIDC_BRANCH} ${MOD_AUTH_OPENIDC_REPOSITORY} && \\\n  cd mod_auth_openidc && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-g -O0\" LDFLAGS=\"-lrt\" && \\\n  make test && \\\n  make install && \\\n  cd ../.. && \\\n  rm -fr ${BUILD_DIR} && \\\n  apk del git cjose-dev apache2-dev autoconf automake build-base wget curl-dev pcre-dev libtool\n\n# configure apache\nRUN  apk add --no-cache sed && \\\n  echo \"LoadModule auth_openidc_module /usr/lib/apache2/mod_auth_openidc.so\" >>  ${APACHE_DEFAULT_CONF} && \\\n  ln -sfT /dev/stderr \"${APACHE_LOG_DIR}/error.log\" && \\\n  ln -sfT /dev/stdout \"${APACHE_LOG_DIR}/access.log\" && \\\n  ln -sfT /dev/stdout \"${APACHE_LOG_DIR}/other_vhosts_access.log\" && \\\n  chown -R --no-dereference \"apache:users\" \"${APACHE_LOG_DIR}\" && \\\n  apk del sed\n\n# https://httpd.apache.org/docs/2.4/stopping.html#gracefulstop\n# stop gracefully when docker stops, create issue with interactive mode because it's the signal use by the docker engine on windows.\nSTOPSIGNAL WINCH\n\n# port to expose, referes to the Listen 80 in the embedded httpd.conf\nEXPOSE 80\n\n# launch apache\nCMD exec /usr/sbin/httpd -D FOREGROUND -f ${APACHE_DEFAULT_CONF}"
}