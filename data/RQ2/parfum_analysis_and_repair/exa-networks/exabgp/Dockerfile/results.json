{
  "startTime": 1674248993756,
  "endTime": 1674248994849,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# how to build and run exabgp using docker (using the local copy)\n# this dockerfile install exabgp in the container /opt\n\n# docker build -t exabgp ./\n# docker run -p 179:1790 --mount type=bind,source=`pwd`/etc/exabgp,target=/etc/\n\n# debug the build\n# docker build --progress=plain --no-cache -t exabgp ./\n\nFROM python:3-slim-buster\n\n# update packages\nRUN apt update && apt install --no-install-recommends -y dumb-init && rm -rf /var/lib/apt/lists/*;\nRUN apt -y dist-upgrade\n\nRUN rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\n# Add ExaBGP\nADD . /opt/exabgp\nRUN useradd -r exa\nRUN mkdir /etc/exabgp\nRUN mkfifo /run/exabgp.in\nRUN mkfifo /run/exabgp.out\nRUN chown exa /run/exabgp.in\nRUN chown exa /run/exabgp.out\nRUN chmod 600 /run/exabgp.in\nRUN chmod 600 /run/exabgp.out\n\nRUN echo \"[exabgp.daemon]\" > /opt/exabgp/etc/exabgp/exabgp.env\nRUN echo \"user = 'exa'\" >> /opt/exabgp/etc/exabgp/exabgp.env\n\nENV PYTHONPATH=/opt/exabgp/src\nENV PATH=$PATH:/opt/exabgp/sbin/\n\n# ENTRYPOINT [ \"/bin/bash\"]\nENTRYPOINT [ \\\n    \"/usr/bin/dumb-init\", \"--\", \\ \n    \"/opt/exabgp/sbin/exabgp\" \\\n]\n"
}