diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/beetlebugorg/mod_dims/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/beetlebugorg/mod_dims/.devcontainer/Dockerfile/repaired.Dockerfile
index 32d5d55..6e483e8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/beetlebugorg/mod_dims/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/beetlebugorg/mod_dims/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -31,43 +31,43 @@ RUN apt-get -y update && \
         curl \
         libcurl4-openssl-dev libfreetype6-dev libopenexr-dev libxml2-dev \
         libgif-dev libjpeg62-turbo-dev libpng-dev \
-        liblcms2-dev pkg-config libssl-dev libpangocairo-1.0-0 wget
+        liblcms2-dev pkg-config libssl-dev libpangocairo-1.0-0 wget && rm -rf /var/lib/apt/lists/*;
 
 # WEBP Library
 RUN wget https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz && \
     tar xzvf libwebp-${WEBP_VERSION}.tar.gz && \
     cd libwebp-${WEBP_VERSION} && \
-    ./configure --prefix=/usr/local/imagemagick && \
-    make -j4 && make install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/imagemagick && \
+    make -j4 && make install && rm libwebp-${WEBP_VERSION}.tar.gz
 
 # TIFF Library
-RUN wget http://download.osgeo.org/libtiff/tiff-${TIFF_VERSION}.tar.gz && \
+RUN wget https://download.osgeo.org/libtiff/tiff-${TIFF_VERSION}.tar.gz && \
     tar xzvf tiff-${TIFF_VERSION}.tar.gz && \
     cd tiff-${TIFF_VERSION} && \
-    ./configure --prefix=$PREFIX --with-webp-include-dir=$PREFIX/include --with-webp-lib-dir=$PREFIX/lib && \
-    make -j4 && make install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=$PREFIX --with-webp-include-dir=$PREFIX/include --with-webp-lib-dir=$PREFIX/lib && \
+    make -j4 && make install && rm tiff-${TIFF_VERSION}.tar.gz
 
 # Imagemagick
 RUN wget https://download.imagemagick.org/ImageMagick/download/releases/ImageMagick-${IMAGEMAGICK_VERSION}.tar.xz && \
     export PKG_CONFIG_PATH=$PREFIX/lib/pkgconfig && \
     tar xvf ImageMagick-${IMAGEMAGICK_VERSION}.tar.xz && \
     cd ImageMagick-${IMAGEMAGICK_VERSION} && \
-    ./configure --without-x --with-quantum-depth=8 --prefix=$PREFIX && \
-    make -j4 && make install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --without-x --with-quantum-depth=8 --prefix=$PREFIX && \
+    make -j4 && make install && rm ImageMagick-${IMAGEMAGICK_VERSION}.tar.xz
 
 RUN apt-get --no-install-recommends install -y apt-transport-https apt-utils \
             automake build-essential ccache cmake ca-certificates curl git \
             gcc g++ libc-ares-dev libc-ares2 libcurl4-openssl-dev libre2-dev \
-            libssl-dev m4 make pkg-config tar wget zlib1g-dev
+            libssl-dev m4 make pkg-config tar wget zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /build
 
-RUN apt-get install -y vim && \
+RUN apt-get install --no-install-recommends -y vim && \
     chown -R www-data:www-data /usr/local/apache2 && \
     sed "s|Listen 80|Listen 8000|" /usr/local/apache2/conf/httpd.conf -i && \
     sed "s|^#LoadModule authz_core_module|LoadModule authz_core_module|" /usr/local/apache2/conf/httpd.conf -i && \
     sed "s|^LogLevel warn|LogLevel debug|" /usr/local/apache2/conf/httpd.conf -i && \
-    echo "Include conf/extra/dims.conf" >> /usr/local/apache2/conf/httpd.conf
+    echo "Include conf/extra/dims.conf" >> /usr/local/apache2/conf/httpd.conf && rm -rf /var/lib/apt/lists/*;
 
 COPY docker/dims.conf /usr/local/apache2/conf/extra/dims.conf