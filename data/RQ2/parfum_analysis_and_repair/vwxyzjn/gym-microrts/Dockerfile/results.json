{
  "startTime": 1674252469476,
  "endTime": 1674252470083,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.3.1-runtime-ubuntu20.04\n\n# install ubuntu dependencies\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install python3-pip xvfb ffmpeg git build-essential python-opengl && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# install microrts dependencies\nRUN apt-get -y --no-install-recommends -q install wget unzip default-jdk && rm -rf /var/lib/apt/lists/*;\n\n# install python dependencies\nRUN pip install --no-cache-dir poetry\nCOPY pyproject.toml pyproject.toml\nCOPY poetry.lock poetry.lock\nRUN poetry install\n\n# copy local files\nCOPY ./gym_microrts /gym_microrts\nCOPY ./experiments /experiments\nRUN poetry install\n# COPY build.sh build.sh\n# RUN bash build.sh\n\nCOPY entrypoint.sh /usr/local/bin/\nRUN chmod 777 /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n\n"
}