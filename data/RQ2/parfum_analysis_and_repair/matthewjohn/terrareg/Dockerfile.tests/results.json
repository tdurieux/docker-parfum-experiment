{
  "startTime": 1674253086041,
  "endTime": 1674253087549,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nWORKDIR /\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends --assume-yes python3.10 python3-pip curl unzip git && apt-get clean all && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y --no-install-recommends --assume-yes wget && apt-get clean all && rm -rf /var/lib/apt/lists/*;\nRUN bash -c 'if [ \"$(uname -m)\" == \"aarch64\" ]; \\\n    then \\\n      arch=arm64; \\\n    else \\\n      arch=amd64; \\\n    fi; \\\n    wget https://github.com/terraform-docs/terraform-docs/releases/download/v0.16.0/terraform-docs-v0.16.0-linux-${arch}.tar.gz && tar -zxvf terraform-docs-v0.16.0-linux-${arch}.tar.gz && chmod +x terraform-docs && mv terraform-docs /usr/local/bin/ && rm terraform-docs-v0.16.0-linux-${arch}.tar.gz'\n\nRUN bash -c 'if [ \"$(uname -m)\" == \"aarch64\" ]; \\\n    then \\\n      arch=arm64; \\\n    else \\\n      arch=amd64; \\\n    fi; \\\n    wget https://github.com/aquasecurity/tfsec/releases/download/v1.26.0/tfsec-linux-${arch} -O /usr/local/bin/tfsec && \\\n    chmod +x /usr/local/bin/tfsec'\n\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir --proxy=$http_proxy -r requirements.txt\n\n\nENTRYPOINT [ \"bash\", \"scripts/entrypoint.sh\" ]\n\nRUN apt-get update\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y fonts-liberation xdg-utils \\\n                       software-properties-common curl unzip wget \\\n                       xvfb && \\\n    apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\n\n# Install firefox and geckodriver\nRUN apt-get update && apt-get install --no-install-recommends -y firefox firefox-geckodriver && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements-dev.txt .\nRUN pip install --no-cache-dir --proxy=$http_proxy -r requirements-dev.txt\n\nCOPY . .\n\nENTRYPOINT [\"\"]\n"
}