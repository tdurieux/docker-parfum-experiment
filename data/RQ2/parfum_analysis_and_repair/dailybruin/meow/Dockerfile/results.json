{
  "startTime": 1674255252476,
  "endTime": 1674255253661,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 0 - Node build\nFROM node:8\nWORKDIR /meow\nADD package.json package-lock.json /meow/\nRUN npm install && npm cache clean --force;\nCOPY ./webpack.config.js ./webpack.prod.config.js ./jsconfig.json ./\nCOPY meow/frontend meow/frontend\nRUN npm run build-production\n\n# Slightly modified from\n# https://www.caktusgroup.com/blog/2017/03/14/production-ready-dockerfile-your-python-django-app/\n#FROM python:3.6-alpine\nFROM python:3.6\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# Copy in your requirements file\nWORKDIR /meow\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl \\\n  build-essential \\\n  libpq-dev && rm -rf /var/lib/apt/lists/*;\n\nADD requirements.txt /meow/\nRUN pip install --no-cache-dir -U -r requirements.txt\n\n# ADD requirements.txt /meow/\n\n# Install build deps, then run `pip install`, then remove unneeded build deps all in a single step. Correct the path to your production requirements file, if needed.\n# RUN set -ex \\\n#   && apk add --no-cache --virtual .build-deps \\\n#   gcc \\\n#   make \\\n#   tzdata \\\n#   libc-dev \\\n#   musl-dev \\\n#   linux-headers \\\n#   pcre-dev \\\n#   postgresql-dev \\\n#   && cp /usr/share/zoneinfo/America/Los_Angeles /etc/localtime \\\n#   && echo \"America/Los_Angeles\" >  /etc/timezone \\\n#   && python3.6 -m venv /venv \\\n#   && /venv/bin/pip install -U pip \\\n#   && LIBRARY_PATH=/lib:/usr/lib /bin/sh -c \"/venv/bin/pip install --no-cache-dir -r requirements.txt\" \\\n#   && runDeps=\"$( \\\n#   scanelf --needed --nobanner --recursive /venv \\\n#   | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n#   | sort -u \\\n#   | xargs -r apk info --installed \\\n#   | sort -u \\\n#   )\" \\\n#   && apk add --virtual .python-rundeps $runDeps \\\n#   && apk del .build-deps\n\n# Copy your application code to the container (make sure you create a .dockerignore file if any large files or directories should be excluded)\n\nCOPY --from=0 /meow /meow\n\nADD . /meow/\n\nEXPOSE 5000\n\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}