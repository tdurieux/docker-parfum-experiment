{
  "startTime": 1674248637479,
  "endTime": 1674248638239,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 20,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 64,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 64,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic as builder\n\nLABEL maintainer=\"CRYPDEX\"\n\nARG VERSION=0.17.1\nRUN test -n \"$VERSION\"\n\n# https://github.com/bitcoin/bitcoin/blob/master/doc/build-unix.md\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  git \\\n  build-essential libtool autotools-dev automake pkg-config bsdmainutils python3 \\\n  libssl-dev libevent-dev libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-test-dev libboost-thread-dev \\\n\n  libzmq3-dev \\\n\n  software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Berkley DB\nRUN add-apt-repository ppa:bitcoin/bitcoin && apt-get update && apt-get install --no-install-recommends -y \\\n  libdb4.8-dev libdb4.8++-dev && rm -rf /var/lib/apt/lists/*;\n\n# These are run in separate layers to take advantage of cache\nRUN git clone https://github.com/bitcoin/bitcoin.git && cd bitcoin/ && git checkout v${VERSION}\nWORKDIR bitcoin\nRUN ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-gui --without-miniupnpc\nRUN make -j 4 && \\\n  strip src/bitcoind && \\\n  strip src/bitcoin-cli && \\\n  strip src/bitcoin-tx && \\\n  make install\n\nFROM ubuntu:bionic\n\n#RUN useradd -r bitcoin \\\n#  && apt-get update -y \\\n#  && apt-get install -y curl gnupg git build-essential \\\n#  && apt-get clean \\\n#  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n#\n#RUN git clone https://github.com/ncopa/su-exec.git \\\n#  && cd su-exec && make && cp su-exec /usr/local/bin/ \\\n#  && cd .. && rm -rf su-exec\n\nCOPY --from=builder /usr/local/bin/bitcoind  /usr/local/bin/\nCOPY --from=builder /usr/local/bin/bitcoin-cli /usr/local/bin/\nCOPY --from=builder /usr/local/bin/bitcoin-tx /usr/local/bin/\nCOPY --from=builder /usr/local/bin/bitcoin-wallet /usr/local/bin/\n\n#ENV BITCOIN_DATA=/home/bitcoin/.bitcoin\n#ENV PATH=/opt/bitcoin-${VERSION}/bin:$PATH\n#\n#RUN echo \"https://bitcoin.org/bin/bitcoin-core-${VERSION}/bitcoin-${VERSION}-${ARCH}-linux-gnu.tar.gz\"\n#\n#RUN curl -SL https://bitcoin.org/laanwj-releases.asc | gpg --batch --import \\\n#  && curl -SLO https://bitcoin.org/bin/bitcoin-core-${VERSION}/SHA256SUMS.asc \\\n#  && curl -SLO https://bitcoin.org/bin/bitcoin-core-${VERSION}/bitcoin-${VERSION}-${ARCH}-linux-gnu.tar.gz \\\n#  && gpg --verify SHA256SUMS.asc \\\n#  && grep \" bitcoin-${VERSION}-${ARCH}-linux-gnu.tar.gz\\$\" SHA256SUMS.asc | sha256sum -c - \\\n#  && tar -xzf *.tar.gz -C /opt \\\n#  && rm *.tar.gz *.asc\n#\n#COPY entrypoint.sh /entrypoint.sh\n#\n#VOLUME [\"/home/bitcoin/.bitcoin\"]\n#\n#EXPOSE 8332 8333 18332 18333 18443 18444\n#\n#ENTRYPOINT [\"/entrypoint.sh\"]\n#\n#CMD [\"bitcoind\"]\n"
}