{
  "startTime": 1674254465259,
  "endTime": 1674254466163,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Download go-auto-yt via git and youtube-dl via curl on ubuntu temp image\nFROM ubuntu:latest as DOWNLOAD\nWORKDIR /git\nARG TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST\nRUN apt-get update && apt-get install --no-install-recommends git curl -y && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -L https://yt-dl.org/downloads/latest/youtube-dl -o ./youtube-dl && chmod a+rx ./youtube-dl\nRUN git clone https://github.com/XiovV/go-auto-yt.git\nRUN cd go-auto-yt && if [ ! \"$TRAVIS_PULL_REQUEST\" = false ]; then git fetch origin +refs/pull/\"$TRAVIS_PULL_REQUEST\"/merge && git checkout FETCH_HEAD ; fi\n\n#Transfer git content from DOWNLOAD stage over GO stage to build application\nFROM golang:alpine as GO\nWORKDIR /app\nCOPY --from=DOWNLOAD /git/go-auto-yt .\nRUN GOOS=linux GOARCH=amd64 go build -o main .\n\n#Use ffmpeg as base image and copy executable from other temp images\nFROM jrottenberg/ffmpeg:alpine as BASE\nWORKDIR /app\nCOPY --from=GO /app/main .\nCOPY --from=GO /app/static ./static\nCOPY --from=GO /app/entrypoint.sh .\nCOPY --from=DOWNLOAD /git/youtube-dl /usr/local/bin/\nRUN apk --update --no-cache add python shadow\nRUN addgroup -S goautoyt\nRUN adduser --system goautoyt --ingroup goautoyt\n\n#Set starting command\nENTRYPOINT [\"./entrypoint.sh\"]\n\n#Expose port and volumes\nEXPOSE 8080\nVOLUME /app/downloads\nVOLUME /app/config"
}