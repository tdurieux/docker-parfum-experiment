{
  "startTime": 1674254157915,
  "endTime": 1674254158877,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 123,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 91,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 117,
        "lineEnd": 121,
        "columnStart": 2,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ros:galactic\nENV DEBIAN_FRONTEND noninteractive\n\n# install dependencies via apt\nENV DEBCONF_NOWARNINGS yes\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  apt-get upgrade -y -qq --no-install-recommends && \\\n  : \"basic dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    build-essential \\\n    pkg-config \\\n    cmake \\\n    git \\\n    wget \\\n    curl \\\n    tar \\\n    unzip && \\\n  : \"g2o dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libgoogle-glog-dev \\\n    libatlas-base-dev \\\n    libsuitesparse-dev && \\\n  : \"other dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libgoogle-glog-dev \\\n    libyaml-cpp-dev \\\n    libopencv-dev \\\n    libeigen3-dev && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nARG CMAKE_INSTALL_PREFIX=/usr/local\nARG NUM_THREADS=1\n\nENV CPATH=${CMAKE_INSTALL_PREFIX}/include:${CPATH}\nENV C_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${C_INCLUDE_PATH}\nENV CPLUS_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${CPLUS_INCLUDE_PATH}\nENV LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LIBRARY_PATH}\nENV LD_LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}\n\nENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\n\n# socket.io-client-cpp\nARG SIOCLIENT_COMMIT=ff6ef08e45c594e33aa6bc19ebdd07954914efe0\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/shinsumicco/socket.io-client-cpp.git && \\\n  cd socket.io-client-cpp && \\\n  git checkout ${SIOCLIENT_COMMIT} && \\\n  git submodule init && \\\n  git submodule update && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_UNIT_TESTS=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV sioclient_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/sioclient\n\n# protobuf\nWORKDIR /tmp\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  apt-get upgrade -y -qq --no-install-recommends && \\\n  apt-get install --no-install-recommends -y -qq autogen autoconf libtool && \\\n  wget -q https://github.com/google/protobuf/archive/v3.6.1.tar.gz && \\\n  tar xf v3.6.1.tar.gz && \\\n  cd protobuf-3.6.1 && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CMAKE_INSTALL_PREFIX} --enable-static=no && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf * && \\\n  apt-get purge -y -qq autogen autoconf libtool && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/* && rm v3.6.1.tar.gz\n\n# stella_vslam\nRUN set -x && \\\n  : \"stella_vslam dependencies\" && \\\n  apt-get update -y -qq && \\\n  apt-get install --no-install-recommends -y -qq \\\n    ros-${ROS_DISTRO}-libg2o && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN set -x && \\\n  git clone --depth 1 https://github.com/stella-cv/stella_vslam.git && \\\n  cd stella_vslam && \\\n  git submodule update -i --recursive && \\\n  mkdir -p build && \\\n  cd build && \\\n  CMAKE_PREFIX_PATH=/opt/ros/${ROS_DISTRO}/lib/cmake cmake \\\n    -DUSE_PANGOLIN_VIEWER=OFF \\\n    -DUSE_SOCKET_PUBLISHER=ON \\\n    -DINSTALL_SOCKET_PUBLISHER=ON \\\n    -DUSE_STACK_TRACE_LOGGER=ON \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  rm -rf CMakeCache.txt CMakeFiles Makefile cmake_install.cmake example src && \\\n  chmod -R 777 ./*\n\n# ROS2\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  : \"install ROS2 packages\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    ros-${ROS_DISTRO}-image-transport \\\n    ros-${ROS_DISTRO}-cv-bridge \\\n    python3-pip \\\n    python3-colcon-common-extensions && \\\n  pip3 install --no-cache-dir -U \\\n    argcomplete && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nWORKDIR /ros2_ws\nCOPY . /ros2_ws/src/stella_vslam_ros\n\nRUN set -x && \\\n  : \"build ROS2 packages\" && \\\n  bash -c \"source /opt/ros/${ROS_DISTRO}/setup.bash; \\\n  colcon build --parallel-workers ${NUM_THREADS} --cmake-args \\\n    -DUSE_PANGOLIN_VIEWER=OFF \\\n    -DUSE_SOCKET_PUBLISHER=ON \\\n    -DUSE_STACK_TRACE_LOGGER=ON\"\n\nRUN set -x && \\\n  sh -c \"echo '#'\\!'/bin/bash\\nset -e\\nsource /opt/ros/${ROS_DISTRO}/setup.bash\\nsource /ros2_ws/install/setup.bash\\nexec \\\"\\$@\\\"' > /ros_entrypoint.sh\" && \\\n  chmod u+x /ros_entrypoint.sh\n\nENTRYPOINT [\"/ros_entrypoint.sh\"]\nCMD [\"bash\"]\n"
}