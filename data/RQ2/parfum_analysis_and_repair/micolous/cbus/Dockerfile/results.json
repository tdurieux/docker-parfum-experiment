{
  "startTime": 1674254282907,
  "endTime": 1674254283782,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile sets up cmqttd, which bridges a C-Bus PCI to a MQTT server.\n#\n# This requires about 120 MiB of dependencies, and the\n# The final image size is about 100 MiB.\n#\n# Example use:\n#\n# $ docker build -t cmqttd .\n# $ docker run --device /dev/ttyUSB0 -e \"SERIAL_PORT=/dev/ttyUSB0\" \\\n#     -e \"MQTT_SERVER=192.2.0.1\" -e \"TZ=Australia/Adelaide\" -it cmqttd\nFROM alpine:3.11 as base\n\n# Install most Python deps here, because that way we don't need to include build tools in the\n# final image.\nRUN apk add --no-cache python3 py3-cffi py3-paho-mqtt py3-six tzdata && \\\n    pip3 install --no-cache-dir 'pyserial==3.4' 'pyserial_asyncio==0.4'\n\n# Runs tests and builds a distribution tarball\nFROM base as builder\n# See also .dockerignore\nADD . /cbus\nWORKDIR /cbus\nRUN pip3 install --no-cache-dir 'parameterized' && \\\n    python3 -m unittest && \\\n    python3 setup.py bdist -p generic --format=gztar\n\n# cmqttd runner image\nFROM base as cmqttd\nCOPY COPYING COPYING.LESSER Dockerfile README.md entrypoint-cmqttd.sh /\nCOPY --from=builder /cbus/dist/cbus-0.2.generic.tar.gz /\nRUN tar zxf /cbus-0.2.generic.tar.gz && rm /cbus-0.2.generic.tar.gz\n\n# Runs cmqttd itself\nCMD /entrypoint-cmqttd.sh\n"
}