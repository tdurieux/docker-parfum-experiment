{
  "startTime": 1674219371339,
  "endTime": 1674219375750,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15.0\n\nLABEL maintainer=\"ChaosNative\"\n\n#Installing\nRUN apk update && \\\n    apk upgrade --update-cache --available\nRUN apk --no-cache add   python3  curl git py3-pip ca-certificates  bash openssl openssh-client  &&\\\n    apk --no-cache add --virtual build-dependencies  python3-dev libffi-dev musl-dev gcc cargo openssl-dev libressl-dev build-base &&\\\n    rm -rf /var/cache/apk/*\n\nRUN pip3 install --no-cache-dir --upgrade pip wheel\nRUN pip3 install --no-cache-dir cryptography cffi ansible==2.10 openshift jmespath awscli\nRUN ansible-galaxy collection install community.kubernetes\n\n#Installing kubectl\nENV KUBECTL_VERSION=\"v1.19.0\"\nRUN curl -f -L https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && \\\n    chmod +x /usr/local/bin/kubectl\n\n\n#Installing helm\nRUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 && \\ \n    chmod 700 get_helm.sh && \\ \n    ./get_helm.sh\nENV MODE=\"setup\"\nCOPY . /root\nWORKDIR /root\nRUN chmod  +x entrypoint.sh\nRUN mkdir -p  /etc/ansible\nCMD [\"sh\",\"-c\",\"./entrypoint.sh\"]\n\n"
}