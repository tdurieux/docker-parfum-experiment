diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/litmuschaos/test-tools/custom/hardened-alpine/experiment/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/litmuschaos/test-tools/custom/hardened-alpine/experiment/Dockerfile/repaired.Dockerfile
index 4e0a274..36f92ba 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/litmuschaos/test-tools/custom/hardened-alpine/experiment/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/litmuschaos/test-tools/custom/hardened-alpine/experiment/Dockerfile/repaired.Dockerfile
@@ -20,61 +20,61 @@ ARG LITMUS_VERSION
 RUN rm -rf /var/lib/apt/lists/*
 
 # Install generally useful things
-RUN apk --update add \
+RUN apk --update --no-cache add \
         sudo \
-	      htop\
-        bash\
-        make\
+							htop \
+        bash \
+        make \
         git \
-        curl\
-        iproute2\
-        stress-ng\
+        curl \
+        iproute2 \
+        stress-ng \
         openssh-client\
-#        libc6-compat \
+# libc6-compat \
         sshpass \
         expat-doc
 
 RUN set -ex && \
-     apk --update add libstdc++ curl ca-certificates && \
+     apk --update --no-cache add libstdc++ curl ca-certificates && \
      for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION}; \
-         do curl -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \
-     apk add --allow-untrusted /tmp/*.apk && \
+         do curl -f -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \
+     apk add --no-cache --allow-untrusted /tmp/*.apk && \
      rm -v /tmp/*.apk && \
      /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib
 
 # Change default shell from ash to bash
-RUN sed -i -e "s/bin\/ash/bin\/bash/" /etc/passwd   
+RUN sed -i -e "s/bin\/ash/bin\/bash/" /etc/passwd  
 
 #Installing Kubectl
 ENV KUBE_LATEST_VERSION="v1.21.2"
-RUN curl -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/${TARGETARCH}/kubectl -o     /usr/local/bin/kubectl && \
+RUN curl -f -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/${TARGETARCH}/kubectl -o     /usr/local/bin/kubectl && \
     chmod +x /usr/local/bin/kubectl
 
 #Installing crictl binaries
-RUN curl -L https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.16.0/crictl-v1.16.0-linux-${TARGETARCH}.tar.gz --output crictl-v1.16.0-linux-${TARGETARCH}.tar.gz && \
-    tar zxvf crictl-v1.16.0-linux-${TARGETARCH}.tar.gz -C /usr/local/bin
-    
+RUN curl -f -L https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.16.0/crictl-v1.16.0-linux-${TARGETARCH}.tar.gz --output crictl-v1.16.0-linux-${TARGETARCH}.tar.gz && \
+    tar zxvf crictl-v1.16.0-linux-${TARGETARCH}.tar.gz -C /usr/local/bin && rm crictl-v1.16.0-linux-${TARGETARCH}.tar.gz
+
 #Installing pumba binaries
 ENV PUMBA_VERSION="0.8.0"
-RUN curl -L https://github.com/alexei-led/pumba/releases/download/${PUMBA_VERSION}/pumba_linux_${TARGETARCH} --output /usr/local/bin/pumba && chmod +x /usr/local/bin/pumba
+RUN curl -f -L https://github.com/alexei-led/pumba/releases/download/${PUMBA_VERSION}/pumba_linux_${TARGETARCH} --output /usr/local/bin/pumba && chmod +x /usr/local/bin/pumba
 
 #Installing promql cli binaries
-RUN curl -L https://github.com/chaosnative/promql-cli/releases/download/2.6.0/promql_linux_${TARGETARCH} --output /usr/local/bin/promql && chmod +x /usr/local/bin/promql
+RUN curl -f -L https://github.com/chaosnative/promql-cli/releases/download/2.6.0/promql_linux_${TARGETARCH} --output /usr/local/bin/promql && chmod +x /usr/local/bin/promql
 
 #Installing nsutil cli binaries
-RUN curl -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/nsutil-linux-${TARGETARCH} --output /usr/local/bin/nsutil && chmod +x /usr/local/bin/nsutil
+RUN curl -f -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/nsutil-linux-${TARGETARCH} --output /usr/local/bin/nsutil && chmod +x /usr/local/bin/nsutil
 
 #Installing pause cli binaries
-RUN curl -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/pause-linux-${TARGETARCH} --output /usr/local/bin/pause && chmod +x /usr/local/bin/pause
+RUN curl -f -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/pause-linux-${TARGETARCH} --output /usr/local/bin/pause && chmod +x /usr/local/bin/pause
 
 #Installing dns_interceptor cli binaries
-RUN curl -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/dns_interceptor --output /usr/local/bin/dns_interceptor && chmod +x /usr/local/bin/dns_interceptor
+RUN curl -f -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/dns_interceptor --output /usr/local/bin/dns_interceptor && chmod +x /usr/local/bin/dns_interceptor
 
 COPY --from=docker:19.03 /usr/local/bin/docker /usr/local/bin/
 
 # Installing toxiproxy binaries
-RUN curl -L https://github.com/Shopify/toxiproxy/releases/download/v2.4.0/toxiproxy-cli-linux-${TARGETARCH} --output /usr/local/bin/toxiproxy-cli && chmod +x /usr/local/bin/toxiproxy-cli && \
-     curl -L https://github.com/Shopify/toxiproxy/releases/download/v2.4.0/toxiproxy-server-linux-${TARGETARCH} --output /usr/local/bin/toxiproxy-server && chmod +x /usr/local/bin/toxiproxy-server
+RUN curl -f -L https://github.com/Shopify/toxiproxy/releases/download/v2.4.0/toxiproxy-cli-linux-${TARGETARCH} --output /usr/local/bin/toxiproxy-cli && chmod +x /usr/local/bin/toxiproxy-cli && \
+     curl -f -L https://github.com/Shopify/toxiproxy/releases/download/v2.4.0/toxiproxy-server-linux-${TARGETARCH} --output /usr/local/bin/toxiproxy-server && chmod +x /usr/local/bin/toxiproxy-server
 
 # The user the app should run as
 ENV APP_USER=litmus