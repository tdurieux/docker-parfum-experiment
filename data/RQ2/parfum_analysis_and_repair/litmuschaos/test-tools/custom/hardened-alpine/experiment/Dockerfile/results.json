{
  "startTime": 1674248320831,
  "endTime": 1674248322527,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 12,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 175
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 5,
        "columnEnd": 152
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile contains the hardened alpine image with all the\n# litmus experiment dependencies installed.\n# It is also made non-root, sudo-enabled with default litmus directory.\nFROM alpine:3.15.0\n\nLABEL maintainer=\"LitmusChaos\"\n\n# make a pipe fail on the first failure\nSHELL [\"/bin/sh\", \"-o\", \"pipefail\", \"-c\"]\n\n# ensure we only use apk repositories over HTTPS (altough APK contain an embedded signature)\nRUN echo \"https://alpine.global.ssl.fastly.net/alpine/v$(cut -d . -f 1,2 < /etc/alpine-release)/main\" > /etc/apk/repositories \\\n\t&& echo \"https://alpine.global.ssl.fastly.net/alpine/v$(cut -d . -f 1,2 < /etc/alpine-release)/community\" >> /etc/apk/repositories\n\nENV GLIBC_REPO=https://github.com/sgerrand/alpine-pkg-glibc\nENV GLIBC_VERSION=2.30-r0\nARG TARGETARCH\nARG LITMUS_VERSION\n\nRUN rm -rf /var/lib/apt/lists/*\n\n# Install generally useful things\nRUN apk --update --no-cache add \\\n        sudo \\\n\t\t\t\t\t\t\thtop \\\n        bash \\\n        make \\\n        git \\\n        curl \\\n        iproute2 \\\n        stress-ng \\\n        openssh-client\\\n# libc6-compat \\\n        sshpass \\\n        expat-doc\n\nRUN set -ex && \\\n     apk --update --no-cache add libstdc++ curl ca-certificates && \\\n     for pkg in glibc-${GLIBC_VERSION} glibc-bin-${GLIBC_VERSION}; \\\n         do curl -f -sSL ${GLIBC_REPO}/releases/download/${GLIBC_VERSION}/${pkg}.apk -o /tmp/${pkg}.apk; done && \\\n     apk add --no-cache --allow-untrusted /tmp/*.apk && \\\n     rm -v /tmp/*.apk && \\\n     /usr/glibc-compat/sbin/ldconfig /lib /usr/glibc-compat/lib\n\n# Change default shell from ash to bash\nRUN sed -i -e \"s/bin\\/ash/bin\\/bash/\" /etc/passwd  \n\n#Installing Kubectl\nENV KUBE_LATEST_VERSION=\"v1.21.2\"\nRUN curl -f -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_LATEST_VERSION}/bin/linux/${TARGETARCH}/kubectl -o     /usr/local/bin/kubectl && \\\n    chmod +x /usr/local/bin/kubectl\n\n#Installing crictl binaries\nRUN curl -f -L https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.16.0/crictl-v1.16.0-linux-${TARGETARCH}.tar.gz --output crictl-v1.16.0-linux-${TARGETARCH}.tar.gz && \\\n    tar zxvf crictl-v1.16.0-linux-${TARGETARCH}.tar.gz -C /usr/local/bin && rm crictl-v1.16.0-linux-${TARGETARCH}.tar.gz\n\n#Installing pumba binaries\nENV PUMBA_VERSION=\"0.8.0\"\nRUN curl -f -L https://github.com/alexei-led/pumba/releases/download/${PUMBA_VERSION}/pumba_linux_${TARGETARCH} --output /usr/local/bin/pumba && chmod +x /usr/local/bin/pumba\n\n#Installing promql cli binaries\nRUN curl -f -L https://github.com/chaosnative/promql-cli/releases/download/2.6.0/promql_linux_${TARGETARCH} --output /usr/local/bin/promql && chmod +x /usr/local/bin/promql\n\n#Installing nsutil cli binaries\nRUN curl -f -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/nsutil-linux-${TARGETARCH} --output /usr/local/bin/nsutil && chmod +x /usr/local/bin/nsutil\n\n#Installing pause cli binaries\nRUN curl -f -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/pause-linux-${TARGETARCH} --output /usr/local/bin/pause && chmod +x /usr/local/bin/pause\n\n#Installing dns_interceptor cli binaries\nRUN curl -f -L https://github.com/litmuschaos/test-tools/releases/download/${LITMUS_VERSION}/dns_interceptor --output /usr/local/bin/dns_interceptor && chmod +x /usr/local/bin/dns_interceptor\n\nCOPY --from=docker:19.03 /usr/local/bin/docker /usr/local/bin/\n\n# Installing toxiproxy binaries\nRUN curl -f -L https://github.com/Shopify/toxiproxy/releases/download/v2.4.0/toxiproxy-cli-linux-${TARGETARCH} --output /usr/local/bin/toxiproxy-cli && chmod +x /usr/local/bin/toxiproxy-cli && \\\n     curl -f -L https://github.com/Shopify/toxiproxy/releases/download/v2.4.0/toxiproxy-server-linux-${TARGETARCH} --output /usr/local/bin/toxiproxy-server && chmod +x /usr/local/bin/toxiproxy-server\n\n# The user the app should run as\nENV APP_USER=litmus\n# The home directory\nENV APP_DIR=\"/$APP_USER\"\n# Where persistent data (volume) should be stored\nENV DATA_DIR \"$APP_DIR/data\"\n# Where configuration should be stored\nENV CONF_DIR \"$APP_DIR/conf\"\n\n# Update base system\n# hadolint ignore=DL3018\nRUN apk add --no-cache ca-certificates\n\n# Add custom user and setup home directory\nRUN adduser -s /bin/true -u 1000 -D -h $APP_DIR $APP_USER \\\n  && mkdir \"$DATA_DIR\" \"$CONF_DIR\" \\\n  && chown -R \"$APP_USER\" \"$APP_DIR\" \"$CONF_DIR\" \\\n  && chmod 700 \"$APP_DIR\" \"$DATA_DIR\" \"$CONF_DIR\" \\\n# change to 0(root) group because openshift will run container with arbitrary uid as a member of root group\n  && chgrp -R 0 \"$APP_DIR\" \"$DATA_DIR\" \"$CONF_DIR\" \\\n  && chmod -R g=u \"$APP_DIR\" \"$DATA_DIR\" \"$CONF_DIR\" \\\n  && echo \"$APP_USER ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/litmus \\\n  && chmod 0440 /etc/sudoers.d/litmus\n\n# Remove existing crontabs, if any.\nRUN rm -fr /var/spool/cron \\\n\t&& rm -fr /etc/crontabs \\\n\t&& rm -fr /etc/periodic\n\n# Remove all but a handful of admin commands.\nRUN find /sbin /usr/sbin \\\n  ! -type d -a ! -name apk -a ! -name ln \\\n  -delete\n\n# Remove world-writeable permissions except for /tmp/\nRUN find / -xdev -type d -perm +0002 -exec chmod o-w {} + \\\n\t&& find / -xdev -type f -perm +0002 -exec chmod o-w {} + \\\n\t&& chmod 777 /tmp/ \\\n  && chown $APP_USER:root /tmp/\n\n# Remove unnecessary accounts, excluding current app user and root\nRUN sed -i -r \"/^($APP_USER|root|nobody)/!d\" /etc/group \\\n  && sed -i -r \"/^($APP_USER|root|nobody)/!d\" /etc/passwd\n\n# Remove interactive login shell for everybody\nRUN sed -i -r 's#^(.*):[^:]*$#\\1:/sbin/nologin#' /etc/passwd\n\n# Disable password login for everybody\nRUN while IFS=: read -r username _; do passwd -l \"$username\"; done < /etc/passwd || true\n\n# Remove apk configs. -> Commented out because we need apk to install other stuff\nRUN find /bin /etc /lib /sbin /usr \\\n -xdev -type f -regex '.*apk.*' \\\n ! -name apk \\\n -exec rm -fr {} +\n\n# Remove temp shadow,passwd,group\nRUN find /bin /etc /lib /sbin /usr -xdev -type f -regex '.*-$' -exec rm -f {} +\n\n# Ensure system dirs are owned by root and not writable by anybody else.\nRUN find /bin /etc /lib /sbin /usr -xdev -type d \\\n  -exec chown root:root {} \\; \\\n  -exec chmod 0755 {} \\;\n\n# Remove suid & sgid files\nRUN find /bin /etc /lib /sbin /usr -xdev -type f -a \\( -perm +4000 -o -perm +2000 \\) -delete\n\n# Remove dangerous commands\nRUN find /bin /etc /lib /sbin /usr -xdev \\( \\\n  -iname hexdump -o \\\n  -iname chgrp -o \\\n  -iname ln -o \\\n  -iname od -o \\\n  -iname strings -o \\\n  -iname su -o \\\n  # -iname sudo \\ \n  \\) -delete\n\n# Remove init scripts since we do not use them.\nRUN rm -fr /etc/init.d /lib/rc /etc/conf.d /etc/inittab /etc/runlevels /etc/rc.conf /etc/logrotate.d\n\n# Remove kernel tunables\nRUN rm -fr /etc/sysctl* /etc/modprobe.d /etc/modules /etc/mdev.conf /etc/acpi\n\n# Remove root home dir\nRUN rm -fr /root\n\n# Remove fstab\nRUN rm -f /etc/fstab\n\n# Remove any symlinks that we broke during previous steps\nRUN find /bin /etc /lib /sbin /usr -xdev -type l -exec test ! -e {} \\; -delete\n\n# default directory is /litmus\nWORKDIR $APP_DIR\nUSER ${APP_USER}\n"
}