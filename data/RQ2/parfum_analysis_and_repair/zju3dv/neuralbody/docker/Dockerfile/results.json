{
  "startTime": 1674254709161,
  "endTime": 1674254710214,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 32,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.1.1-cudnn8-devel-ubuntu18.04\n\n# For the convenience for users in China mainland\nCOPY docker/apt-sources.list /etc/apt/sources.list\n\n# Install some basic utilities\nRUN rm /etc/apt/sources.list.d/nvidia-ml.list \\\n && rm /etc/apt/sources.list.d/cuda.list \\\n && apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    ca-certificates \\\n    sudo \\\n    git \\\n    bzip2 \\\n    libx11-6 \\\n    gcc \\\n    g++ \\\n    libusb-1.0-0 \\\n    cmake \\\n    libssl-dev \\\n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y python3-opencv \\\n && rm -rf /var/lib/apt/lists/*\n\n# Create a working directory\nRUN mkdir /app\nWORKDIR /app\n\n# Create a non-root user and switch to it\nRUN adduser --disabled-password --gecos '' --shell /bin/bash user \\\n && chown -R user:user /app\nRUN echo \"user ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/90-user\nUSER user\n\n# All users can use /home/user as their home directory\nENV HOME=/home/user\nRUN chmod 777 /home/user\n\n# Install Miniconda and Python 3.8\nENV CONDA_AUTO_UPDATE_CONDA=false\nENV PATH=/home/user/miniconda/bin:$PATH\nRUN curl -f -sLo ~/miniconda.sh https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py38_4.8.3-Linux-x86_64.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p ~/miniconda \\\n && rm ~/miniconda.sh \\\n && conda install -y python==3.8.3 \\\n && conda clean -ya\nCOPY --chown=user docker/.condarc /home/user/.condarc\n\n# CUDA 11.1-specific steps\nRUN conda install -y -c conda-forge cudatoolkit=11.1.1 \\\n && conda install -y -c pytorch \\\n    \"pytorch=1.8.1=py3.8_cuda11.1_cudnn8.0.5_0\" \\\n    \"torchvision=0.9.1=py38_cu111\" \\\n && conda clean -ya\n\n# Alter sources for the convenience of users located in China mainland.\nRUN pip config set global.index-url https://pypi.douban.com/simple\nCOPY requirements.txt requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\nENV CUDA_HOME=/usr/local/cuda\nRUN bash -c \"git clone --recursive https://github.com/traveller59/spconv.git\"\n# We manually download and install cmake since the requirements of spconv is newer than\n# that included in apt for ubuntu18.\nRUN curl -f -sLo cmake.tar.gz https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1.tar.gz \\\n && tar -xvf cmake.tar.gz \\\n && cd cmake-3.20.1 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make -j4 && sudo make install && rm cmake.tar.gz\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libboost-dev \\\n && sudo rm -rf /var/lib/apt/lists/*\nCOPY docker/spconv.sh spconv.sh\nRUN bash spconv.sh\n\nCMD [\"python3\"]\n"
}