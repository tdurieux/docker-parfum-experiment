diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zju3dv/neuralbody/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zju3dv/neuralbody/docker/Dockerfile/repaired.Dockerfile
index 5f4a69a..c896b57 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zju3dv/neuralbody/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zju3dv/neuralbody/docker/Dockerfile/repaired.Dockerfile
@@ -6,7 +6,7 @@ COPY docker/apt-sources.list /etc/apt/sources.list
 # Install some basic utilities
 RUN rm /etc/apt/sources.list.d/nvidia-ml.list \
  && rm /etc/apt/sources.list.d/cuda.list \
- && apt-get update && apt-get install -y \
+ && apt-get update && apt-get install --no-install-recommends -y \
     curl \
     ca-certificates \
     sudo \
@@ -18,7 +18,7 @@ RUN rm /etc/apt/sources.list.d/nvidia-ml.list \
     libusb-1.0-0 \
     cmake \
     libssl-dev \
- && DEBIAN_FRONTEND=noninteractive apt-get install -y python3-opencv \
+ && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y python3-opencv \
  && rm -rf /var/lib/apt/lists/*
 
 # Create a working directory
@@ -38,7 +38,7 @@ RUN chmod 777 /home/user
 # Install Miniconda and Python 3.8
 ENV CONDA_AUTO_UPDATE_CONDA=false
 ENV PATH=/home/user/miniconda/bin:$PATH
-RUN curl -sLo ~/miniconda.sh https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py38_4.8.3-Linux-x86_64.sh \
+RUN curl -f -sLo ~/miniconda.sh https://mirrors.tuna.tsinghua.edu.cn/anaconda/miniconda/Miniconda3-py38_4.8.3-Linux-x86_64.sh \
  && chmod +x ~/miniconda.sh \
  && ~/miniconda.sh -b -p ~/miniconda \
  && rm ~/miniconda.sh \
@@ -56,18 +56,18 @@ RUN conda install -y -c conda-forge cudatoolkit=11.1.1 \
 # Alter sources for the convenience of users located in China mainland.
 RUN pip config set global.index-url https://pypi.douban.com/simple
 COPY requirements.txt requirements.txt
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 ENV CUDA_HOME=/usr/local/cuda
 RUN bash -c "git clone --recursive https://github.com/traveller59/spconv.git"
 # We manually download and install cmake since the requirements of spconv is newer than
 # that included in apt for ubuntu18.
-RUN curl -sLo cmake.tar.gz https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1.tar.gz \
+RUN curl -f -sLo cmake.tar.gz https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1.tar.gz \
  && tar -xvf cmake.tar.gz \
  && cd cmake-3.20.1 \
- && ./configure \
- && make -j4 && sudo make install
-RUN sudo apt-get update && sudo apt-get install -y libboost-dev \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+ && make -j4 && sudo make install && rm cmake.tar.gz
+RUN sudo apt-get update && sudo apt-get install --no-install-recommends -y libboost-dev \
  && sudo rm -rf /var/lib/apt/lists/*
 COPY docker/spconv.sh spconv.sh
 RUN bash spconv.sh