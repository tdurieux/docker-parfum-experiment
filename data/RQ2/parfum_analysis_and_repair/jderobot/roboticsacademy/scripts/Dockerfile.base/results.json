{
  "startTime": 1674248099744,
  "endTime": 1674248101863,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 292,
        "lineEnd": 292,
        "columnStart": 3,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 294,
        "lineEnd": 294,
        "columnStart": 3,
        "columnEnd": 43
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 187,
        "lineEnd": 187,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 247,
        "lineEnd": 248,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 270,
        "lineEnd": 270,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 274,
        "lineEnd": 274,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 15,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 291,
        "lineEnd": 291,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 291,
        "lineEnd": 291,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 3,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 122,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 190,
        "lineEnd": 208,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 219,
        "lineEnd": 241,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 261,
        "lineEnd": 264,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 278,
        "lineEnd": 282,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 291,
        "lineEnd": 291,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 3,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 291,
        "lineEnd": 291,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 293,
        "lineEnd": 293,
        "columnStart": 3,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/opengl:1.2-glvnd-runtime-ubuntu20.04\n\nARG VIRTUALGL_VERSION=2.6.5\nARG TURBOVNC_VERSION=3.0\n\n# Make all NVIDIA GPUS visible\nARG NVIDIA_VISIBLE_DEVICES=all\nENV NVIDIA_DRIVER_CAPABILITIES all\n\n# Setup NON INTERACTIVE ENVIRONMENT\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install locales to prevent errors\nRUN apt-get clean && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y locales && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Install desktop and common tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        software-properties-common \\\n        apt-utils \\\n        build-essential make gcc git \\\n        ca-certificates \\\n        curl wget \\\n        gzip zip unzip \\\n        libc6-dev libglu1 libglu1:i386 libegl1-mesa libegl1-mesa:i386 \\\n        libsm6 libxv1 libxv1:i386 libpci3 \\\n        python3 python3-numpy libpython3-dev \\\n        x11-xkb-utils xauth xfonts-base xkb-data \\\n        libxtst6 libxtst6:i386 \\\n        mlocate \\\n        nano vim \\\n        htop net-tools \\\n        xterm rsync \\\n        lxde-core \\\n        tasksel && \\\n    rm -rf /var/lib/apt/lists/*\nRUN tasksel install lubuntu-core lubuntu-desktop\n\n# Install VirtualGL and TurboVNC\nRUN wget --no-check-certificate https://deac-fra.dl.sourceforge.net/project/virtualgl/${VIRTUALGL_VERSION}/virtualgl_${VIRTUALGL_VERSION}_amd64.deb && \\\n    wget --no-check-certificate https://kumisystems.dl.sourceforge.net/project/virtualgl/${VIRTUALGL_VERSION}/virtualgl32_${VIRTUALGL_VERSION}_amd64.deb && \\\n    apt-get update && dpkg -i ./virtualgl_${VIRTUALGL_VERSION}_amd64.deb ./virtualgl32_${VIRTUALGL_VERSION}_amd64.deb && \\\n    rm virtualgl_${VIRTUALGL_VERSION}_amd64.deb virtualgl32_${VIRTUALGL_VERSION}_amd64.deb && \\\n    chmod u+s /usr/lib/libvglfaker.so && \\\n    chmod u+s /usr/lib/libdlfaker.so && \\\n    chmod u+s /usr/lib32/libvglfaker.so && \\\n    chmod u+s /usr/lib32/libdlfaker.so && \\\n    chmod u+s /usr/lib/i386-linux-gnu/libvglfaker.so && \\\n    chmod u+s /usr/lib/i386-linux-gnu/libdlfaker.so && \\\n    wget --no-check-certificate https://sourceforge.net/projects/turbovnc/files/${TURBOVNC_VERSION}/turbovnc_${TURBOVNC_VERSION}_amd64.deb && \\\n    apt-get update && apt-get install -y --no-install-recommends ./turbovnc_${TURBOVNC_VERSION}_amd64.deb && \\\n    rm turbovnc_${TURBOVNC_VERSION}_amd64.deb && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    echo -e \"no-remote-connections\\n\\\nno-httpd\\n\\\nno-x11-tcp-connections\\n\\\nno-pam-sessions\\n\\\npermitted-security-types = None, VNC, otp\\\n\" > /etc/turbovncserver-security.conf\n# Set paths for VirtualGL and turboVNC\nENV PATH \"$PATH:/opt/VirtualGL/bin:/opt/TurboVNC/bin\"\n\n# Install noVNC and Websockify\nRUN git clone https://github.com/novnc/noVNC.git -b v1.2.0 && \\\n\tcd noVNC/utils && \\\n\tgit clone https://github.com/novnc/websockify websockify -b v0.9.0\n\n# Install noVNC and Websockify for Synchronous game\n# RUN git clone https://github.com/dhrodao/noVNC.git && \\\n# \tcd noVNC/utils && \\\n# \tgit clone https://github.com/novnc/websockify websockify -b v0.9.0 \n\n# Xorg segfault error mitigation\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        dbus-x11 \\\n        libdbus-c++-1-0v5 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# PX4 dependencies\nRUN apt-get update && apt-get -y --quiet --no-install-recommends install \\\n        bzip2 \\\n        ca-certificates \\\n        ccache \\\n        cmake \\\n        cppcheck \\\n        curl \\\n        dirmngr \\\n        doxygen \\\n        file \\\n        g++ \\\n        gcc \\\n        gdb \\\n        git \\\n        gnupg \\\n        gosu \\\n        lcov \\\n        libfreetype6-dev \\\n        libgtest-dev \\\n        libpng-dev \\\n        libssl-dev \\\n        lsb-release \\\n        make \\\n        ninja-build \\\n        openjdk-8-jdk \\\n        openjdk-8-jre \\\n        openssh-client \\\n        pkg-config \\\n        python3-dev \\\n        python3-pip \\\n        rsync \\\n        shellcheck \\\n        tzdata \\\n        unzip \\\n        valgrind \\\n        wget \\\n        xsltproc \\\n        zip \\\n\t&& apt-get -y autoremove \\\n\t&& apt-get clean autoclean \\\n\t&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\n# gtest\nRUN apt-get update && apt-get install --no-install-recommends -y libgtest-dev cmake && \\\n    cd /usr/src/gtest \\\n\t&& mkdir build && cd build \\\n\t&& cmake .. && make -j$(nproc) \\\n\t&& find . -name \\*.a -exec cp {} /usr/lib \\; \\\n\t&& cd .. && rm -rf build \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Python 3 pip build dependencies first\nRUN python3 -m pip install --upgrade pip wheel setuptools\n\n# Python 3 dependencies installed by pip\nRUN python3 -m pip install argparse argcomplete coverage cerberus empy jinja2 kconfiglib \\\n\t\tmatplotlib==3.0.* numpy nunavut==1.1.0 packaging pkgconfig pyros-genmsg pyulog \\\n\t\tpyyaml requests serial six toml psutil pyulog wheel onnxruntime Pillow opencv-python netron\n\n# manual ccache setup\nRUN ln -sf /usr/bin/ccache /usr/lib/ccache/cc \\\n\t&& ln -sf /usr/bin/ccache /usr/lib/ccache/c++\n\n# astyle v3.1\nRUN wget -q https://downloads.sourceforge.net/project/astyle/astyle/astyle%203.1/astyle_3.1_linux.tar.gz -O /tmp/astyle.tar.gz \\\n\t&& cd /tmp && tar zxf astyle.tar.gz && cd astyle/src \\\n\t&& make -f ../build/gcc/Makefile -j$(nproc) && cp bin/astyle /usr/local/bin \\\n\t&& rm -rf /tmp/* && rm astyle.tar.gz\n\n# Gradle (Required to build Fast-RTPS-Gen)\nRUN wget -q \"https://services.gradle.org/distributions/gradle-6.3-rc-4-bin.zip\" -O /tmp/gradle-6.3-rc-4-bin.zip \\\n\t&& mkdir /opt/gradle \\\n\t&& cd /tmp \\\n\t&& unzip -d /opt/gradle gradle-6.3-rc-4-bin.zip \\\n\t&& rm -rf /tmp/*\n\nENV PATH \"/opt/gradle/gradle-6.3-rc-4/bin:$PATH\"\n\n# Intall foonathan_memory from source as it is required to Fast-RTPS >= 1.9\nRUN git clone https://github.com/eProsima/foonathan_memory_vendor.git /tmp/foonathan_memory \\\n\t&& cd /tmp/foonathan_memory \\\n\t&& mkdir build && cd build \\\n\t&& cmake .. \\\n\t&& cmake --build . --target install -- -j $(nproc) \\\n\t&& rm -rf /tmp/*\n\n# Fast-DDS (Fast-RTPS 2.0.0)\nRUN git clone --recursive https://github.com/eProsima/Fast-DDS.git -b v2.1.0 /tmp/FastRTPS-2.1.0 \\\n\t&& cd /tmp/FastRTPS-2.1.0 \\\n\t&& mkdir build && cd build \\\n\t&& cmake -DTHIRDPARTY=ON -DSECURITY=ON .. \\\n\t&& cmake --build . --target install -- -j $(nproc) \\\n\t&& rm -rf /tmp/*\n\n# Fast-RTPS-Gen 1.0.4\nRUN git clone --recursive https://github.com/eProsima/Fast-DDS-Gen.git -b v1.0.4 /tmp/Fast-RTPS-Gen-1.0.4 \\\n\t&& cd /tmp/Fast-RTPS-Gen-1.0.4 \\\n\t&& gradle assemble \\\n\t&& gradle install \\\n\t&& rm -rf /tmp/*\n\n# Gazebo11\nRUN wget --quiet https://packages.osrfoundation.org/gazebo.key -O - | apt-key add - \\\n\t&& sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -sc` main\" > /etc/apt/sources.list.d/gazebo-stable.list' \\\n\t&& apt-get update \\\n\t&& DEBIAN_FRONTEND=noninteractive apt-get -y --quiet --no-install-recommends install \\\n        ant \\\n        binutils \\\n        bc \\\n        dirmngr \\\n        gazebo11 \\\n        gstreamer1.0-plugins-bad \\\n        gstreamer1.0-plugins-base \\\n        gstreamer1.0-plugins-good \\\n        gstreamer1.0-plugins-ugly \\\n        libeigen3-dev \\\n        libgazebo11-dev \\\n        libgstreamer-plugins-base1.0-dev \\\n        libimage-exiftool-perl \\\n        libopencv-dev \\\n        libxml2-utils \\\n        mesa-utils \\\n        protobuf-compiler \\\n        x-window-system \\\n\t&& apt-get -y autoremove \\\n\t&& apt-get clean autoclean \\\n\t&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\n# Install ROS and ROS packages\nENV ROS_DISTRO noetic\nRUN apt-get update && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \\\n\t&& sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu `lsb_release -sc` main\" > /etc/apt/sources.list.d/ros-latest.list' \\\n\t&& sh -c 'echo \"deb http://packages.ros.org/ros-shadow-fixed/ubuntu `lsb_release -sc` main\" > /etc/apt/sources.list.d/ros-shadow.list' \\\n\t&& apt-get update \\\n\t&& apt-get -y --quiet --no-install-recommends install \\\n        ros-$ROS_DISTRO-desktop-full \\\n        geographiclib-tools \\\n        libeigen3-dev \\\n        libgeographic-dev \\\n        libopencv-dev \\\n        libyaml-cpp-dev \\\n        python3-rosdep \\\n        python3-catkin-tools \\\n        python3-catkin-lint \\\n        python3-rosinstall-generator \\\n        python3-osrf-pycommon \\\n        python3-vcstool \\\n        ros-$ROS_DISTRO-gazebo-ros-pkgs \\\n        ros-$ROS_DISTRO-octomap \\\n        ros-$ROS_DISTRO-octomap-msgs \\\n        ros-$ROS_DISTRO-pcl-conversions \\\n        ros-$ROS_DISTRO-pcl-msgs \\\n        ros-$ROS_DISTRO-pcl-ros \\\n        ros-$ROS_DISTRO-ros-base \\\n        ros-$ROS_DISTRO-rostest \\\n        ros-$ROS_DISTRO-rosunit \\\n        ros-$ROS_DISTRO-xacro \\\n\t&& geographiclib-get-geoids egm96-5 \\\n\t&& apt-get -y autoremove \\\n\t&& apt-get clean autoclean \\\n\t&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir -U \\\n    osrf-pycommon\n\n# PX4 src\nRUN apt-get update && \\\n    apt upgrade -y --quiet --no-install-recommends libignition-common3-graphics\nRUN git clone --recursive https://github.com/PX4/PX4-Autopilot.git -b v1.11.3 \\\n    && cd /PX4-Autopilot \\\n    && DONT_RUN=1 make px4_sitl gazebo\n\n# Certain Dependencies for Exercises\n# ros-$ROS_DISTRO-kobuki-msgs: Vaccuum Cleaner\n# xmlstarlet: Drone Cat Mouse\n# ros-$ROS_DISTRO-turtlebot3-description: Follow Turtlebot\nRUN apt-get update && apt-get -y --quiet --no-install-recommends install \\\n\t\tros-$ROS_DISTRO-kobuki-msgs \\\n\t\txmlstarlet \\\n\t\tros-$ROS_DISTRO-turtlebot3-description \\\n\t&& apt-get -y autoremove \\\n\t&& apt-get clean autoclean \\\n\t&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\n# websocket server dependency\nRUN pip3 install --no-cache-dir websocket_server posix-ipc django djangorestframework==3.13.1 django-webpack-loader==1.5.0\nRUN python3.8 -m pip install websockets asyncio\n\n# pip install dependencies\nRUN pip install --no-cache-dir pylint\n\n# apt-get install dependencies\n# Nodejs, x11vnc, xterm, xdummy\nRUN apt-get update && apt-get --no-install-recommends install -y \\\n\t\tx11vnc \\\n\t\txterm \\\n\t\txserver-xorg-video-dummy \\\n\t\tx11-apps \\\n\t&& apt-get -y autoremove \\\n\t&& apt-get clean autoclean \\\n\t&& rm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://xpra.org/xorg.conf \\\n    && rm -rf /tmp/*\n\n# Node\nRUN apt-get install --no-install-recommends -y software-properties-common \\\n&& curl -f -sL https://deb.nodesource.com/setup_16.x | bash - \\\n&& apt-get install --no-install-recommends -y nodejs \\\n&& curl -f -L https://www.npmjs.com/install.sh | sh && rm -rf /var/lib/apt/lists/*;"
}