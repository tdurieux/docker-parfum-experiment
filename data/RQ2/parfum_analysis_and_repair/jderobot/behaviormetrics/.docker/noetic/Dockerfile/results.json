{
  "startTime": 1674220186539,
  "endTime": 1674220188405,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 6,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 94,
        "columnStart": 22,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 113,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 113,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 6,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 113,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 113,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "FROM jderobot/ubuntu:ros-noetic\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F42ED6FBAB17C654\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        cmake \\\n        icewm \\\n        git \\\n        zip \\\n        qtcreator \\\n        psmisc \\\n        build-essential \\\n        genromfs \\\n        ninja-build \\\n        exiftool \\\n        python3-setuptools \\\n        python3-pip \\\n        python3-dev \\\n        python-is-python3 \\\n        python3-rviz \\\n        python3-opengl \\\n        python3-catkin-tools \\\n        python3-osrf-pycommon \\\n        python3-rosdep \\\n        tmux \\\n        vim \\\n        x11vnc \\\n        software-properties-common \\\n        xvfb && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN add-apt-repository ppa:deadsnakes/ppa && \\\n      apt-get update && \\\n      apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\n\n# Remove possible duplicated packages\nRUN pip install --no-cache-dir PyQt5==5.14.1 --upgrade --ignore-installed && \\\n     pip install --no-cache-dir PyYAML==5.4 --upgrade --ignore-installed && \\\n     apt-get -y --no-install-recommends install python3-tk && rm -rf /var/lib/apt/lists/*;\n\n# Installing Behavior Metrics\nRUN cd /root/ && \\\n    git clone -b noetic-devel https://github.com/JdeRobot/BehaviorMetrics && \\\n    cd BehaviorMetrics && \\\n    pip3 install --no-cache-dir -r requirements.txt && \\\n    pyrcc5 -o behavior_metrics/ui/gui/resources/resources.py \\\n\tbehavior_metrics/ui/gui/resources/resources.qrc\n\n# Installing CustomRobots\nRUN git clone -b noetic-devel https://github.com/JdeRobot/CustomRobots && \\\n    cd CustomRobots/f1 && mkdir build && cd build && \\\n    /bin/bash -c \"source /opt/ros/noetic/setup.bash; \\\n\t\t  cmake .. && make && make install;\" && \\\n    echo \"source /opt/jderobot/share/jderobot/gazebo/assets-setup.sh\" >> ~/.bashrc\n\nRUN echo 'alias jl=\"DISPLAY=:0 jupyter lab --no-browser --ip 0.0.0.0 --port 8888 --allow-root &\"' >> /root/.bashrc && \\\n    echo \"alias killgazebogym='killall -9 rosout roslaunch rosmaster gzserver nodelet robot_state_publisher gzclient'\" >> ~/.bashrc && \\\n    echo \"source /opt/ros/noetic/setup.bash\" >> ~/.bashrc && \\\n    git clone https://github.com/fmtlib/fmt.git && \\\n        cd fmt && git checkout 5.3.0 && mkdir build && cd build && \\\n        cmake ../ && make && make install && cd && \\\n    git clone https://github.com/strasdat/Sophus && \\\n\tcd Sophus && mkdir build && cd build && \\\n\tcmake ../ && make && make install\n\n# Installing Gym-Gazebo\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tlibbluetooth-dev \\\n\tlibcwiid-dev \\\n\tlibftdi-dev \\\n\tlibspnav-dev \\\n\tlibsdl-dev \\\n\tlibsdl-image1.2-dev \\\n  libusb-dev \\\n\tros-noetic-octomap-msgs \\\n\tros-noetic-geodesy \\\n\tros-noetic-octomap-ros \\\n\tros-noetic-control-toolbox \\\n\tros-noetic-pluginlib \\\n\tros-noetic-trajectory-msgs \\\n\tros-noetic-control-msgs \\\n\tros-noetic-std-srvs \\\n\tros-noetic-nodelet \\\n\tros-noetic-urdf \\\n\tros-noetic-rviz \\\n\tros-noetic-kdl-conversions \\\n\tros-noetic-eigen-conversions \\\n\tros-noetic-tf2-sensor-msgs \\\n\tros-noetic-pcl-ros \\\n\tros-noetic-navigation \\\n    ros-noetic-mavros \\\n    ros-noetic-mavros-extras && \\\n    cd root/BehaviorMetrics/gym-gazebo/ && \\\n    pip3 install --no-cache-dir -e . && \\\n    pip3 install --no-cache-dir rospkg --upgrade && \\\n    apt-get upgrade -y && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN cd /root/ && \\\n    wget https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh && \\\n    chmod +x install_geographiclib_datasets.sh && \\\n    sudo ./install_geographiclib_datasets.sh && \\\n    rm ./install_geographiclib_datasets.sh\n\nRUN cd /root/ && \\\n    mkdir /root/repos && cd /root/repos && \\\n    git clone --recursive https://github.com/PX4/PX4-Autopilot.git -b v1.11.3 && \\\n    cd /root/repos/PX4-Autopilot/Tools/setup/ && \\\n    bash ubuntu.sh --no-nuttx --no-sim-tools\n\nRUN apt-get install --no-install-recommends -y \\\n    libgstreamer1.0-dev \\\n    gstreamer1.0-plugins-bad && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /root/ && \\\n    cd /root/repos/PX4-Autopilot && \\\n    DONT_RUN=1 make px4_sitl gazebo\n\nRUN echo 'export GAZEBO_PLUGIN_PATH=$GAZEBO_PLUGIN_PATH:~/repos/PX4-Autopilot/build/px4_sitl_default/build_gazebo' >> /root/.bashrc && \\\n    echo 'export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:~/repos/PX4-Autopilot/Tools/sitl_gazebo/models' >> /root/.bashrc && \\\n    echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/repos/PX4-Autopilot/build/px4_sitl_default/build_gazebo' >> /root/.bashrc && \\\n    echo 'export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/repos/PX4-Autopilot' >> /root/.bashrc && \\\n    echo 'export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/repos/PX4-Autopilot/Tools/sitl_gazebo' >> /root/.bashrc && \\\n    /bin/bash -c \". /opt/ros/noetic/setup.bash; source ~/.bashrc;\"\n\n## Install jderobot_drones source\nRUN rm -rf /catkin_ws\nRUN mkdir -p /catkin_ws/src\nRUN cd /catkin_ws && catkin init\nRUN echo 'export ROS_WORKSPACE=/catkin_ws' >> ~/.bashrc\n\nRUN git clone https://github.com/JdeRobot/drones.git && cd drones && git checkout noetic-devel\nRUN cd /catkin_ws/src && ln -s /drones/drone_wrapper .\nRUN cd /catkin_ws/src && ln -s /drones/drone_assets .\nRUN cd /catkin_ws/src && ln -s /drones/rqt_drone_teleop .\n\nRUN /bin/bash -c '. /opt/ros/noetic/setup.bash' && cd /catkin_ws && \\\n    rm /etc/ros/rosdep/sources.list.d/20-default.list && \\\n    sudo rosdep init\n\n# RUN rosdep update && rosdep install --from-paths . --ignore-src --rosdistro noetic -y\n\nRUN /bin/bash -c '. /opt/ros/noetic/setup.bash; cd /catkin_ws; catkin build'\n\nRUN cd /drones/drone_circuit_assets && mkdir build && cd build && \\\n    /bin/bash -c \"source /opt/ros/noetic/setup.bash; \\\n\t\t  cmake .. && make && make install;\"\n\nRUN cd /catkin_ws/ && \\\n    echo 'source '$PWD'/devel/setup.bash' >> /root/.bashrc  && \\\n    echo 'export GAZEBO_RESOURCE_PATH=${GAZEBO_RESOURCE_PATH}:/usr/share/gazebo-11' >> /root/.bashrc  && \\\n    echo 'export GAZEBO_MODEL_PATH=${GAZEBO_MODEL_PATH}:/drones/drone_assets/models' >> /root/.bashrc  && \\\n    echo 'export GAZEBO_PLUGIN_PATH=$GAZEBO_PLUGIN_PATH:~/repos/PX4-Autopilot/build/px4_sitl_default/build_gazebo' >> /root/.bashrc && \\\n    echo 'export GAZEBO_MODEL_PATH=$GAZEBO_MODEL_PATH:~/repos/PX4-Autopilot/Tools/sitl_gazebo/models' >> /root/.bashrc && \\\n    echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:~/repos/PX4-Autopilot/build/px4_sitl_default/build_gazebo' >> /root/.bashrc && \\\n    echo 'export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/repos/PX4-Autopilot' >> /root/.bashrc && \\\n    echo 'export ROS_PACKAGE_PATH=$ROS_PACKAGE_PATH:~/repos/PX4-Autopilot/Tools/sitl_gazebo' >> /root/.bashrc && \\\n    /bin/bash -c \". ~/.bashrc;\"\n\nCOPY ./vnc_startup.sh /\n\nWORKDIR /root\n\nENTRYPOINT [\"../vnc_startup.sh\"]\nCMD [\"bash\"]\n"
}