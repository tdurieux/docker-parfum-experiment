{
  "startTime": 1674256107867,
  "endTime": 1674256109081,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gliderlabs/alpine:edge\nMAINTAINER Peter Huene <peterhuene@gmail.com>\nRUN apk add --no-cache make cmake gcc g++ boost-dev boost-program_options curl-dev libedit-dev git py-pip icu-dev openssl && \\\n    wget https://raw.githubusercontent.com/peterhuene/spirit/fcf705ef9ea316dded54e14fb6ba9d01a27ec0e4/include/boost/spirit/home/x3/operator/detail/sequence.hpp -O /usr/include/boost/spirit/home/x3/operator/detail/sequence.hpp && \\\n    pip install --no-cache-dir --user codecov && \\\n    git clone https://github.com/k-takata/Onigmo.git /tmp/onigmo && \\\n    cd /tmp/onigmo && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared && \\\n    make -j 4 && \\\n    make install && \\\n    cd && \\\n    rm -rf /tmp/onigmo && \\\n    git clone https://github.com/jbeder/yaml-cpp.git /tmp/yaml-cpp && \\\n    cd /tmp/yaml-cpp && \\\n    cmake . -DBUILD_SHARED_LIBS=ON && \\\n    make -j 4 && \\\n    make install && \\\n    cd && \\\n    rm -rf /tmp/yaml-cpp && \\\n    git clone --recursive https://github.com/puppetlabs/leatherman.git /tmp/leatherman && \\\n    cd /tmp/leatherman && \\\n    cmake . && \\\n    make -j 4 && \\\n    make install && \\\n    cd && \\\n    rm -rf /tmp/leatherman && \\\n    git clone --recursive https://github.com/puppetlabs/cpp-hocon.git /tmp/cpp-hocon && \\\n    cd /tmp/cpp-hocon && \\\n    cmake . && \\\n    make -j 4 && \\\n    make install && \\\n    cd && \\\n    rm -rf /tmp/cpp-hocon && \\\n    git clone --recursive https://github.com/puppetlabs/facter.git /tmp/facter && \\\n    cd /tmp/facter && \\\n    cmake . && \\\n    make -j 4 && \\\n    make install && \\\n    cd && \\\n    rm -rf /tmp/facter && \\\n    mkdir -p /etc/puppetlabs/code/environments/production\n"
}