{
  "startTime": 1674248542894,
  "endTime": 1674248544419,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 12,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 12,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedDockerfile": "FROM rastasheep/ubuntu-sshd:18.04\n\nARG PUPPET_COLLECTION\n\n# Install required packages\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install apt-transport-https locales sudo tree wget && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale\nRUN locale-gen en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\n\n# Install the puppet-agent package\n# sudo is important here so puppet is added to the path\nRUN if [ -n \"$PUPPET_COLLECTION\" ]; then \\\n    wget -q https://apt.puppetlabs.com/${PUPPET_COLLECTION}-release-bionic.deb \\\n    && sudo dpkg -i ${PUPPET_COLLECTION}-release-bionic.deb \\\n    && sudo apt-get update \\\n    && sudo apt-get -y --no-install-recommends install puppet-agent; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# Add 'bolt' user\nRUN useradd bolt\nRUN echo \"bolt:bolt\" | chpasswd\nRUN adduser bolt sudo\n\nRUN mkdir -p /home/bolt/.ssh\nCOPY fixtures/keys/id_rsa.pub /home/bolt/.ssh/id_rsa.pub\nCOPY fixtures/keys/id_rsa.pub /home/bolt/.ssh/authorized_keys\nRUN chmod 700 /home/bolt/.ssh\nRUN chmod 600 /home/bolt/.ssh/authorized_keys\nRUN chown -R bolt:sudo /home/bolt\n\n# Add 'test' user with different login shell\nRUN useradd test\nRUN echo \"test:test\" | chpasswd\nRUN adduser test sudo\nRUN echo test | chsh -s /bin/bash test\n\nRUN mkdir -p /home/test/.ssh\nCOPY fixtures/keys/id_rsa.pub /home/test/.ssh/id_rsa.pub\nCOPY fixtures/keys/id_rsa.pub /home/test/.ssh/authorized_keys\nRUN chmod 700 /home/test/.ssh\nRUN chmod 600 /home/test/.ssh/authorized_keys\nRUN chown -R test:sudo /home/test\n\n# Run the sshd service in the background\nCMD [ \"/usr/sbin/sshd\", \"-D\" ]\n"
}