{
  "startTime": 1674253814293,
  "endTime": 1674253814885,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Import info for 32-bit Qemu based build\n# There are also raspberry pi 4 and 64-bit images available so adjust as required\nFROM balenalib/raspberrypi3-python:latest-stretch-build\n\nARG ONNXRUNTIME_REPO=https://github.com/Microsoft/onnxruntime\nARG ONNXRUNTIME_SERVER_BRANCH=master\n\n# Enforces cross-compilation through Qemu.\nRUN [ \"cross-build-start\" ]\n\nRUN install_packages \\\n    sudo \\\n    build-essential \\\n    curl \\\n    libcurl4-openssl-dev \\\n    libssl-dev \\\n    wget \\\n    python3 \\\n    python3-dev \\\n    git \\\n    tar \\\n    libatlas-base-dev\n\n# Carefully install the latest version of pip\nWORKDIR /pip\nRUN wget https://bootstrap.pypa.io/get-pip.py\nRUN python3 get-pip.py\nRUN pip3 install --no-cache-dir --upgrade setuptools\nRUN pip3 install --no-cache-dir --upgrade wheel\nRUN pip3 install --no-cache-dir numpy\n\n# Build the latest cmake\nWORKDIR /code\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.18.3/cmake-3.18.3.tar.gz\nRUN tar zxf cmake-3.18.3.tar.gz && rm cmake-3.18.3.tar.gz\n\nWORKDIR /code/cmake-3.18.3\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --system-curl\nRUN make\nRUN sudo make install\n\n# Set up build args\nARG BUILDTYPE=MinSizeRel\n# if doing a 64-bit build change '--arm' to '--arm64'\nARG BUILDARGS=\"--config ${BUILDTYPE} --arm\"\n\n# Prepare onnxruntime Repo\nWORKDIR /code\nRUN git clone --single-branch --branch ${ONNXRUNTIME_SERVER_BRANCH} --recursive ${ONNXRUNTIME_REPO} onnxruntime\n\n# Build ORT including the shared lib and python bindings\nWORKDIR /code/onnxruntime\nRUN ./build.sh --use_openmp ${BUILDARGS} --update --build --build_shared_lib --build_wheel\n\n# Build Output\nRUN ls -l /code/onnxruntime/build/Linux/${BUILDTYPE}/*.so\nRUN ls -l /code/onnxruntime/build/Linux/${BUILDTYPE}/dist/*.whl\n\nRUN [ \"cross-build-end\" ]\n"
}