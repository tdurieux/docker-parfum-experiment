{
  "startTime": 1674218077294,
  "endTime": 1674218078264,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 260
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvcr.io/nvidia/cuda:11.1-cudnn8-devel-centos7\n\n#We need CUDA, TensorRT and manylinux. But the CUDA Toolkit End User License Agreement says NVIDIA CUDA Driver Libraries(libcuda.so, libnvidia-ptxjitcompiler.so) are only distributable in applications that meet this criteria:\n#1. The application was developed starting from a NVIDIA CUDA container obtained from Docker Hub or the NVIDIA GPU Cloud, and\n#2. The resulting application is packaged as a Docker container and distributed to users on Docker Hub or the NVIDIA GPU Cloud only.\n#So we use CUDA as the base image then add manylinux and TensorRT on top of it.\n\n#Build manylinux2014 docker image begin\nENV AUDITWHEEL_ARCH x86_64\nENV AUDITWHEEL_PLAT manylinux2014_$AUDITWHEEL_ARCH\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV DEVTOOLSET_ROOTPATH /opt/rh/devtoolset-9/root\nENV PATH $DEVTOOLSET_ROOTPATH/usr/bin:$PATH\nENV LD_LIBRARY_PATH $DEVTOOLSET_ROOTPATH/usr/lib64:$DEVTOOLSET_ROOTPATH/usr/lib:$DEVTOOLSET_ROOTPATH/usr/lib64/dyninst:$DEVTOOLSET_ROOTPATH/usr/lib/dyninst:/usr/local/lib64:/usr/local/lib\nENV PKG_CONFIG_PATH /usr/local/lib/pkgconfig\n\nCOPY manylinux2014_build_scripts /manylinux2014_build_scripts\nRUN bash /manylinux2014_build_scripts/build.sh 8 && rm -r manylinux2014_build_scripts && yum downgrade  -y glibc-2.17-317.el7 glibc-common-2.17-317.el7 glibc-devel-2.17-317.el7 glibc-headers-2.17-317.el7\n\nENV SSL_CERT_FILE=/opt/_internal/certs.pem\n\n#Build manylinux2014 docker image end\n\n#Install TensorRT 7.2.2.2\nRUN yum install -y wget && rm -rf /var/cache/yum\nRUN cd /tmp &&\\\n    wget --no-check-certificate https://developer.download.nvidia.com/compute/machine-learning/repos/rhel7/x86_64/nvidia-machine-learning-repo-rhel7-1.0.0-1.x86_64.rpm &&\\\n    rpm -Uvh nvidia-machine-learning-repo-*.rpm\nRUN yum install -y libnvinfer7-7.2.2-1.cuda11.1 libnvparsers7-7.2.2-1.cuda11.1 libnvinfer-plugin7-7.2.2-1.cuda11.1 libnvonnxparsers7-7.2.2-1.cuda11.1 libnvinfer-devel-7.2.2-1.cuda11.1 libnvparsers-devel-7.2.2-1.cuda11.1 libnvinfer-plugin-devel-7.2.2-1.cuda11.1 && rm -rf /var/cache/yum\n\n#Add our own dependencies\nADD scripts /tmp/scripts\nRUN cd /tmp/scripts && /tmp/scripts/manylinux/install_centos.sh && /tmp/scripts/manylinux/install_deps.sh && rm -rf /tmp/scripts\n\nARG BUILD_UID=1001\nARG BUILD_USER=onnxruntimedev\nRUN adduser --uid $BUILD_UID $BUILD_USER\nWORKDIR /home/$BUILD_USER\nUSER $BUILD_USER\nENV PATH /usr/local/gradle/bin:/usr/local/dotnet:$PATH\n"
}