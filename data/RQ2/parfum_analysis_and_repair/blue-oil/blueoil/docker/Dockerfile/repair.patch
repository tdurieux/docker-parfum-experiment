diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blue-oil/blueoil/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blue-oil/blueoil/docker/Dockerfile/repaired.Dockerfile
index 97e7d57..8fe9538 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blue-oil/blueoil/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blue-oil/blueoil/docker/Dockerfile/repaired.Dockerfile
@@ -9,10 +9,10 @@ ENV LD_LIBRARY_PATH=/usr/local/cuda/extras/CUPTI/lib64:${LD_LIBRARY_PATH} \
     CUDA_HOME=/usr/local/cuda-10.0 \
     DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     cmake \
     fonts-dejavu \
-    locales\
+    locales \
     python3 \
     python3-dev \
     python3-pip \
@@ -54,11 +54,11 @@ RUN mkdir /tmp/openmpi && \
     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.1.tar.gz && \
     tar zxf openmpi-4.0.1.tar.gz && \
     cd openmpi-4.0.1 && \
-    ./configure --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make -j $(nproc) all && \
     make install && \
     ldconfig && \
-    rm -rf /tmp/openmpi
+    rm -rf /tmp/openmpi && rm openmpi-4.0.1.tar.gz
 
 # Configure OpenMPI to run good defaults:
 #   --bind-to none --map-by slot --mca btl_tcp_if_exclude lo,docker0 --mca btl_vader_single_copy_mechanism none
@@ -67,7 +67,7 @@ RUN echo "hwloc_base_binding_policy = none" >> /usr/local/etc/openmpi-mca-params
     echo "btl_tcp_if_exclude = lo,docker0" >> /usr/local/etc/openmpi-mca-params.conf
 
 WORKDIR /home/blueoil
-RUN pip3 install -U pip setuptools
+RUN pip3 install --no-cache-dir -U pip setuptools
 
 FROM base AS blueoil-base
 
@@ -82,10 +82,10 @@ ENV HOROVOD_GPU_ALLREDUCE=NCCL \
 
 # Install requirements for distributed training temporarily using CUDA stubs
 RUN ldconfig /usr/local/cuda-10.0/targets/x86_64-linux/lib/stubs && \
-    pip install -e .[gpu,test,docs] && \
-    pip install -e .[dist] && \
+    pip install --no-cache-dir -e .[gpu,test,docs] && \
+    pip install --no-cache-dir -e .[dist] && \
     ldconfig
-RUN pip install pycocotools==2.0.0
+RUN pip install --no-cache-dir pycocotools==2.0.0
 
 # we cannot customize the path of this temporal directory...
 RUN mkdir /.horovod && chmod 777 /.horovod