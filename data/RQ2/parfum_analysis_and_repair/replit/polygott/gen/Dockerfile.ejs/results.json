{
  "startTime": 1674246449050,
  "endTime": 1674246449775,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## The base image from which all others will extend.\n## Installs the base packages, certificates, and a few choice .deb files.\nFROM ubuntu:18.04@sha256:ea188fdc5be9b25ca048f1e882b33f1bc763fb976a8a4fea446b38ed0efcbeba AS polygott-phase0\nCOPY ./out/phase0.sh /phase0.sh\nRUN --mount=type=tmpfs,target=/tmp \\\n    --mount=type=tmpfs,target=/var/log \\\n    /bin/bash phase0.sh\n\n# Environment variables that are depended on by phase1 files.\n# TODO: Remove XDG_CONFIG_HOME, since that will be used for user overrides.\nENV XDG_CONFIG_HOME=/config\nENV XDG_CONFIG_DIRS=/config\n\n\n## Runs apt-get update.\nFROM polygott-phase0 AS polygott-phase1.0\nRUN --mount=type=tmpfs,target=/tmp \\\n    --mount=type=tmpfs,target=/var/log \\\n    DEBIAN_FRONTEND=noninteractive apt-get update -y && \\\n    mkdir -p /var/lib/apt/lists/auxfiles\n\n\n## Image for prybar resources\nFROM polygott-phase0 AS prybar\n\nARG PRYBAR_TAG=circleci_pipeline_87_build_94\nARG PRYBAR_TAG=circleci_pipeline_87_build_94\nRUN mkdir -p /gocode/src/github.com/replit/ && \\\n    wget \"https://github.com/replit/prybar/archive/${PRYBAR_TAG}.zip\" && \\\n    unzip \"${PRYBAR_TAG}.zip\" && \\\n    mv \"prybar-${PRYBAR_TAG}\" /gocode/src/github.com/replit/prybar/ && \\\n    cp -r /gocode/src/github.com/replit/prybar/prybar_assets /usr/bin/prybar_assets/\n\n\n## Installs the per-language packages.\nFROM polygott-phase0 AS polygott-phase1.5\nRUN --mount=type=bind,from=polygott-phase1.0,source=/var/lib/apt/lists,target=/var/lib/apt/lists,ro \\\n    --mount=type=tmpfs,target=/var/lib/apt/lists/auxfiles \\\n    --mount=type=tmpfs,target=/tmp \\\n    --mount=type=tmpfs,target=/var/log \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n      <%- Object.keys(packages).sort().join(' \\\\\\n      ') %>\n\nCOPY ./extra/build-prybar-lang.sh /usr/bin/build-prybar-lang.sh\nCOPY --from=prybar /gocode /gocode\nCOPY --from=prybar /usr/bin/prybar_assets /usr/bin/prybar_assets\n\n<% for (const lang of languages) { -%>\n\n## The individual language layer for <%= lang.id %>.\n<%   if (lang.languages && lang.languages.length) { -%>\nFROM polygott-phase2-<%= lang.languages[0] %> AS polygott-phase2-<%= lang.id %>\n<%   } else { -%>\nFROM polygott-phase1.5 AS polygott-phase2-<%= lang.id %>\n<%   } -%>\nCOPY ./out/share/polygott/phase2.d/<%= lang.id %> /phase2.sh\nRUN --mount=type=bind,from=polygott-phase1.0,source=/var/lib/apt/lists,target=/var/lib/apt/lists,ro \\\n    --mount=type=tmpfs,target=/var/lib/apt/lists/auxfiles \\\n    --mount=type=tmpfs,target=/tmp \\\n    --mount=type=tmpfs,target=/var/log \\\n    /bin/bash phase2.sh\n\n<% } -%>\n\n## Image to build websockify\nFROM polygott-phase1.5 AS websockify\nRUN git clone --depth=1 https://github.com/novnc/websockify.git /root/websockify && \\\n    cd /root/websockify && make\n\n\n## Import UPM.\nFROM replco/upm:light@sha256:fc729728ec975f918953ad6a12497de712ca0858344ddbbeb638f692c60c6167 AS upm\n\n\n## The polygott-specific tools.\nFROM polygott-phase1.5 AS polygott-phase2-tools\nRUN curl -f -sSL https://github.com/replit/rfbproxy/releases/download/v0.1.1-c888349/rfbproxy.tar.xz | tar xJ -C /\nRUN echo '[core]\\n    excludesFile = /etc/.gitignore' > /etc/gitconfig\nCOPY ./extra/polygott-gitignore /etc/.gitignore\n\nCOPY ./out/run-project /usr/bin/run-project\nCOPY ./out/run-language-server /usr/bin/run-language-server\nCOPY ./out/detect-language /usr/bin/detect-language\nCOPY ./out/self-test /usr/bin/polygott-self-test\nCOPY ./out/polygott-survey /usr/bin/polygott-survey\nCOPY ./out/polygott-lang-setup /usr/bin/polygott-lang-setup\nCOPY ./out/polygott-x11-vnc /usr/bin/polygott-x11-vnc\nCOPY ./out/share/polygott/self-test.d/ /usr/share/polygott/self-test.d/\nCOPY --from=upm /usr/local/bin/upm /usr/local/bin/upm\nCOPY --from=websockify /root/websockify /usr/local/websockify\n\nCOPY ./run_dir /run_dir/\n\nRUN ln -sf /usr/lib/chromium-browser/chromedriver /usr/local/bin\n\nCOPY ./extra/apt-install /usr/bin/install-pkg\nRUN mkdir -p /opt/dap/java/ /opt/dap/python/\nCOPY ./extra/java-dap /opt/dap/java/run\nCOPY ./extra/py-dap /opt/dap/python/run\nRUN chmod +x /opt/dap/java/run /opt/dap/python/run\n\nCOPY ./extra/_test_runner.py /home/runner/_test_runner.py\nCOPY ./extra/cquery11 /opt/homes/cpp11/.cquery\nCOPY ./extra/pycodestyle ${XDG_CONFIG_HOME}/pycodestyle\nCOPY ./extra/pylintrc /etc/pylintrc\nCOPY ./extra/config.toml ${XDG_CONFIG_HOME}/pypoetry/config.toml\n\nCOPY ./extra/replit-v2.py /usr/local/lib/python3.6/dist-packages/replit.py\nCOPY ./extra/replit-v2.py /usr/local/lib/python2.7/dist-packages/replit.py\nCOPY ./extra/matplotlibrc /config/matplotlib/matplotlibrc\n\nCOPY ./extra/fluxbox/init /etc/X11/fluxbox/init\nCOPY ./extra/fluxbox/apps /etc/X11/fluxbox/apps\nCOPY ./extra/pulse/client.conf ./extra/pulse/default.pa /etc/pulse/\nCOPY ./extra/nixproxy.nix /opt/nixproxy.nix\n\nCOPY ./extra/lang-gitignore /etc/.gitignore\n"
}