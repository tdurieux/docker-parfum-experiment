{
  "startTime": 1674218320201,
  "endTime": 1674218321255,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 38,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Command to build the container:\n# docker build . -f ./Dockerfile -t itssamuelrowe/hypertool-ghost:latest\n#\n# Command to run the container:\n# docker run -p 3000:80 -d itssamuelrowe/hypertool-ghost:latest\n\n# Install dependencies only when needed\nFROM node:16.3.0-alpine AS builder\n\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\n\nWORKDIR /hypertool-ghost\n\n# Prepare for installing the dependencies\nCOPY ./package.json ./yarn.lock ./\n\n# Install dependencies for development\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# Copy the source code along with the necessary configuration files\nCOPY ./src ./src\nCOPY ./public ./public\nCOPY ./tsconfig.json ./.env.production ./\n\n# Build the source code\nRUN [\"yarn\", \"build\"]\n\n# --- Production ---\n\nFROM nginx:stable-alpine\n\nCOPY --from=builder /hypertool-ghost/build /usr/share/nginx/html\n\nCOPY ./nginx/nginx.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}