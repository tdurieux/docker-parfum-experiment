{
  "startTime": 1674219832422,
  "endTime": 1674219833116,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 18,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 38,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 81,
        "columnEnd": 97
      }
    }
  ],
  "repairedDockerfile": "# You can run this container with the following command:\n# docker run -p 3000:3000 -d itssamuelrowe/hypertool-web:latest\n\n# Install dependencies only when needed\nFROM node:alpine AS dependencies\n\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\n\nWORKDIR /hypertool-web\n\n# Prepare for installing the dependencies\nCOPY package.json yarn.lock ./\n\n# Install dependencies for development\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# Rebuild the source code only when needed\nFROM node:alpine AS builder\n\nWORKDIR /hypertool-web\n\n# Copy the source code along with the necessary configuration files\nCOPY . .\nCOPY --from=dependencies /hypertool-web/node_modules ./node_modules\n\n# Build the source code\nRUN yarn build && yarn install --production --ignore-scripts --prefer-offline && yarn cache clean;\n\n# Production image, copy all the files and run next\nFROM node:alpine AS runner\n\nENV NODE_ENV production\nWORKDIR /hypertool-web\n\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nextjs -u 1001\n\n# Only copy next.config.js if we are not using the default configuration\nCOPY --from=builder /hypertool-web/next.config.js .\nCOPY --from=builder /hypertool-web/public ./public\nCOPY --from=builder --chown=nextjs:nodejs /hypertool-web/.next ./.next\nCOPY --from=builder /hypertool-web/node_modules ./node_modules\nCOPY --from=builder /hypertool-web/package.json ./package.json\n\nUSER nextjs\n\n# Setup port on which the NextJS server will listen on\nEXPOSE 3000\nENV PORT 3000\n\nCMD [\"node_modules/.bin/next\", \"start\"]"
}