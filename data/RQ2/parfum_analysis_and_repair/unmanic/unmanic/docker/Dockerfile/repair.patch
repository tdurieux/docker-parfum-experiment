diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/unmanic/unmanic/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/unmanic/unmanic/docker/Dockerfile/repaired.Dockerfile
index 87cbe21..2cd96f0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/unmanic/unmanic/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/unmanic/unmanic/docker/Dockerfile/repaired.Dockerfile
@@ -16,7 +16,7 @@ ENV \
 RUN \
     echo "**** Install runtime packages ****" \
         && apt-get update \
-        && apt-get install -y \
+        && apt-get install --no-install-recommends -y \
             libexpat1=2.2.9-1ubuntu0.4 \
             libgl1-mesa-dri=21.2.6-0ubuntu0.1~20.04.2 \
             libglib2.0-0=2.64.6-1~ubuntu20.04.4 \
@@ -34,14 +34,14 @@ RUN \
         && \
         if uname -m | grep -q x86; then \
             echo "**** Add Intel Graphics repository  ****" \
-                && apt-get install -y \
+                && apt-get install --no-install-recommends -y \
                     gnupg \
                 && echo "deb [arch=amd64] https://repositories.intel.com/graphics/ubuntu focal main" > /etc/apt/sources.list.d/intel-graphics.list \
                 && apt-key adv --fetch-keys https://repositories.intel.com/graphics/intel-graphics.key \
             && \
             echo "**** Install Intel Media Drivers  ****" \
                 && apt-get update \
-                && apt-get install -y \
+                && apt-get install --no-install-recommends -y \
                     i965-va-driver=2.4.0-0ubuntu1 \
                     intel-igc-cm=1.0.128+i699.3~u20.04 \
                     intel-level-zero-gpu=1.3.22597+i699.3~u20.04 \
@@ -59,14 +59,14 @@ RUN \
                     vainfo=2.14.0.2-1 \
             && \
             echo "**** Install MESA Media Drivers for AMD VAAPI ****" \
-                && apt-get install -y \
+                && apt-get install --no-install-recommends -y \
                     mesa-va-drivers=21.2.6-0ubuntu0.1~20.04.2 \
             && \
             echo "**** Remove build packages ****" \
                 && apt-get remove -y \
                     gnupg \
             && \
-            echo ; \
+            echo; \
         fi \
     && \
     echo "**** Section cleanup ****" \
@@ -89,7 +89,7 @@ RUN \
         if uname -m | grep -q x86; then \
             echo "**** Add Jellyfin repository ****" \
                 && apt-get install --no-install-recommends --no-install-suggests -y ca-certificates gnupg \
-                && curl -ks https://repo.jellyfin.org/jellyfin_team.gpg.key | apt-key add - \
+                && curl -f -ks https://repo.jellyfin.org/jellyfin_team.gpg.key | apt-key add - \
                 && echo "deb [arch=$( dpkg --print-architecture )] https://repo.jellyfin.org/ubuntu focal main" | tee /etc/apt/sources.list.d/jellyfin.list \
             && \
             echo "**** Install jellyfin-ffmpeg and linked 3rd party libs ****" \
@@ -97,10 +97,10 @@ RUN \
                 && apt-get install --no-install-recommends --no-install-suggests -y \
                     openssl \
                     locales \
-                &&  curl -ksL \
+                && curl -f -ksL \
                     -o /tmp/jellyfin-ffmpeg_${JELLYFIN_FFMPEG_VERSION}-focal_amd64.deb \
                     "https://repo.jellyfin.org/releases/server/ubuntu/versions/jellyfin-ffmpeg/${JELLYFIN_FFMPEG_VERSION}/jellyfin-ffmpeg_${JELLYFIN_FFMPEG_VERSION}-focal_amd64.deb" \
-                && apt-get install -y \
+                && apt-get install --no-install-recommends -y \
                     /tmp/jellyfin-ffmpeg_${JELLYFIN_FFMPEG_VERSION}-focal_amd64.deb \
                 && ln -s /usr/lib/jellyfin-ffmpeg/ffmpeg /usr/local/bin/ffmpeg \
                 && ln -s /usr/lib/jellyfin-ffmpeg/ffprobe /usr/local/bin/ffprobe \
@@ -108,7 +108,7 @@ RUN \
             echo "**** Remove build packages ****" \
                 && apt-get remove -y gnupg \
             && \
-            echo ; \
+            echo; \
         fi \
         && \
         if uname -m | grep -q aarch64; then \
@@ -129,8 +129,8 @@ RUN \
         if uname -m | grep -q armv7l; then \
             echo "**** Add Jellyfin repository ****" \
                 && apt-get install --no-install-recommends --no-install-suggests -y ca-certificates gnupg \
-                && curl -ks https://repo.jellyfin.org/jellyfin_team.gpg.key | apt-key add - \
-                && curl -ks https://keyserver.ubuntu.com/pks/lookup?op=get\&search=0x6587ffd6536b8826e88a62547876ae518cbcf2f2 | apt-key add - \
+                && curl -f -ks https://repo.jellyfin.org/jellyfin_team.gpg.key | apt-key add - \
+                && curl -f -ks https://keyserver.ubuntu.com/pks/lookup?op=get\&search=0x6587ffd6536b8826e88a62547876ae518cbcf2f2 | apt-key add - \
                 && echo 'deb [arch=armhf] https://repo.jellyfin.org/ubuntu focal main' > /etc/apt/sources.list.d/jellyfin.list \
                 && echo "deb http://ppa.launchpad.net/ubuntu-raspi2/ppa/ubuntu bionic main">> /etc/apt/sources.list.d/raspbins.list \
             && \
@@ -153,11 +153,11 @@ RUN \
             echo "**** Remove build packages ****" \
                 && apt-get remove -y gnupg \
             && \
-            echo ; \
+            echo; \
         fi \
     && \
     echo "**** Install startup script requirements ****" \
-        && apt-get install -y \
+        && apt-get install --no-install-recommends -y \
             curl \
             nano \
             sqlite3 \
@@ -165,11 +165,11 @@ RUN \
     && \
     echo "**** Install NodeJS for $(uname -m) ****" \
         && curl -fsSL https://deb.nodesource.com/setup_${NODEJS_VERSION} | bash - \
-        && apt-get install -y \
+        && apt-get install --no-install-recommends -y \
             nodejs \
     && \
     echo "**** Install exiftool for $(uname -m) ****" \
-        && apt-get install -y \
+        && apt-get install --no-install-recommends -y \
             libimage-exiftool-perl \
     && \
     echo "**** Section cleanup ****" \