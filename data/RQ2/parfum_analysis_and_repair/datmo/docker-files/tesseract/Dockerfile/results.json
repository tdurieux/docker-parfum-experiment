{
  "startTime": 1674255807889,
  "endTime": 1674255808957,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 24,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 1,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Datmo devs <dev@datmo.io>\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tautoconf \\\n\tautomake \\\n\tlibtool \\\n\tautoconf-archive \\\n\tpkg-config \\\n\tlibpng12-dev \\\n\tlibjpeg8-dev \\\n\tlibtiff5-dev \\\n\tzlib1g-dev \\\n\tlibicu-dev \\\n\tlibpango1.0-dev \\\n\tlibcairo2-dev \\\n\tpython-numpy \\\n    python-scipy \\\n    python-dev \\\n    python-nose \\\n    g++ \\\n    libopenblas-dev \\\n\tgit \\\n\tcurl && \\\n\trm -rf /var/lib/apt/lists/*\n\nRUN curl -f https://www.leptonica.org/source/leptonica-1.74.1.tar.gz -o leptonica-1.74.1.tar.gz && \\\n\ttar -zxvf leptonica-1.74.1.tar.gz && \\\n\tcd leptonica-1.74.1 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n\tcd .. && rm -rf leptonica* && rm leptonica-1.74.1.tar.gz\n\nRUN git clone --depth 1 https://github.com/tesseract-ocr/tesseract.git && \\\n\tcd tesseract && \\\n\t./autogen.sh && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tLDFLAGS=\"-L/usr/local/lib\" CFLAGS=\"-I/usr/local/include\" make && \\\n\tmake install && \\\n\tldconfig && \\\n\tmake training && \\\n\tmake training-install && \\\n\tcd .. && rm -rf tesseract\n\n# Get basic traineddata\nRUN curl -f -LO https://github.com/tesseract-ocr/tessdata/raw/master/eng.traineddata && \\\n\tmv eng.traineddata /usr/local/share/tessdata/\n\nRUN curl -f -LO https://github.com/tesseract-ocr/tessdata/raw/master/fra.traineddata && \\\n\tmv fra.traineddata /usr/local/share/tessdata/\n\n# Install pip\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\n# Install other useful Python packages using pip\nRUN pip --no-cache-dir install --upgrade ipython && \\\n\tpip --no-cache-dir install \\\n                        Cython \\\n                        ipykernel \\\n                        jupyter \\\n                        path.py \\\n                        Pillow \\\n                        pygments \\\n                        six \\\n                        sphinx \\\n                        wheel \\\n                        zmq \\\n                        && \\\n                    python -m ipykernel.kernelspec\n\n#Jupyter notebook related configs\nCOPY jupyter_notebook_config.py /root/.jupyter/\nEXPOSE 8888\n\n# Jupyter has issues with being run directly: https://github.com/ipython/ipython/issues/7062\nCOPY run_jupyter.sh /home/\n\n#Adding flask\nRUN pip install --no-cache-dir flask\nEXPOSE 5000\n\nWORKDIR /workspace\nRUN chmod -R a+w /workspace"
}