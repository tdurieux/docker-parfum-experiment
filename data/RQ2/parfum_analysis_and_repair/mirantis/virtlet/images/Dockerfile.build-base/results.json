{
  "startTime": 1674248338004,
  "endTime": 1674248339553,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# TODO: generate this tag. unfortunately can't use ARG:\n# https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact\n# (but add a note about it here for the future)\nFROM mirantis/virtlet-base:v1-6348ee2277c565d3895260bccb5ada96\nMAINTAINER Ivan Shvedunov <ishvedunov@mirantis.com>\n\nLABEL virtlet.image=\"build-base\"\n\nENV DOCKER_CLIENT_VERSION 17.03.0-ce\nENV DOCKER_CLIENT_DOWNLOAD_URL_BASE https://download.docker.com/linux/static/stable\nENV DOCKER_CLIENT_SHA256 27f6cbbe189fd6374bedbc406df48462e34d7e6ab2c8c6cc4135c38eb63b0b5d\n# TODO: bump kubectl\nENV KUBECTL_VERSION v1.9.3\nENV KUBECTL_SHA1 a27d808eb011dbeea876fe5326349ed167a7ed28\nENV OLD_KUBECTL_VERSION v1.7.12\nENV OLD_KUBECTL_SHA1 385229d4189e4f7978de42f237d6c443c0534edd\n\n# Go installation commands are based on official Go container:\n# https://github.com/docker-library/golang/blob/18ee81a2ec649dd7b3d5126b24eef86bc9c86d80/1.7/Dockerfile\nENV GOLANG_VERSION 1.10.3\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035\n\nENV CIRROS_SHA256 fcd9e9a622835de8dba6b546481d13599b1e592bba1275219e1b31cae33b1365\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n                git \\\n                make \\\n                autoconf \\\n                automake \\\n                p7zip-full \\\n                dhcpcd5 \\\n                tcpdump \\\n                iputils-ping \\\n                mercurial \\\n                pkg-config \\\n                python-pip && \\\n    apt-get clean && \\\n    pip install --no-cache-dir mkdocs && rm -rf /var/lib/apt/lists/*;\n\n# Install docker client\nRUN mkdir -p /usr/local/bin && \\\n    curl -f -sSL \"${DOCKER_CLIENT_DOWNLOAD_URL_BASE}/$(uname -m)/docker-${DOCKER_CLIENT_VERSION}.tgz\" | \\\n    tar -C /usr/local/bin -xz --strip-components=1 docker/docker && \\\n    echo \"${DOCKER_CLIENT_SHA256}  /usr/local/bin/docker\" | sha256sum -c -\n\n# Install Go\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n\t&& echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n\t&& tar -C /usr/local -xzf golang.tar.gz \\\n\t&& rm golang.tar.gz\n\nENV GOPATH /go\nENV PATH /go/src/github.com/Mirantis/virtlet/_output:$GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n\n# Install kubectl.\n# Also install old kubectl for v1.7 (needed to make the release yaml)\nRUN curl -f -L https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && \\\n    echo \"${KUBECTL_SHA1}  /usr/local/bin/kubectl\" | sha1sum -c && \\\n    chmod +x /usr/local/bin/kubectl && \\\n    curl -f -L https://storage.googleapis.com/kubernetes-release/release/${OLD_KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl.old && \\\n    echo \"${OLD_KUBECTL_SHA1}  /usr/local/bin/kubectl.old\" | sha1sum -c && \\\n    chmod +x /usr/local/bin/kubectl.old\n\n# TODO: update CNI ver\nRUN mkdir -p ~/.ssh && \\\n    ssh-keyscan github.com >> ~/.ssh/known_hosts && \\\n    mkdir -p /var/lib/virtlet/volumes /opt/cni/bin && \\\n    curl -f -L https://github.com/containernetworking/cni/releases/download/v0.3.0/cni-v0.3.0.tgz | \\\n      tar zxC /opt/cni/bin && \\\n    ln -s /go/src/github.com/Mirantis/virtlet/_output/vmwrapper /vmwrapper\n\n# Download cirros image\nRUN mkdir -p /images && \\\n    curl -f -L https://github.com/Mirantis/virtlet/releases/download/v0.8.2/cirros.img -o /images/cirros.img && \\\n    echo \"${CIRROS_SHA256}  /images/cirros.img\" | sha256sum -c -\n\n# Install Go tooling\nRUN go get github.com/aktau/github-release && \\\n    go get github.com/Masterminds/glide && \\\n    go get github.com/go-bindata/go-bindata/...\n"
}