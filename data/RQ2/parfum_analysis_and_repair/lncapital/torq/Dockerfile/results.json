{
  "startTime": 1674255577623,
  "endTime": 1674255578317,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build stage\nFROM golang:alpine as backend-builder\nRUN apk --no-cache add ca-certificates\nENV GO111MODULE=on\nWORKDIR /app\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build cmd/torq/torq.go\n\n# frontend build stage\nFROM node:lts-alpine as frontend-builder\nWORKDIR /app\nCOPY web/package*.json ./\nRUN npm install && npm cache clean --force;\nCOPY web/. .\nRUN npm run build\n\n# final stage\nFROM alpine\nCOPY --from=backend-builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=backend-builder /app/torq /app/\nCOPY --from=frontend-builder /app/build /app/web/build\nRUN apk add --no-cache bash\nENV GIN_MODE=release\nWORKDIR /app\nENTRYPOINT [\"./torq\"]\n"
}