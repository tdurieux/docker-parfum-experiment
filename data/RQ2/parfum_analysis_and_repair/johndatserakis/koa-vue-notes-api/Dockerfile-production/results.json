{
  "startTime": 1674250046548,
  "endTime": 1674250047237,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10\n\nARG APP_EMAIL\nARG APP_ENV\nARG APP_NAME\nARG APP_PORT\nARG APP_URL\nARG AWS_ACCESS_KEY_ID\nARG AWS_SECRET_ACCESS_KEY\nARG DB_DATABASE\nARG DB_HOST\nARG DB_PASSWORD\nARG DB_PORT\nARG DB_USER\nARG ECR_REGISTRY\nARG ECR_REPOSITORY\nARG IMAGE_TAG\nARG JWT_ACCESS_TOKEN_EXP\nARG JWT_SECRET\nARG NODE_ENV\nARG RECAPTCHA_SECRET\nARG SENDGRID_API_KEY\nARG STRIPE_SECRET_KEY\n\nENV APP_EMAIL=$APP_EMAIL\nENV APP_ENV=$APP_ENV\nENV APP_NAME=$APP_NAME\nENV APP_PORT=$APP_PORT\nENV APP_URL=$APP_URL\nENV AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID\nENV AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY\nENV DB_DATABASE=$DB_DATABASE\nENV DB_HOST=$DB_HOST\nENV DB_PASSWORD=$DB_PASSWORD\nENV DB_PORT=$DB_PORT\nENV DB_USER=$DB_USER\nENV ECR_REGISTRY=$ECR_REGISTRY\nENV ECR_REPOSITORY=$ECR_REPOSITORY\nENV IMAGE_TAG=$IMAGE_TAG\nENV JWT_ACCESS_TOKEN_EXP=$JWT_ACCESS_TOKEN_EXP\nENV JWT_SECRET=$JWT_SECRET\nENV NODE_ENV=$NODE_ENV\nENV RECAPTCHA_SECRET=$RECAPTCHA_SECRET\nENV SENDGRID_API_KEY=$SENDGRID_API_KEY\nENV STRIPE_SECRET_KEY=$STRIPE_SECRET_KEY\n\nWORKDIR /usr/src/app\n\nCOPY package*.json ./\n\n# We want the devDependencies here\nRUN npm --production=false install && npm cache clean --force;\n\nRUN npm install knex -g && npm cache clean --force;\n\nCOPY . .\n\nRUN npm run build\n\nCMD [ \"node\", \"./dist/src/app.js\" ]\n"
}