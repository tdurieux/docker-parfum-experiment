{
  "startTime": 1674256320375,
  "endTime": 1674256321198,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# Build and base stuff\n# (zlib1g-dev and libssl-dev are needed for the Qt host binary builds, but should not be used by target binaries)\n# We split this up into multiple RUN lines as we might need to retry multiple times on Travis. This way we allow better\n# cache usage.\nENV APT_ARGS=\"-y --no-install-recommends --no-upgrade\"\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS git wget unzip && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS g++ && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS autotools-dev libtool m4 automake autoconf pkg-config && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS zlib1g-dev libssl1.0-dev curl ccache bsdmainutils cmake && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS python3 python3-dev && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS python3-pip python3-setuptools && rm -rf /var/lib/apt/lists/*\n\n# Python stuff\nRUN pip3 install --no-cache-dir pyzmq# really needed?\nRUN pip3 install --no-cache-dir jinja2\n\n# gobyte_hash\nRUN git clone https://github.com/gobytecoin/gobyte_hash\nRUN cd gobyte_hash && python3 setup.py install\n\nARG USER_ID=1000\nARG GROUP_ID=1000\n\n# add user with specified (or default) user/group ids\nENV USER_ID ${USER_ID}\nENV GROUP_ID ${GROUP_ID}\nRUN groupadd -g ${GROUP_ID} gobyte\nRUN useradd -u ${USER_ID} -g gobyte -s /bin/bash -m -d /gobyte gobyte\n\n# Packages needed for all target builds\nRUN dpkg --add-architecture i386\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS g++-7-multilib && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS g++-arm-linux-gnueabihf && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS g++-mingw-w64-i686 && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS g++-mingw-w64-x86-64 && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS wine-stable wine32 wine64 bc nsis && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS python3-zmq && rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install -y --no-install-recommends $APT_ARGS imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools && rm -rf /var/lib/apt/lists/*\n\n# This is a hack. It is needed because gcc-multilib and g++-multilib are conflicting with g++-arm-linux-gnueabihf. This is\n# due to gcc-multilib installing the following symbolic link, which is needed for -m32 support. However, this causes\n# arm builds to also have the asm folder implicitely in the include search path. This is kind of ok, because the asm folder\n# for arm has precedence.\nRUN ln -s x86_64-linux-gnu/asm /usr/include/asm\n\n# Make sure std::thread and friends is available\nRUN \\\n  update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix; \\\n  update-alternatives --set i686-w64-mingw32-g++  /usr/bin/i686-w64-mingw32-g++-posix; \\\n  update-alternatives --set x86_64-w64-mingw32-gcc  /usr/bin/x86_64-w64-mingw32-gcc-posix; \\\n  update-alternatives --set x86_64-w64-mingw32-g++  /usr/bin/x86_64-w64-mingw32-g++-posix; \\\n  exit 0\n\nRUN mkdir /gobyte-src && \\\n  mkdir -p /cache/ccache && \\\n  mkdir /cache/depends && \\\n  mkdir /cache/sdk-sources && \\\n  chown $USER_ID:$GROUP_ID /gobyte-src && \\\n  chown $USER_ID:$GROUP_ID /cache && \\\n  chown $USER_ID:$GROUP_ID /cache -R\nWORKDIR /gobyte-src\n\nUSER gobyte\n"
}