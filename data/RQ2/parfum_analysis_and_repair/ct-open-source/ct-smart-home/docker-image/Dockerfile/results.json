{
  "startTime": 1674254492462,
  "endTime": 1674254493626,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=14\nARG OS=alpine\n\n#### Stage BASE ########################################################################################################\nFROM node:${NODE_VERSION}-${OS} AS base\n\n# Copy scripts\nCOPY scripts/*.sh /tmp/\n\n# Install tools, create Node-RED app and data dir, add user and set rights\nRUN set -ex && \\\n    apk add --no-cache \\\n    bash \\\n    tzdata \\\n    iputils \\\n    curl \\\n    nano \\\n    git \\\n    openssl \\\n    openssh-client \\\n    su-exec \\\n    avahi \\\n    avahi-compat-libdns_sd \\\n    dbus \\\n    ffmpeg \\\n    bluez &&\\\n    dbus-uuidgen --ensure && \\\n    mkdir -p /usr/src/node-red /data && \\\n    deluser --remove-home node && \\\n    adduser -h /usr/src/node-red -D -H node-red -u 1000 && \\\n    chown -R node-red:root /data && chmod -R g+rwX /data && \\ \n    chown -R node-red:root /usr/src/node-red && chmod -R g+rwX /usr/src/node-red && rm -rf /usr/src/node-red\n\n# Set work directory\nWORKDIR /usr/src/node-red\n\n# package.json contains Node-RED NPM module and node dependencies\nCOPY package.json .\n\n#### Stage BUILD #######################################################################################################\nFROM base AS build\n\n# Install Build tools\nRUN apk add --no-cache --virtual buildtools build-base linux-headers udev eudev-dev avahi-dev libusb-dev libc-dev python3 && \\\n    npx npm-check-updates -u && \\\n    npm install --unsafe-perm --no-update-notifier --only=production --no-optional && \\\n    /tmp/remove_native_gpio.sh && \\\n    npm dedupe && \\\n    npm cache clean --force && \\\n    npm prune --production && \\\n    apk del buildtools && \\\n    cp -R node_modules prod_node_modules\n\n\n#### Stage RELEASE #####################################################################################################\nFROM base AS RELEASE\nUSER root\nARG BUILD_DATE\nARG BUILD_VERSION\nARG BUILD_REF\nARG ARCH\nARG NODE_RED_VERSION=latest\nARG TAG_SUFFIX=default\n\nLABEL org.label-schema.build-date=${BUILD_DATE} \\\n    org.label-schema.docker.dockerfile=\"Dockerfile\" \\\n    org.label-schema.license=\"Apache-2.0\" \\\n    org.label-schema.name=\"Node-RED for c't-Smart-Home\" \\\n    org.label-schema.version=${BUILD_VERSION} \\\n    org.label-schema.description=\"Low-code programming for event-driven applications.\" \\\n    org.label-schema.url=\"https://www.ct.de/smarthome\" \\\n    org.label-schema.vcs-ref=${BUILD_REF} \\\n    org.label-schema.vcs-type=\"Git\" \\\n    org.label-schema.vcs-url=\"https://github.com/ct-Open-Source/ct-Smart-Home\" \\\n    org.label-schema.arch=${ARCH} \\\n    authors=\"Dave Conway-Jones, Nick O'Leary, James Thomas, Raymond Mouthaan, Merlin Schumacher, Jan Mahn, Andrijan Möcker, Anton Golubev, J. Völker, GnafGnaf\" \\\n    org.opencontainers.image.source=https://github.com/ct-Open-Source/ct-Smart-Home\n\nCOPY --from=build /usr/src/node-red/prod_node_modules ./node_modules\nCOPY entrypoint.sh /usr/src/node-red/entrypoint.sh\n\n# Chown, install devtools & Clean up\nRUN rm -r /tmp/* && \\\n    setcap 'cap_net_raw+eip' `which l2ping` && \\\n    setcap 'cap_net_raw+eip' `which node`\n\n# Env variables\nENV NODE_RED_VERSION=$NODE_RED_VERSION \\\n    NODE_PATH=/usr/src/node-red/node_modules:/data/node_modules \\\n    FLOWS=flows.json\n\n# ENV NODE_RED_ENABLE_SAFE_MODE=true    # Uncomment to enable safe start mode (flows not running)\nENV NODE_RED_ENABLE_PROJECTS=true    \n\n# User configuration directory volume\nVOLUME [\"/data\"]\n\n# Expose the listening port of node-red\nEXPOSE 1880\n\n# Add a healthcheck (default every 30 secs)\nHEALTHCHECK CMD curl http://localhost:1880/ || exit 1\n\nCMD [\"/bin/sh\", \"/usr/src/node-red/entrypoint.sh\" ]\n"
}