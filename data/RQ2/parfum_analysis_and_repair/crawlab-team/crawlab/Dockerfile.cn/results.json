{
  "startTime": 1674247896148,
  "endTime": 1674247897238,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM golang:1.16 AS backend-build\n\nWORKDIR /go/src/app\nCOPY ./backend .\n\nENV GO111MODULE on\nENV GOPROXY https://goproxy.io\n\nRUN go mod tidy \\\n  && go install -v ./...\n\nFROM node:12 AS frontend-build\n\nADD ./frontend /app\nWORKDIR /app\n#RUN rm /app/.npmrc\n\n# install frontend\nRUN yarn install && yarn run build:docker && yarn cache clean;\n\n# images\nFROM ubuntu:20.04\n\n# set as non-interactive\nENV DEBIAN_FRONTEND noninteractive\n\n# install packages\nRUN chmod 777 /tmp \\\n\t&& apt-get update \\\n\t&& apt-get install --no-install-recommends -y curl git net-tools iputils-ping ntp ntpdate nginx wget dumb-init cloc && rm -rf /var/lib/apt/lists/*;\n\n# install python\nRUN apt-get install --no-install-recommends -y python3 python3-pip \\\n\t&& ln -s /usr/bin/pip3 /usr/local/bin/pip \\\n\t&& ln -s /usr/bin/python3 /usr/local/bin/python && rm -rf /var/lib/apt/lists/*;\n\n# install golang\nRUN curl -f -OL https://storage.googleapis.com/golang/go1.16.7.linux-amd64.tar.gz \\\n\t&& tar -C /usr/local -xvf go1.16.7.linux-amd64.tar.gz \\\n\t&& ln -s /usr/local/go/bin/go /usr/local/bin/go && rm go1.16.7.linux-amd64.tar.gz\n\n# install seaweedfs\nRUN wget https://github.com/crawlab-team/resources/raw/main/seaweedfs/2.79/linux_amd64.tar.gz \\\n  && tar -zxf linux_amd64.tar.gz \\\n  && cp weed /usr/local/bin && rm linux_amd64.tar.gz\n\n# install backend\nRUN pip install --no-cache-dir scrapy pymongo bs4 requests -i https://mirrors.aliyun.com/pypi/simple\nRUN pip install --no-cache-dir crawlab-sdk==0.6.b20211224-1500\n\n# add files\nCOPY ./backend/conf /app/backend/conf\nCOPY ./nginx /app/nginx\nCOPY ./bin /app/bin\n\n# copy backend files\nRUN mkdir -p /opt/bin\nCOPY --from=backend-build /go/bin/crawlab /opt/bin\nRUN cp /opt/bin/crawlab /usr/local/bin/crawlab-server\n\n# copy frontend files\nCOPY --from=frontend-build /app/dist /app/dist\n\n# copy nginx config files\nCOPY ./nginx/crawlab.conf /etc/nginx/conf.d\n\n# install plugins\nRUN /bin/bash /app/bin/docker-install-plugins.sh\n\n# working directory\nWORKDIR /app/backend\n\n# timezone environment\nENV TZ Asia/Shanghai\n\n# language environment\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n\n# frontend port\nEXPOSE 8080\n\n# backend port\nEXPOSE 8000\n\n# start backend\nCMD [\"/bin/bash\", \"/app/bin/docker-init.sh\"]\n"
}