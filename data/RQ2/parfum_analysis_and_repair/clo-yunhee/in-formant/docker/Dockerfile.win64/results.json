{
  "startTime": 1674248310846,
  "endTime": 1674248312554,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 25,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM msvc:16 AS build\n\nENV DEBIAN_FRONTEND noninteractive\n\nUSER root\nRUN apt-get update -y && \\\n        apt-get install --no-install-recommends -y \\\n            wget \\\n            git \\\n            curl zip unzip tar \\\n            python3 python3-pip python-is-python3 && rm -rf /var/lib/apt/lists/*;\nUSER wine\n\n# cmake in wine\nARG CMAKE_SERIES_VER=3.20\nARG CMAKE_VERS=$CMAKE_SERIES_VER.5\nRUN umask $WINE_UMASK && \\\n    wget https://cmake.org/files/v$CMAKE_SERIES_VER/cmake-$CMAKE_VERS-windows-x86_64.zip -O cmake.zip && \\\n    unzip cmake.zip && \\\n    cp -R cmake-*/* $WINEPREFIX/drive_c/tools && \\\n    rm -rf cmake*\nRUN vcwine cmake --version\n\n# jom in wine\nRUN umask $WINE_UMASK && \\\n    wget https://download.qt.io/official_releases/jom/jom.zip -O jom.zip && \\\n    unzip -d jom jom.zip && \\\n    mv jom/jom.exe $WINEPREFIX/drive_c/tools/bin && \\\n    rm -rf jom*\nRUN vcwine jom /VERSION\n\nUSER root\nRUN pip install --no-cache-dir aqtinstall==1.2.2\nCOPY aqtinstall-patch/updater.py /usr/local/lib/python3.8/dist-packages/aqt\nRUN aqt install 6.1.2 windows desktop win64_msvc2019_64 -m addons.qtcharts --outputdir /opt/Qt\nUSER wine\n\nRUN umask $WINE_UMASK && \\\n    wget https://files.portaudio.com/archives/pa_stable_v190700_20210406.tgz && \\\n    tar xvf pa_stable_v190700_20210406.tgz && \\\n    rm pa_stable_v190700_20210406.tgz && \\\n    mkdir portaudio/objs && \\\n    cd portaudio/objs && \\\n    vcwine cmake .. -G \"NMake Makefiles JOM\" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:\\\\usr && \\\n    vcwine jom && \\\n    vcwine jom install && \\\n    cd && rm -r portaudio\n\nRUN umask $WINE_UMASK && \\\n    wget https://www.fftw.org/fftw-3.3.9.tar.gz && \\\n    tar xvf fftw-3.3.9.tar.gz && \\\n    rm fftw-3.3.9.tar.gz && \\\n    mkdir fftw-3.3.9/objs && \\\n    cd fftw-3.3.9/objs && \\\n    vcwine cmake .. -G \"NMake Makefiles JOM\" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:\\\\usr && \\\n    vcwine jom && \\\n    vcwine jom install && \\\n    cd && rm -r fftw-3.3.9\n\nRUN umask $WINE_UMASK && \\\n    wget https://gitlab.com/libeigen/eigen/-/archive/3.3.9/eigen-3.3.9.tar.gz && \\\n    tar xvf eigen-3.3.9.tar.gz && \\\n    rm eigen-3.3.9.tar.gz && \\\n    mkdir eigen-3.3.9/objs && \\\n    cd eigen-3.3.9/objs && \\\n    vcwine cmake .. -G \"NMake Makefiles JOM\" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=C:\\\\usr && \\\n    vcwine jom install && \\\n    cd && rm -r eigen-3.3.9\n\nUSER root\nRUN apt-get update -y && apt-get install --no-install-recommends -y ccache && rm -rf /var/lib/apt/lists/*;\nUSER wine\nENV CCACHE_DIR=/ccache\n\nENTRYPOINT []\nCMD umask $WINE_UMASK && \\\n    cd /build && \\\n    export version=`cat /src/version` && \\\n    vcwine cmake \\\n        -G \"NMake Makefiles JOM\" \\\n        -DCUR_VERSION=$version \\\n        -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \\\n        -DCMAKE_PREFIX_PATH=\"Z:\\\\opt\\\\Qt\\\\6.1.2\\\\msvc2019_64;C:\\\\usr\" \\\n        -DENABLE_TORCH=$ENABLE_TORCH \\\n        /src && \\\n    vcwine jom && \\\n    DIST_SUFFIX=win64-x64 \\\n    /src/docker/deploy-windows.sh\n\n\n"
}