{
  "startTime": 1674248117235,
  "endTime": 1674248118235,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 8,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 25,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 8,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 25,
        "columnEnd": 173
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 25,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 25,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 8,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 25,
        "columnEnd": 173
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 25,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS build\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -y && \\\n        apt-get update -y && \\\n        apt-get install --no-install-recommends -y \\\n            gcc-10 \\\n            g++-10 \\\n            wget \\\n            make \\\n            libasound-dev \\\n            libpulse-dev \\\n            libpng-dev \\\n            libxcomposite-dev \\\n            libxcb-glx0-dev \\\n            libx11-xcb-dev \\\n            libxrender-dev \\\n            libxkbcommon-x11-dev \\\n            libfontconfig1-dev \\\n            libwayland-cursor0 \\\n            libgl1-mesa-glx \\\n            python3 python3-pip python-is-python3 && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /dockerbuild\nWORKDIR /dockerbuild\nENV CC=/usr/bin/gcc-10 CXX=/usr/bin/g++-10\n\nRUN echo $PKG_CONFIG_PATH\n\n# Install AppImageKit.\nRUN wget https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage && \\\n        cp appimagetool-x86_64.AppImage /usr/local/bin/appimagetool && \\\n        chmod +x /usr/local/bin/appimagetool\n\n# Install cmake\nENV ver=3.20.5\nRUN wget https://github.com/Kitware/CMake/releases/download/v$ver/cmake-$ver-Linux-x86_64.sh && \\\n        sh cmake-$ver-Linux-x86_64.sh --skip-license --prefix=/usr/local\n\nRUN pip install --no-cache-dir aqtinstall\nRUN aqt install 6.1.2 linux desktop -m addons.qtcharts --outputdir /opt/Qt\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Build portaudio\nRUN wget https://files.portaudio.com/archives/pa_stable_v190700_20210406.tgz && \\\n        tar -xvf pa_stable_v190700_20210406.tgz && rm pa_stable_v190700_20210406.tgz\nRUN cd portaudio && \\\n        mkdir objs && \\\n        cd objs && \\\n        ../configure --enable-shared --disable-static --prefix=/usr/local && \\\n        make -j$(nproc) && \\\n        make install\n\n# Build eigen3\nENV ver=3.3.9\nRUN wget https://gitlab.com/libeigen/eigen/-/archive/$ver/eigen-$ver.tar.gz && \\\n        tar -xvf eigen-$ver.tar.gz && rm eigen-$ver.tar.gz\nRUN cd eigen-$ver && \\\n        mkdir build && \\\n        cd build && \\\n        cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && \\\n        make -j$(nproc) && \\\n        make install\n\n# Build fftw3\nENV ver=3.3.9\nRUN wget https://www.fftw.org/fftw-$ver.tar.gz && \\\n        tar -xvf fftw-$ver.tar.gz && rm fftw-$ver.tar.gz\nRUN cd fftw-$ver && \\\n        mkdir build && \\\n        cd build && \\\n        ../configure --enable-shared --disable-static --prefix=/usr/local && \\\n        make -j$(nproc) && \\\n        make install\n\nRUN apt-get update -y && \\\n        apt-get install --no-install-recommends -y mesa-common-dev unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.7.1%2Bcpu.zip -O libtorch.zip && \\\n        unzip libtorch.zip && \\\n        mv libtorch /usr/libtorch\n\nRUN wget https://github.com/linuxdeploy/linuxdeploy/releases/download/continuous/linuxdeploy-x86_64.AppImage -O /usr/bin/linuxdeploy && \\\n        chmod 755 /usr/bin/linuxdeploy\n\nRUN wget https://github.com/linuxdeploy/linuxdeploy-plugin-qt/releases/download/continuous/linuxdeploy-plugin-qt-x86_64.AppImage -O /usr/bin/linuxdeploy-plugin-qt && \\\n        chmod 755 /usr/bin/linuxdeploy-plugin-qt\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y fuse libegl1-mesa libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-render-util0 libxcb-xinerama0 libgssapi-krb5-2 libxcb-shape0 && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /dockerbuild\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y ccache && rm -rf /var/lib/apt/lists/*;\nENV CCACHE_DIR=/ccache\n\nRUN groupadd -g 1000 swu && useradd -m -u 1000 -g swu swu\nUSER swu\n\nCMD cd /build && \\\n        export version=`cat /src/version` && \\\n        export LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64 && \\\n        export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib64/pkgconfig:/usr/share/pkgconfig:/usr/local/pkgconfig:/usr/local/lib64/pkgconfig:/usr/local/share/pkgconfig && \\\n        cmake \\\n            -DCUR_VERSION=$version \\\n            -DCMAKE_BUILD_TYPE=$CMAKE_BUILD_TYPE \\\n            -DCMAKE_PREFIX_PATH=\"/opt/Qt/6.1.2/gcc_64;/usr/libtorch\" \\\n            -DENABLE_TORCH=$ENABLE_TORCH \\\n            /src && \\\n        make -j$(nproc) && \\\n        /src/docker/deploy-linux.sh\n"
}