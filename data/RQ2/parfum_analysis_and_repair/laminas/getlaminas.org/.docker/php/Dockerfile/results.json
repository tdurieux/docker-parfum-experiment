{
  "startTime": 1674255839125,
  "endTime": 1674255839761,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# DOCKER-VERSION        1.3.2\n\n# Build UI assets\nFROM node:8-alpine as assets\nRUN apk add --no-cache git\nRUN npm install -g gulp-cli && npm cache clean --force;\nRUN mkdir -p /work\nCOPY bootstrap /work/\nWORKDIR /work\nRUN npm install && npm rebuild node-sass && gulp deploy && npm cache clean --force;\n# Created assets need to be in an unmapped folder to persist\nRUN mkdir -p /assets && mv /work/build/* /assets\n\n\n# Build the PHP container\nFROM php:8.0-fpm-alpine\n\n# System dependencies\n# RUN mkdir -p /etc/apk && echo 'http://dl-cdn.alpinelinux.org/alpine/v3.6/community' >> /etc/apk/repositories\nRUN apk update && \\\n  apk add --no-cache \\\n    bash \\\n    php8-bcmath \\\n    php8-bz2 \\\n    php8-dom \\\n    php8-intl \\\n    php8-opcache \\\n    php8-pcntl \\\n    php8-sockets \\\n    php8-xsl \\\n    php8-zip\n\n# PHP configuration\nCOPY .docker/php/getlaminas.ini /usr/local/etc/php/conf.d/999-getlaminas.ini\n\n# Overwrite entrypoint\nCOPY .docker/php/php-entrypoint /usr/local/bin/php-entrypoint\n\n# Copy assets\nCOPY --from=assets /assets/assets.json /assets/assets.json\nCOPY --from=assets /assets/css /assets/css/\nCOPY --from=assets /assets/js /assets/js/\n\n# Build project\nWORKDIR /var/www\nENTRYPOINT [\"php-entrypoint\"]\nCMD [\"php-fpm\"]\n"
}