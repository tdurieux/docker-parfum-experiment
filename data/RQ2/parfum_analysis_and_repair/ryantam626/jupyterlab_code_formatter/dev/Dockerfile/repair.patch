diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ryantam626/jupyterlab_code_formatter/dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ryantam626/jupyterlab_code_formatter/dev/Dockerfile/repaired.Dockerfile
index e9d7205..fdf811a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ryantam626/jupyterlab_code_formatter/dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ryantam626/jupyterlab_code_formatter/dev/Dockerfile/repaired.Dockerfile
@@ -3,18 +3,18 @@ FROM python:3.9.12-bullseye
 
 # Install common stuff and R
 RUN apt update && \
-    apt install -y r-base curl jq gawk inotify-tools libgbm-dev libnss3 libasound2 && \
+    apt install --no-install-recommends -y r-base curl jq gawk inotify-tools libgbm-dev libnss3 libasound2 && \
     rm -rf /var/lib/apt/lists/* /var/cache/apt/*
 
 # Install NodeJS
 ENV NODE_VERSION=16.13.0
-RUN curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
+RUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash
 ENV NVM_DIR=/root/.nvm
 RUN . "$NVM_DIR/nvm.sh" && nvm install ${NODE_VERSION}
 RUN . "$NVM_DIR/nvm.sh" && nvm use v${NODE_VERSION}
 RUN . "$NVM_DIR/nvm.sh" && nvm alias default v${NODE_VERSION}
 ENV PATH="/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}"
-RUN npm install --global yarn
+RUN npm install --global yarn && npm cache clean --force;
 
 # Install R packages
 COPY dev/install-r-packages.sh /tmp/install-r-packages.sh
@@ -26,13 +26,13 @@ RUN python3 -m venv $VIRTUAL_ENV
 ENV PATH="$VIRTUAL_ENV/bin:$PATH"
 
 # Install pip-tool
-RUN pip install pip-tools
+RUN pip install --no-cache-dir pip-tools
 
 # Compile requirements
 COPY dev/requirements.in /app/requirements.in
 RUN pip-compile /app/requirements.in
 # Install requirements
-RUN pip install -r /app/requirements.txt
+RUN pip install --no-cache-dir -r /app/requirements.txt
 
 # Copy scripts
 COPY dev/lint.sh dev/test.sh dev/format.sh /scripts/
@@ -43,7 +43,7 @@ COPY . /host
 WORKDIR /host
 
 # Install package in dev mode
-RUN pip install -e /host
+RUN pip install --no-cache-dir -e /host
 RUN jupyter labextension develop /host --overwrite
 RUN jlpm run build