{
  "startTime": 1674255518509,
  "endTime": 1674255519068,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# =============================================================================\n# build stage\n#\n# install golang dependencies & build binaries\n# =============================================================================\nFROM golang:1.14 AS build\n\nENV GOFLAGS='-ldflags=-s -ldflags=-w'\nENV CGO_ENABLED=0\nENV GO111MODULE=on\n\nWORKDIR /go/src/github.com/buzzfeed/sso\n\nCOPY ./go.mod ./go.sum ./\nRUN go mod download\nCOPY . .\nRUN cd cmd/sso-auth && go build -mod=readonly -o /bin/sso-auth\nRUN cd cmd/sso-proxy && go build -mod=readonly -o /bin/sso-proxy\nRUN cd cmd/sso-proxy/generate-request-signature && go build -mod=readonly -o /bin/sso-generate-request-signature\n\n# =============================================================================\n# final stage\n#\n# add static assets and copy binaries from build stage\n# =============================================================================\nFROM debian:buster-slim\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates curl && rm -rf /var/lib/apt/lists/* \\\n    && groupadd -r sso && useradd -r -g sso sso\nWORKDIR /sso\nCOPY --from=build /bin/sso-* /bin/\nUSER sso\n"
}