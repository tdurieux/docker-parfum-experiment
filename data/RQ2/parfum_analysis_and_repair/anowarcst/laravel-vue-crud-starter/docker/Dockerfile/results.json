{
  "startTime": 1674246806320,
  "endTime": 1674246807244,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3-fpm\n\n# Copy composer.lock and composer.json\nCOPY composer.lock composer.json /var/www/\n\n# Set working directory\nWORKDIR /var/www\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    mariadb-client \\\n    libpng-dev \\\n    libjpeg62-turbo-dev \\\n    libfreetype6-dev \\\n    libzip-dev \\\n    locales \\\n    zip \\\n    jpegoptim optipng pngquant gifsicle \\\n    vim \\\n    unzip \\\n    git \\\n    curl && rm -rf /var/lib/apt/lists/*;\n\n# Clear cache\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Install extensions\nRUN docker-php-ext-install pdo_mysql mbstring zip exif pcntl\nRUN docker-php-ext-configure gd --with-gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-png-dir=/usr/include/\nRUN docker-php-ext-install gd\n\n# Install Postgre PDO\nRUN apt-get update && apt-get install --no-install-recommends -y libpq-dev && docker-php-ext-install pdo pdo_pgsql && rm -rf /var/lib/apt/lists/*;\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# Add user for laravel application\nRUN groupadd -g 1000 www\nRUN useradd -u 1000 -ms /bin/bash -g www www\n\n# Copy existing application directory contents\nCOPY . /var/www\n\n# Copy existing application directory permissions\nCOPY --chown=www:www . /var/www\n\n# Change current user to www\nUSER www\n\n# Expose port 9000 and start php-fpm server\nEXPOSE 9000\nCMD [\"php-fpm\"]\n"
}