{
  "startTime": 1674250024663,
  "endTime": 1674250025862,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 22,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generated by Neurodocker version 0.4.1\n# Timestamp: 2018-09-04 17:44:34 UTC\n#\n# Thank you for using Neurodocker. If you discover any issues\n# or ways to improve this software, please submit an issue or\n# pull request on our GitHub repository:\n#\n#     https://github.com/kaczmarj/neurodocker\n\nFROM debian:stretch\n\nARG DEBIAN_FRONTEND=\"noninteractive\"\n\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    ND_ENTRYPOINT=\"/neurodocker/startup.sh\"\nRUN export ND_ENTRYPOINT=\"/neurodocker/startup.sh\" \\\n    && apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           apt-utils \\\n           bzip2 \\\n           ca-certificates \\\n           curl \\\n           locales \\\n           unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=\"en_US.UTF-8\" \\\n    && chmod 777 /opt && chmod a+s /opt \\\n    && mkdir -p /neurodocker \\\n    && if [ ! -f \"$ND_ENTRYPOINT\" ]; then \\\n         echo '#!/usr/bin/env bash' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'set -e' >> \"$ND_ENTRYPOINT\" \\\n    &&   echo 'if [ -n \"$1\" ]; then \"$@\"; else /usr/bin/env bash; fi' >> \"$ND_ENTRYPOINT\"; \\\n    fi \\\n    && chmod -R 777 /neurodocker && chmod a+s /neurodocker\n\nENTRYPOINT [\"/neurodocker/startup.sh\"]\n\nENV FSLDIR=\"/opt/fsl-5.0.11\" \\\n    PATH=\"/opt/fsl-5.0.11/bin:$PATH\"\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           bc \\\n           dc \\\n           file \\\n           libfontconfig1 \\\n           libfreetype6 \\\n           libgl1-mesa-dev \\\n           libglu1-mesa-dev \\\n           libgomp1 \\\n           libice6 \\\n           libmng1 \\\n           libxcursor1 \\\n           libxft2 \\\n           libxinerama1 \\\n           libxrandr2 \\\n           libxrender1 \\\n           libxt6 \\\n           wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && echo \"Downloading FSL ...\" \\\n    && mkdir -p /opt/fsl-5.0.11 \\\n    && curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-5.0.11-centos6_64.tar.gz \\\n    | tar -xz -C /opt/fsl-5.0.11 --strip-components 1 \\\n    && sed -i '$iecho Some packages in this Docker container are non-free' $ND_ENTRYPOINT \\\n    && sed -i '$iecho If you are considering commercial use of this container, please consult the relevant license:' $ND_ENTRYPOINT \\\n    && sed -i '$iecho https://fsl.fmrib.ox.ac.uk/fsl/fslwiki/Licence' $ND_ENTRYPOINT \\\n    && sed -i '$isource $FSLDIR/etc/fslconf/fsl.sh' $ND_ENTRYPOINT \\\n    && echo \"Installing FSL conda environment ...\" \\\n    && bash /opt/fsl-5.0.11/etc/fslconf/fslpython_install.sh -f /opt/fsl-5.0.11\n\nENV CONDA_DIR=\"/opt/miniconda-latest\" \\\n    PATH=\"/opt/miniconda-latest/bin:$PATH\"\nRUN export PATH=\"/opt/miniconda-latest/bin:$PATH\" \\\n    && echo \"Downloading Miniconda installer ...\" \\\n    && conda_installer=\"/tmp/miniconda.sh\" \\\n    && curl -fsSL --retry 5 -o \"$conda_installer\" https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && bash \"$conda_installer\" -b -p /opt/miniconda-latest \\\n    && rm -f \"$conda_installer\" \\\n    && conda update -yq -nbase conda \\\n    && conda config --system --prepend channels conda-forge \\\n    && conda config --system --set auto_update_conda false \\\n    && conda config --system --set show_channel_urls true \\\n    && sync && conda clean -tipsy && sync\n#    && conda create -y -q --name dmriprep\n\n# RUN conda install -y -q --name dmriprep \\\n#            -c \\\n#            conda-forge \\\n#            python=3.6 \\\n#            nipype \\\n#            dipy \\\n#            boto3 \\\n#     && sync && conda clean -tipsy && sync\n\n\nENV FREESURFER_HOME=\"/opt/freesurfer-6.0.0\" \\\n    PATH=\"/opt/freesurfer-6.0.0/bin:$PATH\"\n\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           bc \\\n           libgomp1 \\\n           libxmu6 \\\n           libxt6 \\\n           perl \\\n           tcsh \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && echo \"Downloading FreeSurfer ...\" \\\n    && mkdir -p /opt/freesurfer-6.0.0 \\\n    && curl -fsSL --retry 5 ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.0/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.0.tar.gz \\\n    | tar -xz -C /opt/freesurfer-6.0.0 --strip-components 1 \\\n         --exclude='freesurfer/average/mult-comp-cor' \\\n         --exclude='freesurfer/lib/cuda' \\\n         --exclude='freesurfer/lib/qt' \\\n         --exclude='freesurfer/subjects/V1_average' \\\n         --exclude='freesurfer/subjects/bert' \\\n         --exclude='freesurfer/subjects/cvs_avg35' \\\n         --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \\\n         --exclude='freesurfer/subjects/fsaverage3' \\\n         --exclude='freesurfer/subjects/fsaverage4' \\\n         --exclude='freesurfer/subjects/fsaverage5' \\\n         --exclude='freesurfer/subjects/fsaverage6' \\\n         --exclude='freesurfer/subjects/fsaverage_sym' \\\n         --exclude='freesurfer/trctrain' \\\n    && sed -i '$isource \"/opt/freesurfer-6.0.0/SetUpFreeSurfer.sh\"' \"$ND_ENTRYPOINT\"\n\nCOPY ./license.txt /opt/freesurfer-6.0.0/license.txt\n\n#&& sync && conda clean -tipsy && sync\n\nRUN apt-get update && apt-get install --no-install-recommends -y git gcc libopenblas-base && rm -rf /var/lib/apt/lists/*;\nADD environment.yml environment.yml\nRUN conda env create -f environment.yml\n\nENV LD_LIBRARY_PATH=/usr/lib/openblas-base/\n\nRUN sed -i '$isource activate dmriprep' $ND_ENTRYPOINT\n\n\nRUN echo '{ \\\n    \\n  \"pkg_manager\": \"apt\", \\\n    \\n  \"instructions\": [ \\\n    \\n    [ \\\n    \\n      \"base\", \\\n    \\n      \"debian:stretch\" \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"fsl\", \\\n    \\n      { \\\n    \\n        \"version\": \"5.0.11\" \\\n    \\n      } \\\n    \\n    ], \\\n    \\n    [ \\\n    \\n      \"miniconda\", \\\n    \\n      { \\\n    \\n        \"conda_install\": [ \\\n    \\n          \"-c\", \\\n    \\n          \"conda-forge\", \\\n    \\n          \"python=3.6\", \\\n    \\n          \"nipype\", \\\n    \\n          \"dipy\" \\\n    \\n        ], \\\n    \\n        \"create_env\": \"dmriprep\", \\\n    \\n        \"use_env\": \"dmriprep\" \\\n    \\n      } \\\n    \\n    ] \\\n    \\n  ] \\\n    \\n}' > /neurodocker/neurodocker_specs.json\n"
}