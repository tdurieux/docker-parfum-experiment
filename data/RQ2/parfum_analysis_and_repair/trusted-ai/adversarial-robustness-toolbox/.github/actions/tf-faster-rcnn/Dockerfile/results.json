{
  "startTime": 1674250626140,
  "endTime": 1674250627056,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 20,
        "columnStart": 8,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Get base from a tensorflow image\nFROM tensorflow/tensorflow:1.15.5-py3\n\n# Set to install things in non-interactive mode\nENV DEBIAN_FRONTEND noninteractive\n\n# Install system wide softwares\nRUN apt-get update \\\n     && apt-get install --no-install-recommends -y \\\n        libgl1-mesa-glx \\\n        libx11-xcb1 \\\n        git \\\n        gcc \\\n        mono-mcs \\\n        libavcodec-extra \\\n        ffmpeg \\\n        curl \\\n        libsndfile-dev \\\n        libsndfile1 \\\n        wget \\\n        unzip \\\n     && apt-get clean all \\\n     && rm -r /var/lib/apt/lists/*\n\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN bash Miniconda3-latest-Linux-x86_64.sh -b -p /miniconda\nRUN /miniconda/bin/conda install --yes \\\n    astropy \\\n    matplotlib \\\n    pandas \\\n    scikit-learn \\\n    scikit-image\n\n# Install necessary libraries for tensorflow faster rcnn\nRUN mkdir TensorFlow\nRUN cd TensorFlow && git clone https://github.com/tensorflow/models\nRUN cd TensorFlow && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.17.3/protoc-3.17.3-linux-x86_64.zip\nRUN cd TensorFlow && unzip protoc-3.17.3-linux-x86_64.zip -d protobuf\nRUN cd TensorFlow/models/research && /TensorFlow/protobuf/bin/protoc object_detection/protos/*.proto --python_out=.\nRUN cd TensorFlow/models/research && cp object_detection/packages/tf1/setup.py .\nRUN cd TensorFlow/models/research && python -m pip install --use-feature=2020-resolver .\n\nRUN pip install --no-cache-dir tqdm\nRUN pip install --no-cache-dir requests\nRUN pip install --no-cache-dir sklearn\nRUN pip install --no-cache-dir numba==0.50.0\nRUN pip install --no-cache-dir pytest-cov\n"
}