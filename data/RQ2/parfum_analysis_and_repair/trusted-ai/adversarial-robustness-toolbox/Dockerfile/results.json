{
  "startTime": 1674251896090,
  "endTime": 1674251897235,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 35,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM  tensorflow/tensorflow:2.2.0\nRUN pip3 install --no-cache-dir keras==2.3.1\n#### NOTE: comment these two lines if you wish to use the tensorflow 1 version of ART instead ####\n#FROM tensorflow/tensorflow:1.15.2\n#RUN pip3 install keras==2.2.5\n\nRUN pip3 install --no-cache-dir numpy==1.19.1 scipy==1.4.1 matplotlib==3.3.1 scikit-learn==0.22.2 six==1.15.0 Pillow==7.2.0 pytest-cov==2.10.1\nRUN pip3 install --no-cache-dir tqdm==4.48.2 statsmodels==0.11.1 pydub==0.24.1 resampy==0.2.2 ffmpeg-python==0.2.0 cma==3.0.3 mypy==0.770\nRUN pip3 install --no-cache-dir ffmpeg-python==0.2.0\nRUN pip3 install --no-cache-dir pandas==1.1.1\n\n#TODO check if jupyter notebook works\nRUN pip3 install --no-cache-dir jupyter==1.0.0 && pip3 install --no-cache-dir jupyterlab==2.1.0\n# https://stackoverflow.com/questions/49024624/how-to-dockerize-jupyter-lab\n\n# Lingvo ASR dependencies\n# supported versions: (lingvo==0.6.4 with tensorflow-gpu==2.1.0)\n# note: due to conflicts with other TF1/2 version supported by ART, the dependencies are not installed by default:\n# Replace line 1 with: FROM tensorflow/tensorflow:2.1.0\n# Comment other TF related lines and uncomment:\n# RUN pip3 install tensorflow-gpu==2.1.0\n# RUN pip3 install lingvo==0.6.4\n\nRUN pip3 install --no-cache-dir h5py==2.10.0\nRUN pip3 install --no-cache-dir tensorflow-addons==0.11.1\nRUN pip3 install --no-cache-dir mxnet==1.6.0\nRUN pip3 install --no-cache-dir torch==1.5.0 torchvision==0.7.0 -f https://download.pytorch.org/whl/torch_stable.html\nRUN pip3 install --no-cache-dir catboost==0.24\nRUN pip3 install --no-cache-dir GPy==1.9.9\nRUN pip3 install --no-cache-dir lightgbm==2.3.1\nRUN pip3 install --no-cache-dir xgboost==1.1.1\nRUN pip3 install --no-cache-dir kornia==0.3.1\n\nRUN pip3 install --no-cache-dir lief==0.11.4\n\nRUN pip3 install --no-cache-dir pytest==5.4.1 pytest-pep8==1.0.6 pytest-mock==3.2.0 codecov==2.1.8 requests==2.24.0\n\nRUN mkdir /project; mkdir /project/TMP\nVOLUME /project/TMP\nWORKDIR /project\n\n# IMPORTANT: please double check that the dependencies above are up to date with the following requirements file. We currently still run pip install on dependencies within requirements_test.txt in order to keep dependencies in agreement (in the rare cases were someone updated the requirements_test.txt file and forgot to update the dockefile)\nADD . /project/\nRUN pip3 install --no-cache-dir --upgrade -r /project/requirements_test.txt\n\nRUN apt-get update && apt-get -y --no-install-recommends -q install ffmpeg libavcodec-extra && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"You should think about possibly upgrading these outdated packages\"\nRUN pip3 list --outdated\n\nEXPOSE 8888\n\nCMD bash run_tests.sh\n\n#Check the Dockerfile here https://www.fromlatest.io/#/\n\n#NOTE to contributors: When changing/adding packages, please make sure that the packages are consistent with those\n# present within the requirements_test.txt files\n"
}