{
  "startTime": 1674218406322,
  "endTime": 1674218407718,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 97
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.5\n\nENV JAVA_HOME=/usr/lib/jvm/default-jvm/jre\n\nRUN apk upgrade --update-cache; \\\n    apk add openjdk8-jre bash; \\\n    rm -rf /tmp/* /var/cache/apk/*\n\n############################################################# ELK Docker\n\nEXPOSE 9200 9300\n\nENV VERSION 5.2.2\nENV GOSU_VERSION 1.7\n\n# Install Elasticsearch.\nRUN apk add --no-cache --update curl ca-certificates sudo jq gnupg && \\\n  curl -f -Lso /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" && \\\n  curl -f -Lso /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64.asc\" && \\\n  export GNUPGHOME=\"$(mktemp -d)\" && \\\n  gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \\\n  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu && \\\n  rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc && \\\n  chmod +x /usr/local/bin/gosu && \\\n  ( curl -f -Lsj https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-$VERSION.tar.gz | \\\n  gunzip -c - | tar xf -) && \\\n  mv /elasticsearch-$VERSION /elasticsearch && \\\n  rm -rf $(find /elasticsearch | egrep \"(\\.(exe|bat)$|sigar/.*(dll|winnt|x86-linux|solaris|ia64|freebsd|macosx))\") && \\\n  apk del gnupg\n\n# Volume for Elasticsearch data\nVOLUME [\"/data\"]\n\n# Copy configuration\nCOPY config /elasticsearch/config\n\n# Set environment variables defaults\nENV ES_JAVA_OPTS \"-Xms512m -Xmx512m\"\nENV CLUSTER_NAME elasticsearch-default\nENV NODE_MASTER true\nENV NODE_DATA true\nENV HTTP_ENABLE true\nENV NETWORK_HOST _site_\nENV HTTP_CORS_ENABLE true\nENV HTTP_CORS_ALLOW_ORIGIN *\nENV NUMBER_OF_MASTERS 1\nENV NAMESPACE default\nENV DISCOVERY_SERVICE elasticsearch-discovery\n\n# Install Elasticsearch plug-ins\nRUN /elasticsearch/bin/elasticsearch-plugin install x-pack --verbose && /elasticsearch/bin/elasticsearch-plugin install io.fabric8:elasticsearch-cloud-kubernetes:${VERSION} --verbose && /elasticsearch/bin/elasticsearch-plugin install https://github.com/vvanholl/elasticsearch-prometheus-exporter/releases/download/${VERSION}.0/elasticsearch-prometheus-exporter-${VERSION}.0.zip --verbose\n\n# Override elasticsearch.yml config, otherwise plug-in install will fail\nADD config/elasticsearch.yml /elasticsearch/config/elasticsearch.yml\n\n# Copy run script\nCOPY pre-stop-hook.sh run.sh /\n\nCMD [\"/run.sh\"]\n"
}