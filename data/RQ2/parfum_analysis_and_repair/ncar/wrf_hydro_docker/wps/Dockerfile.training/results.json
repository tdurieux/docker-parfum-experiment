{
  "startTime": 1674253477100,
  "endTime": 1674253478470,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 17,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###################################\n# Author: Joe Mills <jmills@ucar.edu>\n# Date:  9.27.2017\n###################################\n#\n# This Dockerfile compiles WRF and WPS from source using the bare-bones requirements for training purposes.\n# See https://ral.ucar.edu/projects/ncar-docker-wrf for more complete WRF and WPS docker builds with additional functionality\n\nFROM wrfhydro/dev:base\n\nMAINTAINER jmills@ucar.edu\nUSER root\n\nRUN mkdir /home/docker/wrf-hydro-training \\\n    && chmod -R 777 /home/docker/wrf-hydro-training\n\n############################\n###WRF and WPS\n\n#Set WRF and WPS version argument\nARG WRFWPS_VERSION=\"3.9\"\n\n#Install WRF AND WPS\nWORKDIR /home/docker/WRF_WPS\n#\n# Download sources for version specified by WRFWPS_VERSION argument\n#\nRUN wget https://www2.mmm.ucar.edu/wrf/src/WRFV${WRFWPS_VERSION}.TAR.gz \\\n\t&& \\\n\tmkdir WRFV${WRFWPS_VERSION} \\\n\t&& tar -zxf WRFV${WRFWPS_VERSION}.TAR.gz \\\n\t&& rm WRFV${WRFWPS_VERSION}.TAR.gz\nRUN wget https://www2.mmm.ucar.edu/wrf/src/WPSV${WRFWPS_VERSION}.TAR.gz \\\n\t&& mkdir WPSV${WRFWPS_VERSION} \\\n\t&& tar -zxf WPSV${WRFWPS_VERSION}.TAR.gz \\\n\t&& rm WPSV${WRFWPS_VERSION}.TAR.gz\n\n# Build WRF first, required for WPS\nWORKDIR /home/docker/WRF_WPS/WRFV3\nRUN printf '32\\n0' | ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./compile em_real\n\n# Build WPS second after WRF is built\nWORKDIR /home/docker/WRF_WPS/WPS\nRUN printf '1' | ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./compile geogrid\n\nRUN rm -r /home/docker/WRF_WPS/WPSV3.9 \\\n\t&& rm -r /home/docker/WRF_WPS/WRFV3.9\n\nRUN chmod -R 777 /home/docker/WRF_WPS\n\n############################\n## Python\nWORKDIR /home/docker\n\n#Install modules\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir numpy cython rasterio h5py netcdf4 f90nml xarray Image\nRUN pip install --no-cache-dir wrf-python\nRUN conda install -y cartopy\n\n############################\n## R\n#install R and libraries\n\nRUN apt-get update \\\n    && apt-get install -yq --no-install-recommends \\\n    r-base \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN wget https://cirrus.ucsd.edu/~pierce/ncdf/ncdf4_1.13.tar.gz \\\n\t&& R CMD INSTALL ncdf4_1.13.tar.gz \\\n\t&& rm ncdf4_1.13.tar.gz\n\nRUN Rscript -e 'install.packages(c(\"optparse\"), repos=\"https://cran.rstudio.com\")'\n\n############################\n# Setup stuff for geogrid script\nCOPY ./namelist.wps_orig /home/docker/WRF_WPS/utilities/namelist.wps_orig\n\nRUN mkdir -p /home/docker/WRF_WPS/WPS/utilities/ \\\n\t&& mv /home/docker/WRF_WPS/WPS/namelist.wps \\\n\t/home/docker/WRF_WPS/WPS/namelist.wps_orig\n\nCOPY make_geogrid_training.py /home/docker/WRF_WPS/utilities/make_geogrid.py\nCOPY wrf_hydro_namelist.wps /home/docker/WRF_WPS/utilities/\n\nCOPY ./create_wrfinput.R /home/docker/WRF_WPS/utilities/create_wrfinput.R\nRUN chmod 777 /home/docker/WRF_WPS/utilities/create_wrfinput.R\n\n# Get geog data from google drive\n## Get download script\nCOPY gdrive_download.py gdrive_download.py\nRUN chmod 777 gdrive_download.py\n\nRUN python gdrive_download.py --file_id 1X71fdaSEJ5GWyNY2MDIy9cC6E7A0kihl --dest_file geog_conus.tar.gz \\\n\t&& tar -xf geog_conus.tar.gz \\\n\t&& mv geog_conus /home/docker/WRF_WPS/utilities/geog_conus \\\n\t&& rm geog_conus.tar.gz\n\nRUN chmod -R 777 /home/docker/WRF_WPS/utilities/geog_conus\nRUN rm gdrive_download.py\n\nRUN conda install nodejs\n\nRUN pip install --no-cache-dir jupyterlab jupyter_contrib_nbextensions ipython matplotlib h5py netcdf4 dask toolz xarray\n\nRUN jupyter labextension install @jupyterlab/toc\n\nCOPY ./jupyter_notebook_config.py /home/docker/.jupyter/\nRUN chmod -R 777 /home/docker/.jupyter\n\nCOPY ./entrypoint_training.sh /entrypoint.sh\nRUN chmod 777 /entrypoint.sh\nRUN chmod -R 777 /home/docker/wrf-hydro-training/\n\nUSER docker\nWORKDIR /home/docker\nENV SHELL=bash\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"interactive\"]\n\n"
}