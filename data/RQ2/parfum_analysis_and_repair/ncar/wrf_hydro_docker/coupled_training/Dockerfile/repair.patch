diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ncar/wrf_hydro_docker/coupled_training/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ncar/wrf_hydro_docker/coupled_training/Dockerfile/repaired.Dockerfile
index aa8d5bd..7a81498 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ncar/wrf_hydro_docker/coupled_training/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ncar/wrf_hydro_docker/coupled_training/Dockerfile/repaired.Dockerfile
@@ -43,11 +43,11 @@ RUN apt-get update \
     valgrind \ 
     vim \
     wget \
-    && rm -rf /var/lib/apt/lists/* 
+    && rm -rf /var/lib/apt/lists/*
 
-RUN locale-gen en_US.UTF-8    
+RUN locale-gen en_US.UTF-8   
 
-ENV LANG en_US.UTF-8 
+ENV LANG en_US.UTF-8
 ENV LC_ALL en_US.UTF-8
 
 ## NetCDF installs
@@ -60,11 +60,11 @@ RUN NETCDF_C_VERSION="4.4.1.1" \
     && wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-${NETCDF_C_VERSION}.tar.gz -P /tmp \
     && tar -xf /tmp/netcdf-${NETCDF_C_VERSION}.tar.gz -C /tmp \
     && cd /tmp/netcdf-${NETCDF_C_VERSION} \
-    && CPPFLAGS=-I${HDF5_DIR}/include LDFLAGS=-L${HDF5_DIR}/lib ./configure --prefix=${LIB_DIR} \
+    && CPPFLAGS=-I${HDF5_DIR}/include LDFLAGS=-L${HDF5_DIR}/lib ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${LIB_DIR} \
     && make \
     && make install \
-    && rm -rf /tmp/netcdf* 
-    
+    && rm -rf /tmp/netcdf* && rm /tmp/netcdf-${NETCDF_C_VERSION}.tar.gz
+
 
 # Install netCDF-Fortran
 ENV LD_LIBRARY_PATH=${LIB_DIR}/lib
@@ -72,20 +72,20 @@ RUN NETCDF_F_VERSION="4.4.4" \
     && wget ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-fortran-${NETCDF_F_VERSION}.tar.gz -P /tmp \
     && tar -xf /tmp/netcdf-fortran-${NETCDF_F_VERSION}.tar.gz -C /tmp \
     && cd /tmp/netcdf-fortran-${NETCDF_F_VERSION} \
-    && CPPFLAGS=-I${LIB_DIR}/include LDFLAGS=-L${LIB_DIR}/lib ./configure --prefix=${LIB_DIR} \
+    && CPPFLAGS=-I${LIB_DIR}/include LDFLAGS=-L${LIB_DIR}/lib ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${LIB_DIR} \
     && make \
     && make install \
-    && rm -rf /tmp/netcdf*
+    && rm -rf /tmp/netcdf* && rm /tmp/netcdf-fortran-${NETCDF_F_VERSION}.tar.gz
 
 # Install jasper to support grib2
 RUN wget https://www2.mmm.ucar.edu/wrf/OnLineTutorial/compile_tutorial/tar_files/jasper-1.900.1.tar.gz -P /tmp \
     && tar -xf /tmp/jasper*tar.gz -C /tmp \
     && cd /tmp/jasper* \
-    && ./configure --prefix=${LIB_DIR} \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${LIB_DIR} \
     && make \
     && make install \
-    && rm -rf /tmp/jasper* 
-    
+    && rm -rf /tmp/jasper* && rm /tmp/jasper*tar.gz
+
 #################################
 ## Create docker user
 RUN useradd -ms /bin/bash docker
@@ -135,13 +135,13 @@ ENV WRF_HYDRO_NUDGING=0
 
 # Build WRF first, required for WPS
 WORKDIR /home/docker/WRF_WPS/WRF
-RUN printf '34\n1\n' | ./configure \
-        && ./compile em_real  
+RUN printf '34\n1\n' | ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+        && ./compile em_real
 
 # Build WPS second after WRF is built
 WORKDIR /home/docker/WRF_WPS/WPS
-RUN printf '1\n' | ./configure \
-        && ./compile 
+RUN printf '1\n' | ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+        && ./compile
 
 RUN chmod -R 777 /home/docker/WRF_WPS
 
@@ -174,18 +174,18 @@ RUN conda install -c conda-forge \
     toolz \
     xrviz \
     xarray \
-    gdown 
+    gdown
 
 RUN conda install -c pyviz hvplot
 
-RUN jupyter labextension install @jupyterlab/toc @pyviz/jupyterlab_pyviz 
+RUN jupyter labextension install @jupyterlab/toc @pyviz/jupyterlab_pyviz
 
-RUN pip install bash_kernel \
+RUN pip install --no-cache-dir bash_kernel \
         && python -m bash_kernel.install
 
 #################################
 RUN mkdir /home/docker/wrf-hydro-training \
-        && chmod -R 777 /home/docker/wrf-hydro-training 
+        && chmod -R 777 /home/docker/wrf-hydro-training
 
 #################################
 #Get the Jupyter configuration script