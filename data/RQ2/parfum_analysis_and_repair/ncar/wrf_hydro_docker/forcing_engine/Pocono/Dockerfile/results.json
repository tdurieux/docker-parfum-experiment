{
  "startTime": 1674254875717,
  "endTime": 1674254876411,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#############################################\n# Image name: wrfhydro/nwm-training:v2.0\n# Author: Logan Karsten <karsten@ucar.edu>\n# Date: 2019-05-02\n#############################################\n\nFROM wrfhydro/dev:base as build\n\nMAINTAINER karsten@ucar.edu\nUSER root\n\nRUN mkdir /home/docker/wrf-hydro-training && chown docker:docker /home/docker/wrf-hydro-training\n\n# Install necessary Python libraries\nRUN pip install --no-cache-dir mpi4py h5py netcdf4 numpy gdown jupyterlab jupyter_contrib_nbextensions\n\n# Place MPI libraries into the LD path.\nRUN export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\nRUN export LIBRARY_PATH=/usr/local/lib\nRUN export INCLUDE_PATH=/usr/local/include\n\n# Download and install ESMF built against the\n# wrfhydro/dev MPICH\nRUN mkdir /home/docker/.esmf-src \\\n    && cd /home/docker/.esmf-src \\\n    && wget https://www.earthsystemmodeling.org/esmf_releases/public/ESMF_7_1_0r/esmf_7_1_0r_src.tar.gz \\\n    && tar xfz esmf_7_1_0r_src.tar.gz \\\n    && cd esmf \\\n    && export ESMF_DIR=$PWD \\\n    && export ESMF_COMM=mpich3 \\\n    && make \\\n    && make install && rm esmf_7_1_0r_src.tar.gz\n\n# Install the Python ESMPy API to ESMF\nRUN cd /home/docker/.esmf-src/esmf/src/addon/ESMPy \\\n    && python setup.py build --ESMFMKFILE=/home/docker/.esmf-src/esmf/DEFAULTINSTALLDIR/lib/libO/Linux.gfortran.64.mpich3.default/esmf.mk install\n\n# Download and install wgrib2\nRUN cd /home/docker \\\n    && wget ftp://ftp.cpc.ncep.noaa.gov/wd51we/wgrib2/wgrib2.tgz \\\n    && tar xfz wgrib2.tgz \\\n    && rm wgrib2.tgz \\\n    && cd /home/docker/grib2 \\\n    && export CC=gcc \\\n    && export FC=gfortran \\\n    && make \\\n    && make lib\n\nENV PATH=/home/docker/wgrib2:${PATH}\n\n## SWITCH TO USER \"DOCKER\"\n\nUSER docker\nWORKDIR /home/docker\n\n# Set the proper environmental paths\nRUN export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\nENV PATH=/home/docker/grib2/wgrib2:${PATH}\n\nRUN mkdir /home/docker/wrf-hydro-training/forcing_engine\n\n# Download the test-case data, including input forcing GRIB2 files\n# and input domain files used for the forcing engine.\nRUN cd /home/docker/wrf-hydro-training/forcing_engine \\\n    && gdown https://drive.google.com/uc?id=1CvcNPNBa5vjbFR3lNbWwsfdnTy62RuIa \\\n    && tar -xf RFC_Training2019_FE.tar \\\n    && rm RFC_Training2019_FE.tar\n\n# Download the training repo.\nRUN cd /home/docker \\\n     && git clone --single-branch --branch RFC_Training https://github.com/NCAR/wrf_hydro_training \\\n     && mv /home/docker/wrf_hydro_training/lessons/forcing_engine /home/docker/wrf-hydro-training/lessons \\\n     && rm -rf /home/docker/wrf_hydro_training/\n\n# Download the WRF-Hydro forcing engine code.\nRUN cd /home/docker/wrf-hydro-training/forcing_engine/Pocono_Forcing \\\n    && git clone https://github.com/logankarsten/WrfHydroForcing\n\nFROM wrfhydro/dev:base\n\nUSER docker\nWORKDIR /home/docker\n\nENV PATH=/home/docker/grib2/wgrib2:${PATH}\n\nCOPY --from=build --chown=docker:docker /home/docker /home/docker\nCOPY --chown=docker:docker ./entrypoint.sh /.\nCOPY --chown=docker:docker ./jupyter_notebook_config.py /home/docker/.jupyter/\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"interactive\"]\n"
}