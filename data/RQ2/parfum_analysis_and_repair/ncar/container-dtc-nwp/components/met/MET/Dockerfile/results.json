{
  "startTime": 1674216621290,
  "endTime": 1674216622834,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dtcenter/base_image:latest\nMAINTAINER John Halley Gotway <johnhg@ucar.edu>\n\n#\n# This Dockerfile compiles MET from source during \"docker build\" step\n#\n\nENV MET_GIT_NAME    v10.0.0\nENV MET_GIT_URL     https://github.com/dtcenter/MET.git\nENV MET_DEVELOPMENT true\n\n#\n# Define the compilers.\n#\nENV CC  /opt/rh/devtoolset-8/root/usr/bin/gcc\nENV FC  /opt/rh/devtoolset-8/root/usr/bin/gfortran\nENV CXX /opt/rh/devtoolset-8/root/usr/bin/g++\nENV F77 /opt/rh/devtoolset-8/root/usr/bin/gfortran\n\nRUN source /opt/rh/devtoolset-8/enable\n\n#\n# Define package URL's.\n#\nENV GSFONT_URL https://dtcenter.ucar.edu/dfiles/code/METplus/MET/docker_data/ghostscript-fonts-std-8.11.tar.gz\n\n#\n# Install the required packages.\n#\nUSER root\nRUN yum -y update \\\n && yum -y install file gcc gcc-gfortran gcc-c++ glibc.i686 libgcc.i686 \\\n                   libpng-devel jasper jasper-devel zlib zlib-devel \\\n                   cairo-devel freetype-devel epel-release \\\n                   hostname m4 make tar tcsh ksh time wget which \\\n                   flex flex-devel bison bison-devel unzip \\\n && yum -y install git g2clib-devel hdf5-devel.x86_64 gsl-devel \\\n && yum -y install gv ncview wgrib wgrib2 ImageMagick ps2pdf \\\n && yum -y install python3 python3-devel python3-pip \\\n && pip3 install --no-cache-dir --upgrade pip \\\n && python3 -m pip install numpy xarray && rm -rf /var/cache/yum\n\n#\n# Setup the environment for interactive bash/csh container shells.\n#\nENV MET_BASE        /comsoftware/met/share/met/\nENV MET_FONT_DIR    /comsoftware/met/external_libs/fonts\nENV RSCRIPTS_BASE   /usr/local/share/comsoftware/met/Rscripts\n#ENV LD_LIBRARY_PATH /usr/local/lib\n\n#\n# Download GhostScript fonts\n#\nUSER comuser\nRUN umask 0002 \\\n && echo \"Downloading GhostScript fonts from ${GSFONT_URL}\" \\\n && curl -f -SL ${GSFONT_URL} | tar zxC /comsoftware/libs\n\n#\n# Download and compile MET source code\n#\nRUN umask 0002 \\\n && echo \"Checking out MET ${MET_GIT_NAME} from ${MET_GIT_URL}\" \\\n && git clone ${MET_GIT_URL} /comsoftware/met/met-${MET_GIT_NAME} \\\n && cd /comsoftware/met/met-${MET_GIT_NAME}/met \\\n && git checkout ${MET_GIT_NAME} \\\n && LOG_FILE=/comsoftware/met/met-${MET_GIT_NAME}/met/configure.log \\\n && echo \"Running bootstrap\" \\\n && ./bootstrap \\\n && echo \"Configuring met-${MET_GIT_NAME} and writing log file ${LOG_FILE}\" \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/comsoftware/met/ --enable-grib2 --enable-mode_graphics --enable-modis --enable-lidar2nc --enable-python \\\n    MET_NETCDF=/comsoftware/libs/netcdf \\\n    MET_HDF=/comsoftware/libs/HDF4.2r3 \\\n    MET_HDFEOS=/comsoftware/libs/hdfeos \\\n    MET_FREETYPEINC=/usr/include/freetype2 MET_FREETYPELIB=/usr/lib \\\n    MET_CAIROINC=/usr/include/cairo MET_CAIROLIB=/usr/lib \\\n    MET_PYTHON_CC='-I/usr/include/python3.6m' MET_PYTHON_LD='-lpython3.6m' > ${LOG_FILE} \\\n && LOG_FILE=/comsoftware/met/met-${MET_GIT_NAME}/met/make_install.log \\\n && echo \"Compiling met-${MET_GIT_NAME} and writing log file ${LOG_FILE}\" \\\n && make install > ${LOG_FILE}\n# && LOG_FILE=/comsoftware/met/met-${MET_GIT_NAME}/met/make_test.log \\\n# && echo \"Testing met-${MET_GIT_NAME} and writing log file ${LOG_FILE}\" \\\n# && make test > ${LOG_FILE} 2>&1\n\n#\n# Set working directory\n#\nWORKDIR /comsoftware/met\n\nUSER root\n"
}