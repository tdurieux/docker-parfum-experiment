{
  "startTime": 1674215479539,
  "endTime": 1674215480006,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=dtcenter/base_image:latest\nFROM $BASE_IMAGE\nMAINTAINER Michael Kavulich <kavulich@ucar.edu> or Jamie Wolff <jwolff@ucar.edu> or Michelle Harrold <harrold@ucar.edu>\n#\n# This Dockerfile compiles WRF from source during \"docker build\" step\nUSER comuser\nRUN umask 0002 \\\n && mkdir /comsoftware/wrf\nWORKDIR /comsoftware/wrf\nENV WRF_VERSION 4.3\nENV WPS_VERSION 4.3\n#\n# Download original sources\n#\nRUN umask 0002 \\\n && curl -f -SL https://github.com/wrf-model/WRF/archive/v${WRF_VERSION}.tar.gz | tar zxC /comsoftware/wrf \\\n && curl -f -SL https://github.com/wrf-model/WPS/archive/v${WPS_VERSION}.tar.gz | tar zxC /comsoftware/wrf\n#\n# Set environment for interactive container shells\n#\nRUN echo export LDFLAGS=\"-lm\" >> /home/.bashrc \\\n && echo export LD_LIBRARY_PATH=\"/usr/lib64/openmpi/lib:/comsoftware/libs/netcdf/lib\" >> /home/.bashrc \\\n && echo export PATH=\"/usr/lib64/openmpi/bin:$PATH\" >> /home/.bashrc \\\n && echo setenv LDFLAGS \"-lm\" >> /home/.cshrc \\\n && echo setenv LD_LIBRARY_PATH \"/usr/lib64/openmpi/lib:/comsoftware/libs/netcdf/lib\" >> /home/.cshrc \\\n && echo setenv PATH \"/usr/lib64/openmpi/bin:$PATH\" >> /home/.cshrc\n#\n# Build WRF first\n# input 34 and 1 to configure script alternative line = && echo -e \"34\\r1\\r\" | ./configure\n#\nRUN umask 0002 \\ \n && export NETCDF=/comsoftware/libs/netcdf/ \\\n && export JASPERINC=/usr/include/jasper/ \\\n && export JASPERLIB=/usr/lib64/ \\\n && export J='-j 4' \\\n && cd ./WRF-${WRF_VERSION} \\\n && ./configure <<< $'34\\r1\\r' \\\n && sed -i -e '/^DM_CC/ s/$/ -DMPI2_SUPPORT/' ./configure.wrf \\\n && sed -i '/BUILD_RRTMG_FAST/d' ./configure.wrf \\\n && /bin/csh ./compile em_real > compile_wrf_arw_opt34.1.log 2>&1\n# Check build success\nRUN ls /comsoftware/wrf/WRF-${WRF_VERSION}/main/real.exe /comsoftware/wrf/WRF-${WRF_VERSION}/main/wrf.exe\n#\n# Build WPS second\n#\n# input 1 to configure script (gfortran serial build)\nRUN umask 0002 \\\n && ln -sf WRF-${WRF_VERSION} WRF \\\n && cd ./WPS-${WPS_VERSION} \\\n && echo export NETCDF=/comsoftware/libs/netcdf/ \\\n && export JASPERINC=/usr/include/jasper/ \\\n && export JASPERLIB=/usr/lib64/ \\\n && ./configure <<< $'1\\r' \\\n && sed -i -e 's/-L$(NETCDF)\\/lib/-L$(NETCDF)\\/lib -lnetcdff /' ./configure.wps \\\n && /bin/csh ./compile > compile_wps.log 2>&1\n# Check build success\nRUN ls /comsoftware/wrf/WPS-${WPS_VERSION}/metgrid.exe /comsoftware/wrf/WPS-${WPS_VERSION}/ungrib.exe /comsoftware/wrf/WPS-${WPS_VERSION}/geogrid.exe\n#\nENV LD_LIBRARY_PATH /usr/lib64/openmpi/lib:/comsoftware/libs/netcdf/lib\nENV PATH  /usr/lib64/openmpi/bin:$PATH\n#\n#\nUSER root\n"
}