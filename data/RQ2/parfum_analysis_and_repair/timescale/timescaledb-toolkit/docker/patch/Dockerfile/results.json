{
  "startTime": 1674255024876,
  "endTime": 1674255025727,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM timescale/timescaledb-ha:pg13-latest AS toolkit-tools\n\nUSER root\n\nRUN mkdir rust\n\nRUN set -ex \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        clang \\\n        gcc \\\n        git \\\n        libssl-dev \\\n        pkg-config \\\n        postgresql-server-dev-13 \\\n        make && rm -rf /var/lib/apt/lists/*;\n\nENV CARGO_HOME=/build/.cargo\nENV RUSTUP_HOME=/build/.rustup\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y --profile=minimal -c rustfmt\nENV PATH=\"/build/.cargo/bin:${PATH}\"\n\n#install pgx\nRUN set -ex \\\n    && rm -rf \"${CARGO_HOME}/registry\" \"${CARGO_HOME}/git\" \\\n    && chown postgres:postgres -R \"${CARGO_HOME}\" \\\n    && cargo install cargo-pgx --version '^0.2' \\\n    # initdb fails as root so generate the correct config ourselves\n    # && cargo pgx init --pg13 /usr/lib/postgresql/13/bin/pg_config\n    && mkdir -p /root/.pgx \\\n    && printf '[configs]\\npg13=\"/usr/lib/postgresql/13/bin/pg_config\"\\n' > /root/.pgx/config.toml\n\n\nCOPY . /rust/timescaledb-toolkit\n\nRUN set -ex \\\n    && chown -R postgres:postgres /rust \\\n    && chown postgres:postgres -R \"${CARGO_HOME}\" \\\n    && chown postgres:postgres -R /usr/share/postgresql \\\n    && chown postgres:postgres -R /usr/lib/postgresql \\\n    && cd /rust/timescaledb-toolkit \\\n        && cd extension \\\n        && cargo pgx install --release \\\n        && cargo run --manifest-path ../tools/post-install/Cargo.toml -- pg_config\n\n# COPY over the new files to the image. Done as a seperate stage so we don't\n# ship the build tools.\nFROM timescale/timescaledb-ha:pg13-latest AS nightly\n\nCOPY --from=toolkit-tools /usr/share/postgresql /usr/share/postgresql\nCOPY --from=toolkit-tools /usr/lib/postgresql /usr/lib/postgresql\n"
}