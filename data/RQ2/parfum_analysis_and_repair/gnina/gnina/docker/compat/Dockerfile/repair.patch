diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gnina/gnina/docker/compat/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gnina/gnina/docker/compat/Dockerfile/repaired.Dockerfile
index a37bed9..209e83f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gnina/gnina/docker/compat/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gnina/gnina/docker/compat/Dockerfile/repaired.Dockerfile
@@ -5,33 +5,33 @@ FROM nvidia/cuda:11.6.2-cudnn8-devel-centos7
 
 RUN yum update -y
 
-# get packages 
+# get packages
 WORKDIR /root
 RUN yum -y install openssl-devel bzip2-devel wget make xz git epel-release \
     bzip2 glibc-static dh-autoreconf curl-devel expat-devel gettext-devel \
     perl-devel zlib-devel hdf5-devel atlas-devel atlas-static \
-    lapack-devel lapack-static   python3
+    lapack-devel lapack-static python3 && rm -rf /var/cache/yum
 RUN yum -y install boost169-devel boost169-test boost169-regex \
-    boost169-python3-devel hdf5-devel  dh-autoreconf hdf5-static boost169-static zlib-static openblas-static
-    
+    boost169-python3-devel hdf5-devel dh-autoreconf hdf5-static boost169-static zlib-static openblas-static && rm -rf /var/cache/yum
+
 # build compatible gcc
-# download and extract source 
+# download and extract source
 ENV gcc_version "6.2.0"
 RUN wget --no-verbose \
-        http://ftpmirror.gnu.org/gcc/gcc-${gcc_version}/gcc-${gcc_version}.tar.bz2 && \
-    tar xf gcc-${gcc_version}.tar.bz2
+        https://ftpmirror.gnu.org/gcc/gcc-${gcc_version}/gcc-${gcc_version}.tar.bz2 && \
+    tar xf gcc-${gcc_version}.tar.bz2 && rm gcc-${gcc_version}.tar.bz2
 RUN wget --no-verbose \
         https://gmplib.org/download/gmp/gmp-6.1.0.tar.xz && \
     tar xf gmp-6.1.0.tar.xz && \
-    mv gmp-6.1.0 gcc-${gcc_version}/gmp
+    mv gmp-6.1.0 gcc-${gcc_version}/gmp && rm gmp-6.1.0.tar.xz
 RUN wget --no-verbose \
         ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz && \
     tar xf mpc-1.0.3.tar.gz && \
-    mv mpc-1.0.3 gcc-${gcc_version}/mpc
+    mv mpc-1.0.3 gcc-${gcc_version}/mpc && rm mpc-1.0.3.tar.gz
 RUN wget --no-verbose \
 				https://ftp.gnu.org/gnu/mpfr/mpfr-3.1.4.tar.xz && \
     tar xf mpfr-3.1.4.tar.xz && \
-    mv mpfr-3.1.4 gcc-${gcc_version}/mpfr
+    mv mpfr-3.1.4 gcc-${gcc_version}/mpfr && rm mpfr-3.1.4.tar.xz
 
 # compile and install gcc
 RUN mkdir gcc-${gcc_version}_build && \
@@ -58,7 +58,7 @@ RUN echo "/usr/local/lib64" > usrLocalLib64.conf && \
     ldconfig
 
 # clean out all the garbage
-RUN rm -rf ~/${gcc_release} ~/{gcc_release}_build 
+RUN rm -rf ~/${gcc_release} ~/{gcc_release}_build
 
 # symlink so nvcc uses the "right" gcc
 RUN ln -s /usr/bin/gcc /usr/local/cuda/bin/gcc
@@ -67,13 +67,13 @@ RUN ln -s /usr/bin/g++ /usr/local/cuda/bin/g++
 
 # set up acceptable cmake version
 RUN wget https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-linux-x86_64.tar.gz
-RUN tar xzf cmake-3.23.2-linux-x86_64.tar.gz
+RUN tar xzf cmake-3.23.2-linux-x86_64.tar.gz && rm cmake-3.23.2-linux-x86_64.tar.gz
 RUN cp cmake-3.23.2-linux-x86_64/bin/* /usr/local/bin
 RUN cp -r cmake-3.23.2-linux-x86_64/share/cmake-3.23 /usr/local/share/
 
 # set up eigen
 RUN wget https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz
-RUN tar xzf eigen-3.3.7.tar.gz
+RUN tar xzf eigen-3.3.7.tar.gz && rm eigen-3.3.7.tar.gz
 RUN cd eigen-3.3.7; mkdir build; cd build; cmake ..; make install
 
 # build and install openbabel
@@ -90,14 +90,14 @@ RUN git clone https://github.com/openbabel/openbabel.git; \
 RUN git clone https://github.com/git/git.git; \
     cd git; git checkout v2.25.4; \
     make prefix=/usr all; make prefix=/usr install
-    
+
 # build compatible boost with python 3 lib
 RUN wget https://downloads.sourceforge.net/project/boost/boost/1.74.0/boost_1_74_0.tar.gz; \
-    tar -xzf boost_1_74_0.tar.gz; \
+    tar -xzf boost_1_74_0.tar.gz; rm boost_1_74_0.tar.gz \
     cd boost_1_74_0; ./bootstrap.sh --with-python=python3.6; ./b2 cxxflags="-std=c++14 -fPIC" -a -j4 install
-        
-# install molgrid 
-RUN yum install -y python3-devel
+
+# install molgrid
+RUN yum install -y python3-devel && rm -rf /var/cache/yum
 RUN python3 -m pip install --upgrade pip
 RUN python3 -m pip install numpy pytest pyquaternion -U
 # build libmolgrid
@@ -109,8 +109,8 @@ RUN git clone https://github.com/gnina/libmolgrid.git; \
     cmake -DCUDA_ARCHITECTURES=all -DBoost_INCLUDE_DIR=/usr/include/boost169/ -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ ..; \
     make -j8; make install; \
     cmake -DCUDA_ARCHITECTURES=all -DBoost_INCLUDE_DIR=/usr/include/boost169/ -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ -DBUILD_STATIC=ON -DBoost_USE_STATIC_LIBS=ON -DBUILD_SHARED=OFF ..; \
-    make -j8 libmolgrid_static; cp lib64/libmolgrid.a /usr/local/lib/libmolgrid.a 
-    
+    make -j8 libmolgrid_static; cp lib64/libmolgrid.a /usr/local/lib/libmolgrid.a
+
 RUN git clone https://github.com/gflags/gflags.git; \
     cd gflags; git checkout v2.2.2; \
     mkdir build; cd build; \
@@ -122,20 +122,20 @@ RUN git clone https://github.com/google/glog.git; \
     mkdir build; cd build; \
     cmake ..  -DHAVE_PWD_H=0 ; make -j8; \
     make install
-    
+
 RUN git clone https://github.com/protocolbuffers/protobuf.git; \
     cd protobuf; git checkout v3.6.1.3; \
     git submodule update --init --recursive; \
-    ./autogen.sh; ./configure; \
+    ./autogen.sh; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; \
     make -j8; \
     make install
-    
+
 RUN git clone  https://github.com/erget/libaec.git; \
     cd libaec; git checkout v0.3.4; \
     mkdir build; cd build; \
     cmake -DBUILD_SHARED_LIBS=OFF ..; make -j8; \
-    make install    
-                
+    make install   
+
 RUN git clone https://github.com/gnina/gnina.git; \
     cd gnina; \
     git checkout v1.0.2; \
@@ -144,8 +144,8 @@ RUN git clone https://github.com/gnina/gnina.git; \
     cmake .. -DAtlas_CBLAS_LIBRARY=/usr/lib64/libopenblas.a  -DBUILD_SHARED_LIBS=OFF -DBoost_INCLUDE_DIR=/usr/include/boost169/ \
     -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ -DHAVE_PYTHON=0 -DBUILD_python=OFF \
     -DLIBMOLGRID_LIBRARY=/usr/local/lib/libmolgrid.a -DCUDA_ARCH_NAME=All -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-11; \
-    make -j8 gnina; 
-    
+    make -j8 gnina;
+
 #make "mostly static" executable
 RUN cd gnina/build/gninasrc; \
 /usr/bin/c++  -Wno-deprecated-declarations -Wno-unknown-pragmas -O3 -DNDEBUG   CMakeFiles/gnina.dir/main/main.cpp.o CMakeFiles/gnina.dir/version.cpp.o CMakeFiles/gnina.dir/lib/atom_constants.cpp.o CMakeFiles/gnina.dir/lib/bfgs.cu.o CMakeFiles/gnina.dir/lib/box.cpp.o CMakeFiles/gnina.dir/lib/builtinscoring.cpp.o CMakeFiles/gnina.dir/lib/cache.cpp.o CMakeFiles/gnina.dir/lib/cache_gpu.cpp.o CMakeFiles/gnina.dir/lib/cnn_scorer.cpp.o CMakeFiles/gnina.dir/lib/cnn_data.cpp.o CMakeFiles/gnina.dir/lib/coords.cpp.o CMakeFiles/gnina.dir/lib/custom_terms.cpp.o CMakeFiles/gnina.dir/lib/device_buffer.cpp.o CMakeFiles/gnina.dir/lib/everything.cpp.o CMakeFiles/gnina.dir/lib/flexinfo.cpp.o CMakeFiles/gnina.dir/lib/GninaConverter.cpp.o CMakeFiles/gnina.dir/lib/grid.cpp.o CMakeFiles/gnina.dir/lib/grid_gpu.cu.o CMakeFiles/gnina.dir/lib/model.cpp.o CMakeFiles/gnina.dir/lib/molgetter.cpp.o CMakeFiles/gnina.dir/lib/monte_carlo.cpp.o CMakeFiles/gnina.dir/lib/mutate.cpp.o CMakeFiles/gnina.dir/lib/my_pid.cpp.o CMakeFiles/gnina.dir/lib/naive_non_cache.cpp.o CMakeFiles/gnina.dir/lib/non_cache.cpp.o CMakeFiles/gnina.dir/lib/non_cache_cnn.cpp.o CMakeFiles/gnina.dir/lib/obmolopener.cpp.o CMakeFiles/gnina.dir/lib/parallel_mc.cpp.o CMakeFiles/gnina.dir/lib/parallel_progress.cpp.o CMakeFiles/gnina.dir/lib/parse_pdbqt.cpp.o CMakeFiles/gnina.dir/lib/pdb.cpp.o CMakeFiles/gnina.dir/lib/PDBQTUtilities.cpp.o CMakeFiles/gnina.dir/lib/quasi_newton.cpp.o CMakeFiles/gnina.dir/lib/quaternion.cu.o CMakeFiles/gnina.dir/lib/random.cpp.o CMakeFiles/gnina.dir/lib/result_info.cpp.o CMakeFiles/gnina.dir/lib/ssd.cpp.o CMakeFiles/gnina.dir/lib/szv_grid.cpp.o CMakeFiles/gnina.dir/lib/terms.cpp.o CMakeFiles/gnina.dir/lib/weighted_terms.cpp.o CMakeFiles/gnina.dir/lib/conf.cpp.o CMakeFiles/gnina.dir/lib/conf_gpu.cu.o CMakeFiles/gnina.dir/lib/gpucode.cu.o CMakeFiles/gnina.dir/lib/model.cu.o CMakeFiles/gnina.dir/lib/non_cache_gpu.cu.o CMakeFiles/gnina.dir/lib/precalculate_gpu.cu.o CMakeFiles/gnina.dir/lib/tree_gpu.cu.o CMakeFiles/gnina.dir/lib/user_opts.cpp.o CMakeFiles/gnina.dir/cmake_device_link.o  -o ../bin/gnina  \
@@ -199,7 +199,7 @@ RUN cd gnina/build/gninasrc; \
   /usr/local/cuda/lib64/libcudart_static.a  \
    /usr/local/cuda/targets/x86_64-linux/lib/libcudadevrt.a \
    /usr/local/cuda/lib64/libcublasLt_static.a \
-     -lm -lpthread -ldl -lrt 
+     -lm -lpthread -ldl -lrt
 
 #./bin/gnina -r ../test/gnina/data/184l_rec.pdb -l ../test/gnina/data/184l_lig.sdf --autobox_ligand ../test/gnina/data/184l_lig.sdf --seed 0