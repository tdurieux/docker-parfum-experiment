{
  "startTime": 1674254999643,
  "endTime": 1674255001809,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 18,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Maximum Compatibility Build - DO NOT USE FOR PRODUCTION\n# Build off of centos7 (ubi 7 didn't have static libc)\n\nFROM nvidia/cuda:11.6.2-cudnn8-devel-centos7\n\nRUN yum update -y\n\n# get packages\nWORKDIR /root\nRUN yum -y install openssl-devel bzip2-devel wget make xz git epel-release \\\n    bzip2 glibc-static dh-autoreconf curl-devel expat-devel gettext-devel \\\n    perl-devel zlib-devel hdf5-devel atlas-devel atlas-static \\\n    lapack-devel lapack-static python3 && rm -rf /var/cache/yum\nRUN yum -y install boost169-devel boost169-test boost169-regex \\\n    boost169-python3-devel hdf5-devel dh-autoreconf hdf5-static boost169-static zlib-static openblas-static && rm -rf /var/cache/yum\n\n# build compatible gcc\n# download and extract source\nENV gcc_version \"6.2.0\"\nRUN wget --no-verbose \\\n        https://ftpmirror.gnu.org/gcc/gcc-${gcc_version}/gcc-${gcc_version}.tar.bz2 && \\\n    tar xf gcc-${gcc_version}.tar.bz2 && rm gcc-${gcc_version}.tar.bz2\nRUN wget --no-verbose \\\n        https://gmplib.org/download/gmp/gmp-6.1.0.tar.xz && \\\n    tar xf gmp-6.1.0.tar.xz && \\\n    mv gmp-6.1.0 gcc-${gcc_version}/gmp && rm gmp-6.1.0.tar.xz\nRUN wget --no-verbose \\\n        ftp://ftp.gnu.org/gnu/mpc/mpc-1.0.3.tar.gz && \\\n    tar xf mpc-1.0.3.tar.gz && \\\n    mv mpc-1.0.3 gcc-${gcc_version}/mpc && rm mpc-1.0.3.tar.gz\nRUN wget --no-verbose \\\n\t\t\t\thttps://ftp.gnu.org/gnu/mpfr/mpfr-3.1.4.tar.xz && \\\n    tar xf mpfr-3.1.4.tar.xz && \\\n    mv mpfr-3.1.4 gcc-${gcc_version}/mpfr && rm mpfr-3.1.4.tar.xz\n\n# compile and install gcc\nRUN mkdir gcc-${gcc_version}_build && \\\n    cd gcc-${gcc_version}_build && \\\n    ../gcc-${gcc_version}/configure \\\n        --prefix=/usr \\\n        --disable-multilib \\\n        --enable-languages=c,c++ \\\n        --enable-libstdcxx-threads \\\n        --enable-libstdcxx-time \\\n        --enable-shared \\\n        --enable-__cxa_atexit \\\n        --disable-libunwind-exceptions \\\n        --disable-libada \\\n        --host x86_64-redhat-linux-gnu \\\n        --build x86_64-redhat-linux-gnu \\\n        --with-default-libstdcxx-abi=gcc4-compatible\nRUN cd gcc-${gcc_version}_build && make -j8\nRUN cd gcc-${gcc_version}_build && make install\n\n# register new libraries with `ldconfig`\nRUN echo \"/usr/local/lib64\" > usrLocalLib64.conf && \\\n    mv usrLocalLib64.conf /etc/ld.so.conf.d/ && \\\n    ldconfig\n\n# clean out all the garbage\nRUN rm -rf ~/${gcc_release} ~/{gcc_release}_build\n\n# symlink so nvcc uses the \"right\" gcc\nRUN ln -s /usr/bin/gcc /usr/local/cuda/bin/gcc\nRUN ln -s /usr/bin/g++ /usr/local/cuda/bin/g++\n\n\n# set up acceptable cmake version\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-linux-x86_64.tar.gz\nRUN tar xzf cmake-3.23.2-linux-x86_64.tar.gz && rm cmake-3.23.2-linux-x86_64.tar.gz\nRUN cp cmake-3.23.2-linux-x86_64/bin/* /usr/local/bin\nRUN cp -r cmake-3.23.2-linux-x86_64/share/cmake-3.23 /usr/local/share/\n\n# set up eigen\nRUN wget https://gitlab.com/libeigen/eigen/-/archive/3.3.7/eigen-3.3.7.tar.gz\nRUN tar xzf eigen-3.3.7.tar.gz && rm eigen-3.3.7.tar.gz\nRUN cd eigen-3.3.7; mkdir build; cd build; cmake ..; make install\n\n# build and install openbabel\n# Need to be new enough to include this fix: https://github.com/openbabel/openbabel/pull/2328\n# todo: change to release version once a release exists with this fixes\nRUN git clone https://github.com/openbabel/openbabel.git; \\\n    cd openbabel; \\\n    git checkout openbabel-3-1-1; \\\n    mkdir build; cd build;  \\\n    cmake -DPTHREAD_LIBRARY=/lib64/libpthread.a  -DBUILD_SHARED=OFF -DPYTHON_BINDINGS=OFF  -DWITH_COORDGEN=0 -DWITH_MAEPARSER=0 -DRUN_SWIG=OFF -DCMAKE_CXX_FLAGS=\"-std=c++14 -fPIC\" -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc ..;  \\\n    make -j8; make install\n\n#for versioning need -C option of git\nRUN git clone https://github.com/git/git.git; \\\n    cd git; git checkout v2.25.4; \\\n    make prefix=/usr all; make prefix=/usr install\n\n# build compatible boost with python 3 lib\nRUN wget https://downloads.sourceforge.net/project/boost/boost/1.74.0/boost_1_74_0.tar.gz; \\\n    tar -xzf boost_1_74_0.tar.gz; rm boost_1_74_0.tar.gz \\\n    cd boost_1_74_0; ./bootstrap.sh --with-python=python3.6; ./b2 cxxflags=\"-std=c++14 -fPIC\" -a -j4 install\n\n# install molgrid\nRUN yum install -y python3-devel && rm -rf /var/cache/yum\nRUN python3 -m pip install --upgrade pip\nRUN python3 -m pip install numpy pytest pyquaternion -U\n# build libmolgrid\nRUN python3.6 -m pip install --upgrade pip\nRUN python3.6 -m pip install numpy pytest pyquaternion auditwheel twine\nRUN git clone https://github.com/gnina/libmolgrid.git; \\\n    cd libmolgrid; \\\n    mkdir build; cd build; \\\n    cmake -DCUDA_ARCHITECTURES=all -DBoost_INCLUDE_DIR=/usr/include/boost169/ -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ ..; \\\n    make -j8; make install; \\\n    cmake -DCUDA_ARCHITECTURES=all -DBoost_INCLUDE_DIR=/usr/include/boost169/ -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ -DBUILD_STATIC=ON -DBoost_USE_STATIC_LIBS=ON -DBUILD_SHARED=OFF ..; \\\n    make -j8 libmolgrid_static; cp lib64/libmolgrid.a /usr/local/lib/libmolgrid.a\n\nRUN git clone https://github.com/gflags/gflags.git; \\\n    cd gflags; git checkout v2.2.2; \\\n    mkdir build; cd build; \\\n    cmake ..; make -j8; \\\n    make install\n\nRUN git clone https://github.com/google/glog.git; \\\n    cd glog; git checkout v0.4.0; \\\n    mkdir build; cd build; \\\n    cmake ..  -DHAVE_PWD_H=0 ; make -j8; \\\n    make install\n\nRUN git clone https://github.com/protocolbuffers/protobuf.git; \\\n    cd protobuf; git checkout v3.6.1.3; \\\n    git submodule update --init --recursive; \\\n    ./autogen.sh; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n    make -j8; \\\n    make install\n\nRUN git clone  https://github.com/erget/libaec.git; \\\n    cd libaec; git checkout v0.3.4; \\\n    mkdir build; cd build; \\\n    cmake -DBUILD_SHARED_LIBS=OFF ..; make -j8; \\\n    make install   \n\nRUN git clone https://github.com/gnina/gnina.git; \\\n    cd gnina; \\\n    git checkout v1.0.2; \\\n    sed -i 's/LIBMOLGRID_LIBRARY}/LIBMOLGRID_LIBRARY} ZLIB::ZLIB/' gninasrc/CMakeLists.txt ; \\\n     mkdir build; cd build; \\\n    cmake .. -DAtlas_CBLAS_LIBRARY=/usr/lib64/libopenblas.a  -DBUILD_SHARED_LIBS=OFF -DBoost_INCLUDE_DIR=/usr/include/boost169/ \\\n    -DPYTHON_EXECUTABLE=/usr/bin/python3 -DBOOST_LIBRARYDIR=/usr/lib64/boost169/ -DHAVE_PYTHON=0 -DBUILD_python=OFF \\\n    -DLIBMOLGRID_LIBRARY=/usr/local/lib/libmolgrid.a -DCUDA_ARCH_NAME=All -DCUDA_TOOLKIT_ROOT_DIR=/usr/local/cuda-11; \\\n    make -j8 gnina;\n\n#make \"mostly static\" executable\nRUN cd gnina/build/gninasrc; \\\n/usr/bin/c++  -Wno-deprecated-declarations -Wno-unknown-pragmas -O3 -DNDEBUG   CMakeFiles/gnina.dir/main/main.cpp.o CMakeFiles/gnina.dir/version.cpp.o CMakeFiles/gnina.dir/lib/atom_constants.cpp.o CMakeFiles/gnina.dir/lib/bfgs.cu.o CMakeFiles/gnina.dir/lib/box.cpp.o CMakeFiles/gnina.dir/lib/builtinscoring.cpp.o CMakeFiles/gnina.dir/lib/cache.cpp.o CMakeFiles/gnina.dir/lib/cache_gpu.cpp.o CMakeFiles/gnina.dir/lib/cnn_scorer.cpp.o CMakeFiles/gnina.dir/lib/cnn_data.cpp.o CMakeFiles/gnina.dir/lib/coords.cpp.o CMakeFiles/gnina.dir/lib/custom_terms.cpp.o CMakeFiles/gnina.dir/lib/device_buffer.cpp.o CMakeFiles/gnina.dir/lib/everything.cpp.o CMakeFiles/gnina.dir/lib/flexinfo.cpp.o CMakeFiles/gnina.dir/lib/GninaConverter.cpp.o CMakeFiles/gnina.dir/lib/grid.cpp.o CMakeFiles/gnina.dir/lib/grid_gpu.cu.o CMakeFiles/gnina.dir/lib/model.cpp.o CMakeFiles/gnina.dir/lib/molgetter.cpp.o CMakeFiles/gnina.dir/lib/monte_carlo.cpp.o CMakeFiles/gnina.dir/lib/mutate.cpp.o CMakeFiles/gnina.dir/lib/my_pid.cpp.o CMakeFiles/gnina.dir/lib/naive_non_cache.cpp.o CMakeFiles/gnina.dir/lib/non_cache.cpp.o CMakeFiles/gnina.dir/lib/non_cache_cnn.cpp.o CMakeFiles/gnina.dir/lib/obmolopener.cpp.o CMakeFiles/gnina.dir/lib/parallel_mc.cpp.o CMakeFiles/gnina.dir/lib/parallel_progress.cpp.o CMakeFiles/gnina.dir/lib/parse_pdbqt.cpp.o CMakeFiles/gnina.dir/lib/pdb.cpp.o CMakeFiles/gnina.dir/lib/PDBQTUtilities.cpp.o CMakeFiles/gnina.dir/lib/quasi_newton.cpp.o CMakeFiles/gnina.dir/lib/quaternion.cu.o CMakeFiles/gnina.dir/lib/random.cpp.o CMakeFiles/gnina.dir/lib/result_info.cpp.o CMakeFiles/gnina.dir/lib/ssd.cpp.o CMakeFiles/gnina.dir/lib/szv_grid.cpp.o CMakeFiles/gnina.dir/lib/terms.cpp.o CMakeFiles/gnina.dir/lib/weighted_terms.cpp.o CMakeFiles/gnina.dir/lib/conf.cpp.o CMakeFiles/gnina.dir/lib/conf_gpu.cu.o CMakeFiles/gnina.dir/lib/gpucode.cu.o CMakeFiles/gnina.dir/lib/model.cu.o CMakeFiles/gnina.dir/lib/non_cache_gpu.cu.o CMakeFiles/gnina.dir/lib/precalculate_gpu.cu.o CMakeFiles/gnina.dir/lib/tree_gpu.cu.o CMakeFiles/gnina.dir/lib/user_opts.cpp.o CMakeFiles/gnina.dir/cmake_device_link.o  -o ../bin/gnina  \\\n -L/usr/local/cuda/targets/x86_64-linux/lib  -Wl,-rpath,/usr/lib64/boost169:/usr/local/lib:/usr/local/cuda/lib64:/usr/lib64/atlas: \\\n   -Wl,--whole-archive ../caffe/lib/libcaffe.a -Wl,--no-whole-archive  \\\n  /usr/lib64/boost169/libboost_program_options.a \\\n  /usr/lib64/boost169/libboost_system.a \\\n  /usr/lib64/boost169/libboost_iostreams.a \\\n  /usr/lib64/boost169/libboost_timer.a \\\n  /usr/lib64/boost169/libboost_thread.a \\\n  /usr/lib64/boost169/libboost_serialization.a \\\n  /usr/lib64/boost169/libboost_filesystem.a \\\n  /usr/lib64/boost169/libboost_date_time.a \\\n  /usr/lib64/boost169/libboost_regex.a \\\n  /usr/lib64/boost169/libboost_unit_test_framework.a \\\n  /usr/lib64/boost169/libboost_chrono.a \\\n  /usr/lib64/boost169/libboost_atomic.a \\\n  /usr/local/lib/libopenbabel.a \\\n  /usr/local/lib/libmolgrid.a \\\n  ../caffe/lib/libcaffeproto.a \\\n  /usr/local/lib64/libglog.a \\\n  /usr/local/lib/libgflags.a \\\n  /usr/local/lib/libprotobuf.a \\\n  /usr/lib64/libdl.a \\\n  /usr/lib64/libhdf5_hl_cpp.a \\\n  /usr/lib64/libhdf5_hl.a  \\\n  /usr/lib64/libhdf5_cpp.a \\\n  /usr/lib64/libhdf5.a \\\n  /usr/lib64/libz.a \\\n  /usr/local/cuda/lib64/libcurand_static.a  \\\n  /usr/lib64/libcudnn_ops_train_static_v8.a   \\\n  /usr/lib64/libcudnn_cnn_train_static_v8.a  \\\n  /usr/lib64/libcudnn_adv_train_static_v8.a  \\\n  /usr/lib64/libcudnn_ops_train_static.a   \\\n  /usr/lib64/libcudnn_cnn_train_static.a  \\\n  /usr/lib64/libcudnn_adv_train_static.a  \\\n  /usr/lib64/libcudnn_adv_infer_static.a \\\n  /usr/lib64/libcudnn_adv_infer_static_v8.a \\\n  /usr/lib64/libcudnn_cnn_infer_static.a \\\n  /usr/lib64/libcudnn_cnn_infer_static_v8.a  \\\n  /usr/lib64/libcudnn_ops_infer_static.a \\\n  /usr/lib64/libcudnn_ops_infer_static_v8.a \\\n  /usr/local/cuda/lib64/libcusolver_static.a  \\\n  /usr/local/cuda/lib64/libcublas_static.a \\\n  /usr/local/cuda/lib64/libculibos.a \\\n  /usr/lib64/liblapack.a \\\n  /usr/lib64/libopenblas64.a  \\\n  /usr/lib64/atlas/libatlas.a \\\n  /usr/local/lib/libsz.a \\\n  /usr/local/lib/libaec.a \\\n  /usr/local/cuda/lib64/libcudart_static.a  \\\n   /usr/local/cuda/targets/x86_64-linux/lib/libcudadevrt.a \\\n   /usr/local/cuda/lib64/libcublasLt_static.a \\\n     -lm -lpthread -ldl -lrt\n\n#./bin/gnina -r ../test/gnina/data/184l_rec.pdb -l ../test/gnina/data/184l_lig.sdf --autobox_ligand ../test/gnina/data/184l_lig.sdf --seed 0\n\n\n"
}