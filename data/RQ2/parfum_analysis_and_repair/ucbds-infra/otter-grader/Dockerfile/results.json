{
  "startTime": 1674252029206,
  "endTime": 1674252030443,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile forked from https://github.com/jeffheaton/docker-jupyter-python-r/blob/master/Dockerfile\nFROM ubuntu:20.04\n\n# common packages\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y tzdata git vim wget libssl-dev nano && \\\n    rm -rf /var/lib/apt/lists/*\n\n# miniconda\nRUN echo 'export PATH=/opt/conda/bin:$PATH' >> /root/.bashrc && \\\n    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV PATH /opt/conda/bin:$PATH\n\n# R pre-reqs\nRUN apt-get clean && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends fonts-dejavu gfortran gcc && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# R\nRUN apt-get clean && \\\n    apt-get update && \\\n    conda install -y r-base r-essentials && \\\n    conda install -c r r-irkernel r-essentials r-devtools -c conda-forge && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install wkhtmltopdf for otter export\nRUN apt-get clean && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y pandoc && \\\n    apt-get install --no-install-recommends -y -f texlive-xetex texlive-fonts-recommended texlive-lang-chinese && \\\n    wget --quiet -O /tmp/wkhtmltopdf.deb https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6-1/wkhtmltox_0.12.6-1.focal_amd64.deb && \\\n    apt-get install --no-install-recommends -y /tmp/wkhtmltopdf.deb && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set the locale to UTF-8 to ensure that Unicode output is encoded correctly\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# create dir for autograder\nRUN mkdir /autograder\n\n# Python requirements\nADD requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n\nRUN pip install --no-cache-dir otter-grader==3.3.0\n"
}