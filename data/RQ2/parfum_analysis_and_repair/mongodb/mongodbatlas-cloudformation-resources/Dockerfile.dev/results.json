{
  "startTime": 1674248196313,
  "endTime": 1674248197599,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 15,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM ubuntu:20.04\nFROM bitnami/minideb:latest\n\nARG DEBIAN_FRONTEND=noninteractive\nARG AWS_DEFAULT_REGION\nARG AWS_ACCESS_KEY_ID\nARG AWS_SECRET_ACCESS_KEY\nARG AWS_SESSION_TOKEN\nARG CFN_CLI_SDK\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    make \\\n    curl \\\n    zip \\\n    jq \\\n    golang \\\n    python3 python3-pip && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n#RUN wget --quiet https://dl.google.com/go/go1.15.3.linux-amd64.tar.gz \\\n#&& tar -xf go1.15.3.linux-amd64.tar.gz \\\n#&& mv go /usr/local && chmod +x /usr/local/go\n\n#RUN pip install --upgrade pip\nRUN curl -f -L \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && \\\n    unzip awscliv2.zip && ./aws/install\n\nRUN curl -f -L \"https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip\" \\\n    -o \"aws-sam-cli.zip\" && unzip \"aws-sam-cli.zip\" -d \"sam-installation\" && ./sam-installation/install\n\n#COPY $CFN_CLI_SDK /cfn-cli-sdk\n#RUN pip3 install \\\n# docker==4.4 \\\n# cfn-cli-sdk/cloudformation-cli-0.2.1.tar.gz \\\n# cfn-cli-sdk/cloudformation-cli-python-plugin-2.1.3.tar.gz \\\n# cfn-cli-sdk/cloudformation-cli-python-lib-2.1.6.tar.gz\n\nRUN python3 -m pip install docker==4.4 six==1.15\n#RUN python3 -m pip install cloudformation-cli cloudformation-cli-java-plugin cloudformation-cli-go-plugin cloudformation-cli-python-plugin cloudformation-cli-typescript-plugin\nRUN pip3 install --no-cache-dir cloudformation-cli-go-plugin\nRUN pip3 list | grep cloudformation-cli\n\nRUN echo \"CloudFormation CLI Version\"\nRUN cfn --version\n#RUN pip3 install cloudformation-cli-go-plugin\n#\n#RUN cd cfn-cli-sdk && unzip goplugin.zip\n#RUN pip3 install -e cfn-cli-sdk/Github-cloudformation-cli-go-plugin\n\n\n\n# Install mongocli\nRUN MCLI_TAG=$( curl -f -sL --header \"Accept: application/json\" https://github.com/mongodb/mongocli/releases/latest | jq -r '.[\"tag_name\"]') && \\\n    MCLI_VERSION=$(echo $MCLI_TAG | cut -dv -f2) && \\\n    MCLI_DEB=\"mongocli_${MCLI_VERSION}_linux_x86_64.deb\" && \\\n    curl -f -OL https://github.com/mongodb/mongocli/releases/download/${MCLI_TAG}/${MCLI_DEB} && \\\n    echo \"About to install mongocli from: ${MCLI_DEB}\" && \\\n    dpkg -i ${MCLI_DEB}\n\n\n#ENV WORKSPACE /workspace\n#RUN mkdir -p -m 0600 ~/.ssh && ssh-keyscan github.com >> ~/.ssh/known_hosts\n\n#RUN --mount=type=ssh,id=github git clone --single-branch --branch develop git@github.com:aws-quickstart/quickstart-mongodb-atlas.git\n#RUN --mount=type=ssh,id=github git clone --single-branch --branch develop git@github.com:jasonmimick/quickstart-mongodb-atlas.git\n#RUN --mount=type=ssh,id=github git clone git@github.com:aws-quickstart/quickstart-mongodb-atlas-resources.git\n\n\n#RUN cd quickstart-mongodb-atlas-resources/cfn-resources && \\\n# go mod edit \\\n# --replace github.com/aws-cloudformation/cloudformation-cli-go-plugin=/cfn-cli-sdk/Github-cloudformation-cli-go-plugin\n\n# copy the repository form the previous image\n#COPY --from=intermediate /quickstart-mongodb-atlas /workspace/quickstart-mongodb-atlas\n#COPY --from=intermediate /quickstart-mongodb-atlas-resources /workspace/quickstart-mongodb-atlas-resources\n# ... actually use the repo :)\n\n## Fix importpath BUG work around\n#\n#COPY fix-importpath.py /\n#RUN chmod +x fix-importpath.py\n#RUN ls /quickstart-mongodb-atlas-resources/cfn-resources/**/.rpdk-config | xargs -I {} sh -c 'echo \"Fixing: $1\"' -- {}\n#RUN ls /quickstart-mongodb-atlas-resources/cfn-resources/**/.rpdk-config | xargs -I {} sh -c '/fix-importpath.py \"$1\" > \"$1.fixed\"' -- {}\n#RUN ls /quickstart-mongodb-atlas-resources/cfn-resources/**/.rpdk-config | xargs -I {} sh -c 'mv \"$1.fixed\" \"$1\"' -- {}\n\n#RUN ls /quickstart-mongodb-atlas-resources/cfn-resources/**/.rpdk-config | xargs -I {} sh -c 'cat \"$1\"' -- {}\n\n\n# Pre build everything\n#RUN cd /quickstart-mongodb-atlas-resources/cfn-resources/ && BUILD_ONLY=true ./cfn-submit-helper.sh\n# copy the build logs over to different name to help troubleshoot deployment logs\n#RUN cd /quickstart-mongodb-atlas-resources/cfn-resources/ && ls **/rpdk.log | xargs -I {} mv {} {}.build\n\n#COPY get-setup-aws-cfn.sh /\n\n#RUN aws configure add-model \\\n#    --service-model \"file:///cfn-cli-sdk/c2j-output-2021-01-11/cloudformation/2010-05-15/service-2.json\" \\\n#    --service-name uno && \\\n#    aws uno help | grep enable-type\n\nVOLUME /var/run/docker.sock\n\nEXPOSE 3001\n\nENTRYPOINT [\"bash\", \"-l\", \"-c\"] \nCMD [ \"ls\" ]\n"
}