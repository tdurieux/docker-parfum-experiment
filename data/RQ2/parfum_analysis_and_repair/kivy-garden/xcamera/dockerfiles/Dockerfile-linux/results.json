{
  "startTime": 1674249268163,
  "endTime": 1674249268745,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 34,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 29,
        "columnStart": 34,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image for installing dependencies on Linux and running tests.\n# Build with:\n#   docker build --tag=kivy/xcamera-linux --file=dockerfiles/Dockerfile-linux .\n# Run with:\n# docker run kivy/xcamera-linux /bin/sh -c 'make test'\n# Or using the entry point shortcut:\n#   docker run kivy/xcamera-linux 'make test'\n# For running UI:\n#   xhost +\"local:docker@\"\n#   docker run -e DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix --device=/dev/video0:/dev/video0 kivy/xcamera-linux 'make run'\n# Or for interactive shell:\n#   docker run -it --rm kivy/xcamera-linux\nFROM ubuntu:18.04\n\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}\"\n\n# configure locale\nRUN apt update -qq > /dev/null && apt install --yes --no-install-recommends \\\n    locales && \\\n    locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\n\n# install system dependencies\nRUN apt update -qq > /dev/null && apt install --yes --no-install-recommends \\\n    make \\\n    sudo && rm -rf /var/lib/apt/lists/*;\n\n# prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n# with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n# gives access to video so the camera can be accessed within the container\nRUN gpasswd --add ${USER} video\n\nUSER ${USER}\nWORKDIR ${WORK_DIR}\nCOPY Makefile requirements* ${WORK_DIR}/\nRUN sudo apt update -qq > /dev/null \\\n    && sudo make system_dependencies && make virtualenv\nCOPY . ${WORK_DIR}\nENTRYPOINT [\"./dockerfiles/start.sh\"]\n"
}