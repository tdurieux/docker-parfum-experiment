{
  "startTime": 1674215795953,
  "endTime": 1674215796709,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build:\n#    docker build -t cosasdepuma/elliot .\n# Run:\n#    sudo docker run -d -p 8008:8008 --name elliot cosasdepuma/elliot\n\nFROM golang:alpine AS build\n\nWORKDIR /go/src/app\nCOPY . /go/src/app\n\nRUN sed -i 's/^const Host = .*$/const Host = \"0.0.0.0\"/g' /go/src/app/pkg/config/config.go && \\\n    sed -i 's/^const Port = .*$/const Port = 8008/g' /go/src/app/pkg/config/config.go && \\\n    sed -i 's/^const DBPass = .*$/const DBPass = \"d0cK3r\"/g' /go/src/app/pkg/config/config.go\n\nRUN apk update && \\\n    apk add --no-cache --upgrade --virtual .requirements build-base && \\\n    CGO_ENABLED=1 go build -v -o elliot main.go && \\\n    apk del .requirements\n\n# ================================\n\nFROM alpine\n\nENV REDISPASS foobar\n\nRUN apk update && \\\n    apk add --no-cache redis && \\\n    sed -i 's/^# requirepass .*$/requirepass d0ck3r/g' /etc/redis.conf\n\nRUN addgroup -S elliot && adduser -s /sbin/nologin -S elliot -G elliot\nUSER elliot\n\nWORKDIR /app\nCOPY --from=build /go/src/app/elliot /bin/elliot\nCOPY --from=build /go/src/app/frontend /app/frontend\n\nEXPOSE 8008\n\nCMD [\"/bin/elliot\"]"
}