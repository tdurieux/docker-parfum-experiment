{
  "startTime": 1674251414667,
  "endTime": 1674251415273,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine AS base\nRUN mkdir -p /home/node/app && chown -R node:node /home/node/app\nWORKDIR /home/node/app\n\nFROM base AS build-setup\nRUN apk add --no-cache git bash autoconf automake libtool binutils gcc g++ make python3\n\nFROM build-setup AS build\nUSER node\nCOPY --chown=node:node . .\nRUN mv authn.io.js index.js\n# There are not tests available for this context\n# RUN npm i --package-lock-only && npm ci --no-optional --production && cd test && npm i\n# RUN npm i --no-optional --production --package-lock\nRUN npm i --production --package-lock && npm cache clean --force;\nRUN node index.js bundle --webpack-mode production --bundle-mode production\n\nFROM build AS test\n# There are not tests available for this context\n# RUN cd test && npm t\n# RUN rm -rf test && rm .npmrc\n\nFROM base AS release\nCOPY --from=test --chown=node:node /home/node/app ./\nCOPY --from=test --chown=node:node /home/node/app/.cache ./.cache\nEXPOSE 10443\nENV NODE_ENV=production\nCMD [ \"node\", \"index\", \"--bundle-mode\", \"production\"]\n"
}