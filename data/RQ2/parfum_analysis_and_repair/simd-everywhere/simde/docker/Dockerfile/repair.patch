diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/simd-everywhere/simde/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/simd-everywhere/simde/docker/Dockerfile/repaired.Dockerfile
index e9200a4..1632db8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/simd-everywhere/simde/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/simd-everywhere/simde/docker/Dockerfile/repaired.Dockerfile
@@ -8,10 +8,10 @@ ARG QEMU_GIT=n
 
 RUN \
   apt-get update -y && \
-  apt-get install -y netselect-apt && \
+  apt-get install --no-install-recommends -y netselect-apt && \
   if netselect-apt -n ${release}; then \
     mv sources.list /etc/apt/sources.list; \
-  fi
+  fi && rm -rf /var/lib/apt/lists/*;
 
 COPY docker/bin /tmp/simde-bin
 RUN \
@@ -31,7 +31,7 @@ RUN \
 # Common packages
 RUN \
   apt-get update -y && \
-  apt-get install -yq \
+  apt-get install --no-install-recommends -yq \
     git build-essential \
     cmake ninja-build \
     '^clang-[0-9\.]+$' \
@@ -40,16 +40,16 @@ RUN \
     qemu binfmt-support qemu-user-static \
     creduce screen htop parallel nano rsync strace \
     npm libsleef-dev \
-    python3-pip
+    python3-pip && rm -rf /var/lib/apt/lists/*;
 
 # Meson on stable is too old, and we want to make sure we keep 0.54
 # working for a while.
-RUN pip3 install meson==0.55.0
+RUN pip3 install --no-cache-dir meson==0.55.0
 
 # GCC cross-compilers
 RUN \
   apt-get update -y && \
-  apt-get install -y apt-file && \
+  apt-get install --no-install-recommends -y apt-file && \
   apt-file update && \
   PACKAGES_TO_INSTALL=""; \
   for ARCH in $(dpkg --print-foreign-architectures); do \
@@ -58,21 +58,21 @@ RUN \
       PACKAGES_TO_INSTALL="${PACKAGES_TO_INSTALL} ${pkg}"; \
     done; \
   done; \
-  apt-get install -yq ${PACKAGES_TO_INSTALL}
+  apt-get install --no-install-recommends -yq ${PACKAGES_TO_INSTALL} && rm -rf /var/lib/apt/lists/*;
 
 # ICC
 RUN \
   apt-get update -y && \
-  apt-get install -yq curl gpg && \
+  apt-get install --no-install-recommends -yq curl gpg && \
   wget -O- https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB \
-   | gpg --dearmor > /usr/share/keyrings/oneapi-archive-keyring.gpg && \
+   | gpg --batch --dearmor > /usr/share/keyrings/oneapi-archive-keyring.gpg && \
   echo "deb [signed-by=/usr/share/keyrings/oneapi-archive-keyring.gpg] https://apt.repos.intel.com/oneapi all main" > /etc/apt/sources.list.d/oneAPI.list && \
   apt-get update && \
-  apt-get install -yq intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic && \
+  apt-get install --no-install-recommends -yq intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic && \
   for exe in icc icpc; do \
     printf '#!/bin/bash\nARGS="$@"\nsource /opt/intel/oneapi/compiler/latest/env/vars.sh >/dev/null\n%s ${ARGS}\n' "${exe}" > /usr/bin/"${exe}" && \
     chmod 0755 /usr/bin/"${exe}" ; \
-  done
+  done && rm -rf /var/lib/apt/lists/*;
 
 # # xlc -- Install fails.
 # # Once IBM releases a version for Ubuntu Focal (20.04) I hope I can
@@ -98,7 +98,7 @@ RUN \
   git clone https://github.com/emscripten-core/emsdk.git /opt/emsdk && \
   cd /opt/emsdk && ./emsdk update-tags && ./emsdk install tot && ./emsdk activate tot && \
   ln -s /opt/emsdk/upstream/bin/wasm-ld /usr/bin/wasm-ld && \
-  npm install jsvu -g && jsvu --os=linux64 --engines=v8 && ln -s "/root/.jsvu/v8" "/usr/bin/v8"
+  npm install jsvu -g && jsvu --os=linux64 --engines=v8 && ln -s "/root/.jsvu/v8" "/usr/bin/v8" && npm cache clean --force;
 
 # Meson cross files
 RUN \
@@ -107,12 +107,12 @@ RUN \
 # Install QEMU git (necessary for MIPS)
 RUN \
   if [ ${QEMU_GIT} = "y" ]; then \
-    apt-get install -y pkg-config libglib2.0-dev libpixman-1-dev && \
+    apt-get install --no-install-recommends -y pkg-config libglib2.0-dev libpixman-1-dev && \
     git clone https://gitlab.com/qemu-project/qemu.git /usr/local/src/qemu && \
     mkdir -p /usr/local/src/qemu/build && cd /usr/local/src/qemu/build && \
     ../configure --prefix=/opt/qemu && \
     make -j$(nproc) && \
-    make install; \
+    make install; rm -rf /var/lib/apt/lists/*; \
     rm -rf /usr/local/src/qemu; \
   fi