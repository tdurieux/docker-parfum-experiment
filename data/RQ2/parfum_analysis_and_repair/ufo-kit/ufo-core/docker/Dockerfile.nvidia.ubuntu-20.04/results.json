{
  "startTime": 1674254565342,
  "endTime": 1674254566295,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 34,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 16,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 57,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 44,
        "columnStart": 44,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get -y upgrade && apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        build-essential \\\n        meson \\\n        ninja-build \\\n        git \\\n        gcc \\\n        g++ \\\n        gobject-introspection \\\n        make \\\n        ca-certificates \\\n        cmake \\\n        liblapack-dev \\\n        libjpeg-dev \\\n        libtiff5-dev \\\n        libglib2.0-dev \\\n        libjson-glib-dev \\\n        libopenmpi-dev \\\n        libhdf5-dev \\\n        libclfft-dev \\\n        libgsl-dev \\\n        libgirepository1.0-dev \\\n        qt5-default \\\n        python3 \\\n        python3-dev \\\n        python3-gi \\\n        python-gi-dev \\\n        python3-sphinx \\\n        python3-pip \\\n        python3-numpy \\\n        python3-cairo \\\n        python3-gi-cairo \\\n        python3-sphinx \\\n        python3-pyqt5 \\\n        python3-pyqtgraph \\\n        pkg-config \\\n        ocl-icd-libopencl1 \\\n        ocl-icd-opencl-dev \\\n        fftw3-dev \\\n        opencl-headers \\\n        clinfo \\\n        zlib1g-dev && \\\n        rm -rf /var/lib/apt/lists/*\n\nENV LD_LIBRARY_PATH /usr/local/lib/:${LD_LIBRARY_PATH}\nENV GI_TYPELIB_PATH=/usr/local/lib/girepository-1.0:$GI_TYPELIB_PATH\nENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\n\nRUN mkdir -p /etc/OpenCL/vendors && \\\n    echo \"libnvidia-opencl.so.1\" > /etc/OpenCL/vendors/nvidia.icd\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\n\nRUN git clone https://github.com/ufo-kit/ufo-core.git && \\\n    git clone https://github.com/ufo-kit/ufo-filters.git && \\\n    git clone https://github.com/ufo-kit/tofu\n\nRUN pip3 install --no-cache-dir --upgrade pip && pip3 install --no-cache-dir setuptools\nRUN pip3 install --no-cache-dir tifffile\n\nRUN cd /ufo-core && meson build --libdir=lib -Dbashcompletiondir=$HOME/.local/share/bash-completion/completions && cd build && ninja install\nRUN cd /ufo-core/python && python3 setup.py install\nRUN cd /ufo-filters && meson build --libdir=lib -Dcontrib_filters=True && cd build && ninja install\nRUN cd /tofu && pip3 install --no-cache-dir -r requirements-flow.txt && pip3 install --no-cache-dir -r requirements-flow.txt && python3 setup.py install\nRUN rm -rf /ufo-core /ufo-filters /tofu\n"
}