{
  "startTime": 1674250553707,
  "endTime": 1674250555438,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 84,
        "columnStart": 23,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# metainformation\nLABEL org.opencontainers.image.version = \"2.0.4\"\nLABEL org.opencontainers.image.authors = \"Matthias Fey\"\nLABEL org.opencontainers.image.source = \"https://github.com/pyg-team/pytorch_geometric\"\nLABEL org.opencontainers.image.licenses = \"MIT\"\nLABEL org.opencontainers.image.base.name=\"docker.io/library/ubuntu:18.04\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https ca-certificates && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils gnupg2 curl && \\\n    curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub | apt-key add - && \\\n    echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/cuda.list && \\\n    echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\" > /etc/apt/sources.list.d/nvidia-ml.list &&\\\n    apt-get purge --autoremove -y curl && \\\nrm -rf /var/lib/apt/lists/*\n\nENV CUDA_VERSION 10.1.243\nENV NCCL_VERSION 2.4.8\nENV CUDA_PKG_VERSION 10-1=$CUDA_VERSION-1\nENV CUDNN_VERSION 7.6.5.32\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-cudart-$CUDA_PKG_VERSION \\\n        cuda-compat-10-1 && \\\n    ln -s cuda-10.1 /usr/local/cuda && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --allow-unauthenticated --no-install-recommends \\\n        cuda-libraries-$CUDA_PKG_VERSION \\\n        cuda-nvtx-$CUDA_PKG_VERSION \\\n        libcublas10=10.2.1.243-1 \\\n        libnccl2=$NCCL_VERSION-1+cuda10.1 && \\\n    apt-mark hold libnccl2 && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --allow-unauthenticated --no-install-recommends \\\n        cuda-libraries-dev-$CUDA_PKG_VERSION \\\n        cuda-nvml-dev-$CUDA_PKG_VERSION \\\n        cuda-minimal-build-$CUDA_PKG_VERSION \\\n        cuda-command-line-tools-$CUDA_PKG_VERSION \\\n        libnccl-dev=$NCCL_VERSION-1+cuda10.1 \\\n        libcublas-dev=10.2.1.243-1 \\\n        && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    libcudnn7=$CUDNN_VERSION-1+cuda10.1 \\\n    libcudnn7-dev=$CUDNN_VERSION-1+cuda10.1 \\\n    && \\\n    apt-mark hold libcudnn7 && \\\n    rm -rf /var/lib/apt/lists/*\n\n\nENV LIBRARY_PATH /usr/local/cuda/lib64/stubs\n\n# NVIDIA docker 1.0.\nLABEL com.nvidia.volumes.needed=\"nvidia_driver\"\nLABEL com.nvidia.cuda.version=\"${CUDA_VERSION}\"\n\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf && \\\n    echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64\n\n# NVIDIA container runtime.\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\nENV NVIDIA_REQUIRE_CUDA \"cuda>=10.0 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=410,driver<411\"\n\n# PyTorch (Geometric) installation\nRUN rm /etc/apt/sources.list.d/cuda.list && \\\n    rm /etc/apt/sources.list.d/nvidia-ml.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    ca-certificates \\\n    vim \\\n    sudo \\\n    git \\\n    bzip2 \\\n    libx11-6 \\\n && rm -rf /var/lib/apt/lists/*\n\n# Create a working directory.\nRUN mkdir /app\nWORKDIR /app\n\n# Create a non-root user and switch to it.\nRUN adduser --disabled-password --gecos '' --shell /bin/bash user \\\n && chown -R user:user /app\nRUN echo \"user ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/90-user\nUSER user\n\n# All users can use /home/user as their home directory.\nENV HOME=/home/user\nRUN chmod 777 /home/user\n\n# Install Miniconda.\nRUN curl -f -so ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p ~/miniconda \\\n && rm ~/miniconda.sh\nENV PATH=/home/user/miniconda/bin:$PATH\nENV CONDA_AUTO_UPDATE_CONDA=false\n\n# Create a Python 3.6 environment.\nRUN /home/user/miniconda/bin/conda install conda-build \\\n && /home/user/miniconda/bin/conda create -y --name py36 python=3.6.5 \\\n && /home/user/miniconda/bin/conda clean -ya\nENV CONDA_DEFAULT_ENV=py36\nENV CONDA_PREFIX=/home/user/miniconda/envs/$CONDA_DEFAULT_ENV\nENV PATH=$CONDA_PREFIX/bin:$PATH\n\n# CUDA 10.0-specific steps.\nRUN conda install -y -c pytorch \\\n    cudatoolkit=10.1 \\\n    \"pytorch=1.4.0=py3.6_cuda10.1.243_cudnn7.6.3_0\" \\\n    torchvision=0.5.0=py36_cu101 \\\n && conda clean -ya\n\n# Install HDF5 Python bindings.\nRUN conda install -y h5py=2.8.0 \\\n && conda clean -ya\nRUN pip install --no-cache-dir h5py-cache==1.0\n\n# Install TorchNet, a high-level framework for PyTorch.\nRUN pip install --no-cache-dir torchnet==0.0.4\n\n# Install Requests, a Python library for making HTTP requests.\nRUN conda install -y requests=2.19.1 \\\n && conda clean -ya\n\n# Install Graphviz.\nRUN conda install -y graphviz=2.40.1 python-graphviz=0.8.4 \\\n && conda clean -ya\n\n# Install OpenCV3 Python bindings.\nRUN sudo apt-get update && sudo apt-get install -y --no-install-recommends \\\n    libgtk2.0-0 \\\n    libcanberra-gtk-module \\\n && sudo rm -rf /var/lib/apt/lists/*\nRUN conda install -y -c menpo opencv3=3.1.0 \\\n && conda clean -ya\n\n# Install PyG.\nRUN CPATH=/usr/local/cuda/include:$CPATH \\\n && LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH \\\n && DYLD_LIBRARY_PATH=/usr/local/cuda/lib:$DYLD_LIBRARY_PATH\n\nRUN pip install --no-cache-dir scipy\n\nRUN pip install --no-cache-dir --no-index torch-scatter -f https://data.pyg.org/whl/torch-1.4.0+cu101.html \\\n && pip install --no-cache-dir --no-index torch-sparse -f https://data.pyg.org/whl/torch-1.4.0+cu101.html \\\n && pip install --no-cache-dir --no-index torch-cluster -f https://data.pyg.org/whl/torch-1.4.0+cu101.html \\\n && pip install --no-cache-dir --no-index torch-spline-conv -f https://data.pyg.org/whl/torch-1.4.0+cu101.html \\\n && pip install --no-cache-dir torch-geometric\n\n# Set the default command to python3.\nCMD [\"python3\"]\n"
}