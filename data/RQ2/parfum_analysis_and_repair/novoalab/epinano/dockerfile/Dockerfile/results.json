{
  "startTime": 1674251921651,
  "endTime": 1674251922586,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 21,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 32,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Parent image (first layer)\nFROM biocorecrg/centos-perlbrew-pyenv-java:latest\n#FROM centos/python-36-centos7\nARG PYTHON_VERSION=3.6.3\nUSER root\nRUN bash\n\n\n## Install wget\nRUN pwd\nRUN yum -y upgrade\nRUN yum install -y which && rm -rf /var/cache/yum\nRUN yum -y install wget libcurl-devel && rm -rf /var/cache/yum\n\n## Install python3.7\nWORKDIR /usr/local/bin\nRUN yum -y install gcc openssl-devel bzip2-devel libffi-devel zlib-devel xz-devel && rm -rf /var/cache/yum\nRUN wget https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz\nRUN tar xzf Python-3.6.3.tgz && rm Python-3.6.3.tgz\n\nWORKDIR /usr/local/bin/Python-3.6.3\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations\nRUN yum install make -y && rm -rf /var/cache/yum\nRUN make altinstall\nRUN echo 'current location'\n\n#RUN rm python3\nWORKDIR /usr/bin\nRUN ln -fs /usr/local/bin/Python-3.6.3/python python3\n#RUN ln -fs /usr/local/bin/Python-3.6.3/python python\nRUN chmod +x python; chmod +x python3\n#RUN ln -fs /usr/local/bin/pip pip3\n\n# Intall pip\nRUN yum -y install epel-release && rm -rf /var/cache/yum\nRUN curl -f https://bootstrap.pypa.io/get-pip.py --output get-pip.py\nRUN python3 get-pip.py\nRUN python -m pip install --upgrade pip\nRUN pip3 install --no-cache-dir requests paho-mqtt\n\n## Install samtools\nWORKDIR /usr/local/bin\nRUN wget https://sourceforge.net/projects/samtools/files/samtools/1.3/samtools-1.3.tar.bz2\nRUN tar xjf samtools-1.3.tar.bz2 && rm samtools-1.3.tar.bz2\nRUN ls -lrt\nRUN pwd\nRUN chmod +x samtools-1.3/configure\nRUN cd samtools-1.3; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make; make install\nRUN cd samtools-1.3/htslib-1.3; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make\nRUN cd /usr/local/bin ;  ln -fs samtools-1.3/samtools .\nRUN cd /usr/bin/; ln -fs /usr/local/bin/samtools-1.3/samtools samtools\n\n## Install sam2tsv\nWORKDIR /usr/local/bin\nRUN wget https://github.com/enovoa/EpiNano/raw/master/misc/sam2tsv.jar\n\n## isntall dependencies\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir atomicwrites==1.4.0 attrs==21.2.0 biopython==1.76 cloudpickle==1.3.0\nRUN pip3 install --no-cache-dir dask==2.5.2 fsspec==2021.6.1 future==0.17.1 h5py==2.10.0 importlib-metadata==4.6.1\nRUN pip3 install --no-cache-dir locket==0.2.1 more-itertools==8.8.0 numpy==1.17.2 pandas==0.24.2\nRUN pip3 install --no-cache-dir partd==1.2.0 pluggy==0.13.1 py==1.10.0 pysam==0.15.3 pytest==4.4.1 python-dateutil==2.8.1\nRUN pip3 install --no-cache-dir pytz==2021.1 scikit-learn==0.20.2 scipy==1.5.4 six==1.16.0 toolz==0.11.1 typing-extensions==3.10.0.0 zipp==3.5.0\n\n\n\n\n### indtall Epinnao\nWORKDIR /usr/local/bin\nRUN git clone --depth 2 https://github.com/enovoa/EpiNano.git\n\n# Remove all archives\nRUN rm -f *.zip *.bz2 *.gz\n\n# create a data folder to process\nRUN mkdir -p /project/data\n\n#env path\nENV PATH /usr/local/bin:$PATH\n\n"
}