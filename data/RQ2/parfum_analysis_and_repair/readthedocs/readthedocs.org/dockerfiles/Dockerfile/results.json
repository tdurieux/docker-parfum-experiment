{
  "startTime": 1674253497917,
  "endTime": 1674253498583,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04\n\nARG GITHUB_USER\nARG GITHUB_TOKEN\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install \\\n        curl \\\n        g++ \\\n        gettext \\\n        git-core \\\n        libevent-dev \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        locales \\\n        build-essential \\\n        python3-pip \\\n        python3-dev \\\n        libmysqlclient-dev \\\n        libfreetype6 \\\n        libjpeg-dev \\\n        postgresql-client \\\n        sqlite \\\n        netcat \\\n        telnet \\\n        lsb-release \\\n        npm && rm -rf /var/lib/apt/lists/*;\n\n# Gets the MinIO mc client used to add buckets upon initialization\n# If this client should have issues running inside this image, it is also\n# fine to defer it to a separate image.\n# The current minio/mc Docker image could be a lot smaller\nRUN curl -f --disable https://dl.min.io/client/mc/release/linux-amd64/archive/mc.RELEASE.2022-06-11T21-10-36Z -o /usr/bin/mc && \\\n    chmod +x /usr/bin/mc\n\nRUN npm install -g nodemon && npm cache clean --force;\n\n# Uncomment en_US.UTF-8 locale and generate it\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Ensure that ``python`` is in the PATH so that ``./manage.py`` works\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\nWORKDIR /tmp\n\nCOPY requirements/pip.txt pip.txt\nCOPY requirements/debug.txt debug.txt\nCOPY requirements/docker.txt docker.txt\nRUN pip3 install --no-cache-dir -r docker.txt\n\n# Install readthedocs-ext only if GITHUB_TOKEN is provided\nWORKDIR /usr/src/app/checkouts/\nRUN if [ -n \"$GITHUB_TOKEN\" ] ; \\\n        then \\\n        git clone --depth 1 https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/readthedocs/readthedocs-ext ; \\\n        pip3 install --no-cache-dir -e readthedocs-ext ; \\\n        git clone --depth 1 https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com/readthedocs/ext-theme ; \\\n        pip3 install --no-cache-dir -e ext-theme ; \\\n        fi\n\nWORKDIR /usr/src/app/checkouts/readthedocs.org\n"
}