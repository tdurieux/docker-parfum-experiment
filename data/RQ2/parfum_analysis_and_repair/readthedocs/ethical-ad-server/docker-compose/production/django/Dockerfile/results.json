{
  "startTime": 1674250259087,
  "endTime": 1674250260375,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 90
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 20
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Production Docker setup\n#\n# This Dockerfile is not currently used or maintained\n# but may be useful in setting up your own adserver instance.\n\nFROM python:3.8-alpine\nMAINTAINER Read the Docs, Inc. <support@readthedocs.org>\n\nENV PYTHONUNBUFFERED 1\n\nRUN apk update \\\n  # psycopg2 dependencies \\\n  && apk add --no-cache --virtual build-deps gcc python3-dev musl-dev \\\n  && apk add --no-cache postgresql-dev \\\n  # Pillow dependencies\n  && apk add --no-cache jpeg-dev zlib-dev freetype-dev lcms2-dev openjpeg-dev tiff-dev tk-dev tcl-dev \\\n  # CFFI dependencies\n  && apk add --no-cache libffi-dev py-cffi \\\n  # Translations dependencies\n  && apk add --no-cache gettext \\\n  # https://docs.djangoproject.com/en/dev/ref/django-admin/#dbshell\n  && apk add --no-cache postgresql-client \\\n  # Add Node dependencies for building static files\n  && apk add --no-cache nodejs npm \\\n  # Ensure git is on the system - some dependencies may rely on it\n  && apk add --no-cache git \\\n  # Needed to build Python Cryptography on Alpine Linux\n  # https://cryptography.io/en/latest/installation.html#alpine\n  && apk add --no-cache openssl-dev cargo\n\nRUN addgroup -S django \\\n    && adduser -S -G django django\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements /requirements\nRUN pip install --no-cache-dir -r /requirements/production.txt \\\n    && rm -rf /requirements\n\nCOPY ./docker-compose/production/django/start /start\nRUN chmod +x /start\nRUN chown django /start\n\nCOPY ./docker-compose/production/django/celery/worker/start /start-celeryworker\nRUN chmod +x /start-celeryworker\nRUN chown django /start-celeryworker\n\nCOPY ./docker-compose/production/django/celery/beat/start /start-celerybeat\nRUN chmod +x /start-celerybeat\nRUN chown django /start-celerybeat\n\n# Explicitly copy files/directories so no configuration/data/secrets get copied\nCOPY ./adserver /app/adserver\nCOPY ./assets /app/assets\nCOPY ./config /app/config\nCOPY ./geoip /app/geoip\nCOPY ./templates /app/templates\nCOPY ./manage.py /app\nCOPY ./newrelic.ini /app\nCOPY ./package.json /app\nCOPY ./package-lock.json /app\nCOPY ./webpack.config.js /app\n\n# Allow Azure to SSH into the running container\n# Although the root password is known, port 2222 is inaccessible from the internet\n# https://docs.microsoft.com/en-us/azure/app-service/containers/configure-custom-container#enable-ssh\nRUN apk add --no-cache openssh \\\n     && echo \"root:Docker!\" | chpasswd\nCOPY ./docker-compose/production/django/sshd_config /etc/ssh/\n\n\nWORKDIR /app\n\n# Install node dependencies\nRUN npm install && npm cache clean --force;\n\nEXPOSE 2222 5000\n\nCMD [\"/start\"]\n"
}