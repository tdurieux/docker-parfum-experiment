{
  "startTime": 1674249498118,
  "endTime": 1674249499027,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install \\\n        curl \\\n        g++ \\\n        git-core \\\n        libevent-dev \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        locales \\\n        build-essential \\\n        python3-pip \\\n        python3-dev \\\n        libmysqlclient-dev \\\n        libfreetype6 \\\n        libjpeg-dev \\\n        sqlite \\\n        netcat \\\n        telnet \\\n        lsb-release && rm -rf /var/lib/apt/lists/*;\n\n# Requirements are installed here to ensure they will be cached.\nCOPY ./requirements /requirements\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r /requirements/development.txt\nRUN pip install --no-cache-dir -r /requirements/production.txt\n\n# COPY ./docker-compose/local/django/entrypoint /entrypoint\n# RUN chmod +x /entrypoint\n\nCOPY ./docker-compose/local/django/start /start\nRUN chmod +x /start\n\nCOPY ./docker-compose/local/django/celery/worker/start /start-celeryworker\nRUN chmod +x /start-celeryworker\n\nCOPY ./docker-compose/local/django/celery/beat/start /start-celerybeat\nRUN chmod +x /start-celerybeat\n\n# Ensure that ``python`` is in the PATH so that ``./manage.py`` works\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# Setup the locale\nRUN locale-gen en_US.UTF-8\nRUN dpkg-reconfigure locales\n\nWORKDIR /app\n\n# ENTRYPOINT [\"/entrypoint\"]\n"
}