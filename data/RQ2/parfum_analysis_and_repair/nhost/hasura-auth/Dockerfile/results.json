{
  "startTime": 1674255795152,
  "endTime": 1674255795850,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine AS builder\nWORKDIR /app\nRUN npm i -g pnpm && npm cache clean --force;\nCOPY package.json pnpm-lock.yaml tsconfig.json tsconfig.build.json ./\nCOPY patches/ ./patches/\nRUN pnpm install --frozen-lockfile\nCOPY src/ ./src/\nCOPY types/ ./types/\nRUN pnpm run build\n\nFROM node:16-alpine as remover\nARG NODE_ENV=production\nENV NODE_ENV $NODE_ENV\nENV AUTH_PORT 4000\nWORKDIR /app\nRUN npm i -g pnpm && npm cache clean --force;\nCOPY package.json pnpm-lock.yaml ./\nCOPY patches/ ./patches/\nRUN pnpm install --frozen-lockfile --prod  && pnpm store prune\nRUN pnpm run postinstall\nCOPY migrations/ ./migrations/\nCOPY email-templates/ ./email-templates\nCOPY --from=builder ./app/dist dist/\nHEALTHCHECK --interval=60s --timeout=2s --retries=3 CMD wget http://localhost:${AUTH_PORT}/healthz -q -O - > /dev/null 2>&1\nCMD [\"pnpm\", \"run\", \"start\"]\n"
}