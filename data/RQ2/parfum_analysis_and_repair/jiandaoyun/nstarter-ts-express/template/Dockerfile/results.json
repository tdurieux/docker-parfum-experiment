{
  "startTime": 1674254222085,
  "endTime": 1674254222568,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_IMAGE=node:14.18.1-alpine\n\n# 构建环境容器\nFROM ${NODE_IMAGE} as build\n\nWORKDIR /var/opt/build\n\nCOPY ./package.json ./package-lock.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY . .\nRUN npm run json-schema && \\\n    npm run config-schema && \\\n    npm run eslint:html && \\\n    npm run build\n\nRUN mkdir -p ./build && \\\n    mv ./public ./resources ./views \\\n       ./dist ./tools \\\n       package*.json *.md LICENSE makefile \\\n       ./build\n\n# 输出结果\nFROM scratch as archive\nCOPY --from=build /var/opt/build/lint ./lint\nCOPY --from=build /var/opt/build/coverage ./coverage\n\n# 运行环境容器\nFROM ${NODE_IMAGE} as runtime\n\nUSER root:root\nWORKDIR /var/app\n\nRUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.tuna.tsinghua.edu.cn/g' \\\n    /etc/apk/repositories && \\\n    apk add --no-cache tini\n\nENV TZ=UTC\n\nCOPY ./package.json ./package-lock.json ./\nRUN npm install --production && npm cache clean --force;\n\nCOPY --from=build /var/opt/build/build ./\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nVOLUME [ \"/var/app/conf.d\", \"/var/app/log\" ]\nEXPOSE 3000\n"
}