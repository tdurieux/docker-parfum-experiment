{
  "startTime": 1674250723319,
  "endTime": 1674250723782,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nLABEL maintainer \"Robert Maynard<robert.maynard@kitware.com>\"\n\n# Base dependencies for building VTK-m projects\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      autoconf \\\n      automake \\\n      autotools-dev \\\n      clang-3.8 \\\n      clang-5.0 \\\n      curl \\\n      g++ \\\n      g++-4.8 \\\n      libtbb-dev \\\n      make \\\n      ninja-build \\\n      software-properties-common \\\n      ssh && rm -rf /var/lib/apt/lists/*;\n\n# extra dependencies for dejagore machine\nRUN curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash\nRUN apt-get install -y --no-install-recommends \\\n      git \\\n      git-lfs \\\n      && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Provide a modern OpenMPI verion that supports\n# running as root via environment variables\nRUN mkdir /opt/openmpi && \\\n    curl -f -L https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.3.tar.gz > openmpi-4.0.3.tar.gz && \\\n    tar -xf openmpi-4.0.3.tar.gz && \\\n    cd openmpi-4.0.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/openmpi && \\\n    make -j all && \\\n    make install && rm openmpi-4.0.3.tar.gz\n\n# Provide a consistent CMake path across all images\n# Install CMake 3.12 as it is the minium for non-cuda builds\nRUN mkdir /opt/cmake && \\\n    curl -f -L https://github.com/Kitware/CMake/releases/download/v3.12.4/cmake-3.12.4-Linux-x86_64.sh > cmake-3.12.4-Linux-x86_64.sh && \\\n    sh cmake-3.12.4-Linux-x86_64.sh --prefix=/opt/cmake/ --exclude-subdir --skip-license && \\\n    rm cmake-3.12.4-Linux-x86_64.sh\n\n# Provide CMake 3.17 so we can re-run tests easily\n# This will be used when we run just the tests\nRUN mkdir /opt/cmake-latest/ && \\\n    curl -f -L https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3-Linux-x86_64.sh > cmake-3.17.3-Linux-x86_64.sh && \\\n    sh cmake-3.17.3-Linux-x86_64.sh --prefix=/opt/cmake-latest/ --exclude-subdir --skip-license && \\\n    rm cmake-3.17.3-Linux-x86_64.sh && \\\n    ln -s /opt/cmake-latest/bin/ctest /opt/cmake-latest/bin/ctest-latest\n\nENV PATH \"/opt/cmake/bin:/opt/cmake-latest/bin:${PATH}\"\nENV LD_LIBRARY_PATH \"/opt/openmpi/lib:${LD_LIBRARY_PATH}\"\n"
}