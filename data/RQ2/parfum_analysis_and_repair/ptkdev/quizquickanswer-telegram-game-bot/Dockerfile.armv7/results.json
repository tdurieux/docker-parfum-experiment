{
  "startTime": 1674216191556,
  "endTime": 1674216193055,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 93,
        "columnEnd": 111
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 93,
        "columnEnd": 104
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 93,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 123
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 114
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 103
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM arm32v7/ubuntu:18.10\n\nWORKDIR /app\n\nADD . /app\n\n# For cross compile on dockerhub\nENV QEMU_EXECVE 1\nCOPY docker/armv7/qemu-arm-static /usr/bin/\nCOPY docker/armv7/resin-xbuild /usr/bin/\nRUN [ \"/usr/bin/qemu-arm-static\", \"/bin/sh\", \"-c\", \"ln -s resin-xbuild /usr/bin/cross-build-start; ln -s resin-xbuild /usr/bin/cross-build-end; ln /bin/sh /bin/sh.real\" ]\nRUN [ \"cross-build-start\" ]\n\nRUN apt-get update && apt-get install -y apt-transport-https ca-certificates --assume-yes --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y locales --assume-yes && rm -rf /var/lib/apt/lists/* && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.utf8\n\nRUN apt-get update && apt-get install -y xvfb libssl-dev curl xauth --assume-yes --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y build-essential --assume-yes --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y npm --assume-yes --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;\n\n# Install pm2\nRUN npm config set unsafe-perm true && npm config set registry http://registry.npmjs.org/ && npm install pm2 -g && npm cache clean --force;\n\n# Install project dependencies\nRUN npm config set unsafe-perm true && npm config set registry http://registry.npmjs.org/ && npm install && npm cache clean --force;\nRUN npm config set unsafe-perm true && npm config set registry http://registry.npmjs.org/ && npm install puppeteer@1.9.0 && npm cache clean --force;\n\n# For cross compile on dockerhub\nRUN [ \"cross-build-end\" ]\n\nCMD [\"pm2-runtime\", \".pm2-process.json\"]"
}