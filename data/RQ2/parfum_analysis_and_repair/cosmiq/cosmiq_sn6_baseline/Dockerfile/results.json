{
  "startTime": 1674221108524,
  "endTime": 1674221109315,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 31,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 18,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.2-devel-ubuntu16.04\nLABEL maintainer=\"dhogan <dhogan@iqt.org>\"\nLABEL org.label-schema.schema-version 1.0\nLABEL org.label-schema.name SpaceNet_6_Baseline\n\n# Modified version of the Solaris Dockerfile.\n\nENV CUDNN_VERSION 7.3.0.29\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\nARG solaris_branch='master'\n\n\n# prep apt-get and cudnn\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t    apt-utils \\\n            libcudnn7=$CUDNN_VERSION-1+cuda9.0 \\\n            libcudnn7-dev=$CUDNN_VERSION-1+cuda9.0 && \\\n    apt-mark hold libcudnn7 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install requirements\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bc \\\n    bzip2 \\\n    ca-certificates \\\n    curl \\\n    emacs \\\n    git \\\n    less \\\n    libgdal-dev \\\n    libssl-dev \\\n    libffi-dev \\\n    libncurses-dev \\\n    libgl1 \\\n    jq \\\n    nfs-common \\\n    parallel \\\n    python-dev \\\n    python-pip \\\n    python-wheel \\\n    python-setuptools \\\n    tree \\\n    unzip \\\n    vim \\\n    wget \\\n    xterm \\\n    build-essential \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nSHELL [\"/bin/bash\", \"-c\"]\nENV PATH /opt/conda/bin:$PATH\n\n\n# install anaconda\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.4-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\n# prepend pytorch and conda-forge before default channel\nRUN conda update -n base -c defaults conda && \\\n    conda config --prepend channels conda-forge && \\\n    conda config --prepend channels pytorch\n\nWORKDIR /root/\nRUN git clone https://github.com/cosmiq/solaris.git && \\\n    cd solaris && \\\n    git checkout ${solaris_branch} && \\\n    conda env create -f environment-gpu.yml\nENV PATH /opt/conda/envs/solaris/bin:$PATH\n\nRUN source activate solaris && pip install --no-cache-dir git+git://github.com/toblerity/shapely.git\nRUN cd solaris && pip install --no-cache-dir .\n\n# INSERT COPY COMMANDS HERE TO COPY FILES TO THE WORKING DIRECTORY.\n# FOR EXAMPLE:\nCOPY *.py /root/\nCOPY *.sh /root/\nCOPY *.txt /root/\nCOPY weights /root/weights\n\n# SET PERMISSIONS FOR EXECUTION OF SHELL SCRIPTS\nRUN chmod a+x /root/train.sh && chmod a+x /root/test.sh && chmod a+x /root/settings.sh\nENV PATH $PATH:/root/\n"
}