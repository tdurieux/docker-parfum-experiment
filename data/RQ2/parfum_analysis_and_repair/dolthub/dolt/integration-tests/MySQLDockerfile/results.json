{
  "startTime": 1674251968126,
  "endTime": 1674251968971,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=linux/amd64 ubuntu:18.04\n\n# install python, libmysqlclient-dev, java, bats, git ruby, perl, cpan\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt update -y && \\\n    apt install --no-install-recommends -y \\\n        curl \\\n        gnupg \\\n        libwxbase3.0-0v5 \\\n        libwxgtk3.0-gtk3-0v5 \\\n        libsctp1 \\\n        software-properties-common && \\\n    curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \\\n    add-apt-repository ppa:deadsnakes/ppa -y && \\\n    curl -f -OL https://packages.erlang-solutions.com/ubuntu/pool/esl-erlang_22.3.4.9-1~ubuntu~bionic_amd64.deb && \\\n    dpkg -i esl-erlang_22.3.4.9-1~ubuntu~bionic_amd64.deb && \\\n    curl -f -LO http://packages.erlang-solutions.com/ubuntu/pool/elixir_1.10.1-1~ubuntu~bionic_all.deb && \\\n    dpkg -i elixir_1.10.1-1~ubuntu~bionic_all.deb && \\\n    apt update -y && \\\n    apt install --no-install-recommends -y \\\n        python3.8 \\\n        python3-pip \\\n        curl \\\n        wget \\\n        pkg-config \\\n        mysql-client \\\n        libmysqlclient-dev \\\n        openjdk-8-jdk \\\n        ant \\\n        ca-certificates-java \\\n        bats \\\n        perl \\\n        cpanminus \\\n        cmake \\\n        g++ \\\n        libmysqlcppconn-dev \\\n        git \\\n        ruby \\\n        gem \\\n        libc6 \\\n        libgcc1 \\\n        libgssapi-krb5-2 \\\n        libicu60 \\\n        libssl1.1 \\\n        libstdc++6 \\\n        zlib1g \\\n        r-base \\\n        postgresql \\\n        postgresql-contrib \\\n        libpq-dev \\\n        nodejs \\\n        postgresql-server-dev-all && \\\n        update-ca-certificates -f && rm -rf /var/lib/apt/lists/*;\n\n# install go\nWORKDIR /root\nENV GO_VERSION=1.18\nENV GOPATH=$HOME/go\nENV PATH=$PATH:$GOPATH/bin\nENV PATH=$PATH:$GOPATH/bin:/usr/local/go/bin\nRUN curl -f -O \"https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz\" && \\\n    sha256sum \"go${GO_VERSION}.linux-amd64.tar.gz\" && \\\n    tar -xvf \"go${GO_VERSION}.linux-amd64.tar.gz\" -C /usr/local && \\\n    chown -R root:root /usr/local/go && \\\n    mkdir -p $HOME/go/{bin,src} && \\\n    go version && rm \"go${GO_VERSION}.linux-amd64.tar.gz\"\n\n# install MySQL dependency from source\nRUN git clone https://github.com/go-sql-driver/mysql.git\nWORKDIR mysql\nRUN git checkout tags/v1.6.0 -b v1.6.0\nRUN go install .\nWORKDIR /\n\n# install dotnet\nRUN curl -f -LO https://download.visualstudio.microsoft.com/download/pr/13b9d84c-a35b-4ffe-8f62-447a01403d64/1f9ae31daa0f7d98513e7551246899f2/dotnet-sdk-5.0.400-linux-x64.tar.gz && \\\n    tar -C /usr/local/bin -xzf dotnet-sdk-5.0.400-linux-x64.tar.gz && \\\n    dotnet --version && rm dotnet-sdk-5.0.400-linux-x64.tar.gz\n\n# install pip for python3.8\nRUN curl -f -LO https://bootstrap.pypa.io/get-pip.py && \\\n  python3.8 get-pip.py && \\\n  pip --version\n\n# install mysql connector and pymsql\nRUN pip install --no-cache-dir mysql-connector-python PyMySQL sqlalchemy\n\n# Setup JAVA_HOME -- useful for docker commandline\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\n\n# install mysql connector java\nRUN mkdir -p /mysql-client-tests/java\nRUN curl -f -L -o /mysql-client-tests/java/mysql-connector-java-8.0.21.jar \\\n  https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.21/mysql-connector-java-8.0.21.jar\n\n# install node deps\nCOPY mysql-client-tests/node/package.json /mysql-client-tests/node/\nCOPY mysql-client-tests/node/package-lock.json /mysql-client-tests/node/\nWORKDIR /mysql-client-tests/node\nRUN npm install && npm cache clean --force;\n\n# install cpan dependencies\nRUN cpanm DBD::mysql\n\n# install ruby dependencies\nCOPY mysql-client-tests/ruby/Gemfile /mysql-client-tests/ruby/\nCOPY mysql-client-tests/ruby/Gemfile.lock /mysql-client-tests/ruby/\nWORKDIR /mysql-client-tests/ruby\nRUN gem install bundler -v 2.1.4 && bundle install\n\n# install R packages\nRUN Rscript -e 'install.packages(c(\"DBI\", \"RMySQL\", \"RMariaDB\"), \\\n                  repos = c(RSPM=\"https://packagemanager.rstudio.com/cran/__linux__/bionic/latest\"))'\n\n# install postgres and psql\nRUN service postgresql start\n\n# install mysql_fdw\nWORKDIR /mysql-client-tests/mysql_fdw\nRUN git clone https://github.com/EnterpriseDB/mysql_fdw --branch REL-2_7_0\nWORKDIR /mysql-client-tests/mysql_fdw/mysql_fdw\nRUN make USE_PGXS=1 && \\\n    make USE_PGXS=1 install\n\n# install dolt from source\nWORKDIR /root/building\nCOPY ./go .\nENV GOFLAGS=\"-mod=readonly\"\nRUN go build -o /usr/local/bin/dolt ./cmd/dolt\n\nCOPY mysql-client-tests /mysql-client-tests\nCOPY mysql-client-tests/mysql-client-tests-entrypoint.sh /mysql-client-tests/entrypoint.sh\n\nWORKDIR /mysql-client-tests\nENTRYPOINT [\"/mysql-client-tests/entrypoint.sh\"]\n"
}