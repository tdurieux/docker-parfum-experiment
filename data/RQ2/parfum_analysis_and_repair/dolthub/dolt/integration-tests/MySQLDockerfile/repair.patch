diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dolthub/dolt/integration-tests/MySQLDockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dolthub/dolt/integration-tests/MySQLDockerfile/repaired.Dockerfile
index 544fa00..c2eeaff 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dolthub/dolt/integration-tests/MySQLDockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dolthub/dolt/integration-tests/MySQLDockerfile/repaired.Dockerfile
@@ -3,21 +3,21 @@ FROM --platform=linux/amd64 ubuntu:18.04
 # install python, libmysqlclient-dev, java, bats, git ruby, perl, cpan
 ENV DEBIAN_FRONTEND=noninteractive
 RUN apt update -y && \
-    apt install -y \
+    apt install --no-install-recommends -y \
         curl \
         gnupg \
         libwxbase3.0-0v5 \
         libwxgtk3.0-gtk3-0v5 \
         libsctp1 \
         software-properties-common && \
-    curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
+    curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \
     add-apt-repository ppa:deadsnakes/ppa -y && \
-    curl -OL http://packages.erlang-solutions.com/ubuntu/pool/esl-erlang_22.3.4.9-1~ubuntu~bionic_amd64.deb && \
+    curl -f -OL https://packages.erlang-solutions.com/ubuntu/pool/esl-erlang_22.3.4.9-1~ubuntu~bionic_amd64.deb && \
     dpkg -i esl-erlang_22.3.4.9-1~ubuntu~bionic_amd64.deb && \
-    curl -LO http://packages.erlang-solutions.com/ubuntu/pool/elixir_1.10.1-1~ubuntu~bionic_all.deb && \
+    curl -f -LO http://packages.erlang-solutions.com/ubuntu/pool/elixir_1.10.1-1~ubuntu~bionic_all.deb && \
     dpkg -i elixir_1.10.1-1~ubuntu~bionic_all.deb && \
     apt update -y && \
-    apt install -y \
+    apt install --no-install-recommends -y \
         python3.8 \
         python3-pip \
         curl \
@@ -35,7 +35,7 @@ RUN apt update -y && \
         g++ \
         libmysqlcppconn-dev \
         git \
-        ruby\
+        ruby \
         gem \
         libc6 \
         libgcc1 \
@@ -50,7 +50,7 @@ RUN apt update -y && \
         libpq-dev \
         nodejs \
         postgresql-server-dev-all && \
-        update-ca-certificates -f
+        update-ca-certificates -f && rm -rf /var/lib/apt/lists/*;
 
 # install go
 WORKDIR /root
@@ -58,12 +58,12 @@ ENV GO_VERSION=1.18
 ENV GOPATH=$HOME/go
 ENV PATH=$PATH:$GOPATH/bin
 ENV PATH=$PATH:$GOPATH/bin:/usr/local/go/bin
-RUN curl -O "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz" && \
+RUN curl -f -O "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz" && \
     sha256sum "go${GO_VERSION}.linux-amd64.tar.gz" && \
     tar -xvf "go${GO_VERSION}.linux-amd64.tar.gz" -C /usr/local && \
     chown -R root:root /usr/local/go && \
     mkdir -p $HOME/go/{bin,src} && \
-    go version
+    go version && rm "go${GO_VERSION}.linux-amd64.tar.gz"
 
 # install MySQL dependency from source
 RUN git clone https://github.com/go-sql-driver/mysql.git
@@ -73,31 +73,31 @@ RUN go install .
 WORKDIR /
 
 # install dotnet
-RUN curl -LO https://download.visualstudio.microsoft.com/download/pr/13b9d84c-a35b-4ffe-8f62-447a01403d64/1f9ae31daa0f7d98513e7551246899f2/dotnet-sdk-5.0.400-linux-x64.tar.gz && \
+RUN curl -f -LO https://download.visualstudio.microsoft.com/download/pr/13b9d84c-a35b-4ffe-8f62-447a01403d64/1f9ae31daa0f7d98513e7551246899f2/dotnet-sdk-5.0.400-linux-x64.tar.gz && \
     tar -C /usr/local/bin -xzf dotnet-sdk-5.0.400-linux-x64.tar.gz && \
-    dotnet --version
+    dotnet --version && rm dotnet-sdk-5.0.400-linux-x64.tar.gz
 
 # install pip for python3.8
-RUN curl -LO https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -LO https://bootstrap.pypa.io/get-pip.py && \
   python3.8 get-pip.py && \
   pip --version
 
 # install mysql connector and pymsql
-RUN pip install mysql-connector-python PyMySQL sqlalchemy
+RUN pip install --no-cache-dir mysql-connector-python PyMySQL sqlalchemy
 
 # Setup JAVA_HOME -- useful for docker commandline
 ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/
- 
+
 # install mysql connector java
 RUN mkdir -p /mysql-client-tests/java
-RUN curl -L -o /mysql-client-tests/java/mysql-connector-java-8.0.21.jar \
+RUN curl -f -L -o /mysql-client-tests/java/mysql-connector-java-8.0.21.jar \
   https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.21/mysql-connector-java-8.0.21.jar
 
 # install node deps
 COPY mysql-client-tests/node/package.json /mysql-client-tests/node/
 COPY mysql-client-tests/node/package-lock.json /mysql-client-tests/node/
 WORKDIR /mysql-client-tests/node
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # install cpan dependencies
 RUN cpanm DBD::mysql