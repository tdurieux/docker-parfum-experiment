{
  "startTime": 1674253761003,
  "endTime": 1674253761786,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6\n\n# Install GridEngine\nRUN yum -y install epel-release && \\\n    yum install -y \\\n        gridengine \\\n        gridengine-qmaster \\\n        gridengine-execd \\\n        gridengine-qmon \\\n        gridengine-devel \\\n        docker-io \\\n    && yum clean all && rm -rf /var/cache/yum\n\n# Configure GridEngine\nWORKDIR /usr/share/gridengine/\nADD docker_configuration.conf /usr/share/gridengine/docker_configuration.conf\nADD hostgroup.conf /usr/share/gridengine/hostgroup.conf\nADD debug.queue /usr/share/gridengine/debug.queue\nADD pe.template /usr/share/gridengine/pe.template\n\n## Patch the os check which does not support this version of linux\nRUN sed -i 's/osrelease=\"`$UNAME -r`\"/osrelease=\"2.6.1\"/g' util/arch\n\n# Install the master and execution servers\nRUN echo \"$(grep \"$HOSTNAME\" /etc/hosts | awk '{print $1;}') docker\" >> /etc/hosts && \\\n    echo \"domain docker\" >> /etc/resolv.conf && \\\n    ./inst_sge -x -m -auto /usr/share/gridengine/docker_configuration.conf && \\\n    cd /usr/share/gridengine/default/common && \\\n    source /usr/share/gridengine/default/common/settings.sh && \\\n    echo docker > act_qmaster && \\\n    qconf -Mhgrp /usr/share/gridengine/hostgroup.conf && \\\n    qconf -Ap /usr/share/gridengine/pe.template && \\\n    qconf -Aq /usr/share/gridengine/debug.queue && \\\n    qconf -Mq /usr/share/gridengine/debug.queue\n\n# Add in a test submit script\nADD gridengine.submit /opt/gridengine.submit\n\n## Add entrypoint script to set the current hostname so the scheduler can communicate\nADD docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\nWORKDIR /opt/\nVOLUME /opt/\n\nENTRYPOINT [ \"/usr/local/bin/docker-entrypoint.sh\" ]\nCMD [\"/bin/bash\"]\n"
}