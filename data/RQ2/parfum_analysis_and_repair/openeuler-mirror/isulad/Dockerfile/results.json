{
  "startTime": 1674249860805,
  "endTime": 1674249863177,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 1,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 38,
        "columnEnd": 65
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 87,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 1,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 1,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 1,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 186,
        "lineEnd": 186,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 205,
        "lineEnd": 205,
        "columnStart": 1,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 1,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 235,
        "lineEnd": 235,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 255,
        "lineEnd": 255,
        "columnStart": 8,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#######################################################################\n##- Copyright (c) Huawei Technologies Co., Ltd. 2019. All rights reserved.\n# - lcr licensed under the Mulan PSL v2.\n# - You can use this software according to the terms and conditions of the Mulan PSL v2.\n# - You may obtain a copy of Mulan PSL v2 at:\n# -     http://license.coscl.org.cn/MulanPSL2\n# - THIS SOFTWARE IS PROVIDED ON AN \"AS IS\" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER EXPRESS OR\n# - IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR FIT FOR A PARTICULAR\n# - PURPOSE.\n# - See the Mulan PSL v2 for more details.\n##- @Description: prepare compile container environment\n##- @Author: lifeng\n##- @Create: 2020-01-10\n#######################################################################\n# This file describes the isulad compile container image.\n#\n# Usage:\n#\n# docker build --build-arg http_proxy=YOUR_HTTP_PROXY_IF_NEEDED \\\n#\t\t--build-arg https_proxy=YOUR_HTTPS_PROXY_IF_NEEDED \\\n#\t\t-t YOUR_IMAGE_NAME -f ./Dockerfile .\n\n\nFROM\tcentos:7.6.1810 AS build\nMAINTAINER LiFeng <lifeng68@huawei.com>\n\nRUN echo \"nameserver 8.8.8.8\" > /etc/resolv.conf && \\\n    echo \"nameserver 8.8.4.4\" >> /etc/resolv.conf && \\\n    echo \"search localdomain\" >> /etc/resolv.conf\n\n# Install dependency package\nRUN yum clean all && yum makecache && yum install -y epel-release && yum swap -y fakesystemd systemd && \\\n\tyum update -y && \\\n\tyum install -y  automake \\\n\t\t\tautoconf \\\n\t\t\tlibtool \\\n\t\t\tmake \\\n\t\t\twhich \\\n\t\t\tgdb \\\n\t\t\tstrace \\\n\t\t\trpm-build \\\n\t\t\tgraphviz \\\n\t\t\tlibcap \\\n\t\t\tlibcap-devel \\\n\t\t\tlibxslt  \\\n\t\t\tdocbook2X \\\n\t\t\tlibselinux \\\n\t\t\tlibselinux-devel \\\n\t\t\tlibseccomp \\\n\t\t\tlibseccomp-devel \\\n\t\t\tyajl-devel \\\n\t\t\tgit \\\n\t\t\tbridge-utils \\\n\t\t\tdnsmasq \\\n\t\t\tlibcgroup \\\n\t\t\trsync \\\n\t\t\tiptables \\\n\t\t\tiproute \\\n\t\t\tnet-tools \\\n\t\t\tunzip \\\n\t\t\ttar \\\n\t\t\twget \\\n\t\t\tcppcheck \\\n\t\t\tpython3 \\\n\t\t\tpython3-pip \\\n\t\t\tpython \\\n\t\t\tpython-pip \\\n\t\t\tdevice-mapper-devel \\\n\t\t\tlibtar \\\n\t\t\tlibtar-devel \\\n\t\t\tlibcurl-devel \\\n\t\t\tzlib-devel \\\n\t\t\tglibc-headers \\\n\t\t\topenssl-devel \\\n\t\t\tgcc \\\n\t\t\tgcc-c++ \\\n\t\t\thostname \\\n\t\t\tsqlite-devel \\\n\t\t\tgpgme \\\n\t\t\tgpgme-devel \\\n\t\t\texpect \\\n\t\t\tsystemd-devel \\\n\t\t\tsystemd-libs \\\n\t\t\tgo \\\n\t\t\tCUnit \\\n\t\t\tCUnit-devel \\\n\t\t\tvalgrind \\\n\t\t\te2fsprogs && rm -rf /var/cache/yum\n\nRUN yum clean all && \\\n    (cd /lib/systemd/system/sysinit.target.wants/; for i in *; \\\n    do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n    rm -f /lib/systemd/system/multi-user.target.wants/*;\\\n    rm -f /etc/systemd/system/*.wants/*;\\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/basic.target.wants/*;\\\n    rm -f /lib/systemd/system/anaconda.target.wants/*;\n\nRUN echo \"export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH\" >> /etc/bashrc && \\\n    echo \"export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:$LD_LIBRARY_PATH\" >> /etc/bashrc && \\\n    echo \"/usr/lib\" >> /etc/ld.so.conf && \\\n    echo \"/usr/local/lib\" >> /etc/ld.so.conf\n\n\n# disalbe sslverify\nRUN git config --global http.sslverify false\n\n# install cmake\nRUN set -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/cmake.git && \\\n\tcd cmake && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar -xzvf cmake-3.12.1.tar.gz && \\\n\tcd cmake-3.12.1 && \\\n\t./bootstrap && make && make install && \\\n\tldconfig && rm cmake-3.12.1.tar.gz\n\n# Centos has no protobuf, protobuf-devel, grpc, grpc-devel, grpc-plugin\n# and we should install them manually.\n# install protobuf\nRUN set -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/protobuf.git && \\\n\tcd protobuf && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar -xzvf protobuf-all-3.9.0.tar.gz && \\\n\tcd protobuf-3.9.0 && \\\n\t./autogen.sh && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake -j $(nproc) && \\\n\tmake install && \\\n\tldconfig && rm protobuf-all-3.9.0.tar.gz\n\n# install c-ares\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n\tset -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/c-ares.git && \\\n\tcd c-ares && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar -xzvf c-ares-1.15.0.tar.gz && \\\n\tcd c-ares-1.15.0 && \\\n\tautoreconf -if && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --disable-dependency-tracking && \\\n\tmake -j $(nproc) && \\\n\tmake install && \\\n\tldconfig && rm c-ares-1.15.0.tar.gz\n\n# install grpc\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n\tset -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/grpc.git && \\\n\tcd grpc && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar -xzvf grpc-1.22.0.tar.gz && \\\n\tcd grpc-1.22.0 && \\\n\tmake -j $(nproc) && \\\n\tmake install && \\\n\tldconfig && rm grpc-1.22.0.tar.gz\n\n# install libevent\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n\tset -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/libevent.git && \\\n\tcd libevent && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar -xzvf libevent-2.1.11-stable.tar.gz && \\\n\tcd libevent-2.1.11-stable && \\\n\t./autogen.sh && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake -j $(nproc) && \\\n\tmake install && \\\n\tldconfig && rm libevent-2.1.11-stable.tar.gz\n\n# install libevhtp\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n\tset -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/libevhtp.git && \\\n\tcd libevhtp && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar -xzvf libevhtp-1.2.16.tar.gz && \\\n\tcd libevhtp-1.2.16 && \\\n\tpatch -p1 -F1 -s < ../0001-support-dynamic-threads.patch && \\\n\tpatch -p1 -F1 -s < ../0002-close-openssl.patch && \\\n\trm -rf build && \\\n\tmkdir build && \\\n\tcd build && \\\n\tcmake -D EVHTP_BUILD_SHARED=on -D EVHTP_DISABLE_SSL=on ../ && \\\n\tmake -j $(nproc) && \\\n\tmake install && \\\n\tldconfig && rm libevhtp-1.2.16.tar.gz\n\n# install http-parser\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n\tset -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/http-parser.git && \\\n\tcd http-parser && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar -xzvf http-parser-2.9.2.tar.gz && \\\n\tcd http-parser-2.9.2 && \\\n\tmake -j CFLAGS=\"-Wno-error\" && \\\n\tmake CFLAGS=\"-Wno-error\" install && \\\n\tldconfig && rm http-parser-2.9.2.tar.gz\n\n# install libwebsockets\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n\tset -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/libwebsockets.git && \\\n\tcd libwebsockets && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar -xzvf libwebsockets-2.4.2.tar.gz && \\\n\tcd libwebsockets-2.4.2 && \\\n\tpatch -p1 -F1 -s < ../libwebsockets-fix-coredump.patch && \\\n\tmkdir build && \\\n\tcd build && \\\n\tcmake -DLWS_WITH_SSL=0 -DLWS_MAX_SMP=32 -DCMAKE_BUILD_TYPE=Debug ../ && \\\n\tmake -j $(nproc) && \\\n\tmake install && \\\n\tldconfig && rm libwebsockets-2.4.2.tar.gz\n\n# install gtest/gmock\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n\tset -x && \\\n\tcd ~ && \\\n\tgit clone https://gitee.com/src-openeuler/gtest.git && \\\n\tcd gtest && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n\ttar xf release-1.8.1.tar.gz && \\\n\tcd googletest-release-1.8.1 && \\\n\tpatch -p1 -F1 -s < ../gtest-1.8.1-null-pointer.patch && \\\n\tpatch -p1 -F1 -s < ../gtest-PR1839-Fix-Python3-support.patch && \\\n\tpatch -p1 -F1 -s < ../gtest-1.8.1-libversion.patch && \\\n\tpatch -p1 -F1 -s < ../gtest-1.8.1-add-missing-pkgconfig-requires.patch && \\\n\tmkdir -p build && \\\n\tcd build && \\\n\tcmake -DBUILD_SHARED_LIBS=ON ../ && \\\n\tmake -j $(nproc) && \\\n\tmake install && \\\n\tldconfig && rm release-1.8.1.tar.gz\n\n# install libarchive\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n        set -x && \\\n        cd ~ && \\\n        git clone https://gitee.com/src-openeuler/libarchive.git && \\\n        cd libarchive && \\\n\tgit checkout -b openEuler-20.03-LTS-tag openEuler-20.03-LTS-tag && \\\n        tar -zxvf libarchive-3.4.1.tar.gz && \\\n        cd libarchive-3.4.1 && \\\n        patch -p1 -F1 -s < ../libarchive-uninitialized-value.patch && \\\n        cd build && \\\n        cmake -DCMAKE_USE_SYSTEM_LIBRARIES=ON ../ && \\\n        make -j $(nproc) && \\\n        make install && \\\n        ldconfig && rm libarchive-3.4.1.tar.gz\n\nRUN export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:$PKG_CONFIG_PATH && \\\n        set -x && \\\n        cd ~ && \\\n        git clone https://gitee.com/openeuler/iSulad/ &&\\\n        cd iSulad &&\\\n        # git checkout 756c0bdc308c2845971ad9ca0c58760a84288bc0 &&\\\n        git checkout v2.0.6 &&\\\n        cd CI &&\\\n        ./install_depends.sh &&\\\n        cd .. &&\\\n        mkdir build &&\\\n        cd build &&\\\n        cmake .. &&\\\n        make -j $(nproc) && \\\n        make install && \\\n        ldconfig\n\nFROM    centos:7.6.1810\n\nCOPY --from=build /usr/local/bin /usr/local/bin\nCOPY --from=build /usr/local/lib /usr/local/lib\nCOPY --from=build /usr/local/lib64 /usr/local/lib64\nCOPY --from=build /usr/lib64 /usr/lib64\nCOPY --from=build /etc/default/isulad/ /etc/default/isulad/\nCOPY --from=build /etc/isulad /etc/isulad\n\n\n\nRUN echo \"/usr/lib\" >> /etc/ld.so.conf && \\\n    echo \"/usr/local/lib\" >> /etc/ld.so.conf &&\\\n    ldconfig\n\n\nVOLUME [ \"/sys/fs/cgroup\" ]\nCMD [\"/usr/local/bin/isulad\"]"
}