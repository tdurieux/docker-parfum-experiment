{
  "startTime": 1674253749694,
  "endTime": 1674253750572,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_REGISTRY=registry.access.redhat.com\nARG BASE_IMAGE=ubi8/ubi\nARG BASE_TAG=8.6\n\nFROM ${BASE_REGISTRY}/${BASE_IMAGE}:${BASE_TAG} AS extracted_bundle\nCOPY bundle.tar.gz /\n\nWORKDIR /bundle\nRUN tar -xzf /bundle.tar.gz && rm /bundle.tar.gz\n\nFROM ${BASE_REGISTRY}/${BASE_IMAGE}:${BASE_TAG} AS base\n\nLABEL name=\"scanner-db\" \\\n      vendor=\"StackRox\" \\\n      maintainer=\"support@stackrox.com\" \\\n      summary=\"Image scanner database for the StackRox Kubernetes Security Platform\" \\\n      description=\"This image supports image scanning in the StackRox Kubernetes Security Platform.\"\n\nENV PG_MAJOR=12\nENV PATH=\"$PATH:/usr/pgsql-$PG_MAJOR/bin/\" \\\n    PGDATA=\"/var/lib/postgresql/data/pgdata\"\n\nCOPY scripts/docker-entrypoint.sh /usr/local/bin/\nCOPY --from=extracted_bundle /bundle/etc/postgresql.conf /bundle/etc/pg_hba.conf /etc/\n\nRUN groupadd -g 70 postgres && \\\n    adduser postgres -u 70 -g 70 -d /var/lib/postgresql -s /bin/sh && \\\n    dnf upgrade -y && \\\n    dnf install -y \\\n        ca-certificates libicu systemd-sysv glibc-locale-source glibc-langpack-en \\\n        https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm && \\\n    dnf install -y postgresql12-server && \\\n    dnf clean all && \\\n    rpm -e --nodeps $(rpm -qa 'pgdg-redhat-repo*') && \\\n    # (Optional) Remove line below to keep package management utilities\n    rpm -e --nodeps $(rpm -qa curl '*rpm*' '*dnf*' '*libsolv*' '*hawkey*' 'yum*') && \\\n    rm -rf /var/cache/dnf /var/cache/yum && \\\n    localedef -f UTF-8 -i en_US en_US.UTF-8 && \\\n    chown postgres:postgres /usr/local/bin/docker-entrypoint.sh && \\\n    chmod +x /usr/local/bin/docker-entrypoint.sh && \\\n    mkdir /docker-entrypoint-initdb.d\n\n# This is equivalent to postgres:postgres.\nUSER 70:70\n\nCOPY --from=extracted_bundle /bundle/docker-entrypoint-initdb.d/definitions.sql.gz /docker-entrypoint-initdb.d/\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 5432\nCMD [\"postgres\", \"-c\", \"config_file=/etc/postgresql.conf\"]\n"
}