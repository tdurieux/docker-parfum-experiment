{
  "startTime": 1674253946762,
  "endTime": 1674253947314,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 33,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_REGISTRY=registry.access.redhat.com\nARG BASE_IMAGE=ubi8-minimal\nARG BASE_TAG=8.6\n\nFROM ${BASE_REGISTRY}/${BASE_IMAGE}:${BASE_TAG} AS extracted_bundle\n\nCOPY bundle.tar.gz /\nWORKDIR /bundle\nRUN microdnf install tar gzip && tar -zxf /bundle.tar.gz && rm /bundle.tar.gz\n\nFROM ${BASE_REGISTRY}/${BASE_IMAGE}:${BASE_TAG} AS base\n\nLABEL name=\"scanner-slim\" \\\n      vendor=\"StackRox\" \\\n      maintainer=\"support@stackrox.com\" \\\n      summary=\"Image scanner for the StackRox Kubernetes Security Platform\" \\\n      description=\"This image supports image scanning in the StackRox Kubernetes Security Platform.\"\n\nSHELL [\"/bin/sh\", \"-o\", \"pipefail\", \"-c\"]\n\nCOPY scripts /\n\nCOPY --from=extracted_bundle /bundle/scanner ./\n\nCOPY ./THIRD_PARTY_NOTICES/ /THIRD_PARTY_NOTICES/\n\nRUN microdnf upgrade && \\\n    microdnf install xz && \\\n    microdnf clean all && \\\n    # (Optional) Remove line below to keep package management utilities\n    # We don't uninstall rpm because scanner uses it to get packages installed in scanned images.\n    rpm -e --nodeps $(rpm -qa curl '*dnf*' '*libsolv*' '*hawkey*' 'yum*') && \\\n    rm -rf /var/cache/dnf /var/cache/yum && \\\n    chown -R 65534:65534 /tmp && \\\n    # The contents of paths mounted as emptyDir volumes in Kubernetes are saved\n    # by the script `save-dir-contents` during the image build. The directory\n    # contents are then restored by the script `restore-all-dir-contents`\n    # during the container start.\n    chown -R 65534:65534 /etc/pki /etc/ssl && /save-dir-contents /etc/pki/ca-trust /etc/ssl && \\\n    chmod +rx /scanner\n\nENV REPO_TO_CPE_DIR=\"/repo2cpe\"\n\nCOPY --chown=65534:65534 --from=extracted_bundle \"/bundle${REPO_TO_CPE_DIR}/\" \".${REPO_TO_CPE_DIR}/\"\nCOPY --chown=65534:65534 --from=extracted_bundle /bundle/genesis_manifests.json ./\n\n# This is equivalent to nobody:nobody.\nUSER 65534:65534\n\nENV ROX_SLIM_MODE=\"true\"\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}