{
  "startTime": 1674250863758,
  "endTime": 1674250865308,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 108,
        "columnStart": 37,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 18,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 18,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 18,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 19,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 94,
        "columnStart": 18,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 111,
        "lineEnd": 114,
        "columnStart": 18,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 18,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 18,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 18,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 19,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 94,
        "columnStart": 18,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 111,
        "lineEnd": 114,
        "columnStart": 18,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 168
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.4.2-devel-ubuntu20.04\n\nCMD [\"/bin/bash\"]\n\n# Args for setting up non-root users, example command to use your own user:\n#   docker build -t <name: vtr3> \\\n#     --build-arg USERID=$(id -u) \\\n#     --build-arg GROUPID=$(id -g) \\\n#     --build-arg USERNAME=$(whoami) \\\n#     --build-arg HOMEDIR=/home .\nARG GROUPID=0\nARG USERID=0\nARG USERNAME=root\nARG HOMEDIR=\n\nRUN if [ ${GROUPID} -ne 0 ]; then addgroup --gid ${GROUPID} ${USERNAME}; fi \\\n  && if [ ${USERID} -ne 0 ]; then adduser --disabled-password --gecos '' --uid ${USERID} --gid ${GROUPID} ${USERNAME}; fi\n\n# Default number of threads for make build\nARG NUMPROC=12\n\nENV DEBIAN_FRONTEND=noninteractive\n\nENV VTRROOT=${HOMEDIR}/${USERNAME}/ASRL\nENV VTRSRC=${VTRROOT}/vtr3 \\\n  VTRDEPS=${VTRROOT}/deps \\\n  VTRVENV=${VTRROOT}/venv \\\n  VTRDATA=${VTRROOT}/data \\\n  VTRTEMP=${VTRROOT}/temp\nRUN mkdir -p ${VTRROOT} ${VTRSRC} ${VTRDEPS} ${VTRDATA} ${VTRVENV} ${VTRTEMP}\n\n## Common packages\nRUN apt update && apt install --no-install-recommends -q -y wget git && rm -rf /var/lib/apt/lists/*;\n\n## Install Eigen\nRUN apt update && apt install --no-install-recommends -q -y libeigen3-dev && rm -rf /var/lib/apt/lists/*;\n\n## Install PROJ (8.0.0)\nRUN apt update && apt install --no-install-recommends -q -y cmake libsqlite3-dev sqlite3 libtiff-dev libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p ${VTRDEPS}/proj && cd ${VTRDEPS}/proj \\\n  && git clone https://github.com/OSGeo/PROJ.git . && git checkout 8.0.0 \\\n  && mkdir -p ${VTRDEPS}/proj/build && cd ${VTRDEPS}/proj/build \\\n  && cmake .. && cmake --build . -j${NUMPROC} --target install\nENV LD_LIBRARY_PATH=/usr/local/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}\n\n## Install OpenCV (4.5.0)\nRUN apt install --no-install-recommends -q -y build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python3-dev python3-numpy && rm -rf /var/lib/apt/lists/*;\nRUN cd ${VTRDEPS} \\\n  && git clone https://github.com/opencv/opencv.git \\\n  && git clone https://github.com/opencv/opencv_contrib.git \\\n  && cd ${VTRDEPS}/opencv && git checkout 4.5.0 \\\n  && cd ${VTRDEPS}/opencv_contrib && git checkout 4.5.0 \\\n  && mkdir -p ${VTRDEPS}/opencv/build && cd ${VTRDEPS}/opencv/build \\\n  && cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n  -D CMAKE_INSTALL_PREFIX=/usr/local/opencv_cuda \\\n  -D OPENCV_EXTRA_MODULES_PATH=${VTRDEPS}/opencv_contrib/modules \\\n  -D PYTHON_DEFAULT_EXECUTABLE=/usr/bin/python3.8 \\\n  -DBUILD_opencv_python2=OFF \\\n  -DBUILD_opencv_python3=ON \\\n  -DWITH_OPENMP=ON \\\n  -DWITH_CUDA=ON \\\n  -DOPENCV_ENABLE_NONFREE=ON \\\n  -D OPENCV_GENERATE_PKGCONFIG=ON \\\n  -DWITH_TBB=ON \\\n  -DWITH_GTK=ON \\\n  -DWITH_OPENMP=ON \\\n  -DWITH_FFMPEG=ON \\\n  -DBUILD_opencv_cudacodec=OFF \\\n  -D BUILD_EXAMPLES=ON .. \\\n  && make -j${NUMPROC} && make install\n\n## Install ROS2\n# UTF-8\nRUN apt install --no-install-recommends -q -y locales \\\n  && locale-gen en_US en_US.UTF-8 \\\n  && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=en_US.UTF-8\n# Add ROS2 key and install from Debian packages\nRUN apt install --no-install-recommends -q -y curl gnupg2 lsb-release && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \\\n  && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main\" | tee /etc/apt/sources.list.d/ros2.list > /dev/null \\\n  && apt update && apt install --no-install-recommends -q -y ros-galactic-desktop ros-galactic-test-msgs && rm -rf /var/lib/apt/lists/*;\n\n## Install misc dependencies\nRUN apt update && apt install --no-install-recommends -q -y \\\n  tmux \\\n  doxygen \\\n  nodejs npm protobuf-compiler \\\n  libboost-all-dev libomp-dev \\\n  libpcl-dev \\\n  libcanberra-gtk-module libcanberra-gtk3-module \\\n  libdc1394-22 libdc1394-22-dev \\\n  libbluetooth-dev libcwiid-dev \\\n  python3-colcon-common-extensions \\\n  virtualenv && rm -rf /var/lib/apt/lists/*;\n\n## Create a python virtual environment\nRUN apt install --no-install-recommends -q -y python3-pip && pip3 install --no-cache-dir \\\n  tmuxp \\\n  pyyaml \\\n  pyproj \\\n  scipy \\\n  zmq \\\n  flask \\\n  flask_socketio \\\n  eventlet \\\n  python-socketio \\\n  python-socketio[client] \\\n  websocket-client && rm -rf /var/lib/apt/lists/*;\n\n## Install VTR specific ROS2 dependencies\nRUN apt update && apt install --no-install-recommends -q -y \\\n  ros-galactic-xacro \\\n  ros-galactic-vision-opencv \\\n  ros-galactic-perception-pcl ros-galactic-pcl-ros && rm -rf /var/lib/apt/lists/*;\n\n## Switch to specified user\nUSER ${USERID}:${GROUPID}"
}