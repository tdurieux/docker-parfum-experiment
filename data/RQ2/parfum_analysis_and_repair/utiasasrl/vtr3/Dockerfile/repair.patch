diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/utiasasrl/vtr3/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/utiasasrl/vtr3/Dockerfile/repaired.Dockerfile
index 0e0a290..754673f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/utiasasrl/vtr3/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/utiasasrl/vtr3/Dockerfile/repaired.Dockerfile
@@ -30,13 +30,13 @@ ENV VTRSRC=${VTRROOT}/vtr3 \
 RUN mkdir -p ${VTRROOT} ${VTRSRC} ${VTRDEPS} ${VTRDATA} ${VTRVENV} ${VTRTEMP}
 
 ## Common packages
-RUN apt update && apt install -q -y wget git
+RUN apt update && apt install --no-install-recommends -q -y wget git && rm -rf /var/lib/apt/lists/*;
 
 ## Install Eigen
-RUN apt update && apt install -q -y libeigen3-dev
+RUN apt update && apt install --no-install-recommends -q -y libeigen3-dev && rm -rf /var/lib/apt/lists/*;
 
 ## Install PROJ (8.0.0)
-RUN apt update && apt install -q -y cmake libsqlite3-dev sqlite3 libtiff-dev libcurl4-openssl-dev
+RUN apt update && apt install --no-install-recommends -q -y cmake libsqlite3-dev sqlite3 libtiff-dev libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;
 RUN mkdir -p ${VTRDEPS}/proj && cd ${VTRDEPS}/proj \
   && git clone https://github.com/OSGeo/PROJ.git . && git checkout 8.0.0 \
   && mkdir -p ${VTRDEPS}/proj/build && cd ${VTRDEPS}/proj/build \
@@ -44,7 +44,7 @@ RUN mkdir -p ${VTRDEPS}/proj && cd ${VTRDEPS}/proj \
 ENV LD_LIBRARY_PATH=/usr/local/lib${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
 
 ## Install OpenCV (4.5.0)
-RUN apt install -q -y build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python3-dev python3-numpy
+RUN apt install --no-install-recommends -q -y build-essential cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev python3-dev python3-numpy && rm -rf /var/lib/apt/lists/*;
 RUN cd ${VTRDEPS} \
   && git clone https://github.com/opencv/opencv.git \
   && git clone https://github.com/opencv/opencv_contrib.git \
@@ -71,18 +71,18 @@ RUN cd ${VTRDEPS} \
 
 ## Install ROS2
 # UTF-8
-RUN apt install -q -y locales \
+RUN apt install --no-install-recommends -q -y locales \
   && locale-gen en_US en_US.UTF-8 \
-  && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
+  && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 ENV LANG=en_US.UTF-8
 # Add ROS2 key and install from Debian packages
-RUN apt install -q -y curl gnupg2 lsb-release
-RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg \
+RUN apt install --no-install-recommends -q -y curl gnupg2 lsb-release && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
   && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null \
-  && apt update && apt install -q -y ros-galactic-desktop ros-galactic-test-msgs
+  && apt update && apt install --no-install-recommends -q -y ros-galactic-desktop ros-galactic-test-msgs && rm -rf /var/lib/apt/lists/*;
 
 ## Install misc dependencies
-RUN apt update && apt install -q -y \
+RUN apt update && apt install --no-install-recommends -q -y \
   tmux \
   doxygen \
   nodejs npm protobuf-compiler \
@@ -92,10 +92,10 @@ RUN apt update && apt install -q -y \
   libdc1394-22 libdc1394-22-dev \
   libbluetooth-dev libcwiid-dev \
   python3-colcon-common-extensions \
-  virtualenv
+  virtualenv && rm -rf /var/lib/apt/lists/*;
 
 ## Create a python virtual environment
-RUN apt install -q -y python3-pip && pip3 install \
+RUN apt install --no-install-recommends -q -y python3-pip && pip3 install --no-cache-dir \
   tmuxp \
   pyyaml \
   pyproj \
@@ -106,13 +106,13 @@ RUN apt install -q -y python3-pip && pip3 install \
   eventlet \
   python-socketio \
   python-socketio[client] \
-  websocket-client
+  websocket-client && rm -rf /var/lib/apt/lists/*;
 
 ## Install VTR specific ROS2 dependencies
-RUN apt update && apt install -q -y \
+RUN apt update && apt install --no-install-recommends -q -y \
   ros-galactic-xacro \
   ros-galactic-vision-opencv \
-  ros-galactic-perception-pcl ros-galactic-pcl-ros
+  ros-galactic-perception-pcl ros-galactic-pcl-ros && rm -rf /var/lib/apt/lists/*;
 
 ## Switch to specified user
 USER ${USERID}:${GROUPID}
\ No newline at end of file