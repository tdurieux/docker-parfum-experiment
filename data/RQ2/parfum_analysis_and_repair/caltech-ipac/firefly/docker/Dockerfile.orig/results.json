{
  "startTime": 1674254951681,
  "endTime": 1674254952735,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Description:\n# A tomcat application server running as UID 91(tomcat) by default.\n# It's designed to support running as a different user via -u or --user param.\n#\n#-----------------------------------------------------------------------------\n# To build: docker build -t ipac/firefly --build-arg IMAGE_NAME=ipac/firefly .\n# For help in running: docker run --rm  ipac/firefly --help\n#-----------------------------------------------------------------------------\n#\n# Below are predefined directories Firefly uses during runtime.\n# Mount these directories to an external volume or to the host filesystem if you would like it\n# to persists beyond the container's lifecycle.\n#\n# Firefly mountPaths:\n# /firefly/config           : used to override application properties\n# /firefly/workarea         : work area for temporary files\n# /firefly/shared-workarea  : work area for files that are shared between multiple instances of the application\n# /firefly/logs             : logs directory\n# /firefly/logs/statistics  : directory for statistics logs\n# /firefly/alerts           : alerts monitor will watch this directory for application alerts\n# /external                 : default external data directory visible to Firefly\n\n\nFROM tomcat:9.0-jdk11-openjdk\n\nARG build_dir\nARG user=tomcat\nARG group=tomcat\nARG uid=91\nARG gid=91\n\n\n# - add packages: vim, wget, etc\n# - add any other standard apt packages here\n# - this is a big part of the layer so do it early\n# - emacs removed because it is so big: to readd emacs: emacs-nox\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        vim procps wget \\\n        && rm -rf /var/lib/apt/lists/*;\n\n# These are the users replaceable environment variables, basically runtime arguments\n#          MIN_JVM_SIZE and MAX_JVM_SIZE can be used to set the min and max JVM side\n#          - If MAX_JVM_SIZE is not set, the memory is autosized to the memory available to the container.\n#          - Set the available memory on the command line with --memory=\"4g\"\n#          - You can change MAX_RAM_PERCENT on the command line with -e \"MAX_RAM_PERCENT=80\"\n#          - also- User name and password to use admin\n#          - FIREFLY_OPTS could be used to pass any properties\n\nENV MAX_JVM_SIZE='' \\\n    MIN_JVM_SIZE=1G \\\n    INIT_RAM_PERCENT=10\\\n    MAX_RAM_PERCENT=93\\\n    JVM_CORES=0\\\n    ADMIN_USER=admin\\\n    ADMIN_PASSWORD=replaceMe \\\n    DEBUG=false \\\n    CLEANUP_INTERVAL=36h \\\n    FIREFLY_OPTS=''\n\n# ----------------------------------------------------------\n# ----------------------------------------------------------\n# Overide the following from the command line:\n#          MIN_JVM_SIZE, MAX_JVM_SIZE,\n#          INIT_RAM_PERCENT, MAX_RAM_PERCENT,\n#          ADMIN_USER, ADMIN_PASSWORD,\n#          DEBUG, FIREFLY_OPTS\n# ----------------------------------------------------------\n# ----------------------------------------------------------\n\nARG IMAGE_NAME=''\n\nENV JPDA_ADDRESS=*:5050 \\\n    VISUALIZE_FITS_SEARCH_PATH='' \\\n    BUILD_TIME_NAME=${IMAGE_NAME} \\\n    START_MODE=run\n\nWORKDIR ${CATALINA_HOME}\n\n# set up directory protections, copy stuff around, add tomcat user and group\nRUN mkdir -p conf/Catalina/localhost /local/www /firefly/config /firefly/workarea /firefly/shared-workarea /firefly/logs/statistics /firefly/alerts /hydra \\\n  && groupadd -g ${gid} ${group} && useradd -u ${uid} -g ${group} -s /bin/sh ${user} \\\n  && rm -r logs && ln -s /firefly/logs logs && ln -s /firefly/logs /hydra\n\n# These are the file that are executed at startup: start tomcat, logging, help, etc\nCOPY *.sh *.txt ${CATALINA_HOME}/\n\n# Tomcat config files, tomcat-users is for the admin username and password\nCOPY tomcat-users.xml conf/\nCOPY local.xml conf/Catalina/localhost\n\n#copy all wars, typically there should only be one\nCOPY *.war ${CATALINA_HOME}/webapps/\n\n# extract all war files into tomcat's webapps; mod log4j to have log sent to stdout as well\nWORKDIR ${CATALINA_HOME}/webapps\nRUN for n in *.war; do \\\n    war_dir=`basename $n .war`; \\\n    mkdir -p $war_dir; \\\n    unzip -oqd $war_dir $n; \\\n    sed -E -i.bak 's/##out--//' $war_dir/WEB-INF/classes/log4j2.properties; \\\n    chmod a+w $war_dir/WEB-INF/config; \\\n    done\n\nWORKDIR ${CATALINA_HOME}\n# Make directories, make scripts executable, save old tomcat config files, remove unwanted apps\n# increase max header size to avoid failing on large auth token\nRUN chmod a+x *.sh \\\n  && chmod -R a+w /firefly \\\n  && chmod a+w *.txt temp work /local/www \\\n  && sed -i 's/Connector port=\"8080\"/Connector maxHttpHeaderSize=\"24576\" port=\"8080\"/g' ${CATALINA_HOME}/conf/server.xml\n\n# 8080 - http,  5050 - debug\nEXPOSE 8080 5050\n\nUSER tomcat\n\n#CMD [\"/bin/bash\", \"./launchTomcat.sh\"]\nENTRYPOINT [\"/bin/bash\", \"-c\", \"./launchTomcat.sh ${*}\", \"--\"]\n"
}