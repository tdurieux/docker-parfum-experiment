{
  "startTime": 1674252696978,
  "endTime": 1674252698426,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.0.3-cudnn8-devel-ubuntu20.04\nLABEL maintainer \"Gemfield <gemfield@civilnet.cn>\"\nARG PYTHON_VERSION=3.8\n\nRUN apt-get update && DEBIAN_FRONTEND=\"noninteractive\" \\\n    apt-get install -y --no-install-recommends build-essential \\\n    vim wget curl bzip2 git unzip g++ binutils cmake locales \\\n    ca-certificates apt-transport-https gnupg software-properties-common \\\n    libjpeg-dev libpng-dev iputils-ping net-tools libgl1 libglib2.0-0 && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN cd /tmp && wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \\\n    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB && \\\n    echo \"deb https://apt.repos.intel.com/mkl all main\" > /etc/apt/sources.list.d/intel-mkl.list && \\\n    apt update && apt install --no-install-recommends -y intel-mkl-64bit-2020.4-912 && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN ln -fs /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && dpkg-reconfigure -f noninteractive tzdata && locale-gen zh_CN.utf8\n\nENV LC_ALL zh_CN.UTF-8\nENV LANG zh_CN.UTF-8\nENV LANGUAGE zh_CN.UTF-8\n\n#conda\nRUN curl -f -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    chmod +x ~/miniconda.sh && \\\n    ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda install -y python=$PYTHON_VERSION conda-build anaconda-client numpy pyyaml scipy ipython mkl mkl-include \\\n        cffi ninja setuptools typing_extensions future six requests dataclasses cython typing conda-package-handling=1.6.0 && \\\n    /opt/conda/bin/conda install -c pytorch magma-cuda110 && \\\n    /opt/conda/bin/pip3 install --no-cache-dir Pillow opencv-python confluent_kafka easydict sklearn matplotlib tensorboard fonttools onnx-coreml coremltools && \\\n    /opt/conda/bin/conda clean -ya && \\\n    /opt/conda/bin/conda clean -y --force-pkgs-dirs\n\nENV PATH /opt/conda/bin:$PATH\nRUN conda config --add channels pytorch\n\nWORKDIR /gemfield\nRUN curl -f -L https://github.com/opencv/opencv/archive/4.4.0.zip -o opencv.zip && \\\n    unzip opencv.zip && rm opencv.zip && cd opencv-4.4.0 && \\\n    mkdir /gemfield/opencv4deepvac && mkdir build && cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_LIST=core,imgproc,imgcodecs -DCMAKE_INSTALL_PREFIX=/gemfield/opencv4deepvac -DBUILD_SHARED_LIBS=OFF .. && \\\n    make VERBOSE=1 && make install && cd /gemfield && rm -rf opencv-4.4.0\n\n"
}