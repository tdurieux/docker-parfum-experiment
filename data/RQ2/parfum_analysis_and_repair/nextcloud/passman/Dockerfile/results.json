{
  "startTime": 1674253043343,
  "endTime": 1674253044446,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 28,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 35,
        "columnStart": 29,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 35,
        "columnStart": 29,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Nextcloud - passman - custom dev container\n\nFROM ubuntu:20.04\nRUN /bin/bash -c \"export DEBIAN_FRONTEND=noninteractive\" && \\\n        /bin/bash -c \"debconf-set-selections <<< 'mariadb-server mysql-server/root_password password PASS'\" && \\\n        /bin/bash -c \"debconf-set-selections <<< 'mariadb-server mysql-server/root_password_again password PASS'\" && \\\n        /bin/bash -c \"debconf-set-selections <<< 'tzdata    tzdata/Zones/Europe select  Madrid'\" && \\\n    \t/bin/bash -c \"echo \\\"Europe/Zurich\\\" > /etc/timezone \" && \\\n    \t/bin/bash -c \"ln -fs /usr/share/zoneinfo/`cat /etc/timezone` /etc/localtime\" && \\\n        apt-get -y update && apt-get install --no-install-recommends -y \\\n        apache2 \\\n        cowsay \\\n        cowsay-off \\\n        git \\\n        curl \\\n        libapache2-mod-php7.4 \\\n        mariadb-server \\\n        php7.4 \\\n        php7.4-mysql \\\n        php7.4-curl \\\n        php-dompdf \\\n        php7.4-gd \\\n        php7.4-mbstring \\\n        php7.4-xml \\\n        php7.4-zip \\\n        php7.4-intl \\\n        php7.4-bcmath \\\n        php7.4-gmp \\\n        php7.4-imagick \\\n        phpunit \\\n        wget \\\n        openssh-server \\\n        npm \\\n        ruby-dev \\\n        composer \\\n        sudo && rm -rf /var/lib/apt/lists/*; \\\n\n RUN  gem install sass && \\\n     a2enmod ssl && \\\n     ln -s /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-enabled && \\\n     git clone https://github.com/nextcloud/passman /var/www/passman && \\\n     cd /var/www/passman && npm install && \\\n     npm install -g grunt-cli && npm cache clean --force; \\\n\nADD https://raw.githubusercontent.com/nextcloud/travis_ci/master/before_install.sh /var/www/passman \\\n\nRUN service mysql restart && \\\n    mysql -uroot -pPASS -e \"SET PASSWORD = PASSWORD('');\" && \\\n    sed  -i '0,/.*SSLCertificateChainFile.*/s/.*SSLCertificateChainFile.*/SSLCertificateChainFile \\/etc\\/ssl\\/private\\/fullchain.pem/' /etc/apache2/sites-enabled/default-ssl.conf && \\\n    sed -i '0,/.*ssl-cert-snakeoil.pem.*/s/.*ssl-cert-snakeoil.pem.*/SSLCertificateFile \\/etc\\/ssl\\/private\\/cert.pem/' /etc/apache2/sites-enabled/default-ssl.conf && \\\n    sed -i '0,/.*SSLCertificateKeyFile.*/s/.*SSLCertificateKeyFile.*/SSLCertificateKeyFile \\/etc\\/ssl\\/private\\/privkey.pem/' /etc/apache2/sites-enabled/default-ssl.conf && \\\n    echo \"echo hhvm\" > /bin/phpenv && chmod +x /bin/phpenv && \\\n    cd /var/www/passman && \\\n    chmod +x before_install.sh && \\\n    sleep 1 && \\\n    /bin/bash -c \"./before_install.sh passman stable21 mysql; exit 0\" && \\\n    rm /var/www/server/apps/passman/before_install.sh && \\\n    mv /var/www/server/* /var/www/html/ && \\\n    cd /var/www/html/ && \\\n    chmod +x occ && \\\n    service mysql restart && \\\n    ./occ maintenance:install --database-name oc_autotest --database-user oc_autotest --admin-user admin --admin-pass admin --database mysql --database-pass 'owncloud' && \\\n    sed -i 's/\\/var\\/www\\/server/\\/var\\/www\\/html/g' /var/www/html/config/config.php && \\\n    cat /var/www/html/config/config.php && \\\n    ./occ check && \\\n    ./occ status && \\\n    ./occ app:list && \\\n    ./occ app:enable passman && \\\n    ./occ upgrade && \\\n    ./occ config:system:set defaultapp --value=passman && \\\n    ./occ config:system:set appstoreenabled --value=false && \\\n    ./occ config:system:set trusted_domains 2 --value=172.17.0.2 && \\\n    ./occ config:system:set trusted_domains 3 --value=passman.cc && \\\n    ./occ config:system:set trusted_domains 4 --value=demo.passman.cc && \\\n                chown -R www-data /var/www \\\nEXPOSE 80 \\\nEXPOSE 443 \\\n\nCOPY entrypoint.sh / \\\nRUN chmod +x /entrypoint.sh \\\n\nENTRYPOINT [\"/entrypoint.sh\"] \\\nCMD []"
}