{
  "startTime": 1674216374563,
  "endTime": 1674216375450,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Image to run builds of the project\n#\n# Includes\n#\n# * Rustup with `nightly-2020-06-10` toolchain\n# * Additional rustup components and the wasm32 target\n# * sccache v0.2.12\n\nFROM debian:buster-slim\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    HOME=/build\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        clang \\\n        cmake \\\n        gcc \\\n        git \\\n        libclang-dev \\\n        libssl-dev \\\n        llvm-dev \\\n        make \\\n        pkg-config \\\n        curl \\\n        apt-transport-https \\\n        ca-certificates \\\n        gnupg \\\n    && echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\" \\\n        >> /etc/apt/sources.list.d/google-cloud-sdk.list \\\n    && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg \\\n        | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y google-cloud-sdk \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install sccache\nRUN set -euxo pipefail; \\\n    sccache_version=0.2.12; \\\n    sccache_base=sccache-$sccache_version-x86_64-unknown-linux-musl; \\\n    curl -f -sSLO https://github.com/mozilla/sccache/releases/download/$sccache_version/$sccache_base.tar.gz; \\\n    echo \"26fd04c1273952cc2a0f359a71c8a1857137f0ee3634058b3f4a63b69fc8eb7f  $sccache_base.tar.gz\" | sha256sum -c -; \\\n    tar -zxf \"$sccache_base.tar.gz\"; \\\n    mv \"$sccache_base/sccache\" /usr/local/bin/sccache; \\\n    rm -r \"$sccache_base.tar.gz\" \"$sccache_base\"\n\n# Install rustup and default toolchain from RUST_VERSION. This is copied from\n# https://github.com/rust-lang/docker-rust/blob/8d0f25416858e2c1f59511a15c2bd0445b402caa/1.39.0/buster/slim/Dockerfile\nENV RUST_VERSION=nightly-2020-06-10\nRUN set -eux; \\\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='e68f193542c68ce83c449809d2cad262cc2bbb99640eb47c58fc1dc58cc30add' ;; \\\n        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='7c1c329a676e50c287d8183b88f30cd6afd0be140826a9fbbc0e3d717fab34d7' ;; \\\n        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='d861cc86594776414de001b96964be645c4bfa27024052704f0976dc3aed1b18' ;; \\\n        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='89f1f797dca2e5c1d75790c3c6b7be0ee473a7f4eca9663e623a41272a358da0' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac; \\\n    url=\"https://static.rust-lang.org/rustup/archive/1.20.2/${rustArch}/rustup-init\"; \\\n    curl -f -sSLO \"$url\"; \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c -; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version;\n\n# Add components to toolchain\nRUN rustup component add rustfmt \\\n    && rustup component add clippy \\\n    && rustup target add wasm32-unknown-unknown\n"
}