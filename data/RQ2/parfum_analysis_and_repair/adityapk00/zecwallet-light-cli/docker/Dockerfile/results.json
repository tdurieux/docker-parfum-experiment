{
  "startTime": 1674255765256,
  "endTime": 1674255765944,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nLABEL Description=\"Rust compile env for Linux + Windows (cross)\"\n\nRUN apt update && apt install --no-install-recommends -y build-essential mingw-w64 gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf curl vim wget git && rm -rf /var/lib/apt/lists/*;\n\n# Get Rust\nRUN curl https://sh.rustup.rs -sSf | bash -s -- --default-toolchain none -y\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\nRUN rustup toolchain install 1.56.1\n\nRUN rustup target add x86_64-pc-windows-gnu\nRUN rustup target add aarch64-unknown-linux-gnu\nRUN rustup target add armv7-unknown-linux-gnueabihf\n\n# Append the linker to the cargo config for Windows cross compile\nRUN echo \"[target.x86_64-pc-windows-gnu]\" >> /root/.cargo/config && \\\n    echo \"linker = '/usr/bin/x86_64-w64-mingw32-gcc'\" >> /root/.cargo/config\n\nRUN echo \"[target.aarch64-unknown-linux-gnu]\" >> /root/.cargo/config && \\\n    echo \"linker = '/usr/bin/aarch64-linux-gnu-gcc'\" >> /root/.cargo/config\n\nRUN echo \"[target.armv7-unknown-linux-gnueabihf]\" >> /root/.cargo/config && \\\n    echo \"linker = '/usr/bin/arm-linux-gnueabihf-gcc'\" >> /root/.cargo/config\n\nENV CC_x86_64_unknown_linux_musl=\"gcc\"\nENV CC_aarch64_unknown_linux_gnu=\"aarch64-linux-gnu-gcc\"\nENV CC_armv7_unknown_linux_gnueabhihf=\"arm-linux-gnueabihf-gcc\"\n\n# For windows cross compilation, use a pre-build binary. Remember to set the\n# SODIUM_LIB_DIR for windows cross compilation\nRUN cd /opt && wget https://download.libsodium.org/libsodium/releases/libsodium-1.0.17-mingw.tar.gz && \\\n    tar xvf libsodium-1.0.17-mingw.tar.gz && rm libsodium-1.0.17-mingw.tar.gz\n\n# Cargo fetch the dependencies so we don't download them over and over again\nRUN cd /tmp && git clone --depth=1 https://github.com/adityapk00/zecwallet-light-cli.git && \\\n    cd zecwallet-light-cli && \\\n    cargo fetch && \\\n    cd /tmp && rm -rf zecwallet-light-cli\n\n# This is a bug fix for the windows cross compiler for Rust.\n# RUN cp /usr/x86_64-w64-mingw32/lib/crt2.o  /root/.rustup/toolchains/1.49.0-x86_64-unknown-linux-gnu/lib/rustlib/x86_64-pc-windows-gnu/crt2.o\n\n"
}