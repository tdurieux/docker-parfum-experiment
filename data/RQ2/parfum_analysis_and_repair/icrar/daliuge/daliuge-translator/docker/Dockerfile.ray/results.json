{
  "startTime": 1674251975911,
  "endTime": 1674251977082,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 32,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 32,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# we are doing a two-stage build to keep the size of\n# the final image low.\nARG VCS_TAG\n# First stage build based on daliuge-common and cleanup\nFROM icrar/daliuge-common:${VCS_TAG:-latest}\nARG BUILD_ID\nLABEL stage=builder\nLABEL build=$BUILD_ID\nRUN sudo apt-get update && sudo apt-get install --no-install-recommends -y python3-pip gcc && sudo apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY / /daliuge\n\nRUN . ~/dlg/bin/activate && \\\n    cd /daliuge && \\\n    pip install --no-cache-dir .\n\n# Second stage build taking what's required from first stage\nFROM icrar/daliuge-common:${VCS_TAG:-latest}\nCOPY --from=0 /daliuge/. /daliuge/.\nCOPY --from=0 /home/ray/dlg /home/ray/dlg\n\n# enable the virtualenv path from daliuge-common\nENV VIRTUAL_ENV=/home/ray/dlg\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\nEXPOSE 8084\nCMD [ \"dlg\", \"lgweb\", \"-vv\", \"-d\", \"/daliuge/test/dropmake\", \"-t\", \"/tmp\" ]\n"
}