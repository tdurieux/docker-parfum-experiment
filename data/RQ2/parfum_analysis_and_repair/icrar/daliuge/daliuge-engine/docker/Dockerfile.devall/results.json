{
  "startTime": 1674250227308,
  "endTime": 1674250227944,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 27,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "ARG VCS_TAG\n# We need the base image we build with the other Dockerfile\nFROM icrar/daliuge-common:${VCS_TAG:-latest}\n\n# RUN sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata \\\n#     gcc g++ gdb casacore-dev clang-tidy-10 clang-tidy libboost1.71-all-dev libgsl-dev\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends gcc curl python3-pip python3-numpy && rm -rf /var/lib/apt/lists/*;\n\nCOPY / /daliuge\nRUN . /dlg/bin/activate && pip install --no-cache-dir wheel && cd /daliuge && \\\n    pip install --no-cache-dir .\n\nEXPOSE 9000\nEXPOSE 5555\nEXPOSE 6666\nEXPOSE 8000\nEXPOSE 8001\nEXPOSE 8002\n\n# enable the virtualenv path from daliuge-common\nENV VIRTUAL_ENV=/dlg\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\nENV DLG_ROOT=\"/tmp/dlg\"\n\nRUN apt install --no-install-recommends -y git python3-dev && rm -rf /var/lib/apt/lists/*;\n\n# Nifty\n#RUN pip install --prefix=$PYTHON_PREFIX git+https://gitlab.com/ska-telescope/sdp/ska-gridder-nifty-cuda.git\n#RUN pip install --prefix=$PYTHON_PREFIX dlg-nifty-components\n\n# Casacore + SDP\n#RUN pip install --index-url=https://artefact.skao.int/repository/pypi-all/simple --prefix=$PYTHON_PREFIX ska-sdp-dal-schemas\n#RUN pip install --index-url=https://artefact.skao.int/repository/pypi-all/simple --prefix=$PYTHON_PREFIX ska-sdp-realtime-receive-core[plasma]\n#RUN pip install --index-url=https://artefact.skao.int/repository/pypi-all/simple --prefix=$PYTHON_PREFIX ska-sdp-realtime-receive-modules[plasma]\n#RUN pip install dlg-casacore-components\n\n# RASCIL\n# RUN mkdir -p /tmp/rascil_data && cd /tmp/rascil_data &&\\\n#     curl https://ska-telescope.gitlab.io/external/rascil/rascil_data.tgz -o rascil_data.tgz &&\\\n#     tar zxf rascil_data.tgz -C /dlg/lib/python3.8/site-packages\n# RUN pip install --index-url=https://artefact.skao.int/repository/pypi-all/simple rascil\n\nCMD [\"dlg\", \"daemon\", \"-vv\"]"
}