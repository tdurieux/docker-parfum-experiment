diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/icrar/daliuge/daliuge-engine/docker/Dockerfile.casa b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/icrar/daliuge/daliuge-engine/docker/Dockerfile.casa/repaired.Dockerfile
index f6707fb..175f49f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/icrar/daliuge/daliuge-engine/docker/Dockerfile.casa
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/icrar/daliuge/daliuge-engine/docker/Dockerfile.casa/repaired.Dockerfile
@@ -7,21 +7,21 @@
 FROM icrar/daliuge-common:master-casa
 
 RUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends tzdata \
-    gnupg2 software-properties-common wget git git-lfs gcc g++ make tmux python3-pip cmake libboost1.71-all-dev
+    gnupg2 software-properties-common wget git git-lfs gcc g++ make tmux python3-pip cmake libboost1.71-all-dev && rm -rf /var/lib/apt/lists/*;
 
 # install casacore
 RUN mkdir -p /code && cd /code &&\
     add-apt-repository -s ppa:kernsuite/kern-7 &&\
     apt-add-repository multiverse &&\
     apt-add-repository restricted &&\
-    apt update &&\
-    apt install -y casacore-dev
+    apt update && \
+    apt install --no-install-recommends -y casacore-dev && rm -rf /var/lib/apt/lists/*;
 
 # install python3-casacore
 # NOTE: pip3 python-casacore and apt python3-casacore bundles it's own libcasa_tables-xyz.so different to kernsuite. Installing with
 # the no-binary option will link to kernsuite shared libraries.
-RUN apt install -y python3-dev wcslib-dev libcfitsio-dev &&\
-    pip3 install --no-binary python-casacore python-casacore
+RUN apt install --no-install-recommends -y python3-dev wcslib-dev libcfitsio-dev && \
+    pip3 install --no-cache-dir --no-binary python-casacore python-casacore && rm -rf /var/lib/apt/lists/*;
 
 # build and install arrow-plasma
 # NOTE: nvidia-docker requires using newer cuda packages than ones included with arrow-plasma that do not overwrite the the docker cuda drivers
@@ -45,19 +45,19 @@ RUN mkdir -p /code && cd /code &&\
     cd ..
 
 # install pyarrow
-RUN pip3 install pyarrow==3.0.0
+RUN pip3 install --no-cache-dir pyarrow==3.0.0
 
 # build and install cbf-sdp-emulator TODO: use master branch
 RUN mkdir -p /code && cd /code &&\
     git clone --recursive https://gitlab.com/ska-telescope/cbf-sdp-emulator.git &&\
     cd cbf-sdp-emulator &&\
-    . ~/dlg/bin/activate && pip3 install --extra-index-url=https://artefact.skao.int/repository/pypi-internal/simple -e .[plasma]
+    . ~/dlg/bin/activate && pip3 install --no-cache-dir --extra-index-url=https://artefact.skao.int/repository/pypi-internal/simple -e .[plasma]
 
 COPY / /daliuge
-RUN . ~/dlg/bin/activate && pip install wheel && cd /daliuge && \
-    pip install . 
+RUN . ~/dlg/bin/activate && pip install --no-cache-dir wheel && cd /daliuge && \
+    pip install --no-cache-dir .
 
-RUN apt-get update &&  apt-get install -y curl
+RUN apt-get update && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;
 
 # # Second stage build taking what's required from first stage
 # FROM icrar/dlg_ray.common:test
@@ -65,7 +65,7 @@ RUN apt-get update &&  apt-get install -y curl
 # # copy sources and virtualenv
 # COPY --from=0 /daliuge/. /daliuge/.
 # COPY --from=0 /root/dlg /root/dlg
-RUN  mkdir -p /tmp/dlg/var/dlg_home 
+RUN  mkdir -p /tmp/dlg/var/dlg_home
 
 EXPOSE 9000
 EXPOSE 8000