{
  "startTime": 1674255255473,
  "endTime": 1674255256569,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG PREFIX=/usr/local\n\n# Support multiarch\nRUN dpkg --add-architecture i386\n\n# Add rocm repository\nRUN sh -c 'echo deb [arch=amd64 trusted=yes] http://repo.radeon.com/rocm/apt/5.0.2/ ubuntu main > /etc/apt/sources.list.d/rocm.list'\n\n# Install dependencies\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --allow-unauthenticated \\\n    apt-utils \\\n    build-essential \\\n    clang-format-10 \\\n    cmake \\\n    curl \\\n    doxygen \\\n    g++-7 \\\n    gdb \\\n    git \\\n    lcov \\\n    locales \\\n    pkg-config \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    software-properties-common \\\n    wget \\\n    rocm-device-libs \\\n    hip-base \\\n    libnuma-dev \\\n    miopen-hip \\\n    rocblas \\\n    zlib1g-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Workaround broken rocm packages\nRUN ln -s /opt/rocm-* /opt/rocm\nRUN echo \"/opt/rocm/lib\" > /etc/ld.so.conf.d/rocm.conf\nRUN echo \"/opt/rocm/llvm/lib\" > /etc/ld.so.conf.d/rocm-llvm.conf\nRUN ldconfig\n\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# Install dependencies\nADD dev-requirements.txt /dev-requirements.txt\nADD requirements.txt /requirements.txt\nADD rbuild.ini /rbuild.ini\n\nCOPY ./tools/install_prereqs.sh /\nRUN /install_prereqs.sh /usr/local / && rm /install_prereqs.sh\nRUN test -f /usr/local/hash || exit 1\n\n# Install yapf\nRUN pip3 install --no-cache-dir yapf==0.28.0\n\n# Install doc requirements\nADD doc/requirements.txt /doc-requirements.txt\nRUN pip3 install --no-cache-dir -r /doc-requirements.txt\n\n# Download real models to run onnx unit tests\nENV ONNX_HOME=$HOME\nCOPY ./tools/download_models.sh /\nRUN /download_models.sh && rm /download_models.sh\n\n# Install latest ccache version\nRUN cget -p $PREFIX install facebook/zstd@v1.4.5 -X subdir -DCMAKE_DIR=build/cmake\nRUN cget -p $PREFIX install ccache@v4.1\n\n# Install newer cmake for onnx runtime\nRUN cget -p /opt/cmake install kitware/cmake@v3.13.4\n\nARG ONNXRUNTIME_REPO=https://github.com/Microsoft/onnxruntime\nARG ONNXRUNTIME_BRANCH=master\nARG ONNXRUNTIME_COMMIT=24f1bd6156cf5968bbc76dfb0e801a9b9c56b9fc\nRUN git clone --single-branch --branch ${ONNXRUNTIME_BRANCH} --recursive ${ONNXRUNTIME_REPO} onnxruntime && \\\n    cd onnxruntime && \\\n    git checkout ${ONNXRUNTIME_COMMIT} && \\\n    /bin/sh dockerfiles/scripts/install_common_deps.sh\n\nADD tools/build_and_test_onnxrt.sh /onnxruntime/build_and_test_onnxrt.sh\n\nRUN cget -p /usr/local install ROCmSoftwarePlatform/llvm-project-mlir@26a4b3cfc0a1a15181490f24ae461608fef1b04e -DBUILD_MIXR_TARGET=On\n\nENV MIOPEN_FIND_DB_PATH=/tmp/miopen/find-db\nENV MIOPEN_USER_DB_PATH=/tmp/miopen/user-db\nENV LD_LIBRARY_PATH=$PREFIX/lib\n\n# Setup ubsan environment to printstacktrace\nENV UBSAN_OPTIONS=print_stacktrace=1\nENV ASAN_OPTIONS=detect_stack_use_after_return=1:check_initialization_order=1:strict_init_order=1\nRUN ln -s /opt/rocm/llvm/bin/llvm-symbolizer /usr/bin/llvm-symbolizer\n\n"
}