{
  "startTime": 1674250807132,
  "endTime": 1674250808010,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM krakenci/srv-builder as builder\n\n# install python dependencies first\nCOPY pyproject.toml poetry.lock /server/\nRUN \\\n        . /venv/bin/activate && \\\n        poetry install -n --no-dev --no-root\n\n# then install kraken-server\nCOPY . /server\nRUN \\\n        . /venv/bin/activate && \\\n        poetry build -f wheel -n && \\\n        pip install --no-cache-dir --no-deps dist/*.whl && \\\n        rm -rf dist *.egg-info\n\n\n##############################################################################################################\nFROM krakenci/srv-base as controller\nRUN apt-get update && apt-get install -y --no-install-recommends supervisor && rm -rf /var/lib/apt/lists/*\nCOPY --from=builder /venv /venv\nCOPY supervisor.conf /etc/supervisor.conf\nCMD /venv/bin/python3 -m kraken.migrations.apply && supervisord -c /etc/supervisor.conf\nARG kkver=0.0\nLABEL kkver=${kkver} kkname=server\n\n\n##############################################################################################################\nFROM krakenci/srv-base as server\nRUN apt-get update && apt-get install -y --no-install-recommends git ca-certificates && rm -rf /var/lib/apt/lists/*\nWORKDIR /server\nCOPY --from=builder /venv /venv\nCOPY kkagent /server\nCOPY kktool /server\n# tips for running gunicorn in container: https://pythonspeed.com/articles/gunicorn-in-docker/\nCMD /venv/bin/gunicorn -b 0.0.0.0:${KRAKEN_SERVER_PORT} -w 2 --worker-tmp-dir /dev/shm --log-file=- \"kraken.server.server:create_app()\"\nARG kkver=0.0\nLABEL kkver=${kkver} kkname=server\n\n\n##############################################################################################################\nFROM krakenci/srv-base as rq\nRUN apt-get update && apt-get install -y --no-install-recommends git ca-certificates && rm -rf /var/lib/apt/lists/*\nWORKDIR /server\nRUN groupadd user && useradd --create-home --home-dir /home/user -g user user\nUSER user\nCOPY --from=builder /venv /venv\nCMD /venv/bin/python3 -m kraken.server.kkrq\nARG kkver=0.0\nLABEL kkver=${kkver} kkname=server\n"
}