diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ctuning/ck-mlperf/docker/mlperf-inference-v0.7.openvino/Dockerfile.ubuntu-20.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ctuning/ck-mlperf/docker/mlperf-inference-v0.7.openvino/Dockerfile.ubuntu-20.04/repaired.Dockerfile
index a20f7c6..bdb157d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ctuning/ck-mlperf/docker/mlperf-inference-v0.7.openvino/Dockerfile.ubuntu-20.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ctuning/ck-mlperf/docker/mlperf-inference-v0.7.openvino/Dockerfile.ubuntu-20.04/repaired.Dockerfile
@@ -14,26 +14,26 @@ ENTRYPOINT ["/bin/bash", "-c"]
 # cv2 needs: libgthread-2.0.
 # Python 3.7 needs: libssl, libbz2, libffi.
 ENV DEBIAN_FRONTEND=noninteractive
-RUN apt update -y\
- && apt install -y apt-utils\
- && apt upgrade -y\
- && apt install -y\
- git wget zip libz-dev\
- cmake\
- libgtk2.0-dev\
- libssl-dev libbz2-dev libffi-dev\
- vim tree\
- && apt clean
+RUN apt update -y \
+ && apt install --no-install-recommends -y apt-utils \
+ && apt upgrade -y \
+ && apt install --no-install-recommends -y \
+ git wget zip libz-dev \
+ cmake \
+ libgtk2.0-dev \
+ libssl-dev libbz2-dev libffi-dev \
+ vim tree \
+ && apt clean && rm -rf /var/lib/apt/lists/*;
 
 # Install Python 3.7 (needed to install TensorFlow 1.15.2 via pip).
 RUN cd /tmp \
  && wget https://www.python.org/ftp/python/3.7.8/Python-3.7.8.tgz \
  && tar xvf Python-3.7.8.tgz \
  && cd Python-3.7.8 \
- && ./configure --enable-optimizations --enable-shared --with-ensurepip=install \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations --enable-shared --with-ensurepip=install \
  && make -j20 \
  && make altinstall \
- && rm -rf /tmp/*
+ && rm -rf /tmp/* && rm Python-3.7.8.tgz
 
 # Create a non-root user with a fixed group id 1500 and a fixed user id 2000
 # (hopefully distinct from any host user id for security reasons).
@@ -135,7 +135,7 @@ RUN ck compile ck-openvino:program:mlperf-inference-v0.5 \
 #- RUN ck install package --tags=lib,python-package,cv2,opencv-python-headless
 #- #-----------------------------------------------------------------------------#
 #-
-#- 
+#-
 #- #-----------------------------------------------------------------------------#
 #- # Step 5. Install the official ResNet model for MLPerf Inference v0.7
 #- # and convert it into the OpenVINO format.
@@ -143,8 +143,8 @@ RUN ck compile ck-openvino:program:mlperf-inference-v0.5 \
 #- RUN ck install package --tags=model,tf,mlperf,resnet --no_tags=ssd
 #- RUN ck install package --tags=model,openvino,resnet50
 #- #-----------------------------------------------------------------------------#
-#- 
-#- 
+#-
+#-
 #- #-----------------------------------------------------------------------------#
 #- # Step 6. Install the official MobileNet model for MLPerf Inference v0.5
 #- # and convert it into the OpenVINO format. NB: For the open division only.
@@ -152,7 +152,7 @@ RUN ck compile ck-openvino:program:mlperf-inference-v0.5 \
 #- RUN ck install package --tags=model,tf,mlperf,mobilenet-v1-1.0-224,non-quantized
 #- RUN ck install package --tags=model,openvino,mobilenet
 #- #-----------------------------------------------------------------------------#
-#- 
+#-
 
 #-----------------------------------------------------------------------------#
 # Step 7. Install the official SSD-MobileNet model for MLPerf Inference v0.7
@@ -186,8 +186,8 @@ RUN chmod -R g+rwx `ck find ck-openvino:program:mlperf-inference-v0.5`
 #- # The program expects to find val_map.txt in the dataset directory (segfaults otherwise).
 #- RUN head -n 500 `ck locate env --tags=aux`/val.txt > `ck locate env --tags=raw,val`/val_map.txt
 #- #-----------------------------------------------------------------------------#
-#- 
-#- 
+#-
+#-
 #- #-----------------------------------------------------------------------------#
 #- # Run the OpenVINO program that Intel prepared for MLPerf Inference v0.5
 #- # with the quantized ResNet model