{
  "startTime": 1674248105101,
  "endTime": 1674248105898,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 44,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nLABEL maintainer=\"Anton Lokhmotov <anton@dividiti.com>\"\n\n# Use the Bash shell.\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Allow stepping into the Bash shell interactively.\nENTRYPOINT [\"/bin/bash\", \"-c\"]\n\n# Install known system dependencies and immediately clean up to make the image smaller.\n# CK needs: git, wget, zip, unzip.\n# Python needs: ssl, bz2, lzma.\n# Speech Recognition program needs: sndfile (which in turn needs ffi).\n# librosa needs: scipy (which in turn needs gfortran, lapack, blas).\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN apt update -y \\\n && apt install --no-install-recommends -y apt-utils \\\n && apt upgrade -y \\\n && apt install --no-install-recommends -y \\\n gcc g++ \\\n make patch vim \\\n git wget zip libz-dev \\\n libssl-dev libbz2-dev liblzma-dev \\\n libsndfile1-dev libffi-dev \\\n gfortran libblas-dev liblapack-dev \\\n && apt clean && rm -rf /var/lib/apt/lists/*;\n\n# Install Python 3.7. (If upgrading to 3.8 or higher, also change CK_PYTHON below.)\nENV PYTHON_VERSION=3.7.8\nRUN cd /usr/src \\\n && wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n && tar xzf Python-${PYTHON_VERSION}.tgz \\\n && rm Python-${PYTHON_VERSION}.tgz \\\n && cd /usr/src/Python-${PYTHON_VERSION} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && make altinstall \\\n && rm -rf /usr/src/Python-${PYTHON_VERSION}*\n\n# Create non-root user.\nRUN useradd --create-home --user-group --shell /bin/bash dvdt\nUSER dvdt:dvdt\nWORKDIR /home/dvdt\n\n# Install Collective Knowledge (CK).\nENV CK_ROOT=/home/dvdt/CK \\\n    CK_REPOS=/home/dvdt/CK_REPOS \\\n    CK_TOOLS=/home/dvdt/CK_TOOLS \\\n    PATH=${CK_ROOT}/bin:/home/dvdt/.local/bin:${PATH} \\\n    CK_PYTHON=python3.7 \\\n    CK_CC=gcc \\\n    GIT_USER=\"dividiti\" \\\n    GIT_EMAIL=\"info@dividiti.com\" \\\n    LANG=C.UTF-8\nRUN mkdir -p ${CK_ROOT} ${CK_REPOS} ${CK_TOOLS}\nRUN git config --global user.name ${GIT_USER} && git config --global user.email ${GIT_EMAIL}\nRUN git clone https://github.com/ctuning/ck.git ${CK_ROOT}\nRUN cd ${CK_ROOT} \\\n && ${CK_PYTHON} setup.py install --user \\\n && ${CK_PYTHON} -c \"import ck.kernel as ck; print ('Collective Knowledge v%s' % ck.__version__)\"\n\n# Pull CK repositories (including ck-env, ck-autotuning and ck-tensorflow).\nRUN ck pull repo:ck-mlperf\nRUN ck pull repo:ck-pytorch\n\n# Use generic Linux settings with dummy frequency setting scripts.\nRUN ck detect platform.os --platform_init_uoa=generic-linux-dummy\n\n#-----------------------------------------------------------------------------#\n# Step 1. Install C++ dependencies (FLAC, SoX).\n#-----------------------------------------------------------------------------#\n# Detect C/C++ compiler (gcc).\nRUN ck detect soft:compiler.gcc --full_path=`which ${CK_CC}`\n# Install preprocessing dependencies (FLAC, SoX).\nRUN ck install package --tags=tool,flac\nRUN ck install package --tags=tool,sox\n#-----------------------------------------------------------------------------#\n\n\n#-----------------------------------------------------------------------------#\n# Step 2. Install Python dependencies (pip, Torch, SoX, pandas, Abseil, wheel).\n#-----------------------------------------------------------------------------#\n# Install the latest Python package installer (pip).\nRUN ${CK_PYTHON} -m pip install --ignore-installed pip setuptools --user\n# Detect Python interpreter (\"compiler\").\nRUN ck detect soft:compiler.python --full_path=`which ${CK_PYTHON}`\n# Install PyTorch.\nRUN ck install package --tags=python-package,torch\n# Install preprocessing dependencies (SoX, pandas).\nRUN ck install package --tags=python-package,sox\nRUN ck install package --tags=python-package,pandas\n# Install LoadGen dependencies (Abseil, wheel).\nRUN ck install package --tags=python-package,absl\nRUN ${CK_PYTHON} -m pip install --user wheel\n# Install other program dependencies.\n# NB: Fix numba version: https://github.com/librosa/librosa/issues/1160\n# NB: pylzma doesn't cause for any other images?\nRUN ${CK_PYTHON} -m pip install --user tqdm toml unidecode inflect sndfile librosa numba==0.48 pylzma\n#-----------------------------------------------------------------------------#\n\n\n#-----------------------------------------------------------------------------#\n# Step 3. Download the official MLPerf Inference RNNT dataset (LibriSpeech\n# dev-clean) and preprocess it to wav.\n#-----------------------------------------------------------------------------#\nRUN ck install package --tags=dataset,speech-recognition,dev-clean,original\n# NB: Can ignore the lzma related warning.\nRUN ck install package --tags=dataset,speech-recognition,dev-clean,preprocessed\n#-----------------------------------------------------------------------------#\n\n\n#-----------------------------------------------------------------------------#\n# Step 4. Download the official MLPerf Inference RNNT model.\n#-----------------------------------------------------------------------------#\nRUN ck install package --tags=model,pytorch,rnnt\n#-----------------------------------------------------------------------------#\n\n\n#-----------------------------------------------------------------------------#\n# Step 5. Download the MLPerf Inference repo with dividiti's RNNT tweaks,\n# and build the Python LoadGen API.\n#-----------------------------------------------------------------------------#\nRUN ck install package --tags=mlperf,inference,source,dividiti.rnnt\nRUN ck install package --tags=python-package,loadgen\n#-----------------------------------------------------------------------------#\n\n\n#-----------------------------------------------------------------------------#\n# Run the Speech Recognition RNNT program in the accuracy mode.\n#-----------------------------------------------------------------------------#\nCMD [\"ck run program:speech-recognition-pytorch-loadgen --cmd_key=accuracy --skip_print_timers\"]\n"
}