{
  "startTime": 1674248339392,
  "endTime": 1674248340520,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/miniconda3:4.7.12\n\nRUN conda install -c conda-forge openbabel=3.0.0 -y\n\nRUN pip install --no-cache-dir gunicorn\n\nCOPY flask/openbabel/requirements.txt /app/\nRUN pip install --no-cache-dir -r /app/requirements.txt\n\nCOPY flask/openbabel/src/* /app/\n\nWORKDIR /app\n\n# By default, Open Babel does not release the python GIL while the underlying\n# C++ code is running. This means that it is perhaps preferable for us to have\n# multiple synchronous workers, rather than a single asynchronous worker.\n# Hence, we are using multiple workers of the default \"sync\" worker class.\n# Additionally, some operations on big molecules take a long time (commonly\n# more than a minute). So we will set the timeout to be 10 minutes.\nENTRYPOINT [\"gunicorn\", \"-w\",  \"4\", \"-t\", \"600\", \"server:app\", \"-b\", \"0.0.0.0:5000\"]\n"
}