diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/solarwinds/containers/whd/Dockerfile.md b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/solarwinds/containers/whd/Dockerfile.md/repaired.Dockerfile
index 458a8f6..3183227 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/solarwinds/containers/whd/Dockerfile.md
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/solarwinds/containers/whd/Dockerfile.md/repaired.Dockerfile
@@ -15,7 +15,7 @@ Options
 Option - 1: Docker Image with Embedded PostgreSQL database
 ---------------------------------------------------------
 
-#Docker File - Embedded PostgreSQL 
+#Docker File - Embedded PostgreSQL
 ```Dockerfile
 # Version: 0.0.9
 
@@ -29,9 +29,9 @@ ENV CONSOLETYPE=serial PRODUCT_VERSION=12.5.0 PRODUCT_NAME=webhelpdesk-12.5.0.12
 
 RUN echo Environment :: $EMBEDDED
 
-ADD functions /etc/rc.d/init.d/functions 
+ADD functions /etc/rc.d/init.d/functions
 ADD http://downloads.solarwinds.com/solarwinds/Release/WebHelpDesk/$PRODUCT_VERSION/Linux/$PRODUCT_NAME /$GZIP_FILE
-RUN gunzip -dv /$GZIP_FILE && yum clean all && yum update -y && yum install -y python-setuptools && easy_install supervisor && yum install -y -v /$RPM_FILE  && rm /$RPM_FILE && yum clean all && cp $WHD_HOME/conf/whd.conf.orig $WHD_HOME/conf/whd.conf && sed -i 's/^PRIVILEGED_NETWORKS=[[:space:]]*$/PRIVILEGED_NETWORKS=0.0.0.0\/0/g' $WHD_HOME/conf/whd.conf
+RUN gunzip -dv /$GZIP_FILE && yum clean all && yum update -y && yum install -y python-setuptools && easy_install supervisor && yum install -y -v /$RPM_FILE  && rm /$RPM_FILE && yum clean all && cp $WHD_HOME/conf/whd.conf.orig $WHD_HOME/conf/whd.conf && sed -i 's/^PRIVILEGED_NETWORKS=[[:space:]]*$/PRIVILEGED_NETWORKS=0.0.0.0\/0/g' $WHD_HOME/conf/whd.conf && rm -rf /var/cache/yum
 ADD whd_start_configure.sh $WHD_HOME/whd_start_configure.sh
 ADD whd_start.sh $WHD_HOME/whd_start.sh
 ADD whd_configure.sh $WHD_HOME/whd_configure.sh
@@ -42,39 +42,39 @@ ADD run.sh /run.sh
 ADD supervisord.conf /home/docker/whd/supervisord.conf
 ADD whd $WHD_HOME/whd
 ADD whd_bin $WHD_HOME/bin/whd
-RUN chmod 744 /run.sh && chmod 644 $WHD_HOME/*.properties && chmod 755 $WHD_HOME/whd && chmod 744 $WHD_HOME/*.sh && chmod 755 $WHD_HOME/bin/whd 
+RUN chmod 744 /run.sh && chmod 644 $WHD_HOME/*.properties && chmod 755 $WHD_HOME/whd && chmod 744 $WHD_HOME/*.sh && chmod 755 $WHD_HOME/bin/whd
 EXPOSE 8081
 
 ENTRYPOINT ["/run.sh"]
 ```
 Here is the docker build command that is used to create WHD Docker image. The tag or image name should match the namespace or username/respository name created on the docker hub account.
 
-#Docker Build 
+#Docker Build
 ```sh
 docker build -t solarwinds/whd-embedded:latest .
 ```
 The command to login and push the image to docker hub repository is provided below.
 
-#Docker Push 
+#Docker Push
 ```sh
 docker login --username={username}
 ```
-This will prompt you to enter the docker hub account password. On successfully logging in, you will be able to push the image to the repository 
+This will prompt you to enter the docker hub account password. On successfully logging in, you will be able to push the image to the repository
 
 ```sh
-docker push solarwinds/whd-embedded:latest 
+docker push solarwinds/whd-embedded:latest
 ```
 
-#Docker Pull 
+#Docker Pull
 ```sh
 docker pull solarwinds/whd-embedded[:latest]
 ```
- 
+
 Once the docker image is built or pulled from docker hub, Here is the docker run command to start the container. This will create WHD container and start the PostgreSQL and start Web Help desk web application on 8081 port. This will run the container in the daemon mode.
 
-#Docker Run 
+#Docker Run
 ```sh
-docker run -d -p 8081:8081 --name=whdinstance solarwinds/whd-embedded:latest 
+docker run -d -p 8081:8081 --name=whdinstance solarwinds/whd-embedded:latest
 ```
 
 Ideally you would want the Data to be stored outside the Application container. So that when the container is upgraded or removed, the data still exists on the host. In order to create a seperate mount point for the Data directory, create a data volume to store data on the host
@@ -87,7 +87,7 @@ Use the following Docker run command to mount volume when launching the containe
 
 #Docker Run with mount
 ```sh
-docker run -d -p 8081:8081 --name=whdinstance -v whd-data-volume:/usr/local/webhelpdesk/bin/pgsql/var/lib/pgsql/9.2/data  solarwinds/whd-embedded:latest 
+docker run -d -p 8081:8081 --name=whdinstance -v whd-data-volume:/usr/local/webhelpdesk/bin/pgsql/var/lib/pgsql/9.2/data  solarwinds/whd-embedded:latest
 ```
 -v whd-data-volume:/usr/local/webhelpdesk/bin/pgsql/var/lib/pgsql/9.2/data means we mount whd-data-volume as a volume. This is very important. It's safe to keep database files in the host.