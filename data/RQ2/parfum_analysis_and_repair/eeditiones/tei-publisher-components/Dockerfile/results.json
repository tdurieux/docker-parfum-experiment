{
  "startTime": 1674255743843,
  "endTime": 1674255744967,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "ARG EXIST_VERSION=5.3.1\n\n# START STAGE 1\nFROM openjdk:8-jdk-slim as builder\n\nUSER root\n\nENV ANT_VERSION 1.10.12\nENV ANT_HOME /etc/ant-${ANT_VERSION}\n\nWORKDIR /tmp\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    curl && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L -o apache-ant-${ANT_VERSION}-bin.tar.gz https://www.apache.org/dist/ant/binaries/apache-ant-${ANT_VERSION}-bin.tar.gz \\\n    && mkdir ant-${ANT_VERSION} \\\n    && tar -zxvf apache-ant-${ANT_VERSION}-bin.tar.gz \\\n    && mv apache-ant-${ANT_VERSION} ${ANT_HOME} \\\n    && rm apache-ant-${ANT_VERSION}-bin.tar.gz \\\n    && rm -rf ant-${ANT_VERSION} \\\n    && rm -rf ${ANT_HOME}/manual \\\n    && unset ANT_VERSION\n\nENV PATH ${PATH}:${ANT_HOME}/bin\n\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && curl -f -L https://www.npmjs.com/install.sh | sh && rm -rf /var/lib/apt/lists/*;\n\nFROM builder as tei\n\nARG TEMPLATING_VERSION=1.0.2\nARG PUBLISHER_LIB_VERSION=2.9.0\nARG ROUTER_VERSION=0.5.1\nARG PUBLISHER_VERSION=master\n\n# add key\nRUN  mkdir -p ~/.ssh && ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts\n\n# Build tei-publisher-app\nRUN  git clone https://github.com/eeditiones/tei-publisher-app.git \\\n    && cd tei-publisher-app \\\n    && git checkout ${PUBLISHER_VERSION} \\\n    # if you prefer to have webcomponents included locally, comment out following line and\n    # enable the ones below\n    && sed -i 's/$config:webcomponents :=.*;/$config:webcomponents := \"local\";/' modules/config.xqm \\\n    && ant -Dnpm=npm xar-local\n\nWORKDIR /tmp/tei-publisher-app\n\nCOPY dist/*.js resources/scripts/\nCOPY i18n/common/* resources/i18n/common/\n\nRUN ant\n\nRUN curl -f -L -o /tmp/oas-router-${ROUTER_VERSION}.xar https://exist-db.org/exist/apps/public-repo/public/oas-router-${ROUTER_VERSION}.xar\nRUN curl -f -L -o /tmp/tei-publisher-lib-${PUBLISHER_LIB_VERSION}.xar https://exist-db.org/exist/apps/public-repo/public/tei-publisher-lib-${PUBLISHER_LIB_VERSION}.xar\nRUN curl -f -L -o /tmp/templating-${TEMPLATING_VERSION}.xar https://exist-db.org/exist/apps/public-repo/public/templating-${TEMPLATING_VERSION}.xar\n\nFROM existdb/existdb:${EXIST_VERSION}\n\nCOPY --from=tei /tmp/tei-publisher-app/build/*.xar /exist/autodeploy/\nCOPY --from=tei /tmp/*.xar /exist/autodeploy/\n\nENV DATA_DIR /exist-data\n\nENV JAVA_TOOL_OPTIONS \\\n    -Dfile.encoding=UTF8 \\\n    -Dsun.jnu.encoding=UTF-8 \\\n    -Djava.awt.headless=true \\\n    -Dorg.exist.db-connection.cacheSize=${CACHE_MEM:-256}M \\\n    -Dorg.exist.db-connection.pool.max=${MAX_BROKER:-20} \\\n    -Dlog4j.configurationFile=/exist/etc/log4j2.xml \\\n    -Dexist.home=/exist \\\n    -Dexist.configurationFile=/exist/etc/conf.xml \\\n    -Djetty.home=/exist \\\n    -Dexist.jetty.config=/exist/etc/jetty/standard.enabled-jetty-configs \\\n    -XX:+UnlockExperimentalVMOptions \\\n    -XX:+UseCGroupMemoryLimitForHeap \\\n    -XX:+UseG1GC \\\n    -XX:+UseStringDeduplication \\\n    -XX:MaxRAMFraction=1 \\\n    -XX:+ExitOnOutOfMemoryError \\\n    -Dorg.exist.db-connection.files=${DATA_DIR} \\\n    -Dorg.exist.db-connection.recovery.journal-dir=${DATA_DIR}\n\n# pre-populate the database by launching it once\nRUN [ \"java\", \\\n    \"org.exist.start.Main\", \"client\", \"-l\", \\\n    \"--no-gui\",  \"--xpath\", \"system:get-version()\" ]"
}