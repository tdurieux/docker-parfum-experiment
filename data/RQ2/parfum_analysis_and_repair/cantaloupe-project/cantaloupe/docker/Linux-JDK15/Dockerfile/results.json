{
  "startTime": 1674246169159,
  "endTime": 1674246170260,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nENV JAVA_HOME=/opt/jdk\nENV PATH=$PATH:/opt/jdk/bin\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install various dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tffmpeg \\\n\t\tmaven \\\n\t\twget \\\n  \t\tlibopenjp2-tools \\\n                liblcms2-dev \\\n                libpng-dev \\\n                libzstd-dev \\\n                libtiff-dev \\\n                libjpeg-dev \\\n                zlib1g-dev \\\n                libwebp-dev \\\n                libimage-exiftool-perl \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install TurboJpegProcessor dependencies\nRUN mkdir -p /opt/libjpeg-turbo/lib\nCOPY docker/Linux-JDK11/image_files/libjpeg-turbo/lib64 /opt/libjpeg-turbo/lib\n\n# Install KakaduNativeProcessor dependencies\nCOPY dist/deps/Linux-x86-64/lib/* /usr/lib/\n\n# Install GrokProcessor dependencies\nRUN wget -q https://github.com/GrokImageCompression/grok/releases/download/v7.6.5/libgrokj2k1_7.6.5-1_amd64.deb \\\n    && wget -q https://github.com/GrokImageCompression/grok/releases/download/v7.6.5/grokj2k-tools_7.6.5-1_amd64.deb \\\n    && dpkg -i ./libgrokj2k1_7.6.5-1_amd64.deb \\\n    && dpkg -i --ignore-depends=libjpeg62-turbo ./grokj2k-tools_7.6.5-1_amd64.deb\n\n# Install OpenJDK\nRUN wget -q https://github.com/AdoptOpenJDK/openjdk15-binaries/releases/download/jdk-15.0.1%2B9/OpenJDK15U-jdk_x64_linux_hotspot_15.0.1_9.tar.gz \\\n    && tar xfz OpenJDK15U-jdk_x64_linux_hotspot_15.0.1_9.tar.gz \\\n    && mv jdk-15.0.1+9 /opt/jdk && rm OpenJDK15U-jdk_x64_linux_hotspot_15.0.1_9.tar.gz\n\n# A non-root user is needed for some FilesystemSourceTest tests to work.\nARG user=cantaloupe\nARG home=/home/$user\nRUN adduser --home $home $user\nRUN chown -R $user $home\nUSER $user\nWORKDIR $home\n\n# Install application dependencies\nCOPY ./pom.xml pom.xml\nRUN mvn --quiet dependency:resolve\n\n# Copy the code\nCOPY --chown=cantaloupe docker/Linux-JDK11/image_files/test.properties test.properties\nCOPY --chown=cantaloupe ./src src\n\nENTRYPOINT mvn --batch-mode test -Pfreedeps"
}