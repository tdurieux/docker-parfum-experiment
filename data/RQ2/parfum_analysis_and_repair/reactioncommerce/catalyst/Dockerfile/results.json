{
  "startTime": 1674254822453,
  "endTime": 1674254823499,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 80,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 84,
        "lineEnd": 87,
        "columnStart": 18,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 93,
        "lineEnd": 96,
        "columnStart": 18,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 93,
        "lineEnd": 96,
        "columnStart": 18,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "FROM node:8-alpine\n\nARG NAME=styleguide\nARG DESCRIPTION=\"Reaction Catalyst Documentation\"\nARG URL=https://github.com/reactioncommerce/catalyst\nARG DOC_URL=https://github.com/reactioncommerce/catalyst\nARG VCS_URL=https://github.com/reactioncommerce/catalyst\nARG VCS_REF\nARG VENDOR\nARG BUILD_DATE\nARG BUILD_COMPARE_URL\nARG BUILD_ENV=test\nARG BUILD_NUMBER\nARG BUILD_PLATFORM\nARG BUILD_PLATFORM_PROJECT_USERNAME\nARG BUILD_PLATFORM_PROJECT_REPONAME\nARG BUILD_PULL_REQUESTS\nARG BUILD_TRIGGERED_BY_TAG\nARG BUILD_URL\nARG CIRCLE_WORKSPACE_ID\nARG CIRCLE_WORKFLOW_ID\nARG CIRCLE_WORKFLOW_JOB_ID\nARG CIRCLE_WORKFLOW_UPSTREAM_JOB_IDS\nARG CIRCLE_WORKSPACE_ID\nARG GIT_REPOSITORY_URL\nARG GIT_SHA1\nARG LICENSE\n\nENV APP_SOURCE_DIR=/usr/local/src/reaction-app \\\n    PATH=$PATH:/usr/local/src/reaction-app/node_modules/.bin\n\nLABEL maintainer=\"Reaction Commerce <engineering@reactioncommerce.com>\" \\\n      com.reactioncommerce.build-date=$BUILD_DATE \\\n      com.reactioncommerce.name=$NAME \\\n      com.reactioncommerce.description=$DESCRIPTION \\\n      com.reactioncommerce.url=$URL \\\n      com.reactioncommerce.vcs-url=$VCS_URL \\\n      com.reactioncommerce.vcs-ref=$VCS_REF \\\n      com.reactioncommerce.vendor=$VENDOR \\\n      com.reactioncommerce.docker.build.compare-url=$BUILD_COMPARE_URL \\\n      com.reactioncommerce.docker.build.number=$BUILD_NUMBER \\\n      com.reactioncommerce.docker.build.platform=$BUILD_PLATFORM \\\n      com.reactioncommerce.docker.build.platform.project.username=$BUILD_PLATFORM_PROJECT_USERNAME \\\n      com.reactioncommerce.docker.build.platform.project.reponame=$BUILD_PLATFORM_PROJECT_REPONAME \\\n      com.reactioncommerce.docker.build.pull-requests=$BUILD_PULL_REQUESTS \\\n      com.reactioncommerce.docker.build.triggered-by-tag=$BUILD_TRIGGERED_BY_TAG \\\n      com.reactioncommerce.docker.build.url=$BUILD_URL \\\n      com.reactioncommerce.docker.build.circle.workflow.id=$CIRCLE_WORKFLOW_ID \\\n      com.reactioncommerce.docker.build.circle.workflow.job.id=$CIRCLE_WORKFLOW_JOB_ID \\\n      com.reactioncommerce.docker.build.circle.workflow.upstream.job.ids=$CIRCLE_WORKFLOW_UPSTREAM_JOB_IDS \\\n      com.reactioncommerce.docker.build.circle.workflow.url=https://circleci.com/workflow-run/$CIRCLE_WORKFLOW_ID \\\n      com.reactioncommerce.docker.build.circle.workspace.id=$CIRCLE_WORKSPACE_ID \\\n      com.reactioncommerce.docker.git.repository.url=$GIT_REPOSITORY_URL \\\n      com.reactioncommerce.docker.git.sha1=$GIT_SHA1 \\\n      com.reactioncommerce.docker.license=$LICENSE\n\n# Because Docker Compose uses a volume for node_modules and volumes are owned\n# by root by default, we have to initially create node_modules here with correct owner.\n# Without this Yarn cannot write packages into node_modules later, when running in a container.\nRUN mkdir -p \"/usr/local/src/reaction-app/node_modules\"\nRUN mkdir -p \"/usr/local/src/reaction-app/package/node_modules\"\nRUN chown node \"/usr/local/src\"\nRUN chown node \"/usr/local/src/reaction-app\"\nRUN chown node \"/usr/local/src/reaction-app/node_modules\"\nRUN chown node \"/usr/local/src/reaction-app/package/node_modules\"\n\nWORKDIR $APP_SOURCE_DIR\n\n# Note that the two node_modules directories will not be copied during\n# this due to being listed in the `.dockerignore` file.\nCOPY --chown=node . $APP_SOURCE_DIR\n\n# Build the dependencies into the Docker image in a cacheable way. Dependencies\n# are only rebuilt when package.json or yarn.lock is modified.\n#\n# The project directory will be mounted during development. Therefore, we'll\n# install dependencies into an external directory (one level up.) This works\n# because Node traverses up the fs to find node_modules.\nRUN set -ex; \\\n  if [ \"$BUILD_ENV\" = \"production\" ]; then \\\n    yarn install \\\n      --frozen-lockfile \\\n      --ignore-scripts \\\n      --no-cache; yarn cache clean; \\\n    cd package && yarn install \\\n      --frozen-lockfile \\\n      --ignore-scripts \\\n      --no-cache; \\\n  elif [ \"$BUILD_ENV\" = \"test\" ]; then \\\n    yarn install \\\n      --frozen-lockfile \\\n      --ignore-scripts \\\n      --no-cache; yarn cache clean; \\\n    cd package && yarn install \\\n      --frozen-lockfile \\\n      --ignore-scripts \\\n      --no-cache; \\\n  fi;\n\n# For development, we will yarn install on each container start.\n# This ensures that we use our Docker development .yarnrc config\n# and get any add/changed dependencies without needing a full rebuild.\n#\n# We are copying in a .yarnrc file that is specific to running within Docker.\n# Thus, we don't want it in the main repo because it breaks yarn on the host\n# machine. We also don't want it in APP_SOURCE_DIR where docker-compose will\n# link in host files, so we create it as the user-level config.\n# Note that this will be copied in for a prod build, too, but since\n# we already ran yarn install above, it doesn't matter.\nCOPY --chown=node ./.reaction/yarnrc-docker.template /home/node/.yarnrc\n\n# Important: Make sure we're the \"node\" user before we begin doing things because\n# our tools use \"/home/node\" as the HOME dir.\nUSER node\n\nRUN yarn run build\n\nCMD [\"yarn start\"]\n"
}