{
  "startTime": 1674252179003,
  "endTime": 1674252179984,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-alpine\n\nARG NEXTJS_DOTENV\n\nENV NEXTJS_DOTENV=$NEXTJS_DOTENV\n\n# hadolint ignore=DL3018\nRUN apk --no-cache add bash curl less tini vim make\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-o\", \"errexit\", \"-u\", \"-c\"]\n\nWORKDIR /usr/local/src/app\nENV PATH=$PATH:/usr/local/src/app/node_modules/.bin\n\n# Allow yarn/npm to create ./node_modules\nRUN chown node:node .\n\n# Copy specific things so that we can keep the image as small as possible\n# without relying on each repo to include a .dockerignore file.\nCOPY --chown=node:node ./ ./\n\nUSER node\n\n# Install ALL dependencies. We need devDependencies for the build command.\nRUN yarn install --production=false --frozen-lockfile --ignore-scripts --non-interactive --no-cache && yarn cache clean;\n\nENV BUILD_ENV=production NODE_ENV=production\n\n# hadolint ignore=SC2046\nRUN export $(grep -v '^#' .env.${NEXTJS_DOTENV:-prod} | xargs -0) && yarn build\n\n# Install only prod dependencies now that we've built, to make the image smaller\nRUN rm -rf node_modules/*\nRUN yarn install --production=true --frozen-lockfile --ignore-scripts --non-interactive && yarn cache clean;\n\n# If any Node flags are needed, they can be set in the NODE_OPTIONS env variable.\nCMD [\"tini\", \"--\", \"yarn\", \"start\"]\nLABEL com.reactioncommerce.name=\"example-storefront\"\n"
}