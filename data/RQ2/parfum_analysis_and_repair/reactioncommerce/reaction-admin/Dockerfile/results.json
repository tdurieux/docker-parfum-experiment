{
  "startTime": 1674216739906,
  "endTime": 1674216740967,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM reactioncommerce/meteor:2.5.0-v1 as builder\n\nENV APP_SOURCE_DIR /usr/local/src/appsrc\nENV APP_BUNDLE_DIR /usr/local/src/build\nENV TOOL_NODE_FLAGS --max-old-space-size=4096\n\nUSER root\n\nRUN mkdir -p \"$APP_SOURCE_DIR\" \\\n && mkdir -p \"$APP_BUNDLE_DIR\" \\\n && chown -R node \"$APP_SOURCE_DIR\" \\\n && chown -R node \"$APP_BUNDLE_DIR\"\n\nCOPY --chown=node . $APP_SOURCE_DIR\n\nWORKDIR $APP_SOURCE_DIR\n\nUSER node\n\nRUN npm install --no-audit && npm cache clean --force;\nRUN node --experimental-modules ./.reaction/scripts/build.mjs\nRUN printf \"\\\\n[-] Building Meteor application...\\\\n\" \\\n && /home/node/.meteor/meteor build --server-only --architecture os.linux.x86_64 --directory \"$APP_BUNDLE_DIR\"\n\n##############################################################################\n# final build stage - create the final production image\n##############################################################################\nFROM node:14.18.1-slim\nENV NPM_VERSION 8.5.5\n\nLABEL maintainer=\"Mailchimp Open Commerce <hello-open-commerce@mailchimp.com>\"\n\n# grab the dependencies and built app from the previous temporary builder image\nCOPY --chown=node --from=builder /usr/local/src/build/bundle /usr/local/src/app\n\n# copy the waitForMongo script, too\nCOPY --chown=node --from=builder /usr/local/src/appsrc/.reaction/waitForMongo.js /usr/local/src/app/programs/server/waitForMongo.js\n\nRUN npm i -g npm@${NPM_VERSION} && npm cache clean --force;\n\nWORKDIR /usr/local/src/app/programs/server/\n\nRUN npm install --omit-dev --no-audit && npm cache clean --force;\n\n# Also install mongodb pkg needed by the waitForMongo script\nRUN npm install -E --no-save mongodb@3.5.7 && npm cache clean --force;\n\nWORKDIR /usr/local/src/app\n\nENV PATH $PATH:/usr/local/src/app/programs/server/node_modules/.bin\n\nCMD [\"sh\", \"-c\", \"cd programs/server && node waitForMongo.js && cd ../.. && node main.js\"]\n"
}