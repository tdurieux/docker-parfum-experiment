{
  "startTime": 1674253290664,
  "endTime": 1674253291082,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.15 AS builder\n\nARG HELM_VERSION=3.0.0\n\nWORKDIR /go/src/app\n\nCOPY . .\n\nRUN go get -d -v ./...\n\nENV HELM_VERSION \"${HELM_VERSION}\"\n\nRUN curl -f -ssLO https://helm.sh/downloads/${HELM_VERSION}.tgz\n\nFROM golang:1.15 as tester\n\narg HELM_VERSION=3.0.0\n\nENV HELM_VERSION=\"${HELM_VERSION}\"\n\nRUN curl -f -ssLO https://helm.sh/downloads/${HELM_VERSION}.tgz\n\nRUN go test ./...\n\nFROM golang AS reporter\n\nARG HELM_VERSION\n\nRUN curl -f -ssLO https://helm.sh/downloads/${HELM_VERSION}.tgz\n\nFROM golang\n\nRUN echo OK\n\nFROM ubuntu AS base\n\nARG helm_version\n\nFROM ubuntu AS golang\n\nFROM ubuntu:20.04\n\narg helm_version\n\nLABEL maintainer=\"Olblak <me@olblak.com>\"\n\nVOLUME /tmp\n\nRUN useradd -d /home/updatecli -U -u 1000 -m updatecli\n\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y ca-certificates && \\\n  apt-get clean && \\\n  find /var/lib/apt/lists -type f -delete && rm -rf /var/lib/apt/lists/*;\n\nUSER updatecli\n\nWORKDIR /home/updatecli\n\nCOPY --from=builder --chown=updatecli:updatecli /go/src/app/dist/updatecli /usr/bin/updatecli\n\nENTRYPOINT [ \"/usr/bin/updatecli\" ]\n\nCMD [\"--help\"]\n"
}