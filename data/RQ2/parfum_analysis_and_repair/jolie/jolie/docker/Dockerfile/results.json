{
  "startTime": 1674250657231,
  "endTime": 1674250658358,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# To use this dockerfile locally, launch the following command from the root directory of your local copy of this repository.\n# docker build -f docker/Dockerfile -t jolielang/jolie .\n\nFROM adoptopenjdk/openjdk11:alpine as JolieBuild\n\n# Download and install Jolie. We need it for running the release tools.\nRUN apk add --no-cache --update git maven\nCOPY . /jolie-git\nWORKDIR /jolie-git\nRUN mvn -T 1C -Dmaven.test.skip -DskipTests -pl '!test' clean install\nRUN cp -avr /jolie-git/dist/jolie/ /usr/lib/jolie/\nRUN cp -a /jolie-git/dist/launchers/unix/.  /usr/bin/\nENV JOLIE_HOME /usr/lib/jolie\n\n# Compile the Jolie installer\nWORKDIR /jolie-git/release-tools/installer\nRUN mvn -T 1C -Dmaven.test.skip -DskipTests clean install\n\n# Use the release tools to generate jolie-installer.jar\nRUN apk add --no-cache zip\nWORKDIR /jolie-git/release-tools\nRUN jolie release.ol ..\n\n# Start from scratch, copy the installer, install, remove the installer.\nFROM adoptopenjdk/openjdk11:alpine\nWORKDIR /\nCOPY --from=JolieBuild /jolie-git/release-tools/release/jolie-installer.jar .\nRUN apk add --no-cache --update zip \\\n    && java -jar jolie-installer.jar -jh /usr/lib/jolie -jl /usr/bin \\\n    && rm jolie-installer.jar\nENV JOLIE_HOME /usr/lib/jolie\n"
}