{
  "startTime": 1674248307899,
  "endTime": 1674248308730,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 18,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 18,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest AS builder\nRUN apt update && apt install --no-install-recommends -y git curl make tar gzip bash unzip gcc && rm -rf /var/lib/apt/lists/*;\nWORKDIR /temp\n# Set up ENV variable.\nENV PATH=$PATH:/temp/flutter/bin:/usr/local/go/bin:/root/.local/bin:/root/go/bin\n# Install Flutter.\nRUN git clone https://github.com/flutter/flutter.git -b stable\nRUN flutter upgrade\nRUN flutter doctor\n# Install Go.\nCOPY --from=golang:1.18 /usr/local/go/ /usr/local/go/\n\n# Install dependencies\nWORKDIR /workspace\nCOPY ./client/pubspec.lock ./client/pubspec.yaml ./client/\nCOPY ./server/go.* ./server/\nCOPY ./server/cmd/tools/tools.go ./server/cmd/tools/\nCOPY ./dbctl/go.* ./dbctl/\nCOPY Makefile .\n\nRUN make install.buf install.protoc install.go.notidy install.dart\nRUN rm -rf client server Makefile dbctl\n\n# Install golangci-lint.\nRUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1\n\nENV PATH=$PATH:/root/.pub-cache/bin\n\nWORKDIR /workspace\n\nCMD [\"/bin/bash\"]\n"
}