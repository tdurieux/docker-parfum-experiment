{
  "startTime": 1674253559604,
  "endTime": 1674253560874,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 9,
        "columnEnd": 65
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_IMG=\"quay.io/pypa/manylinux2014_x86_64\"\n\nFROM $DOCKER_IMG\n\nENV USER=\"docker\" \\\n    HOME=\"/home/docker\" \\\n    PREFIX=\"/usr\" \\\n    QBDI_PLATFORM=\"linux\" \\\n    PYTHON_OPT=\"/opt/python\" \\\n    CLICOLOR_FORCE=1 \\\n    CCACHE_VERSION=\"4.1\" \\\n    CCACHE_HASH=\"cdeefb827b3eef3b42b5454858123881a4a90abbd46cc72cf8c20b3bd039deb7\"\n\nARG USER_ID=1000\n\n# create a user\nRUN adduser --uid \"$USER_ID\" --password '' -m \"$USER\"\n\n# Get latest package list, upgrade packages, install required packages\n# and cleanup to keep container as small as possible\nRUN yum update -y && \\\n    yum install -y \\\n        bash \\\n        wget \\\n        ca-certificates && \\\n    (yum install -y ccache || true) && \\\n    yum clean all && rm -rf /var/cache/yum\n\nRUN /opt/python/cp37-cp37m/bin/pip install ninja==1.10.0.post2\n\nENV PATH=$PATH:/opt/python/cp37-cp37m/bin/ \\\n    CCACHE_URL=\"https://github.com/ccache/ccache/releases/download/v${CCACHE_VERSION}/ccache-${CCACHE_VERSION}.tar.gz\" \\\n    CCACHE_ARCHIVE=\"ccache-${CCACHE_VERSION}.tar.gz\"\n\nRUN if ! which ccache >/dev/null 2>&1; then \\\n        set -ex; \\\n        cd /tmp; \\\n        wget \"${CCACHE_URL}\" -O \"${CCACHE_ARCHIVE}\"; \\\n        ( echo \"${CCACHE_HASH}  ${CCACHE_ARCHIVE}\" | sha256sum -c -) || exit 1; \\\n        tar xf \"${CCACHE_ARCHIVE}\"; \\\n        cd \"/tmp/ccache-${CCACHE_VERSION}\"; \\\n        mkdir build && cd build; \\\n        cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DZSTD_FROM_INTERNET=ON; \\\n        ninja install; \\\n        cd /; \\\n        rm -rf \"/tmp/ccache-${CCACHE_VERSION}\" \"/tmp/${CCACHE_ARCHIVE}\"; \\\n    fi\n\nWORKDIR $HOME\n\nUSER $USER\n\n"
}