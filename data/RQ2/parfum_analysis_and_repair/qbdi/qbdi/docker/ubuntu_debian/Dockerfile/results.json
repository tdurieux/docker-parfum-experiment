{
  "startTime": 1674217903516,
  "endTime": 1674217904222,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_IMG=\"ubuntu:latest\"\n\nFROM $DOCKER_IMG as builder\n\nARG QBDI_ARCH=\"X86_64\"\n\nENV USER=\"docker\" \\\n    HOME=\"/home/docker\" \\\n    PREFIX=\"/usr\" \\\n    QBDI_PLATFORM=\"linux\"\n\n# create a user\nRUN adduser --disabled-password --gecos '' --home \"$HOME\" \"$USER\"\n\n# Get latest package list, upgrade packages, install required packages\n# and cleanup to keep container as small as possible\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive \\\n    apt-get install -y --no-install-recommends \\\n        bash \\\n        build-essential \\\n        cmake \\\n        g++ \\\n        g++-multilib \\\n        git \\\n        libstdc++-10-dev \\\n        ninja-build \\\n        pkg-config \\\n        wget \\\n        ca-certificates \\\n        python3 \\\n        python3-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# build / test / install QBDI\nARG CMAKE_ARGUMENT=\"\"\n\n# git archive -o qbdi.tar.gz --prefix=qbdi/ HEAD .\nADD qbdi.tar.gz $HOME/\n\nWORKDIR $HOME/qbdi\n\nRUN chown -R $USER:$USER .\n\n# switch to new user\nUSER $USER\n\nRUN mkdir build && \\\n    cd build && \\\n    cmake -G Ninja \\\n          -DCMAKE_BUILD_TYPE=Release \\\n          -DCMAKE_CROSSCOMPILING=FALSE \\\n          -DQBDI_PLATFORM=$QBDI_PLATFORM \\\n          -DQBDI_ARCH=$QBDI_ARCH \\\n          -DCMAKE_INSTALL_PREFIX=$PREFIX \\\n          -DQBDI_TOOLS_PYQBDI=OFF \\\n          -DQBDI_CCACHE=OFF \\\n          $CMAKE_ARGUMENT \\\n          ../ && \\\n    ninja && \\\n    # test\n    ./test/QBDITest && \\\n    # create package and install\n    rm -f QBDI-*-$QBDI_PLATFORM.deb && \\\n    cpack -G DEB\n\n\nFROM $DOCKER_IMG\n\nWORKDIR /root\n\nCOPY --from=builder /home/docker/qbdi/build/*.deb .\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ./*.deb && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nCMD [\"/bin/bash\"]\n"
}