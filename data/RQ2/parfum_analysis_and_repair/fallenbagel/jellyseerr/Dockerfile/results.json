{
  "startTime": 1674255909531,
  "endTime": 1674255911008,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.14-alpine AS BUILD_IMAGE\n\nWORKDIR /app\n\nARG TARGETPLATFORM\nENV TARGETPLATFORM=${TARGETPLATFORM:-linux/amd64}\n\nRUN \\\n  case \"${TARGETPLATFORM}\" in \\\n    'linux/arm64' | 'linux/arm/v7') \\\n      apk add --no-cache python3 make g++ && \\\n      ln -s /usr/bin/python3 /usr/bin/python \\\n      ;; \\\n  esac\n\nCOPY package.json yarn.lock ./\nRUN yarn install --frozen-lockfile --network-timeout 1000000 && yarn cache clean;\n\nCOPY . ./\n\nARG COMMIT_TAG\nENV COMMIT_TAG=${COMMIT_TAG}\n\nRUN yarn build\n\n# remove development dependencies\nRUN yarn install --production --ignore-scripts --prefer-offline && yarn cache clean;\n\nRUN rm -rf src server .next/cache\n\nRUN touch config/DOCKER\n\nRUN echo \"{\\\"commitTag\\\": \\\"${COMMIT_TAG}\\\"}\" > committag.json\n\n\nFROM node:16.14-alpine\n\nWORKDIR /app\n\nRUN apk add --no-cache tzdata tini && rm -rf /tmp/*\n\n# copy from build image\nCOPY --from=BUILD_IMAGE /app ./\n\nENTRYPOINT [ \"/sbin/tini\", \"--\" ]\nCMD [ \"yarn\", \"start\" ]\n\nEXPOSE 5055\n"
}