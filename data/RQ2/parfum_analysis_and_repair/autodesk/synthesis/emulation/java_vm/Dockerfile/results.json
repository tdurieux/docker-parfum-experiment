{
  "startTime": 1674218424416,
  "endTime": 1674218425978,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "# Builder Docker build stage\n\nFROM ubuntu:18.04 AS builder\n\nENV WPILIB_VERSION v2021.2.2\nENV SYNTHESIS_BRANCH wpilib-2021\nENV TEMPPATH /temp\nENV PATH $TEMPPATH/bin:$PATH\n\nRUN mkdir $TEMPPATH\n\nRUN apt-get update && apt-get upgrade -y\n\n# This avoids issues with an interactive configuration step for tzdata\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends \\\n    gcc \\\n    g++ \\\n    git \\\n    make \\\n    zlib1g-dev \\\n    automake \\\n    libtool \\\n    gdb-multiarch \\\n    gdbserver \\\n    openjdk-11-jdk \\\n    openjdk-11-jre \\\n    cmake \\\n    curl \\\n    unzip \\\n    patch && rm -rf /var/lib/apt/lists/*;\n\n# Build and install protobuf\nRUN cd /root && \\\n    git clone https://github.com/protocolbuffers/protobuf.git --branch v3.7.0 --depth=1 && \\\n    cd protobuf && \\\n    git submodule update --init --recursive && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j12 && \\\n    make check && \\\n    make install && \\\n    ldconfig\n\n# Build Synthesis\nRUN mkdir -p $TEMPPATH/src/github.com/autodesk && \\ \n    cd $TEMPPATH/src/github.com/autodesk/ && \\\n    git clone https://github.com/Autodesk/synthesis.git --branch ${SYNTHESIS_BRANCH} --depth=1\n\nENV ENTER_HEL cd $TEMPPATH/src/github.com/autodesk/synthesis/emulation/hel\n\nRUN ${ENTER_HEL} && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. -DX86=ON -DWPILIB_VERSION=${WPILIB_VERSION} && \\\n    make hel\n\n# Build WPILibj\nRUN ${ENTER_HEL}/../java_vm/wpi_cross && \\\n    git clone https://github.com/wpilibsuite/allwpilib --branch ${WPILIB_VERSION} --depth=1 && \\\n    cd allwpilib && \\\n    rm -rf hal/src/main/native/sim && \\\n    cp ../../../hel/build/lib/ni-libraries/src/ni-libraries/src/include hal/src/main/native/ -r && \\\n    cp wpiutil/src/main/native/include hal/src/main/native/ -r && \\\n    mv hal/src/main/native/athena hal/src/main/native/sim && \\\n    cat ../shim_hal.cpp >> hal/src/main/native/sim/HAL.cpp && \\\n    cat ../shim_jni.cpp >> hal/src/main/native/cpp/jni/HALUtil.cpp && \\\n    patch -p0 < ../AddressableLED.patch && \\\n    patch -p0 < ../FRCDriverStation.patch && \\\n    ./gradlew halBaseLinuxx86-64ReleaseSharedLibrary halJNILinuxx86-64ReleaseSharedLibrary :wpilibj:assemble && \\\n    (./gradlew wpilibj:build || true)\nRUN ${ENTER_HEL}/../java_vm/wpi_cross/allwpilib && \\\n    cp wpilibc/src/main/native/include/frc wpilibOldCommands/src/main/native/include -r -f && \\\n    cp wpilibc/src/main/native/include/frc2 wpilibOldCommands/src/main/native/include -r -f && \\\n    cp wpiutil/src/main/native/include/wpi wpilibOldCommands/src/main/native/include -r -f && \\\n    cp ntcore/src/main/native/include/* wpilibOldCommands/src/main/native/include -r -f && \\\n    cp hal/src/main/native/include/* wpilibOldCommands/src/main/native/include -r -f && \\\n    cp wpimath/src/main/native/include/* wpilibOldCommands/src/main/native/include -r -f && \\\n    cp hal/build/generated/headers/* wpilibOldCommands/src/main/native/include -r -f && \\\n    ./gradlew wpilibOldCommandsBaseLinuxx86-64DebugSharedLibrary\nRUN ${ENTER_HEL}/../java_vm/wpi_cross/allwpilib && \\\ncp wpilibc/src/main/native/include/frc wpilibNewCommands/src/main/native/include -r -f && \\\n    cp wpilibc/src/main/native/include/frc2 wpilibNewCommands/src/main/native/include -r -f && \\\n    cp wpiutil/src/main/native/include/wpi wpilibNewCommands/src/main/native/include -r -f && \\\n    cp ntcore/src/main/native/include/* wpilibNewCommands/src/main/native/include -r -f && \\\n    cp hal/src/main/native/include/* wpilibNewCommands/src/main/native/include -r -f && \\\n    cp wpimath/src/main/native/include/* wpilibNewCommands/src/main/native/include -r -f && \\\n    cp wpimath/src/main/native/eigeninclude/Eigen wpilibNewCommands/src/main/native/include -r -f && \\\n    cp hal/build/generated/headers/* wpilibNewCommands/src/main/native/include -r -f && \\\n    ./gradlew wpilibNewCommandsBaseLinuxx86-64DebugSharedLibrary\n\n\n# Move needed files into one location\nRUN mkdir $TEMPPATH/to_copy && \\\n    ${ENTER_HEL}/../ && \\\n    find . -regex \".*\\.\\(so\\)\\(\\.[0-9]*\\)*\" -exec mv {} $TEMPPATH/to_copy \\; && \\\n    mv hel/scripts/frc_program_runner.sh $TEMPPATH/to_copy && \\\n    mv hel/scripts/docker_runner.sh $TEMPPATH/to_copy\n\n# Final build Docker build stage\n\nFROM ubuntu:18.04\n\nENV WPILIB_VERSION v2020.3.2\nENV SYNTHESIS_BRANCH emulator-restore\nENV TEMPPATH /temp\n\nRUN echo 'root:root' | chpasswd\n\nRUN apt-get -y update\n\nRUN DEBIAN_FRONTEND=\"noninteractive\" apt install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\n\nRUN apt -y install --no-install-recommends \\\n    linux-image-generic:amd64 \\\n    systemd-sysv \\\n    dbus \\\n    openjdk-11-jre \\\n    openssh-server \\\n    vim \\\n    iputils-ping \\\n    iproute2 \\\n    isc-dhcp-client \\\n    network-manager \\\n    ifupdown2 && rm -rf /var/lib/apt/lists/*;\n\nRUN adduser --disabled-password --gecos \"\" lvuser && \\\n    passwd -d lvuser\n\nWORKDIR /home/lvuser\n\nRUN sed -i '#s/PermitRootLogin\\ prohibit-password/PermitRootLogin\\ yes/' /etc/ssh/sshd_config && \\\n    sed -i 's/#PasswordAuthentication/PasswordAuthentication/' /etc/ssh/sshd_config && \\\n    sed -i 's/#PermitEmptyPasswords\\ no/PermitEmptyPasswords\\ yes/' /etc/ssh/sshd_config && \\ \n    sed -i 's/pam_unix.so nullok_secure/pam_unix.so nullok/' /etc/pam.d/common-auth\n\nRUN printf \"auto enp0s3\\n\\\nallow-hotplug enp0s3\\n\\\niface enp0s3 inet dhcp\" >> /etc/network/interfaces\n\nEXPOSE 22\nEXPOSE 50051\n\nRUN mkdir /run/sshd # TODO is this necessary?\n\n# Copy synthesis dir\nCOPY --from=builder $TEMPPATH/to_copy/* /home/lvuser/\n\n# Move WPILib libraries into /lib/\nRUN  mv -n ./libhel.so \\\n    ./libwpiHaljni.so \\\n    ./libwpiHald.so \\\n    ./libwpiutild.so \\\n    ./libcscorejni.so \\\n    ./libcscored.so \\\n    ./libopencv*.so* \\\n    ./libwpilib*Commands*.so* \\\n    ./libntcorejni.so \\\n    ./libntcored.so \\\n    /lib/\n\nRUN rm -rf *.so*\n\n# Touch WPILib version file used by wpilibj\nRUN mkdir /tmp/frc_versions && \\\n    touch /tmp/frc_versions/FRC_Lib_Version.ini\n\n# Write .vminfo for HEL\nRUN printf \"2.0\\n\\\nv2020.3.2\\n\\\n2020v10-image\" > /home/lvuser/.vminfo\n\n# Login as lvuser automatically\nRUN mkdir -p /etc/systemd/system/getty@tty1.service.d/ && \\\n\tprintf \"[Service]\\n\\\nExecStart=\\n\\\nExecStart=/usr/sbin/agetty --autologin lvuser --noclear %%I $TERM\" > /etc/systemd/system/getty@tty1.service.d/override.conf\n\n# Remove apt lists to reclaim space\nRUN rm -rf /var/lib/apt/lists/*\n\nCMD /usr/sbin/sshd && \\\n    while true; do echo \"\"; done\n\n"
}