{
  "startTime": 1674251964097,
  "endTime": 1674251965060,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.2\nMAINTAINER joseph.schaeffer@autodesk.com\n\n# USAGE: To build this instance:\n#          docker build -t <identifier> .\n#        where <identifier> is what you use as an identifier for the resulting container. Typically,\n#        a username / project name combination is reasonable for use here.\n#\n#        To run this instance (and be placed in a sh shell):\n#          docker run -t -i <identifier> /bin/sh\n#\n#        Note that the alpine minimal install does NOT have bash.\n\nRUN echo \"@community http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories && \\\n    apk add --no-cache --update python python-dev gfortran py-pip build-base py2-numpy@community && \\\n    pip install --no-cache-dir pytest && \\\n    apk del --purge python-dev gfortran build-base gcc g++ libgcc && \\\n    find /usr/local \\\n        \\( -type d -a -name test -o -name tests \\) \\\n        -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n        -exec rm -rf '{}' +\n\nENV MODULE /nanodesign\n\nRUN mkdir -p $MODULE\n\nCOPY ./ ${MODULE}/\n\n# install the module\n# RUN cd $MODULE && python setup.py install\n\n# set up the scripts directory\n#ENV APP /app\nWORKDIR ${MODULE}/scripts\n\n#COPY scripts/ ${APP}/\n"
}