{
  "startTime": 1674255591738,
  "endTime": 1674255592757,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\nMAINTAINER Dion Amago Whitehead\n\n#######################################\n# General tools needed by multiple sections below\n#######################################\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n      wget \\\n      curl && \\\n  apt-get -y clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n#######################################\n# Node/npm\n#######################################\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y g++ g++-multilib libgc-dev git python build-essential && \\\n    curl -f -sL https://deb.nodesource.com/setup_7.x | bash - && \\\n    apt-get -y --no-install-recommends install nodejs && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN npm install -g forever nodemon grunt grunt-cli webpack && npm cache clean --force;\n\n# #######################################\n# # Client build/install packages\n# #######################################\nENV APP /app\nRUN mkdir -p $APP\n\n#######################################\n# Molecule viewer source (until bugs are fixed)\n#######################################\nRUN mkdir -p $APP/molecule_viewer\nADD ./molecule_viewer/ $APP/molecule_viewer/\n\n#######################################\n# Shared source build/install packages\n#######################################\nADD ./shared $APP/shared\nWORKDIR $APP/shared\n# https://github.com/Medium/phantomjs/issues/659\nRUN npm install phantomjs-prebuilt && npm cache clean --force;\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\n#######################################\n# Client source build/install packages\n#######################################\n\nRUN mkdir -p $APP/client\nWORKDIR $APP/client\n\nADD client/package.json $APP/client/package.json\n# https://github.com/Medium/phantomjs/issues/659\nRUN npm install phantomjs-prebuilt && npm cache clean --force;\nRUN npm install && npm cache clean --force;\n\nRUN touch .env\nRUN echo \"NODE_ENV=production\" >> .env\n# Will gather (at least) .eslintignore, .eslintrc, .env (optional)\n# if .env exists on the host os, it will overwrite the one created above\nADD ./client/.e*  $APP/client/\nADD ./client/.babelrc $APP/client/.babelrc\n\nADD ./client/karma.conf.js $APP/client/karma.conf.js\nADD ./client/README.md $APP/client/README.md\nADD ./client/webpack.config.js $APP/client/webpack.config.js\nADD ./client/public $APP/client/public\nADD ./client/test $APP/client/test\n\nRUN npm run build\n\n#######################################\n# Interactive-sim static page\n#######################################\nRUN mkdir -p $APP/interactive-sim\nADD ./interactive-sim $APP/interactive-sim\n\n\n#######################################\n# Server build/install packages\n#######################################\nADD ./apps-data $APP/apps-data\nWORKDIR $APP/apps-data\nRUN npm install && npm cache clean --force;\n\nRUN mkdir -p $APP/server\nADD ./server/package.json $APP/server/package.json\nWORKDIR $APP/server\nRUN npm install && npm cache clean --force;\n\nRUN touch .env\nADD ./server/.e*  $APP/server/\nRUN echo \"NODE_ENV=production\" >> .env\nADD ./server/bin $APP/server/bin\nADD ./server/constants $APP/server/constants\nADD ./server/etc $APP/server/etc\nADD ./server/main $APP/server/main\nADD ./server/public $APP/server/public\nADD ./server/routes $APP/server/routes\nADD ./server/services $APP/server/services\nADD ./server/test $APP/server/test\nADD ./server/utils $APP/server/utils\nADD ./server/views $APP/server/views\nADD ./server/**.json $APP/server/\n\nADD ./VERSION $APP/server/\n\n#######################################\n# Final docker config\n#######################################\n\nENV PORT 4000\nEXPOSE $PORT\n\nCMD [\"forever\", \"bin/www\"]\n"
}