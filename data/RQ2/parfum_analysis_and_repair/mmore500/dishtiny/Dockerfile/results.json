{
  "startTime": 1674249434174,
  "endTime": 1674249435810,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 2,
        "columnEnd": 74
      }
    }
  ],
  "repairedDockerfile": "FROM mmore500/conduit:sha-785924c@sha256:b849a941afe8fff6135b2b8d22e7f5d206ffe94b9aa1477922df362ae9a1d013\n\nUSER root\n\nCOPY . /opt/dishtiny\n\n# checking out fails unless we deinit and then init\nRUN \\\n  git -C /opt/dishtiny remote --verbose \\\n    && \\\n  git -C /opt/dishtiny submodule deinit . \\\n    && \\\n  git -C /opt/dishtiny submodule update --init --recursive \\\n    && \\\n  git -C /opt/dishtiny fetch --recurse-submodules --jobs 16 \\\n    && \\\n  echo \"unshallowed source for use as cache\"\n\nRUN \\\n  echo \"deb http://archive.ubuntu.com/ubuntu focal main restricted universe multiverse\" >> \"/etc/apt/sources.list\" \\\n    && \\\n  echo \"Package: libhdf5-dev\" >> \"/etc/apt/preferences\" \\\n    && \\\n  echo \"Pin: release n=bionic\" >> \"/etc/apt/preferences\" \\\n    && \\\n  echo \"Pin-priority: -10\" >> \"/etc/apt/preferences\" \\\n    && \\\n  echo >> \"/etc/apt/preferences\" \\\n    && \\\n  echo \"Package: libhdf5-dev\" >> \"/etc/apt/preferences\" \\\n    && \\\n  echo \"Pin: release n=focal\" >> \"/etc/apt/preferences\" \\\n    && \\\n  echo \"Pin-priority: 900\" >> \"/etc/apt/preferences\" \\\n    && \\\n  apt-get update \\\n    && \\\n  apt-get upgrade -y \\\n    && \\\n  apt-get install --no-install-recommends -y aptitude \\\n    && \\\n  apt-get purge -y libhdf5-dev \\\n    && \\\n  aptitude install -y libhdf5-dev \\\n    && \\\n  echo \"upgrade success\" && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  apt-get update -qq \\\n    && \\\n  apt-get install -y --allow-downgrades --no-install-recommends \\\n    ccache \\\n    imagemagick \\\n    ioping \\\n    libcurl4-openssl-dev \\\n    libdw-dev \\\n    libomp-dev \\\n    libsfml-dev \\\n    locales \\\n    rdfind \\\n    rename \\\n    sharutils \\\n    sshpass \\\n    tree \\\n    xauth \\\n    && \\\n  apt-get clean \\\n    && \\\n  rm -rf /var/lib/apt/lists/* \\\n    && \\\n  echo \"installed apt packages\"\n\n# set up locale\n# adapted from https://stackoverflow.com/a/55077451\nRUN \\\n  locale-gen en_US.UTF-8 \\\n    && \\\n  echo \"generated en_US.UTF-8 locale\"\n\n# install python3.8\nRUN \\\n  add-apt-repository -y ppa:deadsnakes/ppa \\\n    && \\\n  apt-get install --no-install-recommends -y python3.8 python3.8-distutils \\\n    && \\\n  apt-get clean \\\n    && \\\n  rm -rf /var/lib/apt/lists/* \\\n    && \\\n  echo \"installed python3.8\"\n\nCOPY container/policy.xml /etc/ImageMagick-6/policy.xml\n\nCOPY container/ccache.conf /etc/ccache.conf\nENV CCACHE_CONFIGPATH=/etc/ccache.conf\n\nRUN \\\n  python3 -m pip install --no-cache-dir --timeout 60 --retries 100 --upgrade pip==21.0.1 \\\n    && \\\n  python3.8 -m pip install --no-cache-dir --timeout 60 --retries 100 --upgrade pip==21.0.1 \\\n    && \\\n  echo \"upgraded pip\"\n\n# need --ignore-installed for docutils\n# see https://stackoverflow.com/a/53807588\nRUN \\\n  python3 -m pip install --no-cache-dir --timeout 60 --retries 100 --ignore-installed -r /opt/dishtiny/third-party/requirements.txt \\\n    && \\\n  python3.8 -m pip install --no-cache-dir --timeout 60 --retries 100 --ignore-installed -r /opt/dishtiny/third-party/requirements.txt \\\n    && \\\n  echo \"installed python requirements\"\n\nRUN \\\n  cd /opt/dishtiny/third-party \\\n    && \\\n  ./install_dependencies.sh \\\n    && \\\n  echo \"installed third party dependencies\"\n\n# make sure unprivileged user has access to new files in opt\n# adapted from https://stackoverflow.com/a/27703359\n# and https://superuser.com/a/235398\nRUN \\\n  chgrp --recursive user /opt/dishtiny \\\n    && \\\n  chmod --recursive g+rwx /opt/dishtiny \\\n    && \\\n  echo \"user granted permissions to /opt/dishtiny\"\n\nUSER user\n\n# must be installed as user for executable to be available on PATH\nRUN \\\n  pip3 install --no-cache-dir --timeout 60 --retries 100 editorconfig-checker==2.3.54 \\\n    && \\\n  ln -s /home/user/.local/bin/ec /home/user/.local/bin/editorconfig-checker \\\n    && \\\n  echo \"installed editorconfig-checker\"\n\n# adapted from https://askubuntu.com/a/799306\n# and https://stackoverflow.com/a/38905161\nENV PATH \"/home/user/.local/bin:$PATH\"\n\n# python needs this\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# default to clang, which gives ~5% better performance than GCC\nENV MPICH_CXX=clang++\nENV OMPI_CXX=clang++\n\n# Define default working directory.\nWORKDIR /opt/dishtiny\n"
}