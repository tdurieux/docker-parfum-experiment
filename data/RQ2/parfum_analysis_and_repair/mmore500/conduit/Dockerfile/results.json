{
  "startTime": 1674250065408,
  "endTime": 1674250067370,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 233,
        "lineEnd": 233,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 239,
        "lineEnd": 239,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 244,
        "lineEnd": 244,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 308,
        "lineEnd": 308,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 197,
        "lineEnd": 202,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 197,
        "lineEnd": 202,
        "columnStart": 2,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image.\nFROM ubuntu:bionic-20180125@sha256:d6f6cc62b6bed64387d84ca227b76b9cc45049b0d0aefee0deec21ed19a300bf\n\nCOPY . /opt/conduit/\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Define default working directory.\nWORKDIR /opt/conduit\n\n# Prevent interactive time zone config.\n# adapted from https://askubuntu.com/a/1013396\nENV DEBIAN_FRONTEND=noninteractive\n\n# adapted from https://users.open-mpi.narkive.com/tEPxZF0B/ompi-users-how-to-get-rid-of-openmpi-warning-unable-to-find-any-relevant-network-interfaces\n# see also https://github.com/open-mpi/ompi-www/issues/161#issue-390004007\nRUN \\\n  mkdir -p \"/root/.openmpi\" \\\n    && \\\n  mkdir -p \"/home/user/.openmpi\" \\\n    && \\\n  echo \"btl_base_warn_component_unused = 0\" >> /etc/openmpi-mca-params.conf \\\n    && \\\n  echo \"btl_base_warn_component_unused = 0\" >> /root/.openmpi/mca-params.conf \\\n    && \\\n  echo \"btl_base_warn_component_unused = 0\" >> /home/user/.openmpi/mca-params.conf \\\n    && \\\n  echo \"configured system-wide openmpi mca parameters\"\n\nRUN \\\n  echo 'Acquire::http::Timeout \"60\";' >> \"/etc/apt/apt.conf.d/99timeout\" \\\n    && \\\n  echo 'Acquire::ftp::Timeout \"60\";' >> \"/etc/apt/apt.conf.d/99timeout\" \\\n    && \\\n  echo 'Acquire::Retries \"100\";' >> \"/etc/apt/apt.conf.d/99timeout\" \\\n    && \\\n  echo \"buffed apt-get resiliency\"\n\nRUN \\\n  find /etc/apt -type f -name '*.list' -exec sed -i 's/\\(^deb.*-backports.*\\)/#\\1/; s/\\(^deb.*-updates.*\\)/#\\1/; s/\\(^deb.*-proposed.*\\)/#\\1/; s/\\(^deb.*-security.*\\)/#\\1/' {} + \\\n    && \\\n  rm -rf /var/lib/apt/lists/* \\\n    && \\\n  echo \"removed -backports, -updates, -proposed, -security repositories\"\n\n# adapted in part form https://www.cloudsavvyit.com/13461/how-to-run-puppeteer-and-headless-chrome-in-a-docker-container/\nRUN \\\n  apt-get update -qq \\\n    && \\\n  apt-get install -y --allow-downgrades --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    cmake \\\n    curl \\\n    doxygen \\\n    emacs \\\n    fonts-liberation \\\n    gconf-service \\\n    gdb \\\n    gpg-agent \\\n    gzip \\\n    hdf5-helpers \\\n    hdf5-tools \\\n    htop \\\n    libappindicator1 \\\n    libasound2 \\\n    libatk1.0-0 \\\n    libc6 \\\n    libcairo2 \\\n    libcups2 \\\n    libcurl4 \\\n    libcurl4-openssl-dev \\\n    libdbus-1-3 \\\n    libexpat1 \\\n    libfontconfig1 \\\n    libgbm-dev \\\n    libgconf-2-4 \\\n    libgdk-pixbuf2.0-0 \\\n    libglib2.0-0 \\\n    libgtk-3-0 \\\n    libicu-dev \\\n    libjpeg-dev \\\n    libhdf5-100 \\\n    libhdf5-cpp-100 \\\n    libhdf5-dev \\\n    libhdf5-doc \\\n    libhdf5-mpi-dev \\\n    libhdf5-mpich-100 \\\n    libhdf5-mpich-dev \\\n    libhdf5-openmpi-100 \\\n    libhdf5-openmpi-dev \\\n    libhdf5-serial-dev \\\n    libmpich-dev \\\n    libmpich12 \\\n    libnspr4 \\\n    libnss3 \\\n    libopenmpi-dev \\\n    libopenmpi2 \\\n    libpango-1.0-0 \\\n    libpangocairo-1.0-0 \\\n    libpng-dev \\\n    libpthread-stubs0-dev \\\n    libstdc++-7-dev \\\n    libstdc++6=8-20180414-1ubuntu2 \\\n    libx11-6 \\\n    libx11-xcb1 \\\n    libxcb1 \\\n    libxcomposite1 \\\n    libxcursor1 \\\n    libxdamage1 \\\n    libxext6 \\\n    libxfixes3 \\\n    libxi6 \\\n    libxrandr2 \\\n    libxrender1 \\\n    libxss1 \\\n    libxtst6 \\\n    locales \\\n    lsb-release \\\n    man \\\n    mpich \\\n    multitail \\\n    nano \\\n    ninja-build \\\n    nodejs \\\n    npm \\\n    openmpi-bin \\\n    openmpi-common \\\n    openmpi-doc \\\n    openssh-server \\\n    python-dev \\\n    python-h5py \\\n    python-pip \\\n    python-setuptools \\\n    python-sphinx \\\n    python-virtualenv \\\n    python-wheel \\\n    python3-dev \\\n    python3-h5py \\\n    python3-pip \\\n    python3-setuptools \\\n    python3-sphinx \\\n    python3-virtualenv \\\n    python3-wheel \\\n    rename \\\n    rsync \\\n    slurm-client \\\n    software-properties-common \\\n    tar \\\n    unzip \\\n    vim \\\n    wget \\\n    xdg-utils \\\n    && \\\n  add-apt-repository ppa:git-core/ppa -y \\\n    && \\\n  apt-get update -qq \\\n    && \\\n  apt-get install -y --no-install-recommends git \\\n    && \\\n  apt-get clean \\\n    && \\\n  rm -rf /var/lib/apt/lists/* \\\n    && \\\n  echo \"installed fundamentals\"\n\n# adapted in part from https://askubuntu.com/a/916451\nRUN \\\n  apt-get update -qq \\\n    && \\\n  rm /etc/apt/apt.conf.d/docker-gzip-indexes \\\n    && \\\n  apt-get purge apt-show-versions \\\n    && \\\n  rm /var/lib/apt/lists/*lz4 \\\n    && \\\n  apt-get -o Acquire::GzipIndexes=false update \\\n    && \\\n  add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n    && \\\n  wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n    && \\\n  apt-add-repository \"deb https://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main\" \\\n    && \\\n  add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n    && \\\n  apt-get update -qq \\\n    && \\\n  apt-get clean \\\n    && \\\n  rm -rf /var/lib/apt/lists/* \\\n    && \\\n  echo \"configured packaging system\"\n\nRUN \\\n  apt-get update -qq \\\n    && \\\n  apt-get install -y --no-install-recommends -qq \\\n    libclang-7-dev=1:7.1.0~svn353565-1~exp1~20190408084827.60 \\\n    llvm-7=1:7.1.0~svn353565-1~exp1~20190408084827.60 \\\n    llvm-7-dev=1:7.1.0~svn353565-1~exp1~20190408084827.60 \\\n    clang-7=1:7.1.0~svn353565-1~exp1~20190408084827.60 \\\n    g++-9=9.4.0-1ubuntu1~18.04 \\\n    && \\\n  apt-get clean \\\n    && \\\n  rm -rf /var/lib/apt/lists/* \\\n    && \\\n  echo \"installed llvm-7 dependencies\"\n\n# magic from https://github.com/puppeteer/puppeteer/issues/3451#issuecomment-523961368\nRUN echo 'kernel.unprivileged_userns_clone=1' > /etc/sysctl.d/userns.conf\n\nRUN \\\n  python3 -m pip install --timeout 60 --retries 100 --upgrade pip==21.3.1 \\\n    && \\\n  python3 -m pip install --timeout 60 --retries 100 --ignore-installed -r /opt/conduit/third-party/requirements.txt \\\n    && \\\n  python3 -m pip install --timeout 60 --retries 100 --ignore-installed -r /opt/conduit/docs/requirements.txt \\\n    && \\\n  echo \"installed Python packages\"\n\nRUN \\\n  update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 90 \\\n    && \\\n  update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-7 90 \\\n    && \\\n  update-alternatives --install /usr/bin/llvm-config llvm-config /usr/bin/llvm-config-7 90 \\\n    && \\\n  update-alternatives --install /usr/bin/llvm-profdata llvm-profdata /usr/bin/llvm-profdata-7 90 \\\n    && \\\n  update-alternatives --install /usr/bin/llvm-cov llvm-cov /usr/bin/llvm-cov-7 90 \\\n    && \\\n  npm install -g n@6.7.0 \\\n    && \\\n  n 12.18.2 \\\n    && \\\n  export python=\"/usr/bin/python\" \\\n    && \\\n  npm install source-map@0.7.3 \\\n    && \\\n  echo \"finalized dependency versions\" && npm cache clean --force;\n\nRUN \\\n  npm install -g jsonlint@1.6.3 \\\n    && \\\n  echo \"installed npm dependencies\" && npm cache clean --force;\n\nRUN \\\n  cd third-party \\\n    && \\\n  ./install_dependencies.sh \\\n    && \\\n  echo \"installed third party dependencies\"\n\n# set up locale\n# adapted from https://stackoverflow.com/a/55077451\nRUN \\\n  locale-gen en_US.UTF-8 \\\n    && \\\n  echo \"generated en_US.UTF-8 locale\"\n\n# Set enviroment variables\n# Use mimalloc override within the container.\nENV LD_PRELOAD=/usr/local/lib/mimalloc-1.6/libmimalloc.so\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nRUN \\\n  git remote set-url origin https://github.com/mmore500/conduit.git \\\n    && \\\n  echo \"switched to https origin remote url\"\n\n# Perform any further action as an unprivileged user.\n# adapted from https://stackoverflow.com/a/27703359\n# and https://superuser.com/a/235398\nRUN \\\n  useradd --create-home --shell /bin/bash user \\\n    && \\\n  groupadd group \\\n    && \\\n  gpasswd -a user group \\\n    && \\\n  chgrp --recursive user /opt \\\n    && \\\n  chmod --recursive g+rwx /opt \\\n    && \\\n  chmod --recursive g+rwx /home/user \\\n    && \\\n  chown -R user /home/user/ \\\n    && \\\n  echo \"user added and granted permissions to /opt and /home/user\"\n\nRUN \\\n  mkdir /context/ \\\n    && \\\n  chown user:user /context/ \\\n    && \\\n  mkdir /__w/ \\\n    && \\\n  chown user:user /__w/ \\\n    && \\\n  echo \"/context/ /__w/ directories set up, user granted permissions\"\n\nUSER user\n\n# must be installed as user for executable to be available on PATH\nRUN \\\n  pip3 install --no-cache-dir --timeout 60 --retries 100 editorconfig-checker==2.3.54 \\\n    && \\\n  ln -s /home/user/.local/bin/ec /home/user/.local/bin/editorconfig-checker \\\n    && \\\n  echo \"installed editorconfig-checker\"\n\n# adapted from https://askubuntu.com/a/799306\n# and https://stackoverflow.com/a/38905161\nENV PATH \"/home/user/.local/bin:$PATH\"\n\nCMD [\"bash\"]\n"
}