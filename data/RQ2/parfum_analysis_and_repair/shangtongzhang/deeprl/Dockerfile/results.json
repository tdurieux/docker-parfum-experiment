{
  "startTime": 1674249883679,
  "endTime": 1674249884573,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-base\n\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y --allow-unauthenticated --no-install-recommends \\\n    build-essential apt-utils cmake git curl vim ca-certificates \\\n    libjpeg-dev libpng-dev \\\n    libgtk3.0 libsm6 cmake ffmpeg pkg-config \\\n    qtbase5-dev libqt5opengl5-dev libassimp-dev \\\n    libboost-python-dev libtinyxml-dev bash \\\n    wget unzip libosmesa6-dev software-properties-common \\\n    libopenmpi-dev libglew-dev openssh-server \\\n    libosmesa6-dev libgl1-mesa-glx libgl1-mesa-dev patchelf libglfw3 && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -rf /var/lib/apt/lists/*\n\nARG UID\nRUN useradd -u $UID --create-home user\nUSER user\nWORKDIR /home/user\n\nRUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    bash Miniconda3-latest-Linux-x86_64.sh -b -p miniconda3 && \\\n    rm Miniconda3-latest-Linux-x86_64.sh\nENV PATH /home/user/miniconda3/bin:$PATH\n\nRUN mkdir -p .mujoco \\\n    && wget https://www.roboti.us/download/mjpro150_linux.zip -O mujoco.zip \\\n    && unzip mujoco.zip -d .mujoco \\\n    && rm mujoco.zip\nRUN wget https://www.roboti.us/download/mujoco200_linux.zip -O mujoco.zip \\\n    && unzip mujoco.zip -d .mujoco \\\n    && rm mujoco.zip\n\n# Make sure you have a license, otherwise comment this line out\n# Of course you then cannot use Mujoco and DM Control, but Roboschool is still available\nCOPY ./mjkey.txt .mujoco/mjkey.txt\n\nENV LD_LIBRARY_PATH /home/user/.mujoco/mjpro150/bin:${LD_LIBRARY_PATH}\nENV LD_LIBRARY_PATH /home/user/.mujoco/mjpro200_linux/bin:${LD_LIBRARY_PATH}\n\nRUN conda install -y python=3.6\nRUN conda install mpi4py\nCOPY requirements.txt requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\nRUN pip install --no-cache-dir glfw Cython imageio lockfile\nRUN pip install --no-cache-dir mujoco-py==1.50.1.68\nRUN pip install --no-cache-dir git+git://github.com/deepmind/dm_control.git@103834\nRUN pip install --no-cache-dir git+https://github.com/ShangtongZhang/dm_control2gym.git@scalar_fix\nRUN pip install --no-cache-dir git+git://github.com/openai/baselines.git@8e56dd#egg=baselines\nWORKDIR /home/user/deep_rl\n"
}