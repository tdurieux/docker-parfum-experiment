{
  "startTime": 1674219608035,
  "endTime": 1674219608699,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://stackoverflow.com/questions/53835198/integrating-python-poetry-with-docker/54763270#54763270\n\nFROM python:3.9\n\n\n# --------------------------------------\n# ------------- Set labels -------------\n\n# See https://github.com/opencontainers/image-spec/blob/master/annotations.md\nLABEL name=\"tyrannosaurus\"\nLABEL version=\"0.10.5\"\nLABEL vendor=\"dmyersturnbull\"\nLABEL org.opencontainers.image.title=\"tyrannosaurus\"\nLABEL org.opencontainers.image.version=\"0.10.5\"\nLABEL org.opencontainers.image.url=\"https://github.com/dmyersturnbull/tyrannosaurus\"\nLABEL org.opencontainers.image.documentation=\"https://github.com/dmyersturnbull/tyrannosaurus\"\n\n\n# --------------------------------------\n# ---------- Copy and install ----------\n\n# ENV no longer adds a layer in new Docker versions,\n# so we don't need to chain these in a single line\nENV PYTHONFAULTHANDLER=1\nENV PYTHONUNBUFFERED=1\nENV PYTHONHASHSEED=random\nENV PIP_NO_CACHE_DIR=off\nENV PIP_DISABLE_PIP_VERSION_CHECK=on\nENV PIP_DEFAULT_TIMEOUT=120\nENV POETRY_VERSION=1.1.13\n\n# Install system deps\nRUN pip install --no-cache-dir \"poetry==$POETRY_VERSION\"\n\n# Copy only requirements to cache them in docker layer\nWORKDIR /code\nCOPY poetry.lock pyproject.toml /code/\n\n# Install with poetry\n# pip install would probably work, too, but we'd have to make sure it's a recent enough pip\n# Don't bother creating a virtual env -- significant performance increase\nRUN poetry config virtualenvs.create false \\\n  && poetry install --no-dev --no-interaction --no-ansi\n\n# Copy to workdir\nCOPY . /code\n\nCMD tyrannosaurus --help\n"
}