diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eugeny/tabby-web/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eugeny/tabby-web/Dockerfile/repaired.Dockerfile
index 6f57952..3151374 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eugeny/tabby-web/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eugeny/tabby-web/Dockerfile/repaired.Dockerfile
@@ -1,8 +1,7 @@
-# syntax=docker/dockerfile:1
 FROM node:12-alpine AS frontend-build
 WORKDIR /app
 COPY frontend/package.json frontend/yarn.lock ./
-RUN yarn install --frozen-lockfile --network-timeout 1000000
+RUN yarn install --frozen-lockfile --network-timeout 1000000 && yarn cache clean;
 COPY frontend/webpack* frontend/tsconfig.json ./
 COPY frontend/assets assets
 COPY frontend/src src
@@ -23,10 +22,10 @@ CMD ["npm", "start"]
 FROM python:3.7-alpine AS build-backend
 ARG EXTRA_DEPS
 
-RUN apk add build-base musl-dev libffi-dev openssl-dev mariadb-dev
+RUN apk add --no-cache build-base musl-dev libffi-dev openssl-dev mariadb-dev
 
 WORKDIR /app
-RUN pip install -U setuptools 'cryptography>=3.0,<3.1' poetry==1.1.7
+RUN pip install --no-cache-dir -U setuptools 'cryptography>=3.0,<3.1' poetry==1.1.7
 COPY backend/pyproject.toml backend/poetry.lock ./
 RUN poetry config virtualenvs.path /venv
 RUN poetry install --no-dev --no-ansi --no-interaction
@@ -54,7 +53,7 @@ RUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSI
     && tar -C /usr/local/bin -xzvf dockerize-linux-$DOCKERIZE_ARCH-$DOCKERIZE_VERSION.tar.gz \
     && rm dockerize-linux-$DOCKERIZE_ARCH-$DOCKERIZE_VERSION.tar.gz
 
-RUN apk add mariadb-connector-c
+RUN apk add --no-cache mariadb-connector-c
 
 COPY --from=build-backend /app /app
 COPY --from=build-backend /venv /venv