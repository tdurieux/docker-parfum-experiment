{
  "startTime": 1674251577006,
  "endTime": 1674251577873,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL maintainer=\"brian@wildsong.biz\"\nENV REFRESHED_AT 2020-04-17\n\n# Uncomment the right lines for your version.\nENV ESRI_VERSION 10.7.1\nENV TGZ 1071\n#ENV ESRI_VERSION 10.8\n#ENV TGZ 108\n\nENV RELEASE=bionic\n# \"bionic\" is currently the latest Ubuntu LTS (Long Term Support) release.\n\nRUN apt-get update && apt-get -y --no-install-recommends install apt-utils locales && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install iputils-ping curl && rm -rf /var/lib/apt/lists/*;\n\n# Set up the locale.\nRUN locale-gen en_US.UTF-8\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n# Note that we can't use tomcat's ports (8080,8443) with Web Adaptor\nEXPOSE 80 443\n\n# Default dependencies cause openjdk 11 to be installed\n# which is not in the supported list\nRUN apt-get install --no-install-recommends -y openjdk-8-jre-headless tomcat8 && rm -rf /var/lib/apt/lists/*;\n\n# Prerequisites: Before doing a \"docker build\",\n# put a downloaded copy of the web adaptor installer\n# in the same folder as this Dockerfile\n\n# You can override these in docker-compose.yml\nENV WA_NAME web-adaptor.wildsong.lan\nENV PORTAL_NAME portal.wildsong.lan\n\n# NOTE that CATALINA_BASE is where the app server's files live (owned by root)\n# and that the unprivileged user (tomcat) has its own HOME (owned by tomcat).\n# This is done to accomodate running the installation as an unprivileged user\n# and giving ESRI a place to stash the .ESRI properties file.\n\n# \"ADD\" knows how to unpack the tar file directly into the Docker image.\n\n# ArcGIS installation should be done as an unprivileged user.\nENV TOMCAT=tomcat8\nENV HOME=/home/${TOMCAT}\nENV CATALINA_HOME=/usr/share/${TOMCAT}\nRUN mkdir ${HOME} && chown -R ${TOMCAT}.${TOMCAT} ${HOME} && usermod --home ${HOME} ${TOMCAT}\n\n# Note, there is a \"tomcat8\" string embedded in this script. This needs fixing.\nADD logrotate /etc/logrotate.d/${TOMCAT}\nRUN chmod 644 /etc/logrotate.d/${TOMCAT}\n\n# Change from port 8080 to port 80.\nRUN sed -i \"s/8080/80/\" /etc/${TOMCAT}/server.xml\n# Remove the redirect\nRUN sed -i \"s/redirectPort=\\\"8443\\\"//g\" /etc/${TOMCAT}/server.xml\n\n# Create and install a self-signed certificate.\nRUN keytool -genkey -alias tomcat -keyalg RSA -keystore /etc/${TOMCAT}/.keystore \\\n    -storepass changeit -keypass changeit \\\n    -dname \"CN=Abraham Lincoln, OU=Legal Department, O=Whig Party, L=Springfield, ST=Illinois, C=US\"\n# Modify server.xml to activate the TLS service\nRUN sed -i \"s/<Service name=\\\"Catalina\\\">/<Service name=\\\"Catalina\\\">\\n    <Connector port=\\\"443\\\" maxThreads=\\\"200\\\" scheme=\\\"https\\\" secure=\\\"true\\\" SSLEnabled=\\\"true\\\" keystorePass=\\\"changeit\\\" clientAuth=\\\"false\\\" sslProtocol=\\\"TLS\\\" keystoreFile=\\\"\\/etc\\/${TOMCAT}\\/.keystore\\\" \\/>/\" \\\n        /etc/${TOMCAT}/server.xml\n\nENV PIDDIR=/var/run/${TOMCAT}\nRUN mkdir ${PIDDIR} && chown ${TOMCAT}.${TOMCAT} ${PIDDIR}\n\n\n# Set up authbind to allow tomcat to use ports 80 and 443\n# (By default, non-privileged users are not allowed to use ports < 1024.)\nENV AUTHBIND=/etc/authbind/byport/\nRUN touch ${AUTHBIND}/80 && touch ${AUTHBIND}/443\nRUN chown ${TOMCAT} ${AUTHBIND}/80 ${AUTHBIND}/443\nRUN chmod 755 ${AUTHBIND}/80 ${AUTHBIND}/443\n\nADD Web_Adaptor_Java_Linux_${TGZ}*.tar.gz /home/${TOMCAT}/\n\nWORKDIR ${HOME}\nUSER ${TOMCAT}\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nENV JSSE_HOME=${JAVA_HOME}/jre\nENV CATALINA_OUT=/var/log/${TOMCAT}/catalina.out\nENV CATALINA_TMPDIR=/tmp/${TOMCAT}\nENV CATALINA_PID=${PIDDIR}/${TOMCAT}.pid\nENV CATALINA_BASE=/var/lib/${TOMCAT}\n# Child containers deploy WAR files here.\nENV CATALINA_APPS /var/lib/${TOMCAT}/webapps\n# Set heap,memory options here\nENV CATALINA_OPTS=\"-Djava.awt.headless=true -Xmx128M\"\n\nRUN touch ${CATALINA_OUT} && mkdir ${CATALINA_TMPDIR}\n\n# Run the ESRI installer script with these options:\n#   -m silent         silent mode: don't pop up windows, we don't have a screen\n#   -l yes            Agree to the License Agreement\n#   -d target dir     ESRI default puts the files in wrong place\n#\nRUN cd ${HOME}/WebAdaptor \\\n && ./Setup -m silent --verbose -l yes -d ${HOME}\n\n# Deploy the WAR file; requires ROOT.\nUSER root\nRUN cp ${HOME}/arcgis/webadaptor*/java/arcgis.war ${CATALINA_APPS}\n\n# Once we're done with the installer files, we can delete them.\n#RUN rm -rf ${HOME}/WebAdaptor\n\nRUN chown -R ${TOMCAT}:${TOMCAT} /var/log/${TOMCAT} ${HOME}\n\nWORKDIR ${HOME}\n\n# Drop privileges, no need to run as root.\nUSER ${TOMCAT}\n\n# Change command line prompt\nADD bashrc .bashrc\n\n# The hostname will be changed in the final run command,\n# so we need to fix up the name of the properties file to match.\nRUN mv .ESRI.properties.*.${ESRI_VERSION} .ESRI.properties.${WA_NAME}.${ESRI_VERSION}\n\n# Add a script that can start web adaptor and configure it\nADD start.sh .\n\n# Add a script that can test the connection to the portal.\nADD check_portal.py .\n\n# FIXME There is a web adaptor health URL, I should wedge that in here\nHEALTHCHECK --interval=30s --timeout=10s --retries=3 CMD curl -sS 127.0.0.1 || exit 1\n\n# Start Tomcat on low ports, running in foreground (don't daemonize)\nCMD ./start.sh && tail -f /var/log/${TOMCAT}/catalina.out\n"
}