diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/graphcore/tensorflow/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/graphcore/tensorflow/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile/repaired.Dockerfile
index feba442..2e23d0a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/graphcore/tensorflow/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/graphcore/tensorflow/tensorflow/tools/dockerfiles/dockerfiles/devel-gpu.Dockerfile/repaired.Dockerfile
@@ -65,7 +65,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
         git \
         && \
     find /usr/local/cuda-${CUDA}/lib64/ -type f -name 'lib*_static.a' -not -name 'libcudart_static.a' -delete && \
-    rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v8.a
+    rm /usr/lib/${LIB_DIR_PREFIX}-linux-gnu/libcudnn_static_v8.a && rm -rf /var/lib/apt/lists/*;
 
 # Install TensorRT if not building for PowerPC
 # NOTE: libnvinfer uses cuda11.1 versions
@@ -98,9 +98,9 @@ RUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/lib
 # See http://bugs.python.org/issue19846
 ENV LANG C.UTF-8
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     python3 \
-    python3-pip
+    python3-pip && rm -rf /var/lib/apt/lists/*;
 
 RUN python3 -m pip --no-cache-dir install --upgrade \
     "pip<20.3" \
@@ -109,7 +109,7 @@ RUN python3 -m pip --no-cache-dir install --upgrade \
 # Some TF tools expect a "python" binary
 RUN ln -s $(which python3) /usr/local/bin/python
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     build-essential \
     curl \
     git \
@@ -117,7 +117,7 @@ RUN apt-get update && apt-get install -y \
     openjdk-8-jdk \
     python3-dev \
     virtualenv \
-    swig
+    swig && rm -rf /var/lib/apt/lists/*;
 
 RUN python3 -m pip --no-cache-dir install \
     Pillow \