{
  "startTime": 1674218927410,
  "endTime": 1674218928366,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 32,
        "columnStart": 21,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 The TensorFlow Authors. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ============================================================================\n#\n# THIS IS A GENERATED DOCKERFILE.\n#\n# This file was assembled from multiple pieces, whose use is documented\n# throughout. Please refer to the TensorFlow dockerfiles documentation\n# for more information.\n\nARG CENTOS_VERSION=8\n\nFROM centos:${CENTOS_VERSION} as base\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\nARG PYTHON=python3\n\nRUN yum update -y && yum install -y \\\n    ${PYTHON} \\\n    ${PYTHON}-pip \\\n    which && \\\n    yum clean all && rm -rf /var/cache/yum\n\n\nRUN ${PYTHON} -m pip --no-cache-dir install --upgrade \\\n    pip \\\n    setuptools\n\n# Some TF tools expect a \"python\" binary\nRUN ln -sf $(which ${PYTHON}) /usr/local/bin/python && \\\n    ln -sf $(which ${PYTHON}) /usr/local/bin/python3 && \\\n    ln -sf $(which ${PYTHON}) /usr/bin/python\n\n# Options:\n#   tensorflow\n#   tensorflow-gpu\n#   tf-nightly\n#   tf-nightly-gpu\n# Set --build-arg TF_PACKAGE_VERSION=1.11.0rc0 to install a specific version.\n# Installs the latest version by default.\nARG TF_PACKAGE=tensorflow\nARG TF_PACKAGE_VERSION=\nRUN python3 -m pip install --no-cache-dir ${TF_PACKAGE}${TF_PACKAGE_VERSION:+==${TF_PACKAGE_VERSION}}\n\nCOPY bashrc /etc/bash.bashrc\nRUN chmod a+rwx /etc/bash.bashrc\n\nRUN ${PYTHON} -m pip install --no-cache-dir jupyter matplotlib\n# Pin ipykernel and nbformat; see https://github.com/ipython/ipykernel/issues/422\nRUN ${PYTHON} -m pip install --no-cache-dir jupyter_http_over_ws ipykernel==5.1.1 nbformat==4.4.0\nRUN jupyter serverextension enable --py jupyter_http_over_ws\n\nRUN mkdir -p /tf/ && chmod -R a+rwx /tf/\nRUN mkdir /.local && chmod a+rwx /.local\nWORKDIR /tf\nEXPOSE 8888\n\nRUN ${PYTHON} -m ipykernel.kernelspec\n\nCMD [\"bash\", \"-c\", \"source /etc/bash.bashrc && jupyter notebook --notebook-dir=/tf --ip 0.0.0.0 --no-browser --allow-root\"]\n"
}