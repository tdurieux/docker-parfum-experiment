{
  "startTime": 1674248819430,
  "endTime": 1674248820218,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "#\n# PHP\n#\n\nFROM php:7.4-fpm-buster AS php\n\n# Build variables\nARG ENVIRONMENT=\"local\"\nARG DEBUG_IP=\"192.168.42.128\"\n\nARG MAIN_DOMAIN=\"wikijump.localhost\"\nARG FILES_DOMAIN=\"wjfiles.localhost\"\n\n# Derived variables\nARG WWW_DOMAIN=\"www.${MAIN_DOMAIN}\"\n\n# Copy setup scripts\nRUN mkdir /src\nCOPY ./install/files/php-fpm/*.sh /src/\n\n# Ensure PHP integer width is correct\nRUN /src/check-php-int.sh\n\n# Install system dependencies\nRUN /src/setup-system.sh\n\n# !! Add debug utilities\nRUN apt install --no-install-recommends -y gdb valgrind vim && rm -rf /var/lib/apt/lists/*;\n\n# !! Configure xdebug\nRUN /src/setup-xdebug.sh\nARG XDEBUG_INI=/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n\n# !! Put your IP for debugging here.\nRUN echo \"xdebug.mode = develop\" >> ${XDEBUG_INI} \\\n    && echo \"xdebug.client_host = ${DEBUG_IP}\" >> ${XDEBUG_INI}\n\n# Install composer from the official image\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\n\n# Install PHP extensions, dependencies\nWORKDIR /var/www/wikijump/web\nRUN /src/setup-php-create.sh\nRUN /src/setup-php-extensions.sh\n\nUSER www-data\nCOPY ./web/lib/ /var/www/wikijump/web/lib\nCOPY ./web/composer.json ./web/composer.lock /var/www/wikijump/web/\nRUN /src/setup-php-dependencies.sh\n\n# Copy PHP configuration files\nCOPY ./install/files/php-fpm/etc/php/ /usr/local/etc/php/conf.d/\n\n# Copy full Wikijump source\nCOPY ./web /var/www/wikijump/web\n\n# Inject values in the wikijump.ini and .env configuration files\nUSER root\nCOPY ./install/files/${ENVIRONMENT}/wikijump.ini conf/wikijump.ini\nCOPY ./install/files/${ENVIRONMENT}/php_env .env\n\nRUN sed -i \"s/%%BASE_DOMAIN%%/${MAIN_DOMAIN}/g\" conf/wikijump.ini && \\\n    sed -i \"s/%%MAIN_WIKI%%/${WWW_DOMAIN}/g\" conf/wikijump.ini && \\\n    sed -i \"s/%%FILE_DOMAIN%%/${FILES_DOMAIN}/g\" conf/wikijump.ini\n\n#\n# Rust\n#\n\nFROM rust:latest AS rust\n\n# Install mrml-cli for compiling MJML email templates\nRUN cargo install --locked --version 1.3.2 mrml-cli\n\n#\n# Final image\n#\n\nFROM php\nEXPOSE 9000\n\n# Copy binaries from intermediate images\nCOPY --from=rust /usr/local/cargo/bin/mrml /usr/local/bin/mrml\n\n# PHP configuration preparation\nRUN php artisan key:generate\nRUN php artisan config:cache\nRUN /src/setup-misc.sh\n\n# Install runner\nCOPY ./install/files/php-fpm/run.sh /app/run.sh\n\n# Cleanup\n# Don't remove composer for the local container\n\n# We'll need to change the owner of the public directory,\n# so that the user www-data can write to it.\nRUN chown -R www-data /var/www/wikijump/web/public\n\nUSER www-data\nENTRYPOINT [\"/app/run.sh\"]\n"
}