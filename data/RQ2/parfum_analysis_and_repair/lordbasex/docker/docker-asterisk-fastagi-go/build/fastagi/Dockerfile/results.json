{
  "startTime": 1674253308979,
  "endTime": 1674253310030,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 68
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 18,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##################################\n# STEP 1 build executable binary\n##################################\nFROM alpine:latest AS builder\n\nLABEL maintainer=\"Federico Pereira <fpereira@cnsoluciones.com>\"\nLABEL github=\"https://github.com/lordbasex/docker/docker-asterisk-fastagi-go\"\n\nENV GO111MODULE=on \\\n    GOPATH=/home/go \\\n    PATH=/home/go/bin:$PATH \\\n    GOBIN=/home/go/bin\n\nRUN apk update && apk add --no-cache --update-cache git go bash ca-certificates\nRUN mkdir -p /home/go/src /home/go/bin /home/go/src/fastagi && chmod -R 777 /home/go /home/go/src/fastagi && cp -fr /usr/bin/go /home/go/bin/\nWORKDIR /home/go/src/fastagi\nCOPY ./fastagi.go .\nRUN go mod init fastagi\nRUN go get -v\nRUN go build -o /go/bin/fastagi\n\n##################################\n# STEP 2 build a small image\n##################################\nFROM alpine:latest\n\nLABEL maintainer=\"Federico Pereira <fpereira@cnsoluciones.com>\"\nLABEL github=\"https://github.com/lordbasex/docker/docker-asterisk-fastagi-go\"\n\nRUN apk update && apk add --no-cache --update-cache bash\n\nCOPY --from=builder /go/bin/fastagi /go/bin/fastagi\nCOPY ./audios /audios\n\nENV FASTAGI_PORT=8000 \\\n    SERVER_MEDIA=\"http://fastagi:8011/\" \\\n    SERVER_MEDIA_DIR=\"/audios\"\n\nENTRYPOINT [\"/go/bin/fastagi\"]\n"
}