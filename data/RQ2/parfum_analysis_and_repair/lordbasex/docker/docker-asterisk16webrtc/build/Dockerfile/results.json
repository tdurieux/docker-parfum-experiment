{
  "startTime": 1674218950248,
  "endTime": 1674218952265,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 11,
        "columnEnd": 112
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 11,
        "columnEnd": 182
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 11,
        "columnEnd": 151
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 11,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 11,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 11,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 11,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 150,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 150,
        "lineEnd": 189,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "#####################################\n# STEP 1 build executable binary    #\n#####################################\nFROM debian:bullseye-slim AS builder\n\nLABEL maintainer=\"Federico Pereira <fpereira@cnsoluciones.com>\"\n\nENV MSMTP='false' \\\n        DEBIAN_FRONTEND=noninteractive \\\n        ASTERISK_VERSION=18\n\nRUN apt update\n\nRUN apt install -y --no-install-recommends --no-install-suggests \\\n        asterisk-dev \\\n        autoconf \\\n        automake \\\n        binutils-dev \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        file \\\n        git \\\n        libcurl4-openssl-dev \\\n        libedit-dev \\\n        libgsm1-dev \\\n        libjansson-dev \\\n        libncurses5-dev \\\n        libogg-dev \\\n        libpopt-dev \\\n        libresample1-dev \\\n        libspandsp-dev \\\n        libspeex-dev \\\n        libspeexdsp-dev \\\n        libsqlite3-dev \\\n        libsrtp2-dev \\\n        libtool \\\n        libnewt-dev \\\n        libssl-dev \\\n        libvorbis-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        m4 \\\n        make \\\n        msmtp \\\n        net-tools \\\n        procps \\\n        portaudio19-dev \\\n        unixodbc \\\n        unixodbc-dev \\\n        odbcinst \\\n        sngrep \\\n        subversion \\\n        tzdata \\\n        uuid \\\n        uuid-dev \\\n        unzip \\\n        xmlstarlet \\\n        wget \\\n        && rm -rf /var/lib/{apt,dpkg,cache,log}/ && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/src \\\n        && wget https://downloads.asterisk.org/pub/telephony/asterisk/asterisk-${ASTERISK_VERSION}-current.tar.gz \\\n        && tar xfz asterisk-* \\\n        && rm -f asterisk-*.tar.gz \\\n        && mv asterisk-* asterisk \\\n        && cd asterisk \\\n        && contrib/scripts/get_mp3_source.sh \\\n        && contrib/scripts/install_prereq install \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib --prefix=/usr --with-pjproject-bundled --with-jansson-bundled --with-ssl=ssl --with-srtp CFLAGS='-O2 -DNDEBUG' \\\n        && make menuselect/menuselect menuselect-tree menuselect.makeopts \\\n        && menuselect/menuselect --disable BUILD_NATIVE --enable app_confbridge --disable app_fax --enable app_macro --enable codec_silk --enable format_mp3 --enable BETTER_BACKTRACES \\\n        && make \\\n        && make install \\\n        && make samples \\\n        && make config \\\n        && cp -fra contrib/scripts/ast_tls_cert /usr/local/sbin/ast_tls_cert && mkdir -p /etc/asterisk/keys \\\n        && echo \"asterisk -rvvvvvvvvvv\" > /usr/local/sbin/a \\\n        && chmod 777 -R /usr/local/sbin/ \\\n        && ldconfig \\\n        && rm -fr /etc/asterisk/res_odbc.conf \\\n        && rm -fr /etc/asterisk/manager.conf\n\n#### Add G729 Codecs\nRUN cd /usr/src \\\n        && wget https://github.com/BelledonneCommunications/bcg729/archive/refs/tags/1.0.4.tar.gz -O bcg729.tar.gz \\\n        && tar xfz bcg729.tar.gz \\\n        && cd /usr/src/bcg729-* \\\n        && ./autogen.sh \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib \\\n        && make \\\n        && make install \\\n        && rm -fr /usr/src/bcg729* && rm bcg729.tar.gz\n\n#### Add G72X Codecs\nRUN cd /usr/src \\\n        && git clone https://bitbucket.org/arkadi/asterisk-g72x.git \\\n        && cd /usr/src/asterisk-g72x \\\n        && ./autogen.sh \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib --with-bcg729 --enable-penryn \\\n        && make \\\n        && make install \\\n        && rm -fr /usr/src/asterisk-g72x\n\n### Add Opus codecs\nRUN cd /usr/src \\\n        && wget -O codec_opus.tar.gz https://downloads.digium.com/pub/telephony/codec_opus/asterisk-${ASTERISK_VERSION}.0/x86-64/codec_opus-${ASTERISK_VERSION}.0_current-x86_64.tar.gz \\\n        && tar -xvzf codec_opus.tar.gz \\\n        && rm -f codec_opus.tar.gz \\\n        && cd codec_opus-${ASTERISK_VERSION}* \\\n        && cp codec_opus.so /usr/lib/asterisk/modules \\\n        && cp format_ogg_opus.so /usr/lib/asterisk/modules \\\n        && cp codec_opus_config-en_US.xml /var/lib/asterisk/documentation/thirdparty \\\n        && rm -fr /usr/src/codec_opus*\n\n### CLIENT BROWSER PHONE\nRUN cd /usr/src \\\n        && git clone https://github.com/InnovateAsterisk/Browser-Phone.git \\\n        && cp -fra Browser-Phone/Phone/* /var/lib/asterisk/static-http/ \\\n        && chmod 744 /var/lib/asterisk/static-http/*\n\n### CLIENT VOSK SERVER ASR\nRUN cd /usr/src \\\n        && wget -O vosk-asterisk.tar.gz https://github.com/iperfex-team/vosk-asterisk/archive/vosk-asterisk.tar.gz \\\n        && tar -xvzf vosk-asterisk.tar.gz \\\n        && rm -f vosk-asterisk.tar.gz \\\n        && cd vosk-asterisk-vosk-asterisk \\\n        && ./bootstrap \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-asterisk=/usr/src/asterisk --prefix=/usr/lib \\\n        && make \\\n        && make install \\\n        && cp conf/res-speech-vosk.conf /etc/asterisk/res-speech-vosk.conf \\\n        && cp /usr/lib/lib/asterisk/modules/res_speech_vosk.so /usr/lib/asterisk/modules \\\n        && rm -fr /usr/lib/etc/asterisk/res-speech-vosk.conf \\\n        && rm -fr /usr/src/vosk-asterisk-vosk-asterisk \\\n        && rm -fr /usr/lib/lib/asterisk/modules \\\n        && rm -r /usr/src/asterisk\n\n#####################################\n# STEP 2 build a buster slim image  #\n#####################################\nFROM debian:bullseye-slim as asteriskwebrtc\n\nLABEL maintainer=\"Federico Pereira <fpereira@cnsoluciones.com>\"\n\nENV MSMTP='false' \\\n        DEBIAN_FRONTEND=noninteractive\n\nRUN apt update\n\nRUN apt install -y --no-install-recommends --no-install-suggests \\\n        freetds-dev \\\n        libbinutils \\\n        libcap2 \\\n        libcodec2-dev \\\n        libcurl4 \\\n        libedit-dev \\\n        libgmime-3.0-dev \\\n        libgsm1-dev \\\n        libical-dev \\\n        libiksemel-dev \\\n        libjansson-dev \\\n        libldap2-dev \\\n        libncurses5-dev \\\n        libneon27-dev \\\n        libosptk4 \\\n        libportaudio-ocaml-dev \\\n        libresample1-dev \\\n        libsnmp40 \\\n        libspandsp-dev \\\n        libspeexdsp-dev \\\n        libsqlite3-dev \\\n        libsrtp2-dev \\\n        libssl-dev \\\n        libunbound-dev \\\n        liburiparser-dev \\\n        libuuid1 \\\n        libvorbis-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        net-tools \\\n        odbc-postgresql \\\n        openssl \\\n        postgresql-client \\\n        procps \\\n        supervisor \\\n        tzdata \\\n        unixodbc \\\n        unixodbc-dev \\\n        uuid-dev \\\n        && rm -rf /var/lib/{apt,dpkg,cache,log}/ && rm -rf /var/lib/apt/lists/*;\n\n### Add users\nRUN addgroup --gid 500 asterisk \\\n        && adduser --uid 500 --gid 500 --gecos \"Asterisk User\" --disabled-password asterisk \\\n        && rm -fr /etc/odbcinst.ini /etc/odbc.ini\n\nCOPY ./config/etc /etc\n\nCOPY --from=builder --chown=asterisk:asterisk /usr/lib/libasterisk* /usr/lib/\nCOPY --from=builder --chown=asterisk:asterisk /usr/lib/asterisk/ /usr/lib/asterisk/\nCOPY --from=builder --chown=asterisk:asterisk /usr/lib/libbcg729* /usr/lib/\nCOPY --from=builder --chown=asterisk:asterisk /var/spool/asterisk/ /var/spool/asterisk/\nCOPY --from=builder --chown=asterisk:asterisk /var/log/asterisk/ /var/log/asterisk/\nCOPY --from=builder --chown=asterisk:asterisk /usr/sbin/asterisk /usr/sbin/asterisk\nCOPY --from=builder --chown=asterisk:asterisk /etc/asterisk/ /etc/asterisk/\nCOPY --from=builder --chown=asterisk:asterisk /etc/init.d/asterisk /etc/init.d/\nCOPY --from=builder --chown=asterisk:asterisk /var/lib/asterisk/ /var/lib/asterisk/\nCOPY --from=builder /usr/local/sbin/a /usr/local/sbin/a\n\nEXPOSE 5038 5060 5061 5160 5161 4569 8080 8089 10000-20000/udp 10000-20000/tcp\n\n#automatic backup\nVOLUME [ \"/backup\" ]\n\n#asterisk etc\nVOLUME [ \"/etc/asterisk\" ]\n#asterisk sounds\nVOLUME [ \"/var/lib/asterisk/sounds\" ]\n#asterisk voicemail\nVOLUME [ \"/var/spool/asterisk/voicemail\" ]\n#asterisk monitor\nVOLUME [ \"/var/spool/asterisk/monitor\" ]\n#asterisk logs\nVOLUME [ \"/var/log/asterisk\" ]\n\n#mount\nRUN cp -fra /etc/asterisk /etc/asterisk.org \\\n        && cp -fra /var/lib/asterisk/sounds /var/lib/asterisk/sounds.org \\\n        && cp -fra /var/spool/asterisk/voicemail /var/spool/asterisk/voicemail.org\n\nWORKDIR /etc/asterisk\n\n#RUN DOCKER SCRIPT\nCOPY docker-entrypoint.sh /\n\nENTRYPOINT [\"/usr/bin/sh\", \"/docker-entrypoint.sh\"]\n\nCMD [\"/usr/sbin/asterisk\", \"-f\", \"-U\", \"asterisk\", \"-G\", \"asterisk\"]\n"
}