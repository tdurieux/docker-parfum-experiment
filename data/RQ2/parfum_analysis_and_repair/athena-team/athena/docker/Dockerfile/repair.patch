diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/athena-team/athena/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/athena-team/athena/docker/Dockerfile/repaired.Dockerfile
index ad7f3af..2b2f6d8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/athena-team/athena/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/athena-team/athena/docker/Dockerfile/repaired.Dockerfile
@@ -11,7 +11,7 @@ RUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-
      git \
      libcudnn7=${CUDNN_VERSION} \
      libnccl2=${NCCL_VERSION} \
-     libnccl-dev=${NCCL_VERSION} 
+     libnccl-dev=${NCCL_VERSION} && rm -rf /var/lib/apt/lists/*;
 
 # Install Open MPI
 RUN mkdir /tmp/openmpi && \
@@ -19,11 +19,11 @@ RUN mkdir /tmp/openmpi && \
     wget https://www.open-mpi.org/software/ompi/v4.0/downloads/openmpi-4.0.0.tar.gz && \
     tar zxf openmpi-4.0.0.tar.gz && \
     cd openmpi-4.0.0 && \
-    ./configure --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make -j $(nproc) all && \
     make install && \
     ldconfig && \
-    rm -rf /tmp/openmpi
+    rm -rf /tmp/openmpi && rm openmpi-4.0.0.tar.gz
 
 # Install Horovod, temporarily using CUDA stubs
 RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
@@ -33,14 +33,14 @@ RUN ldconfig /usr/local/cuda/targets/x86_64-linux/lib/stubs && \
 
 # Install OpenSSH for MPI to communicate between containers
 RUN apt-get install -y --no-install-recommends openssh-client openssh-server && \
-    mkdir -p /var/run/sshd
+    mkdir -p /var/run/sshd && rm -rf /var/lib/apt/lists/*;
 
 # Allow OpenSSH to talk to containers without asking for confirmation
 RUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \
     echo "    StrictHostKeyChecking no" >> /etc/ssh/ssh_config.new && \
     mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config
 
-RUN pip --default-timeout=1000 install sox \
+RUN pip --default-timeout=1000 --no-cache-dir install sox \
         absl-py \
         yapf \
         pylint \