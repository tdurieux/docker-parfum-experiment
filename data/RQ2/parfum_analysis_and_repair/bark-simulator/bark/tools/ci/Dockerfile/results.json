{
  "startTime": 1674218193370,
  "endTime": 1674218194546,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# use base manylinux image based on centOs 6\nFROM quay.io/pypa/manylinux2014_x86_64\nUSER root\n\n# setup jdk environment variables\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk-1.8.0*\" \\\n    PLATFORM=\"el6\" \\\n    PATH=/root/bin:$PATH\nENV BASH_ENV=\"/usr/bin/scl_enable\" \\\n    ENV=\"/usr/bin/scl_enable\" \\\n    PROMPT_COMMAND=\". /usr/bin/scl_enable\"\n\n# install openjdk for bazel\nRUN yum install -y centos-release-scl unzip vim wget cmake3 doxygen ccache sudo \\\n    && yum install -y devtoolset-7 rh-python36 \\\n    && yum install -y java-1.8.0-openjdk java-1.8.0-openjdk-devel && rm -rf /var/cache/yum\n\n# install python 3 for compiling bazel. Its different from python\n# used for initializing virtual for bark.\nRUN source scl_source enable devtoolset-7 rh-python36 \\\n    && gcc --version \\\n    && python -V \\\n    && cmake3 --version \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip3 install --no-cache-dir protobuf\n\n# setup with gcc-7 and py3.6\nRUN echo \"unset BASH_ENV PROMPT_COMMAND ENV\" > /usr/bin/scl_enable \\\n    && echo \"echo 'using user scl_enable script'\" >> /usr/bin/scl_enable \\\n    && echo \"source scl_source enable rh-python36 devtoolset-7\" >> /usr/bin/scl_enable \\\n    && echo \"JAVA_HOME='/usr/lib/jvm/java-1.8.0-openjdk-1.8.0*'\" >> /usr/bin/scl_enable \\\n    && echo \"FULL_JAVA_HOME=$(readlink -f $JAVA_HOME)\" >> /usr/bin/scl_enable \\\n    && echo \"export JAVA_HOME=\\$FULL_JAVA_HOME\" >> /usr/bin/scl_enable\nRUN chmod a+x /usr/bin/scl_enable\n\n# build libstacktrace . Required to compile boost a (requirement for bark)\n# from source as libstacketrace is not bundled with the devtoolset-7\n# toolkit for gcc available in the image.\nRUN wget -O libbacktrace-master.zip https://github.com/ianlancetaylor/libbacktrace/archive/master.zip \\\n    && unzip libbacktrace-master.zip \\\n    && cd libbacktrace-master \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/rh/devtoolset-7/root/usr \\\n    && make \\\n    && make install \\\n    && cd /\n\n# build bazel\nENV BAZEL_VERSION=3.4.1\nENV BAZEL_LINKLIBS=\"-l%:libstdc++.a\"\n\nRUN wget https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-dist.zip \\\n    && unzip bazel-$BAZEL_VERSION-dist.zip -d bazel-$BAZEL_VERSION \\\n    && cd bazel-$BAZEL_VERSION \\\n    && ./compile.sh \\\n    && mv /bazel-$BAZEL_VERSION/output/bazel /usr/bin/bazel\n\n# install virtual env for bark using default python. switch to\n# target when container is running.\nENV PATH=/opt/rh/rh-python36/root/usr/bin:$PATH\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir virtualenv\n\n# Setup Bark as work dir\nCMD [ \"/bin/bash\" ]\nWORKDIR /bark\n"
}