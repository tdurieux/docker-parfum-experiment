{
  "startTime": 1674250030688,
  "endTime": 1674250031316,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 1,
        "columnEnd": 120
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 1,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 25,
        "columnStart": 3,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nRUN echo 'deb http://us.archive.ubuntu.com/ubuntu/ trusty universe' >> /etc/apt/sources.list && \\\n\tapt-get -y update && \\\n\tapt-get -y --no-install-recommends install software-properties-common && \\\n\tapt-get -y update && \\\n   apt-get -y upgrade && \\\n   apt-get -y --no-install-recommends --force-yes install vim \\\n\tnginx \\\n\tpython-dev \\\n\tpython-flup \\\n\tpython-pip \\\n\tpython-ldap \\\n\texpect \\\n\tgit \\\n\tmemcached \\\n\tsqlite3 \\\n\tlibffi-dev \\\n\tlibcairo2 \\\n\tlibcairo2-dev \\\n\tpython-cairo \\\n\tpython-rrdtool \\\n\tpkg-config \\\n\tnodejs \\\n\tsupervisor \\\n\twget \\\n\tlibssl-dev \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir gunicorn pyopenssl ndg-httpsclient pyasn1 django==1.8.18 \\\n  python-memcached==1.53 \\\n  txAMQP==0.6.2 \\\n  && pip install --no-cache-dir --upgrade pip\n\n# Install statsd\n# Install required packages\nRUN mkdir /src && git clone https://github.com/etsy/statsd.git /src/statsd && \\\n\tpip install --no-cache-dir whisper pytz scandir && \\\n\tpip install --no-cache-dir --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon --install-option=\"--install-lib=/var/lib/graphite/lib\" carbon && \\\n\tpip install --no-cache-dir --install-option=\"--prefix=/var/lib/graphite\" --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web --install-option=\"--install-lib=/var/lib/graphite/webapp\" graphite-web\n\n# grafana\nRUN cd ~ &&\\\n\twget https://s3-us-west-2.amazonaws.com/grafana-releases/release/grafana_4.4.3_amd64.deb &&\\\n\tsudo dpkg -i grafana_4.4.3_amd64.deb &&\\\n\trm grafana_4.4.3_amd64.deb\n\n# statsd\nADD\t./statsd/config.js /src/statsd/config.js\n\n# ADD graphite config\nADD\t./graphite/initial_data.json /var/lib/graphite/webapp/graphite/initial_data.json\nADD\t./graphite/local_settings.py /var/lib/graphite/webapp/graphite/local_settings.py\nADD\t./graphite/carbon.conf /var/lib/graphite/conf/carbon.conf\nADD\t./graphite/storage-schemas.conf /var/lib/graphite/conf/storage-schemas.conf\nADD\t./graphite/storage-aggregation.conf /var/lib/graphite/conf/storage-aggregation.conf\n\nADD ./grafana/config.ini /etc/grafana/config.ini\n\n# ADD system service config\nADD\t./nginx/nginx.conf /etc/nginx/nginx.conf\nADD\t./supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n\n# Nginx\n#\n# graphite | grafana | Carbon line receiver port | Carbon UDP receiver port | Carbon pickle receiver port | Carbon cache query port | Statsd UDP port | Statsd Management port\nEXPOSE\t80 3000 2003 2003/udp 2004 7002 8125/udp 8126\n\nENV STATSD_IPV6 0\n\n# we probably want to do this\n# volume /data\n\nADD ./bin/init /usr/bin/init\n\nCMD exec /usr/bin/init\n\n"
}