{
  "startTime": 1674252857994,
  "endTime": 1674252859110,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt update -y \\\n    && apt install --no-install-recommends -y \\\n    wget unzip less \\\n    python perl make cmake \\\n    g++ && rm -rf /var/lib/apt/lists/*;\n\nENV BOOST_DOT_VERSION=\"1.78.0\"\nENV BOOST_VERSION=\"1_78_0\"\nENV NDK_VERSION=\"r23b\"\nENV OPENSSL_VERSION=\"1.1.1m\"\nENV OPENSSL_NO_OPTS=\"no-deprecated no-shared no-makedepend no-static-engine no-stdio no-posix-io no-threads no-ui-console no-zlib no-zlib-dynamic -fno-strict-aliasing -fvisibility=hidden -O3 -fPIC\"\n\nRUN wget -nv -O boost.tar.gz https://boostorg.jfrog.io/artifactory/main/release/${BOOST_DOT_VERSION}/source/boost_${BOOST_VERSION}.tar.gz \\\n    && tar xzf boost.tar.gz \\\n    && mv boost_${BOOST_VERSION} boost \\\n    && cd boost \\\n    && ./bootstrap.sh \\\n    && cd .. && rm boost.tar.gz\n\nRUN wget -nv -O android-ndk.zip https://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux.zip \\\n    && unzip -qq android-ndk.zip \\\n    && mv android-ndk-${NDK_VERSION} android-ndk\n\nRUN wget -nv -O openssl.tar.gz https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz \\\n    && tar xzf openssl.tar.gz \\\n    && mv openssl-${OPENSSL_VERSION} openssl-src && rm openssl.tar.gz\n\nENV TOOLCHAIN=\"/android-ndk/toolchains/llvm/prebuilt/linux-x86_64\"\nENV AR=\"${TOOLCHAIN}/bin/llvm-ar\"\nENV LD=\"${TOOLCHAIN}/bin/ld\"\nENV RANLIB=\"${TOOLCHAIN}/bin/llvm-ranlib\"\n\nRUN export CC=${TOOLCHAIN}/bin/armv7a-linux-androideabi24-clang \\\n    && cd openssl-src \\\n    && ./Configure linux-armv4 ${OPENSSL_NO_OPTS} -march=armv7-a -mfpu=neon --prefix=/openssl-arm \\\n    && make clean \\\n    && make \\\n    && make install_sw \\\n    && cd ..\n\nRUN export CC=${TOOLCHAIN}/bin/aarch64-linux-android24-clang \\\n    && cd openssl-src \\\n    && ./Configure linux-aarch64 ${OPENSSL_NO_OPTS} -march=armv8-a+crypto -mfpu=neon --prefix=/openssl-arm64 \\\n    && make clean \\\n    && make \\\n    && make install_sw \\\n    && cd ..\n\nRUN export CC=${TOOLCHAIN}/bin/i686-linux-android24-clang \\\n    && cd openssl-src \\\n    && ./Configure linux-elf ${OPENSSL_NO_OPTS} --prefix=/openssl-x86 \\\n    && make clean \\\n    && make \\\n    && make install_sw \\\n    && cd ..\n\nRUN export CC=${TOOLCHAIN}/bin/x86_64-linux-android24-clang \\\n    && cd openssl-src \\\n    && ./Configure linux-x86_64 ${OPENSSL_NO_OPTS} --prefix=/openssl-x86_64 \\\n    && make clean \\\n    && make \\\n    && make install_sw \\\n    && cd ..\n\nRUN cd openssl-src \\\n    && make clean \\\n    && cd ..\n\nRUN sed -i 's/28/24/g' ${TOOLCHAIN}/sysroot/usr/include/sys/random.h\n\nCOPY b2-arm.sh b2-arm64.sh b2-x86.sh b2-x86_64.sh /\n"
}