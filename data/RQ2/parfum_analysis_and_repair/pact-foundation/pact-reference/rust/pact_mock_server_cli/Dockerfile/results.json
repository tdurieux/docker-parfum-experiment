{
  "startTime": 1674216510736,
  "endTime": 1674216511822,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 57,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 57,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust-musl-2021 AS builder\n\n# Add our source code.\nADD . ./\n\n# Fix permissions on source code.\nRUN sudo chown -R rust:rust /home/rust\n\n# Fix the cargo manifest so it can be built standalone\nRUN sed -i -e 's/pact_matching = {\\s*version\\s*=\\s*\"\\([^\"]*\\).*/pact_matching = \"\\1\"/' Cargo.toml\nRUN sed -i -e 's/pact_mock_server = {\\s*version\\s*=\\s*\"\\([^\"]*\\).*/pact_mock_server = \"\\1\"/' Cargo.toml\nRUN sed -i -e 's/pact_models = {\\s*version\\s*=\\s*\"\\([^\"]*\\).*/pact_models = \"\\1\"/' Cargo.toml\n\nRUN sudo apt-get clean && sudo apt-get update -y && sudo apt-get install --no-install-recommends llvm libclang-dev -y && rm -rf /var/lib/apt/lists/*;\n\n# Build our application.\nRUN cargo build --release\n\n# Now, we need to build our _real_ Docker container, copying in the executable.\nFROM alpine:3.15\nRUN apk --no-cache add ca-certificates\nCOPY --from=builder \\\n    /home/rust/src/target/x86_64-unknown-linux-musl/release/pact_mock_server_cli \\\n    /usr/local/bin/\n\nEXPOSE 8080 9000-9020\n\nENTRYPOINT [\"/usr/local/bin/pact_mock_server_cli\"]\nCMD [\"start\", \"--base-port\", \"9000\"]\n"
}