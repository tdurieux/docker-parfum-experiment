{
  "startTime": 1674249401362,
  "endTime": 1674249401782,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=16.14.0\n\n########################\n# Builder stage\n#\nFROM node:${NODE_VERSION}-alpine AS builder\nWORKDIR /app\n\n# App build dependencies\n# This step is done before copying and building the app source code\n#  to benefit from Docker layer caching if the dependencies have not changed\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\nCOPY package*.json ./\nRUN npm ci --quiet\n\n# Copy source code and build\nCOPY ./ ./\nRUN npm run build\n\n########################\n# Final image\n#\nFROM node:${NODE_VERSION}-alpine\nWORKDIR /app\n\n# Runtime dependencies\nRUN npm install -g pm2 && npm cache clean --force;\n\n# App runtime dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\nCOPY package*.json ./\nRUN npm ci --quiet --only=production\n\n# Add the Instana APM layer\nCOPY --from=instana/aws-fargate-nodejs /instana /instana\nRUN /instana/setup.sh\nENV NODE_OPTIONS=\"--require /instana/node_modules/@instana/aws-fargate\"\n\n# Build artifacts\nCOPY --from=builder /app/pm2.config.js ./pm2.config.js\nCOPY --from=builder /app/dist ./dist\n\nEXPOSE 3000\nCMD [ \"pm2-runtime\", \"--json\", \"pm2.config.js\" ]\n"
}