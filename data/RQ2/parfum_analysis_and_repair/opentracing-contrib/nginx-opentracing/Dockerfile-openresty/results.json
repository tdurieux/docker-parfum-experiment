{
  "startTime": 1674248853492,
  "endTime": 1674248855306,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 142,
        "lineEnd": 146,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 86,
        "columnStart": 7,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile - Ubuntu Xenial\n# https://github.com/openresty/docker-openresty\n\nARG RESTY_IMAGE_BASE=\"ubuntu\"\nARG RESTY_IMAGE_TAG=\"20.04\"\n\nFROM ${RESTY_IMAGE_BASE}:${RESTY_IMAGE_TAG}\n\n# Docker Build Arguments\nARG RESTY_VERSION=\"1.19.9.1\"\nARG RESTY_LUAROCKS_VERSION=\"3.7.0\"\nARG RESTY_OPENSSL_VERSION=\"1.1.1l\"\nARG RESTY_PCRE_VERSION=\"8.44\"\nARG RESTY_J=\"1\"\nARG RESTY_CONFIG_OPTIONS=\"\\\n    --with-file-aio \\\n    --with-http_addition_module \\\n    --with-http_auth_request_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_geoip_module=dynamic \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_image_filter_module=dynamic \\\n    --with-http_mp4_module \\\n    --with-http_random_index_module \\\n    --with-http_realip_module \\\n    --with-http_secure_link_module \\\n    --with-http_slice_module \\\n    --with-http_ssl_module \\\n    --with-http_stub_status_module \\\n    --with-http_sub_module \\\n    --with-http_v2_module \\\n    --with-http_xslt_module=dynamic \\\n    --with-ipv6 \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-md5-asm \\\n    --with-pcre-jit \\\n    --with-sha1-asm \\\n    --with-stream \\\n    --with-stream_ssl_module \\\n    --with-threads \\\n    --add-dynamic-module=/src/opentracing \\\n    \"\nARG RESTY_CONFIG_OPTIONS_MORE=\"\"\nARG OPENTRACING_CPP_VERSION=\"v1.6.0\"\nARG JAEGER_VERSION=\"0.7.0\"\n\nLABEL resty_version=\"${RESTY_VERSION}\"\nLABEL resty_luarocks_version=\"${RESTY_LUAROCKS_VERSION}\"\nLABEL resty_openssl_version=\"${RESTY_OPENSSL_VERSION}\"\nLABEL resty_pcre_version=\"${RESTY_PCRE_VERSION}\"\nLABEL resty_config_options=\"${RESTY_CONFIG_OPTIONS}\"\nLABEL resty_config_options_more=\"${RESTY_CONFIG_OPTIONS_MORE}\"\n\n# These are not intended to be user-specified\nARG _RESTY_CONFIG_DEPS=\"--with-openssl=/tmp/openssl-${RESTY_OPENSSL_VERSION} --with-pcre=/tmp/pcre-${RESTY_PCRE_VERSION}\"\n\nCOPY . /src\n\n\n# 1) Install apt dependencies\n# 2) Download and untar OpenSSL, PCRE, and OpenResty\n# 3) Build OpenResty\n# 4) Cleanup\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    gettext-base \\\n    libgd-dev \\\n    libgeoip-dev \\\n    libncurses5-dev \\\n    libperl-dev \\\n    libreadline-dev \\\n    libxslt1-dev \\\n    make \\\n    perl \\\n    unzip \\\n    zlib1g-dev \\\n    git \\\n    cmake \\\n    lua5.1-dev \\\n    wget \\\n    ### Build opentracing-cpp\n    && cd /tmp \\\n    && git clone --depth 1 -b ${OPENTRACING_CPP_VERSION} https://github.com/opentracing/opentracing-cpp.git \\\n    && cd opentracing-cpp \\\n    && mkdir .build && cd .build \\\n    && cmake -DCMAKE_BUILD_TYPE=Release \\\n    -DBUILD_MOCKTRACER=OFF \\\n    -DBUILD_STATIC_LIBS=OFF \\\n    -DBUILD_TESTING=OFF .. \\\n    && make && make install \\\n    && cd /tmp \\\n    && rm -rf opentracing-cpp \\\n    ### Install tracers\n    #&& wget https://github.com/jaegertracing/jaeger-client-cpp/releases/download/v${JAEGER_VERSION}/libjaegertracing_plugin.linux_amd64.so -O /usr/local/lib/libjaegertracing_plugin.so \\\n    && cd /tmp \\\n    && wget https://github.com/jaegertracing/jaeger-client-cpp/archive/v${JAEGER_VERSION}.tar.gz \\\n    && tar xzf v${JAEGER_VERSION}.tar.gz \\\n    && cd jaeger-client-cpp-${JAEGER_VERSION} \\\n    && ls -la \\\n    && mkdir .build \\\n    && cd .build \\\n    && cmake -DCMAKE_BUILD_TYPE=Release \\\n    -DBUILD_TESTING=OFF \\\n    -DJAEGERTRACING_WITH_YAML_CPP=ON .. \\\n    && make \\\n    && make install \\\n    && export HUNTER_INSTALL_DIR=$(cat _3rdParty/Hunter/install-root-dir) \\\n    && cp $HUNTER_INSTALL_DIR/lib/libyaml*so /usr/local/lib/ \\\n    && ln -s /usr/local/lib/libjaegertracing.so /usr/local/lib/libjaegertracing_plugin.so \\\n    && cd /tmp \\\n    && rm -rf jaeger-client-cpp-${JAEGER_VERSION} v${JAEGER_VERSION}.tar.gz /root/.hunter \\\n    && true && rm -rf /var/lib/apt/lists/*;\n\nRUN true \\\n    ### Copied from https://github.com/openresty/docker-openresty/blob/master/xenial/Dockerfile\n    && cd /tmp \\\n    && curl -fSL https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz -o openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n    && tar xzf openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n    && curl -fSL https://downloads.sourceforge.net/project/pcre/pcre/${RESTY_PCRE_VERSION}/pcre-${RESTY_PCRE_VERSION}.tar.gz -o pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n    && tar xzf pcre-${RESTY_PCRE_VERSION}.tar.gz \\\n    && curl -fSL https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz -o openresty-${RESTY_VERSION}.tar.gz \\\n    && tar xzf openresty-${RESTY_VERSION}.tar.gz \\\n    && cd /tmp/openresty-${RESTY_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -j${RESTY_J} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} ${RESTY_CONFIG_OPTIONS_MORE} \\\n    && make -j${RESTY_J} \\\n    && make -j${RESTY_J} install \\\n    && cd /tmp \\\n    && rm -rf \\\n    openssl-${RESTY_OPENSSL_VERSION} \\\n    openssl-${RESTY_OPENSSL_VERSION}.tar.gz \\\n    openresty-${RESTY_VERSION}.tar.gz openresty-${RESTY_VERSION} \\\n    pcre-${RESTY_PCRE_VERSION}.tar.gz pcre-${RESTY_PCRE_VERSION} \\\n    && curl -fSL https://luarocks.github.io/luarocks/releases/luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz -o luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && tar xzf luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && cd luarocks-${RESTY_LUAROCKS_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/usr/local/openresty/luajit \\\n    --with-lua=/usr/local/openresty/luajit \\\n    --lua-suffix=jit-2.1.0-beta3 \\\n    --with-lua-include=/usr/local/openresty/luajit/include/luajit-2.1 \\\n    && make build \\\n    && make install \\\n    && cd /tmp \\\n    && rm -rf /src \\\n    && rm -rf luarocks-${RESTY_LUAROCKS_VERSION} luarocks-${RESTY_LUAROCKS_VERSION}.tar.gz \\\n    && DEBIAN_FRONTEND=noninteractive apt-get autoremove -y \\\n    && ln -sf /dev/stdout /usr/local/openresty/nginx/logs/access.log \\\n    && ln -sf /dev/stderr /usr/local/openresty/nginx/logs/error.log \\\n    && ldconfig\n\n# Add additional binaries into PATH for convenience\nENV PATH=$PATH:/usr/local/openresty/luajit/bin:/usr/local/openresty/nginx/sbin:/usr/local/openresty/bin\n\n# Copy nginx configuration files\nADD https://raw.githubusercontent.com/openresty/docker-openresty/master/nginx.conf /usr/local/nginx/conf/nginx.conf\nADD https://raw.githubusercontent.com/openresty/docker-openresty/master/nginx.vh.default.conf /etc/nginx/conf.d/default.conf\n\nCMD [\"/usr/local/openresty/bin/openresty\", \"-g\", \"daemon off;\"]\n"
}