{
  "startTime": 1674255041741,
  "endTime": 1674255043251,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# More Datascience frendly gist can be found here: https://gist.github.com/ruddra/870d7a51238ddfa4b50375086c12a4f5\n# pull official python alpine image\nFROM python:3.7-alpine\n\n# Set Environment Variable\nENV PYTHONUNBUFFERED 1\nENV C_FORCE_ROOT true\n\n# Making source and static directory\nRUN mkdir /src\nRUN mkdir /static\n\n# Creating Work Directory\nWORKDIR /src\n\n# Adding mandatory packages to docker\nRUN apk update && apk add --no-cache \\\n    postgresql \\\n    zlib \\\n    jpeg\n# un-comment the following two dependecies if you want to add library like pandas, scipy and numpy\n# openblas \\\n# libstdc++\n\n# Installing temporary packages required for installing requirements.pip\nRUN apk add --no-cache --virtual build-deps \\\n    gcc \\  \n    python3-dev \\ \n    musl-dev \\\n    postgresql-dev\\\n    zlib-dev \\\n    jpeg-dev\n# un-comment if you want to install numpy, pandas, scipy etc and their supported dependencies\n# g++ \\\n# openblas-dev \\\n# cmake \\\n# && ln -s /usr/include/locale.h /usr/include/xlocale.h\n\n# Update pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# **if you want to install scipy uncomment the following file**\n# RUN pip3 install --no-cache-dir --disable-pip-version-check scipy==1.3.1\n\n# Installing requirements.pip from project\nCOPY ./src/requirements.pip /scripts/\nRUN pip install --no-cache-dir -r /scripts/requirements.pip\n\n# *install psycopg2 if you don't have it requirements.pip*\n# RUN pip install --no-cache-dir psycopg2\n\n# removing temporary packages from docker and removing cache\nRUN apk del build-deps && \\\n    find -type d -name __pycache__ -prune -exec rm -rf {} \\; && \\\n    rm -rf ~/.cache/pip\n\n# CMD will run when this dockerfile is running\nCMD [\"sh\", \"-c\", \"python manage.py collectstatic --no-input; python manage.py migrate; gunicorn mydjango.wsgi -b 0.0.0.0:8000 & celery --app myapp.tasks worker --loglevel=INFO\"]\n"
}