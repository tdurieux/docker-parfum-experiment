{
  "startTime": 1674220006048,
  "endTime": 1674220007351,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 32,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 32,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 32,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 56,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile\n\n# docker build .\n\n# Based on CUDA10.0 & CuDNN7\nFROM nvidia/cuda:10.2-cudnn8-devel-ubuntu18.04\n\n# Set apt-get to automatically retry if a package download fails\nRUN echo 'Acquire::Retries \"5\";' > /etc/apt/apt.conf.d/99AcquireRetries\n\n# apt update\nRUN apt update --allow-unauthenticated\n\n# Install Non-GPU Dependencies.\nRUN version=\"8.0.0-1+cuda10.2\" ; \\\n    apt install --no-install-recommends -y \\\n    libnvinfer8=${version} libnvonnxparsers8=${version} libnvparsers8=${version} \\\n    libnvinfer-plugin8=${version} libnvinfer-dev=${version} libnvonnxparsers-dev=${version} \\\n    libnvparsers-dev=${version} libnvinfer-plugin-dev=${version} && \\\n    apt-mark hold \\\n    libnvinfer8 libnvonnxparsers8 libnvparsers8 libnvinfer-plugin8 libnvinfer-dev libnvonnxparsers-dev libnvparsers-dev libnvinfer-plugin-dev && rm -rf /var/lib/apt/lists/*;\n#    && apt install -yt python-libnvinfer=${version} python3-libnvinfer=${version} && apt-mark hold python-libnvinfer python3-libnvinfer\n\n# Install OpenCV Dependencies\nRUN apt install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository \"deb http://security.ubuntu.com/ubuntu xenial-security main\" && \\\n    APT_DEPS=\"git cmake wget zip libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev x264 v4l-utils python3-dev python3-pip libcanberra-gtk-module libcanberra-gtk3-module\" && \\\n    apt install --no-install-recommends -y $APT_DEPS || apt install --no-install-recommends -y $APT_DEPS && \\\n    python3 -m pip install numpy && rm -rf /var/lib/apt/lists/*;\n\n# Compile OpenCV\nRUN wget https://github.com/opencv/opencv/archive/refs/tags/4.4.0.zip && unzip 4.4.0.zip && \\\n    cd opencv-4.4.0 && mkdir build && cd build && \\\n    cmake .. -DCMAKE_BUILD_TYPE=Release \\\n             -DCMAKE_INSTALL_PREFIX=/usr/local \\\n             -DWITH_TBB=ON \\\n             -DWITH_V4L=ON \\\n             -DBUILD_TESTS=OFF \\\n             -DBUILD_OPENCV_PYTHON3=OFF && \\\n    make -j && make install\n\n# Install HyperPose Dependencies\nRUN apt install --no-install-recommends -y python3-dev python3-pip subversion libgflags-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /hyperpose\n\n# Get models: we first see if there's existing models here. If not install it throught network.\n# NOTE: if you cannot install the models due to network issues:\n#   1    Manually install ONNX and UFF models through: https://drive.google.com/drive/folders/1w9EjMkrjxOmMw3Rf6fXXkiv_ge7M99jR\n#   2    Put all models into `${GIT_DIR}/pre_installed_models`\n#   3    Re-build this docker image.\nRUN ( [ `find /hyperpose/pre_installed_models -regex '.*\\.\\(onnx\\|uff\\)' | wc -l` > 0 ] && \\\n    mkdir -p /hyperpose/data && mv /hyperpose/pre_installed_models/ /hyperpose/data/models ) || \\\n    for file in $(find /hyperpose/scripts -type f -iname 'download-*-model.sh'); do sh $file; done\n\n# Install test data.\nRUN /hyperpose/scripts/download-test-data.sh\n\n# Build Repo\nRUN cd hyperpose && mkdir build && cd build && \\\n    cmake .. -DCMAKE_BUILD_TYPE=Release && make -j\n\nWORKDIR /hyperpose/build\n\nENTRYPOINT [\"./hyperpose-cli\"]\n"
}