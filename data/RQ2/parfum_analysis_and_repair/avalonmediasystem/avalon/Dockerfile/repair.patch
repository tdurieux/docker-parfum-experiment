diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/avalonmediasystem/avalon/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/avalonmediasystem/avalon/Dockerfile/repaired.Dockerfile
index ed71759..2e7638e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/avalonmediasystem/avalon/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/avalonmediasystem/avalon/Dockerfile/repaired.Dockerfile
@@ -33,28 +33,28 @@ RUN         bundle config set --local without 'production' \
 FROM        ruby:2.7-bullseye as download
 LABEL       stage=build
 LABEL       project=avalon
-RUN         curl -L https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar xvz -C /usr/bin/
-RUN         curl https://chromedriver.storage.googleapis.com/2.46/chromedriver_linux64.zip -o /usr/local/bin/chromedriver \
+RUN curl -f -L https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz | tar xvz -C /usr/bin/
+RUN curl -f https://chromedriver.storage.googleapis.com/2.46/chromedriver_linux64.zip -o /usr/local/bin/chromedriver \
          && chmod +x /usr/local/bin/chromedriver
-RUN         curl https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -o /chrome.deb
-RUN      apt-get -y update && apt-get install -y ffmpeg
+RUN curl -f https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -o /chrome.deb
+RUN apt-get -y update && apt-get install --no-install-recommends -y ffmpeg && rm -rf /var/lib/apt/lists/*;
 
 
 # Base stage for building final images
 FROM        ruby:2.7-slim-bullseye as base
 LABEL       stage=build
 LABEL       project=avalon
-RUN         echo "deb     http://ftp.us.debian.org/debian/    bullseye main contrib non-free"  >  /etc/apt/sources.list.d/bullseye.list \
+RUN echo "deb     http://ftp.us.debian.org/debian/    bullseye main contrib non-free"  >  /etc/apt/sources.list.d/bullseye.list \
          && echo "deb-src http://ftp.us.debian.org/debian/    bullseye main contrib non-free"  >> /etc/apt/sources.list.d/bullseye.list \
          && cat /etc/apt/sources.list.d/bullseye.list \
          && apt-get update && apt-get install -y --no-install-recommends curl gnupg2 ffmpeg \
-         && curl -sL http://deb.nodesource.com/setup_12.x | bash - \
-         && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
+         && curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \
+         && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
          && echo "deb http://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
          && cat /etc/apt/sources.list.d/nodesource.list \
-         && cat /etc/apt/sources.list.d/yarn.list
+         && cat /etc/apt/sources.list.d/yarn.list && rm -rf /var/lib/apt/lists/*;
 
-RUN         apt-get update && \
+RUN apt-get update && \
             apt-get -y dist-upgrade && \
             apt-get install -y --no-install-recommends --allow-unauthenticated \
             nodejs \
@@ -70,8 +70,8 @@ RUN         apt-get update && \
             zip \
             dumb-init \
             libsqlite3-dev \
-         && apt-get -y install mediainfo \
-         && ln -s /usr/bin/lsof /usr/sbin/
+         && apt-get -y --no-install-recommends install mediainfo \
+         && ln -s /usr/bin/lsof /usr/sbin/ && rm -rf /var/lib/apt/lists/*;
 
 RUN         useradd -m -U app \
          && su -s /bin/bash -c "mkdir -p /home/app/avalon" app
@@ -82,9 +82,9 @@ WORKDIR     /home/app/avalon
 FROM        base as dev
 LABEL       stage=final
 LABEL       project=avalon
-RUN         apt-get install -y --no-install-recommends --allow-unauthenticated \
+RUN apt-get install -y --no-install-recommends --allow-unauthenticated \
             build-essential \
-            cmake
+            cmake && rm -rf /var/lib/apt/lists/*;
 
 COPY        --from=bundle-dev /usr/local/bundle /usr/local/bundle
 COPY        --from=download /chrome.deb /
@@ -109,10 +109,10 @@ RUN         bundle config set --local without 'development test' \
 FROM        node:12-bullseye-slim as node-modules
 LABEL       stage=build
 LABEL       project=avalon
-RUN         apt-get update && apt-get install -y --no-install-recommends git ca-certificates
+RUN apt-get update && apt-get install -y --no-install-recommends git ca-certificates && rm -rf /var/lib/apt/lists/*;
 COPY        package.json .
 COPY        yarn.lock .
-RUN         yarn install
+RUN yarn install && yarn cache clean;
 
 
 # Build production assets