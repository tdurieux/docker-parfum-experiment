{
  "startTime": 1674246792571,
  "endTime": 1674246794017,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "ARG TRAVIS_PYTHON_VERSION\nARG DOCKER_BUILD_ENV\nFROM python:${TRAVIS_PYTHON_VERSION:-3.5}-buster\n\nWORKDIR /usr/src/app\n\nENV CURL_FLAGS=\"--proto =https --tlsv1.2 -sSf -L --max-redirs 1 -O\"\n\nENV DEBIAN-FRONTEND noninteractive\nENV DISPLAY=:1\n\n# install apt dependencies\nRUN echo \"deb http://deb.debian.org/debian stretch-backports main\" > /etc/apt/sources.list.d/backports.list\nRUN apt-get update && apt-get install --no-install-recommends -y xvfb firefox-esr libpq-dev python3-dev && \\\n    apt-get install --no-install-recommends -y -t stretch-backports libsqlite3-0 && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install node\nENV NODE_SETUP_SHA=5d07994f59e3edc2904c547e772b818d10abb066f6ff36ab3db5d686b0fe9a73\nRUN curl -f ${CURL_FLAGS} \\\n      https://raw.githubusercontent.com/nodesource/distributions/b8510857fb4ce4b023161be8490b00119884974c/deb/setup_12.x\nRUN echo \"${NODE_SETUP_SHA}  setup_12.x\" | sha256sum --check -\nRUN bash setup_12.x\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install geckodriver\nENV GECKODRIVER_VERSION=\"v0.26.0\"\nENV GECKODRIVER_SHA=d59ca434d8e41ec1e30dd7707b0c95171dd6d16056fb6db9c978449ad8b93cc0\nENV GECKODRIVER_BASE_URL=\"https://github.com/mozilla/geckodriver/releases/download\"\nRUN curl -f ${CURL_FLAGS} \\\n      ${GECKODRIVER_BASE_URL}/${GECKODRIVER_VERSION}/geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz\nRUN echo \"${GECKODRIVER_SHA}  geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz\" | sha256sum --check -\nRUN mkdir geckodriver\nRUN tar -xzf geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz -C geckodriver && rm geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz\n\n# install yarn\nRUN npm install -g yarn && npm cache clean --force;\nRUN mkdir /var/www ./node_modules /.cache /.yarn /.mozilla\nRUN touch /usr/src/app/yarn-error.log\nCOPY yarn.lock /usr/src/app/\nRUN chmod -R 777 /usr/src/app/ /var/lib/xkb /.cache /.yarn /.mozilla\n\n\nCOPY requirements.txt dev-requirements.txt /usr/src/app/\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nRUN test \"${DOCKER_BUILD_ENV}\" = production || pip3 install --no-cache-dir -r dev-requirements.txt\n\nCOPY package.json /usr/src/app/\nRUN yarn\n\nCOPY create_db.py test_data.py /usr/src/app/\nCOPY .flake8 /usr/src/app/\nCOPY mypy.ini /usr/src/app/\nEXPOSE 3000\n\nENV PATH=\"/usr/src/app/geckodriver:${PATH}\"\nENV SECRET_KEY 4Q6ZaQQdiqtmvZaxP1If\nENV SQLALCHEMY_DATABASE_URI postgresql://openoversight:terriblepassword@postgres/openoversight-dev\n\nWORKDIR /usr/src/app/OpenOversight\n\nCMD [\"scripts/entrypoint.sh\"]\n"
}