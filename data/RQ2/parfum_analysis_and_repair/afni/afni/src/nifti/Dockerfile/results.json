{
  "startTime": 1674248815827,
  "endTime": 1674248817127,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 12,
        "columnStart": 35,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n# FROM ubuntu:eoan\n\nRUN apt-get update && apt-get install --no-install-recommends -y -q eatmydata \\\n    && eatmydata apt-get update && apt-get install --no-install-recommends -y -q \\\n        cmake \\\n        gcc \\\n        git \\\n        help2man \\\n        libexpat1-dev \\\n        make \\\n        wget \\\n        zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install newer cmake version with globally scoped targets for convenience\n# (apt installed version is used by default though)\nENV CMAKE_VER=3.13.3\nRUN wget -P /opt/cmake  https://github.com/Kitware/CMake/releases/download/v${CMAKE_VER}/cmake-${CMAKE_VER}-Linux-x86_64.tar.gz \\\n  ; cd /opt/cmake \\\n  ; tar xzvf cmake-${CMAKE_VER}-Linux-x86_64.tar.gz \\\n  ;rm -fr cmake-${CMAKE_VER}-Linux-x86_64.tar.gz\n\nRUN mkdir -p /opt/src/nifti_clib\nRUN mkdir /nifti_build\nCOPY . /opt/src/nifti_clib/\n\nWORKDIR /nifti_build\n\n# Test build and install with system-installed cmake\nRUN cmake \\\n    -DBUILD_SHARED_LIBS=ON \\\n    -DNIFTI_USE_PACKAGING=ON \\\n    -DUSE_CIFTI_CODE=ON \\\n    -DUSE_FSL_CODE=ON \\\n    -DNIFTI_BUILD_APPLICATIONS=ON \\\n    -DTEST_INSTALL=ON \\\n    -DDOWNLOAD_TEST_DATA=OFF \\\n    /opt/src/nifti_clib \\\n    && make install \\\n    && ctest --output-on-failure -LE NEEDS_DATA\n\n# For checking max-verified cmake version successfully builds:\n# ENV PATH=\"/opt/cmake/cmake-${CMAKE_VER}-Linux-x86_64/bin:$PATH\"\n# RUN cmake \\\n#     -DBUILD_SHARED_LIBS=OFF \\\n#     -DUSE_CIFTI_CODE=ON \\\n#     -DUSE_FSL_CODE=ON \\\n#     -DNIFTI_BUILD_APPLICATIONS=ON \\\n#     -DTEST_INSTALL=ON \\\n#     /opt/src/nifti_clib \\\n#     && make install \\\n#     && ctest --output-on-failure"
}