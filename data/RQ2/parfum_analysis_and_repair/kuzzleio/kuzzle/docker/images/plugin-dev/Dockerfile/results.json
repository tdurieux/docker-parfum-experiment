{
  "startTime": 1674252632586,
  "endTime": 1674252633474,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 7
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 23,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 23,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 23,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 23,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################################\n# Plugin development build image\n################################################################################\nFROM node:12-bullseye-slim as builder\n\nRUN set -x \\\n  && apt-get update && apt-get install --no-install-recommends -y \\\n       curl \\\n       make \\\n       g++ \\\n       python3 \\\n       libzmq3-dev \\\n       libunwind-dev \\\n  && npm install -g --unsafe-perm --production \\\n    nodemon \\\n    kourou \\\n    pm2 \\\n  && curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | sh -s -- -b /usr/local/bin && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nADD ./bin /app/bin\nADD ./config /app/config\nADD ./lib /app/lib\nADD ./package.json /app/package.json\nADD ./package-lock.json /app/package-lock.json\nADD ./index.js /app/index.js\nADD ./.kuzzlerc.sample /app/.kuzzlerc.sample\n\n\nWORKDIR /app\n\n# Install dependencies\nRUN npm install --production && npm cache clean --force;\n\nADD ./docker/scripts/clean-node.sh /usr/bin/clean-node\n\nADD ./plugins/available/ /app/plugins/available/\n\nRUN  set -x \\\n  # Remove useless leftover dependencies\n  && rm -rf node_modules/rxjs/ \\\n  # Strip binaries\n  && strip /usr/local/bin/node \\\n  && strip node_modules/re2/build/Release/re2.node\n\n################################################################################\n# Plugin development image\n################################################################################\nFROM bitnami/minideb:bullseye\n\nLABEL io.kuzzle.vendor=\"Kuzzle <support@kuzzle.io>\"\nLABEL description=\"Develop new plugin or protocol for Kuzzle with ease\"\n\nWORKDIR /var/app\n\nRUN set -x \\\n  && apt-get update && apt-get install --no-install-recommends -y \\\n    libunwind-dev && rm -rf /var/lib/apt/lists/*;\n\nADD ./docker/scripts/entrypoint.sh /bin/entrypoint\nADD ./docker/scripts/run-plugin.sh /bin/run-plugin\n\nCOPY --from=builder /lib /lib\nCOPY --from=builder /usr /usr\nCOPY --from=builder /app /var/app\n\nRUN  set -x \\\n  && rm /bin/sh \\\n  && ln -s /bin/bash /bin/sh \\\n  && ln -s /var/app /app\n\nWORKDIR /var/app\n\nENV PATH=$PATH:/var/app/bin\n\nENTRYPOINT [\"/bin/entrypoint\"]\n\nCMD [\"/bin/run-plugin\"]\n"
}