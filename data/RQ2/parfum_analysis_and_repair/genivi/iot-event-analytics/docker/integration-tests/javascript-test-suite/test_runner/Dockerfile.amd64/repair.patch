diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/genivi/iot-event-analytics/docker/integration-tests/javascript-test-suite/test_runner/Dockerfile.amd64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/genivi/iot-event-analytics/docker/integration-tests/javascript-test-suite/test_runner/Dockerfile.amd64/repaired.Dockerfile
index eb161ec..ea28dba 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/genivi/iot-event-analytics/docker/integration-tests/javascript-test-suite/test_runner/Dockerfile.amd64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/genivi/iot-event-analytics/docker/integration-tests/javascript-test-suite/test_runner/Dockerfile.amd64/repaired.Dockerfile
@@ -7,7 +7,7 @@ ENV HTTP_PROXY=${HTTP_PROXY}
 ENV HTTPS_PROXY=${HTTPS_PROXY}
 
 
-# > > > > > > > > > > > > > > > > > > > > > STAGE 1: 
+# > > > > > > > > > > > > > > > > > > > > > STAGE 1:
 FROM base_stage as pre-build_stage
 # Create build directory
 RUN mkdir -p /build
@@ -24,7 +24,7 @@ RUN npm config set strict-ssl false -g
 RUN npm config set maxsockets 5 -g
 
 # Audit all packages for security vulnerabilities - exit early
-RUN yarn audit --level critical; \
+RUN yarn audit --level critical; yarn cache clean; \
     yarncode=$?; \
     if [ "$yarncode" -lt 16 ]; then \
         exit 0; \
@@ -33,20 +33,20 @@ RUN yarn audit --level critical; \
     fi
 
 
-# > > > > > > > > > > > > > > > > > > > > > STAGE 2: 
+# > > > > > > > > > > > > > > > > > > > > > STAGE 2:
 FROM pre-build_stage as build_stage
 # install all dependicies
-RUN yarn
+RUN yarn && yarn cache clean;
 
 # Create and install latest SDK - platform
 # npm pack results in an output that ensure latest platform is installed
-RUN yarn add file:$(npm pack)
+RUN yarn add file:$(npm pack) && yarn cache clean;
 
 
-# > > > > > > > > > > > > > > > > > > > > > STAGE 3: 
+# > > > > > > > > > > > > > > > > > > > > > STAGE 3:
 FROM build_stage as tidy-up_stage
 
-RUN rm -rf *tgz 
+RUN rm -rf *tgz
 
 # Shrink node_modules
 RUN curl -sf https://gobinaries.com/tj/node-prune | sh
@@ -55,9 +55,9 @@ RUN curl -sf https://gobinaries.com/tj/node-prune | sh
 RUN node-prune
 
 
-# > > > > > > > > > > > > > > > > > > > > > STAGE 4: 
+# > > > > > > > > > > > > > > > > > > > > > STAGE 4:
 FROM mhart/alpine-node:slim-12.22 as runtime_stage
-# TODO can add in non-root setup here when needed 
+# TODO can add in non-root setup here when needed
 
 # Create & set app directory
 RUN mkdir -p /app