{
  "startTime": 1674254839041,
  "endTime": 1674254840188,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nLABEL Name=QED-C\\ \n      Version=\"0.0.1-beta\"\n\n# install wget\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y wget \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt-get clean\n\nSHELL [ \"/bin/bash\", \"--login\", \"-c\" ]\n\n# Create a non-root user\nARG username=quser\nARG uid=1000\nARG gid=100\nARG broot=./QC-Proto-Benchmarks\nARG platform=qiskit\n\nENV PLATFORM=$platform\nENV USER $username\nENV UID $uid\nENV GID $gid\nENV HOME /home/quser\nENV BROOT $broot\nENV MINICONDA_VERSION 4.8.3\nENV CONDA_DIR $HOME/miniconda3\nENV CROOT ./QC-Proto-Benchmarks/_containerbuildfiles/$platform\n\n# copy some support files, not some of these aren't currently used but are here as placeholders\nCOPY ${CROOT}/requirements.txt /tmp/\n\n# minimize additional layers by combining most of the RUN commands\nRUN adduser --disabled-password \\\n    --gecos \"Non-root user\" \\\n    --uid $UID \\\n    --gid $GID \\\n    --home $HOME \\\n    quser\n\nRUN chown $UID:$GID /tmp/requirements.txt && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends gcc -y && \\\n    apt-get clean && \\\n    wget https://repo.anaconda.com/miniconda/Miniconda3-py38_$MINICONDA_VERSION-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    chmod +x ~/miniconda.sh && \\\n    ~/miniconda.sh -b -p $CONDA_DIR && \\\n    rm ~/miniconda.sh && rm -rf /var/lib/apt/lists/*;\n\n# make non-activate conda commands available\nENV PATH=$CONDA_DIR/bin:/home/${username}/.local/bin:$PATH\n\nRUN conda install --quiet --yes \\\n    'notebook=6.1.4' && \\\n    conda clean --all -f -y && \\\n    pip install --no-cache-dir -r /tmp/requirements.txt && \\\n    jupyter notebook --generate-config\n\n# Add Tini. Tini operates as a process subreaper for jupyter. This prevents kernel crashes.\nENV TINI_VERSION v0.6.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n\n#switch to non-root user (not sure how to reference ARG or ENV here since those trigger an invalid parameter error)\nUSER quser\n\n# create a project directory inside user home\nENV PROJECT_DIR $HOME\nWORKDIR ${PROJECT_DIR}\nADD ${BROOT}/_common/${PLATFORM} ${PROJECT_DIR}/_common\nADD ${BROOT}/bernstein-vazirani ${PROJECT_DIR}/bernstein-vazirani\nADD ${BROOT}/deutsch-jozsa ${PROJECT_DIR}/deutsch-jozsa\nADD ${BROOT}/hidden-shift ${PROJECT_DIR}/hidden-shift\nADD ${BROOT}/quantum-fourier-transform ${PROJECT_DIR}/quantum-fourier-transform\nADD ${BROOT}/hamiltonian-simulation ${PROJECT_DIR}/hamiltonian-simulation\nADD ${BROOT}/amplitude-estimation ${PROJECT_DIR}/amplitude-estimation\nADD ${BROOT}/monte-carlo ${PROJECT_DIR}/monte-carlo\nADD ${BROOT}/shors ${PROJECT_DIR}/shors\nADD ${BROOT}/grovers ${PROJECT_DIR}/grovers\nCOPY ${BROOT}/benchmarks-qiskit.ipynb.template/ ${PROJECT_DIR}/benchmarks-qiskit.ipynb\nCOPY ${BROOT}/_common/metrics.py ${PROJECT_DIR}/\n\nEXPOSE 8888\nCMD [\"jupyter\", \"notebook\", \"--port=8888\", \"--ip=0.0.0.0\", \"--no-browser\", \"--allow-root\"]"
}