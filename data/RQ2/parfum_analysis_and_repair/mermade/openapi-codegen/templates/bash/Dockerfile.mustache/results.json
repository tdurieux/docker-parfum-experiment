{
  "startTime": 1674253993346,
  "endTime": 1674253996508,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.10\n\nRUN apt-get update -y && apt-get full-upgrade -y\nRUN apt-get install --no-install-recommends -y bash-completion zsh curl cowsay git vim bsdmainutils && rm -rf /var/lib/apt/lists/*;\n\nADD {{scriptName}} /usr/bin/{{scriptName}}\nADD _{{scriptName}} /usr/local/share/zsh/site-functions/_{{scriptName}}\nADD {{scriptName}}.bash-completion /etc/bash-completion.d/{{scriptName}}\nRUN chmod 755 /usr/bin/{{scriptName}}\n\n#\n# Install oh-my-zsh\n#\nRUN sh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" || true\n\n#\n# Enable bash completion\n#\nRUN echo '\\n\\\n. /etc/bash_completion\\n\\\nsource /etc/bash-completion.d/{{scriptName}}\\n\\\n' >> ~/.bashrc\n\n#\n# Setup prompt\n#\nRUN echo 'export PS1=\"[{{appName}}] \\$ \"' >> ~/.bashrc\nRUN echo 'export PROMPT=\"[{{appName}}] \\$ \"' >> ~/.zshrc\n\n#\n# Setup a welcome message with basic instruction\n#\nRUN echo 'cat << EOF\\n\\\n\\n\\\nThis Docker provides preconfigured environment for running the command\\n\\\nline REST client for $(tput setaf 6){{appName}}$(tput sgr0).\\n\\\n\\n\\\nFor convenience, you can export the following environment variables:\\n\\\n\\n\\\n{{#x-codegen-host-env}}$(tput setaf 3){{x-codegen-host-env}}$(tput sgr0) - server URL, e.g. https://example.com:8080\\n\\{{/x-codegen-host-env}}\n{{#hasAuthMethods}}\n{{#authMethods}}\n{{#isBasic}}\n{{#x-codegen-basicauth-env}}$(tput setaf 3){{x-codegen-basicauth-env}}$(tput sgr0) - basic authentication credentials, e.g.: \"username:password\"\\n\\{{/x-codegen-basicauth-env}}\n{{/isBasic}}\n{{#isApiKey}}\n{{#x-codegen-apikey-env}}$(tput setaf 3){{x-codegen-apikey-env}}$(tput sgr0) - access token, e.g. \"ASDASHJDG63456asdASSD\"\\n\\{{/x-codegen-apikey-env}}\n{{/isApiKey}}\n{{/authMethods}}\n{{/hasAuthMethods}}\n\\n\\\n$(tput setaf 7)Basic usage:$(tput sgr0)\\n\\\n\\n\\\n$(tput setaf 3)Print the list of operations available on the service$(tput sgr0)\\n\\\n$ {{scriptName}} -h\\n\\\n\\n\\\n$(tput setaf 3)Print the service description$(tput sgr0)\\n\\\n$ {{scriptName}} --about\\n\\\n\\n\\\n$(tput setaf 3)Print detailed information about specific operation$(tput sgr0)\\n\\\n$ {{scriptName}} <operationId> -h\\n\\\n\\n\\\nBy default you are logged into Zsh with full autocompletion for your REST API,\\n\\\nbut you can switch to Bash, where basic autocompletion is also supported.\\n\\\n\\n\\\nEOF\\n\\\n' | tee -a ~/.bashrc ~/.zshrc\n\nENTRYPOINT [\"zsh\"]\n"
}