{
  "startTime": 1674254146139,
  "endTime": 1674254147267,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 11,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 73,
        "columnEnd": 118
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to have dependancies to install Libreosteo\n# Based on Alpine Image\n############################################################\n\nFROM alpine:latest as build\nLABEL maintainer=\"LibreOsteo Team <contact@libreosteo.org>\"\n\nENV VIRTUAL_ENV=/Libreosteo/venv\nVOLUME /Libreosteo/data\nVOLUME /Libreosteo/settings\nVOLUME /Libreosteo/node_modules\n\n# Install dependancies\nWORKDIR /Libreosteo\nRUN apk add --no-cache \\\n    tzdata \\\n    gettext \\\n    python3-dev \\\n    py3-pip \\\n    nodejs \\\n    gcc \\\n    libc-dev \\\n    linux-headers\\\n    curl\\\n    bash\\\n    git \\\n    nodejs \\\n    npm && npm install fs path && npm cache clean --force;\nRUN curl -f -o - -L https://yarnpkg.com/install.sh | bash -s -- --version 1.21.1\n\n\nCOPY ./requirements ./requirements\nCOPY ./package.json .\nCOPY ./libreosteoweb ./libreosteoweb\nCOPY ./Libreosteo ./Libreosteo\nCOPY ./locale ./locale\nCOPY ./zipcode_lookup ./zipcode_lookup\nCOPY ./manage.py .\nCOPY ./server.py .\n\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:/root/.yarn/bin:$PATH\"\nRUN rm libreosteoweb/static/components || true && . venv/bin/activate && pip3 install --no-cache-dir -r requirements/requirements.txt && yarn && python3 ./manage.py collectstatic --no-input --settings=Libreosteo.settings.container && python3 ./manage.py compilejsi18n && python3 ./manage.py compress --force --settings=Libreosteo.settings.container\nRUN rm libreosteoweb/static/components\n\n\nFROM alpine:latest as run\nLABEL maintainer=\"LibreOsteo Team <contact@libreosteo.org>\"\nCOPY --from=build /Libreosteo ./Libreosteo\nVOLUME /Libreosteo/data\nVOLUME /Libreosteo/settings\nVOLUME /var/application/static\nENV VIRTUAL_ENV=/Libreosteo/venv\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\nWORKDIR /Libreosteo\n# Install dependancies\nRUN apk add --no-cache \\\n    tzdata \\\n    gettext \\\n    python3-dev \\\n    py3-pip \\\n    gcc \\\n    libc-dev \\\n    linux-headers\\\n    postgresql-libs\\\n    && apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev \\\n    && pip install --no-cache-dir uwsgi psycopg2 \\\n    && apk --purge del .build-deps\n\n\nEXPOSE 3031\nCMD python3 ./manage.py migrate --settings=Libreosteo.settings.container \\\n                                           && python3 ./manage.py import_zipcodes --settings=Libreosteo.settings.container || test 1=1\\\n                                           && cp -r /Libreosteo/static/. /var/application/static/. \\\n                                           && export DJANGO_SETTINGS_MODULE=Libreosteo.settings.container \\\n                                           && uwsgi --socket=:3031 --module Libreosteo.wsgi --master --processes 1 --threads 1 -H /Libreosteo/venv\n"
}