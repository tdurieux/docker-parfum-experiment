diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/johnhammond/katana/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/johnhammond/katana/docker/Dockerfile/repaired.Dockerfile
index cf8da6c..66e2397 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/johnhammond/katana/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/johnhammond/katana/docker/Dockerfile/repaired.Dockerfile
@@ -5,7 +5,7 @@ ENV DEBIAN_FRONTEND=noninteractive
 
 # Install base Dependencies
 RUN apt-get update -qq \
-	&& apt-get install -y -qq python-tk tk-dev libffi-dev libssl-dev pandoc \
+	&& apt-get install --no-install-recommends -y -qq python-tk tk-dev libffi-dev libssl-dev pandoc \
 	libgmp3-dev libzbar-dev tesseract-ocr xsel libpoppler-cpp-dev libmpc-dev \
 	libdbus-glib-1-dev ruby libenchant-2-dev apktool nodejs groff binwalk \
 	foremost tcpflow poppler-utils exiftool steghide stegsnow bison ffmpeg \
@@ -24,16 +24,16 @@ RUN git clone https://github.com/gleitz/npiet /opt/npiet
 # from stdlib.h.
 RUN sed -i 's|sys/malloc\.h|stdlib.h|g' /opt/npiet/npiet-foogol.*
 WORKDIR /opt/npiet
-RUN ./configure && make && make install
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install
 
 # Download jsteg
 RUN wget -O /usr/local/bin/jsteg https://github.com/lukechampine/jsteg/releases/download/v0.3.0/jsteg-linux-amd64 && chmod +x /usr/local/bin/jsteg
 RUN wget -O /usr/local/bin/slink https://github.com/lukechampine/jsteg/releases/download/v0.3.0/slink-linux-amd64 && chmod +x /usr/local/bin/slink
 
 # Download, compile and install snow
-RUN wget -O /usr/snow.tar.gz http://www.darkside.com.au/snow/snow-20130616.tar.gz
+RUN wget -O /usr/snow.tar.gz https://www.darkside.com.au/snow/snow-20130616.tar.gz
 WORKDIR /usr
-RUN tar -xvf snow.tar.gz
+RUN tar -xvf snow.tar.gz && rm snow.tar.gz
 WORKDIR /usr/snow-20130616/
 RUN make
 RUN cp /usr/snow-20130616/snow /usr/local/bin/snow && chmod +x /usr/local/bin/snow
@@ -42,7 +42,7 @@ RUN cp /usr/snow-20130616/snow /usr/local/bin/snow && chmod +x /usr/local/bin/sn
 RUN git clone --recursive https://github.com/JohnHammond/katana.git /katana
 # Install katana python dependencies
 WORKDIR /katana
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 # Create runtime data directory directory
 RUN mkdir /data