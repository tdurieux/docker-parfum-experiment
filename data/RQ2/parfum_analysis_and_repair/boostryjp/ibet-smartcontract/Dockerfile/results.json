{
  "startTime": 1674215455485,
  "endTime": 1674215456799,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-alpine3.15\n\n# make application directory\nRUN mkdir -p /app/ibet-SmartContract/\n\n# install packages\nRUN apk update \\\n && apk add --no-cache --virtual .build-deps \\\n      # use Python package installation\n      make \\\n      gcc \\\n      pkgconfig \\\n      build-base \\\n      libressl-dev \\\n      libffi-dev \\\n      autoconf \\\n      automake \\\n      libtool \\\n      # use Solidity compiler and AWS CLI\n      z3 \\\n      # use deploy.sh\n      jq \\\n      expect\n\n# use glibc instead of musl-dev\n# NOTE: This is because if it is musl-dev, an dynamic link error will occur in Solidity compiler.\nRUN wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub \\\n && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.33-r0/glibc-2.33-r0.apk \\\n && apk add --no-cache glibc-2.33-r0.apk \\\n && rm -f glibc-2.33-r0.apk\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/lib\n\n# AWS CLI\nRUN wget -q https://awscli.amazonaws.com/awscli-exe-linux-$(arch).zip -O awscliv2.zip \\\n && unzip awscliv2.zip \\\n && ./aws/install \\\n && rm -r aws awscliv2.zip\n\n# add apl user/group\n# NOTE: '/bin/bash' was added when 'libtool' installed.\nRUN addgroup -g 1000 apl \\\n && adduser -G apl -D -s /bin/bash -u 1000 apl \\\n && echo 'apl ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \\\n && chown -R apl:apl /app \\\n && echo 'export LANG=ja_JP.utf8' >> ~apl/.bash_profile \\\n && echo 'export PATH=$PATH:$HOME/.local/bin' >> ~apl/.bash_profile\n\n# Python requirements\nUSER apl\nCOPY requirements.txt /app/requirements.txt\nRUN pip install --no-cache-dir --upgrade pip setuptools \\\n && pip install --no-cache-dir -r /app/requirements.txt \\\n && rm -f /app/requirements.txt\n\n# app deploy\nCOPY --chown=apl:apl LICENSE /app/ibet-SmartContract/\nRUN mkdir -p /app/ibet-SmartContract/tools/\nCOPY --chown=apl:apl tools/ /app/ibet-SmartContract/tools/\nCOPY --chown=apl:apl brownie-config.yaml /app/ibet-SmartContract/\nRUN mkdir -p /app/ibet-SmartContract/data/\nCOPY --chown=apl:apl data/ /app/ibet-SmartContract/data/\nRUN source ~apl/.bash_profile \\\n && cd /app/ibet-SmartContract/ \\\n && brownie networks import data/networks.yml\nRUN mkdir -p /app/ibet-SmartContract/scripts/\nCOPY --chown=apl:apl scripts/ /app/ibet-SmartContract/scripts/\nRUN mkdir -p /app/ibet-SmartContract/interfaces/\nCOPY --chown=apl:apl interfaces/ /app/ibet-SmartContract/interfaces/\nRUN mkdir -p /app/ibet-SmartContract/contracts/\nCOPY --chown=apl:apl contracts/ /app/ibet-SmartContract/contracts/\nRUN find /app/ibet-SmartContract/ -type d -name __pycache__ | xargs rm -fr \\\n && chmod -R 755 /app/ibet-SmartContract/\n\nCMD /app/ibet-SmartContract/scripts/deploy.sh"
}