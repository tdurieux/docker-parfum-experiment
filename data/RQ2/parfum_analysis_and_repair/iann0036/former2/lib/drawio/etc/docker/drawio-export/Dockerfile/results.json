{
  "startTime": 1674250289529,
  "endTime": 1674250290640,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tomcat:9-jre11-slim\n\nLABEL maintainer=\"Florian JUDITH <florian.judith.b@gmail.com>\"\n\nARG VERSION=11.3.0\n\nRUN apt-get update -y && \\\n    apt-get install -y --no-install-recommends \\\n        openjdk-11-jdk-headless ant git patch wget xmlstarlet certbot curl && \\\n    curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt-get install -y --no-install-recommends nodejs chromium libatk-bridge2.0-0 libgtk-3-0 && \\\n    cd /tmp && \\\n    wget https://github.com/jgraph/draw.io/archive/v${VERSION}.zip && \\\n    unzip v${VERSION}.zip && \\\n    cd /tmp/drawio-${VERSION} && \\\n    cd /tmp/drawio-${VERSION}/etc/build && \\\n    ant war && \\\n    cd /tmp/drawio-${VERSION}/build && \\\n    unzip /tmp/drawio-${VERSION}/build/draw.war -d $CATALINA_HOME/webapps/draw && \\\n    mkdir /usr/local/drawio && \\\n    cd /usr/local/drawio && \\\n    git clone https://github.com/jgraph/draw-image-export2.git && \\\n    cd draw-image-export2 && \\\n    npm install && \\\n    apt-get remove -y --purge openjdk-11-jdk-headless ant git patch wget && \\\n    apt-get autoremove -y --purge && \\\n    apt-get remove -y --purge chromium && \\\n    apt-get clean && \\\n    rm -r /var/lib/apt/lists/* && \\\n    rm -rf \\\n        /tmp/v${VERSION}.zip \\\n        /tmp/drawio-${VERSION} && npm cache clean --force;\n\nCOPY PreConfig.js PostConfig.js $CATALINA_HOME/webapps/draw/js/\n\n# Update server.xml to set Draw.io webapp to root\nRUN cd $CATALINA_HOME && \\\n    xmlstarlet ed \\\n    -P -S -L \\\n    -i '/Server/Service/Engine/Host/Valve' -t 'elem' -n 'Context' \\\n    -i '/Server/Service/Engine/Host/Context' -t 'attr' -n 'path' -v '/' \\\n    -i '/Server/Service/Engine/Host/Context[@path=\"/\"]' -t 'attr' -n 'docBase' -v 'draw' \\\n    -s '/Server/Service/Engine/Host/Context[@path=\"/\"]' -t 'elem' -n 'WatchedResource' -v 'WEB-INF/web.xml' \\\n    -i '/Server/Service/Engine/Host/Valve' -t 'elem' -n 'Context' \\\n    -i '/Server/Service/Engine/Host/Context[not(@path=\"/\")]' -t 'attr' -n 'path' -v '/ROOT' \\\n    -s '/Server/Service/Engine/Host/Context[@path=\"/ROOT\"]' -t 'attr' -n 'docBase' -v 'ROOT' \\\n    -s '/Server/Service/Engine/Host/Context[@path=\"/ROOT\"]' -t 'elem' -n 'WatchedResource' -v 'WEB-INF/web.xml' \\\n    conf/server.xml\n\n\n# Copy docker-entrypoint\nCOPY docker-entrypoint.sh /\nRUN chmod +x /docker-entrypoint.sh\n\nWORKDIR $CATALINA_HOME\n\n#If export server is not used outside draw.io, no need to expose port 8000\nEXPOSE 8080 8443 8000\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"catalina.sh\", \"run\"]\n"
}