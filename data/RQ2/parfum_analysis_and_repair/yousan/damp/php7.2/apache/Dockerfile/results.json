{
  "startTime": 1674255724101,
  "endTime": 1674255724991,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 2
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# @link https://github.com/docker-library/wordpress/blob/591388696848f29bfa627ab38f78678135096f15/php7.2/apache/Dockerfile\nFROM php:7.2-apache\n\n# install the PHP extensions we need\nRUN set -ex; \\\n\tapt-get update; \\\n\tapt-get install --no-install-recommends -y \\\n\t\tlibjpeg-dev \\\n\t\tlibpng-dev \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tdocker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr; \\\n\tdocker-php-ext-install gd mysqli opcache\n# TODO consider removing the *-dev deps and only keeping the necessary lib* packages\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nRUN a2enmod rewrite expires vhost_alias\n\n# for DAMP develop DAMP開発用\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  emacs-nox mlocate less git && rm -rf /var/lib/apt/lists/*;\n\n# mcrypt @link http://willow710kut.hatenablog.com/entry/2018/02/14/213158\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y libmcrypt-dev \\\n    && echo '' | pecl install mcrypt-1.0.1 \\\n    && echo 'extension=mcrypt.so' > /usr/local/etc/php/conf.d/docker-php-ext-pecl.ini && rm -rf /var/lib/apt/lists/*;\n\n# @link https://github.com/phpbrew/phpbrew/issues/786\n# RUN apt-get install libbz2-dev\n\n# Install packages（コロンの後ろはaptで必要なパッケージ）\n# mbstring\n# bz2: bzip2 libbz2-dev\n# intl: libicu-dev # @link https://github.com/docker-library/php/issues/57\n# pgsql, pdo_sql: postgresql-client # 動かない\n# @link https://hub.docker.com/r/plab/docker-php/~/dockerfile/\n# imagick: @see https://github.com/docker-library/php/issues/105#issuecomment-421081065\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  bzip2 libbz2-dev \\\n  libicu-dev \\\n  mysql-client \\\n  && apt-get install -y --no-install-recommends libmagickwand-dev \\\n  && pecl install imagick-3.4.3 \\\n  && docker-php-ext-configure intl \\\n  && docker-php-ext-install mbstring bz2 zip intl pdo pdo_mysql \\\n  && docker-php-ext-enable imagick && rm -rf /var/lib/apt/lists/*;\n\n# composerのインストール。aptからインストールしようとすると依存パッケージのインストール失敗でエラーになるので手動で。\nRUN cd /tmp \\\n  && php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n  && php -r \"if (hash_file('sha384', 'composer-setup.php') === '48e3236262b34d30969dca3c37281b3b4bbe3221bda826ac6a9a62d6444cdb0dcd0615698a5cbe587c3f0fe57a54d8f5') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n  && php composer-setup.php \\\n  && php -r \"unlink('composer-setup.php');\" \\\n  && chmod +x composer.phar \\\n  && mv composer.phar /usr/local/bin/composer\n\n# Install nodebrew, node and npm\nRUN cd / \\\n  && curl -f -L git.io/nodebrew | perl - setup \\\n  && echo \"PATH=$HOME/.nodebrew/current/bin:$PATH\" >> ~/.bashrc && . ~/.bashrc \\\n  && nodebrew install v8.9.4 && nodebrew use v8.9.4\n\n# gdをfreetype, pngとかに対応させたいが動かない\n# apt-get install -y libfreetype6-test libjpeg62-turbo-test libpng12-test \\\n#\t&& docker-php-ext-configure gd -with-freetype-dir=/usr/include/ -with-jpeg-dir=/usr/include/\n\n# pgsql, pdo_pgsql が動かない\n#\tapt-get install libghc-postgresql-libpq-test \\\n#\t&& docker-php-ext-install pgsql pdo_pgsql\n#\t&& docker-php-ext-configure pgsql -with-pgsql=/usr/include/postgresql/\n\n"
}