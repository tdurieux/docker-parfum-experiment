{
  "startTime": 1674254227209,
  "endTime": 1674254228290,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 115
      }
    }
  ],
  "repairedDockerfile": "FROM php:5.6-apache\n\n# @link https://github.com/docker-library/wordpress\n# install the PHP extensions we need\nRUN apt-get update && apt-get install --no-install-recommends -y libpng12-test libjpeg-test libcurl4-openssl-test && rm -rf /var/lib/apt/lists/* \\\n\t&& docker-php-ext-configure gd --with-png-dir=/usr --with-jpeg-dir=/usr \\\n\t&& docker-php-ext-install gd mysqli opcache\n\n# @link https://github.com/docker-library/php/issues/331#issuecomment-261016528   Really thanks\nRUN docker-php-ext-install curl mysqli opcache pdo pdo_mysql zip\n\n# @link https://hub.docker.com/r/plab/docker-php/~/dockerfile/\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tbzip2 \\\n\tlibbz2-test \\\n\tlibfreetype6-test \\\n\tlibjpeg62-turbo-test \\\n\tlibmcrypt-test \\\n\tlibpng12-test \\\n\tlibghc-postgresql-libpq-test \\\n\t&& docker-php-ext-install mcrypt mbstring bz2 zip \\\n\t&& docker-php-ext-configure gd -with-freetype-dir=/usr/include/ -with-jpeg-dir=/usr/include/ \\\n\t&& docker-php-ext-configure pgsql -with-pgsql=/usr/include/postgresql/ \\\n\t&& docker-php-ext-install gd pgsql pdo_pgsql && rm -rf /var/lib/apt/lists/*;\n\n# @link https://github.com/docker-library/php/issues/57\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y zlib1g-test libicu-test g++ \\\n  && docker-php-ext-configure intl \\\n  && docker-php-ext-install intl && rm -rf /var/lib/apt/lists/*;\n\n\n# @link https://github.com/docker-library/php/issues/77#issuecomment-88936146\nRUN pecl install -o -f xdebug && \\\n  echo \"zend_extension=/usr/local/lib/php/extensions/no-debug-non-zts-20131226/xdebug.so\" > /usr/local/etc/php/conf.d/pecl-xdebug.ini\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nRUN a2enmod rewrite expires vhost_alias\n\n# Install 'emacs' and 'less' for testelopment\n## I MUST remove those lines when deplyoing at the future\nADD sources.list /etc/apt/\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5 && \\\n    apt-get update\n# for CakePHP\nRUN apt-get install --no-install-recommends -y emacs-nox less composer && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y mysql-client postgresql-client php-intl php-mbstring php-xml php-zip && rm -rf /var/lib/apt/lists/*;\n\nENV TERM=xterm\n\n\nCOPY 000-default.conf /etc/apache2/sites-available/\nRUN sed -i 's/\tAllowOverride None/\tAllowOverride All/' /etc/apache2/apache2.conf\n\nVOLUME /var/www/html\n\n\n# Install phpMyAdmin from here\n# Include keyring to verify download\nCOPY phpmyadmin.keyring /tmp/\nENV VERSION 4.7.4\nENV URL https://files.phpmyadmin.net/phpMyAdmin/${VERSION}/phpMyAdmin-${VERSION}-all-languages.tar.gz\n\n# Download tarball, verify it using gpg and extract\nRUN set -x \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && curl -f --output phpMyAdmin.tar.gz --location $URL \\\n    && curl -f --output phpMyAdmin.tar.gz.asc --location $URL.asc \\\n    && gpgv --keyring /tmp/phpmyadmin.keyring phpMyAdmin.tar.gz.asc phpMyAdmin.tar.gz \\\n    && rm -rf \"$GNUPGHOME\" \\\n    && tar xzf phpMyAdmin.tar.gz \\\n    && rm -f phpMyAdmin.tar.gz phpMyAdmin.tar.gz.asc \\\n    && mv phpMyAdmin-$VERSION-all-languages /var/www/pma.test \\\n    && rm -rf /var/www/pma.test/js/jquery/src/ /var/www/pma.test/js/openlayers/src/ /var/www/pma.test/setup/ /var/www/pma.test/sql/ /var/www/pma.test/examples/ /var/www/pma.test/test/ /var/www/pma.test/po/ \\\n    && chown -R www-data:www-data /var/www/pma.test \\\n    && find /var/www/pma.test -type d -exec chmod 750 {} \\; \\\n    && find /var/www/pma.test -type f -exec chmod 640 {} \\;\n\nCOPY config.inc.php /var/www/pma.test/\n# Copy main script\nCOPY run.sh /var/www/pma.test/run.sh\nRUN chmod u+rwx /var/www/pma.test/run.sh\n\nRUN /var/www/pma.test/run.sh\n\n#RUN set -x \\\n#\t&& curl -o wordpress.tar.gz -fSL \"https://wordpress.org/wordpress-${WORDPRESS_VERSION}.tar.gz\" \\\n#\t&& echo \"$WORDPRESS_SHA1 *wordpress.tar.gz\" | sha1sum -c - \\\n## upstream tarballs include ./wordpress/ so this gives us /usr/src/wordpress\n#\t&& tar -xzf wordpress.tar.gz -C /usr/src/ \\\n#\t&& rm wordpress.tar.gz \\\n#\t&& chown -R www-data:www-data /usr/src/wordpress\n\nCOPY docker-entrypoint.sh /usr/local/bin/\n# RUN ln -s usr/local/bin/docker-entrypoint.sh /entrypoint.sh # backwards compat\n\n# ENTRYPOINT resets CMD\n# ENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\nCMD [\"apache2-foreground\"]\n"
}