{
  "startTime": 1674251457300,
  "endTime": 1674251458459,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This docker file is based on the llvm docker file example located here:\n# https://github.com/llvm-mirror/llvm/blob/master/utils/docker/debian8/Dockerfile\n\nFROM launcher.gcr.io/google/debian9:latest as builder\nLABEL maintainer \"Solana Maintainers\"\n\n# Import public key required for verifying signature of cmake download.\n# Note, this often fails, do it first\n#RUN gpg --no-tty --keyserver hkp://pgp.mit.edu --recv 0x2D2CEF1034921684\n\n# Install build dependencies of rust.\n# First, Update the apt's source list and include the sources of the packages.\nRUN grep deb /etc/apt/sources.list | \\\n    sed 's/^deb/deb-src /g' >> /etc/apt/sources.list\n\n# Install compiler, python and subversion.\nRUN apt-get update && \\\n    apt-get install -y \\\n                    --no-install-recommends \\\n                    ca-certificates gnupg \\\n                    build-essential \\\n                    python \\\n                    wget \\\n                    unzip \\\n                    git \\\n                    curl \\\n                    gcc \\\n                    g++ \\\n                    clang \\\n                    ssh \\\n                    openssl \\\n                    libssl-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Install a newer ninja release. It seems the older version in the debian repos\n# randomly crashes when compiling llvm.\nRUN wget \"https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip\" && \\\n    echo \"d2fea9ff33b3ef353161ed906f260d565ca55b8ca0568fa07b1d2cab90a84a07  ninja-linux.zip\" \\\n        | sha256sum -c && \\\n    unzip ninja-linux.zip -d /usr/local/bin && \\\n    rm ninja-linux.zip\n\n# Download, verify and install cmake version that can compile clang into /usr/local.\n# (Version in debian8 repos is too old)\nRUN mkdir /tmp/cmake-install && cd /tmp/cmake-install && \\\n    wget \"https://cmake.org/files/v3.7/cmake-3.7.2-SHA-256.txt.asc\" && \\\n    wget \"https://cmake.org/files/v3.7/cmake-3.7.2-SHA-256.txt\" && \\\n    #gpg --verify cmake-3.7.2-SHA-256.txt.asc cmake-3.7.2-SHA-256.txt && \\\n    wget \"https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.tar.gz\" && \\\n    ( grep \"cmake-3.7.2-Linux-x86_64.tar.gz\" cmake-3.7.2-SHA-256.txt | \\\n      sha256sum -c - ) && \\\n    tar xzf cmake-3.7.2-Linux-x86_64.tar.gz -C /usr/local --strip-components=1 && \\\n    cd / && \\\n    rm -rf /tmp/cmake-install && rm cmake-3.7.2-Linux-x86_64.tar.gz\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nENV PATH=\"/root/.cargo/bin:${PATH}\"\nRUN cargo --version\n"
}