{
  "startTime": 1674246015309,
  "endTime": 1674246017094,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Decidim Application Dockerfile\n# This is an image to start an application based on Decidim (https://decidim.org)\n# You can see the Installation process on https://docs.decidim.org/install/docker\n#\n\n# Starts with a clean ruby image from Debian\n# As per ruby's Docker image recommendations we don't use alpine nor slim\n# If you have space disk contrains you could use those although it's going to need adjustments\n#\n# Also we don't use -onbuild as they're deprecated\n# https://github.com/docker-library/official-images/issues/2076\nFROM ruby:2.7.1 as dev\nLABEL maintainer=\"beltrame@puzzle.ch\"\n\n# Installs system dependencies\n# One package each line and sorted alphabetically\n# We clean up after as there's some apt caching that we don't need here\nRUN apt-get update -qq \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n      build-essential \\\n      graphviz \\\n      imagemagick \\\n      libicu-dev \\\n      libpq-dev \\\n    && apt-get clean \\\n    && rm -rf /var/cache/apt/archives/* \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && truncate -s 0 /var/log/*log\n\n# Installs yarn/nodejs as a dependency\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg -o /root/yarn-pubkey.gpg && apt-key add /root/yarn-pubkey.gpg \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n      nodejs \\\n      yarn \\\n    && apt-get clean \\\n    && rm -rf /var/cache/apt/archives/* \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && truncate -s 0 /var/log/*log\n\n# Sets workdir as /usr/src/app\n# We try to follow the Filesystem Hierarchy Standard (FHS)\nENV APP_HOME /usr/src/app/\nRUN mkdir ${APP_HOME}\nWORKDIR ${APP_HOME}\n\n# Create an user for the application for security\nRUN addgroup --gid 1000 decidim\nRUN useradd -m -s /bin/bash -g 1000 -u 1000 decidim\n\nRUN mkdir /db-init && chown 1000 /db-init\n\n# Changes the active user on the container\nUSER decidim\n\n# Update system gems\n#RUN gem update --system\n\n# Copy Gemfile and install bundle dependencies\nCOPY --chown=decidim:decidim Gemfile Gemfile.lock ${APP_HOME}\nENV LANG=C.UTF-8 \\\n  BUNDLE_JOBS=20 \\\n  BUNDLE_RETRY=5 \\\n  PATH=${APP_HOME}/bin:${PATH}\nRUN gem install bundler:2.2.8\nRUN bundle install\n"
}