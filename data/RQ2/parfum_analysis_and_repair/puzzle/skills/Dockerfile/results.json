{
  "startTime": 1674249554136,
  "endTime": 1674249554879,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#################################\n#          Build Stage          #\n#################################\n\nFROM ruby:2.7 AS build\n\n# Set build shell\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Use root user\nUSER root\n\nARG BUILD_PACKAGES\nARG BUILD_SCRIPT\nARG BUNDLE_WITHOUT='development:metrics:test'\nARG BUNDLER_VERSION=2.2.16\nARG POST_BUILD_SCRIPT\n\n# Install dependencies\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y ${BUILD_PACKAGES} && rm -rf /var/lib/apt/lists/*;\n\nRUN [[ ${BUILD_SCRIPT} ]] && bash -c \"${BUILD_SCRIPT}\"\n\n# Install specific versions of dependencies\nRUN gem install bundler:${BUNDLER_VERSION} --no-document\n\n# TODO: Load artifacts\n\n# set up app-src directory\nCOPY . /app-src\nWORKDIR /app-src\n\n# Run deployment\nRUN    bundle config set --local deployment 'true' \\\n    && bundle config set --local without ${BUNDLE_WITHOUT} \\\n    && bundle package \\\n    && bundle install \\\n    && bundle clean\n\nRUN [[ ${POST_BUILD_SCRIPT} ]] && bash -c \"${POST_BUILD_SCRIPT}\"\n\n# TODO: Save artifacts\n\nRUN rm -rf vendor/cache/ .git\n\n#################################\n#           Run Stage           #\n#################################\n\n# This image will be replaced by Openshift\nFROM ruby:2.7-slim AS app\n\n# Set runtime shell\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Add user\nRUN adduser --disabled-password --uid 1001 --gid 0 --gecos \"\" app\n\nARG BUNDLE_WITHOUT='development:metrics:test'\nARG RUN_PACKAGES\n\n# Install dependencies, remove apt!\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y ${RUN_PACKAGES} \\\n    && apt-get install -y --no-install-recommends ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Copy deployment ready source code from build\nCOPY --from=build /app-src /app-src\nWORKDIR /app-src\n\n# Set group permissions to app folder\nRUN    chgrp -R 0 /app-src \\\n    && chmod -R u+w,g=u /app-src\n\nENV HOME=/app-src\n\n# Use cached gems\nRUN    bundle config set --local deployment 'true' \\\n    && bundle config set --local without ${BUNDLE_WITHOUT} \\\n    && bundle\n\nUSER 1001\n\nCMD [\"bundle\", \"exec\", \"puma\", \"-t\", \"8\"]\n"
}