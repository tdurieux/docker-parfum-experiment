diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zultron/freeipa-cloud-prov/dockerfiles/Dockerfile.manager b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zultron/freeipa-cloud-prov/dockerfiles/Dockerfile.manager/repaired.Dockerfile
index 5947e51..4687b0b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zultron/freeipa-cloud-prov/dockerfiles/Dockerfile.manager
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zultron/freeipa-cloud-prov/dockerfiles/Dockerfile.manager/repaired.Dockerfile
@@ -5,7 +5,7 @@ MAINTAINER John Morris <john@zultron.com>
 # communicating over SSL
 
 RUN apt-get update
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
         python-yaml \
         libyaml-dev \
         python-pip \
@@ -15,25 +15,25 @@ RUN apt-get install -y \
         build-essential \
         python-setuptools \
         python-pkg-resources \
-        openssh-client
+        openssh-client && rm -rf /var/lib/apt/lists/*;
 
 # Digital Ocean
-RUN pip install python-digitalocean
+RUN pip install --no-cache-dir python-digitalocean
 
 # paramiko
-RUN pip install --upgrade \
+RUN pip install --no-cache-dir --upgrade \
         cffi pyOpenSSL
-RUN pip install paramiko
+RUN pip install --no-cache-dir paramiko
 
 # Ansible
-RUN pip install \
+RUN pip install --no-cache-dir \
         Jinja2 \
         ipcalc \
         netaddr \
 	jmespath \
         ansible
 # dopy > 0.3.5 broken, according to DO Ansible tutorial
-RUN pip install 'dopy>=0.3.5,<=0.3.5'
+RUN pip install --no-cache-dir 'dopy>=0.3.5,<=0.3.5'
 
 # Ansible role to install python on CoreOS
 COPY requirements.yaml /etc/ansible/requirements.yaml
@@ -41,51 +41,51 @@ RUN mkdir -p /etc/ansible/roles && \
     ansible-galaxy install -r /etc/ansible/requirements.yaml
 
 # Redis (not needed?)
-RUN apt-get install -y \
-    redis-server
-RUN pip install redis
+RUN apt-get install --no-install-recommends -y \
+    redis-server && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir redis
 
 # Install and configure sudo, passwordless for everyone
-RUN apt-get -y install sudo
+RUN apt-get -y --no-install-recommends install sudo && rm -rf /var/lib/apt/lists/*;
 RUN echo "ALL	ALL=(ALL:ALL) NOPASSWD: ALL" >> /etc/sudoers
 
 # LDAP python libraries
-RUN apt-get -y install libldap2-dev libsasl2-dev
-RUN pip install python-ldap
+RUN apt-get -y --no-install-recommends install libldap2-dev libsasl2-dev && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir python-ldap
 
 # For generating vault passwords automatically
-RUN apt-get -y install apg
+RUN apt-get -y --no-install-recommends install apg && rm -rf /var/lib/apt/lists/*;
 
 # Basic tools for command-line use:
 # - simple editor
 # - telnet, DNS, LDAP clients
 # - git
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
         ed \
         telnet \
         dnsutils \
         ldap-utils \
         git \
-        psmisc
+        psmisc && rm -rf /var/lib/apt/lists/*;
 
 # Install docker for client remote access
 # https://docs.docker.com/engine/installation/linux/debian/
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
 	apt-transport-https \
 	ca-certificates \
 	curl \
 	gnupg2 \
-	software-properties-common
+	software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN curl -fsSL https://download.docker.com/linux/debian/gpg | \
         apt-key add -
 RUN add-apt-repository \
 	"deb https://download.docker.com/linux/debian stretch stable"
 RUN apt-get update
-RUN apt-get install -y \
-        docker-ce
+RUN apt-get install --no-install-recommends -y \
+        docker-ce && rm -rf /var/lib/apt/lists/*;
 
 # Python testing (not needed)
-RUN pip install nose mock
+RUN pip install --no-cache-dir nose mock
 
 # Add resources in `lib/` to paths
 ENV PATH=/data/lib/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
@@ -100,10 +100,10 @@ ADD https://github.com/coreos/container-linux-config-transpiler/releases/downloa
 RUN chmod 755 /usr/local/bin/ct
 
 # Cloudflare PKI and TLS tool
-RUN curl -s -L -o /usr/local/bin/cfssl \
+RUN curl -f -s -L -o /usr/local/bin/cfssl \
         https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 && \
     chmod +x /usr/local/bin/cfssl
-RUN curl -s -L -o /usr/local/bin/cfssljson \
+RUN curl -f -s -L -o /usr/local/bin/cfssljson \
         https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 && \
     chmod +x /usr/local/bin/cfssljson