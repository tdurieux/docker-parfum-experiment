{
  "startTime": 1674253170998,
  "endTime": 1674253172073,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##############################################################################################\n#  Copyright Accenture. All Rights Reserved.\n#\n#  SPDX-License-Identifier: Apache-2.0\n##############################################################################################\n\n# USAGE:\n# docker build . -t bevel-build\n# docker run -v $(pwd):/home/bevel/ bevel-build\n\nFROM ubuntu:20.04\n\n# Create working directory\nWORKDIR /home/\nENV PYTHON_VERSION='3.6.13'\nENV OPENSHIFT_VERSION='0.12.0'\n\nRUN apt-get update -y && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        wget\\\n        curl \\\n        unzip \\\n        build-essential \\\n        openjdk-8-jdk \\\n\t    openssh-client \\\n        gcc \\\n        git \\\n        libdb-dev libleveldb-dev libsodium-dev zlib1g-dev libtinfo-dev \\\n        jq \\\n        npm && rm -rf /var/lib/apt/lists/*;\n\n# Install Python 3.6.5\nRUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz \\\n    && tar xvf Python-${PYTHON_VERSION}.tar.xz \\\n    && rm Python-${PYTHON_VERSION}.tar.xz \\\n    && cd Python-${PYTHON_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make altinstall \\\n    && cd / \\\n    && rm -rf Python-${PYTHON_VERSION}\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3-pip && \\\n    pip3 install --no-cache-dir --no-cache --upgrade pip setuptools wheel && \\\n    pip3 install --no-cache-dir ansible && \\\n    pip3 install --no-cache-dir jmespath && \\\n    pip3 install --no-cache-dir openshift==${OPENSHIFT_VERSION} && \\\n    apt-get clean && \\\n    ln -s /usr/bin/python3 /usr/bin/python && \\\n    rm -rf /var/lib/apt/lists/*\nRUN npm install -g ajv-cli && npm cache clean --force;\nRUN apt-get update && apt-get install --no-install-recommends -y python3-venv && rm -rf /var/lib/apt/lists/*;\n\nRUN rm /etc/apt/apt.conf.d/docker-clean\nRUN mkdir /etc/ansible/\nRUN /bin/echo -e \"[ansible_provisioners:children]\\nlocal\\n[local]\\nlocalhost ansible_connection=local\" > /etc/ansible/hosts\n\n# Copy the provisional script to build container\nCOPY ./run.sh /home\nCOPY ./reset.sh /home\nRUN chmod 755 /home/run.sh\nRUN chmod 755 /home/reset.sh\nENV PATH=/root/bin:/root/.local/bin/:$PATH\n\n# The mounted repo should contain a build folder with the following files\n# 1) K8s config file as config\n# 2) Network specific configuration file as network.yaml\n# 3) Private key file which has write-access to the git repo\n\n#path to mount the repo\nVOLUME /home/bevel/\n\n\nCMD [\"/home/run.sh\"]\n"
}