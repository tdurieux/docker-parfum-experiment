{
  "startTime": 1674248056492,
  "endTime": 1674248057342,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 78,
        "columnEnd": 137
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM apache/airflow:2.2.5-python3.8 as dev_build\n\n### --------------------------------------------- run as root => ##\nUSER root\nRUN apt-get update\n\n# required packages to install psycopg2 which is a dependency of ewah\nRUN apt-get install -y --no-install-recommends postgresql-server-dev-all gcc wget && rm -rf /var/lib/apt/lists/*;\n\n# create folder and give user airflow sufficient access rights\nRUN mkdir /opt/ewah && \\\n    chmod -R 777 /opt/ewah\n\n# required to use git\nRUN apt-get install -y --no-install-recommends git && rm -rf /var/lib/apt/lists/*;\n\n# required to use Chrome with Selenium\n# see also: https://stackoverflow.com/questions/45323271/how-to-run-selenium-with-chrome-in-docker\nRUN mkdir -p /opt/chrome && \\\n    cd /opt/chrome && \\\n    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y google-chrome-stable && \\\n    apt-get install --no-install-recommends -yqq unzip && \\\n    wget -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$( curl -f -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip && \\\n    unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/ && \\\n    cd /opt && \\\n    rm -r -f /opt/chrome && rm -rf /var/lib/apt/lists/*;\n# set display port to avoid crash\nENV DISPLAY=:99\n\n\n# install requirements due to Oracle\n# see also: https://cx-oracle.readthedocs.io/en/latest/user_guide/installation.html#installing-cx-oracle-on-linux\nRUN mkdir -p /opt/oracle && \\\n    apt-get install -y --no-install-recommends libaio1 unzip && \\\n    cd /opt/oracle && \\\n    wget https://download.oracle.com/otn_software/linux/instantclient/19800/instantclient-basic-linux.x64-19.8.0.0.0dbru.zip && \\\n    unzip instantclient-basic-linux.x64-19.8.0.0.0dbru.zip && \\\n    rm -r -f /opt/oracle/instantclient-basic-linux.x64-19.8.0.0.0dbru.zip && \\\n    ldconfig /opt/oracle/instantclient_19_8 && \\\n    chmod -R 777 /opt/oracle && rm -rf /var/lib/apt/lists/*;\n\n# enable sudo\nRUN echo \"airflow ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers && \\\n    chmod 0440 /etc/sudoers\n\n# overwrite entrypoint\nCOPY --chown=airflow:root  docker/scripts/entrypoint_prod.sh /entrypoint\nCOPY --chown=airflow:root  docker/scripts/entrypoint_prod.py /entrypoint.py\n\nUSER airflow\n### <= --------------------------------------------- run as root ##\n\n\nRUN pip install --user --upgrade --no-cache-dir pip setuptools\n\n# required to make Oracle work with airflow user\nRUN sudo ldconfig /opt/oracle/instantclient_19_8\n\n# required to use SSH\nRUN mkdir -p /home/airflow/.ssh\n\n# install psycopg2 - optional, but increases iteration speed\nRUN pip install --user --upgrade --no-cache-dir psycopg2\n\n# Set development secrets (overwrite in production)\n## Minimum required env variables\nENV AIRFLOW__CORE__SQL_ALCHEMY_CONN='postgresql+psycopg2://postgres:postgres@database:5432/ewah'\n## Fernet key\nENV AIRFLOW__CORE__FERNET_KEY='kiQHALe31o7by-d9U-lzxhpDsmllTmu0DUagDuYQoWs='\n## Flask App Secret Key\nENV AIRFLOW__WEBSERVER__SECRET_KEY='eb993886c858d0a3a24ff8a71d7913725e2f124261faf09cb05bd8d1a890'\n\n# Let entrypoint know to install from bind-mounted volume\nENV EWAH_IMAGE_TYPE='DEV'\n# Run support scripts on start-up\nENV EWAH_RUN_DEV_SUPPORT_SCRIPTS='1'\n\n# FYI\nENV EWAH_AIRFLOW_CONNS_YAML_PATH='You can set me as a path to a non-standard airflow connections yml file!'\n\n# Create a superuser for the airflow backend - overwrite as applicable\nENV AIRFLOW__WEBSERVER__AUTHENTICATE=True\nENV AIRFLOW__WEBSERVER__AUTH_BACKEND='airflow.contrib.auth.backends.password_auth'\nENV EWAH_AIRFLOW_USER_SET='1'\nENV EWAH_AIRFLOW_USER_USER='ewah'\nENV EWAH_AIRFLOW_USER_PASSWORD='ewah'\nENV EWAH_AIRFLOW_USER_FIRSTNAME='ewah'\nENV EWAH_AIRFLOW_USER_LASTNAME='ewah'\nENV EWAH_AIRFLOW_USER_EMAIL='ewah@gemmaanalytics.com'\n\n################################################################################\n## Set a number of environment variables as EWAH defaults, can be overwritten ##\n################################################################################\nENV AIRFLOW_HOME=/opt/airflow\n\n# Useful, often changed configurations\nENV AIRFLOW__CORE__EXECUTOR=LocalExecutor\nENV AIRFLOW__CORE__PARALLELISM=8\nENV AIRFLOW__CORE__MAX_ACTIVE_TASKS_PER_DAG=16\nENV AIRFLOW__WEBSERVER__BASE_URL=\"http://localhost:8080\"\n\n# Email related\nENV AIRFLOW__EMAIL__EMAIL_BACKEND=airflow.utils.email.send_email_smtp\nENV AIRFLOW__SMTP__SMTP_HOST=smtp.gmail.com\nENV AIRFLOW__SMTP__SMTP_STARTTLS=True\nENV AIRFLOW__SMTP__SMTP_SSL=False\n# ENV AIRFLOW__SMTP__SMTP_USER=\n# ENV AIRFLOW__SMTP__SMTP_PASSWORD=\nENV AIRFLOW__SMTP__SMTP_PORT=587\n# ENV AIRFLOW__SMTP__SMTP_MAIL_FROM=\n\n# Logging\nENV AIRFLOW__LOGGING__REMOTE_LOGGING=False\n# ENV AIRFLOW__LOGGING__REMOTE_LOG_CONN_ID=\n# ENV AIRFLOW__LOGGING__REMOTE_BASE_LOG_FOLDER=\n# ENV AIRFLOW__LOGGING__ENCRYPT_S3_LOGS=\n# ENV AIRFLOW__LOGGING__LOGGING_LEVEL = INFO\n\n# Other useful configurations\nENV AIRFLOW__CORE__LOAD_EXAMPLES=False\nENV AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False\nENV AIRFLOW__API__AUTH_BACKEND=airflow.api.auth.backend.basic_auth\nENV AIRFLOW__WEBSERVER__EXPOSE_CONFIG=False\nENV AIRFLOW__CORE__SECURE_MODE=True\n# Increase processor timeout to avoid timeout when processing a large dags.py\nENV AIRFLOW__CORE__DAGBAG_IMPORT_TIMEOUT=240\nENV AIRFLOW__CORE__DAG_FILE_PROCESSOR_TIMEOUT=240\n\n# Related to $AIRFLOW_HOME\nENV AIRFLOW__CORE__DAGS_FOLDER=/opt/airflow/dags\nENV AIRFLOW__LOGGING__BASE_LOG_FOLDER=/opt/airflow/logs\nENV AIRFLOW__CORE__PLUGINS_FOLDER=/opt/airflow/plugins\nENV AIRFLOW__LOGGING__DAG_PROCESSOR_MANAGER_LOG_LOCATION=/opt/airflow/logs/dag_processor_manager/dag_processor_manager.log\nENV AIRFLOW__SCHEDULER__CHILD_PROCESS_LOG_DIRECTORY=/opt/airflow/logs/scheduler\n\n# Default value socket.getfqdn sometimes cannot resolve hostname and falls back to gethostname()\n# If that happens, all tasks fail - just use gethostname() from the start instead\nENV AIRFLOW__CORE__HOSTNAME_CALLABLE=\"socket.gethostname\"\n\n###############################################################################\n## Multi-Stage build: for the publishable EWAH image, install EWAH from pip  ##\n###############################################################################\nFROM dev_build as prod_build\n\n# don't install from bind-mounted volume\nENV EWAH_IMAGE_TYPE='PROD'\n\n# don't run support scripts as default\n# Overwrite this ENV to '1' if you'd like to auto-upgrade the metadata db &\n# auto-set a default admin UI user (use ENV vars to set the credentials, namely:\n# EWAH_AIRFLOW_USER_USER, EWAH_AIRFLOW_USER_PASSWORD, EWAH_AIRFLOW_USER_EMAIL)\nENV EWAH_RUN_DEV_SUPPORT_SCRIPTS='0'\n\n# Force using environment variables to set Fernet Key\nENV AIRFLOW__CORE__FERNET_KEY='Hello, I am AIRFLOW__CORE__FERNET_KEY and I need to be set in production!'\n\n# Force overwrite of these secrets via ENV VAR to ensure it is set uniquely\nENV AIRFLOW__WEBSERVER__SECRET_KEY=''\nENV AIRFLOW__CORE__SQL_ALCHEMY_CONN=''\n\n# install from pip\nARG package_version\nRUN pip install --user --upgrade --no-cache-dir ewah==${package_version}\n"
}