{
  "startTime": 1674219143433,
  "endTime": 1674219144096,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM neurodebian:DL_DIST\nMAINTAINER Yaroslav Halchenko <yoh@datalad.org>\n\nUSER root\n\n# Speed up installation using our apt cacher\n#RUN mkdir /etc/apt/apt.conf.d/\nCOPY conf/etc/apt/apt.conf.d/99apt-cacher /etc/apt/apt.conf.d/99apt-cacher\nRUN chmod a+r /etc/apt/apt.conf.d/99apt-cacher\n\n# Make deb-src avail\nRUN sed -i -e 's,^deb\\(.*\\),deb\\1\\ndeb-src\\1,g' /etc/apt/sources.list.d/neurodebian.sources.list /etc/apt/sources.list\n\n# Assure popcon doesn't kick in\nRUN bash -c \"echo 'debconf debconf/frontend select noninteractive' | debconf-set-selections -\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y -q eatmydata && rm -rf /var/lib/apt/lists/*; # Use bash for extended syntax\n\nRUN bash -c \"DL_APT\"\n# Some rudimentary tools if we need to do anything within docker\nRUN bash -c \"eatmydata apt-get install -y -q vim less man-db\"\nRUN apt-get clean\n\n# Let's setup user matching user\nRUN groupadd --gid DL_GID -r DL_USER && useradd -m --uid DL_UID -g DL_USER DL_USER\n\n# Install and configure apache\nRUN eatmydata apt-get update && eatmydata apt-get install -y --force-yes apache2\n\n# Install and configure openssh server\nRUN eatmydata apt-get install -q -y openssh-server\n\nRUN chown DL_USER -R /var/www/html\n\nUSER DL_USER\n\nWORKDIR /home/DL_USER\n# Prepare system for working with Git\nRUN git config --global user.email \"DL_GIT_USER_EMAIL\"\nRUN git config --global user.name \"DL_GIT_USER_NAME\"\n# RUN git clone https://github.com/datalad/datalad\nRUN mkdir datalad\n\n# WORKDIR /home/DL_USER/datalad\n\n#\n# Need to clone and install datalad system-wide but there is a problem that\n# we can't mount hostdir at build time:\n# https://github.com/docker/docker/issues/14080\n# http://stackoverflow.com/questions/26050899/how-to-mount-host-volumes-into-docker-containers-in-dockerfile-during-build\n# so this will not be done now but rather will be done once container started\n# from this image\n# Probably actually better so image could be reused for multiple instances of the container\n#\n\n# Fall back to root, so we have full control to start webserver etc\nUSER root\n\nRUN mkdir /home/DL_USER/.ssh\nCOPY conf/authorized_keys /home/DL_USER/.ssh/authorized_keys\nRUN bash -c \"chown DL_USER -R /home/DL_USER/.ssh; chmod go-rwx -R /home/DL_USER/.ssh\"\n\n# We will need a supervisor to run both apache and sshd\n# based on https://docs.docker.com/engine/admin/using_supervisord/\nRUN mkdir -p /var/lock/apache2 /var/run/apache2 /var/run/sshd /var/log/supervisor\nRUN eatmydata apt-get install -y -q supervisor\nCOPY conf/apache-ssh-supervisor.conf /etc/supervisor/conf.d/supervisord.conf\n\n# ENTRYPOINT [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\nRUN apt-get clean\nEXPOSE 22 80 443\nCMD [\"/usr/bin/supervisord\"]\n"
}