{
  "startTime": 1674218813416,
  "endTime": 1674218819974,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# latest is node:9.4.0-alpine, but c9 seems to depend on 4.4, so we get some 4.x version to stay on the safe side\nFROM node:4-alpine AS build\n\nRUN apk add --no-cache --update \\\n    bash \\\n    curl \\\n    g++ \\\n    gcc \\\n    git \\\n    make \\\n    py-pip \\\n    python \\\n    python-dev \\\n    tmux \\\n    && true\n\nRUN mkdir /out\nRUN mkdir -p /out/usr/local && cp -r /usr/local/* /out/usr/local/\nRUN mkdir -p /out/etc/apk && cp -r /etc/apk/* /out/etc/apk/\nRUN apk add --no-cache --initdb --root /out \\\n    alpine-baselayout \\\n    bash \\\n    busybox \\\n    ca-certificates \\\n    coreutils \\\n    curl \\\n    git \\\n    jq \\\n    libc6-compat \\\n    libgcc \\\n    libstdc++ \\\n    make \\\n    openssh-client \\\n    python \\\n    tmux \\\n    vim \\\n    && true\n\nRUN mkdir -p /out/src/c9\nWORKDIR /out/src/c9\nRUN curl -f --silent 'https://codeload.github.com/c9/core/tar.gz/cfedceb' \\\n    | tar xz && ln -s core-cfedceb core\n\nWORKDIR /out/src/c9/core\nRUN npm install --production && npm cache clean --force;\nRUN npm install pty.js sqlite3@3.1.8 sequelize@2.0.0-beta.0 https://github.com/c9/nak/tarball/c9 && npm cache clean --force;\n\nRUN mkdir -p /out/root/.c9 ; cd /out/root/.c9 ; \\\n    mkdir -p bin ; ln -s /usr/bin/tmux bin/tmux ; \\\n    mkdir -p node/bin ; ln -s /usr/local/bin/node node/bin/node ; \\\n    mkdir -p node/bin ; ln -s /usr/local/bin/npm node/bin/npm ; \\\n    ln -s ../../src/c9/core/node_modules node_modules ; \\\n    echo 1 > installed\n\nRUN rm -rf /out/etc/apk /out/lib/apk /out/var/cache\n\nWORKDIR /out\n\nRUN ln -s /lib /lib64\n\nENV KUBECTL_VERSION v1.9.1\nRUN curl -f --silent --location \"https://dl.k8s.io/${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" --output usr/local/bin/kubectl \\\n    && chmod +x usr/local/bin/kubectl\n\nENV DOCKER_VERSION 18.03.0\nRUN curl -f --silent --location \"https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}-ce.tgz\" \\\n    | tar xz docker/docker && mv docker/docker usr/local/bin/docker && rm -rf docker\n\nENV GCLOUD_VERSION 196.0.0\nRUN curl -f --silent --location \"https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz\" \\\n    | tar xz \\\n    && pip install --no-cache-dir --root=/out crcmod==1.7\n\nRUN mkdir -p /out/workspace\n\nCOPY in-cluster-config.yaml /out/etc/\nCOPY gcloud-git.sh /out/etc/profile.d/\nCOPY clone-repos.sh /out/usr/local/bin\n\nFROM stefanprodan/loadtest as loadtest\n\nFROM scratch\n\nWORKDIR /workspace\nENV KUBECONFIG /etc/in-cluster-config.yaml\nENTRYPOINT [ \"node\", \"/src/c9/core/server.js\", \"--listen\", \"0.0.0.0\", \"--port\", \"8080\", \"-w\", \"/workspace\" ]\nCOPY --from=build  /out /\nCOPY --from=loadtest /go/bin/hey /usr/local/bin/hey\n"
}