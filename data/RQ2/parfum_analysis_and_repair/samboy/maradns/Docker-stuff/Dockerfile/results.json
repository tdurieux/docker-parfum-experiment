{
  "startTime": 1674252548937,
  "endTime": 1674252549815,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 35,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 25,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 34,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 29,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 25,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 34,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 8,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 29,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a Dockerfile to make a Docker image to test installing MaraDNS on\n# a fresh Ubuntu 20.04 virtual machine.\n# This image can also run the \"one source of truth\" tests\n\nFROM ubuntu:20.04\nCOPY killall /usr/bin/\nCOPY rg32hash.tar.gz /tmp/\nCOPY run.tests.sh /\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install unattended-upgrades && \\\n        unattended-upgrades -d && apt-get -y --no-install-recommends install gcc && \\\n        apt-get -y --no-install-recommends install git && \\\n\tapt-get -y --no-install-recommends install make && cd /tmp && git clone \\\n\thttps://github.com/samboy/MaraDNS && cd MaraDNS && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && export FLAGS=-O3 && \\\n\tcd deadwood-* && cd src/ && ./make.version.h && \\\n\tmake -f Makefile.sl6 && cp Deadwood /usr/local/sbin/ && \\\n\tapt-get -y --no-install-recommends install net-tools && \\\n\tcp /tmp/MaraDNS/tools/askmara-tcp /usr/bin/ && \\\n\tcp /tmp/MaraDNS/tools/OneSourceOfTruth/do.osot.tests /tmp && \\\n\trm -fr /tmp/MaraDNS && cd /tmp && tar xvzf rg32hash.tar.gz && \\\n\tcd rg32hash-source && make && cp rg32hash /usr/bin && \\\n\tmkdir /etc/deadwood/ && apt-get -y --no-install-recommends install valgrind && \\\n\tapt-get -y --no-install-recommends install clang && apt-get -y --no-install-recommends install diffutils && rm rg32hash.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nCMD [\"/bin/bash\"]\n"
}