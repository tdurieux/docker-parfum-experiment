{
  "startTime": 1674253904497,
  "endTime": 1674253905541,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17-alpine\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=1000\n\n# Setup user\nRUN adduser $USERNAME -s /bin/sh -D -u $USER_UID $USER_GID && \\\n    mkdir -p /etc/sudoers.d && \\\n    echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME && \\\n    chmod 0440 /etc/sudoers.d/$USERNAME\n\n# Add dependencies.\nRUN apk add --no-cache git git-lfs --update-cache --repository http://dl-3.alpinelinux.org/alpine/edge/main --allow-untrusted\nRUN apk add --no-cache bash curl gnupg\nRUN apk add -q --update --progress --no-cache sudo openssh-client zsh\n\nUSER root\n\n# # Add linux brew.\n# RUN mkdir -p /home/linuxbrew\n# RUN chown -R vscode:vscode  /home/linuxbrew\n# RUN /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"\n# ENV PATH=/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:$PATH\n# RUN echo \"eval \\$($(brew --prefix)/bin/brew shellenv)\" >>~/.zshrc\n# RUN brew install shfmt shellcheck\n# RUN rm -rf ~/.cache\n\n# Add zsh shell setup.\nRUN apk add --no-cache perl ncurses\nCOPY .zshrc /home/vscode/.zshrc\nENV LANG=en_US.UTF-8\nRUN /bin/zsh -c \"source /home/vscode/.zshrc\"\n\n# Install Go tools\nRUN go get github.com/mdempsky/gocode\nRUN go get github.com/uudashr/gopkgs/v2/cmd/gopkgs\nRUN go get github.com/ramya-rao-a/go-outline\nRUN go get github.com/acroca/go-symbols\nRUN go get golang.org/x/tools/cmd/guru\nRUN go get golang.org/x/tools/cmd/gorename\nRUN go get github.com/cweill/gotests\nRUN go get github.com/fatih/gomodifytags\nRUN go get github.com/josharian/impl\nRUN go get github.com/davidrjenni/reftools/cmd/fillstruct\nRUN go get github.com/godoctor/godoctor\nRUN go get github.com/go-delve/delve/cmd/dlv\nRUN go get github.com/stamblerre/gocode\nRUN go get github.com/rogpeppe/godef\nRUN go get golang.org/x/tools/cmd/goimports\nRUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.34.1\n\n# Shellcheck and shellformat\nRUN curl -fsSL https://github.com/mvdan/sh/releases/download/v3.1.1/shfmt_v3.1.1_linux_amd64 -o /usr/local/bin/shfmt \\\n    && chmod +x /usr/local/bin/shfmt \\\n    && shfmt --version\nRUN T=$(mktemp); curl -fsSL https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz -o \"$T\" \\\n    && tar -xf \"$T\" --strip-components=1 -C /usr/local/bin/ \\\n    && chmod +x /usr/local/bin/shellcheck \\\n    && shellcheck --version\n\n# Githooks settings\nENV GITHOOKS_REPO=\"/workspaces/githooks\"\nENV GH_TEST_BIN=\"/workspaces/githooks/githooks/bin\"\n\nRUN chown -R vscode:vscode \"$GOPATH\"\nUSER vscode"
}