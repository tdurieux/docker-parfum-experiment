{
  "startTime": 1674215257485,
  "endTime": 1674215258125,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Creates image to be used as an executable container that performs a pg_restore against an already existing database\n# docker build -f hedera-mirror-importer/src/test/resources/scripts/restore-client/Dockerfile ./hedera-mirror-importer/src/test/resources/scripts/ --build-arg dumpfile=testnet_100k_pgdump.gz --build-arg jsonkeyfile=bucket-download-key.json -t gcr.io/mirrornode/hedera-mirror-node/postgres-restore-client:latest\nFROM alpine:latest AS build\n\n# install gcloud tools\nRUN apk --update --no-cache add curl python3\nRUN curl -f https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz > /tmp/google-cloud-sdk.tar.gz\nRUN tar -C /usr/local/ -xvf /tmp/google-cloud-sdk.tar.gz && rm /tmp/google-cloud-sdk.tar.gz\nRUN /usr/local/google-cloud-sdk/install.sh\n\nARG dumpfile\nARG jsonkeyfile\n\n# pull in key file and set up account\nCOPY ./$jsonkeyfile /tmp/config.json\nRUN /usr/local/google-cloud-sdk/bin/gcloud auth activate-service-account --key-file /tmp/config.json\n\n# download file from remote bucket and remove key file\nRUN /usr/local/google-cloud-sdk/bin/gsutil cp gs://hedera-mirror-dev/database/$dumpfile /tmp/pgdump.gz\n\nFROM alpine:latest\nCOPY --from=build /tmp/pgdump.gz /tmp/pgdump.gz\n\n# install postgres-client\nRUN apk --update add postgresql-client && rm -rf /var/cache/apk/*\n\nENV DB_NAME mirror_node\nENV DB_USER mirror_node\nENV DB_PASS mirror_node_pass\nENV DB_PORT 5432\n\n# pull in restore file to be run on startup of container\nCOPY ./restore.sh /tmp/restore.sh\nRUN chmod 755 /tmp/restore.sh\n\nENTRYPOINT /tmp/restore.sh\n\n# docker run --network=\"host\" -d -e DB_PORT=6432 gcr.io/mirrornode/hedera-mirror-node/postgres-restore-client\n"
}