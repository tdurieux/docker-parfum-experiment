{
  "startTime": 1674253821796,
  "endTime": 1674253822967,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6-stretch\n\nRUN mkdir -p /provisioning\nWORKDIR /provisioning\n\n# Install OS dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      build-essential \\\n      dialog \\\n      curl \\\n      less \\\n      nano \\\n      unzip \\\n      vim \\\n      htop \\\n      gcc \\\n      libgeos-dev \\\n      zlib1g-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Get libgeos for Python Shapely package\n# https://trac.osgeo.org/geos/\nARG GEOS_VERSION=3.6.2\nRUN echo \"Installing GEOS libraries...\" && \\\n    mkdir -p /provisioning/geos && \\\n    cd /provisioning/geos && \\\n    curl -f -# -O http://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 && \\\n    tar -xjf geos-${GEOS_VERSION}.tar.bz2 && \\\n    cd geos-${GEOS_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j$(python -c 'import multiprocessing; print(multiprocessing.cpu_count())') && \\\n    make install && \\\n    ldconfig -v && \\\n    rm -rf /provisioning/geos* && rm geos-${GEOS_VERSION}.tar.bz2\n\n# Get ESRI FileGDB libraries for Fiona/Geopandas Python packages\n# http://appsforms.esri.com/products/download/\nARG FILEGDB_VERSION=1_5\nRUN echo \"Installing ESRI FileGDB libraries...\" && \\\n    mkdir -p /provisioning/filegdb && \\\n    curl -f -L -o filegdb_api_${FILEGDB_VERSION}-64.tar.gz https://www.dropbox.com/s/xi11vshwt9uojsy/FileGDB_API_1_5_64gcc51.tar.gz?dl=1 && \\\n    tar -zxvf filegdb_api_${FILEGDB_VERSION}-64.tar.gz && \\\n    cp -r FileGDB_API-64gcc51/lib/* /usr/local/lib && \\\n    cp -r FileGDB_API-64gcc51/include/* /usr/local/include && \\\n    ldconfig -v && \\\n    rm -rf /provisioning/filegdb* /provisioning/FileGDB* && rm filegdb_api_${FILEGDB_VERSION}-64.tar.gz\n\n# Compile GDAL with FileGDB support for Fiona/Geopandas Python packages\nRUN echo \"Installing GDAL libraries...\" && \\\n    mkdir -p /provisioning/gdal && \\\n    cd /provisioning/gdal && \\\n    curl -f -# -o gdal-2.2.1.tar.gz https://download.osgeo.org/gdal/2.2.1/gdal-2.2.1.tar.gz && \\\n    tar -zxvf gdal-2.2.1.tar.gz && \\\n    cd /provisioning/gdal/gdal-2.2.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/ --with-python --with-fgdb && \\\n    make -j$(python -c 'import multiprocessing; print(multiprocessing.cpu_count())') && \\\n    make install && \\\n    rm -rf /provisioning/gdal* && rm gdal-2.2.1.tar.gz\n\nRUN echo \"Installing Spatial Index library...\" && \\\n    mkdir -p /provisioning/spatialindex && \\\n    cd /provisioning/spatialindex && \\\n    curl -f -# -O http://download.osgeo.org/libspatialindex/spatialindex-src-1.8.5.tar.gz && \\\n    tar -xzf spatialindex-src-1.8.5.tar.gz && \\\n    cd spatialindex-src-1.8.5 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && \\\n    make -j$(python -c 'import multiprocessing; print(multiprocessing.cpu_count())') && \\\n    make install && \\\n    ldconfig && \\\n    rm -rf /provisioning/spatialindex* && rm spatialindex-src-1.8.5.tar.gz\n\nRUN echo \"Installing Proj4 library...\" && \\\n    mkdir -p /provisioning/proj4 && \\\n    cd /provisioning/proj4 && \\\n    curl -f -# -O http://download.osgeo.org/proj/proj-4.9.3.tar.gz && \\\n    tar -xzf proj-4.9.3.tar.gz && \\\n    cd proj-4.9.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j$(python -c 'import multiprocessing; print(multiprocessing.cpu_count())') && \\\n    make install && \\\n    ldconfig -v && \\\n    rm -rf /provisioning/proj4 && rm proj-4.9.3.tar.gz\n\n# basemap (incorrectly) requires numpy to be installed *before* installing it\nRUN pip install --no-cache-dir --upgrade numpy && \\\n    echo \"Installing Basemap plotting library...\" && \\\n    mkdir -p /provisioning/matplotlib-basemap && \\\n    cd /provisioning/matplotlib-basemap && \\\n    curl -f -# -o basemap-1.0.7rel.tar.gz https://codeload.github.com/matplotlib/basemap/tar.gz/v1.0.7rel && \\\n    tar -xzf basemap-1.0.7rel.tar.gz && \\\n    cd basemap-1.0.7rel && \\\n    python setup.py install && \\\n    rm -rf /provisioning/matplotlib-basemap && rm basemap-1.0.7rel.tar.gz\n\nRUN echo \"Installing graph-tool\" && \\\n    echo \"deb http://downloads.skewed.de/apt/stretch stretch main\" | tee -a /etc/apt/sources.list && \\\n    echo \"deb-src http://downloads.skewed.de/apt/stretch stretch main\" | tee -a /etc/apt/sources.list && \\\n    apt-key adv --keyserver pgp.skewed.de --recv-key 612DEFB798507F25 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y python3-graph-tool && \\\n    echo \"export PYTHONPATH=/usr/lib/python3/dist-packages/\" >> ~/.bashrc && \\\n    pip install --no-cache-dir pycairo && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"Installing graphviz\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y xdg-utils && \\\n    apt-get install --no-install-recommends -y graphviz && \\\n    pip install --no-cache-dir pygraphviz && rm -rf /var/lib/apt/lists/*;"
}