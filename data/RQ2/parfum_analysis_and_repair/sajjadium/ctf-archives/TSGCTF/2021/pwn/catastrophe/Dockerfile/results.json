{
  "startTime": 1674255324228,
  "endTime": 1674255325313,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 8,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 8,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt update && \\\n        apt -y upgrade && \\\n        apt install --no-install-recommends -y python3 build-essential wget && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://github.com/ocaml/ocaml/archive/refs/tags/4.12.0.tar.gz\nRUN tar zxvf 4.12.0.tar.gz && mv ocaml-4.12.0 ocaml && rm 4.12.0.tar.gz\n\nCOPY ./pwn.patch /pwn.patch\n\nWORKDIR /\n\nRUN patch -s -p0 < /pwn.patch\nWORKDIR /ocaml\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make world.opt && make install\n\nRUN groupadd -r user && useradd -r -g user user\n\nCOPY --chown=root:user ./env /env\nCOPY --chown=root:user ./flag /env/flag\n\nWORKDIR /env\nRUN chmod 444 flag\nRUN mv flag flag-$(md5sum flag | awk '{print $1}')\n\nUSER user\n\n\nENV PYTHONUNBUFFERED=x\nENV PWN=x\nCMD [\"./run.py\"]\n"
}