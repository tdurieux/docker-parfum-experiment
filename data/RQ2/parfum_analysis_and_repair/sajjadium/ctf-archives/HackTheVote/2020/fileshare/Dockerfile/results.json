{
  "startTime": 1674253737617,
  "endTime": 1674253738354,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NOTE: the container is provided solely for your debugging convenience should you choose to use it\n# the actual challenge setup should be identical, except:\n#  its a normal ubuntu 20.04 box, not a container\n#  the entrypoint binary `wrapper` is executed without any arguments\n#  there is a 2 minute timeout\n\n# docker build -t fileshare .\n# docker run --privileged -itd --name fileshare -p 1717:1717 -p 3434:3434 fileshare\n\nFROM ubuntu:20.04\n\n# just so tzdata installs without complaining\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends xinetd gdb python3 -y && rm -rf /var/lib/apt/lists/*;\n\nCOPY wrapper fileshare cleaner.py flag /\nRUN mv flag flag-$(head -c 32 /dev/urandom | sha256sum | cut -d ' ' -f1)\nRUN tar czhf /libs.tar.gz lib/x86_64-linux-gnu/libc.so.6 lib64/ld-linux-x86-64.so.2 lib/x86_64-linux-gnu/libpthread.so.0 lib64/ld-linux-x86-64.so.2 bin/sh\n\nCOPY xinetd.conf /etc/xinetd.d/chall\nRUN echo '#!/bin/sh\\nexec /wrapper -p 3434' > /chall && chmod +x /chall\nRUN echo '#!/bin/sh\\npython3 /cleaner.py &\\nexec xinetd -dontfork' > /init && chmod +x /init\n\nENTRYPOINT [\"/init\"]\n"
}