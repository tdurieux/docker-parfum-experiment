diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sajjadium/ctf-archives/HXP/2020/web/hackme/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sajjadium/ctf-archives/HXP/2020/web/hackme/Dockerfile/repaired.Dockerfile
index ee0151a..ab7c134 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sajjadium/ctf-archives/HXP/2020/web/hackme/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sajjadium/ctf-archives/HXP/2020/web/hackme/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# echo 'hxp{FLAG}' > flag.txt && docker build -t hackme . && docker run --cap-add=SYS_ADMIN --security-opt apparmor=unconfined  -ti -p 8080:80 hackme
-
 # I really wanted to run this using their default image (FROM nabo.codimd.dev/hackmdio/hackmd:2.2.0).
 # Unfortunately, they are still shipping jQuery 3.4.1 and some other stuff with published XSS CVEs.
 # Instead, we have to clone their deployment process from
@@ -14,7 +12,7 @@ RUN rmdir /home/hackmd/app && \
     git clone https://github.com/hackmdio/codimd.git /home/hackmd/app && \
     cd /home/hackmd/app && \
     git checkout master
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 RUN set -xe && \
     npm audit fix && \
@@ -26,7 +24,7 @@ RUN set -xe && \
     sed -i -e 's/"serialize-javascript": "^.*"/"serialize-javascript": "^3.1.0"/' node_modules/uglifyjs-webpack-plugin/package.json node_modules/copy-webpack-plugin/package.json && \
     sed -i -En '$!N; /("serialize-javascript":\s+\{\s+"version": )"1.9.1"/{N;N;N;N;d} ; P ; D' package-lock.json && \
     npm cache clear --force && \
-    npm install serialize-javascript@3.1.0 --no-save
+    npm install serialize-javascript@3.1.0 --no-save && npm cache clean --force;
 
 RUN npm run build && \
     cp ./deployments/docker-entrypoint.sh ./ && \
@@ -59,7 +57,7 @@ RUN apt-get update && \
         python3-selenium \
         chromium-driver \
         uuid-runtime \
-    && rm -rf /var/lib/apt/lists/
+    && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;
 
 # Copy things we'll always need
 COPY ynetd /sbin/