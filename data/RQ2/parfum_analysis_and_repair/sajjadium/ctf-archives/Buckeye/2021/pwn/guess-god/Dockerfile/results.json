{
  "startTime": 1674251035324,
  "endTime": 1674251036290,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 23,
        "columnStart": 25,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 0,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.04@sha256:e082dd99faca91acb1f43347bf8b50ac9b9d2fdcc72253e29fe65b6b1eb1445d\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install nsjail\nRUN apt-get -y update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    bison \\\n    flex \\\n    gcc \\\n    g++ \\\n    git \\\n    libprotobuf-dev \\\n    libnl-route-3-dev \\\n    libtool \\\n    make \\\n    pkg-config \\\n    protobuf-compiler \\\n    uidmap \\\n    cmake \\\n    iptables \\\n    net-tools \\\n    iproute2 \\\n    python3-venv \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN git clone https://github.com/google/nsjail.git\nRUN cd /nsjail && make && mv /nsjail/nsjail /bin && rm -rf -- /nsjail\n\nRUN apt-get update && \\\n apt-get install --no-install-recommends -y \\\ngcc uidmap netcat cmake && \\\nrm -rf /var/lib/apt/lists/* && \\\nuseradd -m ctf && \\\nmkdir -p /home/ctf/challenge/\n\nRUN mkdir /chroot/ && \\\nchown root:ctf /chroot && \\\nchmod 770 /chroot\n\n# Install oatpp\nRUN git clone https://github.com/oatpp/oatpp.git\nRUN cd /oatpp && git checkout 1.2.5 && mkdir build && cd build && cmake .. && make install\n\nCOPY ./ /home/ctf/challenge/src/\n\nWORKDIR /home/ctf/challenge/src/\nRUN mkdir -p src/build && cd src/build && cmake .. && make\nRUN cp src/build/flag_server-exe src/build/libkylezip.so flag.txt /home/ctf/challenge/\n\n\nWORKDIR /home/ctf/challenge/\n\nRUN mv src/jail.cfg src/server.py src/pow.py src/setup.sh src/nsjail.sh / && \\\nrm -rf src/ && \\\nchown -R root:ctf . && \\\nchmod 550 flag_server-exe && \\\nchown root:ctf / /home /home/ctf/ && \\\nchmod 440 flag.txt\n\n\n# venv for POW\nRUN python3 -m venv /venv\nRUN bash -c \"source /venv/bin/activate && pip3 install ecdsa requests proxy-protocol\"\n\n\nEXPOSE 9000\nCMD [\"/setup.sh\"]\n"
}