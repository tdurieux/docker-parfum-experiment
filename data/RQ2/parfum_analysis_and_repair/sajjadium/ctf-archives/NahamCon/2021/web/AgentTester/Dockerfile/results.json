{
  "startTime": 1674251020257,
  "endTime": 1674251021617,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 21,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 21,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.8-slim\n\nRUN apt update -y && apt install --no-install-recommends -y gcc libssl-dev nodejs npm nginx curl && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y install chromium \\\n    chromium-l10n \\\n    fonts-liberation \\\n    fonts-roboto \\\n    hicolor-icon-theme \\\n    libcanberra-gtk-module \\\n    libexif-dev \\\n    libgl1-mesa-dri \\\n    libgl1-mesa-glx \\\n    libpangox-1.0-0 \\\n    libv4l-0 \\\n    fonts-symbola \\\n    --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nCOPY app/ .\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nRUN echo -e \"uwsgi\\nuwsgi\" | adduser uwsgi\n\nRUN chmod -R 777 /app/backend/DB\n\nWORKDIR /app/browser\n\n# Install puppeteer so it's available in the container.\nRUN npm i puppeteer && npm cache clean --force;\n\nWORKDIR /app\n\nRUN rm /etc/nginx/sites-enabled/default\n\n# Replace with our own nginx.conf\nCOPY ./nginx.conf /etc/nginx/sites-enabled/\n\nADD ./run.sh /root\nRUN chmod +x /root/run.sh\n\nENV BASE_URL \"<REDACTED>\"\nEXPOSE 80\nCMD [\"/root/run.sh\"]\n"
}