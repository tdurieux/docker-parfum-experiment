{
  "startTime": 1674252993357,
  "endTime": 1674252994038,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Install a dart container for demonstration purposes.\n# Your dart server app will be accessible via HTTP on container port 8080. The port can be changed.\n# You should adapt this Dockerfile to your needs.\n# If you are new to Dockerfiles please read\n# http://docs.docker.io/en/latest/reference/builder/\n# to learn more about Dockerfiles.\n#\n# This file is hosted on github. Therefore you can start it in docker like this:\n# > docker build -t containerdart github.com/nkratzke/containerdart\n# > docker run -p 8888:8080 -d containerdart\n\nFROM stackbrew/ubuntu:13.10\nMAINTAINER Nane Kratzke <nane@nkode.io>\n\n# Install Dart SDK. Do not touch this until you know what you are doing.\n# We do not install darteditor nor dartium because this is a server container.\n# See: http://askubuntu.com/questions/377233/how-to-install-google-dart-in-ubuntu\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y software-properties-common python-software-properties && rm -rf /var/lib/apt/lists/*;\nRUN apt-add-repository ppa:hachre/dart\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y dartsdk && rm -rf /var/lib/apt/lists/*;\n\n# Install the dart server app.\n# Comment in necessary parts of your dart package necessary to run \"pub build\"\n# and necessary for your working app.\n# Please check the following links to learn more about pub and build dart apps\n# automatically.\n# - https://www.dartlang.org/tools/pub/\n# - https://www.dartlang.org/tools/pub/package-layout.html\n# - https://www.dartlang.org/tools/pub/transformers\nADD pubspec.yaml  /container/pubspec.yaml\n\n# comment in if you need assets for working app\n# ADD asset       /container/asset\n\n# comment in if you need benchmarks to run pub build\n# ADD benchmark   /container/benchmark\n\n# comment in if you need docs to run pub build\n# ADD doc         /container/doc\n\n# comment in if you need examples to run pub build\n# ADD example     /container/example\n\n# comment in if you need test to run pub build\n# ADD test        /container/test\n\n# comment in if you need tool to run pub build     \n# ADD tool        /container/tool\n\n# comment in if you need lib to run pub build\n# ADD lib         /container/lib\n\nADD bin          /container/bin      \n\n# comment out if you do not need web for working app\nADD web          /container/web\n\n# Build the app. Do not touch this.\nWORKDIR /container\nRUN pub build\n\n# Expose port 8080. You should change it to the port(s) your app is serving on.\nEXPOSE 8080\n\n# Entrypoint. Whenever the container is started the following command is executed in your container.\n# In most cases it simply starts your app.\nWORKDIR /container/bin\nENTRYPOINT [\"dart\"]\n\n# Change this to your starting dart.\nCMD [\"httpserver.dart\"]"
}