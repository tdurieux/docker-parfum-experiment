{
  "startTime": 1674216877919,
  "endTime": 1674216878649,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 39,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 78,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# LICENCE: This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU Affero General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU Affero General Public License for more details.\n#\n# You should have received a copy of the GNU Affero General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n#\n# Docker container to run the Geany website locally for development.\n# This is not intended for production!!\n# Before using this image, please get yourself familiar with Docker and\n# carefully review this Dockerfile before using it!\n#\n# Build image:\n# docker build -f docker/Dockerfile -t geany_dev .\n# Run container:\n# docker run --rm -it --user \"$(id --user):$(id --group)\" --mount \"type=bind,src=$(pwd),dst=/app\" -p 8000:8000 --name geany_dev geany_dev:latest\n\n# Intermediate build container\nFROM debian:stretch-slim AS builder\n\nENV LANG=C.UTF-8 \\\n    DEBIAN_FRONTEND=noninteractive \\\n    # Extra python env\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_DISABLE_PIP_VERSION_CHECK=1 \\\n    PIP_FORMAT=\"columns\" \\\n    PIP_NO_BINARY=\":all:\" \\\n    PIP_CACHE_DIR=\"/tmp/pip\" \\\n    PIP_TIMEOUT=60\n\nRUN apt-get update && \\\n    apt-get install -y --assume-yes --no-install-recommends \\\n        python3 \\\n        build-essential \\\n        git \\\n        python3-pip \\\n        python3-wheel \\\n        python3-venv \\\n        python3-dev \\\n        default-libmysqlclient-dev \\\n        libffi-dev \\\n        libjpeg-dev \\\n        libmemcached-dev \\\n        zlib1g-dev \\\n        libssl-dev && \\\n        mkdir -p /app /data /venv && \\\n        chown -R nobody:nogroup /app /data /venv && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\nUSER nobody:nogroup\nCOPY requirements.txt /data/\n# Install Python deps\nRUN python3 -m venv --copies /venv && \\\n    /venv/bin/pip install -U pip setuptools && \\\n    /venv/bin/pip install -r /data/requirements.txt\n\n\n# App container\nFROM debian:stretch-slim AS app\n\nENV LANG=C.UTF-8 \\\n    DEBIAN_FRONTEND=noninteractive \\\n    # Extra python env\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    # Path to local settings\n    LOCAL_SETTINGS_PY=/app/docker/local_settings.docker.py\n\n# do all of this in one RUN to limit final image size\nRUN apt-get update && \\\n    apt-get install -y --assume-yes --no-install-recommends \\\n        ca-certificates \\\n        intltool \\\n        libjpeg62-turbo \\\n        libmariadbclient18 \\\n        libmemcached11 \\\n        libssl1.1 \\\n        python3 \\\n        sqlite3 \\\n        wget \\\n        zlib1g && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\nUSER nobody:nogroup\n\n# copy in Python environment\nCOPY --from=builder /venv /venv\n# copy helpers and configs\nCOPY ./docker/entrypoint.sh /data/\n\nEXPOSE 8000\nCMD [\"/bin/bash\", \"/data/entrypoint.sh\"]\n"
}