diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mit-spark/kimera-vio/Dockerfile_16_04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mit-spark/kimera-vio/Dockerfile_16_04/repaired.Dockerfile
index 3c904b3..91405d7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mit-spark/kimera-vio/Dockerfile_16_04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mit-spark/kimera-vio/Dockerfile_16_04/repaired.Dockerfile
@@ -11,19 +11,19 @@ ENV DIRPATH /root/
 WORKDIR $DIRPATH
 
 #Install build dependencies
-RUN apt-get update && apt-get install -y --no-install-recommends apt-utils
-RUN apt-get update && apt-get install -y git cmake build-essential pkg-config
+RUN apt-get update && apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update && apt-get install --no-install-recommends -y git cmake build-essential pkg-config && rm -rf /var/lib/apt/lists/*;
 
 # Install xvfb to provide a display to container for GUI realted testing.
-RUN apt-get update && apt-get install -y xvfb
+RUN apt-get update && apt-get install --no-install-recommends -y xvfb && rm -rf /var/lib/apt/lists/*;
 
 # Install OpenCV for Ubuntu 18.04
-RUN apt-get update && apt-get install -y \
-      unzip  \
+RUN apt-get update && apt-get install --no-install-recommends -y \
+      unzip \
       libjpeg-dev libpng-dev libtiff-dev \
       libvtk5-dev \
       libgtk2.0-dev \
-      libatlas-base-dev gfortran
+      libatlas-base-dev gfortran && rm -rf /var/lib/apt/lists/*;
 
 RUN git clone https://github.com/opencv/opencv.git
 RUN cd opencv && \
@@ -48,7 +48,7 @@ ADD https://cmake.org/files/v3.15/cmake-3.15.7-Linux-x86_64.sh /cmake-3.15.7-Lin
 RUN mkdir /opt/cmake
 RUN sh /cmake-3.15.7-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
 RUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
-RUN apt-get update && apt-get install -y libboost-all-dev libtbb-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libboost-all-dev libtbb-dev && rm -rf /var/lib/apt/lists/*;
 ADD https://api.github.com/repos/borglab/gtsam/git/refs/heads/master version.json
 RUN git clone https://github.com/borglab/gtsam.git
 RUN cd gtsam && \
@@ -88,10 +88,10 @@ RUN cd Kimera-RPGO && \
       make -j$(nproc)
 
 # Install glog, gflags
-RUN apt-get update && apt-get install -y libgflags2v5 libgflags-dev libgoogle-glog0v5 libgoogle-glog-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libgflags2v5 libgflags-dev libgoogle-glog0v5 libgoogle-glog-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Pangolin
-RUN apt-get update && apt-get install -y libgl1-mesa-dev libglew-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libgl1-mesa-dev libglew-dev && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://github.com/stevenlovegrove/Pangolin.git
 RUN cd Pangolin && \
       mkdir build && \