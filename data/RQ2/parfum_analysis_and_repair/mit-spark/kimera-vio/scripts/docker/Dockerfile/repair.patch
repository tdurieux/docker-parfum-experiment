diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mit-spark/kimera-vio/scripts/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mit-spark/kimera-vio/scripts/docker/Dockerfile/repaired.Dockerfile
index 74ff8b0..815ed7c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mit-spark/kimera-vio/scripts/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mit-spark/kimera-vio/scripts/docker/Dockerfile/repaired.Dockerfile
@@ -11,14 +11,14 @@ ENV DIRPATH /root
 WORKDIR $DIRPATH
 
 #Install build dependencies
-RUN apt-get update && apt-get install -y --no-install-recommends apt-utils
-RUN apt-get update && apt-get install -y git cmake
+RUN apt-get update && apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update && apt-get install --no-install-recommends -y git cmake && rm -rf /var/lib/apt/lists/*;
 
 # Install xvfb to provide a display to container for GUI related testing.
-RUN apt-get update && apt-get install -y xvfb
+RUN apt-get update && apt-get install --no-install-recommends -y xvfb && rm -rf /var/lib/apt/lists/*;
 
 # Install GTSAM
-RUN apt-get update && apt-get install -y libboost-all-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libboost-all-dev && rm -rf /var/lib/apt/lists/*;
 ADD https://api.github.com/repos/borglab/gtsam/git/refs/heads/master version.json
 RUN git clone https://github.com/borglab/gtsam.git
 RUN cd gtsam && \
@@ -29,12 +29,12 @@ RUN cd gtsam && \
     make -j$(nproc) install
 
 # Install OpenCV for Ubuntu 18.04
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
       build-essential cmake unzip pkg-config \
       libjpeg-dev libpng-dev libtiff-dev \
       libvtk6-dev \
       libgtk-3-dev \
-      libatlas-base-dev gfortran
+      libatlas-base-dev gfortran && rm -rf /var/lib/apt/lists/*;
 
 RUN git clone https://github.com/opencv/opencv.git
 RUN cd opencv && \
@@ -84,12 +84,12 @@ RUN cd Kimera-RPGO && \
 
 ## [Optional] Install Kimera-VIO-Evaluation from PyPI
 RUN apt-get update && \
-    apt-get install software-properties-common -y
+    apt-get install --no-install-recommends software-properties-common -y && rm -rf /var/lib/apt/lists/*;
 # Get python3
 RUN apt-get update && \
     add-apt-repository ppa:deadsnakes/ppa
 RUN apt-get update && \
-    apt-get install -y python3.5 python3.5-dev python-pip python3-pip python-tk python3-tk
+    apt-get install --no-install-recommends -y python3.5 python3.5-dev python-pip python3-pip python-tk python3-tk && rm -rf /var/lib/apt/lists/*;
 RUN python3.5 -m pip install PyQt5==5.14
 
 # Install evo-1 for evaluation
@@ -117,15 +117,15 @@ RUN touch /root/.ssh/known_hosts
 RUN ssh-keyscan -t rsa github.com >> /root/.ssh/known_hosts
 
 # Install glog, gflags
-RUN apt-get update && apt-get install -y libgflags2.2 libgflags-dev libgoogle-glog0v5 libgoogle-glog-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libgflags2.2 libgflags-dev libgoogle-glog0v5 libgoogle-glog-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Kimera-VIO
 RUN git clone https://github.com/MIT-SPARK/Kimera-VIO.git
 RUN cd Kimera-VIO && mkdir build && cd build && cmake .. && make -j$(nproc)
 
 # Download and extract EuRoC dataset.
-RUN apt-get update && apt-get install -y wget
-RUN wget http://robotics.ethz.ch/~asl-datasets/ijrr_euroc_mav_dataset/vicon_room1/V1_01_easy/V1_01_easy.zip
+RUN apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;
+RUN wget https://robotics.ethz.ch/~asl-datasets/ijrr_euroc_mav_dataset/vicon_room1/V1_01_easy/V1_01_easy.zip
 RUN mkdir -p $DIRPATH/euroc && unzip V1_01_easy.zip -d $DIRPATH/euroc
 
 # Yamelize euroc dataset