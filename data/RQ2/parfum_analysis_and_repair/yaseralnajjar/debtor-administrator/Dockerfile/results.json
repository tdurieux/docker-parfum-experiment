{
  "startTime": 1674253608423,
  "endTime": 1674253608943,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6.6-alpine3.8 as setup-python-alpine\n\nWORKDIR /debtoradmin/app\n\n# Needed for pycurl\nENV PYCURL_SSL_LIBRARY=openssl\n\n# Install libraries\nRUN apk update \\\n    && apk upgrade \\\n    && apk add --no-cache --virtual deps gcc python3-dev linux-headers musl-dev postgresql-dev \\\n    && apk add --no-cache libpq \\\n    && apk add --no-cache --virtual .build-dependencies build-base curl-dev \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir --upgrade setuptools \\\n    && pip install --no-cache-dir pycurl \\\n    && apk del .build-dependencies\n\n# Install python dependencies\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Clean up\nRUN apk del deps\n\n# Downloading django app deps finishes here\n\n\n\n\nFROM node:8.11.4-alpine as build-spa-stage\nARG GOOGLE_OAUTH_CLIENT_ID\n\nWORKDIR /debtoradmin/app\n\n# Install js dependencies\nCOPY package.json yarn.lock ./\nRUN yarn install && yarn cache clean;\n\n# Build vue app\nCOPY vue.config.js .\nCOPY public ./public/\nCOPY src ./src/\nRUN yarn build\n\n# Build vue app finishes here\n\n\n\n\nFROM setup-python-alpine\nARG IS_BUILD=true\nARG HOST_ENV\n\nWORKDIR /debtoradmin/app\nCOPY --from=build-spa-stage /debtoradmin/app/ .\n\nCOPY manage.py .\nCOPY backend/ ./backend/\n\n# Collect static files\nRUN python manage.py collectstatic --noinput"
}