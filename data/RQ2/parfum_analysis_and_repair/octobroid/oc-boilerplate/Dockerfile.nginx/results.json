{
  "startTime": 1674251494358,
  "endTime": 1674251495046,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Composer Dependencies\n#\nFROM composer:2 as composer\nWORKDIR /usr/local/src/\nCOPY auth.json composer.json composer.lock ./\nRUN composer install --ignore-platform-reqs --no-scripts --no-autoloader --prefer-dist --no-dev --no-interaction\nRUN cp -r /usr/local/src/vendor/laravel/horizon/public /usr/local/src/vendor/horizon\n\n#\n# Runtime\n#\nFROM php:8.0-fpm-alpine\n\nARG debug\n\nUSER root\n\nRUN apk add --no-cache --update \\\n    # For zlib and gd extensions\n    freetype \\\n    freetype-dev \\\n    jpeg-dev \\\n    libjpeg-turbo-dev \\\n    libpng-dev \\\n    libwebp-dev \\\n    zlib-dev \\\n    # For zip extension\n    libzip-dev \\\n    # Extra modules\n    git \\\n    jq \\\n    mysql-client \\\n    unzip \\\n    zip \\\n    # Nginx + Supervisor\n    nginx \\\n    supervisor \\\n    && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \\\n    && docker-php-ext-install exif gd mysqli opcache pcntl pdo_mysql zip \\\n    && rm -rf /tmp/*\n\nRUN if [[ -z \"$debug\" ]] ; then { \\\n    echo 'opcache.enable_cli=1'; \\\n    echo 'opcache.validate_timestamps=0'; \\\n    echo 'opcache.revalidate_freq=2'; \\\n  } > /usr/local/etc/php/conf.d/docker-opcache.ini ; \\\n  fi\n\nRUN { \\\n    echo 'log_errors=on'; \\\n    echo 'access.log=/dev/null;' \\\n    echo 'display_errors=off'; \\\n    echo 'upload_max_filesize=32M'; \\\n    echo 'post_max_size=32M'; \\\n    echo 'memory_limit=512M'; \\\n    echo 'expose_php=Off'; \\\n    echo 'max_input_time=-1'; \\\n    echo 'max_execution_time=300'; \\\n  } > /usr/local/etc/php/conf.d/docker-php.ini\n\nRUN echo \"* * * * * php /var/www/html/artisan schedule:run > /proc/1/fd/1\" | crontab -\n\nCOPY .docker/nginx/default.conf /etc/nginx/http.d/default.conf\n\nCOPY .docker/nginx/supervisord.conf /etc/supervisord.conf\n\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\n\nCOPY --chown=www-data --from=composer /usr/local/src/vendor ./vendor\n\nCOPY --chown=www-data ./ ./\n\nRUN composer dumpautoload \\\n    && composer clearcache\n\nEXPOSE 80\n\nCMD [ \"/usr/bin/supervisord\", \"-c\", \"/etc/supervisord.conf\" ]"
}