{
  "startTime": 1674218082761,
  "endTime": 1674218084608,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 140
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 92
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 131
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 121
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 113
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 118
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 275
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 66,
        "columnEnd": 87
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 111
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 173
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 140
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.8.2003\n\nLABEL maintainer=\"technoexpressnet@gmail.com\"\n\n# Install Required Dependencies\nRUN yum install http://mirror.centos.org/centos/7/os/x86_64/Packages/libical-3.0.3-2.el7.x86_64.rpm -y \\\n    && yum install http://yum.freepbxdistro.org/pbx/10.13.66/x86_64/RPMS/digium/libresample/0.1.3/libresample-0.1.3-11_centos6.x86_64.rpm -y \\\n    && yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm -y \\\n    && rpm -Uvh https://mirror.webtatic.com/yum/el7/webtatic-release.rpm \\\n    && yum -y install https://ftp.tu-chemnitz.de/pub/linux/dag/redhat/el7/en/x86_64/rpmforge/RPMS/denyhosts-2.6-5.el7.rf.noarch.rpm \\\n    && yum -y --enablerepo=epel install sudo icu gcc-c++ lynx tftp-server unixODBC mariadb-devel \\\n    mariadb-server mariadb mysql-connector-odbc httpd mod_ssl ncurses curl perl fail2ban \\\n    fail2ban-hostsdeny openssh-server openssh-server-sysvinit sendmail sendmail-cf \\\n    sox newt libxml2 libtiff iptables-utils iptables-services initscripts postfix mailx \\\n    audiofile gtk2 subversion unzip rsyslog git crontabs cronie cronie-anacron wget vim \\\n    uuid sqlite net-tools texinfo icu libicu-devel sysvinit-tools bind bind-utils gnutls gnutls-devel perl-devel whois at \\\n    && yum -y install http://mirror.centos.org/centos/7/os/x86_64/Packages/perl-URI-1.60-9.el7.noarch.rpm \\\n    && yum -y install perl-DBI perl-DBD-MySQL perl-Crypt-SSLeay perl-LWP-Protocol-https perl-libwww-perl && rm -rf /var/cache/yum\n\n# Install Shorewall and the fail2ban action\n# Install php 5.6 repositories and php5.6w\n# Install nodejs\nRUN yum install http://www.shorewall.net/pub/shorewall/5.1/shorewall-5.1.9/shorewall-core-5.1.9-0base.noarch.rpm -y \\\n    && yum install http://www.shorewall.net/pub/shorewall/5.1/shorewall-5.1.9/shorewall-5.1.9-0base.noarch.rpm -y \\\n    && yum install http://www.shorewall.net/pub/shorewall/5.1/shorewall-5.1.9/shorewall-init-5.1.9-0base.noarch.rpm -y \\\n    && yum install http://www.shorewall.net/pub/shorewall/5.1/shorewall-5.1.9/shorewall6-5.1.9-0base.noarch.rpm -y \\\n    && yum install fail2ban-shorewall -y \\\n    && yum -y install php56w php56w-pdo php56w-mysql php56w-mbstring php56w-pear php56w-process php56w-xml php56w-gd php56w-opcache php56w-ldap php56w-intl php56w-soap php56w-zip php56w-devel php-pecl-Fileinfo ImageMagick-devel perl-CGI php-pear-Net-Socket php-pear-Auth-SASL \\\n    && curl -f -sL https://rpm.nodesource.com/setup_11.x | bash - && yum install -y nodejs && rm -rf /var/cache/yum\n\n# Asterisk and FreePBX Repositorie\n# Install lame jansson iksemel and pjproject\n# Copy configs and set Asterisk ownership permissions\nCOPY etc /etc/\n\nRUN yum update -y \\\n    && yum -y install lame jansson pjproject iksemel \\\n    && yum -y install http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-5.el7.nux.noarch.rpm \\\n    && yum -y install mpg123 ffmpeg libde265 x265 libdvdcss gstreamer-plugins-bad-nonfree gstreamer1-plugins-bad-freeworld netpbm libungif ghostscript-fonts sharutils expect \\\n    && pear channel-update pear.php.net \\\n    && pear install Mail Net_SMTP Mail_mime MDB2_driver_mysql && rm -rf /var/cache/yum\n\n# Install Asterisk, Add Asterisk user, Download extra sounds\nRUN adduser asterisk -m -c \"Asterisk User\" \\\n    && yum install asterisk16 asterisk16-flite asterisk16-doc asterisk16-voicemail asterisk16-configs asterisk16-odbc asterisk16-resample -y \\\n    && yum install asterisk-sounds-core-* asterisk-sounds-extra-* asterisk-sounds-moh-* -y \\\n    && chown asterisk. /var/run/asterisk \\\n    && chown -R asterisk. /var/lib/asterisk \\\n    && chown -R asterisk. /var/log/asterisk \\\n    && chown -R asterisk. /var/spool/asterisk \\\n    && chown -R asterisk. /usr/lib64/asterisk \\\n    && chown -R asterisk. /var/www/ \\\n    && chown -R asterisk. /etc/asterisk \\\n    && chmod 775 /etc/asterisk/cdr_adaptive_odbc.conf && rm -rf /var/cache/yum\n\n# Fixes issue with running systemD inside docker builds\n# From https://github.com/gdraheim/docker-systemctl-replacement\nCOPY systemctl.py /usr/bin/systemctl.py\n\nRUN cp -f /usr/bin/systemctl /usr/bin/systemctl.original \\\n    && chmod +x /usr/bin/systemctl.py \\\n    && cp -f /usr/bin/systemctl.py /usr/bin/systemctl\n\nRUN systemctl stop firewalld \\\n    && systemctl disable dbus firewalld \\\n    && (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \\\n    systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n    rm -f /lib/systemd/system/multi-user.target.wants/*; \\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/basic.target.wants/*; \\\n    rm -f /lib/systemd/system/anaconda.target.wants/*; \\\n    rm -f /etc/dbus-1/system.d/*; \\\n    rm -f /etc/systemd/system/sockets.target.wants/*;\n\n# Install FreePBX\nRUN sed -i 's@ulimit @#ulimit @' /usr/sbin/safe_asterisk \\\n    && systemctl start mariadb \\\n    && mkdir -p /var/www/html/admin/modules/pm2/node/logs \\\n    && mkdir -p /var/www/html/admin/modules/ucp/node/logs \\\n    && chmod -R 775 /var/www/html/admin/modules/pm2/node \\\n    && chmod -R 775 /var/www/html/admin/modules/ucp/node \\\n    && chown -R asterisk:asterisk /var/www/html/admin/modules/pm2 \\\n    && chown -R asterisk:asterisk /var/www/html/admin/modules/ucp \\\n    && cd /usr/src \\\n    && wget -q https://mirror.freepbx.org/modules/packages/freepbx/freepbx-15.0-latest.tgz \\\n    && tar xfz freepbx-15.0-latest.tgz \\\n    && rm -f freepbx-15.0-latest.tgz \\\n    && cd freepbx \\\n    && ./start_asterisk start \\\n    && ./install -n \\\n    && rm -rf /usr/src/freepbx \\\n    && fwconsole ma downloadinstall ttsengines \\\n    && fwconsole ma downloadinstall ucp \\\n    && fwconsole ma downloadinstall ivr \\\n    && fwconsole ma downloadinstall filestore \\\n    && fwconsole ma downloadinstall backup \\\n    && fwconsole ma downloadinstall arimanager \\\n    && fwconsole ma downloadinstall asteriskinfo \\\n    && fwconsole ma downloadinstall pm2 \\\n    && fwconsole ma upgradeall \\\n    && mysql -e \"SET PASSWORD FOR 'root'@'localhost' = PASSWORD('CLEARTEXT_PASSWORD')\" \\\n    && mysql -uroot -pCLEARTEXT_PASSWORD -e \"GRANT ALL PRIVILEGES ON asterisk.* TO freepbxuser@localhost;\" \\\n    && mysql -uroot -pCLEARTEXT_PASSWORD -e \"GRANT ALL PRIVILEGES ON asteriskcdrdb.* TO freepbxuser@localhost;\" \\\n    && mysql -uroot -pCLEARTEXT_PASSWORD -e \"DELETE FROM mysql.user WHERE User=''; DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1'); DROP DATABASE IF EXISTS test; DELETE FROM mysql.db WHERE Db='test' OR Db='test\\\\_%'; FLUSH PRIVILEGES;\"\n\n# Install Webmin repositorie and Webmin\nRUN wget https://www.webmin.com/jcameron-key.asc -q && rpm --import jcameron-key.asc \\\n    && yum install webmin yum-versionlock -y && yum versionlock systemd && rm jcameron-key.asc && rm -rf /var/cache/yum\n\nRUN chmod 777 /tftpboot \\\n    && chmod 6711 /usr/bin/procmail \\\n    && chown root:root /usr/bin/procmail \\\n    && chown -R postfix:postdrop /var/spool/postfix \\\n    && touch /var/log/asterisk/full /var/log/secure /var/log/maillog /var/log/httpd/access_log /etc/httpd/logs/error_log /var/log/fail2ban.log /etc/postfix/dependent.db \\\n    && echo \"\" > /etc/postfix/transport \\\n    && echo \"mailbox_command = /bin/procmail\" >>  /etc/postfix/main.cf \\\n    && sed -i \"s@#Port 22@Port 2122@\" /etc/ssh/sshd_config \\\n    && sed -i \"s#10000#9990#\" /etc/webmin/miniserv.conf \\\n    && sed -i \"s#9000,#9990,#\" /etc/shorewall/rules \\\n    && sed -i \"s#STARTUP_ENABLED=No#STARTUP_ENABLED=Yes#\" /etc/shorewall/shorewall.conf \\\n    && sed -i \"s#DOCKER=No#DOCKER=Yes#\" /etc/shorewall/shorewall.conf \\\n    && sed -i \"s#docker0#eth0#\" /etc/shorewall/interfaces \\\n    && sed -i 's#, #\\nAfter=#' /etc/systemd/system/containerstartup.service \\\n    && sed -i 's#/etc/pki/tls/private/localhost.key#/etc/webmin/letsencrypt-key.pem#' /etc/httpd/conf.d/ssl.conf \\\n    && sed -i 's#/etc/pki/tls/certs/localhost.crt#/etc/webmin/letsencrypt-cert.pem#' /etc/httpd/conf.d/ssl.conf \\\n    && sed -i 's#localhost.key#localhost.key\\n\\tcat \\\"/etc/letsencrypt/archive/$HOSTNAME/privkey1.pem\\\" \\\"/etc/letsencrypt/archive/$HOSTNAME/cert1.pem\\\" >/etc/webmin/miniserv.pem#' /etc/containerstartup.sh \\\n    && systemctl.original disable sendmail.service \\\n    && systemctl.original enable iptables.service fail2ban.service shorewall.service mariadb.service asterisk.service httpd.service freepbx.service crond.service rsyslog.service sshd-keygen.service sshd.service postfix.service named.service webmin.service containerstartup.service \\\n    && chmod +x /etc/containerstartup.sh \\\n    && mv -f /etc/containerstartup.sh /containerstartup.sh \\\n    && echo \"root:freepbx\" | chpasswd\n\nENV container docker\nENV HTTPPORT 80\nENV SSLPORT 443\nENV SSHPORT 2122\nENV WEBMINPORT 9990\nENV INTERFACE eth0\n\nEXPOSE 25 53/udp 80 443 465 953 2122 5060/tcp 5060/udp 5061/tcp 5061/udp 5062/tcp 5062/udp 5063/tcp 5063/udp 8001 8003 8088 8089 9990/tcp 9990/udp 10000-10100/tcp 10000-10100/udp\n\nENTRYPOINT [\"/usr/bin/systemctl\",\"default\",\"--init\"]\n"
}