{
  "startTime": 1674253841843,
  "endTime": 1674253842350,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 23,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7-apache\n\n# Install needed dependencies for PHP build\nRUN apt-get update && apt-get install --no-install-recommends -y pkg-config curl libcurl4-openssl-dev libicu-dev \\\n    libpng-dev libjpeg-dev libfreetype6-dev gnupg zip libzip-dev libonig-dev libxslt-dev vim \\\n    && apt-get -y autoremove && apt-get clean autoclean && rm -rf /var/lib/apt/lists/*\n\n# Install GD (we have to configure GD first before installing it, see issue #115)\nRUN docker-php-ext-configure gd --with-freetype --with-jpeg && docker-php-ext-install gd\n# Install other needed PHP extensions\nRUN docker-php-ext-install pdo_mysql curl intl mbstring bcmath gd zip xml xsl\n\n# Install yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update && apt-get install --no-install-recommends -y yarn && apt-get -y autoremove && apt-get clean autoclean && rm -rf /var/lib/apt/lists/*\n\n# Install composer\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\n# Set working dir\nWORKDIR /var/www/html\nCOPY --chown=www-data:www-data . .\n\n# Setup apache2\nRUN a2dissite 000-default.conf\nCOPY ./.docker/symfony.conf /etc/apache2/sites-available/symfony.conf\nRUN a2ensite symfony.conf\nRUN a2enmod rewrite\n\n# Install composer and yarn dependencies for Part-DB\nUSER www-data\nRUN composer install -a --no-dev && composer clear-cache\nRUN yarn install && yarn build && yarn cache clean\nRUN php bin/console --env=prod ckeditor:install --clear=skip\n\n# Use demo env to output logs to stdout\nENV APP_ENV=demo\nENV DATABASE_URL=\"sqlite:///%kernel.project_dir%/uploads/app.db\"\n\nUSER root\n\nVOLUME [\"/var/www/html/uploads\", \"/var/www/html/public/media\"]\nEXPOSE 80"
}