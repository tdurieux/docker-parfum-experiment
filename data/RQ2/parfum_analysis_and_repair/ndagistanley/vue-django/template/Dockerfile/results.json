{
  "startTime": 1674251428638,
  "endTime": 1674251429929,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 30,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine\nLABEL maintainer=\"NdagiStanley\" \\\n      contact=\"ndagis@gmail.com\" \\\n      description=\"@Django integrated with a full-featured @Webpack + (@vuejs / vue-loader) setup with hot reload, linting, testing & css extraction.\"\nRUN apk update && apk upgrade\n\nWORKDIR /app\n\n# Install python, pip and python packages\nRUN apk add --no-cache python3 curl\nCOPY requirements.txt requirements.txt\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python3 \\\n  && rm -rf /var/cache/apk/* \\\n  && pip3 install --no-cache-dir --upgrade pip \\\n  && pip3 install --no-cache-dir -r requirements.txt\n\n# Install node modules\nCOPY package.json package.json\nRUN npm set progress=false && npm install -s --no-progress && npm cache clean --force;\nCOPY . .\nRUN sh build.sh\n\nENV DEBUG=False\n\n# EXPOSE port to be used\nENV PORT=8000\nEXPOSE 8000\n\n# Set command to run as soon as container is up\nCMD python3 manage.py runserver 0.0.0.0:$PORT\n"
}