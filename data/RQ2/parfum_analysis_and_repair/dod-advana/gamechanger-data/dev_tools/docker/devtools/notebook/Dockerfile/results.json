{
  "startTime": 1674250876313,
  "endTime": 1674250876906,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jupyter/minimal-notebook:latest\n\nSHELL [ \"/bin/bash\", \"-c\" ]\n\nUSER root\n\n#####\n## ## Setup Tools & Packages\n#####\n\nRUN apt update && apt install --no-install-recommends -y \\\n    curl \\\n    wget \\\n    vim \\\n    git \\\n    postgresql-client \\\n    jq && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -LfSo /tmp/awscliv2.zip \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" \\\n    && unzip -q /tmp/awscliv2.zip -d /opt \\\n    && /opt/aws/install\n\n#####\n## ## Setup User Env\n#####\n\n# Switch back to jovyan\nUSER $NB_UID\n\n## APP VENV & JUPYTER KERNEL\nARG REQUIREMENTS_FILE=\"/tmp/requirements.txt\"\nARG DEV_REQUIREMENTS_FILE=\"/tmp/dev-requirements.txt\"\nCOPY /dev/requirements/dev-requirements.txt \"$DEV_REQUIREMENTS_FILE\"\nCOPY /dev/requirements/gc-venv-current.txt \"$REQUIREMENTS_FILE\"\n\nARG APP_VENV_NAME=\"gc-venv\"\nRUN conda create -n \"$APP_VENV_NAME\" python=3.6 ipykernel --yes \\\n    && conda run -n \"$APP_VENV_NAME\" python -m ipykernel install --user --name \"$APP_VENV_NAME\" --display-name \"Python (GC-VENV)\" \\\n    && conda run -n \"$APP_VENV_NAME\" python -m pip install --no-cache-dir --upgrade pip wheel setuptools \\\n    && conda run -n \"$APP_VENV_NAME\" python -m pip install --no-cache-dir --no-deps -r \"$REQUIREMENTS_FILE\" \\\n    && conda run -n \"$APP_VENV_NAME\" python -m pip install --no-cache-dir -r \"$DEV_REQUIREMENTS_FILE\"\n\n## Other Useful Settings\nENV DEV_POSTGRES_HOST='postgres'\nENV DEV_POSTGRES_PORT='5432'\nENV DEV_POSTGRES_DB='dev'\nENV DEV_POSTGRES_USER='postgres'\nENV DEV_POSTGRES_PASSWORD='password'\nENV DEV_S3_HTTP_ENDPOINT='http://s3-server:9000'\nENV DEV_S3_AWS_REGION=\"us-east-1\"\nENV DEV_S3_AWS_ACCESS_KEY=\"dev-access-key\"\nENV DEV_S3_AWS_SECRET_KEY=\"dev-secret-key\"\nENV DEV_S3_SIGNATURE_VERSION=\"s3v4\"\n\nRUN echo insecure > \"$HOME/.curlrc\" \\\n    && aws configure set aws_access_key_id ${DEV_S3_AWS_ACCESS_KEY} \\\n    && aws configure set aws_secret_access_key ${DEV_S3_AWS_SECRET_KEY} \\\n    && aws configure set default.region ${DEV_S3_AWS_REGION:-us-east-1} \\\n    && aws configure set default.s3.signature_version ${DEV_S3_SIGNATURE_VERSION} \\\n    && echo 'aws() { aws --endpoint-url ${DEV_S3_HTTP_ENDPOINT} \"$@\" ; }' >> \"${HOME}/.bashrc\" \\\n    && echo \"${DEV_POSTGRES_HOST}:${DEV_POSTGRES_PORT}:${DEV_POSTGRES_DB}:${DEV_POSTGRES_USER}:${DEV_POSTGRES_PASSWORD}\" > \"${HOME}/.pgpass\" \\\n    && chmod 600 \"${HOME}/.pgpass\" \\\n    && conda init bash\n\nWORKDIR $HOME"
}