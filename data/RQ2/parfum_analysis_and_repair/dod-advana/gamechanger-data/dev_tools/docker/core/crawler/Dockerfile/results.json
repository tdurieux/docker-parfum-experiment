{
  "startTime": 1674247991923,
  "endTime": 1674247992896,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 54,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM paas/minimal:latest\n\n## running as root\nUSER root\n\n## shell for RUN cmd purposes\nSHELL [\"/bin/bash\", \"-c\"]\n\n#####\n## ## SYS Package Setup\n#####\n\n# LOCALE (important for python, etc.)\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\nENV LC_NUMERIC=\"en_US.UTF-8\"\nENV LC_TIME=\"en_US.UTF-8\"\nENV LC_COLLATE=\"en_US.UTF-8\"\nENV LC_MONETARY=\"en_US.UTF-8\"\nENV LC_MESSAGES=\"en_US.UTF-8\"\nENV LC_PAPER=\"en_US.UTF-8\"\nENV LC_NAME=\"en_US.UTF-8\"\nENV LC_ADDRESS=\"en_US.UTF-8\"\nENV LC_TELEPHONE=\"en_US.UTF-8\"\nENV LC_MEASUREMENT=\"en_US.UTF-8\"\nENV LC_IDENTIFICATION=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\n\n# Python3 and Env Prereqs\nRUN yum update -y \\\n    && yum install -y \\\n   autoconf \\\n   automake \\\n   binutils \\\n   bison \\\n   flex \\\n   gcc \\\n   gcc-c++ \\\n   gettext \\\n   libtool \\\n   make \\\n   patch \\\n   pkgconfig \\\n   redhat-rpm-config \\\n   rpm-build \\\n   rpm-sign \\\n   byacc \\\n   cscope \\\n   ctags \\\n   diffstat \\\n   doxygen \\\n   elfutils \\\n   gcc-gfortran \\\n   git \\\n   indent \\\n   intltool \\\n   patchutils \\\n   rcs \\\n   subversion \\\n   swig \\\n   systemtap \\\n    && yum install -y \\\n        wget \\\n        python3.x86_64 \\\n        python3-devel.x86_64 \\\n        python3-pip.noarch \\\n        bzip2 \\\n        glibc.i686 \\\n        zip \\\n        unzip \\\n    && yum clean all \\\n    && rm -rf /var/cache/yum\n\n# Update base python setup packages (avoids\nRUN pip3 install --no-cache-dir --upgrade pip wheel setuptools\n\n#####\n## ## Chrome & ChromeDriver Setup\n#####\n\n# get chrome browser\nCOPY ./dev/docker/core/crawler/google-chrome.repo /etc/yum.repos.d/google-chrome.repo\nRUN \\\n    curl -f https://dl-ssl.google.com/linux/linux_signing_key.pub -o /tmp/google_key.pub \\\n        && rpm --import /tmp/google_key.pub \\\n        && rm /tmp/google_key.pub \\\n    && yum install google-chrome-stable -y \\\n    && yum clean all \\\n    && rm -rf /var/cache/yum\n\n# get chrome driver\nRUN \\\n    wget -O /tmp/chromedriver.zip \\\n        https://chromedriver.storage.googleapis.com/$( curl -f -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip \\\n    && unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/ \\\n    && rm /tmp/chromedriver.zip\n\n#####\n## ## Python packages\n#####\n\nCOPY ./dev/docker/core/crawler/minimal-requirements.txt /tmp/requirements.txt\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\n\n#####\n## ## App Setup\n#####\n\n## tmpdir/dldir settings\n# where temporary files stored by tools like mktemp\nENV TMPDIR=\"/var/tmp\"\n\n# setup workdir\nENV APP_REPO_DIR=\"/app\"\nRUN mkdir -p \"${APP_REPO_DIR}\"\n\n# make sure PATH makes sense\nENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# Default WORKDIR is app setup dir\nWORKDIR \"${APP_REPO_DIR}\"\n"
}