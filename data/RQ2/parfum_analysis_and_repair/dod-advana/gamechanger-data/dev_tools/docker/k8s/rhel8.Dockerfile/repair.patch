diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dod-advana/gamechanger-data/dev_tools/docker/k8s/rhel8.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dod-advana/gamechanger-data/dev_tools/docker/k8s/rhel8.Dockerfile/repaired.Dockerfile
index 0aa380a..1be8d75 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dod-advana/gamechanger-data/dev_tools/docker/k8s/rhel8.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dod-advana/gamechanger-data/dev_tools/docker/k8s/rhel8.Dockerfile/repaired.Dockerfile
@@ -84,74 +84,67 @@ RUN \
 
 RUN \
   git clone --depth 1 --branch "release-qpdf-${QPDF_VERSION}" https://github.com/qpdf/qpdf.git /opt/qpdf \
-  && echo "[INFO] Installing from source: QPDF ..." && ( \
-    cd /opt/qpdf \
+  && echo "[INFO] Installing from source: QPDF ..." && ( cd /opt/qpdf \
     && ./autogen.sh \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     && ldconfig \
-  ) 2>&1 1>/dev/null
+  2>&11>/dev/null)
 
 # leptonica - tesseract/jbig2enc dep
 RUN \
   git clone --depth 1 --branch "${LEPTONICA_VERSION}" https://github.com/danbloomberg/leptonica.git /opt/leptonica \
-  && echo "[INFO] Installing from source: LEPTONICA ..." && ( \
-    cd /opt/leptonica \
+  && echo "[INFO] Installing from source: LEPTONICA ..." && ( cd /opt/leptonica \
     && ./autogen.sh \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     && ldconfig \
-  ) 2>&1 1>/dev/null
+  2>&11>/dev/null)
 
 # jbig2enc - optional ocrmypf/tesseract dep
 RUN \
       git clone --depth 1 --branch "${JBIG2ENC_VERSION}" https://github.com/agl/jbig2enc.git /opt/jbig2enc \
-  &&  echo "[INFO] Installing from source: JBIG2ENC ..." && ( \
-        cd /opt/jbig2enc \
+  &&  echo "[INFO] Installing from source: JBIG2ENC ..." && ( cd /opt/jbig2enc \
         && ./autogen.sh \
-        && ./configure \
+        && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         && make \
         && make install \
         && ldconfig \
-      ) 2>&1 1>/dev/null
+      2>&11>/dev/null)
 
 # tesseract - ocrmypdf dep
 RUN \
       git clone --depth 1 --branch "${TESSERACT_OCR_VERSION}" https://github.com/tesseract-ocr/tesseract.git /opt/tesseract \
-  &&  echo "[INFO] Installing from source: TESSERACT-OCR ..." && ( \
-        cd /opt/tesseract \
+  &&  echo "[INFO] Installing from source: TESSERACT-OCR ..." && ( cd /opt/tesseract \
         && ./autogen.sh \
-        && ./configure \
+        && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         && make \
         && make install \
         && ldconfig \
-      ) 2>&1 1>/dev/null
+      2>&11>/dev/null)
 
 # tesseract language packs - ocrmypdf dep
 RUN \
-      echo "[INFO] Installing language packs for TESSERACT-OCR ..." && ( \
-      mkdir -p "${TESSDATA_PREFIX}" \
-      && curl -L -o "${TESSDATA_PREFIX}/eng.traineddata" \
+      echo "[INFO] Installing language packs for TESSERACT-OCR ..." && ( mkdir -p "${TESSDATA_PREFIX}" \
+      && curl -f -L -o "${TESSDATA_PREFIX}/eng.traineddata" \
         "https://github.com/tesseract-ocr/tessdata_fast/raw/${TESSERACT_OCR_LANGPACK_VERSION}/eng.traineddata" \
-      && curl -L -o "${TESSDATA_PREFIX}/spa.traineddata" \
-        "https://github.com/tesseract-ocr/tessdata_fast/raw/${TESSERACT_OCR_LANGPACK_VERSION}/spa.traineddata" \
-)
+      && curl -f -L -o "${TESSDATA_PREFIX}/spa.traineddata" \
+        "https://github.com/tesseract-ocr/tessdata_fast/raw/${TESSERACT_OCR_LANGPACK_VERSION}/spa.traineddata")
 
 # ghostscript - ocrmypdf dep
 RUN \
-      curl -L \
+      curl -f -L \
       "https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs9550/ghostscript-${GHOSTSCRIPT_VERSION}.tar.gz" \
         | tar -xz -C /opt \
-      && echo "[INFO] Installing from source: GHOSTSCRIPT ..." && ( \
-        cd "/opt/ghostscript-${GHOSTSCRIPT_VERSION}" \
+      && echo "[INFO] Installing from source: GHOSTSCRIPT ..." && ( cd "/opt/ghostscript-${GHOSTSCRIPT_VERSION}" \
         && ./autogen.sh \
-        && ./configure \
+        && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         && make \
         && make install \
         && ldconfig \
-      ) 2>&1 1>/dev/null
+      2>&11>/dev/null)
 
 #####
 ## ## APP SETUP
@@ -202,7 +195,7 @@ RUN chmod a+rx "/usr/bin/entrypoint"
 # thou shall not root
 USER $APP_UID:$APP_GID
 
-COPY --chown="${APP_UID}:${APP_GID}" ./ "${APP_SRC}/" 
+COPY --chown="${APP_UID}:${APP_GID}" ./ "${APP_SRC}/"
 WORKDIR "${APP_SRC}"
 
 ENV \