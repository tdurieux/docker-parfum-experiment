{
  "startTime": 1674218209987,
  "endTime": 1674218211240,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 11,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 11,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=\"node:14\"\nFROM $BASE_IMAGE\n\nARG NPMRC_FILE\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# to support RHEL-based and DEBIAN-based version of node\n# e.g. RHEL-based node images in ironbank, DEBIAN-based ones in docker hub\nUSER root\nRUN (type -P \"yum\" &> /dev/null) && ( \\\n        yum install -y \\\n            git \\\n        && yum clean all \\\n        && rm -rf /var/cache/yum \\\n     ) || ( (type -P \"apt-get\" &> /dev/null) && ( apt-get update \\\n        && apt-get install --no-install-recommends -y \\\n            git \\\n        && apt-get clean \\\n        && rm -rf /var/cache/apt/lists)) \\\n    || ( \\\n        >&2 echo \"[ERROR] Unsupported Base Image\" \\\n        && exit 1 \\\n    ) && rm -rf /var/lib/apt/lists/*;\n\n# non-root app USER/GROUP\nARG APP_UID=1000\nARG APP_GID=1000\n\n# key dirs & globally usable binaries/packages\nENV APP_ROOT=\"/opt/app-root\"\nENV APP_DIR=\"${APP_ROOT}/src\"\nENV APP_FRONTEND_DIR=\"${APP_DIR}/frontend\"\nENV APP_BACKEND_DIR=\"${APP_DIR}/backend\"\nENV APP_SHARED_DIR=\"${APP_ROOT}/shared\"\nENV APP_SHARED_BIN=\"${APP_SHARED_DIR}/node_modules/.bin\"\nENV PATH=\"${APP_SHARED_BIN}:${PATH}\"\nENV NPM_CONFIG_USERCONFIG=\"${APP_ROOT}/.nmprc\"\n\nRUN mkdir -p \\\n        \"${APP_DIR}\" \\\n        \"${APP_BACKEND_DIR}\" \\\n        \"${APP_FRONTEND_DIR}\" \\\n        \"${APP_SHARED_DIR}\" \\\n    && touch \"${NPM_CONFIG_USERCONFIG}\" \\\n    && chown -R \"$APP_UID:$APP_GID\" \"${APP_ROOT}\"\n\nUSER \"$APP_UID:$APP_GID\"\n# thou shall not root\n\nRUN cd \"$APP_SHARED_DIR\" \\\n    && npm install nodemon \\\n    && npm install sequelize-cli \\\n    && npm install jest && npm cache clean --force;\n\n# note on copy+chown: do not use $USER var, it will - surprisingly - be root\nCOPY --chown=\"$APP_UID:$APP_GID\" ./frontend/package.json \"${APP_FRONTEND_DIR}/package.json\"\nCOPY --chown=node ./frontend/.npmrc.template \"${APP_FRONTEND_DIR}/.npmrc\"\nRUN sed -i 's/<get_personal_token>/'\"${NPMRC_FILE}\"'/g' \"${APP_FRONTEND_DIR}/.npmrc\"\n\nRUN cd \"${APP_FRONTEND_DIR}\" \\\n    && npm install && npm cache clean --force;\n\nCOPY --chown=\"$APP_UID:$APP_GID\" ./backend/package.json \"${APP_BACKEND_DIR}/package.json\"\nCOPY --chown=node ./backend/.npmrc.template \"${APP_BACKEND_DIR}/.npmrc\"\nRUN sed -i 's/<get_personal_token>/'\"${NPMRC_FILE}\"'/g' \"${APP_BACKEND_DIR}/.npmrc\"\nRUN cd \"${APP_BACKEND_DIR}\" \\\n    && npm install && npm cache clean --force;\n\nCOPY --chown=\"$APP_UID:$APP_GID\" . \"${APP_DIR}\"\nRUN cd \"${APP_FRONTEND_DIR}\" \\\n    && npm run build \\\n    && mv build \"${APP_BACKEND_DIR}\"\n\nWORKDIR \"${APP_BACKEND_DIR}\"\nCMD ./startProd.sh\n"
}