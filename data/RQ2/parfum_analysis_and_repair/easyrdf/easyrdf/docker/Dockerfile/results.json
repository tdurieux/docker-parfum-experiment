{
  "startTime": 1674216092760,
  "endTime": 1674216093256,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 8,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.3-cli\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git graphviz libicu-dev libzip-dev make nano net-tools raptor2-utils wget zip zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# workaround for error during install\n# see: https://github.com/geerlingguy/ansible-role-java/issues/64\nRUN mkdir /usr/share/man/man1/\nRUN apt-get install --no-install-recommends -y openjdk-11-jre && rm -rf /var/lib/apt/lists/*;\n\nRUN docker-php-ext-install intl zip && docker-php-ext-enable intl zip\n\n# install composer globally\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# add custom PHP.ini settings\nRUN mv \"$PHP_INI_DIR/php.ini-development\" \"$PHP_INI_DIR/php.ini\"\nCOPY ./custom.ini /usr/local/etc/php/conf.d/custom.ini\n\nRUN rm -rf /var/www/html/*\nWORKDIR /var/www/html/\n\n# adds user \"easyrdf\", adds him to group \"www-data\" and sets his home folder\n# for more background information see:\n# https://medium.com/@mccode/understanding-how-uid-and-gid-work-in-docker-containers-c37a01d01cf\nRUN useradd -r --home /home/easyrdf -u 1000 easyrdf\nRUN usermod -a -G www-data easyrdf\nRUN mkdir /home/easyrdf\nRUN chown easyrdf:www-data /home/easyrdf\n\n# install fuseki\nRUN wget \"https://archive.apache.org/dist/jena/binaries/apache-jena-fuseki-2.4.0.tar.gz\" && \\\n        tar -zxf *jena*fuseki*.tar.gz && mv *jena*fuseki*/ /home/easyrdf/fuseki && rm *jena*fuseki*.tar.gz\nRUN chown -R easyrdf:easyrdf /home/easyrdf/fuseki\n\nCMD [\"tail -f /dev/null\"]\n"
}