{
  "startTime": 1674220848342,
  "endTime": 1674220850538,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 42,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 42,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 42,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 42,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 169,
        "lineEnd": 169,
        "columnStart": 42,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\nFROM centos:7\nMAINTAINER Dave Gill <gill@ucar.edu>\n\nENV NML_VERSION 4.2\n\n# Set up base OS environment\n\nRUN yum -y update\n# Install SCL release package and python SCL\nRUN yum -y install centos-release-scl \\\n && yum -y install --setopt=tsflags=nodocs rh-python36 && rm -rf /var/cache/yum\n# Enable rh-python scl binary\nCOPY entrypoint.sh /usr/bin/entrypoint.sh\nRUN chmod +x /usr/bin/entrypoint.sh\nENTRYPOINT [ \"/usr/bin/entrypoint.sh\" ]\n\nRUN yum -y install file gcc gcc-gfortran gcc-c++ glibc.i686 libgcc.i686 libpng-devel jasper \\\n  jasper-devel hostname m4 make perl tar bash tcsh time wget which zlib zlib-devel \\\n  openssh-clients openssh-server net-tools fontconfig libgfortran libXext libXrender \\\n  sudo epel-release git flex flex-devel byacc && rm -rf /var/cache/yum\n\n# Newer version 9 of GNU compiler, required to fix WRF RRTMG-derivative builds\n\nRUN yum -y install centos-release-scl \\\n && yum -y install devtoolset-9 \\\n && yum -y install devtoolset-9-gcc devtoolset-9-gcc-gfortran devtoolset-9-gcc-c++ \\\n && scl enable devtoolset-9 bash \\\n && scl enable devtoolset-9 tcsh && rm -rf /var/cache/yum\n\nRUN yum -y install php-devel php-pear && rm -rf /var/cache/yum\nRUN yum -y install ImageMagick ImageMagick-devel && rm -rf /var/cache/yum\n\nRUN groupadd wrf -g 9999\nRUN useradd -u 9999 -g wrf -G wheel -M -d /wrf wrfuser\nRUN mkdir /wrf \\\n &&  chown -R wrfuser:wrf /wrf \\\n &&  chmod 6755 /wrf\n\n# Build the libraries with a parallel Make\nENV J 4\n\n# Build OpenMPI\nRUN mkdir -p /wrf/libs/openmpi/BUILD_DIR\nRUN source /opt/rh/devtoolset-9/enable \\\n && cd /wrf/libs/openmpi/BUILD_DIR \\\n && curl -f -L -O https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.0.tar.gz \\\n && tar -xf openmpi-4.0.0.tar.gz \\\n && cd openmpi-4.0.0 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local & rm openmpi-4.0.0.tar.gz > /wrf/libs/build_log_openmpi_config \\\n && echo dummy printout to keep travis happy openmpi config \\\n && make all install \\\n && echo \"make all install | awk 'NR % 1000 == 0'\" \\\n && echo \"make all install &> /wrf/libs/build_log_openmpi_make\" \\\n && echo dummy printout to keep travis happy openmpi make \\\n && cd / \\\n && rm -rf /wrf/libs/openmpi/BUILD_DIR\n\n# Build HDF5 libraries\nRUN mkdir -p /wrf/libs/hdf5/BUILD_DIR\nRUN source /opt/rh/devtoolset-9/enable \\\n && cd /wrf/libs/hdf5/BUILD_DIR \\\n && git clone https://bitbucket.hdfgroup.org/scm/hdffv/hdf5.git \\\n && cd hdf5 \\\n && git checkout hdf5-1_10_4 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-fortran --enable-cxx --enable-shared --prefix=/usr/local/ & > /wrf/libs/build_log_hdf5_config \\\n && echo dummy printout to keep travis happy hdf5 config \\\n && make install & > /wrf/libs/build_log_hdf5_make \\\n && echo dummy printout to keep travis happy hdf5 make \\\n && rm -rf /wrf/libs/hdf5/BUILD_DIR\nENV LD_LIBRARY_PATH /usr/local/lib\n\n# Build netCDF C libraries\nRUN yum -y install libcurl-devel zlib-devel && rm -rf /var/cache/yum\nENV NETCDF /wrf/libs/netcdf\nRUN mkdir -p ${NETCDF}/BUILD_DIR\nRUN source /opt/rh/devtoolset-9/enable \\\n && cd ${NETCDF}/BUILD_DIR \\\n && curl -f -L -O https://github.com/Unidata/netcdf-c/archive/v4.6.2.tar.gz \\\n && curl -f -L -O https://github.com/Unidata/netcdf-fortran/archive/v4.4.5.tar.gz \\\n && curl -f -L -O https://github.com/Unidata/netcdf4-python/archive/v1.5.3rel.tar.gz \\\n && tar -xf v4.6.2.tar.gz \\\n && cd netcdf-c-4.6.2 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --prefix=${NETCDF} & rm v4.6.2.tar.gz > /wrf/libs/build_log_ncc_config \\\n && echo dummy printout to keep travis happy ncc config \\\n && make install & > /wrf/libs/build_log_ncc_make \\\n && echo dummy printout to keep travis happy ncc make\n\n# Build netCDF Fortran libraries\nRUN source /opt/rh/devtoolset-9/enable \\\n && env \\\n && cd ${NETCDF}/BUILD_DIR \\\n && tar -xf v4.4.5.tar.gz \\\n && cd netcdf-fortran-4.4.5/ \\\n && export LD_LIBRARY_PATH=${NETCDF}/lib:${LD_LIBRARY_PATH} \\\n && CPPFLAGS=-I${NETCDF}/include LDFLAGS=-L${NETCDF}/lib ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --prefix=${NETCDF} & rm v4.4.5.tar.gz > /wrf/libs/build_log_ncf_config \\\n && echo dummy printout to keep travis happy ncf config \\\n && make install & > /wrf/libs/build_log_ncf_make \\\n && echo dummy printout to keep travis happy ncf make\n\n# Setup up python3.6\nRUN yum -y install python36 \\\n && yum -y install python36-devel \\\n && yum -y install python36-pip \\\n && yum -y install python36-setuptools \\\n && easy_install-3.6 pip \\\n && python3.6 -m pip install numpy \\\n && python3.6 -m pip install --upgrade pip \\\n && python3.6 -m pip install --upgrade setuptools && rm -rf /var/cache/yum\nRUN ldconfig -v\n\n# Build netCDF4-python libraries\nRUN source /opt/rh/devtoolset-9/enable \\\n && cd ${NETCDF}/BUILD_DIR \\\n && tar -xf v1.5.3rel.tar.gz \\\n && cd netcdf4-python-1.5.3rel/ \\\n && export LD_LIBRARY_PATH=${NETCDF}/lib:${LD_LIBRARY_PATH} \\\n && export NETCDF4_DIR=${NETCDF} \\\n && export HDF5_DIR=/usr/local \\\n && python3.6 -m pip install wheel \\\n && python3.6 setup.py build \\\n && CPPFLAGS=\"-I${NETCDF}/include -I/usr/local/include\" LDFLAGS=\"-L${NETCDF}/lib -L/usr/local/lib\" python3.6 setup.py install \\\n && echo dummy printout to keep travis happy ncf4-python install && rm v1.5.3rel.tar.gz\n\nRUN mkdir -p /var/run/sshd \\\n    && ssh-keygen -A \\\n    && sed -i 's/#PermitRootLogin yes/PermitRootLogin yes/g' /etc/ssh/sshd_config \\\n    && sed -i 's/#RSAAuthentication yes/RSAAuthentication yes/g' /etc/ssh/sshd_config \\\n    && sed -i 's/#PubkeyAuthentication yes/PubkeyAuthentication yes/g' /etc/ssh/sshd_config\n\nRUN mkdir -p  /wrf/WPS_GEOG /wrf/wrfinput /wrf/wrfoutput \\\n &&  chown -R wrfuser:wrf /wrf /wrf/WPS_GEOG /wrf/wrfinput /wrf/wrfoutput /usr/local \\\n &&  chmod 6755 /wrf /wrf/WPS_GEOG /wrf/wrfinput /wrf/wrfoutput /usr/local\n\n# Download NCL\nRUN curl -f -SL https://ral.ucar.edu/sites/default/files/public/projects/ncar-docker-wrf/nclncarg-6.3.0.linuxcentos7.0x8664nodapgcc482.tar.gz | tar zxC /usr/local\nENV NCARG_ROOT /usr/local\n\n# Set environment for interactive container shells\nRUN echo export LDFLAGS=\"-lm\" >> /etc/bashrc \\\n && echo export NETCDF=${NETCDF} >> /etc/bashrc \\\n && echo export JASPERINC=/usr/include/jasper/ >> /etc/bashrc \\\n && echo export JASPERLIB=/usr/lib64/ >> /etc/bashrc \\\n && echo export LD_LIBRARY_PATH=\"/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9:/usr/lib64/openmpi/lib:${NETCDF}/lib:${LD_LIBRARY_PATH}\" >> /etc/bashrc  \\\n && echo export PATH=\".:/opt/rh/devtoolset-9/root/usr/bin:/usr/lib64/openmpi/bin:${NETCDF}/bin:$PATH\" >> /etc/bashrc\n\nRUN echo setenv LDFLAGS \"-lm\" >> /etc/csh.cshrc \\\n && echo setenv NETCDF \"${NETCDF}\" >> /etc/csh.cshrc \\\n && echo setenv JASPERINC \"/usr/include/jasper/\" >> /etc/csh.cshrc \\\n && echo setenv JASPERLIB \"/usr/lib64/\" >> /etc/csh.cshrc \\\n && echo setenv LD_LIBRARY_PATH \"/opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9:/usr/lib64/openmpi/lib:${NETCDF}/lib:${LD_LIBRARY_PATH}\" >> /etc/csh.cshrc \\\n && echo setenv PATH \".:/opt/rh/devtoolset-9/root/usr/bin:/usr/lib64/openmpi/bin:${NETCDF}/bin:$PATH\" >> /etc/csh.cshrc\n\nRUN mkdir /wrf/.ssh ; echo \"StrictHostKeyChecking no\" > /wrf/.ssh/config\nCOPY default-mca-params.conf /wrf/.openmpi/mca-params.conf\nRUN mkdir -p /wrf/.openmpi\nRUN chown -R wrfuser:wrf /wrf/\n\n# all root steps completed above, now below as regular userID wrfuser\nUSER wrfuser\nWORKDIR /wrf\n\n# Download data\nARG argname=tutorial\nRUN echo DAVE $argname\nRUN if [ \"$argname\" = \"tutorial\" ] ; then \\\n curl -f -SL https://www2.mmm.ucar.edu/wrf/src/wps_files/geog_low_res_mandatory.tar.gz | tar -xzC /wrf/WPS_GEOG; fi\nRUN if [ \"$argname\" = \"tutorial\" ] ; then \\\n curl -f -SL https://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/colorado_march16.new.tar.gz | tar -xzC /wrf/wrfinput; fi\nRUN if [ \"$argname\" = \"tutorial\" ] ; then \\\n curl -f -SL https://www2.mmm.ucar.edu/wrf/src/namelists_v$NML_VERSION.tar.gz | tar -xzC /wrf/wrfinput; fi\nRUN if [ \"$argname\" = \"tutorial\" ] ; then \\\n curl -f -SL https://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/WRF_NCL_scripts.tar.gz | tar -xzC /wrf; fi\nRUN if [ \"$argname\" = \"regtest\" ]  ; then \\\n curl -f -SL https://www2.mmm.ucar.edu/wrf/dave/data_smaller.tar.gz | tar -xzC /wrf; fi\n\nENV JASPERINC /usr/include/jasper\nENV JASPERLIB /usr/lib64\nENV NETCDF_classic 1\nENV LD_LIBRARY_PATH /opt/rh/devtoolset-9/root/usr/lib/gcc/x86_64-redhat-linux/9:/usr/lib64/openmpi/lib:${NETCDF}/lib:${LD_LIBRARY_PATH}\nENV PATH  .:/opt/rh/devtoolset-9/root/usr/bin:/usr/lib64/openmpi/bin:${NETCDF}/bin:$PATH\n\nRUN ssh-keygen -f /wrf/.ssh/id_rsa -t rsa -N '' \\\n    && chmod 600 /wrf/.ssh/config \\\n    && chmod 700 /wrf/.ssh \\\n    && cp /wrf/.ssh/id_rsa.pub /wrf/.ssh/authorized_keys\n#\n"
}