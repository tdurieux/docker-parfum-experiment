diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/davegill/wrf-coop/Dockerfile-first_part b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/davegill/wrf-coop/Dockerfile-first_part/repaired.Dockerfile
index 1d91a11..5afeb7a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/davegill/wrf-coop/Dockerfile-first_part
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/davegill/wrf-coop/Dockerfile-first_part/repaired.Dockerfile
@@ -9,7 +9,7 @@ ENV NML_VERSION 4.2
 RUN yum -y update
 # Install SCL release package and python SCL
 RUN yum -y install centos-release-scl \
- && yum -y install --setopt=tsflags=nodocs rh-python36
+ && yum -y install --setopt=tsflags=nodocs rh-python36 && rm -rf /var/cache/yum
 # Enable rh-python scl binary
 COPY entrypoint.sh /usr/bin/entrypoint.sh
 RUN chmod +x /usr/bin/entrypoint.sh
@@ -18,7 +18,7 @@ ENTRYPOINT [ "/usr/bin/entrypoint.sh" ]
 RUN yum -y install file gcc gcc-gfortran gcc-c++ glibc.i686 libgcc.i686 libpng-devel jasper \
   jasper-devel hostname m4 make perl tar bash tcsh time wget which zlib zlib-devel \
   openssh-clients openssh-server net-tools fontconfig libgfortran libXext libXrender \
-  sudo epel-release git flex flex-devel byacc
+  sudo epel-release git flex flex-devel byacc && rm -rf /var/cache/yum
 
 # Newer version 9 of GNU compiler, required to fix WRF RRTMG-derivative builds
 
@@ -26,10 +26,10 @@ RUN yum -y install centos-release-scl \
  && yum -y install devtoolset-9 \
  && yum -y install devtoolset-9-gcc devtoolset-9-gcc-gfortran devtoolset-9-gcc-c++ \
  && scl enable devtoolset-9 bash \
- && scl enable devtoolset-9 tcsh 
+ && scl enable devtoolset-9 tcsh && rm -rf /var/cache/yum
 
-RUN yum -y install php-devel php-pear
-RUN yum -y install ImageMagick ImageMagick-devel
+RUN yum -y install php-devel php-pear && rm -rf /var/cache/yum
+RUN yum -y install ImageMagick ImageMagick-devel && rm -rf /var/cache/yum
 
 RUN groupadd wrf -g 9999
 RUN useradd -u 9999 -g wrf -G wheel -M -d /wrf wrfuser
@@ -44,10 +44,10 @@ ENV J 4
 RUN mkdir -p /wrf/libs/openmpi/BUILD_DIR
 RUN source /opt/rh/devtoolset-9/enable \
  && cd /wrf/libs/openmpi/BUILD_DIR \
- && curl -L -O https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.0.tar.gz \
+ && curl -f -L -O https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.0.tar.gz \
  && tar -xf openmpi-4.0.0.tar.gz \
  && cd openmpi-4.0.0 \
- && ./configure --prefix=/usr/local &> /wrf/libs/build_log_openmpi_config \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local & rm openmpi-4.0.0.tar.gz > /wrf/libs/build_log_openmpi_config \
  && echo dummy printout to keep travis happy openmpi config \
  && make all install \
  && echo "make all install | awk 'NR % 1000 == 0'" \
@@ -63,27 +63,27 @@ RUN source /opt/rh/devtoolset-9/enable \
  && git clone https://bitbucket.hdfgroup.org/scm/hdffv/hdf5.git \
  && cd hdf5 \
  && git checkout hdf5-1_10_4 \
- && ./configure --enable-fortran --enable-cxx --enable-shared --prefix=/usr/local/ &> /wrf/libs/build_log_hdf5_config \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-fortran --enable-cxx --enable-shared --prefix=/usr/local/ & > /wrf/libs/build_log_hdf5_config \
  && echo dummy printout to keep travis happy hdf5 config \
- && make install &> /wrf/libs/build_log_hdf5_make \
+ && make install & > /wrf/libs/build_log_hdf5_make \
  && echo dummy printout to keep travis happy hdf5 make \
  && rm -rf /wrf/libs/hdf5/BUILD_DIR
 ENV LD_LIBRARY_PATH /usr/local/lib
 
 # Build netCDF C libraries
-RUN yum -y install libcurl-devel zlib-devel
+RUN yum -y install libcurl-devel zlib-devel && rm -rf /var/cache/yum
 ENV NETCDF /wrf/libs/netcdf
 RUN mkdir -p ${NETCDF}/BUILD_DIR
 RUN source /opt/rh/devtoolset-9/enable \
  && cd ${NETCDF}/BUILD_DIR \
- && curl -L -O https://github.com/Unidata/netcdf-c/archive/v4.6.2.tar.gz \
- && curl -L -O https://github.com/Unidata/netcdf-fortran/archive/v4.4.5.tar.gz \
- && curl -L -O https://github.com/Unidata/netcdf4-python/archive/v1.5.3rel.tar.gz \
+ && curl -f -L -O https://github.com/Unidata/netcdf-c/archive/v4.6.2.tar.gz \
+ && curl -f -L -O https://github.com/Unidata/netcdf-fortran/archive/v4.4.5.tar.gz \
+ && curl -f -L -O https://github.com/Unidata/netcdf4-python/archive/v1.5.3rel.tar.gz \
  && tar -xf v4.6.2.tar.gz \
  && cd netcdf-c-4.6.2 \
- && ./configure --enable-shared --prefix=${NETCDF} &> /wrf/libs/build_log_ncc_config \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --prefix=${NETCDF} & rm v4.6.2.tar.gz > /wrf/libs/build_log_ncc_config \
  && echo dummy printout to keep travis happy ncc config \
- && make install &> /wrf/libs/build_log_ncc_make \
+ && make install & > /wrf/libs/build_log_ncc_make \
  && echo dummy printout to keep travis happy ncc make
 
 # Build netCDF Fortran libraries
@@ -93,9 +93,9 @@ RUN source /opt/rh/devtoolset-9/enable \
  && tar -xf v4.4.5.tar.gz \
  && cd netcdf-fortran-4.4.5/ \
  && export LD_LIBRARY_PATH=${NETCDF}/lib:${LD_LIBRARY_PATH} \
- && CPPFLAGS=-I${NETCDF}/include LDFLAGS=-L${NETCDF}/lib ./configure --enable-shared --prefix=${NETCDF} &> /wrf/libs/build_log_ncf_config \
+ && CPPFLAGS=-I${NETCDF}/include LDFLAGS=-L${NETCDF}/lib ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --prefix=${NETCDF} & rm v4.4.5.tar.gz > /wrf/libs/build_log_ncf_config \
  && echo dummy printout to keep travis happy ncf config \
- && make install &> /wrf/libs/build_log_ncf_make \
+ && make install & > /wrf/libs/build_log_ncf_make \
  && echo dummy printout to keep travis happy ncf make
 
 # Setup up python3.6
@@ -106,7 +106,7 @@ RUN yum -y install python36 \
  && easy_install-3.6 pip \
  && python3.6 -m pip install numpy \
  && python3.6 -m pip install --upgrade pip \
- && python3.6 -m pip install --upgrade setuptools
+ && python3.6 -m pip install --upgrade setuptools && rm -rf /var/cache/yum
 RUN ldconfig -v
 
 # Build netCDF4-python libraries
@@ -120,7 +120,7 @@ RUN source /opt/rh/devtoolset-9/enable \
  && python3.6 -m pip install wheel \
  && python3.6 setup.py build \
  && CPPFLAGS="-I${NETCDF}/include -I/usr/local/include" LDFLAGS="-L${NETCDF}/lib -L/usr/local/lib" python3.6 setup.py install \
- && echo dummy printout to keep travis happy ncf4-python install
+ && echo dummy printout to keep travis happy ncf4-python install && rm v1.5.3rel.tar.gz
 
 RUN mkdir -p /var/run/sshd \
     && ssh-keygen -A \
@@ -133,7 +133,7 @@ RUN mkdir -p  /wrf/WPS_GEOG /wrf/wrfinput /wrf/wrfoutput \
  &&  chmod 6755 /wrf /wrf/WPS_GEOG /wrf/wrfinput /wrf/wrfoutput /usr/local
 
 # Download NCL
-RUN curl -SL https://ral.ucar.edu/sites/default/files/public/projects/ncar-docker-wrf/nclncarg-6.3.0.linuxcentos7.0x8664nodapgcc482.tar.gz | tar zxC /usr/local
+RUN curl -f -SL https://ral.ucar.edu/sites/default/files/public/projects/ncar-docker-wrf/nclncarg-6.3.0.linuxcentos7.0x8664nodapgcc482.tar.gz | tar zxC /usr/local
 ENV NCARG_ROOT /usr/local
 
 # Set environment for interactive container shells
@@ -163,11 +163,16 @@ WORKDIR /wrf
 # Download data
 ARG argname=tutorial
 RUN echo DAVE $argname
-RUN if [ "$argname" = "tutorial" ] ; then curl -SL https://www2.mmm.ucar.edu/wrf/src/wps_files/geog_low_res_mandatory.tar.gz | tar -xzC /wrf/WPS_GEOG ; fi
-RUN if [ "$argname" = "tutorial" ] ; then curl -SL https://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/colorado_march16.new.tar.gz | tar -xzC /wrf/wrfinput ; fi
-RUN if [ "$argname" = "tutorial" ] ; then curl -SL https://www2.mmm.ucar.edu/wrf/src/namelists_v$NML_VERSION.tar.gz  | tar -xzC /wrf/wrfinput ; fi
-RUN if [ "$argname" = "tutorial" ] ; then curl -SL https://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/WRF_NCL_scripts.tar.gz | tar -xzC /wrf ; fi
-RUN if [ "$argname" = "regtest" ]  ; then curl -SL https://www2.mmm.ucar.edu/wrf/dave/data_smaller.tar.gz | tar -xzC /wrf ; fi
+RUN if [ "$argname" = "tutorial" ] ; then \
+ curl -f -SL https://www2.mmm.ucar.edu/wrf/src/wps_files/geog_low_res_mandatory.tar.gz | tar -xzC /wrf/WPS_GEOG; fi
+RUN if [ "$argname" = "tutorial" ] ; then \
+ curl -f -SL https://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/colorado_march16.new.tar.gz | tar -xzC /wrf/wrfinput; fi
+RUN if [ "$argname" = "tutorial" ] ; then \
+ curl -f -SL https://www2.mmm.ucar.edu/wrf/src/namelists_v$NML_VERSION.tar.gz | tar -xzC /wrf/wrfinput; fi
+RUN if [ "$argname" = "tutorial" ] ; then \
+ curl -f -SL https://www2.mmm.ucar.edu/wrf/TUTORIAL_DATA/WRF_NCL_scripts.tar.gz | tar -xzC /wrf; fi
+RUN if [ "$argname" = "regtest" ]  ; then \
+ curl -f -SL https://www2.mmm.ucar.edu/wrf/dave/data_smaller.tar.gz | tar -xzC /wrf; fi
 
 ENV JASPERINC /usr/include/jasper
 ENV JASPERLIB /usr/lib64