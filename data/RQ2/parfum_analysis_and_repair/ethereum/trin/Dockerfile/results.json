{
  "startTime": 1674255165532,
  "endTime": 1674255166181,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# select build image\nFROM rust:1.58.1 AS builder\n\n# create a new empty shell project\nRUN USER=root cargo new --bin trin\nWORKDIR /trin\n\nRUN apt-get update && apt-get install --no-install-recommends clang -y && rm -rf /var/lib/apt/lists/*;\n\n# copy over manifests and source to build image\nCOPY ./Cargo.lock ./Cargo.lock\nCOPY ./Cargo.toml ./Cargo.toml\nCOPY ./src ./src\nCOPY ./trin-cli ./trin-cli\nCOPY ./trin-core ./trin-core\nCOPY ./trin-history ./trin-history\nCOPY ./trin-state ./trin-state\nCOPY ./ethportal-peertest ./ethportal-peertest\nCOPY ./mainnetMM ./mainnetMM\nCOPY ./utp-testing ./utp-testing\n\n# build for release\nRUN cargo build --all --release\n\n# final base\nFROM rust:1.58.1\n\n# copy build artifact from build stage\nCOPY --from=builder /trin/target/release/trin .\nCOPY --from=builder /trin/target/release/trin-cli .\nCOPY --from=builder /trin/target/release/seed-database .\n\n# These steps copy the mainnet chain header seed data into container\n# This data is too large to be kept inside trin-source code\n# It must be downloaded separately and moved to the correct location\n# https://www.dropbox.com/s/y5n36ztppltgs7x/mainnetMM.zip?dl=0\nRUN mkdir /mainnetMM\nCOPY --from=builder /trin/mainnetMM ./mainnetMM\n\nENV RUST_LOG=debug\n\nENTRYPOINT [\"./trin\"]\n"
}