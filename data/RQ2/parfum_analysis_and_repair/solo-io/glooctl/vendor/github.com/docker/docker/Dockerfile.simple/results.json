{
  "startTime": 1674220557801,
  "endTime": 1674220559592,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 5,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 27,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "# docker build -t docker:simple -f Dockerfile.simple .\n# docker run --rm docker:simple hack/make.sh dynbinary\n# docker run --rm --privileged docker:simple hack/dind hack/make.sh test-unit\n# docker run --rm --privileged -v /var/lib/docker docker:simple hack/dind hack/make.sh dynbinary test-integration-cli\n\n# This represents the bare minimum required to build and test Docker.\n\nFROM debian:jessie\n\n# allow replacing httpredir or deb mirror\nARG APT_MIRROR=deb.debian.org\nRUN sed -ri \"s/(httpredir|deb).debian.org/$APT_MIRROR/g\" /etc/apt/sources.list\n\n# Compile and runtime deps\n# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#build-dependencies\n# https://github.com/docker/docker/blob/master/project/PACKAGERS.md#runtime-dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tbtrfs-tools \\\n\t\tbuild-essential \\\n\t\tcurl \\\n\t\tcmake \\\n\t\tgcc \\\n\t\tgit \\\n\t\tlibapparmor-dev \\\n\t\tlibdevmapper-dev \\\n\t\tlibsqlite3-dev \\\n\t\t\\\n\t\tca-certificates \\\n\t\te2fsprogs \\\n\t\tiptables \\\n\t\tprocps \\\n\t\txfsprogs \\\n\t\txz-utils \\\n\t\t\\\n\t\taufs-tools \\\n\t\tvim-common \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Install seccomp: the version shipped in trusty is too old\nENV SECCOMP_VERSION 2.3.1\nRUN set -x \\\n\t&& export SECCOMP_PATH=\"$(mktemp -d)\" \\\n\t&& curl -fsSL \"https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz\" \\\n\t\t| tar -xzC \"$SECCOMP_PATH\" --strip-components=1 \\\n\t&& ( cd \"$SECCOMP_PATH\" \\\n\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n\t\t&& make \\\n\t\t&& make install \\\n\t\t&& ldconfig) \\\n\n\t&& rm -rf \"$SECCOMP_PATH\"\n\n# Install Go\n# IMPORTANT: If the version of Go is updated, the Windows to Linux CI machines\n#            will need updating, to avoid errors. Ping #docker-maintainers on IRC\n#            with a heads-up.\nENV GO_VERSION 1.7.5\nRUN curl -fsSL \"https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz\" \\\n\t| tar -xzC /usr/local\nENV PATH /go/bin:/usr/local/go/bin:$PATH\nENV GOPATH /go\nENV CGO_LDFLAGS -L/lib\n\n# Install runc, containerd, tini and docker-proxy\n# Please edit hack/dockerfile/install-binaries.sh to update them.\nCOPY hack/dockerfile/binaries-commits /tmp/binaries-commits\nCOPY hack/dockerfile/install-binaries.sh /tmp/install-binaries.sh\nRUN /tmp/install-binaries.sh runc containerd tini proxy\n\nENV AUTO_GOPATH 1\nWORKDIR /usr/src/docker\nCOPY . /usr/src/docker\n"
}