{
  "startTime": 1674216120322,
  "endTime": 1674216121433,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nRUN apt-get update -yqq && apt-get install --no-install-recommends -yqq \\\nautoconf \\\nautomake \\\nbuild-essential \\\ncmake \\\ncurl \\\ngit \\\nlibboost-coroutine-dev \\\nlibboost-dev \\\nlibboost-filesystem-dev \\\nlibfdt-dev \\\nlibglib2.0-dev \\\nlibtbb-dev \\\nlibtool \\\nlibtool \\\npkg-config \\\nsoftware-properties-common \\\ntexinfo \\\nwget \\\nzlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /tmp\n\n# DOCKER\nENV DOCKER_BUCKET test.docker.com\nENV DOCKER_VERSION 1.12.0-rc2\nENV DOCKER_SHA256 6df54c3360f713370aa59b758c45185b9a62889899f1f6185a08497ffd57a39b\n\nRUN set -x \\\n    && curl -fSL \"https://${DOCKER_BUCKET}/builds/Linux/x86_64/docker-$DOCKER_VERSION.tgz\" -o docker.tgz \\\n    && echo \"${DOCKER_SHA256}  *docker.tgz\" | sha256sum -c - \\\n    && tar -xzvf docker.tgz \\\n    && mv docker/* /usr/local/bin/ \\\n    && rmdir docker \\\n    && rm docker.tgz \\\n    && docker -v\n\n# QEMU\nRUN git clone -b pin-threads https://github.com/SESA/qemu.git /tmp/qemu\nWORKDIR /tmp/qemu\nRUN git submodule update --init pixman\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --target-list=x86_64-softmmu --enable-vhost-net --enable-kvm\nRUN make -j\nRUN make install\nRUN make clean\n\n# CAPNPROTO\nRUN wget -O /tmp/capnproto.tar.gz https://github.com/sandstorm-io/capnproto/archive/v0.4.0.tar.gz\nWORKDIR /tmp\nRUN tar -xf /tmp/capnproto.tar.gz && rm /tmp/capnproto.tar.gz\nWORKDIR /tmp/capnproto-0.4.0/c++\nRUN autoreconf -i\nRUN CXXFLAGS=-fpermissive ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j\nRUN make install\nRUN make clean\n\n# Cleanup\nWORKDIR /\nRUN rm  /tmp/capnproto.tar.gz\nRUN rm -rf /tmp/capnproto-0.4.0\nRUN rm -rf /tmp/qemu\n"
}