{
  "startTime": 1674248456883,
  "endTime": 1674248457414,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.8\n\nLABEL version=\"0.01\"\n\n# Get the latest & greatest\nRUN apt-get update && \\\n    apt-get upgrade -y\n\nRUN apt-get install --no-install-recommends -y libffi-dev libmariadb-dev && rm -rf /var/lib/apt/lists/*;\n\n# Copy app into container\nCOPY ./docker-backend-entrypoint.sh /opt/\nCOPY ./docker-celery-entrypoint.sh /opt/\nCOPY ./docker-celery-beat-entrypoint.sh /opt/\nCOPY ./requirements.txt /opt/\n\n# Install required packages\nRUN pip install --no-cache-dir -r /opt/requirements.txt\n\n# Create sockets directory\nRUN mkdir /opt/sockets\n\n# Create static files directory\nRUN mkdir /opt/static\n\n# Environment variables\nENV DJANGO_SETTINGS_MODULE=app.settings.production\nENV DJANO_LOG_LEVEL=WARNING\n\n# Install uWSGI\nRUN pip install --no-cache-dir uwsgi\n\nRUN chmod a+x /opt/docker-backend-entrypoint.sh\nRUN chmod a+x /opt/docker-celery-entrypoint.sh\nRUN chmod a+x /opt/docker-celery-beat-entrypoint.sh\n"
}