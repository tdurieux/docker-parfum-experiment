diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/chitoku-k/homochecker/api/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/chitoku-k/homochecker/api/Dockerfile/repaired.Dockerfile
index e1b5441..7bc8e9f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/chitoku-k/homochecker/api/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/chitoku-k/homochecker/api/Dockerfile/repaired.Dockerfile
@@ -1,15 +1,14 @@
-# syntax = docker/dockerfile:experimental
 FROM debian:bullseye-slim AS build-dependencies
 RUN --mount=type=cache,id=api:/var/cache/apt,target=/var/cache/apt \
     --mount=type=cache,id=api:/var/lib/apt/lists,target=/var/lib/apt/lists \
     apt-get -y update && \
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
         autoconf \
         build-essential \
         git \
         libnghttp2-dev \
         libtool \
-        pkg-config
+        pkg-config && rm -rf /var/lib/apt/lists/*;
 
 FROM build-dependencies AS openssl
 RUN git clone --depth 1 -b OpenSSL_1_1_1n+quic https://github.com/quictls/openssl && \
@@ -23,7 +22,7 @@ FROM build-dependencies AS nghttp3
 RUN git clone --depth=1 -b v0.1.0 https://github.com/ngtcp2/nghttp3 && \
     cd nghttp3 && \
     autoreconf -fi && \
-    ./configure --enable-lib-only && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-lib-only && \
     make -j $(nproc) && \
     make install
 
@@ -33,7 +32,7 @@ COPY --from=nghttp3 /usr/local/ /usr/local/
 RUN git clone --depth=1 -b v0.1.0 https://github.com/ngtcp2/ngtcp2 && \
     cd ngtcp2 && \
     autoreconf -fi && \
-    ./configure --enable-lib-only && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-lib-only && \
     make -j $(nproc) && \
     make install
 
@@ -44,7 +43,7 @@ COPY --from=ngtcp2 /usr/local/ /usr/local/
 RUN git clone --depth=1 -b curl-7_80_0 https://github.com/curl/curl && \
     cd curl && \
     autoreconf -fi && \
-    ./configure --enable-alt-svc --with-openssl --with-nghttp2 --with-nghttp3 --with-ngtcp2 && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-alt-svc --with-openssl --with-nghttp2 --with-nghttp3 --with-ngtcp2 && \
     make -j $(nproc) && \
     make install && \
     ldconfig
@@ -63,7 +62,7 @@ COPY php/ /usr/src/php/
 RUN --mount=type=cache,id=api:/var/cache/apt,target=/var/cache/apt \
     --mount=type=cache,id=api:/var/lib/apt/lists,target=/var/lib/apt/lists \
     apt-get -y update && \
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
         libargon2-dev \
         libicu-dev \
         libnghttp2-dev \
@@ -79,7 +78,7 @@ RUN --mount=type=cache,id=api:/var/cache/apt,target=/var/cache/apt \
     cd /usr/src/php/ext/curl && \
     patch -u < /usr/src/php/ext/curl/interface.patch && \
     cd /usr/src/php && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --disable-cgi \
         --enable-fpm \
         --enable-mbstring \
@@ -122,16 +121,16 @@ RUN --mount=type=cache,id=api:/var/cache/apt,target=/var/cache/apt \
     rm -rf /tmp/* && \
     echo 'display_errors = 0' > /usr/local/etc/php/conf.d/overrides.ini && \
     sed -i 's/^access\.log/; \0/' /usr/local/etc/php-fpm.d/docker.conf && \
-    echo 'label ::1/128 0' > /etc/gai.conf
+    echo 'label ::1/128 0' > /etc/gai.conf && rm -rf /var/lib/apt/lists/*;
 
 FROM runtime AS dependencies
 COPY --from=composer:2.3.5 /usr/bin/composer /usr/bin/composer
 RUN --mount=type=cache,id=api:/var/cache/apt,target=/var/cache/apt \
     --mount=type=cache,id=api:/var/lib/apt/lists,target=/var/lib/apt/lists \
     apt-get -y update && \
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
         git \
-        unzip
+        unzip && rm -rf /var/lib/apt/lists/*;
 COPY composer.json composer.lock /var/www/html/api/
 RUN --mount=type=cache,id=api:/root/.composer,target=/root/.composer \
     composer install --no-dev --no-progress --no-scripts --no-autoloader && \
@@ -141,9 +140,9 @@ FROM dependencies AS dev
 RUN --mount=type=cache,id=api:/var/cache/apt,target=/var/cache/apt \
     --mount=type=cache,id=api:/var/lib/apt/lists,target=/var/lib/apt/lists \
     apt-get -y update && \
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
         autoconf \
-        build-essential
+        build-essential && rm -rf /var/lib/apt/lists/*;
 RUN --mount=type=cache,id=api:/root/.composer,target=/root/.composer \
     composer install --no-progress --no-scripts && \
     composer dump-autoload --no-scripts --optimize