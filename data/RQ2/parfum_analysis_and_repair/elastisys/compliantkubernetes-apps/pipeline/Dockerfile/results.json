{
  "startTime": 1674253313106,
  "endTime": 1674253314435,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update && \\\n     apt-get install --no-install-recommends -y software-properties-common && \\\n     add-apt-repository ppa:git-core/ppa && \\\n     apt-get update && \\\n     apt-get install --no-install-recommends -y \\\n         python3-pip make git wget \\\n         unzip ssh gettext-base \\\n         jq pwgen curl apache2-utils \\\n         net-tools iputils-ping && \\\n     rm -rf /var/lib/apt/lists/*\n\n# Kubectl\nENV KUBECTL_VERSION \"v1.22.6\"\nRUN wget \"https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" && \\\n    chmod +x ./kubectl && \\\n    mv ./kubectl /usr/local/bin/kubectl\n\n# sops\n# NOTE: This needs to be installed before the helm-secrets plugin.\nENV SOPS_VERSION=\"3.6.1\"\nRUN wget https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-v${SOPS_VERSION}.linux && \\\n    mv ./sops-v${SOPS_VERSION}.linux /usr/local/bin/sops && \\\n    chmod +x /usr/local/bin/sops\n\n# Helm\nENV HELM_VERSION \"v3.8.0\"\nRUN wget \"https://get.helm.sh/helm-${HELM_VERSION}-linux-amd64.tar.gz\" && \\\n    tar -zxvf \"helm-${HELM_VERSION}-linux-amd64.tar.gz\" && \\\n    mv linux-amd64/helm /usr/local/bin/helm && \\\n    rm -rf linux-amd64/ \"helm-${HELM_VERSION}-linux-amd64.tar.gz\"\n# We need to use this variable to override the default data path for helm\n# TODO Change when this is closed https://github.com/helm/helm/issues/7919\n# Should come with v3.3.0, see https://github.com/helm/helm/pull/7983\nENV XDG_DATA_HOME=/root/.config\nRUN helm plugin install https://github.com/databus23/helm-diff --version v3.1.2\nRUN helm plugin install https://github.com/jkroepke/helm-secrets --version v3.12.0\n\n# Helmfile\nENV HELMFILE_VERSION \"v0.144.0\"\nRUN wget \"https://github.com/roboll/helmfile/releases/download/${HELMFILE_VERSION}/helmfile_linux_amd64\" && \\\n    chmod +x helmfile_linux_amd64 && \\\n    mv helmfile_linux_amd64 /usr/local/bin/helmfile\n\n# s3cmd\nENV S3CMD_VERSION \"2.0.2\"\nRUN wget \"https://github.com/s3tools/s3cmd/releases/download/v${S3CMD_VERSION}/s3cmd-${S3CMD_VERSION}.tar.gz\" && \\\n    tar -zxvf \"s3cmd-${S3CMD_VERSION}.tar.gz\" && \\\n    pip3 install --no-cache-dir setuptools==45.2.0 && \\\n    cd \"s3cmd-${S3CMD_VERSION}\" && \\\n    python3 setup.py install && \\\n    cd ../ && \\\n    rm \"s3cmd-${S3CMD_VERSION}.tar.gz\"\n\n# yq\nENV YQ_VERSION \"3.4.1\"\nRUN wget \"https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64\" && \\\n    chmod +x yq_linux_amd64 && \\\n    mv yq_linux_amd64 /usr/local/bin/yq\n\n# opa\nENV OPA_VERSION \"v0.17.2\"\nRUN wget \"https://github.com/open-policy-agent/opa/releases/download/${OPA_VERSION}/opa_linux_amd64\" && \\\n    chmod +x opa_linux_amd64 && \\\n    mv opa_linux_amd64 /usr/local/bin/opa\n\n# Bats\nENV BATS_VERSION \"1.3.0\"\nRUN wget https://github.com/bats-core/bats-core/archive/refs/tags/v${BATS_VERSION}.tar.gz && \\\n    tar -zxvf \"v${BATS_VERSION}.tar.gz\" && \\\n    cd ./bats-core-${BATS_VERSION} && \\\n    ./install.sh /usr/local && rm \"v${BATS_VERSION}.tar.gz\"\n"
}