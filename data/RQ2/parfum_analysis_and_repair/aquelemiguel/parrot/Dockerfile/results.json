{
  "startTime": 1674251142536,
  "endTime": 1674251143147,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build image\n# Necessary dependencies to build Parrot\nFROM rust:slim-bullseye as build\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential autoconf automake libtool libssl-dev pkg-config && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR \"/parrot\"\n\n# Cache cargo build dependencies by creating a dummy source\nRUN mkdir src\nRUN echo \"fn main() {}\" > src/main.rs\nCOPY Cargo.toml ./\nRUN cargo build --release\n\nCOPY . .\nRUN cargo build --release\n\n# Release image\n# Necessary dependencies to run Parrot\nFROM debian:bullseye-slim\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip ffmpeg && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir -U yt-dlp\n\nCOPY --from=build /parrot/target/release/parrot .\n\nCMD [\"./parrot\"]\n"
}