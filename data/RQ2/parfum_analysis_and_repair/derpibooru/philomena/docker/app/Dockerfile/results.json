{
  "startTime": 1674249179775,
  "endTime": 1674249180670,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 203
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.13.1-alpine\n\nRUN (echo \"https://github.com/philomena-dev/prebuilt-ffmpeg/raw/master\"; cat /etc/apk/repositories) > /tmp/repositories \\\n    && cp /tmp/repositories /etc/apk/repositories \\\n    && apk update --allow-untrusted \\\n    && apk add --no-cache inotify-tools build-base git ffmpeg ffmpeg-dev npm nodejs file-dev libpng-dev gifsicle optipng libjpeg-turbo-utils librsvg imagemagick postgresql14-client wget rust cargo --allow-untrusted \\\n    && mix local.hex --force \\\n    && mix local.rebar --force\n\nADD https://api.github.com/repos/philomena-dev/cli_intensities/git/refs/heads/master /tmp/cli_intensities_version.json\nRUN git clone --depth 1 https://github.com/philomena-dev/cli_intensities /tmp/cli_intensities \\\n    && cd /tmp/cli_intensities \\\n    && make -j$(nproc) install\n\nADD https://api.github.com/repos/philomena-dev/mediatools/git/refs/heads/master /tmp/mediatools_version.json\nRUN git clone --depth 1 https://github.com/philomena-dev/mediatools /tmp/mediatools \\\n    && ln -s /usr/lib/librsvg-2.so.2 /usr/lib/librsvg-2.so \\\n    && cd /tmp/mediatools \\\n    && make -j$(nproc) install\n\nCOPY docker/app/run-development /usr/local/bin/run-development\nCOPY docker/app/run-test /usr/local/bin/run-test\nCOPY docker/app/safe-rsvg-convert /usr/local/bin/safe-rsvg-convert\nCOPY docker/app/purge-cache /usr/local/bin/purge-cache\nENV PATH=$PATH:/root/.cargo/bin\nCMD run-development\n"
}