{
  "startTime": 1674249562955,
  "endTime": 1674249563774,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# PHP Docker image for Yii 2.0 Framework runtime\n# ==============================================\n\nFROM php:7.3-apache\n\n# Install system packages for PHP extensions recommended for Yii 2.0 Framework\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install \\\n        gnupg2 && \\\n    apt-key update && \\\n    apt-get update && \\\n    apt-get -y install \\\n            g++ \\\n            git \\\n            curl \\\n            imagemagick \\\n            libcurl3-dev \\\n            libicu-dev \\\n            libfreetype6-dev \\\n            libjpeg-dev \\\n            libjpeg62-turbo-dev \\\n            libmagickwand-dev \\\n            libpq-dev \\\n            libpng-dev \\\n            libxml2-dev \\\n            libzip-dev \\\n            zlib1g-dev \\\n            default-mysql-client \\\n            openssh-client \\\n            nano \\\n            unzip \\\n            libcurl4-openssl-dev \\\n            libssl-dev \\\n        --no-install-recommends && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install PHP extensions required for Yii 2.0 Framework\nRUN docker-php-ext-configure gd \\\n        --with-freetype-dir=/usr/include/ \\\n        --with-png-dir=/usr/include/ \\\n        --with-jpeg-dir=/usr/include/ && \\\n    docker-php-ext-configure bcmath && \\\n    docker-php-ext-install \\\n        soap \\\n        zip \\\n        curl \\\n        bcmath \\\n        exif \\\n        gd \\\n        iconv \\\n        intl \\\n        mbstring \\\n        opcache \\\n        pdo_mysql \\\n        pdo_pgsql\n\n# Install PECL extensions\n# see http://stackoverflow.com/a/8154466/291573) for usage of `printf`\nRUN printf \"\\n\" | pecl install \\\n        imagick \\\n        mongodb && \\\n    docker-php-ext-enable \\\n        imagick \\\n        mongodb\n\n# Check if Xdebug extension need to be compiled\nRUN cd /tmp && \\\n    git clone git://github.com/xdebug/xdebug.git && \\\n    cd xdebug && \\\n    git checkout 2.9.0 && \\\n    phpize && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-xdebug && \\\n    make && \\\n    make install && \\\n    rm -rf /tmp/xdebug\n\n# Environment settings\nENV PHP_USER_ID=33 \\\n    PHP_ENABLE_XDEBUG=0 \\\n    PATH=/app:/app/vendor/bin:/root/.composer/vendor/bin:$PATH \\\n    TERM=linux \\\n    VERSION_PRESTISSIMO_PLUGIN=^0.3.7 \\\n    COMPOSER_ALLOW_SUPERUSER=1\n\n# Add configuration files\nCOPY conf/ /\n\n# Add GITHUB_API_TOKEN support for composer\nRUN chmod 700 \\\n        /usr/local/bin/docker-php-entrypoint \\\n        /usr/local/bin/composer\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- \\\n        --filename=composer.phar \\\n        --install-dir=/usr/local/bin && \\\n    composer clear-cache\n\n# Install composer plugins\nRUN composer global require --optimize-autoloader \\\n        \"hirak/prestissimo:${VERSION_PRESTISSIMO_PLUGIN}\" && \\\n    composer global dumpautoload --optimize && \\\n    composer clear-cache\n\n# Enable mod_rewrite for images with apache\nRUN if command -v a2enmod >/dev/null 2>&1; then \\\n        a2enmod rewrite headers \\\n    ;fi\n\n# Install Yii framework bash autocompletion\nRUN curl -f -L https://raw.githubusercontent.com/yiisoft/yii2/master/contrib/completion/bash/yii \\\n        -o /etc/bash_completion.d/yii\n\n# Requirements check (https://github.com/yiisoft/yii2-docker)\nRUN chmod 777 /tmp && \\\n    php /tmp/tests/requirements.php\n\n# Application environment\nWORKDIR /var/www/html\n"
}