{
  "startTime": 1674255395112,
  "endTime": 1674255396370,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 197,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 204,
        "lineEnd": 208,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 211,
        "lineEnd": 215,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 218,
        "lineEnd": 222,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Declare the telegraf image so we can copy telegraf binary out of it,\n# and avoid headache of having to add apt key / apt repo and/or build from src.\nFROM telegraf AS telegraf\nRUN touch /tmp/.nothing\n\n# Build final image\nFROM ghcr.io/sdr-enthusiasts/docker-baseimage:readsb-full\n\n# Copy telegraf\nCOPY --from=telegraf /usr/bin/telegraf /usr/bin/telegraf\n\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \\\n    ###########################################################################\n    ##### READSBRRD ENVIRONMENT VARS #####\n    READSBRRD_STEP=60 \\\n    ###########################################################################\n    ##### READSB GRAPH ENVIRONMENT VARS #####\n    READSB_GRAPH_SIZE=\"default\" \\\n    READSB_GRAPH_ALL_LARGE=\"no\" \\\n    READSB_GRAPH_FONT_SIZE=10.0 \\\n    READSB_GRAPH_MAX_MESSAGES_LINE=0 \\\n    READSB_GRAPH_LARGE_WIDTH=1096 \\\n    READSB_GRAPH_LARGE_HEIGHT=235 \\\n    READSB_GRAPH_SMALL_WIDTH=619 \\\n    READSB_GRAPH_SMALL_HEIGHT=324 \\\n    ###########################################################################\n    ##### AUTOGAIN ENVIRONMENT VARS #####\n    # How often the autogain.sh is run (in seconds)\n    AUTOGAIN_SERVICE_PERIOD=900 \\\n    # The autogain state file (init/finetune/finish)\n    AUTOGAIN_STATE_FILE=\"/run/autogain/state\" \\\n    # The current gain figure as-set by autogain\n    AUTOGAIN_CURRENT_VALUE_FILE=\"/run/autogain/autogain_current_value\" \\\n    # The timestamp (seconds since epoch) when the current gain figure was set\n    AUTOGAIN_CURRENT_TIMESTAMP_FILE=\"/run/autogain/autogain_current_timestamp\" \\\n    # The timestamp (seconds since epoch) when the current gain figure should be reviewed\n    AUTOGAIN_REVIEW_TIMESTAMP_FILE=\"/run/autogain/autogain_review_timestamp\" \\\n    # The maximum allowable percentage of strong messages\n    AUTOGAIN_PERCENT_STRONG_MESSAGES_MAX=10.0 \\\n    # The minimum allowable percentage of strong messages\n    AUTOGAIN_PERCENT_STRONG_MESSAGES_MIN=0.5 \\\n    # The number of seconds that autogain \"init\" stage should run for, for each gain level\n    AUTOGAIN_INITIAL_PERIOD=7200 \\\n    # The minimum number of local_accepted messages that autogain \"init\" stage should run for, for each gain level\n    AUTOGAIN_INITIAL_MSGS_ACCEPTED=1000000 \\\n    # The number of seconds that autogain \"finetune\" stage should run for, for each gain level\n    AUTOGAIN_FINETUNE_PERIOD=604800 \\\n    # The minimum number of local_accepted messages that autogain \"finetune\" stage should run for, for each gain level\n    AUTOGAIN_FINETUNE_MSGS_ACCEPTED=7000000 \\\n    # How long to run once finetune stage has finished before we start the process over (1 year)\n    AUTOGAIN_FINISHED_PERIOD=31536000 \\\n    # Maximum gain level that autogain should use\n    AUTOGAIN_MAX_GAIN_VALUE=49.6 \\\n    # Minimum gain level that autogain should use\n    AUTOGAIN_MIN_GAIN_VALUE=0.0 \\\n    # State file that will disappear when the container is rebuilt/restarted - so autogain can detect container restart/rebuild\n    AUTOGAIN_RUNNING_FILE=\"/tmp/.autogain_running\" \\\n    # maximum accepted gain value\n    AUTOGAIN_MAX_GAIN_VALUE_FILE=\"/run/autogain/autogain_max_value\" \\\n    # minimum accepted gain value\n    AUTOGAIN_MIN_GAIN_VALUE_FILE=\"/run/autogain/autogain_min_value\" \\\n    ###########################################################################\n    # Protobuf data from readsb\n    READSB_STATS_PB_FILE=\"/run/readsb/stats.pb\" \\\n    # Protobuf definition\n    READSB_PROTO_PATH=\"/opt/readsb-protobuf\" \\\n    # Current gain value\n    GAIN_VALUE_FILE=\"/tmp/.gain_current\" \\\n    ###########################################################################\n    # default BEAST out port\n    READSB_NET_BEAST_OUTPUT_PORT=30005 \\\n    # default BaseStation out port\n    READSB_NET_SBS_OUTPUT_PORT=30003 \\\n    # default RAW out put\n    READSB_NET_RAW_OUTPUT_PORT=30002 \\\n    ###########################################################################\n    PROMETHEUSPORT=9273 \\\n    PROMETHEUSPATH=\"/metrics\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Copy container filesystem\nCOPY rootfs/ /\n\nRUN set -x && \\\n    TEMP_PACKAGES=() && \\\n    KEPT_PACKAGES=() && \\\n    # Required for automatic gain script (to interpret .pb files).\n    KEPT_PACKAGES+=(protobuf-compiler) && \\\n    # Required for downloading stuff & readsb database updates\n    KEPT_PACKAGES+=(git) && \\\n    # Required for building multiple packages.\n    TEMP_PACKAGES+=(build-essential) && \\\n    TEMP_PACKAGES+=(pkg-config) && \\\n    TEMP_PACKAGES+=(cmake) && \\\n    TEMP_PACKAGES+=(autoconf) && \\\n    TEMP_PACKAGES+=(automake) && \\\n    # Packages for readsb web interface & graphs.\n    KEPT_PACKAGES+=(lighttpd) && \\\n    KEPT_PACKAGES+=(lighttpd-mod-magnet) && \\\n    KEPT_PACKAGES+=(collectd-core) && \\\n    KEPT_PACKAGES+=(rrdtool) && \\\n    KEPT_PACKAGES+=(jq) && \\\n    # Packages for telegraf\n    TEMP_PACKAGES+=(apt-transport-https) && \\\n    KEPT_PACKAGES+=(socat) && \\\n    TEMP_PACKAGES+=(gnupg) && \\\n    # Requirements for kalibrate-rtl\n    TEMP_PACKAGES+=(libtool) && \\\n    KEPT_PACKAGES+=(libfftw3-3) && \\\n    TEMP_PACKAGES+=(libfftw3-dev) && \\\n    TEMP_PACKAGES+=(libusb-1.0-0-dev) && \\\n    # Install packages.\n    apt-get update && \\\n    apt-get install -o Dpkg::Options::=\"--force-confold\" --force-yes -y --no-install-recommends \\\n        ${KEPT_PACKAGES[@]} \\\n        ${TEMP_PACKAGES[@]} \\\n        && \\\n    git config --global advice.detachedHead false && \\\n    # Build & install kalibrate-rtl\n    # See: https://discussions.flightaware.com/t/setting-frequency-offset-or-exact-frequency-ppm/15812/6\n    git clone https://github.com/steve-m/kalibrate-rtl.git \"/src/kalibrate-rtl\" && \\\n    pushd \"/src/kalibrate-rtl\" && \\\n    echo \"kalibrate-rtl $(git log | head -1 | tr -s ' ' '_')\" >> /VERSIONS && \\\n    ./bootstrap && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make all install && \\\n    popd && \\\n    # readsb - Deploy webapp.\n    ln -s /etc/lighttpd/conf-available/01-setenv.conf /etc/lighttpd/conf-enabled/01-setenv.conf && \\\n    ln -s /etc/lighttpd/conf-available/87-cachebust.conf /etc/lighttpd/conf-enabled/87-cachebust.conf && \\\n    ln -s /etc/lighttpd/conf-available/89-readsb.conf /etc/lighttpd/conf-enabled/89-readsb.conf && \\\n    ln -s /etc/lighttpd/conf-available/88-readsb-statcache.conf /etc/lighttpd/conf-enabled/88-readsb-statcache.conf && \\\n    # Healthcheck stuff\n    mkdir -p /etc/lighttpd/lua && \\\n    echo -e 'server.modules += (\"mod_magnet\")\\n\\n$HTTP[\"url\"] =~ \"^/health/?\" {\\n  magnet.attract-physical-path-to = (\"/etc/lighttpd/lua/healthcheck.lua\")\\n}' > /etc/lighttpd/conf-enabled/90-healthcheck.conf && \\\n    echo -e 'lighty.content = { \"OK\" }\\nreturn 200' > /etc/lighttpd/lua/healthcheck.lua && \\\n    # readsb - users/permissions/dirs.\n    addgroup --system --gid 1000 readsb && \\\n    useradd \\\n      --uid 1000 \\\n      --system \\\n      --home-dir /usr/share/readsb \\\n      --no-create-home \\\n      --no-user-group \\\n      --gid 1000 \\\n      --groups plugdev,dialout \\\n      readsb \\\n      && \\\n    mkdir -p \"/var/lib/collectd/rrd/localhost/readsb\" && \\\n    chmod -R 755 \"/var/lib/collectd\" && \\\n    chown readsb \"/var/lib/collectd\" && \\\n    chown -R readsb: \"/usr/share/readsb\" && \\\n    mkdir -p \"/run/readsb\" && \\\n    chmod -R 755 \"/run/readsb\" && \\\n    chown -R readsb: \"/run/readsb\" && \\\n    touch \"/etc/default/readsb\" && \\\n    chown -R readsb: \"/etc/default/readsb\" && \\\n    # lighttpd configuration - PID file location + permissions.\n    sed -i 's/^server\\.pid-file.*/server.pid-file = \"\\/var\\/run\\/lighttpd\\/lighttpd.pid\"/g' /etc/lighttpd/lighttpd.conf && \\\n    mkdir -p \"/var/run/lighttpd\" && \\\n    chown readsb \"/var/run/lighttpd\" && \\\n    # lighttpd configuration - mod_compress location + permissions.\n    mkdir -p \"/var/cache/lighttpd/compress/script/readsb/backend\" && \\\n    mkdir -p \"/var/cache/lighttpd/compress/css/bootstrap\" && \\\n    mkdir -p \"/var/cache/lighttpd/compress/css/leaflet\" && \\\n    chown -R readsb:www-data \"/var/cache/lighttpd\" && \\\n    chmod -R u+rwx,g+rwx \"/var/cache/lighttpd\" && \\\n    # lighttpd configuration - remove \"unconfigured\" conf.\n    rm -v \"/etc/lighttpd/conf-enabled/99-unconfigured.conf\" && \\\n    # lighttpd configuration - change server port (needs to be a high port as this is a rootless container).\n    sed -i 's/^server\\.port.*/server.port = 8080/g' /etc/lighttpd/lighttpd.conf && \\\n    # lighttpd configuration - remove errorlog, lighttpd runs in the foreground so errors will show in container log.\n    sed -i 's/^server\\.errorlog.*//g' /etc/lighttpd/lighttpd.conf && \\\n    # collectd configuration - move collectd DataDir under /run & set correct permissions.\n    mv -v \"/var/lib/collectd\" \"/run\" && \\\n    chown -R readsb \"/run/collectd\" && \\\n    ln -s \"/run/collectd\" \"/var/lib\" && \\\n    # copy our config in & remove empty dir\n    mv -v /etc/collectd.readsb/collectd.conf /etc/collectd/collectd.conf && \\\n    rmdir /etc/collectd.readsb && \\\n    # collectd configuration - remove unneeded readsb plugins.\n    sed -i 's/^LoadPlugin syslog.*//g' /etc/collectd/collectd.conf.d/readsb.collectd.conf && \\\n    sed -i 's/^LoadPlugin exec.*//g' /etc/collectd/collectd.conf.d/readsb.collectd.conf && \\\n    sed -i 's/^LoadPlugin curl.*//g' /etc/collectd/collectd.conf.d/readsb.collectd.conf && \\\n    # collectd configuration - remove syslog configuration from readsb config (as we'll be logging to stdout/container log).\n    sed -i '/<Plugin syslog>/,/<\\/Plugin>/d' /etc/collectd/collectd.conf.d/readsb.collectd.conf && \\\n    # set up auto-gain file structure\n    mkdir -p \"/run/autogain\" && \\\n    chown readsb \"/run/autogain\" && \\\n    # Configure telegraf\n    mkdir -p /etc/telegraf/telegraf.d && \\\n    mv -v /etc/telegraf.readsb/telegraf.conf /etc/telegraf/telegraf.conf && \\\n    rmdir /etc/telegraf.readsb && \\\n    echo \"telegraf --version\" >> /VERSIONS && \\\n    # Update readsb webapp databases\n    # attempt download of aircrafts.json\n    curl -f \\\n        --location \\\n        -o /usr/share/readsb/html/db/aircrafts.json \\\n        -z /usr/share/readsb/html/db/aircrafts.json \\\n        'https://github.com/Mictronics/readsb-protobuf/raw/dev/webapp/src/db/aircrafts.json' \\\n        && \\\n    # attempt download of dbversion.json\n    curl -f \\\n        --location \\\n        -o /usr/share/readsb/html/db/dbversion.json \\\n        -z /usr/share/readsb/html/db/dbversion.json \\\n        'https://github.com/Mictronics/readsb-protobuf/raw/dev/webapp/src/db/dbversion.json' \\\n        && \\\n    # attempt download of operators.json\n    curl -f \\\n        --location \\\n        -o /usr/share/readsb/html/db/operators.json \\\n        -z /usr/share/readsb/html/db/operators.json \\\n        'https://github.com/Mictronics/readsb-protobuf/raw/dev/webapp/src/db/operators.json' \\\n        && \\\n    # attempt download of types.json\n    curl -f \\\n        --location \\\n        -o /usr/share/readsb/html/db/types.json \\\n        -z /usr/share/readsb/html/db/types.json \\\n        'https://github.com/Mictronics/readsb-protobuf/raw/dev/webapp/src/db/types.json' \\\n        && \\\n    # Clean-up.\n    apt-get remove -y ${TEMP_PACKAGES[@]} && \\\n    apt-get autoremove -y && \\\n    rm -rf /src/* /tmp/* /var/lib/apt/lists/* && \\\n    # Document versions.\n    echo \"readsb $(readsb --version | cut -d ' ' -f 2)\" >> /VERSIONS && \\\n    cat /VERSIONS && \\\n    readsb --version | cut -d ' ' -f 2 > /CONTAINER_VERSION\n\n# Set s6 init as entrypoint\nENTRYPOINT [ \"/init\" ]\n\n# Add healthcheck\nHEALTHCHECK --start-period=3600s --interval=600s CMD /scripts/healthcheck.sh\n\n# This container can't be rootless - readsb can't talk to RTLSDR if USER is set :-(\n"
}