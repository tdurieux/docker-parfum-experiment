{
  "startTime": 1674248372719,
  "endTime": 1674248373880,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:rolling\n\n# This is just here so we can reuse the Docker cache between dev and\n# prod, it's not actually read by anything.\nARG UID\n\nCOPY scripts/my_init /usr/bin/my_init\n\nCOPY scripts/docker-install-phase0.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase0.bash\"\n\nCOPY scripts/docker-install-phase1.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase1.bash\"\n\nCOPY scripts/docker-install-phase2.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase2.bash\"\n\nCOPY scripts/docker-install-phase3a.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase3a.bash\"\n\nCOPY scripts/docker-install-phase3b.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase3b.bash\"\n\nCOPY scripts/docker-install-phase3c.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase3c.bash\"\n\nCOPY scripts/docker-install-phase3d.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase3d.bash\"\n\nCOPY scripts/docker-install-phase4.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase4.bash\"\n\nCOPY scripts/docker-install-phase5.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase5.bash\"\n\nCOPY scripts/docker-install-phase6.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase6.bash\"\n\nCOPY scripts/docker-install-phase7.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase7.bash\"\n\nCOPY scripts/docker-install-phase8.bash /tmp/\nRUN bash -c \"time /tmp/docker-install-phase8.bash '$UID'\"\n\nUSER docker\nWORKDIR /home/docker\nRUN chmod go-rwx /home/docker\nEXPOSE 6119\nEXPOSE 6120\n\nENTRYPOINT [\"/usr/bin/my_init\", \"/usr/local/bin/pid1.bash\"]\nCOPY scripts/pid1.bash /usr/local/bin/\nCMD [\"yarn\", \"run\", \"server\"]\n\nRUN mkdir /tmp/riju /tmp/riju/scripts\nCOPY --chown=docker:docker package.json yarn.lock /tmp/riju/\nRUN bash -c \"cd /tmp/riju && time yarn install\"\nCOPY --chown=docker:docker webpack.config.js tsconfig.json tsconfig-webpack.json /tmp/riju/\nCOPY --chown=docker:docker frontend /tmp/riju/frontend\nRUN bash -c \"cd /tmp/riju && time yarn run frontend\"\nCOPY --chown=docker:docker backend /tmp/riju/backend\nRUN bash -c \"cd /tmp/riju && time yarn run backend\"\nCOPY --chown=docker:docker scripts/compile-system.bash /tmp/riju/scripts\nCOPY --chown=docker:docker system /tmp/riju/system\nRUN bash -c \"cd /tmp/riju && time RIJU_PRIVILEGED=1 yarn run system\"\nCOPY --chown=docker:docker . /home/docker/src\nRUN sudo cp -a /tmp/riju/* /home/docker/src/ && rm -rf /tmp/riju\n\nWORKDIR /home/docker/src\nRUN sudo deluser docker sudo\nRUN RIJU_PRIVILEGED=1 CONCURRENCY=1 TIMEOUT_FACTOR=5 LANG=C.UTF-8 LC_ALL=C.UTF-8 yarn test && yarn cache clean;\n"
}