{
  "startTime": 1674220095083,
  "endTime": 1674220096176,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "ARG http_proxy=\"\"\nARG https_proxy=\"\"\nARG no_proxy=\"\"\n#\n#ARG http_proxy=\"http://www-proxy.us.oracle.com:80\"\n#ARG https_proxy=\"http://www-proxy.us.oracle.com:80\"\n#ARG no_proxy=\"\"\n#\nFROM debian AS builder\n#\n# To run on a laptop - not necessaritly on an RPi (hence the default-jdk below)\n# Demos the NavServer (Tide, Almanac, Weather faxes, etc)\n# Clones the repo and recompiles everything, and archive it for production (step 2)\n# proxy settings are passed as ARGs\n#\nLABEL maintainer=\"Olivier LeDiouris <olivier@lediouris.net>\"\n#\n# Uncomment if running behind a firewall (also set the proxies at the Docker level to the values below)\nENV http_proxy ${http_proxy}\nENV https_proxy ${https_proxy}\n# ENV ftp_proxy $http_proxy\nENV no_proxy ${no_proxy}\n#\n\nRUN echo \"alias ll='ls -lisah'\" >> $HOME/.bashrc\n\nRUN \\\n  apt-get update && \\\n  apt-get upgrade -y && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --fix-missing -y curl git build-essential default-jdk zip && \\\n  rm -rf /var/lib/apt/lists/*\n\n#RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -\n#RUN apt-get install -y nodejs\n\nRUN mkdir /workdir\nWORKDIR /workdir\nRUN git clone https://github.com/OlivierLD/raspberry-coffee.git\nWORKDIR /workdir/raspberry-coffee\nRUN ./gradlew tasks\n# RUN ./gradlew tasks -Dhttp.proxyHost=www-proxy.us.oracle.com -Dhttp.proxyPort=80 -Dhttps.proxyHost=www-proxy.us.oracle.com -Dhttps.proxyPort=80\nWORKDIR /workdir/raspberry-coffee/NMEA-mux-WebUI/full-server\nRUN ./builder.sh\nRUN find . -name '*.gz'\n# The step above has generated an NMEADist.tar.gz in NMEA-mux-WebUI/full-server\nRUN echo \"Build is done!\"\n\n# 2nd stage, build the runtime image\n# FROM openjdk:8-jre-slim # This one not for Raspberry Pi\nFROM resin/raspberrypi3-debian:latest\n\n# Uncomment if running behind a firewall (also set the proxies at the Docker level to the values below)\nENV http_proxy ${http_proxy}\nENV https_proxy ${https_proxy}\n# ENV ftp_proxy $http_proxy\nENV no_proxy ${no_proxy}\n\nRUN echo \"alias ll='ls -lisah'\" >> $HOME/.bashrc\nRUN echo \"banner Nav Server\" >> $HOME/.bashrc\nRUN echo \"java -version\" >> $HOME/.bashrc\n\n# RUN apt-get install -y default-jdk\nRUN apt-get update\n# RUN apt-get install -y oracle-java8-jdk\n# RUN java -version\nRUN apt-get install --no-install-recommends --fix-missing -y sysvbanner vim && rm -rf /var/lib/apt/lists/*;\n# TODO Install librxtx-java ?\n\nWORKDIR /navserver\nCOPY --from=builder /workdir/raspberry-coffee/NMEA-mux-WebUI/full-server/NMEADist.tar.gz ./\n\nRUN tar -xzf NMEADist.tar.gz && rm NMEADist.tar.gz\n\n#ENV http_proxy \"\"\n#ENV https_proxy \"\"\n#ENV no_proxy \"\"\nWORKDIR /navserver/NMEADist\nEXPOSE 9999\nCMD [ \"./start-mux.sh\", \"--no-background\" ]\n\n# To push to docker\n# docker tag de1ddc31533e olivierlediouris/navserver:latest\n# docker login --username olivierlediouris --password xxxxxx\n# docker push olivierlediouris/navserver:latest\n# The local image can be removed, and it can now be run like\n# docker run olivierlediouris/navserver\n\n"
}