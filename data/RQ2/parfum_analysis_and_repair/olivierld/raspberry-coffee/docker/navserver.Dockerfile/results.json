{
  "startTime": 1674249931720,
  "endTime": 1674249932435,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "ARG http_proxy=\"\"\nARG https_proxy=\"\"\nARG no_proxy=\"\"\n#\n#ARG http_proxy=\"http://www-proxy.us.oracle.com:80\"\n#ARG https_proxy=\"http://www-proxy.us.oracle.com:80\"\n#ARG no_proxy=\"\"\n#\n# The :buster is option. But bullseye may have some security issues (when downloading the image)\nFROM debian:buster\n#\n# To run on a laptop - not necessarily on an RPi (hence the default-jdk below)\n# Demos the NavServer (Tide, Almanac, Weather faxes, etc)\n# Clones the repo and recompiles everything.\n# proxy settings are passed as ARGs\n#\nLABEL maintainer=\"Olivier LeDiouris <olivier@lediouris.net>\"\n#\n# Uncomment if running behind a firewall (also set the proxies at the Docker level to the values below)\nENV http_proxy ${http_proxy}\nENV https_proxy ${https_proxy}\n# ENV ftp_proxy $http_proxy\nENV no_proxy ${no_proxy}\n#\n\nRUN echo \"alias ll='ls -lisah'\" >> $HOME/.bashrc\n\nRUN \\\n  apt-get update && \\\n  apt-get upgrade -y && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --fix-missing -y curl git build-essential default-jdk sysvbanner vim && \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"banner Nav Server\" >> $HOME/.bashrc\nRUN echo \"git --version\" >> $HOME/.bashrc\nRUN echo \"echo -n 'node:' && node -v\" >> $HOME/.bashrc\nRUN echo \"echo -n 'npm:' && npm -v\" >> $HOME/.bashrc\nRUN echo \"java -version\" >> $HOME/.bashrc\n\nRUN mkdir /workdir\nWORKDIR /workdir\nRUN git clone https://github.com/OlivierLD/raspberry-coffee.git\nWORKDIR /workdir/raspberry-coffee\n# RUN git submodule update --init\nRUN git clone https://github.com/OlivierLD/AstroComputer.git\nRUN ./gradlew tasks\n# RUN ./gradlew tasks -Dhttp.proxyHost=www-proxy.us.oracle.com -Dhttp.proxyPort=80 -Dhttps.proxyHost=www-proxy.us.oracle.com -Dhttps.proxyPort=80\nWORKDIR /workdir/raspberry-coffee/RESTNavServer\nRUN ../gradlew shadowJar\n# RUN ../gradlew shadowJar -Dhttp.proxyHost=www-proxy.us.oracle.com -Dhttp.proxyPort=80 -Dhttps.proxyHost=www-proxy.us.oracle.com -Dhttps.proxyPort=80\nWORKDIR /workdir/raspberry-coffee/RESTNavServer/launchers\n\n#ENV http_proxy \"\"\n#ENV https_proxy \"\"\n#ENV no_proxy \"\"\n\nEXPOSE 9999\n# This is delivering the functionality. Change it at will.\nCMD [\"./runNavServer.sh\"]\n"
}