{
  "startTime": 1674220888336,
  "endTime": 1674220889136,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.8\n\n#\n# Uncomment the ENV lines if a proxy is needed.\n#\n# ENV http_proxy http://www-proxy.us.oracle.com:80\n# ENV https_proxy http://www-proxy.us.oracle.com:80\n\nRUN echo \"alias ll='ls -lisah'\" >> $HOME/.bashrc\nRUN apt-get update && apt-get install --no-install-recommends -y sysvbanner && rm -rf /var/lib/apt/lists/*;\nRUN echo \"banner Golang!\" >> $HOME/.bashrc\n\nWORKDIR /go/src\n# From local file system to image\nCOPY ./go/app ./app\n#    |        |\n#    |        In the Docker image\n#    On the host (this machine)\n#\nWORKDIR /go/src/app\n\nRUN go get -d -v ./...\nRUN go install -v ./...\n# run ./app after that go build\nRUN go build\n\n# ENV http_proxy \"\"\n# ENV https_proxy \"\"\n\nCMD [\"app\"]\n#\n# Result is in the logs -> docker logs <container ID>\n#\n"
}