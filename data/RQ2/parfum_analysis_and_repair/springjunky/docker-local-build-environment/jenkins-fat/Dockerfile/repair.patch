diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/springjunky/docker-local-build-environment/jenkins-fat/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/springjunky/docker-local-build-environment/jenkins-fat/Dockerfile/repaired.Dockerfile
index 06b9c88..b299841 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/springjunky/docker-local-build-environment/jenkins-fat/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/springjunky/docker-local-build-environment/jenkins-fat/Dockerfile/repaired.Dockerfile
@@ -9,29 +9,29 @@ ENV JAVA_VERSION=8 \
 RUN apt-get update
 #--------------------------------------------
 #------------ Open JDK
-RUN apt-get install -y openjdk-8-jdk
+RUN apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;
 #--------------------------------------------
 #------------ Tools for Jenkins and apt-get to use SSL Repositorys
 RUN apt-get install -y --no-install-recommends apt-utils git wget curl graphviz \
-    apt-transport-https ca-certificates software-properties-common gpg-agent zip unzip
+    apt-transport-https ca-certificates software-properties-common gpg-agent zip unzip && rm -rf /var/lib/apt/lists/*;
 #-----------------------------------------------
 #---------------  Ansible
 #-----------------------------------------------
 RUN  apt-add-repository ppa:ansible/ansible 2>/dev/null
-RUN  apt-get update  &&  apt-get -y install ansible
+RUN apt-get update && apt-get -y --no-install-recommends install ansible && rm -rf /var/lib/apt/lists/*;
 #--------------------------------------------
 #------------ Docker
 #--------------------------------------------
-RUN echo 
+RUN echo
 RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg > docker-public-key && \
     apt-key add docker-public-key && \
-    rm docker-public-key 
+    rm docker-public-key
 RUN add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) edge test" && \
-     apt-get update && apt-get install -y docker-ce
+     apt-get update && apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;
 #--------------------------------------------
 #------------ Docker Compose
 #--------------------------------------------
-RUN curl -o /usr/bin/docker-compose -L \
+RUN curl -f -o /usr/bin/docker-compose -L \
     "https://github.com/docker/compose/releases/download/1.21.2/docker-compose-$(uname -s)-$(uname -m)" \
     && chmod +x /usr/bin/docker-compose
 
@@ -41,7 +41,7 @@ RUN curl -o /usr/bin/docker-compose -L \
 
 ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64
 
-# This is the line for the Jenkins prefix to set to get access with nginx and a 
+# This is the line for the Jenkins prefix to set to get access with nginx and a
 # comfortable path like http://<yourhost>/jenins... remember
 # to set the location in the  reverse-proxy.conf if you change this
 
@@ -51,11 +51,11 @@ ENV GIT_SSL_NO_VERIFY=1
 #  Maven
 #----------------------------------------
 RUN wget --no-verbose -O /tmp/apache-maven-3.5.3.tar.gz \
-          http://archive.apache.org/dist/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.tar.gz
+          https://archive.apache.org/dist/maven/maven-3/3.5.3/binaries/apache-maven-3.5.3-bin.tar.gz
 # verify checksum and install maven
 RUN echo "51025855d5a7456fc1a67666fbef29de /tmp/apache-maven-3.5.3.tar.gz" | md5sum -c && \
-    tar xzf /tmp/apache-maven-3.5.3.tar.gz -C /opt/ && ln -s /opt/apache-maven-3.5.3 /opt/maven
-    
+    tar xzf /tmp/apache-maven-3.5.3.tar.gz -C /opt/ && ln -s /opt/apache-maven-3.5.3 /opt/maven && rm /tmp/apache-maven-3.5.3.tar.gz
+
 ENV MAVEN_HOME /opt/maven
 ENV PATH $MAVEN_HOME/bin:$JAVA_HOME/bin:$PATH
 
@@ -96,7 +96,7 @@ RUN echo JENKINS_LTS_VERSION=${JENKINS_LTS_VERSION}
 #### jenkins.war checksum, download will be validated using it
 ARG JENKINS_URL=http://updates.jenkins-ci.org/download/war/${JENKINS_LTS_VERSION}/jenkins.war
 # could use ADD but this one does not check Last-Modified header neither does it allow to control checksum  see https://github.com/docker/docker/issues/8331
-RUN echo Download from ${JENKINS_URL} && curl -fL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war 
+RUN echo Download from ${JENKINS_URL} && curl -fL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war
 
 ###### # Copy all Cached plugins ...
 COPY Plugins/${JENKINS_LTS_VERSION}/* /usr/share/jenkins/ref/plugins/
@@ -115,7 +115,7 @@ ENV JAVA_OPTIONS="-Djava.awt.headless=true -Dhudson.security.csrf.requestfield=c
 
 ENTRYPOINT ["/bin/tini", "--", "/usr/local/bin/jenkins.sh"]
 #-------------------------------------------------------------------------
-# if you need a list of all your actual plugins use this to 
+# if you need a list of all your actual plugins use this to
 # get all Plugins from an existing Jenins without Version (latest is used)
 #--------------------------------------------------------------------------
 # JENKINS_HOST=username:password@myhost.com:port