{
  "startTime": 1674252433182,
  "endTime": 1674252433847,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16 as base\nCOPY ./package.json ./\nRUN npm install && npm cache clean --force;\n# Package a\nFROM base as a-build_prepare\nWORKDIR /app/packages/a\nCOPY  packages/a/package-slim.json package.json\nWORKDIR /app/\nRUN npx lerna bootstrap --scope=a --includeDependencies\nFROM a-build_prepare as a-build\nWORKDIR /app/packages/a\nCOPY  packages/a/package.json ./\nRUN npm run build\n# Package b\nFROM base as b-build_prepare\nWORKDIR /app/packages/b\nCOPY  packages/b/package-slim.json package.json\nWORKDIR /app/\nCOPY --from=a-build_prepare /app/packages/a/package.json /app/packages/a/\nRUN npx lerna bootstrap --scope=b --includeDependencies\nFROM b-build_prepare as b-build\nCOPY --from=a-build /app/packages/a/ /app/packages/a/\nWORKDIR /app/packages/b\nCOPY  packages/b/package.json ./\nRUN npm run build\n# Package c\nFROM base as c-build_prepare\nWORKDIR /app/packages/c\nCOPY  packages/c/package-slim.json package.json\nWORKDIR /app/\nCOPY --from=b-build_prepare /app/packages/b/package.json /app/packages/b/\nCOPY --from=a-build_prepare /app/packages/a/package.json /app/packages/a/\nRUN npx lerna bootstrap --scope=c --includeDependencies\nFROM c-build_prepare as c-build\nCOPY --from=b-build /app/packages/b/ /app/packages/b/\nCOPY --from=a-build /app/packages/a/ /app/packages/a/\nWORKDIR /app/packages/c\nCOPY  packages/c/package.json ./\nRUN npm run build\n# final stage\nFROM base\nCOPY --from=a-build /app/packages/a /app/packages/a\nCOPY --from=b-build /app/packages/b /app/packages/b\nCOPY --from=c-build /app/packages/c /app/packages/c"
}