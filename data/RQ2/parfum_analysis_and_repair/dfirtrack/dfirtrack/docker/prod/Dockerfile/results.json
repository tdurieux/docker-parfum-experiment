{
  "startTime": 1674254602954,
  "endTime": 1674254603939,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8\n\n# create dfirtrack dir, copy repo to it and install requirements\nWORKDIR /dfirtrack\nCOPY . /dfirtrack\nRUN apt-get update && apt-get -y --no-install-recommends install postgresql-client nano nginx && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir -r requirements.txt\n\n# create default mkdocs.yml\nRUN mkdocs new markdown\nRUN mkdir -p markdown/docs/systems\nCOPY docker/shared_files/mkdocs.yml markdown/mkdocs.yml\n\n# copy nginx configs\nRUN rm /etc/nginx/sites-enabled/default\nCOPY docker/shared_files/nginx.site.conf /etc/nginx/sites-available/dfirtrack\nCOPY docker/shared_files/nginx.site.insecure.conf /etc/nginx/sites-available/dfirtrack_insecure\nRUN mkdir /etc/nginx/ssl\n\n# create certificate for tls and modify nginx config accordingly\nWORKDIR /dfirtrack\nARG openssl_o=testo\nARG fqdn=localhost\nARG openssl_ou=testou\nRUN openssl req -newkey rsa:4096 -days 365 -nodes -x509 -subj \"/O=$openssl_o/CN=$fqdn/OU=$openssl_ou\" -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt\nRUN sed -i \"s/server_name dfirtrack_app;/server_name $fqdn;/\" /etc/nginx/sites-available/dfirtrack\nRUN sed -i \"s/server_name dfirtrack_app;/server_name $fqdn;/\" /etc/nginx/sites-available/dfirtrack_insecure\n\n# copy dfirtrack local settings\nCOPY docker/shared_files/local_settings.py dfirtrack/local_settings.py\n\n# copy entrypoint\nCOPY docker/prod/entrypoint.sh docker/prod/entrypoint.sh\n\nRUN ./manage.py collectstatic\nEXPOSE 80\nEXPOSE 443\nENTRYPOINT docker/prod/entrypoint.sh\n"
}