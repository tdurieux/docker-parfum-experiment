{
  "startTime": 1674249703017,
  "endTime": 1674249704129,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM surnet/alpine-wkhtmltopdf:3.13.5-0.12.6-full as wkhtmltopdf\nFROM node:14.17.6-alpine3.14 as base\nWORKDIR /srv/http/www/invoiceneko/\n\n# Essentials\nRUN echo \"UTC\" > /etc/timezone\nRUN apk add --no-cache \\\n    zip \\\n    unzip \\\n    curl \\\n    sqlite \\\n    nginx \\\n    supervisor \\\n    git \\\n    g++ \\\n    make \\\n    bash \\\n    zlib-dev \\\n    libpng-dev \\\n    autoconf \\\n    automake \\\n    libtool \\\n    tiff \\\n    jpeg \\\n    zlib \\\n    pkgconf \\\n    nasm \\\n    file \\\n    gcc \\\n    musl-dev \\\n    libltdl \\\n    python2 \\\n    xvfb \\\n    xvfb-run \\\n    libstdc++ \\\n    libx11 \\\n    libxrender \\\n    libxext \\\n    libssl1.1 \\\n    ca-certificates \\\n    fontconfig \\\n    freetype \\\n    ttf-dejavu \\\n    ttf-droid \\\n    ttf-freefont \\\n    ttf-liberation \\\n    dbus \\\n    screen \\\n    chromium \\\n    chromium-chromedriver\n\nRUN apk add --no-cache --virtual .build-deps \\\n    msttcorefonts-installer \\\n    \\\n    # Install microsoft fonts\n    && update-ms-fonts \\\n    && fc-cache -f \\\n    \\\n    # Clean up when done\n    && rm -rf /tmp/* \\\n    && apk del .build-deps\n\nCOPY --from=wkhtmltopdf /bin/wkhtmltopdf /usr/bin/wkhtmltopdf\nCOPY --from=wkhtmltopdf /bin/wkhtmltoimage /usr/bin/wkhtmltoimage\nCOPY --from=wkhtmltopdf /bin/libwkhtmltox* /usr/bin/\n\n# Installing PHP\nRUN apk add --no-cache php8 \\\n    php8-common \\\n    php8-fpm \\\n    php8-pdo \\\n    php8-opcache \\\n    php8-zip \\\n    php8-phar \\\n    php8-iconv \\\n    php8-cli \\\n    php8-curl \\\n    php8-openssl \\\n    php8-mbstring \\\n    php8-tokenizer \\\n    php8-fileinfo \\\n    php8-json \\\n    php8-xml \\\n    php8-xmlwriter \\\n    php8-simplexml \\\n    php8-dom \\\n    php8-pdo_mysql \\\n    php8-pdo_sqlite \\\n    php8-tokenizer \\\n    php8-pecl-redis \\\n    php8-bcmath \\\n    php8-ctype \\\n    php8-gd \\\n    php8-pcntl \\\n    php8-posix \\\n    php8-xmlreader \\\n    php8-intl\n\n# Installing composer\nRUN ln -s /usr/bin/php8 /usr/bin/php\nRUN curl -f -sS https://getcomposer.org/installer -o composer-setup.php\nRUN php composer-setup.php --install-dir=/usr/local/bin --filename=composer\nRUN rm -rf composer-setup.php\n\n# Configure supervisor\nRUN mkdir -p /etc/supervisor.d/\n\n# Configure php-fpm\nRUN mkdir -p /run/php/\nRUN touch /run/php/php8.0-fpm.pid\nRUN touch /run/php/php8.0-fpm.sock\nRUN sed -i 's~listen = 127.0.0.1:9000~listen = /run/php/php8.0-fpm.sock~g' /etc/php8/php-fpm.d/www.conf\nRUN sed -i 's~;listen.owner = nobody~listen.owner = nginx~g' /etc/php8/php-fpm.d/www.conf\nRUN sed -i 's~;listen.group = nobody~listen.group = nginx~g' /etc/php8/php-fpm.d/www.conf\nRUN sed -i 's~;listen.mode = 0660~listen.mode = 0660~g' /etc/php8/php-fpm.d/www.conf\nRUN sed -i 's~user = nobody~user = nginx~g' /etc/php8/php-fpm.d/www.conf\nRUN sed -i 's~group = nobody~group = nginx~g' /etc/php8/php-fpm.d/www.conf\n\n# Configure nginx\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\nRUN mkdir -p /run/nginx/\nRUN touch /run/nginx/nginx.pid\n\nRUN ln -sf /dev/stdout /var/log/nginx/access.log\nRUN ln -sf /dev/stderr /var/log/nginx/error.log\n\n# Building process\nCOPY --chown=nginx:nginx . .\nRUN composer install\n\n# Configure Laravel logs\nRUN ln -sf /dev/stdout /srv/http/www/invoiceneko/storage/laravel.log\n\nEXPOSE 80\nCMD [\"supervisord\", \"-c\", \"/etc/supervisor.d/supervisord.conf\"]\n"
}