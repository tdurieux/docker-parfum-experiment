{
  "startTime": 1674255274271,
  "endTime": 1674255275159,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 4,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends -qq \\\n                    clang-8 \\\n                    cloc \\\n                    cpio \\\n                    gcc-8 \\\n                    git \\\n                    libdata-printer-perl \\\n                    m4 \\\n                    make \\\n                    ocaml \\\n                    opam \\\n                    cpanminus \\\n                    perl-doc \\\n                    sudo \\\n                    wget && \\\n    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 1000 && \\\n    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 1000 && \\\n    useradd -d /home/eval -m -s /bin/bash eval && \\\n    echo \"eval ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/eval && \\\n    chmod 0440 /etc/sudoers.d/eval && \\\n    passwd -l eval && \\\n    chown -R eval:eval /home/eval && rm -rf /var/lib/apt/lists/*;\n\n # &&                                            \\\n#    rm -rf /var/lib/apt/lists/*\n\nUSER eval\nENV HOME /home/eval\nWORKDIR /home/eval\n\n# Bring Coq & Menhir\nRUN opam init --disable-sandboxing -a -y && \\\n    opam install -y -j4 coq.8.8.1           \\\n                        menhir.20180905\n\n# Bring up Perl dependencies\nRUN sudo cpanm install -f File::Copy::Recursive \\\n                          JSON                  \\\n                          Statistics::Test::WilcoxonRankSum\n\n# Bring ICC\nCOPY --chown=eval config.cfg /tmp/icc-config.cfg\n\n# Note: provide a (valid) Intel activation key\nARG ACTIVATION_SERIAL_NUMBER\n\n# RUN cd /tmp && mkdir intel && \\\n#     echo ACTIVATION_SERIAL_NUMBER=$ACTIVATION_SERIAL_NUMBER >> /tmp/icc-config.cfg && \\\n#     wget -O icc.tgz http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12717/parallel_studio_xe_2018_update2_cluster_edition_online.tgz && \\\n#     tar -xvzf icc.tgz && \\\n#     cd parallel_studio_xe_2018_update2_cluster_edition_online && \\\n#     bash install.sh --silent=/tmp/icc-config.cfg --cli-mode --user-mode && \\\n#     cd .. && \\\n#     rm -rf parallel_studio_xe_2018_update2_cluster_edition_online icc.tgz \\\n#            /tmp/icc-config.cfg\n\nENV PATH=\"/home/eval/intel/bin/:${PATH}\"\nENV INTEL_LICENSE_FILE=\"/home/eval/intel/licenses/\"\n\n# Add instructions on Bash startup\nCOPY motd.sh $HOME/\nRUN echo \". ~/motd.sh\" >> $HOME/.bashrc\n\n# Bring Usuba\nRUN git clone https://github.com/DadaIsCrazy/usuba.git && \\\n    cd usuba && ./configure.pl && opam config exec -- make\n\nENTRYPOINT [ \"opam\", \"config\", \"exec\", \"--\" ]\n#CMD [\"/bin/bash\", \"-c\", \"cd usuba/bench && perl run_benchs.pl\" ]\nCMD [\"/bin/bash\", \"-c\", \"ulimit -s unlimited && cd usuba && perl bench_perfs.pl\" ]"
}