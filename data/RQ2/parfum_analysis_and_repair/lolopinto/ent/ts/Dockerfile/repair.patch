diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lolopinto/ent/ts/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lolopinto/ent/ts/Dockerfile/repaired.Dockerfile
index d635de1..0ec653f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lolopinto/ent/ts/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lolopinto/ent/ts/Dockerfile/repaired.Dockerfile
@@ -38,31 +38,31 @@ RUN \
   apt-get update && \
   # wget and gnupg are dependencies needed below
   # libpq-dev for libpq
-  apt-get install -yqq wget gnupg libpq-dev curl && \
+  apt-get install --no-install-recommends -yqq wget gnupg libpq-dev curl && \
   # add architecture needed for arm64 builds
   dpkg --add-architecture amd64 && \
-  curl -LO https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb && dpkg -i ripgrep_13.0.0_amd64.deb && \
+  curl -f -LO https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb && dpkg -i ripgrep_13.0.0_amd64.deb && \
   #  echo "deb https://deb.nodesource.com/node_$NODE_VERSION.x/ buster main" > /etc/apt/sources.list.d/nodesource.list && \
   #  wget -qO- https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
   echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list && \
   wget -qO- https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
   curl -fsSL https://deb.nodesource.com/setup_$NODE_VERSION.x | bash - && \
   apt-get update && \
-  apt-get install -yqq nodejs yarn && \
+  apt-get install --no-install-recommends -yqq nodejs yarn && \
   apt-get autoremove wget -yqq && \
   rm -rf /var/lib/apt/lists/*
 
 # these next ones are not included in slim variants
 
-RUN apt update && apt --assume-yes install zsh && \
+RUN apt update && apt --assume-yes -y --no-install-recommends install zsh && \
   rm -rf /var/lib/apt/lists/*
-RUN npm install -g typescript@4.4.2 prettier@2.3.2 ts-node@10.7 @swc/core@1.2.155 @swc/cli@0.1.55
+RUN npm install -g typescript@4.4.2 prettier@2.3.2 ts-node@10.7 @swc/core@1.2.155 @swc/cli@0.1.55 && npm cache clean --force;
 
 WORKDIR /app
-RUN npm install --save-dev tsconfig-paths@3.11.0
+RUN npm install --save-dev tsconfig-paths@3.11.0 && npm cache clean --force;
 
 COPY --from=golang-image /go/bin/tsent /go/bin/tsent
-# NOTE: if ever debugging in docker image, code is at 
+# NOTE: if ever debugging in docker image, code is at
 # /opt/venv/lib/python3.8/site-packages/auto_schema/
 COPY --from=python-image /opt/venv /opt/venv
 # RUN alias auto_schema=auto_schema_test