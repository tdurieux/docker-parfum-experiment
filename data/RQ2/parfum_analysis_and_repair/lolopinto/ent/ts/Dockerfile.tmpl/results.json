{
  "startTime": 1674252309040,
  "endTime": 1674252310307,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 98
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 18,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 18,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GOLANG_VERSION={{.TsentVersion}}\nARG AUTO_SCHEMA_VERSION={{.AutoSchemaVersion}}\nARG NODE_VERSION={{.NodeVersion}}\nARG DOCKER_TAG={{.DockerTag}}\n\n# get and install tsent\nFROM golang:1.17.9-buster AS golang-image\nARG GOLANG_VERSION\nARG DOCKER_TAG\nENV GOPATH=$HOME/go\nENV GOBIN $GOPATH/bin\nENV PATH $PATH:$GOPATH/bin\nRUN go install -ldflags=\"-X 'github.com/lolopinto/ent/internal/build_info.DockerVersion=$DOCKER_TAG' -X 'github.com/lolopinto/ent/internal/build_info.Time=$(date)'\" github.com/lolopinto/ent/tsent@$GOLANG_VERSION\n\n# get and install auto_schema\nFROM python:3.8.11-buster AS python-image\nARG AUTO_SCHEMA_VERSION\nRUN python -m venv /opt/venv\n# Make sure we use the virtualenv\nENV PATH /opt/venv/bin:$PATH\n\nRUN python3 -m pip install auto_schema==$AUTO_SCHEMA_VERSION\n#RUN python3 -m pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ auto_schema_test==$AUTO_SCHEMA_VERSION\n\n# final image needs to be python-based to have auto-schema work\nFROM python:3.8.11-slim AS final-image\nARG GOLANG_VERSION\nARG NODE_VERSION\n\nENV PATH /opt/venv/bin:$PATH\nENV PATH /go/bin:$PATH\n\n# this is associating this image with this repo\nLABEL org.opencontainers.image.source https://github.com/lolopinto/ent\n\n# install node and dependencies\nRUN \\\n  apt-get update && \\\n  # wget and gnupg are dependencies needed below\n  # libpq-dev for libpq\n  apt-get install --no-install-recommends -yqq wget gnupg libpq-dev curl && \\\n  dpkg --add-architecture amd64 && \\\n  curl -f -LO https://github.com/BurntSushi/ripgrep/releases/download/13.0.0/ripgrep_13.0.0_amd64.deb && dpkg -i ripgrep_13.0.0_amd64.deb && \\\n  #  echo \"deb https://deb.nodesource.com/node_$NODE_VERSION.x/ buster main\" > /etc/apt/sources.list.d/nodesource.list && \\\n  #  wget -qO- https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list && \\\n  wget -qO- https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  curl -fsSL https://deb.nodesource.com/setup_$NODE_VERSION.x | bash - && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -yqq nodejs yarn && \\\n  apt-get autoremove wget -yqq && \\\n  rm -rf /var/lib/apt/lists/*\n\n{{ if .Development -}}\n\nRUN apt update && apt --assume-yes -y --no-install-recommends install zsh && \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN npm install -g typescript@4.4.2 prettier@2.3.2 ts-node@10.7 @swc/core@1.2.155 @swc/cli@0.1.55 && npm cache clean --force;\n\nWORKDIR /app\nRUN npm install --save-dev tsconfig-paths@3.11.0 && npm cache clean --force;\n\n{{ end -}}\n\nCOPY --from=golang-image /go/bin/tsent /go/bin/tsent\nCOPY --from=python-image /opt/venv /opt/venv\n#RUN alias auto_schema=auto_schema_test\nCOPY --from=golang-image /go/pkg/mod/github.com/lolopinto/ent@$GOLANG_VERSION /go/pkg/mod/github.com/lolopinto/ent@$GOLANG_VERSION\n\nCMD [\"node\"]\n\n"
}