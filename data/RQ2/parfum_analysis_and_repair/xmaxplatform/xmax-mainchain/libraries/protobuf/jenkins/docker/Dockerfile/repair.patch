diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xmaxplatform/xmax-mainchain/libraries/protobuf/jenkins/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xmaxplatform/xmax-mainchain/libraries/protobuf/jenkins/docker/Dockerfile/repaired.Dockerfile
index 3a279e6..114da0a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xmaxplatform/xmax-mainchain/libraries/protobuf/jenkins/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xmaxplatform/xmax-mainchain/libraries/protobuf/jenkins/docker/Dockerfile/repaired.Dockerfile
@@ -29,14 +29,14 @@ RUN echo "deb http://ppa.launchpad.net/ondrej/php/ubuntu trusty main" | tee /etc
 
 # Install dotnet SDK based on https://www.microsoft.com/net/core#debian
 # (Ubuntu instructions need apt to support https)
-RUN apt-get update && apt-get install -y --force-yes curl libunwind8 gettext && \
-  curl -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?LinkID=847105 &&  \
+RUN apt-get update && apt-get install --no-install-recommends -y --force-yes curl libunwind8 gettext && \
+  curl -f -sSL -o dotnet.tar.gz https://go.microsoft.com/fwlink/?LinkID=847105 && \
   mkdir -p /opt/dotnet && tar zxf dotnet.tar.gz -C /opt/dotnet && \
-  ln -s /opt/dotnet/dotnet /usr/local/bin
+  ln -s /opt/dotnet/dotnet /usr/local/bin && rm dotnet.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 # Install dependencies.  We start with the basic ones require to build protoc
 # and the C++ build
-RUN apt-get clean && apt-get update && apt-get install -y --force-yes \
+RUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y --force-yes \
   autoconf \
   autotools-dev \
   build-essential \
@@ -78,16 +78,16 @@ RUN apt-get clean && apt-get update && apt-get install -y --force-yes \
   # -- For C++ benchmarks --
   cmake \
   # -- For PHP --
-  php5.6     \
+  php5.6 \
   php5.6-dev \
   php5.6-xml \
-  php7.0     \
+  php7.0 \
   php7.0-dev \
   php7.0-xml \
-  phpunit    \
-  valgrind   \
+  phpunit \
+  valgrind \
   libxml2-dev \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 ##################
 # C# dependencies
@@ -100,14 +100,14 @@ RUN wget www.nuget.org/NuGet.exe -O /usr/local/bin/nuget.exe
 # These packages exist in apt-get, but their versions are too old, so we have
 # to get updates from pip.
 
-RUN pip install pip --upgrade
-RUN pip install virtualenv tox yattag
+RUN pip install --no-cache-dir pip --upgrade
+RUN pip install --no-cache-dir virtualenv tox yattag
 
 ##################
 # Ruby dependencies
 
 # Install rvm
-RUN gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
+RUN gpg --batch --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
 RUN \curl -sSL https://get.rvm.io | bash -s stable
 
 # Install Ruby 2.1, Ruby 2.2 and JRuby 1.7
@@ -131,7 +131,7 @@ RUN cd /tmp && \
   cd protobuf && \
   git reset --hard 129a6e2aca95dcfb6c3e717d7b9cca1f104fde39 && \
   ./autogen.sh && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make -j4 && \
   cd java && \
   $MVN install dependency:go-offline -Dmaven.repo.local=$MAVEN_REPO && \
@@ -140,36 +140,36 @@ RUN cd /tmp && \
 
 ##################
 # PHP dependencies.
-RUN wget http://am1.php.net/get/php-5.5.38.tar.bz2/from/this/mirror
+RUN wget https://am1.php.net/get/php-5.5.38.tar.bz2/from/this/mirror
 RUN mv mirror php-5.5.38.tar.bz2
-RUN tar -xvf php-5.5.38.tar.bz2
-RUN cd php-5.5.38 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.5-zts && \
+RUN tar -xvf php-5.5.38.tar.bz2 && rm php-5.5.38.tar.bz2
+RUN cd php-5.5.38 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-maintainer-zts --prefix=/usr/local/php-5.5-zts && \
     make && make install && cd ..
-RUN cd php-5.5.38 && make clean && ./configure --enable-bcmath --prefix=/usr/local/php-5.5 && \
+RUN cd php-5.5.38 && make clean && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-bcmath --prefix=/usr/local/php-5.5 && \
     make && make install && cd ..
 
-RUN wget http://am1.php.net/get/php-5.6.30.tar.bz2/from/this/mirror
+RUN wget https://am1.php.net/get/php-5.6.30.tar.bz2/from/this/mirror
 RUN mv mirror php-5.6.30.tar.bz2
-RUN tar -xvf php-5.6.30.tar.bz2
-RUN cd php-5.6.30 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-5.6-zts && \
+RUN tar -xvf php-5.6.30.tar.bz2 && rm php-5.6.30.tar.bz2
+RUN cd php-5.6.30 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-maintainer-zts --prefix=/usr/local/php-5.6-zts && \
     make && make install && cd ..
-RUN cd php-5.6.30 && make clean && ./configure --enable-bcmath --prefix=/usr/local/php-5.6 && \
+RUN cd php-5.6.30 && make clean && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-bcmath --prefix=/usr/local/php-5.6 && \
     make && make install && cd ..
 
-RUN wget http://am1.php.net/get/php-7.0.18.tar.bz2/from/this/mirror
+RUN wget https://am1.php.net/get/php-7.0.18.tar.bz2/from/this/mirror
 RUN mv mirror php-7.0.18.tar.bz2
-RUN tar -xvf php-7.0.18.tar.bz2
-RUN cd php-7.0.18 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-7.0-zts && \
+RUN tar -xvf php-7.0.18.tar.bz2 && rm php-7.0.18.tar.bz2
+RUN cd php-7.0.18 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-maintainer-zts --prefix=/usr/local/php-7.0-zts && \
     make && make install && cd ..
-RUN cd php-7.0.18 && make clean && ./configure --enable-bcmath --prefix=/usr/local/php-7.0 && \
+RUN cd php-7.0.18 && make clean && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-bcmath --prefix=/usr/local/php-7.0 && \
     make && make install && cd ..
 
-RUN wget http://am1.php.net/get/php-7.1.4.tar.bz2/from/this/mirror
+RUN wget https://am1.php.net/get/php-7.1.4.tar.bz2/from/this/mirror
 RUN mv mirror php-7.1.4.tar.bz2
-RUN tar -xvf php-7.1.4.tar.bz2
-RUN cd php-7.1.4 && ./configure --enable-maintainer-zts --prefix=/usr/local/php-7.1-zts && \
+RUN tar -xvf php-7.1.4.tar.bz2 && rm php-7.1.4.tar.bz2
+RUN cd php-7.1.4 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-maintainer-zts --prefix=/usr/local/php-7.1-zts && \
     make && make install && cd ..
-RUN cd php-7.1.4 && make clean && ./configure --enable-bcmath --prefix=/usr/local/php-7.1 && \
+RUN cd php-7.1.4 && make clean && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-bcmath --prefix=/usr/local/php-7.1 && \
     make && make install && cd ..
 
 RUN php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
@@ -207,22 +207,22 @@ RUN cd /tmp && \
 
 ##################
 # Go dependencies.
-RUN apt-get install -y  \
-  # -- For go -- \
-  golang
+RUN apt-get install --no-install-recommends -y \
+
+  golang && rm -rf /var/lib/apt/lists/*;
 
 ##################
 # Javascript dependencies.
-RUN apt-get install -y \
-  # -- For javascript -- \
-  npm
+RUN apt-get install --no-install-recommends -y \
+
+  npm && rm -rf /var/lib/apt/lists/*;
 
 ##################
 # Python 3.5 3.6 dependencies.
-RUN apt-get clean && apt-get update && apt-get install -y --force-yes \
+RUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y --force-yes \
   python3.5-dev \
   python3.6-dev \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # On Debian/Ubuntu, nodejs binary is named 'nodejs' because the name 'node'
 # is taken by another legacy binary. We don't have that legacy binary and