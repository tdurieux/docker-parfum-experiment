{
  "startTime": 1674248932934,
  "endTime": 1674248933901,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 34,
        "columnStart": 11,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 34,
        "columnStart": 11,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedDockerfile": "#!/usr/bin/docker\n#\n# This Dockerfile is to be consumed with the docker_osx helm templates. It consumes the\n#  Ubuntu image so that OpenCore.qcow2 can be re-generated (which happens in Kube itself),\n#  not to mention that OSX-KVM was written for Ubuntu. This was not designed to be run in Docker\n#  by itself.. very well anyway.\n#\n\nFROM ubuntu:21.04\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# this has to match .Values.image.userName in helm template\nARG USER=ubuntu\n# this installs the kvm linux kernel in the docker container so that OpenCore.qcow2 boot images\n#  can be built.\nARG DOCKER_KERNEL_VERSION=linux-image-kvm\n\nENV TZ=America/Los_Angeles\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN DEBCONF_FRONTEND=noninteractive apt update \\\n        && apt install --no-install-recommends \\\n            bridge-utils \\\n            fish \\\n            git wget \\\n            libguestfs-tools \\\n            libvirt-daemon-system \\\n            $DOCKER_KERNEL_VERSION \\\n            p7zip-full \\\n            qemu \\\n            sudo \\\n            uml-utilities \\\n            virt-manager \\\n            -y && rm -rf /var/lib/apt/lists/*;\n\n# Configure SSH\nRUN apt install --no-install-recommends git vim nano alsa-utils openssh-server -y && rm -rf /var/lib/apt/lists/*;\n\n# Create user and grant sudo privledges\nRUN adduser --disabled-password \\\n        --gecos '' $USER \\\n        && echo \"$USER ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$USER \\\n        && chmod 0440 /etc/sudoers.d/$USER\n\n# Configure VNC for user\nRUN apt install --no-install-recommends \\\n        dbus-x11 \\\n        openbox \\\n        tigervnc-common \\\n        tigervnc-standalone-server \\\n        xfce4 \\\n        xfce4-goodies \\\n        x11-xserver-utils \\\n        xdotool \\\n        xorg \\\n        xterm \\\n        ufw \\\n        -y && rm -rf /var/lib/apt/lists/*;\n\nUSER $USER\n\n# only create ~/.vnc as helm will build out ~/.vnc/config\nRUN mkdir -p ${HOME}/.vnc\n\nRUN git clone --depth 1 https://github.com/kholia/OSX-KVM.git /home/$USER/OSX-KVM\n\nVOLUME [\"/tmp/.X11-unix\"]\n\nWORKDIR /home/$USER/OSX-KVM\n# helm will build out ./Launch_custom.sh\nCMD envsubst < ./Launch_custom.sh | bash\n"
}