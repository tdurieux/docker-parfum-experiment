diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mytardis/mytardis/docker-ci/Dockerfile-test b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mytardis/mytardis/docker-ci/Dockerfile-test/repaired.Dockerfile
index 58795bf..ad89650 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mytardis/mytardis/docker-ci/Dockerfile-test
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mytardis/mytardis/docker-ci/Dockerfile-test/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM mytardis/mytardis-run
 
 USER root
 
-RUN apt-get update && apt-get install \
+RUN apt-get update && apt-get install --no-install-recommends \
     -qy \
     unzip \
     openjdk-8-jre-headless \
@@ -11,13 +11,13 @@ RUN apt-get update && apt-get install \
     libgconf-2-4 \
     wget \
     slapd ldap-utils \
-    libxss1
+    libxss1 && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add && \
+RUN curl -f -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add && \
     echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list && \
-    apt-get update && apt-get install -qy google-chrome-stable
+    apt-get update && apt-get install --no-install-recommends -qy google-chrome-stable && rm -rf /var/lib/apt/lists/*;
 
-RUN export CHROME_DRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE) && \
+RUN export CHROME_DRIVER_VERSION=$( curl -f -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE) && \
     wget -N https://chromedriver.storage.googleapis.com/${CHROME_DRIVER_VERSION}/chromedriver_linux64.zip -P ~/ && \
     unzip ~/chromedriver_linux64.zip -d ~/ && \
     mv -f ~/chromedriver /usr/local/bin/chromedriver && \
@@ -28,11 +28,11 @@ ENV PATH="/usr/local/bin:${PATH}"
 RUN chown -R webapp:webapp /home/webapp
 USER webapp
 RUN . /appenv/bin/activate; \
-    pip install --no-index -f /wheelhouse -r requirements-postgres.txt
+    pip install --no-cache-dir --no-index -f /wheelhouse -r requirements-postgres.txt
 RUN . /appenv/bin/activate; \
-    pip install --no-index -f /wheelhouse -r requirements-mysql.txt
+    pip install --no-cache-dir --no-index -f /wheelhouse -r requirements-mysql.txt
 RUN . /appenv/bin/activate; \
-    pip install coveralls codacy-coverage
+    pip install --no-cache-dir coveralls codacy-coverage
 VOLUME /home/webapp/tardis
 VOLUME /home/webapp/docs