{
  "startTime": 1674255532541,
  "endTime": 1674255533205,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 35,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mytardis/mytardis-run\n\nUSER root\n\nRUN apt-get update && apt-get install --no-install-recommends \\\n    -qy \\\n    unzip \\\n    openjdk-8-jre-headless \\\n    xvfb \\\n    libxi6 \\\n    libgconf-2-4 \\\n    wget \\\n    slapd ldap-utils \\\n    libxss1 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add && \\\n    echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list && \\\n    apt-get update && apt-get install --no-install-recommends -qy google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\nRUN export CHROME_DRIVER_VERSION=$( curl -f -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE) && \\\n    wget -N https://chromedriver.storage.googleapis.com/${CHROME_DRIVER_VERSION}/chromedriver_linux64.zip -P ~/ && \\\n    unzip ~/chromedriver_linux64.zip -d ~/ && \\\n    mv -f ~/chromedriver /usr/local/bin/chromedriver && \\\n    chmod 0755 /usr/local/bin/chromedriver\n\nENV PATH=\"/usr/local/bin:${PATH}\"\n\nRUN chown -R webapp:webapp /home/webapp\nUSER webapp\nRUN . /appenv/bin/activate; \\\n    pip install --no-cache-dir --no-index -f /wheelhouse -r requirements-postgres.txt\nRUN . /appenv/bin/activate; \\\n    pip install --no-cache-dir --no-index -f /wheelhouse -r requirements-mysql.txt\nRUN . /appenv/bin/activate; \\\n    pip install --no-cache-dir coveralls codacy-coverage\nVOLUME /home/webapp/tardis\nVOLUME /home/webapp/docs\n\nRUN mkdir -p var/store\n\nCMD bash -c '. /appenv/bin/activate; source ./test.sh'\n"
}