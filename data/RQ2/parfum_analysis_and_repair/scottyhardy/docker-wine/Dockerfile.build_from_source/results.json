{
  "startTime": 1674216604813,
  "endTime": 1674216606097,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Wine from source in builder container\n# See https://wiki.winehq.org/Building_Wine\n\nARG IMAGE_TAG=latest\nFROM ubuntu:$IMAGE_TAG as build-config\n\nENV DEBIAN_FRONTEND=\"noninteractive\"\nRUN sed -i -E 's/^# deb-src /deb-src /g' /etc/apt/sources.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y git \\\n    && apt-get build-dep -y wine && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /wine-dirs/wine-build \\\n    && git clone --depth=1 --shallow-submodules git://source.winehq.org/git/wine.git /wine-dirs/wine-source\n\nENV CC=clang\nENV CXX=clang\nENV CFLAGS=\"-I/usr/local/include\"\nENV LDFLAGS=\"-L/usr/local/lib\"\n\nWORKDIR /wine-dirs/wine-build\nRUN ../wine-source/configure\n\n\nFROM build-config AS builder\n\nRUN make -j \"$(nproc)\"\nRUN mkdir -p /wine-dirs/wine-install \\\n   && make install DESTDIR=/wine-dirs/wine-install\n\n\nFROM scottyhardy/docker-remote-desktop:latest as main-base\n\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=\"noninteractive\" apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        ca-certificates \\\n        cabextract \\\n        git \\\n        gosu \\\n        gpg-agent \\\n        locales \\\n        p7zip \\\n        pulseaudio \\\n        pulseaudio-utils \\\n        sudo \\\n        tzdata \\\n        unzip \\\n        wget \\\n        winbind \\\n        xvfb \\\n        zenity \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\n\nCOPY pulse-client.conf /root/pulse/client.conf\nCOPY entrypoint.sh /usr/bin/entrypoint\n\n\n# Checkpoint builds are used in CI to circumvent 6hr time-out on Github workflow jobs\nFROM build-config AS ci-builder\nCOPY entrypoint_ci_builder.sh /usr/bin/entrypoint\nENTRYPOINT [\"/usr/bin/entrypoint\"]\n\n\n# Final image for CI\nFROM main-base as ci-final\n\nCOPY wine-build/wine-install/ /\nENTRYPOINT [\"/usr/bin/entrypoint\"]\n\n\n# Build the final image\nFROM main-base\n\nCOPY --from=builder /wine-dirs/wine-install/ /\nENTRYPOINT [\"/usr/bin/entrypoint\"]\n"
}