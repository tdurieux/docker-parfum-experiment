diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ossrs/srs-docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ossrs/srs-docker/Dockerfile/repaired.Dockerfile
index faf305f..7dd2b28 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ossrs/srs-docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ossrs/srs-docker/Dockerfile/repaired.Dockerfile
@@ -12,7 +12,7 @@ RUN echo "BUILDPLATFORM: $BUILDPLATFORM, TARGETPLATFORM: $TARGETPLATFORM, JOBS:
 
 RUN yum install -y gcc gcc-c++ make patch sudo unzip perl zlib automake libtool \
     zlib-devel bzip2 bzip2-devel libxml2-devel \
-    tcl cmake
+    tcl cmake && rm -rf /var/cache/yum
 
 # Libs path for app which depends on ssl, such as libsrt.
 ENV PKG_CONFIG_PATH $PKG_CONFIG_PATH:/usr/local/ssl/lib/pkgconfig
@@ -33,23 +33,23 @@ RUN cd /tmp/openssl-1.1.1j && \
 
 # For FFMPEG
 ADD nasm-2.14.tar.bz2 /tmp
-RUN cd /tmp/nasm-2.14 && ./configure && make -j${JOBS} && make install
+RUN cd /tmp/nasm-2.14 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j${JOBS} && make install
 # For aac
 ADD fdk-aac-2.0.2.tar.gz /tmp
-RUN cd /tmp/fdk-aac-2.0.2 && bash autogen.sh && ./configure --disable-shared && make -j${JOBS} && make install
+RUN cd /tmp/fdk-aac-2.0.2 && bash autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared && make -j${JOBS} && make install
 # For mp3, see https://sourceforge.net/projects/lame/
 ADD lame-3.100.tar.gz /tmp
-RUN cd /tmp/lame-3.100 && ./configure --disable-shared && make -j${JOBS} && make install
+RUN cd /tmp/lame-3.100 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared && make -j${JOBS} && make install
 # For libx264
 ADD x264-snapshot-20181116-2245.tar.bz2 /tmp
-RUN cd /tmp/x264-snapshot-20181116-2245 && ./configure --disable-cli --disable-shared --enable-static && make -j${JOBS} && make install
+RUN cd /tmp/x264-snapshot-20181116-2245 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-cli --disable-shared --enable-static && make -j${JOBS} && make install
 # The libsrt for SRS, which depends on openssl.
 ADD srt-1.4.1.tar.gz /tmp
-RUN cd /tmp/srt-1.4.1 && ./configure --disable-shared --enable-static && make -j${JOBS} && make install
+RUN cd /tmp/srt-1.4.1 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-shared --enable-static && make -j${JOBS} && make install
 
 # Build FFmpeg, static link libraries.
 ADD ffmpeg-4.2.1.tar.bz2 /tmp
-RUN cd /tmp/ffmpeg-4.2.1 && ./configure --enable-pthreads --extra-libs=-lpthread \
+RUN cd /tmp/ffmpeg-4.2.1 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-pthreads --extra-libs=-lpthread \
         --enable-gpl --enable-nonfree \
         --enable-postproc --enable-bzlib --enable-zlib \
         --enable-libx264 --enable-libmp3lame --enable-libfdk-aac \
@@ -81,10 +81,10 @@ COPY --from=build /usr/local/lib64 /usr/local/lib64
 # Note that git is very important for codecov to discover the .codecov.yml
 RUN yum install -y gcc gcc-c++ make net-tools gdb lsof tree dstat redhat-lsb unzip zip git \
     nasm yasm perf strace sysstat ethtool libtool \
-    tcl cmake
+    tcl cmake && rm -rf /var/cache/yum
 
 # For GCP/pprof/gperf, see https://winlin.blog.csdn.net/article/details/53503869
-RUN yum install -y graphviz
+RUN yum install -y graphviz && rm -rf /var/cache/yum
 
 # Install cherrypy for HTTP hooks.
 ADD CherryPy-3.2.4.tar.gz2 /tmp
@@ -93,7 +93,7 @@ RUN cd /tmp/CherryPy-3.2.4 && python setup.py install
 ENV PATH $PATH:/usr/local/go/bin
 RUN if [[ -z $NO_GO ]]; then \
       cd /usr/local && \
-      curl -L -O https://go.dev/dl/go1.16.12.linux-amd64.tar.gz && \
+      curl -f -L -O https://go.dev/dl/go1.16.12.linux-amd64.tar.gz && \
       tar xf go1.16.12.linux-amd64.tar.gz && \
       rm -f go1.16.12.linux-amd64.tar.gz; \
     fi