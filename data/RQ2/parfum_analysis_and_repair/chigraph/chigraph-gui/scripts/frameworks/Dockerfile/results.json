{
  "startTime": 1674217109631,
  "endTime": 1674217110457,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 68,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 121
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 121
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:trusty\n\nRUN apt-get update && apt-get install --no-install-recommends -yy software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository 'ppa:ubuntu-toolchain-r/test' && \\\n\tadd-apt-repository 'ppa:beineri/opt-qt562-trusty'\n\n\nRUN apt-get update && apt-get install --no-install-recommends -yy \\\n\tqt56base qt56script qt56declarative qt56tools qt56x11extras qt56svg \\\n\tninja-build libedit-dev libxcb-keysyms1-dev libxml2-utils libudev-dev build-essential git mesa-common-dev \\\n\tgettext libz-dev libxrender-dev libxfixes-dev libxcb1-dev libxcb-xfixes0-dev bison flex libstdc++-6-dev g++-6 gcc-6 wget && rm -rf /var/lib/apt/lists/*;\n\n# build cmake\nRUN cd / && wget https://cmake.org/files/v3.7/cmake-3.7.2.tar.gz && tar xf cmake-3.7.2.tar.gz && rm cmake-3.7.2.tar.gz\nRUN cd cmake-3.7.2/ && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make -j`nproc` install\n\n"
}