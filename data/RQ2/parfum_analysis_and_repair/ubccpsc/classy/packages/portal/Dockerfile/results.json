{
  "startTime": 1674250336362,
  "endTime": 1674250337038,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-alpine\n\nARG GH_BOT_EMAIL=classy@cs.ubc.ca\nARG GH_BOT_USERNAME=classy\nARG PLUGIN=default\n\nRUN apk add --no-cache git\n\nWORKDIR /app\n\n# The common package requires the .env file directly so we have to pass it through\nCOPY .env ./\nCOPY yarn.lock ./\nCOPY package.json tsconfig.json .env ./\nCOPY packages/common ./packages/common\nCOPY packages/portal ./packages/portal\n\nRUN yarn install --pure-lockfile --non-interactive --ignore-scripts \\\n && yarn tsc --sourceMap false && yarn cache clean;\n\n# Webpack will do the frontend build\nCOPY ./plugins/\"${PLUGIN}\"/portal/frontend ./plugins/\"${PLUGIN}\"/portal/frontend\nRUN cd packages/portal/frontend && yarn webpack && yarn webpack\nRUN chmod -R a+r /app \\\n && git config --system user.email \"${GH_BOT_EMAIL}\" \\\n && git config --system user.name \"${GH_BOT_USERNAME}\"\n\n# Typescript will build the backend\nCOPY ./plugins/\"${PLUGIN}\"/portal/backend ./plugins/\"${PLUGIN}\"/portal/backend\nRUN cd ./plugins/\"${PLUGIN}\"/portal/backend && yarn run build\n\nCMD [\"node\", \"--require\", \"/app/node_modules/tsconfig-paths/register\", \"/app/packages/portal/backend/src/Backend.js\"]\n"
}