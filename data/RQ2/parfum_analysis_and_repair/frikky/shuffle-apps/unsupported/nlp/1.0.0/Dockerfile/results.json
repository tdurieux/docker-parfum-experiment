{
  "startTime": 1674220708622,
  "endTime": 1674220709398,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base our app image off of the WALKOFF App SDK image\nFROM frikky/shuffle:app_sdk as base\n\n# We're going to stage away all of the bloat from the build tools so lets create a builder stage\n# Install all alpine build tools needed for our pip installs\nFROM base as builder\nRUN apk --no-cache add --update alpine-sdk libffi libffi-dev musl-dev openssl-dev\n\n# Install all of our pip packages in a single directory that we can copy to our base image later\nRUN mkdir /install\nWORKDIR /install\n#COPY requirements.txt /requirements.txt\n#RUN pip install --prefix=\"/install\" -r /requirements.txt\nRUN pip install --no-cache-dir tika==1.24\nRUN pip install --no-cache-dir requests==2.25.1\nRUN pip install --no-cache-dir spacy==2.3.5\nRUN pip install --no-cache-dir cyberspacy==1.1.1\n\n# Switch back to our base image and copy in all of our built packages and source code\nFROM base\nCOPY --from=builder /install /usr/local\nCOPY src /app\n\n# Install any binary dependencies needed in our final image\n# RUN apk --no-cache add --update my_binary_dependency\nRUN apk add --no-cache libstdc++ openjdk8\nRUN python -m spacy download en_core_web_lg\nRUN python3 -c 'import tika; tika.initVM(); tika.parser.from_file('/bin/bash')'\n\n# Finally, lets run our app!\nWORKDIR /app\nCMD python app.py --log-level DEBUG\n"
}