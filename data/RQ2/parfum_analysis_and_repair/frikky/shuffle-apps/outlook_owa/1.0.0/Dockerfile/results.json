{
  "startTime": 1674251000715,
  "endTime": 1674251001420,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base our app image off of the WALKOFF App SDK image\nFROM frikky/shuffle:app_sdk as base\n\nRUN apk update && \\\n    apk upgrade\n\n# We're going to stage away all of the bloat from the build tools so lets create a builder stage\n\nFROM base as builder\nRUN apk add --no-cache build-base gcc musl-dev python3-dev libffi-dev libxml2-dev libxslt-dev alpine-sdk openssl-dev libc-dev ca-certificates\nRUN pip install --no-cache-dir -U pip && \\\n    pip wheel --no-cache-dir --wheel-dir=/root/lxml_wheel lxml\n\nRUN mkdir /install\nWORKDIR /install\nCOPY requirements.txt /requirements.txt\nRUN pip install --no-cache-dir --prefix=\"/install\" -r /requirements.txt\n\n\nFROM base\nCOPY --from=builder /root/lxml_wheel /root/lxml_wheel\n\n# lxml binary dependencies\nCOPY --from=builder /usr/lib/libxslt.so.1 /usr/lib/libxslt.so.1\nCOPY --from=builder /usr/lib/libexslt.so.0 /usr/lib/libexslt.so.0\nCOPY --from=builder /usr/lib/libxml2.so.2 /usr/lib/libxml2.so.2\nCOPY --from=builder /usr/lib/libgcrypt.so.20 /usr/lib/libgcrypt.so.20\nCOPY --from=builder /usr/lib/libgpg-error.so.0 /usr/lib/libgpg-error.so.0\n\nRUN python -OO -m pip install --no-cache --no-index --find-links=/root/lxml_wheel/* /root/lxml_wheel/*\n\nCOPY --from=builder /install /usr/local\nCOPY src /app\n\n## Ensuring we can handle OLD exchange servers\nRUN echo \"MinProtocol = TLSv1/\" >> /etc/ssl/openssl.cnf\nrun echo \"CipherString = DEFAULT@SECLEVEL=1/\" >> /etc/ssl/openssl.cnf\nRUN cat /etc/ssl/openssl.cnf\n\n# Finally, lets run our app!\nWORKDIR /app\nCMD python app.py --log-level DEBUG\n\n"
}