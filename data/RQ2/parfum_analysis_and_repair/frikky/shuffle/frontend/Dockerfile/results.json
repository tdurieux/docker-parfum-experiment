{
  "startTime": 1674217544595,
  "endTime": 1674217545344,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 45,
        "columnEnd": 61
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# Build environment\nFROM node:14 as builder\n\nRUN mkdir /usr/src/app && rm -rf /usr/src/app\n\nWORKDIR /usr/src/app\nENV PATH /usr/src/app/node_modules/.bin:$PATH\n\nCOPY package.json /usr/src/app/package.json\n\nRUN yarn config set \"strict-ssl\" false -g && yarn cache clean;\nRUN yarn install && yarn cache clean;\n\n# copy only required files to not trigger rebuilding every time\nCOPY ./certs /usr/src/app/certs/\nCOPY ./public /usr/src/app/public/\nCOPY ./src /usr/src/app/src/\nCOPY ./*.sh /usr/src/app/\nCOPY ./*.json /usr/src/app/\n\nRUN rm -rf /usr/src/app/node_modules/webpack\nRUN yarn build && yarn cache clean;\n\n# Production environment\nFROM nginx:1.21.5\n\nRUN mkdir -p /usr/share/nginx/html/build\nRUN mkdir -p /usr/share/nginx/html/css\nRUN mkdir -p /usr/share/nginx/html/js\nRUN mkdir -p /usr/share/nginx/html/img\n\nCOPY --from=builder /usr/src/app/build /usr/share/nginx/html\n\n#Localhost certificate challenge: Y#XwrJ#DoZGz2w6x\nCOPY --from=builder /usr/src/app/certs/fullchain.pem /etc/nginx/fullchain.cert.pem\nCOPY --from=builder /usr/src/app/certs/privkey.pem /etc/nginx/privkey.pem\n\n# install CONFD\nENV CONFD_VERSION 0.16.0\nRUN apt-get update && apt-get install --no-install-recommends -y curl && apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sSL https://github.com/kelseyhightower/confd/releases/download/v${CONFD_VERSION}/confd-${CONFD_VERSION}-linux-amd64 -o /usr/local/bin/confd && \\\n    chmod +x /usr/local/bin/confd\nCOPY ./confd /etc/confd\n\n# rewrite command & entrypoint with ours\nCOPY ./entrypoint.sh /\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\nEXPOSE 80\nEXPOSE 443\n"
}