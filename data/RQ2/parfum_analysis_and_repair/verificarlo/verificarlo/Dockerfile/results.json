{
  "startTime": 1674250275332,
  "endTime": 1674250276080,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "#\n# Dockerfile for Verificarlo (github.com/verificarlo/verificarlo)\n# This image includes support for Fortran and uses llvm-7 and gcc-7\n#\n\nFROM ubuntu:20.04\nLABEL maintainer=\"verificarlo contributors <verificarlo@googlegroups.com>\"\n\nARG PYTHON_VERSION=3.8\nARG LLVM_VERSION=7\nARG GCC_VERSION=7\nARG GCC_PATH=/usr/lib/gcc/x86_64-linux-gnu/${GCC_VERSION}\nENV LD_LIBRARY_PATH /usr/local/lib:$LD_LIBRARY_PATH\nENV PATH /usr/local/bin:$PATH\nENV PYTHONPATH /usr/local/lib/python$PYTHON_VERSION/site-packages/:$PYTHONPATH\n\n# Retrieve dependencies\nRUN apt-get -y update && apt-get -y --no-install-recommends install tzdata && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y install --no-install-recommends \\\n    bash ca-certificates make git libmpfr-dev \\\n    autogen dh-autoreconf autoconf automake autotools-dev libedit-dev libtool libz-dev binutils \\\n    clang-${LLVM_VERSION} llvm-${LLVM_VERSION} llvm-${LLVM_VERSION}-dev \\\n    gcc-${GCC_VERSION} g++-${GCC_VERSION} \\\n    gfortran-${GCC_VERSION} libgfortran-${GCC_VERSION}-dev flang \\\n    python3 python3-pip python3-numpy python3-pandas python3-matplotlib python3-dev cython3 \\\n    parallel && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /build/\n\nENV LIBRARY_PATH ${GCC_PATH}:$LIBRARY_PATH\n\n# Install other Python dependencies (not available with apt-get) via pip\nRUN ln -s /usr/bin/x86_64-linux-gnu-gcc-7 /usr/bin/x86_64-linux-gnu-gcc && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir scipy && \\\n    pip3 install --no-cache-dir GitPython && \\\n    pip3 install --no-cache-dir bigfloat && \\\n    pip3 install --no-cache-dir tables && \\\n    pip3 install --no-cache-dir jinja2 && \\\n    pip3 install --no-cache-dir bokeh\n\n# Download and configure verificarlo from git master\nCOPY . /build/verificarlo/\nWORKDIR /build/verificarlo\nRUN ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-llvm=$(llvm-config-${LLVM_VERSION} --prefix) \\\n    --with-flang CC=gcc-${GCC_VERSION} CXX=g++-${GCC_VERSION} \\\n    || cat config.log\n\n# Build verificarlo\nRUN make && make install\n\n# Setup working directory\nVOLUME /workdir\nWORKDIR /workdir\n"
}