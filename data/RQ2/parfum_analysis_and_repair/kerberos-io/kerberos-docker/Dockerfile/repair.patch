diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kerberos-io/kerberos-docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kerberos-io/kerberos-docker/Dockerfile/repaired.Dockerfile
index 576c1ad..a8d95fe 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kerberos-io/kerberos-docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kerberos-io/kerberos-docker/Dockerfile/repaired.Dockerfile
@@ -22,26 +22,26 @@ ENV DEBIAN_FRONTEND noninteractive
 # Add sources for latest nginx and cmake
 # Install software requirements
 
-RUN apt-get update && apt-get install -y apt-transport-https wget lsb-release && \
+RUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https wget lsb-release && \
 wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg && \
 echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list && \
 apt -y update && \
-apt -y install software-properties-common libssl-dev git supervisor curl \
+ apt -y --no-install-recommends install software-properties-common libssl-dev git supervisor curl \
 subversion libcurl4-openssl-dev cmake dh-autoreconf autotools-dev autoconf automake gcc g++ \
 build-essential libtool make nasm zlib1g-dev tar apt-transport-https \
 ca-certificates wget nginx php${PHP_VERSION}-cli php${PHP_VERSION}-gd php${PHP_VERSION}-mcrypt php${PHP_VERSION}-curl \
 php${PHP_VERSION}-mbstring php${PHP_VERSION}-dom php${PHP_VERSION}-zip php${PHP_VERSION}-fpm pwgen && \
-curl -sL https://deb.nodesource.com/setup_9.x | bash - && apt-get install -y nodejs npm
+ curl -f -sL https://deb.nodesource.com/setup_9.x | bash - && apt-get install --no-install-recommends -y nodejs npm && rm -rf /var/lib/apt/lists/*;
 
-RUN wget http://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-2.13.01.tar.bz2 && \
-tar xjvf nasm-2.13.01.tar.bz2  && \
-cd nasm-2.13.01  && \
-./autogen.sh  && \
-./configure  && \
-make  && \
-make install
+RUN wget https://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-2.13.01.tar.bz2 && \
+tar xjvf nasm-2.13.01.tar.bz2 && \
+cd nasm-2.13.01 && \
+./autogen.sh && \
+ ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
+make && \
+make install && rm nasm-2.13.01.tar.bz2
 
-RUN apt-get install nasm
+RUN apt-get install -y --no-install-recommends nasm && rm -rf /var/lib/apt/lists/*;
 
 ############################
 # Clone and build x264
@@ -49,7 +49,7 @@ RUN apt-get install nasm
 RUN git clone https://code.videolan.org/videolan/x264 /tmp/x264 && \
 	cd /tmp/x264 && \
 	git checkout df79067c && \
-	./configure --prefix=/usr --enable-shared --enable-static --enable-pic && make && make install
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --enable-shared --enable-static --enable-pic && make && make install
 
 ############################
 # Clone and build ffmpeg
@@ -61,12 +61,12 @@ RUN cd \
 		&& sed -i 's/sudo//g' ./buildme \
     && ./buildme \
     && rm -rf ../userland
-RUN apt-get install libomxil-bellagio-dev -y
-RUN apt-get install -y pkg-config && git clone https://github.com/FFmpeg/FFmpeg && \
+RUN apt-get install --no-install-recommends libomxil-bellagio-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y pkg-config && git clone https://github.com/FFmpeg/FFmpeg && \
 	cd FFmpeg && git checkout remotes/origin/release/${FFMPEG_VERSION} && \
-	./configure --enable-nonfree --enable-libx264 --enable-gpl && make && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-nonfree --enable-libx264 --enable-gpl && make && \
     make install && \
-    cd .. && rm -rf FFmpeg
+    cd .. && rm -rf FFmpeg && rm -rf /var/lib/apt/lists/*;
 
 ############################
 # Clone and build machinery
@@ -83,7 +83,7 @@ RUN git clone https://github.com/kerberos-io/machinery /tmp/machinery && \
 # Clone and build web
 
 RUN git clone https://github.com/kerberos-io/web /var/www/web && cd /var/www/web && git checkout 0b054205a640f24a3febe9a3e3b6c7ba0d21a8f3 && \
-chown -Rf www-data.www-data /var/www/web && curl -sSk https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
+chown -Rf www-data.www-data /var/www/web && curl -f -sSk https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \
 cd /var/www/web && \
 composer install && \
 npm config set unsafe-perm true && \
@@ -92,7 +92,7 @@ npm config set strict-ssl=false && \
 npm install -g bower && \
 cd public && \
 sed -i 's/https/http/g' .bowerrc && \
-bower --allow-root install
+bower --allow-root install && npm cache clean --force;
 
 RUN rm /var/www/web/public/capture && \
 ln -s /etc/opt/kerberosio/capture/ /var/www/web/public/capture
@@ -126,14 +126,14 @@ FROM debian:stretch-slim
 
 COPY --chown=0:0 --from=builder /dist /
 
-RUN apt-get -y update && apt-get install -y apt-transport-https wget curl lsb-release && \
+RUN apt-get -y update && apt-get install --no-install-recommends -y apt-transport-https wget curl lsb-release && \
 wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg && \
-echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list && apt update -y
+echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list && apt update -y && rm -rf /var/lib/apt/lists/*;
 
 ####################################
 # ADD supervisor and STARTUP script
 
-RUN apt-get install -y supervisor && mkdir -p /var/log/supervisor/
+RUN apt-get install --no-install-recommends -y supervisor && mkdir -p /var/log/supervisor/ && rm -rf /var/lib/apt/lists/*;
 ADD ./supervisord.conf /etc/supervisord.conf
 ADD ./run.sh /run.sh
 RUN chmod 755 /run.sh && chmod +x /run.sh
@@ -141,7 +141,7 @@ RUN chmod 755 /run.sh && chmod +x /run.sh
 ######################
 # INSTALL Nginx
 
-RUN apt-get install -y nginx && mkdir -p /run/nginx
+RUN apt-get install --no-install-recommends -y nginx && mkdir -p /run/nginx && rm -rf /var/lib/apt/lists/*;
 RUN rm -Rf /etc/nginx/conf.d/* && rm -Rf /etc/nginx/sites-available/default  && rm -Rf /etc/nginx/sites-enabled/default  && mkdir -p /etc/nginx/ssl
 ADD ./web.conf /etc/nginx/sites-available/default.conf
 RUN ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf
@@ -156,8 +156,8 @@ RUN chmod -R 777 /var/www/web/bootstrap/cache/ && \
 
 ARG PHP_VERSION=7.1
 
-RUN  apt -y install php${PHP_VERSION}-cli php${PHP_VERSION}-gd php${PHP_VERSION}-mcrypt php${PHP_VERSION}-curl \
-php${PHP_VERSION}-mbstring php${PHP_VERSION}-dom php${PHP_VERSION}-zip php${PHP_VERSION}-fpm
+RUN apt -y --no-install-recommends install php${PHP_VERSION}-cli php${PHP_VERSION}-gd php${PHP_VERSION}-mcrypt php${PHP_VERSION}-curl \
+php${PHP_VERSION}-mbstring php${PHP_VERSION}-dom php${PHP_VERSION}-zip php${PHP_VERSION}-fpm && rm -rf /var/lib/apt/lists/*;
 
 ########################################
 # Force both nginx and PHP-FPM to run in the foreground