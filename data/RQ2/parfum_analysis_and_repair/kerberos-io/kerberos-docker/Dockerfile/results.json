{
  "startTime": 1674218345800,
  "endTime": 1674218347535,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 0,
        "columnEnd": 45
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 44,
        "columnEnd": 87
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 0,
        "columnEnd": 20
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 1,
        "columnEnd": 71
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 1,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 0,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 32,
        "columnStart": 0,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 58,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 25,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 158,
        "lineEnd": 159,
        "columnStart": 5,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 158,
        "lineEnd": 159,
        "columnStart": 5,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 32,
        "columnStart": 0,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 58,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 25,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 158,
        "lineEnd": 159,
        "columnStart": 5,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 143,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 158,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch AS builder\nMAINTAINER \"CÃ©dric Verstraeten\" <hello@cedric.ws>\n\nARG APP_ENV=master\nENV APP_ENV ${APP_ENV}\nARG PHP_VERSION=7.1\nARG FFMPEG_VERSION=3.1\n\n#################################\n# Surpress Upstart errors/warning\n\nRUN dpkg-divert --local --rename --add /sbin/initctl\nRUN ln -sf /bin/true /sbin/initctl\n\n#############################################\n# Let the container know that there is no tty\n\nENV DEBIAN_FRONTEND noninteractive\n\n#########################################\n# Update base image\n# Add sources for latest nginx and cmake\n# Install software requirements\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https wget lsb-release && \\\nwget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg && \\\necho \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" > /etc/apt/sources.list.d/php.list && \\\napt -y update && \\\n apt -y --no-install-recommends install software-properties-common libssl-dev git supervisor curl \\\nsubversion libcurl4-openssl-dev cmake dh-autoreconf autotools-dev autoconf automake gcc g++ \\\nbuild-essential libtool make nasm zlib1g-dev tar apt-transport-https \\\nca-certificates wget nginx php${PHP_VERSION}-cli php${PHP_VERSION}-gd php${PHP_VERSION}-mcrypt php${PHP_VERSION}-curl \\\nphp${PHP_VERSION}-mbstring php${PHP_VERSION}-dom php${PHP_VERSION}-zip php${PHP_VERSION}-fpm pwgen && \\\n curl -f -sL https://deb.nodesource.com/setup_9.x | bash - && apt-get install --no-install-recommends -y nodejs npm && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://www.nasm.us/pub/nasm/releasebuilds/2.13.01/nasm-2.13.01.tar.bz2 && \\\ntar xjvf nasm-2.13.01.tar.bz2 && \\\ncd nasm-2.13.01 && \\\n./autogen.sh && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\nmake && \\\nmake install && rm nasm-2.13.01.tar.bz2\n\nRUN apt-get install -y --no-install-recommends nasm && rm -rf /var/lib/apt/lists/*;\n\n############################\n# Clone and build x264\n\nRUN git clone https://code.videolan.org/videolan/x264 /tmp/x264 && \\\n\tcd /tmp/x264 && \\\n\tgit checkout df79067c && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-shared --enable-static --enable-pic && make && make install\n\n############################\n# Clone and build ffmpeg\n\n# Get latest userland tools and build. Clean up unused stuff at the end\nRUN cd \\\n    && git clone --depth 1 https://github.com/raspberrypi/userland.git \\\n    && cd userland \\\n\t\t&& sed -i 's/sudo//g' ./buildme \\\n    && ./buildme \\\n    && rm -rf ../userland\nRUN apt-get install --no-install-recommends libomxil-bellagio-dev -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y pkg-config && git clone https://github.com/FFmpeg/FFmpeg && \\\n\tcd FFmpeg && git checkout remotes/origin/release/${FFMPEG_VERSION} && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-nonfree --enable-libx264 --enable-gpl && make && \\\n    make install && \\\n    cd .. && rm -rf FFmpeg && rm -rf /var/lib/apt/lists/*;\n\n############################\n# Clone and build machinery\n\nRUN git clone https://github.com/kerberos-io/machinery /tmp/machinery && \\\n    cd /tmp/machinery && git checkout c8b551b12e82041a49275b2239f672ecc34700e6 && \\\n    mkdir build && cd build && \\\n    cmake .. && make && make check && make install && \\\n    rm -rf /tmp/machinery && \\\n    chown -Rf www-data.www-data /etc/opt/kerberosio && \\\n    chmod -Rf 777 /etc/opt/kerberosio/config\n\n#####################\n# Clone and build web\n\nRUN git clone https://github.com/kerberos-io/web /var/www/web && cd /var/www/web && git checkout 0b054205a640f24a3febe9a3e3b6c7ba0d21a8f3 && \\\nchown -Rf www-data.www-data /var/www/web && curl -f -sSk https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \\\ncd /var/www/web && \\\ncomposer install && \\\nnpm config set unsafe-perm true && \\\nnpm config set registry http://registry.npmjs.org/ && \\\nnpm config set strict-ssl=false && \\\nnpm install -g bower && \\\ncd public && \\\nsed -i 's/https/http/g' .bowerrc && \\\nbower --allow-root install && npm cache clean --force;\n\nRUN rm /var/www/web/public/capture && \\\nln -s /etc/opt/kerberosio/capture/ /var/www/web/public/capture\n\n# Fixes, because we are now combining the two docker images.\n# Docker is aware of both web and machinery.\n\nRUN sed -i -e \"s/'insideDocker'/'insideDocker' => false,\\/\\//\" /var/www/web/app/Http/Controllers/SystemController.php\nRUN sed -i -e \"s/service kerberosio status/supervisorctl status machinery \\| grep \\\"RUNNING\\\"';\\/\\//\" /var/www/web/app/Http/Repositories/System/OSSystem.php\n\n# Let's create a /dist folder containing just the files necessary for runtime.\n# Later, it will be copied as the / (root) of the output image.\n\nWORKDIR /dist\nRUN mkdir -p ./etc/opt && cp -r /etc/opt/kerberosio ./etc/opt/\nRUN mkdir -p ./usr/bin && cp /usr/bin/kerberosio ./usr/bin/\nRUN mkdir -p ./var/www && cp -r /var/www/web ./var/www/\nRUN test -d /opt/vc && mkdir -p ./usr/lib && cp -r /opt/vc/lib/* ./usr/lib/ || echo \"not found\"\nRUN cp /usr/local/bin/ffmpeg ./usr/bin/ffmpeg\n\n# Optional: in case your application uses dynamic linking (often the case with CGO),\n# this will collect dependent libraries so they're later copied to the final image\n# NOTE: make sure you honor the license terms of the libraries you copy and distribute\nRUN ldd /usr/bin/kerberosio | tr -s '[:blank:]' '\\n' | grep '^/' | \\\n    xargs -I % sh -c 'mkdir -p $(dirname ./%); cp % ./%;'\n\nFROM debian:stretch-slim\n\n#################################\n# Copy files from previous images\n\nCOPY --chown=0:0 --from=builder /dist /\n\nRUN apt-get -y update && apt-get install --no-install-recommends -y apt-transport-https wget curl lsb-release && \\\nwget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg && \\\necho \"deb https://packages.sury.org/php/ $(lsb_release -sc) main\" > /etc/apt/sources.list.d/php.list && apt update -y && rm -rf /var/lib/apt/lists/*;\n\n####################################\n# ADD supervisor and STARTUP script\n\nRUN apt-get install --no-install-recommends -y supervisor && mkdir -p /var/log/supervisor/ && rm -rf /var/lib/apt/lists/*;\nADD ./supervisord.conf /etc/supervisord.conf\nADD ./run.sh /run.sh\nRUN chmod 755 /run.sh && chmod +x /run.sh\n\n######################\n# INSTALL Nginx\n\nRUN apt-get install --no-install-recommends -y nginx && mkdir -p /run/nginx && rm -rf /var/lib/apt/lists/*;\nRUN rm -Rf /etc/nginx/conf.d/* && rm -Rf /etc/nginx/sites-available/default  && rm -Rf /etc/nginx/sites-enabled/default  && mkdir -p /etc/nginx/ssl\nADD ./web.conf /etc/nginx/sites-available/default.conf\nRUN ln -s /etc/nginx/sites-available/default.conf /etc/nginx/sites-enabled/default.conf\n\nRUN chmod -R 777 /var/www/web/bootstrap/cache/ && \\\n\t\tchmod -R 777 /var/www/web/storage && \\\n\t\tchmod 777 /var/www/web/config/kerberos.php && \\\n\t\tchmod -R 777 /etc/opt/kerberosio/config\n\n######################\n# INSTALL PHP\n\nARG PHP_VERSION=7.1\n\nRUN apt -y --no-install-recommends install php${PHP_VERSION}-cli php${PHP_VERSION}-gd php${PHP_VERSION}-mcrypt php${PHP_VERSION}-curl \\\nphp${PHP_VERSION}-mbstring php${PHP_VERSION}-dom php${PHP_VERSION}-zip php${PHP_VERSION}-fpm && rm -rf /var/lib/apt/lists/*;\n\n########################################\n# Force both nginx and PHP-FPM to run in the foreground\n# This is a requirement for supervisor\n\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\nRUN sed -i -e \"s/;daemonize\\s*=\\s*yes/daemonize = no/g\" /etc/php/${PHP_VERSION}/fpm/php-fpm.conf\nRUN sed -i 's/\"GPCS\"/\"EGPCS\"/g' /etc/php/${PHP_VERSION}/fpm/php.ini\nRUN sed -i 's/\"--daemonize/\"--daemonize --allow-to-run-as-root/g' /etc/init.d/php${PHP_VERSION}-fpm\nRUN sed -i 's/www-data/root/g' /etc/php/${PHP_VERSION}/fpm/pool.d/www.conf\nRUN sed -i 's/www-data/root/g' /etc/nginx/nginx.conf\nRUN sed -i -e \"s/;listen.mode = 0660/listen.mode = 0750/g\" /etc/php/${PHP_VERSION}/fpm/pool.d/www.conf && \\\nfind /etc/php/${PHP_VERSION}/cli/conf.d/ -name \"*.ini\" -exec sed -i -re 's/^(\\s*)#(.*)/\\1;\\2/g' {} \\;\n\n############################\n# COPY template folder\n\n# Copy the config template to filesystem\nADD ./config /etc/opt/kerberosio/template\nADD ./webconfig /var/www/web/template\n\n########################################################\n# Exposing web on port 80 and livestreaming on port 8889\n\nEXPOSE 8889\nEXPOSE 80\n\n############################\n# Volumes\n\nVOLUME [\"/etc/opt/kerberosio/capture\"]\nVOLUME [\"/etc/opt/kerberosio/config\"]\nVOLUME [\"/etc/opt/kerberosio/logs\"]\nVOLUME [\"/var/www/web/config\"]\n\nCMD [\"bash\", \"/run.sh\"]\n"
}