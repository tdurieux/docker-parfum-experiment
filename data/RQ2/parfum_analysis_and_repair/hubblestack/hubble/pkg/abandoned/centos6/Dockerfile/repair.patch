diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hubblestack/hubble/pkg/abandoned/centos6/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hubblestack/hubble/pkg/abandoned/centos6/Dockerfile/repaired.Dockerfile
index f06635d..ad1ebf2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hubblestack/hubble/pkg/abandoned/centos6/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hubblestack/hubble/pkg/abandoned/centos6/Dockerfile/repaired.Dockerfile
@@ -4,7 +4,7 @@
 # Before building hubble, build osquery using a Dockerfile in pkg/osquery/ directory.
 # To build this image: 1. copy previously built osquery_4hubble.tar to directory with this Dockerfile
 #                      2. docker build -t <image_name> --build-arg HUBBLE_CHECKOUT=<tag or commit> --build-arg HUBBLE_VERSION=<Hubble Version> .
-# The resulting image is ready to build and run pyinstaller on container start that should 
+# The resulting image is ready to build and run pyinstaller on container start that should
 # create hubble<version>-centos6.tar.gz in the /data directory inside the container.
 # Mount /data volume into a directory on the host to access the package.
 # To run the container:  docker run -it --rm -v `pwd`:/data <image_name>
@@ -23,7 +23,7 @@ RUN yum -y install git \
     make cmake gcc wget openssl \
     && yum clean all \
     && rm -rf /var/cache/yum
-    
+
 #libcurl install start
 #install libcurl to avoid depending on host version
 #requires autoconf libtool libssh2-devel zlib-devel autoconf
@@ -37,7 +37,7 @@ RUN mkdir -p "$LIBCURL_TEMP" \
  && cd curl \
  && git checkout "$LIBCURL_SRC_VERSION" \
  && ./buildconf \
- && ./configure --prefix=/opt/hubble --disable-ldap --without-nss --disable-manual --disable-gopher --disable-smtp --disable-smb --disable-imap --disable-pop3 --disable-tftp --disable-telnet --disable-dict --disable-ldaps --disable-ldap --disable-rtsp --with-libssh2 \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/hubble --disable-ldap --without-nss --disable-manual --disable-gopher --disable-smtp --disable-smb --disable-imap --disable-pop3 --disable-tftp --disable-telnet --disable-dict --disable-ldaps --disable-ldap --disable-rtsp --with-libssh2 \
  && make \
  && make install \
  && rm -rf "$LIBCURL_TEMP"
@@ -54,7 +54,7 @@ RUN mkdir -p "$GITTEMP" \
  && cd git \
  && git checkout "$GIT_SRC_VERSION" \
  && make configure \
- && ./configure --prefix=/opt/hubble --with-tcltk=no --with-expat=no --with-python=no  --with-curl=/opt/hubble \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/hubble --with-tcltk=no --with-expat=no --with-python=no --with-curl=/opt/hubble \
  && echo "NO_TCLTK=YesPlease" >> config.mak.autogen \
  && echo "NO_PERL=YesPlease" >> config.mak.autogen \
  && sed -i '0,/^NO_GETTEXT/s/^NO_GETTEXT.*/NO_GETTEXT=YesPlease/' config.mak.autogen \
@@ -82,7 +82,7 @@ RUN mkdir -p "$LIBGIT2TEMP" \
  && cmake . -DCMAKE_INSTALL_PREFIX=/usr/local/ \
  && make \
  && make install \
- && rm -rf "$LIBGIT2TEMP"
+ && rm -rf "$LIBGIT2TEMP" && rm libgit2.tar.gz
 
 #fpm package making requirements start
 RUN yum install -y centos-release-scl scl-utils \
@@ -105,7 +105,7 @@ ENV PYENV_ROOT=/opt/hubble/pyenv
 ENV PATH=$PYENV_ROOT/bin:$PATH
 ENV PYTHON_CONFIGURE_OPTS="--enable-shared"
 RUN umask 022 \
- && curl -s -S -L "$PYENV_INSTALLER_URL" -o /usr/bin/pyenv-installer \
+ && curl -f -s -S -L "$PYENV_INSTALLER_URL" -o /usr/bin/pyenv-installer \
  && chmod 0755 /usr/bin/pyenv-installer \
  && /usr/bin/pyenv-installer \
  && eval "$(pyenv init -)" \
@@ -113,7 +113,7 @@ RUN umask 022 \
  && pyenv global $PYENV_VERSION
 
 RUN eval "$(pyenv init -)" \
- && pip -v install --upgrade pip
+ && pip -v --no-cache-dir install --upgrade pip
 
 #extract osquery files. optionally pass in osquery filename with OSQUERY_TAR_FILENAME build-arg
 ARG OSQUERY_TAR_FILENAME=osquery_4hubble.tar