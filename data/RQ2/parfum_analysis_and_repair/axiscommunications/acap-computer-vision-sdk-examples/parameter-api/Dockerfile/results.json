{
  "startTime": 1674219523346,
  "endTime": 1674219524618,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARCH=armv7hf\nARG SDK_VERSION=1.2\nARG REPO=axisecp\nARG UBUNTU_IMAGE_VER=20.04\n\nFROM arm32v7/ubuntu:${UBUNTU_IMAGE_VER} as runtime-image-armv7hf\nFROM arm64v8/ubuntu:${UBUNTU_IMAGE_VER} as runtime-image-aarch64\nFROM $REPO/acap-computer-vision-sdk:$SDK_VERSION-$ARCH as cv-sdk-runtime\nFROM $REPO/acap-computer-vision-sdk:$SDK_VERSION-$ARCH-devel as cv-sdk-devel\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# TARGET_TOOLCHAIN is defined as the platform arch string\n# i.e., arm-linux-gnueabihf for the ARTPEC-7 platform\nRUN apt-get update && apt-get install --no-install-recommends -y -f \\\n    libglib2.0-dev \\\n    libsystemd0 \\\n    protobuf-compiler-grpc && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /tmp/devel /tmp/runtime /build-root /target-root\n\n# Download the target libs/headers required for compilation\nRUN apt-get update && apt-get install --no-install-recommends --reinstall --download-only -o=dir::cache=/tmp/devel -y -f \\\n        libglib2.0-dev:$UBUNTU_ARCH \\\n        libsystemd0:$UBUNTU_ARCH \\\n        libgrpc++-dev:$UBUNTU_ARCH \\\n        libprotobuf-dev:$UBUNTU_ARCH \\\n        libc-ares-dev:$UBUNTU_ARCH \\\n        libgoogle-perftools-dev:$UBUNTU_ARCH \\\n        libssl-dev:$UBUNTU_ARCH \\\n        libcrypto++-dev:$UBUNTU_ARCH \\\n        libgcrypt20:$UBUNTU_ARCH && rm -rf /var/lib/apt/lists/*;\nRUN for f in /tmp/devel/archives/*.deb; do dpkg -x $f /build-root; done\nRUN cp -r /build-root/lib/* /build-root/usr/lib/ && rm -rf /build-root/lib\n\n# Separate the target libs required during runtime\nRUN apt-get update && apt-get install --no-install-recommends --reinstall --download-only -o=dir::cache=/tmp/runtime -y -f \\\n        libgrpc++:$UBUNTU_ARCH \\\n        libprotobuf17:$UBUNTU_ARCH \\\n        libc-ares2:$UBUNTU_ARCH && rm -rf /var/lib/apt/lists/*;\nRUN for f in /tmp/runtime/archives/*.deb; do dpkg -x $f /target-root; done\nRUN cp -r /target-root/lib/* /target-root/usr/lib/ && rm -rf /target-root/lib\n\n# Generate TSL/SSL test certificate\nRUN openssl req -x509 -batch -subj '/CN=localhost' -days 10000 -newkey rsa:4096 -nodes -out server.pem -keyout server.key\n\nCOPY app/ build/\nWORKDIR /build\nRUN make\n\nFROM runtime-image-${ARCH}\n# Copy the libraries needed for our runtime\nCOPY --from=cv-sdk-devel /target-root /\n\n# Copy the compiled Parameter application\nCOPY --from=cv-sdk-devel /build/parameter /usr/bin/\nCOPY --from=cv-sdk-devel server.key server.pem models/\n\nCMD [\"usr/bin/parameter\"]\n"
}