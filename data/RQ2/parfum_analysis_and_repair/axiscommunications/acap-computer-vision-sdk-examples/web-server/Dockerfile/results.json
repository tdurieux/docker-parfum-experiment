{
  "startTime": 1674252675688,
  "endTime": 1674252677029,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 40,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 8,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 48,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 40,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 8,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 48,
        "columnStart": 26,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 31
      }
    }
  ],
  "repairedDockerfile": "ARG ARCH=armv7hf\n\nFROM arm32v7/ubuntu:20.04 as runtime-image-armv7hf\nFROM arm64v8/ubuntu:20.04 as runtime-image-aarch64\n\nFROM runtime-image-${ARCH}\n\n# Setup environment variables\nENV DEBIAN_FRONTEND=noninteractive\nENV BUILD_ROOT=/build-root\n\n# Add source for target arch\nRUN echo \\\n\"deb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse\\n\\\ndeb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse\\n\\\ndeb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse\\n\\\ndeb [arch=amd64] http://security.ubuntu.com/ubuntu focal-security main restricted universe multiverse\\n\\\ndeb [arch=armhf,arm64] http://ports.ubuntu.com/ubuntu-ports/ focal main restricted universe multiverse\\n\\\ndeb [arch=armhf,arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-updates main restricted universe multiverse\\n\\\ndeb [arch=armhf,arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-backports main restricted universe multiverse\\n\\\ndeb [arch=armhf,arm64] http://ports.ubuntu.com/ubuntu-ports/ focal-security main restricted universe multiverse\"\\\n > /etc/apt/sources.list\n\n ## Install dependencies\nARG ARCH\nRUN apt-get update && apt-get install --no-install-recommends -y -f \\\n        git \\\n        make \\\n        cmake \\\n        pkg-config \\\n        libglib2.0-dev \\\n        libsystemd0 && rm -rf /var/lib/apt/lists/*;\n\nRUN if [ \"$ARCH\" = armv7hf ]; then \\\n        apt-get install --no-install-recommends -y -f \\\n        g++-arm-linux-gnueabihf && \\\n        dpkg --add-architecture armhf && \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n        libglib2.0-dev:armhf \\\n        libc-dev:armhf \\\n        libsystemd0:armhf; rm -rf /var/lib/apt/lists/*; \\\n    elif [ \"$ARCH\" = aarch64 ]; then \\\n        apt-get install --no-install-recommends -y -f \\\n        g++-aarch64-linux-gnu && \\\n        dpkg --add-architecture arm64 && \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n        libglib2.0-dev:arm64 \\\n        libc-dev:arm64 \\\n        libsystemd0:arm64; rm -rf /var/lib/apt/lists/*; \\\n    else \\\n        printf \"Error: '%s' is not a valid value for the ARCH variable\\n\", \"$ARCH\"; \\\n        exit 1; \\\n    fi\nWORKDIR /opt\nCOPY monkey.patch .\n\nRUN git clone -b v1.5.6 https://github.com/monkey/monkey\nWORKDIR /opt/monkey\nRUN git apply ../monkey.patch && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-shared \\\n    --malloc-libc \\\n    --prefix=/usr/local \\\n    --bindir=/usr/local/bin \\\n    --libdir=/usr/local/lib \\\n    --sysconfdir=/usr/local/packages/monkey/html \\\n    --datadir=/usr/local/packages/monkey/html \\\n    --mandir=/usr/local/man \\\n    --logdir=/tmp \\\n    --plugdir=/usr/local/packages/monkey/lib \\\n    --pidfile=/tmp/monkey.pid \\\n    --incdir=/usr/local/include/monkey \\\n    --systemddir=/usr/lib/systemd/system && \\\n    make && \\\n    make install\n\nWORKDIR /opt/monkey/examples\nRUN cp /usr/local/bin/monkey .\n\n# Build examples\nRUN sed -i 's/LDFLAGS/LDLIBS/g' Makefile &&\\\n    make &&\\\n    cp hello list quiz /usr/local/bin/\n\nENV LD_LIBRARY_PATH=/usr/local/lib\n\n# Prepare data for examples\nCOPY . /tmp/\n# Start Monkey server\nCMD monkey\n"
}