{
  "startTime": 1674252751840,
  "endTime": 1674252752533,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 39,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 26,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 39,
        "columnStart": 26,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 31
      }
    }
  ],
  "repairedDockerfile": "# Specify the architecture at build time: mipsis32r2el/armv7hf/aarch64\nARG ARCH=armv7hf\nARG REPO=axisecp\nARG SDK_VERSION=1.2\nFROM arm32v7/ubuntu:20.04 as runtime-image-armv7hf\nFROM arm64v8/ubuntu:20.04 as runtime-image-aarch64\n\n\nFROM ${REPO}/acap-computer-vision-sdk:${SDK_VERSION}-${ARCH}-runtime AS cv-sdk-runtime\nFROM ${REPO}/acap-computer-vision-sdk:${SDK_VERSION}-${ARCH}-devel AS cv-sdk-devel\n\n# Setup proxy configuration\nARG HTTP_PROXY\nARG ARCH\nENV http_proxy=$HTTP_PROXY\nENV https_proxy=$HTTP_PROXY\n\nENV DEBIAN_FRONTEND=noninteractive\n## Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y -f \\\n        make \\\n        pkg-config \\\n        libglib2.0-dev \\\n        libsystemd0 && rm -rf /var/lib/apt/lists/*;\n\n\nRUN if [ \"$ARCH\" = armv7hf ]; then \\\n        apt-get install --no-install-recommends -y -f \\\n        g++-arm-linux-gnueabihf && \\\n        dpkg --add-architecture armhf && \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n        libglib2.0-dev:armhf \\\n        libsystemd0:armhf; rm -rf /var/lib/apt/lists/*; \\\n    elif [ \"$ARCH\" = aarch64 ]; then \\\n        apt-get install --no-install-recommends -y -f \\\n        g++-aarch64-linux-gnu && \\\n        dpkg --add-architecture arm64 && \\\n        apt-get update && apt-get install --no-install-recommends -y \\\n        libglib2.0-dev:arm64 \\\n        libsystemd0:arm64; rm -rf /var/lib/apt/lists/*; \\\n    else \\\n        printf \"Error: '%s' is not a valid value for the ARCH variable\\n\", \"$ARCH\"; \\\n        exit 1; \\\n    fi\n\nCOPY app/Makefile /build/\nCOPY app/src/ /build/src/\nWORKDIR /build\n\nRUN if [ \"$ARCH\" = armv7hf ]; then \\\n        make CXX=arm-linux-gnueabihf-g++ CC=arm-linux-gnueabihf-gcc  STRIP=arm-linux-gnueabihf-strip;\\\n    elif [ \"$ARCH\" = aarch64 ]; then \\\n        make  CXX=/usr/bin/aarch64-linux-gnu-g++ CC=/usr/bin/aarch64-linux-gnu-gcc STRIP=aarch64-linux-gnu-strip;\\\n    else \\\n        printf \"Error: '%s' is not a valid value for the ARCH variable\\n\", \"$ARCH\"; \\\n        exit 1; \\\n    fi\n\nFROM runtime-image-${ARCH}\nCOPY --from=cv-sdk-devel /build/hello_world /usr/bin/\nCOPY --from=cv-sdk-runtime /axis/opencv /\n\nCMD [\"/usr/bin/hello_world\"]\n"
}