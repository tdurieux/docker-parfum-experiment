{
  "startTime": 1674253754250,
  "endTime": 1674253756154,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 3,
        "columnEnd": 131
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 3,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 3,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 3,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 3,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 3,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:latest-gpu-py3\nENV TF_FORCE_GPU_ALLOW_GROWTH true\n\n# Get docker to be able to build ACAP inside this container\nARG DEBIAN_FRONTEND=noninteractive\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN rm /etc/apt/sources.list.d/cuda.list && rm /etc/apt/sources.list.d/nvidia-ml.list\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n   curl && \\\n   apt-get clean && \\\n   rm -rf /var/lib/apt/lists/* && \\\n   curl -f --limit-rate 1G -L -O https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb && \\\n   dpkg -i cuda-keyring_1.0-1_all.deb\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n   apt-transport-https \\\n   ca-certificates \\\n   software-properties-common && \\\n   # Install Docker\n   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \\\n   add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable\" && \\\n   apt-get update && apt-get install -y --no-install-recommends docker-ce && \\\n   # Edge TPU Compiler installation\n   curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n   echo \"deb https://packages.cloud.google.com/apt coral-edgetpu-stable main\" | tee /etc/apt/sources.list.d/coral-edgetpu.list && \\\n   apt-get update && apt-get install -y --no-install-recommends edgetpu-compiler && \\\n   apt-get clean && \\\n   rm -rf /var/lib/apt/lists/*\n\n# Create directories and get dataset\nWORKDIR /env\nRUN mkdir -p /env/app /env/data/images /env/data/annotations /env/models && \\\n   curl -f --limit-rate 1G -o /env/data/images/val2017.zip \\\n   https://images.cocodataset.org/zips/val2017.zip && \\\n   unzip -q /env/data/images/val2017.zip -d /env/data/images/ && \\\n   rm /env/data/images/val2017.zip && \\\n   curl -f --limit-rate 1G -o /env/data/annotations_trainval2017.zip \\\n   https://images.cocodataset.org/annotations/annotations_trainval2017.zip && \\\n   unzip -q /env/data/annotations_trainval2017.zip -d /env/data/ && \\\n   rm /env/data/annotations_trainval2017.zip\n\n# Get pretrained models\nCOPY models.armv7hf.edgetpu.sha512 /env/models.armv7hf.edgetpu.sha512\nRUN curl -f -o /env/models.armv7hf.edgetpu.zip \\\n   https://acap-artifacts.s3.eu-north-1.amazonaws.com/models/models.armv7hf.edgetpu.zip && \\\n   sha512sum -c /env/models.armv7hf.edgetpu.sha512 && \\\n   rm /env/models.armv7hf.edgetpu.sha512 && \\\n   unzip -q /env/models.armv7hf.edgetpu.zip -d /env/ && rm /env/models.armv7hf.edgetpu.zip && \\\n   cp /env/models/converted_model_edgetpu.tflite /env/app/\n\n# Copy the rest of the local files\nCOPY env/ /env/\n\n# Get specific python packages\nRUN pip3 install --no-cache-dir Pillow==8.0.0 tensorflow==2.3.0\n\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES all\n\n"
}