diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/axiscommunications/acap3-examples/tensorflow-to-larod/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/axiscommunications/acap3-examples/tensorflow-to-larod/Dockerfile/repaired.Dockerfile
index 0a35833..903a501 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/axiscommunications/acap3-examples/tensorflow-to-larod/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/axiscommunications/acap3-examples/tensorflow-to-larod/Dockerfile/repaired.Dockerfile
@@ -10,7 +10,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
    curl && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
-   curl --limit-rate 1G -L -O https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb && \
+   curl -f --limit-rate 1G -L -O https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/cuda-keyring_1.0-1_all.deb && \
    dpkg -i cuda-keyring_1.0-1_all.deb
 
 RUN apt-get update && apt-get install -y --no-install-recommends \
@@ -22,7 +22,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable" && \
    apt-get update && apt-get install -y --no-install-recommends docker-ce && \
    # Edge TPU Compiler installation
-   curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
+   curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
    echo "deb https://packages.cloud.google.com/apt coral-edgetpu-stable main" | tee /etc/apt/sources.list.d/coral-edgetpu.list && \
    apt-get update && apt-get install -y --no-install-recommends edgetpu-compiler && \
    apt-get clean && \
@@ -31,18 +31,18 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 # Create directories and get dataset
 WORKDIR /env
 RUN mkdir -p /env/app /env/data/images /env/data/annotations /env/models && \
-   curl --limit-rate 1G -o /env/data/images/val2017.zip \
-   http://images.cocodataset.org/zips/val2017.zip && \
+   curl -f --limit-rate 1G -o /env/data/images/val2017.zip \
+   https://images.cocodataset.org/zips/val2017.zip && \
    unzip -q /env/data/images/val2017.zip -d /env/data/images/ && \
    rm /env/data/images/val2017.zip && \
-   curl --limit-rate 1G -o /env/data/annotations_trainval2017.zip \
-   http://images.cocodataset.org/annotations/annotations_trainval2017.zip && \
+   curl -f --limit-rate 1G -o /env/data/annotations_trainval2017.zip \
+   https://images.cocodataset.org/annotations/annotations_trainval2017.zip && \
    unzip -q /env/data/annotations_trainval2017.zip -d /env/data/ && \
    rm /env/data/annotations_trainval2017.zip
 
 # Get pretrained models
 COPY models.armv7hf.edgetpu.sha512 /env/models.armv7hf.edgetpu.sha512
-RUN curl -o /env/models.armv7hf.edgetpu.zip \
+RUN curl -f -o /env/models.armv7hf.edgetpu.zip \
    https://acap-artifacts.s3.eu-north-1.amazonaws.com/models/models.armv7hf.edgetpu.zip && \
    sha512sum -c /env/models.armv7hf.edgetpu.sha512 && \
    rm /env/models.armv7hf.edgetpu.sha512 && \