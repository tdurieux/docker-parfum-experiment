{
  "startTime": 1674251094616,
  "endTime": 1674251095303,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# CI test image for unit/lint/type tests\nFROM node:14-alpine as browser-feature-builder\n\nRUN apk add --no-cache --update bash python3 make gcc g++ musl-dev xvfb-run\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY babel.config.js lerna.json .eslintignore .eslintrc.js jest.config.js tsconfig.json ./\nADD min_packages.tar .\nCOPY bin ./bin\nRUN npx lerna bootstrap\nCOPY packages ./packages\nRUN npm run build\n\nRUN npm pack --verbose packages/js/\nRUN npm pack --verbose packages/browser/\nRUN npm pack --verbose packages/node/\nRUN npm pack --verbose packages/plugin-angular/\nRUN npm pack --verbose packages/plugin-react/\nRUN npm pack --verbose packages/plugin-vue/\n\nCOPY test/browser/features test/browser/features\n\nWORKDIR /app/test/browser/features/fixtures\nRUN npm install --no-package-lock --no-save ../../../../bugsnag-browser-*.tgz && npm cache clean --force;\nRUN npm install --no-package-lock --no-save ../../../../bugsnag-plugin-react-*.tgz && npm cache clean --force;\nRUN npm install --no-package-lock --no-save ../../../../bugsnag-plugin-vue-*.tgz && npm cache clean --force;\nWORKDIR plugin_angular/ng\nRUN npm install --no-package-lock --no-save \\\n  ../../../../../../bugsnag-plugin-angular-*.tgz \\\n  ../../../../../../bugsnag-node-*.tgz \\\n  ../../../../../../bugsnag-browser-*.tgz \\\n  ../../../../../../bugsnag-js-*.tgz && npm cache clean --force;\n\n# install the dependencies and build each fixture\nWORKDIR /app/test/browser/features/fixtures\nRUN find . -name package.json -type f -mindepth 2 -maxdepth 3 ! -path \"./node_modules/*\" | \\\n  xargs -I % bash -c 'cd `dirname %` && npm install --no-package-lock && npm run build'\n\n# once the fixtures are built we no longer need node_modules and\n# it makes the COPY later on much faster if we don't have them\nRUN rm -fr **/*/node_modules/\n\n# The maze-runner browser tests\nFROM 855461928731.dkr.ecr.us-west-1.amazonaws.com/maze-runner-releases:latest-v6-cli as browser-maze-runner\n\nCOPY --from=browser-feature-builder /app/test/browser /app/test/browser/\nWORKDIR /app/test/browser\n"
}