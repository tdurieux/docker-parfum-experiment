{
  "startTime": 1674217077830,
  "endTime": 1674217079458,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update > /dev/n\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y wget maven gnupg1 cppcheck libncurses5 jq clang-format unzip curl git && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean > /dev/null\n\nENV ANDROID_SDK_ROOT=\"/sdk\"\nENV ANDROID_CMDLINE_TOOLS=\"${ANDROID_SDK_ROOT}/cmdline-tools/latest\"\nENV PATH=\"${PATH}:${ANDROID_CMDLINE_TOOLS}/bin\"\nENV CMDLINE_TOOLS_NAME=\"commandlinetools-linux-6858069_latest.zip\"\nWORKDIR $ANDROID_SDK_ROOT\n\n# Generate signing key\nCOPY features/scripts/generate_gpg_key generate_gpg_key\nRUN gpg1 --gen-key --batch generate_gpg_key\nRUN mkdir ~/.gradle\nRUN gpg1 --list-keys | awk -F '[/\\ ]' 'FNR==3{printf \"signing.keyId=%s\\n\", $5}' >> ~/.gradle/gradle.properties\nRUN echo \"signing.password=password\" >> ~/.gradle/gradle.properties\nRUN echo \"signing.secretKeyRingFile=/root/.gnupg/secring.gpg\" >> ~/.gradle/gradle.properties\n\n# Download Android command line tools\nRUN wget https://dl.google.com/android/repository/${CMDLINE_TOOLS_NAME} -q\nRUN mkdir cmdline-tools\nRUN unzip -q ${CMDLINE_TOOLS_NAME} -d /sdk/cmdline-tools\nRUN mv /sdk/cmdline-tools/cmdline-tools $ANDROID_CMDLINE_TOOLS\nRUN rm $CMDLINE_TOOLS_NAME\n\n# Install Android tools using sdkmanager\nRUN yes | sdkmanager \"platform-tools\" > /dev/null\nRUN yes | sdkmanager \"platforms;android-30\" > /dev/null\nRUN yes | sdkmanager \"ndk;17.2.4988734\" > /dev/null\nRUN yes | sdkmanager \"cmake;3.6.4111459\" > /dev/null\nRUN yes | sdkmanager \"cmake;3.10.2.4988404\" > /dev/null\nRUN yes | sdkmanager \"build-tools;30.0.3\" > /dev/null\n\n# Install bundletool\nRUN wget -q https://github.com/google/bundletool/releases/download/1.4.0/bundletool-all-1.4.0.jar\nRUN mv bundletool-all-1.4.0.jar bundletool.jar\n\n\n# Install AGP specific system and Android requirements\nRUN apt-get update > /dev/null\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y git ruby-full make libcurl4-openssl-dev gcc g++ openjdk-11-jdk && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean > /dev/null\n\nRUN yes | sdkmanager 'ndk;16.1.4479499' >/dev/null\nENV ANDROID_NDK_HOME=\"/sdk/ndk/16.1.4479499\"\n\n# Install Ruby and other maze-runner requirements\nRUN gem install bundler\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system 3.0.6 && rm -rf /root/.gem;\n\n# Install node, npm and yarn\nRUN curl -fsSL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN npm install --global yarn && npm cache clean --force;\n\n# Setup node credentials\nRUN rm -f ~/.npmrc\nARG REG_BASIC_CREDENTIAL\nARG REG_NPM_EMAIL\nARG REG_URL\nRUN echo \"_auth=$REG_BASIC_CREDENTIAL\" >> ~/.npmrc\nRUN echo \"email=$REG_NPM_EMAIL\" >> ~/.npmrc\nRUN echo \"registry=$REG_URL\" >> ~/.npmrc\nRUN echo \"always-auth=true\" >> ~/.npmrc\n\nWORKDIR /app\n\n# Force download of gradle zip early to avoid repeating\n# if Docker cache is invalidated by branch changes.\nCOPY gradlew gradle.properties /app/\nCOPY gradle/ /app/gradle/\nENV GRADLE_OPTS=\"-Dorg.gradle.daemon=false\"\nCOPY settings.gradle /app/\nRUN ./gradlew\n\n# Copy remaining Gradle files\nCOPY build.gradle /app/\n\n# Copy source and git config\nCOPY src/ src/\nCOPY .git/ .git/\n\n# Copy any other test associated files\nCOPY detekt-baseline.xml Gemfile Makefile LICENSE /app/\nCOPY features/ features/\n\n# Install maze-runner\nRUN bundle install\n"
}