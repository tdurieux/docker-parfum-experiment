diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/basedosdados/website/stack/ckan/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/basedosdados/website/stack/ckan/Dockerfile/repaired.Dockerfile
index 194cb0f..cd09c81 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/basedosdados/website/stack/ckan/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/basedosdados/website/stack/ckan/Dockerfile/repaired.Dockerfile
@@ -1,10 +1,7 @@
-# syntax=docker/dockerfile:1.1.7-experimental
-# This dockerfile uses an extended syntax, search google for more information on `syntax=docker/dockerfile:1.1.7-experimental`
-
 ############## EXTENSIONS ###############
 FROM alpine as extensions
 WORKDIR /extensions
-RUN apk add git
+RUN apk add --no-cache git
 # RUN git clone https://github.com/ckan/ckanext-pages.git
 # RUN git clone https://github.com/ckan/ckanext-repo.git
 # RUN git clone https://github.com/ckan/ckanext-scheming.git
@@ -21,9 +18,9 @@ RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloa
 RUN --mount=type=cache,target=/var/lib/apt,id=apt_list \
     --mount=type=cache,target=/var/cache/apt,id=apt_arch \
     apt-get -q -y update \
-    && apt-get -y install \
-        libpq-dev libxml2-dev libxslt-dev libgeos-dev libssl-dev  \
-        libffi-dev postgresql-client build-essential git-core vim wget crudini
+    && apt-get -y --no-install-recommends install \
+        libpq-dev libxml2-dev libxslt-dev libgeos-dev libssl-dev \
+        libffi-dev postgresql-client build-essential git-core vim wget crudini && rm -rf /var/lib/apt/lists/*;
 
 RUN python3 -m venv /venv
 ENV PYTHONDONTWRITEBYTECODE=1 VIRTUAL_ENV=/venv PATH=/venv/bin:$PATH
@@ -31,9 +28,9 @@ ENV PYTHONDONTWRITEBYTECODE=1 VIRTUAL_ENV=/venv PATH=/venv/bin:$PATH
 # Setup CKAN
 COPY vendor/ckan/ /ckan/
 RUN --mount=type=cache,target=/root/.cache/pip/,id=pip \
-    pip install -U pip setuptools==45 && \
-    pip install /ckan/[requirements] && \
-    pip install 'sqlalchemy==1.3.19' 'tzlocal==2.1' # Upgrade some CKAN dependencies that are emmiting warnings for py3.8
+    pip install --no-cache-dir -U pip setuptools==45 && \
+    pip install --no-cache-dir /ckan/[requirements] && \
+    pip install --no-cache-dir 'sqlalchemy==1.3.19' 'tzlocal==2.1'# Upgrade some CKAN dependencies that are emmiting warnings for py3.8
 
 # No need for that crap!  RUN cp -v /ckan/contrib/docker/ckan-entrypoint.sh /ckan-entrypoint.sh && chmod +x /ckan-entrypoint.sh
 
@@ -42,7 +39,7 @@ RUN --mount=type=cache,target=/root/.cache/pip/,id=pip \
 ###################
 
 RUN --mount=type=cache,target=/root/.cache/pip/,id=pip \
-    pip install ipdb flask_debugtoolbar gunicorn cryptography
+    pip install --no-cache-dir ipdb flask_debugtoolbar gunicorn cryptography
 
 # INSTALL EXTENSIONS
 
@@ -51,9 +48,9 @@ COPY --from=extensions /extensions /app/extensions
 COPY ckanext-basedosdados/requirements.txt /app/extensions/ckanext-basedosdados/requirements.txt
 RUN --mount=type=cache,target=/root/.cache/pip/,id=pip \
     cat /app/extensions/*/requirements.txt | egrep -v '^ *[.#]( |$)' | tee /tmp/reqs \
-    && pip install -r /tmp/reqs \
-    && pip install ckantoolkit ckanapi \
-        python-Levenshtein unidecode nltk==3.4.5 ckanext-tagmanager # && /venv/bin/python -m nltk.downloader all
+    && pip install --no-cache-dir -r /tmp/reqs \
+    && pip install --no-cache-dir ckantoolkit ckanapi \
+        python-Levenshtein unidecode nltk==3.4.5 ckanext-tagmanager# && /venv/bin/python -m nltk.downloader all
 # RUN git clone https://github.com/cphsolutionslab/ckanext-customuserprivileges && cd ckanext-customuserprivileges && pip install -e .
 
 # COPY configs
@@ -76,9 +73,9 @@ ENV PIP_NO_PYTHON_VERSION_WARNING=1 PYTHONDONTWRITEBYTECODE=1 PYTHONBREAKPOINT="
 ENV VIRTUAL_ENV=/venv PATH=/venv/bin:$PATH
 
 # System dependencies
-RUN --mount=type=cache,target=/var/lib/apt,id=apt_list2 --mount=type=cache,target=/var/cache/apt,id=apt_arch2\
-        apt-get update && apt-get install -y libmagic1 libpq-dev libxslt-dev \
-                curl htop vim   # plus some goodies
+RUN --mount=type=cache,target=/var/lib/apt,id=apt_list2--mount=type=cache,target=/var/cache/apt,id=apt_arch2 \
+        apt-get update && apt-get install --no-install-recommends -y libmagic1 libpq-dev libxslt-dev \
+                curl htop vim && rm -rf /var/lib/apt/lists/*; # plus some goodies
 
 # Get files
 
@@ -92,10 +89,10 @@ COPY --from=builder /venv /venv
 # Install debug/dev goodies
 # For %debug% jinja directive | for bug fix in werkzeug debug scope | for better stack traces
 RUN --mount=type=cache,target=/root/.cache/pip/,id=pip \
-    pip install jinja2==2.11.2 Werkzeug==1.0.1 better_exceptions
+    pip install --no-cache-dir jinja2==2.11.2 Werkzeug==1.0.1 better_exceptions
 
 COPY ckanext-basedosdados /app/ckanext-basedosdados
 RUN --mount=type=cache,target=/root/.cache/pip/,id=pip \
-    pip install -e /app/ckanext-basedosdados
+    pip install --no-cache-dir -e /app/ckanext-basedosdados
 COPY --from=builder /app/wsgi.py /app/
 COPY --from=builder /app/configs/who.ini /app/configs/ckan.ini /app/configs/