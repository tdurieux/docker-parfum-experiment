{
  "startTime": 1674217873657,
  "endTime": 1674217874663,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 80,
        "columnStart": 26,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 80,
        "columnStart": 26,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############## EXTENSIONS ###############\nFROM alpine as extensions\nWORKDIR /extensions\nRUN apk add --no-cache git\n# RUN git clone https://github.com/ckan/ckanext-pages.git\n# RUN git clone https://github.com/ckan/ckanext-repo.git\n# RUN git clone https://github.com/ckan/ckanext-scheming.git\n# RUN git clone https://github.com/NaturalHistoryMuseum/ckanext-contact.git\n# RUN git clone https://github.com/ckan/ckanext-googleanalytics.git\n# RUN git clone https://github.com/stadt-karlsruhe/ckanext-discovery.git\n\n################ BUILDER #################\nFROM python:3.9 as builder\nLABEL maintainer=\"Base dos Dados\"\nENV PYTHONDONTWRITEBYTECODE=1 PIP_NO_PYTHON_VERSION_WARNING=1\n\nRUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache\nRUN --mount=type=cache,target=/var/lib/apt,id=apt_list \\\n    --mount=type=cache,target=/var/cache/apt,id=apt_arch \\\n    apt-get -q -y update \\\n    && apt-get -y --no-install-recommends install \\\n        libpq-dev libxml2-dev libxslt-dev libgeos-dev libssl-dev \\\n        libffi-dev postgresql-client build-essential git-core vim wget crudini && rm -rf /var/lib/apt/lists/*;\n\nRUN python3 -m venv /venv\nENV PYTHONDONTWRITEBYTECODE=1 VIRTUAL_ENV=/venv PATH=/venv/bin:$PATH\n\n# Setup CKAN\nCOPY vendor/ckan/ /ckan/\nRUN --mount=type=cache,target=/root/.cache/pip/,id=pip \\\n    pip install --no-cache-dir -U pip setuptools==45 && \\\n    pip install --no-cache-dir /ckan/[requirements] && \\\n    pip install --no-cache-dir 'sqlalchemy==1.3.19' 'tzlocal==2.1'# Upgrade some CKAN dependencies that are emmiting warnings for py3.8\n\n# No need for that crap!  RUN cp -v /ckan/contrib/docker/ckan-entrypoint.sh /ckan-entrypoint.sh && chmod +x /ckan-entrypoint.sh\n\n###################\n## OUR ADDITIONS ##\n###################\n\nRUN --mount=type=cache,target=/root/.cache/pip/,id=pip \\\n    pip install --no-cache-dir ipdb flask_debugtoolbar gunicorn cryptography\n\n# INSTALL EXTENSIONS\n\n# COPY utils/install-extension.sh /app/extensions/install-extension.sh\nCOPY --from=extensions /extensions /app/extensions\nCOPY ckanext-basedosdados/requirements.txt /app/extensions/ckanext-basedosdados/requirements.txt\nRUN --mount=type=cache,target=/root/.cache/pip/,id=pip \\\n    cat /app/extensions/*/requirements.txt | egrep -v '^ *[.#]( |$)' | tee /tmp/reqs \\\n    && pip install --no-cache-dir -r /tmp/reqs \\\n    && pip install --no-cache-dir ckantoolkit ckanapi \\\n        python-Levenshtein unidecode nltk==3.4.5 ckanext-tagmanager# && /venv/bin/python -m nltk.downloader all\n# RUN git clone https://github.com/cphsolutionslab/ckanext-customuserprivileges && cd ckanext-customuserprivileges && pip install -e .\n\n# COPY configs\nCOPY ./configs/ /app/configs/\nRUN crudini --merge --inplace /app/configs/ckan.ini < /app/configs/ckan.override.prod.ini && \\\n    crudini --set --inplace /app/configs/ckan.ini app:main ckan.plugins \"$(crudini --get /app/configs/ckan.ini app:main ckan.plugins) $(crudini --get /app/configs/ckan.ini app:main ckan.plugins_prod)\"\nCOPY ./stack/ckan/wsgi.py /app/wsgi.py\n\n#################################\n######### FINAL IMAGE ###########\n#################################\n\nFROM python:3.9-slim as final\nWORKDIR /app\nHEALTHCHECK --interval=30s --timeout=5s --start-period=15s \\\n        CMD curl -f http://localhost:5000 || exit 1\n\nENV CKAN_STORAGE_PATH=/app/uploads CKAN_INI=/app/configs/ckan.ini\nENV PIP_NO_PYTHON_VERSION_WARNING=1 PYTHONDONTWRITEBYTECODE=1 PYTHONBREAKPOINT=\"ipdb.set_trace\"\nENV VIRTUAL_ENV=/venv PATH=/venv/bin:$PATH\n\n# System dependencies\nRUN --mount=type=cache,target=/var/lib/apt,id=apt_list2--mount=type=cache,target=/var/cache/apt,id=apt_arch2 \\\n        apt-get update && apt-get install --no-install-recommends -y libmagic1 libpq-dev libxslt-dev \\\n                curl htop vim && rm -rf /var/lib/apt/lists/*; # plus some goodies\n\n# Get files\n\nCOPY --from=extensions /extensions /app/extensions\nCOPY --from=builder /venv /venv\n\n# # Install extensions\n# RUN --mount=type=cache,target=/root/.cache/pip/,id=pip \\\n#     pip install `for i in /app/extensions/*; do echo -e $i; done`\n#\n# Install debug/dev goodies\n# For %debug% jinja directive | for bug fix in werkzeug debug scope | for better stack traces\nRUN --mount=type=cache,target=/root/.cache/pip/,id=pip \\\n    pip install --no-cache-dir jinja2==2.11.2 Werkzeug==1.0.1 better_exceptions\n\nCOPY ckanext-basedosdados /app/ckanext-basedosdados\nRUN --mount=type=cache,target=/root/.cache/pip/,id=pip \\\n    pip install --no-cache-dir -e /app/ckanext-basedosdados\nCOPY --from=builder /app/wsgi.py /app/\nCOPY --from=builder /app/configs/who.ini /app/configs/ckan.ini /app/configs/\n"
}