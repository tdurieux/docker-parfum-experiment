{
  "startTime": 1674250190368,
  "endTime": 1674250191099,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 21,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER Chris Cannam <cannam@all-day-breakfast.com>\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    software-properties-common \\\n    build-essential \\\n    libbz2-dev \\\n    libfftw3-dev \\\n    libfishsound1-dev \\\n    libid3tag0-dev \\\n    liblo-dev \\\n    liblrdf0-dev \\\n    libmad0-dev \\\n    liboggz2-dev \\\n    libopus-dev \\\n    libopusfile-dev \\\n    libpulse-dev \\\n    libasound2-dev \\\n    libjack-dev \\\n    libsamplerate-dev \\\n    libsndfile-dev \\\n    libsord-dev \\\n    libxml2-utils \\\n    libgl1-mesa-dev \\\n    raptor2-utils \\\n    librubberband-dev \\\n    git \\\n    mercurial \\\n    curl wget unzip \\\n    mlton \\\n    python3-pip \\\n    autoconf automake libtool lintian && rm -rf /var/lib/apt/lists/*;\n\n# NB we do not install portaudio. We don't want to end up including it\n# in the bundle, because it comes with a dependency on the JACK\n# library which we don't want to bundle and can't assume people will\n# have. However, we do install JACK because the Dynamic JACK mechanism\n# should ensure we can detect, configure, and use that without\n# actually linking against it. We also have Pulse as the default I/O.\n\nRUN apt-add-repository -y ppa:beineri/opt-qt-5.15.2-bionic\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    qt515base \\\n    qt515svg && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN git config --global http.postBuffer 4M\n\nRUN git clone https://github.com/sandstorm-io/capnproto\nWORKDIR capnproto\nRUN git checkout v0.6.1\nWORKDIR c++\nRUN autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j3 && make install\n\nWORKDIR /root\nRUN pip3 install --no-cache-dir meson\n\nRUN wget https://github.com/ninja-build/ninja/releases/download/v1.10.2/ninja-linux.zip\nRUN unzip ninja-linux.zip\nRUN ln -s $(pwd)/ninja /usr/bin/ninja\n\nCOPY id_rsa_build .ssh/id_rsa_build\nCOPY known_hosts .ssh/known_hosts\nRUN chmod 600 .ssh/id_rsa_build .ssh/known_hosts\nRUN echo '{\"accounts\": {\"sourcehut\": \"~breakfastquay\"}}' > .repoint.json\nRUN ( echo '[ui]' ; echo 'ssh = ssh -i /root/.ssh/id_rsa_build' ) > .hgrc\n\n# The explicit revision number here is to make sure the following git\n# clone is not cached from a different revision\nRUN echo Cloning revision [[REVISION]]\n\nRUN git clone https://github.com/sonic-visualiser/sonic-visualiser\nWORKDIR sonic-visualiser\nRUN git checkout [[REVISION]]\n\nENV QTDIR /opt/qt515\nENV PATH /opt/qt515/bin:$PATH\nENV LD_LIBRARY_PATH /opt/qt515/lib/x86_64-linux-gnu:/opt/qt515/lib:$LD_LIBRARY_PATH\nRUN cat /opt/qt515/bin/qt515-env.sh\n\nRUN ./repoint install\nRUN meson build --buildtype release\nRUN ninja -C build\n\nRUN deploy/linux/deploy-appimage.sh\nRUN tar cvf output-appimage.tar *.AppImage && cp output-appimage.tar /tmp/\n"
}