{
  "startTime": 1674251901658,
  "endTime": 1674251902658,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Chris Cannam <cannam@all-day-breakfast.com>\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    software-properties-common \\\n    build-essential \\\n    libbz2-dev \\\n    libfftw3-dev \\\n    libfishsound1-dev \\\n    libid3tag0-dev \\\n    liblo-dev \\\n    liblrdf0-dev \\\n    libmad0-dev \\\n    liboggz2-dev \\\n    libopus-dev \\\n    libopusfile-dev \\\n    libpulse-dev \\\n    libasound2-dev \\\n    libjack-dev \\\n    libsamplerate-dev \\\n    libsndfile-dev \\\n    libsord-dev \\\n    libxml2-utils \\\n    libgl1-mesa-dev \\\n    raptor-utils \\\n    librubberband-dev \\\n    yajl-tools \\\n    git \\\n    mercurial \\\n    curl wget \\\n    mlton \\\n    autoconf automake libtool lintian && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-add-repository -y ppa:beineri/opt-qt-5.10.1-trusty\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    qt510base \\\n    qt510svg && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8 \nENV LANGUAGE en_US:en \nENV LC_ALL en_US.UTF-8\n\nRUN hg clone -r[[REVISION]] https://code.soundsoftware.ac.uk/hg/sonic-annotator\nRUN hg clone https://code.soundsoftware.ac.uk/hg/vamp-plugin-sdk\nRUN hg clone https://code.soundsoftware.ac.uk/hg/vamp-test-plugin\n\nWORKDIR /vamp-plugin-sdk\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-programs\nRUN make plugins\n\nWORKDIR /vamp-test-plugin\nRUN make -f Makefile.linux\n\nENV VAMP_PATH /vamp-plugin-sdk/examples:/vamp-test-plugin\n\nRUN git config --global http.postBuffer 4M\n\nWORKDIR /root\n\nCOPY id_rsa_build .ssh/id_rsa_build\nCOPY known_hosts .ssh/known_hosts\nRUN chmod 600 .ssh/id_rsa_build .ssh/known_hosts\nRUN echo '{\"accounts\": {\"sourcehut\": \"~breakfastquay\"}}' > .repoint.json\nRUN ( echo '[ui]' ; echo 'ssh = ssh -i /root/.ssh/id_rsa_build' ) > .hgrc\n\nWORKDIR /sonic-annotator\nENV QTDIR /opt/qt510\nENV PATH /opt/qt510/bin:$PATH\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make -j3\n\nRUN deploy/linux/deploy-appimage.sh\nRUN tar cvf output-appimage.tar sonic-annotator *.AppImage && cp output-appimage.tar ..\n"
}