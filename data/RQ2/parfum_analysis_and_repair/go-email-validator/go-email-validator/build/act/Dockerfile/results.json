{
  "startTime": 1674255700803,
  "endTime": 1674255701632,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:current-buster-slim\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential git curl ca-certificates openssl && rm -rf /var/lib/apt/lists/*;\n\nARG cert_location=/usr/local/share/ca-certificates\n\n# Get certificate from \"github.com\"\nRUN openssl s_client -showcerts -connect github.com:443 </dev/null 2>/dev/null|openssl x509 -outform PEM > ${cert_location}/github.crt\n# Get certificate from \"proxy.golang.org\"\nRUN openssl s_client -showcerts -connect proxy.golang.org:443 </dev/null 2>/dev/null|openssl x509 -outform PEM >  ${cert_location}/proxy.golang.crt\n# Update certificates\nRUN update-ca-certificates\n\nRUN curl -f https://download.docker.com/linux/static/stable/x86_64/docker-20.10.1.tgz --output docker.tar.gz\nRUN tar xzvf docker.tar.gz && rm docker.tar.gz\nRUN cp docker/* /usr/bin/\nRUN dockerd &"
}