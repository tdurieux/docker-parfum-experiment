{
  "startTime": 1674251915918,
  "endTime": 1674251917019,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 6,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 70,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Etherpad Lite Dockerfile\n#\n# https://github.com/ether/etherpad-lite\n#\n# Author: muxator\n\nFROM node:lts-slim\nLABEL maintainer=\"Etherpad team, https://github.com/ether/etherpad-lite\"\n\nARG TIMEZONE=\nRUN \\\n  [ -z \"${TIMEZONE}\" ] || { \\\n    ln -sf /usr/share/zoneinfo/\"${TIMEZONE#/usr/share/zoneinfo/}\" /etc/localtime; \\\n    dpkg-reconfigure -f noninteractive tzdata; \\\n  }\n\n# plugins to install while building the container. By default no plugins are\n# installed.\n# If given a value, it has to be a space-separated, quoted list of plugin names.\n#\n# EXAMPLE:\n#   ETHERPAD_PLUGINS=\"ep_codepad ep_author_neat\"\nARG ETHERPAD_PLUGINS=\n\n# Control whether abiword will be installed, enabling exports to DOC/PDF/ODT formats.\n# By default, it is not installed.\n# If given any value, abiword will be installed.\n#\n# EXAMPLE:\n#   INSTALL_ABIWORD=true\nARG INSTALL_ABIWORD=\n\n# Control whether libreoffice will be installed, enabling exports to DOC/PDF/ODT formats.\n# By default, it is not installed.\n# If given any value, libreoffice will be installed.\n#\n# EXAMPLE:\n#   INSTALL_LIBREOFFICE=true\nARG INSTALL_SOFFICE=\n\n# By default, Etherpad container is built and run in \"production\" mode. This is\n# leaner (development dependencies are not installed) and runs faster (among\n# other things, assets are minified & compressed).\nENV NODE_ENV=production\n\n# Follow the principle of least privilege: run as unprivileged user.\n#\n# Running as non-root enables running this image in platforms like OpenShift\n# that do not allow images running as root.\n#\n# If any of the following args are set to the empty string, default\n# values will be chosen.\nARG EP_HOME=\nARG EP_UID=5001\nARG EP_GID=0\nARG EP_SHELL=\nRUN groupadd --system ${EP_GID:+--gid \"${EP_GID}\" --non-unique} etherpad && \\\n    useradd --system ${EP_UID:+--uid \"${EP_UID}\" --non-unique} --gid etherpad \\\n        ${EP_HOME:+--home-dir \"${EP_HOME}\"} --create-home \\\n        ${EP_SHELL:+--shell \"${EP_SHELL}\"} etherpad\n\nARG EP_DIR=/opt/etherpad-lite\nRUN mkdir -p \"${EP_DIR}\" && chown etherpad:etherpad \"${EP_DIR}\"\n\n# the mkdir is needed for configuration of openjdk-11-jre-headless, see\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN export DEBIAN_FRONTEND=noninteractive; \\\n    mkdir -p /usr/share/man/man1 && \\\n    apt-get -qq update && \\\n    apt-get -qq dist-upgrade && \\\n    apt-get -qq -y --no-install-recommends install \\\n        ca-certificates \\\n        git \\\n        ${INSTALL_ABIWORD:+abiword} \\\n        ${INSTALL_SOFFICE:+libreoffice} \\\n        && \\\n    apt-get -qq clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nUSER etherpad\n\nWORKDIR \"${EP_DIR}\"\n\nCOPY --chown=etherpad:etherpad ./ ./\n\n# Plugins must be installed before installing Etherpad's dependencies, otherwise\n# npm will try to hoist common dependencies by removing them from\n# src/node_modules and installing them in the top-level node_modules. As of\n# v6.14.10, npm's hoist logic appears to be buggy, because it sometimes removes\n# dependencies from src/node_modules but fails to add them to the top-level\n# node_modules. Even if npm correctly hoists the dependencies, the hoisting\n# seems to confuse tools such as `npm outdated`, `npm update`, and some ESLint\n# rules.\nRUN { [ -z \"${ETHERPAD_PLUGINS}\" ] || \\\n      npm install --no-save --legacy-peer-deps ${ETHERPAD_PLUGINS}; } && \\\n    src/bin/installDeps.sh && \\\n    rm -rf ~/.npm && npm cache clean --force;\n\n# Copy the configuration file.\nCOPY --chown=etherpad:etherpad ./settings.json.docker \"${EP_DIR}\"/settings.json\n\n# Fix group permissions\nRUN chmod -R g=u .\n\nUSER root\nRUN cd src && npm link\nUSER etherpad\n\nHEALTHCHECK --interval=20s --timeout=3s CMD [\"etherpad-healthcheck\"]\n\nEXPOSE 9001\nCMD [\"etherpad\"]\n"
}