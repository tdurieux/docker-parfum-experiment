{
  "startTime": 1674249532491,
  "endTime": 1674249533503,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 9,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# make sure sudo is installed to be able to give user sudo access in docker\nRUN if ! command -v sudo >/dev/null; then \\\n      apt-get update \\\n      && apt-get install --no-install-recommends -y sudo \\\n      && apt-get clean; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n@[if name != 'root']@\nRUN existing_user_by_uid=`getent passwd \"@(uid)\" | cut -f1 -d: || true` && \\\n    if [ -n \"${existing_user_by_uid}\" ]; then userdel @('' if user_preserve_home else '-r') \"${existing_user_by_uid}\"; fi && \\\n    existing_user_by_name=`getent passwd \"@(name)\" | cut -f1 -d: || true` && \\\n    existing_user_uid=`getent passwd \"@(name)\" | cut -f3 -d: || true` && \\\n    if [ -n \"${existing_user_by_name}\" ]; then find / -uid ${existing_user_uid} -exec chown -h @(uid) {} + || true ; find / -gid ${existing_user_uid} -exec chgrp -h @(uid) {} + || true ; fi && \\\n    if [ -n \"${existing_user_by_name}\" ]; then userdel @('' if user_preserve_home else '-r') \"${existing_user_by_name}\"; fi && \\\n    existing_group_by_gid=`getent group \"@(gid)\" | cut -f1 -d: || true` && \\\n    if [ -z \"${existing_group_by_gid}\" ]; then \\\n      groupadd -g \"@(gid)\" \"@name\"; \\\n    fi && \\\n    useradd --no-log-init --no-create-home --uid \"@(uid)\" -s \"@(shell)\" -c \"@(gecos)\" -g \"@(gid)\" -d \"@(dir)\" \"@(name)\" && \\\n    echo \"@(name) ALL=NOPASSWD: ALL\" >> /etc/sudoers.d/rocker\n\n@[if not home_extension_active ]@\n# Making sure a home directory exists if we haven't mounted the user's home directory explicitly\nRUN mkdir -p \"$(dirname \"@(dir)\")\" && mkhomedir_helper @(name)\n@[end if]@\n# Commands below run as the developer user\nUSER @(name)\nWORKDIR @(dir)\n@[else]@\n# Detected user is root, which already exists so not creating new user.\n@[end if]@\n"
}