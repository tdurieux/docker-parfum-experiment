{
  "startTime": 1674217335564,
  "endTime": 1674217336243,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 13,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker image for developing and testing Veracruz on AWS Nitro Enclaves\n#\n# AUTHORS\n#\n# The Veracruz Development Team.\n#\n# COPYRIGHT\n#\n# See the `LICENSE.markdown` file in the Veracruz root directory for licensing\n# and copyright information.\n#\n# NOTE: We try to follow the guide in https://docs.docker.com/develop/develop-images/dockerfile_best-practices/\n#       Each RUN contains a bundle of steps, which reduces the cache.\n\nARG VERSION=\"latest\"\n\nFROM veracruz/base:${VERSION}\nENV DEBIAN_FRONTEND noninteractive\n\nARG ARCH=x86_64\nARG NE_GID=\"\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        ca-certificates \\\n        lsb-release \\\n        lxc \\\n        musl-tools && \\\n    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \\\n        sudo gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \\\n    arch=$(dpkg --print-architecture) && \\\n    dist=$(lsb_release -cs) && \\\n    echo \"deb [arch=$arch signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu impish stable\" | \\\n        sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \\\n    apt-get update && apt-get install --no-install-recommends -y docker-ce-cli && \\\n    apt-get autoremove -y && apt-get clean && \\\n    rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*\n\nCOPY aws-nitro-enclaves-cli/build/nitro_cli/${ARCH}-unknown-linux-musl/release/nitro-cli /usr/bin/\n\nRUN pip install --no-cache-dir awscli\n\nRUN wget https://github.com/openssl/openssl/archive/refs/tags/openssl-3.0.1.tar.gz && \\\n    tar zxvf openssl-3.0.1.tar.gz &&\\\n    cd openssl-openssl-3.0.1 && \\\n    CC=\"musl-gcc -fPIE -pie -static -idirafter /usr/include/ -idirafter /usr/include/${ARCH}-linux-gnu/\" \\\n        ./Configure no-shared no-async -DOPENSSL_NO_SECURE_MEMORY \\\n        --prefix=/work/veracruz-nitro-root-enclave/musl \\\n        --openssldir=/work/veracruz/nitro-root-enclave/musl/ssl linux-${ARCH} && \\\n    make -j $(nproc) && \\\n    make install_sw install_ssldirs && \\\n    cd .. && \\\n    rm -rf openssl-openssl-3.0.1 openssl-3.0.1.tar.gz\n\nENV \\\n    AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_LIB_DIR=/work/veracruz-nitro-root-enclave/musl/lib64 \\\n    X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_LIB_DIR=/work/veracruz-nitro-root-enclave/musl/lib64 \\\n    AARCH64_UNKNOWN_LINUX_MUSL_OPENSSL_INCLUDE_DIR=/work/veracruz-nitro-root-enclave/musl/include \\\n    X86_64_UNKNOWN_LINUX_MUSL_OPENSSL_INCLUDE_DIR=/work/veracruz-nitro-root-enclave/musl/include\n\nRUN mkdir -p /var/log/nitro_enclaves ; \\\n    touch /var/log/nitro_enclaves/nitro_enclaves.log ; \\\n    chmod -R a+rw /var/log/nitro_enclaves ; \\\n    chmod a+x /var/log/nitro_enclaves ; \\\n    mkdir -p /usr/share/nitro_enclaves/blobs/\nCOPY aws-nitro-enclaves-cli/blobs/${ARCH}/* /usr/share/nitro_enclaves/blobs\n\nRUN NE_GID=${NE_GID} ; \\\n    if [ -z \"$NE_GID\" ] ; then \\\n        echo \"No ne group found. Non-root users will be able to build, but not run nitro tests\" ; \\\n    else \\\n        groupadd -g ${NE_GID} ne ; \\\n    fi\n\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-${ARCH}.zip\" -o \"awscliv2.zip\" \\\n\t&& unzip awscliv2.zip \\\n\t&& ./aws/install \\\n    && rm -rf awscliv2.zip aws\n\n"
}