{
  "startTime": 1674250243878,
  "endTime": 1674250244737,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 233
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 233
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 233
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 257
      }
    }
  ],
  "repairedDockerfile": "# Get the base Ubuntu image from Docker Hub\nFROM ubuntu:latest\nLABEL maintainer=\"jiewang@cs.ucla.edu\"\nENV DEBIAN_FRONTEND=noninteractive\n\n# Update apps on the base image\nRUN apt-get -y update && apt-get install -y\n\n# Install the prerequisites\nRUN apt-get -y --no-install-recommends install apt-utils automake autoconf libtool libtool-bin pkg-config libgmp3-dev libyaml-dev python3.6 python3-pip git wget cmake vim gdb && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends install libllvm-9-ocaml-dev libllvm9 llvm-9 llvm-9-dev llvm-9-doc llvm-9-examples llvm-9-runtime clang-9 clang-tools-9 clang-9-doc libclang-common-9-dev libclang-9-dev libclang1-9 clang-format-9 python-clang-9 clangd-9 && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/llvm-config-9 /usr/bin/llvm-config\n\n# Install NTL for barvinok\nRUN mkdir /ntl\nWORKDIR /ntl\nRUN wget https://www.shoup.net/ntl/ntl-11.4.3.tar.gz\nRUN gunzip ntl-11.4.3.tar.gz\nRUN tar xf ntl-11.4.3.tar && rm ntl-11.4.3.tar\nWORKDIR /ntl/ntl-11.4.3/src\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" NTL_GMP_LIP=on\nRUN make -j4\nRUN make install\n\n# Copy the current folder to the Docker image\nCOPY . /usr/src/docker_autosa\n\n# Specify the working directory\nWORKDIR /usr/src/docker_autosa\n\n# Install AutoSA\nRUN ./install.sh\n"
}