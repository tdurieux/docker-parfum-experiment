{
  "startTime": 1674218167148,
  "endTime": 1674218167851,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE=nvidia/cuda:10.2-devel\nFROM $BASE\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        bc \\\n        wget \\\n        ccache \\\n        ninja-build \\\n        python3 \\\n        git \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN KEYDUMP_URL=https://cloud.cees.ornl.gov/download && \\\n    KEYDUMP_FILE=keydump && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE} && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE}.sig && \\\n    gpg --batch --import ${KEYDUMP_FILE} && \\\n    gpg --batch --verify ${KEYDUMP_FILE}.sig ${KEYDUMP_FILE} && \\\n    rm ${KEYDUMP_FILE}*\n\nARG CMAKE_VERSION=3.18.5\nENV CMAKE_DIR=/opt/cmake\nRUN CMAKE_URL=https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION} && \\\n    CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \\\n    CMAKE_SHA256=cmake-${CMAKE_VERSION}-SHA-256.txt && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256} && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256}.asc && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SCRIPT} && \\\n    gpg --batch --verify ${CMAKE_SHA256}.asc ${CMAKE_SHA256} && \\\n    grep ${CMAKE_SCRIPT} ${CMAKE_SHA256} | sha256sum --check && \\\n    mkdir -p ${CMAKE_DIR} && \\\n    sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} && \\\n    rm cmake*\nENV PATH=${CMAKE_DIR}/bin:$PATH\n\nENV SYCL_DIR=/opt/sycl\nRUN SYCL_VERSION=2021-09 && \\\n    SYCL_URL=https://github.com/intel/llvm/archive && \\\n    SYCL_ARCHIVE=${SYCL_VERSION}.tar.gz && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${SYCL_URL}/${SYCL_ARCHIVE} && \\\n    mkdir llvm && \\\n    tar -xf ${SYCL_ARCHIVE} -C llvm --strip-components=1 && \\\n    cd llvm && \\\n    python3 buildbot/configure.py --cuda && \\\n    python3 buildbot/compile.py && \\\n    mkdir -p ${SYCL_DIR} && \\\n    mv ${SCRATCH_DIR}/llvm/build/install/* ${SYCL_DIR} && \\\n    echo \"${SYCL_DIR}/lib\" > /etc/ld.so.conf.d/sycl.conf && ldconfig && \\\n    rm -rf ${SCRATCH_DIR}\nENV PATH=${SYCL_DIR}/bin:$PATH\n"
}