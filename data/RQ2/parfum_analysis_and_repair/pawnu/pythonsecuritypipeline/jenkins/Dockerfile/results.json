{
  "startTime": 1674215510633,
  "endTime": 1674215511876,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM jenkins/jenkins:lts\nMAINTAINER pawan uppadey <pawan.uppadey@gmail.com>\n\n#Install Jenkins plugin to make this pipeline work\nCOPY plugins.txt /usr/share/jenkins/ref/plugins.txt\nRUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt\n\n#Copy script to auto create user to jenkins init folder\nCOPY setupJenkins.groovy /usr/share/jenkins/ref/init.groovy.d/\n\n#setup the docker container for scanners\nUSER root\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tpython-pip \\\n\tcurl \\\n\tmaven \\\n\tgit \\\n\tperl \\\n\twget \\\n\tkbtin \\\n\tlibnet-ssleay-perl \\\n\tsoftware-properties-common && rm -rf /var/lib/apt/lists/*;\n\n#add public key for the multiverse repo which has nikto\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32\nRUN add-apt-repository 'deb http://archive.ubuntu.com/ubuntu bionic multiverse'\nRUN add-apt-repository 'deb http://archive.ubuntu.com/ubuntu bionic-security multiverse'\nRUN add-apt-repository 'deb http://archive.ubuntu.com/ubuntu bionic-updates multiverse'\n\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y nikto && rm -rf /var/lib/apt/lists/*;\n\n#Install virtualenv to isolate each project dependencies\nRUN pip install --no-cache-dir virtualenv\n#Install python SCA tool/dependency checker, license check\nRUN pip install --no-cache-dir safety\nRUN pip install --no-cache-dir liccheck\n#Install the git history checker for secrets\nRUN pip install --no-cache-dir trufflehog\n#Install python SAST tool\nRUN pip install --no-cache-dir bandit\n\n# Used for authenticated DAST scan\nRUN pip install --no-cache-dir selenium\n\n#install the orchestration tool, boto for ec2 module, some lib upgrade under requests\nRUN pip install --no-cache-dir ansible\nRUN pip install --no-cache-dir boto\nRUN pip install --no-cache-dir boto3\n\n# configure ansible to use right keys and not check host auth for this ephemeral/temp aws host\n# Not authenticating existing/long-term hosts requiring relogins may lead to mitm.. be careful\nCOPY ansible.cfg /etc/ansible/ansible.cfg\n\n# drop back to the regular jenkins user - good practice\nUSER jenkins\n"
}