{
  "startTime": 1674250459015,
  "endTime": 1674250460123,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 39,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM arm64v8/ubuntu:bionic AS build\n#\n\n# TotalCross\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        cmake \\\n        ninja-build \\\n        build-essential \\\n        libfontconfig1-dev \\\n# SDL2 \n        libtool \\\n        libasound2-dev \\\n        libpulse-dev \\\n        libaudio-dev \\\n        libx11-dev \\\n        libxext-dev \\\n        libxrandr-dev \\\n        libxcursor-dev \\\n        libxi-dev \\\n        libxinerama-dev \\\n        libxxf86vm-dev \\\n        libxss-dev \\\n        libgl1-mesa-dev \\\n# Lastly available on Xenial, deprecated for Bionic\n#       libesd0-dev \\\n        libdbus-1-dev \\\n        libudev-dev \\\n        libgles2-mesa-dev \\\n        libegl1-mesa-dev \\\n        libibus-1.0-dev \\\n        fcitx-libs-dev \\\n        libsamplerate0-dev \\\n        libsndio-dev \\\n# Wayland\n        libwayland-dev \\\n        libxkbcommon-dev \\\n        wayland-protocols \\\n        git \\\n        ca-certificates; rm -rf /var/lib/apt/lists/*; \\\n    apt-get install --no-install-recommends -y libglvnd-dev || apt-get -f -y install; \\\n    apt-get clean\n\nRUN git clone https://github.com/SDL-mirror/SDL.git \\\n        --branch=release-2.0.10 \\\n        --single-branch \\\n        --depth=1 \\\n    && cd SDL \\\n    && mkdir build; cd build \\\n    && CFLAGS=\"-O3 -fPIC\" \\\n    cmake ../ -G Ninja \\\n        -DSDL_SHARED=0 \\\n        -DSDL_AUDIO=0 \\\n        -DVIDEO_VIVANTE=ON \\\n        -DVIDEO_WAYLAND=ON \\ \n        -DWAYLAND_SHARED=ON; \\\n    ninja install\n\n# clean up\nRUN rm -r /SDL \n\nENV BUILD_FOLDER /build\n\nWORKDIR ${BUILD_FOLDER}\n\n# utilize o diretorio TotalCrossVM como diretorio de contexto de build para o Docker\nCOPY . /sources\n\nRUN cmake /sources -DPNG_ARM_NEON_OPT=0 -G Ninja && ninja\n\nCMD [\"/bin/bash\", \"-c\", \"make\", \"-j$(($(nproc) + 2))\", \"-f\", \"${BUILD_FOLDER}/Makefile\"]\n# CMD [\"make\", \"clean\"]\n\nFROM scratch AS export\nCOPY --from=build /build /"
}