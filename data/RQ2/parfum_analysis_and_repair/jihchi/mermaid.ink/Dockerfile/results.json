{
  "startTime": 1674249752573,
  "endTime": 1674249753278,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 64
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# based on: https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-in-docker\nFROM docker.io/library/node:17-buster-slim\nLABEL maintainer=\"Jihchi Lee <achi@987.tw>\"\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nRUN apt-get update \\\n  && apt-get -yq upgrade \\\n  && apt-get install --no-install-recommends -y curl gnupg \\\n  && curl -f -sSL https://dl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n  && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n  && sed -i -e's/ main/ main contrib non-free/g' /etc/apt/sources.list \\\n  && apt-get update \\\n  && apt-get install -y \\\n    google-chrome-stable \\\n    fonts-ipafont-gothic \\\n    fonts-wqy-zenhei \\\n    fonts-thai-tlwg \\\n    fonts-kacst \\\n    fonts-freefont-ttf \\\n    ttf-mscorefonts-installer \\\n    fonts-noto-cjk \\\n    fonts-noto-color-emoji \\\n    fonts-font-awesome \\\n    libxss1 \\\n    fontconfig \\\n    --no-install-recommends \\\n  && fc-cache -f -v \\\n  && apt-get autoremove -y \\\n  && apt-get autoclean \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && rm -rf /src/*.deb\n\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n\n# node application onbuild\nCOPY package.json yarn.lock /usr/src/app/\nRUN yarn --production=true && yarn cache clean --force\nCOPY . /usr/src/app\n\n# Add user so we don't need --no-sandbox.\n# same layer as npm install to keep re-chowned files from using up several hundred MBs more space\nRUN usermod -a -G audio,video node \\\n\t&& mkdir -p /home/node/Downloads \\\n\t&& chown -R node:node /home/node /usr/src/app/\n\nUSER node\nCMD [\"yarn\", \"start\"]\n\nEXPOSE 3000\n"
}