{
  "startTime": 1674216142391,
  "endTime": 1674216143322,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 26,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 26,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "# this image is tagged and pushed to the production registry (such as ECR)\nFROM python:3.8 as production\nENV PYTHONUNBUFFERED 1\nENV PYTHONDONTWRITEBYTECODE 1\nRUN mkdir /code\nWORKDIR /code\nCOPY backend/requirements/base.txt /code/requirements/\nRUN python3 -m pip install --upgrade pip\nRUN pip install --no-cache-dir -r requirements/base.txt\nCOPY backend/scripts/prod/start_prod.sh \\\n    backend/scripts/dev/start_ci.sh \\\n    backend/scripts/dev/start_asgi.sh \\\n    /\nADD backend/ /code/\n\n# build stage that generates quasar assets\nFROM node:10-alpine as build-stage\nENV FULL_DOMAIN_NAME localhost:9000\nWORKDIR /app/\nCOPY quasar/package.json /app/\nRUN npm cache verify\nRUN npm install -g @quasar/cli && npm cache clean --force;\nRUN npm install --progress=false && npm cache clean --force;\nCOPY quasar /app/\nRUN quasar build -m pwa\n\n# this stage is used for integration testing\nFROM production as gitlab-ci\n# update and install nodejs\nCOPY --from=build-stage /app/dist/pwa/index.html /code/templates/\nCOPY --from=build-stage /app/dist/pwa /static\n\nCOPY cypress.json /code\n\nRUN mkdir /code/cypress\nCOPY cypress/ /code/cypress/\n\nRUN apt-get -qq update && apt-get -y --no-install-recommends install nodejs npm && rm -rf /var/lib/apt/lists/*;\nRUN node -v\nRUN npm -v\n\n# cypress dependencies\nRUN apt-get -qq --no-install-recommends install -y xvfb \\\n    libgtk-3-dev \\\n    libnotify-dev \\\n    libgconf-2-4 \\\n    libnss3 \\\n    libxss1 \\\n    libasound2 && rm -rf /var/lib/apt/lists/*;\n"
}