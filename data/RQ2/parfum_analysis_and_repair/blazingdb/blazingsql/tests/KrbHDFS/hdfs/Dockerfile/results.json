{
  "startTime": 1674254125438,
  "endTime": 1674254126916,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedDockerfile": "ARG UBUNTU_VERSION=16.04\n\nFROM ubuntu:${UBUNTU_VERSION}\nLABEL Description=\"blazingsql/hdfs-testing\"\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN cat /etc/os-release\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y openssh-server openssh-client rsync vim rsyslog unzip libselinux1 && rm -rf /var/lib/apt/lists/*;\n\nRUN echo 'alias ll=\"ls -alFh\"' >> /root/.bashrc\n\n# passwordless ssh\n# # RUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\n# # RUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n# Kerberos client\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y krb5-user libpam-krb5 libpam-ccreds auth-client-config && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /var/log/kerberos\nRUN touch /var/log/kerberos/kadmind.log\n\n# hadoop\n# download/copy hadoop. Choose one of these options\nENV HADOOP_PREFIX /usr/local/hadoop\nRUN wget https://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3.tar.gz\nRUN tar -xf hadoop-2.7.3.tar.gz -C /usr/local/ && rm hadoop-2.7.3.tar.gz\nRUN cd /usr/local \\\n    && ln -s ./hadoop-2.7.3 hadoop \\\n    && chown root:root -R hadoop/\n\nENV HADOOP_COMMON_HOME $HADOOP_PREFIX\nENV HADOOP_HDFS_HOME $HADOOP_PREFIX\nENV HADOOP_MAPRED_HOME $HADOOP_PREFIX\nENV HADOOP_YARN_HOME $HADOOP_PREFIX\nENV HADOOP_CONF_DIR $HADOOP_PREFIX/etc/hadoop\nENV YARN_CONF_DIR $HADOOP_PREFIX/etc/hadoop\nENV NM_CONTAINER_EXECUTOR_PATH $HADOOP_PREFIX/bin/container-executor\nENV HADOOP_BIN_HOME $HADOOP_PREFIX/bin\nENV PATH $PATH:$HADOOP_BIN_HOME\n\nENV KRB_REALM EXAMPLE.COM\nENV DOMAIN_REALM example.com\nENV KERBEROS_ADMIN admin/admin\nENV KERBEROS_ADMIN_PASSWORD admin\nENV KERBEROS_ROOT_USER_PASSWORD password\nENV KEYTAB_DIR /etc/security/keytabs\nENV FQDN hadoop.com\n\nRUN mkdir -p $HADOOP_PREFIX/input\n\n# fetch hadoop source code to build some binaries natively\n# for this, protobuf is needed\n\nRUN apt-get install --no-install-recommends -y autoconf pkg-config make automake cmake g++-5 openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.gz\nRUN tar -xf protobuf-2.5.0.tar.gz -C /tmp/ && rm protobuf-2.5.0.tar.gz\nRUN cd /tmp/protobuf-2.5.0 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install\nENV HADOOP_PROTOC_PATH /usr/local/bin/protoc\n\nRUN wget https://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3-src.tar.gz\nRUN tar -xf hadoop-2.7.3-src.tar.gz -C /tmp && rm hadoop-2.7.3-src.tar.gz\n\nRUN wget https://www-us.apache.org/dist/maven/maven-3/3.6.2/binaries/apache-maven-3.6.2-bin.tar.gz\nRUN tar -xf apache-maven-3.6.2-bin.tar.gz -C /usr/local && rm apache-maven-3.6.2-bin.tar.gz\nRUN cd /usr/local && ln -s ./apache-maven-3.6.2/ maven\nENV PATH $PATH:/usr/local/maven/bin\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:/usr/local/lib\n\nADD ./setting.xml /usr/local/maven/conf\n\n# Hive\nRUN wget https://www.apache.org/dist/hive/hive-1.2.2/apache-hive-1.2.2-bin.tar.gz\nRUN tar -xf apache-hive-1.2.2-bin.tar.gz && rm apache-hive-1.2.2-bin.tar.gz\nRUN mv apache-hive-1.2.2-bin /usr/lib/hive\n# RUN chown -R hadoop:hadoop /usr/lib/hive\nENV HIVE_HOME /usr/lib/hive\nENV PATH $PATH:$HIVE_HOME/bin\n\n# build native hadoop-common libs to remove warnings because of 64 bit OS\n\nRUN rm -rf $HADOOP_PREFIX/lib/native\nWORKDIR /tmp/hadoop-2.7.3-src/hadoop-common-project/hadoop-common\nRUN mvn dependency:go-offline\nRUN ln -sf bash /bin/sh\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\nRUN apt-get install -y --no-install-recommends libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN bash && mvn compile -Pnative\nRUN cp target/native/target/usr/local/lib/libhadoop.a $HADOOP_PREFIX/lib/native\nRUN cp target/native/target/usr/local/lib/libhadoop.so.1.0.0 $HADOOP_PREFIX/lib/native\n\n# build container-executor binary\nWORKDIR /tmp/hadoop-2.7.3-src/hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager\nRUN mvn dependency:go-offline\nRUN bash && mvn compile -Pnative\nRUN cp target/native/target/usr/local/bin/container-executor $HADOOP_PREFIX/bin/\nRUN chmod 6050 $HADOOP_PREFIX/bin/container-executor\n\nADD config_files/ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n\n# workingaround docker.io build error\nRUN ls -la $HADOOP_PREFIX/etc/hadoop/*-env.sh\nRUN chmod +x $HADOOP_PREFIX/etc/hadoop/*-env.sh\nRUN ls -la $HADOOP_PREFIX/etc/hadoop/*-env.sh\n\n# fix the 254 error code\nRUN sed  -i \"/^[^#]*UsePAM/ s/.*/#&/\"  /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\n\nRUN cp $HADOOP_PREFIX/etc/hadoop/*.xml $HADOOP_PREFIX/input\n\nRUN mkdir -p /usr/java/\nWORKDIR /usr/java/\nRUN ln -fs $JAVA_HOME default\nENV JAVA $JAVA_HOME/bin/java\nRUN chmod +x $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\n\nVOLUME /tmp\n\nADD config_files/hadoop-env.sh $HADOOP_PREFIX/etc/hadoop/hadoop-env.sh\nADD config_files/core-site.xml $HADOOP_PREFIX/etc/hadoop/core-site.xml\nADD config_files/hdfs-site.xml $HADOOP_PREFIX/etc/hadoop/hdfs-site.xml\nADD config_files/mapred-site.xml $HADOOP_PREFIX/etc/hadoop/mapred-site.xml\nADD config_files/yarn-site.xml $HADOOP_PREFIX/etc/hadoop/yarn-site.xml\nADD config_files/container-executor.cfg $HADOOP_PREFIX/etc/hadoop/container-executor.cfg\nRUN mkdir $HADOOP_PREFIX/nm-local-dirs \\\n    && mkdir $HADOOP_PREFIX/nm-log-dirs\nADD config_files/ssl-server.xml $HADOOP_PREFIX/etc/hadoop/ssl-server.xml\nADD config_files/ssl-client.xml $HADOOP_PREFIX/etc/hadoop/ssl-client.xml\nADD config_files/keystore.jks $HADOOP_PREFIX/lib/keystore.jks\n\nENV BOOTSTRAP /etc/bootstrap.sh\nADD bootstrap.sh $BOOTSTRAP\nRUN chown root:root $BOOTSTRAP\nRUN chmod 700 $BOOTSTRAP\n\nADD config_files/krb5.conf /root/krb5.conf\n\nADD create_dir_from_info.sh /root/create_dir_from_info.sh\nRUN chmod +x /root/create_dir_from_info.sh\n\nADD load_swap_dir.sh /root/load_swap_dir.sh\nRUN chmod +x /root/load_swap_dir.sh\n\nADD create_hive_warehouse.sh /root/create_hive_warehouse.sh\nRUN chmod +x /root/create_hive_warehouse.sh\n\n# Pass the generated krb5.conf to the host\nRUN mkdir -p /conf_dir\nVOLUME /conf_dir\n\nWORKDIR /\n\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n\n# Hdfs ports\nEXPOSE 50010 50020 50070 50075 50090 8020 9000\n# Mapred ports\nEXPOSE 10020 19888\n#Yarn ports\nEXPOSE 8030 8031 8032 8033 8040 8042 8088\n#Other ports\nEXPOSE 49707 2122\n# Hive port\nEXPOSE 10000"
}