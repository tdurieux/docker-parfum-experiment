diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blazingdb/blazingsql/powerpc/developer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blazingdb/blazingsql/powerpc/developer/Dockerfile/repaired.Dockerfile
index 67bb6cc..50f9ca6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blazingdb/blazingsql/powerpc/developer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blazingdb/blazingsql/powerpc/developer/Dockerfile/repaired.Dockerfile
@@ -3,18 +3,18 @@ FROM nvidia/cuda:10.1-devel-centos7
 
 #COPY install-dependencies.sh /tmp/
 
-RUN yum install wget gcc gcc-c++ bzip2 make libtool openssh-devel zlib-devel -y
+RUN yum install wget gcc gcc-c++ bzip2 make libtool openssh-devel zlib-devel -y && rm -rf /var/cache/yum
 
 #RUN tmp/install-dependencies.sh
 #RUN cd /tmp
 
 #### GCC/G++ ######
-RUN wget -q http://ftp.mirrorservice.org/sites/sourceware.org/pub/gcc/releases/gcc-7.4.0/gcc-7.4.0.tar.gz
-RUN tar -xf gcc-7.4.0.tar.gz
+RUN wget -q https://ftp.mirrorservice.org/sites/sourceware.org/pub/gcc/releases/gcc-7.4.0/gcc-7.4.0.tar.gz
+RUN tar -xf gcc-7.4.0.tar.gz && rm gcc-7.4.0.tar.gz
 #RUN cd gcc-7.4.0
 WORKDIR gcc-7.4.0
 RUN ./contrib/download_prerequisites
-RUN ./configure --disable-multilib --enable-languages=c,c++ && make -j`nproc` && make install
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-multilib --enable-languages=c,c++ && make -j`nproc` && make install
 #RUN rm -rf /tmp/gcc*
 RUN update-alternatives --install /usr/bin/cc cc /usr/local/bin/gcc 999
 RUN rm -f /usr/bin/gcc
@@ -30,9 +30,9 @@ ENV CXX=/usr/local/bin/g++
 ENV CUDACXX=/usr/local/cuda/bin/nvcc
 
 #### CMAKE ####
-RUN yum install openssl-devel -y
+RUN yum install openssl-devel -y && rm -rf /var/cache/yum
 RUN wget -q https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3.tar.gz
-RUN tar -xf cmake-3.17.3.tar.gz
+RUN tar -xf cmake-3.17.3.tar.gz && rm cmake-3.17.3.tar.gz
 #RUN cd cmake-3.17.3/
 WORKDIR cmake-3.17.3/
 RUN ./bootstrap
@@ -42,48 +42,48 @@ RUN make install
 ENV CMAKE_ROOT=/usr/local/share/cmake-3.17/
 
 #### Python ######
-RUN yum install -y libffi-devel zlib zlib-devel
-RUN yum install -y bzip2-devel
-RUN yum install -y xz-devel
+RUN yum install -y libffi-devel zlib zlib-devel && rm -rf /var/cache/yum
+RUN yum install -y bzip2-devel && rm -rf /var/cache/yum
+RUN yum install -y xz-devel && rm -rf /var/cache/yum
 RUN wget -q https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz
-RUN tar -xf Python-3.7.7.tgz
-RUN cd Python-3.7.7/ && ./configure --enable-optimizations --enable-shared && make altinstall
+RUN tar -xf Python-3.7.7.tgz && rm Python-3.7.7.tgz
+RUN cd Python-3.7.7/ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations --enable-shared && make altinstall
 RUN update-alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.7 999
 
 WORKDIR /app
 
 # TODO percy mario install more utils
-RUN yum install git nano -y
+RUN yum install git nano -y && rm -rf /var/cache/yum
 
 # Dependency for boost
-RUN yum install which -y
+RUN yum install which -y && rm -rf /var/cache/yum
 
 # Dependency for scikit-learn
-RUN yum install epel-release -y
-RUN yum install -y openblas-devel
+RUN yum install epel-release -y && rm -rf /var/cache/yum
+RUN yum install -y openblas-devel && rm -rf /var/cache/yum
 
 # LLVM
-RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
-RUN yum install -y texinfo
+RUN yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum
+RUN yum install -y texinfo && rm -rf /var/cache/yum
 #ENV LLVM_CONFIG=/usr/bin/llvm-config-9.0-64
 
 # Python packages
-RUN yum install -y libjpeg-devel freetype-devel
+RUN yum install -y libjpeg-devel freetype-devel && rm -rf /var/cache/yum
 RUN mkdir -p /opt/blazingsql-powerpc-prefix
 COPY requirements.txt /opt/requirements.txt
 RUN python3 -m venv /opt/blazingsql-powerpc-prefix
 RUN source /opt/blazingsql-powerpc-prefix/bin/activate && pip3.7 install -r /opt/requirements.txt
 
 # For blazingsql
-RUN yum install -y libcurl-devel
-RUN yum install -y maven
+RUN yum install -y libcurl-devel && rm -rf /var/cache/yum
+RUN yum install -y maven && rm -rf /var/cache/yum
 
 # lmod (aka system dependencies)
 COPY install-dependencies.sh /opt/install-dependencies.sh
 RUN bash /opt/install-dependencies.sh /opt/blazingsql-powerpc-prefix
 
 # Lmod
-RUN yum install -y Lmod
+RUN yum install -y Lmod && rm -rf /var/cache/yum
 RUN mkdir -p /opt/sw/
 COPY modulefiles /opt/modulefiles
 ENV MODULEPATH=/opt/modulefiles/
@@ -91,7 +91,7 @@ ENV MODULEPATH=/opt/modulefiles/
 WORKDIR /app
 
 # More utils
-RUN yum install -y tree
+RUN yum install -y tree && rm -rf /var/cache/yum
 
 RUN chmod 777 /opt
 RUN chmod 777 /opt/blazingsql-powerpc-prefix
@@ -112,4 +112,4 @@ RUN chmod 777 /opt/blazingsql-powerpc-prefix/share/man/
 RUN chmod 777 /opt/blazingsql-powerpc-prefix/share/man/man1
 
 # More deps for llvm
-RUN yum install -y patch
+RUN yum install -y patch && rm -rf /var/cache/yum