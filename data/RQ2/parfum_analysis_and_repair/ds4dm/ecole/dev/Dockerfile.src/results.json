{
  "startTime": 1674218842075,
  "endTime": 1674218842996,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Matrix built with different compilers (e.g. gcc9, clang10) and python versions.\nARG compiler=clang10\n\nFROM conanio/${compiler}\nUSER root\n\nARG CXXFLAGS=\"\"\nARG LDFLAGS=\"\"\nENV CXXFLAGS=\"$CXXFLAGS\"\nENV LDFLAGS=\"$LDFLAGS\"\n\n# Install minimal dependencies for a CircleCI image.\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends wget git openssh-client tar gzip ca-certificates && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install SCIP from source.\n# We do not need a very \"complete\" scip, just the bare minimum.\nARG scip_version=8.0.0\nRUN wget --no-verbose https://scip.zib.de/download/release/scipoptsuite-${scip_version}.tgz && \\\n    tar -xzf scipoptsuite-${scip_version}.tgz && \\\n    cmake -B build/ -S scipoptsuite-${scip_version} \\\n        -D CMAKE_BUILD_TYPE=Release \\\n        -D PARASCIP=ON \\\n        -D PAPILO=OFF \\\n        -D GCG=OFF \\\n        -D ZIMPL=OFF \\\n        -D GMP=OFF \\\n        -D IPOPT=OFF \\\n        -D BOOST=OFF && \\\n    cmake --build build && \\\n    cmake --install build && \\\n    rm -rf build/ scipoptsuite-${scip_version} scipoptsuite-${scip_version}.tgz\n\n\n# Install Python and NumPy\n# Pyenv needs a full version (e.g 3.7.10) so we search for the latest bug fix release\nARG python_version=3.7\n# This system script uses /usr/bin/python3 which get hijacked by pyenv so we hard code it to system python3.7.\n# https://askubuntu.com/q/965043\n# Does not happen on all images.\nRUN sed --in-place '1s:^#!/usr/bin/python3:#!/usr/bin/python3.7:' \"$(which lsb_release)\" || true\nRUN version_regex='^[[:blank:]]*'\"$(echo ${python_version} | sed 's/\\./\\\\./')\"'\\.[[:digit:]]+[[:blank:]]*$' && \\\n    python_version_fix=$(pyenv install --list | grep -E \"${version_regex}\" | cut -d'.' -f 3 | sort -n | tail -1) && \\\n    python_full_version=${python_version}.${python_version_fix} && \\\n    pyenv install ${python_full_version} && \\\n    pyenv global ${python_full_version} && \\\n    python -m pip install --no-cache-dir --upgrade pip && \\\n    python -m pip install --no-cache-dir cmake numpy pytest pytest-helpers-namespace pyscipopt\n\nWORKDIR /app\n"
}