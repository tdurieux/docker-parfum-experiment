{
  "startTime": 1674251886112,
  "endTime": 1674251886921,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 as stage1\n\nARG DEBIAN_FRONTEND=noninteractive\nENV PYTHONUNBUFFERED 1\n\nRUN set -xe; \\\n    apt-get -qq update && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        git-core \\\n        make \\\n        software-properties-common \\\n        gcc \\\n        python3-dev \\\n        libffi-dev \\\n        python3-pip \\\n        python3-setuptools \\\n    && apt-get autoremove -y && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* \\\n    && mkdir -p /app \\\n    && pip3 install --no-cache-dir virtualenv \\\n    && virtualenv -p python3 --prompt \"(cloudlaunch)\" /app/venv\n\n# Set working directory to /app/\nWORKDIR /app/\n\n# Only add files required for installation to improve build caching\nADD requirements.txt /app\nADD setup.py /app\nADD README.rst /app\nADD HISTORY.rst /app\nADD django-cloudlaunch/cloudlaunchserver/__init__.py /app/django-cloudlaunch/cloudlaunchserver/__init__.py\n\n# Install requirements. Move this above ADD as 'pip install cloudlaunch-server'\n# asap so caching works\nRUN /app/venv/bin/pip3 install -U pip && /app/venv/bin/pip3 install --no-cache-dir -r requirements.txt\n\n# Stage-2\nFROM ubuntu:20.04\n\nARG DEBIAN_FRONTEND=noninteractive\nENV PYTHONUNBUFFERED 1\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US.UTF-8\n\n# Create cloudlaunch user environment\nRUN useradd -ms /bin/bash cloudlaunch \\\n    && mkdir -p /app \\\n    && chown cloudlaunch:cloudlaunch /app -R \\\n    && apt-get -qq update && apt-get install -y --no-install-recommends \\\n        git-core \\\n        python3-pip \\\n        python3-setuptools \\\n        locales \\\n    && locale-gen $LANG && update-locale LANG=$LANG \\\n    && apt-get autoremove -y && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* \\\n\nWORKDIR /app/\n\n# Copy cloudlaunch files to final image\nCOPY --chown=cloudlaunch:cloudlaunch --from=stage1 /app /app\n\n# Add the source files last to minimize layer cache invalidation\nADD --chown=cloudlaunch:cloudlaunch . /app\n\n# Switch to new, lower-privilege user\nUSER cloudlaunch\n\nWORKDIR /app/django-cloudlaunch/\n\nRUN /app/venv/bin/python manage.py collectstatic --no-input\n\n# gunicorn will listen on this port\nEXPOSE 8000\n\nCMD /bin/bash -c \"source /app/venv/bin/activate && /app/venv/bin/gunicorn -k gevent -b :8000 --access-logfile - --error-logfile - --log-level info cloudlaunchserver.wsgi\"\n"
}