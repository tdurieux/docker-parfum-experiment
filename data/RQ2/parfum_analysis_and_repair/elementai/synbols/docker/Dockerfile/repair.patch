diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elementai/synbols/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elementai/synbols/docker/Dockerfile/repaired.Dockerfile
index 61e3ece..2e97a39 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elementai/synbols/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elementai/synbols/docker/Dockerfile/repaired.Dockerfile
@@ -5,18 +5,18 @@ ARG GOOGLE_FONTS_COMMIT=ed61614fb47affd2a4ef286e0b313c5c47226c69
 
 # Install Python 3
 RUN apt-get update && \
-    apt-get install -y python3-pip python3-dev && \
+    apt-get install --no-install-recommends -y python3-pip python3-dev && \
     cd /usr/local/bin && \
     ln -s /usr/bin/python3 python && \
-    pip3 install --upgrade pip
+    pip3 install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;
 
 # Install system dependencies
 RUN apt-get update && \
-    apt-get install -y curl fonts-cantarell fontconfig git icu-devtools ipython3 jq libcairo2-dev libhdf5-dev pkg-config ttf-ubuntu-font-family unzip wget
+    apt-get install --no-install-recommends -y curl fonts-cantarell fontconfig git icu-devtools ipython3 jq libcairo2-dev libhdf5-dev pkg-config ttf-ubuntu-font-family unzip wget && rm -rf /var/lib/apt/lists/*;
 
 # Install all python requirements
 COPY docker/requirements.txt .
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 # Download landscape images
 RUN mkdir -p /images && cd /images && \
@@ -88,8 +88,8 @@ RUN rm -r /bootstrap
 # ------------------------------------------------------------------------
 # Notebook examples
 # ------------------------------------------------------------------------
-RUN pip install jupyter matplotlib
-RUN pip install --upgrade ipython Pygments>=2.6.1
+RUN pip install --no-cache-dir jupyter matplotlib
+RUN pip install --no-cache-dir --upgrade ipython Pygments >=2.6.1
 RUN mkdir /.local && chmod -R 777 /.local
 
 # Copy examples to image
@@ -98,9 +98,9 @@ COPY ./examples/ /examples
 
 
 FROM base AS test
-RUN pip install pytest flake8
+RUN pip install --no-cache-dir pytest flake8
 
 FROM base AS sphinx
 ADD ./docs/requirements.txt docs/requirements.txt
-RUN pip install -r docs/requirements.txt
+RUN pip install --no-cache-dir -r docs/requirements.txt