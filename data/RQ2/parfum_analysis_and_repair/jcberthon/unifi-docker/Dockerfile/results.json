{
  "startTime": 1674255838720,
  "endTime": 1674255839615,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASEIMG=ubuntu\nARG BASEVERS=bionic\nFROM ${BASEIMG}:${BASEVERS}\n\nARG ARCH=amd64\nENV ARCH=${ARCH}\nARG DEBIAN_FRONTEND=noninteractive\nENV TINI_VERSION=v0.18.0\nARG MONGODB_VERSION=3.4\nENV MONGODB_VERSION=${MONGODB_VERSION}\n\n\n# Install Ubiquiti UniFi Controller dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        ca-certificates \\\n        binutils \\\n        curl \\\n        dirmngr \\\n        gnupg \\\n        jsvc \\\n        procps \\\n    && curl -f -OL \"https://www.mongodb.org/static/pgp/server-${MONGODB_VERSION}.asc\" \\\n    && apt-key add server-${MONGODB_VERSION}.asc \\\n    && echo \"deb https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/${MONGODB_VERSION} multiverse\" > /etc/apt/sources.list.d/mongodb-org.list \\\n    && rm -f server-${MONGODB_VERSION}.asc \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        mongodb-org-server \\\n    && apt-get clean -qy \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && curl -f -L \"https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${ARCH}\" -o /sbin/tini \\\n    && curl -f -L \"https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-${ARCH}.asc\" -o /sbin/tini.asc \\\n    && gpg --batch --keyserver hkp://keyserver.ubuntu.com --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 \\\n    && gpg --batch --verify /sbin/tini.asc /sbin/tini \\\n    && rm -f /sbin/tini.asc \\\n    && chmod 0755 /sbin/tini \\\n    && curl -f -OL \"https://dl.ui.com/unifi/unifi-repo.gpg\" \\\n    && apt-key add unifi-repo.gpg \\\n    && rm -f unifi-repo.gpg\n\n\n\n# Install Ubiquiti UniFi Controller\nARG UNIFI_CHANNEL=stable\nENV UNIFI_CHANNEL=${UNIFI_CHANNEL}\nRUN groupadd -g 750 -o unifi \\\n    && useradd -u 750 -o -g unifi -M unifi \\\n    && echo \"deb https://www.ubnt.com/downloads/unifi/debian ${UNIFI_CHANNEL} ubiquiti\" > /etc/apt/sources.list.d/ubiquiti-unifi.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        unifi \\\n    && apt-get clean -qy \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && find /usr/lib/unifi/dl/firmware -mindepth 1 \\! -name bundles.json -delete\n\nEXPOSE 6789/tcp 8080/tcp 8443/tcp 8880/tcp 8843/tcp 3478/udp 10001/udp\n\nCOPY unifi.default /etc/default/unifi\nCOPY unifi.init /usr/lib/unifi/bin/unifi.init\n\n# Enable running Unifi Controller as a standard user\n# It requires that we create certain folders and links first\n# with the right user ownership and permissions.\nRUN mkdir -p -m 755 /var/lib/unifi /var/log/unifi /var/run/unifi /usr/lib/unifi/work \\\n    && ln -sf /var/lib/unifi /usr/lib/unifi/data \\\n    && ln -sf /var/log/unifi /usr/lib/unifi/logs \\\n    && ln -sf /var/run/unifi /usr/lib/unifi/run \\\n    && chown unifi:unifi /var/lib/unifi /var/log/unifi /var/run/unifi /usr/lib/unifi/work \\\n    && chmod 755 /usr/lib/unifi/bin/unifi.init\nUSER unifi\n\n# Add healthcheck (requires Docker 1.12)\nHEALTHCHECK --interval=30s --timeout=3s --retries=5 --start-period=30s \\\n  CMD curl --insecure -f https://localhost:8443/ || exit 1\n\nVOLUME [\"/var/lib/unifi\", \"/var/log/unifi\"]\n\n# execute the controller by using the init script and the `init` option of Docker\n# Requires to send the TERM signal to all process as JSVC does not know mongod\n# was launched by the Unifi application. Therefore mongod was not shutdown\n# cleanly.\nENTRYPOINT [\"/sbin/tini\", \"-g\", \"--\", \"/usr/lib/unifi/bin/unifi.init\"]\n"
}