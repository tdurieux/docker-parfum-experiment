{
  "startTime": 1674248206862,
  "endTime": 1674248208284,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 8,
        "columnEnd": 66
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 8,
        "columnEnd": 52
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/centos/centos:stream8\n\nARG BUILDTIME=1970-01-01T00:00:00Z\nENV CLIENT_ABOUT_ACAS_BUILDTIME=${BUILDTIME}\n\nARG VERSION=0.0.0\nENV CLIENT_ABOUT_ACAS_VERSION=${VERSION}\n\nARG REVISION=UNKNOWN\nENV CLIENT_ABOUT_ACAS_REVISION=${REVISION}\n\n# Update\nRUN \\\n  dnf update -y && \\\n  dnf upgrade -y && \\\n# tar for pulling down node\n# git required for some npm packages\n# postgresql for utility scripts\n  dnf install -y tar git && \\\n  dnf install -y fontconfig urw-fonts iputils postgresql && \\\n  dnf clean all\n\n#Install python dependencies\nRUN   dnf install -y python36 python3-pip\nRUN   alternatives --set python /usr/bin/python3\nRUN   alternatives --install /usr/bin/pip pip /usr/bin/pip3 1\nRUN pip install --no-cache-dir argparse requests\nRUN   dnf install -y initscripts python3-psycopg2\n\n# node\nENV NPM_CONFIG_LOGLEVEL warn\nENV NODE_VERSION 14.x\nRUN curl -fsSL https://rpm.nodesource.com/setup_$NODE_VERSION | bash - && \\\n  dnf install -y nodejs\n\n# ACAS\nRUN\t    useradd -u 1000 -ms /bin/bash runner\nENV     APP_NAME ACAS\nENV     BUILD_PATH /home/runner/build\nENV     ACAS_BASE /home/runner/acas\nENV     ACAS_CUSTOM /home/runner/acas_custom\nENV     ACAS_SHARED /home/runner/acas_shared\nENV     APACHE Redhat\nRUN npm install -g gulp@4.0.2 forever@3.0.4 coffeescript@2.5.1 && npm cache clean --force;\nCOPY    --chown=runner:runner package.json $ACAS_BASE/package.json\nUSER    runner\nWORKDIR $ACAS_BASE\n\n# This installs the modules but not acas, doing this makes subsequent builds much faster so that the container isn't invalidated on a small code change\nRUN npm install --ignore-scripts --loglevel warn && npm cache clean --force;\nCOPY --chown=runner:runner . $ACAS_BASE\nRUN mkdir -p $BUILD_PATH/node_modules && \\\n        mkdir -p $BUILD_PATH/public && \\\n        cp -r node_modules $BUILD_PATH && \\\n        npm install --no-configs && \\\n        mkdir $BUILD_PATH/privateUploads && \\\n        mkdir /home/runner/logs && \\\n        mkdir -p $BUILD_PATH/conf/compiled && \\\n        rm -rf $ACAS_BASE && npm cache clean --force;\nWORKDIR $BUILD_PATH\nRUN     chmod u+x bin/*.sh\nENV     PREPARE_MODULE_CONF_JSON=true\nENV     PREPARE_CONFIG_FILES=true\nENV     RUN_SYSTEM_TEST=false\nENV     ACAS_HOME=$BUILD_PATH\nRUN     gulp execute:prepare_config_files\n\nUSER\trunner\n\nEXPOSE 3000\nCMD     [\"/bin/sh\",\"bin/acas.sh\", \"run\"]\n"
}