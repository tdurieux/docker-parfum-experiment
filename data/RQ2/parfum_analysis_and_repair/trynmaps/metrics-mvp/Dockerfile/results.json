{
  "startTime": 1674251831859,
  "endTime": 1674251832752,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 24,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.16.0-stretch-slim AS react-dev\nRUN mkdir -p /app/frontend && \\\n    npm install -g react-scripts@1.1.1 && npm cache clean --force;\nCOPY ./frontend/package.json ./frontend/package-lock.json /app/frontend/\nRUN cd /app/frontend && npm install && npm cache clean --force;\nCOPY ./frontend /app/frontend\nWORKDIR /app/frontend\nCMD [\"npm\",\"start\"]\n\nFROM python:3.7.2-slim-stretch AS flask-dev\nRUN mkdir -p /app/backend && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y curl nano less sudo && rm -rf /var/lib/apt/lists/*;\nCOPY ./backend/requirements.txt /app/backend/requirements.txt\nRUN pip install --no-cache-dir -r /app/backend/requirements.txt\nCOPY ./backend /app/backend\nRUN mkdir -p /app/backend/data\nWORKDIR /app/backend\nENV FLASK_APP=metrics-api.py\nCMD [\"flask\", \"run\", \"--host\", \"0.0.0.0\"]\n\nFROM flask-dev as flask\nENV PORT 5000\nCMD gunicorn --bind 0.0.0.0:$PORT metrics-api:app\n\nFROM react-dev as react-build\nENV REACT_APP_METRICS_BASE_URL=\nRUN cd /app/frontend && PUBLIC_URL=\"frontend/build\" npm run build\n\nFROM flask AS all-in-one\nENV METRICS_ALL_IN_ONE 1\nCOPY --from=react-build /app/frontend/build /app/frontend/build\n\nFROM nginx:1.16.0-alpine as web\nRUN mkdir /usr/share/nginx/html/frontend && \\\n    mkdir /var/cache/nginx/api-cache && \\\n    rm -rf /etc/nginx/conf.d\nCOPY --from=react-build /app/frontend/build /usr/share/nginx/html/frontend/build\nRUN gzip -k9 /usr/share/nginx/html/frontend/build/static/css/*.css && \\\n    gzip -k9 /usr/share/nginx/html/frontend/build/static/js/*.js\nCOPY ./nginx/conf.d /etc/nginx/conf.d\nENV PORT 80\nCMD /bin/sh -c \"echo 'listen $PORT;' > /etc/nginx/server-vars.conf\" && nginx -g 'daemon off;'\n"
}