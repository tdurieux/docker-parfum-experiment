{
  "startTime": 1674255210519,
  "endTime": 1674255211236,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# builds the app and runs the webversion inside a docker container\n\n### build ###\n\n# base image\nFROM node:12 as build\n\n# add app\nCOPY . /app\n\n# set working directory\nWORKDIR /app\n\n# add `/app/node_modules/.bin` to $PATH\nENV PATH /app/node_modules/.bin:$PATH\n\nRUN npm i && npm cache clean --force;\nRUN npm i -g @angular/cli && npm cache clean --force;\n\n# run linter\nRUN npm run lint\n\n# generate build\nRUN npm run buildFrontend:prodWeb\n\n### serve ###\n\n# base image\nFROM nginx:1-alpine\n\n# environmental variables\nENV PORT=80\n\n# copy artifact build from the 'build environment'\nCOPY --from=build /app/dist /usr/share/nginx/html\n\n# expose port: defaults to 80\nEXPOSE $PORT\n\n# run nginx\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}