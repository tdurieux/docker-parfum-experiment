{
  "startTime": 1674218665239,
  "endTime": 1674218667180,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 102,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 7,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM nginx:latest\nFROM debian:stretch-slim\n\n# Ingress Controller Liberty\n# Creator: Juan Manuel Torres\n# Source: https://github.com/Tedezed\n# Mail: juanmanuel.torres@aventurabinaria.es\n\nMAINTAINER Juan Manuel Torres <juanmanuel.torres@aventurabinaria.es>\n\nENV KMASTER=\"kubernetes\" \\\n    TIME_QUERY=\"17\"\\\n    TYPE_BALANCE=\"roundrobin\"\\\n    COOKIE=\"false\"\n\nWORKDIR /etc/nginx\n\n# Install Nginx.\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y nginx && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  echo \"\\ndaemon off;\" >> /etc/nginx/nginx.conf && \\\n  chown -R www-data:www-data /var/lib/nginx\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n     curl \\\n     rsyslog \\\n     apt-transport-https \\\n        python2.7 \\\n        python-pip \\\n        python-jinja2 \\\n        git \\\n        nano \\\n        procps \\\n        wget \\\n        gcc \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Personal Nginx\n\nRUN apt-get remove nginx -y \\\n    && rm -rf /usr/local/nginx /usr/sbin/nginx /etc/nginx /usr/local/nginx/ /usr/local/nginx/\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends build-essential g++ libpcre3 libpcre3-dev libssl-dev zlibc zlib1g zlib1g-dev checkinstall libgeoip-dev -y \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN cd /usr/src/ \\\n    && curl -f -O http://nginx.org/download/nginx-1.10.3.tar.gz \\\n    && ls \\\n    && tar -xzf nginx-1.10.3.tar.gz && rm nginx-1.10.3.tar.gz\n\nRUN cd /usr/src/nginx-1.10.3 \\\n    && curl -f -O https://bitbucket.org/nginx-goodies/nginx-sticky-module-ng/get/1.2.6.tar.gz \\\n    && tar -xzf 1.2.6.tar.gz && rm 1.2.6.tar.gz\n#    && git clone https://github.com/Tedezed/nginx_upstream_check_module\n\nRUN mkdir /var/cache/nginx \\\n    && chown www-data /var/cache/nginx \\\n    && mkdir /var/cache/nginx/client_temp \\\n    /var/cache/nginx/proxy_temp \\\n    /var/cache/nginx/fastcgi_temp \\\n    /var/cache/nginx/uwsgi_temp \\\n    /var/cache/nginx/scgi_temp \\\n    && cd /usr/src/nginx-1.10.3 \\\n    && ls \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/etc/nginx \\\n    --sbin-path=/usr/sbin/nginx \\\n    --conf-path=/etc/nginx/nginx.conf \\\n    --error-log-path=/var/log/nginx/error.log \\\n    --http-log-path=/var/log/nginx/access.log \\\n    --pid-path=/var/run/nginx.pid \\\n    --lock-path=/var/run/nginx.lock \\\n    --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n    --user=www-data \\\n    --group=www-data \\\n    --with-http_ssl_module \\\n    --with-http_realip_module \\\n    --with-http_addition_module \\\n    --with-http_sub_module \\\n    --with-http_dav_module \\\n    --with-http_flv_module \\\n    --with-http_mp4_module \\\n    --with-http_gunzip_module \\\n    --with-http_gzip_static_module \\\n    --with-http_random_index_module \\\n    --with-http_secure_link_module \\\n    --with-http_stub_status_module \\\n    --with-mail \\\n    --with-mail_ssl_module \\\n    --with-file-aio \\\n    --with-cc-opt='-g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2' \\\n    --with-ld-opt='-Wl,-z,relro -Wl,--as-needed' \\\n    --with-ipv6 \\\n    --with-http_geoip_module \\\n    --with-http_v2_module \\\n    --add-module=nginx-goodies-nginx-sticky-module-ng-c78b7dd79d0d\n#    --add-module=nginx_upstream_check_module\n\nRUN cd /usr/src/nginx-1.10.3 \\\n    && ls \\\n    && make\nRUN cd /usr/src/nginx-1.10.3 \\\n    && make install \\\n    && chmod a+x /etc/init.d/nginx \\\n    && rm -rf /usr/src/*\n\n# http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz\n# http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\n# RUN mkdir /etc/nginx/geoip \\\n#     && cd /etc/nginx/geoip \\\n#     && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.tar.gz \\\n#     && gunzip GeoLite2-Country.tar.gz \\\n#     && wget https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.tar.gz \\\n#     && gunzip GeoLite2-City.tar.gz \\\n#     && chown www-data -R /etc/nginx/geoip\n\nRUN pip install --no-cache-dir kubernetes deepdiff elasticsearch \\\n    && rm -rf /etc/nginx/conf.d/default.conf \\\n    && ls /etc/nginx/ -lia \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y apache2-utils \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV NAME_LIBERTY=\"liberty\" \\\n    DEFAULT_CERT=\"false\" \\\n    DEFAULT_CERT_NAMESPACE=\"false\" \\\n    TIMEOUT=\"60m\" \\\n    MODE=\"production\" \\\n    ELK=\"false\" \\\n    ELK_MODE=\"stop\" \\\n    ELK_LIBERTY_NAMES=\"liberty1 liberty2\" \\\n    ELK_HOST=\"localhost\" \\\n    ELK_PORT=\"9200\" \\\n    ELK_PREFIX=\"filebeat\" \\\n    ELK_DAYS=3 \\\n    SECRET_USER=\"admin\" \\\n    SECRET_PASSWD=\"admin1234567890\" \\\n    SUPPORT_EMAIL=\"soporte@guadaltech.es\" \\\n    TEAM_NAME=\"Support Team\" \\\n    NAMESPACE_CERT_GENERATOR=\"default\" \\\n    SVC_CERT_GENERATOR=\"kube-lego-nginx\" \\\n    SVC_CERT_GENERATOR_PORT=\"8080\" \\\n    NUMBITS=2048 \\\n    IP_ERROR=\"127.0.0.1\" \\\n    PORT_ERROR=\"3502\"\n\nADD files/ /files\nRUN mkdir -p /files/liberty-ingress/default-cert/ \\\n  && mkdir -p /files/liberty-ingress/certs/ \\\n  && openssl dhparam -out /files/liberty-ingress/dhparam.pem $NUMBITS\nRUN cp -R /files/error/ /var/www/error \\\n  && cp /files/docker-entrypoint.sh /usr/local/bin/ \\\n  && chmod +rx /usr/local/bin/docker-entrypoint.sh \\\n  && mkdir /etc/nginx/others \\\n  && cp /files/nginx.conf /etc/nginx/nginx.conf \\\n  && chown www-data:www-data -R /etc/nginx/others \\\n  && chown www-data:www-data -R /files/error \\\n  && chown www-data:www-data -R /files/liberty-ingress/default-cert\n\nEXPOSE 80\nEXPOSE 443\nVOLUME [\"/etc/nginx/sites-enabled\", \"/etc/nginx/certs\", \"/etc/nginx/conf.d\", \"/var/log/nginx\", \"/var/www/html\"]\nUSER root\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"/bin/bash\"]"
}