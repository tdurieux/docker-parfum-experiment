{
  "startTime": 1674249613300,
  "endTime": 1674249614202,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 25,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stable\nMAINTAINER Juan Manuel Torres <juanmanuel.torres@aventurabinaria.es>\n\n## ----- PYTHON ----- ##\n\nENV MYSQLXPB_PROTOC=/usr/bin/protoc \\\n MYSQLXPB_PROTOBUF_INCLUDE_DIR=/usr/include/google/protobuf \\\n MYSQLXPB_PROTOBUF_LIB_DIR=/usr/lib/x86_64-linux-gnu \\\n DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        cron \\\n        wget \\\n        curl \\\n        git \\\n        tree \\\n        nano \\\n        procps \\\n    \trsyslog \\\n    \tapt-transport-https \\\n        gnupg && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add - \\\n    && echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main\" >> /etc/apt/sources.list \\\n    && apt-get update && apt-get install postgresql-client-12 -y --force-yes --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends \\\n    python2.7 \\\n    python-pip \\\n    python-jinja2 \\\n    python-yaml \\\n    python-websocket \\\n    python-jsonpickle \\\n    python-httplib2 \\\n    python-mysqldb \\\n    libmariadbclient-dev \\\n    libprotobuf-dev \\\n    protobuf-compiler \\\n    default-mysql-client \\\n    default-mysql-client-core && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y \\\n    build-essential \\\n    autoconf \\\n    libtool \\\n    pkg-config \\\n    python-opengl \\\n    python-pil \\\n    python-pyrex \\\n    idle-python2.7 \\\n    qt4-dev-tools \\\n    qt4-designer \\\n    libqtgui4 \\\n    libqtcore4 \\\n    libqt4-xml \\\n    libqt4-test \\\n    libqt4-script \\\n    libqt4-network \\\n    libqt4-dbus \\\n    python-qt4 \\\n    python-qt4-gl \\\n    libgle3 \\\n    python-dev \\\n    python-setuptools \\\n    libpq-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade setuptools wheel \\\n    && pip install --no-cache-dir psycopg2-binary \\\n    && pip install --no-cache-dir kubernetes deepdiff psycopg2 mysql-connector \\\n    && pip install --no-cache-dir google-api-python-client setuptools\nRUN pip install --no-cache-dir google-auth google-auth-httplib2 psycopg2-binary psutil\n\nRUN apt-get remove --purge -y \\\n    build-essential \\\n    autoconf \\\n    libtool \\\n    pkg-config \\\n    python-opengl \\\n    python-imaging \\\n    python-pyrex \\\n    idle-python2.7 \\\n    qt4-dev-tools \\\n    qt4-designer \\\n    libqtgui4 \\\n    libqtcore4 \\\n    libqt4-xml \\\n    libqt4-test \\\n    libqt4-script \\\n    libqt4-network \\\n    libqt4-dbus \\\n    python-qt4 \\\n    python-qt4-gl \\\n    libgle3 \\\n    python-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n## ----- ENV ----- ##\n\nENV DAYS_TO_DROP=15 \\\n    DAYS_TO_DROP_SNAPSHOT=3 \\\n    TIME=\"10 0 * * *\"\n\n# Mode 0 > DEBUG\n# Mode 1 > Backup\n# Mode 2 > Snapshot\n# Mode 3 > Backup + Snapshot\n\nENV MODE=\"1\" \\\n    CONF_MODE=\"conf-map\" \\\n    PROJECT=\"project-name-test\" \\\n    ZONE=\"europe-west1-b\" \\\n    EMAIL_MODE=\"OFF\" \\\n    PYTHONIOENCODING=\"UTF-8\" \\\n    GCLOUD_DEFAULT_CREDENTIALS=\"True\" \\\n    GCLOUD_SA_FILE=\"/secrets/sa/sa-gcloud.json\"\n\n## ----- END ----- ##\n\nADD slug-backup-db-cron/ /slug-backup-db-cron\nADD files/docker-entrypoint.sh /usr/local/bin/\n\nRUN chmod +rx /usr/local/bin/docker-entrypoint.sh /slug-backup-db-cron/main.py /slug-backup-db-cron/start\n\nUSER root\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"/bin/bash\"]"
}