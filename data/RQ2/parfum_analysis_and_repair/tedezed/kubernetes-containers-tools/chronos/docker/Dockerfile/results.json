{
  "startTime": 1674218487174,
  "endTime": 1674218488063,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable\nLABEL \"MAINTAINER\"=\"Juan Manuel Torres <juanmanuel.torres@aventurabinaria.es>\"\n\nENV MYSQLXPB_PROTOC=/usr/bin/protoc \\\n    MYSQLXPB_PROTOBUF_INCLUDE_DIR=/usr/include/google/protobuf \\\n    MYSQLXPB_PROTOBUF_LIB_DIR=/usr/lib/x86_64-linux-gnu \\\n    DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        wget \\\n        gnupg \\\n        cron \\\n        curl \\\n        git \\\n        tree \\\n        nano \\\n        procps \\\n    \trsyslog \\\n    \tapt-transport-https \\\n        python3.7 \\\n        python3-pip \\\n        python3-jinja2 \\\n        python3-yaml \\ \n        python3-websocket \\\n        python3-jsonpickle \\\n        python3-httplib2 \\\n        python3-mysqldb \\\n        libmariadbclient-dev \\\n        libprotobuf-dev \\\n        protobuf-compiler \\\n        default-mysql-client \\\n        default-mysql-client-core \\\n        build-essential \\\n        autoconf \\\n        libtool \\\n        pkg-config \\\n        python-opengl \\\n        python-pil \\\n        idle-python2.7 \\\n        qt4-dev-tools \\\n        qt4-designer \\\n        libqtgui4 \\\n        libqtcore4 \\\n        libqt4-xml \\\n        libqt4-test \\\n        libqt4-script \\\n        libqt4-network \\\n        libqt4-dbus \\\n        python3-pyqt4 \\\n        libgle3 \\\n        python3-dev \\\n        python3-setuptools \\\n        libpq-dev \\\n    && wget -q https://www.postgresql.org/media/keys/ACCC4CF8.asc -O - | apt-key add - \\\n    && echo \"deb http://apt.postgresql.org/pub/repos/apt/ buster-pgdg main\" >> /etc/apt/sources.list \\\n    && apt-get update && apt-get install postgresql-client-12 -y --force-yes --no-install-recommends \\\n    && pip3 install --no-cache-dir --upgrade setuptools wheel \\\n    && pip3 install --no-cache-dir psycopg2-binary \\\n    && pip3 install --no-cache-dir kubernetes deepdiff psycopg2 mysql-connector \\\n    && pip3 install --no-cache-dir google-api-python-client setuptools \\\n    && pip3 install --no-cache-dir google-auth google-auth-httplib2 psycopg2-binary psutil passlib \\\n    # Clean\n    && apt-get remove --purge -y \\\n        build-essential \\\n        autoconf \\\n        libtool \\\n        pkg-config \\\n        python3-opengl \\\n        python3-imaging \\\n        idle-python2.7 \\\n        qt4-dev-tools \\\n        qt4-designer \\\n        libqtgui4 \\\n        libqtcore4 \\\n        libqt4-xml \\\n        libqt4-test \\\n        libqt4-script \\\n        libqt4-network \\\n        libqt4-dbus \\\n        python3-pyqt4 \\\n        libgle3 \\\n        python3-dev \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get autoclean -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get autoremove -y\n\n# Mode 0 > DEBUG\n# Mode 1 > Backup\n# Mode 2 > Snapshot\n# Mode 3 > Backup + Snapshot\n\nENV DAYS_TO_DROP=15 \\\n    DAYS_TO_DROP_SNAPSHOT=3 \\\n    TIME=\"10 0 * * *\" \\\n    MODE=\"all\" \\\n    CONF_MODE=\"api\" \\\n    PROJECT=\"project-name-test\" \\\n    ZONE=\"europe-west1-b\" \\\n    EMAIL_MODE=\"OFF\" \\\n    PYTHONIOENCODING=\"UTF-8\" \\\n    GCLOUD_DEFAULT_CREDENTIALS=\"True\" \\\n    GCLOUD_SA_FILE=\"/secrets/sa/sa-gcloud.json\"\n\nADD chronos/ /chronos\nADD files/docker-entrypoint.sh /usr/local/bin/\n\nRUN chmod +rx /usr/local/bin/docker-entrypoint.sh /chronos/main.py /chronos/start\n\nUSER root\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"/bin/bash\"]"
}