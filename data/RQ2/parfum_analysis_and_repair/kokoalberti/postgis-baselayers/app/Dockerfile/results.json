{
  "startTime": 1674253575087,
  "endTime": 1674253576357,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER kokoalberti@fastmail.nl\n\n# Build image based on Ubuntu minimal. Mainly due to easy access to all the\n# goodies in the UbuntuGIS repository, which contains more up-to-date\n# geospatial tools than the Debian or Alpine repos.\n#\n# Given this setup the image might be a bit heavy, but because the apps needed\n# to crunch and import the datasets can be pretty varied it won't hurt to have\n# a container with a good collection of command-line and geospatial tools\n# readily available.\n\nENV TZ Europe/Amsterdam\nENV DEBIAN_FRONTEND noninteractive\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# Install basic dependencies\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y tzdata && \\\n    apt-get install --no-install-recommends -y \\\n    wget \\\n    cmake \\\n    zip \\\n    unzip \\\n    linux-tools-common \\\n    linux-tools-generic \\\n    software-properties-common \\\n    postgresql-client \\\n    supervisor \\\n    python3-dev \\\n    python3-numpy \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Install geospatial stack from UbuntuGIS\nRUN add-apt-repository -y ppa:ubuntugis/ubuntugis-unstable && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y gdal-bin python3-gdal && rm -rf /var/lib/apt/lists/*;\n\n# Create and set the working directory\nRUN mkdir -p /app\nWORKDIR /app\n\n# Add the current directory to /app\nADD . /app\n\n# Install Python requirements\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Copy the supervisord configuration\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Copy certificates so we can connect to RDS instances on AWS\n# using sslmode=verify-full\nADD https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem /root/.postgresql/root.crt\n\n# Expose port 8080 on the container\nEXPOSE 8080\n\n# Start supervisord\nCMD [\"/usr/bin/supervisord\"]"
}