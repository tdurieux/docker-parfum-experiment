{
  "startTime": 1674250226022,
  "endTime": 1674250228325,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 12,
        "columnEnd": 117
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 12,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 12,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 12,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# VERSION 1.8.0.0\n# AUTHOR: Yusuke KUOKA\n# DESCRIPTION: Docker image to run Airflow on Kubernetes which is capable of creating Kubernetes jobs\n# BUILD: docker build --rm -t mumoshu/kube-airflow\n# SOURCE: https://github.com/mumoshu/kube-airflow\n\nFROM    debian:stretch\nMAINTAINER Yusuke KUOKA <ykuoka@gmail.com>\n\n# Never prompts the user for choices on installation/configuration of packages\nENV     DEBIAN_FRONTEND noninteractive\nENV     TERM linux\n\n# Airflow\nARG     AIRFLOW_VERSION=%%AIRFLOW_VERSION%%\nENV     AIRFLOW_HOME /usr/local/airflow\nENV     EMBEDDED_DAGS_LOCATION=%%EMBEDDED_DAGS_LOCATION%%\nENV     REQUIREMENTS_TXT_LOCATION=%%REQUIREMENTS_TXT_LOCATION%%\n\n# Define en_US.\nENV     LANGUAGE en_US.UTF-8\nENV     LANG en_US.UTF-8\nENV     LC_ALL en_US.UTF-8\nENV     LC_CTYPE en_US.UTF-8\nENV     LC_MESSAGES en_US.UTF-8\nENV     LC_ALL en_US.UTF-8\n\nWORKDIR /requirements\n# Only copy needed files\nCOPY    requirements/airflow.txt /requirements/airflow.txt\nCOPY    ${REQUIREMENTS_TXT_LOCATION} /requirements/dags.txt\n\n\nRUN set -ex \\\n        &&  buildDeps=' \\\n                build-essential \\\n                libblas-dev \\\n                libffi-dev \\\n                libkrb5-dev \\\n                liblapack-dev \\\n                libpq-dev \\\n                libsasl2-dev \\\n                libssl-dev \\\n                libxml2-dev \\\n                libxslt1-dev \\\n                python3-dev \\\n                python3-pip \\\n                zlib1g-dev \\\n            ' \\\n        &&  apt-get update -yqq \\\n        &&  apt-get install -yqq --no-install-recommends \\\n                $buildDeps \\\n                apt-utils \\\n                curl \\\n                git \\\n                locales \\\n                netcat \\\n        &&      sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n        &&  locale-gen \\\n        &&  update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n        &&  useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n        && pip3 install --no-cache-dir --upgrade pip 'setuptools!=36.0.0' \\\n        && if [ ! -e /usr/bin/pip ]; then ln -s /usr/bin/pip3 /usr/bin/pip ; fi \\\n        && if [ ! -e /usr/bin/python ]; then ln -sf /usr/bin/python3 /usr/bin/python; fi \\\n        && pip3 install --no-cache-dir -r /requirements/airflow.txt \\\n        && pip3 install --no-cache-dir -r /requirements/dags.txt \\\n        && apt-get remove --purge -yqq $buildDeps libpq-dev \\\n        && apt-get clean \\\n        && rm -rf \\\n                /var/lib/apt/lists/* \\\n                /tmp/* \\\n                /var/tmp/* \\\n                /usr/share/man \\\n                /usr/share/doc \\\n                /usr/share/doc-base\n\nENV         KUBECTL_VERSION %%KUBECTL_VERSION%%\n\nRUN curl -f -L -o /usr/local/bin/kubectl \\\n                https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl \\\n        && chmod +x /usr/local/bin/kubectl\n\nCOPY        script/entrypoint.sh ${AIRFLOW_HOME}/entrypoint.sh\nCOPY        config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\nCOPY        script/git-sync ${AIRFLOW_HOME}/git-sync\nCOPY        ${EMBEDDED_DAGS_LOCATION} ${AIRFLOW_HOME}/dags\nCOPY        script/git-sync ${AIRFLOW_HOME}/git-sync\n\nRUN         chown -R airflow: ${AIRFLOW_HOME} \\\n        &&  chmod +x ${AIRFLOW_HOME}/entrypoint.sh \\\n        &&  chmod +x ${AIRFLOW_HOME}/git-sync\n\nEXPOSE  8080 5555 8793\n\nUSER        airflow\nWORKDIR     ${AIRFLOW_HOME}\nENTRYPOINT  [\"./entrypoint.sh\"]\n"
}