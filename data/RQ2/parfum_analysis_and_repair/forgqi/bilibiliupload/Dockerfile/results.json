{
  "startTime": 1674216127627,
  "endTime": 1674216128738,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build biliup's web-ui\nFROM node:16-alpine as webui\n\nRUN \\\n  set -eux && \\\n  apk add --no-cache git && \\\n  git clone --depth 1 https://github.com/ForgQi/biliup.git && \\\n  cd biliup && \\\n  npm install && \\\n  npm run build && npm cache clean --force;\n\n# Deploy Biliup\nFROM python:3.9-slim as biliup\nENV TZ=Asia/Shanghai\nEXPOSE 19159/tcp\nVOLUME /opt\n\nRUN \\\n  set -eux; \\\n#  apk update && \\\n    # save list of currently installed packages for later so we can clean up\n  savedAptMark=\"$(apt-mark showmanual)\"; \\\n  apt-get update; \\\n#  apk add --no-cache --virtual .build-deps git curl gcc g++ && \\\n#  apk add --no-cache ffmpeg musl-dev libffi-dev zlib-dev jpeg-dev ca-certificates && \\\n  apt-get install -y --no-install-recommends ffmpeg git; \\\n  git clone --depth 1 https://github.com/ForgQi/biliup.git && \\\n  cd biliup && \\\n  pip3 install --no-cache-dir quickjs && \\\n  pip3 install --no-cache-dir -e . && \\\n  # Clean up \\\n  apt-mark auto '.*' > /dev/null; \\\n  apt-mark manual ffmpeg; \\\n  [ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n  find /usr/local -type f -executable -exec ldd '{}' ';' \\\n     | awk '/=>/ { print $(NF-1) }' \\\n     | sort -u \\\n     | xargs -r dpkg-query --search \\\n     | cut -d: -f1 \\\n     | sort -u \\\n     | xargs -r apt-mark manual \\\n     ; \\\n  apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n  rm -rf \\\n    /tmp/* \\\n    /usr/share/doc/* \\\n    /var/cache/* \\\n    /var/lib/apt/lists/* \\\n    /var/tmp/* && \\\n  #  apk del --purge .build-deps && \\\n#  rm -rf /var/cache/apk/* && \\\n  rm -rf /var/log/*\n\nCOPY --from=webui /biliup/biliup/web/public/ /biliup/biliup/web/public/\nWORKDIR /opt\n\nENTRYPOINT [\"biliup\"]\n"
}