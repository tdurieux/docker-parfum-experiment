{
  "startTime": 1674254793406,
  "endTime": 1674254794123,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 32,
        "columnStart": 10,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG LATEST_ALPINE_VERSION\n\nFROM alpine:$LATEST_ALPINE_VERSION\n\n# Build Args\nARG NMAP_DOWNLOAD_URL\n\n# Content\nWORKDIR /nmap\n\n# Install dependencies\nRUN apk add --update --no-cache \\\n            ca-certificates \\\n            libpcap \\\n            libgcc libstdc++ \\\n            libretls git \\\n && update-ca-certificates \\\n && rm -rf /var/cache/apk/*\n\n# Compile and install Nmap from sources\nRUN apk add --update --no-cache --virtual .build-deps \\\n       libpcap-dev libretls-dev lua-dev linux-headers \\\n       autoconf g++ libtool make git \\\n       && git clone $NMAP_DOWNLOAD_URL /nmap \\\n       && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n       --prefix=/usr \\\n       --sysconfdir=/etc \\\n       --mandir=/usr/share/man \\\n       --infodir=/usr/share/info \\\n       --without-zenmap \\\n       --without-nmap-update \\\n       --with-openssl=/usr/lib \\\n       --with-liblua=/usr/include \\\n       && make \\\n       && make install \\\n       && apk del .build-deps \\\n       && rm -rf /var/cache/apk/* \\\n           /nmap*\n\nENTRYPOINT [\"/usr/bin/nmap\"]\n\n"
}