{
  "startTime": 1674248987615,
  "endTime": 1674248988760,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 65,
        "columnEnd": 115
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 127
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nUSER root\nENV HOME /home\n\n# install packages\nRUN apt-get update && apt-get -y --no-install-recommends install wget curl git build-essential autoconf automake libtool pkg-config gnutls-bin sudo vim && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -q -y libmysqld-dev && rm -rf /var/lib/apt/lists/*;\n\n# install go1.13.5\nRUN wget https://dl.google.com/go/go1.13.5.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.13.5.linux-amd64.tar.gz && rm go1.13.5.linux-amd64.tar.gz\nRUN mkdir $HOME/go\nENV PATH $PATH:/usr/local/go/bin\nENV GOPATH $HOME/go\nRUN echo \"export GOPATH=$HOME/go\" >> ~/.bashrc\nRUN echo \"export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin\" >> ~/.bashrc\nRUN echo \"export PATH=$PATH:/usr/local/go/bin\" >> ~/.bashrc\nRUN echo \"export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\" >> ~/.bashrc\n\n# intall openssl 1.1.1d\nRUN wget https://www.openssl.org/source/openssl-1.1.1d.tar.gz\nRUN tar -C $HOME -xzf openssl-1.1.1d.tar.gz && rm openssl-1.1.1d.tar.gz\nWORKDIR $HOME/openssl-1.1.1d\nRUN ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' --prefix=/usr/local\nRUN make && make install\nRUN echo '/usr/local/lib' >> /etc/ld.so.conf\n\n# install libcoap\nWORKDIR $HOME\nRUN git clone https://github.com/obgm/libcoap.git\nWORKDIR $HOME/libcoap\nRUN git checkout 6fc3a7315f6629d804cc7928004cddeb4a84443c\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-documentation --with-openssl\nRUN make && make install\nRUN ldconfig\n\n# install go-dots\nWORKDIR $HOME\nRUN go get -u github.com/nttdots/go-dots/...\nWORKDIR $GOPATH/src/github.com/nttdots/go-dots/\nRUN make && make install\n\n"
}