diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nttdots/go-dots/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nttdots/go-dots/docker/Dockerfile/repaired.Dockerfile
index cac962c..7589fae 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nttdots/go-dots/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nttdots/go-dots/docker/Dockerfile/repaired.Dockerfile
@@ -4,11 +4,11 @@ USER root
 ENV HOME /home
 
 # install packages
-RUN apt-get update && apt-get -y install wget curl git build-essential autoconf automake libtool pkg-config gnutls-bin sudo vim
-RUN apt-get install -q -y libmysqld-dev
+RUN apt-get update && apt-get -y --no-install-recommends install wget curl git build-essential autoconf automake libtool pkg-config gnutls-bin sudo vim && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -q -y libmysqld-dev && rm -rf /var/lib/apt/lists/*;
 
 # install go1.13.5
-RUN wget https://dl.google.com/go/go1.13.5.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.13.5.linux-amd64.tar.gz
+RUN wget https://dl.google.com/go/go1.13.5.linux-amd64.tar.gz && tar -C /usr/local -xzf go1.13.5.linux-amd64.tar.gz && rm go1.13.5.linux-amd64.tar.gz
 RUN mkdir $HOME/go
 ENV PATH $PATH:/usr/local/go/bin
 ENV GOPATH $HOME/go
@@ -19,7 +19,7 @@ RUN echo "export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH" >> ~/.bashrc
 
 # intall openssl 1.1.1d
 RUN wget https://www.openssl.org/source/openssl-1.1.1d.tar.gz
-RUN tar -C $HOME -xzf openssl-1.1.1d.tar.gz
+RUN tar -C $HOME -xzf openssl-1.1.1d.tar.gz && rm openssl-1.1.1d.tar.gz
 WORKDIR $HOME/openssl-1.1.1d
 RUN ./config -Wl,--enable-new-dtags,-rpath,'$(LIBRPATH)' --prefix=/usr/local
 RUN make && make install
@@ -31,7 +31,7 @@ RUN git clone https://github.com/obgm/libcoap.git
 WORKDIR $HOME/libcoap
 RUN git checkout 6fc3a7315f6629d804cc7928004cddeb4a84443c
 RUN ./autogen.sh
-RUN ./configure --disable-documentation --with-openssl
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-documentation --with-openssl
 RUN make && make install
 RUN ldconfig