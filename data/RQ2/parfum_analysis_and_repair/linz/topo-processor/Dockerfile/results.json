{
  "startTime": 1674255053335,
  "endTime": 1674255056300,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM osgeo/gdal:ubuntu-small-3.5.0\n\n# Install Poetry\nRUN apt-get update && apt-get install --no-install-recommends python3-pip -y && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir poetry\n\n# Set environment variable to prevent GDAL running in Docker\nENV IS_DOCKER=true\n\nWORKDIR /app\n# Add Poetry config and scripts\nCOPY poetry.lock pyproject.toml VERSION /app/\n\nRUN poetry config virtualenvs.create false \\\n  && poetry install --no-dev --no-interaction --no-ansi\n\nCOPY ./topo_processor /app/topo_processor\nCOPY ./upload /app/\n"
}