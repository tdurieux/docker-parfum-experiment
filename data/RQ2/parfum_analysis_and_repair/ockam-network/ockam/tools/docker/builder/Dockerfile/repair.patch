diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ockam-network/ockam/tools/docker/builder/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ockam-network/ockam/tools/docker/builder/Dockerfile/repaired.Dockerfile
index cba6bc1..59e5e5f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ockam-network/ockam/tools/docker/builder/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ockam-network/ockam/tools/docker/builder/Dockerfile/repaired.Dockerfile
@@ -49,7 +49,7 @@ RUN set -xe; \
     esac; \
 # Setup base tools
     apt-get update; \
-    DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes --no-install-recommends ca-certificates curl locales xz-utils; \
+    DEBIAN_FRONTEND=noninteractive apt-get -y install --assume-yes --no-install-recommends ca-certificates curl locales xz-utils; \
 # Setup locale
     LANG=en_US.UTF-8; \
     echo $LANG UTF-8 > /etc/locale.gen; \
@@ -57,7 +57,7 @@ RUN set -xe; \
     update-locale LANG=$LANG; \
 # Setup nodejs
     NODEJS_PACKAGE="node-v${NODEJS_VERSION}-${NODEJS_OS}.tar.xz"; \
-    curl --proto '=https' --tlsv1.2 -sSOL \
+    curl -f --proto '=https' --tlsv1.2 -sSOL \
       "https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-${NODEJS_OS}.tar.xz"; \
     echo "${NODEJS_SHA256}  ${NODEJS_PACKAGE}" | sha256sum -c -; \
     tar -xf "${NODEJS_PACKAGE}" -C /opt/; \
@@ -65,9 +65,9 @@ RUN set -xe; \
     rm -rf "${NODEJS_PACKAGE}"; \
 # Setup rust
     apt-get update; \
-    DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes \
+    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install --assume-yes \
       libssl-dev pkg-config procps qemu-system-arm libdbus-1-dev cmake; \
-    curl --proto '=https' --tlsv1.2 -sSOL \
+    curl -f --proto '=https' --tlsv1.2 -sSOL \
       "https://static.rust-lang.org/rustup/archive/${RUSTUP_INIT_VERSION}/${OS}/rustup-init"; \
     echo "${RUSTUP_INIT_SHA256}  rustup-init" | sha256sum -c -; \
     chmod +x rustup-init; \
@@ -84,18 +84,18 @@ RUN set -xe; \
     chmod -R a+w "$RUSTUP_HOME" "$CARGO_HOME"; \
 # Setup erlang
     apt-get update; \
-    DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes --no-install-recommends \
+    DEBIAN_FRONTEND=noninteractive apt-get -y install --assume-yes --no-install-recommends \
       libncurses5 libwxbase3.0-0v5 libwxgtk3.0-gtk3-0v5 libsctp1; \
     apt-get clean; \
     rm -rf /var/lib/apt/lists/*; \
     ERLANG_PACKAGE="esl-erlang_${ERLANG_VERSION}_${ERLANG_OS}.deb"; \
-    curl --proto '=https' --tlsv1.2 -sSOL "https://packages.erlang-solutions.com/erlang/debian/pool/${ERLANG_PACKAGE}"; \
+    curl -f --proto '=https' --tlsv1.2 -sSOL "https://packages.erlang-solutions.com/erlang/debian/pool/${ERLANG_PACKAGE}"; \
     echo "${ERLANG_SHA256}  ${ERLANG_PACKAGE}" | sha256sum -c -; \
     dpkg -i "${ERLANG_PACKAGE}"; \
     rm -rf "${ERLANG_PACKAGE}"; \
 # Setup elixir
     ELIXIR_PACKAGE="elixir_${ELIXIR_VERSION}_all.deb"; \
-    curl --proto '=https' --tlsv1.2 -sSOL "https://packages.erlang-solutions.com/erlang/debian/pool/${ELIXIR_PACKAGE}"; \
+    curl -f --proto '=https' --tlsv1.2 -sSOL "https://packages.erlang-solutions.com/erlang/debian/pool/${ELIXIR_PACKAGE}"; \
     echo "${ELIXIR_SHA256}  ${ELIXIR_PACKAGE}" | sha256sum -c; \
     dpkg -i "${ELIXIR_PACKAGE}"; \
     rm -rf "${ELIXIR_PACKAGE}"; \
@@ -104,7 +104,7 @@ RUN set -xe; \
     cd /tmp; \
     echo "${JDK_OS}"; \
     JAVA_PACKAGE="OpenJDK17U-jdk_${JDK_OS}_linux_hotspot_17.0.3_7.tar.gz"; \
-    curl --proto '=https' --tlsv1.2 -sSOL \
+    curl -f --proto '=https' --tlsv1.2 -sSOL \
       "https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.3%2B7/${JAVA_PACKAGE}"; \
     echo "${JDK_SHA256}  ${JAVA_PACKAGE}" | sha256sum -c; \
     mv "${JAVA_PACKAGE}" openjdk.tar.gz; \
@@ -114,23 +114,23 @@ RUN set -xe; \
     rm -rf /tmp/openjdk.tar.gz; \
 # Setup jq
     cd /tmp; \
-    curl --proto '=https' --tlsv1.2 -sSOL "https://github.com/stedolan/jq/releases/download/jq-1.6/jq-${JQ_OS}"; \
+    curl -f --proto '=https' --tlsv1.2 -sSOL "https://github.com/stedolan/jq/releases/download/jq-1.6/jq-${JQ_OS}"; \
     echo "${JQ_SHA256}  jq-${JQ_OS}" | sha256sum -c; \
     mv jq-${JQ_OS} /usr/bin/jq; \
     chmod +x /usr/bin/jq; \
 # Setup cosign
     cd /tmp; \
     COSIGN_PACKAGE="cosign-linux-${COSIGN_OS}"; \
-    curl --proto '=https' --tlsv1.2 -sSOL "https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/${COSIGN_PACKAGE}"; \
+    curl -f --proto '=https' --tlsv1.2 -sSOL "https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/${COSIGN_PACKAGE}"; \
     echo "${COSIGN_SHA256}  ${COSIGN_PACKAGE}" | sha256sum -c; \
     mv ${COSIGN_PACKAGE} /usr/bin/cosign; \
     chmod +x /usr/bin/cosign; \
 # Setup mold linker
     apt-get update; \
-    DEBIAN_FRONTEND=noninteractive apt-get install --assume-yes --no-install-recommends clang; \
+    DEBIAN_FRONTEND=noninteractive apt-get -y install --assume-yes --no-install-recommends clang; \
     cd /tmp; \
     MOLD_PACKAGE="mold-${MOLD_VERSION}-${MOLD_OS}.tar.gz"; \
-    curl --proto '=https' --tlsv1.2 -sSOL "https://github.com/rui314/mold/releases/download/v${MOLD_VERSION}/${MOLD_PACKAGE}"; \
+    curl -f --proto '=https' --tlsv1.2 -sSOL "https://github.com/rui314/mold/releases/download/v${MOLD_VERSION}/${MOLD_PACKAGE}"; \
     echo "${MOLD_SHA256}  ${MOLD_PACKAGE}" | sha256sum -c; \
     mkdir -p "${MOLD_HOME}"; \
     cd "${MOLD_HOME}"; \