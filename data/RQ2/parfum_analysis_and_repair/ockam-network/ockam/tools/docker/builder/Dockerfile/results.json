{
  "startTime": 1674252989511,
  "endTime": 1674252991014,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 106,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 86,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcc:11.2.0@sha256:0eaeaee298c154ecd383cabe5301a5df9fde0cd3a729124caf574500b936389b\n\nARG RUSTUP_INIT_VERSION=1.24.3\nARG RUST_VERSION=1.61.0\nARG ERLANG_VERSION=24.1.7-1~debian~buster\nARG ELIXIR_VERSION=1.12.2-1~debian~buster\nARG NODEJS_VERSION=16.13.1\nARG COSIGN_VERSION=1.9.0\nARG MOLD_VERSION=1.3.1\n\nARG ELIXIR_SHA256=5e8251c5d2557373ecfab986fa481844a2f659597abbfb623f45ad3a1974bb1f\n\nENV RUSTUP_HOME=/opt/rust/rustup \\\n    CARGO_HOME=/usr/rust/cargo \\\n    JAVA_HOME=/opt/java/openjdk \\\n    NODEJS_HOME=/opt/nodejs \\\n    MOLD_HOME=/opt/mold\n\nRUN set -xe; \\\n    case $(dpkg --print-architecture) in \\\n      \"amd64\") \\\n        echo \"Using AMD64\"; \\\n        COSIGN_SHA256=\"47e2596a38e619b72e736fd171eeeaadaf6bd22d6e87a767b339168a87b62761\" && COSIGN_OS=\"amd64\"; \\\n        RUSTUP_INIT_SHA256=\"3dc5ef50861ee18657f9db2eeb7392f9c2a6c95c90ab41e45ab4ca71476b4338\"; \\\n        NODEJS_SHA256=\"a3721f87cecc0b52b0be8587c20776ac7305db413751db02c55aa2bffac15198\" && NODEJS_OS=\"linux-x64\"; \\\n        ERLANG_SHA256=\"89c98e177f70593a9f64f3c9962393a51e6730d16071820600d19d4aaa732412\" && ERLANG_OS=\"amd64\"; \\\n        JDK_SHA256=\"81f5bed21077f9fbb04909b50391620c78b9a3c376593c0992934719c0de6b73\" && JDK_OS=\"x64\"; \\\n        JQ_SHA256=\"af986793a515d500ab2d35f8d2aecd656e764504b789b66d7e1a0b727a124c44\" && JQ_OS=\"linux64\"; \\\n        MOLD_SHA256=\"3893f89e5e0dcddcecc9f2ee17f14ad94fbf8b324eca45974b965353a50dac37\" && MOLD_OS=\"x86_64-linux\"; \\\n        OS=\"x86_64-unknown-linux-gnu\"; \\\n      ;; \\\n      \"arm64\") \\\n        export CARGO_NET_GIT_FETCH_WITH_CLI=true; \\\n        echo \"Using ARM64\"; \\\n        COSIGN_SHA256=\"abd7ec116dd7e7980f08e67d2c7478ae1cdc97adf778aff76d8a737a908670d8\" && COSIGN_OS=\"arm64\"; \\\n        RUSTUP_INIT_SHA256=\"32a1532f7cef072a667bac53f1a5542c99666c4071af0c9549795bbdb2069ec1\"; \\\n        NODEJS_SHA256=\"af1127594d6dae96d3f1d307174daa5084d9c9027eb6fc02548022257f4b0a6a\" && NODEJS_OS=\"linux-arm64\"; \\\n        ERLANG_SHA256=\"80e95df44cba03f9abefa54ab1452d97b9969a6d164792e827e59a1116377bbd\" && ERLANG_OS=\"arm64\"; \\\n        JDK_SHA256=\"2e3c19c1707205c6b90cc04b416e8d83078ed98417d5a69dce3cf7dc0d7cfbca\" && JDK_OS=\"aarch64\"; \\\n        JQ_SHA256=\"af986793a515d500ab2d35f8d2aecd656e764504b789b66d7e1a0b727a124c44\" && JQ_OS=\"linux64\"; \\\n        MOLD_SHA256=\"24ea75ada4337c5f509ad2eecf1a82d6047ab58c415a78374dfa7e6d69b06737\" && MOLD_OS=\"aarch64-linux\"; \\\n        OS=\"aarch64-unknown-linux-gnu\"; \\\n      ;; \\\n      *) \\\n        echo \"unknown arch:\" \\\n        uname -a; \\\n        exit 1; \\\n      ;; \\\n    esac; \\\n# Setup base tools\n    apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive apt-get -y install --assume-yes --no-install-recommends ca-certificates curl locales xz-utils; \\\n# Setup locale\n    LANG=en_US.UTF-8; \\\n    echo $LANG UTF-8 > /etc/locale.gen; \\\n    locale-gen; \\\n    update-locale LANG=$LANG; \\\n# Setup nodejs\n    NODEJS_PACKAGE=\"node-v${NODEJS_VERSION}-${NODEJS_OS}.tar.xz\"; \\\n    curl -f --proto '=https' --tlsv1.2 -sSOL \\\n      \"https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-${NODEJS_OS}.tar.xz\"; \\\n    echo \"${NODEJS_SHA256}  ${NODEJS_PACKAGE}\" | sha256sum -c -; \\\n    tar -xf \"${NODEJS_PACKAGE}\" -C /opt/; \\\n    mv \"/opt/node-v${NODEJS_VERSION}-${NODEJS_OS}\" \"${NODEJS_HOME}\"; \\\n    rm -rf \"${NODEJS_PACKAGE}\"; \\\n# Setup rust\n    apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install --assume-yes \\\n      libssl-dev pkg-config procps qemu-system-arm libdbus-1-dev cmake; \\\n    curl -f --proto '=https' --tlsv1.2 -sSOL \\\n      \"https://static.rust-lang.org/rustup/archive/${RUSTUP_INIT_VERSION}/${OS}/rustup-init\"; \\\n    echo \"${RUSTUP_INIT_SHA256}  rustup-init\" | sha256sum -c -; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --profile minimal \\\n      --default-toolchain \"$RUST_VERSION\" --default-host ${OS}; \\\n    rm rustup-init; \\\n    chmod -R a+w \"$RUSTUP_HOME\" \"$CARGO_HOME\"; \\\n    PATH=\"${RUSTUP_HOME}/bin:${CARGO_HOME}/bin:$PATH\"; \\\n    rustup component add rustfmt; \\\n    rustup install nightly; \\\n    rustup component add clippy; \\\n    cargo install --locked cargo-deny; \\\n    cargo install --locked cargo-nextest; \\\n    chmod -R a+w \"$RUSTUP_HOME\" \"$CARGO_HOME\"; \\\n# Setup erlang\n    apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive apt-get -y install --assume-yes --no-install-recommends \\\n      libncurses5 libwxbase3.0-0v5 libwxgtk3.0-gtk3-0v5 libsctp1; \\\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/*; \\\n    ERLANG_PACKAGE=\"esl-erlang_${ERLANG_VERSION}_${ERLANG_OS}.deb\"; \\\n    curl -f --proto '=https' --tlsv1.2 -sSOL \"https://packages.erlang-solutions.com/erlang/debian/pool/${ERLANG_PACKAGE}\"; \\\n    echo \"${ERLANG_SHA256}  ${ERLANG_PACKAGE}\" | sha256sum -c -; \\\n    dpkg -i \"${ERLANG_PACKAGE}\"; \\\n    rm -rf \"${ERLANG_PACKAGE}\"; \\\n# Setup elixir\n    ELIXIR_PACKAGE=\"elixir_${ELIXIR_VERSION}_all.deb\"; \\\n    curl -f --proto '=https' --tlsv1.2 -sSOL \"https://packages.erlang-solutions.com/erlang/debian/pool/${ELIXIR_PACKAGE}\"; \\\n    echo \"${ELIXIR_SHA256}  ${ELIXIR_PACKAGE}\" | sha256sum -c; \\\n    dpkg -i \"${ELIXIR_PACKAGE}\"; \\\n    rm -rf \"${ELIXIR_PACKAGE}\"; \\\n    mix local.hex --force && mix local.rebar --force; \\\n# Setup jdk\n    cd /tmp; \\\n    echo \"${JDK_OS}\"; \\\n    JAVA_PACKAGE=\"OpenJDK17U-jdk_${JDK_OS}_linux_hotspot_17.0.3_7.tar.gz\"; \\\n    curl -f --proto '=https' --tlsv1.2 -sSOL \\\n      \"https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.3%2B7/${JAVA_PACKAGE}\"; \\\n    echo \"${JDK_SHA256}  ${JAVA_PACKAGE}\" | sha256sum -c; \\\n    mv \"${JAVA_PACKAGE}\" openjdk.tar.gz; \\\n    mkdir -p \"${JAVA_HOME}\"; \\\n    cd \"${JAVA_HOME}\"; \\\n    tar -xf /tmp/openjdk.tar.gz --strip-components=1; \\\n    rm -rf /tmp/openjdk.tar.gz; \\\n# Setup jq\n    cd /tmp; \\\n    curl -f --proto '=https' --tlsv1.2 -sSOL \"https://github.com/stedolan/jq/releases/download/jq-1.6/jq-${JQ_OS}\"; \\\n    echo \"${JQ_SHA256}  jq-${JQ_OS}\" | sha256sum -c; \\\n    mv jq-${JQ_OS} /usr/bin/jq; \\\n    chmod +x /usr/bin/jq; \\\n# Setup cosign\n    cd /tmp; \\\n    COSIGN_PACKAGE=\"cosign-linux-${COSIGN_OS}\"; \\\n    curl -f --proto '=https' --tlsv1.2 -sSOL \"https://github.com/sigstore/cosign/releases/download/v${COSIGN_VERSION}/${COSIGN_PACKAGE}\"; \\\n    echo \"${COSIGN_SHA256}  ${COSIGN_PACKAGE}\" | sha256sum -c; \\\n    mv ${COSIGN_PACKAGE} /usr/bin/cosign; \\\n    chmod +x /usr/bin/cosign; \\\n# Setup mold linker\n    apt-get update; \\\n    DEBIAN_FRONTEND=noninteractive apt-get -y install --assume-yes --no-install-recommends clang; \\\n    cd /tmp; \\\n    MOLD_PACKAGE=\"mold-${MOLD_VERSION}-${MOLD_OS}.tar.gz\"; \\\n    curl -f --proto '=https' --tlsv1.2 -sSOL \"https://github.com/rui314/mold/releases/download/v${MOLD_VERSION}/${MOLD_PACKAGE}\"; \\\n    echo \"${MOLD_SHA256}  ${MOLD_PACKAGE}\" | sha256sum -c; \\\n    mkdir -p \"${MOLD_HOME}\"; \\\n    cd \"${MOLD_HOME}\"; \\\n    tar -xf /tmp/${MOLD_PACKAGE} --strip-components=1; \\\n    rm -rf /tmp/${MOLD_PACKAGE}; \\\n    chown -Rh root:root ${MOLD_HOME}/*; \\\n# Cleanup\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/*\n\nENV PATH=\"${JAVA_HOME}/bin:${RUSTUP_HOME}/bin:${CARGO_HOME}/bin:${CMAKE_HOME}/bin:${NODEJS_HOME}/bin:${MOLD_HOME}/bin:$PATH\" \\\n    AR=/usr/bin/ar \\\n    AS=/usr/bin/as \\\n    CC=/usr/local/bin/gcc \\\n    CPP=/usr/local/bin/cpp \\\n    CXX=/usr/local/bin/g++ \\\n    LANG=en_US.UTF-8\n\nWORKDIR /work\n"
}