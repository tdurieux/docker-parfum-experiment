{
  "startTime": 1674250229551,
  "endTime": 1674250230330,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine AS base\n\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV PATH \"$PATH:/app\"\nENTRYPOINT [\"pingg\"]\n# Default-Gateway is hard to determine inside docker, so omit it by default\nCMD [\"8.8.8.8\", \"1.1.1.1\"]\n\n# Create app directory\nRUN mkdir /app\nWORKDIR /app\n\n# Install updates\nRUN apk upgrade --no-cache\n\nCOPY package.json \\\n     package-lock.json \\\n     /app/\n\n# Install build dependencies\nFROM base AS build\nRUN apk add --no-cache linux-headers git python3 make g++\n\n# HACK: to get netutils working\nRUN ln -s /usr/include/linux/sysctl.h /usr/include/sys/\n\n# Install app dependencies\nRUN npm install --production && npm cache clean --force;\n\n# Make app image\nFROM base\nCOPY --from=build /app/node_modules /app/node_modules\nCOPY pingg ts.js /app/\n"
}