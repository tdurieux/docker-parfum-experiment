{
  "startTime": 1674216843290,
  "endTime": 1674216843877,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# build environment\nFROM node:17-alpine as react-build\nRUN apk update && apk upgrade\nWORKDIR /app\nCOPY . ./\nRUN yarn clean && yarn cache clean;\nRUN yarn && yarn cache clean;\nRUN yarn build && yarn cache clean;\n\n# server environment\nFROM nginx:alpine\nCOPY nginx.conf /etc/nginx/conf.d/configfile.template\nENV PORT 8080\nENV HOST 0.0.0.0\nRUN sh -c \"envsubst '\\$PORT'  < /etc/nginx/conf.d/configfile.template > /etc/nginx/conf.d/default.conf\"\nCOPY --from=react-build /app/build /usr/share/nginx/html\n\nEXPOSE 8080\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}