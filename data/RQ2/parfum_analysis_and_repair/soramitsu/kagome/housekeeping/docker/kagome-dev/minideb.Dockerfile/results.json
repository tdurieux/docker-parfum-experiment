{
  "startTime": 1674252859684,
  "endTime": 1674252860553,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 62,
        "columnEnd": 125
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bitnami/minideb:bullseye\n\nMAINTAINER Vladimir Shcherba <abrehchs@gmail.com>\n\n# add some required tools\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        gpg \\\n        gpg-agent \\\n        wget \\\n        vim \\\n        python3 \\\n        python3-pip \\\n        python3-setuptools \\\n        software-properties-common \\\n        curl && \\\n        rm -rf /var/lib/apt/lists/*\n\n# add repos for llvm and newer gcc and install docker\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \\\n    echo \\\n      \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n      bullseye stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n        docker-ce \\\n        docker-ce-cli \\\n        containerd.io \\\n        build-essential \\\n        gcc-9 \\\n        g++-9 \\\n        llvm-10-dev \\\n        clang-10 \\\n        clang-tidy-10 \\\n        clang-format-10 \\\n        make \\\n        git \\\n        ccache \\\n        lcov \\\n        zlib1g-dev \\\n        unzip && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install rustc\nENV RUST_VERSION=nightly-2021-10-04\nENV RUSTUP_HOME=/root/.rustup\nENV CARGO_HOME=/root/.cargo\nENV PATH=\"${CARGO_HOME}/bin:${PATH}\"\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain ${RUST_VERSION} && \\\n    rustup default ${RUST_VERSION}\n\n# install cmake and dev dependencies\nRUN python3 -m pip install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir cmake scikit-build requests gitpython gcovr pyyaml\n\n# install sonar cli\nENV SONAR_CLI_VERSION=4.1.0.1829\nRUN set -e; \\\n    mkdir -p /opt/sonar; \\\n    curl -f -L -o /tmp/sonar.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_CLI_VERSION}-linux.zip; \\\n    unzip -o -d /tmp/sonar-scanner /tmp/sonar.zip; \\\n    mv /tmp/sonar-scanner/sonar-scanner-${SONAR_CLI_VERSION}-linux /opt/sonar/scanner; \\\n    ln -s -f /opt/sonar/scanner/bin/sonar-scanner /usr/local/bin/sonar-scanner; \\\n    rm -rf /tmp/sonar*\n\n# set env\nENV LLVM_ROOT=/usr/lib/llvm-10\nENV LLVM_DIR=/usr/lib/llvm-10/lib/cmake/llvm/\nENV PATH=${LLVM_ROOT}/bin:${LLVM_ROOT}/share/clang:${PATH}\nENV CC=gcc-9\nENV CXX=g++-9\n\n# set default compilers and tools\nRUN update-alternatives --install /usr/bin/python       python       /usr/bin/python3               90 && \\\n    update-alternatives --install /usr/bin/clang-tidy   clang-tidy   /usr/bin/clang-tidy-10         90 && \\\n    update-alternatives --install /usr/bin/clang-format clang-format /usr/bin/clang-format-10       90 && \\\n    update-alternatives --install /usr/bin/clang        clang        /usr/lib/llvm-10/bin/clang-10  90 && \\\n    update-alternatives --install /usr/bin/clang++      clang++      /usr/bin/clang++-10            90 && \\\n    update-alternatives --install /usr/bin/gcc          gcc          /usr/bin/gcc-9                 90 && \\\n    update-alternatives --install /usr/bin/g++          g++          /usr/bin/g++-9                 90 && \\\n    update-alternatives --install /usr/bin/gcov         gcov         /usr/bin/gcov-9                90\n"
}