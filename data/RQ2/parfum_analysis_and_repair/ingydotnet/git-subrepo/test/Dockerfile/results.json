{
  "startTime": 1674249549439,
  "endTime": 1674249550835,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        bison \\\n        build-essential \\\n        git \\\n        vim \\\n        wget \\\n && true && rm -rf /var/lib/apt/lists/*;\n\n# Install shellcheck-0.7.1\nRUN cd /root \\\n && wget https://github.com/koalaman/shellcheck/releases/download/v0.7.1/shellcheck-v0.7.1.linux.x86_64.tar.xz \\\n && tar xf shellcheck-v0.7.1.linux.x86_64.tar.xz \\\n && mv shellcheck-v0.7.1/shellcheck /usr/local/bin/ \\\n && rm -fr shellcheck* \\\n && true && rm shellcheck-v0.7.1.linux.x86_64.tar.xz\n\n# Build/install bash-3.2.57\nRUN cd /root \\\n && wget https://ftp.gnu.org/gnu/bash/bash-3.2.57.tar.gz \\\n && tar -xzf bash-3.2.57.tar.gz \\\n && cd bash-3.2.57 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/bash-3.2 \\\n && make \\\n && make install \\\n && rm -fr bash* \\\n && true && rm bash-3.2.57.tar.gz\n\n# Buil/install bash-4.0\nRUN cd /root \\\n && wget https://ftp.gnu.org/gnu/bash/bash-4.0.tar.gz \\\n && tar -xzf bash-4.0.tar.gz \\\n && cd bash-4.0 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/bash-4.0 \\\n && make \\\n && make install \\\n && rm -fr bash* \\\n && true && rm bash-4.0.tar.gz\n\n# Buil/install bash-4.1\nRUN cd /root \\\n && wget https://ftp.gnu.org/gnu/bash/bash-4.1.tar.gz \\\n && tar -xzf bash-4.1.tar.gz \\\n && cd bash-4.1 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/bash-4.1 \\\n && make \\\n && make install \\\n && rm -fr bash* \\\n && true && rm bash-4.1.tar.gz\n\n# Buil/install bash-4.2\nRUN cd /root \\\n && wget https://ftp.gnu.org/gnu/bash/bash-4.2.tar.gz \\\n && tar -xzf bash-4.2.tar.gz \\\n && cd bash-4.2 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/bash-4.2 \\\n && make \\\n && make install \\\n && rm -fr bash* \\\n && true && rm bash-4.2.tar.gz\n\n# Buil/install bash-4.3\nRUN cd /root \\\n && wget https://ftp.gnu.org/gnu/bash/bash-4.3.tar.gz \\\n && tar -xzf bash-4.3.tar.gz \\\n && cd bash-4.3 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/bash-4.3 \\\n && make \\\n && make install \\\n && rm -fr bash* \\\n && true && rm bash-4.3.tar.gz\n\n# Buil/install bash-4.4\nRUN cd /root \\\n && wget https://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz \\\n && tar -xzf bash-4.4.tar.gz \\\n && cd bash-4.4 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/bash-4.4 \\\n && make \\\n && make install \\\n && rm -fr bash* \\\n && true && rm bash-4.4.tar.gz\n\n# Buil/install bash-5.0\nRUN cd /root \\\n && wget https://ftp.gnu.org/gnu/bash/bash-5.0.tar.gz \\\n && tar -xzf bash-5.0.tar.gz \\\n && cd bash-5.0 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/bash-5.0 \\\n && make \\\n && make install \\\n && rm -fr bash* \\\n && true && rm bash-5.0.tar.gz\n\n# Buil/install bash-5.1-rc1\nRUN cd /root \\\n && wget https://ftp.gnu.org/gnu/bash/bash-5.1-rc1.tar.gz \\\n && tar -xzf bash-5.1-rc1.tar.gz \\\n && cd bash-5.1-rc1 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/bash-5.1 \\\n && make \\\n && make install \\\n && rm -fr bash* \\\n && true && rm bash-5.1-rc1.tar.gz\n\nRUN git config --global user.email \"you@example.com\" \\\n && git config --global user.name \"Your Name\" \\\n && true\n"
}