{
  "startTime": 1674219087662,
  "endTime": 1674219088992,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.10\n\n# Adding trusting keys to apt for repositories\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\n\n# Add Chrome to the repositories\nRUN sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list'\n\n# Install Chrome\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n# Install xvfb (virtual desktop) so Chrome can run in non-headless mode\nRUN apt-get install --no-install-recommends -y xvfb && rm -rf /var/lib/apt/lists/*;\n\n# Install Unzip\n#RUN apt-get install -yqq unzip\n\n# Download Chrome Driver\n#RUN wget -O /tmp/chromedriver.zip http://chromedriver.storage.googleapis.com/`curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE`/chromedriver_linux64.zip\n\n# Unzip Chrome Driver into /usr/local/bin directory\n#RUN unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/\n\n# Set display port as an environment variable\nENV DISPLAY=:99\n\n# Add the script\nRUN mkdir /app\nWORKDIR /app\n\n# Install needed Python libraries\nCOPY requirements.txt /app\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Add the script\nCOPY lootscraper.py /app\nCOPY config.default.ini /app\nCOPY alembic.ini /app\nCOPY app /app/app\nCOPY alembic /app/alembic\nCOPY js /app/js\n\n# Run the script\nCMD [ \"python\", \"lootscraper.py\", \"--docker\" ]\n\nVOLUME /data\n"
}