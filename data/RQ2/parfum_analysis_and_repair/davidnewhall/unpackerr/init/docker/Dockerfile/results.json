{
  "startTime": 1674254335800,
  "endTime": 1674254336506,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This is part of Application Builder.\n# https://github.com/golift/application-builder\n#\n\nARG BUILD_DATE=0\nARG COMMIT=0\nARG VERSION=unknown\nARG BINARY=application-builder\n\nFROM golang:latest as builder\nARG TARGETOS\nARG BINARY\nARG TARGETARCH\n\nRUN mkdir -p $GOPATH/pkg/mod $GOPATH/bin $GOPATH/src /${BINARY}\nCOPY . /${BINARY}\nWORKDIR /${BINARY}\n\nRUN apt update && \\\n    apt install --no-install-recommends -y tzdata && \\\n    CGO_ENABLED=0 make ${BINARY}.${TARGETARCH}.${TARGETOS} && rm -rf /var/lib/apt/lists/*;\n\nFROM scratch\nARG TARGETOS\nARG BUILD_DATE\nARG COMMIT\nARG TARGETARCH\nARG VERSION\nARG LICENSE=MIT\nARG BINARY\nARG SOURCE_URL=http://github.com/golift/application-builder\nARG DESC=application-builder\nARG VENDOR=golift\nARG AUTHOR=golift\nARG CONFIG_FILE=config.conf\n\n# Build-time metadata as defined at https://github.com/opencontainers/image-spec/blob/master/annotations.md\nLABEL org.opencontainers.image.created=\"${BUILD_DATE}\" \\\n      org.opencontainers.image.title=\"${BINARY}\" \\\n      org.opencontainers.image.documentation=\"${SOURCE_URL}/wiki/Docker\" \\\n      org.opencontainers.image.description=\"${DESC}\" \\\n      org.opencontainers.image.url=\"${SOURCE_URL}\" \\\n      org.opencontainers.image.revision=\"${COMMIT}\" \\\n      org.opencontainers.image.source=\"${SOURCE_URL}\" \\\n      org.opencontainers.image.vendor=\"${VENDOR}\" \\\n      org.opencontainers.image.authors=\"${AUTHOR}\" \\\n      org.opencontainers.image.architecture=\"${TARGETOS} ${TARGETARCH}\" \\\n      org.opencontainers.image.licenses=\"${LICENSE}\" \\\n      org.opencontainers.image.version=\"${VERSION}\"\n\nCOPY --from=builder /${BINARY}/${BINARY}.${TARGETARCH}.${TARGETOS} /image\n# COPY --from=builder /${BINARY}/examples/${CONFIG_FILE}.example /etc/${BINARY}/${CONFIG_FILE}\n\n# Make sure we have an ssl cert chain and timezone data.\nCOPY --from=builder /etc/ssl /etc/ssl\nCOPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo\n\nENV TZ=UTC\n\nENTRYPOINT [ \"/image\" ]\n"
}