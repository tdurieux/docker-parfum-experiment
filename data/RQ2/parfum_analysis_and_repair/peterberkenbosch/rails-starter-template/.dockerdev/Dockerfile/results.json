{
  "startTime": 1674251221311,
  "endTime": 1674251222407,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUBY_VERSION\nARG DISTRO_NAME=bullseye\n\nFROM ruby:$RUBY_VERSION-slim-$DISTRO_NAME\n\nARG DISTRO_NAME\n\nRUN apt-get update -qq \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    gnupg2 \\\n    curl \\\n    less \\\n    git \\\n  && apt-get clean \\\n  && rm -rf /var/cache/apt/archives/* \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n  && truncate -s 0 /var/log/*log\n\nARG PG_MAJOR\nRUN curl -f -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && echo deb http://apt.postgresql.org/pub/repos/apt/ $DISTRO_NAME-pgdg main $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \\\n  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    libpq-dev \\\n    postgresql-client-$PG_MAJOR \\\n    && apt-get clean \\\n    && rm -rf /var/cache/apt/archives/* \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && truncate -s 0 /var/log/*log\n\nARG NODE_MAJOR\nRUN curl -f -sL https://deb.nodesource.com/setup_$NODE_MAJOR.x | bash -\nRUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \\\n  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    nodejs \\\n    && apt-get clean \\\n    && rm -rf /var/cache/apt/archives/* \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n    && truncate -s 0 /var/log/*log\n\nARG YARN_VERSION=latest\nRUN npm install -g yarn@$YARN_VERSION && npm cache clean --force;\n\n# Application dependencies\n# External Aptfile for that\nCOPY Aptfile /tmp/Aptfile\nRUN apt-get update -qq && DEBIAN_FRONTEND=noninteractive apt-get -yq dist-upgrade && \\\n  DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    $(grep -Ev '^\\s*#' /tmp/Aptfile | xargs) && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    truncate -s 0 /var/log/*log\n\n# Configure bundler\nENV LANG=C.UTF-8 \\\n  BUNDLE_JOBS=4 \\\n  BUNDLE_RETRY=3\n\n# Store Bundler settings in the project's root\nENV BUNDLE_APP_CONFIG=.bundle\n\n# Upgrade RubyGems and install latest Bundler\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && \\\n    gem install bundler && rm -rf /root/.gem;\n\n# Create a directory for the app code\nRUN mkdir -p /app\nWORKDIR /app\n\n# Document that we're going to expose port 3000\nEXPOSE 3000\n# Use Bash as the default command\nCMD [\"/usr/bin/bash\"]\n"
}