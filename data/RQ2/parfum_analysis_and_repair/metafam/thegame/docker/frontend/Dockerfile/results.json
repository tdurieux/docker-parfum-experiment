{
  "startTime": 1674220201591,
  "endTime": 1674220202667,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 40,
        "columnEnd": 56
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 36,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 83,
        "columnEnd": 99
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-slim as base\nWORKDIR /usr/src/app\n\n# Install dependencies not included in the slim image\nRUN apt-get update && apt-get install -y --no-install-recommends g++ make python git ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies for dev and prod\nCOPY package.json .\nCOPY lerna.json .\nCOPY yarn.lock .\nCOPY schema.graphql .\nCOPY tsconfig.base.json .\nCOPY tsconfig.json .\nCOPY packages/web/*.json ./packages/web/\nCOPY packages/web/codegen.yml ./packages/web/\nCOPY packages/web/graphql ./packages/web/graphql/\nCOPY packages/utils/*.json ./packages/utils/\nCOPY packages/design-system/*.json ./packages/design-system/\n\nRUN yarn policies set-version 1.15.2 && yarn cache clean;\nRUN yarn install --pure-lockfile && yarn cache clean;\n\n# Dev environment doesn't run this stage or beyond\nFROM base as build\n\n# Copy source files\nCOPY packages/web ./packages/web/\nCOPY packages/utils ./packages/utils/\nCOPY packages/design-system ./packages/design-system/\nCOPY packages/@types ./packages/@types/\n\n# Set env vars\nARG GRAPHQL_HOST=hasura\nARG GRAPHQL_DOMAIN=onrender.com\nARG GRAPHQL_URL=https://$GRAPHQL_HOST.$GRAPHQL_DOMAIN/v1/graphql\n\nENV NEXT_PUBLIC_GRAPHQL_URL $GRAPHQL_URL\n\nARG NEXT_PUBLIC_FRONTEND_URL\nARG NEXT_PUBLIC_YOUTUBE_API_KEY\nARG NEXT_PUBLIC_GA4_ID\n\n# Build\nRUN yarn web:build && yarn cache clean;\n\n# Delete devDependencies\nRUN yarn install --pure-lockfile --production --ignore-scripts --prefer-offline && yarn cache clean;\n\n# Create completely new stage including only necessary files\nFROM node:16-alpine as app\nWORKDIR /app\n\n# Copy necessary files into the stage\nCOPY --from=build /usr/src/app/package.json ./package.json\nCOPY --from=build /usr/src/app/node_modules ./node_modules\n\nCOPY --from=build /usr/src/app/packages/web/package.json ./packages/web/package.json\nCOPY --from=build /usr/src/app/packages/web/public ./packages/web/public\nCOPY --from=build /usr/src/app/packages/web/.next ./packages/web/.next\n\nCOPY --from=build /usr/src/app/packages/utils/package.json ./packages/utils/package.json\nCOPY --from=build /usr/src/app/packages/utils/dist ./packages/utils/dist\nCOPY --from=build /usr/src/app/packages/utils/node_modules ./packages/utils/node_modules\n\nCOPY --from=build /usr/src/app/packages/design-system/package.json ./packages/design-system/package.json\nCOPY --from=build /usr/src/app/packages/design-system/dist ./packages/design-system/dist\n\nCMD [ \"yarn\", \"web\", \"start\" ]\n"
}