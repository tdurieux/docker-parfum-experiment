{
  "startTime": 1674216860255,
  "endTime": 1674216862764,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 36,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 30,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 83,
        "columnEnd": 99
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-slim as base\nWORKDIR /usr/src/app\n\n# Install dependencies not included in the slim image\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends g++ make python git openssl && \\\n    apt-get install -y --no-install-recommends --reinstall ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies for dev and prod\nCOPY package.json .\nCOPY lerna.json .\nCOPY yarn.lock .\nCOPY schema.graphql .\nCOPY tsconfig.base.json .\nCOPY packages/discord-bot/*.json ./packages/discord-bot/\nCOPY packages/utils/*.json ./packages/utils/\n\nRUN yarn install --pure-lockfile && yarn cache clean;\n\n# Dev environment doesn't run this stage or beyond\nFROM base as build\n\n# Copy source files\nCOPY packages/discord-bot ./packages/discord-bot/\nCOPY packages/utils ./packages/utils/\nCOPY packages/@types ./packages/@types/\n\n# Set env vars\nARG GRAPHQL_HOST\n\nENV GRAPHQL_URL https://$GRAPHQL_HOST.onrender.com/v1/graphql\nENV HASURA_GRAPHQL_ADMIN_SECRET metagame_secret\n\n# Build\nRUN yarn discord-bot build && yarn cache clean;\n\n# Delete devDependencies\nRUN yarn install --pure-lockfile --production --ignore-scripts --prefer-offline && yarn cache clean;\n\n# Create completely new stage including only necessary files\nFROM node:16-alpine as app\nWORKDIR /app\n\n# Needed at runtime\nENV RUNTIME_ENV docker\n\n# Copy necessary files into the stage\nCOPY --from=build /usr/src/app/package.json ./package.json\nCOPY --from=build /usr/src/app/node_modules ./node_modules\n\nCOPY --from=build /usr/src/app/packages/discord-bot/package.json ./packages/discord-bot/package.json\nCOPY --from=build /usr/src/app/packages/discord-bot/dist ./packages/discord-bot/dist\n\nCOPY --from=build /usr/src/app/packages/utils/package.json ./packages/utils/package.json\nCOPY --from=build /usr/src/app/packages/utils/dist ./packages/utils/dist\nCOPY --from=build /usr/src/app/packages/utils/node_modules ./packages/utils/node_modules\n\nCMD [ \"yarn\", \"discord-bot\", \"start\" ]\n"
}