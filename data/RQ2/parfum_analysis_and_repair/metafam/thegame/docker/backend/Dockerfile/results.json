{
  "startTime": 1674248331924,
  "endTime": 1674248333079,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-slim as base\nWORKDIR /usr/src/app\n\n# Install dependencies not included in the slim image\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends g++ make python git openssl && \\\n    apt-get install -y --no-install-recommends --reinstall ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies for dev and prod\nCOPY package.json .\nCOPY lerna.json .\nCOPY yarn.lock .\nCOPY schema.graphql .\nCOPY tsconfig.base.json .\nCOPY packages/backend/*.json ./packages/backend/\nCOPY packages/utils/*.json ./packages/utils/\nCOPY packages/discord-bot/*.json ./packages/discord-bot/\n\nRUN yarn install --pure-lockfile && yarn cache clean;\n\n# Dev environment doesn't run this stage or beyond\nFROM base as build\n\n# Copy source files\nCOPY packages/backend ./packages/backend/\nCOPY packages/utils ./packages/utils/\nCOPY packages/discord-bot ./packages/discord-bot/\nCOPY packages/@types ./packages/@types/\n\n# Set env vars\nARG GRAPHQL_HOST=hasura\nARG GRAPHQL_DOMAIN=onrender.com\nARG GRAPHQL_URL=https://$GRAPHQL_HOST.$GRAPHQL_DOMAIN/v1/graphql\n\nENV GRAPHQL_URL $GRAPHQL_URL\nENV HASURA_GRAPHQL_ADMIN_SECRET metagame_secret\nENV CERAMIC_URL https://ceramic.metagame.wtf\n\n# Build\nRUN yarn backend:build\n\n# Delete devDependencies\nRUN yarn install --pure-lockfile --production --ignore-scripts --prefer-offline && yarn cache clean;\n\n# Create completely new stage including only necessary files\nFROM node:16-alpine as app\nWORKDIR /app\n\n# Copy necessary files into the stage\nCOPY --from=build /usr/src/app/package.json ./package.json\nCOPY --from=build /usr/src/app/node_modules ./node_modules\n\nCOPY --from=build /usr/src/app/packages/backend/package.json ./packages/backend/package.json\nCOPY --from=build /usr/src/app/packages/backend/tsconfig-paths-bootstrap.js ./packages/backend/tsconfig-paths-bootstrap.js\nCOPY --from=build /usr/src/app/packages/backend/dist ./packages/backend/dist\nCOPY --from=build /usr/src/app/packages/backend/node_modules ./packages/backend/node_modules\n\nCOPY --from=build /usr/src/app/packages/utils/package.json ./packages/utils/package.json\nCOPY --from=build /usr/src/app/packages/utils/dist ./packages/utils/dist\nCOPY --from=build /usr/src/app/packages/utils/node_modules ./packages/utils/node_modules\n\nCOPY --from=build /usr/src/app/packages/discord-bot/package.json ./packages/discord-bot/package.json\nCOPY --from=build /usr/src/app/packages/discord-bot/dist ./packages/discord-bot/dist\n\nCMD [ \"yarn\", \"backend\", \"start\" ]\n"
}