{
  "startTime": 1674250390667,
  "endTime": 1674250391644,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 1,
        "columnEnd": 61
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 1,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV PATH=\"/usr/lib/ccache:/usr/local/gcc-arm-none-eabi-7-2018-q2-update/bin:$PATH\"\nENV CCACHE_DIR=\"/ccache/ubuntu-18.04-no-v8\"\n\nARG DEBIAN_FRONTEND=noninteractive\n# apt-key will warn to not parse its output if not set\nARG APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\n\n# unzip is required for luarocks\nRUN set -xe; \\\n\tapt-get update; \\\n\tDEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n\t\tprotobuf-compiler libprotobuf-dev qtbase5-dev libqt5opengl5-dev libsdl2-dev libusb-1.0-0-dev \\\n\t\tcmake ninja-build ccache g++ python3 \\\n\t\tluarocks unzip \\\n\t\tca-certificates curl apt-transport-https gnupg \\\n\t\tgit git-lfs; \\\n\tgit lfs install; \\\n\t# Setup NodeJS \\\n\tcurl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -; \\\n\techo 'deb https://deb.nodesource.com/node_12.x bionic main' > /etc/apt/sources.list.d/nodesource.list; \\\n\techo 'deb-src https://deb.nodesource.com/node_12.x bionic main' >> /etc/apt/sources.list.d/nodesource.list; \\\n\tapt-get update; \\\n\tDEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends nodejs; \\\n\t# Cleanup APT \\\n\tapt-get clean; \\\n\trm -rf /var/lib/apt/lists/* ; \\\n\t# Setup linters \\\n\tluarocks install luacheck; \\\n\tnpm install -g tslint@6.1.1 typescript@3.8.3; npm cache clean --force; \\\n\t# Setup ARM GCC \\\n\twget -q https://developer.arm.com/-/media/Files/downloads/gnu-rm/7-2018q2/gcc-arm-none-eabi-7-2018-q2-update-linux.tar.bz2 -O gcc-arm.tbz2; \\\n\techo 299ebd3f1c2c90930d28ab82e5d8d6c0 gcc-arm.tbz2 > arm.md5; \\\n\tmd5sum -c arm.md5; \\\n\ttar -xf gcc-arm.tbz2 -C /usr/local ; \\\n\trm gcc-arm.tbz2 arm.md5; \\\n\t# ccache seems to not automatically cover cc/c++ and arm compilers \\\n\tln -s ../../bin/ccache /usr/lib/ccache/cc ; \\\n\tln -s ../../bin/ccache /usr/lib/ccache/c++ ; \\\n\tln -s ../../bin/ccache /usr/lib/ccache/arm-none-eabi-gcc ; \\\n\tln -s ../../bin/ccache /usr/lib/ccache/arm-none-eabi-g++ ;\n"
}