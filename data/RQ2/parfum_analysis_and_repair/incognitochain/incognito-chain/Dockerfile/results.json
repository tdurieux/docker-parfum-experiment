{
  "startTime": 1674255427217,
  "endTime": 1674255427667,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "# FROM golang:1.14-alpine as builder\n\n# RUN apk add --no-cache make gcc musl-dev linux-headers git\n\n# ADD . /incognitochain\n# RUN cd /incognitochain && make build\n\n# # Bring Incognito bin file into a second stage deploy alpine container\n# FROM ubuntu:16.04\n\n# WORKDIR /incognitochain\n# RUN apt-get update\n# RUN apt-get install -y ca-certificates cronolog cron\n# RUN apt-get install -y dnsutils\n\n# COPY ./removeoldlog /etc/cron.d/removeoldlog\n# RUN chmod 0644 /etc/cron.d/removeoldlog\n# RUN crontab /etc/cron.d/removeoldlog\n\n# ARG commit=commit\n# ENV commit=$commit\n\n# #COPY --from=builder /incognitochain/incognito /usr/local/bin/\n# COPY --from=builder /incognitochain/incognito /incognitochain\n# COPY --from=builder /incognitochain/priv2.json /incognitochain/\n# COPY --from=builder /incognitochain/whitelist.json /incognitochain/\n# COPY --from=builder /incognitochain/config/ /incognitochain/config/\n# COPY --from=builder /incognitochain/run_incognito.sh /incognitochain/\n\n# RUN chmod +x /incognitochain/run_incognito.sh\n# CMD [\"/bin/bash\",\"run_incognito.sh\"]\n\nFROM ubuntu:16.04\n\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y ca-certificates cronolog cron && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y dnsutils && rm -rf /var/lib/apt/lists/*;\n\n\nCOPY ./removeoldlog /etc/cron.d/removeoldlog\nRUN chmod 0644 /etc/cron.d/removeoldlog\nRUN crontab /etc/cron.d/removeoldlog\n\nARG commit=commit\nENV commit=$commit\n\n\nCOPY ./incognito /\nRUN chmod +x /incognito\n\nCOPY ./priv2.json /\nCOPY ./whitelist.json /\nCOPY ./config/ /config\nCOPY ./run_incognito.sh /\n\nRUN mkdir /utility\n\nCMD [\"/bin/bash\",\"run_incognito.sh\"]\n\nARG commit=commit\nENV commit=$commit\n\nCOPY ./incognito /\nRUN chmod +x /incognito\n"
}