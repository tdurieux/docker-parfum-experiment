{
  "startTime": 1674247918469,
  "endTime": 1674247919329,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine3.11\n\nWORKDIR /app\n\n# build audiowaveform from source\n\nRUN apk add --no-cache git make cmake gcc g++ libmad-dev libid3tag-dev libsndfile-dev gd-dev boost-dev libgd libpng-dev zlib-dev opus-dev\nRUN apk add --no-cache zlib-static libpng-static boost-static\n\nRUN apk add --no-cache autoconf automake libtool gettext\nRUN wget https://github.com/xiph/flac/archive/1.3.3.tar.gz\nRUN tar xzf 1.3.3.tar.gz && rm 1.3.3.tar.gz\nRUN cd flac-1.3.3/ && ./autogen.sh\nRUN cd flac-1.3.3/ && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared=no\nRUN cd flac-1.3.3/ && make\nRUN cd flac-1.3.3/ && make install\n\nRUN git clone https://github.com/bbc/audiowaveform.git\nRUN mkdir audiowaveform/build/\nRUN cd audiowaveform/build/ && cmake -D ENABLE_TESTS=0 -D BUILD_STATIC=1 ..\nRUN cd audiowaveform/build/ && make\nRUN cd audiowaveform/build/ && make install\n\n# install chromium\nRUN apk add --no-cache \\\n    chromium \\\n    nss \\\n    freetype \\\n    freetype-dev \\\n    harfbuzz \\\n    ca-certificates \\\n    ttf-freefont\n\n# Tell Puppeteer to skip installing Chrome. We'll be using the installed package.\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \\\n    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser\n\n# install other requirements\n\nRUN apk add --no-cache graphicsmagick ffmpeg ffmpeg-dev ghostscript\n\n# install node package\n\nCOPY package*.json ./\nRUN npm install && npm cache clean --force;\nCOPY . .\n\n# start app\n\nEXPOSE 9666\nCMD [\"node\", \"spacedeck.js\"]\n\n"
}