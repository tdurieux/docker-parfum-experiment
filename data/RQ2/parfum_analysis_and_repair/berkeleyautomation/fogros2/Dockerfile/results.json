{
  "startTime": 1674215503763,
  "endTime": 1674215504632,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 18,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU_DISTRO=jammy\nARG ROS_DISTRO=rolling\nFROM ubuntu:${UBUNTU_DISTRO}\n\n# Set up install, set tzdata\nARG UBUNTU_DISTRO\nARG ROS_DISTRO\nENV TZ=America/Vancouver\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# Get ROS key\nRUN apt update && apt install --no-install-recommends -y curl gnupg2 lsb-release && \\\n    curl -f -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && rm -rf /var/lib/apt/lists/*;\n\n# Install apt deps\nRUN echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu ${UBUNTU_DISTRO} main\" | tee /etc/apt/sources.list.d/ros2.list > /dev/null\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y \\\n  ros-${ROS_DISTRO}-desktop \\\n  ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \\\n  iproute2 \\\n  net-tools \\\n  python3-colcon-common-extensions \\\n  python3-pip \\\n  unzip \\\n  wireguard && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\n\n# Install AWS dep\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nRUN unzip awscliv2.zip && rm awscliv2.zip\nRUN ./aws/install\n\n# Install python deps\nRUN python3 -m pip install --no-cache-dir -U boto3 paramiko scp wgconfig\n\n# Create FogROS2 worspace and build it\nENV ROS_WS=/home/root/fog_ws\nRUN mkdir -p ${ROS_WS}/src\nWORKDIR ${ROS_WS}/src\nCOPY .  ${ROS_WS}/src/\nWORKDIR ${ROS_WS}\nRUN . /opt/ros/${ROS_DISTRO}/setup.sh && \\\n      colcon build --cmake-clean-cache\n\n# setup entrypoint\nENV ROS_DISTRO=${ROS_DISTRO}\nCOPY ./ros_entrypoint.sh /\nRUN chmod +x /ros_entrypoint.sh\n\nENTRYPOINT [ \"/ros_entrypoint.sh\" ]\nCMD [\"bash\"]\n"
}