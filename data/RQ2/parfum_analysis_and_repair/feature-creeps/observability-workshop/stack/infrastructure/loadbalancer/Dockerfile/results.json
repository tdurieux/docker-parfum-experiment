{
  "startTime": 1674254819811,
  "endTime": 1674254820556,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 106
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian\n\nRUN apt update && apt install --no-install-recommends --reinstall git gcc libpcre3 libpcre3-dev zlibc zlib1g zlib1g-dev libssl-ocaml-dev make -y && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/nginx/nginx.git\nRUN git clone https://github.com/vozlt/nginx-module-vts.git\nRUN cd /nginx && ./auto/configure --prefix=/usr/share/nginx \\\n                     --sbin-path=/usr/sbin/nginx \\\n                     --modules-path=/usr/lib/nginx/modules \\\n                     --conf-path=/etc/nginx/nginx.conf \\\n                     --error-log-path=/var/log/nginx/error.log \\\n                     --http-log-path=/var/log/nginx/access.log \\\n                     --pid-path=/run/nginx.pid \\\n                     --lock-path=/var/lock/nginx.lock \\\n                     --user=www-data \\\n                     --group=www-data \\\n                     --build=Ubuntu \\\n                     --http-client-body-temp-path=/var/lib/nginx/body \\\n                     --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \\\n                     --http-proxy-temp-path=/var/lib/nginx/proxy \\\n                     --http-scgi-temp-path=/var/lib/nginx/scgi \\\n                     --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \\\n                     --with-openssl-opt=enable-ec_nistp_64_gcc_128 \\\n                     --with-openssl-opt=no-nextprotoneg \\\n                     --with-openssl-opt=no-weak-ssl-ciphers \\\n                     --with-openssl-opt=no-ssl3 \\\n                     --with-pcre-jit \\\n                     --with-compat \\\n                     --with-file-aio \\\n                     --with-threads \\\n                     --with-http_addition_module \\\n                     --with-http_auth_request_module \\\n                     --with-http_dav_module \\\n                     --with-http_flv_module \\\n                     --with-http_gunzip_module \\\n                     --with-http_gzip_static_module \\\n                     --with-http_mp4_module \\\n                     --with-http_random_index_module \\\n                     --with-http_realip_module \\\n                     --with-http_slice_module \\\n                     --with-http_ssl_module \\\n                     --with-http_sub_module \\\n                     --with-http_stub_status_module \\\n                     --with-http_v2_module \\\n                     --with-http_secure_link_module \\\n                     --with-mail \\\n                     --with-mail_ssl_module \\\n                     --with-stream \\\n                     --with-stream_realip_module \\\n                     --with-stream_ssl_module \\\n                     --with-stream_ssl_preread_module \\\n                     --with-debug \\\n                     --with-cc-opt='-g -O2 -fPIE -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2' \\\n                     --with-ld-opt='-Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now' \\\n                     --add-module=../nginx-module-vts\nRUN cd /nginx && make\n\nFROM nginx\nRUN mkdir -p /var/lib/nginx/body\nRUN mkdir -p /var/lib/nginx/fastcgi\nCOPY --from=0 /nginx/objs/nginx /usr/sbin/nginx\nCOPY nginx.conf /etc/nginx/conf.d/default.conf"
}