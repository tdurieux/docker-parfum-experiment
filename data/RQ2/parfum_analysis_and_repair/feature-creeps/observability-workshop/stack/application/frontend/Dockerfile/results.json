{
  "startTime": 1674256084955,
  "endTime": 1674256085717,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.15.3 AS builder\n\n# install chrome for protractor tests\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -\nRUN sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list'\nRUN apt-get update && apt-get install --no-install-recommends -yq google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n# set working directory\nRUN mkdir /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# add `/usr/src/app/node_modules/.bin` to $PATH\nENV PATH /usr/src/app/node_modules/.bin:$PATH\n\n# install and cache app dependencies\nCOPY package.json /usr/src/app/package.json\nRUN npm install && npm cache clean --force;\nRUN npm install -g @angular/cli@1.7.1 && npm cache clean --force;\n\n# add app\nCOPY src /usr/src/app/src\nCOPY angular.json /usr/src/app/\nCOPY tsconfig.json /usr/src/app/\n\nRUN ng build --prod\n\n\nFROM opentracing/nginx-opentracing\n\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n\n## From ‘builder’ stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /usr/src/app/dist/frontend /usr/share/nginx/html\n\nCOPY nginx/nginx.conf /etc/nginx/\nCOPY nginx/zipkin-config.json /etc/\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}