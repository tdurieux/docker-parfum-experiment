{
  "startTime": 1674251846439,
  "endTime": 1674251847392,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ALPINE_VERSION=\"3.15\"\nFROM alpine:$ALPINE_VERSION AS download-base\nWORKDIR /downloads\nRUN echo \"$(apk --print-arch)\" > /arch.txt\nRUN ARCH2= && alpineArch=\"$(apk --print-arch)\" \\\n    && case \"${alpineArch##*-}\" in \\\n    x86_64) ARCH2='amd64' ;; \\\n    aarch64) ARCH2='arm64' ;; \\\n    *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac && \\\n    echo $ARCH2 > /arch2.txt\n\nFROM download-base AS packages\nARG KUBECTL_VERSION=\"1.22.4-r0\"\nRUN apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n    kubectl=$KUBECTL_VERSION\n\nFROM download-base AS buildkit\nARG BUILDKIT_VERSION=\"v0.9.0\"\nRUN wget -O buildkit.tar.gz \"https://github.com/moby/buildkit/releases/download/$BUILDKIT_VERSION/buildkit-$BUILDKIT_VERSION.linux-$(cat /arch2.txt).tar.gz\"\nRUN tar xvf buildkit.tar.gz && rm buildkit.tar.gz\n\nFROM download-base AS helm\nARG HELM_VERSION=\"v3.6.2\"\nRUN wget -O helm.tar.gz \"https://get.helm.sh/helm-$HELM_VERSION-linux-$(cat /arch2.txt).tar.gz\"\nRUN tar xvf helm.tar.gz --strip-components 1 && rm helm.tar.gz\n\nFROM download-base AS jenkins\nARG JENKINS_VERSION=\"2.319.1\"\nRUN wget https://mirrors.jenkins.io/war-stable/$JENKINS_VERSION/jenkins.war\n\n# Jenkins\nFROM alpine:$ALPINE_VERSION\n\n# jenkins deps\nRUN apk add --no-cache \\\n    bash \\\n    coreutils \\\n    jq \\\n    git \\\n    openjdk11 \\\n    openssh-client \\\n    ttf-dejavu \\\n    unzip\n\nENV JENKINS_HOME=\"/data\"\nVOLUME ${JENKINS_HOME}\n\nEXPOSE 8080\nENTRYPOINT /start.sh\n\nCOPY --from=packages /usr/bin/kubectl /usr/bin/kubectl\nCOPY --from=buildkit /downloads/bin/buildctl /usr/bin/buildctl\nCOPY --from=helm /downloads/helm /usr/bin/helm\nCOPY --from=jenkins /downloads/jenkins.war /jenkins/jenkins.war\n\nCOPY ./jenkins.install.UpgradeWizard.state ${JENKINS_HOME}/\nCOPY ./scripts/ ${JENKINS_HOME}/init.groovy.d/\nCOPY start.sh /\n\nRUN chmod +x /start.sh"
}