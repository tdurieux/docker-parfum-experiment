{
  "startTime": 1674248608793,
  "endTime": 1674248609439,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12 AS installer\n\nARG JENKINS_VERSION=\"2.263.4\"\n\nRUN apk add --no-cache \\\n    curl \\\n    docker-cli\n\nRUN curl -f -SL -o jenkins.war https://mirrors.jenkins.io/war-stable/$JENKINS_VERSION/jenkins.war\n\n# OpenJDK\n# from https://github.com/docker-library/openjdk/blob/ec1553cccfb87c5f53a38555771fa6d13cebfcba/8/jre/alpine/Dockerfile\nFROM alpine:3.12 as openjdk\n\nENV LANG C.UTF-8\n\n# add a simple script that can auto-detect the appropriate JAVA_HOME value\n# based on whether the JDK or only the JRE is installed\nRUN { \\\n\t\techo '#!/bin/sh'; \\\n\t\techo 'set -e'; \\\n\t\techo; \\\n\t\techo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n\t} > /usr/local/bin/docker-java-home \\\n\t&& chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk/jre\nENV PATH $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin\n\nENV JAVA_VERSION 8u275\nENV JAVA_ALPINE_VERSION 8.275.01-r0\n\nRUN set -x \\\n\t&& apk add --no-cache \\\n\t\topenjdk8-jre=\"$JAVA_ALPINE_VERSION\" \\\n\t&& [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]\n\n# Jenkins\nFROM openjdk\n\n# jenkins deps\nRUN apk add --no-cache \\\n    bash \\\n    coreutils \\\n    git \\\n    openssh-client \\\n    ttf-dejavu \\\n    unzip\n\n# compose\nRUN apk add --no-cache \\\n    docker-compose\n\nARG JENKINS_VERSION=\"2.263.4\"\nENV JENKINS_VERSION=${JENKINS_VERSION} \\\n    JENKINS_HOME=\"/data\"\n\nVOLUME ${JENKINS_HOME}\n\nEXPOSE 8080\nENTRYPOINT java -Duser.home=${JENKINS_HOME} -Djenkins.install.runSetupWizard=false -jar /jenkins/jenkins.war\n\nCOPY --from=installer /usr/bin/docker /usr/bin/docker\nCOPY --from=installer /jenkins.war /jenkins/jenkins.war\n\nCOPY ./jenkins.install.UpgradeWizard.state ${JENKINS_HOME}/\nCOPY ./scripts/ ${JENKINS_HOME}/init.groovy.d/"
}