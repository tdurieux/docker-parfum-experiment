{
  "startTime": 1674251433154,
  "endTime": 1674251433771,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 20,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First build stage: get gemu for multi-arch building\nFROM alpine AS qemu\n\n#QEMU Download\nENV QEMU_URL https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-aarch64.tar.gz\nRUN apk add --no-cache curl && curl -f -L ${QEMU_URL} | tar zxvf - -C . --strip-components 1\n\n# New build stage: Basis-Image\nFROM arm64v8/python:3.8.2-slim-buster\n\n# Provide QEMU for this stage of docker build\nCOPY --from=qemu qemu-aarch64-static /usr/bin\n\nLABEL maintainer=\"marcel.beining@gmail.com\"\n\nRUN apt-get update \\\n\t&& apt-get -y --no-install-recommends install curl build-essential libssl-dev python-dev libffi-dev \\\n    && apt-get clean \\\n    && pip install --no-cache-dir --upgrade pip && rm -rf /var/lib/apt/lists/*;\n\n# Prepare environment\nWORKDIR /eazebot_docker\n\nENV LD_LIBRARY_PATH /usr/local/lib\nENV IN_DOCKER_CONTAINER Yes\n\n# Install dependencies\nCOPY requirements.txt /eazebot_docker/\nRUN pip install -r /eazebot_docker/requirements.txt --no-cache-dir\n\n# Install and execute\n# take the files and folders in local build context and add them to the Docker imageâ€™s current working directory.\nCOPY . /eazebot_docker/\nRUN pip install -e /eazebot_docker --no-cache-dir\n\nENTRYPOINT [\"python\", \"/eazebot_docker/eazebot/main.py\"]\n\nCMD []\n"
}