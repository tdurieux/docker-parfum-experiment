diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/layer5io/meshery/install/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/layer5io/meshery/install/docker/Dockerfile/repaired.Dockerfile
index 6d588e6..565dfce 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/layer5io/meshery/install/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/layer5io/meshery/install/docker/Dockerfile/repaired.Dockerfile
@@ -11,15 +11,15 @@ RUN go clean -modcache; cd cmd; GOPROXY=https://proxy.golang.org GOSUMDB=off go
 
 FROM node:lts-slim as ui
 ADD ui ui
-RUN cd ui; npm install --only=production; npm run build && npm run export; mv out /
+RUN cd ui; npm install --only=production; npm cache clean --force; npm run build && npm run export; mv out /
 
 FROM node:16 as provider-ui
 ADD provider-ui provider-ui
-RUN cd provider-ui; npm install --only=production; npm run build && npm run export; mv out /
+RUN cd provider-ui; npm install --only=production; npm cache clean --force; npm run build && npm run export; mv out /
 
 FROM ubuntu as wrk2
-RUN apt-get -y update && apt-get -y install git && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man/?? /usr/share/man/??_*
-RUN apt-get -y update && apt-get -y  install build-essential libssl-dev git zlib1g-dev
+RUN apt-get -y update && apt-get -y --no-install-recommends install git && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/man/?? /usr/share/man/??_*
+RUN apt-get -y update && apt-get -y --no-install-recommends install build-essential libssl-dev git zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 RUN git config --global user.email "meshery@layer5.io"
 RUN git config --global user.name "meshery"
 RUN git clone --depth=1 https://github.com/layer5io/wrk2 && cd wrk2 && make
@@ -27,27 +27,27 @@ RUN git clone --depth=1 https://github.com/layer5io/wrk2 && cd wrk2 && make
 FROM alpine:3.15.3 as seed_content
 RUN apk add --no-cache curl
 WORKDIR /
-RUN lines=$(curl -s https://api.github.com/repos/layer5io/wasm-filters/releases/latest | grep "browser_download_url.*wasm" | cut -d : -f 2,3 | sed 's/"//g') \
-    && mkdir -p seed_content/filters/binaries \ 
+RUN lines=$( curl -f -s https://api.github.com/repos/layer5io/wasm-filters/releases/latest | grep "browser_download_url.*wasm" | cut -d : -f 2,3 | sed 's/"//g') \
+    && mkdir -p seed_content/filters/binaries \
     && cd seed_content/filters/binaries  \
     for line in $lines \
     do \
     curl -LO $line \
-    done 
+    done
 
 # bundling patterns
-RUN curl -L -s https://github.com/service-mesh-patterns/service-mesh-patterns/tarball/master -o service-mesh-patterns.tgz \
+RUN curl -f -L -s https://github.com/service-mesh-patterns/service-mesh-patterns/tarball/master -o service-mesh-patterns.tgz \
     && mkdir service-mesh-patterns \
     && mkdir -p /seed_content/patterns \
     && tar xzf service-mesh-patterns.tgz --directory=service-mesh-patterns \
-    && mv service-mesh-patterns/*/samples/* /seed_content/patterns/
+    && mv service-mesh-patterns/*/samples/* /seed_content/patterns/ && rm service-mesh-patterns.tgz
 
 # bundling applications
 RUN mkdir -p /seed_content/applications && cd /seed_content/applications \
-    && curl -LO https://raw.githubusercontent.com/istio/istio/master/samples/bookinfo/platform/kube/bookinfo.yaml \
-    && curl -LO https://raw.githubusercontent.com/istio/istio/master/samples/httpbin/httpbin.yaml \
-    && curl -L https://raw.githubusercontent.com/layer5io/image-hub/master/deployment.yaml -o imagehub.yaml \
-    && mkdir /emojivoto && (cd /emojivoto && curl --remote-name-all -L https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/emoji.yml \
+    && curl -f -LO https://raw.githubusercontent.com/istio/istio/master/samples/bookinfo/platform/kube/bookinfo.yaml \
+    && curl -f -LO https://raw.githubusercontent.com/istio/istio/master/samples/httpbin/httpbin.yaml \
+    && curl -f -L https://raw.githubusercontent.com/layer5io/image-hub/master/deployment.yaml -o imagehub.yaml \
+    && mkdir /emojivoto && ( cd /emojivoto && curl -f --remote-name-all -L https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/emoji.yml \
     https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/vote-bot.yml \
     https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/voting.yml \
     https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/web.yml) \
@@ -64,10 +64,10 @@ RUN mkdir -p /seed_content/applications && cd /seed_content/applications \
 FROM alpine:3.15.3 as jsonschema-util
 RUN apk add --no-cache curl
 WORKDIR /
-RUN UTIL_VERSION=$(curl -L -s https://api.github.com/repos/layer5io/kubeopenapi-jsonschema/releases/latest | \
+RUN UTIL_VERSION=$( curl -f -L -s https://api.github.com/repos/layer5io/kubeopenapi-jsonschema/releases/latest | \
 	grep tag_name | sed "s/ *\"tag_name\": *\"\\(.*\\)\",*/\\1/" | \
-	grep -v "rc\.[0-9]$"| head -n 1 ) \
-	&& curl -L https://github.com/layer5io/kubeopenapi-jsonschema/releases/download/${UTIL_VERSION}/kubeopenapi-jsonschema -o kubeopenapi-jsonschema \
+	grep -v "rc\.[0-9]$" | head -n 1) \
+	&& curl -f -L https://github.com/layer5io/kubeopenapi-jsonschema/releases/download/${UTIL_VERSION}/kubeopenapi-jsonschema -o kubeopenapi-jsonschema \
 	&& chmod +x /kubeopenapi-jsonschema
 
 FROM frolvlad/alpine-glibc:alpine-3.13_glibc-2.32