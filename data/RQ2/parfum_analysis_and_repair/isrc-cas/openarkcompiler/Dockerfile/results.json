{
  "startTime": 1674255510332,
  "endTime": 1674255511164,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 239
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 239
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 AS build-env\nMAINTAINER https://www.openarkcompiler.cn\n\n# Setting up the build environment\nRUN sed -i 's/archive.ubuntu.com/mirrors.163.com/g' /etc/apt/sources.list && \\\r\n    dpkg --add-architecture i386 && \\\r\n    apt-get -y update && \\\r\n    apt-get -y dist-upgrade && \\\n    apt-get -y --no-install-recommends install curl git-core tar xz-utils unzip gnupg flex bison gperf build-essential ccache openjdk-8-jdk && \\\n    apt-get -y --no-install-recommends install zlib1g-dev libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc lib32z1-dev qemu g++-multilib gcc-multilib libglib2.0-dev libpixman-1-dev linux-libc-dev:i386 && \\\n    apt-get -y --no-install-recommends install python3-paramiko python-paramiko python-jenkins python-requests python-xlwt && \\\n    apt-get -y --no-install-recommends install gcc-5-aarch64-linux-gnu g++-5-aarch64-linux-gnu aria2 && \\\n    mkdir -p /tools/ninja /tools/gn && \\\n    cd /tools && \\\n    curl -f -C - -LO http://releases.llvm.org/8.0.0/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz && \\\n    curl -f -LO https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip && \\\n    curl -f -L -o /tools/gn/gn https://archive.softwareheritage.org/browse/content/sha1_git:2dc0d5b26caef44f467de8120b26f8aad8b878be/raw/?filename=gn && \\\n    tar Jvxf /tools/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz -C /tools/ && \\\n    unzip /tools/ninja-linux.zip -d /tools/ninja/ && \\\n    chmod a+x /tools/gn/gn && \\\n    rm /tools/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04.tar.xz /tools/ninja-linux.zip && \\\n    rm -rf /var/cache/apt/archives && rm -rf /var/lib/apt/lists/*;\n\n# copy source\nCOPY . /OpenArkCompiler\nWORKDIR /OpenArkCompiler\n\n# create symbolic link and\nRUN mkdir -p /OpenArkCompiler/tools /OpenArkCompiler/tools/gn && \\\r\n    ln -s /tools/ninja /OpenArkCompiler/tools/ninja_1.9.0 && \\\r\n    ln -s /tools/gn/gn /OpenArkCompiler/tools/gn/gn && \\\r\n    ln -s /tools/clang+llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04 /OpenArkCompiler/tools/clang_llvm-8.0.0-x86_64-linux-gnu-ubuntu-16.04\n# compile\nRUN [\"/bin/bash\", \"-c\", \"source build/envsetup.sh && make\"]\n\n# build final docker image\nFROM ubuntu:16.04\nRUN sed -i 's/archive.ubuntu.com/mirrors.163.com/g' /etc/apt/sources.list && \\\r\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk curl vim && \\\n    rm -rf /var/cache/apt/archives && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build-env /OpenArkCompiler/out /OpenArkCompiler\nVOLUME /OpenArkCompiler\nENV PATH=/OpenArkCompiler/bin:$PATH\nCMD maple -h"
}