diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/v1k0d3n/gantry/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/v1k0d3n/gantry/Dockerfile/repaired.Dockerfile
index 1d8a677..7866f82 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/v1k0d3n/gantry/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/v1k0d3n/gantry/Dockerfile/repaired.Dockerfile
@@ -64,15 +64,15 @@ RUN apt-get update ;\
     apt-get upgrade -y
 
 # Install prereqs:
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
     apt-transport-https \
     ca-certificates \
     curl \
-    software-properties-common
+    software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 # Add gpg keys for custom any repos:
-RUN curl -s https://download.docker.com/linux/ubuntu/gpg | apt-key add - ;\
-    curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
+RUN curl -f -s https://download.docker.com/linux/ubuntu/gpg | apt-key add -; \
+    curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
 
 # Add the custom repos to apt sources:
 RUN chmod +x /${ROOTFS}/bin/repo
@@ -82,7 +82,7 @@ RUN /${ROOTFS}/bin/repo
 RUN apt-get update
 
 # Install packages from those sources:
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
     docker-ce=${VERSION_DOCK}~ce-0~ubuntu-xenial \
     ebtables \
     ethtool \
@@ -90,39 +90,39 @@ RUN apt-get install -y \
     kubernetes-cni \
     libwrap0 \
     systemd \
-    tcpd
+    tcpd && rm -rf /var/lib/apt/lists/*;
 
 # Install libgcrypt11 for CentOS support:
-RUN curl -o /tmp/libgcrypt11_1.5.3.deb -L https://launchpad.net/~ubuntu-security/+archive/ubuntu/ppa/+build/8993248/+files/libgcrypt11_1.5.3-2ubuntu4.3_amd64.deb ;\
-    dpkg -i /tmp/libgcrypt11_1.5.3.deb ;\
-    apt-get install -f
+RUN curl -f -o /tmp/libgcrypt11_1.5.3.deb -L https://launchpad.net/~ubuntu-security/+archive/ubuntu/ppa/+build/8993248/+files/libgcrypt11_1.5.3-2ubuntu4.3_amd64.deb; \
+    dpkg -i /tmp/libgcrypt11_1.5.3.deb ; \
+    apt-get install -y -f
 
 # Separately install any kubeadm requirements:
-RUN apt-get install -y \
-    socat
+RUN apt-get install --no-install-recommends -y \
+    socat && rm -rf /var/lib/apt/lists/*;
 
 # Clean up apt-cache:
 RUN apt-get clean ;\
     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 # Download - kubeadm:
-RUN curl -o /${ROOTFS}/bin/kubeadm https://storage.googleapis.com/kubernetes-release/release/${VERSION_KUBEADM}/bin/linux/${ARCH}/kubeadm ;\
+RUN curl -f -o /${ROOTFS}/bin/kubeadm https://storage.googleapis.com/kubernetes-release/release/${VERSION_KUBEADM}/bin/linux/${ARCH}/kubeadm; \
     chmod +x /${ROOTFS}/bin/kubeadm
 
 # Download - kubectl:
-RUN curl -o /${ROOTFS}/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${VERSION_KUBEADM}/bin/linux/${ARCH}/kubectl ;\
+RUN curl -f -o /${ROOTFS}/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${VERSION_KUBEADM}/bin/linux/${ARCH}/kubectl; \
     chmod +x /${ROOTFS}/bin/kubectl
 
 # Download - kubelet:
-RUN curl -o /${ROOTFS}/bin/kubelet https://storage.googleapis.com/kubernetes-release/release/${VERSION_KUBEADM}/bin/linux/${ARCH}/kubelet ;\
+RUN curl -f -o /${ROOTFS}/bin/kubelet https://storage.googleapis.com/kubernetes-release/release/${VERSION_KUBEADM}/bin/linux/${ARCH}/kubelet; \
     chmod +x /${ROOTFS}/bin/kubelet
 
 # Download - cni:
-RUN mkdir /${ROOTFS}/cni ;\
-    curl -o /${ROOTFS}/cni-${ARCH}-${VERSION_CNI}.tgz https://github.com/containernetworking/cni/releases/download/${VERSION_CNI}/cni-${ARCH}-${VERSION_CNI}.tgz --location ;\
-    curl -o /${ROOTFS}/cni-plugins-${ARCH}-${VERSION_CNI}.tgz https://github.com/containernetworking/plugins/releases/download/${VERSION_CNI}/cni-plugins-${ARCH}-${VERSION_CNI}.tgz --location ;\
-    tar -zxvf /${ROOTFS}/cni-${ARCH}-${VERSION_CNI}.tgz -C /${ROOTFS}/cni/ ;\
-    tar -zxvf /${ROOTFS}/cni-plugins-${ARCH}-${VERSION_CNI}.tgz -C /${ROOTFS}/cni/ ;\
+RUN mkdir /${ROOTFS}/cni ; \
+    curl -f -o /${ROOTFS}/cni-${ARCH}-${VERSION_CNI}.tgz https://github.com/containernetworking/cni/releases/download/${VERSION_CNI}/cni-${ARCH}-${VERSION_CNI}.tgz --location; \
+    curl -f -o /${ROOTFS}/cni-plugins-${ARCH}-${VERSION_CNI}.tgz https://github.com/containernetworking/plugins/releases/download/${VERSION_CNI}/cni-plugins-${ARCH}-${VERSION_CNI}.tgz --location; \
+    tar -zxvf /${ROOTFS}/cni-${ARCH}-${VERSION_CNI}.tgz -C /${ROOTFS}/cni/ ; rm /${ROOTFS}/cni-${ARCH}-${VERSION_CNI}.tgz \
+    tar -zxvf /${ROOTFS}/cni-plugins-${ARCH}-${VERSION_CNI}.tgz -C /${ROOTFS}/cni/ ; \
     rm -rf /${ROOTFS}/cni-*
 
 # Set PATH inside of the container: