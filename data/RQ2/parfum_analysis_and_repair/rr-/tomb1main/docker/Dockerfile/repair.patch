diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rr-/tomb1main/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rr-/tomb1main/docker/Dockerfile/repaired.Dockerfile
index f219927..8ef69c0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rr-/tomb1main/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rr-/tomb1main/docker/Dockerfile/repaired.Dockerfile
@@ -10,11 +10,11 @@ FROM ubuntu:latest as mingw
 
 RUN apt-get update \
     && apt-get upgrade -y \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
         gcc-mingw-w64-i686 \
         g++-mingw-w64-i686 \
         git \
-        make
+        make && rm -rf /var/lib/apt/lists/*;
 
 # zlib
 FROM mingw as zlib
@@ -30,15 +30,15 @@ RUN cd zlib \
 
 # libav
 FROM mingw as libav
-RUN apt-get install -y \
-    nasm
+RUN apt-get install --no-install-recommends -y \
+    nasm && rm -rf /var/lib/apt/lists/*;
 RUN git clone \
     --depth 1 \
     --branch "n4.4.1" \
     https://github.com/FFmpeg/FFmpeg
 COPY --from=zlib /ext/ /usr/i686-w64-mingw32/
 RUN cd FFmpeg \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --arch=x86 \
         --target-os=mingw32 \
         --cross-prefix=i686-w64-mingw32- \
@@ -81,7 +81,7 @@ RUN cd FFmpeg \
 # SDL
 FROM mingw as sdl
 RUN git clone https://github.com/libsdl-org/SDL
-RUN apt-get install -y automake
+RUN apt-get install --no-install-recommends -y automake && rm -rf /var/lib/apt/lists/*;
 RUN cd SDL \
     && aclocal -I acinclude \
     && autoconf \
@@ -117,7 +117,7 @@ ENV PKG_CONFIG_LIBDIR=/ext/lib/
 ENV PKG_CONFIG_PATH=/ext/lib/pkgconfig/
 RUN apt-get update \
     && apt-get upgrade -y \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
         mingw-w64-tools \
         pkg-config \
         upx \
@@ -125,6 +125,6 @@ RUN apt-get update \
     && python3 -m pip install \
         pyjson5 \
         meson \
-        ninja
+        ninja && rm -rf /var/lib/apt/lists/*;
 
 ENTRYPOINT ["/app/docker/entrypoint.sh"]