{
  "startTime": 1674250604492,
  "endTime": 1674250605744,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 84,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 116
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 116
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND=\"noninteractive\" TZ=\"Chicago/United States\"\n\n# Install system dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y gpg wget && rm -rf /var/lib/apt/lists/*;\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null\nRUN echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN apt-get update && apt-get install --no-install-recommends -y python3 cmake nvidia-cuda-toolkit git libopenmpi-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y gcc-8 g++-8 python-is-python3 python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y doxygen swig nvidia-cuda-dev nvidia-cuda-toolkit python3-setuptools cython3 && rm -rf /var/lib/apt/lists/*;\n\n# Install python dependencies\nRUN python -m pip install --upgrade pip\nRUN python -m pip install numpy\nRUN env MPICC=$(which mpicc) python -m pip install mpi4py\n\nENV CC=gcc-8\nENV CXX=g++-8\n\n# Install HOOMD-blue\nRUN git clone https://github.com/glotzerlab/hoomd-blue.git && cd hoomd-blue && git checkout v2.9.7 && mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=/hoomd-install -DENABLE_CUDA=ON -DENABLE_MPI=ON .. && make -j $(nproc) install\nENV PYTHONPATH=${PYTHONPATH}:/hoomd-install\n\n# Install OpenMM\nRUN git clone https://github.com/openmm/openmm.git && cd openmm && git checkout 7.6.0 && mkdir build && cd build && cmake -DPYTHON_EXECUTABLE=`which python3` -DCMAKE_INSTALL_PREFIX=../install -DBUILD_TESTING=OFF .. && make -j $(nproc) install\nENV OPENMM_INCLUDE_PATH=/openmm/install/include\nENV OPENMM_LIB_PATH=/openmm/install/lib\nRUN cd openmm/build/python && python3 setup.py install\n"
}