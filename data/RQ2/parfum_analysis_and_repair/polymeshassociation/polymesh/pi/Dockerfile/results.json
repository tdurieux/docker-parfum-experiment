{
  "startTime": 1674253268834,
  "endTime": 1674253269793,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Original source: https://gist.github.com/pepyakin/2ff227c2d837a2eacd8d3879d5e0c94f\n# Includes some customizations for polymesh\n\nFROM rust:latest\n\nRUN dpkg --add-architecture armhf && \\\n    apt-get update && apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y aptitude && \\\n    aptitude install -y \\\n        gcc-arm-linux-gnueabihf \\\n        g++-arm-linux-gnueabihf \\\n        pkg-config \\\n        cmake \\\n        libssl-dev \\\n        git \\\n        clang \\\n        libclang-dev \\\n        libssl-dev:armhf && rm -rf /var/lib/apt/lists/*;\n\n# Install nightly with w32-u-u and add arvm7 to stable\nRUN rustup target add armv7-unknown-linux-gnueabihf\nRUN rustup install nightly-2020-04-17 && \\\n    rustup target add wasm32-unknown-unknown --toolchain nightly-2020-04-17 &&\\\n    cargo +nightly-2020-04-17 install --git https://github.com/alexcrichton/wasm-gc --force\n\n# Hack to use an older version of nightly with cargo +nightly\nRUN mv /usr/local/rustup/toolchains/nightly-2020-04-17-x86_64-unknown-linux-gnu /usr/local/rustup/toolchains/nightly-x86_64-unknown-linux-gnu\n\nENV CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_LINKER arm-linux-gnueabihf-gcc\nENV PKG_CONFIG_ALLOW_CROSS 1\nENV PKG_CONFIG_PATH /usr/lib/arm-linux-gnueabihf/pkgconfig/\n\n\n# Disallow the `pkg-config` crate to look for the config for zlib, because build.rs of `libz-sys`\n# gets confused and pulls the system-wide library (i.e. of the host) instead of the target when\n# cross-compiling. This essentially leads to static linking of zlib.\n#\n# Alternatively, we can supply LIBZ_SYS_STATIC=1. Weirdly enough, installing libgtk-3-dev:armhf\n# also solves the problem somehow.\n#\n# Here is the related issue: https://github.com/rust-lang/libz-sys/issues/49\nENV ZLIB_NO_PKG_CONFIG 1\n\n# This is for compiling GUI apps.\n# RUN aptitude install -y libasound2-dev:armhf libgtk-3-dev:armhf libsdl2-dev:armhf\n\nRUN useradd rust --user-group --create-home --shell /bin/bash --groups sudo\nWORKDIR /home/rust/src\n"
}