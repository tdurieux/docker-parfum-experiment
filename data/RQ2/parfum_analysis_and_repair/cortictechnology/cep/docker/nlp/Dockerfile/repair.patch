diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cortictechnology/cep/docker/nlp/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cortictechnology/cep/docker/nlp/Dockerfile/repaired.Dockerfile
index a9ac90f..b32a738 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cortictechnology/cep/docker/nlp/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cortictechnology/cep/docker/nlp/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM python:3.7-slim
 
 ARG DEBIAN_FRONTEND=noninteractive
 RUN apt-get -y update && apt-get -y upgrade
-RUN apt-get -y update && apt-get -y install \
+RUN apt-get -y update && apt-get -y --no-install-recommends install \
     build-essential \
     wget \
     openssh-client \
@@ -22,7 +22,7 @@ RUN apt-get -y update && apt-get -y install \
     python3-venv \
     python3-dev \
     libeigen3-dev \
-    cmake
+    cmake && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /root
 RUN mkdir -p .config/pip; \
@@ -34,23 +34,23 @@ ENV VIRTUAL_ENV=/root/rasa_env
 RUN python3 -m venv $VIRTUAL_ENV
 ENV PATH="$VIRTUAL_ENV/bin:$PATH"
 
-RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py; \
+RUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py; \
     python get-pip.py
 
 WORKDIR /root
 RUN wget https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py; \
     python get-poetry.py --version 1.0.8
 
-RUN pip install keras_applications==1.0.8 --no-deps; \
-    pip install keras_preprocessing==1.1.0 --no-deps; \
-    pip install cython; \
-    pip install h5py==2.10.0 pybind11 six mock "jsonschema>=3.2,<3.3" pycparser protobuf==3.12.2 scikit-build wheel==0.34.2
+RUN pip install --no-cache-dir keras_applications==1.0.8 --no-deps; \
+    pip install --no-cache-dir keras_preprocessing==1.1.0 --no-deps; \
+    pip install --no-cache-dir cython; \
+    pip install --no-cache-dir h5py==2.10.0 pybind11 six mock "jsonschema>=3.2,<3.3" pycparser protobuf==3.12.2 scikit-build wheel==0.34.2
 
 WORKDIR /root
 RUN wget https://github.com/Qengineering/TensorFlow-Raspberry-Pi/raw/master/tensorflow-2.1.0-cp37-cp37m-linux_armv7l.whl; \
     wget https://github.com/koenvervloesem/tensorflow-addons-on-arm/releases/download/v0.7.1/tensorflow_addons-0.7.1-cp37-cp37m-linux_armv7l.whl; \
-    pip install tensorflow-2.1.0-cp37-cp37m-linux_armv7l.whl; \
-    pip install tensorflow_addons-0.7.1-cp37-cp37m-linux_armv7l.whl; \
+    pip install --no-cache-dir tensorflow-2.1.0-cp37-cp37m-linux_armv7l.whl; \
+    pip install --no-cache-dir tensorflow_addons-0.7.1-cp37-cp37m-linux_armv7l.whl; \
     rm tensorflow-2.1.0-cp37-cp37m-linux_armv7l.whl; \
     rm tensorflow_addons-0.7.1-cp37-cp37m-linux_armv7l.whl
 
@@ -62,21 +62,21 @@ RUN git clone https://github.com/RasaHQ/rasa.git; \
     sed -i 's/version = "2.1.1"/version = "2.1.0"/g' poetry.lock
 
 WORKDIR /root
-RUN apt install cmake -y; \
+RUN apt install --no-install-recommends cmake -y; rm -rf /var/lib/apt/lists/*; \
     git clone --recursive https://github.com/googleapis/python-crc32c; \
     cd python-crc32c; \
     mkdir google_crc32c/build; \
     cd google_crc32c/build; \
     cmake -DCRC32C_BUILD_TESTS=no -DCRC32C_BUILD_BENCHMARKS=no -DBUILD_SHARED_LIBS=yes ..; \
     make all install; \
-    cd ../..;\
+    cd ../..; \
     python setup.py install; \
-    pip install crc32c
+    pip install --no-cache-dir crc32c
 
 WORKDIR /root/rasa
 RUN sed -i 's/version = "0.1.0"/version = "1.0.0"/g' poetry.lock; \
     /bin/bash -c "source /root/.poetry/env && make install"; \
-    pip install jieba paho-matt
+    pip install --no-cache-dir jieba paho-matt
 
 WORKDIR /root
 RUN apt-get clean; \