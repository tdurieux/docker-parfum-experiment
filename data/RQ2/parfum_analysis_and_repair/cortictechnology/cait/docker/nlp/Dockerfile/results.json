{
  "startTime": 1674252905550,
  "endTime": 1674252906650,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 24,
        "columnStart": 25,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 24,
        "columnStart": 25,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.7-slim\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y update && apt-get -y upgrade\nRUN apt-get -y update && apt-get -y --no-install-recommends install \\\n    build-essential \\\n    wget \\\n    openssh-client \\\n    graphviz-dev \\\n    pkg-config \\\n    git-core \\\n    openssl \\\n    libssl-dev \\\n    libffi6 \\\n    libffi-dev \\\n    libpng-dev \\\n    libatlas3-base \\\n    libgfortran5 \\\n    libfreetype6 \\\n    libgomp1 \\\n    libatomic1 \\\n    python3-venv \\\n    python3-dev \\\n    libeigen3-dev \\\n    cmake && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\nRUN mkdir -p .config/pip; \\\n    echo \"[global]\" >> .config/pip/pip.conf; \\\n    echo \"index-url=https://pypi.org/simple\" >> .config/pip/pip.conf; \\\n    echo \"extra-index-url=https://www.piwheels.org/simple\" >> .config/pip/pip.conf\n\nENV VIRTUAL_ENV=/root/rasa_env\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py; \\\n    python get-pip.py\n\nWORKDIR /root\nRUN wget https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py; \\\n    python get-poetry.py --version 1.0.8\n\nRUN pip install --no-cache-dir keras_applications==1.0.8 --no-deps; \\\n    pip install --no-cache-dir keras_preprocessing==1.1.0 --no-deps; \\\n    pip install --no-cache-dir cython; \\\n    pip install --no-cache-dir h5py==2.10.0 pybind11 six mock \"jsonschema>=3.2,<3.3\" pycparser protobuf==3.12.2 scikit-build wheel==0.34.2\n\nWORKDIR /root\nRUN wget https://github.com/Qengineering/TensorFlow-Raspberry-Pi/raw/master/tensorflow-2.1.0-cp37-cp37m-linux_armv7l.whl; \\\n    wget https://github.com/koenvervloesem/tensorflow-addons-on-arm/releases/download/v0.7.1/tensorflow_addons-0.7.1-cp37-cp37m-linux_armv7l.whl; \\\n    pip install --no-cache-dir tensorflow-2.1.0-cp37-cp37m-linux_armv7l.whl; \\\n    pip install --no-cache-dir tensorflow_addons-0.7.1-cp37-cp37m-linux_armv7l.whl; \\\n    rm tensorflow-2.1.0-cp37-cp37m-linux_armv7l.whl; \\\n    rm tensorflow_addons-0.7.1-cp37-cp37m-linux_armv7l.whl\n\nWORKDIR /root\nRUN git clone https://github.com/RasaHQ/rasa.git; \\\n    cd rasa; \\\n    git checkout tags/1.10.18; \\\n\tsed -i 's/tensorflow = \"~2.1\"/tensorflow = \"2.1.0\"/g' pyproject.toml; \\\n    sed -i 's/version = \"2.1.1\"/version = \"2.1.0\"/g' poetry.lock\n\nWORKDIR /root\nRUN apt install --no-install-recommends cmake -y; rm -rf /var/lib/apt/lists/*; \\\n    git clone --recursive https://github.com/googleapis/python-crc32c; \\\n    cd python-crc32c; \\\n    mkdir google_crc32c/build; \\\n    cd google_crc32c/build; \\\n    cmake -DCRC32C_BUILD_TESTS=no -DCRC32C_BUILD_BENCHMARKS=no -DBUILD_SHARED_LIBS=yes ..; \\\n    make all install; \\\n    cd ../..; \\\n    python setup.py install; \\\n    pip install --no-cache-dir crc32c\n\nWORKDIR /root/rasa\nRUN sed -i 's/version = \"0.1.0\"/version = \"1.0.0\"/g' poetry.lock; \\\n    /bin/bash -c \"source /root/.poetry/env && make install\"; \\\n    pip install --no-cache-dir jieba paho-matt\n\nWORKDIR /root\nRUN apt-get clean; \\\n    apt-get -y autoremove; \\\n    rm -rf python-crc32c; \\\n    rm get-pip.py; \\\n    rm get-poetry.py"
}