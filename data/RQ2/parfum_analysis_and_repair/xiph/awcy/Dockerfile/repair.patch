diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xiph/awcy/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xiph/awcy/Dockerfile/repaired.Dockerfile
index 1a7baf6..7f3bcab 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xiph/awcy/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xiph/awcy/Dockerfile/repaired.Dockerfile
@@ -71,7 +71,7 @@ RUN \
 		yasm \
 		&& \
 	apt-get clean && \
-	rm -rf /var/lib/apt/lists
+	rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;
 
 # install nasm
 RUN \
@@ -82,7 +82,7 @@ RUN \
 	NASM_SUM=c860caec653b865d5b83359452d97b11f1b3ba5b18b07cac554cf72550b3bfc9 && \
 	mkdir -p ${DIR} && \
 	cd ${DIR} && \
-	curl -O ${NASM_URL}/${NASM_DEB} && \
+	curl -f -O ${NASM_URL}/${NASM_DEB} && \
 	echo ${NASM_SUM} ${NASM_DEB} | sha256sum --check && \
 	dpkg -i ${NASM_DEB} && \
 	rm -rf ${DIR}
@@ -118,11 +118,11 @@ RUN \
 		8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
 		C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
 		DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
-		A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
-	; do \
-		for server in $(shuf -e ${GPG_SERVERS}) ; do \
-			http_proxy= gpg --keyserver "$server" --recv-keys "${key}" && break || : ; \
-		done ; \
+		A48C2BEE680E841632CD4E44F07496B3EB3C1762; \
+	do \
+		for server in $(shuf -e ${GPG_SERVERS}); do \
+			http_proxy= gpg --batch --keyserver "$server" --recv-keys "${key}" && break || :; \
+		done; \
 	done && \
 	curl -fSLO "https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${ARCH}.tar.xz" && \
 	curl -fSLO "https://nodejs.org/dist/v${NODE_VERSION}/SHASUMS256.txt.asc" && \
@@ -137,7 +137,7 @@ RUN \
 	EMSDK_VERSION=1.40.1 && \
 	EMSDK_HASH=e88a3c5bbfef172a5b947768204ef734e2fb6e04 && \
 	mkdir -p /opt/emsdk && \
-	curl -sSL https://github.com/emscripten-core/emsdk/archive/${EMSDK_HASH}.tar.gz | tar zxf - -C /opt/emsdk --strip-components=1 && \
+	curl -f -sSL https://github.com/emscripten-core/emsdk/archive/${EMSDK_HASH}.tar.gz | tar zxf - -C /opt/emsdk --strip-components=1 && \
 	cd /opt/emsdk && \
 	./emsdk update && \
 	./emsdk install ${EMSDK_VERSION} && \
@@ -150,12 +150,12 @@ RUN \
 # install tini
 RUN \
 	TINI_VERSION=v0.18.0 && \
-	for server in $(shuf -e ${GPG_SERVERS}) ; do \
-		http_proxy= gpg --keyserver "$server" --recv-keys 0527A9B7 && break || : ; \
+	for server in $(shuf -e ${GPG_SERVERS}); do \
+		http_proxy= gpg --batch --keyserver "$server" --recv-keys 0527A9B7 && break || :; \
 	done && \
 	wget -O/usr/bin/tini     "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini" && \
 	wget -O/usr/bin/tini.asc "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini.asc" && \
-	gpg --verify /usr/bin/tini.asc && \
+	gpg --batch --verify /usr/bin/tini.asc && \
 	rm -f /usr/bin/tini.asc && \
 	chmod a+x /usr/bin/tini
 
@@ -163,11 +163,11 @@ RUN \
 RUN \
 	GOSU_VERSION=1.11 && \
 	for server in $(shuf -e ${GPG_SERVERS}); do \
-		http_proxy= gpg --keyserver "$server" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ; \
+		http_proxy= gpg --batch --keyserver "$server" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || :; \
 	done && \
 	wget -O/usr/bin/gosu     "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64" && \
 	wget -O/usr/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc" && \
-	gpg --verify /usr/bin/gosu.asc && \
+	gpg --batch --verify /usr/bin/gosu.asc && \
 	rm -f /usr/bin/gosu.asc && \
 	chmod a+x /usr/bin/gosu
 
@@ -180,7 +180,7 @@ RUN \
 	git clone https://gitlab.xiph.org/xiph/daala.git ${DAALATOOL_DIR} && \
 	cd ${DAALATOOL_DIR} && \
 	./autogen.sh && \
-	./configure --disable-player && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-player && \
 	make tools -j4
 
 # install ciede2000
@@ -206,7 +206,7 @@ RUN \
 	sed -i 's/std::modff/modff/g' common/src/OutputY4M.cpp && \
 	sed -i 's/using ::hdrtoolslib::Y_COMP;//g' projects/HDRConvScaler/src/HDRConvScalerYUV.cpp && \
 	sed -i 's/\[Y_COMP\]/\[hdrtoolslib::Y_COMP\]/g' projects/HDRConvScaler/src/HDRConvScalerYUV.cpp && \
-	make # -j is broken
+	make && rm HDRTools.tar.bz2# -j is broken
 
 # install rd_tool and dependencies
 ENV \
@@ -225,12 +225,12 @@ RUN \
 		&& \
 	mkdir -p ${RD_TOOL_DIR} && \
 	rm -vf /etc/ssh/ssh_host_* && \
-	curl -sSL https://github.com/xiph/rd_tool/tarball/master | tar zxf - -C ${RD_TOOL_DIR} --strip-components=1
+	curl -f -sSL https://github.com/xiph/rd_tool/tarball/master | tar zxf - -C ${RD_TOOL_DIR} --strip-components=1 && rm -rf /var/lib/apt/lists/*;
 
 # install meson
 RUN \
-	apt-get install -y python3 python3-pip python3-setuptools python3-wheel ninja-build && \
-	pip3 install meson
+	apt-get install --no-install-recommends -y python3 python3-pip python3-setuptools python3-wheel ninja-build && \
+	pip3 install --no-cache-dir meson && rm -rf /var/lib/apt/lists/*;
 
 # install dav1d and dependencies
 ENV \
@@ -250,7 +250,7 @@ ENV \
 
 RUN \
 	mkdir -p ${VMAF_DIR} && \
-	curl -sSL https://github.com/Netflix/vmaf/archive/refs/tags/${VMAF_VERSION}.tar.gz | tar zxf - -C ${VMAF_DIR} --strip-components=1 && \
+	curl -f -sSL https://github.com/Netflix/vmaf/archive/refs/tags/${VMAF_VERSION}.tar.gz | tar zxf - -C ${VMAF_DIR} --strip-components=1 && \
 	cd ${VMAF_DIR}/libvmaf && \
 	meson build --buildtype release && \
 	ninja -C build && \
@@ -273,7 +273,7 @@ RUN \
 	npm run tsc && \
 	cd ${APP_DIR}/www && \
 	npm install && \
-	npm run build
+	npm run build && npm cache clean --force;
 
 # add scripts
 ADD *.m *.sh *.py ${APP_DIR}/