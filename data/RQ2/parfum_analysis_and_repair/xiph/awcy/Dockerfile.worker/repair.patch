diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xiph/awcy/Dockerfile.worker b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xiph/awcy/Dockerfile.worker/repaired.Dockerfile
index 6f15183..4a64cc9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/xiph/awcy/Dockerfile.worker
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/xiph/awcy/Dockerfile.worker/repaired.Dockerfile
@@ -66,7 +66,7 @@ RUN \
 		wget \
 		xz-utils && \
 	apt-get clean && \
-	rm -rf /var/lib/apt/lists
+	rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;
 
 # install nasm
 RUN \
@@ -79,7 +79,7 @@ RUN \
 		NASM_SUM=c860caec653b865d5b83359452d97b11f1b3ba5b18b07cac554cf72550b3bfc9 && \
 		mkdir -p ${DIR} && \
 		cd ${DIR} && \
-		curl -O ${NASM_URL}/${NASM_DEB} && \
+		curl -f -O ${NASM_URL}/${NASM_DEB} && \
 		echo ${NASM_SUM} ${NASM_DEB} | sha256sum --check && \
 		dpkg -i ${NASM_DEB} && \
 		rm -rf ${DIR}; \
@@ -113,7 +113,7 @@ RUN \
 	git clone https://gitlab.xiph.org/xiph/daala.git ${DAALATOOL_DIR} && \
 	cd ${DAALATOOL_DIR} && \
 	./autogen.sh && \
-	./configure --disable-player && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-player && \
 	make tools -j4
 
 # install ciede2000
@@ -148,7 +148,7 @@ RUN \
 		sed -i 's/#include <mmintrin.h>//g' common/src/DistortionMetricVQM.cpp; \
 		sed -i 's/#if defined(ENABLE_SSE_OPT)/#if ENABLE_SSE_OPT/g' common/src/ResizeBiCubic.cpp; \
 	fi && \
-	make # -j is broken
+	make && rm HDRTools.tar.bz2# -j is broken
 
 # install rd_tool dependencies
 RUN \
@@ -160,19 +160,19 @@ RUN \
 		ssh \
 		time \
 		&& \
-	rm -vf /etc/ssh/ssh_host_*
+	rm -vf /etc/ssh/ssh_host_* && rm -rf /var/lib/apt/lists/*;
 
 # install dav1d and dependencies
 ENV \
 	DAV1D_DIR=/opt/dav1d
 
 RUN \
-	apt-get install -y meson && \
+	apt-get install --no-install-recommends -y meson && \
 	git clone https://code.videolan.org/videolan/dav1d.git ${DAV1D_DIR} && \
 	cd ${DAV1D_DIR} && \
 	mkdir build && cd build && \
 	meson .. && \
-	ninja
+	ninja && rm -rf /var/lib/apt/lists/*;
 
 # install VMAF
 ENV \
@@ -181,7 +181,7 @@ ENV \
 
 RUN \
 	mkdir -p ${VMAF_DIR} && \
-	curl -sSL https://github.com/Netflix/vmaf/archive/refs/tags/${VMAF_VERSION}.tar.gz | tar zxf - -C ${VMAF_DIR} --strip-components=1 && \
+	curl -f -sSL https://github.com/Netflix/vmaf/archive/refs/tags/${VMAF_VERSION}.tar.gz | tar zxf - -C ${VMAF_DIR} --strip-components=1 && \
 	cd ${VMAF_DIR}/libvmaf && \
 	meson build --buildtype release && \
 	ninja -C build && \