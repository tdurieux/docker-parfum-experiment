{
  "startTime": 1674255007373,
  "endTime": 1674255008116,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUBY_VERSION=3.0\nFROM ruby:${RUBY_VERSION}-buster@sha256:6986a308eab6b20c612e6e0376196fa05e79973dd6e42c588c498dee9ce54832 as dev\n\nENV TZ=Asia/Shanghai\n\nARG NODE_VERSION=17\nENV NODE_VERSION=$NODE_VERSION\n\nRUN curl -f -sL https://deb.nodesource.com/setup_${NODE_VERSION}.x -o node_setup.sh && \\\n      bash node_setup.sh 1> /dev/null\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n      build-essential \\\n      vim \\\n      git \\\n      diffutils \\\n      xdg-user-dirs \\\n      nodejs && \\\n      rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\n\n# Install Ruby deps\nENV JEKYLL_ENV=development\nRUN gem install bundler\nCOPY Gemfile Gemfile.lock ./\nRUN bundle config set force_ruby_platform true\nRUN bundle install\n\n# Install Node deps\nENV NODE_ENV=development\nCOPY package.json package-lock.json ./\nRUN npm ci\n\nCOPY ./ ./\n\n# So that we have the most up to date submodules\nRUN git submodule update --init --recursive\n\nARG FLUTTER_BRANCH\nENV FLUTTER_BRANCH=$FLUTTER_BRANCH\nENV FLUTTER_ROOT=flutter\nENV FLUTTER_BIN=flutter/bin\nENV PATH=\"/app/flutter/bin:$PATH\"\n\n# Used if wanting to build the container with a different branch\n# e.g. `make FLUTTER_BRANCH=dev build`\n# This is not to be confused with the $TEST_TARGET_CHANNEL\nRUN if test -n \"$FLUTTER_BRANCH\" -a \"$FLUTTER_BRANCH\" != \"stable\" ; then \\\n      cd flutter && \\\n      git fetch && \\\n      git remote set-branches origin \"$FLUTTER_BRANCH\" && \\\n      git fetch --depth 1 origin \"$FLUTTER_BRANCH\" && \\\n      git checkout \"$FLUTTER_BRANCH\" -- && \\\n      git pull; \\\n    fi\n\n# Set up Flutter\nRUN flutter doctor\nRUN flutter --version\nRUN dart pub get\n\nEXPOSE 35729\nEXPOSE 4002\n\n\n# -- Test target\nFROM dev as test\nARG DISABLE_TESTS\nENV DISABLE_TESTS=$DISABLE_TESTS\nARG TEST_TARGET_CHANNEL=stable\nENV TEST_TARGET_CHANNEL=$TEST_TARGET_CHANNEL\nRUN tool/test.sh --target $TEST_TARGET_CHANNEL --check-links --null-safety\n\n\n# -- Build target\nFROM test AS builder\n\nENV JEKYLL_ENV=production\nENV NODE_ENV=production\n\nRUN bundle install\nRUN cd flutter && \\\n      git fetch && \\\n      git remote set-branches origin stable && \\\n      git fetch origin stable && \\\n      git checkout stable && \\\n      git pull\nRUN flutter doctor\nRUN tool/translator/build.sh\n"
}