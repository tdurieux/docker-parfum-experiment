{
  "startTime": 1674255983345,
  "endTime": 1674255983896,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:{{ cookiecutter.node_version }}-buster-slim\n\n# Install system requirements\n# Use non-interactive frontend for debconf\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Set the default directory where CMD will execute\nWORKDIR /app\n\n# Create a directory for the logs\nRUN mkdir -p /var/log/{{cookiecutter.repo_name}}\n\n# Mark assets directory as volume\nVOLUME /files/assets\n\n# Copy package files\nCOPY ./app/package.json ./\nCOPY ./app/yarn.lock ./\n\n# Install system requirements\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends git python && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install node dependencies\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# Copy code\nCOPY ./app /app\n\n# Define the PORT environment var so that razzle can pick it up in the following `yarn build` command.\n# It may be overridden in the .env file when the container is run.\nENV PORT 80\n\n# Build node app\nRUN yarn build\n\n# Set the default command to execute when creating a new container\nCMD yarn start\n"
}