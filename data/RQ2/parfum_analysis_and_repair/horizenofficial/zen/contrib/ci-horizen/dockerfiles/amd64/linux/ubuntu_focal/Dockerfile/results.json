{
  "startTime": 1674217272451,
  "endTime": 1674217273470,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 17,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 150
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 93,
        "columnEnd": 152
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nMAINTAINER cronic@zensystem.io\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV LC_ALL=C.UTF-8 LANG=C.UTF-8 LANGUAGE=C.UTF-8\n\nRUN set -euxo pipefail \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install apt-utils \\\n    && apt-get -y --no-install-recommends dist-upgrade \\\n    && apt-get -y --no-install-recommends install aria2 autoconf automake bsdmainutils build-essential \\\n       ca-certificates cmake curl dirmngr fakeroot git g++-multilib gnupg2 help2man libc6-dev libgomp1 \\\n       libtool lintian m4 ncurses-dev pigz pkg-config pv python2-dev python-setuptools python3-pip \\\n       python3-setuptools time unzip wget zlib1g-dev \\\n    && curl -f -s https://bootstrap.pypa.io/pip/2.7/get-pip.py | python2 \\\n    && pip2 install --no-cache-dir pyblake2 pyzmq websocket-client2 \\\n    && pip3 install --no-cache-dir b2 \\\n    && BASEURL=\"https://github.com/tianon/gosu/releases/download/\" \\\n    && GOSU_VERSION=\"1.13\" \\\n    && DPKG_ARCH=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\" \\\n    && curl -f -o /usr/local/bin/gosu -SL \"${BASEURL}/${GOSU_VERSION}/gosu-${DPKG_ARCH}\" \\\n    && curl -f -o /usr/local/bin/gosu.asc -SL \"${BASEURL}/${GOSU_VERSION}/gosu-${DPKG_ARCH}.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && ( gpg2 --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \\\n       gpg2 --batch --keyserver hkps://keyserver.ubuntu.com:443 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \\\n       gpg2 --batch --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \\\n       gpg2 --batch --keyserver hkp://ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \\\n       gpg2 --batch --keyserver pgp.mit.edu --recv-key B42F6819007F00F88E364FD4036A9C25BF357DD4 || \\\n       gpg2 --batch --keyserver keyserver.pgp.com --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \\\n       gpg2 --batch --keyserver pgp.key-server.io --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 ) \\\n    && gpg2 --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n    && ( gpgconf --kill dirmngr || true ) \\\n    && ( gpgconf --kill gpg-agent || true ) \\\n    && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n    && unset GNUPGHOME \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true \\\n    && BASEURL=$( curl -f -s https://api.github.com/repos/ipfs/go-ipfs/releases | grep browser_download_url | grep -v 'rc[0-9]/go' | awk 'FNR <= 1' | cut -d '\"' -f 4 | sed 's:/[^/]*$::') \\\n    && IPFS_VERSION=$(echo -n $BASEURL | sed 's:.*/::') \\\n    && TMP=\"$(mktemp -d)\" \\\n    && curl -f -SLo \"$TMP/go-ipfs_${IPFS_VERSION}_linux-${DPKG_ARCH}.tar.gz\" \"${BASEURL}/go-ipfs_${IPFS_VERSION}_linux-${DPKG_ARCH}.tar.gz\" \\\n    && curl -f -SLo \"$TMP/go-ipfs_${IPFS_VERSION}_linux-${DPKG_ARCH}.tar.gz.sha512\" \"${BASEURL}/go-ipfs_${IPFS_VERSION}_linux-${DPKG_ARCH}.tar.gz.sha512\" \\\n    && cd $TMP && sha512sum -c \"go-ipfs_${IPFS_VERSION}_linux-${DPKG_ARCH}.tar.gz.sha512\" && tar -xf \"go-ipfs_${IPFS_VERSION}_linux-${DPKG_ARCH}.tar.gz\" \\\n    && cd go-ipfs && ./install.sh && cd && rm -rf $TMP \\\n    && apt-get -y autoremove --purge \\\n    && apt-get -y autoclean \\\n    && apt-get clean \\\n    && rm -rf /var/cache/apt/archives/*.deb /var/lib/apt/lists/* /root/.cache /tmp/* \\\n    && chmod +x /usr/local/bin/entrypoint.sh && rm \"go-ipfs_${IPFS_VERSION}_linux-${DPKG_ARCH}.tar.gz\"\n\nVOLUME [\"/mnt/.ccache\"]\n\nVOLUME [\"/mnt/.zcash-params\"]\n\nVOLUME [\"/mnt/build\"]\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}