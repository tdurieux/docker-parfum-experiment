diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/horizenofficial/zendoo-sc-cryptolib/ci/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/horizenofficial/zendoo-sc-cryptolib/ci/Dockerfile/repaired.Dockerfile
index 1a5fbb2..8f33912 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/horizenofficial/zendoo-sc-cryptolib/ci/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/horizenofficial/zendoo-sc-cryptolib/ci/Dockerfile/repaired.Dockerfile
@@ -15,18 +15,18 @@ RUN set -eux && export GOSU_VERSION=1.12 && export DEBIAN_FRONTEND=noninteractiv
     savedAptMark="$(apt-mark showmanual)"; \
     apt-get update; \
     apt-get install -y --no-install-recommends ca-certificates wget; \
-    if ! command -v gpg; then \
+    if ! command -v gpg;then \
       apt-get install -y --no-install-recommends gnupg2 dirmngr; \
-    elif gpg --version | grep -q '^gpg (GnuPG) 1\.'; then \
+    elif gpg --batch --version | grep -q '^gpg (GnuPG) 1\.'; then \
 # "This package provides support for HKPS keyservers." (GnuPG 1.x only)
       apt-get install -y --no-install-recommends gnupg-curl; \
     fi; \
     rm -rf /var/lib/apt/lists/*; \
-    \
+
     dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
     wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; \
     wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; \
-    \
+
 # verify the signature
     export GNUPGHOME="$(mktemp -d)"; \
     ( gpg2 --batch --keyserver hkps://keys.openpgp.org --keyserver-options timeout=15 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 || \
@@ -37,12 +37,12 @@ RUN set -eux && export GOSU_VERSION=1.12 && export DEBIAN_FRONTEND=noninteractiv
     && gpg2 --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \
     && command -v gpgconf && gpgconf --kill all || :; \
     rm -rf "$GNUPGHOME" /usr/local/bin/gosu.asc; \
-    \
+
 # clean up fetch dependencies
     apt-mark auto '.*' > /dev/null; \
     [ -z "$savedAptMark" ] || apt-mark manual $savedAptMark; \
     apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \
-    \
+
     chmod +x /usr/local/bin/gosu; \
 # verify that the binary works
     gosu --version; \