{
  "startTime": 1674249799188,
  "endTime": 1674249800327,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for Beremiz\n# This container is used to run tests for Beremiz\n#\n# To run test localy use following command executed from beremiz directory:\n# $ docker run --volume=$PWD:/beremiz --workdir=\"/beremiz\" --volume=$PWD/../CanFestival-3:/CanFestival-3 --memory=1g --entrypoint=/beremiz/tests/tools/check_source.sh skvorl/beremiz-requirements\n#\n\nFROM skvorl/python2.7-wxpython\nMAINTAINER Andrey Skvortsov <andrej.skvortzov@gmail.com>\n\nRUN set -xe \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n               python-nevow \\\n               python-lxml \\\n               python-zeroconf \\\n               python-m2crypto \\\n               python-autobahn \\\n               python-future \\\n               python-simplejson \\\n    && apt-get install -y --no-install-recommends ca-certificates \\\n    && apt-get install -y --no-install-recommends wxglade python-cwiid \\\n    && apt-get install -y --no-install-recommends build-essential automake flex bison mercurial python-pip \\\n    && apt-get install -y --no-install-recommends \\\n               pep8 \\\n               pylint \\\n               python-pytest \\\n               python-pytest-timeout \\\n               gettext \\\n               python-ddt \\\n               libpython2.7-dev \\\n\n    && apt-get install --no-install-recommends -y python3-pip \\\n    && pip3 install --no-cache-dir crossbar \\\n\n    && /usr/bin/pip install gnosis \\\n                            pyro \\\n                            sslpsk \\\n                            posix_spawn \\\n    && cd / \\\n    && hg clone http://dev.automforge.net/CanFestival-3 \\\n    && cd CanFestival-3 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n    && cd / \\\n    && hg clone -r 24ef30a9bcee1e65b027be2c7f7a8d52c41a7479 https://bitbucket.org/automforge/matiec \\\n    && cd matiec \\\n    && autoreconf -i \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && mkdir /usr/lib/matiec \\\n    && cp -vR lib/* /usr/lib/matiec \\\n    && rm -rf /matiec \\\n\n    && cd / \\\n    && hg clone https://bitbucket.org/mjsousa/modbus Modbus \\\n    && cd Modbus \\\n    && make \\\n\n    && cd / \\\n    && svn checkout https://svn.code.sf.net/p/bacnet/code/trunk/bacnet-stack/ BACnet \\\n    && cd BACnet \\\n    && make MAKE_DEFINE='-fPIC' all \\\n\n    && apt-get remove -y bison flex automake python-pip python3-pip libpython2.7-dev \\\n    && apt-get autoremove -y \\\n    && apt-get clean -y && rm -rf /var/lib/apt/lists/*;"
}