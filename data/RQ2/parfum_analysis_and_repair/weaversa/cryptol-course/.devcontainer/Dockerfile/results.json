{
  "startTime": 1674253244748,
  "endTime": 1674253246118,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 40,
        "columnStart": 25,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is the Dockerfile used to build the image hosted at:\n# ghcr.io/weaversa/cryptol-course:2.13\n# To use this Dockerfile directly, uncomment the appropriate line in\n# devcontainer.json\n\nFROM ubuntu:latest\n\n## Uncomment for gitpod.io build\n# FROM gitpod/workspace-nix:latest\n# USER root\n\nRUN ln -snf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone\nRUN apt-get update -y && DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -y \\\n    make \\\n    cmake \\\n    libgmp-dev \\\n    gperf \\\n    autoconf \\\n    build-essential \\\n    clang-12 \\\n    clang-tools-12 \\\n    clang-format-12 \\\n    wget \\\n    unzip \\\n    vim \\\n    emacs-nox \\\n    git \\\n    curl \\\n    dos2unix \\\n    bash-completion \\\n    bash \\\n    htop \\\n    man \\\n    sudo \\\n    python3 \\\n    python3-pip \\\n    ca-certificates \\\n    zip \\\n    locales \\\n    graphviz \\\n    cargo \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Link clang-12 utils\n\nRUN find /usr/bin/ -name \"*-12\" -exec basename {} \\; | sed \"s/\\-12//\" | xargs -I{} ln -s /usr/bin/'{}'-12 /usr/bin/'{}'\n\n# Install SAW\n\nCOPY --from=ghcr.io/galoisinc/saw:nightly /usr/local/bin /usr/local/bin\nCOPY --from=ghcr.io/galoisinc/saw-remote-api:nightly /usr/local/bin/saw-remote-api /usr/local/bin/saw-remote-api\nENV SAW_SERVER_URL=http://0.0.0.0:36691\nRUN echo 'saw-remote-api --read-only http --host 0.0.0.0 --port 36691 / &' >> /usr/local/bin/start-saw-remote-api-read-only\nRUN echo 'saw-remote-api http --host 0.0.0.0 --port 36691 / &' >> /usr/local/bin/start-saw-remote-api\n\n# Install myxine to get visualizations of SAW proofs at http://localhost:1123.\n\nRUN cargo install --root /usr/local myxine\n\n# Install Cryptol\n\nCOPY --from=ghcr.io/galoisinc/cryptol:nightly /usr/local/bin /usr/local/bin\nCOPY --from=ghcr.io/galoisinc/cryptol-remote-api:nightly /usr/local/bin/cryptol-remote-api /usr/local/bin/cryptol-remote-api\nENV CRYPTOL_SERVER_URL=http://0.0.0.0:36681\nRUN echo 'cryptol-remote-api --read-only http --host 0.0.0.0 --port 36681 / &' >> /usr/local/bin/start-cryptol-remote-api-read-only\nRUN echo 'cryptol-remote-api http --host 0.0.0.0 --port 36681 / &' >> /usr/local/bin/start-cryptol-remote-api\n\n# Get fresh Python clients for Cryptol and SAW\n\nRUN git clone https://github.com/GaloisInc/saw-script.git /usr/local/share/saw-script\nRUN cd /usr/local/share/saw-script && git submodule update --init\n\n# Install Python client dependencies\n\nRUN pip3 install --no-cache-dir typing_extensions argo_client BitVector\n\n# Link to nightly python clients\n\nENV PYTHONPATH \"${PYTHONPATH}:/usr/local/share/saw-script/deps/cryptol/cryptol-remote-api/python:/usr/local/share/saw-script/saw-remote-api/python\"\n\n# Get latest what4-solvers compiled for ubuntu\n\nRUN wget https://github.com/GaloisInc/what4-solvers/releases/download/snapshot-20220131/ubuntu-latest-bin.zip\nRUN unzip -o ubuntu-latest-bin.zip -d /usr/local/bin && rm -rf ubuntu-latest-bin.zip\n\n# Install recent abc\n\nRUN git clone https://github.com/berkeley-abc/abc.git\nRUN cd abc \\\n    && OPTFLAGS=\"-O2\" ABC_USE_NO_READLINE=1 make -j 4 abc \\\n    && cp abc /usr/local/bin\nRUN rm -rf abc\n\n# Install slightly older Boolector\n\nRUN wget https://github.com/Boolector/boolector/archive/refs/tags/3.2.2.tar.gz -O boolector-3.2.2.tar.gz\nRUN tar -xvzf boolector-3.2.2.tar.gz && rm -rf boolector-3.2.2.tar.gz\nRUN cd boolector-3.2.2 \\\n    && ./contrib/setup-btor2tools.sh \\\n    && ./contrib/setup-lingeling.sh \\\n    && ./configure.sh \\\n    && cd build \\\n    && make -j 4 boolector boolector-bin \\\n    && cp bin/boolector /usr/local/bin/boolector\nRUN rm -rf boolector-3.2.2\n\nRUN chmod a+x /usr/local/bin/*\n\nRUN adduser --gecos '' --disabled-password cryptol \\\n    && echo \"cryptol ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd \\\n    && chown -R cryptol:cryptol /home/cryptol\nUSER cryptol\n\nENV LANG C.UTF-8\nRUN sudo chsh -s /bin/bash $(whoami)\nENV SHELL=/bin/bash\nRUN echo 'export PS1=\"[\\u \\W]\\$ \"' >> /home/cryptol/.bashrc\n\n# ENTRYPOINT [\"/bin/bash\"]\n"
}