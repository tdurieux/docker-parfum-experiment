{
  "startTime": 1674252315337,
  "endTime": 1674252317391,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7.9-slim AS compile-image\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN BUILDPKGS=\"build-essential \\\n        python3-dev libhdf5-dev libfreetype6-dev libtool \\\n        m4 autoconf automake patch bison flex libpng-dev libopenblas-dev git \\\n        tcl-dev tk-dev libxml2-dev zlib1g-dev libffi-dev cmake\" && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends apt-utils debconf locales && dpkg-reconfigure locales && \\\n    apt-get install -y --no-install-recommends $BUILDPKGS && rm -rf /var/lib/apt/lists/*;\n\nRUN python -m venv /opt/venv\n# Make sure we use the virtualenv:\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# install dependencies:\nCOPY requirements_docker.txt /tmp/\nRUN pip install --no-cache-dir --upgrade pip wheel && \\\n    pip install --no-cache-dir -r /tmp/requirements_docker.txt\n\n# use version from argument (--build-arg version=0.11.0), or a default:\nRUN pip install --no-cache-dir scanpy==1.7.2\n\n# install pySCENIC from local copy:\nCOPY pySCENIC /tmp/pySCENIC\nRUN cd /tmp/pySCENIC && \\\n     pip install --no-cache-dir . && \\\n     cd .. && rm -rf pySCENIC\n\nFROM python:3.7.9-slim AS build-image\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install \\\n        # Need to run ps\n        procps \\\n        libxml2 \\\n        less \\\n        # Need to run MulticoreTSNE\n        libgomp1 && \\\n    rm -rf /var/cache/apt/* && \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=compile-image /opt/venv /opt/venv\n\n# Make sure we use the virtualenv:\nENV PATH=\"/opt/venv/bin:$PATH\"\n\nEXPOSE 8787\n\n"
}