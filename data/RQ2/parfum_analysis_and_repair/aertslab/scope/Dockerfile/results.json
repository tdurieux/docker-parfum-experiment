{
  "startTime": 1674252893611,
  "endTime": 1674252894083,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM debian:latest\n\nARG SCOPE_PORT=80\n\nRUN apt-get update -y\n\nRUN apt-get install --no-install-recommends -y \\\n    curl wget \\\n    gnupg \\\n    unzip \\\n    git && rm -rf /var/lib/apt/lists/*;\n\n# Node js\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Conda\nRUN wget --quiet --content-disposition https://bit.ly/miniconda3 -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\nENV PATH /opt/conda/bin:$PATH\nRUN . /opt/conda/etc/profile.d/conda.sh\n\n# Environment\nRUN conda create -n scope python=3.8.3 -y\nRUN echo \"conda activate scope\" >> ~/.bashrc\n\n# Poetry\nRUN conda install -c conda-forge poetry\n\n# Get sources into container\nCOPY . /app\n\n# install the app\nRUN cd /app && npm install && npm cache clean --force;\n\n# put custom config into container\nCOPY ${SCOPE_CONFIG:-config.json} /app/config.json\n\n# build assets\nRUN cd /app && SCOPE_CONFIG=./config.json SCOPE_PORT=${SCOPE_PORT} npm run build\n\n# poetry install is required to run the backend\nRUN cd /app/opt && poetry install\n\n# Frontend\n#EXPOSE 55850\n## Data upload\n#EXPOSE 55851\n## Backend\n#EXPOSE 55852\n\nWORKDIR /app/opt\n\n# ENTRYPOINT [\"poetry\", \"run\", \"hypercorn\", \"main:scope_api\"]\n"
}