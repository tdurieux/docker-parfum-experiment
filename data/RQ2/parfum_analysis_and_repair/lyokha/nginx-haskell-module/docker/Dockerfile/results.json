{
  "startTime": 1674249033163,
  "endTime": 1674249034620,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FEDORA_VERSION=36\nARG NGINX_VERSION=1.22.0\n\nFROM fedora:$FEDORA_VERSION AS base\n\nARG GHC_VERSION=8.10\n\nENV CABAL_DIR=/cabal\nENV CABAL_UPDATE_DIR=/cabal-update\n\nRUN dnf install -y gcc xz pcre-devel zlib-devel procps-ng           && \\\n    dnf install -y ghc$GHC_VERSION ghc$GHC_VERSION-compiler-default && \\\n    dnf clean all                                                   && \\\n    rm -rf /var/cache/dnf\n\nRUN curl -f -L 'https://downloads.haskell.org/~cabal/cabal-install-3.2.0.0/cabal-install-3.2.0.0-x86_64-unknown-linux.tar.xz' \\\n            -o cabal-install.tar.xz && \\\n    tar xvf cabal-install.tar.xz cabal && \\\n    mv cabal /usr/bin && \\\n    rm -f cabal-install.tar.xz\n\nRUN curl -f -L 'https://raw.githubusercontent.com/zserge/jsmn/25647e692c7906b96ffd2b05ca54c097948e879c/jsmn.h' \\\n            -o jsmn.h && \\\n    mv jsmn.h /usr/include\n\nRUN mkdir -p /var/lib/nginx\n\nRUN useradd -s /sbin/nologin nginx\n\n\nFROM base AS cabal-install\n\nARG CABAL_CONSTRAINTS\n\nRUN cabal v1-update                                               && \\\n    cabal_constraints=\"$(echo \"$CABAL_CONSTRAINTS\" | \\\n            sed \"s/\\s*\\([^;]\\+\\)\\s*;\\?\\s*/--constraint='\\1' /g\")\" && \\\n    eval \"cabal v1-install ngx-export-tools-extra \\\n            $cabal_constraints\" && \\\n    curl -f -L 'https://github.com/lyokha/nginx-healthcheck-plugin/archive/1.2.tar.gz' \\\n            -o nginx-healthcheck-plugin.tar.gz && \\\n    tar xvf nginx-healthcheck-plugin.tar.gz && \\\n    curl -f -L 'https://github.com/lyokha/nginx-log-plugin/archive/1.3.1.tar.gz' \\\n            -o nginx-log-plugin.tar.gz && \\\n    tar xvf nginx-log-plugin.tar.gz && \\\n    cd nginx-healthcheck-plugin-1.2 && \\\n    eval \"cabal v1-install $cabal_constraints\" && \\\n    cd ../nginx-log-plugin-1.3.1 && \\\n    eval \"cabal v1-install $cabal_constraints\" && \\\n    cd .. && \\\n    rm -f nginx-healthcheck-plugin.tar.gz nginx-log-plugin.tar.gz && \\\n    eval \"cabal v1-install JuicyPixels regex-pcre-builtin \\\n            $cabal_constraints\" && \\\n    mkdir \"$CABAL_UPDATE_DIR\" && \\\n    mv \"$CABAL_DIR\"/packages/hackage.haskell.org/01-index.* \\\n            \"$CABAL_UPDATE_DIR\" && \\\n    rm -rf \"$CABAL_DIR\"/logs/*\n\n\nFROM base AS nginx-build\n\nARG NGINX_VERSION\n\nCOPY --from=cabal-install /cabal /cabal\nCOPY --from=cabal-install /root/.ghc /root/.ghc\nCOPY --from=cabal-install /nginx-healthcheck-plugin-1.2 /nginx-healthcheck-plugin-1.2\nCOPY --from=cabal-install /nginx-log-plugin-1.3.1 /nginx-log-plugin-1.3.1\n\nRUN curl -f -L 'https://github.com/openresty/echo-nginx-module/archive/v0.62.tar.gz' \\\n            -o echo-nginx-module.tar.gz && \\\n    tar xvf echo-nginx-module.tar.gz && \\\n    curl -f -L 'https://github.com/lyokha/nginx-custom-counters-module/archive/4.4.tar.gz' \\\n            -o nginx-custom-counters-module.tar.gz && \\\n    tar xvf nginx-custom-counters-module.tar.gz && \\\n    curl -f -L 'https://github.com/lyokha/nginx-combined-upstreams-module/archive/2.1.tar.gz' \\\n            -o nginx-combined-upstreams-module.tar.gz && \\\n    tar xvf nginx-combined-upstreams-module.tar.gz && \\\n    curl -f -L 'https://github.com/lyokha/nginx-haskell-module/archive/3.1.0.tar.gz' \\\n            -o nginx-haskell-module.tar.gz && \\\n    tar xvf nginx-haskell-module.tar.gz && \\\n    curl -f -L \"https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz\" \\\n            -o nginx.tar.gz && \\\n    tar xvf nginx.tar.gz && \\\n    cd nginx-\"$NGINX_VERSION\" && \\\n    NGX_HTTP_CUSTOM_COUNTERS_PERSISTENCY=yes \\\n            ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            --prefix=/opt/nginx \\\n            --user=nginx --group=nginx \\\n            --with-http_stub_status_module \\\n            --add-module=../echo-nginx-module-0.62 \\\n            --add-module=../nginx-custom-counters-module-4.4 \\\n            --add-module=../nginx-combined-upstreams-module-2.1 \\\n            --add-module=../nginx-haskell-module-3.1.0 \\\n            --add-module=../nginx-haskell-module-3.1.0/aliases \\\n            --add-module=../nginx-haskell-module-3.1.0/examples/dynamicUpstreams/nginx-upconf-module \\\n            --add-dynamic-module=/nginx-healthcheck-plugin-1.2 \\\n            --add-dynamic-module=/nginx-log-plugin-1.3.1 \\\n            --add-dynamic-module=/nginx-log-plugin-1.3.1/module && \\\n    make && \\\n    make install && \\\n    cp objs/ngx_healthcheck_plugin.so \\\n            /usr/lib64/libngx_healthcheck_plugin.so && \\\n    cp objs/ngx_log_plugin.so \\\n            /usr/lib64/libngx_log_plugin.so && \\\n    cp objs/ngx_log_plugin_module.so \\\n            /var/lib/nginx && \\\n    cd .. && \\\n    rm -rf echo-nginx-module.tar.gz echo-nginx-module-0.62         \\\n            nginx-custom-counters-module.tar.gz                    \\\n            nginx-custom-counters-module-4.4                       \\\n            nginx-combined-upstreams-module.tar.gz                 \\\n            nginx-combined-upstreams-module-2.1                    \\\n            nginx-haskell-module.tar.gz nginx-haskell-module-3.1.0 \\\n            nginx-healthcheck-plugin-1.2 nginx-log-plugin-1.3.1    \\\n            nginx.tar.gz\n\n\nFROM nginx-build\n\nARG NGINX_VERSION\n\nCOPY data/test.conf /opt/nginx/conf/nginx.conf\nCOPY data/test.hs /build/test.hs\nCOPY data/test_c_plugin.c /build/test_c_plugin.c\n\nRUN cd /build                                   && \\\n    NGX_HOME=/nginx-\"$NGINX_VERSION\"            && \\\n    gcc -O2 -fPIC -c -o test_c_plugin.o      \\\n            -I \"$NGX_HOME/src/core\"          \\\n            -I \"$NGX_HOME/src/http\"          \\\n            -I \"$NGX_HOME/src/http/modules\"  \\\n            -I \"$NGX_HOME/src/event\"         \\\n            -I \"$NGX_HOME/src/event/modules\" \\\n            -I \"$NGX_HOME/src/os/unix\"       \\\n            -I \"$NGX_HOME/objs\" test_c_plugin.c && \\\n    ghc -Wall -O2 -dynamic -shared -fPIC              \\\n            -lHSrts_thr-ghc\"$(ghc --numeric-version)\" \\\n            -lngx_healthcheck_plugin -lngx_log_plugin \\\n            test_c_plugin.o test.hs -o test.so  && \\\n    mv test.so /var/lib/nginx                   && \\\n    cd ..                                       && \\\n    rm -rf /build\n\nCMD [\"/opt/nginx/sbin/nginx\", \"-g\", \"daemon off;\"]\n\n"
}