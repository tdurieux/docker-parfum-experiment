{
  "startTime": 1674248208580,
  "endTime": 1674248210100,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NiWorkflows Docker Container Image distribution\n#\n# MIT License\n#\n# Copyright (c) 2022 The NiPreps Developers\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nFROM nipreps/miniconda:py39_2205.0\n\nARG DEBIAN_FRONTEND=noninteractive\nENV LD_LIBRARY_PATH=\"/usr/lib/x86_64-linux-gnu:${CONDA_PATH}/lib\"\n\n# Installing freesurfer\nRUN curl -f -sSL https://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.1/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.1.tar.gz | tar zxv --no-same-owner -C /opt \\\n    --exclude='freesurfer/average' \\\n    --exclude='freesurfer/diffusion' \\\n    --exclude='freesurfer/docs' \\\n    --exclude='freesurfer/fsfast' \\\n    --exclude='freesurfer/lib/cuda' \\\n    --exclude='freesurfer/lib/qt' \\\n    --exclude='freesurfer/matlab' \\\n    --exclude='freesurfer/mni/share/man' \\\n    --exclude='freesurfer/subjects/fsaverage_sym' \\\n    --exclude='freesurfer/subjects/fsaverage3' \\\n    --exclude='freesurfer/subjects/fsaverage4' \\\n    --exclude='freesurfer/subjects/cvs_avg35' \\\n    --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \\\n    --exclude='freesurfer/subjects/bert' \\\n    --exclude='freesurfer/subjects/lh.EC_average' \\\n    --exclude='freesurfer/subjects/rh.EC_average' \\\n    --exclude='freesurfer/subjects/sample-*.mgz' \\\n    --exclude='freesurfer/subjects/V1_average' \\\n    --exclude='freesurfer/trctrain'\n\n# Simulate SetUpFreeSurfer.sh\nENV FSL_DIR=\"/opt/fsl\" \\\n    OS=\"Linux\" \\\n    FS_OVERRIDE=0 \\\n    FIX_VERTEX_AREA=\"\" \\\n    FSF_OUTPUT_FORMAT=\"nii.gz\" \\\n    FREESURFER_HOME=\"/opt/freesurfer\"\nENV SUBJECTS_DIR=\"$FREESURFER_HOME/subjects\" \\\n    FUNCTIONALS_DIR=\"$FREESURFER_HOME/sessions\" \\\n    MNI_DIR=\"$FREESURFER_HOME/mni\" \\\n    LOCAL_DIR=\"$FREESURFER_HOME/local\" \\\n    MINC_BIN_DIR=\"$FREESURFER_HOME/mni/bin\" \\\n    MINC_LIB_DIR=\"$FREESURFER_HOME/mni/lib\" \\\n    MNI_DATAPATH=\"$FREESURFER_HOME/mni/data\"\nENV PERL5LIB=\"$MINC_LIB_DIR/perl5/5.8.5\" \\\n    MNI_PERL5LIB=\"$MINC_LIB_DIR/perl5/5.8.5\" \\\n    PATH=\"$FREESURFER_HOME/bin:$FSFAST_HOME/bin:$FREESURFER_HOME/tktools:$MINC_BIN_DIR:$PATH\"\n\n# Install AFNI latest (neurodocker build)\nENV AFNI_DIR=\"/opt/afni\"\nRUN echo \"Downloading AFNI ...\" \\\n    && mkdir -p ${AFNI_DIR} \\\n    && curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \\\n       | tar -xz -C ${AFNI_DIR} --strip-components 1 \\\n    # Keep only what we use\n    && find ${AFNI_DIR} -type f -not \\( \\\n        -name \"3dTshift\" -or \\\n        -name \"3dUnifize\" -or \\\n        -name \"3dAutomask\" -or \\\n        -name \"3dvolreg\" \\) -delete\n\nENV PATH=\"${AFNI_DIR}:$PATH\" \\\n    AFNI_IMSAVE_WARNINGS=\"NO\" \\\n    AFNI_MODELPATH=\"${AFNI_DIR}/models\" \\\n    AFNI_TTATLAS_DATASET=\"${AFNI_DIR}/atlases\" \\\n    AFNI_PLUGINPATH=\"${AFNI_DIR}/plugins\"\n\n# Install AFNI's dependencies\nRUN ${CONDA_PATH}/bin/conda install -c conda-forge -c anaconda \\\n                            gsl                                \\\n                            xorg-libxp                         \\\n                            scipy=1.8                          \\\n    && ${CONDA_PATH}/bin/conda install -c sssdgc png \\\n    && sync \\\n    && ${CONDA_PATH}/bin/conda clean -afy; sync \\\n    && rm -rf ~/.conda ~/.cache/pip/*; sync \\\n    && ln -s ${CONDA_PATH}/lib/libgsl.so.25 /usr/lib/x86_64-linux-gnu/libgsl.so.19 \\\n    && ln -s ${CONDA_PATH}/lib/libgsl.so.25 /usr/lib/x86_64-linux-gnu/libgsl.so.0 \\\n    && ldconfig\n\nRUN apt-get update \\\n && apt-get install -y -q --no-install-recommends     \\\n                    libcurl4-openssl-dev              \\\n                    libgdal-dev                       \\\n                    libgfortran-8-dev                 \\\n                    libgfortran4                      \\\n                    libglw1-mesa                      \\\n                    libgomp1                          \\\n                    libjpeg62                         \\\n                    libnode-dev                       \\\n                    libssl-dev                        \\\n                    libudunits2-dev                   \\\n                    libxm4                            \\\n                    libxml2-dev                       \\\n                    netpbm                            \\\n                    tcsh                              \\\n                    xfonts-base                       \\\n && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n && ldconfig\n\n# Installing ANTs 2.3.4 (NeuroDocker build)\nENV ANTSPATH=\"/opt/ants\"\nWORKDIR $ANTSPATH\nRUN curl -f -sSL \"https://dl.dropbox.com/s/gwf51ykkk5bifyj/ants-Linux-centos6_x86_64-v2.3.4.tar.gz\" \\\n    | tar -xzC $ANTSPATH --strip-components 1\nENV PATH=\"$ANTSPATH:$PATH\"\n\n# FSL 6.0.5.1\nRUN curl -f -sSL https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.5.1-centos7_64.tar.gz | tar zxv --no-same-owner -C /opt \\\n    --exclude='fsl/doc' \\\n    --exclude='fsl/refdoc' \\\n    --exclude='fsl/python/oxford_asl' \\\n    --exclude='fsl/data/possum' \\\n    --exclude='fsl/data/first' \\\n    --exclude='fsl/data/mist' \\\n    --exclude='fsl/data/atlases' \\\n    --exclude='fsl/data/xtract_data' \\\n    --exclude='fsl/extras/doc' \\\n    --exclude='fsl/extras/man' \\\n    --exclude='fsl/extras/src' \\\n    --exclude='fsl/src' \\\n    --exclude='fsl/tcl'\n\nENV FSLDIR=\"/opt/fsl\" \\\n    PATH=\"/opt/fsl/bin:$PATH\" \\\n    FSLOUTPUTTYPE=\"NIFTI_GZ\" \\\n    FSLMULTIFILEQUIT=\"TRUE\" \\\n    FSLTCLSH=\"/opt/fsl/bin/fsltclsh\" \\\n    FSLWISH=\"/opt/fsl/bin/fslwish\" \\\n    FSLLOCKDIR=\"\" \\\n    FSLMACHINELIST=\"\" \\\n    FSLREMOTECALL=\"\" \\\n    FSLGECUDAQ=\"cuda.q\" \\\n    POSSUMDIR=\"/opt/fsl\" \\\n    LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/opt/fsl\"\n\n# Unless otherwise specified each process should only use one thread - nipype\n# will handle parallelization\nENV MKL_NUM_THREADS=1 \\\n    OMP_NUM_THREADS=1\n\n# Convert3D (neurodocker build)\nRUN echo \"Downloading Convert3D ...\" \\\n    && mkdir -p /opt/convert3d-1.0.0 \\\n    && curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download \\\n    | tar -xz -C /opt/convert3d-1.0.0 --strip-components 1 \\\n    --exclude \"c3d-1.0.0-Linux-x86_64/lib\" \\\n    --exclude \"c3d-1.0.0-Linux-x86_64/share\" \\\n    --exclude \"c3d-1.0.0-Linux-x86_64/bin/c3d_gui\"\nENV C3DPATH=\"/opt/convert3d-1.0.0\" \\\n    PATH=\"/opt/convert3d-1.0.0/bin:$PATH\"\n\n# Create a shared $HOME directory\nRUN useradd -m -s /bin/bash -G users niworkflows\nWORKDIR /home/niworkflows\nENV HOME=\"/home/niworkflows\" \\\n    LD_LIBRARY_PATH=\"/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\"\n\n# Unless otherwise specified each process should only use one thread - nipype\n# will handle parallelization\nENV MKL_NUM_THREADS=1 \\\n    OMP_NUM_THREADS=1\n\nWORKDIR /src/niworkflows/\nCOPY . /src/niworkflows/\nARG VERSION\nRUN echo \"${VERSION}\" > /src/niworkflows/niworkflows/VERSION && \\\n    echo \"include niworkflows/VERSION\" >> /src/niworkflows/MANIFEST.in && \\\n    pip install --no-cache-dir -e .[all] && \\\n    rm -rf $HOME/.cache/pip\n\nCOPY docker/files/nipype.cfg /home/niworkflows/.nipype/nipype.cfg\n\n# Cleanup and ensure perms.\nRUN rm -rf $HOME/.npm $HOME/.conda $HOME/.empty && \\\n    find $HOME -type d -exec chmod go=u {} + && \\\n    find $HOME -type f -exec chmod go=u {} +\n\n# Final settings\nWORKDIR /tmp\nARG BUILD_DATE\nARG VCS_REF\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"niworkflows\" \\\n      org.label-schema.description=\"niworkflows - NeuroImaging workflows\" \\\n      org.label-schema.url=\"https://github.com/nipreps/niworkflows\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/nipreps/niworkflows\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.schema-version=\"1.0\"\n"
}