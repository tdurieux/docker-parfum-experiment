{
  "startTime": 1674215740536,
  "endTime": 1674215742144,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 7,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 7,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 7,
        "columnEnd": 182
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 7,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 7,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 7,
        "columnEnd": 182
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NiWorkflows Docker Container Image distribution\n#\n# MIT License\n#\n# Copyright (c) 2021 The NiPreps Developers\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in all\n# copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\n# Use Ubuntu 20.04 LTS\nFROM ubuntu:focal-20210416\n\n# Prepare environment\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n                    apt-utils \\\n                    autoconf \\\n                    build-essential \\\n                    bzip2 \\\n                    ca-certificates \\\n                    curl \\\n                    git \\\n                    libtool \\\n                    lsb-release \\\n                    pkg-config \\\n                    unzip \\\n                    xvfb && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nENV DEBIAN_FRONTEND=\"noninteractive\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\n\n# FSL 6.0.5.1\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           bc \\\n           dc \\\n           file \\\n           libfontconfig1 \\\n           libfreetype6 \\\n           libgl1-mesa-dev \\\n           libgl1-mesa-dri \\\n           libglu1-mesa-dev \\\n           libgomp1 \\\n           libice6 \\\n           libxcursor1 \\\n           libxft2 \\\n           libxinerama1 \\\n           libxrandr2 \\\n           libxrender1 \\\n           libxt6 \\\n           sudo \\\n           wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && echo \"Downloading FSL ...\" \\\n    && mkdir -p /opt/fsl-6.0.5.1 \\\n    && curl -fsSL --retry 5 https://fsl.fmrib.ox.ac.uk/fsldownloads/fsl-6.0.5.1-centos7_64.tar.gz \\\n    | tar -xz -C /opt/fsl-6.0.5.1 --strip-components 1 \\\n    --exclude \"fsl/config\" \\\n    --exclude \"fsl/data/atlases\" \\\n    --exclude \"fsl/data/first\" \\\n    --exclude \"fsl/data/mist\" \\\n    --exclude \"fsl/data/possum\" \\\n    --exclude \"fsl/data/standard/bianca\" \\\n    --exclude \"fsl/data/standard/tissuepriors\" \\\n    --exclude \"fsl/doc\" \\\n    --exclude \"fsl/etc/default_flobs.flobs\" \\\n    --exclude \"fsl/etc/fslconf\" \\\n    --exclude \"fsl/etc/js\" \\\n    --exclude \"fsl/etc/luts\" \\\n    --exclude \"fsl/etc/matlab\" \\\n    --exclude \"fsl/extras\" \\\n    --exclude \"fsl/include\" \\\n    --exclude \"fsl/python\" \\\n    --exclude \"fsl/refdoc\" \\\n    --exclude \"fsl/src\" \\\n    --exclude \"fsl/tcl\" \\\n    --exclude \"fsl/bin/FSLeyes\" \\\n    && find /opt/fsl-6.0.5.1/bin -type f -not \\( \\\n        -name \"applywarp\" -or \\\n        -name \"bet\" -or \\\n        -name \"bet2\" -or \\\n        -name \"convert_xfm\" -or \\\n        -name \"fast\" -or \\\n        -name \"flirt\" -or \\\n        -name \"fsl_regfilt\" -or \\\n        -name \"fslhd\" -or \\\n        -name \"fslinfo\" -or \\\n        -name \"fslmaths\" -or \\\n        -name \"fslmerge\" -or \\\n        -name \"fslroi\" -or \\\n        -name \"fslsplit\" -or \\\n        -name \"fslstats\" -or \\\n        -name \"imtest\" -or \\\n        -name \"mcflirt\" -or \\\n        -name \"melodic\" -or \\\n        -name \"prelude\" -or \\\n        -name \"remove_ext\" -or \\\n        -name \"susan\" -or \\\n        -name \"topup\" -or \\\n        -name \"zeropad\" \\) -delete \\\n    && find /opt/fsl-6.0.5.1/data/standard -type f -not -name \"MNI152_T1_2mm_brain.nii.gz\" -delete\nENV FSLDIR=\"/opt/fsl-6.0.5.1\" \\\n    PATH=\"/opt/fsl-6.0.5.1/bin:$PATH\" \\\n    FSLOUTPUTTYPE=\"NIFTI_GZ\" \\\n    FSLMULTIFILEQUIT=\"TRUE\" \\\n    FSLLOCKDIR=\"\" \\\n    FSLMACHINELIST=\"\" \\\n    FSLREMOTECALL=\"\" \\\n    FSLGECUDAQ=\"cuda.q\" \\\n    LD_LIBRARY_PATH=\"/opt/fsl-6.0.5.1/lib:$LD_LIBRARY_PATH\"\n\n# Convert3D (neurodocker build)\nRUN echo \"Downloading Convert3D ...\" \\\n    && mkdir -p /opt/convert3d-1.0.0 \\\n    && curl -fsSL --retry 5 https://sourceforge.net/projects/c3d/files/c3d/1.0.0/c3d-1.0.0-Linux-x86_64.tar.gz/download \\\n    | tar -xz -C /opt/convert3d-1.0.0 --strip-components 1 \\\n    --exclude \"c3d-1.0.0-Linux-x86_64/lib\" \\\n    --exclude \"c3d-1.0.0-Linux-x86_64/share\" \\\n    --exclude \"c3d-1.0.0-Linux-x86_64/bin/c3d_gui\"\nENV C3DPATH=\"/opt/convert3d-1.0.0\" \\\n    PATH=\"/opt/convert3d-1.0.0/bin:$PATH\"\n\n# AFNI latest (neurodocker build)\nRUN apt-get update -qq \\\n    && apt-get install -y -q --no-install-recommends \\\n           apt-utils \\\n           ed \\\n           gsl-bin \\\n           libglib2.0-0 \\\n           libglu1-mesa-dev \\\n           libglw1-mesa \\\n           libgomp1 \\\n           libjpeg62 \\\n           libxm4 \\\n           netpbm \\\n           tcsh \\\n           xfonts-base \\\n           xvfb \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && curl -f -sSL --retry 5 -o /tmp/multiarch.deb https://archive.ubuntu.com/ubuntu/pool/main/g/glibc/multiarch-support_2.27-3ubuntu1.2_amd64.deb \\\n    && dpkg -i /tmp/multiarch.deb \\\n    && rm /tmp/multiarch.deb \\\n    && curl -f -sSL --retry 5 -o /tmp/libxp6.deb https://mirrors.kernel.org/debian/pool/main/libx/libxp/libxp6_1.0.2-2_amd64.deb \\\n    && dpkg -i /tmp/libxp6.deb \\\n    && rm /tmp/libxp6.deb \\\n    && curl -f -sSL --retry 5 -o /tmp/libpng.deb https://snapshot.debian.org/archive/debian-security/20160113T213056Z/pool/updates/main/libp/libpng/libpng12-0_1.2.49-1%2Bdeb7u2_amd64.deb \\\n    && dpkg -i /tmp/libpng.deb \\\n    && rm /tmp/libpng.deb \\\n    && apt-get install -y -f \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && gsl2_path=\"$(find / -name 'libgsl.so.19' || printf '')\" \\\n    && if [ -n \"$gsl2_path\" ]; then \\\n         ln -sfv \"$gsl2_path\" \"$(dirname $gsl2_path)/libgsl.so.0\"; \\\n    fi \\\n    && ldconfig \\\n    && echo \"Downloading AFNI ...\" \\\n    && mkdir -p /opt/afni-latest \\\n    && curl -fsSL --retry 5 https://afni.nimh.nih.gov/pub/dist/tgz/linux_openmp_64.tgz \\\n    | tar -xz -C /opt/afni-latest --strip-components 1 \\\n    --exclude \"linux_openmp_64/*.gz\" \\\n    --exclude \"linux_openmp_64/funstuff\" \\\n    --exclude \"linux_openmp_64/shiny\" \\\n    --exclude \"linux_openmp_64/afnipy\" \\\n    --exclude \"linux_openmp_64/lib/RetroTS\" \\\n    --exclude \"linux_openmp_64/meica.libs\" \\\n    # Keep only what we use\n    && find /opt/afni-latest -type f -not \\( \\\n        -name \"3dTshift\" -or \\\n        -name \"3dUnifize\" -or \\\n        -name \"3dAutomask\" -or \\\n        -name \"3dvolreg\" \\) -delete\n\nENV PATH=\"/opt/afni-latest:$PATH\" \\\n    AFNI_IMSAVE_WARNINGS=\"NO\" \\\n    AFNI_PLUGINPATH=\"/opt/afni-latest\"\n\n# Installing ANTs 2.3.3 (NeuroDocker build)\n# Note: the URL says 2.3.4 but it is actually 2.3.3\nENV ANTSPATH=\"/opt/ants\" \\\n    PATH=\"/opt/ants:$PATH\"\nWORKDIR $ANTSPATH\nRUN curl -f -sSL \"https://dl.dropbox.com/s/gwf51ykkk5bifyj/ants-Linux-centos6_x86_64-v2.3.4.tar.gz\" \\\n    | tar -xzC $ANTSPATH --strip-components 1\n\nCOPY --from=nipreps/miniconda@sha256:40fffd37963502dcd8549773559fc21182f52460e59e0ad6398a84faf6055641 /opt/conda /opt/conda\n\nRUN ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc\n\n# Set CPATH for packages relying on compiled libs (e.g. indexed_gzip)\nENV PATH=\"/opt/conda/bin:$PATH\" \\\n    CPATH=\"/opt/conda/include:$CPATH\" \\\n    LD_LIBRARY_PATH=\"/opt/conda/lib:$LD_LIBRARY_PATH\" \\\n    LANG=\"C.UTF-8\" \\\n    LC_ALL=\"C.UTF-8\" \\\n    PYTHONNOUSERSITE=1\n\n# Unless otherwise specified each process should only use one thread - nipype\n# will handle parallelization\nENV MKL_NUM_THREADS=1 \\\n    OMP_NUM_THREADS=1\n\n# Open a hook to patch FreeSurfer in\nENV FREESURFER_HOME=\"/opt/freesurfer\" \\\n    MINC_LIB_DIR=\"/opt/freesurfer/mni/lib\"\nENV SUBJECTS_DIR=\"$FREESURFER_HOME/subjects\" \\\n    FUNCTIONALS_DIR=\"$FREESURFER_HOME/sessions\" \\\n    MNI_DIR=\"$FREESURFER_HOME/mni\" \\\n    LOCAL_DIR=\"$FREESURFER_HOME/local\" \\\n    MINC_BIN_DIR=\"$FREESURFER_HOME/mni/bin\" \\\n    MNI_DATAPATH=\"$FREESURFER_HOME/mni/data\" \\\n    PATH=\"$FREESURFER_HOME/bin:$MINC_BIN_DIR:$PATH\"\n\n# Create a shared $HOME directory\nRUN useradd -m -s /bin/bash -G users sdcflows\nWORKDIR /home/sdcflows\nENV HOME=\"/home/sdcflows\"\nCOPY .docker/files/nipype.cfg $HOME/.nipype/nipype.cfg\n\n# Installing dev requirements (packages that are not in pypi)\nWORKDIR /src/sdcflows\n\n# Installing SDCFlows\nCOPY . /src/sdcflows\n# Force static versioning within container\nARG VERSION\nENV SETUPTOOLS_SCM_PRETEND_VERSION=${VERSION}\nRUN sed -i \"s/fallback_version\\s=\\s\\\"0\\.0\\\"/fallback_version = \\\"${VERSION}\\\"/g\" pyproject.toml && \\\n    pip install --no-cache-dir .[all] && \\\n    rm -rf $HOME/.cache/pip\n\nRUN find $HOME -type d -exec chmod go=u {} + && \\\n    find $HOME -type f -exec chmod go=u {} +\n\nENV IS_DOCKER_8395080871=1\n\nRUN ldconfig\nWORKDIR /tmp/\n\nARG BUILD_DATE\nARG VCS_REF\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"SDCflows\" \\\n      org.label-schema.description=\"SDCflows - Susceptibility Distortion Correction (SDC) workflows for EPI MR schemes\" \\\n      org.label-schema.url=\"http://sdcflows.readthedocs.io\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/nipreps/sdcflows\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.schema-version=\"1.0\"\n"
}