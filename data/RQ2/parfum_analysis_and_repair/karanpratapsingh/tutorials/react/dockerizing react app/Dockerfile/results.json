{
  "startTime": 1674249900117,
  "endTime": 1674249900833,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine AS development\nENV NODE_ENV development\n# Add a work directory\nWORKDIR /app\n# Cache and Install dependencies\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install && yarn cache clean;\n# Copy app files\nCOPY . .\n# Expose port\nEXPOSE 3000\n# Start the app\nCMD [ \"yarn\", \"start\" ]\n\nFROM node:14-alpine AS builder\nENV NODE_ENV production\n# Add a work directory\nWORKDIR /app\n# Cache and Install dependencies\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install --production && yarn cache clean;\n# Copy app files\nCOPY . .\n# Build the app\nRUN yarn build\n\n# Bundle static assets with nginx\nFROM nginx:1.21.0-alpine as production\nENV NODE_ENV production\n# Copy built assets from builder\nCOPY --from=builder /app/build /usr/share/nginx/html\n# Add your nginx.conf\nCOPY nginx.conf /etc/nginx/conf.d/default.conf\n# Expose port\nEXPOSE 80\n# Start nginx\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}