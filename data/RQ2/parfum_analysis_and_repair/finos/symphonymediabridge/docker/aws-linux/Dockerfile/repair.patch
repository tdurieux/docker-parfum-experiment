diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/finos/symphonymediabridge/docker/aws-linux/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/finos/symphonymediabridge/docker/aws-linux/Dockerfile/repaired.Dockerfile
index ec20a3f..9100f72 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/finos/symphonymediabridge/docker/aws-linux/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/finos/symphonymediabridge/docker/aws-linux/Dockerfile/repaired.Dockerfile
@@ -2,8 +2,8 @@ FROM amazonlinux:2
 
 RUN yum -y update && yum -y upgrade
 RUN yum -y groupinstall "Development Tools"
-RUN yum -y install git wget which
-RUN amazon-linux-extras enable python3.8 && yum -y install python3.8
+RUN yum -y install git wget which && rm -rf /var/cache/yum
+RUN amazon-linux-extras enable python3.8 && yum -y install python3.8 && rm -rf /var/cache/yum
 
 # Build openssl-1.1.1l
 RUN cd /tmp \
@@ -11,11 +11,11 @@ RUN cd /tmp \
     && cd /tmp/openssl-1.1.1l \
     && ./config \
     && make -j8 \
-    && make install_sw
+    && make install_sw && rm openssl-1.1.1l.tar.gz
 
 
 RUN cd /tmp && wget https://cmake.org/files/v3.18/cmake-3.18.0.tar.gz && tar -xvzf cmake-3.18.0.tar.gz \
-    && cd cmake-3.18.0 && ./bootstrap && make && make install
+    && cd cmake-3.18.0 && ./bootstrap && make && make install && rm cmake-3.18.0.tar.gz
 
 RUN cd /tmp \
     && wget -O clang+llvm-12.0.1-x86_64-linux.tar.xz https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz \
@@ -32,7 +32,7 @@ RUN cd /tmp \
     && git clone https://github.com/cisco/libsrtp \
     && cd /tmp/libsrtp \
     && git checkout v2.4.2 \
-    && PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig ./configure --enable-openssl \
+    && PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-openssl \
     && make -j8 \
     && make install
 
@@ -40,15 +40,15 @@ RUN cd /tmp \
     && wget https://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.73.tar.gz \
     && tar xvzf libmicrohttpd-0.9.73.tar.gz \
     && cd /tmp/libmicrohttpd-0.9.73 \
-    && ./configure --disable-https \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-https \
     && make -j8 \
-    && make install
+    && make install && rm libmicrohttpd-0.9.73.tar.gz
 
 # Build opus 1.3.1
 RUN cd /tmp \
     && wget https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz \
     && tar xvfz opus-1.3.1.tar.gz \
     && cd /tmp/opus-1.3.1 \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make -j8 \
-    && make install
+    && make install && rm opus-1.3.1.tar.gz