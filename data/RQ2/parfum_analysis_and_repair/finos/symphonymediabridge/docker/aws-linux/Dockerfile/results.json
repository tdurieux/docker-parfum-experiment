{
  "startTime": 1674251325798,
  "endTime": 1674251326865,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 44,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 68,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 73,
        "columnEnd": 102
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2\n\nRUN yum -y update && yum -y upgrade\nRUN yum -y groupinstall \"Development Tools\"\nRUN yum -y install git wget which && rm -rf /var/cache/yum\nRUN amazon-linux-extras enable python3.8 && yum -y install python3.8 && rm -rf /var/cache/yum\n\n# Build openssl-1.1.1l\nRUN cd /tmp \\\n    && wget https://www.openssl.org/source/openssl-1.1.1l.tar.gz && tar xvfz openssl-1.1.1l.tar.gz \\\n    && cd /tmp/openssl-1.1.1l \\\n    && ./config \\\n    && make -j8 \\\n    && make install_sw && rm openssl-1.1.1l.tar.gz\n\n\nRUN cd /tmp && wget https://cmake.org/files/v3.18/cmake-3.18.0.tar.gz && tar -xvzf cmake-3.18.0.tar.gz \\\n    && cd cmake-3.18.0 && ./bootstrap && make && make install && rm cmake-3.18.0.tar.gz\n\nRUN cd /tmp \\\n    && wget -O clang+llvm-12.0.1-x86_64-linux.tar.xz https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-16.04.tar.xz \\\n    && tar xvf clang+llvm-12.0.1-x86_64-linux.tar.xz \\\n    && cd clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-* \\\n    && cp -rn * /usr/local \\\n    && cd /tmp && rm -rf clang+llvm-12.0.1-x86_64-linux-gnu-ubuntu-* \\\n    && ln -s /usr/local/bin/lld /usr/local/bin/ld \\\n    && rm clang+llvm-12.0.1-x86_64-linux.tar.xz\n\n\n# Build libsrtp 2.4.2\nRUN cd /tmp \\\n    && git clone https://github.com/cisco/libsrtp \\\n    && cd /tmp/libsrtp \\\n    && git checkout v2.4.2 \\\n    && PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-openssl \\\n    && make -j8 \\\n    && make install\n\nRUN cd /tmp \\\n    && wget https://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.73.tar.gz \\\n    && tar xvzf libmicrohttpd-0.9.73.tar.gz \\\n    && cd /tmp/libmicrohttpd-0.9.73 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-https \\\n    && make -j8 \\\n    && make install && rm libmicrohttpd-0.9.73.tar.gz\n\n# Build opus 1.3.1\nRUN cd /tmp \\\n    && wget https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz \\\n    && tar xvfz opus-1.3.1.tar.gz \\\n    && cd /tmp/opus-1.3.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j8 \\\n    && make install && rm opus-1.3.1.tar.gz\n"
}