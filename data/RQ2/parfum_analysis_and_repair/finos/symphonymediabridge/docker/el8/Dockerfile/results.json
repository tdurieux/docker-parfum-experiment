{
  "startTime": 1674220700517,
  "endTime": 1674220703386,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 46,
        "columnEnd": 117
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 36,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 26,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 76,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 89,
        "columnEnd": 125
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 78,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM redhat/ubi8:latest\n\nRUN yum -y update && yum -y upgrade\n\n# Install build dependenices\nRUN yum -y install git llvm-toolset cmake libtool wget lsof python3 perl-IO-Compress perl-JSON-PP make perl-Pod-Html xz && rm -rf /var/cache/yum\n\n# Build lcov 1.15\nRUN cd /tmp && git clone https://github.com/linux-test-project/lcov.git\nRUN cd /tmp/lcov && git checkout v1.15 && make install\n\n# Fetch llvm and build libc++ 10\nRUN cd /tmp/ && git clone https://github.com/llvm/llvm-project.git --branch release/10.x --single-branch --depth 1\nRUN cd /tmp/llvm-project/ && mkdir build\nRUN cd /tmp/llvm-project/build && cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_PROJECTS='libcxx;libcxxabi' ../llvm/\nRUN cd /tmp/llvm-project/build && make -j5 cxx && make install-cxx install-cxxabi\n\n# Build openssl-1.1.1l\nRUN cd /tmp && wget https://www.openssl.org/source/openssl-1.1.1l.tar.gz && tar xvfz openssl-1.1.1l.tar.gz && rm openssl-1.1.1l.tar.gz\nRUN cd /tmp/openssl-1.1.1l && ./config && make && make install\n\n# Build libsrtp 2.4.2\nRUN cd /tmp && git clone https://github.com/cisco/libsrtp\nRUN cd /tmp/libsrtp && git checkout v2.4.2 && PKG_CONFIG_PATH=/usr/local/lib64/pkgconfig ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-openssl && make && make install\n\n# Build libmicrohttpd 0.9.73\nRUN cd /tmp && wget https://ftp.gnu.org/gnu/libmicrohttpd/libmicrohttpd-0.9.73.tar.gz && tar xvfz libmicrohttpd-0.9.73.tar.gz && rm libmicrohttpd-0.9.73.tar.gz\nRUN cd /tmp/libmicrohttpd-0.9.73 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-https && make && make install\n\n# Build opus 1.3.1\nRUN cd /tmp && wget https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz && tar xvfz opus-1.3.1.tar.gz && rm opus-1.3.1.tar.gz\nRUN cd /tmp/opus-1.3.1 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n"
}