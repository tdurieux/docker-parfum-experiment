{
  "startTime": 1674253334037,
  "endTime": 1674253335138,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 36,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 54,
        "columnEnd": 72
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 24,
        "columnEnd": 35
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 24,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:latest\nMAINTAINER Maxim B. Belooussov <belooussov@gmail.com> Toon Leijtens <toon.leijtens@ing.com>\nRUN yum -y groupinstall \"Development Tools\"\nRUN yum -y install bc && rm -rf /var/cache/yum\nRUN yum -y install golang && rm -rf /var/cache/yum\nRUN git clone https://github.com/ethereum/go-ethereum\n\n# Davy Jones' Locker\nARG ETHVERSION=v1.7.3\nRUN cd /go-ethereum && git checkout $ETHVERSION && make geth && cp /go-ethereum/build/bin/* /usr/local/sbin/\nRUN yum -y remove golang\nRUN rm -rf /go-ethereum\n\nRUN yum -y install epel-release && rm -rf /var/cache/yum\nRUN yum -y update\nRUN yum -y install libusb && rm -rf /var/cache/yum\nRUN yum -y install nodejs npm && rm -rf /var/cache/yum\nRUN git clone https://github.com/cubedro/eth-net-intelligence-api /eth-net-intelligence-api\n\nARG WS_SECRET\nENV WS_SECRET ${WS_SECRET}\nCOPY artifacts/app.json /eth-net-intelligence-api/app.json\nRUN sed -i \"s/__PW__/`echo $WS_SECRET`/g\" /eth-net-intelligence-api/app.json\nRUN cd /eth-net-intelligence-api && npm install -d && npm install pm2 -g && npm cache clean --force;\n\n# WORKDIR /eth-net-intelligence-api\n# ENTRYPOINT [\"pm2\",\"start\",\"--no-daemon\",\"app.json\"]\n\nWORKDIR /\n\n# eth-netstats\nRUN git clone https://github.com/cubedro/eth-netstats &&\\\n    cd /eth-netstats && npm install &&\\\n    cd /eth-netstats && npm install -g grunt-cli &&\\\n    cd /eth-netstats && grunt all && npm cache clean --force;\n\nENV DATADIR=/root/.ethereum\nWORKDIR $DATADIR\n\nCOPY artifacts/genesis.json /root/.ethereum/\nCOPY artifacts/key.* /root/.ethereum/\nCOPY artifacts/static-nodes_one.json /root/.ethereum/\nCOPY artifacts/static-nodes_two.json /root/.ethereum/\n\nARG NETWORKID=66\nENV NETWORKID $NETWORKID\n\nRUN for i in admin user1 user2 user3 user4 user5 user6; do \\\n\techo $WS_SECRET > credentials.$i; \\\n    /usr/local/sbin/geth --datadir /root/.ethereum --password /root/.ethereum/credentials.$i account new > /root/.ethereum/$i.id; \\\n    sed -i \"s/Address: {//g\" /root/.ethereum/$i.id; \\\n    sed -i \"s/}//g\" /root/.ethereum/$i.id; \\\n    sed -i \"s/$i/0x$(cat /root/.ethereum/$i.id)/\" /root/.ethereum/genesis.json; \\\n    done\n\nCOPY artifacts/entrypoint.sh /entrypoint.sh\nRUN sed -i \"s/adminetherbase/0x$(cat /root/.ethereum/admin.id)/\" /entrypoint.sh\n\nRUN /usr/local/sbin/geth --networkid $NETWORKID init /root/.ethereum/genesis.json\n\nARG NETWORKPORT=30303\nENV NETWORKPORT $NETWORKPORT\n\nARG RPCPORT=8545\nENV RPCPORT $RPCPORT\n\nARG MONITORPORT=3000\nENV MONITORPORT $MONITORPORT\n\n# Toon has picked the port numbers\nEXPOSE $RPCPORT $NETWORKPORT $MONITORPORT\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}