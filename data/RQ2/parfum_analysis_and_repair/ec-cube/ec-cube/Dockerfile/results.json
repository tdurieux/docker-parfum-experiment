{
  "startTime": 1674255960081,
  "endTime": 1674255961068,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache-bullseye\n\nENV APACHE_DOCUMENT_ROOT /var/www/html\n\nRUN apt update \\\n  && apt upgrade -y \\\n  && apt install --no-install-recommends -y \\\n    apt-transport-https \\\n    apt-utils \\\n    build-essential \\\n    curl \\\n    debconf-utils \\\n    gcc \\\n    git \\\n    vim \\\n    gnupg2 \\\n    libfreetype6-dev \\\n    libicu-dev \\\n    libjpeg62-turbo-dev \\\n    libpng-dev \\\n    libpq-dev \\\n    libzip-dev \\\n    locales \\\n    ssl-cert \\\n    unzip \\\n    zlib1g-dev \\\n    libwebp-dev \\\n  && apt upgrade -y ca-certificates \\\n  && apt clean \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && echo \"en_US.UTF-8 UTF-8\" >/etc/locale.gen \\\n  && locale-gen \\\n  ;\n\nRUN docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql \\\n  && docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp \\\n  && docker-php-ext-install -j$(nproc) zip gd mysqli pdo_mysql opcache intl pgsql pdo_pgsql \\\n  ;\n\nRUN pecl install apcu && echo \"extension=apcu.so\" > /usr/local/etc/php/conf.d/apc.ini\n\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n  && apt update \\\n  && apt install --no-install-recommends -y nodejs \\\n  && apt clean \\\n  ; rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p ${APACHE_DOCUMENT_ROOT} \\\n  && sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf \\\n  && sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf \\\n  ;\n\nRUN a2enmod rewrite headers ssl\n# Enable SSL\nRUN ln -s /etc/apache2/sites-available/default-ssl.conf /etc/apache2/sites-enabled/default-ssl.conf\nEXPOSE 443\n\n# Use the default production configuration\nRUN mv \"$PHP_INI_DIR/php.ini-production\" \"$PHP_INI_DIR/php.ini\"\n# Override with custom configuration settings\nCOPY dockerbuild/php.ini $PHP_INI_DIR/conf.d/\nCOPY dockerbuild/docker-php-entrypoint /usr/local/bin/\n\nRUN curl -f -sS https://getcomposer.org/installer \\\n  | php \\\n  && mv composer.phar /usr/bin/composer\n\nRUN composer config -g repos.packagist composer https://packagist.jp\n\nCOPY . ${APACHE_DOCUMENT_ROOT}\nWORKDIR ${APACHE_DOCUMENT_ROOT}\n\nRUN find ${APACHE_DOCUMENT_ROOT} \\( -path ${APACHE_DOCUMENT_ROOT}/vendor -prune \\) -or -print0 \\\n  | xargs -0 chown www-data:www-data \\\n  && find ${APACHE_DOCUMENT_ROOT} \\( -path ${APACHE_DOCUMENT_ROOT}/vendor -prune \\) -or \\( -type d -print0 \\) \\\n  | xargs -0 chmod g+s \\\n  ;\n\nHEALTHCHECK --interval=10s --timeout=5s --retries=30 CMD pgrep apache"
}