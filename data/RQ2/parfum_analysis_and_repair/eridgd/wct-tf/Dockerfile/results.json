{
  "startTime": 1674251115267,
  "endTime": 1674251116055,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.2.1-gpu-py3\n\nRUN sed -i \"s/jessie main/jessie main contrib non-free/\" /etc/apt/sources.list\nRUN echo \"deb http://http.debian.net/debian jessie-backports main contrib non-free\" >> /etc/apt/sources.list\n\nRUN gpg --batch --keyserver pgpkeys.mit.edu --recv-key 7638D0442B90D010\nRUN gpg --batch -a --export 7638D0442B90D010 | apt-key add -\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n        cmake \\\n        ffmpeg \\\n        gfortran \\\n        git \\\n        libatlas-base-dev \\\n        libavcodec-dev \\\n        libavformat-dev \\\n        libcanberra-gtk-module \\\n        libgtk2.0-dev \\\n        libjasper-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libpng12-dev \\\n        libpq-dev \\\n        libswscale-dev \\\n        libtbb-dev \\\n        libtbb2 \\\n        libtiff-dev \\\n        libtiff5-dev \\\n        libv4l-dev \\\n        libx264-dev \\\n        libxvidcore-dev \\\n        pkg-config \\\n        python2.7-dev \\\n        python3.5-dev \\\n        python-pip \\\n        unzip \\\n        wget \\\n        yasm \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir numpy\nRUN pip2 install --no-cache-dir numpy\n\nWORKDIR /\nRUN wget https://github.com/opencv/opencv_contrib/archive/3.2.0.zip \\\n&& unzip 3.2.0.zip \\\n&& rm 3.2.0.zip\n\nRUN wget https://github.com/Itseez/opencv/archive/3.2.0.zip \\\n&& unzip 3.2.0.zip \\\n&& mkdir /opencv-3.2.0/cmake_binary \\\n&& cd /opencv-3.2.0/cmake_binary \\\n&& cmake -DBUILD_TIFF=ON \\\n  -DBUILD_opencv_java=OFF \\\n  -DOPENCV_EXTRA_MODULES_PATH=/opencv_contrib-3.2.0/modules \\\n  -DWITH_CUDA=OFF \\\n  -DENABLE_AVX=ON \\\n  -DWITH_OPENGL=ON \\\n  -DWITH_OPENCL=ON \\\n  -DWITH_IPP=ON \\\n  -DWITH_TBB=ON \\\n  -DWITH_EIGEN=ON \\\n  -DWITH_V4L=ON \\\n  -DBUILD_TESTS=OFF \\\n  -DBUILD_PERF_TESTS=OFF \\\n  -DCMAKE_BUILD_TYPE=RELEASE \\\n  -DCMAKE_INSTALL_PREFIX=$(python3 -c \"import sys; print(sys.prefix)\") \\\n  -DPYTHON_EXECUTABLE=$(which python3) \\\n  -DPYTHON3_INCLUDE_DIR=$(python3 -c \"from distutils.sysconfig import get_python_inc; print(get_python_inc())\") \\\n  -DPYTHON_PACKAGES_PATH=$(python3 -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\") .. \\\n&& make install \\\n&& rm /3.2.0.zip \\\n&& rm -r /opencv-3.2.0 \\\n&& rm -r /opencv_contrib-3.2.0\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . .\n\nCMD python3 webcam.py \\\n    --checkpoints models/relu5_1 models/relu4_1 models/relu3_1 models/relu2_1 models/relu1_1 \\\n    --relu-targets relu5_1 relu4_1 relu3_1 relu2_1 relu1_1 \\\n    --style-size 512 \\\n    --alpha 0.8 \\\n    --style-path images\n"
}