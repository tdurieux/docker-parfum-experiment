{
  "startTime": 1674218940124,
  "endTime": 1674218940805,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile References: https://docs.docker.com/engine/reference/builder/\n# This dockerfile uses a multi-stage build system to reduce the image footprint.\n\n######-\n# Start from the latest golang base image as builder image (only used to compile the code)\n######-\nFROM golang:1.16 as builder\n\nARG BUILD_IDENTIFIER\nENV ENV_BUILD_IDENTIFIER=$BUILD_IDENTIFIER\n\nARG BUILD_VERSION\nENV ENV_BUILD_VERSION=$BUILD_VERSION\n\nRUN mkdir /build\n\n# Copy the source from the current directory to the Working Directory inside the container\nADD . /build/\n\n# Set the Current Working Directory inside the container\nWORKDIR /build\n\n# Workaround for failing travis-ci builds\nRUN rm -rf ~/go; rm -rf go.sum\n\n# Download dependencies\nRUN curl -f -L https://git.prolicht.digital/pub/healthcheck/-/releases/v1.0.1/downloads/binaries/hc -o /build/hc; \\\n    chmod +rx /build/hc; \\\n    echo \"Building version: $ENV_BUILD_IDENTIFIER-$ENV_BUILD_VERSION\"\n\n# Build the Go app\nRUN go clean -modcache; go mod tidy; make build-docker\n\n######-\n# Here starts the main image\n######-\nFROM scratch\n\n# Setup timezone\nENV TZ=Europe/Vienna\n\n# Import linux stuff from builder.\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /etc/group /etc/group\n\n# Import healthcheck binary\nCOPY --from=builder /build/hc /app/hc\n\n# Copy binaries\nCOPY --from=builder /build/dist/wgportal /app/wgportal\n\n# Set the Current Working Directory inside the container\nWORKDIR /app\n\n# Command to run the executable\nCMD [ \"/app/wgportal\" ]\n\nHEALTHCHECK --interval=30s --timeout=5s --start-period=30s --retries=3 CMD [ \"/app/hc\", \"http://localhost:11223/health\" ]\n"
}