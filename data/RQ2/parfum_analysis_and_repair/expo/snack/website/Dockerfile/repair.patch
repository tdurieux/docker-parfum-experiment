diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/expo/snack/website/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/expo/snack/website/Dockerfile/repaired.Dockerfile
index ae0236d..a6b0052 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/expo/snack/website/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/expo/snack/website/Dockerfile/repaired.Dockerfile
@@ -7,9 +7,9 @@ WORKDIR /server
 # Set up monorepo
 COPY . ./
 # Install dependencies
-RUN yarn install --frozen-lockfile
+RUN yarn install --frozen-lockfile && yarn cache clean;
 # Build monorepo
-RUN yarn build
+RUN yarn build && yarn cache clean;
 
 # Start website
 WORKDIR /server/website
@@ -19,7 +19,7 @@ CMD ["yarn", "start"]
 FROM node:${node_version}-alpine
 WORKDIR /server
 
-# - root monorepo files 
+# - root monorepo files
 COPY --from=dev /server/package.json ./
 COPY --from=dev /server/yarn.lock ./
 # - used packages files
@@ -36,8 +36,8 @@ COPY --from=dev /server/website/package.json ./website/package.json
 COPY --from=dev /server/website/favicon.ico ./website/favicon.ico
 COPY --from=dev /server/website/resources.json ./website/resources.json
 COPY --from=dev /server/website/.env-cmdrc.json ./website/.env-cmdrc.json
-COPY --from=dev /server/website/babel.config.js ./website/babel.config.js 
-COPY --from=dev /server/website/tsconfig.json ./website/tsconfig.json 
+COPY --from=dev /server/website/babel.config.js ./website/babel.config.js
+COPY --from=dev /server/website/tsconfig.json ./website/tsconfig.json
 COPY --from=dev /server/website/webpack.config.js ./website/webpack.config.js
 
 # Set up the webpack/next.js build variables
@@ -83,14 +83,14 @@ ARG SNACK_AMPLITUDE_KEY
 ENV SNACK_AMPLITUDE_KEY ${SNACK_AMPLITUDE_KEY}
 
 # Reinstall dependencies to link the monorepo
-RUN yarn install --frozen-lockfile --production=false
+RUN yarn install --frozen-lockfile --production=false && yarn cache clean;
 
 WORKDIR /server/website
 # Build website
-RUN yarn build
+RUN yarn build && yarn cache clean;
 # Reinstall only production dependencies
-RUN yarn install --frozen-lockfile --production
+RUN yarn install --frozen-lockfile --production && yarn cache clean;
 # Finalize production image
-RUN yarn cache clean
+RUN yarn cache clean && yarn cache clean;
 
 CMD ["node", "."]