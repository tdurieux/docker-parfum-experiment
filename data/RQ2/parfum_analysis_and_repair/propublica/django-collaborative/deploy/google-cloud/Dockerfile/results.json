{
  "startTime": 1674248269151,
  "endTime": 1674248270155,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 9,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7\n\n# System dependencies\nRUN apt-get update -qqy \\\n      && apt-get install -qqy --no-install-recommends tzdata \\\n      && apt-get install --no-install-recommends -y git nginx libpq-dev gunicorn \\\n      && apt-get clean \\\n      && rm -rf /var/lib/apt/lists/*\n\n# Set env path variables used in this Dockerfile\nENV COLLABORATE_SRC=app\nENV COLLABORATE_SRVHOME=/srv\nENV COLLABORATE_SRVPROJ=$COLLABORATE_SRVHOME/$COLLABORATE_SRC\n\n# Create base application subdirectories for dynamic data\nWORKDIR $COLLABORATE_SRVHOME\nRUN mkdir -p media logs www/assets\nVOLUME [\"$COLLABORATE_SRVHOME/media/\", \"$COLLABORATE_SRVHOME/logs/\"]\n\n# Get the Collaborate repository. We would normally grab the\n# local code, but since we have to run this in a sub-directory\n# (Google Run collides with Heroku files) and Docker won't let you pull\n# things from an upper level directory, we pull from the repo.\n# Eventually we'll want to either add a specific commit or find a\n# way to reconcile between Google app.json and Heroku app.json.\nRUN rm -rf $COLLABORATE_SRVPROJ && git clone -b master \\\n      https://github.com/propublica/django-collaborative \\\n      $COLLABORATE_SRVPROJ\n\n# Build our web application\nWORKDIR $COLLABORATE_SRVPROJ\n\n# Python dependencies\nRUN pip install --no-cache-dir -r requirements.txt && rm requirements.txt\n\n# Daemon configs\nRUN pwd\nRUN ls -alh\nCOPY gunicorn-start.sh /\nCOPY django_nginx.conf /etc/nginx/sites-available/\nRUN ln -s /etc/nginx/sites-available/django_nginx.conf /etc/nginx/sites-enabled\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\nENV DJANGO_SETTINGS_MODULE \"collaborative.settings\"\n\n# intend gunicorn-start to be the entrypoint command for this image\nCMD  python manage.py migrate --noinput \\\n    && python manage.py collectstatic --noinput\\\n    && exec gunicorn --bind 0.0.0.0:$PORT \\\n        --workers 1 --threads 8 collaborative.wsgi\n"
}