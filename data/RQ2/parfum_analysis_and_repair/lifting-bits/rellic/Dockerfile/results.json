{
  "startTime": 1674215590248,
  "endTime": 1674215590932,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 176
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 92,
        "columnEnd": 158
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Choose your LLVM version\nARG LLVM_VERSION=14\nARG ARCH=amd64\nARG UBUNTU_VERSION=20.04\nARG DISTRO_BASE=ubuntu${UBUNTU_VERSION}\nARG BUILD_BASE=ubuntu:${UBUNTU_VERSION}\nARG LIBRARIES=/opt/trailofbits\n\n\n# Run-time dependencies go here\nFROM ${BUILD_BASE} as base\n\n# Build-time dependencies go here\n# See here for full list of those dependencies\n# https://github.com/lifting-bits/cxx-common/blob/master/docker/Dockerfile.ubuntu.vcpkg\nFROM trailofbits/cxx-common-vcpkg-builder-ubuntu:${UBUNTU_VERSION} as deps\nARG UBUNTU_VERSION\nARG ARCH\nARG LLVM_VERSION\nARG LIBRARIES\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -qqy python3 python3-pip libc6-dev wget liblzma-dev zlib1g-dev curl git build-essential ninja-build libselinux1-dev libbsd-dev ccache pixz xz-utils make rpm && \\\n    if [ \"$(uname -m)\" = \"x86_64\" ]; then \\\n    dpkg --add-architecture i386 && apt-get update && apt-get install --no-install-recommends -qqy gcc-multilib g++-multilib zip zlib1g-dev:i386; fi && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Source code build\nFROM deps as build\nARG LLVM_VERSION\nARG LIBRARIES\nENV TRAILOFBITS_LIBRARIES=\"${LIBRARIES}\"\nENV PATH=\"${LIBRARIES}/llvm/bin/:${LIBRARIES}/cmake/bin:${PATH}\"\n\nWORKDIR /rellic\nCOPY ./ ./\n# The reason we don't use --install\n# is so that container has the same exact code as the packages\nRUN ./scripts/build.sh \\\n  --llvm-version ${LLVM_VERSION} \\\n  --prefix /opt/trailofbits \\\n  --extra-cmake-args \"-DCMAKE_BUILD_TYPE=Release\"\n\nRUN cd rellic-build && \\\n    CTEST_OUTPUT_ON_FAILURE=1 cmake --build . --verbose --target test && \\\n    cmake --build . --target install\n\n# Small installation image\nFROM base as install\nARG LLVM_VERSION\n\nCOPY --from=build /opt/trailofbits /opt/trailofbits\nCOPY scripts/docker-decomp-entrypoint.sh /opt/trailofbits\nENV LLVM_VERSION=llvm${LLVM_VERSION}\nENTRYPOINT [\"/opt/trailofbits/docker-decomp-entrypoint.sh\"]\n"
}