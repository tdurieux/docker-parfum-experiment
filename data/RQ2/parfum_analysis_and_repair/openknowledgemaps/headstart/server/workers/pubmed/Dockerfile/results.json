{
  "startTime": 1674219919713,
  "endTime": 1674219921654,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 5,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 88,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 127,
        "lineEnd": 130,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 127,
        "lineEnd": 130,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 89,
        "columnStart": 5,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nMAINTAINER Chris Kittel \"christopher.kittel@openknowledgemaps.org\"\n\nENV DEBIAN_FRONTEND=noninteractive\n\nARG R_VERSION\nARG BUILD_DATE\nARG CRAN\n## Setting a BUILD_DATE will set CRAN to the matching MRAN date\n## No BUILD_DATE means that CRAN will default to latest\nENV R_VERSION=${R_VERSION:-3.6.3} \\\n    CRAN=${CRAN:-https://cran.rstudio.com}\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    bash-completion \\\n    ca-certificates \\\n    file \\\n    fonts-texgyre \\\n    g++ \\\n    gfortran \\\n    gsfonts \\\n    libblas-dev \\\n    libbz2-1.0 \\\n    libcurl4 \\\n    libjpeg-turbo8-dev \\\n    libopenblas-dev \\\n    libpangocairo-1.0-0 \\\n    libpcre3 \\\n    libpng16-16 \\\n    libreadline7 \\\n    libtiff5 \\\n    liblzma5 \\\n    locales \\\n    make \\\n    unzip \\\n    zip \\\n    zlib1g \\\n  && BUILDDEPS=\"curl \\\n    default-jdk \\\n    libbz2-dev \\\n    libcairo2-dev \\\n    libcurl4-openssl-dev \\\n    libpango1.0-dev \\\n    libjpeg-dev \\\n    libpcre3-dev \\\n    libpng-dev \\\n    libreadline-dev \\\n    libtiff5-dev \\\n    liblzma-dev \\\n    libx11-dev \\\n    libxt-dev \\\n    perl \\\n    tcl8.6-dev \\\n    tk8.6-dev \\\n    x11proto-core-dev \\\n    xauth \\\n    xfonts-base \\\n    xvfb \\\n    zlib1g-dev\" \\\n  && apt-get install -y --no-install-recommends $BUILDDEPS \\\n  && cd tmp/ \\\n  ## Download source code \\\n  && curl -f -O https://cran.r-project.org/src/base/R-3/R-${R_VERSION}.tar.gz \\\n  ## Extract source code\n  && tar -xf R-${R_VERSION}.tar.gz \\\n  && cd R-${R_VERSION} \\\n  ## Set compiler flags\n  && R_PAPERSIZE=letter \\\n    R_BATCHSAVE=\"--no-save --no-restore\" \\\n    R_BROWSER=xdg-open \\\n    PAGER=/usr/bin/pager \\\n    PERL=/usr/bin/perl \\\n    R_UNZIPCMD=/usr/bin/unzip \\\n    R_ZIPCMD=/usr/bin/zip \\\n    R_PRINTCMD=/usr/bin/lpr \\\n    LIBnn=lib \\\n    AWK=/usr/bin/awk \\\n    CFLAGS=\"-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g\" \\\n    CXXFLAGS=\"-g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g\" \\\n\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n\n\n\n\n\n\n\n\n  ## Configure options\n  --enable-R-shlib \\\n               --enable-memory-profiling \\\n               --with-readline \\\n               --with-blas \\\n               --with-tcltk \\\n               --disable-nls \\\n               --with-recommended-packages \\\n  ## Build and install\n  && make \\\n  && make install \\\n  ## Add a library directory (for user-installed packages)\n  && mkdir -p /usr/local/lib/R/site-library \\\n  && chown root:staff /usr/local/lib/R/site-library \\\n  && chmod g+ws /usr/local/lib/R/site-library \\\n  ## Fix library path\n  && sed -i '/^R_LIBS_USER=.*$/d' /usr/local/lib/R/etc/Renviron \\\n  && echo \"R_LIBS_USER=\\${R_LIBS_USER-'/usr/local/lib/R/site-library'}\" >> /usr/local/lib/R/etc/Renviron \\\n  && echo \"R_LIBS=\\${R_LIBS-'/usr/local/lib/R/site-library:/usr/local/lib/R/library:/usr/lib/R/library'}\" >> /usr/local/lib/R/etc/Renviron \\\n  ## Set configured CRAN mirror\n  && if [ -z \"$BUILD_DATE\" ]; then MRAN=$CRAN; \\\n   else MRAN=https://mran.microsoft.com/snapshot/${BUILD_DATE}; fi \\\n   && echo MRAN=$MRAN >> /etc/environment \\\n  && echo \"options(repos = c(CRAN='$MRAN'), download.file.method = 'libcurl')\" >> /usr/local/lib/R/etc/Rprofile.site \\\n  ## Use littler installation scripts\n  && Rscript -e \"install.packages(c('littler', 'docopt'), repo = '$CRAN')\" \\\n  && ln -s /usr/local/lib/R/site-library/littler/examples/install2.r /usr/local/bin/install2.r \\\n  && ln -s /usr/local/lib/R/site-library/littler/examples/installGithub.r /usr/local/bin/installGithub.r \\\n  && ln -s /usr/local/lib/R/site-library/littler/bin/r /usr/local/bin/r \\\n  ## Clean up from R source install\n  && cd / \\\n  && rm -rf /tmp/* \\\n  && apt-get remove --purge -y $BUILDDEPS \\\n  && apt-get autoremove -y \\\n  && apt-get autoclean -y \\\n  && rm -rf /var/lib/apt/lists/* && rm R-${R_VERSION}.tar.gz\n\nRUN locale-gen en_US.UTF-8 && \\\n  update-locale LANG=en_US.UTF-8  && \\\n  update-locale LC_ALL=en_US.UTF-8  && \\\n  export LANGUAGE=en_US.UTF-8  && \\\n  export LANG=en_US.UTF-8  && \\\n  export LC_ALL=en_US.UTF-8  && \\\n  dpkg-reconfigure locales\n\nRUN apt update && apt full-upgrade -y && \\\n  apt install --no-install-recommends -y links curl vim libcurl4-openssl-dev \\\n                 libxml2-dev libz-dev libpoppler-cpp-dev \\\n                 libopenmpi-dev libzmq3-dev \\\n                 libssl1.1 libssl-dev && \\\n  apt clean && \\\n  rm -f /etc/localtime && \\\n  ln -s /usr/share/zoneinfo/Europe/Vienna /etc/localtime && \\\n  dpkg --configure -a && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -y --no-install-recommends install python3 python3-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN R -e 'options(repos=\"https://cran.wu.ac.at\")' && \\\n R -e 'install.packages(\"remotes\")' && \\\n R -e 'install.packages(\"renv\", version=\"0.14.0-5\")'\n\nWORKDIR /headstart\nCOPY workers/pubmed/requirements.txt .\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY workers/pubmed/renv.lock .\nCOPY workers/pubmed/activate.R .\n\nRUN R -e 'renv::consent(provided = TRUE)' && \\\n    R -e 'setwd(\"./\"); renv::activate(); renv::restore(lockfile = \"./renv.lock\")'\n\nCOPY workers/common ./common\nCOPY workers/pubmed ./pubmed\nCOPY preprocessing/resources ./resources\nCOPY preprocessing/other-scripts ./other-scripts\nRUN mkdir -p /var/log/headstart && touch /var/log/headstart/headstart.log\n\nCOPY workers/pubmed/*.py ./\nENTRYPOINT python3 run_pubmed.py\n"
}