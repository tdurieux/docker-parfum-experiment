{
  "startTime": 1674255078741,
  "endTime": 1674255080104,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 1,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 1,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 1,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 1,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 1,
        "columnEnd": 42
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nMAINTAINER Piero Toffanin <pt@masseranolabs.com>\n\nENV POSTGRES_PASSWORD postgres\nENV POSTGRES_HOST_AUTH_METHOD trust\nENV POSTGRES_ALLOW_HOST all\nENV GOSU_VERSION 1.12\nENV PG_MAJOR 9.5\nENV PG_VERSION 9.5.25\nENV POSTGIS_VERSION 2.3.2\nENV PATH $PATH:/usr/local/pgsql/bin\nENV DEBIAN_FRONTEND=noninteractive\nENV LANG en_US.utf8\nENV PGDATA /var/lib/postgresql/data\n\nRUN mkdir /docker-entrypoint-initdb.d\nCOPY init.sql /docker-entrypoint-initdb.d/init-db.sql\nRUN chmod 644 /docker-entrypoint-initdb.d/init-db.sql\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nRUN ln -s /usr/local/bin/docker-entrypoint.sh / # backwards compat\n\n# Setup system\nRUN apt-get update; \\\n    set -eux; \\\n\tgroupadd -r postgres --gid=999; \\\n\tuseradd -r -g postgres --uid=999 --home-dir=/var/lib/postgresql --shell=/bin/bash postgres; \\\n\tmkdir -p /var/lib/postgresql; \\\n\tchown -R postgres:postgres /var/lib/postgresql; \\\n    # grab gosu for easy step-down from root\n    # https://github.com/tianon/gosu/releases\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget --no-check-certificate -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu --version; \\\n\tgosu nobody true; \\\n    # make the \"en_US.UTF-8\" locale so postgres will be utf-8 enabled by default\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends locales; \\\n\tlocaledef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8; \\\n    # Build Postgres from source\n\tmkdir /staging; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget gcc build-essential libproj-dev libgeos-dev libxml2-dev zlib1g-dev libreadline-dev; \\\n\tcd /staging; \\\n\twget --no-check-certificate -q https://github.com/OpenDroneMap/WebODM/releases/download/v1.9.2/postgresql-$PG_VERSION.tar.gz; \\\n\tcd /staging; \\\n\ttar -zxf postgresql-$PG_VERSION.tar.gz; rm postgresql-$PG_VERSION.tar.gz \\\n\tcd postgresql-$PG_VERSION; \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n\tmake -j$(nproc); \\\n\tmake install; \\\n\tpostgres --version; \\\n\tsed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/local/pgsql/share/postgresql.conf.sample; \\\n\tgrep -F \"listen_addresses = '*'\" /usr/local/pgsql/share/postgresql.conf.sample; \\\n    mkdir -p /var/run/postgresql && chown -R postgres:postgres /var/run/postgresql && chmod 2777 /var/run/postgresql; \\\n    # this 777 will be replaced by 700 at runtime (allows semi-arbitrary \"--user\" values)\n    mkdir -p \"$PGDATA\" && chown -R postgres:postgres \"$PGDATA\" && chmod 777 \"$PGDATA\"; \\\n    # Build PostGIS from source\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends libgdal-dev libjson-c-dev; \\\n\tcd /staging; \\\n\twget --no-check-certificate -q https://github.com/OpenDroneMap/WebODM/releases/download/v1.9.2/postgis-$POSTGIS_VERSION.tar.gz; \\\n\twget --no-check-certificate -q -O /usr/include/json-c/json_object_private.h https://raw.githubusercontent.com/json-c/json-c/json-c-0.13/json_object_private.h; \\\n\ttar -zxf postgis-$POSTGIS_VERSION.tar.gz; \\\n\tsed -i 's/#error.*/#define ACCEPT_USE_OF_DEPRECATED_PROJ_API_H 1/' /usr/include/proj_api.h; \\\n\tcd /staging/postgis-$POSTGIS_VERSION; \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-pgconfig=/usr/local/pgsql/bin/pg_config; \\\n\tmake; \\\n\tmake install; \\\n\tsed -i '1d' /usr/local/pgsql/share/extension/postgis--$POSTGIS_VERSION.sql; \\\n\tapt-get remove -y gcc build-essential wget; \\\n\tapt-get autoremove -y; \\\n\tapt-get clean; \\\n\trm -fr /var/lib/apt/lists/* /staging /usr/include;\n\nVOLUME /var/lib/postgresql/data\nENTRYPOINT [\"docker-entrypoint.sh\"]\nSTOPSIGNAL SIGINT\nEXPOSE 5432\nCMD [\"postgres\"]"
}