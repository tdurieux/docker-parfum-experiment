{
  "startTime": 1674251333665,
  "endTime": 1674251334977,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 45,
        "columnEnd": 85
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 89,
        "columnEnd": 108
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 26,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 26,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.04\nMAINTAINER Piero Toffanin <pt@masseranolabs.com>\n\nARG TEST_BUILD\nENV PYTHONUNBUFFERED 1\nENV PYTHONPATH $PYTHONPATH:/webodm\nENV PROJ_LIB=/usr/share/proj\n\n# Prepare directory\nADD . /webodm/\nWORKDIR /webodm\n\n# Install Node.js\nRUN apt-get -qq update && apt-get -qq install -y --no-install-recommends wget curl && \\\n    wget --no-check-certificate https://deb.nodesource.com/setup_12.x -O /tmp/node.sh && bash /tmp/node.sh && \\\n    apt-get -qq update && apt-get -qq --no-install-recommends install -y nodejs && \\\n    # Install Python3, GDAL, PDAL, nginx, letsencrypt, psql\n    apt-get -qq update && apt-get -qq install -y --no-install-recommends python3 python3-pip python3-setuptools python3-wheel git g++ python3-dev python2.7-dev libpq-dev binutils libproj-dev gdal-bin pdal libgdal-dev python3-gdal nginx certbot grass-core gettext-base cron postgresql-client-13 gettext tzdata && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1 && update-alternatives --install /usr/bin/python python /usr/bin/python3.9 2 && \\\n    # Install pip reqs\n    pip install --no-cache-dir -U pip && pip install --no-cache-dir -r requirements.txt \"boto3==1.14.14\" && \\\n    # Setup cron\n    ln -s /webodm/nginx/crontab /var/spool/cron/crontabs/root && chmod 0644 /webodm/nginx/crontab && service cron start && chmod +x /webodm/nginx/letsencrypt-autogen.sh && \\\n    /webodm/nodeodm/setup.sh && /webodm/nodeodm/cleanup.sh && cd /webodm && \\\n    npm install --quiet -g webpack@4.16.5 && npm install --quiet -g webpack-cli@4.2.0 && npm install --quiet && webpack --mode production && \\\n    echo \"UTC\" > /etc/timezone && \\\n    python manage.py collectstatic --noinput && \\\n    python manage.py rebuildplugins && \\\n    python manage.py translate build --safe && \\\n    # Cleanup\n    apt-get remove -y g++ python3-dev libpq-dev && apt-get autoremove -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    rm /webodm/webodm/secret_key.py && npm cache clean --force;\n\nVOLUME /webodm/app/media\n"
}