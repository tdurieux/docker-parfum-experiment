{
  "startTime": 1674215397993,
  "endTime": 1674215399907,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:21.04\n\nEXPOSE 3000\n\nENV DEBIAN_FRONTEND noninteractive\n\nUSER root\n\nRUN apt update\nRUN apt install -y -qq --no-install-recommends software-properties-common build-essential cmake git \\\n    exiv2 libimage-exiftool-perl proj-bin gdal-bin figlet imagemagick pdal libpdal-dev \\\n    libboost-all-dev libtbb-dev libssl-dev libcurl4-openssl-dev pkg-config libpth-dev \\\n    curl libx11-dev python3-pip python3-setuptools python3-shapely && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir -U shyaml\nRUN pip3 install --no-cache-dir --trusted-host pypi.org --trusted-host --trusted-host appsettings\nRUN pip3 install --no-cache-dir --trusted-host pypi.org --trusted-host --trusted-host utm\nRUN pip3 install --no-cache-dir --trusted-host pypi.org --trusted-host --trusted-host pyproj#==2.2.0\r\nRUN pip3 install --no-cache-dir --trusted-host pypi.org --trusted-host --trusted-host scikit-image\n\nRUN curl -f --silent --location https://deb.nodesource.com/setup_14.x | bash -\nRUN apt install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g nodemon && npm cache clean --force;\n\n# Build Entwine\nWORKDIR \"/staging\"\nRUN git clone --depth 1 https://github.com/OpenDroneMap/entwine /staging/entwine\nRUN cd /staging/entwine && \\\r\n    mkdir build && \\\r\n    cd build && \\\r\n    cmake \\\r\n        -DCMAKE_INSTALL_PREFIX=/usr \\\r\n\t-DWITH_TESTS=OFF \\\r\n\t-DCMAKE_BUILD_TYPE=Release \\\r\n\t../ && \\\r\n\tmake -j$(cat /proc/cpuinfo | grep processor | wc -l) && make install\n\n\nRUN mkdir /var/www\nWORKDIR \"/var/www\"\nCOPY . /var/www\n\nRUN npm install && npm cache clean --force;\nRUN mkdir -p tmp /code\nRUN mkdir -p /code\n\n# Build MicMac\nRUN git clone --depth 1  https://github.com/OpenDroneMap/micmac\nRUN cd micmac && \\ \r\n    rm -rf build && mkdir build && cd build && \\\r\n    cmake \\\r\n    \t-DBUILD_POISSON=0 \\\r\n    \t-DBUILD_RNX2RTKP=0 \\\r\n    \t-DWITH_OPENCL=OFF  \\\r\n    \t-DWITH_OPEN_MP=OFF  \\\r\n    \t-DWITH_ETALONPOLY=OFF \\\r\n    \t-DWERROR=OFF \\\r\n    \t../ && \\\r\n      make clean && \\\r\n      make -j$(cat /proc/cpuinfo | grep processor | wc -l) && make install && \\\r\n      mkdir -p /code/micmac && \\\r\n      cd .. && \\\r\n      cp -Rdp bin binaire-aux lib include /code/micmac\n\nENV PATH \"$PATH:/code/micmac/bin\"\n\nRUN ln -s \"$(which python3)\" /usr/bin/python\nENV python \"$(which python3)\"\nRUN figlet -f slant NodeMICMAC\n\nRUN mkdir -p /code/opendm\nCOPY dm/opendm /code/opendm\nCOPY dm/odm_options.json /code\nCOPY dm/settings.yaml /code\nCOPY dm/VERSION /code\nCOPY dm/run.sh /code\nCOPY dm/run.py /code\n\nRUN apt clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /staging /var/www/micmac\n\nWORKDIR \"/var/www\"\n\nENTRYPOINT [\"/usr/bin/node\", \"/var/www/index.js\"]\n"
}