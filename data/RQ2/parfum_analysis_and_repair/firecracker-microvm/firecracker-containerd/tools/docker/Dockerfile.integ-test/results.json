{
  "startTime": 1674220239733,
  "endTime": 1674220240369,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Test image that starts up containerd and the devmapper snapshotter. The default CMD will drop to a bash shell. Overrides\n# to CMD will be provided appended to /bin/bash -c\nFROM golang:1.16-stretch\nENV PATH=\"/bin:/usr/bin:/usr/local/bin:/sbin:/usr/sbin:/usr/local/sbin:/usr/local/go/bin\"\nENV INSTALLROOT=\"/usr/local\"\nENV DEBIAN_FRONTEND=\"noninteractive\"\n\nARG FIRECRACKER_TARGET=x86_64-unknown-linux-musl\nENV FICD_LOG_DIR=\"/var/log/firecracker-containerd-test\"\nENV FICD_CONTAINERD_OUTFILE=\"${FICD_LOG_DIR}/containerd.out\"\n\nRUN apt-get update && apt-get install --yes --no-install-recommends \\\n  build-essential \\\n  ca-certificates \\\n  curl \\\n  git \\\n  iptables \\\n  iperf3 \\\n  libdevmapper-dev \\\n  libseccomp-dev \\\n  tcpdump \\\n  rng-tools && rm -rf /var/lib/apt/lists/*; # used for rngtest\n\nRUN mkdir -p \\\n  /var/run/firecracker-containerd \\\n  /src \\\n  /srv/firecracker_containerd_tests \\\n  ${FICD_LOG_DIR} \\\n  /etc/cni/net.d\n\n# Install containerd to have runc shim.\nENV CTRD_VERSION=\"1.6.4\"\nRUN wget --quiet -O- https://github.com/containerd/containerd/releases/download/v$CTRD_VERSION/containerd-$CTRD_VERSION-linux-amd64.tar.gz | tar zxf - -C /tmp/ && \\\n  install -D -o root -g root -m755 -t /usr/local/bin /tmp/bin/containerd-shim-runc-v2 && \\\n  rm -rf /tmp/bin\n\n# Install critest.\nENV CRITEST_VERSION=\"1.23.0\"\nRUN wget --quiet -O- https://github.com/kubernetes-sigs/cri-tools/releases/download/v$CRITEST_VERSION/critest-v$CRITEST_VERSION-linux-amd64.tar.gz | tar zxf - -C /tmp/ && \\\n  install -D -o root -g root -m755 -t /usr/local/bin /tmp/critest && \\\n  rm -f /tmp/critest\n\n# Pull the images the tests need into the content store so we don't need internet\n# access during the tests themselves. This runs as a seperate step before the other\n# installs so we can minimize re-runs of the time-expensive downloading of images.\nCOPY tools/docker/config.toml /etc/containerd/config.toml\nCOPY tools/docker/do_not_edit_for_firecracker-control.config.json /etc/containerd/firecracker-runtime.json\nCOPY tools/demo/fcnet.conflist /etc/cni/net.d/10-fcnet.conflist\n\nRUN --mount=type=bind,target=/src \\\n  make -C /src install && \\\n  ln -sv /usr/local/bin/firecracker-containerd /usr/local/bin/containerd && \\\n  ln -sv /usr/local/bin/firecracker-ctr /usr/local/bin/ctr\n\nRUN containerd 2>/dev/null & \\\n  ctr --address /run/firecracker-containerd/containerd.sock content fetch docker.io/library/alpine:3.10.1 >/dev/null && \\\n  ctr --address /run/firecracker-containerd/containerd.sock content fetch docker.io/mlabbe/iperf3:3.6-r0 >/dev/null && \\\n  ctr --address /run/firecracker-containerd/containerd.sock content fetch docker.io/library/postgres:14.3 >/dev/null\n\nADD bin/firecracker /usr/local/bin\n\n# Install everything we need in this image. Due to the bind-mount, if the host has already\n# up-to-date versions of everything built, this step will be a very quick copy\nRUN --mount=type=bind,target=/src make -C /src \\\n  install \\\n  install-runc \\\n  install-kernel \\\n  install-default-rootfs \\\n  install-default-runc-jailer-config \\\n  install-test-cni-bins \\\n  install-test-rootfs \\\n  install-stargz-rootfs \\\n  demo-network\n\nRUN --mount=type=bind,target=/src make -C /src/snapshotter install\n\nCOPY tools/docker/entrypoint.sh /entrypoint\nENTRYPOINT [\"/entrypoint\"]\nCMD [\"exec /bin/bash\"]\n"
}