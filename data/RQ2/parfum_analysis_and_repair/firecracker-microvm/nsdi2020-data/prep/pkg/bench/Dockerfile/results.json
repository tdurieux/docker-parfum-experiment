{
  "startTime": 1674219436309,
  "endTime": 1674219436938,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM linuxkit/alpine:86cd4f51b49fb9a078b50201d892a3c7973d48ec AS mirror\n\nRUN mkdir -p /out/etc/apk && cp -r /etc/apk/* /out/etc/apk/\nRUN apk add --no-cache --initdb -p /out \\\n    alpine-baselayout \\\n    apk-tools \\\n    busybox \\\n    ca-certificates \\\n    iperf3 \\\n    musl \\\n    openssh-server \\\n    tini \\\n    util-linux \\\n    && true\nRUN mv /out/etc/apk/repositories.upstream /out/etc/apk/repositories\n\n# Build fio (no alpine package)\n# Based on https://github.com/dmonakhov/docker-image--alpine-fio/blob/guilt/master/Dockerfile\nFROM alpine:3.9 AS fio-build\nRUN apk --no-cache add \\\n    make \\\n    alpine-sdk \\\n    zlib-dev \\\n    libaio-dev \\\n    linux-headers \\\n    coreutils\nRUN git clone https://github.com/axboe/fio && \\\n    cd fio && \\\n    git checkout fio-3.13 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --build-static && \\\n    make -j $(nproc) && \\\n    mkdir /out && \\\n    cp ./fio /out\n\nFROM scratch\nENTRYPOINT []\nWORKDIR /\nCOPY --from=mirror /out/ /\nCOPY etc/ /etc/\nCOPY usr/ /usr/\nCOPY --from=fio-build /out/fio /usr/bin/fio\nRUN mkdir -p /etc/ssh /root/.ssh && chmod 0700 /root/.ssh\nCMD [\"/sbin/tini\", \"/usr/bin/ssh.sh\"]\n"
}