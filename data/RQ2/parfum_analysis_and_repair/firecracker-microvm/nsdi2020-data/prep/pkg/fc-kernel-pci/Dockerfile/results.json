{
  "startTime": 1674254153277,
  "endTime": 1674254153962,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 1,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM linuxkit/alpine:4768505d40f23e198011b6f2c796f985fe50ec39 AS kernel-build\nRUN apk add --no-cache \\\n    argp-standalone \\\n    bash \\\n    bc \\\n    binutils-dev \\\n    bison \\\n    build-base \\\n    curl \\\n    flex \\\n    gmp-dev \\\n    installkernel \\\n    kmod \\\n    libarchive-tools \\\n    libelf-dev \\\n    linux-headers \\\n    mpc1-dev \\\n    mpfr-dev \\\n    ncurses-dev \\\n    openssl \\\n    openssl-dev \\\n    perl \\\n    sed \\\n    xz \\\n    xz-dev \\\n    zlib-dev\n\nRUN mkdir /out\n\nENV KERNEL_VERSION=4.14.94\nENV KERNEL_SOURCE=https://www.kernel.org/pub/linux/kernel/v4.x/linux-${KERNEL_VERSION}.tar.xz\nRUN curl -fsSLO ${KERNEL_SOURCE} && \\\n    bsdtar xf linux-${KERNEL_VERSION}.tar.xz && \\\n    mv linux-${KERNEL_VERSION} /linux\nCOPY /microvm-kernel-config /linux/.config\n\nWORKDIR /linux\n\n# Configure and compile the kernel\n# (individual run commands for easier debug)\nRUN make oldconfig\nRUN make -j \"$(getconf _NPROCESSORS_ONLN)\" KCFLAGS=\"-fno-pie\"\nRUN cp arch/x86_64/boot/bzImage /out/kernel\nRUN cp System.map /out\nRUN make -j \"$(getconf _NPROCESSORS_ONLN)\" KCFLAGS=\"-fno-pie\" INSTALL_MOD_PATH=/tmp/kernel-modules modules_install\nRUN cd /tmp/kernel-modules && bsdtar cf /out/kernel.tar .\n\n# Package it up\nFROM scratch\nENTRYPOINT []\nCMD []\nWORKDIR /\nCOPY --from=kernel-build /out/* /\n\n"
}