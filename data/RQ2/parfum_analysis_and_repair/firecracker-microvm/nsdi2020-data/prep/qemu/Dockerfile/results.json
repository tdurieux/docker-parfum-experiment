{
  "startTime": 1674256135991,
  "endTime": 1674256137080,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt update && \\\n    apt install --no-install-recommends -y \\\n        build-essential \\\n        git \\\n        libtool \\\n        libpixman-1-dev \\\n        libglib2.0-dev \\\n        pkg-config \\\n        python \\\n        libc6-dev-i386 && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone git://git.qemu.org/qemu.git && \\\n    cd qemu && \\\n    git checkout v4.2.0\n\nWORKDIR /qemu\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --target-list=x86_64-softmmu \\\n        --static \\\n        --disable-attr \\\n        --disable-blobs \\\n        --disable-bluez \\\n        --disable-bochs \\\n        --disable-brlapi \\\n        --disable-bzip2 \\\n        --disable-cap-ng \\\n        --disable-cloop \\\n        --disable-curl \\\n        --disable-curses \\\n        --disable-dmg \\\n        --disable-fdt \\\n        --disable-glusterfs \\\n        --disable-gnutls \\\n        --disable-gtk \\\n        --disable-guest-agent \\\n        --disable-libiscsi \\\n        --disable-libnfs \\\n        --disable-libssh \\\n        --disable-libusb \\\n        --disable-live-block-migration \\\n        --disable-lzo \\\n        --disable-modules \\\n        --disable-netmap \\\n        --disable-nettle \\\n        --disable-opengl \\\n        --disable-opengl \\\n        --disable-parallels \\\n        --disable-qcow1 \\\n        --disable-qed \\\n        --disable-qom-cast-debug \\\n        --disable-rbd \\\n        --disable-rdma \\\n        --disable-rdma \\\n        --disable-replication \\\n        --disable-sdl \\\n        --disable-seccomp \\\n        --disable-sheepdog \\\n        --disable-slirp \\\n        --disable-snappy \\\n        --disable-spice \\\n        --disable-tpm \\\n        --disable-usb-redir \\\n        --disable-vde \\\n        --disable-vdi \\\n        --disable-virtfs \\\n        --disable-vnc \\\n        --disable-vnc-jpeg \\\n        --disable-vnc-png \\\n        --disable-vnc-sasl \\\n        --disable-vte \\\n        --disable-vvfat \\\n        --disable-xen\n\nRUN make -j \"$(getconf _NPROCESSORS_ONLN)\"\n\nRUN apt install --no-install-recommends -y seabios && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /res/bios && \\\n    cp x86_64-softmmu/qemu-system-x86_64 /res && \\\n    cp -r /usr/share/seabios/* /res/bios && \\\n    cp pc-bios/efi-e1000.rom /res/bios && \\\n    cp pc-bios/efi-virtio.rom /res/bios\n\nRUN cd / && \\\n    git clone https://github.com/bonzini/qboot && \\\n    cd qboot && \\\n       git checkout 94d3b1b5d1fc30bd7b63af9d07cb8db89a5f4868\n\nWORKDIR /qboot\n\nRUN make && \\\n    cp bios.bin /res/bios/qboot.bin\n\nENTRYPOINT cp -r /res/* /out\n"
}