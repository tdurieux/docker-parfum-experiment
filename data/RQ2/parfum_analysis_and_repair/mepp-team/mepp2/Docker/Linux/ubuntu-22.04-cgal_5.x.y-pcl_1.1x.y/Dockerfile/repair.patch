diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mepp-team/mepp2/Docker/Linux/ubuntu-22.04-cgal_5.x.y-pcl_1.1x.y/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mepp-team/mepp2/Docker/Linux/ubuntu-22.04-cgal_5.x.y-pcl_1.1x.y/Dockerfile/repaired.Dockerfile
index 718f32f..5ee6de2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mepp-team/mepp2/Docker/Linux/ubuntu-22.04-cgal_5.x.y-pcl_1.1x.y/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mepp-team/mepp2/Docker/Linux/ubuntu-22.04-cgal_5.x.y-pcl_1.1x.y/Dockerfile/repaired.Dockerfile
@@ -18,29 +18,29 @@ ARG DEBIAN_FRONTEND=noninteractive
 RUN apt-get clean
 RUN apt-get update
 
-RUN apt-get -y install vim
-RUN apt-get -y install git
+RUN apt-get -y --no-install-recommends install vim && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install git && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get -y install wget
-RUN apt-get -y install unzip
+RUN apt-get -y --no-install-recommends install wget && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install unzip && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get -y install build-essential gdb cgdb
-RUN apt-get -y install clang
-RUN apt-get -y install valgrind
+RUN apt-get -y --no-install-recommends install build-essential gdb cgdb && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install clang && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install valgrind && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get -y install xvfb
+RUN apt-get -y --no-install-recommends install xvfb && rm -rf /var/lib/apt/lists/*;
 
 # CMake
-RUN apt-get -y install cmake cmake-curses-gui # 3.22.1
+RUN apt-get -y --no-install-recommends install cmake cmake-curses-gui && rm -rf /var/lib/apt/lists/*; # 3.22.1
 
 # Boost
-RUN apt-get -y install libboost-all-dev # 1.74.0
+RUN apt-get -y --no-install-recommends install libboost-all-dev && rm -rf /var/lib/apt/lists/*; # 1.74.0
 
 # Eigen 3
-RUN apt-get -y install libeigen3-dev # 3.4.0
+RUN apt-get -y --no-install-recommends install libeigen3-dev && rm -rf /var/lib/apt/lists/*; # 3.4.0
 
 # CGAL (installation in user home directory)
-RUN apt-get -y install libgmp-dev libmpfr-dev
+RUN apt-get -y --no-install-recommends install libgmp-dev libmpfr-dev && rm -rf /var/lib/apt/lists/*;
 #RUN apt-get -y install libcgal-dev # 5.4
 RUN cd /tmp                                                                                         && \
     wget https://github.com/CGAL/cgal/releases/download/releases%2FCGAL-4.14.3/CGAL-4.14.3.zip      && \
@@ -74,40 +74,40 @@ RUN cd /tmp
     cd OpenMesh-7.1 && mkdir build && cd build                                                      && \
     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/OpenMesh-7.1 ..                   && \
     make -j 3                                                                                       && \
-    make install && cd
+    make install && cd && rm OpenMesh-7.1.tar.gz
 RUN cd /tmp                                                                                         && \
     wget https://www.graphics.rwth-aachen.de/media/openmesh_static/Releases/8.1/OpenMesh-8.1.tar.gz && \
     tar -xzf OpenMesh-8.1.tar.gz                                                                    && \
     cd OpenMesh-8.1 && mkdir build && cd build                                                      && \
     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/OpenMesh-8.1 ..                   && \
     make -j 3                                                                                       && \
-    make install && cd
+    make install && cd && rm OpenMesh-8.1.tar.gz
 RUN cd /tmp                                                                                         && \
     wget https://www.graphics.rwth-aachen.de/media/openmesh_static/Releases/9.0/OpenMesh-9.0.tar.gz && \
     tar -xzf OpenMesh-9.0.tar.gz                                                                    && \
     cd OpenMesh-9.0.0 && mkdir build && cd build                                                    && \
     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$HOME/OpenMesh-9.0.0 ..                 && \
     make -j 3                                                                                       && \
-    make install && cd
+    make install && cd && rm OpenMesh-9.0.tar.gz
 
 # Qt4
 #RUN apt-get -y install libqt4-dev libqt4-opengl-dev # now, no more Qt4 in Ubuntu
 # Qt5
-RUN apt-get -y install qtbase5-dev libqt5opengl5-dev # 5.15.3
+RUN apt-get -y --no-install-recommends install qtbase5-dev libqt5opengl5-dev && rm -rf /var/lib/apt/lists/*; # 5.15.3
 
 # OpenSceneGraph
-RUN apt-get -y install libjpeg-dev libpng-dev libtiff-dev libfreetype6-dev
-RUN apt-get -y install libopenscenegraph-dev # 3.6.5
+RUN apt-get -y --no-install-recommends install libjpeg-dev libpng-dev libtiff-dev libfreetype6-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get -y --no-install-recommends install libopenscenegraph-dev && rm -rf /var/lib/apt/lists/*; # 3.6.5
 
 # Doxygen and Graphviz
-RUN apt-get -y install doxygen graphviz
+RUN apt-get -y --no-install-recommends install doxygen graphviz && rm -rf /var/lib/apt/lists/*;
 
 # VTK
 #RUN apt-get -y install libvtk7-dev # 7.1.1
-RUN apt-get -y install libvtk9-dev # 9.1.0
+RUN apt-get -y --no-install-recommends install libvtk9-dev && rm -rf /var/lib/apt/lists/*; # 9.1.0
 
 # PCL (installation in user home directory) - DON'T use libpcl-dev package ?!
-RUN apt-get -y install libflann-dev libproj-dev
+RUN apt-get -y --no-install-recommends install libflann-dev libproj-dev && rm -rf /var/lib/apt/lists/*;
 #RUN apt-get -y install libpcl-dev # 1.12.1
 #RUN cd /tmp                                                                                                                                                                && \
 #    wget https://github.com/PointCloudLibrary/pcl/archive/refs/tags/pcl-1.9.1.tar.gz                                                                                       && \
@@ -122,31 +122,31 @@ RUN cd /tmp
     cd pcl-pcl-1.10.1 && mkdir build && cd build                                                                                                                            && \
     cmake -DCMAKE_BUILD_TYPE=Release -DPCL_ENABLE_SSE=OFF -DPCL_ONLY_CORE_POINT_TYPES=ON -DBUILD_global_tests=OFF -DWITH_VTK=OFF -DCMAKE_INSTALL_PREFIX=$HOME/pcl-1.10.1 .. && \
     make -j 3                                                                                                                                                               && \
-    make install && cd
+    make install && cd && rm pcl-1.10.1.tar.gz
 RUN cd /tmp                                                                                                                                                                 && \
     wget https://github.com/PointCloudLibrary/pcl/archive/refs/tags/pcl-1.11.1.tar.gz                                                                                       && \
     tar -xzf pcl-1.11.1.tar.gz                                                                                                                                              && \
     cd pcl-pcl-1.11.1 && mkdir build && cd build                                                                                                                            && \
     cmake -DCMAKE_BUILD_TYPE=Release -DPCL_ENABLE_SSE=OFF -DPCL_ONLY_CORE_POINT_TYPES=ON -DBUILD_global_tests=OFF -DWITH_VTK=OFF -DCMAKE_INSTALL_PREFIX=$HOME/pcl-1.11.1 .. && \
     make -j 3                                                                                                                                                               && \
-    make install && cd
+    make install && cd && rm pcl-1.11.1.tar.gz
 RUN cd /tmp                                                                                                                                                                 && \
     wget https://github.com/PointCloudLibrary/pcl/archive/refs/tags/pcl-1.12.1.tar.gz                                                                                       && \
     tar -xzf pcl-1.12.1.tar.gz                                                                                                                                              && \
     cd pcl-pcl-1.12.1 && mkdir build && cd build                                                                                                                            && \
     cmake -DCMAKE_BUILD_TYPE=Release -DPCL_ENABLE_SSE=OFF -DPCL_ONLY_CORE_POINT_TYPES=ON -DBUILD_global_tests=OFF -DWITH_VTK=OFF -DCMAKE_INSTALL_PREFIX=$HOME/pcl-1.12.1 .. && \
     make -j 3                                                                                                                                                               && \
-    make install && cd
+    make install && cd && rm pcl-1.12.1.tar.gz
 
 # FBX SDK
 RUN mkdir ~/FBX_SDK && mkdir ~/FBX_SDK/2019.0                                         && \
-    cd /tmp                                                                           && \
-    wget http://download.autodesk.com/us/fbx/2019/2019.0/fbx20190_fbxsdk_linux.tar.gz && \
-    tar -xzf fbx20190_fbxsdk_linux.tar.gz                                             && \
-    yes yes | ./fbx20190_fbxsdk_linux ~/FBX_SDK/2019.0                                && \
-    ln -s ~/FBX_SDK/2019.0/lib/gcc4/x64/release ~/FBX_SDK/2019.0/lib/release          && \
-    ln -s ~/FBX_SDK/2019.0/lib/gcc4/x64/debug ~/FBX_SDK/2019.0/lib/debug              && \
-    cd
+    cd /tmp && \
+    wget https://download.autodesk.com/us/fbx/2019/2019.0/fbx20190_fbxsdk_linux.tar.gz && \
+    tar -xzf fbx20190_fbxsdk_linux.tar.gz && \
+    yes yes | ./fbx20190_fbxsdk_linux ~/FBX_SDK/2019.0 && \
+    ln -s ~/FBX_SDK/2019.0/lib/gcc4/x64/release ~/FBX_SDK/2019.0/lib/release && \
+    ln -s ~/FBX_SDK/2019.0/lib/gcc4/x64/debug ~/FBX_SDK/2019.0/lib/debug && \
+    cd && rm fbx20190_fbxsdk_linux.tar.gz
 
 # Draco (installation in user home directory)
 #RUN apt-get -y install libdraco-dev # 1.5.2
@@ -163,14 +163,14 @@ RUN cd /tmp
     cd draco-1.4.3 && mkdir build && cd build                                                           && \
     cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$HOME/draco-1.4.3 .. && \
     make -j 3                                                                                           && \
-    make install && cd
+    make install && cd && rm 1.4.3.tar.gz
 RUN cd /tmp                                                                                             && \
     wget https://github.com/google/draco/archive/refs/tags/1.5.2.tar.gz                                 && \
     tar -xzf 1.5.2.tar.gz                                                                               && \
     cd draco-1.5.2 && mkdir build && cd build                                                           && \
     cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$HOME/draco-1.5.2 .. && \
     make -j 3                                                                                           && \
-    make install && cd
+    make install && cd && rm 1.5.2.tar.gz
 
 # Cleanup
 RUN apt-get -y autoremove