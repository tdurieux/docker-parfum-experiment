{
  "startTime": 1674250846665,
  "endTime": 1674250847264,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 124
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM golang:1.12.7 AS build\n#FROM envoyproxy/envoy:latest\n\n# (1) Copy/Install Artifacts\n\t# (1.1) Install postgresql on container\n\t# (1.2) Install supervisord on container\n\t# (1.3) Copy migrations to container\n\t# (1.4) Copy hasura binaries to container\n   # (1.4.1) Make hasura binaries executable\n   # (1.4.2) Copy hasura migrations script\n\t# (1.5) Copy supervisord config file\n\t# (1.6) Copy script that waits for hasura\n\t# (1.7) Copy enroute-cp\n\n# (2) Setup environment variables\n\t# (2.1) Setup environment variables to run migrations script\n\n# (2) Run supervisord\n\t# (3.1) Start postgresql\n\t# (3.2) Run migrations with autorestart to false - only runs it once\n    # (3.2.1) Migration script runs hasura temporarily and then kills it.\n\t# (3.3) Start hasura\n\nFROM ubuntu:18.04\n\nWORKDIR /bin\n\n# 1.1\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository \"deb http://security.ubuntu.com/ubuntu xenial-security main\"\nRUN apt-get update && apt-get install --no-install-recommends -y gnupg2 libicu55 && rm -rf /var/lib/apt/lists/*;\n#RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8\nCOPY ACCC4CF8.asc .\nRUN cat ACCC4CF8.asc | apt-key add -\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main\" > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common postgresql-11 postgresql-client-11 postgresql-contrib-11 && rm -rf /var/lib/apt/lists/*;\n\n#1.2\nRUN apt-get update && apt-get install --no-install-recommends -y supervisor vim netcat net-tools sed && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /var/log/supervisord\n\n# 1.3\nRUN [\"mkdir\", \"-p\", \"/migrations\"]\nCOPY migrations/* /migrations/\n\n# 1.4\nCOPY hasura/* /bin/\n\n# 1.4.1\nRUN chmod +x /bin/hasura-cli\n\n# 1.4.2\nCOPY run_migrations.sh /bin/\nRUN chmod +x /bin/run_migrations.sh\n\n# 1.4.3\nCOPY run_pg_prep.sh /bin/\nRUN chmod +x /bin/run_pg_prep.sh\n\n# 1.5\nCOPY supervisord.conf.cp /etc/supervisor/conf.d/supervisord.conf\n\n# 1.7 copy enroute-cp\nCOPY enroute-cp /bin/\n\n# 2 ENV variables can be provided here or in supervisord\nENV HASURA_GRAPHQL_CLI_ENVIRONMENT=server-on-docker\nENV HASURA_GRAPHQL_DATABASE_URL=postgres://postgres:@localhost:5432/postgres\nENV HASURA_GRAPHQL_ENABLE_CONSOLE=\"true\"\nENV HASURA_GRAPHQL_MIGRATIONS_DIR=/migrations\nENV HASURA_GRAPHQL_SERVER_PORT=8888\n\n# Only allow connections from localhost\nRUN echo \"host all  all    127.0.0.1/32  trust\" >> /etc/postgresql/11/main/pg_hba.conf\n# Only listen on localhost\n# RUN echo \"listen_addresses='*'\" >> /etc/postgresql/11/main/postgresql.conf\n\n# Allow other processes to reach posgresql on port 5432\nEXPOSE 5432\n\n# Allow other processes to reach hasura on port 8080\nEXPOSE 8888\n\n# Setup volume for postgresql\nVOLUME  [\"/etc/postgresql\", \"/var/log/postgresql\", \"/var/lib/postgresql\", \"/var/lib/postgresql/11/main\"]\n\nENV DB_PORT=8888\nENV DB_HOST=127.0.0.1\nENV WEBAPP_SECRET=\"\"\n\nRUN mkdir -p /supervisord\nRUN chown -R postgres:postgres /supervisord\n\n# Hasura creates a /root/.config for global config, since we run as postgres, provide access to /root directory to postgres\n# /root is empty and this only reduces permissions on /root, so should be OK\nRUN chown -R postgres:postgres /root\n\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n"
}