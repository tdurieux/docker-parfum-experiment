{
  "startTime": 1674252420719,
  "endTime": 1674252421677,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cbonamy/sedfoam_v2106_ubuntu\nLABEL maintainer \"cyrille.bonamy@univ-grenoble-alpes.fr\"\nARG WM_NCOMPPROCS=10\n\n\nARG NB_USER=\"sudofoam\"\nARG NB_UID=\"1000\"\nARG NB_GID=\"100\"\n\n# Fix DL4006\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nUSER root\n\n# Miniconda installation\n# Default values can be overridden at build time\n# (ARGS are in lower case to distinguish them from ENV)\n# Check https://repo.anaconda.com/miniconda/\n# Miniconda archive to install\nARG miniconda_version=\"4.9.2\"\n# Archive MD5 checksum\nARG miniconda_checksum=\"122c8c9beb51e124ab32a0fa6426c656\"\n# Conda version that can be different from the archive\nARG conda_version=\"4.9.2\"\n\n# Install all OS dependencies for notebook server that starts but lacks all\n# features (e.g., download as all possible file formats)\nENV DEBIAN_FRONTEND noninteractive\n\nRUN update-ca-certificates && apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n  git unzip mercurial libreadline-dev vim nano emacs neovim \\\n    texlive dvipng \\\n    wget bzip2 ca-certificates sudo locales fonts-liberation run-one \\\n    libsm6 \\\n    libxext-dev \\\n    libxrender1 \\\n    lmodern \\\n    netcat \\\n    python-dev \\\n    # ---- nbconvert dependencies ----\n    texlive-xetex \\\n    texlive-fonts-recommended \\\n    texlive-plain-generic \\\n    tzdata \\\n    unzip \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n# Configure environment\nENV CONDA_DIR=/opt/conda \\\n    SHELL=/bin/bash \\\n    NB_USER=$NB_USER \\\n    NB_UID=$NB_UID \\\n    NB_GID=$NB_GID \\\n    LC_ALL=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US.UTF-8\nENV PATH=$CONDA_DIR/bin:$PATH \\\n    HOME=/home/$NB_USER\n\nWORKDIR /root/\n\n# Copy a script that we will use to correct permissions after running certain commands\nRUN /bin/bash -c \"cp /root/sedfoam/docker/docker-stacks/base-notebook/fix-permissions /usr/local/bin/fix-permissions\"\nRUN chmod a+rx /usr/local/bin/fix-permissions\n\n# Enable prompt color in the skeleton .bashrc before creating the default NB_USER\n# hadolint ignore=SC2016\nRUN sed -i 's/^#force_color_prompt=yes/force_color_prompt=yes/' /etc/skel/.bashrc && \\\n   # Add call to conda init script see https://stackoverflow.com/a/58081608/4413446\n   echo 'eval \"$(command conda shell.bash hook 2> /dev/null)\"' >> /etc/skel/.bashrc\n\n# Create NB_USER with name jovyan user with UID=1000 and in the 'users' group\n# and make sure these dirs are writable by the `users` group.\nRUN echo \"auth requisite pam_deny.so\" >> /etc/pam.d/su && \\\n    sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers && \\\n    sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers && \\\n    mkdir -p $CONDA_DIR && \\\n    chown $NB_USER:$NB_GID $CONDA_DIR && \\\n    chmod g+w /etc/passwd && \\\n    fix-permissions $HOME && \\\n    fix-permissions $CONDA_DIR\n\nWORKDIR /home/sudofoam\nRUN rm -rf .cache\n\nUSER 1000\nARG PYTHON_VERSION=default\n\n# Install conda as jovyan and check the md5 sum provided on the download site\nENV MINICONDA_VERSION=\"${miniconda_version}\" \\\n    CONDA_VERSION=\"${conda_version}\"\n\nWORKDIR /tmp\nRUN wget --quiet https://repo.continuum.io/miniconda/Miniconda3-py38_${MINICONDA_VERSION}-Linux-x86_64.sh && \\\n    echo \"${miniconda_checksum} *Miniconda3-py38_${MINICONDA_VERSION}-Linux-x86_64.sh\" | md5sum -c - && \\\n    /bin/bash Miniconda3-py38_${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \\\n    rm Miniconda3-py38_${MINICONDA_VERSION}-Linux-x86_64.sh && \\\n    # Conda configuration see https://conda.io/projects/conda/en/latest/configuration.html\n    echo \"conda ${CONDA_VERSION}\" >> $CONDA_DIR/conda-meta/pinned && \\\n    # FIDLE : Dont' use conda-forge\n    # conda config --system --prepend channels conda-forge && \\\n    conda config --system --set auto_update_conda false && \\\n    conda config --system --set show_channel_urls true && \\\n    conda install --quiet --yes \\\n    \"conda=${CONDA_VERSION}\" \\\n    'pip' \\\n    'tini=0.18.0' && \\\n    conda update --all --quiet --yes && \\\n    conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned && \\\n    conda clean --all -f -y && \\\n    rm -rf /home/$NB_USER/.cache/yarn && \\\n    fix-permissions $CONDA_DIR && \\\n    fix-permissions /home/$NB_USER\n\nRUN conda install --quiet --yes -n base jupyter pandas  matplotlib && \\\n    conda clean --all -f -y && \\\n    pip install --no-cache-dir fluidfoam odfpy\n\nEXPOSE 8888\n\nWORKDIR /root/sedfoam/docker/\nRUN /bin/bash -c \"sudo cp ./docker-stacks/base-notebook/start.sh ./docker-stacks/base-notebook/start-notebook.sh ./docker-stacks/base-notebook/start-singleuser.sh /usr/local/bin/\"\nRUN /bin/bash -c \"sudo mkdir /etc/jupyter && sudo cp /root/sedfoam/docker/docker-stacks/base-notebook/jupyter_notebook_config.py /etc/jupyter/\"\n\n# Fix permissions on /etc/jupyter as root\nUSER root\nRUN fix-permissions /etc/jupyter/\n\nUSER $NB_UID\nWORKDIR /home/sudofoam\nENV HOME /home/sudofoam\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"source /openfoam/bash.rc && jupyter notebook\"]\n\n"
}