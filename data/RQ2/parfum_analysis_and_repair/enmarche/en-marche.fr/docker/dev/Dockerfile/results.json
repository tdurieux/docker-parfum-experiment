{
  "startTime": 1674256160876,
  "endTime": 1674256161894,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 260
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 139
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    TERM=\"xterm\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    NODE_VERSION=14.17.5 \\\n    GOSU_VERSION=1.14 \\\n    PHP_SECURITY_CHECHER_VERSION=1.1.1 \\\n    COMPOSER_ALLOW_SUPERUSER=1\n\nEXPOSE 80\nWORKDIR /app\n\nRUN apt-get update -q && \\\n    apt-get install --no-install-recommends -qy software-properties-common language-pack-en-base build-essential && \\\n    export LC_ALL=en_US.UTF-8 && \\\n    export LANG=en_US.UTF-8 && \\\n    add-apt-repository ppa:ondrej/php && \\\n    apt-get update -q && \\\n    apt-get install --no-install-recommends -qy \\\n        ca-certificates \\\n        cron \\\n        curl \\\n        nano \\\n        vim \\\n        nginx \\\n        git \\\n        graphviz \\\n        mysql-client \\\n        php7.4 \\\n        php7.4-bcmath \\\n        php7.4-common \\\n        php7.4-curl \\\n        php7.4-dom \\\n        php7.4-fpm \\\n        php7.4-gd \\\n        php7.4-iconv \\\n        php7.4-intl \\\n        php7.4-json \\\n        php7.4-mbstring \\\n        php7.4-mysql \\\n        php7.4-pdo \\\n        php7.4-phar \\\n        php7.4-sqlite \\\n        php7.4-xdebug \\\n        php7.4-xml \\\n        php7.4-zip \\\n        php7.4-amqp \\\n        php7.4-apcu \\\n        php7.4-uuid \\\n        php7.4-imagick \\\n        ghostscript \\\n        supervisor \\\n        tzdata \\\n        wget \\\n        wkhtmltopdf && \\\n    # Disable XDEBUG by default\n    phpdismod xdebug && \\\n    # Clean\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    # Config ImageMagick lib\n    sed -i -e \"s/<policy domain=\\\"coder\\\" rights=\\\"none\\\" pattern=\\\"PDF\\\" \\/>/<policy domain=\\\"coder\\\" rights=\\\"read|write\\\" pattern=\\\"PDF\\\" \\/>/g\" /etc/ImageMagick-6/policy.xml && \\\n    # Config TimeZone\n    cp /usr/share/zoneinfo/Europe/Paris /etc/localtime && echo \"Europe/Paris\" > /etc/timezone && \\\n    # Install Node & npm\n    curl -f -L -o /tmp/nodejs.tar.gz https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz && \\\n    tar xfvz /tmp/nodejs.tar.gz -C /usr/local --strip-components=1 && \\\n    rm -f /tmp/nodejs.tar.gz && \\\n    npm install yarn -g && \\\n    # Install Symfony security checker\n    curl -f -L https://github.com/fabpot/local-php-security-checker/releases/download/v${PHP_SECURITY_CHECHER_VERSION}/local-php-security-checker_${PHP_SECURITY_CHECHER_VERSION}_linux_$(dpkg --print-architecture) --output /usr/local/bin/local-php-security-checker && \\\n    chmod +x /usr/local/bin/local-php-security-checker && \\\n    mkdir /run/php && npm cache clean --force;\n\nRUN curl -f -L https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture) --output /usr/local/bin/gosu && \\\n    chmod +x /usr/local/bin/gosu && \\\n    addgroup enmarche && \\\n    adduser --home=/home/enmarche --shell=/bin/bash --ingroup=enmarche --disabled-password --quiet enmarche\n\nCOPY --from=composer:2 /usr/bin/composer /usr/bin/composer\n\nCOPY php.ini /etc/php/7.4/cli/conf.d/50-setting.ini\nCOPY php.ini /etc/php/7.4/fpm/conf.d/50-setting.ini\nCOPY pool.conf /etc/php/7.4/fpm/pool.d/www.conf\nCOPY nginx.conf /etc/nginx/nginx.conf\nCOPY symfony.conf /etc/nginx/symfony.conf\nCOPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY entrypoint.sh /usr/local/bin/\n\nENTRYPOINT [\"entrypoint.sh\"]\n"
}