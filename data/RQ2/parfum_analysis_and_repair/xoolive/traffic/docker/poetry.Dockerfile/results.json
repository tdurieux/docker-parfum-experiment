{
  "startTime": 1674255111335,
  "endTime": 1674255112107,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 18,
        "columnEnd": 129
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 18,
        "columnEnd": 129
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10-slim\n\n# If you need a proxy for your environment\nARG PROXY\nENV http_proxy=$PROXY\nENV https_proxy=$PROXY\nRUN if [ -z \"$PROXY\" ] ; then echo \"Acquire::http::Proxy \\\"$PROXY\\\";\" | tee /etc/apt/apt.conf.d/01proxy ; fi\n\nRUN apt update && apt install --no-install-recommends -y libgdal-dev libgeos-dev libproj-dev proj-bin proj-data libarchive-dev sqlite3 git curl cmake g++ && rm -rf /var/lib/apt/lists/*;\n\n# Install latest version of libproj\nWORKDIR /root\nRUN git clone https://github.com/OSGeo/PROJ\n\nWORKDIR /root/PROJ\nRUN git checkout 9.0\nRUN mkdir build\n\nWORKDIR /root/PROJ/build\nRUN cmake ..; cmake --build . -j4\nRUN cmake --build . --target install\n\n# Create a user\nRUN useradd -ms /bin/bash user\nUSER user\nWORKDIR /home/user/\n\n# Install poetry\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -\nENV PATH=\"${PATH}:/home/user/.poetry/bin\"\n\nCMD [ \"bash\" ]\n\n# If you prefer to clone and install traffic in the container (rather than bind\n# the volume, uncomment the following commands)\n\n# Clone and install traffic\n# RUN git config --global http.proxy ${PROXY}\n# RUN git clone https://github.com/xoolive/traffic\n\n# WORKDIR /home/user/traffic\n# RUN poetry install\n\n# By default, open a Python terminal\n# CMD [ \"poetry\", \"run\", \"python\" ]"
}