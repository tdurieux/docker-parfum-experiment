{
  "startTime": 1674253691457,
  "endTime": 1674253692419,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NOTE: Docker context should be set to git root directory, to include the viewer\n\n# build stage\nFROM node:16.15-bullseye-slim as build-stage\n\nWORKDIR /speckle-server\nCOPY .yarnrc.yml .\nCOPY .yarn ./.yarn\nCOPY package.json yarn.lock ./\n\n# Onyl copy in the relevant package.json files for the dependencies\nCOPY packages/frontend/package.json ./packages/frontend/\nCOPY packages/viewer/package.json ./packages/viewer/\nCOPY packages/objectloader/package.json ./packages/objectloader/\n\nRUN yarn workspaces focus -A && yarn cache clean;\n\n# Onyl copy in the relevant source files for the dependencies\nCOPY packages/objectloader ./packages/objectloader/\nCOPY packages/viewer ./packages/viewer/\nCOPY packages/frontend ./packages/frontend/\n\n# This way the foreach only builds the frontend and its deps\nRUN yarn workspaces foreach -pt run build && yarn cache clean;\n\n# production stage\nFROM openresty/openresty:1.19.9.1-bullseye as production-stage\nCOPY --from=build-stage /speckle-server/packages/frontend/dist /usr/share/nginx/html\nRUN rm /etc/nginx/conf.d/default.conf\nCOPY packages/frontend/nginx/nginx.conf /etc/nginx/conf.d\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}