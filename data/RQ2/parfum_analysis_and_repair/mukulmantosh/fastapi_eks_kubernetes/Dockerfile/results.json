{
  "startTime": 1674252368519,
  "endTime": 1674252369193,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# pull official base image\nFROM python:3.8.11-slim-buster\n\n# create directory for the app user\nRUN mkdir -p /home/app\n\n# create the app user\nRUN addgroup --system app && adduser --system --group app\n\n# create the appropriate directories\nENV HOME=/home/app\nENV APP_HOME=/home/app/code\nRUN mkdir $APP_HOME\nWORKDIR $APP_HOME\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\nENV ENVIRONMENT prod\n\n\n# install system dependencies\nRUN apt-get update \\\n  && apt-get -y --no-install-recommends install netcat gcc libpq-dev \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install python dependencies\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -U setuptools\nCOPY ./requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# add app\nCOPY . .\n\n# chown all the files to the app user\nRUN chown -R app:app $APP_HOME\n\n# change to the app user\nUSER app\n\n# run gunicorn\nCMD gunicorn --bind 0.0.0.0:5000 main:app -k uvicorn.workers.UvicornWorker"
}