{
  "startTime": 1674252261911,
  "endTime": 1674252263432,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic AS dev-base\n\nARG USER_UID=1000\nARG USER_GID=$USER_UID\nARG USERNAME=vscode\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN echo \"APT::Install-Recommends 0;\" >> /etc/apt/apt.conf.d/01norecommends \\\n  && echo \"APT::Install-Suggests 0;\" >> /etc/apt/apt.conf.d/01norecommends \\\n  && apt update \\\n  && apt upgrade -y \\\n  && apt install --no-install-recommends -y \\\n    apt-utils \\\n    dialog \\\n    wget \\\n    net-tools \\\n    wireguard \\\n    nftables \\\n    inotify-tools \\\n    ca-certificates \\\n    build-essential \\\n    less \\\n    automake \\\n    autoconf \\\n    libreadline-dev \\\n    libncurses-dev \\\n    libssl-dev \\\n    libyaml-dev \\\n    libxslt-dev \\\n    libffi-dev \\\n    libtool \\\n    zlib1g-dev \\\n    unixodbc-dev \\\n    unzip \\\n    curl \\\n    git \\\n    vim \\\n    sudo \\\n    bsdmainutils \\\n    gpg \\\n    dirmngr \\\n    jq \\\n    locales \\\n  # Clean up\n  && apt-get autoremove -y \\\n  && apt-get clean -y \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && groupadd --gid $USER_GID $USERNAME \\\n  && useradd --uid $USER_GID --gid $USERNAME --shell /bin/bash --create-home --groups sudo $USERNAME \\\n  && echo \"%${USERNAME}    ALL=(ALL)   NOPASSWD:    ALL\" >> /etc/sudoers.d/${USERNAME} \\\n  && mkdir -p /home/$USERNAME/.vscode-server/extensions \\\n      /home/$USERNAME/.vscode-server-insiders/extensions \\\n  && chown -R $USERNAME \\\n      /home/$USERNAME/.vscode-server \\\n      /home/$USERNAME/.vscode-server-insiders \\\n  && mkdir -p /workspace \\\n  && chown -R $USERNAME /workspace\n\n# Set the locale to en_US.UTF-8 and TZ to UTC\nRUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV TZ 'UTC'\n\nENV DEBIAN_FRONTEND=dialog\n\nFROM dev-base AS setup-asdf\n\nARG USERNAME=vscode\n\nRUN git clone https://github.com/asdf-vm/asdf.git /opt/asdf \\\n  && cd /opt/asdf \\\n  && git checkout \"$(git describe --abbrev=0 --tags)\" \\\n  && mkdir /opt/asdf-data \\\n  && chown -R $USERNAME /opt/asdf-data\n\nFROM setup-asdf AS dev-env\n\nARG USERNAME=vscode\n\nUSER $USERNAME\nWORKDIR /home/$USERNAME\nENV HOME=/home/$USERNAME \\\n  ASDF_DIR=\"/opt/asdf\" \\\n  ASDF_DATA_DIR=\"/opt/asdf-data\"\n\nRUN echo '\\n. /opt/asdf/asdf.sh' >> ~/.bashrc \\\n    && echo '\\n. /opt/asdf/completions/asdf.bash' >> ~/.bashrc\n\nSHELL [\"/bin/bash\", \"-ic\"]\n\nRUN asdf plugin-add erlang https://github.com/asdf-vm/asdf-erlang.git && \\\n    asdf plugin-add elixir https://github.com/asdf-vm/asdf-elixir.git && \\\n    asdf plugin-add nodejs https://github.com/asdf-vm/asdf-nodejs.git && \\\n    asdf plugin-add python https://github.com/danhper/asdf-python.git && \\\n    asdf plugin-add ruby https://github.com/asdf-vm/asdf-ruby.git\n\n# Need global erlang version to install Elixir -     https://github.com/asdf-vm/asdf-elixir/issues/113\nCOPY .tool-versions /home/vscode/.tool-versions\n\n# No order to asdf, so elixir error without Erlang\nRUN asdf install erlang && asdf install\n\nRUN mix local.hex --force\nRUN mix local.rebar --force\n\nVOLUME [\"${ASDF_DATA_DIR}\"]\n\n# Pre-commit install with deps\nRUN pip install --no-cache-dir setuptools wheel\nRUN pip install --no-cache-dir pre-commit\nRUN gem install rubocop\n\nENV PATH=${HOME}/.local/bin:/opt/asdf-data/shims:/opt/asdf/bin:${PATH}\n\nRUN git config --global --add safe.directory /workspace\n\nCMD [\"/bin/bash\"]\n"
}