{
  "startTime": 1674215858914,
  "endTime": 1674215859741,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 38,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:alpine AS deps\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nFROM node:alpine AS builder\nWORKDIR /app\nCOPY . .\nCOPY --from=deps /app/node_modules ./node_modules\nRUN yarn build && yarn cache clean;\n\nFROM node:alpine AS runner\nWORKDIR /app\n\nARG APP_ENV=production\nARG NODE_ENV=production\nARG PORT=3000\n\nENV APP_ENV=${APP_ENV} \\\n    NODE_ENV=${NODE_ENV} \\\n    PORT=${PORT}\n\nRUN addgroup -g 1001 -S nodejs\nRUN adduser -S nextjs -u 1001\n\nRUN mkdir -p /app/.next/cache/images && chown nextjs:nodejs /app/.next/cache/images\nVOLUME /app/.next/cache/images\n\nCOPY --from=builder /app/next.config.js ./\nCOPY --from=builder /app/public ./public\nCOPY --from=builder --chown=nextjs:nodejs /app/.next ./.next\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n\nUSER nextjs\n\nEXPOSE ${PORT}\n\nCMD [\"yarn\", \"start\"]"
}