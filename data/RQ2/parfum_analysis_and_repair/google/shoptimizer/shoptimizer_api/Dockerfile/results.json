{
  "startTime": 1674246449864,
  "endTime": 1674246450745,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 110
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim\n\nENV PYTHONDONTWRITEBYTECODE 1\nENV FLASK_APP \"main.py\"\n# Force stdin, stdout and stderr to be totally unbuffered.\nENV PYTHONUNBUFFERED 1\n# The product's customLabel field that will be set to track optimization.\n# Set to \"customLabel{0-4}\".\n# Items can be filtered by this label in Google Ads to track optimization performance.\n# Leave empty to turn off tracking.\n# Ref: https://developers.google.com/shopping-content/v2/reference/v2/products#resource -> see customLabel\nENV PRODUCT_TRACKING_FIELD \"customLabel4\"\n\nRUN mkdir /app\nWORKDIR /app\n\n# Install Mecab for language processing\nRUN apt-get update && apt-get -y --no-install-recommends install mecab libmecab-dev mecab-ipadic-utf8 git make curl xz-utils file sudo && rm -rf /var/lib/apt/lists/*;\n\n# Set up Mecab\nRUN git clone --depth 1 https://github.com/neologd/mecab-ipadic-neologd.git\nRUN echo yes | mecab-ipadic-neologd/bin/install-mecab-ipadic-neologd -n -a\nRUN cp /etc/mecabrc /usr/local/etc/\n\n# Copy Pipfiles to app/\nCOPY Pip* /app/\n\n# Install packages using Pipfile:\n#  --dev: install dev dependencies\n#  --system: do not create pipenv virtual environment\n#  --deploy --ignore-pipfile: use the Pipfile.lock to install dependencies because that has version locked\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir pipenv && \\\n    pipenv install --dev --system --deploy --ignore-pipfile\n\n# Add all files in Dockerfile directory to /app (can ignore files with .dockerignore)\nADD . /app\n\n# Install production dependencies.\nRUN pip install --no-cache-dir gunicorn tensorflow\n\n# Run gunicorn starting main.py/app object, binding IP:port\nCMD exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 540 main:app\n"
}