{
  "startTime": 1674255321727,
  "endTime": 1674255322730,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG parent_image\nFROM $parent_image\n\n# Need Clang/LLVM 3.8.\nRUN apt-get update -y && \\\n    apt-get -y --no-install-recommends install llvm-3.8 \\\n    clang-3.8 \\\n    libstdc++-5-dev \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n# Download AFL and compile using default compiler.\n# We need afl-2.26b\n# Use a copy of\n# https://lcamtuf.coredump.cx/afl/releases/afl-2.26b.tgz\n# to avoid network flakiness.\nRUN wget https://storage.googleapis.com/fuzzbench-files/afl-2.26b.tgz -O /afl-2.26b.tgz && \\\n    tar xvzf /afl-2.26b.tgz -C / && \\\n    mv /afl-2.26b /afl && \\\n    cd /afl && \\\n    git clone https://github.com/google/AFL.git /afl/recent_afl && \\\n    cd /afl/recent_afl && \\ \n    git checkout 8da80951dd7eeeb3e3b5a3bcd36c485045f40274 && \\\n    cd /afl/ && \\\n    cp /afl/recent_afl/*.c /afl/ && \\\n    cp /afl/recent_afl/*.h /afl/ && \\\n    AFL_NO_X86=1 make && rm /afl-2.26b.tgz\n\n# Set the env variables for LLVM passes and test units.\nENV CC=clang-3.8\nENV CXX=clang++-3.8\nENV LLVM_CONFIG=llvm-config-3.8\n\n# Build the LLVM passes with the LAF-INTEL patches, using Clang 3.8.\n# We force linking by setting maybe_linking = 1, see https://github.com/google/AFL/commit/3ef34c16697715d64fecfaed46c0e31e86fa9f01#diff-49b21a9ca7039117ef774ba1adfa2962\nRUN cd /afl/llvm_mode && \\\n    wget https://gitlab.com/laf-intel/laf-llvm-pass/raw/master/src/afl.patch && \\\n    patch -p0 < afl.patch && \\\n    sed -i 's/maybe_linking = 0/maybe_linking = 1/g' afl-clang-fast.c && \\\n    wget https://gitlab.com/laf-intel/laf-llvm-pass/raw/master/src/compare-transform-pass.so.cc && \\\n    wget https://gitlab.com/laf-intel/laf-llvm-pass/raw/master/src/split-compares-pass.so.cc && \\\n    wget https://gitlab.com/laf-intel/laf-llvm-pass/raw/master/src/split-switches-pass.so.cc && \\\n    sed -i 's/errs()/outs()/g' split-switches-pass.so.cc && \\\n    sed -i 's/errs()/outs()/g' split-compares-pass.so.cc && \\\n    sed -i 's/errs()/outs()/g' compare-transform-pass.so.cc && \\\n    CXXFLAGS= CFLAGS= make\n\n# Use afl_driver.cpp from LLVM as our fuzzing library.\nRUN wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp && \\\n    $CXX -I/usr/local/include/c++/v1/ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp && \\\n    ar r /libAFL.a *.o\n"
}