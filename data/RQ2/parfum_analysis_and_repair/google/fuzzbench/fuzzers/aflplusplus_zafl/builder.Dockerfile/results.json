{
  "startTime": 1674215093433,
  "endTime": 1674215094912,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG parent_image\nFROM $parent_image\n\n# Install libstdc++ to use llvm_mode.\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y wget libtool-bin automake flex bison \\\n                       libglib2.0-dev libpixman-1-dev python3-setuptools unzip \\\n                       apt-utils apt-transport-https ca-certificates libc-ares-dev && rm -rf /var/lib/apt/lists/*;\n\nrun printf \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-12 main\" |tee /etc/apt/sources.list.d/llvm-toolchain-xenial-12.list && wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key |apt-key add - && apt update\n\n\nRUN echo $parent_image && apt-get update -y && env DEBIAN_FRONTEND=noninteractive apt install --no-install-recommends -y scons bison flex g++ nasm sharutils gcc-multilib g++-multilib autoconf libelf-dev coreutils makeself postgresql-client libpqxx-dev cmake git unzip wget build-essential python3-dev automake git flex bison libglib2.0-dev libpixman-1-dev python3-setuptools ninja-build tzdata openssl sudo fakeroot file postgresql\nRUN env DEBIAN_FRONTEND=noninteractive apt-get install -y lld-12 llvm-12 llvm-12-dev clang-12\nRUN env DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends --reinstall ca-certificates\n\n# Download and compile afl++.\nRUN git clone https://github.com/AFLplusplus/AFLplusplus.git /afl && \\\n    cd /afl && \\\n    git checkout 65e63b9cf107ae914630a4fff7381cee150df5fe\n\n# Build without Python support as we don't need it.\n# Set AFL_NO_X86 to skip flaky tests.\nRUN cd /afl && unset CFLAGS && unset CXXFLAGS && \\\n    export CC=clang && export AFL_NO_X86=1 && LLVM_CONFIG=llvm-config \\\n    PYTHON_INCLUDE=/ make && make install && \\\n    make -C utils/aflpp_driver && \\\n    cp utils/aflpp_driver/libAFLDriver.a /\n\n\n\n# Get the hash from Zephyr's Gitlab for the projects to force Docker's cache to invalidate\n# itself if an update to one of these projects occurs.\n# the gitlab API uses project IDs instead of project names, making the URL harder to read.\n# decoder ring:  id:27=zipr, id:117=zafl\n# These project name->id mappings do not change unless someone deletes/forks/moves the project's repository,\n# so they should be long-term stable.\nADD https://git.zephyr-software.com/api/v4/projects/27/repository/branches/master /tmp/zipr.killcache\nADD https://git.zephyr-software.com/api/v4/projects/117/repository/branches/master /tmp/zafl.killcache\n\nENV USER=root\n# checkout and build zipr/zafl, and setup postgres\nRUN cd / && \\\n\tgit config --global http.sslVerify false && \\\n \tgit clone --recursive --depth 1 https://git.zephyr-software.com/opensrc/zipr.git &&\\\n\tgit clone --recursive --depth 1 https://git.zephyr-software.com/opensrc/zafl.git\n\nRUN \tbash -c 'unset CC ; unset CXX; unset CFLAGS; unset CXXFLAGS; cd /zipr ;  \\\n\tservice postgresql start ; \\\n\twhile ! pg_isready ; do sleep 1 ; done  ; \\\n\t. set_env_vars ;  \\\n\tscons -j3 ; \\\n\t./postgres_setup.sh  ; \\\n \tcd /zafl ;  \\\n\t. set_env_vars ;  \\\n\tscons -j3 ; \\\n\tcd / ; \\\n\trm -rf /zipr/irdb-libs /zipr/SMPStaticAnalyzer /*/.git' ; \\\n\tcp /zafl/libzafl/lib/*so /out\n\nRUN cp /afl/afl-fuzz /out\nCOPY cc.sh /cc.sh\nCOPY cxx.sh /cxx.sh\nCOPY zafl_bins.sh /zafl_bins.sh\nCOPY null.c /tmp\nCOPY aflpp_driver.c /tmp\nRUN clang -c -fPIC /tmp/null.c -o /tmp/null.o; ar crs /out/fakeLibrary.a /tmp/null.o; cp /out/fakeLibrary.a /usr/lib/libFuzzingEngine.a\n\nENV LD_LIBRARY_PATH=/zafl/libzafl/lib/\n\n# some benchmarks need this file which isn't copied by the default setup.\nRUN if [ -f /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5.so ] ;then  echo copying libhdf5  ; cp /usr/lib/x86_64-linux-gnu/hdf5/serial/libhdf5.so /out    ; chmod +x /out/libhdf5.so ; ln -s /out/libhdf5.so /out/libhdf5_serial.so.10; fi\nRUN if [ -f /usr/lib/x86_64-linux-gnu/libsz.so.2             ] ;then  echo copying ssl      ; cp /usr/lib/x86_64-linux-gnu/libsz.so.2 /out/libsz.so       ; chmod +x /out/libsz.so   ; ln -s /out/libsz.so /out/libsz.so.2; fi\nRUN if [ -f /usr/lib/x86_64-linux-gnu/libaec.so.0.0.3        ] ;then  echo copying libaec   ; cp /usr/lib/x86_64-linux-gnu/libaec.so.0.0.3 /out/libaec.so ; chmod +x /out/libaec.so  ; ln -s /out/libaec.so /out/libaec.so.0; fi\nRUN if [ -f /usr/lib/x86_64-linux-gnu/libcares.so            ] ;then  echo copying libcares ; cp /usr/lib/x86_64-linux-gnu/libcares.so /out               ; chmod +x /out/libcares.so; ln -s /out/libcares.so /out/libcares.so.2; fi\n\n\n"
}