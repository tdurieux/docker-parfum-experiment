{
  "startTime": 1674248305118,
  "endTime": 1674248306820,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG parent_image\nFROM $parent_image\n\nRUN sed -i -- 's/# deb-src/deb-src/g' /etc/apt/sources.list && cat /etc/apt/sources.list\n\nRUN apt update -y && \\\n    apt-get build-dep -y qemu-user\n\nRUN apt-get install --no-install-recommends -y wget libstdc++-5-dev libtool-bin automake flex bison \\\n                       libglib2.0-dev libpixman-1-dev python3-setuptools unzip \\\n                       apt-utils apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Why do some build images have ninja, other not? Weird.\nRUN cd / && wget https://github.com/ninja-build/ninja/releases/download/v1.10.1/ninja-linux.zip && \\\n    unzip ninja-linux.zip && chmod 755 ninja && mv ninja /usr/local/bin\n\nRUN git clone https://github.com/season-lab/fuzzolic /out/fuzzolic && \\\n    cd /out/fuzzolic && \\\n    git checkout f03884e59a86af812214166ad1d5bdbda92aa23a\n\nRUN cd /out/fuzzolic && \\\n    git submodule init && \\\n    git submodule update\n\nRUN cd /out/fuzzolic/solver/fuzzy-sat && git fetch && \\\n    git submodule sync && git submodule update --init\n\n# Download and compile afl++.\nRUN git clone https://github.com/AFLplusplus/AFLplusplus.git /out/AFLplusplus && \\\n    cd /out/AFLplusplus && \\\n    git checkout 8fc249d210ad49e3dd88d1409877ca64d9884690\n\n# Build without Python support as we don't need it.\n# Set AFL_NO_X86 to skip flaky tests.\nRUN cd /out/AFLplusplus && \\\n    unset CFLAGS && unset CXXFLAGS && \\\n    export AFL_NO_X86=1 && \\\n    export CC=clang && export CXX=clang++ && \\\n    PYTHON_INCLUDE=/ make && \\\n    make -C utils/aflpp_driver && \\\n    cp utils/aflpp_driver/libAFLDriver.a / && \\\n    make install\n\nRUN cd / && git clone https://github.com/vanhauser-thc/qemu_driver && \\\n    cd /qemu_driver && \\\n    git checkout 8ad9ad589b4881552fa7ef8b7d29cd9aeb5071bd && \\\n    unset CFLAGS && unset CXXFLAGS && \\\n    export CC=clang && export CXX=clang++ && \\\n    make && \\\n    cp -fv libQEMU.a /libStandaloneFuzzTarget.a\n\nRUN cp /out/fuzzolic/utils/afl-showmap /out && \\\n    cp /out/fuzzolic/utils/afl-showmap /out/AFLplusplus/ && \\\n    cp /out/fuzzolic/utils/afl-qemu-trace /out/ && \\\n    cp /out/fuzzolic/utils/afl-qemu-trace /out/AFLplusplus/ && \\\n    cp /out/fuzzolic/utils/merge_bitmap /out/ && \\\n    cp /out/fuzzolic/utils/merge_bitmap /out/AFLplusplus/\n\nRUN apt install --no-install-recommends -y \\\n        llvm-8 clang-8 nano \\\n        qemu-user git libglib2.0-dev libfdt-dev \\\n        libpixman-1-dev zlib1g-dev libcapstone-dev \\\n        strace cmake python3 libprotobuf-dev libprotobuf9v5 \\\n        libibverbs-dev libjpeg62-dev \\\n        libpng16-16 libjbig-dev \\\n        build-essential libtool-bin python3-dev \\\n        automake flex bison libglib2.0-dev \\\n        libpixman-1-dev clang \\\n        python3-setuptools llvm wget \\\n        llvm-dev g++ g++-multilib python \\\n        python-pip lsb-release gcc-4.8 g++-4.8 \\\n        llvm-3.9 cmake libc6 libstdc++6 \\\n        linux-libc-dev gcc-multilib \\\n        apt-transport-https libtool \\\n        libtool-bin wget joe \\\n        automake autoconf \\\n        bison git valgrind ninja-build \\\n        time python3-pip && rm -rf /var/lib/apt/lists/*;\n# dumb-init xxd libprotobuf10\n\nRUN apt clean -y\nRUN python3 -m pip install --upgrade pip\nRUN pip install --no-cache-dir --user virtualenv\n\n# Build QEMU tracer\nRUN cd /out/fuzzolic/tracer && \\\n    export CC=clang && export CXX=clang++ && \\\n    export CFLAGS=\"-O3 -g -funroll-loops -Wno-error\" && \\\n    export CXXFLAGS=\"-O3 -g -funroll-loops -Wno-error\" && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=`pwd`/../build --target-list=x86_64-linux-user && make -j\n\n# Build custom Z3\nRUN cd /out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3 && \\\n    export CC=clang && export CXX=clang++ && \\\n    export CFLAGS=\"-O3 -g -funroll-loops -Wno-error\" && \\\n    export CXXFLAGS=\"-O3 -g -funroll-loops -Wno-error\" && \\\n    mkdir build && cd build && cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=`pwd`/dist && make -j && make install\n\n# Create fuzzy-sat-CLI folder\nRUN cd /out/fuzzolic/solver/fuzzy-sat && \\\n    git rev-parse HEAD > /tmp/revision && \\\n    git checkout master && \\\n    git submodule update && \\\n    cd ../.. && \\\n    cp -r solver/fuzzy-sat solver/fuzzy-sat-cli && \\\n    rm solver/fuzzy-sat-cli/.git && \\\n    cd solver/fuzzy-sat && \\\n    git checkout `cat /tmp/revision` && \\\n    git submodule update\n\n# Build fuzzy-sat-CLI\nRUN cd /out/fuzzolic/solver/fuzzy-sat-cli && \\\n    export CC=clang && export CXX=clang++ && \\\n    export CFLAGS=\"-O3 -g -funroll-loops -Wno-error\" && \\\n    export CXXFLAGS=\"-O3 -g -funroll-loops -Wno-error\" && \\\n    export C_INCLUDE_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/include && \\\n    export LIBRARY_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/lib && \\\n    export LD_LIBRARY_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/lib && \\\n    make -j\n\n# Build fuzzy-sat\nRUN cd /out/fuzzolic/solver/fuzzy-sat && \\\n    export CC=clang && export CXX=clang++ && \\\n    export CFLAGS=\"-O3 -g -funroll-loops -Wno-error\" && \\\n    export CXXFLAGS=\"-O3 -g -funroll-loops -Wno-error\" && \\\n    export C_INCLUDE_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/include && \\\n    export LIBRARY_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/lib && \\\n    export LD_LIBRARY_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/lib && \\\n    make -j\n\n# Build solver frontend\nRUN cd /out/fuzzolic/solver && \\\n    export CC=clang && export CXX=clang++ && \\\n    export CFLAGS=\"-O3 -g -funroll-loops -Wno-error -Wl,--allow-multiple-definition\" && \\\n    export CXXFLAGS=\"-O3 -g -funroll-loops -Wno-error -Wl,--allow-multiple-definition\" && \\\n    export C_INCLUDE_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/include && \\\n    export LIBRARY_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/lib && \\\n    export LD_LIBRARY_PATH=/out/fuzzolic/solver/fuzzy-sat/fuzzolic-z3/build/dist/lib && \\\n    cmake . && make -j\n\n# Remove packages that make benchmark builds fail otherwise\nRUN apt-get remove -y -m -f \\\n    binfmt-support clang-3.8 cpp-4.8 g++-5-multilib gcc-4.8-base gdbserver \\\n    lib32stdc++-5-dev libbabeltrace-ctf1 libbabeltrace1 libc6-dbg \\\n    libcapstone3 libclang-common-3.8-dev libclang-common-8-dev libclang1-3.8 \\\n    libclang1-8 libcloog-isl4 libexpat1-dev libffi-dev libgcc-4.8-dev \\\n    libibverbs1 libjbig0 libjpeg62 libllvm3.8 libllvm3.9 libllvm8 libobjc-5-dev \\\n    libobjc4 libomp-8-dev libomp5-8 libprotobuf-lite9v5 libpython-all-dev \\\n    libpython-dev libpython2.7 libpython2.7-dev libpython3-dev libpython3.5 \\\n    libpython3.5-dev libstdc++-4.8-dev libx32stdc++-5-dev llvm-3.8 llvm-3.8-dev \\\n    llvm-3.8-runtime llvm-3.9-dev llvm-3.9-runtime llvm-8-dev llvm-8-runtime \\\n    llvm-runtime python-all python-all-dev python-dev python-pip-whl \\\n    python-pkg-resources python-setuptools python-wheel python2.7-dev \\\n    python3.5-dev qemu-user-binfmt\nRUN apt-get autoremove -y && apt-get clean -y\n"
}