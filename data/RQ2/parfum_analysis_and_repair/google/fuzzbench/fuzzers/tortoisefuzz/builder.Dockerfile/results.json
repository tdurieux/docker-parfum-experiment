{
  "startTime": 1674253933209,
  "endTime": 1674253934987,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Includes latest clang\nARG parent_image\nFROM $parent_image\n\n# Prerequisits\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install git build-essential cmake ninja-build \\\n    python-dev \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nENV CC=gcc\nENV CXX=g++\n\n# Compile & Install llvm 6.0.0\nRUN mkdir /workdir && cd /workdir && \\\n    wget https://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz && \\\n    wget https://releases.llvm.org/6.0.0/cfe-6.0.0.src.tar.xz && \\\n    wget https://releases.llvm.org/6.0.0/compiler-rt-6.0.0.src.tar.xz && \\\n    wget https://releases.llvm.org/6.0.0/clang-tools-extra-6.0.0.src.tar.xz && \\\n    tar -xf llvm-6.0.0.src.tar.xz && mv llvm-6.0.0.src llvm6 && \\\n    tar -xf cfe-6.0.0.src.tar.xz && mv cfe-6.0.0.src llvm6/tools/clang && \\\n    tar -xf compiler-rt-6.0.0.src.tar.xz && mv compiler-rt-6.0.0.src llvm6/projects/compiler-rt && \\\n    tar -xf clang-tools-extra-6.0.0.src.tar.xz && mv clang-tools-extra-6.0.0.src llvm6/tools/clang/tools/extra && rm llvm-6.0.0.src.tar.xz\n\nRUN cd /workdir && mkdir build6 && unset CFLAGS && unset CXXFLAGS && \\\n    cd build6 && \\\n    cmake -G \"Ninja\" -DLLVM_ENABLE_ASSERTIONS=On -DCMAKE_BUILD_TYPE=Release ../llvm6 && \\\n    ninja && \\\n    ninja install\n\n# Compile TortoiseFuzz\nENV CC=clang\nENV CXX=clang++\n\nRUN cd /workdir && \\\n    git clone https://github.com/TortoiseFuzz/TortoiseFuzz.git && \\\n    cd TortoiseFuzz && \\\n    unset CFLAGS && unset CXXFLAGS && make\n\n# Use afl_driver.cpp from LLVM as our libFuzzer harness.\nRUN  \\\n    wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /workdir/TortoiseFuzz/afl_driver.cpp && \\\n    clang++ -stdlib=libc++ -std=c++11 -O2 -c /workdir/TortoiseFuzz/afl_driver.cpp && \\\n    ar r /libAFLDriver.a afl_driver.o\n"
}