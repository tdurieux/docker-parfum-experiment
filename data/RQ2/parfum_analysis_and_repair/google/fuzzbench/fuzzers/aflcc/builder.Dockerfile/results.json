{
  "startTime": 1674248292871,
  "endTime": 1674248293617,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG parent_image=gcr.io/fuzzbench/base-builder\nFROM $parent_image\n\n# Need Clang/LLVM 3.8.\nRUN apt-get update -y && \\\n    apt-get -y --no-install-recommends install llvm-3.8 \\\n    clang-3.8 \\\n    libstdc++-5-dev \\\n    wget \\\n    make \\\n    gcc \\\n    cmake \\\n    texinfo \\\n    bison \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Install some libraries needed by some oss-fuzz benchmarks\nRUN apt-get install --no-install-recommends -y zlib1g-dev \\\n    libarchive-dev \\\n    libglib2.0-dev \\\n    libpsl-dev \\\n    libbsd-dev && rm -rf /var/lib/apt/lists/*;\n\n# Set env variables.\nENV AFL_CONVERT_COMPARISON_TYPE=NONE\nENV AFL_COVERAGE_TYPE=ORIGINAL\nENV AFL_BUILD_TYPE=FUZZING\nENV AFL_DICT_TYPE=NORMAL\nENV LLVM_CONFIG=llvm-config-3.8\n\n\n# Download and compile aflcc.\n# Note: the commit number is for branch 'nodebug'\nRUN git clone https://github.com/Samsung/afl_cc.git /afl && \\\n    cd /afl && \\\n    git checkout c9486dfdf35b7d5f58ce4f9dae141031d2f9f3f1 && \\\n    AFL_NO_X86=1 make && \\\n    cd /afl/llvm_mode && \\\n    CC=clang-3.8 CXX=clang++-3.8 CFLAGS= CXXFLAGS= make\n\n# Install gllvm\nRUN cd /afl && \\\n    sh ./setup-aflc-gclang.sh\n\n# Use afl_driver.cpp from LLVM as our fuzzing library.\nENV CC=/afl/aflc-gclang\nENV CXX=/afl/aflc-gclang++\nCOPY aflcc_mock.c /aflcc_mock.c\nRUN wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp && \\\n    sed -i -e '/decide_deferred_forkserver/,+8d' /afl/afl_driver.cpp && \\\n    $CXX -I/usr/local/include/c++/v1/ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp -o /afl/afl_driver.o && \\\n    ar r /libAFL.a /afl/afl_driver.o && \\\n    clang-3.8 -O2 -c -fPIC /aflcc_mock.c -o /aflcc_mock.o && \\\n    clang-3.8 -shared -o /libAflccMock.so /aflcc_mock.o\n\n"
}