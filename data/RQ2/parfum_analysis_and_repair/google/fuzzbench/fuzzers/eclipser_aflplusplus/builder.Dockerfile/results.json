{
  "startTime": 1674255325494,
  "endTime": 1674255326040,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG parent_image\nFROM $parent_image\n\n# Install libstdc++ to use llvm_mode.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget libstdc++-5-dev libtool-bin automake flex bison \\\n                       libglib2.0-dev libpixman-1-dev python3-setuptools unzip \\\n                       apt-utils apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Upgrade to avoid certs errors\nRUN apt-get upgrade -y\n\n# Download and compile afl++.\nRUN git clone https://github.com/AFLplusplus/AFLplusplus.git /afl && \\\n    cd /afl && \\\n    git checkout 8fc249d210ad49e3dd88d1409877ca64d9884690\n\n# Build without Python support as we don't need it.\n# Set AFL_NO_X86 to skip flaky tests.\nRUN cd /afl && unset CFLAGS && unset CXXFLAGS && \\\n    export CC=clang && export AFL_NO_X86=1 && \\\n    PYTHON_INCLUDE=/ make && make install && \\\n    make -C utils/aflpp_driver && \\\n    cp utils/aflpp_driver/libAFLDriver.a /\n\n# Eclipser special\nRUN cd / && \\\n    wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/standalone/StandaloneFuzzTargetMain.c -O /StandaloneFuzzTargetMain.c && \\\n    clang -O2 -c /StandaloneFuzzTargetMain.c && \\\n    ar rc /libStandaloneFuzzTarget.a StandaloneFuzzTargetMain.o && \\\n    rm /StandaloneFuzzTargetMain.c\n"
}