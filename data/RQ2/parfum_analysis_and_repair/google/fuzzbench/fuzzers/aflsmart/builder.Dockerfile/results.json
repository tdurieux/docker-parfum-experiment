{
  "startTime": 1674218718383,
  "endTime": 1674218719098,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 26,
        "columnStart": 25,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 37,
        "columnStart": 25,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 26,
        "columnStart": 25,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 37,
        "columnStart": 25,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG parent_image\nFROM $parent_image\n\n# install AFLSmart dependencies\nRUN dpkg --add-architecture i386 && \\\n    apt-get update -y && apt-get install --no-install-recommends -y \\\n    apt-utils \\\n    libc6-dev-i386 \\\n    python-pip \\\n    g++-multilib \\\n    mono-complete \\\n    gnupg-curl \\\n    software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# install gcc-4.4 & g++-4.4 required by Peach while running on Ubuntu 16.04\nRUN apt-get update -y && \\\n    apt-get upgrade -y && \\\n    add-apt-repository --keyserver hkps://keyserver.ubuntu.com:443 ppa:ubuntu-toolchain-r/test -y && \\\n    apt-get update -y && apt-get install --no-install-recommends -y \\\n    gcc-4.4 \\\n    g++-4.4 \\\n    unzip \\\n    wget \\\n    tzdata && rm -rf /var/lib/apt/lists/*;\n\n# Download and compile AFLSmart\nRUN git clone https://github.com/aflsmart/aflsmart /afl && \\\n    cd /afl && \\\n    git checkout a9d60257a6b5a7df2e177bddc6982376723bfd90 && \\\n    AFL_NO_X86=1 make\n\n# Setup Peach.\n# Set CFLAGS=\"\" so that we don't use the CFLAGS defined in OSS-Fuzz images.\n# Use a copy of\n# https://sourceforge.net/projects/peachfuzz/files/Peach/3.0/peach-3.0.202-source.zip\n# to avoid network flakiness.\nRUN cd /afl && \\\n    wget https://storage.googleapis.com/fuzzbench-files/peach-3.0.202-source.zip && \\\n    unzip peach-3.0.202-source.zip && \\\n    patch -p1 < peach-3.0.202.patch && \\\n    cd peach-3.0.202-source && \\\n    CC=gcc-4.4 CXX=g++-4.4 CFLAGS=\"\" CXXFLAGS=\"-std=c++0x\" ./waf configure && \\\n    CC=gcc-4.4 CXX=g++-4.4 CFLAGS=\"\" CXXFLAGS=\"-std=c++0x\" ./waf install\n\n# Use afl_driver.cpp from LLVM as our fuzzing library.\nRUN wget https://raw.githubusercontent.com/llvm/llvm-project/5feb80e748924606531ba28c97fe65145c65372e/compiler-rt/lib/fuzzer/afl/afl_driver.cpp -O /afl/afl_driver.cpp && \\\n    clang -Wno-pointer-sign -c /afl/llvm_mode/afl-llvm-rt.o.c -I/afl && \\\n    clang++ -stdlib=libc++ -std=c++11 -O2 -c /afl/afl_driver.cpp && \\\n    ar r /libAFL.a *.o\n"
}