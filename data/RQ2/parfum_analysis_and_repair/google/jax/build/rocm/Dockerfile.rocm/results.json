{
  "startTime": 1674219991912,
  "endTime": 1674219992883,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 46,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 35,
        "columnStart": 52,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 80,
        "lineEnd": 82,
        "columnStart": 2,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 46,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 82,
        "columnStart": 2,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\nMAINTAINER Reza Rahimi <reza.rahimi@amd.com>\n\nARG ROCM_DEB_REPO=http://repo.radeon.com/rocm/apt/5.2/\nARG ROCM_BUILD_NAME=ubuntu\nARG ROCM_BUILD_NUM=main\nARG ROCM_PATH=/opt/rocm-5.2.0\n\nARG DEBIAN_FRONTEND=noninteractive\nENV HOME /root/\nENV ROCM_PATH=$ROCM_PATH\n\nRUN apt-get --allow-unauthenticated update && apt install --no-install-recommends -y wget software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt-get clean all\nRUN wget -qO - https://repo.radeon.com/rocm/rocm.gpg.key | apt-key add -;\nRUN bin/bash -c 'if [[ $ROCM_DEB_REPO == http://repo.radeon.com/rocm/*  ]] ; then \\\n      echo \"deb [arch=amd64] $ROCM_DEB_REPO $ROCM_BUILD_NAME $ROCM_BUILD_NUM\" > /etc/apt/sources.list.d/rocm.list; \\\n    else \\\n      echo \"deb [arch=amd64 trusted=yes] $ROCM_DEB_REPO $ROCM_BUILD_NAME $ROCM_BUILD_NUM\" > /etc/apt/sources.list.d/rocm.list ; \\\n    fi'\n\n\nRUN apt-get update --allow-insecure-repositories && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  build-essential \\\n  software-properties-common \\\n  clang-6.0 \\\n  clang-format-6.0 \\\n  curl \\\n  g++-multilib \\\n  git \\\n  vim \\\n  libnuma-dev \\\n  virtualenv \\\n  python3-pip \\\n  pciutils \\\n  wget && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Add to get ppa\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n# Install rocm pkgs\nRUN apt-get update --allow-insecure-repositories && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --allow-unauthenticated \\\n    rocm-dev rocm-libs rccl && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set up paths\nENV HCC_HOME=$ROCM_PATH/hcc\nENV HIP_PATH=$ROCM_PATH/hip\nENV OPENCL_ROOT=$ROCM_PATH/opencl\nENV PATH=\"$HCC_HOME/bin:$HIP_PATH/bin:${PATH}\"\nENV PATH=\"$ROCM_PATH/bin:${PATH}\"\nENV PATH=\"$OPENCL_ROOT/bin:${PATH}\"\n\n# Add target file to help determine which device(s) to build for\nRUN bash -c 'echo -e \"gfx900\\ngfx906\\ngfx908\\ngfx90a\\ngfx1030\" >> ${ROCM_PATH}/bin/target.lst'\n\n# Need to explicitly create the $ROCM_PATH/.info/version file to workaround what seems to be a bazel bug\n# The env vars being set via --action_env in .bazelrc and .tf_configure.bazelrc files are sometimes\n# not getting set in the build command being spawned by bazel (in theory this should not happen)\n# As a consequence ROCM_PATH is sometimes not set for the hipcc commands.\n# When hipcc incokes hcc, it specifies $ROCM_PATH/.../include dirs via the `-isystem` options\n# If ROCM_PATH is not set, it defaults to /opt/rocm, and as a consequence a dependency is generated on the\n# header files included within `/opt/rocm`, which then leads to bazel dependency errors\n# Explicitly creating the $ROCM_PATH/.info/version allows ROCM path to be set correrctly, even when ROCM_PATH\n# is not explicitly set, and thus avoids the eventual bazel dependency error.\n# The bazel bug needs to be root-caused and addressed, but that is out of our control and may take a long time\n# to come to fruition, so implementing the workaround to make do till then\n# Filed https://github.com/bazelbuild/bazel/issues/11163 for tracking this\nRUN touch ${ROCM_PATH}/.info/version\n\nENV PATH=\"/root/bin:/root/.local/bin:$PATH\"\n\n\n# Install python3.9\nRUN add-apt-repository ppa:deadsnakes/ppa && \\\n  apt update && \\\n  apt install --no-install-recommends -y python3.9-dev \\\n    python3-pip \\\n    python3.9-distutils && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 && \\\n     update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.9 2\n\nRUN pip3 install --no-cache-dir --upgrade setuptools pip\n\nRUN pip3 install --no-cache-dir absl-py numpy==1.19.5 scipy wheel six setuptools pytest pytest-rerunfailures\n\n"
}