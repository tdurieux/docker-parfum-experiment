{
  "startTime": 1674249712080,
  "endTime": 1674249712765,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 38,
        "columnStart": 1,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 syzkaller project authors. All rights reserved.\n# Use of this source code is governed by Apache 2 LICENSE that can be found in the LICENSE file.\n\n# See /tools/docker/README.md for details.\n\nFROM gcr.io/syzkaller/env\n\n# Install OS toolchains from pre-built archives.\n# These archives were created with:\n# tar -cz --owner=0 --group=0 --mode=go=u -f akaros-toolchain.tar.gz akaros/toolchain\n# tar -cz --owner=0 --group=0 --mode=go=u -f netbsd-toolchain.tar.gz netbsd/tools netbsd/dest\n# tar -cz --owner=0 --group=0 --mode=go=u -f fuchsia-toolchain.tar.gz fuchsia/prebuilt/third_party/clang \\\n#\tfuchsia/zircon/system/ulib fuchsia/src/lib/ddk fuchsia/out/x64/fidling/gen \\\n#\tfuchsia/out/x64/zircon_toolchain/obj/zircon/public/sysroot/sysroot \\\n#\tfuchsia/out/x64/x64-shared/*.so fuchsia/out/arm64/fidling/gen \\\n#\tfuchsia/out/arm64/zircon_toolchain/obj/zircon/public/sysroot/sysroot \\\n#\tfuchsia/out/arm64/arm64-shared/*.so\n#\n# And then uploaded to GCS with:\n# gsutil mv gs://syzkaller/GOOS-toolchain.tar.gz gs://syzkaller/GOOS-toolchain.old.tar.gz\n# gsutil cp GOOS-toolchain.tar.gz gs://syzkaller/\n# gsutil acl ch -g all:R gs://syzkaller/GOOS-toolchain.tar.gz\n#\n# NetBSD toolchain can be re-built with:\n# ./build.sh -j72 -m amd64 -U -T ../tools tools\n# ./build.sh -j72 -m amd64 -U -T ../tools -D ../dest distribution\n#\n# To build root image run:\n#\tdocker run -it --rm --privileged --device /dev/loop0 gcr.io/syzkaller/big-env\n#\tmount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc\n#\tcreate-image.sh -a s390x -d buster\n\nRUN dpkg --add-architecture i386 && \\\n\tapt-get update --allow-releaseinfo-change && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\n\t# required to build root images.\n\tdebootstrap ssh-tools qemu-user-static \\\n\t# required for gcloud sdk.\n\tpython2 \\\n\t&& \\\n\tapt-get -y autoremove && \\\n\tapt-get clean autoclean && \\\n\trm -rf /var/lib/apt/lists/{apt,dpkg,cache,log} /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f https://storage.googleapis.com/syzkaller/fuchsia-toolchain.tar.gz | tar -C /syzkaller -xz\nRUN curl -f https://storage.googleapis.com/syzkaller/netbsd-toolchain.tar.gz | tar -C /syzkaller -xz\nRUN curl -f https://storage.googleapis.com/syzkaller/akaros-toolchain.tar.gz | tar -C /syzkaller -xz\nENV SOURCEDIR_FUCHSIA /syzkaller/fuchsia\nENV SOURCEDIR_NETBSD /syzkaller/netbsd\nENV SOURCEDIR_AKAROS /syzkaller/akaros\n\n# Install gcloud sdk for dashboard/app tests.\nRUN curl -f https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-360.0.0-linux-x86_64.tar.gz | tar -C /usr/local -xz\nENV PATH /usr/local/google-cloud-sdk/bin:$PATH\nRUN gcloud components install --quiet app-engine-python app-engine-go app-engine-python-extras cloud-datastore-emulator\nRUN chmod 0777 /usr/local/google-cloud-sdk\n\nRUN echo \"export PS1='syz-big-envðŸˆ¶ '\" > /syzkaller/.bashrc\nENV SYZ_BIG_ENV yes\n"
}