{
  "startTime": 1674217061525,
  "endTime": 1674217062473,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nFROM ubuntu:20.04 as chroot\n\nRUN /usr/sbin/useradd -u 1000 user\n\nRUN apt-get update \\\n    && apt-get install -yq --no-install-recommends \\\n       curl ca-certificates socat gnupg lsb-release software-properties-common php-cgi \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n    && (echo \"deb https://deb.nodesource.com/node_10.x $(lsb_release -s -c) main\";\\\n        echo \"deb-src https://deb.nodesource.com/node_10.x $(lsb_release -s -c) main\") \\\n       > /etc/apt/sources.list.d/nodesource.list \\\n    && add-apt-repository universe \\\n    && apt-get update \\\n    && apt-get install -yq --no-install-recommends nodejs socat \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /mnt/disks/sessions\nRUN mkdir -p /mnt/disks/uploads\n\nVOLUME /mnt/disks/sessions\nVOLUME /mnt/disks/uploads\n\nCOPY web-apps /web-apps\nCOPY web-servers /web-servers\n\nCOPY flag /\n\nFROM gcr.io/kctf-docker/challenge@sha256:d884e54146b71baf91603d5b73e563eaffc5a42d494b1e32341a5f76363060fb\n\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends tzdata apache2 \\\n    && ln -fs /usr/share/zoneinfo/Europe/Berlin /etc/localtime \\\n    && dpkg-reconfigure --frontend noninteractive tzdata \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN service apache2 start\n\nCOPY --from=chroot / /chroot\n\n# For Proxy\nRUN ln -s /etc/apache2/mods-available/proxy.load /etc/apache2/mods-enabled/\nRUN ln -s /etc/apache2/mods-available/proxy_http.load /etc/apache2/mods-enabled/\n\n# For CGI sandboxing\nRUN ln -s /etc/apache2/mods-available/cgi.load /etc/apache2/mods-enabled/cgi.load\nRUN ln -s /etc/apache2/mods-available/actions.load /etc/apache2/mods-enabled/actions.load\nRUN ln -s /chroot/web-apps /web-apps\nCOPY cgi-bin /usr/lib/cgi-bin\n\nCOPY apache2-kctf-nsjail.conf /etc/apache2/conf-enabled/\n\nCOPY web-servers.nsjail.cfg /home/user/web-servers.nsjail.cfg\nCOPY cgi-bin.nsjail.cfg /home/user/cgi-bin.nsjail.cfg\n\nVOLUME /var/log/apache2\nVOLUME /var/run/apache2\n\nCMD kctf_setup \\\n    && (kctf_drop_privs nsjail --config /home/user/web-servers.nsjail.cfg --port 8081 -- /web-servers/nodejs.sh &) \\\n    && bash -c 'source /etc/apache2/envvars && APACHE_RUN_USER=user APACHE_RUN_GROUP=user /usr/sbin/apache2 -D FOREGROUND'\n"
}