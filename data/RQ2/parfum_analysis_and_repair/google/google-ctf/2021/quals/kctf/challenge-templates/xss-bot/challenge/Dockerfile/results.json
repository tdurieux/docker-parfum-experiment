{
  "startTime": 1674248020422,
  "endTime": 1674248021620,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 21,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nFROM gcr.io/kctf-docker/challenge@sha256:035cc67b4dfd74077a8a305321b17854481308dec5af28fc8ad1d6c75d729340\n\nRUN apt-get update && apt-get install --no-install-recommends -y gnupg2 && rm -rf /var/lib/apt/lists/*;\n\n# Install latest chrome dev package and fonts to support major charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version of Chromium that Puppeteer installs, work.\n# Deps from https://github.com/puppeteer/puppeteer/blob/main/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix\n#  plus libxshmfence1 which seems to be missing\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -yq --no-install-recommends \\\n        ca-certificates \\\n        fonts-liberation \\\n        libappindicator3-1 \\\n        libasound2 \\\n        libatk-bridge2.0-0 \\\n        libatk1.0-0 \\\n        libc6 \\\n        libcairo2 \\\n        libcups2 \\\n        libdbus-1-3 \\\n        libexpat1 \\\n        libfontconfig1 \\\n        libgbm1 \\\n        libgcc1 \\\n        libglib2.0-0 \\\n        libgtk-3-0 \\\n        libnspr4 \\\n        libnss3 \\\n        libpango-1.0-0 \\\n        libpangocairo-1.0-0 \\\n        libstdc++6 \\\n        libx11-6 \\\n        libx11-xcb1 \\\n        libxcb1 \\\n        libxcomposite1 \\\n        libxcursor1 \\\n        libxdamage1 \\\n        libxext6 \\\n        libxfixes3 \\\n        libxi6 \\\n        libxrandr2 \\\n        libxrender1 \\\n        libxshmfence1 \\\n        libxss1 \\\n        libxtst6 \\\n        lsb-release \\\n        wget \\\n        xdg-utils \\\n       nodejs npm \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY bot.js /home/user/\nCOPY cookie /home/user/\nRUN cd /home/user && npm install puppeteer && npm cache clean --force;\n\nENV DOMAIN=\"www.example.com\"\n# Hosting multiple web challenges same-site to each other can lead to\n# unintended solutions. E.g. an xss on a.foo.com will be able to overwrite\n# cookies on b.foo.com.\n# To prevent this, we can block chrome from accessing any subdomains under\n# foo.com except for the real challenge domain using a PAC script.\n# Unfortunately, PAC will not work in chrome headless mode, so this will use\n# more resources.\nENV BLOCK_SUBORIGINS=\"1\"\nENV REGISTERED_DOMAIN=\"example.com\"\n\nRUN if [ \"${BLOCK_SUBORIGINS}\" = \"1\" ]; then \\\n      apt-get update \\\n      && apt-get install -yq --no-install-recommends xvfb \\\n      && rm -rf /var/lib/apt/lists/*; \\\n    fi\nRUN sed -i -e \"s/DOMAIN_SET_IN_DOCKERFILE/${DOMAIN}/\" /home/user/cookie\n\nCMD kctf_setup && \\\n    mount -t tmpfs none /tmp && \\\n    while true; do \\\n      if [ \"${BLOCK_SUBORIGINS}\" = \"1\" ]; then \\\n        kctf_drop_privs env BLOCK_SUBORIGINS=\"${BLOCK_SUBORIGINS}\" DOMAIN=\"${DOMAIN}\" REGISTERED_DOMAIN=\"${REGISTERED_DOMAIN}\" xvfb-run /usr/bin/node /home/user/bot.js; \\\n      else \\\n        kctf_drop_privs env BLOCK_SUBORIGINS=\"${BLOCK_SUBORIGINS}\" DOMAIN=\"${DOMAIN}\" REGISTERED_DOMAIN=\"${REGISTERED_DOMAIN}\" /usr/bin/node /home/user/bot.js; \\\n      fi; \\\n    done & \\\n    kctf_drop_privs \\\n    socat \\\n      TCP-LISTEN:1337,reuseaddr,fork \\\n      EXEC:\"kctf_pow socat STDIN TCP\\:localhost\\:1338\"\n"
}