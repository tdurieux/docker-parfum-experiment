{
  "startTime": 1674249834059,
  "endTime": 1674249834778,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 21,
        "columnEnd": 10
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker file that builds a Centos 6 image ready for GRR installation.\n#\n# To build a new image on your local machine, cd to this file's directory\n# and run (note the period at the end):\n#\n#   docker build -t grrdocker/centos6 -f Dockerfile.centos6 .\n#\n# A custom Python version is built and installed in /usr/local/bin by this\n# script. It is available in the PATH as 'python2.7'. The old (default) Python\n# is still available in the PATH as 'python'.\n\nFROM centos:6\n\nLABEL maintainer=\"grr-dev@googlegroups.com\"\n\nWORKDIR /tmp/grrdocker-scratch\n\n# Install pre-requisites for building Python, as well as GRR prerequisites.\nRUN yum update -y && yum install -y zlib-devel bzip2-devel ncurses-devel \\\n  readline-devel tk-devel gdbm-devel db4-devel libpcap-devel \\\n  xz-devel epel-release python-devel wget which java-1.8.0-openjdk \\\n  libffi-devel openssl-devel zip git gcc gcc-c++ redhat-rpm-config rpm-build \\\n  rpm-sign && rm -rf /var/cache/yum\n\n# Install a recent version of sqlite. CentOS-provided one is too old\n# for Python 3.\nRUN curl -f -sO https://sqlite.org/2017/sqlite-autoconf-3160200.tar.gz && \\\n  tar xfz sqlite-autoconf-3160200.tar.gz && \\\n  cd sqlite-autoconf-3160200 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make install && \\\n  cd .. && \\\n  rm -rf sqlite-autoconf-3160200* && rm sqlite-autoconf-3160200.tar.gz\n\n# Build a recent version of Python 2 from source (Centos 6 has Python 2.6\n# installed in /usr/bin). The custom Python version is installed in\n# /usr/local/bin\nRUN wget https://www.python.org/ftp/python/2.7.14/Python-2.7.14.tgz && \\\n  tar xzvf Python-2.7.14.tgz && \\\n  cd Python-2.7.14 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --enable-ipv6 --enable-unicode=ucs4 \\\n    --prefix=/usr/local LDFLAGS=\"-Wl,-rpath /usr/local/lib\" && \\\n  make && \\\n  make altinstall && rm Python-2.7.14.tgz\n\n# Install Python 2 pip and virtualenv.\nRUN wget https://bootstrap.pypa.io/get-pip.py && \\\n  python2.7 get-pip.py && \\\n  pip install --no-cache-dir --upgrade pip virtualenv\n\n# Build Python 3 from source.\nRUN wget https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tgz && \\\n  tar xzvf Python-3.6.9.tgz && \\\n  cd Python-3.6.9 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --enable-ipv6 --prefix=/usr/local \\\n    LDFLAGS=\"-Wl,-rpath /usr/local/lib\" && \\\n  make && \\\n  make altinstall && rm Python-3.6.9.tgz\n\n# TSK currently fails with sqlite-devel, so we have to remove it from the Docker container.\nRUN yum remove -y sqlite-devel || true\n\nWORKDIR /\n\nRUN rm -rf /tmp/grrdocker-scratch\n\nCMD [\"/bin/bash\"]\n"
}