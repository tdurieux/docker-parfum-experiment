{
  "startTime": 1674246638933,
  "endTime": 1674246639800,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 81
      }
    }
  ],
  "repairedDockerfile": "# Docker file that builds an Ubuntu Xenial image ready for GRR installation.\n#\n# To build a new image on your local machine, cd to this file's directory\n# and run (note the period at the end):\n#\n#   docker build -t grrdocker/xenial -f Dockerfile.xenial .\n\nFROM ubuntu:xenial\n\nLABEL maintainer=\"grr-dev@googlegroups.com\"\n\nWORKDIR /tmp/grrdocker-scratch\n\nRUN apt update -qq && \\\n  apt install --no-install-recommends -y locales fakeroot debhelper libffi-dev git attr \\\n  libssl-dev python-dev python-pip wget openjdk-8-jdk zip devscripts \\\n  dh-systemd libmysqlclient-dev dh-virtualenv dh-make libc6-i386 lib32z1 \\\n  zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev \\\n  libbz2-dev libexpat1-dev liblzma-dev libffi-dev uuid-dev && rm -rf /var/lib/apt/lists/*;\n\n# Build Python 3 from source.\nRUN wget https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tgz && \\\n  tar xzvf Python-3.6.9.tgz && \\\n  cd Python-3.6.9 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --enable-ipv6 --prefix=/usr/local \\\n    LDFLAGS=\"-Wl,-rpath /usr/local/lib\" && \\\n  make && \\\n  make altinstall && rm Python-3.6.9.tgz\n\n# Dependencies and environment variables required to build CHIPSEC from source.\nENV LINUX_HEADERS_VERSION=\"4.15.0-46-generic\"\nRUN apt update -qq && apt install --no-install-recommends -y \\\n  build-essential gcc nasm linux-headers-${LINUX_HEADERS_VERSION} && rm -rf /var/lib/apt/lists/*;\nENV KERNEL_SRC_DIR=\"/lib/modules/${LINUX_HEADERS_VERSION}/build\"\n\n# Install pip, virtualenv, chrome and set up locales.\nRUN pip install --no-cache-dir --upgrade pip virtualenv && \\\n  wget --quiet https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \\\n  apt install --no-install-recommends -y ./google-chrome-stable_current_amd64.deb && \\\n  sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n  locale-gen && \\\n  update-locale LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US:en\" LC_ALL=\"en_US.UTF-8\" && rm -rf /var/lib/apt/lists/*;\n\n# Add chrome to PATH and set locale-related environment variables.\nENV PATH=\"${PATH}:/opt/google/chrome\" LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US:en\" LC_ALL=\"en_US.UTF-8\"\n\nWORKDIR /\n\nRUN rm -rf /tmp/grrdocker-scratch\n\nCMD [\"/bin/bash\"]\n"
}