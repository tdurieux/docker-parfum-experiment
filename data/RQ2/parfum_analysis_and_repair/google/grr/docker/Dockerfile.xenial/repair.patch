diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/grr/docker/Dockerfile.xenial b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/grr/docker/Dockerfile.xenial/repaired.Dockerfile
index a9240c7..1317544 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/grr/docker/Dockerfile.xenial
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/grr/docker/Dockerfile.xenial/repaired.Dockerfile
@@ -12,34 +12,34 @@ LABEL maintainer="grr-dev@googlegroups.com"
 WORKDIR /tmp/grrdocker-scratch
 
 RUN apt update -qq && \
-  apt install -y locales fakeroot debhelper libffi-dev git attr \
+  apt install --no-install-recommends -y locales fakeroot debhelper libffi-dev git attr \
   libssl-dev python-dev python-pip wget openjdk-8-jdk zip devscripts \
   dh-systemd libmysqlclient-dev dh-virtualenv dh-make libc6-i386 lib32z1 \
   zlib1g-dev libncurses5-dev libncursesw5-dev libreadline-dev libsqlite3-dev \
-  libbz2-dev libexpat1-dev liblzma-dev libffi-dev uuid-dev
+  libbz2-dev libexpat1-dev liblzma-dev libffi-dev uuid-dev && rm -rf /var/lib/apt/lists/*;
 
 # Build Python 3 from source.
 RUN wget https://www.python.org/ftp/python/3.6.9/Python-3.6.9.tgz && \
   tar xzvf Python-3.6.9.tgz && \
   cd Python-3.6.9 && \
-  ./configure --enable-shared --enable-ipv6 --prefix=/usr/local \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --enable-ipv6 --prefix=/usr/local \
     LDFLAGS="-Wl,-rpath /usr/local/lib" && \
   make && \
-  make altinstall
+  make altinstall && rm Python-3.6.9.tgz
 
 # Dependencies and environment variables required to build CHIPSEC from source.
 ENV LINUX_HEADERS_VERSION="4.15.0-46-generic"
-RUN apt update -qq && apt install -y \
-  build-essential gcc nasm linux-headers-${LINUX_HEADERS_VERSION}
+RUN apt update -qq && apt install --no-install-recommends -y \
+  build-essential gcc nasm linux-headers-${LINUX_HEADERS_VERSION} && rm -rf /var/lib/apt/lists/*;
 ENV KERNEL_SRC_DIR="/lib/modules/${LINUX_HEADERS_VERSION}/build"
 
 # Install pip, virtualenv, chrome and set up locales.
-RUN pip install --upgrade pip virtualenv && \
+RUN pip install --no-cache-dir --upgrade pip virtualenv && \
   wget --quiet https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \
-  apt install -y ./google-chrome-stable_current_amd64.deb && \
+  apt install --no-install-recommends -y ./google-chrome-stable_current_amd64.deb && \
   sed -i 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
   locale-gen && \
-  update-locale LANG="en_US.UTF-8" LANGUAGE="en_US:en" LC_ALL="en_US.UTF-8"
+  update-locale LANG="en_US.UTF-8" LANGUAGE="en_US:en" LC_ALL="en_US.UTF-8" && rm -rf /var/lib/apt/lists/*;
 
 # Add chrome to PATH and set locale-related environment variables.
 ENV PATH="${PATH}:/opt/google/chrome" LANG="en_US.UTF-8" LANGUAGE="en_US:en" LC_ALL="en_US.UTF-8"