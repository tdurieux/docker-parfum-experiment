diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/conscrypt/release/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/conscrypt/release/Dockerfile/repaired.Dockerfile
index c974566..45c81e8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/conscrypt/release/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/conscrypt/release/Dockerfile/repaired.Dockerfile
@@ -13,21 +13,21 @@ RUN yum install -y git \
                    libtool \
                    glibc-static.i686 \
                    glibc-devel \
-                   glibc-devel.i686
+                   glibc-devel.i686 && rm -rf /var/cache/yum
 
 RUN yum update -y nss
 
 # Install Java 8
 RUN wget -q --no-cookies --no-check-certificate \
     --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" \
-    "http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz" \
+    "https://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz" \
     -O - | tar xz -C /var/local
 ENV JAVA_HOME /var/local/jdk1.8.0_131
 ENV PATH $JAVA_HOME/bin:$PATH
 
 # Install Clang 5
-RUN yum install -y centos-release-scl
-RUN yum install -y llvm-toolset-7
+RUN yum install -y centos-release-scl && rm -rf /var/cache/yum
+RUN yum install -y llvm-toolset-7 && rm -rf /var/cache/yum
 ENV CC /opt/rh/llvm-toolset-7/root/usr/bin/clang
 ENV CXX /opt/rh/llvm-toolset-7/root/usr/bin/clang++
 
@@ -59,7 +59,7 @@ RUN git clone https://gitlab.kitware.com/cmake/cmake.git CMake && \
     -DCMAKE_BUILD_TYPE:STRING=Release \
     -DCMAKE_USE_OPENSSL:BOOL=ON . && \
   make install && \
-  cd .. && rm -rf CMake*
+  cd .. && rm -rf CMake* && rm -rf /usr/src/CMake-build
 
 # Build and install Python from source.
 WORKDIR /usr/src
@@ -67,10 +67,10 @@ ENV PYTHON_VERSION 2.7.14
 RUN wget https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz && \
   tar xvzf Python-${PYTHON_VERSION}.tgz && \
   cd Python-${PYTHON_VERSION} && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make -j$(grep -c processor /proc/cpuinfo) && \
   make install && \
-  cd .. && rm -rf Python-${PYTHON_VERSION}*
+  cd .. && rm -rf Python-${PYTHON_VERSION}* && rm Python-${PYTHON_VERSION}.tgz
 
 # Build and install ninja from source.
 WORKDIR /usr/src