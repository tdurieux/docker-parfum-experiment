{
  "startTime": 1674251721250,
  "endTime": 1674251722222,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 23,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 8,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 8,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster-slim AS cuttlefish-android-builder\n\nENV container docker\nENV LC_ALL C\nENV DEBIAN_FRONTEND noninteractive\n\n# Set up the user have the same UID as user creating the container.  This is\n# important when we map the (container) user's home directory as a docker volume.\n\nARG UID\n\nUSER root\nWORKDIR /root\n\nRUN set -x\n\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y python python3 wget curl git build-essential libncurses5 libncurses5-dev zip subversion rsync && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nRUN mkdir /repo-bin && curl -f https://storage.googleapis.com/git-repo-downloads/repo > /repo-bin/repo\nRUN chmod a+x /repo-bin/repo\n\nENV PATH=$PATH:/repo-bin\n\nRUN apt-get install --no-install-recommends -y apt-utils sudo vim dpkg-dev devscripts gawk coreutils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y procps && rm -rf /var/lib/apt/lists/*;\nSHELL [\"/bin/bash\", \"-c\"]\nRUN if test $(uname -m) == aarch64; then \\\n\t\t\t\t\tdpkg --add-architecture amd64 \\\n\t    && apt-get update \\\n\t    && apt-get install --no-install-recommends -y libc6:amd64 \\\n\t    && apt-get install --no-install-recommends -y qemu qemu-user qemu-user-static binfmt-support; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\nRUN useradd -ms /bin/bash vsoc-01 -d /home/vsoc-01 -u $UID \\\n    && passwd -d vsoc-01 \\\n    && echo 'vsoc-01 ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n\nWORKDIR /home/vsoc-01\n\nRUN mkdir -p /home/vsoc-01/intrinsic_shells/bin\nCOPY ./common_intrinsic.sh /home/vsoc-01/intrinsic_shells/bin/\nCOPY ./run.sh /home/vsoc-01/intrinsic_shells/bin/\n\nRUN chmod +x /home/vsoc-01/intrinsic_shells/bin/*.sh\n\n# use sudo if root privilege is needed\nUSER vsoc-01\nVOLUME [ \"/home/vsoc-01\" ]\n"
}