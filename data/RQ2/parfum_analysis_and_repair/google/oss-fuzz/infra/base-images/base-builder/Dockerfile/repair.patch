diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/oss-fuzz/infra/base-images/base-builder/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/oss-fuzz/infra/base-images/base-builder/Dockerfile/repaired.Dockerfile
index 093e359..a64b8d8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/oss-fuzz/infra/base-images/base-builder/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/oss-fuzz/infra/base-images/base-builder/Dockerfile/repaired.Dockerfile
@@ -18,10 +18,10 @@ FROM gcr.io/oss-fuzz-base/base-clang
 
 RUN dpkg --add-architecture i386 && \
     apt-get update && \
-    apt-get install -y software-properties-common && \
+    apt-get install --no-install-recommends -y software-properties-common && \
     add-apt-repository ppa:git-core/ppa && \
     apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         binutils-dev \
         build-essential \
         curl \
@@ -32,7 +32,7 @@ RUN dpkg --add-architecture i386 && \
         patchelf \
         rsync \
         subversion \
-        zip
+        zip && rm -rf /var/lib/apt/lists/*;
 
 # Build and install latest Python 3 (3.8.3).
 ENV PYTHON_VERSION 3.8.3
@@ -48,19 +48,19 @@ RUN export PYTHON_DEPS="\
         libbz2-dev \
         liblzma-dev" && \
     unset CFLAGS CXXFLAGS && \
-    apt-get install -y $PYTHON_DEPS && \
+    apt-get install --no-install-recommends -y $PYTHON_DEPS && \
     cd /tmp && \
-    curl -O https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz && \
+    curl -f -O https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tar.xz && \
     tar -xvf Python-$PYTHON_VERSION.tar.xz && \
     cd Python-$PYTHON_VERSION && \
-    ./configure --enable-optimizations --enable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations --enable-shared && \
     make -j install && \
     ldconfig && \
     ln -s /usr/bin/python3 /usr/bin/python && \
     cd .. && \
     rm -r /tmp/Python-$PYTHON_VERSION.tar.xz /tmp/Python-$PYTHON_VERSION && \
     rm -rf /usr/local/lib/python3.8/test && \
-    apt-get remove -y $PYTHON_DEPS # https://github.com/google/oss-fuzz/issues/3888
+    apt-get remove -y $PYTHON_DEPS && rm -rf /var/lib/apt/lists/*; # https://github.com/google/oss-fuzz/issues/3888
 
 # Install six for Bazel rules.
 RUN unset CFLAGS CXXFLAGS && pip3 install -v --no-cache-dir \
@@ -68,7 +68,7 @@ RUN unset CFLAGS CXXFLAGS && pip3 install -v --no-cache-dir \
 
 # Install Bazel through Bazelisk, which automatically fetches the latest Bazel version.
 ENV BAZELISK_VERSION 1.9.0
-RUN curl -L https://github.com/bazelbuild/bazelisk/releases/download/v$BAZELISK_VERSION/bazelisk-linux-amd64 -o /usr/local/bin/bazel && \
+RUN curl -f -L https://github.com/bazelbuild/bazelisk/releases/download/v$BAZELISK_VERSION/bazelisk-linux-amd64 -o /usr/local/bin/bazel && \
     chmod +x /usr/local/bin/bazel
 
 # Default build flags for various sanitizers.
@@ -127,7 +127,7 @@ RUN git clone https://github.com/AFLplusplus/AFLplusplus.git aflplusplus && \
     chmod 755 oss.sh
 
 RUN cd $SRC && \
-    curl -L -O https://github.com/google/honggfuzz/archive/oss-fuzz.tar.gz && \
+    curl -f -L -O https://github.com/google/honggfuzz/archive/oss-fuzz.tar.gz && \
     mkdir honggfuzz && \
     cd honggfuzz && \
     tar -xzv --strip-components=1 -f $SRC/oss-fuzz.tar.gz && \