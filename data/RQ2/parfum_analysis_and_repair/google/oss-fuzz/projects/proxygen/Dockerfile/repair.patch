diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/oss-fuzz/projects/proxygen/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/oss-fuzz/projects/proxygen/Dockerfile/repaired.Dockerfile
index 859b60c..58ac17d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/oss-fuzz/projects/proxygen/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/oss-fuzz/projects/proxygen/Dockerfile/repaired.Dockerfile
@@ -18,7 +18,7 @@ FROM gcr.io/oss-fuzz-base/base-builder
 
 # Install packages we need to build dependencies
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
     make \
     autoconf \
     automake \
@@ -30,7 +30,7 @@ RUN apt-get update && \
     python \
     python-dev \
     cmake \
-    ninja-build
+    ninja-build && rm -rf /var/lib/apt/lists/*;
 
 # Install and build boost from source so we can have it use libc++
 RUN wget https://sourceforge.net/projects/boost/files/boost/1.70.0/boost_1_70_0.tar.gz && \
@@ -40,7 +40,7 @@ RUN wget https://sourceforge.net/projects/boost/files/boost/1.70.0/boost_1_70_0.
     ./b2 clean && \
     ./b2 toolset=clang cxxflags="-stdlib=libc++" linkflags="-stdlib=libc++" -j$(nproc) install && \
     cd .. && \
-    rm -rf boost_1_70_0
+    rm -rf boost_1_70_0 && rm boost_1_70_0.tar.gz
 
 # Build gflags/glog/gtest from source so we use libc++ and avoid incompatibilities with the std::string ABI breaking changes
 RUN sudo apt-get purge libgflags-dev
@@ -57,7 +57,7 @@ RUN wget https://github.com/gflags/gflags/archive/v2.2.2.tar.gz && \
     make -j$(nproc) && \
     sudo make install && \
     cd ../../ && \
-    rm -rf gflags-2.2.2
+    rm -rf gflags-2.2.2 && rm v2.2.2.tar.gz
 
 RUN wget https://github.com/google/glog/archive/v0.4.0.tar.gz && \
     tar xzf v0.4.0.tar.gz && \
@@ -71,7 +71,7 @@ RUN wget https://github.com/google/glog/archive/v0.4.0.tar.gz && \
     make -j$(nproc) && \
     sudo make install && \
     cd ../.. && \
-    rm -rf glog-0.4.0
+    rm -rf glog-0.4.0 && rm v0.4.0.tar.gz
 
 RUN wget https://github.com/google/googletest/archive/release-1.8.1.tar.gz && \
     tar xzf release-1.8.1.tar.gz && \
@@ -85,7 +85,7 @@ RUN wget https://github.com/google/googletest/archive/release-1.8.1.tar.gz && \
     make -j$(nproc) && \
     sudo make install && \
     cd ../.. && \
-    rm -rf googletest-release-1.8.1
+    rm -rf googletest-release-1.8.1 && rm release-1.8.1.tar.gz
 
 # Build and install zstd from source so we have it available for proxygen
 RUN wget https://github.com/facebook/zstd/releases/download/v1.4.2/zstd-1.4.2.tar.gz && \
@@ -96,7 +96,7 @@ RUN wget https://github.com/facebook/zstd/releases/download/v1.4.2/zstd-1.4.2.ta
     export CXXFLAGS="-stdlib=libc++" && \
     sudo make -j$(nproc) install && \
     cd .. && \
-    rm -rf zstd-1.4.2
+    rm -rf zstd-1.4.2 && rm zstd-1.4.2.tar.gz
 
 # Get double conversion
 RUN git clone --single-branch https://github.com/google/double-conversion.git double-conversion && \
@@ -118,10 +118,10 @@ RUN wget https://github.com/fmtlib/fmt/archive/6.0.0.tar.gz && \
     make -j$(nproc) && \
     sudo make install && \
     cd ../.. && \
-    rm -rf fmt-6.0.0
-    
+    rm -rf fmt-6.0.0 && rm 6.0.0.tar.gz
+
 # Build and install `gperf` (>= 3.1)
-RUN wget http://ftp.gnu.org/pub/gnu/gperf/gperf-3.1.tar.gz && \
+RUN wget https://ftp.gnu.org/pub/gnu/gperf/gperf-3.1.tar.gz && \
     rm -rf gperf-3.1 | true && \
     tar xzvf gperf-3.1.tar.gz && \
     cd gperf-3.1 && \
@@ -130,16 +130,16 @@ RUN wget http://ftp.gnu.org/pub/gnu/gperf/gperf-3.1.tar.gz && \
     export CXXFLAGS="" && \
     export CFLAGS_TMP="$CFLAGS" && \
     unset CFLAGS && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j1 V=s && \
     sudo make install && \
     export CFLAGS="$CFLAGS_TMP" && \
     unset CFLAGS_TMP && \
     cd .. && \
-    rm -rf gperf-3.1
+    rm -rf gperf-3.1 && rm gperf-3.1.tar.gz
 
 # Replicate `install-dependencies` from the proxygen `build.sh` script
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
     git \
     flex \
     bison \
@@ -158,10 +158,10 @@ RUN apt-get install -y \
     zlib1g-dev \
     binutils-dev \
     libsodium-dev \
-    libunwind8-dev
+    libunwind8-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install patchelf so we can fix path to libunwind
-RUN apt-get install patchelf
+RUN apt-get install -y --no-install-recommends patchelf && rm -rf /var/lib/apt/lists/*;
 
 # Fetch source and copy over files
 RUN git clone --depth 1 https://github.com/facebook/proxygen.git proxygen