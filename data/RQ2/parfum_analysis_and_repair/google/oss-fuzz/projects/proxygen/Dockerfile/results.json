{
  "startTime": 1674250967578,
  "endTime": 1674250969599,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 141,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 141,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 141,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 141,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2019 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io/oss-fuzz-base/base-builder\n\n# Install packages we need to build dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    make \\\n    autoconf \\\n    automake \\\n    libtool \\\n    sudo \\\n    wget \\\n    gcc \\\n    g++ \\\n    python \\\n    python-dev \\\n    cmake \\\n    ninja-build && rm -rf /var/lib/apt/lists/*;\n\n# Install and build boost from source so we can have it use libc++\nRUN wget https://sourceforge.net/projects/boost/files/boost/1.70.0/boost_1_70_0.tar.gz && \\\n    tar xzf boost_1_70_0.tar.gz && \\\n    cd boost_1_70_0 && \\\n    ./bootstrap.sh --with-toolset=clang && \\\n    ./b2 clean && \\\n    ./b2 toolset=clang cxxflags=\"-stdlib=libc++\" linkflags=\"-stdlib=libc++\" -j$(nproc) install && \\\n    cd .. && \\\n    rm -rf boost_1_70_0 && rm boost_1_70_0.tar.gz\n\n# Build gflags/glog/gtest from source so we use libc++ and avoid incompatibilities with the std::string ABI breaking changes\nRUN sudo apt-get purge libgflags-dev\n\nRUN wget https://github.com/gflags/gflags/archive/v2.2.2.tar.gz && \\\n    tar xzf v2.2.2.tar.gz && \\\n    cd gflags-2.2.2 && \\\n    mkdir build && \\\n    cd build && \\\n    export CC=clang && \\\n    export CXX=clang++ && \\\n    export CXXFLAGS=\"-stdlib=libc++\" && \\\n    cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON .. && \\\n    make -j$(nproc) && \\\n    sudo make install && \\\n    cd ../../ && \\\n    rm -rf gflags-2.2.2 && rm v2.2.2.tar.gz\n\nRUN wget https://github.com/google/glog/archive/v0.4.0.tar.gz && \\\n    tar xzf v0.4.0.tar.gz && \\\n    cd glog-0.4.0 && \\\n    export CC=clang && \\\n    export CXX=clang++ && \\\n    export CXXFLAGS=\"-stdlib=libc++\" && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_VERBOSE_MAKEFILE=ON .. && \\\n    make -j$(nproc) && \\\n    sudo make install && \\\n    cd ../.. && \\\n    rm -rf glog-0.4.0 && rm v0.4.0.tar.gz\n\nRUN wget https://github.com/google/googletest/archive/release-1.8.1.tar.gz && \\\n    tar xzf release-1.8.1.tar.gz && \\\n    cd googletest-release-1.8.1 && \\\n    export CC=clang && \\\n    export CXX=clang++ && \\\n    export CXXFLAGS=\"-stdlib=libc++\" && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_VERBOSE_MAKEFILE=ON .. && \\\n    make -j$(nproc) && \\\n    sudo make install && \\\n    cd ../.. && \\\n    rm -rf googletest-release-1.8.1 && rm release-1.8.1.tar.gz\n\n# Build and install zstd from source so we have it available for proxygen\nRUN wget https://github.com/facebook/zstd/releases/download/v1.4.2/zstd-1.4.2.tar.gz && \\\n    tar xzf zstd-1.4.2.tar.gz && \\\n    cd zstd-1.4.2 && \\\n    export CC=clang && \\\n    export CXX=clang++ && \\\n    export CXXFLAGS=\"-stdlib=libc++\" && \\\n    sudo make -j$(nproc) install && \\\n    cd .. && \\\n    rm -rf zstd-1.4.2 && rm zstd-1.4.2.tar.gz\n\n# Get double conversion\nRUN git clone --single-branch https://github.com/google/double-conversion.git double-conversion && \\\n    cd double-conversion/double-conversion && \\\n    cmake -GNinja ../ && \\\n    ninja && \\\n    ninja install\n\n# Build and install `fmt` needed by folly\nRUN wget https://github.com/fmtlib/fmt/archive/6.0.0.tar.gz && \\\n    tar xzf 6.0.0.tar.gz && \\\n    cd fmt-6.0.0 && \\\n    export CC=clang && \\\n    export CXX=clang++ && \\\n    export CXXFLAGS=\"-stdlib=libc++\" && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make -j$(nproc) && \\\n    sudo make install && \\\n    cd ../.. && \\\n    rm -rf fmt-6.0.0 && rm 6.0.0.tar.gz\n\n# Build and install `gperf` (>= 3.1)\nRUN wget https://ftp.gnu.org/pub/gnu/gperf/gperf-3.1.tar.gz && \\\n    rm -rf gperf-3.1 | true && \\\n    tar xzvf gperf-3.1.tar.gz && \\\n    cd gperf-3.1 && \\\n    export CC=gcc && \\\n    export CXX=g++ && \\\n    export CXXFLAGS=\"\" && \\\n    export CFLAGS_TMP=\"$CFLAGS\" && \\\n    unset CFLAGS && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j1 V=s && \\\n    sudo make install && \\\n    export CFLAGS=\"$CFLAGS_TMP\" && \\\n    unset CFLAGS_TMP && \\\n    cd .. && \\\n    rm -rf gperf-3.1 && rm gperf-3.1.tar.gz\n\n# Replicate `install-dependencies` from the proxygen `build.sh` script\nRUN apt-get install --no-install-recommends -y \\\n    git \\\n    flex \\\n    bison \\\n    libkrb5-dev \\\n    libsasl2-dev \\\n    libnuma-dev \\\n    pkg-config \\\n    libssl-dev \\\n    libcap-dev \\\n    libevent-dev \\\n    libtool \\\n    libjemalloc-dev \\\n    unzip \\\n    libiberty-dev \\\n    liblzma-dev \\\n    zlib1g-dev \\\n    binutils-dev \\\n    libsodium-dev \\\n    libunwind8-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install patchelf so we can fix path to libunwind\nRUN apt-get install -y --no-install-recommends patchelf && rm -rf /var/lib/apt/lists/*;\n\n# Fetch source and copy over files\nRUN git clone --depth 1 https://github.com/facebook/proxygen.git proxygen\nWORKDIR proxygen\nCOPY build.sh $SRC/\n"
}