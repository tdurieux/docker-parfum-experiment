{
  "startTime": 1674252942727,
  "endTime": 1674252943966,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n################################################################################\n\nFROM gcr.io/oss-fuzz-base/base-builder-rust\nRUN apt-get update && apt-get install --no-install-recommends -y make autoconf automake libtool curl \\\n  cmake python llvm-dev libclang-dev clang \\\n  libgmp-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install a newer version of OCaml than provided by Ubuntu 16.04 (base version for this image)\nRUN curl -f -sL https://raw.githubusercontent.com/ocaml/opam/master/shell/install.sh -o install.sh && \\\n  echo | sh install.sh && \\\n  opam init --disable-sandboxing --yes --compiler=4.11.2 && \\\n  opam install ocamlbuild ocamlfind --yes && \\\n  CFLAGS= opam install zarith --yes\n\nRUN git clone --depth 1 https://github.com/bytecodealliance/wasm-tools wasm-tools\n\nRUN git clone --depth 1 https://github.com/bytecodealliance/regalloc2 regalloc2\n\nRUN git clone --depth 1 https://github.com/bytecodealliance/wasmtime wasmtime\nWORKDIR wasmtime\n#RUN git submodule update --init --recursive\n\n#RUN git clone --depth 1 https://github.com/bytecodealliance/wasmtime-libfuzzer-corpus wasmtime-libfuzzer-corpus\n\nCOPY build.sh *.options $SRC/\n"
}