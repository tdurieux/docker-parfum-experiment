{
  "startTime": 1674254853120,
  "endTime": 1674254853683,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 The Chromium OS Authors. All rights reserved.\n# Use of this source code is governed by a BSD-style license that can be\n# found in the LICENSE file.\nARG RUST_VERSION\nFROM docker.io/rust:${RUST_VERSION}-slim-bullseye\n\n# Use a dedicated target directory so we do not write into the source directory.\nRUN mkdir -p /scratch/cargo_target\nENV CARGO_TARGET_DIR=/scratch/cargo_target\n\n# Prevent the container from writing root-owned __pycache__ files into the src.\nENV PYTHONDONTWRITEBYTECODE=1\n\n# Add foreign architectures for cross-compilation.\nRUN dpkg --add-architecture arm64 \\\n    && dpkg --add-architecture armhf\n\n# Install dependencies for native builds.\nCOPY tools/install-deps /tools/\nCOPY tools/install-docs-deps /tools/\nRUN apt-get update \\\n    && apt-get install --no-install-recommends --yes sudo \\\n    && /tools/install-deps \\\n    # Clear apt cache to save space in layer.\n    && rm -rf /var/lib/apt/lists/* \\\n    # Delete build artifacts from 'cargo install' to save space in layer.\n    && rm -rf /scratch/cargo_target/*\n\n# Prepare wine64\nRUN ln -sf /usr/bin/wine64-stable /usr/bin/wine64 \\\n    && wine64 wineboot\n\n# Install cross-compilation dependencies.\nCOPY tools/install-aarch64-deps tools/install-armhf-deps /tools/\n\nRUN apt-get update \\\n    && /tools/install-aarch64-deps \\\n    && /tools/install-armhf-deps \\\n    # Clear apt cache to save space in layer.\n    && rm -rf /var/lib/apt/lists/*\n\n# Prebuild aarch64 VM image for faster startup.\nCOPY tools/aarch64vm /tools/\nCOPY /tools/impl/testvm.py /tools/impl/\nCOPY /tools/impl/testvm/version /tools/impl/testvm/\nRUN /tools/aarch64vm build\n\n# Cache CARGO_HOME between container runs in CI.\nVOLUME /cache\nENV CARGO_HOME=/cache/cargo_home\n\nVOLUME /workspace\nWORKDIR /workspace\n"
}