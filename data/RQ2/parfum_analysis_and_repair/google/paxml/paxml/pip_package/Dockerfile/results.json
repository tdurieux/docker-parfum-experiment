{
  "startTime": 1674219687696,
  "endTime": 1674219689481,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 21,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 18,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG cpu_base_image=\"ubuntu:20.04\"\nARG base_image=$cpu_base_image\nFROM $base_image\n\nLABEL maintainer=\"Pax team <pax-dev@google.com>\"\n\n# Re-declare args because the args declared before FROM can't be used in any\n# instruction after a FROM.\nARG cpu_base_image=\"ubuntu:20.04\"\nARG base_image=$cpu_base_image\n\n# Pick up some TF dependencies\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends \\\n        aria2 \\\n        build-essential \\\n        curl \\\n        dirmngr \\\n        emacs \\\n        git \\\n        gpg-agent \\\n        less \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libpng-dev \\\n        libzmq3-dev \\\n        lsof \\\n        pkg-config \\\n        rename \\\n        rsync \\\n        python-dev \\\n        python3-distutils \\\n        sox \\\n        unzip \\\n        vim \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install python 3.8\nRUN add-apt-repository ppa:deadsnakes/ppa && \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n    python3.8 python3.8-dev python3-pip python3.8-venv && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    python3.8 -m pip install pip --upgrade && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0\n\n# Make python3.8 the default python version\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0\n\n\nARG bazel_version=5.1.1\n# This is to install bazel, for development purposes.\nENV BAZEL_VERSION ${bazel_version}\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\nRUN git clone https://github.com/google/paxml.git\nRUN git clone https://github.com/google/praxis.git\n\nRUN mv praxis/praxis /paxml/\n\nRUN pip3 install --no-cache-dir paxml/paxml/pip_package\nRUN pip3 install --no-cache-dir paxml/praxis/pip_package\n\nRUN git clone https://github.com/google/flaxformer.git\nRUN cd flaxformer && pip3 install --no-cache-dir .\n\nRUN cd paxml && bazel build paxml/tasks/lm/params:main\n\nRUN pip install --no-cache-dir jax[tpu] -f https://storage.googleapis.com/jax-releases/libtpu_releases.html\nRUN pip3 install --no-cache-dir fiddle-config tensorstore\nRUN pip3 uninstall -y seqio seqio-nightly\n# Need tensor2tensor explicitly because seqio implicitly dep on tensor2tensor.\nRUN pip3 install --no-cache-dir -U seqio-nightly tensor2tensor\n\nWORKDIR \"/paxml\"\n\nCMD [\"/bin/bash\"]\n"
}