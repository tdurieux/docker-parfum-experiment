{
  "startTime": 1674250888624,
  "endTime": 1674250889974,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 26,
        "columnEnd": 67
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# This docker image has language-resources and festival.\nFROM langtech/base-festival:v1\n\n# Nodejs version to install\nENV NODEJS_VERSION=\"v8.9.3\"\n\n# Install Nodejs\nWORKDIR /opt/\nRUN wget https://storage.googleapis.com/gae_node_packages/node-${NODEJS_VERSION}-linux-x64.tar.gz \\\n      && tar -xf node-${NODEJS_VERSION}-linux-x64.tar.gz \\\n      && rm node-${NODEJS_VERSION}-linux-x64.tar.gz\n\nENV PATH $PATH:/opt/node-${NODEJS_VERSION}-linux-x64/bin\nENV NODE_ENV production\n\n# Install yarn\nRUN mkdir -p /opt/yarn && curl -f -L https://yarnpkg.com/latest.tar.gz | tar xvzf - -C /opt/yarn --strip-components=1\nENV PATH $PATH:/opt/yarn/bin\n\n# Create app directory\nWORKDIR /app\n\n# Install necessary modules\nCOPY package.json /app\n# You have to specify \"--unsafe-perm\" with npm install\n# when running as root.  Failing to do this can cause\n# install to appear to succeed even if a preinstall\n# script fails, and may have other adverse consequences\n# as well.\n# This command will also cat the npm-debug.log file after the\n# build, if it exists.\nRUN yarn --unsafe-perm || \\\n  ((if [ -f npm-debug.log ]; then \\\n      cat npm-debug.log; \\\n    fi) && false)\nCOPY . /app\n\n# This application will work only in GCP platform because it requires Application Credentials Default (ADC)\n# Please refer to https://cloud.google.com/docs/authentication/production\n#\n# To make it work for another platform (e.g. local docker run),\n# You can get a new application default credential:\n# 1. In Pantheon, go to the service account page, looks for \"App Engine app default service account\"\n# 2. Click create and download the credentials in JSON format.\n# 3. Name it \"credentials.json\" and put in the same folder with this Dockerfile.\n# 4. Uncomment following commands and rebuild the image to include credentials file in your docker image.\n# RUN mkdir -p /etc/google/auth\n# COPY credentials.json /etc/google/auth/application_default_credentials.json\n# ENV GOOGLE_APPLICATION_CREDENTIALS /etc/google/auth/application_default_credentials.json\n\nENV PORT 80\nENV NODE_ENV production\nEXPOSE 80\n\nCMD node server.js\n"
}