{
  "startTime": 1674248745265,
  "endTime": 1674248745989,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 36,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official Docker Hub Ubuntu 20.04 base image\nFROM ubuntu:20.04\n\nARG PPA_TRACK=stable\n\n# Prevent needing to configure debian packages, stopping the setup of\n# the docker container.\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  software-properties-common \\\n  python3-pip \\\n  python3-wheel \\\n  python3-setuptools \\\n  python3-psycopg2 \\\n  git \\\n  wget \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Plaso\nRUN add-apt-repository -y ppa:gift/$PPA_TRACK\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  plaso-tools \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Timesketch from master to get the latest code\n#RUN wget https://raw.githubusercontent.com/google/timesketch/master/requirements.txt\n#RUN pip3 install -r requirements.txt\n\n# Install timesketch from the current branch (In the context of CI platform)\nADD . /tmp/timesketch\nRUN pip3 install --no-cache-dir -r /tmp/timesketch/requirements.txt\nRUN pip3 install --no-cache-dir /tmp/timesketch && pip3 install --no-cache-dir /tmp/timesketch/api_client/python && \\\n  pip3 install --no-cache-dir /tmp/timesketch/importer_client/python\n\n# Copy Timesketch config files into /etc/timesketch\nRUN mkdir /etc/timesketch\nRUN cp /tmp/timesketch/data/timesketch.conf /etc/timesketch/\nRUN cp /tmp/timesketch/data/ontology.yaml /etc/timesketch/\nRUN cp /tmp/timesketch/data/tags.yaml /etc/timesketch/\nRUN cp /tmp/timesketch/data/intelligence_tag_metadata.yaml /etc/timesketch/\nRUN cp /tmp/timesketch/data/features.yaml /etc/timesketch/\nRUN cp /tmp/timesketch/data/plaso.mappings /etc/timesketch/\nRUN cp /tmp/timesketch/data/generic.mappings /etc/timesketch/\nRUN cp /tmp/timesketch/data/sigma_config.yaml /etc/timesketch/\nRUN cp /tmp/timesketch/data/sigma_rule_status.csv /etc/timesketch/\nRUN cp /tmp/timesketch/data/data_finder.yaml /etc/timesketch/\nRUN cp /tmp/timesketch/data/bigquery_matcher.yaml /etc/timesketch/\nRUN cp -r /tmp/timesketch/data/sigma /etc/timesketch/sigma\nRUN chmod -R go+r /etc/timesketch\n\n# Copy the entrypoint script into the container\nCOPY docker/e2e/docker-entrypoint.sh /\nRUN chmod a+x /docker-entrypoint.sh\n\n# Load the entrypoint script to be run later\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\n# Invoke the entrypoint script\nCMD [\"timesketch\"]\n"
}