{
  "startTime": 1674218515670,
  "endTime": 1674218516535,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official Docker Hub Ubuntu 20.04 base image\nFROM ubuntu:20.04\n\nARG PPA_TRACK=stable\n\n# Prevent needing to configure debian packages, stopping the setup of\n# the docker container.\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    software-properties-common \\\n    apt-transport-https \\\n    apt-utils \\\n    ca-certificates \\\n    curl \\\n    git \\\n    gpg-agent \\\n    python3-dev \\\n    python3-pip \\\n    python3-wheel \\\n    python3-setuptools \\\n    python3-psycopg2 \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Plaso\nRUN add-apt-repository -y ppa:gift/$PPA_TRACK\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    plaso-tools \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install NodeJS for frontend development\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x -o nodesource_setup.sh\nRUN bash nodesource_setup.sh\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    nodejs \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install Yarn for frontend development\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    yarn \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install test dependencies for Timesketch\nCOPY ./requirements.txt /timesketch-requirements.txt\nRUN pip3 install --no-cache-dir -r /timesketch-requirements.txt\n\n# Install test dependencies for Timesketch\nCOPY ./test_requirements.txt /timesketch-test-requirements.txt\nRUN pip3 install --no-cache-dir -r /timesketch-test-requirements.txt\n\n# Copy the entrypoint script into the container\nCOPY ./docker/dev/build/docker-entrypoint.sh /\nRUN chmod a+x /docker-entrypoint.sh\n\n# Load the entrypoint script to be run later\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}