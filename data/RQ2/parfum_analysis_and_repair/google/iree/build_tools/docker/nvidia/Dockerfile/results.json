{
  "startTime": 1674252536966,
  "endTime": 1674252537411,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2020 The IREE Authors\n#\n# Licensed under the Apache License v2.0 with LLVM Exceptions.\n# See https://llvm.org/LICENSE.txt for license information.\n# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n\n# An image for building IREE using CMake and testing IREE with NVIDIA GPUs.\n\n# To use the host GPUs, `docker run` must be called with the `--gpus all` flag.\n\n# We use .deb files that we host because we have to pin the version exactly to\n# match the host machine and packages routinely dissapear from the Ubuntu\n# apt repositories.\nARG NVIDIA_GL_DEB=\"libnvidia-gl-460_460.39-0ubuntu0.18.04.1_amd64.deb\"\nARG NVIDIA_COMPUTE_DEB=\"libnvidia-compute-460_460.39-0ubuntu0.18.04.1_amd64.deb\"\nARG NVIDIA_COMMON_DEB=\"libnvidia-common-460_460.39-0ubuntu0.18.04.1_all.deb\"\n\n\nFROM gcr.io/iree-oss/base@sha256:9d742e01507c292def852cbfebfae71412cff94df0ab2619f61f9a5a2a98f651 AS fetch-nvidia\nARG NVIDIA_COMMON_DEB\nARG NVIDIA_GL_DEB\nARG NVIDIA_COMPUTE_DEB\n\nWORKDIR /fetch-nvidia\nRUN wget -q \"https://storage.googleapis.com/iree-shared-files/${NVIDIA_COMMON_DEB}\"\nRUN wget -q \"https://storage.googleapis.com/iree-shared-files/${NVIDIA_GL_DEB?}\"\nRUN wget -q \"https://storage.googleapis.com/iree-shared-files/${NVIDIA_COMPUTE_DEB}\"\n\n\n# Set up the image and working directory by inheriting the vulkan CMake\n# configuration.\n# Note that we don't start from NVIDIA's docker base:\n# - nvidia/cuda (https://hub.docker.com/r/nvidia/cuda):\n#     it's.. for CUDA.\n# - nvidia/vulkan (https://hub.docker.com/r/nvidia/vulkan):\n#      does not support Ubuntu 18.04.\n# This allows to share configuration with base CMake, but it also means we need\n# to MATCH the driver version between the host machine and the docker image.\nFROM gcr.io/iree-oss/base@sha256:9d742e01507c292def852cbfebfae71412cff94df0ab2619f61f9a5a2a98f651 AS final\nARG NVIDIA_COMMON_DEB\nARG NVIDIA_GL_DEB\nARG NVIDIA_COMPUTE_DEB\n\nCOPY --from=fetch-nvidia \\\n  \"/fetch-nvidia/${NVIDIA_COMMON_DEB}\" \\\n  \"/fetch-nvidia/${NVIDIA_GL_DEB}\" \\\n  \"/fetch-nvidia/${NVIDIA_COMPUTE_DEB}\" \\\n  /tmp/\n\nRUN apt-get install -y --no-install-recommends \"/tmp/${NVIDIA_COMMON_DEB?}\" \\\n  \"/tmp/${NVIDIA_GL_DEB?}\" \\\n  \"/tmp/${NVIDIA_COMPUTE_DEB?}\" && rm -rf /var/lib/apt/lists/*;\n\n# install cuda sdk\nRUN wget https://developer.download.nvidia.com/compute/cuda/11.6.0/local_installers/cuda-repo-debian11-11-6-local_11.6.0-510.39.01-1_amd64.deb \\\n  && dpkg --install cuda-repo-debian11-11-6-local_11.6.0-510.39.01-1_amd64.deb \\\n  && apt-key add /var/cuda-repo-debian11-11-6-local/7fa2af80.pub \\\n  && apt-get update \\\n  && apt-get -y --no-install-recommends install cuda-toolkit-11-6 && rm -rf /var/lib/apt/lists/*;\n"
}