{
  "startTime": 1674255966511,
  "endTime": 1674255967112,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 The MediaPipe Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:20.04\n\nMAINTAINER <mediapipe@google.com>\n\nWORKDIR /io\nWORKDIR /mediapipe\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        gcc-8 g++-8 \\\n        ca-certificates \\\n        curl \\\n        ffmpeg \\\n        git \\\n        wget \\\n        unzip \\\n        python3-dev \\\n        python3-opencv \\\n        python3-pip \\\n        libopencv-core-dev \\\n        libopencv-highgui-dev \\\n        libopencv-imgproc-dev \\\n        libopencv-video-dev \\\n        libopencv-calib3d-dev \\\n        libopencv-features2d-dev \\\n        software-properties-common && \\\n    add-apt-repository -y ppa:openjdk-r/ppa && \\\n    apt-get update && apt-get install --no-install-recommends -y openjdk-8-jdk && \\\n    apt-get install --no-install-recommends -y mesa-common-dev libegl1-mesa-dev libgles2-mesa-dev && \\\n    apt-get install --no-install-recommends -y mesa-utils && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 100 --slave /usr/bin/g++ g++ /usr/bin/g++-8\nRUN pip3 install --no-cache-dir --upgrade setuptools\nRUN pip3 install --no-cache-dir wheel\nRUN pip3 install --no-cache-dir future\nRUN pip3 install --no-cache-dir six==1.14.0\nRUN pip3 install --no-cache-dir tensorflow==2.2.0\nRUN pip3 install --no-cache-dir tf_slim\n\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# Install bazel\nARG BAZEL_VERSION=5.2.0\nRUN mkdir /bazel && \\\n    wget --no-check-certificate -O /bazel/installer.sh \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/b\\\nazel-${BAZEL_VERSION}-installer-linux-x86_64.sh\" && \\\n    wget --no-check-certificate -O  /bazel/LICENSE.txt \"https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE\" && \\\n    chmod +x /bazel/installer.sh && \\\n    /bazel/installer.sh  && \\\n    rm -f /bazel/installer.sh\n\nCOPY . /mediapipe/\n\n# If we want the docker image to contain the pre-built object_detection_offline_demo binary, do the following\n# RUN bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 mediapipe/examples/desktop/demo:object_detection_tensorflow_demo\n"
}