{
  "startTime": 1674217053133,
  "endTime": 1674217054963,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 16,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    apt-transport-https \\\n    apt-utils \\\n    ca-certificates \\\n    git \\\n    libterm-readline-gnu-perl \\\n    python3-pip \\\n    software-properties-common \\\n    sudo \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir pip --upgrade\nRUN pip3 install --no-cache-dir urllib3 cryptography requests --upgrade\n\nADD requirements.txt /tmp/\nRUN cd /tmp/ && pip3 install --no-cache-dir -r requirements.txt\n\nADD . /tmp/\n# unshallow and fetch all tags so our build systems pickup the correct git tag if it's a shallow clone\nRUN if $(cd /tmp/ && git rev-parse --is-shallow-repository); then cd /tmp/ && git fetch --prune --unshallow && git fetch --depth=1 origin +refs/tags/*:refs/tags/*; fi\n\nRUN cd /tmp/ && python3 setup.py install\n\nRUN useradd -r -s /bin/nologin -G disk turbinia\n\nRUN mkdir /etc/turbinia && mkdir -p /mnt/turbinia/ && mkdir -p /var/lib/turbinia/ \\\n    && mkdir -p /var/log/turbinia/ && chown -R turbinia:turbinia /mnt/turbinia/ \\\n    && mkdir -p /etc/turbinia/ \\\n    && chown -R turbinia:turbinia /var/lib/turbinia/ \\\n    && chown -R turbinia:turbinia /etc/turbinia/ \\\n    && chown -R turbinia:turbinia /var/log/turbinia/\n\nCOPY docker/server/start.sh /home/turbinia/start.sh\nRUN chmod +rwx /home/turbinia/start.sh\nUSER turbinia\nCMD [\"/home/turbinia/start.sh\"]\n# Expose Prometheus endpoint.\nEXPOSE 8000/tcp\n"
}