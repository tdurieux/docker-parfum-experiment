{
  "startTime": 1674251628082,
  "endTime": 1674251628650,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 3,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 3,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 3,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# We take the latest Turbinia worker release as a base image to make sure dependencies are already installed\nFROM us-docker.pkg.dev/osdfir-registry/turbinia/release/turbinia-worker-dev:latest\n\nUSER root\n\n# Cleanup installed turbinia from base image\nRUN pip uninstall -y turbinia\nRUN rm /usr/local/bin/turbiniactl\n\n# Create /evidence and /tmp/turbinia-mounts folders (used in local stack configuration)\nRUN mkdir /evidence && chmod 777 /evidence\nRUN mkdir -p /tmp/turbinia-mounts && chmod 777 /tmp/turbinia-mounts\n\n# Install pylint, yapf and test tools\nRUN pip install --no-cache-dir pylint yapf\nRUN pip install --no-cache-dir mock nose coverage tox\n\n# Install redis server\nRUN apt-get -y --no-install-recommends install redis-server curl vim && rm -rf /var/lib/apt/lists/*;\n# disable IPv6 in redis configuration\nRUN sed -i \"s/bind .*/bind 127.0.0.1/g\" /etc/redis/redis.conf\n\n# Install Google Cloud SDK\nRUN echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n&& curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - \\\n&& apt-get update -y \\\n&& apt-get install --no-install-recommends google-cloud-sdk -y && rm -rf /var/lib/apt/lists/*;\n\n# Insert dummy command to override base image CMD\nCMD [\"/usr/bin/ps\"]\n"
}