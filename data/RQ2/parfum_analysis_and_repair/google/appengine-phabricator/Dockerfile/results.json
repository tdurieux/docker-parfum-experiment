{
  "startTime": 1674246229550,
  "endTime": 1674246231324,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 2,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 2,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 144,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2015 Google Inc. All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\nFROM debian:jessie\n\n# Install the dependencies.\nRUN apt-get update && apt-get upgrade -y && \\\n  apt-get install -y -qq --no-install-recommends \\\n# Install MySQL\n  mysql-client libmysqlclient-dev \\\n# Install Apache\n  apache2 \\\n# Install php\n  php5 libapache2-mod-php5 php5-mcrypt php5-mysql php5-gd php5-dev \\\n  php5-curl php-apc php5-cli php5-json php5-cgi \\\n# Install Git\n  git \\\n# Curl for reading from the metadata server\n  curl \\\n# Supervisor\n  supervisor \\\n# Python pip for Pygment\n  python-pip \\\n# Mercurial to support hosted hg repos\n  mercurial && \\\n  apt-get clean && \\\n  pip install --no-cache-dir Pygments && rm -rf /var/lib/apt/lists/*;\n\n# Setup Apache and Supervisord\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nRUN mkdir -p /var/log/supervisor && \\\n# Enable mod rewrite for Phabricator\n  a2enmod rewrite && \\\n# Switch Apache to listen to port 8080\n  sed -i -e 's/80/8080/' /etc/apache2/ports.conf && \\\n# Disable the default virtual host bundled with Apache.\n  rm -f /etc/apache2/sites-enabled/000-default && \\\n# Disable apc.stat as per the Phabricator recommendations.\n  echo \"apc.stat = 0\" >> /etc/php5/apache2/php.ini && \\\n# Disable apc.slam_defense as per the Phabricator recommendations.\n  echo \"apc.slam_defense = 0\" >> /etc/php5/apache2/php.ini && \\\n# Configure OPcache to never revalidate code as per the Phabricator recommendations.\n  echo \"opcache.validate_timestamps = 0\" >> /etc/php5/apache2/php.ini && \\\n# Increase the max post size to 32M as per the Phabricator recommendations.\n  sed -i -e \"s/post_max_size = 8M/post_max_size = 32M/\" /etc/php5/apache2/php.ini && \\\n  ulimit -c 10000\n\n# Add Phabricator and all of its dependencies from the frozen versions\n# in the corresponding git submodules.\nADD third_party/libphutil /opt/libphutil/\nADD third_party/arcanist /opt/arcanist/\nADD third_party/phabricator /opt/phabricator/\n\n# Setup the mail implementation adapter for App Engine\nADD https://github.com/GoogleCloudPlatform/appengine-python-vm-runtime/releases/download/v0.1/appengine-python-vm-runtime-0.1.tar.gz /home/vmagent/python-runtime.tar.gz\nADD ./PhabricatorMailImplementationPythonCLIAdapter.php /opt/phabricator/src/applications/metamta/adapter/PhabricatorMailImplementationPythonCLIAdapter.php\nADD ./send_mail.py /opt/send_mail.py\n\n# TODO(ckerur): Split the configuration of the mail implementation adapter away from the compile_time_config.sh script,\n# since this is only specific to AppEngine; not the base commands needed. Then we can move the below command after the base Phabricator setup\n\nRUN pip install --no-cache-dir --upgrade pip >=6.1.1 && \\\n  pip install --no-cache-dir click && \\\n  pip install --no-cache-dir /home/vmagent/python-runtime.tar.gz && \\\n  chmod +x /opt/send_mail.py && \\\n# Add Google App Engine email class for sending out email. This is a Python implementation\n  chmod +x /opt/phabricator/src/applications/metamta/adapter/PhabricatorMailImplementationPythonCLIAdapter.php && \\\n# build-essential gives us \"make\", which is required by the \"arc liberate\" command below.\n  apt-get install --no-install-recommends -y build-essential && \\\n# Run liberate to build a new library map so the class is found by phabricator\n\t/opt/arcanist/bin/arc liberate /opt/phabricator/ && rm -rf /var/lib/apt/lists/*;\n\n# Configure the base Phabricator setup.\nADD phabricator.conf /etc/apache2/sites-available/phabricator.conf\nADD ./compile_time_config.sh /opt/compile_time_config.sh\nRUN ln -s /etc/apache2/sites-available/phabricator.conf /etc/apache2/sites-enabled/phabricator.conf && \\\n  mkdir -p /opt/phabricator/webroot/_ah && \\\n  echo ok > /opt/phabricator/webroot/_ah/health && \\\n  echo ok > /opt/phabricator/webroot/_ah/stop && \\\n  chmod a+x /opt && chmod a+x /opt/phabricator && chmod -R a+rx /opt/phabricator/webroot/ && \\\n  mkdir -p /var/tmp/phd/pid && \\\n  mkdir -p /var/repo && \\\n  chown www-data:www-data /var/repo && \\\n  mkdir -p /usr/local/apache/logs && chown www-data:www-data /usr/local/apache/logs && \\\n  chmod +x /opt/compile_time_config.sh\nRUN /opt/compile_time_config.sh\n\n# Configure the external Docker environment, including environment variables.\nEXPOSE 8080\nENV SQL_INSTANCE phabricator\nENV PHABRICATOR_BASE_URI PHABRICATOR_BASE_URI\nENV ALTERNATE_FILE_DOMAIN ALTERNATE_FILE_DOMAIN\n\n# Install the Google Cloud SDK.\nRUN apt-get install -y --no-install-recommends unzip && \\\n  curl -f -O https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.zip && \\\n  unzip google-cloud-sdk.zip -d /google/ && \\\n  rm google-cloud-sdk.zip && \\\n  echo PATH=/google/google-cloud-sdk/bin:$PATH >> /etc/profile && \\\n  /google/google-cloud-sdk/install.sh \\\n      --rc-path=/etc/bash.bashrc \\\n      --disable-installation-options && \\\n  /google/google-cloud-sdk/bin/gcloud config set \\\n      --scope installation \\\n      component_manager/disable_update_check True && rm -rf /var/lib/apt/lists/*;\n\n# Support Gerrit\nADD git-credential-gerrit.sh /google/google-cloud-sdk/bin/git-credential-gerrit.sh\nRUN chmod +x /google/google-cloud-sdk/bin/git-credential-gerrit.sh\n\n# Tell git to use our installed credential helpers for Gerrit and Cloud Repos.\nADD gitconfig /etc/gitconfig\nRUN ln -s /google/google-cloud-sdk/bin/git-credential-gcloud.sh /usr/local/bin/git-credential-gcloud.sh && \\\n  ln -s /google/google-cloud-sdk/bin/git-credential-gerrit.sh /usr/local/bin/git-credential-gerrit.sh\n\n# Apply our customizations to the Phabricator environment.\nADD create_bot.php /opt/phabricator/scripts/user/\nADD ./.arcrc /opt/.arcrc\nADD ./run_time_config.sh /opt/run_time_config.sh\nADD ./setup_arcrc.sh /opt/setup_arcrc.sh\nADD ./backup.sh /opt/backup.sh\nADD ./kill-hanging-git-commands.sh /opt/kill-hanging-git-commands.sh\nADD ./shutdown-check.sh /opt/shutdown-check.sh\nADD https://storage.googleapis.com/golang/go1.4.2.linux-amd64.tar.gz /opt/go1.4.2.linux-amd64.tar.gz\nRUN chmod +x /opt/run_time_config.sh && \\\n  chmod +x /opt/setup_arcrc.sh && \\\n  chmod ug+x /opt/phabricator/scripts/user/create_bot.php && \\\n  ln -s /opt/arcanist/bin/arc /usr/local/bin/arc && \\\n  tar -C /usr/local -xzf /opt/go1.4.2.linux-amd64.tar.gz && \\\n  export PATH=${PATH}:/usr/local/go/bin/ && \\\n  export GOPATH=/opt/ && \\\n  go get github.com/google/git-phabricator-mirror/git-phabricator-mirror && rm /opt/go1.4.2.linux-amd64.tar.gz\n\n# Install uuidgen and jq, so that the run-time setup script can setup the Cloud SQL instance.\nRUN apt-get install -y --no-install-recommends uuid-runtime jq && rm -rf /var/lib/apt/lists/*;\n\nCMD [\"/bin/sh\", \"-c\", \"echo One time config && /opt/run_time_config.sh && echo Upgrading the SQL database && /opt/phabricator/bin/storage upgrade --force && /usr/bin/supervisord\"]\n"
}