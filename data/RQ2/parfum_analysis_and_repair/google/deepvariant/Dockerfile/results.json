{
  "startTime": 1674249728389,
  "endTime": 1674249729121,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 187,
        "lineEnd": 187,
        "columnStart": 2,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC.\n# This is used to build the DeepVariant release docker image.\n# It can also be used to build local images, especially if you've made changes\n# to the code.\n# Example command:\n# $ git clone https://github.com/google/deepvariant.git\n# $ cd deepvariant\n# $ sudo docker build -t deepvariant .\n#\n# To build for GPU, use a command like:\n# $ sudo docker build --build-arg=FROM_IMAGE=nvidia/cuda:11.3.0-cudnn8-devel-ubuntu20.04 --build-arg=DV_GPU_BUILD=1 -t deepvariant_gpu .\n\n\nARG FROM_IMAGE=ubuntu:20.04\n# PYTHON_VERSION is also set in settings.sh.\nARG PYTHON_VERSION=3.8\nARG DV_GPU_BUILD=0\nARG DV_OPENVINO_BUILD=0\nARG VERSION=1.4.0\n\nFROM continuumio/miniconda3 as conda_setup\nRUN conda config --add channels defaults && \\\n    conda config --add channels bioconda && \\\n    conda config --add channels conda-forge\nRUN conda create -n bio \\\n                    bioconda::bcftools=1.10 \\\n                    bioconda::samtools=1.10 \\\n    && conda clean -a\n\nFROM ${FROM_IMAGE} as builder\nCOPY --from=conda_setup /opt/conda /opt/conda\nLABEL maintainer=\"https://github.com/google/deepvariant/issues\"\n\nARG DV_GPU_BUILD\nENV DV_GPU_BUILD=${DV_GPU_BUILD}\n\n# Copying DeepVariant source code\nCOPY . /opt/deepvariant\n\nARG DV_OPENVINO_BUILD\nENV DV_OPENVINO_BUILD=${DV_OPENVINO_BUILD}\n\nARG VERSION\nENV VERSION=${VERSION}\n\nWORKDIR /opt/deepvariant\n\nRUN echo \"Acquire::http::proxy \\\"$http_proxy\\\";\\n\" \\\n         \"Acquire::https::proxy \\\"$https_proxy\\\";\" > \"/etc/apt/apt.conf\"\n\nRUN ./build-prereq.sh \\\n  && PATH=\"${HOME}/bin:${PATH}\" ./build_release_binaries.sh  # PATH for bazel\n\nFROM ${FROM_IMAGE}\nARG DV_GPU_BUILD\nARG DV_OPENVINO_BUILD\nARG VERSION\nARG PYTHON_VERSION\nENV DV_GPU_BUILD=${DV_GPU_BUILD}\nENV DV_OPENVINO_BUILD=${DV_OPENVINO_BUILD}\nENV VERSION ${VERSION}\nENV PYTHON_VERSION ${PYTHON_VERSION}\n\nRUN echo \"Acquire::http::proxy \\\"$http_proxy\\\";\\n\" \\\n         \"Acquire::https::proxy \\\"$https_proxy\\\";\" > \"/etc/apt/apt.conf\"\n\nWORKDIR /opt/\nCOPY --from=builder /opt/deepvariant/bazel-bin/licenses.zip .\n\nWORKDIR /opt/deepvariant/bin/\nCOPY --from=builder /opt/conda /opt/conda\nCOPY --from=builder /opt/deepvariant/run-prereq.sh .\nCOPY --from=builder /opt/deepvariant/settings.sh .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/make_examples.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/call_variants.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/call_variants_keras.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/postprocess_variants.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/vcf_stats_report.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/show_examples.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/runtime_by_region_vis.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/multisample_make_examples.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/model_train.zip .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/model_eval.zip  .\nCOPY --from=builder /opt/deepvariant/bazel-out/k8-opt/bin/deepvariant/freeze_graph.zip  .\nCOPY --from=builder /opt/deepvariant/scripts/run_deepvariant.py .\n\nRUN ./run-prereq.sh\n\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python${PYTHON_VERSION} 0 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 0\n\n# Create shell wrappers for python zip files for easier use.\nRUN \\\n  BASH_HEADER='#!/bin/bash' && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/make_examples.zip \"$@\"' > \\\n    /opt/deepvariant/bin/make_examples && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/call_variants.zip \"$@\"' > \\\n    /opt/deepvariant/bin/call_variants && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/call_variants_keras.zip \"$@\"' > \\\n    /opt/deepvariant/bin/call_variants_keras && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/postprocess_variants.zip \"$@\"' > \\\n    /opt/deepvariant/bin/postprocess_variants && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/model_train.zip \"$@\"' > \\\n    /opt/deepvariant/bin/model_train && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/model_eval.zip \"$@\"' > \\\n    /opt/deepvariant/bin/model_eval && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/vcf_stats_report.zip \"$@\"' > \\\n    /opt/deepvariant/bin/vcf_stats_report && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/show_examples.zip \"$@\"' > \\\n    /opt/deepvariant/bin/show_examples && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/runtime_by_region_vis.zip \"$@\"' > \\\n    /opt/deepvariant/bin/runtime_by_region_vis && \\\n    printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/multisample_make_examples.zip \"$@\"' > \\\n    /opt/deepvariant/bin/multisample_make_examples && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 /opt/deepvariant/bin/freeze_graph.zip \"$@\"' > \\\n    /opt/deepvariant/bin/freeze_graph && \\\n  printf \"%s\\n%s\\n\" \\\n    \"${BASH_HEADER}\" \\\n    'python3 -u /opt/deepvariant/bin/run_deepvariant.py \"$@\"' > \\\n    /opt/deepvariant/bin/run_deepvariant && \\\n  chmod +x /opt/deepvariant/bin/make_examples \\\n    /opt/deepvariant/bin/call_variants \\\n    /opt/deepvariant/bin/call_variants_keras \\\n    /opt/deepvariant/bin/postprocess_variants \\\n    /opt/deepvariant/bin/vcf_stats_report \\\n    /opt/deepvariant/bin/show_examples \\\n    /opt/deepvariant/bin/runtime_by_region_vis \\\n    /opt/deepvariant/bin/multisample_make_examples \\\n    /opt/deepvariant/bin/model_train \\\n    /opt/deepvariant/bin/model_eval \\\n    /opt/deepvariant/bin/run_deepvariant \\\n    /opt/deepvariant/bin/freeze_graph\n\n# Copy models\nWORKDIR /opt/models/wgs\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.meta .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wgs_standard/model.ckpt.example_info.json .\nRUN chmod +r /opt/models/wgs/model.ckpt*\n\nWORKDIR /opt/models/wes\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.meta .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-wes_standard/model.ckpt.example_info.json .\nRUN chmod +r /opt/models/wes/model.ckpt*\n\nWORKDIR /opt/models/pacbio\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.meta .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-pacbio_standard/model.ckpt.example_info.json .\nRUN chmod +r /opt/models/pacbio/model.ckpt*\n\nWORKDIR /opt/models/hybrid_pacbio_illumina\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-hybrid_standard/model.ckpt.data-00000-of-00001 .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-hybrid_standard/model.ckpt.index .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-hybrid_standard/model.ckpt.meta .\nADD https://storage.googleapis.com/deepvariant/models/DeepVariant/${VERSION}/DeepVariant-inception_v3-${VERSION}+data-hybrid_standard/model.ckpt.example_info.json .\nRUN chmod +r /opt/models/hybrid_pacbio_illumina/model.ckpt*\n\nENV PATH=\"${PATH}\":/opt/conda/bin:/opt/conda/envs/bio/bin:/opt/deepvariant/bin\n\nRUN apt-get -y update && \\\n  apt-get install --no-install-recommends -y parallel python3-pip && \\\n  PATH=\"${HOME}/.local/bin:$PATH\" python3 -m pip install absl-py==0.13.0 && \\\n  apt-get clean autoclean && \\\n  apt-get autoremove -y --purge && \\\n  rm -rf /var/lib/apt/lists/*\n\nWORKDIR /opt/deepvariant\n\nCMD [\"/opt/deepvariant/bin/run_deepvariant\", \"--help\"]\n"
}