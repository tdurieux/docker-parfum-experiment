{
  "startTime": 1674248868069,
  "endTime": 1674248868933,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Copy some commonly linked library versions from xenial for backwards\n# compatibility with older builds.\nFROM ubuntu:16.04 as xenial\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      libcurl3-gnutls \\\n      libffi6 \\\n      libnettle6 \\\n      libssl1.0.0 && rm -rf /var/lib/apt/lists/*;\n\nFROM ubuntu:20.04\n\nRUN mkdir /data\nWORKDIR /data\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get autoremove -y && \\\n    apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        build-essential \\\n        curl \\\n        gdb \\\n        iproute2 \\\n        libbz2-dev \\\n        libcurl4-openssl-dev \\\n        libffi-dev \\\n        libgdbm-dev \\\n        libidn11 \\\n        liblzma-dev \\\n        libncurses5-dev \\\n        libncursesw5 \\\n        libnss3-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        libtinfo5 \\\n        locales \\\n        lsb-release \\\n        net-tools \\\n        psmisc \\\n        socat \\\n        sudo \\\n        unzip \\\n        util-linux \\\n        wget \\\n        zip \\\n        zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=xenial \\\n    /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 \\\n    /lib/x86_64-linux-gnu/libssl.so.1.0.0 \\\n    /lib/x86_64-linux-gnu/\nCOPY --from=xenial \\\n    /usr/lib/x86_64-linux-gnu/libcurl-gnutls.so.* \\\n    /usr/lib/x86_64-linux-gnu/libffi.so.6.* \\\n    /usr/lib/x86_64-linux-gnu/libnettle.so.* \\\n    /usr/lib/x86_64-linux-gnu/\n\n# Install patchelf.\nRUN curl -f -sS https://releases.nixos.org/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 | tar -C /tmp -xj && \\\n    cd /tmp/patchelf-*/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n    make install\n\n# Install OpenJDK 15 for Jazzer (Java fuzzer).\n# Copied from gcr.io/oss-fuzz-base/base-runner.\nENV JAVA_HOME=/usr/lib/jvm/java-15-openjdk-amd64\nENV JVM_LD_LIBRARY_PATH=$JAVA_HOME/lib/server\nENV PATH=$PATH:$JAVA_HOME/bin\nRUN wget https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db48ee2/7/GPL/openjdk-15.0.2_linux-x64_bin.tar.gz -O /tmp/openjdk-15.0.2_linux-x64_bin.tar.gz && \\\n    cd /tmp && \\\n    mkdir -p $JAVA_HOME && \\\n    tar -xzv --strip-components=1 -f openjdk-15.0.2_linux-x64_bin.tar.gz --directory $JAVA_HOME && \\\n    rm -rf openjdk*.tar.gz $JAVA_HOME/jmods $JAVA_HOME/lib/src.zip\n\n# Install Python 3.\nRUN curl -f -sS https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz | tar -C /tmp -xzv && \\\n    cd /tmp/Python-3.7.7 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations --enable-loadable-sqlite-extensions && make altinstall && \\\n    rm -rf /tmp/Python-3.7.7\nRUN pip3.7 install pipenv\n\nRUN echo \"deb https://packages.cloud.google.com/apt cloud-sdk main\" \\\n    | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg \\\n    | apt-key add - && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y google-cloud-sdk && rm -rf /var/lib/apt/lists/*;\n\n# Set up google-fluentd\n# We ignore errors in install-logging-agent.sh as it always fails to start\n# after installation without a metadata server.\nRUN curl -f -sSO https://dl.google.com/cloudagents/install-logging-agent.sh && \\\n    bash install-logging-agent.sh || true && \\\n    sed -i 's/flush_interval 5s/flush_interval 60s/' /etc/google-fluentd/google-fluentd.conf\nCOPY clusterfuzz-fluentd.conf /etc/google-fluentd/config.d/clusterfuzz.conf\n\n# Common environment variables.\nENV USER=clusterfuzz\nENV INSTALL_DIRECTORY /mnt/scratch0\nENV BOT_TMPDIR $INSTALL_DIRECTORY/tmp\nENV ROOT_DIR $INSTALL_DIRECTORY/clusterfuzz\nENV UPDATE_WEB_TESTS True\nENV PYTHONPATH $INSTALL_DIRECTORY/clusterfuzz/src\nENV RUN_CMD \"python3.7 $ROOT_DIR/src/python/bot/startup/run.py\"\nENV DEPLOYMENT_ZIP \"linux-3.zip\"\n\n# Passwordless sudo (needed for AFL launcher).\nRUN groupadd nopwsudo && \\\n    echo \"%nopwsudo ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/mysudoers\n\n# Make sure GSUtil uses the GCE service account.\nRUN echo '[GoogleCompute]\\nservice_account = default' > /etc/boto.cfg\n\nVOLUME $INSTALL_DIRECTORY\nWORKDIR $INSTALL_DIRECTORY\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV PYTHONIOENCODING UTF-8\n\nCOPY setup_common.sh setup_clusterfuzz.sh setup_nfs.sh start_clusterfuzz.sh setup_mock_metadata.sh start.sh Pipfile Pipfile.lock /data/\nRUN cd /data && \\\n    # Make pip3.7 the default so that pipenv install --system works.\n    mv /usr/local/bin/pip3.7 /usr/local/bin/pip && \\\n    pipenv install --deploy --system && \\\n    # Install tensorflow here as it's not included in the Pipfile due to\n    # strict python version requirements.\n    pip install --no-cache-dir tensorflow==2.3.0\nCMD [\"bash\", \"-ex\", \"/data/start.sh\"]\n\n"
}