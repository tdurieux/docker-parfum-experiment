diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/clusterfuzz/docker/base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/clusterfuzz/docker/base/Dockerfile/repaired.Dockerfile
index 37e0914..57b5458 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/clusterfuzz/docker/base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/clusterfuzz/docker/base/Dockerfile/repaired.Dockerfile
@@ -17,11 +17,11 @@
 FROM ubuntu:16.04 as xenial
 ENV DEBIAN_FRONTEND noninteractive
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       libcurl3-gnutls \
       libffi6 \
       libnettle6 \
-      libssl1.0.0
+      libssl1.0.0 && rm -rf /var/lib/apt/lists/*;
 
 FROM ubuntu:20.04
 
@@ -33,7 +33,7 @@ ENV DEBIAN_FRONTEND noninteractive
 RUN apt-get update && \
     apt-get upgrade -y && \
     apt-get autoremove -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         apt-transport-https \
         build-essential \
         curl \
@@ -62,7 +62,7 @@ RUN apt-get update && \
         util-linux \
         wget \
         zip \
-        zlib1g-dev
+        zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 COPY --from=xenial \
     /lib/x86_64-linux-gnu/libcrypto.so.1.0.0 \
@@ -75,9 +75,9 @@ COPY --from=xenial \
     /usr/lib/x86_64-linux-gnu/
 
 # Install patchelf.
-RUN curl -sS https://releases.nixos.org/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 | tar -C /tmp -xj && \
+RUN curl -f -sS https://releases.nixos.org/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 | tar -C /tmp -xj && \
     cd /tmp/patchelf-*/ && \
-    ./configure --prefix=/usr && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && \
     make install
 
 # Install OpenJDK 15 for Jazzer (Java fuzzer).
@@ -92,23 +92,23 @@ RUN wget https://download.java.net/java/GA/jdk15.0.2/0d1cfde4252546c6931946de8db
     rm -rf openjdk*.tar.gz $JAVA_HOME/jmods $JAVA_HOME/lib/src.zip
 
 # Install Python 3.
-RUN curl -sS https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz | tar -C /tmp -xzv && \
+RUN curl -f -sS https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz | tar -C /tmp -xzv && \
     cd /tmp/Python-3.7.7 && \
-    ./configure --enable-optimizations --enable-loadable-sqlite-extensions && make altinstall && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations --enable-loadable-sqlite-extensions && make altinstall && \
     rm -rf /tmp/Python-3.7.7
 RUN pip3.7 install pipenv
 
 RUN echo "deb https://packages.cloud.google.com/apt cloud-sdk main" \
     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
-    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg \
+    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg \
     | apt-key add - && \
     apt-get update -y && \
-    apt-get install -y google-cloud-sdk
+    apt-get install --no-install-recommends -y google-cloud-sdk && rm -rf /var/lib/apt/lists/*;
 
 # Set up google-fluentd
 # We ignore errors in install-logging-agent.sh as it always fails to start
 # after installation without a metadata server.
-RUN curl -sSO https://dl.google.com/cloudagents/install-logging-agent.sh && \
+RUN curl -f -sSO https://dl.google.com/cloudagents/install-logging-agent.sh && \
     bash install-logging-agent.sh || true && \
     sed -i 's/flush_interval 5s/flush_interval 60s/' /etc/google-fluentd/google-fluentd.conf
 COPY clusterfuzz-fluentd.conf /etc/google-fluentd/config.d/clusterfuzz.conf
@@ -144,6 +144,6 @@ RUN cd /data && \
     pipenv install --deploy --system && \
     # Install tensorflow here as it's not included in the Pipfile due to
     # strict python version requirements.
-    pip install tensorflow==2.3.0
+    pip install --no-cache-dir tensorflow==2.3.0
 CMD ["bash", "-ex", "/data/start.sh"]