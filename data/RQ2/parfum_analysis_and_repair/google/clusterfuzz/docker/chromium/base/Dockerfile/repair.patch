diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/clusterfuzz/docker/chromium/base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/clusterfuzz/docker/chromium/base/Dockerfile/repaired.Dockerfile
index 0ea3d58..c720486 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/google/clusterfuzz/docker/chromium/base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/google/clusterfuzz/docker/chromium/base/Dockerfile/repaired.Dockerfile
@@ -18,14 +18,14 @@ ENV NFS_ROOT /mnt/nfs/cfvolume
 
 # Note: snapcraft installation seems to always fail.
 RUN echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections && \
-    curl 'https://chromium.googlesource.com/chromium/src/+/main/build/install-build-deps.sh?format=TEXT' | base64 -d > /tmp/install-build-deps.sh && \
-    sed -i s/snapcraft/doesnotexist/ /tmp/install-build-deps.sh && \ 
+    curl -f 'https://chromium.googlesource.com/chromium/src/+/main/build/install-build-deps.sh?format=TEXT' | base64 -d > /tmp/install-build-deps.sh && \
+    sed -i s/snapcraft/doesnotexist/ /tmp/install-build-deps.sh && \
     chmod u+x /tmp/install-build-deps.sh && \
     /tmp/install-build-deps.sh --backwards-compatible --no-prompt --no-chromeos-fonts --syms --lib32
 
 RUN dpkg --add-architecture i386 && \
     apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         autofs \
         dbus-x11 \
         blackbox \
@@ -39,11 +39,11 @@ RUN dpkg --add-architecture i386 && \
         nodejs \
         pulseaudio \
         xdotool \
-        xvfb
+        xvfb && rm -rf /var/lib/apt/lists/*;
 
 # Needed for older versions of Chrome.
 RUN ln -s /usr/lib/x86_64-linux-gnu/libudev.so /usr/lib/x86_64-linux-gnu/libudev.so.0
-RUN curl -o /usr/lib/x86_64-linux-gnu/libgcrypt.so.11 https://clusterfuzz-data.storage.googleapis.com/libgcrypt.so.11
+RUN curl -f -o /usr/lib/x86_64-linux-gnu/libgcrypt.so.11 https://clusterfuzz-data.storage.googleapis.com/libgcrypt.so.11
 
 # Prepare NFS mount.
 ENV NFS_CLUSTER_NAME=10.0.0.2 \
@@ -55,11 +55,11 @@ RUN mkdir $NFS_DIR && \
 
 # Get pre-built msan libraries (with and without origin tracking).
 RUN mkdir /msan-chained-origins && \
-    curl -o /msan-chained-origins/libs.zip https://clusterfuzz-chromium-msan-libs.storage.googleapis.com/16.04/chained-origins/latest-201906130139.zip && \
+    curl -f -o /msan-chained-origins/libs.zip https://clusterfuzz-chromium-msan-libs.storage.googleapis.com/16.04/chained-origins/latest-201906130139.zip && \
     unzip /msan-chained-origins/libs.zip -d /msan-chained-origins && \
     rm /msan-chained-origins/libs.zip && \
     mkdir /msan-no-origins && \
-    curl -o /msan-no-origins/libs.zip https://clusterfuzz-chromium-msan-libs.storage.googleapis.com/16.04/no-origins/latest-201906130139.zip && \
+    curl -f -o /msan-no-origins/libs.zip https://clusterfuzz-chromium-msan-libs.storage.googleapis.com/16.04/no-origins/latest-201906130139.zip && \
     unzip /msan-no-origins/libs.zip -d /msan-no-origins && \
     rm /msan-no-origins/libs.zip