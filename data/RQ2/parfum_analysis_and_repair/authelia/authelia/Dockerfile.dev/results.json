{
  "startTime": 1674251005819,
  "endTime": 1674251006240,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ========================================\n# ===== Build image for the frontend =====\n# ========================================\nFROM node:18-alpine AS builder-frontend\n\nWORKDIR /node/src/app\n\nCOPY web ./\n\n# Install the dependencies and build\nRUN yarn install --frozen-lockfile && yarn build && yarn cache clean;\n\n# =======================================\n# ===== Build image for the backend =====\n# =======================================\nFROM golang:1.18.4-alpine AS builder-backend\n\nWORKDIR /go/src/app\n\nRUN \\\necho \">> Downloading required apk's...\" && \\\napk --no-cache add gcc musl-dev\n\nCOPY go.mod go.sum ./\n\nRUN \\\necho \">> Downloading go modules...\" && \\\ngo mod download\n\nCOPY / ./\n\n# Prepare static files to be embedded in Go binary\nCOPY --from=builder-frontend /node/src/internal/server/public_html internal/server/public_html\n\nARG LDFLAGS_EXTRA\nRUN \\\nmv api internal/server/public_html/api && \\\nchmod 0666 /go/src/app/.healthcheck.env && \\\necho \">> Starting go build...\" && \\\nCGO_ENABLED=1 CGO_CPPFLAGS=\"-D_FORTIFY_SOURCE=2 -fstack-protector-strong\" CGO_LDFLAGS=\"-Wl,-z,relro,-z,now\" go build \\\n-ldflags \"-linkmode=external -s -w ${LDFLAGS_EXTRA}\" -trimpath -buildmode=pie -o authelia ./cmd/authelia\n\n# ===================================\n# ===== Authelia official image =====\n# ===================================\nFROM alpine:3.16.0\n\nWORKDIR /app\n\n# Set environment variables\nENV PATH=\"/app:${PATH}\" \\\n    PUID=0 \\\n    PGID=0\n\nRUN \\\napk --no-cache add ca-certificates su-exec tzdata\n\nCOPY --from=builder-backend /go/src/app/authelia /go/src/app/LICENSE /go/src/app/entrypoint.sh /go/src/app/healthcheck.sh /go/src/app/.healthcheck.env ./\n\nRUN \\\nchmod 0666 /app/.healthcheck.env\n\nEXPOSE 9091\n\nVOLUME /config\n\nENTRYPOINT [\"/app/entrypoint.sh\"]\nCMD [\"--config\", \"/config/configuration.yml\"]\nHEALTHCHECK --interval=30s --timeout=3s --start-period=1m CMD /app/healthcheck.sh\n"
}