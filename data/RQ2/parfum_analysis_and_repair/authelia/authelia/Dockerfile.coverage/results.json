{
  "startTime": 1674215626878,
  "endTime": 1674215627696,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 55,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "# ========================================\n# ===== Build image for the frontend =====\n# ========================================\nFROM node:18-alpine AS builder-frontend\n\nWORKDIR /node/src/app\n\nCOPY .pnpm-store /root/.pnpm-store\nCOPY web ./\n\n# Install the dependencies and build\nRUN yarn global add pnpm && \\\n    pnpm install --frozen-lockfile && pnpm coverage && yarn cache clean;\n\n# =======================================\n# ===== Build image for the backend =====\n# =======================================\nFROM golang:1.18.4-alpine AS builder-backend\n\nWORKDIR /go/src/app\n\nRUN \\\necho \">> Downloading required apk's...\" && \\\napk --no-cache add gcc musl-dev\n\nCOPY go.mod go.sum ./\n\nRUN \\\necho \">> Downloading go modules...\" && \\\ngo mod download\n\nCOPY / ./\n\n# Prepare static files to be embedded in Go binary\nCOPY --from=builder-frontend /node/src/internal/server/public_html internal/server/public_html\n\nARG LDFLAGS_EXTRA\nRUN \\\nmv api internal/server/public_html/api && \\\ncd cmd/authelia && \\\nchmod 0666 /go/src/app/.healthcheck.env && \\\necho \">> Starting go build (coverage via go test)...\" && \\\nCGO_ENABLED=1 CGO_CPPFLAGS=\"-D_FORTIFY_SOURCE=2 -fstack-protector-strong\" CGO_LDFLAGS=\"-Wl,-z,relro,-z,now\" go test -c --tags coverage -covermode=atomic \\\n-ldflags \"${LDFLAGS_EXTRA}\" -o authelia -coverpkg github.com/authelia/authelia/...\n\n# ===================================\n# ===== Authelia official image =====\n# ===================================\nFROM alpine:3.16.0\n\nRUN apk --no-cache add ca-certificates tzdata\n\nWORKDIR /app\n\nCOPY --from=builder-backend /go/src/app/cmd/authelia/authelia /go/src/app/LICENSE /go/src/app/healthcheck.sh /go/src/app/.healthcheck.env ./\n\nEXPOSE 9091\n\nVOLUME /config\n\nENV PATH=\"/app:${PATH}\"\n\nCMD [\"authelia\", \"-test.coverprofile=/authelia/coverage.txt\", \"COVERAGE\", \"--config\", \"/config/configuration.yml\"]\nHEALTHCHECK --interval=30s --timeout=3s CMD /app/healthcheck.sh\n"
}