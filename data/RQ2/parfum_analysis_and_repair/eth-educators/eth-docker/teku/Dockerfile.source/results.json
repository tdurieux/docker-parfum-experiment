{
  "startTime": 1674251064917,
  "endTime": 1674251065754,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Teku in a stock Ubuntu container\nFROM eclipse-temurin:17-jdk-focal as builder\n\n# This is here to avoid build-time complaints\nARG DOCKER_TAG\n\nARG BUILD_TARGET\n\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates git && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/src\nRUN bash -c \"git clone https://github.com/ConsenSys/teku.git && cd teku && git config advice.detachedHead false && git fetch --all --tags && git checkout ${BUILD_TARGET} && ./gradlew installDist\"\n\n# Pull all binaries into a second stage deploy Ubuntu container\nFROM eclipse-temurin:17-focal\n\nARG USER=teku\nARG UID=10002\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y --no-install-recommends \\\n  ca-certificates \\\n  tzdata \\\n  jq \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN set -eux; \\\n        apt-get update; \\\n        apt-get install --no-install-recommends -y gosu; \\\n        rm -rf /var/lib/apt/lists/*; \\\n# verify that the binary works\n        gosu nobody true\n\n# See https://stackoverflow.com/a/55757473/12429735RUN\nRUN adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"/nonexistent\" \\\n    --shell \"/usr/sbin/nologin\" \\\n    --no-create-home \\\n    --uid \"${UID}\" \\\n    \"${USER}\"\n\nRUN mkdir -p /var/lib/teku/validator-keys && mkdir -p /var/lib/teku/validator-passwords && chown -R ${USER}:${USER} /var/lib/teku && chmod -R 700 /var/lib/teku\n\n# Copy executable\nCOPY --from=builder /usr/src/teku/build/install/teku/. /opt/teku/\n# Script to query and store validator key passwords\nCOPY ./validator-import.sh /usr/local/bin/\nCOPY ./docker-entrypoint.sh /usr/local/bin/\n\nUSER ${USER}\n\nENTRYPOINT [\"/opt/teku/bin/teku\"]\n"
}