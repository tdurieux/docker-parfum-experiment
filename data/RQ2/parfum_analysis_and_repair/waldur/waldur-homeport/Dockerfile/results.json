{
  "startTime": 1674255583237,
  "endTime": 1674255583712,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 30,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build environment\nFROM node:lts-alpine as build\nWORKDIR /app\nENV PATH /app/node_modules/.bin:$PATH\nCOPY package.json yarn.lock /app/\n# Git is needed to refer with yarn to unrealised versions of libraries from github\n# --no-cache: download package index on-the-fly, no need to cleanup afterwards\nRUN apk add --no-cache git && yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY . /app\nARG VERSION=latest\nRUN sed -i \"s/buildId: 'develop'/buildId: '$VERSION'/\" src/configs/default.ts\nRUN yarn build\n\n# production environment\nFROM nginx:stable-alpine\nCOPY --from=build /app/build /usr/share/nginx/html\nCOPY --from=build /app/build/index.html /usr/share/nginx/html/index.orig.html\n\nENV API_URL=\"http://localhost:8080\"\nENV TITLE=\"Waldur | Cloud Service Management\"\n\n# put config template outside the public root\nCOPY docker/config.template.json /usr/share/nginx/\n\n# replace default configuration\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/entrypoint.sh /\n\nEXPOSE 80\nCMD [ \"/entrypoint.sh\" ]\n"
}