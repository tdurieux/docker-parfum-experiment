{
  "startTime": 1674249381613,
  "endTime": 1674249382607,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:22.04 as base-all\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-cux\"]\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    apt-get update \\\n    && apt-get upgrade --yes\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    --mount=type=cache,target=/var/cache,sharing=locked \\\n    apt-get install -y --assume-yes --no-install-recommends python3-pip && rm -rf /var/lib/apt/lists/*;\n\nFROM base-all as poetry\n\nWORKDIR /tmp\nCOPY requirements.txt ./\nRUN --mount=type=cache,target=/root/.cache \\\n    python3 -m pip install --disable-pip-version-check --requirement=requirements.txt \\\n    && rm requirements.txt\n\nCOPY poetry.lock pyproject.toml ./\nRUN poetry export --output=requirements.txt \\\n    && poetry export --dev --output=requirements-dev.txt\n\nFROM base-all as base-dist\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    --mount=type=cache,target=/var/cache,sharing=locked \\\n    apt-get install -y --assume-yes --no-install-recommends \\\n    graphicsmagick pdftk-java \\\n    tesseract-ocr tesseract-ocr-fra tesseract-ocr-deu tesseract-ocr-eng \\\n    libimage-exiftool-perl software-properties-common ghostscript optipng && rm -rf /var/lib/apt/lists/*;\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=bind,from=poetry,source=/tmp,target=/tmp \\\n    python3 -m pip install --disable-pip-version-check --no-deps --requirement=/tmp/requirements.txt\n\nVOLUME /source \\\n    /destination\n\nENV LANG=C.UTF-8\n\nWORKDIR /opt\n\nFROM base-dist as tests-dist\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    --mount=type=cache,target=/var/cache,sharing=locked \\\n    apt-get install -y --assume-yes --no-install-recommends poppler-utils ghostscript graphviz && rm -rf /var/lib/apt/lists/*;\n\nRUN --mount=type=cache,target=/root/.cache \\\n    --mount=type=bind,from=poetry,source=/tmp,target=/tmp \\\n    python3 -m pip install --disable-pip-version-check --no-deps --requirement=/tmp/requirements-dev.txt\n\nFROM base-dist as base\n\nCOPY scan_to_paperless scan_to_paperless/\nCOPY pyproject.toml README.md ./\nRUN --mount=type=cache,target=/root/.cache \\\n    python3 -m pip install --disable-pip-version-check --no-deps --editable . \\\n    && pip freeze --all > /requirements.txt\n\nCMD [\"scan-process\"]\n\nFROM tests-dist as tests\n\nCOPY . ./\nRUN --mount=type=cache,target=/root/.cache \\\n    python3 -m pip install --disable-pip-version-check --no-deps --editable .\n\nFROM base as all\n\nRUN --mount=type=cache,target=/var/lib/apt/lists \\\n    --mount=type=cache,target=/var/cache,sharing=locked \\\n    apt-get install -y --assume-yes --no-install-recommends tesseract-ocr-all && rm -rf /var/lib/apt/lists/*;\n"
}