diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pantharshit00/prisma-rpi-builds/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pantharshit00/prisma-rpi-builds/Dockerfile/repaired.Dockerfile
index c02d8f2..f0f42a8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pantharshit00/prisma-rpi-builds/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pantharshit00/prisma-rpi-builds/Dockerfile/repaired.Dockerfile
@@ -3,13 +3,13 @@ FROM debian:stretch
 
 ENV PATH=/root/.cargo/bin:$PATH
 
-RUN apt-get update && apt-get -y install wget curl git make build-essential clang libz-dev libsqlite3-dev openssl libssl-dev pkg-config gzip mingw-w64 g++ libmpc-dev libmpfr-dev libgmp-dev gcc-arm-linux-gnueabihf libc6-dev-armhf-cross g++-arm-linux-gnueabihf libmagic-dev
+RUN apt-get update && apt-get -y --no-install-recommends install wget curl git make build-essential clang libz-dev libsqlite3-dev openssl libssl-dev pkg-config gzip mingw-w64 g++ libmpc-dev libmpfr-dev libgmp-dev gcc-arm-linux-gnueabihf libc6-dev-armhf-cross g++-arm-linux-gnueabihf libmagic-dev && rm -rf /var/lib/apt/lists/*;
 
 # cross compile OpenSSL
 # latest version can be found here: https://www.openssl.org/source/
 ENV OPENSSL_VERSION=openssl-1.0.2u
 ENV DOWNLOAD_SITE=https://www.openssl.org/source/old/1.0.2
-RUN wget $DOWNLOAD_SITE/$OPENSSL_VERSION.tar.gz && tar zxf $OPENSSL_VERSION.tar.gz
+RUN wget $DOWNLOAD_SITE/$OPENSSL_VERSION.tar.gz && tar zxf $OPENSSL_VERSION.tar.gz && rm $OPENSSL_VERSION.tar.gz
 RUN cd $OPENSSL_VERSION && ./Configure linux-armv4 --cross-compile-prefix=/usr/bin/arm-linux-gnueabihf- --prefix=/opt/openssl-arm --openssldir=/opt/openssl-arm -static && make install
 # This env var configures rust-openssl to use the cross compiled version
 ENV OPENSSL_DIR=/opt/openssl-arm
@@ -21,9 +21,11 @@ RUN echo "Building zlib" && \
     tar xzf "zlib-$ZLIB_VERSION.tar.gz" && cd "zlib-$ZLIB_VERSION" && \
     CHOST=arm CC=/usr/bin/arm-linux-gnueabihf-gcc \
     AR=/usr/bin/arm-linux-gnueabihf-ar RANLIB=/usr/bin/arm-linux-gnueabihf-ranlib \
-    ./configure --static --prefix=/opt/zlib && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
+
+    --static --prefix=/opt/zlib && \
     make && make install && \
-    rm -r /tmp/*
+    rm -r /tmp/* && rm "zlib-$ZLIB_VERSION.tar.gz"
 
 # Install Rust
 RUN curl https://sh.rustup.rs -sSf | sh -s -- -y
@@ -35,5 +37,5 @@ ENV CARGO_TARGET_ARMV7_UNKNOWN_LINUX_GNUEABIHF_RUNNER="/linux-runner armv7"
 ENV CC_armv7_unknown_linux_gnueabihf=arm-linux-gnueabihf-gcc
 ENV CXX_armv7_unknown_linux_gnueabihf=arm-linux-gnueabihf-g++
 ENV QEMU_LD_PREFIX=/usr/arm-linux-gnueabihf
-ENV LIBZ_SYS_STATIC=1 
+ENV LIBZ_SYS_STATIC=1