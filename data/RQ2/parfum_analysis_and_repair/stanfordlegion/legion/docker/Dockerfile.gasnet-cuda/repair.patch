diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stanfordlegion/legion/docker/Dockerfile.gasnet-cuda b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stanfordlegion/legion/docker/Dockerfile.gasnet-cuda/repaired.Dockerfile
index 3c294be..76bcd7b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stanfordlegion/legion/docker/Dockerfile.gasnet-cuda
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stanfordlegion/legion/docker/Dockerfile.gasnet-cuda/repaired.Dockerfile
@@ -7,11 +7,11 @@ MAINTAINER Michael Bauer <mbauer@nvidia.com>
 # Install dependencies.
 ENV DEBIAN_FRONTEND noninteractive
 RUN apt-get update -qq && \
-    apt-get install -qq software-properties-common && \
+    apt-get install -y --no-install-recommends -qq software-properties-common && \
     add-apt-repository ppa:ubuntu-toolchain-r/test -y && \
     add-apt-repository ppa:pypy/ppa -y && \
     apt-get update -qq && \
-    apt-get install -qq \
+    apt-get install -y --no-install-recommends -qq \
       build-essential git python-pip pypy time wget \
       g++-4.8 g++-4.9 g++-5 g++-6 \
       gcc-4.9-multilib g++-4.9-multilib \
@@ -23,7 +23,7 @@ RUN apt-get update -qq && \
       module-init-tools \
       gdb vim \
       openmpi-bin openssh-client openssh-server libopenmpi-dev && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # InfiniBand
 RUN apt-get update && apt-get install -y --no-install-recommends \
@@ -40,30 +40,30 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
     libmlx5-1-dbg \
     libmlx5-dev \
     librdmacm-dev \
-    opensm
+    opensm && rm -rf /var/lib/apt/lists/*;
 
 # Build GASNet
 RUN git clone -b master https://github.com/StanfordLegion/gasnet.git /usr/local/gasnet
 RUN make -C /usr/local/gasnet/ -e CONDUIT=ibv
 
 # Build LLVM and Clang
-RUN wget http://releases.llvm.org/3.8.1/llvm-3.8.1.src.tar.xz && \
+RUN wget https://releases.llvm.org/3.8.1/llvm-3.8.1.src.tar.xz && \
     tar -xf llvm-3.8.1.src.tar.xz && \
-    wget http://releases.llvm.org/3.8.1/cfe-3.8.1.src.tar.xz && \
+    wget https://releases.llvm.org/3.8.1/cfe-3.8.1.src.tar.xz && \
     tar -xf cfe-3.8.1.src.tar.xz && \
     mv cfe-3.8.1.src llvm-3.8.1.src/tools/clang && \
     mkdir llvm-build && cd llvm-build && \
     ../llvm-3.8.1.src/configure --enable-optimized --disable-assertions --disable-terminfo --disable-libedit --disable-zlib && \
-    make -j 20 && make install && cd ..
+    make -j 20 && make install && cd .. && rm llvm-3.8.1.src.tar.xz
 
 # Install CUDA
-RUN wget http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb && \
+RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb && \
     dpkg -i cuda-repo-ubuntu1604_8.0.61-1_amd64.deb && apt-get update -qq && \
-    apt-get -y install cuda-command-line-tools-8-0 cuda-core-8-0 cuda-cublas-dev-8-0 && \
+    apt-get -y --no-install-recommends install cuda-command-line-tools-8-0 cuda-core-8-0 cuda-cublas-dev-8-0 && \
     ln -s /usr/local/cuda-8.0 /usr/local/cuda && \
-    wget http://us.download.nvidia.com/XFree86/Linux-x86_64/375.66/NVIDIA-Linux-x86_64-375.66.run && \
+    wget https://us.download.nvidia.com/XFree86/Linux-x86_64/375.66/NVIDIA-Linux-x86_64-375.66.run && \
     sh ./NVIDIA-Linux-x86_64-375.66.run -s -N --no-kernel-module && \
-    rm cuda-repo-ubuntu1604_8.0.61-1_amd64.deb && rm NVIDIA-Linux-x86_64-375.66.run
+    rm cuda-repo-ubuntu1604_8.0.61-1_amd64.deb && rm NVIDIA-Linux-x86_64-375.66.run && rm -rf /var/lib/apt/lists/*;
 
 # Configure the environment for CUDA
 ENV PATH /usr/local/cuda/bin:$PATH