{
  "startTime": 1674248000247,
  "endTime": 1674248001258,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 71,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 113,
        "columnStart": 22,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 114,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker run -it --rm -p 6081:8080 -v `pwd`/..:hadabot_main hadabot/ros2-codeserver\n\nARG FROM_IMAGE=dorowu/ubuntu-desktop-lxde-vnc:focal\n\nFROM $FROM_IMAGE AS cache\n\nARG USER_ID\nARG GROUP_ID\n\n# Check for mandatory build arguments\nRUN : \"${USER_ID:?Build argument needs to be set and non-empty.}\" && \\\n    : \"${GROUP_ID:?Build argument needs to be set and non-empty.}\"\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y locales curl gnupg2 lsb-release wget git sudo unzip && \\\n    locale-gen en_US en_US.UTF-8 && \\\n    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \\\n    export LANG=en_US.UTF-8 && \\\n    curl -f -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add - && \\\n    sh -c 'echo \"deb http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros2-latest.list' && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV LANG en_US.UTF-8\n\n# Some ROS environment variables\nENV ROS_DISTRO=\"foxy\"\nENV ROS_PYTHON_VERSION=\"3\"\nENV ROS_VERSION=\"2\"\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y tzdata && \\\n    apt-get install --no-install-recommends -y \\\n      ros-${ROS_DISTRO}-desktop && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Error with a ros1-bridge dependency if we install ros-eloquent-ros2bag*\n# so install each package individually igoring the package with the\n# ros1-bridge dependency\n# Actually according to https://index.ros.org/r/rosbag2/, we only need\n# ros2bag and rosbag2-transport for ROS 2 (need to verify this claim)\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      ros-${ROS_DISTRO}-image-common \\\n      ros-${ROS_DISTRO}-image-pipeline \\\n      # ros-${ROS_DISTRO}-rosbag2-dbgsym \\\n      ros-${ROS_DISTRO}-ros2bag \\\n      ros-${ROS_DISTRO}-rosbag2-storage-default-plugins-dbgsym \\\n      ros-${ROS_DISTRO}-rosbag2-test-common \\\n      ros-${ROS_DISTRO}-rosbag2-converter-default-plugins \\\n      ros-${ROS_DISTRO}-rosbag2-tests \\\n      ros-${ROS_DISTRO}-rosbag2-storage-dbgsym \\\n      ros-${ROS_DISTRO}-rosbag2-storage \\\n      ros-${ROS_DISTRO}-rosbag2-storage-default-plugins \\\n      ros-${ROS_DISTRO}-rosbag2 \\\n      ros-${ROS_DISTRO}-rosbag2-converter-default-plugins-dbgsym \\\n      ros-${ROS_DISTRO}-rosbag2-transport \\\n      ros-${ROS_DISTRO}-rosbag2-transport-dbgsym && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n     google-mock \\\n\tlibceres-dev \\\n\tliblua5.3-dev \\\n\tlibboost-dev \\\n\tlibboost-iostreams-dev \\\n\tlibprotobuf-dev \\\n\tprotobuf-compiler \\\n\tlibcairo2-dev \\\n\tlibpcl-dev \\\n\tpython3-sphinx && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gazebo11 libgazebo11-dev \\\n         ros-${ROS_DISTRO}-test-msgs && \\\n    apt-get install --no-install-recommends -y \\\n            python3-argcomplete \\\n         python3-vcstool \\\n         python3-rosdep \\\n\t\t\t\t\tpython3-colcon-common-extensions \\\n\t\t\t\t\tpython3-pip && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Set up hadabot user\n\nENV SHELL=/bin/bash\n\nRUN addgroup --gid $GROUP_ID hadabot && \\\n    adduser --gecos '' --disabled-password --uid $USER_ID --gid $GROUP_ID hadabot && \\\n    adduser hadabot sudo && \\\n    echo \"hadabot ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd\n\nWORKDIR /root\n\n# New way to install code server\n# https://github.com/cdr/code-server/blob/master/doc/install.md#debian-ubuntu\nARG CS_VERSION=3.4.1\nRUN mkdir -p code_server && cd code_server && \\\n    curl -fOL https://github.com/cdr/code-server/releases/download/v${CS_VERSION}/code-server_${CS_VERSION}_amd64.deb && \\\n    dpkg -i code-server_${CS_VERSION}_amd64.deb && \\\n    rm code-server_*.deb\n\nRUN echo \"[program:codeserver]\" >> /etc/supervisor/conf.d/codeserver.conf && \\\n    echo \"user=hadabot\" >> /etc/supervisor/conf.d/codeserver.conf && \\\n    echo \"command=/usr/bin/code-server --host 0.0.0.0 --auth none --disable-telemetry\" >> /etc/supervisor/conf.d/codeserver.conf\n\n# Other packages we need\nENV RMW_IMPLEMENTATION=\"rmw_cyclonedds_cpp\"\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        gdb \\\n        python3-pip \\\n        virtualenvwrapper && \\\n    apt-get install --no-install-recommends -y \\\n        ros-${ROS_DISTRO}-rmw-cyclonedds-cpp \\\n        ros-${ROS_DISTRO}-navigation2 \\\n        ros-${ROS_DISTRO}-nav2-bringup \\\n        ros-${ROS_DISTRO}-tf-transformations && \\\n    rm -rf /var/lib/apt/lists/*\n\nUSER hadabot\n\nWORKDIR /home/hadabot\nENV HOME=$WORKDIR\n\n# Explicitly download correct cpptools-linux version since code-server downloads the wrong cpptools aarch version which causes exceptions - https://github.com/cdr/code-server/issues/2120 and https://github.com/hadabot/hadabot_main/issues/10\n# code-server --install-extension ms-vscode.cpptools && \\   \n# Newer python extension also has issues\n# https://github.com/microsoft/vscode-python/releases/download/2020.7.94776/ms-python-release.vsix\nRUN wget https://github.com/microsoft/vscode-cpptools/releases/download/1.0.1/cpptools-linux.vsix && \\\n    wget https://github.com/microsoft/vscode-python/releases/download/2020.5.86806/ms-python-release.vsix && \\\n    code-server --verbose --install-extension cpptools-linux.vsix && \\\n    code-server --verbose --install-extension ms-python-release.vsix && \\\n    rm cpptools-linux.vsix && \\\n    rm ms-python-release.vsix && \\\n    code-server --install-extension twxs.cmake && \\\n    /usr/bin/python3 -m pip install -U numpy mypy autopep8 flake8 jupyterlab pandas transforms3d scipy --user && \\\n    echo \"source /usr/share/virtualenvwrapper/virtualenvwrapper.sh\" >> .bashrc\n\n\n# Install ROS vscode extension\nCOPY --chown=hadabot:hadabot ./config_files/vscode-ros-dev-vsix.zip ./\nRUN unzip vscode-ros-dev-vsix.zip && \\\n    code-server --install-extension vscode-ros-dev.vsix && \\\n    rm vscode-ros-dev*.*\n\nENV PATH=$PATH:/home/hadabot/.local/bin\n\nCOPY --chown=hadabot:hadabot ./config_files/settings.json .local/share/code-server/User/\nCOPY --chown=hadabot:hadabot ./config_files/coder.json .local/share/code-server/\n\nUSER root\n\nENV USER=hadabot\nENTRYPOINT [\"/startup.sh\"]"
}