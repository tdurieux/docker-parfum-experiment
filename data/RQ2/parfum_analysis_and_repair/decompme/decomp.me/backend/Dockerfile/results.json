{
  "startTime": 1674247973753,
  "endTime": 1674247974771,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 25,
        "columnStart": 25,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 46,
        "columnStart": 25,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 25,
        "columnStart": 25,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:21.04 as base\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    python3-pip \\\n    python3 \\\n    python-is-python3 \\\n    python3.9-venv && rm -rf /var/lib/apt/lists/*;\n\n\nFROM base AS nsjail\n\nRUN apt-get -y update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    bison \\\n    flex \\\n    gcc \\\n    g++ \\\n    git \\\n    libprotobuf-dev \\\n    libnl-route-3-dev \\\n    libtool \\\n    make \\\n    pkg-config \\\n    protobuf-compiler && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone \"https://github.com/google/nsjail\" --recursive --branch 3.1 /nsjail \\\n    && cd /nsjail \\\n    && make\n\n\nFROM base AS build\n\nRUN apt-get -y update && apt-get install --no-install-recommends -y \\\n    binutils-mips-linux-gnu \\\n    binutils-powerpc-linux-gnu \\\n    binutils-aarch64-linux-gnu \\\n    curl \\\n    gcc-mips-linux-gnu \\\n    libnl-route-3-200 \\\n    libprotobuf-dev \\\n    netcat \\\n    unzip \\\n    wget \\\n    libtinfo5 \\\n    libc6-dev-i386 \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | \\\n  POETRY_VERSION=1.1.13 POETRY_HOME=/etc/poetry python -\n\nCOPY --from=nsjail /nsjail/nsjail /bin/nsjail\n\n# windows compilers need i386 wine\nARG ENABLE_NDS_SUPPORT\nARG ENABLE_PS1_SUPPORT\nARG ENABLE_WII_GC_SUPPORT\nRUN if [ \"${ENABLE_NDS_SUPPORT}\" = \"YES\" ] || \\\n       [ \"${ENABLE_PS1_SUPPORT}\" = \"YES\" ] || \\\n       [ \"${ENABLE_WII_GC_SUPPORT}\" = \"YES\" ]; then \\\n    dpkg --add-architecture i386 && apt-get update && \\\n    apt-get install --no-install-recommends -y -o APT::Immediate-Configure=false \\\n        wine; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# ps1 specifics\nRUN if [ \"${ENABLE_PS1_SUPPORT}\" = \"YES\" ] ; then \\\n    apt-get install --no-install-recommends -y dos2unix; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# gc/wii specifics\nCOPY --from=devkitpro/devkitppc:20210726 /opt/devkitpro/devkitPPC/bin/powerpc* /usr/bin/\n\n# nds specifics\nCOPY --from=devkitpro/devkitarm:20210726 /opt/devkitpro/devkitARM/bin/arm* /usr/bin/\n\n# download compilers\nCOPY compilers/download.py /compilers/\n\nARG ENABLE_GBA_SUPPORT\nARG ENABLE_N64_SUPPORT\nARG ENABLE_SWITCH_SUPPORT\n\nENV ENABLE_GBA_SUPPORT=${ENABLE_GBA_SUPPORT}\nENV ENABLE_WII_GC_SUPPORT=${ENABLE_WII_GC_SUPPORT}\nENV ENABLE_N64_SUPPORT=${ENABLE_N64_SUPPORT}\nENV ENABLE_NDS_SUPPORT=${ENABLE_NDS_SUPPORT}\nENV ENABLE_PS1_SUPPORT=${ENABLE_PS1_SUPPORT}\nENV ENABLE_SWITCH_SUPPORT=${ENABLE_SWITCH_SUPPORT}\n\nRUN pip install --no-cache-dir requests tqdm && python3 /compilers/download.py && rm -rf /compilers/download_cache/\n\nWORKDIR /backend\n\nENV WINEPREFIX=/tmp/wine\n\n# create a non-root user & /sandbox with correct ownership\nRUN useradd --create-home user \\\n    && mkdir -p /sandbox \\\n    && chown -R user:user /sandbox \\\n    && mkdir -p \"${WINEPREFIX}\" \\\n    && chown user:user \"${WINEPREFIX}\"\n\n# switch to non-root user\nUSER user\n\n# initialize wine files to /home/user/.wine\nRUN if [ \"${ENABLE_PS1_SUPPORT}\" = \"YES\" ] || \\\n       [ \"${ENABLE_WII_GC_SUPPORT}\" = \"YES\" ] || \\\n       [ \"${ENABLE_NDS_SUPPORT}\" = \"YES\" ]; then \\\n    wineboot --init; \\\n    fi\n\nENV PATH=\"$PATH:/etc/poetry/bin\"\n\nENTRYPOINT [\"/backend/docker_entrypoint.sh\"]\n\n# TODO: nginx server to proxy-pass frontend/backend in order to preserve cookies\n"
}