{
  "startTime": 1674253568556,
  "endTime": 1674253569133,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\n# THIS IS A DEVCONTAINER\n# This is not a production-ready Dockerfile.\n# See the documentation here to see why devcontainers are awesome:\n# https://code.visualstudio.com/docs/remote/containers\n\n# Install a bunch of stuff from the standard repositories\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        apache2 \\\n        bash-completion \\\n        curl \\\n        git \\\n        gpg \\\n        htop \\\n        mysql-client \\\n        p7zip \\\n        shellcheck \\\n        software-properties-common \\\n        sudo \\\n        tmux \\\n        unzip \\\n        vim && rm -rf /var/lib/apt/lists/*;\n\n# PPAs - additional software from questionable sources go here...\n# Namely, pulling in PHP 5.6 here from a repo\nRUN add-apt-repository ppa:ondrej/php && apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        php5.6 \\\n        php5.6-bcmath \\\n        php5.6-curl \\\n        php5.6-gd \\\n        php5.6-mysql \\\n        php5.6-zip \\\n        php5.6-mbstring \\\n        php5.6-xml && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"column-statistics = 0\" | tee -a /etc/mysql/conf.d/mysqldump.cnf\n\n# Copy the custom Apache2 config (blis.conf) into the\n# Apache2 configuration directory and enable it.\nCOPY docker/config/blis-dev.conf /etc/apache2/sites-available/blis.conf\nRUN rm /etc/apache2/sites-enabled/000-default.conf && \\\n    ln -s /etc/apache2/sites-available/blis.conf /etc/apache2/sites-enabled/blis.conf && \\\n    a2enmod rewrite\n\n# Copy custom php.ini into the container\nRUN cp /etc/php/5.6/apache2/php.ini /etc/php/5.6/apache2/php.ini.original\nCOPY docker/config/php.ini /etc/php/5.6/apache2/php.ini\n\nCOPY docker/bin/start-blis.sh /usr/bin/\n\n# Modify the www-data user (which Apache runs as) to be usable by us and give it password-less sudo\n# Also add the www-data user to the adm group so we can view some logs\nRUN groupadd vscode && \\\n    useradd -m -s /bin/bash -g vscode vscode && \\\n    usermod -aG sudo vscode && \\\n    usermod -aG adm vscode && \\\n    usermod -aG www-data vscode && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\nUSER vscode\nWORKDIR /workspace\n"
}