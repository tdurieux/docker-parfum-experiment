{
  "startTime": 1674249616026,
  "endTime": 1674249616831,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\n# Install a bunch of stuff from the standard repositories\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        apache2 \\\n        curl \\\n        gpg \\\n        htop \\\n        mysql-client \\\n        software-properties-common \\\n        certbot \\\n        python3-certbot-apache \\\n        sudo && rm -rf /var/lib/apt/lists/*;\n\n# PPAs - additional software from questionable sources go here...\n# Namely, pulling in PHP 5.6 here from a repo\nRUN add-apt-repository ppa:ondrej/php && apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        php5.6 \\\n        php5.6-bcmath \\\n        php5.6-curl \\\n        php5.6-gd \\\n        php5.6-mysql \\\n        php5.6-zip \\\n        php5.6-mbstring \\\n        php5.6-xml && rm -rf /var/lib/apt/lists/*;\n\n# This is a mysqldump configuration option required in this environment to\n# preserve backwards compatibility with earlier versions of mysqldump\nRUN echo \"column-statistics = 0\" | tee -a /etc/mysql/conf.d/mysqldump.cnf\n\n# Copy the custom Apache2 config (blis.conf) into the\n# Apache2 configuration directory. This will be enabled by the start-blis.sh\nCOPY docker/config/blis-release.conf /etc/apache2/blis-release.conf\n\n# Enable Apache2 modules needed by application and disable default site\nRUN a2enmod rewrite socache_shmcb ssl && a2dissite 000-default\n\n# Copy custom PHP config into the container\nCOPY docker/config/php.ini /etc/php/5.6/apache2/php.ini\n\n# Copy utility scripts to /usr/bin\nCOPY docker/bin/set-apache2-servername.py /usr/bin/\nCOPY docker/bin/get-https-cert.sh /usr/bin/\nCOPY docker/bin/start-blis.sh /usr/bin/\n\n# Copy all of the BLIS files into the container\nRUN mkdir /var/www/blis\nCOPY . /var/www/blis\nRUN chown -R www-data:www-data /var/www\n\n# Expose port 80 for HTTP, 443 for HTTPS (optionally)\nEXPOSE 80\nEXPOSE 443\n\nCMD start-blis.sh && tail -f /var/log/apache2/error.log\n"
}