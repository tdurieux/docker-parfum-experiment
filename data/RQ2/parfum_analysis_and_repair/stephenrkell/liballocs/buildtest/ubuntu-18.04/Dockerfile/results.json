{
  "startTime": 1674255298848,
  "endTime": 1674255299943,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 24,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 99
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 103
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG user\nRUN apt-get update && apt-get install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\nRUN adduser ${user:-user} && \\\n    echo \"${user:-user} ALL=(root) NOPASSWD:ALL\" > /etc/sudoers && \\\n    chmod 0440 /etc/sudoers\nRUN mkdir -p /usr/local/src && chown root:user /usr/local/src && \\\n   chmod g+w /usr/local/src\nUSER ${user:-user}\nRUN sudo mkdir -p /usr/lib/meta && sudo chown root:staff /usr/lib/meta && \\\n   sudo chmod g+w /usr/lib/meta\nRUN sudo apt-get install --no-install-recommends -y git git build-essential libelf-dev libdw-dev binutils-dev \\\n       autoconf automake libtool pkg-config autoconf-archive \\\n       g++ ocaml ocamlbuild ocaml-findlib \\\n       default-jre-headless default-jdk-headless python3 python \\\n       make gawk gdb wget \\\n       libunwind-dev libc6-dev-i386 zlib1g-dev libc6-dbg \\\n       libboost-iostreams-dev libboost-regex-dev libboost-serialization-dev libboost-filesystem-dev git && rm -rf /var/lib/apt/lists/*;\nRUN cd /usr/local/src && git clone https://github.com/stephenrkell/liballocs.git\nRUN cd /usr/local/src/liballocs && \\\n   git submodule update --init --recursive && \\\n   make -C contrib -j4\nRUN cd /usr/local/src/liballocs && \\\n   ./autogen.sh && \\\n   ( . contrib/env.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local) && \\\n   make -j4\nRUN sudo mkdir -p /usr/lib/meta && sudo chown root:user /usr/lib/meta && \\\n   sudo chmod g+w /usr/lib/meta\nRUN cd /usr/local/src/liballocs && \\\n   make -f tools/Makefile.meta /usr/lib/meta/lib/x86_64-linux-gnu/libc-2.27.so-meta.so\n"
}