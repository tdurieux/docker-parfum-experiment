{
  "startTime": 1674252641751,
  "endTime": 1674252642172,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.15.4-alpine as node\n\n# Build stage\nFROM node AS builder\nLABEL author=\"Siyavash Habashi (ghashange) / Ronald Dehuysser (Bringme)\"\n\nENV DOCKER_BUILD=\"true\"\n\n# the directory for your app within the docker image\n# NOTE: if you need to change this, change the $CERT_WEBROOT_PATH env\nWORKDIR /app\n\n######################################################################################\n# Add your own Dockerfile entries here\n######################################################################################\nCOPY package*.json ./\nRUN npm ci\nCOPY . .\nRUN npm run build\n\n\nFROM node\n# Update the system\nRUN apk --no-cache -U upgrade\n# adds the packages certbot and tini\nRUN apk add --no-cache certbot tini\nENTRYPOINT [\"/sbin/tini\", \"--\"]\n\n# copy and chmod the shell script which will initiate the webroot\nCOPY letsencrypt_webroot.sh /\nRUN chmod +x /letsencrypt_webroot.sh\n\nWORKDIR /usr/src/server\n# Copy package.json and package-lock.json\nCOPY package*.json ./\n# Install only production dependencies\nRUN npm i --only=production && npm cache clean --force;\n# Copy transpiled js from builder stage into the final image\nCOPY --from=builder /app/dist ./dist\n# Copy src/server into final image\nCOPY src/server ./src/server\n\n# port 80 is mandatory for webroot challenge\n# port 443 is mandatory for https\n# port 3000 default port for UI and server in development mode\nEXPOSE 80\nEXPOSE 443\nEXPOSE 3000\n\n# Set all environment variables\nENV DOCKER_BUILD=\"false\"\nENV NODE_ENV=production\nENV API_KEY=sendgrid-api-key\n\n# the command which starts your express server.\nCMD [\"node\", \"./src/server/Server.js\"]"
}