{
  "startTime": 1674253469179,
  "endTime": 1674253469740,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 4
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for quickstart containerised scipy development\n#\n#\n# Usage:\n# ------\n# If you make changes to the Dockerfile you can rebuild the container:\n#\n# docker build .\n# docker push <build-hash> scipy/scipy-dev\n#\n# To use the container use the following command. It assumes that you are in\n# the root folder of the scipy git repository, making it available as\n# /home/scipy in the container. Whatever changes you make to that directory\n# are visible in the host and container.\n# The docker image is retrieved from the scipy dockerhub repository\n#\n# docker run -it --rm -v $PWD/:/home/scipy scipy/scipy-dev /bin/bash\n#\n# The available Python executables are python3.8 (along with\n# pip3.8.\n# The image does not come bundled with cython/numpy/pytest/pybind11, those need to\n# be installed with pip before trying to build/run scipy.\n#\n# pip3 install cython numpy pytest pybind11 pythran matplotlib sphinx asv\n#\n# You can find the detailed guide in:\n# Development environment quickstart guide (Docker)\n# http://scipy.github.io/devdocs/dev/contributor/quickstart_docker.html#quickstart-docker\n\n\n# ubuntu focal has python 3.8 as default\nFROM ubuntu:focal\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\tpython3-pip \\\n\tbuild-essential \\\n\tvim \\\n\tlibatlas-base-dev \\\n\tgfortran \\\n\tlibgfortran4 \\\n\tliblapack-dev \\\n\tcurl \\\n\tlibgmp-dev \\\n\tlibmpfr-dev \\\n\tlibsuitesparse-dev \\\n\tlibmpc-dev \\\n\tgit && rm -rf /var/lib/apt/lists/*;\n\n\n# setup pips and pip3.8\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.8 get-pip.py && rm get-pip.py\n"
}