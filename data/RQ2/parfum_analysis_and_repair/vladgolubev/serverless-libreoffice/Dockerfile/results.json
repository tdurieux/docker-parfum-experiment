{
  "startTime": 1674249414611,
  "endTime": 1674249416022,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 9
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 20,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM amazonlinux:2.0.20190508 as lobuild\n\n# see https://stackoverflow.com/questions/2499794/how-to-fix-a-locale-setting-warning-from-perl\nENV LC_CTYPE=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\n\nENV LIBREOFFICE_VERSION=6.2.1.2\n\n# install basic stuff required for compilation\nRUN yum install -y yum-utils \\\n    && yum-config-manager --enable epel \\\n    && yum install -y \\\n    google-crosextra-caladea-fonts \\\n    autoconf \\\n    ccache \\\n    expat-devel \\\n    expat-devel.x86_64 \\\n    fontconfig-devel \\\n    git \\\n    gmp-devel \\\n    google-crosextra-caladea-fonts \\\n    google-crosextra-carlito-fonts \\\n    gperf \\\n    icu \\\n    libcurl-devel \\\n    liberation-sans-fonts \\\n    liberation-serif-fonts \\\n    libffi-devel \\\n    libICE-devel \\\n    libicu-devel \\\n    libmpc-devel \\\n    libpng-devel \\\n    libSM-devel \\\n    libX11-devel \\\n    libXext-devel \\\n    libXrender-devel \\\n    libxslt-devel \\\n    mesa-libGL-devel \\\n    mesa-libGLU-devel \\\n    mpfr-devel \\\n    nasm \\\n    nspr-devel \\\n    nss-devel \\\n    openssl-devel \\\n    perl-Digest-MD5 \\\n    python34-devel \\\n    which && rm -rf /var/cache/yum# Used by autogen.sh\n\nRUN yum groupinstall -y \"Development Tools\"\n\n# fetch the LibreOffice source\nRUN cd /tmp \\\n    && curl -f -L https://github.com/LibreOffice/core/archive/libreoffice-${LIBREOFFICE_VERSION}.tar.gz | tar -xz \\\n    && mv core-libreoffice-${LIBREOFFICE_VERSION} libreoffice\n\nWORKDIR /tmp/libreoffice\n\n# see https://ask.libreoffice.org/en/question/72766/sourcesver-missing-while-compiling-from-source/\nRUN echo \"lo_sources_ver=${LIBREOFFICE_VERSION}\" >> sources.ver\n\n# install liblangtag (not available in Amazon Linux or EPEL repos)\n# paste repo info from https://unix.stackexchange.com/questions/433046/how-do-i-enable-centos-repositories-on-rhel-red-hat\nCOPY config/centos.repo /etc/yum.repos.d/\nRUN yum repolist && yum install -y liblangtag && cp -r /usr/share/liblangtag /usr/local/share/liblangtag/ && rm -rf /var/cache/yum\n\nRUN ./autogen.sh \\\n    --disable-avahi \\\n    --disable-cairo-canvas \\\n    --disable-coinmp \\\n    --disable-cups \\\n    --disable-cve-tests \\\n    --disable-dbus \\\n    --disable-dconf \\\n    --disable-dependency-tracking \\\n    --disable-evolution2 \\\n    --disable-dbgutil \\\n    --disable-extension-integration \\\n    --disable-extension-update \\\n    --disable-firebird-sdbc \\\n    --disable-gio \\\n    --disable-gstreamer-0-10 \\\n    --disable-gstreamer-1-0 \\\n    --disable-gtk \\\n    --disable-gtk3 \\\n    --disable-introspection \\\n    --disable-kde4 \\\n    --disable-largefile \\\n    --disable-lotuswordpro \\\n    --disable-lpsolve \\\n    --disable-odk \\\n    --disable-ooenv \\\n    --disable-pch \\\n    --disable-postgresql-sdbc \\\n    --disable-python \\\n    --disable-randr \\\n    --disable-report-builder \\\n    --disable-scripting-beanshell \\\n    --disable-scripting-javascript \\\n    --disable-sdremote \\\n    --disable-sdremote-bluetooth \\\n    --enable-mergelibs \\\n    --with-galleries=\"no\" \\\n    --with-system-curl \\\n    --with-system-expat \\\n    --with-system-libxml \\\n    --with-system-nss \\\n    --with-system-openssl \\\n    --with-theme=\"no\" \\\n    --without-export-validation \\\n    --without-fonts \\\n    --without-helppack-integration \\\n    --without-java \\\n    --without-junit \\\n    --without-krb5 \\\n    --without-myspell-dicts \\\n    --without-system-dicts\n\n# Disable flaky unit test failing on macos (and for some reason on Amazon Linux as well)\n# find the line \"void PdfExportTest::testSofthyphenPos()\" (around 600)\n# and replace \"#if !defined MACOSX && !defined _WIN32\" with \"#if defined MACOSX && !defined _WIN32\"\nRUN sed -i '609s/#if !defined MACOSX && !defined _WIN32/#if defined MACOSX \\&\\& !defined _WIN32/' vcl/qa/cppunit/pdfexport/pdfexport.cxx\n\n# this will take 30 minutes to 2 hours to compile, depends on your machine\nRUN make\n\n# this will remove ~100 MB of symbols from shared objects\n# strip will always return exit code 1 as it generates file warnings when hitting directories\nRUN strip ./instdir/**/* || true\n\n# remove unneeded stuff for headless mode\nRUN rm -rf ./instdir/share/gallery \\\n    ./instdir/share/config/images_*.zip \\\n    ./instdir/readmes \\\n    ./instdir/CREDITS.fodt \\\n    ./instdir/LICENSE* \\\n    ./instdir/NOTICE\n\n# test if compilation was successful\nRUN echo \"hello world\" > a.txt \\\n    && ./instdir/program/soffice --headless --invisible --nodefault --nofirststartwizard \\\n        --nolockcheck --nologo --norestore --convert-to pdf --outdir $(pwd) a.txt\n\nRUN tar -cvf /tmp/lo.tar instdir/ && rm /tmp/lo.tar\n\nFROM amazonlinux:2.0.20190508 as brotli\n\nENV BROTLI_VERSION=1.0.7\n\nWORKDIR /tmp\n\n# Compile Brotli\nRUN yum install -y make zip unzip bc autoconf automake libtool \\\n    && curl -f -LO https://github.com/google/brotli/archive/v${BROTLI_VERSION}.zip \\\n    && unzip v${BROTLI_VERSION}.zip \\\n    && cd brotli-${BROTLI_VERSION} \\\n    && ./bootstrap \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install && rm -rf /var/cache/yum\n\nCOPY --from=lobuild /tmp/lo.tar .\n\nRUN brotli --best /tmp/lo.tar && zip -r layers.zip lo.tar.br\n\nFROM amazonlinux:2.0.20190508\n\nCOPY --from=brotli /tmp/layers.zip /tmp\n"
}