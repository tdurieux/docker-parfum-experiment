{
  "startTime": 1674251673897,
  "endTime": 1674251674858,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-slim-buster\n\nARG POLYNOTE_VERSION\nARG SCALA_VERSION=\"2.11\"\nARG DIST_TAR=\"polynote-dist.tar.gz\"\n\nWORKDIR /opt\n\nRUN apt update -y && \\\n    apt install --no-install-recommends -y wget python3 python3-dev python3-pip build-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://github.com/polynote/polynote/releases/download/$POLYNOTE_VERSION/$DIST_TAR && \\\n    tar xfzp $DIST_TAR && \\\n    echo \"DIST_TAR=$DIST_TAR\" && \\\n    rm $DIST_TAR\n\nRUN pip3 install --no-cache-dir -r ./polynote/requirements.txt\n\n# to wrap up, we create (safe)user\nENV UID 1000\nENV NB_USER polly\n\nRUN adduser --disabled-password \\\n    --gecos \"Default user\" \\\n    --uid ${UID} \\\n    ${NB_USER}\n\n# allow user access to the WORKDIR\nRUN chown -R ${NB_USER}:${NB_USER} /opt/\n\n# start image as (safe)user\nUSER ${NB_USER}\n\n# expose the (internal) port that polynote runs on\nEXPOSE 8192\n\n# use the same scala version for server\nENV POLYNOTE_SCALA_VERSION ${SCALA_VERSION}\n\n# start polynote on container run\nENTRYPOINT [\"./polynote/polynote.py\"]\n"
}