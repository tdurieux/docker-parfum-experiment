diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geodels/gospl/dockerhub/Dockerfile-paleoflow b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geodels/gospl/dockerhub/Dockerfile-paleoflow/repaired.Dockerfile
index 6a56f3d..68d70fb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geodels/gospl/dockerhub/Dockerfile-paleoflow
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geodels/gospl/dockerhub/Dockerfile-paleoflow/repaired.Dockerfile
@@ -3,38 +3,38 @@ MAINTAINER Tristan Salles
 
 #Install ubuntu libraires and packages
 RUN apt-get update -y
-RUN apt-get install -y wget python3-pip
+RUN apt-get install --no-install-recommends -y wget python3-pip && rm -rf /var/lib/apt/lists/*;
 
 #Download pygplates and install it
 ADD pygplates_2.0_amd64.deb .
-RUN apt-get install -y ./pygplates_2.0_amd64.deb
+RUN apt-get install --no-install-recommends -y ./pygplates_2.0_amd64.deb && rm -rf /var/lib/apt/lists/*;
 RUN rm pygplates_2.0_amd64.deb
 
 Env PYTHONPATH ${PYTHONPATH}:/usr/lib:/usr/lib/pygplates/revision26/
 
 # install all the python and ipython notebook requirements
-RUN pip3 install --upgrade pip
-RUN pip3 install numpy scipy matplotlib jupyter pandas sympy nose
-RUN pip3 install ipyparallel pyproj pyshp Pillow
-RUN pip3 install moviepy
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip3 install --no-cache-dir numpy scipy matplotlib jupyter pandas sympy nose
+RUN pip3 install --no-cache-dir ipyparallel pyproj pyshp Pillow
+RUN pip3 install --no-cache-dir moviepy
 
-RUN apt-get install libgeos-dev
+RUN apt-get install -y --no-install-recommends libgeos-dev && rm -rf /var/lib/apt/lists/*;
 RUN wget https://github.com/matplotlib/basemap/archive/v1.2.1rel.tar.gz
-RUN tar -vxf v1.2.1rel.tar.gz
+RUN tar -vxf v1.2.1rel.tar.gz && rm v1.2.1rel.tar.gz
 RUN cd basemap-1.2.1rel/ && python3 setup.py install_lib
 RUN rm -rf basemap-1.2.1rel/ v1.2.1rel.tar.gz
 
-RUN pip3 install Cython
-RUN apt-get install -y libproj-dev
+RUN pip3 install --no-cache-dir Cython
+RUN apt-get install --no-install-recommends -y libproj-dev && rm -rf /var/lib/apt/lists/*;
 RUN wget https://github.com/SciTools/cartopy/archive/v0.18.0b1.tar.gz
-RUN tar -vxf v0.18.0b1.tar.gz
+RUN tar -vxf v0.18.0b1.tar.gz && rm v0.18.0b1.tar.gz
 RUN cd cartopy-0.18.0b1/ && python3 setup.py install
 RUN rm -rf cartopy-0.18.0b1/ v0.18.0b1.tar.gz
 
-RUN pip3 install statistics netCDF4
+RUN pip3 install --no-cache-dir statistics netCDF4
 
 RUN pip3 uninstall -y shapely
-RUN pip3 install shapely --no-binary shapely
+RUN pip3 install --no-cache-dir shapely --no-binary shapely
 
 # install things
 RUN apt-get update -qq && \
@@ -74,15 +74,15 @@ ARG MPICH_VERSION="3.3"
 ARG MPICH_CONFIGURE_OPTIONS="--enable-fast=all,O3 --prefix=/opt/mpich"
 ARG MPICH_MAKE_OPTIONS="-j4"
 WORKDIR /tmp/mpich-build
-RUN wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \
+RUN wget https://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \
     tar xvzf mpich-${MPICH_VERSION}.tar.gz && \
-    cd mpich-${MPICH_VERSION}              && \
-    ./configure ${MPICH_CONFIGURE_OPTIONS} && \
-    make ${MPICH_MAKE_OPTIONS}             && \
-    make install                           && \
-    ldconfig                               && \
-    cd /tmp                                && \
-    rm -fr *
+    cd mpich-${MPICH_VERSION} && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" ${MPICH_CONFIGURE_OPTIONS} && \
+    make ${MPICH_MAKE_OPTIONS} && \
+    make install && \
+    ldconfig && \
+    cd /tmp && \
+    rm -fr * && rm mpich-${MPICH_VERSION}.tar.gz
 
 ENV MPI_DIR=/opt/mpich
 ENV PATH=${MPI_DIR}/bin:$PATH
@@ -90,8 +90,8 @@ ENV PATH=${MPI_DIR}/bin:$PATH
 
 ENV LANG=C.UTF-8
 # Install setuptools and wheel first, needed by plotly
-RUN pip3 install -U setuptools  && \
-    pip3 install -U wheel       && \
+RUN pip3 install --no-cache-dir -U setuptools && \
+    pip3 install --no-cache-dir -U wheel && \
     pip3 install --no-cache-dir packaging \
         appdirs \
         numpy \
@@ -111,30 +111,30 @@ RUN pip3 install -U setuptools  && \
 
 WORKDIR /tmp/petsc-build
 ARG PETSC_VERSION="3.11.2"
-RUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
-    tar zxf petsc-lite-${PETSC_VERSION}.tar.gz && cd petsc-${PETSC_VERSION}
+RUN wget https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
+    tar zxf petsc-lite-${PETSC_VERSION}.tar.gz && cd petsc-${PETSC_VERSION} && rm petsc-lite-${PETSC_VERSION}.tar.gz
 
 
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1
 
-RUN  cd /tmp/petsc-build/petsc-${PETSC_VERSION}; ./configure --with-debugging=0 --prefix=/opt/petsc                     \
+RUN cd /tmp/petsc-build/petsc-${PETSC_VERSION}; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-debugging=0 --prefix=/opt/petsc \
                 --COPTFLAGS="-g -O3" --CXXOPTFLAGS="-g -O3" --FOPTFLAGS="-g -O3" \
-                --with-zlib=1                   \
-                --download-fblaslapack=1        \
-                --download-ctetgen=1            \
-                --download-triangle=1           \
-                --download-hdf5=1               \
-                --download-mumps=1              \
-                --download-parmetis=1           \
-                --download-eigen=1              \
-                --download-metis=1              \
-                --download-hypre=1              \
-                --download-scalapack=1          \
-                --download-pragmatic=1          \
-                --useThreads=1                  \
-                --with-shared-libraries         \
-                --with-cxx-dialect=C++11     && \
-    make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt all     && \
+                --with-zlib=1 \
+                --download-fblaslapack=1 \
+                --download-ctetgen=1 \
+                --download-triangle=1 \
+                --download-hdf5=1 \
+                --download-mumps=1 \
+                --download-parmetis=1 \
+                --download-eigen=1 \
+                --download-metis=1 \
+                --download-hypre=1 \
+                --download-scalapack=1 \
+                --download-pragmatic=1 \
+                --useThreads=1 \
+                --with-shared-libraries \
+                --with-cxx-dialect=C++11 && \
+    make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt all && \
     make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt install && \
     make PETSC_DIR=/opt/petsc PETSC_ARCH="" test && \
     cd /tmp && \
@@ -177,7 +177,7 @@ RUN apt-get update -qq && \
         liblapack-dev \
         libblas-dev \
         libglib2.0-dev \
-        ghostscript
+        ghostscript && rm -rf /var/lib/apt/lists/*;
 
 RUN python3 -m pip install --no-cache-dir setuptools wheel && \
     python3 -m pip install --no-cache-dir \
@@ -192,7 +192,7 @@ RUN python3 -m pip install --no-cache-dir setuptools wheel && \
 # install GMT
 RUN wget https://github.com/GenericMappingTools/gmt/releases/download/6.0.0/gmt-6.0.0-src.tar.xz && \
     tar -xvf gmt-6.0.0-src.tar.xz && \
-    cd gmt-6.0.0/cmake/; cp ConfigUserTemplate.cmake ../ConfigUser.cmake && \
+    cd gmt-6.0.0/cmake/; rm gmt-6.0.0-src.tar.xz cp ConfigUserTemplate.cmake ../ConfigUser.cmake && \
     dpkg -L gmt-gshhg-full && \
     dpkg -L gmt-dcw
 
@@ -207,7 +207,7 @@ RUN cd gmt-6.0.0/build && \
 RUN rm -rf gmt-6.0.0-src.tar.xz && \
     rm -rf gmt-6.0.0
 
-RUN apt-get install -yq --no-install-recommends python3-gdal
+RUN apt-get install -yq --no-install-recommends python3-gdal && rm -rf /var/lib/apt/lists/*;
 
 # install gopspl
 WORKDIR /live/lib