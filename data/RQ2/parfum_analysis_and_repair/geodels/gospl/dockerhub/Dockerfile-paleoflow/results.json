{
  "startTime": 1674221029030,
  "endTime": 1674221031116,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 119,
        "lineEnd": 135,
        "columnStart": 49,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 193,
        "lineEnd": 193,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 209,
        "lineEnd": 209,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 160,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 209,
        "lineEnd": 209,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 209,
        "lineEnd": 209,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER Tristan Salles\n\n#Install ubuntu libraires and packages\nRUN apt-get update -y\nRUN apt-get install --no-install-recommends -y wget python3-pip && rm -rf /var/lib/apt/lists/*;\n\n#Download pygplates and install it\nADD pygplates_2.0_amd64.deb .\nRUN apt-get install --no-install-recommends -y ./pygplates_2.0_amd64.deb && rm -rf /var/lib/apt/lists/*;\nRUN rm pygplates_2.0_amd64.deb\n\nEnv PYTHONPATH ${PYTHONPATH}:/usr/lib:/usr/lib/pygplates/revision26/\n\n# install all the python and ipython notebook requirements\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir numpy scipy matplotlib jupyter pandas sympy nose\nRUN pip3 install --no-cache-dir ipyparallel pyproj pyshp Pillow\nRUN pip3 install --no-cache-dir moviepy\n\nRUN apt-get install -y --no-install-recommends libgeos-dev && rm -rf /var/lib/apt/lists/*;\nRUN wget https://github.com/matplotlib/basemap/archive/v1.2.1rel.tar.gz\nRUN tar -vxf v1.2.1rel.tar.gz && rm v1.2.1rel.tar.gz\nRUN cd basemap-1.2.1rel/ && python3 setup.py install_lib\nRUN rm -rf basemap-1.2.1rel/ v1.2.1rel.tar.gz\n\nRUN pip3 install --no-cache-dir Cython\nRUN apt-get install --no-install-recommends -y libproj-dev && rm -rf /var/lib/apt/lists/*;\nRUN wget https://github.com/SciTools/cartopy/archive/v0.18.0b1.tar.gz\nRUN tar -vxf v0.18.0b1.tar.gz && rm v0.18.0b1.tar.gz\nRUN cd cartopy-0.18.0b1/ && python3 setup.py install\nRUN rm -rf cartopy-0.18.0b1/ v0.18.0b1.tar.gz\n\nRUN pip3 install --no-cache-dir statistics netCDF4\n\nRUN pip3 uninstall -y shapely\nRUN pip3 install --no-cache-dir shapely --no-binary shapely\n\n# install things\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n        bash-completion \\\n        build-essential \\\n        git \\\n        python3-minimal \\\n        python3-dev \\\n        python3-pip \\\n        libxml2-dev \\\n        xorg-dev \\\n        ssh \\\n        curl \\\n        libfreetype6-dev \\\n        libpng-dev \\\n        libxft-dev \\\n        xvfb \\\n        python3-tk \\\n        mesa-utils \\\n        rsync \\\n        vim \\\n        less \\\n        xauth \\\n        swig \\\n        python3-dbg \\\n        cmake \\\n        python3-setuptools \\\n        wget \\\n        zlib1g \\\n        gzip \\\n        gfortran  && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nARG MPICH_VERSION=\"3.3\"\nARG MPICH_CONFIGURE_OPTIONS=\"--enable-fast=all,O3 --prefix=/opt/mpich\"\nARG MPICH_MAKE_OPTIONS=\"-j4\"\nWORKDIR /tmp/mpich-build\nRUN wget https://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \\\n    tar xvzf mpich-${MPICH_VERSION}.tar.gz && \\\n    cd mpich-${MPICH_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" ${MPICH_CONFIGURE_OPTIONS} && \\\n    make ${MPICH_MAKE_OPTIONS} && \\\n    make install && \\\n    ldconfig && \\\n    cd /tmp && \\\n    rm -fr * && rm mpich-${MPICH_VERSION}.tar.gz\n\nENV MPI_DIR=/opt/mpich\nENV PATH=${MPI_DIR}/bin:$PATH\n\n\nENV LANG=C.UTF-8\n# Install setuptools and wheel first, needed by plotly\nRUN pip3 install --no-cache-dir -U setuptools && \\\n    pip3 install --no-cache-dir -U wheel && \\\n    pip3 install --no-cache-dir packaging \\\n        appdirs \\\n        numpy \\\n        jupyter \\\n        plotly \\\n        matplotlib \\\n        pillow \\\n        pyvirtualdisplay \\\n        ipython \\\n        ipyparallel \\\n        pint \\\n        scipy \\\n        tabulate \\\n        scons && \\\n    env MPICC=${MPI_DIR}/mpicc MPICXX=${MPI_DIR}/mpicxx MPIFC=${MPI_DIR}/mpifort python3 -m pip install --no-cache-dir mpi4py\n\n\nWORKDIR /tmp/petsc-build\nARG PETSC_VERSION=\"3.11.2\"\nRUN wget https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \\\n    tar zxf petsc-lite-${PETSC_VERSION}.tar.gz && cd petsc-${PETSC_VERSION} && rm petsc-lite-${PETSC_VERSION}.tar.gz\n\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.6 1\n\nRUN cd /tmp/petsc-build/petsc-${PETSC_VERSION}; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-debugging=0 --prefix=/opt/petsc \\\n                --COPTFLAGS=\"-g -O3\" --CXXOPTFLAGS=\"-g -O3\" --FOPTFLAGS=\"-g -O3\" \\\n                --with-zlib=1 \\\n                --download-fblaslapack=1 \\\n                --download-ctetgen=1 \\\n                --download-triangle=1 \\\n                --download-hdf5=1 \\\n                --download-mumps=1 \\\n                --download-parmetis=1 \\\n                --download-eigen=1 \\\n                --download-metis=1 \\\n                --download-hypre=1 \\\n                --download-scalapack=1 \\\n                --download-pragmatic=1 \\\n                --useThreads=1 \\\n                --with-shared-libraries \\\n                --with-cxx-dialect=C++11 && \\\n    make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt all && \\\n    make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt install && \\\n    make PETSC_DIR=/opt/petsc PETSC_ARCH=\"\" test && \\\n    cd /tmp && \\\n    rm -fr *\n\nENV PETSC_DIR=/opt/petsc\nENV PATH=${PETSC_DIR}/bin:$PATH\n\nENV PYTHONPATH $PYTHONPATH:/usr/lib\nRUN CC=h5pcc HDF5_MPI=\"ON\" HDF5_DIR=${PETSC_DIR} python3 -m pip install --no-cache-dir --no-binary=h5py h5py && \\\n    python3 -m pip install --no-cache-dir petsc4py==3.11.0\n\n# install extras in a new layer\nRUN python3 -m pip install --no-cache-dir \\\n        ipython \\\n        jupyter\n\nENV PETSC_DIR=/opt/petsc\nENV PETSC_ARCH=arch-linux-c-opt\nENV PYTHONPATH ${PYTHONPATH}:/usr/lib:/usr/lib/pygplates/revision26/\n\n# install things\nRUN apt-get update -qq && \\\n    apt-get install -yq --no-install-recommends \\\n        cdftools \\\n        cmake \\\n        build-essential \\\n        libcurl4-gnutls-dev \\\n        libnetcdf-dev \\\n        gawk \\\n        gmt-gshhg-full \\\n        gmt-dcw \\\n        graphicsmagick \\\n        ffmpeg \\\n        xdg-utils \\\n        gdal-bin \\\n        libgdal-dev \\\n        libfftw3-dev \\\n        libpcre3-dev \\\n        liblapack-dev \\\n        libblas-dev \\\n        libglib2.0-dev \\\n        ghostscript && rm -rf /var/lib/apt/lists/*;\n\nRUN python3 -m pip install --no-cache-dir setuptools wheel && \\\n    python3 -m pip install --no-cache-dir \\\n    pathlib \\\n    pandas \\\n    meshio \\\n    shapely \\\n    meshplex \\\n    ruamel.yaml \\\n    stripy\n\n# install GMT\nRUN wget https://github.com/GenericMappingTools/gmt/releases/download/6.0.0/gmt-6.0.0-src.tar.xz && \\\n    tar -xvf gmt-6.0.0-src.tar.xz && \\\n    cd gmt-6.0.0/cmake/; rm gmt-6.0.0-src.tar.xz cp ConfigUserTemplate.cmake ../ConfigUser.cmake && \\\n    dpkg -L gmt-gshhg-full && \\\n    dpkg -L gmt-dcw\n\nRUN mkdir gmt-6.0.0/build && \\\n    cd gmt-6.0.0/build && \\\n    cmake ..\n\nRUN cd gmt-6.0.0/build && \\\n    cmake --build . && \\\n    cmake --build . --target install\n\nRUN rm -rf gmt-6.0.0-src.tar.xz && \\\n    rm -rf gmt-6.0.0\n\nRUN apt-get install -yq --no-install-recommends python3-gdal && rm -rf /var/lib/apt/lists/*;\n\n# install gopspl\nWORKDIR /live/lib\nRUN git clone --depth=1 https://github.com/Geodels/gospl.git && \\\n    cd gospl && \\\n    export F90=gfortran && \\\n    export PETSC_DIR=/opt/petsc && \\\n    export PETSC_ARCH=arch-linux-c-opt && \\\n    python3 setup.py install\n\n#RUN git clone --depth=1 https://github.com/badlands-model/badlands.git && \\\n#    cd badlands/badlands && \\\n#    python3 setup.py install --user\nRUN python3 -m pip install --no-cache-dir badlands==2.0.24\n\n# setup space for working in\nVOLUME /live/share\nWORKDIR /live\n\nENV LD_LIBRARY_PATH=/live/lib/:/live/share\n\n\n# Add Tini. Tini operates as a process subreaper for jupyter. This prevents\n# kernel crashes.\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/v0.18.0/tini /usr/bin/tini\nRUN chmod +x /usr/bin/tini\nENTRYPOINT [\"/usr/bin/tini\", \"--\"]\n\n\nEXPOSE 8888\n\n# launch notebook\nADD run-jupyter.sh /usr/local/bin/run-jupyter.sh\nRUN chmod +x /usr/local/bin/run-jupyter.sh\nADD bashrc-term /root/.bashrc\nCMD /usr/local/bin/run-jupyter.sh\n"
}