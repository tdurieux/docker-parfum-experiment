diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geodels/gospl/dockerhub/Dockerfile-debian b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geodels/gospl/dockerhub/Dockerfile-debian/repaired.Dockerfile
index 05e97c4..8de33da 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geodels/gospl/dockerhub/Dockerfile-debian
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geodels/gospl/dockerhub/Dockerfile-debian/repaired.Dockerfile
@@ -38,23 +38,23 @@ ARG MPICH_VERSION="3.4.3"
 ARG MPICH_CONFIGURE_OPTIONS="--enable-fast=all,O3 --prefix=/opt/mpich --with-device=ch3"
 ARG MPICH_MAKE_OPTIONS="-j4"
 WORKDIR /tmp/mpich-build
-RUN wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \
+RUN wget https://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \
     tar xvzf mpich-${MPICH_VERSION}.tar.gz && \
-    cd mpich-${MPICH_VERSION}              && \
-    FFLAGS=-fallow-argument-mismatch ./configure ${MPICH_CONFIGURE_OPTIONS} && \
-    make ${MPICH_MAKE_OPTIONS}             && \
-    make install                           && \
-    ldconfig                               && \
-    cd /tmp                                && \
-    rm -fr *
+    cd mpich-${MPICH_VERSION} && \
+    FFLAGS=-fallow-argument-mismatch ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" ${MPICH_CONFIGURE_OPTIONS} && \
+    make ${MPICH_MAKE_OPTIONS} && \
+    make install && \
+    ldconfig && \
+    cd /tmp && \
+    rm -fr * && rm mpich-${MPICH_VERSION}.tar.gz
 
 ENV MPI_DIR=/opt/mpich
 ENV PATH=${MPI_DIR}/bin:$PATH
 
 ENV LANG=C.UTF-8
 # Install setuptools and wheel first, needed by plotly
-RUN pip3 install -U setuptools  && \
-    pip3 install -U wheel       && \
+RUN pip3 install --no-cache-dir -U setuptools && \
+    pip3 install --no-cache-dir -U wheel && \
     pip3 install --no-cache-dir packaging \
         appdirs \
         numpy \
@@ -78,30 +78,30 @@ RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
 
 WORKDIR /tmp/petsc-build
 ARG PETSC_VERSION="3.16.1"
-RUN wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
-    tar zxf petsc-lite-${PETSC_VERSION}.tar.gz && cd petsc-${PETSC_VERSION}   && \
-    ./configure --with-debugging=0 --prefix=/opt/petsc                     \
+RUN wget https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
+    tar zxf petsc-lite-${PETSC_VERSION}.tar.gz && cd petsc-${PETSC_VERSION} && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-debugging=0 --prefix=/opt/petsc \
                 --COPTFLAGS="-g -O3" --CXXOPTFLAGS="-g -O3" --FOPTFLAGS="-g -O3" \
-                --with-zlib=1                   \
-                --download-fblaslapack=1        \
-                --download-ctetgen=1            \
-                --download-triangle=1           \
-                --download-hdf5=1               \
-                --download-mumps=1              \
-                --download-parmetis=1           \
-                --download-eigen=1              \
-                --download-metis=1              \
-                --download-hypre=1              \
-                --download-scalapack=1          \
-                --download-pragmatic=1          \
-                --useThreads=1                  \
-                --with-shared-libraries         \
-                --with-cxx-dialect=C++11     && \
-    make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt all     && \
+                --with-zlib=1 \
+                --download-fblaslapack=1 \
+                --download-ctetgen=1 \
+                --download-triangle=1 \
+                --download-hdf5=1 \
+                --download-mumps=1 \
+                --download-parmetis=1 \
+                --download-eigen=1 \
+                --download-metis=1 \
+                --download-hypre=1 \
+                --download-scalapack=1 \
+                --download-pragmatic=1 \
+                --useThreads=1 \
+                --with-shared-libraries \
+                --with-cxx-dialect=C++11 && \
+    make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt all && \
     make PETSC_DIR=/tmp/petsc-build/petsc-${PETSC_VERSION} PETSC_ARCH=arch-linux-c-opt install && \
     make PETSC_DIR=/opt/petsc PETSC_ARCH="" check && \
     cd /tmp && \
-    rm -fr *
+    rm -fr * && rm petsc-lite-${PETSC_VERSION}.tar.gz
 
 ENV PETSC_DIR=/opt/petsc
 ENV PATH=${PETSC_DIR}/bin:$PATH
@@ -119,8 +119,8 @@ RUN python3 -m pip install --no-cache-dir \
         jupyter
 
 # Install Tini.. this is required because CMD (below) doesn't play nice with notebooks for some reason: https://github.com/ipython/ipython/issues/7062, https://github.com/jupyter/notebook/issues/334
-RUN curl -L https://github.com/krallin/tini/releases/download/v0.10.0/tini > tini && \
-    echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0 *tini" | sha256sum -c - && \
+RUN curl -f -L https://github.com/krallin/tini/releases/download/v0.10.0/tini > tini && \
+    echo "1361527f39190a7338a0b434bd8c88ff7233ce7b9a4876f3315c22fce7eca1b0  *tini" | sha256sum -c - && \
     mv tini /usr/local/bin/tini && \
     chmod +x /usr/local/bin/tini