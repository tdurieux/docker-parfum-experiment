diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mapmint/mapmint/docker/stable/Dockerfile.mapmint b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mapmint/mapmint/docker/stable/Dockerfile.mapmint/repaired.Dockerfile
index f7701e4..771b364 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mapmint/mapmint/docker/stable/Dockerfile.mapmint
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mapmint/mapmint/docker/stable/Dockerfile.mapmint/repaired.Dockerfile
@@ -37,15 +37,15 @@ RUN set -ex \
     && add-apt-repository ppa:ubuntugis/ppa \
     && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \
     && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' \
-    \
-    && apt-get install -y $RUN_DEPS \
-    && curl -o libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb http://launchpadlibrarian.net/309343863/libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \
-    && curl -o libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb http://launchpadlibrarian.net/309343864/libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \
+
+    && apt-get install --no-install-recommends -y $RUN_DEPS \
+    && curl -f -o libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb https://launchpadlibrarian.net/309343863/libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \
+    && curl -f -o libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb https://launchpadlibrarian.net/309343864/libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \
     && dpkg --force-depends -i libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \
     && dpkg --force-depends -i libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \
     && apt  -y --fix-broken install \
     && rm /libmozjs185*.deb \
-    \
+
     && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
     && rm -rf /var/lib/apt/lists/*
 
@@ -105,12 +105,12 @@ RUN set -ex \
     && find /usr -name otbWrapperApplication.h \
     && find /usr -name "*OTB*so" \
     #&& ./configure --with-python=/usr --with-pyvers=3.6 --with-js=/usr --with-mapserver=/usr --with-ms-version=7 --with-json=/usr --with-r=/usr --prefix=/usr --with-otb=/usr/ --with-itk=/usr --with-otb-version=7.0 --with-itk-version=4.12 --with-saga=/usr --with-saga-version=7.2 --with-wx-config=/usr/bin/wx-config \
-    && ./configure --with-python=/usr --with-pyvers=3.6 --with-js=/usr --with-mapserver=/usr --with-ms-version=7 --with-json=/usr --with-r=/usr --prefix=/usr --with-otb=/usr/ --with-itk=/usr --with-otb-version=6.6 --with-itk-version=4.12 --with-saga=/usr --with-saga-version=7.2 --with-wx-config=/usr/bin/wx-config \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-python=/usr --with-pyvers=3.6 --with-js=/usr --with-mapserver=/usr --with-ms-version=7 --with-json=/usr --with-r=/usr --prefix=/usr --with-otb=/usr/ --with-itk=/usr --with-otb-version=6.6 --with-itk-version=4.12 --with-saga=/usr --with-saga-version=7.2 \
     && make \
     && make install \
-    \
-    && locale-gen en_US.UTF-8 \    
-    && for i in fr_FR it_IT ja_JP; do msgfmt locale/po/$i.po -o /usr/share/locale/$(echo $i | cut -d'_' -f1)/LC_MESSAGES/zoo-kernel.mo ; done\
+
+    && locale-gen en_US.UTF-8 \
+    && for i in fr_FR it_IT ja_JP; do msgfmt locale/po/$i.po -o /usr/share/locale/$(echo $i | cut -d'_' -f1)/LC_MESSAGES/zoo-kernel.mo ; done \
     && for i in fi es zh_CN; do msgfmt locale/po/$i.po -o /usr/share/locale/$i/LC_MESSAGES/zoo-kernel.mo ; done \
     && find /usr/share/locale -name "*mo" \
     # TODO: why not copied by 'make'?
@@ -124,12 +124,12 @@ RUN set -ex \
     && cp ../zoo-services/hello-r/cgi-env/* /usr/lib/cgi-bin/ \
     && cp ../zoo-api/js/* /usr/lib/cgi-bin/ \
     && cp ../zoo-api/r/minimal.r /usr/lib/cgi-bin/ \
-    \
+
     && cp oas.cfg /usr/lib/cgi-bin/ \
-    \
+
     # TODO: main.cfg is not processed \
     && prefix=/usr envsubst < main.cfg > /usr/lib/cgi-bin/main.cfg \
-    \
+
     #Comment lines below from here if no OTB \
     && mkdir otb_build \
     && cd otb_build \
@@ -142,7 +142,7 @@ RUN set -ex \
     && cp *zcfg /usr/lib/cgi-bin/OTB \
     #&& for i in *zcfg; do cp $i /usr/lib/cgi-bin/$i ; j="$(echo $i | sed "s:.zcfg::g")" ; sed "s:$j:OTB_$j:g" -i  /usr/lib/cgi-bin/OTB_$i ; done \
     #Comment lines before this one if no OTB \
-    \
+
     #Comment lines below from here if no SAGA \
     && cd .. \
     && make -C ../../../thirds/saga2zcfg \
@@ -158,10 +158,10 @@ RUN set -ex \
     && cp -r * /usr/lib/cgi-bin/SAGA \
     #Remove OTB if not built or SAGA if no SAGA \
     && for j in OTB SAGA ; do for i in $(find /usr/lib/cgi-bin/$j/ -name "*zcfg"); do sed "s:image/png:image/png\n     useMapserver = true\n     msClassify = true:g;s:text/xml:text/xml\n     useMapserver = true:g;s:mimeType = application/x-ogc-aaigrid:mimeType = application/x-ogc-aaigrid\n   </Supported>\n   <Supported>\n     mimeType = image/png\n     useMapserver=true:g" -i $i; done; done \
-    \
+
     && cd ../.. \
     #Comment lines before this one if nor OTB nor SAGA \
-    \
+
     && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
     && rm -rf /var/lib/apt/lists/*
 
@@ -236,20 +236,20 @@ RUN set -ex \
     && cd / \
     #&& git clone https://github.com/mapmint/mapmint.git \
     && cd zoo-project/mapmint/mapmint-services/ \
-    && for i in *-src ; do echo $i; cd $i; sed "s:g++:g++ \${CFLAGS}:g" -i Makefile.in ; autoconf; ./configure --with-zoo-kernel=/zoo-project/zoo-project/zoo-kernel --with-mapserver=/usr ; make ; cd .. ; done \
+    && for i in *-src; do echo $i; cd $i; sed "s:g++:g++ \${CFLAGS}:g" -i Makefile.in ; autoconf; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-zoo-kernel=/zoo-project/zoo-project/zoo-kernel --with-mapserver=/usr; make ; cd .. ;done \
     && cd ../.. \
-    && curl -o qrencode-3.4.1.tar.gz https://fukuchi.org/works/qrencode/qrencode-3.4.1.tar.gz \
+    && curl -f -o qrencode-3.4.1.tar.gz https://fukuchi.org/works/qrencode/qrencode-3.4.1.tar.gz \
     && tar -xvf qrencode-3.4.1.tar.gz \
     && cd qrencode-3.4.1 \
-    && ./configure && make && make install \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install \
     && cd .. \
     && pwd && ls && ls zoo-project \
     && cd /zoo-project/zoo-project/zoo-services/qrencode \
     && make \
     && cp cgi-env/* /usr/lib/cgi-bin \
-    \
+
     && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
-    && rm -rf /var/lib/apt/lists/*
+    && rm -rf /var/lib/apt/lists/* && rm qrencode-3.4.1.tar.gz
 
 #
 # Optional zoo demos download.
@@ -266,7 +266,7 @@ RUN set -ex \
     && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \
     \
     && git clone https://github.com/ZOO-Project/examples.git \
-    && git clone https://github.com/swagger-api/swagger-ui.git
+    && git clone https://github.com/swagger-api/swagger-ui.git && rm -rf /var/lib/apt/lists/*;
 
 #
 # Runtime image with apache2.
@@ -319,15 +319,15 @@ COPY --from=demos /zoo-project/swagger-ui /var/www/html/swagger-ui
 RUN set -ex \
     && apt-get update && apt-get install -y --no-install-recommends $RUN_DEPS \
     && apt-cache search gdal \
-    \
-    && curl -o /usr/com/zoo-project/mm.db http://geolabs.fr/dl/mm.db \
+
+    && curl -f -o /usr/com/zoo-project/mm.db https://geolabs.fr/dl/mm.db \
     && sed "s=https://petstore.swagger.io/v2/swagger.json=http://localhost/ogc-api/api=g" -i /var/www/html/swagger-ui/dist/index.html \
     && mv  /var/www/html/swagger-ui/dist  /var/www/html/swagger-ui/oapip \
     && ln -s /tmp/ /var/www/html/temp \
     && ln -s /var/www/html/temp /var/www/html/tmp \
     && ln -s /usr/lib/x86_64-linux-gnu/saga/ /usr/lib/saga \
     && rm -rf /var/lib/apt/lists/* \
-    && pip3 install Cheetah3  \
+    && pip3 install --no-cache-dir Cheetah3 \
     && sed "s:AllowOverride None:AllowOverride All:g" -i /etc/apache2/apache2.conf \
     && mkdir -p /tmp/statusInfos \
     && cp /mapmint/mapmint-services/ZOO-api.js /usr/lib/cgi-bin/ \
@@ -340,18 +340,18 @@ RUN set -ex \
     && ln -s /mapmint/public_map /var/www/html/pm \
     && sed "s:mm/::g" -i /var/www/html/pm/assets/.htaccess \
     && cp /usr/bin/mapserv /usr/lib/cgi-bin/mapserv.cgi \
-    && curl -o /usr/lib/cgi-bin/mapcache.xml http://geolabs.fr/dl/mapcache.xml \
+    && curl -f -o /usr/lib/cgi-bin/mapcache.xml https://geolabs.fr/dl/mapcache.xml \
     && mkdir /tmp/cache /usr/com/zoo-project/dirs /tmp/descriptions /var/www/html/pm/styles \
     && chown www-data:www-data -R /tmp/cache /tmp/descriptions /mapmint/template/data/ /usr/com/zoo-project/ /usr/lib/cgi-bin/ /tmp/descriptions /var/www/html/pm/styles \
-    && curl -o /usr/com/zoo-project/PostGIS/mmdb.xml https://raw.githubusercontent.com/mapmint/ansible-roles/gsoc/debian/mapmint/files/mmdb.xml \
+    && curl -f -o /usr/com/zoo-project/PostGIS/mmdb.xml https://raw.githubusercontent.com/mapmint/ansible-roles/gsoc/debian/mapmint/files/mmdb.xml \
     && sed "s:/var/run/postgresql/:pgbouncer:g;s:mmdb:zoo:g;s:postgres:zoo:g;s:nopassword:zoo:g" -i /usr/com/zoo-project/PostGIS/mmdb.xml \
     && sed "s:('encoding', None,:('encoding', 'utf-8',:g" -i /usr/local/lib/python3.6/dist-packages/Cheetah/Compiler.py \
-    && curl -o fonts.tar.bz2 http://geolabs.fr/dl/fonts.tar.bz2 \
+    && curl -f -o fonts.tar.bz2 https://geolabs.fr/dl/fonts.tar.bz2 \
     && mkdir /usr/com/zoo-project/fonts /mapmint/mapmint-ui//img/slideshow/ /usr/com/zoo-project/public_maps/ \
     && tar -C /usr/com/zoo-project/fonts -xvf fonts.tar.bz2 \
     && for i in /mapmint/mapmint-services/*; do ln -s $i /usr/lib/cgi-bin/ ; done \
     && chown www-data:www-data -R /tmp/statusInfos /usr/com/zoo-project /mapmint/mapmint-ui//img/slideshow/ \
-    && a2enmod cgi rewrite
+    && a2enmod cgi rewrite && rm fonts.tar.bz2
 
 EXPOSE 80
 CMD /usr/sbin/apache2ctl -D FOREGROUND