{
  "startTime": 1674254683949,
  "endTime": 1674254685143,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 226,
        "lineEnd": 226,
        "columnStart": 7,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 308,
        "lineEnd": 308,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 327,
        "lineEnd": 327,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 330,
        "lineEnd": 330,
        "columnStart": 7,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 333,
        "lineEnd": 333,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 308,
        "lineEnd": 308,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 327,
        "lineEnd": 327,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 333,
        "lineEnd": 333,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 315,
        "lineEnd": 315,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 224,
        "lineEnd": 224,
        "columnStart": 99,
        "columnEnd": 188
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 229,
        "lineEnd": 229,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 335,
        "lineEnd": 335,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 251,
        "lineEnd": 251,
        "columnStart": 25,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Base: Ubuntu 18.04 with updates and external packages\n#\nFROM ubuntu:bionic-20201119 AS base\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DEPS=\" \\\n    dirmngr \\\n    gpg-agent \\\n    software-properties-common \\\n\"\nARG RUN_DEPS=\" \\\n    libcurl3-gnutls \\\n    libfcgi \\\n    libmapserver-dev \\\n    curl \\\n    \\\n    saga \\\n    libsaga-api-7.3.0 \\\n    libotb \\\n    otb-bin \\\n    \\\n    libpq5 \\\n    libpython3.6 \\\n    libxslt1.1 \\\n    gdal-bin \\\n    libcgal13 \\\n    python3 \\\n    r-base \\\n    python3-pip\\\n\"\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \\\n    \\\n    && add-apt-repository ppa:osgeolive/nightly \\\n    #&& add-apt-repository ppa:osgeolive/release-12.0 \\\n    && add-apt-repository ppa:ubuntugis/ubuntugis-unstable \\\n    #Ã’&& add-apt-repository ppa:ubuntugis/ppa \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n    && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' \\\n\n    && apt-get install --no-install-recommends -y $RUN_DEPS \\\n    && curl -f -o libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb https://launchpadlibrarian.net/309343863/libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \\\n    && curl -f -o libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb https://launchpadlibrarian.net/309343864/libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \\\n    && dpkg --force-depends -i libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \\\n    && dpkg --force-depends -i libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \\\n    && apt  -y --fix-broken install \\\n    && rm /libmozjs185*.deb \\\n\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \\\n    && rm -rf /var/lib/apt/lists/*\n\n#\n# builder1: base image with zoo-kernel\n#\nFROM base AS builder1\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DEPS=\" \\\n    bison \\\n    flex \\\n    make \\\n    autoconf \\\n    gcc \\\n    gettext-base \\\n    gettext \\\n    locales \\\n    locales-all \\\n    \\\n    # Comment lines bellow if nor OTB nor SAGA \\\n    libotb-dev \\\n    otb-qgis \\\n    otb-bin-qt \\\n    qttools5-dev \\\n    qttools5-dev-tools \\\n    qtbase5-dev \\\n    libqt5opengl5-dev \\\n    libtinyxml-dev \\\n    libfftw3-dev \\\n    cmake \\\n    libsaga-dev \\\n    # Comment lines before this one if nor OTB nor SAGA \\\n    \\\n    libfcgi-dev \\\n    libproj-dev \\\n    libgdal-dev \\\n    libwxgtk3.0-dev \\\n    libjson-c-dev \\\n    libssh2-1-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    python3-dev \\\n    uuid-dev \\\n    r-base-dev \\\n\"\nWORKDIR /zoo-project\nCOPY . .\n\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \\\n    \\\n    && make -C ./thirds/cgic206 libcgic.a \\\n    \\\n    && cd ./zoo-project/zoo-kernel \\\n    && autoconf \\\n    && find /usr -name otbWrapperApplication.h \\\n    && ./configure --with-python=/usr --with-pyvers=3.6 --with-js=/usr --with-mapserver=/usr --with-ms-version=7 --with-json=/usr --with-r=/usr --prefix=/usr --with-otb=/usr/ --with-itk=/usr --with-otb-version=7.0 --with-itk-version=4.12 --with-saga=/usr --with-saga-version=7.2 --with-wx-config=/usr/bin/wx-config \\\n    #&& ./configure --with-python=/usr --with-pyvers=3.6 --with-js=/usr --with-mapserver=/usr --with-ms-version=7 --with-json=/usr --with-r=/usr --prefix=/usr --with-otb=/usr/ --with-itk=/usr --with-otb-version=6.6 --with-itk-version=4.12 --with-saga=/usr --with-saga-version=7.2 --with-wx-config=/usr/bin/wx-config \\.1\n    && make \\\n    && make install \\\n    \\\n    && locale-gen en_US.UTF-8 \\    \n    && for i in fr_FR it_IT ja_JP; do msgfmt locale/po/$i.po -o /usr/share/locale/$(echo $i | cut -d'_' -f1)/LC_MESSAGES/zoo-kernel.mo ; done\\\n    && for i in fi es zh_CN; do msgfmt locale/po/$i.po -o /usr/share/locale/$i/LC_MESSAGES/zoo-kernel.mo ; done \\\n    && find /usr/share/locale -name \"*mo\" \\\n    # TODO: why not copied by 'make'?\n    && cp zoo_loader.cgi main.cfg /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/hello-py/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/hello-js/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-api/js/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/utils/open-api/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/hello-py/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/hello-js/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/hello-r/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-api/js/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-api/r/minimal.r /usr/lib/cgi-bin/ \\\n    \\\n    && cp oas.cfg /usr/lib/cgi-bin/ \\\n    \\\n    # TODO: main.cfg is not processed \\\n    && prefix=/usr envsubst < main.cfg > /usr/lib/cgi-bin/main.cfg \\\n    \\\n    #Comment lines below from here if no OTB \\\n    && mkdir otb_build \\\n    && cd otb_build \\\n    && cmake ../../../thirds/otb2zcfg \\\n    && make \\\n    && mkdir OTB \\\n    && cd OTB \\\n    && ITK_AUTOLOAD_PATH=/usr/lib/x86_64-linux-gnu/otb/applications/ ../otb2zcfg \\\n    && mkdir /usr/lib/cgi-bin/OTB \\\n    && cp *zcfg /usr/lib/cgi-bin/OTB \\\n    #&& for i in *zcfg; do cp $i /usr/lib/cgi-bin/$i ; j=\"$(echo $i | sed \"s:.zcfg::g\")\" ; sed \"s:$j:OTB_$j:g\" -i  /usr/lib/cgi-bin/OTB_$i ; done \\\n    #Comment lines before this one if no OTB \\\n    \\\n    #Comment lines below from here if no SAGA \\\n    && cd .. \\\n    && make -C ../../../thirds/saga2zcfg \\\n    && mkdir zcfgs \\\n    && cd zcfgs \\\n    && dpkg -L saga \\\n    && export MODULE_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/saga/ \\\n    && export SAGA_MLB=/usr/lib/x86_64-linux-gnu/saga/ \\\n    && ln -s /usr/lib/x86_64-linux-gnu/saga/ /usr/lib/saga \\\n    && ../../../../thirds/saga2zcfg/saga2zcfg \\\n    && mkdir /usr/lib/cgi-bin/SAGA \\\n    && ls \\\n    && cp -r * /usr/lib/cgi-bin/SAGA \\\n    #Remove OTB if not built or SAGA if no SAGA \\\n    && for j in OTB SAGA ; do for i in $(find /usr/lib/cgi-bin/$j/ -name \"*zcfg\"); do sed \"s:image/png:image/png\\n     useMapserver = true\\n     msClassify = true:g;s:text/xml:text/xml\\n     useMapserver = true:g;s:mimeType = application/x-ogc-aaigrid:mimeType = application/x-ogc-aaigrid\\n   </Supported>\\n   <Supported>\\n     mimeType = image/png\\n     useMapserver=true:g\" -i $i; done; done \\\n    \\\n    && cd ../.. \\\n    #Comment lines before this one if nor OTB nor SAGA \\\n    \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \\\n    && rm -rf /var/lib/apt/lists/*\n\n#\n# Optional zoo modules build.\n#\nFROM base AS builder2\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DEPS=\" \\\n    git \\\n    bison \\\n    flex \\\n    make \\\n    autoconf \\\n    g++ \\\n    gcc \\\n    libc-dev \\\n    libfcgi-dev \\\n    libgdal-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    libcgal-dev \\\n    libfreetype6-dev \\\n\"\nWORKDIR /zoo-project\nCOPY ./zoo-project/zoo-services ./zoo-project/zoo-services\n\n# From zoo-kernel\nCOPY --from=builder1 /usr/lib/cgi-bin/ /usr/lib/cgi-bin/\nCOPY --from=builder1 /usr/lib/libzoo_service.so.1.8 /usr/lib/libzoo_service.so.1.8\nCOPY --from=builder1 /usr/lib/libzoo_service.so /usr/lib/libzoo_service.so\nCOPY --from=builder1 /usr/com/zoo-project/ /usr/com/zoo-project/\nCOPY --from=builder1 /usr/include/zoo/ /usr/include/zoo/\n\n# Additional files from bulder2\nCOPY --from=builder1 /zoo-project/ /zoo-project/\n\n\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \\\n    \\\n    && cd ./zoo-project/zoo-services/utils/status \\\n    && make \\\n    && make install \\\n    \\\n    && cd ../../cgal \\\n    && make \\\n    && cp cgi-env/* /usr/lib/cgi-bin/ \\\n    \\\n    && cd .. \\\n    && cd ../zoo-services/ogr/base-vect-ops \\\n    && make \\\n    && cp cgi-env/* /usr/lib/cgi-bin/ \\\n    && cd ../.. \\\n    \\\n    && cd ../zoo-services/gdal/ \\\n    && for i in contour dem grid profile translate warp ; do cd $i ; make && cp cgi-env/* /usr/lib/cgi-bin/ && cp cgi-env/* /zoo-project/mapmint/mapmint-services/raster-tools-src/cgi-env/; cp cgi-env/*zo /usr/lib/cgi-bin/${i}_service.zo ; cd .. ; done \\\n    \\\n    && cd / \\\n    #&& git clone https://github.com/mapmint/mapmint.git \\\n    && cd zoo-project/mapmint/mapmint-services/ \\\n    && for i in *-src; do echo $i; cd $i; sed \"s:g++:g++ \\${CFLAGS}:g\" -i Makefile.in ; autoconf; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-zoo-kernel=/zoo-project/zoo-project/zoo-kernel --with-mapserver=/usr; make ; cd .. ;done \\\n    && cd ../.. \\\n    && curl -f -o qrencode-3.4.1.tar.gz https://fukuchi.org/works/qrencode/qrencode-3.4.1.tar.gz \\\n    && tar -xvf qrencode-3.4.1.tar.gz \\\n    && cd qrencode-3.4.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install \\\n    && cd .. \\\n    && pwd && ls && ls zoo-project \\\n    && cd /zoo-project/zoo-project/zoo-services/qrencode \\\n    && make \\\n    && cp cgi-env/* /usr/lib/cgi-bin \\\n\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \\\n    && rm -rf /var/lib/apt/lists/* && rm qrencode-3.4.1.tar.gz\n\n#\n# Optional zoo demos download.\n#\nFROM base AS demos\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DEPS=\" \\\n    git \\\n    \\\n\"\nWORKDIR /zoo-project\n\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \\\n    \\\n    && git clone https://github.com/ZOO-Project/examples.git \\\n    && git clone https://github.com/swagger-api/swagger-ui.git && rm -rf /var/lib/apt/lists/*;\n\n#\n# Runtime image with apache2.\n#\nFROM base AS runtime\nARG DEBIAN_FRONTEND=noninteractive\nARG RUN_DEPS=\" \\\n    apache2 \\\n    curl \\\n    cgi-mapserver \\\n    mapserver-bin \\\n    python3-mapscript \\\n    python3-psycopg2 \\\n    python3-lxml \\\n    python3-gdal \\\n    python3-setuptools \\\n    python3-requests \\\n    python3-cssmin \\\n    python3-jsmin \\\n    python3-redis \\\n    python3-rpy2 \\\n    gettext \\\n    locales \\\n    locales-all \\\n    #Uncomment the line below to add vi editor \\\n    vim \\\n    #Uncomment the lines below to add debuging \\\n    valgrind \\\n    gdb \\\n\"\n\n# From zoo-kernel\nCOPY --from=builder1 /usr/lib/cgi-bin/ /usr/lib/cgi-bin/\nCOPY --from=builder1 /usr/lib/libzoo_service.so.1.8 /usr/lib/libzoo_service.so.1.8\nCOPY --from=builder1 /usr/lib/libzoo_service.so /usr/lib/libzoo_service.so\nCOPY --from=builder1 /usr/com/zoo-project/ /usr/com/zoo-project/\nCOPY --from=builder1 /usr/include/zoo/ /usr/include/zoo/\n\n# From optional zoo modules\nCOPY --from=builder2 /usr/lib/cgi-bin/ /usr/lib/cgi-bin/\nCOPY --from=builder2 /usr/com/zoo-project/ /usr/com/zoo-project/\nCOPY --from=builder2 /zoo-project/mapmint/ /mapmint/\n\n# From optional zoo demos\nCOPY --from=demos /zoo-project/examples/data/ /usr/com/zoo-project/\nCOPY --from=demos /zoo-project/examples/ /var/www/html/\nCOPY --from=demos /zoo-project/swagger-ui /var/www/html/swagger-ui\n\n\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $RUN_DEPS \\\n    && apt-cache search gdal \\\n\n    && curl -f -o /usr/com/zoo-project/mm.db https://geolabs.fr/dl/mm.db \\\n    && sed \"s=https://petstore.swagger.io/v2/swagger.json=http://localhost/ogc-api/api=g\" -i /var/www/html/swagger-ui/dist/index.html \\\n    && mv  /var/www/html/swagger-ui/dist  /var/www/html/swagger-ui/oapip \\\n    && ln -s /tmp/ /var/www/html/temp \\\n    && ln -s /var/www/html/temp /var/www/html/tmp \\\n    && ln -s /usr/lib/x86_64-linux-gnu/saga/ /usr/lib/saga \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && pip3 install --no-cache-dir Cheetah3 \\\n    && sed \"s:AllowOverride None:AllowOverride All:g\" -i /etc/apache2/apache2.conf \\\n    && mkdir -p /tmp/statusInfos \\\n    && ln -s /usr/lib/cgi-bin/ /usr/lib/cgi-bin/mm \\\n    && cp /mapmint/mapmint-services/ZOO-api.js /usr/lib/cgi-bin/ \\\n    && ln -s /mapmint/mapmint-ui/templates/* /var/www/ \\\n    && cp -r  /mapmint/template/data/*/  /usr/com/zoo-project/ \\\n    && cp /mapmint/template/data/symbols.sym /usr/com/zoo-project/symbols.sym \\\n    && mkdir /usr/com/zoo-project/templates \\\n    && ln -s /mapmint/mapmint-ui /var/www/html/ui \\\n    && ln -s /mapmint/public_map /var/www/html/pm \\\n    && cp /usr/bin/mapserv /usr/lib/cgi-bin/mapserv.cgi \\\n    && curl -f -o /usr/lib/cgi-bin/mapcache.xml https://geolabs.fr/dl/mapcache.xml \\\n    && mkdir /tmp/cache /usr/com/zoo-project/dirs /tmp/descriptions /var/www/html/pm/styles \\\n    && chown www-data:www-data -R /tmp/cache /tmp/descriptions /mapmint/template/data/ /usr/com/zoo-project/ /usr/lib/cgi-bin/ /tmp/descriptions /var/www/html/pm/styles \\\n    && curl -f -o /usr/com/zoo-project/PostGIS/mmdb.xml https://raw.githubusercontent.com/mapmint/ansible-roles/gsoc/debian/mapmint/files/mmdb.xml \\\n    && sed \"s:/var/run/postgresql/:pgbouncer:g;s:mmdb:zoo:g;s:postgres:zoo:g;s:nopassword:zoo:g\" -i /usr/com/zoo-project/PostGIS/mmdb.xml \\\n    && sed \"s:('encoding', None,:('encoding', 'utf-8',:g\" -i /usr/local/lib/python3.6/dist-packages/Cheetah/Compiler.py \\\n    && curl -f -o fonts.tar.bz2 https://geolabs.fr/dl/fonts.tar.bz2 \\\n    && mkdir /usr/com/zoo-project/fonts /mapmint/mapmint-ui//img/slideshow/ /usr/com/zoo-project/public_maps/ \\\n    && tar -C /usr/com/zoo-project/fonts -xvf fonts.tar.bz2 \\\n    && for i in /mapmint/mapmint-services/*; do ln -s $i /usr/lib/cgi-bin/ ; done \\\n    && chown www-data:www-data -R /tmp/statusInfos /usr/com/zoo-project /mapmint/mapmint-ui//img/slideshow/ \\\n    && a2enmod cgi rewrite && rm fonts.tar.bz2\n\nEXPOSE 80\nCMD /usr/sbin/apache2ctl -D FOREGROUND\n"
}