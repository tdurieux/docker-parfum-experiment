{
  "startTime": 1674249065855,
  "endTime": 1674249067243,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Development Dockerfile for OMERO\n# --------------------------------\n# This dockerfile can be used to build an\n# OMERO distribution which can then be run\n# within a number of different Docker images.\n\n# By default, building this dockerfile will use\n# the IMAGE argument below for the runtime image.\nARG BUILD_IMAGE=adoptopenjdk:11-jdk-hotspot-bionic\n\n# To build code with other runtimes\n# pass a build argument, e.g.:\n#\n#   docker build --build-arg BUILD_IMAGE=openjdk:9 ...\n#\n\n# The produced /src directory will be copied the\n# RUN_IMAGE for end-use. This value can also be\n# set at build time with --build-arg RUN_IMAGE=...\nARG COMPONENT=server\nARG RUN_IMAGE=openmicroscopy/omero-${COMPONENT}:5.6\n\n\nFROM ${BUILD_IMAGE} as build\nUSER root\nARG DEBIAN_FRONTEND=noninteractive\n\n# From omero-install: step01_ubuntu1804_ice_deps.sh\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y -q \\\n        build-essential \\\n        wget \\\n        db5.3-util \\\n        libbz2-dev \\\n        libdb++-dev \\\n        libdb-dev \\\n        libexpat-dev \\\n        libmcpp-dev \\\n        libssl-dev \\\n        mcpp \\\n        zlib1g-dev \\\n && cd /tmp \\\n && wget -q https://github.com/ome/zeroc-ice-ubuntu1804/releases/download/0.3.0/ice-3.6.5-0.3.0-ubuntu1804-amd64.tar.gz \\\n && tar xf ice-3.6.5-0.3.0-ubuntu1804-amd64.tar.gz \\\n && rm ice-3.6.5-0.3.0-ubuntu1804-amd64.tar.gz \\\n && mv ice-3.6.5-0.3.0 /opt \\\n && echo /opt/ice-3.6.5-0.3.0/lib/x86_64-linux-gnu > /etc/ld.so.conf.d/ice-x86_64.conf \\\n && ldconfig && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y ant git gradle maven python3 python3-pip python3-venv \\\n      python-pillow python-numpy python-sphinx && rm -rf /var/lib/apt/lists/*;\n\nENV VIRTUAL_ENV=/opt/omero/server/venv3\nENV PATH=/opt/ice-3.6.5-0.3.0/bin:$VIRTUAL_ENV/bin/:$PATH\nRUN mkdir -p /opt/omero/server/ \\\n && python3 -m venv $VIRTUAL_ENV\nRUN python -m pip install --upgrade pip setuptools\nRUN python -m pip install https://github.com/ome/zeroc-ice-ubuntu1804/releases/download/0.2.0/zeroc_ice-3.6.5-cp36-cp36m-linux_x86_64.whl\nRUN python -m pip install flake8 future pytest\nRUN python -m pip install 'omero-py>=5.6.0.dev10'\nRUN id 1000 || useradd -u 1000 -ms /bin/bash build\n\n# TODO: would be nice to not need to copy .git since it invalidates the build frequently and takes more time\nCOPY .git /src/.git\n\nCOPY build.py /src/\nCOPY build.xml /src/\nCOPY components /src/components\nCOPY docs /src/docs\nCOPY etc /src/etc\nCOPY ivy.xml /src/\nCOPY lib /src/lib\nCOPY luts /src/luts\nCOPY omero.class /src/\nCOPY setup.cfg /src/\nCOPY sql /src/sql\nCOPY test.xml /src/\nCOPY LICENSE.txt /src/\nCOPY history.rst /src/\nRUN chown -R 1000 /src\nUSER 1000\nWORKDIR /src\nENV ICE_CONFIG=/src/etc/ice.config\nRUN sed -i \"s/^\\(omero\\.host\\s*=\\s*\\).*\\$/\\1omero/\" /src/etc/ice.config\n\n# The following may be necessary depending on\n# which images you are using. See the following\n# card for more info:\n#\n#     https://trello.com/c/rPstbt4z/216-open-ssl-110\n#\n# RUN sed -i 's/\\(\"IceSSL.Ciphers\".*ADH[^\"]*\\)/\\1:@SECLEVEL=0/' /src/components/tools/OmeroPy/src/omero/clients.py /src/etc/templates/grid/templates.xml\n\n# Reproduce jenkins build\nRUN env BUILD_NUMBER=1 OMERO_BRANCH=develop bash docs/hudson/OMERO.sh\n\nFROM ${RUN_IMAGE} as run\nRUN rm -rf /opt/omero/server/OMERO.server\nCOPY --chown=omero-server:omero-server --from=build /src/dist /opt/omero/server/OMERO.server\nUSER root\nRUN yum install -y git && rm -rf /var/cache/yum\n\nUSER omero-server\nWORKDIR /opt/omero/server/OMERO.server\nENV VIRTUAL_ENV=/opt/omero/server/venv3\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n"
}