{
  "startTime": 1674215172603,
  "endTime": 1674215173934,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\n# Install packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ccache \\\n    curl \\\n    couchdb \\\n    distcc \\\n    fuse \\\n    g++ \\\n    git \\\n    libattr1-dev \\\n    libjpeg-dev \\\n    libz-dev \\\n    make \\\n    patch \\\n    pylint \\\n    python3 \\\n    python3-greenlet \\\n    python3-mako \\\n    python3-pip \\\n    python3-requests \\\n    realpath && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir mistune orderedset\nRUN chmod a+r /etc/couchdb/local.ini\n\n# Setup compilers, distcc and ccache\nRUN ln -s $(which g++-5) /usr/bin/g++-5.3   &&  \\\n    ln -s $(which gcc-5) /usr/bin/gcc-5.3   &&  \\\n    ln -s $(which g++-5) /usr/bin/g++-5.3.1 &&  \\\n    ln -s $(which gcc-5) /usr/bin/gcc-5.3.1\nRUN mkdir -p /usr/lib/distcc/bin/ /usr/lib/ccache/bin &&                \\\n    for suffix in '' '-5' '-5.3' '-5.3.1'; do                           \\\n        ln -s \"$(which ccache)\" \"/usr/lib/ccache/bin/g++$suffix\";      \\\n        ln -s \"$(which ccache)\" \"/usr/lib/ccache/bin/gcc$suffix\";      \\\n        ln -s \"$(which distcc)\" \"/usr/lib/distcc/bin/g++$suffix\";      \\\n        ln -s \"$(which distcc)\" \"/usr/lib/distcc/bin/gcc$suffix\";      \\\n    done\nENV PATH=\"/usr/lib/ccache/bin:/usr/lib/distcc/bin:$PATH\"\n\n# Install docker\nRUN curl -fsSL https://get.docker.com/ | sh\n\n# Add user\nARG user\nENV USER=$user\nRUN useradd -m $USER\nRUN usermod -aG docker $USER\nUSER $USER\nARG builddir\nWORKDIR $builddir\nENTRYPOINT [\"./drake\"]\n"
}