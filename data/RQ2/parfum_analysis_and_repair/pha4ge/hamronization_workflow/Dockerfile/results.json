{
  "startTime": 1674218149413,
  "endTime": 1674218150426,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 250
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base image\nFROM continuumio/miniconda3\n\n# metadata\nLABEL base.image=\"miniconda3\"\nLABEL version=\"1\"\nLABEL software=\"hAMRonization\"\nLABEL software.version=\"1.0.0\"\nLABEL description=\"Workflow for running many AMR tools on a set of reads/contigs\"\nLABEL website=\"https://github.com/pha4ge/hamronization\"\nLABEL documentation=\"https://github.com/pha4ge/hamronization/README.md\"\nLABEL license=\"https://github.com/pha4ge/hamronization/LICENSE\"\nLABEL tags=\"Genomics\"\n\n# maintainer\nMAINTAINER Finlay Maguire <finlaymaguire@gmail.com>\n\n# set shell so conda works properly\nSHELL [\"/bin/bash\", \"-c\"]\n\n# get some system essentials\nRUN apt-get update && apt-get install -y --no-install-recommends curl wget git build-essential libtool autotools-dev automake autoconf libarchive-dev bzip2 unzip libseccomp-dev pkg-config squashfs-tools cryptsetup libssl-dev uuid-dev gnupg zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# install golang for singularity\nRUN wget https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go1.14.4.linux-amd64.tar.gz && rm go1.14.4.linux-amd64.tar.gz\n\n# install singularity\nRUN export PATH=$PATH:/usr/local/go/bin && \\\n    export VERSION=3.5.3 && \\\n    wget https://github.com/hpcng/singularity/releases/download/v$VERSION/singularity-$VERSION.tar.gz && \\\n    tar xvf singularity-$VERSION.tar.gz && \\\n    cd singularity && \\\n    ./mconfig && cd ./builddir && make && make install && rm singularity-$VERSION.tar.gz\n\n# clone the repo\nRUN git clone https://github.com/pha4ge/hamronization\n\n# get the test data\nWORKDIR /hamronization\nRUN cd data/test && bash get_test_data.sh && cd ../..\n\n# build the run env\nRUN conda init bash && conda env create -n hamronization --file envs/hamronization.yaml\n\n# install the snakemake envs\nRUN source ~/.bashrc && conda activate hamronization && snakemake --configfile config/test_config.yaml --use-conda --conda-create-envs-only --jobs 1 --use-singularity --singularity-args \"-B $PWD:/data\"\n\n# run on test data (needs docker run --privileged so can't be done at build)\n# RUN source ~/.bashrc && conda activate hamronization && snakemake --configfile config/test_config.yaml --use-conda --jobs 1 --use-singularity --singularity-args \"-B $PWD:/data\"\n"
}