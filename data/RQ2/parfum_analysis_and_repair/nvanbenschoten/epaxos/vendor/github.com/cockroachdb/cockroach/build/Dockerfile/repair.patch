diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvanbenschoten/epaxos/vendor/github.com/cockroachdb/cockroach/build/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvanbenschoten/epaxos/vendor/github.com/cockroachdb/cockroach/build/Dockerfile/repaired.Dockerfile
index d1c8fc5..c0197aa 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nvanbenschoten/epaxos/vendor/github.com/cockroachdb/cockroach/build/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nvanbenschoten/epaxos/vendor/github.com/cockroachdb/cockroach/build/Dockerfile/repaired.Dockerfile
@@ -5,7 +5,7 @@ MAINTAINER Tamir Duberstein <tamird@gmail.com>
 RUN apt-get update && apt-get install -y --no-install-recommends \
     apt-transport-https \
     ca-certificates \
-    curl
+    curl && rm -rf /var/lib/apt/lists/*;
 
 RUN curl -fsSL -O https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb \
  && dpkg -i dumb-init_1.2.0_amd64.deb && rm dumb-init_1.2.0_amd64.deb
@@ -65,12 +65,12 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
     texinfo \
     unzip \
     xz-utils \
-    yarn
+    yarn && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir crosstool-ng \
- && curl -fsSL http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.23.0.tar.xz | tar --strip-components=1 -C crosstool-ng -xJ \
+ && curl -fsSL https://crosstool-ng.org/download/crosstool-ng/crosstool-ng-1.23.0.tar.xz | tar --strip-components=1 -C crosstool-ng -xJ \
  && cd crosstool-ng \
- && ./configure --prefix /usr/local/ct-ng \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix /usr/local/ct-ng \
  && make -j$(nproc) \
  && make install \
  && cp ct-ng.comp /etc/bash_completion.d/ \
@@ -89,9 +89,9 @@ RUN apt-get autoremove -y gcc g++
 
 # Build an msan-enabled build of libc++, following instructions from
 # https://github.com/google/sanitizers/wiki/MemorySanitizerLibcxxHowTo
-RUN mkdir llvm                    && curl -sfSL http://releases.llvm.org/3.9.1/llvm-3.9.1.src.tar.xz      | tar --strip-components=1 -C llvm -xJ \
- && mkdir llvm/projects/libcxx    && curl -sfSL http://releases.llvm.org/3.9.1/libcxx-3.9.1.src.tar.xz    | tar --strip-components=1 -C llvm/projects/libcxx -xJ \
- && mkdir llvm/projects/libcxxabi && curl -sfSL http://releases.llvm.org/3.9.1/libcxxabi-3.9.1.src.tar.xz | tar --strip-components=1 -C llvm/projects/libcxxabi -xJ \
+RUN mkdir llvm && curl -sfSL https://releases.llvm.org/3.9.1/llvm-3.9.1.src.tar.xz | tar --strip-components=1 -C llvm -xJ \
+ && mkdir llvm/projects/libcxx && curl -sfSL https://releases.llvm.org/3.9.1/libcxx-3.9.1.src.tar.xz | tar --strip-components=1 -C llvm/projects/libcxx -xJ \
+ && mkdir llvm/projects/libcxxabi && curl -sfSL https://releases.llvm.org/3.9.1/libcxxabi-3.9.1.src.tar.xz | tar --strip-components=1 -C llvm/projects/libcxxabi -xJ \
  && curl -fsSL https://github.com/llvm-mirror/libcxx/commit/b640da0b315ead39690d4d65c76938ab8aeb5449.patch | git -C llvm/projects/libcxx apply \
  && mkdir libcxx_msan && (cd libcxx_msan && cmake ../llvm -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_SANITIZER=Memory && make cxx -j$(nproc))