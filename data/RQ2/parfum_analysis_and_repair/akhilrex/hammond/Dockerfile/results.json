{
  "startTime": 1674253664930,
  "endTime": 1674253665655,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GO_VERSION=1.16.2\nFROM golang:${GO_VERSION}-alpine AS builder\nRUN apk update && apk add alpine-sdk git && rm -rf /var/cache/apk/*\nRUN mkdir -p /api\nWORKDIR /api\nCOPY ./server/go.mod .\nCOPY ./server/go.sum .\nRUN go mod download\nCOPY ./server .\nRUN go build -o ./app ./main.go\n\nFROM node:14 as build-stage\nWORKDIR /app\nCOPY ./ui/package*.json ./\nRUN npm install && npm cache clean --force;\nCOPY ./ui .\nRUN npm run build\n\n\nFROM alpine:latest\nLABEL org.opencontainers.image.source=\"https://github.com/akhilrex/hammond\"\nENV CONFIG=/config\nENV DATA=/assets\nENV UID=998\nENV PID=100\nENV GIN_MODE=release\nVOLUME [\"/config\", \"/assets\"]\nRUN apk update && apk add ca-certificates && rm -rf /var/cache/apk/*\nRUN mkdir -p /config; \\\n    mkdir -p /assets; \\\n    mkdir -p /api\nRUN chmod 777 /config; \\\n    chmod 777 /assets\nWORKDIR /api\nCOPY --from=builder /api/app .\n#COPY dist ./dist\nCOPY --from=build-stage /app/dist ./dist\nEXPOSE 3000\nENTRYPOINT [\"./app\"]\n"
}