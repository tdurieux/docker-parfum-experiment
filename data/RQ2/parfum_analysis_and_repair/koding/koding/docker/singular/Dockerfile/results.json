{
  "startTime": 1674246240768,
  "endTime": 1674246241846,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM koding/base\nMAINTAINER Sonmez Kartal <sonmez@koding.com>\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n            mongodb-server \\\n            postgresql postgresql-contrib \\\n            rabbitmq-server \\\n            redis-server && rm -rf /var/lib/apt/lists/*;\n\nRUN rabbitmq-plugins enable rabbitmq_management\n\nUSER postgres\nRUN sed -i \"s/#listen_addresses =.*/listen_addresses = '*'/\" /etc/postgresql/9.3/main/postgresql.conf\nRUN echo \"host all  all    0.0.0.0/0  md5\" >> /etc/postgresql/9.3/main/pg_hba.conf\nUSER root\n\nRUN cd /opt && git clone https://github.com/koding/koding.git\n\nWORKDIR /opt/koding\n\nRUN service postgresql start && \\\n    go/src/socialapi/db/sql/definition/create.sh && \\\n    service postgresql stop\n\nRUN npm install --unsafe-perm && \\\n    echo master > VERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host localhost --hostname localhost --publicPort 80 && \\\n    go/build.sh && \\\n    service postgresql start && ./run migrate up && service postgresql stop && \\\n    make -C client dist && \\\n    rm -rf generated && npm cache clean --force;\n\n\nADD docker-entrypoint /opt/koding/docker-entrypoint\nADD entrypoint.sh /opt/koding/entrypoint.sh\nADD wait.sh /opt/koding/wait.sh\n\nEXPOSE 80\n\nENTRYPOINT [\"/opt/koding/docker-entrypoint\"]\n"
}