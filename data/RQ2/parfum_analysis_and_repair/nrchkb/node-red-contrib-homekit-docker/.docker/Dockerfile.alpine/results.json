{
  "startTime": 1674246289643,
  "endTime": 1674246291330,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARCH\nARG NODE_VERSION\nARG TAG_SUFFIX\nARG NODE_RED_VERSION\n\nFROM nodered/node-red:${NODE_RED_VERSION}-${NODE_VERSION}${TAG_SUFFIX}\n\nARG HOMEKIT_BRIDGED_VERSION\n\nLABEL org.label-schema.build-date=${BUILD_DATE} \\\n    org.label-schema.docker.dockerfile=\".docker/Dockerfile.alpine\" \\\n    org.label-schema.license=\"Apache-2.0\" \\\n    org.label-schema.name=\"Node-RED\" \\\n    org.label-schema.version=${BUILD_VERSION} \\\n    org.label-schema.description=\"Low-code programming for event-driven applications.\" \\\n    org.label-schema.url=\"https://nodered.org\" \\\n    org.label-schema.vcs-ref=${BUILD_REF} \\\n    org.label-schema.vcs-type=\"Git\" \\\n    org.label-schema.vcs-url=\"https://github.com/NRCHKB/node-red-contrib-homekit-docker.git\" \\\n    org.label-schema.arch=${ARCH} \\\n    authors=\"Raymond Mouthaan, Tadeusz Wyrzykowski\"\n\nUSER root\n\n# root filesystem\nCOPY rootfs /\n\n# Install tools\nRUN set -ex \\\n    && apk add --no-cache --virtual .run-deps \\\n      avahi-compat-libdns_sd \\\n      avahi-dev \\\n      dbus \\\n    && npm set package-lock=false\n\nARG TARGETPLATFORM\nARG FFMPEG_OS\n\n# vcgencmd\nRUN case \"$FFMPEG_OS\" in \\\n    raspbian) set -x && apk add --no-cache raspberrypi;; \\\n    esac\n\n# s6 overlay\nRUN case \"$TARGETPLATFORM\" in \\\n    linux\\/amd64) S6_ARCH='amd64';; \\\n    linux\\/arm/v7) S6_ARCH='armhf';; \\\n    linux\\/arm/v6) S6_ARCH='armhf';; \\\n    linux\\/arm64) S6_ARCH='aarch64';; \\\n    *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac \\\n    && set -x \\\n    && curl -Lfs https://github.com/just-containers/s6-overlay/releases/download/v2.2.0.3/s6-overlay-${S6_ARCH}.tar.gz | tar xzf - -C / --no-same-owner\n\n# ffmpeg-for-homebridge\nRUN case \"$TARGETPLATFORM\" in \\\n    linux\\/amd64) FFMPEG_ARCH='x86_64';; \\\n    linux\\/arm/v7) FFMPEG_ARCH='armv6l';; \\\n    linux\\/arm/v6) FFMPEG_ARCH='armv6l';; \\\n    linux\\/arm64) FFMPEG_ARCH='aarch64';; \\\n    *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac \\\n    && set -x \\\n    && curl -Lfs https://github.com/oznu/ffmpeg-for-homebridge/releases/latest/download/ffmpeg-${FFMPEG_OS}-${FFMPEG_ARCH}.tar.gz | tar xzf - -C / --no-same-owner\n\nCOPY package.json .\nRUN npm install --unsafe-perm --no-update-notifier --only=production && npm cache clean --force;\n\n# Add passport openidconnect strategy to allow usage of OIDC for authentication at Node RED editor & dashboard\nRUN npm install passport-openidconnect \\\n    && npm install jwt-decode && npm cache clean --force;\n\n# Modify jaredhanson/passport-openidconnect to retrieve profile scope\n# Apply modified file /usr/src/node-red/node_modules/passport-openidconnect/lib/strategy.js\n# Modified file adds profile in line 244 to get userinfo\nCOPY strategy.js /usr/src/node-red/node_modules/passport-openidconnect/lib/strategy.js\n\nRUN setcap 'cap_net_bind_service=+ep' `which node`\n\nENTRYPOINT [ \"/init\" ]\n"
}