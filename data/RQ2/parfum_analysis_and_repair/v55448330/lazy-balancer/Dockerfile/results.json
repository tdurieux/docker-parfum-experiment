{
  "startTime": 1674219095273,
  "endTime": 1674219096888,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8.1-alpine\n\nENV TENGINE_VERSION 2.3.3\nENV LAZYBALANCER_VERSION v1.3.6beta\nENV LUAJIT_VERSION v2.1-20190626\n\nCOPY . /app/lazy_balancer\n\nRUN set -x \\\n    && addgroup -g 101 -S www-data \\\n    && adduser -S -D -H -u 101 -h /var/cache/nginx -s /sbin/nologin -G www-data -g www-data www-data \\\n    && apkArch=\"$(cat /etc/apk/arch)\" \\\n    && tempDir=\"$(mktemp -d)\" && cd ${tempDir} \\\n    && chown nobody:nobody ${tempDir} \\\n    && apk add --no-cache pcre libxml2 libxslt libgd libgcc \\\n    && apk add --no-cache --virtual .build-deps \\\n                tzdata \\\n                gcc \\\n                libc-dev \\\n                make \\\n                openssl-dev \\\n                pcre-dev \\\n                zlib-dev \\\n                linux-headers \\\n                libxslt-dev \\\n                gd-dev \\\n                geoip-dev \\\n                perl-dev \\\n                libedit-dev \\\n                mercurial \\\n                alpine-sdk \\\n                findutils \\\n                python3-dev \\\n                libffi-dev \\\n    && cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n    && curl -fsSL https://github.com/openresty/luajit2/archive/${LUAJIT_VERSION}.tar.gz -o luajit.tar.gz \\\n    && tar zxf luajit.tar.gz -C ${tempDir} \\\n    && cd ${tempDir}/luajit2-${LUAJIT_VERSION#v} \\\n    && make && make install \\\n    && export LUAJIT_INC=/usr/local/include/luajit-2.1 \\\n    && export LUAJIT_LIB=/usr/local/lib \\\n    && ln -sf luajit /usr/local/bin/luajit \\\n    && curl -fsSL https://github.com/alibaba/tengine/archive/${TENGINE_VERSION}.tar.gz -o tengine.tar.gz \\\n    && tar zxf tengine.tar.gz -C ${tempDir} \\\n    && cd ${tempDir}/tengine-${TENGINE_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --user=www-data --group=www-data \\\n            --prefix=/etc/nginx --sbin-path=/usr/sbin \\\n            --error-log-path=/var/log/nginx/error.log \\\n            --conf-path=/etc/nginx/nginx.conf --pid-path=/run/nginx.pid \\\n            --with-http_secure_link_module \\\n            --with-http_image_filter_module \\\n            --with-http_random_index_module \\\n            --with-threads \\\n            --with-http_ssl_module \\\n            --with-http_sub_module \\\n            --with-http_stub_status_module \\\n            --with-http_gunzip_module \\\n            --with-http_gzip_static_module \\\n            --with-http_realip_module \\\n            --with-compat \\\n            --with-file-aio \\\n            --with-http_dav_module \\\n            --with-http_degradation_module \\\n            --with-http_flv_module \\\n            --with-http_mp4_module \\\n            --with-http_xslt_module \\\n            --with-http_auth_request_module \\\n            --with-http_addition_module \\\n            --with-http_v2_module \\\n            --add-module=./modules/ngx_http_upstream_check_module \\\n            --add-module=./modules/ngx_http_upstream_session_sticky_module \\\n            --add-module=./modules/ngx_http_upstream_dynamic_module \\\n            --add-module=./modules/ngx_http_upstream_consistent_hash_module \\\n            --add-module=./modules/ngx_http_upstream_dyups_module \\\n            --add-module=./modules/ngx_http_user_agent_module \\\n            --add-module=./modules/ngx_http_proxy_connect_module \\\n            --add-module=./modules/ngx_http_concat_module \\\n            --add-module=./modules/ngx_http_footer_filter_module \\\n            --add-module=./modules/ngx_http_sysguard_module \\\n            --add-module=./modules/ngx_http_slice_module \\\n            --add-module=./modules/ngx_http_lua_module \\\n            --add-module=./modules/ngx_http_reqstat_module \\\n            --with-http_geoip_module=dynamic \\\n            --with-stream \\\n    && make && make install \\\n    && mkdir -p /app/lazy_balancer/db \\\n    && cd /app/lazy_balancer \\\n    && mkdir -p /etc/nginx/conf.d \\\n    && cp -f resource/nginx/nginx.conf.default /etc/nginx/nginx.conf \\\n    && cp -f resource/nginx/default.* /etc/nginx/ \\\n    && rm -rf */migrations/00*.py \\\n    && rm -rf db/* \\\n    && rm -rf env \\\n    && pip3 --no-cache-dir install -r requirements.txt \\\n    && apk del .build-deps \\\n    && rm -rf ${tempDir} \\\n    && rm -rf /usr/local/lib/python3.8/config-3.8-x86_64-linux-gnu/ \\\n    && chown -R www-data:www-data /app \\\n    && echo -e '#!/bin/ash\\nsupervisorctl -c /app/lazy_balancer/service/supervisord.conf' > /usr/bin/sc \\\n    && chmod +x /usr/bin/sc && rm luajit.tar.gz\n\nWORKDIR /app/lazy_balancer\n\nEXPOSE 8000\n\nCMD [ \"supervisord\", \"-c\", \"/app/lazy_balancer/service/supervisord_docker.conf\" ]\n\n\n"
}