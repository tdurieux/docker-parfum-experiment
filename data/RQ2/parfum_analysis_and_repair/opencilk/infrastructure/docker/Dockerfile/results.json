{
  "startTime": 1674255202297,
  "endTime": 1674255203042,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# NOTE: Don't use ADD; ADD will decompress the file\nCOPY opencilk.tar.gz /usr/local/src/opencilk.tar.gz\n\n# Note that it is possible to specify a sequence of RUN commands, but there\n# are various issues with this practice. The first issue is that each separate\n# RUN command creates an extra layer of information that is stored with the\n# container, which significantly bloats the image. Essentially these layers are\n# diffs, so if we extract the opencilk tar in a step separate from removing the\n# extracted files then Docker still stores those files in one of the layers, thus\n# causing the Docker image to increase in size.\n\n# Step 1: Install build dependencies (TODO: may be possible to install less)\n# Step 2: Untar, build, and install OpenCilk\n# Step 3: Remove the build files and apt-get cache files\nRUN echo \"Installing packages...\" \\\n  && apt-get update -qq > /dev/null \\\n  && apt-get install -qqy --no-install-recommends \\\n    cmake \\\n    clang \\\n    lld \\\n    make \\\n    python3-minimal \\\n    > /dev/null \\\n  && echo \"Building OpenCilk...\" \\\n  && tar -C /usr/local/src -xzf /usr/local/src/opencilk.tar.gz \\\n  && mkdir -p /usr/local/src/opencilk/build \\\n  && /usr/local/src/opencilk/infrastructure/tools/build /usr/local/src/opencilk/opencilk-project \\\n    /usr/local/src/opencilk/build \\\n  && echo \"Installing OpenCilk to default install location...\" \\\n  && cmake --build /usr/local/src/opencilk/build --target install \\\n  && echo \"Cleaning temporary files...\" \\\n  && rm -r /usr/local/src/opencilk \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && echo \"DOCKER IMAGE BUILT\" && rm /usr/local/src/opencilk.tar.gz\n"
}