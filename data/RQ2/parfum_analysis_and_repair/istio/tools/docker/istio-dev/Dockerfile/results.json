{
  "startTime": 1674252944204,
  "endTime": 1674252944749,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 3,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 3,
        "columnEnd": 131
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker:stable as docker\n\nFROM gcr.io/istio-testing/build-tools:master-2019-12-15T16-17-48 as build-tools\n\nFROM ubuntu:xenial\nARG user\nARG group\nARG uid=1000\nARG gid=1000\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nCOPY --from=build-tools /usr/bin/hadolint /usr/bin/\nCOPY --from=build-tools /usr/bin/helm /usr/bin/\nCOPY --from=build-tools /usr/bin/hugo /usr/bin/\nCOPY --from=build-tools /usr/bin/kind /usr/bin/\nCOPY --from=build-tools /usr/bin/protoc /usr/bin/\nCOPY --from=build-tools /usr/bin/shellcheck /usr/bin/\nCOPY --from=build-tools /usr/bin/yq /usr/bin/\nCOPY --from=build-tools /go/ /usr/local/go/\nCOPY --from=build-tools /usr/local/ /usr/local/\nCOPY --from=build-tools /node_modules/ /node_modules/\n\nRUN chmod 755 /usr/local/go/pkg /usr/local/go/src\n\n# Install development packages.\nRUN apt-get update && apt-get -qqy install --no-install-recommends \\\nautoconf=2.69-9 \\\nautotools-dev=20150820.1 \\\nbash-completion=1:2.1-4.2ubuntu1.1 \\\nbuild-essential=12.1ubuntu2 \\\nca-certificates=20170717~16.04.2 \\\ncurl=7.47.0-1ubuntu2.14 \\\ngit=1:2.7.4-0ubuntu1.9 \\\niptables=1.6.0-2ubuntu3 \\\njq=1.5+dfsg-1ubuntu0.1 \\\nlibtool=2.4.6-0.1 \\\nlsb-release=9.20160110ubuntu0.2 \\\nmake=4.1-6 \\\npython3=3.5.1-3 \\\nsudo=1.8.16-0ubuntu1.9 \\\ntmux=2.1-3build1 \\\nunzip=6.0-20ubuntu1 \\\nvim=2:7.4.1689-3ubuntu1.4 \\\nwget=1.17.1-1ubuntu1.5 \\\nxz-utils=5.1.1alpha+20120614-2ubuntu2 \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Create user and allow sudo without password.\nRUN addgroup --quiet --gid $gid $group \\\n&& adduser --quiet --disabled-password --gecos \",,,,\" --uid $uid --ingroup $group $user \\\n&& echo \"${user} ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$user\n\n# Install Docker CLI.\nCOPY --from=docker /usr/local/bin/docker /usr/local/bin/docker\n\n# Install gcloud and kubectl.\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n&& curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n&& apt-get update && apt-get -qqy install --no-install-recommends \\\ngoogle-cloud-sdk=294.0.0-0 \\\nkubectl=1.18.3-00 \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Install bash completion files.\nRUN /usr/bin/kind completion bash > /etc/bash_completion.d/kind \\\n&& /usr/bin/helm completion bash > /etc/bash_completion.d/helm \\\n&& /usr/bin/kubectl completion bash > /etc/bash_completion.d/kubectl \\\n&& curl -f -s -Lo - https://raw.githubusercontent.com/docker/cli/master/contrib/completion/bash/docker > /etc/bash_completion.d/docker\n\nUSER $user\n\n# Fix the Docker socket access rights at login time to allow non-root access.\nRUN echo \"sudo chmod o+rw /var/run/docker.sock\" >> /home/${user}/.bashrc\n\n# Setup Go for the user.\nRUN echo \"# Go environment.\" >> /home/${user}/.bashrc \\\n&& echo \"export GOROOT=/usr/local/go\" >> /home/${user}/.bashrc \\\n&& echo \"export GOPATH=~/go\" >> /home/${user}/.bashrc \\\n&& echo \"export PATH=\\$GOROOT/bin:\\$GOPATH/out/linux_amd64/release:\\$GOPATH/bin:\\$PATH\" >> /home/${user}/.bashrc \\\n&& echo \"export GO111MODULE=on\" >> /home/${user}/.bashrc\n\nWORKDIR /home/$user\nENTRYPOINT [\"/bin/bash\", \"-c\"]\n"
}