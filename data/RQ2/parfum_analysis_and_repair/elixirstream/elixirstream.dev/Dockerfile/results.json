{
  "startTime": 1674252240018,
  "endTime": 1674252241156,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 14,
        "columnStart": 22,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## SYSTEM\n\nFROM hexpm/elixir:1.11.3-erlang-23.2.4-ubuntu-focal-20201008 AS builder\n\nENV LANG=C.UTF-8 \\\n    LANGUAGE=C:en \\\n    LC_ALL=C.UTF-8 \\\n    DEBIAN_FRONTEND=noninteractive \\\n    TERM=xterm \\\n    MIX_ENV=prod \\\n    REFRESH_AT=20210314\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      git expat libxml2-dev pkg-config libasound2-dev libssl-dev cmake \\\n      libfreetype6-dev libexpat1-dev libxcb-composite0-dev curl python3 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /tmp\n\nRUN curl https://sh.rustup.rs -sSf > rustup.sh && \\\n  chmod 755 rustup.sh && \\\n  ./rustup.sh -y && \\\n  rm /tmp/rustup.sh\n\nRUN ~/.cargo/bin/cargo install silicon\n\nARG USER_ID\nARG GROUP_ID\n\nRUN groupadd --gid $GROUP_ID user && \\\n    useradd -m --gid $GROUP_ID --uid $USER_ID user\n\nUSER user\nRUN mkdir /home/user/app\nWORKDIR /home/user/app\n\nRUN mix local.rebar --force && \\\n    mix local.hex --if-missing --force\n\nCOPY --chown=user:user mix.* ./\nCOPY --chown=user:user config ./config\nCOPY --chown=user:user VERSION .\nRUN mix do deps.get, deps.compile\n\n## FRONTEND\n\nFROM node:14.14.0-alpine AS frontend\n\nRUN mkdir -p /home/user/app\nWORKDIR /home/user/app\n# PurgeCSS needs to see the Elixir stuff\nCOPY lib ./lib\nCOPY assets/package.json assets/package-lock.json ./assets/\nCOPY --from=builder /home/user/app/deps/phoenix ./deps/phoenix\nCOPY --from=builder /home/user/app/deps/phoenix_html ./deps/phoenix_html\nCOPY --from=builder /home/user/app/deps/phoenix_live_view ./deps/phoenix_live_view\nRUN npm --prefix ./assets ci --progress=false --no-audit --loglevel=error\n\nCOPY assets ./assets\nRUN npm --prefix ./assets run deploy\n\n## APP\nFROM builder AS app\nUSER user\nCOPY --from=frontend --chown=user:user /home/user/app/priv/static ./priv/static\nCOPY --chown=user:user lib ./lib\nCOPY --chown=user:user rel ./rel\nCOPY --chown=user:user priv/gettext ./priv/gettext\nCOPY --chown=user:user priv/repo ./priv/repo\nRUN mix phx.digest\n\nCMD [\"/bin/bash\"]\n"
}