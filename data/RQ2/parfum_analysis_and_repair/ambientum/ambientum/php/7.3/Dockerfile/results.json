{
  "startTime": 1674220677983,
  "endTime": 1674220679750,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 46,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 77,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###\n# Ambientum\n#\n# Repository:    PHP\n# Image:         CLI/Base\n# Version:       7.3.x\n# Strategy:      PHP From PHP-Alpine Repository (CODECASTS) (https://github.com/codecasts/php-alpine)\n# Base distro:   Alpine 3.11\n#\nFROM alpine:3.11\n\n# Repository/Image Maintainer\nLABEL maintainer=\"Diego Hernandes <iamhernandev@gmail.com>\"\n\n# Platform args.\nARG TARGETPLATFORM\nARG BUILDPLATFORM\n\n# Avoid cache use when PHP version changes\nENV CURRENT_PHP_VERSION=7.3.33\n\n# Variables for enabling NewRelic\nENV ENV=\"/etc/profile\" \\\n    FRAMEWORK=laravel \\\n    CAROOT=/home/ambientum/.mkcert \\\n    SSL_DOMAIN=\"ambientum.localhost\" \\\n    OPCACHE_MODE=\"normal\" \\\n    PHP_MEMORY_LIMIT=256M \\\n    XDEBUG_ENABLED=false \\\n    XDEBUG_IDE_KEY=\"ambientum\" \\\n    NR_ENABLED=false \\\n    NR_APP_NAME=\"\" \\\n    NR_LICENSE_KEY=\"\" \\\n    TERM=xterm-256color \\\n    COLORTERM=truecolor \\\n    COMPOSER_PROCESS_TIMEOUT=1200\n\n# Add the ENTRYPOINT script\nCOPY etc /etc\nCOPY scripts /scripts\n\n# copy mkcert binary from mkcert image.\nCOPY --from=ambientum/mkcert:1.4 /bin/mkcert /bin/mkcert\n\n# Install PHP From DotDeb, Common Extensions, Composer and then cleanup\nRUN echo \"---> Enabling PHP-Alpine\" && \\\n    apk add --no-cache --update \\\n    gettext \\\n    ca-certificates \\\n    tar \\\n    xz \\\n    jq \\\n    wget \\\n    curl \\\n    openssh \\\n    bash \\\n    fontconfig \\\n    libxrender \\\n    libxext \\\n    imagemagick \\\n    nano \\\n    vim \\\n    git \\\n    unzip \\\n    wget \\\n    make \\\n    sudo \\\n    s6 && \\\n    echo \"---> Installing static FFMpeg binaries\" && \\\n    export FFMPEG_PLATFORM=$(echo $TARGETPLATFORM | sed 's/linux\\///g') && \\\n    wget -O /tmp/ffmpeg.tar.xz \"https://www.johnvansickle.com/ffmpeg/old-releases/ffmpeg-4.4-${FFMPEG_PLATFORM}-static.tar.xz\" && \\\n    tar --directory=/tmp -xvf /tmp/ffmpeg.tar.xz && \\\n    mv \"/tmp/ffmpeg-4.4-${FFMPEG_PLATFORM}-static/ffmpeg\" /bin/ffmpeg && \\\n    mv \"/tmp/ffmpeg-4.4-${FFMPEG_PLATFORM}-static/ffprobe\" /bin/ffprobe && \\\n    mv \"/tmp/ffmpeg-4.4-${FFMPEG_PLATFORM}-static/qt-faststart\" /bin/qt-faststart && \\\n    rm -rf /tmp/ffmpeg* && \\\n    echo \"---> Preparing and Installing PHP\" && \\\n    apk add --no-cache --update \\\n    php7@php \\\n    php7-common@php \\\n    php7-apcu@php \\\n    php7-bcmath@php \\\n    php7-bz2@php \\\n    php7-calendar@php \\\n    php7-curl@php \\\n    php7-ctype@php \\\n    php7-exif@php \\\n    php7-fpm@php \\\n    php7-gd@php \\\n    php7-gmp@php \\\n    php7-iconv@php \\\n    php7-imagick@php \\\n    php7-imap@php \\\n    php7-intl@php \\\n    php7-json@php \\\n    php7-mbstring@php \\\n    php7-mysqli@php \\\n    php7-mysqlnd@php \\\n    php7-pdo_mysql@php \\\n    php7-memcached@php \\\n    php7-mongodb@php \\\n    php7-opcache@php \\\n    php7-pdo_pgsql@php \\\n    php7-pgsql@php \\\n    php7-posix@php \\\n    php7-redis@php \\\n    php7-soap@php \\\n    php7-sodium@php \\\n    php7-sqlite3@php \\\n    php7-pdo_sqlite@php \\\n    php7-xdebug@php \\\n    php7-xml@php \\\n    php7-xmlreader@php \\\n    php7-openssl@php \\\n    php7-phar@php \\\n    php7-xsl@php \\\n    php7-zip@php \\\n    php7-zlib@php \\\n    php7-pcntl@php \\\n    php7-gettext@php \\\n    php7-cgi@php \\\n    php7-zlib@php \\\n    php7-pcov@php \\\n    php7-sockets@php \\\n    php7-phpdbg@php && \\\n    echo \"Set disable_coredump false\" >> /etc/sudo.conf && \\\n    sudo ln -s /usr/bin/php7 /usr/bin/php && \\\n    sudo ln -s /usr/bin/php-cgi7 /usr/bin/php-cgi && \\\n    sudo ln -s /usr/sbin/php-fpm7 /usr/sbin/php-fpm && \\\n    echo \"---> Installing Composer\" && \\\n    curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer && \\\n    echo \"---> Cleaning up\" && \\\n    rm -rf /tmp/* && \\\n    echo \"---> Adding the ambientum user\" && \\\n    adduser -D -u 1000 ambientum && \\\n    mkdir -p /var/www/app && \\\n    mkdir -p /home/ssl && \\\n    chown -R ambientum:ambientum /var/www && \\\n    chown -R ambientum:ambientum /home/ssl && \\\n    echo \"---> Configuring PHP\" && \\\n    echo \"ambientum  ALL = ( ALL ) NOPASSWD: ALL\" >> /etc/sudoers && \\\n    sed -i \"/;error_log = .*/c\\error_log = /dev/stderr\" /etc/php7/php.ini && \\\n    sed -i \"/memory_limit = .*/c\\memory_limit = $PHP_MEMORY_LIMIT\" /etc/php7/php.ini && \\\n    sed -i \"/user = .*/c\\user = ambientum\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/^group = .*/c\\group = ambientum\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/listen.owner = .*/c\\listen.owner = ambientum\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/listen.group = .*/c\\listen.group = ambientum\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/listen = .*/c\\listen = [::]:9000\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/;access.log = .*/c\\access.log = /dev/stderr\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/;decorate_workers_output = .*/c\\decorate_workers_output = no\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/;clear_env = .*/c\\clear_env = no\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/;catch_workers_output = .*/c\\catch_workers_output = yes\" /etc/php7/php-fpm.d/www.conf && \\\n    sed -i \"/;log_level = .*/c\\log_level = notice\" /etc/php7/php-fpm.conf && \\\n    sed -i \"/;log_limit = .*/c\\log_limit = 16384\" /etc/php7/php-fpm.conf && \\\n    sed -i \"/pid = .*/c\\;pid = /run/php/php7-fpm.pid\" /etc/php7/php-fpm.conf && \\\n    sed -i \"/;daemonize = .*/c\\daemonize = yes\" /etc/php7/php-fpm.conf && \\\n    sed -i \"/error_log = .*/c\\error_log = /dev/stderr\" /etc/php7/php-fpm.conf && \\\n    sed -i \"/;rlimit_files = .*/c\\rlimit_files = 8192\" /etc/php7/php-fpm.conf && \\\n    sed -i \"/;rlimit_core = .*/c\\rlimit_core = unlimited\" /etc/php7/php-fpm.conf && \\\n    sed -i \"/post_max_size = .*/c\\post_max_size = 1000M\" /etc/php7/php.ini && \\\n    sed -i \"/upload_max_filesize = .*/c\\upload_max_filesize = 1000M\" /etc/php7/php.ini && \\\n    sed -i \"/zend_extension=xdebug/c\\;zend_extension=xdebug\" /etc/php7/conf.d/00_xdebug.ini && \\\n    chown -R ambientum:ambientum /home/ambientum && \\\n    chown -R ambientum:ambientum /scripts && \\\n    chmod +x /scripts/*.sh && \\\n    rm -rf /tmp/* && rm /tmp/ffmpeg.tar.xz\n\n# Define the running user\nUSER ambientum\n\n# Application directory\nWORKDIR \"/var/www/app\"\n\n# Environment variables\nENV PATH=/scripts:/home/ambientum/.composer/vendor/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\n\n# Define the entry point that tries to enable newrelic\nENTRYPOINT [\"/scripts/entrypoint.sh\"]\n\n# As non daemon and single base image, it may be used as cli container\nCMD [\"/usr/bin/env\", \"ash\"]\n"
}