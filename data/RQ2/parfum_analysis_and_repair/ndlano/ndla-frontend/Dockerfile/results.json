{
  "startTime": 1674256337349,
  "endTime": 1674256337779,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 26,
        "columnEnd": 44
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### Build stage\nFROM node:14.16-alpine as builder\n\nENV HOME=/home/app\nENV APP_PATH=$HOME/ndla-frontend\n\n# Copy necessary files for installing dependencies\nCOPY yarn.lock package.json $APP_PATH/\n\n# Run yarn before src copy to enable better layer caching\nWORKDIR $APP_PATH\nRUN yarn\n\n# Copy necessary source files for server and client build\nCOPY .babelrc tsconfig.json .eslintrc.js razzle.config.js postcss.config.js $APP_PATH/\n\nCOPY src $APP_PATH/src\nCOPY public $APP_PATH/public\n\n# Build client code\nRUN yarn run build\n\n# Move robots.txt to build folder\nRUN mv $APP_PATH/src/server/robots.txt $APP_PATH/build/robots.txt\n\n### Run stage\nFROM node:14.16-alpine\n\nRUN apk add --no-cache py2-pip jq && pip install --no-cache-dir awscli\nCOPY run-ndla-frontend.sh /\n\nRUN npm install pm2 -g && npm cache clean --force;\nWORKDIR /home/app/ndla-frontend\nCOPY --from=builder /home/app/ndla-frontend/build build\n\nENV NODE_ENV=production\n\nCMD [\"/run-ndla-frontend.sh\", \"pm2-runtime -i max build/server.js '|' bunyan\"]\n"
}