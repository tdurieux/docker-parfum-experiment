{
  "startTime": 1674217436694,
  "endTime": 1674217437571,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 38,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 72,
        "columnEnd": 88
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-alpine AS build\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies and add source files\nCOPY package.json yarn.lock tsconfig.json ./\nCOPY src/ ./src\nRUN yarn install --frozen-lockfile && yarn build && rm -f dist/*.map && yarn cache clean;\n\n# Second stage\nFROM node:16-alpine\n\nWORKDIR /usr/src/app\n\n# Copy artifacts\nCOPY --from=build /usr/src/app/dist/ ./\nCOPY --from=build /usr/src/app/node_modules ./node_modules\nCOPY env.json src/responses.json ./\nCOPY src/responses ./responses/\n\nRUN addgroup -S app -g 50000 && \\\n    adduser -S -g app -u 50000 app && \\\n    mkdir /data && chown app:app /data/\n\nUSER app\n\nENTRYPOINT [ \"node\", \"server.js\" ]\n"
}