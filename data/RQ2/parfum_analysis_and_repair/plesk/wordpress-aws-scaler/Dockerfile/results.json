{
  "startTime": 1674251011175,
  "endTime": 1674251011956,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "FROM debian:testing\n\nMAINTAINER Jan Loeffler <jan@plesk.com>\n\n# Upgrade everything\nRUN apt-get update && apt-get upgrade -y\n\n# Basics software\nRUN apt-get install --no-install-recommends -y wget curl mysql-client nginx && rm -rf /var/lib/apt/lists/*;\n\n# PHP\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    php7.0 \\\n    php7.0-cgi \\\n    php7.0-cli \\\n    php7.0-common \\\n    php7.0-curl \\\n    php7.0-dev \\\n    php7.0-gd \\\n    php7.0-gmp \\\n    php7.0-json \\\n    php7.0-ldap \\\n    php7.0-memcached \\\n    php7.0-mysql \\\n    php7.0-odbc \\\n    php7.0-opcache \\\n    php7.0-pspell \\\n    php7.0-readline \\\n    php7.0-sqlite3 \\\n    php7.0-tidy \\\n    php7.0-xmlrpc \\\n    php7.0-xsl \\\n    php7.0-fpm \\\n    php7.0-intl \\\n    php7.0-zip \\\n    php7.0-mcrypt && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /run/php\n\n# nginx site conf\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nCOPY docker/nginx-site.conf /etc/nginx/sites-available/default\n\n# Install WP-CLI\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar \\\n\t&& chmod +x wp-cli.phar \\\n\t&& mv wp-cli.phar /usr/local/bin/wp\n\n# Download WordPress\nRUN wp core download --path=/usr/src/wordpress --allow-root\n\n# Integrate user data\nCOPY content /usr/src/wordpress/wp-content\nCOPY docker/custom.sh /custom.sh\nCOPY docker/data.sql /data.sql\nCOPY docker/mu-21d059a5-6614bceb-ed85e357-bd885a86 /usr/src/wordpress\nCOPY docker/php-opcache.ini /etc/php/7.0/fpm/conf.d/10-opcache.ini\n\n# Fix user permissions\nRUN chown -R www-data:www-data /usr/src/wordpress\n\n# Add New Relic repo\nRUN echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list \\\n    && wget -O- https://download.newrelic.com/548C16BF.gpg | apt-key add -\n\nCOPY docker/docker-entrypoint.sh /entrypoint.sh\n\n# grr, ENTRYPOINT resets CMD now\nENTRYPOINT [\"/entrypoint.sh\"]\n\nWORKDIR /usr/src/wordpress\nVOLUME ['/usr/src/wordpress/wp-content']\n\nEXPOSE 80\nEXPOSE 443\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}