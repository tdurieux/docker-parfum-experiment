diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/computationalpathologygroup/wsics/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/computationalpathologygroup/wsics/Dockerfile/repaired.Dockerfile
index 9f08224..11b92ad 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/computationalpathologygroup/wsics/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/computationalpathologygroup/wsics/Dockerfile/repaired.Dockerfile
@@ -1,35 +1,35 @@
-FROM debian
-
-### Acquires required packages and libraries ###
+FROM debian
+
+### Acquires required packages and libraries ###
 RUN apt-get update && \
-	apt-get upgrade -y && \
-	apt-get install -y \
-	build-essential \
-	cmake \
-	git \
-	wget \
-	unzip \
-	openslide-tools \
-	libpcre++-dev \
-	qt5-default \
-	autoconf \
-	automake \
-	libtool \
-	pkg-config \
-	glib2.0 \
-	libboost-all-dev \
-	libjpeg-dev \
-	libtiff-dev \
-	libcairo2-dev \
-	libgdk-pixbuf2.0-dev \
-	libxml2-dev \
-	zlib1g-dev \
-	swig3.0
-
-### Compiles the required libraries ###
-RUN mkdir libraries
-WORKDIR /libraries/
-
+	apt-get upgrade -y && \
+	apt-get install --no-install-recommends -y \
+	build-essential \
+	cmake \
+	git \
+	wget \
+	unzip \
+	openslide-tools \
+	libpcre++-dev \
+	qt5-default \
+	autoconf \
+	automake \
+	libtool \
+	pkg-config \
+	glib2.0 \
+	libboost-all-dev \
+	libjpeg-dev \
+	libtiff-dev \
+	libcairo2-dev \
+	libgdk-pixbuf2.0-dev \
+	libxml2-dev \
+	zlib1g-dev \
+	swig3.0 && rm -rf /var/lib/apt/lists/*;
+
+### Compiles the required libraries ###
+RUN mkdir libraries
+WORKDIR /libraries/
+
 RUN git clone https://github.com/Kitware/CMake.git && \
 	ls -lh && \
 	cd CMake && \
@@ -37,18 +37,18 @@ RUN git clone https://github.com/Kitware/CMake.git && \
 	make -j 4 && \
 	make install && \
 	cd .. && \
-	rm CMake -r
-
-RUN wget http://www.ece.uvic.ca/%7Efrodo/jasper/software/jasper-2.0.14.tar.gz && \
-	tar -xzf jasper-2.0.14.tar.gz && \
-	rm jasper-2.0.14.tar.gz && \
-	cd jasper-2.0.14/build && \
-	cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/ .. && \
-	make -j 4 && \
-	make install && \
-	cd ../.. && \
-	rm jasper-2.0.14 -r
-
+	rm CMake -r
+
+RUN wget https://www.ece.uvic.ca/%7Efrodo/jasper/software/jasper-2.0.14.tar.gz && \
+	tar -xzf jasper-2.0.14.tar.gz && \
+	rm jasper-2.0.14.tar.gz && \
+	cd jasper-2.0.14/build && \
+	cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/ .. && \
+	make -j 4 && \
+	make install && \
+	cd ../.. && \
+	rm jasper-2.0.14 -r
+
 RUN wget https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz && \
 	tar -xzf v2.3.0.tar.gz && \
 	mkdir openjpeg-2.3.0/build/ && \
@@ -58,18 +58,18 @@ RUN wget https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz && \
 	make -j 4 && \
 	make install && \
 	cd ../.. && \
-	rm openjpeg-2.3.0 -r
-
+	rm openjpeg-2.3.0 -r
+
 RUN wget https://www.sqlite.org/2019/sqlite-autoconf-3270100.tar.gz && \
 	tar -xzf sqlite-autoconf-3270100.tar.gz && \
 	rm sqlite-autoconf-3270100.tar.gz && \
-	cd sqlite-autoconf-3270100 && \
-	./configure --libdir /usr/lib/ --includedir /usr/include/ && \
-	make -j 4 && \
-	make install && \
-	cd .. && \
-	rm sqlite-autoconf-3270100 -r
-
+	cd sqlite-autoconf-3270100 && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --libdir /usr/lib/ --includedir /usr/include/ && \
+	make -j 4 && \
+	make install && \
+	cd .. && \
+	rm sqlite-autoconf-3270100 -r
+
 RUN git clone https://github.com/zeux/pugixml.git && \
 	cd pugixml && \
 	cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/ . && \
@@ -77,17 +77,17 @@ RUN git clone https://github.com/zeux/pugixml.git && \
 	make install && \
 	cp src/* /usr/include/ && \
 	cd .. && \
-	rm pugixml -r
-
-RUN	git clone https://github.com/openslide/openslide.git && \
+	rm pugixml -r
+
+RUN git clone https://github.com/openslide/openslide.git && \
 	cd openslide && \
-	autoreconf -i && \
-	./configure --libdir /usr/lib/ --includedir /usr/include/ && \
-	make -j 4 && \
-	make install && \
-	cd .. && \
-	rm openslide -r
-
+	autoreconf -i && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --libdir /usr/lib/ --includedir /usr/include/ && \
+	make -j 4 && \
+	make install && \
+	cd .. && \
+	rm openslide -r
+
 RUN	git clone https://github.com/opencv/opencv.git && \
 	cd opencv && \
 	mkdir build && \
@@ -96,8 +96,8 @@ RUN	git clone https://github.com/opencv/opencv.git && \
 	make -j 4 && \
 	make install && \
 	cd ../.. && \
-	rm opencv -r
-	
+	rm opencv -r
+
 RUN git clone --single-branch --branch master https://github.com/computationalpathologygroup/ASAP.git && \
 	cd ASAP && \
 	cmake \
@@ -114,10 +114,10 @@ RUN git clone --single-branch --branch master https://github.com/computationalpa
 	make -j 4 && \
 	make install && \
 	cd .. && \
-	rm ASAP -r
-
-### Compiles the stain normalization algorithm ###
-ADD . ./WSICS/
+	rm ASAP -r
+
+### Compiles the stain normalization algorithm ###
+ADD . ./WSICS/
 RUN	cd WSICS && \
 	cmake \
 	-DCMAKE_BUILD_TYPE=Release \
@@ -128,10 +128,10 @@ RUN	cd WSICS && \
 	make -j 4 && \
 	make install && \
 	cd ..  && \
-	rm WSICS -r
-
-### Sets the entrypoint ###
-RUN rm /libraries/ -r
-WORKDIR /usr/bin/
-ENTRYPOINT [ "wsics" ]
+	rm WSICS -r
+
+### Sets the entrypoint ###
+RUN rm /libraries/ -r
+WORKDIR /usr/bin/
+ENTRYPOINT [ "wsics" ]
 CMD []
\ No newline at end of file