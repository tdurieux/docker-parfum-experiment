{
  "startTime": 1674250960007,
  "endTime": 1674250961602,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 1,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 1,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian\n\n### Acquires required packages and libraries ###\nRUN apt-get update && \\\r\n\tapt-get upgrade -y && \\\n\tapt-get install --no-install-recommends -y \\\n\tbuild-essential \\\n\tcmake \\\n\tgit \\\n\twget \\\n\tunzip \\\n\topenslide-tools \\\n\tlibpcre++-dev \\\n\tqt5-default \\\n\tautoconf \\\n\tautomake \\\n\tlibtool \\\n\tpkg-config \\\n\tglib2.0 \\\n\tlibboost-all-dev \\\n\tlibjpeg-dev \\\n\tlibtiff-dev \\\n\tlibcairo2-dev \\\n\tlibgdk-pixbuf2.0-dev \\\n\tlibxml2-dev \\\n\tzlib1g-dev \\\n\tswig3.0 && rm -rf /var/lib/apt/lists/*;\n\n### Compiles the required libraries ###\nRUN mkdir libraries\nWORKDIR /libraries/\n\nRUN git clone https://github.com/Kitware/CMake.git && \\\r\n\tls -lh && \\\r\n\tcd CMake && \\\r\n\tcmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/ . && \\\r\n\tmake -j 4 && \\\r\n\tmake install && \\\r\n\tcd .. && \\\r\n\trm CMake -r\n\nRUN wget https://www.ece.uvic.ca/%7Efrodo/jasper/software/jasper-2.0.14.tar.gz && \\\n\ttar -xzf jasper-2.0.14.tar.gz && \\\n\trm jasper-2.0.14.tar.gz && \\\n\tcd jasper-2.0.14/build && \\\n\tcmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/ .. && \\\n\tmake -j 4 && \\\n\tmake install && \\\n\tcd ../.. && \\\n\trm jasper-2.0.14 -r\n\nRUN wget https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz && \\\r\n\ttar -xzf v2.3.0.tar.gz && \\\r\n\tmkdir openjpeg-2.3.0/build/ && \\\r\n\trm v2.3.0.tar.gz && \\\r\n\tcd openjpeg-2.3.0/build && \\\r\n\tcmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/ .. && \\\r\n\tmake -j 4 && \\\r\n\tmake install && \\\r\n\tcd ../.. && \\\r\n\trm openjpeg-2.3.0 -r\n\nRUN wget https://www.sqlite.org/2019/sqlite-autoconf-3270100.tar.gz && \\\r\n\ttar -xzf sqlite-autoconf-3270100.tar.gz && \\\r\n\trm sqlite-autoconf-3270100.tar.gz && \\\r\n\tcd sqlite-autoconf-3270100 && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir /usr/lib/ --includedir /usr/include/ && \\\n\tmake -j 4 && \\\n\tmake install && \\\n\tcd .. && \\\n\trm sqlite-autoconf-3270100 -r\n\nRUN git clone https://github.com/zeux/pugixml.git && \\\r\n\tcd pugixml && \\\r\n\tcmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/ . && \\\r\n\tmake -j 4 && \\\r\n\tmake install && \\\r\n\tcp src/* /usr/include/ && \\\r\n\tcd .. && \\\r\n\trm pugixml -r\n\nRUN git clone https://github.com/openslide/openslide.git && \\\r\n\tcd openslide && \\\r\n\tautoreconf -i && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir /usr/lib/ --includedir /usr/include/ && \\\n\tmake -j 4 && \\\n\tmake install && \\\n\tcd .. && \\\n\trm openslide -r\n\nRUN\tgit clone https://github.com/opencv/opencv.git && \\\r\n\tcd opencv && \\\r\n\tmkdir build && \\\r\n\tcd build && \\\r\n\tcmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=/usr/ .. && \\\r\n\tmake -j 4 && \\\r\n\tmake install && \\\r\n\tcd ../.. && \\\r\n\trm opencv -r\n\nRUN git clone --single-branch --branch master https://github.com/computationalpathologygroup/ASAP.git && \\\r\n\tcd ASAP && \\\r\n\tcmake \\\r\n\t-DCMAKE_BUILD_TYPE=Release \\\r\n\t-DCMAKE_INSTALL_PREFIX=/usr/ \\\r\n\t-DOPENSLIDE_INCLUDE_DIR=/usr/include/openslide/ \\\r\n\t-DBOOST_ROOT=/usr/ \\\r\n\t-DBUILD_DIAG_PATHOLOGY_EXECUTABLES=OFF \\\r\n\t-DBUILD_DIAG_PATHOLOGY_TESTS=OFF \\\r\n\t-DBUILD_BUILD_EXECUTABLES=OFF \\\r\n\t-DBUILD_MULTIRESOLUTIONIMAGEINTERFACE_VSI_SUPPORT=OFF \\\r\n\t-DBUILD_TESTS=OFF \\\r\n\t. && \\\r\n\tmake -j 4 && \\\r\n\tmake install && \\\r\n\tcd .. && \\\r\n\trm ASAP -r\n\n### Compiles the stain normalization algorithm ###\nADD . ./WSICS/\nRUN\tcd WSICS && \\\r\n\tcmake \\\r\n\t-DCMAKE_BUILD_TYPE=Release \\\r\n\t-DBOOST_ROOT=/usr/ \\\r\n\t-DASAP_INCLUDE_DIRS=/usr/include/ \\\r\n\t-DASAP_LIB_DIRS=/usr/lib/ \\\r\n\t. && \\\r\n\tmake -j 4 && \\\r\n\tmake install && \\\r\n\tcd ..  && \\\r\n\trm WSICS -r\n\n### Sets the entrypoint ###\nRUN rm /libraries/ -r\nWORKDIR /usr/bin/\nENTRYPOINT [ \"wsics\" ]\nCMD []"
}