{
  "startTime": 1674254667743,
  "endTime": 1674254668462,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 84,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU_VERSION=20.04\n\nFROM ubuntu:${UBUNTU_VERSION}\n\nENV TZ=Europe/Amsterdam\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt-get update \\\n    && apt-get install -y -qq --no-install-recommends \\\n        cmake \\\n        dpkg-dev \\\n        file \\\n        g++ \\\n        make \\\n        qt5-default \\\n        qtbase5-dev \\\n        qttools5-dev \\\n        libqt5opengl5-dev \\\n        git \\\n        libopencv-dev \\\n        libdcmtk-dev \\\n        libopenjp2-7-dev \\\n        libopenslide-dev \\\n        wget \\\n        swig \\\n        libunittest++-dev \\\n        ca-certificates \\\n        nano \\\n        software-properties-common \\\n        lsb-release \\\n    && add-apt-repository ppa:ubuntu-toolchain-r/test \\\n    && apt-get update \\\n    && apt-get install -y -qq --no-install-recommends \\\n        g++-10 \\\n        gcc-10 \\\n    && update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 50 \\\n    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 50 && rm -rf /var/lib/apt/lists/*;\n\n# Ensure latest version of CMake\nRUN apt purge -y --auto-remove cmake\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null\nRUN apt-add-repository \"deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main\"\nRUN apt update && \\\n    apt install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    mkdir /root/.conda &&\\\n    bash Miniconda3-latest-Linux-x86_64.sh -b &&\\\n    rm -f Miniconda3-latest-Linux-x86_64.sh\n\nRUN /root/miniconda3/bin/conda update --quiet -n base -c defaults conda && \\\n    /root/miniconda3/bin/conda create --quiet --name build_python3.8 python=3.8 && \\\n    /root/miniconda3/bin/conda install --quiet -n build_python3.8 numpy nomkl && \\ \n    /root/miniconda3/bin/conda create --quiet --name build_python3.9 python=3.9 && \\\n    /root/miniconda3/bin/conda install --quiet -n build_python3.9 numpy nomkl && \\\n    /root/miniconda3/bin/conda create --quiet --name build_python3.10 python=3.10 && \\\n    /root/miniconda3/bin/conda install --quiet -n build_python3.10 numpy nomkl\n\n# Small hack to as libijg8 is installed in a different locations in Ubuntu 20.04\nRUN ln -s /usr/lib/x86_64-linux-gnu/libijg8.so /usr/lib/libijg8.so; exit 0;\n\nWORKDIR /root\nRUN wget -q https://github.com/zeux/pugixml/archive/v1.9.tar.gz && tar xzf v1.9.tar.gz && rm v1.9.tar.gz && \\\n    wget -q ftp://dicom.offis.de/pub/dicom/offis/software/dcmtk/dcmtk364/dcmtk-3.6.4.tar.gz && tar xzf dcmtk-3.6.4.tar.gz && mv dcmtk-3.6.4 dcmtk && rm dcmtk-3.6.4.tar.gz\nRUN git clone https://github.com/computationalpathologygroup/ASAP src &&\\\n    mkdir build\n\nWORKDIR /root/build     \nCOPY build_ASAP.sh /root/build/build_ASAP.sh\nRUN chmod a+rxwX ./build_ASAP.sh\n\nCMD ./build_ASAP.sh\n"
}