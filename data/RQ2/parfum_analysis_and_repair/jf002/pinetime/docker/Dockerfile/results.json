{
  "startTime": 1674252034520,
  "endTime": 1674252035404,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update -qq \\\n    && apt-get install --no-install-recommends -y \\\n# x86_64 / generic packages\n      bash \\\n      build-essential \\\n      cmake \\\n      git \\\n      make \\\n      python3 \\\n      python3-pip \\\n      python-is-python3 \\\n      tar \\\n      unzip \\\n      wget \\\n      curl \\\n      # aarch64 packages\n      libffi-dev \\\n      libssl-dev \\\n      python3-dev \\\n      git \\\n      apt-utils \\\n    && curl -f -sL https://deb.nodesource.com/setup_18.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && rm -rf /var/cache/apt/* /var/lib/apt/lists/*;\n\n# Git needed for PROJECT_GIT_COMMIT_HASH variable setting\n\nRUN pip3 install --no-cache-dir adafruit-nrfutil\nRUN pip3 install --no-cache-dir -Iv cryptography==3.3\nRUN pip3 install --no-cache-dir cbor\nRUN npm i lv_font_conv@1.5.2 -g && npm cache clean --force;\n\n# build.sh knows how to compile\nCOPY build.sh /opt/\n\n# Lets get each in a separate docker layer for better downloads\n# GCC\nRUN bash -c \"source /opt/build.sh; GetGcc;\"\n# NrfSdk\nRUN bash -c \"source /opt/build.sh; GetNrfSdk;\"\n# McuBoot\nRUN bash -c \"source /opt/build.sh; GetMcuBoot;\"\n\nENV SOURCES_DIR /sources\nCMD [\"/opt/build.sh\"]\n"
}