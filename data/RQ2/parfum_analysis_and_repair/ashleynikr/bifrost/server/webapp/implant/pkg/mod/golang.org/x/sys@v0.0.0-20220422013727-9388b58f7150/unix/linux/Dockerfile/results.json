{
  "startTime": 1674252753099,
  "endTime": 1674252754374,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Disable interactive prompts on package installation\nENV DEBIAN_FRONTEND noninteractive\n\n# Dependencies to get the git sources and go binaries\nRUN apt-get update && apt-get install -y  --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        git \\\n        rsync \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Get the git sources. If not cached, this takes O(5 minutes).\nWORKDIR /git\nRUN git config --global advice.detachedHead false\n# Linux Kernel: Released 20 Mar 2022\nRUN git clone --branch v5.17 --depth 1 https://kernel.googlesource.com/pub/scm/linux/kernel/git/torvalds/linux\n# GNU C library: Released 03 Feb 2022\nRUN git clone --branch release/2.35/master --depth 1 https://sourceware.org/git/glibc.git\n\n# Only for loong64, add kernel and glibc patch\nRUN git clone https://github.com/loongson/golang-infra.git /git/loong64-patches \\\n    && git config --global user.name \"golang\" && git config --global user.email \"golang@localhost\" \\\n    && cd /git/loong64-patches && git checkout linux-v5.17 && cd /git/linux && git am /git/loong64-patches/*.patch \\\n    && cd /git/loong64-patches && git checkout glibc-v2.35 && cd /git/glibc && git am /git/loong64-patches/*.patch \\\n    && curl -fsSL https://git.savannah.gnu.org/cgit/config.git/plain/config.sub -o /git/glibc/scripts/config.sub\n\n# Get Go\nENV GOLANG_VERSION 1.18\nENV GOLANG_DOWNLOAD_URL https://golang.org/dl/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA256 e85278e98f57cdb150fe8409e6e5df5343ecb13cebf03a5d5ff12bd55a80264f\n\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n    && echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n    && tar -C /usr/local -xzf golang.tar.gz \\\n    && rm golang.tar.gz\n\nENV PATH /usr/local/go/bin:$PATH\n\n# Linux and Glibc build dependencies and emulator\nRUN apt-get update && apt-get install -y  --no-install-recommends \\\n        bison gawk make python3 \\\n        gcc gcc-multilib \\\n        gettext texinfo \\\n        qemu-user \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n# Cross compilers (install recommended packages to get cross libc-dev)\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi \\\n        gcc-mips-linux-gnu gcc-mips64-linux-gnuabi64 \\\n        gcc-mips64el-linux-gnuabi64 gcc-mipsel-linux-gnu \\\n        gcc-powerpc-linux-gnu gcc-powerpc64-linux-gnu \\\n        gcc-powerpc64le-linux-gnu gcc-riscv64-linux-gnu \\\n        gcc-s390x-linux-gnu gcc-sparc64-linux-gnu \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Only for loong64, add patch and build golang\nRUN git clone https://go.googlesource.com/go --branch go1.18 /git/go \\\n    && cd /git/loong64-patches && git checkout go-v1.18 && cd /git/go && git am /git/loong64-patches/*.patch \\\n    && rm -rf /git/loong64-patches && cd /git/go/src && ./make.bash\n\nENV PATH /git/go/bin:$PATH\n\n# Only for loong64, getting tools of qemu-user and gcc-cross-compiler\nRUN apt-get update && apt-get install --no-install-recommends wget xz-utils -y && mkdir /loong64 && cd /loong64 \\\n    && wget -q https://github.com/loongson/build-tools/releases/download/2021.12.21/qemu-loongarch-2022-4-01.tar.gz \\\n    && tar xf qemu-loongarch-2022-4-01.tar.gz && cp ./4-1/new-world/qemu-loongarch64 /usr/bin/ \\\n    && rm -rf qemu-loongarch-2022-4-01.tar.gz 4-1 \\\n    && wget -q https://github.com/loongson/build-tools/releases/download/2021.12.21/loongarch64-clfs-2022-03-03-cross-tools-gcc-glibc.tar.xz \\\n    && tar xf loongarch64-clfs-2022-03-03-cross-tools-gcc-glibc.tar.xz && mv cross-tools.gcc_glibc /usr/local/cross-tools-loong64 \\\n    && rm -rf loongarch64-clfs-2022-03-03-cross-tools-gcc-glibc.tar.xz \\\n    && ln -s /usr/local/cross-tools-loong64/bin/loongarch64-unknown-linux-gnu-gcc /usr/bin/loongarch64-linux-gnu-gcc \\\n    && rm -rf /loong64 && rm -rf /var/lib/apt/lists/*;\n\n# Let the scripts know they are in the docker environment\nENV GOLANG_SYS_BUILD docker\nWORKDIR /build/unix\nENTRYPOINT [\"go\", \"run\", \"linux/mkall.go\", \"/git/linux\", \"/git/glibc\"]\n"
}