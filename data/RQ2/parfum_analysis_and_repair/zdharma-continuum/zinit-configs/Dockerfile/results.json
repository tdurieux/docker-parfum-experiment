{
  "startTime": 1674255937185,
  "endTime": 1674255937801,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Update && install common dependencies\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt update && \\\n    apt install --no-install-recommends -yq \\\n        ncurses-dev man telnet unzip zsh git subversion curl make sudo locales \\\n        autoconf automake python golang-go \\\n        vim htop && rm -rf /var/lib/apt/lists/*;\n\n# Set the locale\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Add user\nRUN adduser --disabled-password --gecos '' user         && \\\n    adduser user sudo                                   && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \\\n    usermod --shell /bin/zsh user\nUSER user\n\n# Install zinit\nRUN sh -c \"$(curl -fsSL https://raw.githubusercontent.com/zdharma/zinit/master/doc/install.sh)\"\n\n# Copy configs into home directory\nARG FOLDER\nCOPY --chown=user \"${FOLDER}\" /home/user\n# Copy of a possible .zshrc named according to a non-leading-dot scheme\nRUN cp -vf /home/user/zshrc.zsh /home/user/.zshrc 2>/dev/null || true\n\n# Install Rust language\nRUN curl 'https://sh.rustup.rs' -sSf | sh -s -- -y  && \\\n    echo 'source ${HOME}/.cargo/env' >> /home/user/.zshenv\n\n# Run user's bootstrap script\nRUN if [ -f /home/user/bootstrap.sh ]; then \\\n        chmod u+x /home/user/bootstrap.sh; \\\n        /home/user/bootstrap.sh; \\\n    fi\n\n# Install all plugins\nARG TERM\nENV TERM ${TERM}\nRUN SHELL=/bin/zsh zsh -i -c -- 'zinit module build; @zinit-scheduler burst || true '\n\nCMD zsh -i -l\n\n"
}