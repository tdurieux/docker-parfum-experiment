{
  "startTime": 1674254104696,
  "endTime": 1674254105753,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=15\n\nFROM python:3.9-slim-bullseye as base\n\nENV LANG=C.UTF-8\nENV PYTHONUNBUFFERED=1\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nRUN apt-get -y update && apt-get install -y --no-install-recommends \\\n    gcc \\\n    libc6-dev \\\n    g++ \\\n    make \\\n    unzip \\\n    nginx  \\\n    vim && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n    && ln -sf /dev/stderr /var/log/nginx/error.log\n\nRUN python -m pip install -U pip setuptools wheel uwsgi\n\nFROM node:${NODE_VERSION} as front-app\n\nWORKDIR /usr/src/app\n\nCOPY package.json yarn.lock ./\nRUN yarn install --pure-lock-file && yarn cache clean;\n\nCOPY assets ./assets/\nCOPY webpack.config.js ./\nRUN yarn run build\n\nFROM base as semantic-bot\n\nWORKDIR /usr/src/app\n\n# Copy source and built files\nCOPY requirements.txt ./\n\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY --from=front-app /usr/local/bin /usr/local/bin\nCOPY --from=front-app /usr/src/app/static/bundles ./assets/bundles\nCOPY --from=front-app /usr/src/app/assets/img ./assets/img\nCOPY --from=front-app /usr/src/app/webpack-stats.json ./webpack-stats.json\nCOPY chat/ ./chat/\nCOPY chatbot/ ./chatbot/\nCOPY chatbot_app/ ./chatbot_app/\nCOPY utils/ ./utils/\nCOPY exp/ ./exp/\nCOPY logs/ ./logs/\nCOPY manage.py ./\nCOPY docker/entrypoint.sh ./entrypoint.sh\nCOPY docker/nginx.default /etc/nginx/sites-available/default\nCOPY docker/uwsgi.ini ./uwsgi.ini\n\nRUN python manage.py collectstatic\nRUN chmod +x entrypoint.sh\nRUN chown -R www-data:www-data /usr/src/app\n\nRUN mkdir /var/log/uwsgi\nRUN touch /var/log/uwsgi/semantic-bot.log\nRUN chown -R www-data:www-data /var/log/uwsgi\n\nENTRYPOINT [\"/usr/src/app/entrypoint.sh\"]"
}