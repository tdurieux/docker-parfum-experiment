{
  "startTime": 1674215655872,
  "endTime": 1674215656260,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "# Use the standard node images.\nFROM node\n\nWORKDIR /app\n\n# We manage our dependencies with yarn, so install that first.\nRUN npm install -g yarn && npm cache clean --force;\n\n# In order to improve build times, we first add package.json and run `yarn\n# install` to get our dependencies, then we add the rest of our source\n# code.  This allows Docker to cache the results of `yarn install` and not\n# re-run it every time\nADD package.json .\nRUN yarn install && yarn cache clean;\nADD ./ .\n\nCMD [\"node\", \"app.js\"]\n"
}