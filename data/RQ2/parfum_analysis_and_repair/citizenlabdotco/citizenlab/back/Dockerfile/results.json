{
  "startTime": 1674216048022,
  "endTime": 1674216049382,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.7.6-slim\n\nRUN apt-get update && apt-get install -qq -y --no-install-recommends \\\n      build-essential libpq-dev file imagemagick curl git optipng jpegoptim pngquant libgeos-dev libgmp3-dev netcat shared-mime-info \\\n      less && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_15.x | bash -\nRUN apt-get -y --no-install-recommends install nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install MJML parser required by email engine.\nRUN npm install -g mjml@4.4.1 && npm cache clean --force;\n\nENV INSTALL_PATH /cl2_back\nRUN mkdir -p $INSTALL_PATH\nWORKDIR $INSTALL_PATH\n\n\nCOPY citizenlab.config.json citizenlab.config.*.json /\nCOPY back/Gemfile back/Gemfile.* ./\nCOPY back/engines ./engines\nCOPY back/lib/citizen_lab.rb ./lib/\n\nRUN gem install bundler:2.3.16\nRUN bundle install\n\nCOPY back/. .\n\nEXPOSE 4000\n\nCMD puma -C config/puma.rb\n"
}