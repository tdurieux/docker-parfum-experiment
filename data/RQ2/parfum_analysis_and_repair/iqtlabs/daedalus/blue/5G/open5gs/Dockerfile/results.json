{
  "startTime": 1674252899784,
  "endTime": 1674252900722,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04 AS builder\n# TODO: mongodb doesn't yet support 22.04, due to old libssl (see https://jira.mongodb.org/browse/SERVER-62300)\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        bison \\\n        build-essential \\\n        ca-certificates \\\n        flex \\\n        git \\\n        gnupg \\\n        libbson-dev \\\n        libcurl4-gnutls-dev \\\n        libgcrypt-dev \\\n        libgnutls28-dev \\\n        libidn11-dev \\\n        libmicrohttpd-dev \\\n        libmongoc-dev \\\n        libnghttp2-dev \\\n        libsctp-dev \\\n        libssl-dev \\\n        libtalloc-dev \\\n        libtins-dev \\\n        libyaml-dev \\\n        lksctp-tools \\\n        mongodb-clients \\\n        netbase \\\n        net-tools \\\n        ninja-build \\\n        pkg-config \\\n        python3-pip \\\n        python3-setuptools \\\n        python3-wheel \\\n        meson \\\n        npm \\\n        nodejs && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/open5gs/open5gs.git -b v2.4.8\nWORKDIR /open5gs\nRUN meson build && ninja -C build install\nWORKDIR /open5gs/webui\nRUN npm install && npm run build && npm cache clean --force;\nWORKDIR /open5gs\n# TODO: provide certs externally; open5gs will use locally built certs for now via make_certs.sh in this image.\nRUN sed -r -i 's/C=\\w+/C=NZ/g;s/ST=\\w+/ST=UpperHutt/g;s/L=\\w+/L=Wellington/g' misc/make_certs.sh && \\\n  mkdir /certs && misc/make_certs.sh /certs\n\nFROM ubuntu:20.04\nLABEL maintainers=\"Charlie Lewis <clewis@iqt.org>\"\nENV DEBIAN_FRONTEND noninteractive\nCOPY --from=builder /usr/local/lib/*-linux-gnu /usr/local/lib/\nCOPY --from=builder /usr/lib/*-linux-gnu /usr/lib/\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        curl \\\n        jq \\\n        iproute2 \\\n        iptables \\\n        iputils-ping \\\n        lksctp-tools \\\n        net-tools \\\n        openvswitch-switch \\\n        tcpdump \\\n        tshark && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get install -y --no-install-recommends npm nodejs && rm -rf /var/lib/apt/lists/*;\nCOPY --from=builder /certs /certs\nCOPY --from=builder /usr/local/bin/open5gs* /usr/local/bin/\nCOPY --from=builder /open5gs/webui /webui\nCOPY --from=builder /usr/local/lib/*/freeDiameter /freeDiameter\nCOPY --from=builder /usr/lib/libtins* /usr/lib/\nCOPY scripts /scripts\nRUN mkdir -p /usr/local/var/log/open5gs\nWORKDIR /usr/local/var/log/open5gs\nRUN touch smf.log\n"
}