{
  "startTime": 1674252499191,
  "endTime": 1674252500278,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 44,
        "columnStart": 23,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile for a DASH masternode\n# usage: docker run marsmensch/masternode-dash:latest\n#\n# how to work with the container\n#\n# 1) build the container (checkout desired git revision first)\n# docker build -t \"marsmensch/masternode-dash:latest\" -f docker/Dockerfile_DASH .\n#\n# 2) start the container \n# docker run -p ${NODE_PORT}:${NODE_PORT} -v $(PWD)/config/dash/dashd.conf:/opt/data \"marsmensch/masternode-dash:latest\"\n#\n# 3) start the container interactively\n# docker run --interactive --tty --entrypoint=/bin/bash \"marsmensch/masternode-dash:latest\"\n#\n# 4) standard help\n# docker run -v $(PWD)/config/dash:/opt/data \"marsmensch/masternode-dash:latest\"\n\nFROM                 ubuntu:xenial\nMAINTAINER \t\t\t Florian Maier <contact@marsmenschen.com>\n\nENV CONTAINER_USER   masternode\nENV PROJECT          dash\nENV GIT_URL          git://github.com/dashpay/dash.git\nENV SVC_VERSION      tags/v0.13.0.0\nENV HOME_DIR         /usr/local/bin\nENV NODE_PORT        9999\nENV REFRESHED_AT     2017-07-25\n\n# add unprivileged user\nRUN adduser --shell /bin/bash --disabled-password \\\n    --disabled-login --gecos '' ${CONTAINER_USER}\n\n# install system packages and compile\nRUN apt-get update \\\n    && apt-get -y upgrade \\\n    && apt-get -y install --no-install-recommends build-essential libtool autotools-dev \\\n    libcurl4-openssl-dev libboost-all-dev libssl-dev libdb++-dev make autoconf automake \\\n    libtool git apt-utils libprotobuf-dev pkg-config libboost-filesystem-dev libboost-chrono-dev \\\n    libevent-dev libboost-program-options-dev libgmp-dev libboost-test-dev libboost-thread-dev \\\n    && mkdir -p /opt/code/ && cd /opt/code/ && git clone ${GIT_URL} ${PROJECT} \\\n    && cd /opt/code/${PROJECT} && git checkout ${SVC_VERSION} \\\n    && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-tests=no --with-incompatible-bdb \\\n\t--enable-glibc-back-compat --with-gui=no \\\n    CFLAGS=\"-march=native\" LIBS=\"-lcurl -lssl -lcrypto -lz\" \\\n    && make && make install \\\n    # remove unneeded stuff\n    && apt-get -y remove build-essential \\\n\tlibboost-all-dev libboost-atomic-dev libboost-atomic1.58-dev \\\n\tlibboost-chrono-dev libboost-chrono1.58-dev \\\n\tlibboost-context-dev libboost-context1.58-dev  \\\n\tlibboost-coroutine-dev libboost-coroutine1.58-dev \\\n\tlibboost-date-time-dev libboost-date-time1.58-dev \\\n\tlibboost-dev libboost-exception-dev libboost-exception1.58-dev \\\n\tlibboost-filesystem-dev libboost-filesystem1.58-dev \\\n\tlibboost-graph-dev libboost-graph-parallel-dev \\\n\tlibboost-graph-parallel1.58-dev libboost-graph1.58-dev \\\n\tlibboost-iostreams-dev libboost-iostreams1.58-dev libboost-locale-dev \\\n\tlibboost-locale1.58-dev libboost-log-dev \\\n\tlibboost-log1.58-dev libboost-log1.58.0 libboost-math-dev \\\n\tlibboost-math1.58-dev libboost-math1.58.0 libboost-mpi-dev \\\n\tlibboost-mpi-python-dev libboost-mpi-python1.58-dev \\\n\tlibboost-mpi1.58-dev libboost-program-options-dev \\\n\tlibboost-program-options1.58-dev libboost-python-dev  \\\n\tlibboost-python1.58-dev libboost-random-dev libboost-random1.58-dev \\\n\tlibboost-regex-dev libboost-regex1.58-dev libboost-serialization-dev  \\\n\tlibboost-serialization1.58-dev libboost-signals-dev libboost-signals1.58-dev \\\n\tlibboost-system-dev libboost-system1.58-dev libboost-test-dev libboost-test1.58-dev \\\n\tlibboost-thread-dev libboost-thread1.58-dev libboost-timer-dev libboost-timer1.58-dev \\\n\tlibboost-tools-dev libboost-wave-dev libboost-wave1.58-dev libboost1.58-dev \\\n\tlibboost1.58-tools-dev libc6-dev libdb5.3++-dev libdb5.3-dev libevent-dev \\\n\tlibexpat1-dev libgmp-dev libibverbs-dev libicu-dev libltdl-dev libnuma-dev \\\n\tlibopenmpi-dev libprotobuf-dev libpython-dev libpython2.7-dev libssl-dev \\\n\tmpi-default-dev python-dev python2.7-dev zlib1g-dev \\\n    && apt -y autoremove \\\n    && rm -rf /opt/code \\\n    && rm -rf /var/lib/apt/lists/*\n\n# EXPOSE the masternode port\nEXPOSE ${NODE_PORT}\n\nRUN chown -R ${CONTAINER_USER} ${HOME_DIR}\nUSER ${CONTAINER_USER}\nWORKDIR ${HOME_DIR}\n\n# start command\nCMD [\"/usr/local/bin/dashd\", \"--help\"]"
}