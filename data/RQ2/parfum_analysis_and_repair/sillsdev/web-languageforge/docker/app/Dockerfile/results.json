{
  "startTime": 1674248632335,
  "endTime": 1674248633300,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ENVIRONMENT value can be either \"production\" or \"development\"\nARG ENVIRONMENT=${ENVIRONMENT:-'production'}\n\n# UI-BUILDER\nFROM node:16.14.0-alpine3.15 AS ui-builder-base\n\nRUN mkdir -p /data\nWORKDIR /data\n\n# Copy in files needed for compilation, located in the repo root\nCOPY typings ./typings/\nCOPY package.json webpack.config.js webpack-dev.config.js webpack-prd.config.js tsconfig.json tslint.json ./\n\n# Use built node_modules from host\nCOPY node_modules ./node_modules/\n\n# node-sass is platform dependent and so must be rebuilt inside docker\nRUN npm rebuild node-sass\n\n# copy in src local files\n# Note: *.html files in src/angular-app aren't necessary for webpack compilation, however changes to HTML files will invalidate this layer\nCOPY src/angular-app ./src/angular-app\nCOPY src/sass ./src/sass\nCOPY src/Site/views/languageforge/theme/default/sass/ ./src/Site/views/languageforge/theme/default/sass\nCOPY src/Site/views/shared/*.scss ./src/Site/views/shared/\n\nFROM ui-builder-base AS production-ui-builder\nENV NPM_BUILD_SUFFIX=prd\n\nFROM ui-builder-base AS development-ui-builder\nENV NPM_BUILD_SUFFIX=dev\n\nFROM ${ENVIRONMENT}-ui-builder AS ui-builder\n\n# artifacts built to /data/src/dist\nRUN npm run build:${NPM_BUILD_SUFFIX}\n\n# COMPOSER-BUILDER\n# download composer app dependencies\n# git - needed for composer install\nFROM sillsdev/web-languageforge:base-php AS composer-builder\nENV COMPOSER_ALLOW_SUPERUSER=1\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/* \\\n    && install-php-extensions @composer\nWORKDIR /composer\nCOPY src/composer.json src/composer.lock /composer/\nRUN composer install\n\n# PRODUCTION IMAGE\nFROM sillsdev/web-languageforge:base-php AS production-app\nRUN rm /usr/local/bin/install-php-extensions\nRUN apt-get remove -y gnupg2\nRUN mv $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini\n# had to add /wait into prod image so the prod image could be run through E2E tests.\nCOPY --from=sillsdev/web-languageforge:wait-latest /wait /wait\n\n# DEVELOPMENT IMAGE\nFROM sillsdev/web-languageforge:base-php AS development-app\nRUN install-php-extensions xdebug\nCOPY docker/app/docker-php-ext-xdebug.ini /usr/local/etc/php/conf.d\nRUN mv $PHP_INI_DIR/php.ini-development $PHP_INI_DIR/php.ini\nCOPY --from=sillsdev/web-languageforge:wait-latest /wait /wait\nCOPY docker/app/run-with-wait.sh /run-with-wait.sh\n\nFROM ${ENVIRONMENT}-app AS languageforge-app\nARG BUILD_VERSION=${BUILD_VERSION:-'9.9.9'}\n\n# copy app into image\nCOPY src /var/www/html/\nRUN ln -s /var/www/html /var/www/src\n\n# grab the built assets from the ui image\nCOPY --from=ui-builder /data/src/dist /var/www/html/dist\n\n# ensure correct write permissions for assets folders,\nRUN    chown -R www-data:www-data /var/www/html/assets /var/www/html/cache \\\n    && chmod -R g+ws /var/www/html/assets /var/www/html/cache\n\nCOPY --from=composer-builder /composer/vendor /var/www/html/vendor\n\n# patch exception handling from Symfony to actually show exceptions instead of swallowing them\nCOPY docker/app/symfony-exceptions.patch /\nRUN patch -p4 -i /symfony-exceptions.patch\n\nRUN echo \"${BUILD_VERSION}\" > /var/www/html/build-version.txt \\\n    && sed -i /var/www/html/version.php -e \"s/^\\\\(define('VERSION', '\\\\).*;\\$/\\\\1${BUILD_VERSION}'\\\\);/\"\n\nENTRYPOINT [ \"tini\", \"-g\", \"--\" ]\nCMD [ \"apache2-foreground\" ]\n"
}