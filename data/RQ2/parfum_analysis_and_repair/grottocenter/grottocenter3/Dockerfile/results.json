{
  "startTime": 1674255425949,
  "endTime": 1674255426676,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is used to deploy the app on App Engine\n#\n# Dockerfile extending the generic Node image with application files for a\n# single application.\nFROM gcr.io/google_appengine/nodejs\nCOPY package.json /app/\n# You have to specify \"--unsafe-perm\" with npm install\n# when running as root.  Failing to do this can cause\n# install to appear to succeed even if a preinstall\n# script fails, and may have other adverse consequences\n# as well.\n# This command will also cat the npm-debug.log file after the\n# build, if it exists.\nRUN npm install --production --unsafe-perm || \\\n  ((if [ -f npm-debug.log ]; then \\\n      cat npm-debug.log; \\\n    fi) && false) && npm cache clean --force;\nCOPY . /app\n# This environment variable disable the grunt build on production\n# So the app need to be build using \"grunt prod\" before creating the docker image\nENV sails_hooks__grunt=false\nENV NODE_ENV=production\nCMD [ \"node\", \"app.js\" ]\nEXPOSE 8080\n"
}