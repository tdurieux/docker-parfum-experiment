{
  "startTime": 1674256183895,
  "endTime": 1674256185441,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 6,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright SecureKey Technologies Inc. All Rights Reserved.\n#\n# SPDX-License-Identifier: Apache-2.0\n#\n# This image is for TESTING purposes only.\n# Not production grade.\n#\n\nARG   FABRIC_PEER_BASE_IMAGE=hyperledger/fabric-peer\nARG   FABRIC_PEER_TAG=latest\n\nFROM  ${FABRIC_PEER_BASE_IMAGE}:${FABRIC_PEER_TAG}\n\nARG   go_version=1.11.1\nARG   gopath=/opt/gopath\nARG   goroot=/opt/go\nARG   pkcs11_tool_url=https://github.com/hyperledger/fabric-sdk-go\nARG   ARCH=amd64\n\nLABEL maintainer=sk-service-eng-team\n\nENV   GOROOT=${goroot} \\\n      GOPATH=${gopath} \\\n      PATH=${PATH}:${gopath}/bin:${goroot}/bin\n\n# some difference in logic for x86_64 vs s390x because of different OS :/\nRUN set -xe; \\\n      export ARCH_URL=amd64 && \\\n      if [ \"${ARCH}\" = \"s390x\" ]; then export ARCH_URL=s390x; \\\n      echo 'deb [check-valid-until=no] http://archive.debian.org/debian jessie-backports main' >> /etc/apt/sources.list; fi && \\\n      apt-get update && \\\n      apt-get install -y --no-install-recommends softhsm2 curl git gcc g++ libtool libltdl-dev && \\\n      rm -rf /var/lib/apt/lists/* && \\\n      mkdir -p /var/lib/softhsm/tokens/ && \\\n      softhsm2-util --init-token --slot 0 --label \"ForFabric\" --so-pin 1234 --pin 98765432 && \\\n      mkdir -p ${GOROOT} ${GOPATH}/src && \\\n      GO_URL=https://storage.googleapis.com/golang/go${go_version}.linux-${ARCH_URL}.tar.gz; \\\n      curl -f -o /tmp/go.tar.gz ${GO_URL} && \\\n      tar -xvzf /tmp/go.tar.gz -C /opt/ && \\\n      rm -rf /tmp/go.tar.gz && \\\n      go get -u github.com/golang/dep/cmd/dep && \\\n      git clone ${pkcs11_tool_url} /tmp/pk11 && \\\n      cp -rp /tmp/pk11/scripts/_go/src/pkcs11helper ${GOPATH}/src/ && \\\n      rm -rf /tmp/pk11 && \\\n      cd ${GOPATH}/src/pkcs11helper && dep ensure -vendor-only -v && \\\n      go install pkcs11helper/cmd/pkcs11helper\n"
}