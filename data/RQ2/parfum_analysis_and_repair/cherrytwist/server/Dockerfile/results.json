{
  "startTime": 1674255688734,
  "endTime": 1674255689633,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.15.0-alpine\n\n\n#install CLI mariadb/mysql client\nRUN apk add --update mariadb-client && apk add python3 && rm -rf /var/cache/apk/*\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Define graphql server port\nARG GRAPHQL_ENDPOINT_PORT_ARG=4000\nARG ENV_ARG=production\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm i -g npm@8.5.5 && npm cache clean --force;\nRUN npm install && npm cache clean --force;\n\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source & config files for TypeORM & TypeScript\nCOPY ./src ./src\nCOPY ./tsconfig.json .\nCOPY ./tsconfig.build.json .\nCOPY ./alkemio.yml .\n\nRUN npm run build\n\n## Add the wait script to the image\nADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.7.3/wait /wait\nRUN chmod +x /wait\n\nENV GRAPHQL_ENDPOINT_PORT=${GRAPHQL_ENDPOINT_PORT_ARG}\nENV NODE_ENV=${ENV_ARG}\n\nADD .scripts/create_db.sh /create_db.sh\nRUN chmod +x /create_db.sh\n\n\nEXPOSE ${GRAPHQL_ENDPOINT_PORT_ARG}\nCMD [\"/bin/sh\", \"-c\", \"/create_db.sh && npm run migration:run && npm run start:prod\"]\n"
}