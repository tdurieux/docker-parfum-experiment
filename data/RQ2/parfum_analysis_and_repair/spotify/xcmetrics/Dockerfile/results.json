{
  "startTime": 1674220774060,
  "endTime": 1674220774850,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 26,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 26,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ================================\n# Build image\n# ================================\nFROM swift:5.3-bionic as build\nWORKDIR /build\n\n# Install libraries needed\nRUN apt-get -qq update && apt-get install --no-install-recommends -y \\\n  libssl-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\n# First just resolve dependencies.\n# This creates a cached layer that can be reused\n# as long as your Package.swift/Package.resolved\n# files do not change.\nCOPY ./Package.* ./\nRUN swift package resolve\n\n# Copy entire repo into container\nCOPY . .\n\n# Compile with optimizations\nRUN swift build --enable-test-discovery --product XCMetricsBackend -c release\n\n# ================================\n# Run image\n# ================================\nFROM swift:5.3-bionic-slim\n\n# Create a vapor user and group with /app as its home directory\nRUN useradd --user-group --create-home --home-dir /app vapor\n\nWORKDIR /app\n\n# Copy build artifacts\nCOPY --from=build --chown=vapor:vapor /build/.build/release /app\n# Uncomment the next line if you need to load resources from the `Public` directory\n#COPY --from=build --chown=vapor:vapor /build/Public /app/Public\n\n# Ensure all further commands run as the vapor user\nUSER vapor\n\n# Start the Vapor service when the image is run, default to listening on 8080 in production environment\nENTRYPOINT [\"./XCMetricsBackend\"]\nCMD [\"serve\", \"--auto-migrate\", \"--env\", \"production\", \"--hostname\", \"0.0.0.0\", \"--port\", \"8080\"]\n"
}