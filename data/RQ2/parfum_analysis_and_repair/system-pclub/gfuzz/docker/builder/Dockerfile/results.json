{
  "startTime": 1674249121382,
  "endTime": 1674249122149,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.16.4\n\nRUN apt update && apt install --no-install-recommends -y python3 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tbuild-essential \\\n\t\tcurl \\\n\t\tcmake \\\n\t\tgcc \\\n\t\tgit \\\n\t\tlibapparmor-dev \\\n\t\tlibbtrfs-dev \\\n\t\tlibdevmapper-dev \\\n\t\tlibseccomp-dev \\\n\t\tca-certificates \\\n\t\te2fsprogs \\\n\t\tiptables \\\n\t\tpkg-config \\\n\t\tpigz \\\n\t\tprocps \\\n\t\txfsprogs \\\n\t\txz-utils \\\n\t\t\\\n\t\taufs-tools \\\n\t\tvim-common \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nWORKDIR /repos\n\nCOPY benchmark/repos/etcd ./etcd\nCOPY benchmark/repos/go-ethereum ./go-ethereum\nCOPY benchmark/repos/grpc-go ./grpc-go\nCOPY benchmark/repos/grpc-go ./grpc-go-goleak\nCOPY benchmark/repos/kubernetes ./kubernetes\nCOPY benchmark/repos/prometheus ./prometheus\nCOPY benchmark/repos/tidb ./tidb\n\nCOPY benchmark/repos/moby /go/src/github.com/docker/docker\n\n\n# override leakcheck.go to prevent sideeffect of leakcheck to the benchmark\nCOPY docker/builder/leakcheck.go /repos/grpc-go/internal/leakcheck/leakcheck.go\nCOPY docker/builder/leakcheck-allow-oracle.go /repos/grpc-go-goleak/internal/leakcheck/leakcheck.go\n\n# avoid gRPC testsuite\nRUN cd grpc-go && grep -rl 'func (s) Test' ./ | xargs sed -i 's/func (s)/func/g' && cd ..\n# Don't replace since goleak only will be called from testsuite way\n# RUN cd grpc-go-goleak && grep -rl 'func (s) Test' ./ | xargs sed -i 's/func (s)/func/g' && cd ..\n\n\nWORKDIR /gfuzz\n\n# copy source files to docker\nCOPY scripts ./scripts\nCOPY patch ./patch\nCOPY pkg ./pkg\nCOPY cmd ./cmd\nCOPY docker/builder/entrypoint.sh docker/builder/entrypoint.sh\nCOPY go.mod go.sum Makefile VERSION ./\nRUN make tidy\nRUN BUILD=docker make\nRUN chmod +x docker/builder/entrypoint.sh scripts/gen-testbins.sh\nENTRYPOINT [ \"/gfuzz/docker/builder/entrypoint.sh\" ]"
}