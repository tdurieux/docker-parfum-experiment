{
  "startTime": 1674254441090,
  "endTime": 1674254442365,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for ALE with BPP v2.4.1\n# Version:\n#\t- v0.1 (2022-05-01)\n\nFROM ubuntu:22.04\n\nRUN apt-get update && \\\n    apt-get clean && \\\n    apt-get install --no-install-recommends -qy \\\n\t\t\tcmake \\\n\t\t\tlibboost-all-dev \\\n\t\t\tg++-11 \\\n\t\t\tgit \\\n\t\t\tmake \\\n\t\t\tpython3 \\\n\t\t\twget \\\n\t\t\tca-certificates \\\n\t\t\topenssl \\\n\t\t\tbuild-essential \\\n\t\t\tlibeigen3-dev && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /opt\n\n# Install libboost\nRUN mkdir -p {bpp/bpp-core-build,bpp/bpp-seq-build,bpp/bpp-phyl-build}\n\n# Install Bio++ v2.4.1\nWORKDIR /opt/bpp\n\n# pull repositories\nRUN git clone https://github.com/BioPP/bpp-core\nRUN git clone https://github.com/BioPP/bpp-seq\nRUN git clone https://github.com/BioPP/bpp-phyl\n\n# freeze to version 2.4.1\nWORKDIR /opt/bpp/bpp-core\nRUN git checkout tags/v2.4.1 -b version2.4.1\nRUN sed -i '45i#include <limits>' src/Bpp/Graph/GlobalGraph.cpp\n\nWORKDIR /opt/bpp/bpp-seq\nRUN git checkout tags/v2.4.1 -b version2.4.1\n\nWORKDIR /opt/bpp/bpp-phyl\nRUN git checkout tags/v2.4.1 -b version2.4.1\n\nWORKDIR /opt/bpp/bpp-core-build\nRUN cmake ../bpp-core -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_TESTING=FALSE\nRUN make\nRUN make install\n\nWORKDIR /opt/bpp/bpp-seq-build\nRUN cmake ../bpp-seq -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_TESTING=FALSE\nRUN make\nRUN make install\n\nWORKDIR /opt/bpp/bpp-phyl-build\nRUN cmake ../bpp-phyl -DCMAKE_INSTALL_PREFIX=/usr/local -DBUILD_TESTING=FALSE\nRUN make\nRUN make install\n\n\n# Install ALE\nWORKDIR /opt\nRUN mkdir ALE-build\n\nRUN ln -s /usr/include/eigen3/Eigen /usr/include/Eigen\n\nRUN git clone https://github.com/ssolo/ALE.git\n\nWORKDIR /opt/ALE\nRUN git checkout bppv241\n\nWORKDIR /opt/ALE-build\nRUN cmake ../ALE -DCMAKE_LIBRARY_PATH=/usr/local -DCMAKE_INCLUDE_PATH=/usr/local\nRUN make\n\nRUN for binary in $PWD/bin/*; do ln -s $binary /usr/local/bin/; done\n\nENV LD_LIBRARY_PATH /usr/local/lib\n"
}