{
  "startTime": 1674251830876,
  "endTime": 1674251831568,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (C) 2019  Braiins Systems s.r.o.\n#\n# This file is part of Braiins Open-Source Initiative (BOSI).\n#\n# BOSI is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n#\n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <https://www.gnu.org/licenses/>.\n#\n# Please, keep in mind that we may also license BOSI or any part thereof\n# under a proprietary license. For more information on the terms and conditions\n# of such proprietary license or if you have any other questions, please\n# contact us at opensource@braiins.com.\n\n# docker build --build-arg LOC_UID=$(id -u) --build-arg LOC_GID=$(id -g) -t bos-builder docker/\n# docker run --rm -v $SSH_AUTH_SOCK:/ssh-agent --env SSH_AUTH_SOCK=/ssh-agent -ti bos-builder\n\nFROM debian:9.6 AS build-system\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    sudo \\\n    python3 \\\n    python3-pip \\\n    virtualenv \\\n    git \\\n    gawk \\\n    zlib1g-dev \\\n    libncurses5-dev \\\n    unzip \\\n    wget \\\n    python2.7 \\\n    libssl1.0-dev \\\n    texinfo \\\n    device-tree-compiler \\\n    python3-gdbm \\\n    curl \\\n    dosfstools \\\n    mtools && rm -rf /var/lib/apt/lists/*;\n\nFROM build-system\n\nENV USER build\n\nARG LOC_UID\nARG LOC_GID\nRUN addgroup --gid=$LOC_GID $USER && \\\n    adduser --system --uid=$LOC_UID --gid=$LOC_GID $USER\n\nWORKDIR /home/$USER\nUSER $USER\n\nCOPY --chown=build:build ./requirements.txt .\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY --chown=build:build ./bashrc ./.bashrc\nCOPY --chown=build:build ./requirements.md5 .\n\nENV PATH=\"/home/$USER/.cargo/bin:${PATH}\"\nRUN bash -c \"curl --proto '=https' --tlsv1.2 -sSf 'https://sh.rustup.rs' | sh /dev/stdin -y\"\n\nRUN rustup toolchain install 1.40.0 && \\\n    rustup component add rustfmt && \\\n    rustup target add arm-unknown-linux-musleabi --toolchain 1.40.0 && \\\n    rustup default 1.40.0\n"
}