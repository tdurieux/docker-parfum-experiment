{
  "startTime": 1674253860410,
  "endTime": 1674253861161,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 21,
        "columnEnd": 53
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build environment\nFROM node:10.16.3-alpine as builder\n\nENV YARN_VERSION 1.17.0\n# Install packages using Yarn\n# References:\n# http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/\n# https://hackernoon.com/using-yarn-with-docker-c116ad289d56\n\n# Add package.json and respective lock\nADD package.json yarn.* /tmp/\n\n# Install git\nRUN apk update && apk upgrade && \\\n    apk add --no-cache bash git openssh\n\nRUN apk add --no-cache --virtual .build-deps-yarn curl \\\n    && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n    && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n    && ln -snf /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n    && ln -snf /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n    && rm yarn-v$YARN_VERSION.tar.gz \\\n    && apk del .build-deps-yarn\n\n# Install packages\nRUN cd /tmp && until yarn install --frozen-lockfile ; do echo \"Retrying yarn install...\"; done && yarn cache clean;\n\n# Create a symlink to node_modules\nRUN mkdir -p /usr/src/app && cd /usr/src/app && ln -s /tmp/node_modules && rm -rf /usr/src/app\n\nWORKDIR /usr/src/app\nENV PATH /usr/src/app/node_modules/.bin:$PATH\n\nCOPY . /usr/src/app\nRUN yarn build\n\n\n# Production environment image\nFROM nginx:alpine\nCOPY --from=builder /usr/src/app/public /usr/share/nginx/html\nCOPY nginx.conf /etc/nginx/conf.d/default.conf\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}