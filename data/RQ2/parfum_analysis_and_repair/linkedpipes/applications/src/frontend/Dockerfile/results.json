{
  "startTime": 1674217204861,
  "endTime": 1674217205661,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 10,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image\nFROM node:10.18.0-alpine\n\nENV YARN_VERSION 1.17.0\n# Install packages using Yarn\n# References:\n# http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/\n# https://hackernoon.com/using-yarn-with-docker-c116ad289d56\n\n# Add package.json and respective lock\nCOPY package.json yarn.* /tmp/\n\n# Install git\nRUN apk update && apk upgrade && \\\n    apk add --no-cache bash git openssh\n\nRUN apk add --no-cache --virtual .build-deps-yarn curl \\\n    && curl -fSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n    && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n    && ln -snf /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n    && ln -snf /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n    && rm yarn-v$YARN_VERSION.tar.gz \\\n    && apk del .build-deps-yarn\n\n# Install packages\nWORKDIR /tmp\nRUN while until yarn install --frozen-loc; do \\\n  do echo \"Retrying yarn install.. \\\ndone && yarn cache clean;\n\n# Create a symlink to node_modules\nRUN mkdir -p /app\nWORKDIR /app\nRUN ln -s /tmp/node_modules\n\nCOPY . /app\n\nEXPOSE 9001\n\nCMD [\"yarn\", \"startDockerDev\"]\n\n\n\n"
}