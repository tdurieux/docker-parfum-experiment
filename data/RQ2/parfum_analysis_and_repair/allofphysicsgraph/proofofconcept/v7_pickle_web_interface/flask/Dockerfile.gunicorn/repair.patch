diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/allofphysicsgraph/proofofconcept/v7_pickle_web_interface/flask/Dockerfile.gunicorn b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/allofphysicsgraph/proofofconcept/v7_pickle_web_interface/flask/Dockerfile.gunicorn/repaired.Dockerfile
index 4c6ef61..63809fd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/allofphysicsgraph/proofofconcept/v7_pickle_web_interface/flask/Dockerfile.gunicorn
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/allofphysicsgraph/proofofconcept/v7_pickle_web_interface/flask/Dockerfile.gunicorn/repaired.Dockerfile
@@ -6,7 +6,7 @@
 # https://docs.docker.com/engine/reference/builder/#from
 # https://github.com/phusion/baseimage-docker
 FROM phusion/baseimage:0.11
-# Ubuntu is too big 
+# Ubuntu is too big
 #FROM ubuntu:latest
 
 # PYTHONDONTWRITEBYTECODE: Prevents Python from writing pyc files to disk (equivalent to python -B option)
@@ -14,7 +14,7 @@ ENV PYTHONDONTWRITEBYTECODE 1
 
 # https://docs.docker.com/engine/reference/builder/#run
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
 # text editing
                vim \
                python3 \
@@ -24,7 +24,7 @@ RUN apt-get update && \
 #               python-pip \
 # documentation generation
                python3-sphinx \
-               build-essential  \
+               build-essential \
 # generate pictures of graphs using dot
                graphviz \
 # generate pictures of expressions using latex
@@ -44,7 +44,7 @@ RUN apt-get update && \
 COPY requirements.txt /tmp
 
 # https://www.npmjs.com/package/mathjax
-RUN npm install mathjax@3
+RUN npm install mathjax@3 && npm cache clean --force;
 #RUN npm install mathjax
 
 # convert DVI to SVG
@@ -58,9 +58,9 @@ RUN npm install mathjax@3
 #RUN git clone https://github.com/fontforge/libuninameslist.git
 
 # https://stackoverflow.com/a/63457606/1164295
-RUN pip3 install --upgrade pip
+RUN pip3 install --no-cache-dir --upgrade pip
 
-RUN pip3 install -r /tmp/requirements.txt
+RUN pip3 install --no-cache-dir -r /tmp/requirements.txt
 
 RUN useradd --create-home appuser
 WORKDIR       /home/appuser/app
@@ -104,6 +104,6 @@ RUN bash -l /home/appuser/.bashrc
 #ENTRYPOINT ["python3"]
 
 # There can only be one CMD instruction in a Dockerfile
-# The CMD instruction should be used to run the software contained by your image, along with any arguments. 
+# The CMD instruction should be used to run the software contained by your image, along with any arguments.
 #CMD ["/home/appuser/app/controller.py"]