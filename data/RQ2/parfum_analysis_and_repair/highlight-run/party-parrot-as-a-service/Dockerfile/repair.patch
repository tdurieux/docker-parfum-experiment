diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/highlight-run/party-parrot-as-a-service/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/highlight-run/party-parrot-as-a-service/Dockerfile/repaired.Dockerfile
index 2640201..0539b72 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/highlight-run/party-parrot-as-a-service/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/highlight-run/party-parrot-as-a-service/Dockerfile/repaired.Dockerfile
@@ -9,31 +9,31 @@ ARG PORT=5000
 
 #jpeg support
 RUN apt-get update
-RUN apt-get install libsm6 libxext6 libgl1-mesa-glx -y
-RUN apt-get install libjpeg-dev -y
+RUN apt-get install --no-install-recommends libsm6 libxext6 libgl1-mesa-glx -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libjpeg-dev -y && rm -rf /var/lib/apt/lists/*;
 #tiff support
-RUN apt-get install libtiff-dev -y
+RUN apt-get install --no-install-recommends libtiff-dev -y && rm -rf /var/lib/apt/lists/*;
 #freetype support
-RUN apt-get install libfreetype6-dev -y
+RUN apt-get install --no-install-recommends libfreetype6-dev -y && rm -rf /var/lib/apt/lists/*;
 #openjpeg200support (needed to compile from source)
-RUN wget http://downloads.sourceforge.net/project/openjpeg.mirror/2.0.1/openjpeg-2.0.1.tar.gz
-RUN tar xzvf openjpeg-2.0.1.tar.gz
+RUN wget https://downloads.sourceforge.net/project/openjpeg.mirror/2.0.1/openjpeg-2.0.1.tar.gz
+RUN tar xzvf openjpeg-2.0.1.tar.gz && rm openjpeg-2.0.1.tar.gz
 RUN cd openjpeg-2.0.1/
-RUN apt-get install cmake
+RUN apt-get install -y --no-install-recommends cmake && rm -rf /var/lib/apt/lists/*;
 RUN cmake openjpeg-2.0.1
 RUN make install
-RUN apt-get install libsm6 libxext6 libgl1-mesa-glx -y
+RUN apt-get install --no-install-recommends libsm6 libxext6 libgl1-mesa-glx -y && rm -rf /var/lib/apt/lists/*;
 
 # RUN pip3 install pipenv
 # RUN pipenv sync
-RUN pip install Pillow
-RUN pip install autocrop
-RUN pip install flask
-RUN pip install python-dotenv
-RUN pip install supabase
-RUN pip install flask-cors
-RUN pip install requests_toolbelt
-RUN pip install validators
+RUN pip install --no-cache-dir Pillow
+RUN pip install --no-cache-dir autocrop
+RUN pip install --no-cache-dir flask
+RUN pip install --no-cache-dir python-dotenv
+RUN pip install --no-cache-dir supabase
+RUN pip install --no-cache-dir flask-cors
+RUN pip install --no-cache-dir requests_toolbelt
+RUN pip install --no-cache-dir validators
 
 EXPOSE ${PORT}