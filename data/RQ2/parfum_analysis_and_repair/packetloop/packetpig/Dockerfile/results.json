{
  "startTime": 1674254371951,
  "endTime": 1674254373039,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 14
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 171
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 19,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 2,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 90,
        "columnEnd": 113
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 54,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 256
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 256
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 256
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 280
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:precise\nMAINTAINER Michael Baker <cloudjunky@gmail.com>\n\nRUN echo \"deb http://archive.cloudera.com/debian maverick-cdh3 contrib\" > /etc/apt/sources.list.d/cloudera.list\nRUN echo \"deb-src http://archive.cloudera.com/debian maverick-cdh3 contrib\" >> /etc/apt/sources.list.d/cloudera.list\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise universe\" >> /etc/apt/sources.list\nRUN echo \"deb http://us.archive.ubuntu.com/ubuntu/ precise-updates universe\" >> /etc/apt/sources.list\n\nRUN apt-get install --no-install-recommends curl wget -y --force-yes && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -s https://archive.cloudera.com/debian/archive.key | apt-key add -\nRUN apt-get update -y --force-yes\n\nRUN apt-get install --no-install-recommends build-essential hadoop-0.20 hadoop-pig git-core libnids-dev libnids1.21 libmagic-dev ipython python2.7-dev libnet1-dev python-pip flex bison libpcap0.8 libpcap0.8-dev openjdk-6-jdk libpcre3 libpcre3-dev pkg-config gettext -y --force-yes && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir python-magic argparse\n\n#Install libdnet\nRUN mkdir /src; \\\n  cd /src; \\\n  wget https://libdnet.googlecode.com/files/libdnet-1.12.tgz; \\\n  tar -zxvf libdnet-1.12.tgz; rm libdnet-1.12.tgz \\\n  cd libdnet-1.12/; \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n  make; \\\n  make install;\n\n#Fix libdnet\nRUN cp /usr/local/lib/libdnet.1.0.1 /usr/local/lib/libdnet.so.1.0.1 &&\\\n  ldconfig\n\n#Install DAQ\nRUN cd /src && \\\n  wget https://www.snort.org/downloads/1850 && \\\n  tar -zxvf 1850 && \\\n  cd daq-1.1.1/ && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n#Install Snort\n\nRUN cd /src && \\\n  wget https://www.snort.org/downloads/1862 && \\\n  tar -zxvf 1862 && \\\n  cd snort-2.9.3.1/ && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /usr/local/snort --enable-ipv6 --enable-gre --enable-mpls --enable-targetbased --enable-ppm --enable-perfprofiling --enable-zlib --enable-reload && make && make install && \\\n  groupadd snort && useradd -g snort snort && ln -s /usr/local/snort/bin/snort /usr/sbin/ && ln -s /usr/local/snort/etc /etc/snort && \\\n  mkdir -p /usr/local/snort/var/log && chown snort:snort /usr/local/snort/var/log && ln -s /usr/local/snort/var/log /var/log/snort && \\\n  ln -s /usr/local/snort/lib/snort_dynamicpreprocessor /usr/local/lib/snort_dynamicpreprocessor && \\\n  ln -s /usr/local/snort/lib/snort_dynamicengine /usr/local/lib/snort_dynamicengine && \\\n  mkdir /usr/local/snort/lib/snort_dynamicrules && ln -s /usr/local/snort/lib/snort_dynamicrules /usr/local/lib/snort_dynamicrules && \\\n  chown -R snort:snort /usr/local/snort && ldconfig\n\n#Install glib\nRUN cd /src &&\\\n  wget ftp://ftp.gtk.org/pub/gtk/v2.2/glib-2.2.3.tar.bz2 && bunzip2 glib-2.2.3.tar.bz2 && tar -xvf glib-2.2.3.tar &&\\\n  cd glib-2.2.3 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm glib-2.2.3.tar\n\n#Install p0f\nRUN cd /src && \\\n  wget https://lcamtuf.coredump.cx/p0f3/releases/p0f-3.06b.tgz && \\\n  tar -zxvf p0f-3.06b.tgz && cd p0f-3.06b/ && sed -i \"s/p0f.fp/\\/etc\\/p0f\\/p0f.fp/g\" config.h && make && cp p0f /usr/local/bin && mkdir /etc/p0f && \\\n  cp p0f.fp /etc/p0f/ && rm p0f-3.06b.tgz\n\n#Install Pynids for 64 bit\nRUN cd /src && \\\n  wget https://jon.oberheide.org/pynids/downloads/pynids-0.6.1.tar.gz && \\\n  tar -zxvf pynids-0.6.1.tar.gz && cd pynids-0.6.1 && tar -zxvf libnids-1.24.tar.gz && cd libnids-1.24/ && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=-fPIC --disable-libglib --disable-libnet --disable-shared && make && make install && \\\n  cd .. && python setup.py build && python setup.py install && rm pynids-0.6.1.tar.gz\n\n#Set Java Environment\n#ENV JAVA_HOME /usr/lib/jvm/java-6-openjdk/\nENV JAVA_HOME /usr/lib/jvm/java-6-openjdk-amd64/\nENV PPD /src/packetpig/\n\n#Clone and run Packetpig\nRUN cd /src/ &&\\\n  git clone https://github.com/packetloop/packetpig.git && cd packetpig &&\\\n  lib/scripts/tcp.py -r data/web.pcap -om http_headers -of tsv | less &&\\\n  lib/scripts/dns_parser.py -r data/web.pcap && mkdir out &&\\\n  pig -x local -f pig/examples/binning.pig -param pcap=data/web.pcap -param output=output && more output/binning/part-r-00000\n"
}