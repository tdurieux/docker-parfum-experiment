{
  "startTime": 1674250735052,
  "endTime": 1674250736314,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 2,
        "columnEnd": 48
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 51,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM balenalib/jetson-xavier-ubuntu:bionic-run-20201211\n\nWORKDIR /usr/src/app\n\n#OpenDataCam 3.0.2\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Install some utils\nRUN apt-get update && apt-get install --no-install-recommends -y lbzip2 git wget unzip jq && rm -rf /var/lib/apt/lists/*;\n\n# Keep sources list at r32 for cuda 10 and cudnn 7\nRUN sed -i 's/r32.4 main/r32 main/g' /etc/apt/sources.list.d/nvidia.list && apt-get update\n\n# Install CUDA/cuDNN\nRUN apt-get install --no-install-recommends -y cuda-toolkit-10-0 libcudnn7 libcudnn7-dev && rm -rf /var/lib/apt/lists/*;\n\n# Set paths\nENV CUDA_HOME=/usr/local/cuda-10.0\nENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${CUDA_HOME}/lib64\nENV PATH=${CUDA_HOME}/bin:${PATH}\nENV UDEV=1\nENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget tar lbzip2 python3 libegl1 && \\\n    wget https://developer.nvidia.com/embedded/L4T/r32_Release_v4.2/t186ref_release_aarch64/Tegra186_Linux_R32.4.2_aarch64.tbz2 && \\\n    tar xf Tegra186_Linux_R32.4.2_aarch64.tbz2 && \\\n    cd Linux_for_Tegra && \\\n    sed -i 's/config.tbz2\\\"/config.tbz2\\\" --exclude=etc\\/hosts --exclude=etc\\/hostname/g' apply_binaries.sh && \\\n    sed -i 's/install --owner=root --group=root \\\"${QEMU_BIN}\\\" \\\"${L4T_ROOTFS_DIR}\\/usr\\/bin\\/\\\"/#install --owner=root --group=root \\\"${QEMU_BIN}\\\" \\\"${L4T_ROOTFS_DIR}\\/usr\\/bin\\/\\\"/g' nv_tegra/nv-apply-debs.sh && \\\n    sed -i 's/LC_ALL=C chroot . mount -t proc none \\/proc/ /g' nv_tegra/nv-apply-debs.sh && \\\n    sed -i 's/umount ${L4T_ROOTFS_DIR}\\/proc/ /g' nv_tegra/nv-apply-debs.sh && \\\n    sed -i 's/chroot . \\//  /g' nv_tegra/nv-apply-debs.sh && \\\n    ./apply_binaries.sh -r / --target-overlay && cd .. \\\n    rm -rf Tegra186_Linux_R32.4.2_aarch64.tbz2 && \\\n    rm -rf Linux_for_Tegra && \\\n    echo \"/usr/lib/aarch64-linux-gnu/tegra\" > /etc/ld.so.conf.d/nvidia-tegra.conf && ldconfig && rm -rf /var/lib/apt/lists/*;\n\n# install some OpenCV prerequesets\nRUN \\\n  apt-get install --no-install-recommends -y libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libwebp-dev libtbb2 libtbb-dev libgstreamer1.0-0 \\\n  gstreamer1.0-plugins-base gstreamer1.0-plugins-good cmake pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Copy/expand prebuilt OpenCV 4.1.1\nCOPY opencv411_include.tar.gz .\nCOPY opencv411_lib.tar.gz .\n\nRUN tar -xvf opencv411_lib.tar.gz -C /usr/local && tar -xvf opencv411_include.tar.gz -C /usr/local/include && rm opencv411_lib.tar.gz\n\nWORKDIR /\n\n# Download and build Darknet\nRUN \\\n  git clone --depth 1 -b odc https://github.com/opendatacam/darknet\n\nWORKDIR /darknet\nCOPY ./Makefile.jetson-xavier ./Makefile\n\nRUN make && ldconfig\n\n#get weights\nRUN wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights --no-check-certificate > /dev/null 2>&1\n\n# Download and install OpenDataCam\n# first install node.js\nRUN \\\n  curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n  apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  git clone --depth 1 https://github.com/opendatacam/opendatacam.git  /var/local/opendatacam\n\nWORKDIR /var/local/opendatacam\n\nRUN \\\n  npm install && \\\n  npm run build && npm cache clean --force;\n\nEXPOSE 8080 8070 8090\n\nCOPY config.jetson-xavier config.bak\n\nCOPY launch.sh launch.sh\nRUN chmod 777 launch.sh\nCMD [\"./launch.sh\"]\n"
}