diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/balenalabs-incubator/opendatacam/Dockerfile.jetson-nano-2gb-devkit b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/balenalabs-incubator/opendatacam/Dockerfile.jetson-nano-2gb-devkit/repaired.Dockerfile
index d5ad1ea..7d72505 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/balenalabs-incubator/opendatacam/Dockerfile.jetson-nano-2gb-devkit
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/balenalabs-incubator/opendatacam/Dockerfile.jetson-nano-2gb-devkit/repaired.Dockerfile
@@ -5,15 +5,15 @@ WORKDIR /usr/src/app
 #OpenDataCam 3.0.2
 
 ENV DEBIAN_FRONTEND noninteractive
-  
+
 # Install some utils
-RUN apt-get update && apt-get install -y lbzip2 git wget unzip jq
+RUN apt-get update && apt-get install --no-install-recommends -y lbzip2 git wget unzip jq && rm -rf /var/lib/apt/lists/*;
 
 # Keep sources list at r32 for cuda 10 and cudnn 7
 RUN sed -i 's/r32.4 main/r32 main/g' /etc/apt/sources.list.d/nvidia.list && apt-get update
 
-# Install CUDA/cuDNN 
-RUN apt-get install -y cuda-toolkit-10-0 libcudnn7 libcudnn7-dev
+# Install CUDA/cuDNN
+RUN apt-get install --no-install-recommends -y cuda-toolkit-10-0 libcudnn7 libcudnn7-dev && rm -rf /var/lib/apt/lists/*;
 
 # Set paths
 ENV CUDA_HOME=/usr/local/cuda-10.0
@@ -23,7 +23,7 @@ ENV UDEV=1
 ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
 
 # Download and install BSP binaries for L4T 32.4.2
-RUN apt-get update && apt-get install -y wget tar lbzip2 python3 libegl1 && \
+RUN apt-get update && apt-get install --no-install-recommends -y wget tar lbzip2 python3 libegl1 && \
     wget https://developer.nvidia.com/embedded/L4T/r32_Release_v4.2/t210ref_release_aarch64/Tegra210_Linux_R32.4.2_aarch64.tbz2 && \
     tar xf Tegra210_Linux_R32.4.2_aarch64.tbz2 && \
     cd Linux_for_Tegra && \
@@ -35,18 +35,18 @@ RUN apt-get update && apt-get install -y wget tar lbzip2 python3 libegl1 && \
     ./apply_binaries.sh -r / --target-overlay && cd .. \
     rm -rf Tegra210_Linux_R32.4.2_aarch64.tbz2 && \
     rm -rf Linux_for_Tegra && \
-    echo "/usr/lib/aarch64-linux-gnu/tegra" > /etc/ld.so.conf.d/nvidia-tegra.conf && ldconfig
+    echo "/usr/lib/aarch64-linux-gnu/tegra" > /etc/ld.so.conf.d/nvidia-tegra.conf && ldconfig && rm -rf /var/lib/apt/lists/*;
 
 # install some OpenCV prerequesets
 RUN \
-  apt-get install -y libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libwebp-dev libtbb2 libtbb-dev libgstreamer1.0-0 \
-  gstreamer1.0-plugins-base gstreamer1.0-plugins-good cmake pkg-config
+  apt-get install --no-install-recommends -y libgtk2.0-dev libavcodec-dev libavformat-dev libswscale-dev libwebp-dev libtbb2 libtbb-dev libgstreamer1.0-0 \
+  gstreamer1.0-plugins-base gstreamer1.0-plugins-good cmake pkg-config && rm -rf /var/lib/apt/lists/*;
 
 # Copy/expand prebuilt OpenCV 4.1.1
 COPY opencv411_include.tar.gz .
 COPY opencv411_lib.tar.gz .
 
-RUN tar -xvf opencv411_lib.tar.gz -C /usr/local && tar -xvf opencv411_include.tar.gz -C /usr/local/include
+RUN tar -xvf opencv411_lib.tar.gz -C /usr/local && tar -xvf opencv411_include.tar.gz -C /usr/local/include && rm opencv411_lib.tar.gz
 
 WORKDIR /
 
@@ -55,7 +55,7 @@ RUN \
   git clone --depth 1 -b odc https://github.com/opendatacam/darknet
 
 WORKDIR /darknet
-  
+
 COPY ./Makefile.jetson-nano ./Makefile
 
 RUN make && ldconfig
@@ -66,8 +66,8 @@ RUN wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v4_p
 # Download and install OpenDataCam
 # first install node.js
 RUN \
-  curl -sL https://deb.nodesource.com/setup_10.x | bash - && \
-  apt-get install -y nodejs
+  curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && \
+  apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 RUN \
   git clone --depth 1 https://github.com/opendatacam/opendatacam.git  /var/local/opendatacam
@@ -76,7 +76,7 @@ WORKDIR /var/local/opendatacam
 
 RUN \
   npm install && \
-  npm run build
+  npm run build && npm cache clean --force;
 
 EXPOSE 8080 8070 8090