{
  "startTime": 1674215353401,
  "endTime": 1674215354929,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 123,
        "columnEnd": 141
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 18,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 18,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM arm32v7/ubuntu:bionic as base\n\nRUN apt update && apt install --no-install-recommends -y build-essential python curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.11/install.sh | bash && export NVM_DIR=\"$HOME/.nvm\" \\\n    && [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" && nvm install node\n\nFROM base as build\n\nWORKDIR /bproxy\n\nCOPY ./include /bproxy/include\nCOPY ./src /bproxy/src\nCOPY Makefile /bproxy/Makefile\nCOPY package.json /bproxy/package.json\nCOPY bproxy.gyp /bproxy/bproxy.gyp\nCOPY options.gypi /bproxy/options.gypi\nCOPY common.gypi /bproxy/common.gypi\nCOPY binding.gyp /bproxy/binding.gyp\nCOPY bproxy.json /bproxy/bproxy.json\nCOPY 3rdparty /bproxy/3rdparty\n\nRUN apt update && apt install --no-install-recommends git -y && export NVM_DIR=\"$HOME/.nvm\" && [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\" && npm install --prod && npm run build && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nFROM arm32v7/ubuntu:bionic\n\nWORKDIR /bproxy\n\nCOPY --from=build /bproxy/bproxy.json /bproxy/bproxy.json\nCOPY --from=build /bproxy/out/Release/bproxy /usr/bin/bproxy\n\nEXPOSE 80 443\n\nCMD [ \"bproxy\" ]\n"
}