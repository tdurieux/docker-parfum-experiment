{
  "startTime": 1674248793539,
  "endTime": 1674248795232,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Please keep up to date with the new-version of Golang docker for builder\nFROM golang:latest\n\nRUN apt update && apt upgrade -y && \\\n    apt install --no-install-recommends -y git \\\n    make openssh-client && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\nRUN curl -fLo install.sh https://raw.githubusercontent.com/cosmtrek/air/master/install.sh \\\n    && chmod +x install.sh && sh install.sh && cp ./bin/air /bin/air\n\nCMD air\n\n## Production environment (alias: base)\n#FROM golang:1.12-alpine as base\n#RUN apk update && apk upgrade && \\\n#apk add --no-cache bash git openssh\n#WORKDIR /home/my-project\n#\n## Development environment\n## Unfortunately, linux alpine doesn't have fswatch package by default, so we will need to download source code and make it by outselves.\n#FROM base as dev\n#RUN apk add --no-cache autoconf automake libtool gettext gettext-dev make g++ texinfo curl\n#WORKDIR /root\n#RUN wget https://github.com/emcrisostomo/fswatch/releases/download/1.14.0/fswatch-1.14.0.tar.gz\n#RUN tar -xvzf fswatch-1.14.0.tar.gz\n#WORKDIR /root/fswatch-1.14.0\n#RUN ./configure\n#RUN make\n#RUN make install\n#WORKDIR /home/my-project"
}