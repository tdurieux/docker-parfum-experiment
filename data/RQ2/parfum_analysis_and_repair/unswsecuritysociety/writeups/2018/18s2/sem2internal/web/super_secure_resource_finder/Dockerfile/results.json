{
  "startTime": 1674250846887,
  "endTime": 1674250847867,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 38,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 62,
        "columnEnd": 81
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.2-apache\n\nEXPOSE 80\n\n# in debug mode I'm attaching the volumes to easily edit data\n# but in the final build eveyrthing will be copied over\n\nRUN chown -R www-data:www-data /var/www/html\nCOPY files/000-default.conf /etc/apache2/sites-available/\nRUN mkdir /var/www/html2\n\nCOPY files/index.php /var/www/html\nCOPY files/index2.php /var/www/html2/index.php\nCOPY files/flag.php /var/www/html2/flag.php\nCOPY files/admin.php /var/www/html2/admin.php\n\n# hide flag in /etc/passwd\nRUN echo \"\\n\\n\\n# flag{fi_file_le_4_the_win}\"  >> /etc/passwd\n\n# build process for headless chrome + selenium\nRUN echo \"=== Building headless chrome ===\"\n\n# install python tools and dev packages\nRUN apt-get update \\ \n\t&& apt-get install -q -y --no-install-recommends python3-dev python3-pip python3-setuptools python3-wheel gcc \\\n\t&& apt-get clean \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# set python3 as default\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1 \\\n\t&& update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1\n\nRUN echo \"installing chrome\"\n\n# [Reference: https://jpmelos.com/articles/how-use-chrome-selenium-inside-docker-container-running-python/]\n# install chrome & chromium-driver\nRUN apt-get update\nRUN curl -f https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb -o /chrome.deb\nRUN apt-get -y --no-install-recommends install /chrome.deb || apt-get -yf install && rm -rf /var/lib/apt/lists/*\nRUN rm /chrome.deb\n\nRUN apt-get update && apt-get install --no-install-recommends -y zip libgconf-2-4 && rm -rf /var/lib/apt/lists/*\nCOPY files/chromedriver.zip /usr/local/bin/\nWORKDIR /usr/local/bin\nRUN unzip chromedriver.zip && rm chromedriver.zip\nRUN chmod +x chromedriver\n\n# install selenium:  https://stackoverflow.com/a/48983008\nRUN pip3 install --no-cache-dir selenium==3.8.0\n\n# remove any things along the way\nRUN apt-get autoremove && apt-get autoclean\n\n# make sure triggerxss.py is runnable\nCOPY files/triggerxss.py /etc/\nRUN chmod a+x /etc/triggerxss.py\n\n#make temp folder for XSS payloads\nRUN mkdir /var/www/html/payloads/\nRUN chmod a+w /var/www/html/payloads/\n"
}