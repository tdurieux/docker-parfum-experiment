diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/plast-lab/doop-mirror/docs/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/plast-lab/doop-mirror/docs/docker/Dockerfile/repaired.Dockerfile
index 8cc4f76..f14df15 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/plast-lab/doop-mirror/docs/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/plast-lab/doop-mirror/docs/docker/Dockerfile/repaired.Dockerfile
@@ -8,9 +8,9 @@ RUN apt-get update
 ## Set "Noninteractive" mode during Docker build
 RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
 ## locales: Doop may hang for non-UTF8 locales
-RUN apt-get install -y apt-utils busybox nano libterm-readline-perl-perl
+RUN apt-get install --no-install-recommends -y apt-utils busybox nano libterm-readline-perl-perl && rm -rf /var/lib/apt/lists/*;
 # apt-utils installation should happen before locales installation
-RUN apt-get install -y locales
+RUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen
 RUN echo 'LANG="en_US.UTF-8"' > /etc/default/locale
 RUN dpkg-reconfigure --frontend=noninteractive locales
@@ -24,7 +24,7 @@ RUN dpkg-reconfigure --frontend=noninteractive locales
 # RUN dpkg-reconfigure -f noninteractive tzdata
 
 ## Souffle
-RUN apt-get install -y cmake cpp autoconf automake bison build-essential clang doxygen flex g++ gdb git libncurses5-dev libtool libsqlite3-dev make mcpp python3 sqlite unzip zlib1g-dev wget curl
+RUN apt-get install --no-install-recommends -y cmake cpp autoconf automake bison build-essential clang doxygen flex g++ gdb git libncurses5-dev libtool libsqlite3-dev make mcpp python3 sqlite unzip zlib1g-dev wget curl && rm -rf /var/lib/apt/lists/*;
 # RUN mkdir /souffle && wget https://github.com/souffle-lang/souffle/releases/download/1.5.1/souffle_1.5.1-1_amd64.deb -O /souffle/souffle_1.5.1-1_amd64.deb && apt-get install /souffle/souffle_1.5.1-1_amd64.deb
 # RUN mkdir /souffle && wget https://github.com/souffle-lang/souffle/releases/download/2.0.2/souffle_2.0.2-1_amd64.deb -O /souffle/souffle_2.0.2-1_amd64.deb && apt-get install /souffle/souffle_2.0.2-1_amd64.deb
 # Install Souffle from sources
@@ -32,23 +32,23 @@ RUN mkdir /souffle && wget https://github.com/souffle-lang/souffle/archive/refs/
 RUN ls /souffle
 RUN ls /souffle/souffle-2.1
 RUN cmake --version
-RUN apt-get install -y bash-completion lsb-release
+RUN apt-get install --no-install-recommends -y bash-completion lsb-release && rm -rf /var/lib/apt/lists/*;
 RUN cd /souffle/souffle-2.1 && mkdir build && cmake -S . -B build && cmake --build build -j --target install
 
 ## ddlog
 ## Rust (binary release)
-RUN mkdir /rust && cd /rust && wget https://static.rust-lang.org/dist/rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz -O /rust/rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz && tar xf rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz
+RUN mkdir /rust && cd /rust && wget https://static.rust-lang.org/dist/rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz -O /rust/rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz && tar xf rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz && rm rust-1.57.0-x86_64-unknown-linux-gnu.tar.gz
 RUN cd /rust/rust-1.57.0-x86_64-unknown-linux-gnu && ./install.sh
 ## Haskell stack
-RUN curl -sSL https://get.haskellstack.org/ | sh
+RUN curl -f -sSL https://get.haskellstack.org/ | sh
 ## Clone ddlog (on specific commit)
 RUN git clone https://github.com/vmware/differential-datalog.git /differential-datalog && cd /differential-datalog && git checkout v1.2.3 && stack install --local-bin-path /usr/local/bin
 ## Install Python dependency for ddlog Souffle converter.
-RUN apt-get install -y python3-pip && pip3 install parglare==0.12.0
+RUN apt-get install --no-install-recommends -y python3-pip && pip3 install --no-cache-dir parglare==0.12.0 && rm -rf /var/lib/apt/lists/*;
 ENV DDLOG_DIR=/differential-datalog/
 
 ## Doop
-RUN apt-get install -y openjdk-8-jdk openjdk-8-jre openjdk-8-jdk-headless radare2 unzip time
+RUN apt-get install --no-install-recommends -y openjdk-8-jdk openjdk-8-jre openjdk-8-jdk-headless radare2 unzip time && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://bitbucket.org/yanniss/doop-benchmarks.git
 ENV DOOP_BENCHMARKS=/doop-benchmarks
 ENV DOOP_PLATFORMS_LIB=/doop-benchmarks