{
  "startTime": 1674255312806,
  "endTime": 1674255313679,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 19,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 19,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal-20210609 AS build\n\nRUN apt update && apt install --no-install-recommends -y \\\n  build-essential=12.8ubuntu1.1 \\\n  git \\\n  gnupg \\\n  wget && rm -rf /var/lib/apt/lists/*;\n\n# download, verify, and install ego\nRUN wget -qO- https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add \\\n  && echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu focal main' >> /etc/apt/sources.list \\\n  && wget https://github.com/edgelesssys/ego/releases/download/v0.3.1/ego_0.3.1_amd64.deb \\\n  && echo '5829beb079719095d822bcdcdcfd38a8a07714bdb4281d21bdeaac94beaf4307  ego_0.3.1_amd64.deb' | sha256sum -c \\\n  && apt update && apt install --no-install-recommends -y ./ego_0.3.1_amd64.deb && rm -rf /var/lib/apt/lists/*;\n\n# build your app\nRUN git clone -b v0.3.1 --depth=1 https://github.com/edgelesssys/ego \\\n  && cd ego/samples/helloworld \\\n  && ego-go build -trimpath\nRUN --mount=type=secret,id=signingkey,dst=/ego/samples/helloworld/private.pem,required=true ego sign ego/samples/helloworld/helloworld\n\n# use the deploy target if you want to deploy your app as a Docker image\nFROM ghcr.io/edgelesssys/ego-deploy AS deploy\nCOPY --from=build /ego/samples/helloworld/helloworld /\nENTRYPOINT [\"ego\", \"run\", \"helloworld\"]\n\n# use the export target if you just want to use Docker to build your app and then export it\nFROM scratch AS export\nCOPY --from=build /ego/samples/helloworld/helloworld /\n"
}