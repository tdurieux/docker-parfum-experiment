{
  "startTime": 1674216724095,
  "endTime": 1674216725102,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# Build go binary\nFROM golang:1.17-alpine as go_builder\nWORKDIR /app\nCOPY song-links/main.go .\nCOPY song-links/go.mod .\nRUN go build -ldflags=\"-s -w\"\nRUN chmod +x song-links\n\n# => Build container\nFROM node:16-alpine as builder\nWORKDIR /app\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn && yarn cache clean;\nCOPY . .\nRUN yarn build && yarn cache clean;\n\n# => Run container\nFROM caddy/caddy\n\n# Static build\nCOPY --from=builder /app/build /usr/share/caddy/\n\n# Copy Go songs-link binary\nCOPY --from=go_builder /app/song-links /usr/local/bin/\n\n# Default port exposure\nEXPOSE 80 10000\n\n# Copy .env file and shell script to container\nWORKDIR /usr/share/caddy/\nCOPY ./env.sh .\n\n# Add bash\nRUN apk add --no-cache bash\n\n# Add entrypoint.sh\nCOPY ./entrypoint.sh /etc/\n\n# Make our shell script executable\nRUN chmod +x env.sh\n\nRUN printf ':80 \\nroot * /usr/share/caddy \\nfile_server \\ntry_files {path} /index.html \\nencode gzip' > /etc/caddy/Caddyfile\n\n# Start Caddy\nCMD [\"/etc/entrypoint.sh\"]"
}