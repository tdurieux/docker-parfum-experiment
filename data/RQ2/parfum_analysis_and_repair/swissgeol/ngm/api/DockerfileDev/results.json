{
  "startTime": 1674250459080,
  "endTime": 1674250460042,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# local dev and dev/int/prod images are separate because they\n# are built using a different and incompatible mode (default vs release)\n\nFROM rust:1.58\n\nRUN rustup target add x86_64-unknown-linux-musl\nRUN apt update && apt install --no-install-recommends -y musl-tools musl-dev postgresql-client-13 && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -L https://github.com/watchexec/cargo-watch/releases/download/v8.1.2/cargo-watch-v8.1.2-x86_64-unknown-linux-gnu.tar.xz -o cargo-watch.tar.xz\nRUN tar xvf cargo-watch.tar.xz && rm cargo-watch.tar.xz\nRUN cp cargo-watch-v8.1.2-x86_64-unknown-linux-gnu/cargo-watch /usr/bin\n\nWORKDIR /app\n\n# First we handle fetching and building our dependencies\n# We need a stub entry point for that\nCOPY Cargo.toml Cargo.lock ./\nRUN mkdir src; echo \"fn main() {}\" > src/main.rs\nRUN cargo build --target x86_64-unknown-linux-musl\n\n# Now we copy all files, building will be handled on run\nCOPY ./ .\n"
}