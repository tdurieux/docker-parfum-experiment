{
  "startTime": 1674216088115,
  "endTime": 1674216089852,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 118
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 6,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 6,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedDockerfile": "#\n# Apache HTTPD & NGINX Access log parsing made easy\n# Copyright (C) 2011-2021 Niels Basjes\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nFROM ubuntu:22.04\n\nWORKDIR /root\n\nENV INSIDE_DOCKER Yes\n\nARG DEBIAN_FRONTEND=noninteractive\n\nWORKDIR /root\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n#####\n# Disable suggests/recommends\n#####\nRUN echo APT::Install-Recommends \"0\"\\; > /etc/apt/apt.conf.d/10disableextras\nRUN echo APT::Install-Suggests \"0\"\\; >>  /etc/apt/apt.conf.d/10disableextras\n\nENV DEBIAN_FRONTEND noninteractive\nENV DEBCONF_TERSE true\n\n###\n# Update and install common packages\n###\nRUN apt -q update \\\n   && apt install --no-install-recommends -y software-properties-common apt-utils apt-transport-https ca-certificates \\\n   && add-apt-repository -y ppa:deadsnakes/ppa && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -q install -y --no-install-recommends \\\n    bash-completion \\\n    build-essential \\\n    bzip2 \\\n    wget \\\n    curl \\\n    docker.io \\\n    git \\\n    gnupg-agent \\\n    rsync \\\n    sudo \\\n    vim \\\n    locales \\\n    wget \\\n    time \\\n    ruby \\\n    openjdk-8-jdk \\\n    openjdk-11-jdk \\\n    openjdk-17-jdk && rm -rf /var/lib/apt/lists/*;\n\n###\n# Set the locale ( see https://stackoverflow.com/a/28406007/114196 )\n###\nRUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# --------------------------------\n# Install Maven\nENV MAVEN_VERSION=3.8.3\nRUN mkdir -p /usr/local/apache-maven\nRUN cd /usr/local/ && wget \"https://www.apache.org/dyn/closer.lua?action=download&filename=/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\" -O \"apache-maven-${MAVEN_VERSION}-bin.tar.gz\"\nRUN cd /usr/local/ && tar xzf apache-maven-${MAVEN_VERSION}-bin.tar.gz --strip-components 1 -C /usr/local/apache-maven && rm apache-maven-${MAVEN_VERSION}-bin.tar.gz\nENV M2_HOME /usr/local/apache-maven\nENV PATH ${M2_HOME}/bin:${PATH}\n\n# Avoid out of memory errors in builds\nENV MAVEN_OPTS -Xms256m -Xmx512m\n\n# Install command line completion for maven\nRUN wget https://raw.githubusercontent.com/juven/maven-bash-completion/master/bash_completion.bash -O /etc/bash_completion.d/maven\n\n# --------------------------------\n# Install Pig\nENV PIG_VERSION=0.17.0\nRUN cd /usr/local/ && wget \"https://www.apache.org/dyn/closer.lua?action=download&filename=/pig/pig-${PIG_VERSION}/pig-${PIG_VERSION}.tar.gz\" -O \"pig-${PIG_VERSION}.tar.gz\"\nRUN cd /usr/local/ && tar xzf pig-${PIG_VERSION}.tar.gz && rm pig-${PIG_VERSION}.tar.gz\nENV PIG_HOME /usr/local/pig-*/\nENV PATH ${PIG_HOME}/bin:${PATH}\nRUN chmod a+rwX -R ${PIG_HOME}/bin\n\n# --------------------------------\n# Install shellcheck\nRUN cd /usr/local/bin && \\\n     wget https://github.com/koalaman/shellcheck/releases/download/stable/shellcheck-stable.linux.x86_64.tar.xz && \\\n     tar xJf shellcheck-stable.linux.x86_64.tar.xz && \\\n     mv shellcheck-stable/shellcheck . && \\\n     rm -rf shellcheck-stable* && rm shellcheck-stable.linux.x86_64.tar.xz\n\n# --------------------------------\n# Install Hugo\nENV HUGO_VERSION=0.89.0\nRUN cd /usr/local/bin && \\\n     wget https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_${HUGO_VERSION}_Linux-64bit.tar.gz && \\\n     tar xzf hugo_*.tar.gz && rm hugo_*.tar.gz\n\n# --------------------------------\n# Add a welcome message and environment checks.\nRUN mkdir /scripts\nADD *.sh /scripts/\nRUN chmod 755 /scripts/*.sh\n\n# --------------------------------\n# For serving the documentation site\nEXPOSE 1313\n"
}