{
  "startTime": 1674254186032,
  "endTime": 1674254186992,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 19,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# ---- Base Node ----\nFROM node:10-alpine AS base\n# set working directory\nWORKDIR /usr/src/app\n\n# copy project file\nCOPY package*.json ./\nEXPOSE 8000\n# copy app sources\nCOPY . .\n\n#\n# ---- Dependencies ----\nFROM base AS dependencies\nRUN apk add --no-cache make gcc g++ python python3 linux-headers udev git\n# install node packages\nRUN npm set progress=false && npm config set depth 0\nRUN npm ci\n\n#\n# ---- Test ----\n# run linters, setup and tests\nFROM dependencies AS test\n#RUN  npm run lint && npm run setup && npm run test\nRUN  npm run test\n\n#\n# ---- Release ----\nFROM base AS release\nWORKDIR /usr/src/app\n# copy production node_modules\nCOPY --from=dependencies /usr/src/app/node_modules node_modules\n# define CMD\nCMD [ \"npm\", \"run\", \"start-server\" ]\n\n#\n# ---- Dev ----\nFROM dependencies AS dev\nRUN npm install && npm install -g nodemon && npm cache clean --force;\n# copy production node_modules\nCOPY --from=dependencies /usr/src/app/node_modules node_modules\n# define CMD\nCMD [ \"npm\", \"run\", \"start-server\" ]"
}