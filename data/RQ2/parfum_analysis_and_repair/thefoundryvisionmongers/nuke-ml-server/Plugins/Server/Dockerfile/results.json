{
  "startTime": 1674250117589,
  "endTime": 1674250118356,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 20,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Ubuntu 18.04 with CUDA 10.0, CuDNN 7.6\n# Python3.6, TensorFlow 1.15.0, PyTorch 1.4\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        git \\\n        libglib2.0-0 \\\n        libjpeg-dev \\\n        libopencv-dev \\\n        libopenexr-dev \\\n        libpng-dev \\\n        libsm-dev \\\n        vim && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Python 3.6\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        python3-opencv \\\n        python3-pip \\\n        python3.6-dev && \\\n    rm -rf /var/lib/apt/lists/*\n# Have aliases python3->python and pip3->pip\nRUN ln -s /usr/bin/python3 /usr/bin/python && \\\n    ln -s /usr/bin/pip3 /usr/bin/pip\nRUN python -m pip install --upgrade pip\n\nRUN pip install --no-cache-dir setuptools wheel && \\\n    pip install --no-cache-dir \\\n    future \\\n    gast==0.2.2 \\\n    protobuf \\\n    pyyaml==3.13 \\\n    scikit-image \\\n    typing \\\n    imageio \\\n    OpenEXR\n\n# Install TF 1.15.0 GPU for Python3.6 (no TensorRT)\nRUN pip install --no-cache-dir \\\n    tensorflow-gpu==1.15.0 \\\n    tensorflow-determinism\n\n# Install PyTorch (include Caffe2) for CUDA 10.0\nRUN pip install --no-cache-dir torch==1.4.0+cu100 torchvision==0.5.0+cu100 -f https://download.pytorch.org/whl/torch_stable.html\nRUN pip install --no-cache-dir cupy-cuda100\nRUN pip install --no-cache-dir cython\n\nWORKDIR /workspace\n# Install the COCO API\nRUN pip install --no-cache-dir 'git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI'\n\n# Install detectron for mask RCNN\nRUN git clone https://github.com/facebookresearch/detectron\nRUN sed -i 's/cythonize(ext_modules)/cythonize(ext_modules, language_level=\"3\")/g' detectron/setup.py\nRUN cd detectron && pip install --no-cache-dir -r requirements.txt && make\n\nWORKDIR /workspace/ml-server\n# Copy your current folder to the docker image /workspace/ml-server/ folder\nCOPY . ."
}