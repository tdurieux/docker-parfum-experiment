{
  "startTime": 1674250965260,
  "endTime": 1674250966565,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM us.gcr.io/broad-dsp-gcr-public/terra-jupyter-base:1.0.11\nUSER root\n\nCOPY scripts $JUPYTER_HOME/scripts\n\n# Add env vars to identify binary package installation\nENV TERRA_R_PLATFORM=\"terra-jupyter-r\"\nENV TERRA_R_PLATFORM_BINARY_VERSION=3.15.0\n\n# Install protobuf 3.19.1. Note this version comes from base deep learning image. Use `conda list` to see what's installed\nRUN cd /tmp \\\n  && wget https://github.com/protocolbuffers/protobuf/releases/download/v3.19.1/protobuf-all-3.19.1.tar.gz \\\n\t&& tar -xvzf protobuf-all-3.19.1.tar.gz \\\n\t&& cd protobuf-3.19.1/ \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make \\\n\t&& make check \\\n\t&& sudo make install \\\n\t&& sudo ldconfig \\\n\t&& rm -rf /tmp/protobuf-* \\\n\t&& cd ~ && rm protobuf-all-3.19.1.tar.gz\n\n# Add R kernel\nRUN find $JUPYTER_HOME/scripts -name '*.sh' -type f | xargs chmod +x \\\n && $JUPYTER_HOME/scripts/kernel/kernelspec.sh $JUPYTER_HOME/scripts/kernel /opt/conda/share/jupyter/kernels\n\n# https://cran.r-project.org/bin/linux/ubuntu/README.html\nRUN apt-get update \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n    && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran40/' \\\n    && apt-get install -yq --no-install-recommends apt-transport-https \\\n    && apt update \\\n    && apt install -yq --no-install-recommends \\\n\tapt-utils \\\n\tlibssh2-1-dev \\\n\tlibssl-dev \\\n\tlibcurl4-gnutls-dev \\\n\tlibgit2-dev \\\n\tlibxml2-dev \\\n\tlibgfortran-7-dev \\\n\tr-base-dev \\\n\tr-base-core \\\n\t## This section installs libraries\n\tlibnetcdf-dev \\\n\tlibhdf5-serial-dev \\\n\tlibfftw3-dev \\\n\tlibopenbabel-dev \\\n\tlibopenmpi-dev \\\n\tlibexempi3 \\\n\tlibgdal-dev \\\n\tlibcairo2-dev \\\n\tlibtiff5-dev \\\n\tlibgsl0-dev \\\n\tlibgtk2.0-dev \\\n\tlibgl1-mesa-dev \\\n\tlibglu1-mesa-dev \\\n\tlibgmp3-dev \\\n\tlibhdf5-dev \\\n\tlibncurses-dev \\\n\tlibxpm-dev \\\n\tlibv8-3.14-dev \\\n\tlibgtkmm-2.4-dev \\\n\tlibmpfr-dev \\\n\tlibudunits2-dev \\\n\tlibmodule-build-perl \\\n\tlibapparmor-dev \\\n\tlibgeos-dev \\\n\tlibrdf0-dev \\\n\tlibmagick++-dev \\\n\tlibsasl2-dev \\\n\tlibpoppler-cpp-dev \\\n\tlibpq-dev \\\n\tlibperl-dev \\\n\tlibgfortran5 \\\n\t## software - perl extentions and modules\n\tlibarchive-extract-perl \\\n\tlibfile-copy-recursive-perl \\\n\tlibcgi-pm-perl \\\n\tlibdbi-perl \\\n\tlibdbd-mysql-perl \\\n\tlibxml-simple-perl \\\n\t## Databases and other software\n\tsqlite \\\n\tmpi-default-bin \\\n\topenmpi-common \\\n\ttcl8.5-dev \\\n\timagemagick \\\n\ttabix \\\n\tggobi \\\n\tgraphviz \\\n\tjags \\\n\t## Additional resources\n\txfonts-100dpi \\\n\txfonts-75dpi \\\n\tbiber \\\n\tlibzmq3-dev \\\n\tlibsbml5-dev \\\n\tbiber \\\n    && ln -s /usr/lib/gcc/x86_64-linux-gnu/7/libgfortran.so /usr/lib/x86_64-linux-gnu/libgfortran.so \\\n    && ln -s /usr/lib/gcc/x86_64-linux-gnu/7/libstdc++.so /usr/lib/x86_64-linux-gnu/libstdc++.so \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# DEVEL: Add sys env variables to DEVEL image\n# Variables in Renviron.site are made available inside of R.\n# Add libsbml CFLAGS\nENV LIBSBML_CFLAGS=\"-I/usr/include\"\nENV LIBSBML_LIBS=\"-lsbml\"\nRUN echo 'export LIBSBML_CFLAGS=\"-I/usr/include\"' >> /etc/profile \\\n    && echo 'export LIBSBML_LIBS=\"-lsbml\"' >> /etc/profile\n\n## set pip3 to run as root, not as jupyter user\nENV PIP_USER=false\n\n## Install python packages needed for a few Bioc packages\nRUN pip3 -V \\\n    && pip3 install --no-cache-dir --upgrade pip \\\n    && pip3 install --no-cache-dir cwltool \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN R -e 'install.packages(\"BiocManager\")' \\\n    ## check version\n    && R -e 'BiocManager::install(version=\"3.15\", ask=FALSE)' \\\n    && R -e 'BiocManager::install(c( \\\n    \"boot\", \\\n    \"class\", \\\n    \"cluster\", \\\n    \"codetools\", \\\n    \"foreign\", \\\n    \"kernsmooth\", \\\n    \"lattice\", \\\n    \"mass\", \\\n    \"Matrix\", \\\n    \"mgcv\", \\\n    \"nlme\", \\\n    \"nnet\", \\\n    \"rpart\", \\\n    \"Seurat\", \\\n    \"spatial\", \\\n    \"survival\", \\\n    # Jupyter notebook essentials\n    \"IRdisplay\",  \\\n    \"IRkernel\", \\\n    # GCP essentials\n    \"bigrquery\",  \\\n    \"googleCloudStorageR\", \\\n    # User oriented packages\n    \"reticulate\", \\\n    \"remotes\", \\\n    \"devtools\", \\\n    \"tidyverse\", \\\n    \"pbdZMQ\", \\\n    \"uuid\"))' \\\n    && R -e 'BiocManager::install(\"DataBiosphere/Ronaldo\")'\n\n## pip runs as jupyter user\nENV PIP_USER=true\n\nRUN R -e 'IRkernel::installspec(user=FALSE)' \\\n    && chown -R $USER:users /usr/local/lib/R/site-library\n\nUSER $USER\n"
}