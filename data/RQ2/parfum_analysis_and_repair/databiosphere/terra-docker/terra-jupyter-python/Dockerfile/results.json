{
  "startTime": 1674218575040,
  "endTime": 1674218575797,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM us.gcr.io/broad-dsp-gcr-public/terra-jupyter-base:1.0.11\nUSER root\n# This makes it so pip runs as root, not the user.\nENV PIP_USER=false\n\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n  python-tk \\\n  tk-dev \\\n  libssl-dev \\\n  xz-utils \\\n  libhdf5-dev \\\n  openssl \\\n  make \\\n  liblzo2-dev \\\n  zlib1g-dev \\\n  libz-dev \\\n  libcurl4-openssl-dev \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nENV HTSLIB_CONFIGURE_OPTIONS=\"--enable-gcs\"\n\nCOPY requirements.txt /etc/terra-docker/\n\n# Dev note: in general, do not pin Python packages to any particular version.\n# Depend on the smoke tests to help us identify any package incompatibilties.\n#\n# If we find that we do need to pin a package version, be sure to:\n# 1) Add a comment saying what needs to be true for us to remove the pin.\n#    (e.g. link to an issue and put the details there)\n# 2) If the smoke tests did not show the problem, add a new test case to improve\n#    test coverage for the identified problem.\nRUN pip3 -V \\\n && pip3 install --no-cache-dir --upgrade pip \\\n && pip3 install --no-cache-dir --upgrade -r /etc/terra-docker/requirements.txt \\\n\n # Remove this after https://broadworkbench.atlassian.net/browse/CA-1179\n # As of release [google-cloud-bigquery 1.26.0 (2020-07-20)](https://github.\n # the BigQuery Python client uses the BigQuery Storage client by default.\n # This currently causes an error on Terra Cloud Runtimes `the user does not have 'bigquery.readsessions.create' permission\n # for '<Terra billing project id>'`. To work-around this uninstall the depe\n # ith `%%bigquery` to use the older, slower mecha \\\n && pip3 uninstall -y google-cloud-bigquery-storage \\\n && sed -i 's/pandas.lib/pandas/g' /opt/conda/lib/python3.7/site-packages/ggplot/stats/smoothers.py \\\n # he next few `sed` lines are workaround for a ggplot bug. See https://github.com/yhat/ggpy/issues/662 \\\n && sed -i 's/pandas.tslib.Timestamp/pandas.Timestamp/g' /opt/conda/lib/python3.7/site-packages/ggplot/stats/smoo \\\n && sed -i 's/pd.tslib.Timestamp/pd.Timestamp/g' /opt/conda/lib/python3.7/site-packages/ggplot/stats/sm\n\n\nRUN pip3 install --no-cache-dir --upgrade markupsafe==2.0.1\n\nENV USER jupyter\nUSER $USER\n# We want pip to install into the user's dir when the notebook is running.\nENV PIP_USER=true\n# Enable Intel oneDNN optimizatoin by default\nENV TF_ENABLE_ONEDNN_OPTS=1\n\n# Note: this entrypoint is provided for running Jupyter independently of Leonardo.\n# When Leonardo deploys this image onto a cluster, the entrypoint is overwritten to enable\n# additional setup inside the container before execution.  Jupyter execution occurs when the\n# init-actions.sh script uses 'docker exec' to call run-jupyter.sh.\nENTRYPOINT [\"/opt/conda/bin/jupyter\", \"notebook\"]\n"
}