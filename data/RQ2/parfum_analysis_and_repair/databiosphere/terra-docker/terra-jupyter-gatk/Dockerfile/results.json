{
  "startTime": 1674217540700,
  "endTime": 1674217541469,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM us.gcr.io/broad-dsp-gcr-public/terra-jupyter-python:1.0.13 AS python\n\nFROM us.gcr.io/broad-dsp-gcr-public/terra-jupyter-r:2.1.5\n\nUSER root\n\n# need to apt-get everything for python since we can only copy pip installed packages\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n  python3.7-dev \\\n  python-tk \\\n  openjdk-8-jdk \\\n  tk-dev \\\n  libssl-dev \\\n  xz-utils \\\n  libhdf5-dev \\\n  openssl \\\n  make \\\n  liblzo2-dev \\\n  zlib1g-dev \\\n  libz-dev \\\n  samtools \\\n  git-lfs \\\n  # specify Java 8\n  && update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nENV PIP_USER=false\n\n# Grab the requirements from the python base image and reinstall them. By\n# comparison, simply copying the python sites-packages can result in issues when\n# uninstalling packages: https://github.com/conda/conda/issues/10357\nCOPY --from=python /etc/terra-docker/requirements.txt /etc/terra-docker/base_requirements.txt\n\nRUN pip install --no-cache-dir --upgrade -r /etc/terra-docker/base_requirements.txt\n\n# Install GATK\nENV GATK_VERSION 4.2.4.0\nENV GATK_ZIP_PATH /tmp/gatk-${GATK_VERSION}.zip\n\nRUN curl -f -L -o $GATK_ZIP_PATH https://github.com/broadinstitute/gatk/releases/download/$GATK_VERSION/gatk-$GATK_VERSION.zip \\\n && unzip -o $GATK_ZIP_PATH -d /etc/ \\\n && ln -s /etc/gatk-$GATK_VERSION/gatk /bin/gatk\n\n# Install Nextflow\nENV NXF_MODE google\nRUN mkdir -p /tmp/nextflow && \\\n  cd /tmp/nextflow && \\\n  curl -f -s https://get.nextflow.io | bash && \\\n  mv nextflow /bin/nextflow && \\\n  cd $HOME && \\\n  chmod 777 /bin/nextflow && \\\n  chown -R $USER:users $HOME/.nextflow && \\\n  rm -rf /tmp/nextflow\n\nRUN pip install --no-cache-dir /etc/gatk-$GATK_VERSION/gatkPythonPackageArchive.zip\nRUN pip3 install --no-cache-dir --upgrade markupsafe==2.0.1\n\nCOPY cnn-models.patch /etc/gatk-$GATK_VERSION/cnn-models.patch\n\nRUN patch -u /opt/conda/lib/python3.7/site-packages/vqsr_cnn/vqsr_cnn/models.py -i /etc/gatk-$GATK_VERSION/cnn-models.patch\n\nENV PIP_USER=true\n\nENV USER jupyter\nUSER $USER\n"
}