{
  "startTime": 1674249314986,
  "endTime": 1674249315715,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM us.gcr.io/broad-dsp-gcr-public/terra-jupyter-python:1.0.11 AS python\n\nFROM us.gcr.io/broad-dsp-gcr-public/terra-jupyter-r:2.1.5\n\n# copy everything pip installed from the python image\nCOPY --from=python /opt/conda/lib/python3.7/site-packages /opt/conda/lib/python3.7/site-packages\n\nUSER root\n\n# need to apt-get everything for python since we can only copy pip installed packages\nRUN apt-get update && apt-get install -yq --no-install-recommends \\\n  python3.7-dev \\\n  python-tk \\\n  openjdk-8-jdk \\\n  tk-dev \\\n  libssl-dev \\\n  xz-utils \\\n  libhdf5-dev \\\n  openssl \\\n  make \\\n  liblzo2-dev \\\n  zlib1g-dev \\\n  libz-dev \\\n  samtools \\\n  git-lfs \\\n  # specify Java 8\n  && update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install GATK\nENV GATK_VERSION 4.2.4.1\nENV GATK_ZIP_PATH /tmp/gatk-${GATK_VERSION}.zip\n\nRUN curl -f -L -o $GATK_ZIP_PATH https://github.com/broadinstitute/gatk/releases/download/$GATK_VERSION/gatk-$GATK_VERSION.zip \\\n && unzip -o $GATK_ZIP_PATH -d /etc/ \\\n && ln -s /etc/gatk-$GATK_VERSION/gatk /bin/gatk\n\n# Install OpenVINOâ„¢ integration with TensorFlow (OVTF)\nENV TF_VER 2.7.0\nENV KERAS_VER 2.7.0\nENV OVTF_VER 1.1.0\nENV TF_ENABLE_ONEDNN_OPTS 1\n\nENV PIP_USER=false\n\n# Force reinstalling TF and Keras to satisfy OVTF compatibility.\nRUN pip install --no-cache-dir --force-reinstall tensorflow==$TF_VER keras==$KERAS_VER\nRUN conda install six typing_extensions --force-reinstall \\\n    && pip install --no-cache-dir openvino_tensorflow==$OVTF_VER \\\n    && pip install --no-cache-dir matplotlib sklearn \\\n    && pip install --no-cache-dir /etc/gatk-$GATK_VERSION/gatkPythonPackageArchive.zip\nENV PIP_USER=true\n\nCOPY gatk-ovtf.patch /etc/gatk-$GATK_VERSION/gatk-ovtf.patch\nCOPY ovtf-cuda-disabling.patch /etc/gatk-$GATK_VERSION/ovtf-cuda-disabling.patch\n\n# Apply patch to GATK to fix TFv2 compatibility.\nRUN cd /opt/conda/lib/python3.7/site-packages/vqsr_cnn/vqsr_cnn/ \\\n    && patch -p1 < /etc/gatk-$GATK_VERSION/gatk-ovtf.patch\n\n# Apply patch to OVTF to disable CUDA devices if OVTF is enabled.\nRUN cd /opt/conda/lib/python3.7/site-packages/openvino_tensorflow/ \\\n    && patch __init__.py < /etc/gatk-$GATK_VERSION/ovtf-cuda-disabling.patch\n\nCOPY --chown=jupyter:users run_gatk.sh /home/jupyter/run_gatk.sh\nCOPY --chown=jupyter:users GATK-OVTF-Notebook.ipynb /home/jupyter/GATK-OVTF-Notebook.ipynb\n\nENV USER jupyter\nUSER $USER\n"
}