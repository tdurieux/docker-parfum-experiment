{
  "startTime": 1674251228535,
  "endTime": 1674251229337,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV LC_CTYPE=C.UTF-8\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential \\\n                       git \\\n                       curl \\\n                       wget \\\n                       python-is-python3 \\\n                       python3-dev \\\n                       python3-pip \\\n                       openssh-server && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL https://get.docker.com | /bin/sh\n\nRUN pip install --no-cache-dir docker docker-compose\n\nRUN useradd -m hacker\nRUN usermod -aG docker hacker\nRUN mkdir -p /home/hacker/.docker\nRUN echo '{ \"detachKeys\": \"ctrl-q,ctrl-q\" }' > /home/hacker/.docker/config.json\n\nRUN mkdir -p /opt/pwn.college\nADD docker-entrypoint.sh /opt/pwn.college/docker-entrypoint.sh\nADD script /opt/pwn.college/script\nADD ssh /opt/pwn.college/ssh\nADD logging /opt/pwn.college/logging\nADD nginx-proxy /opt/pwn.college/nginx-proxy\nADD challenge /opt/pwn.college/challenge\nADD CTFd /opt/pwn.college/CTFd\nADD dojo_plugin /opt/pwn.college/CTFd/CTFd/plugins/dojo_plugin\nADD dojo_theme /opt/pwn.college/CTFd/CTFd/themes/dojo_theme\nADD docker-compose.yml /opt/pwn.college/docker-compose.yml\n\nADD etc/ssh/sshd_config /etc/ssh/sshd_config\nADD etc/systemd/system/pwn.college.service /etc/systemd/system/pwn.college.service\nADD etc/systemd/system/pwn.college.logging.service /etc/systemd/system/pwn.college.logging.service\n\nRUN find /opt/pwn.college/script -type f -exec ln -s {} /usr/bin/ \\;\n\nRUN ln -s /etc/systemd/system/pwn.college.service /etc/systemd/system/multi-user.target.wants/pwn.college.service\nRUN ln -s /etc/systemd/system/pwn.college.logging.service /etc/systemd/system/multi-user.target.wants/pwn.college.logging.service\n\nWORKDIR /opt/pwn.college\nENTRYPOINT [\"/opt/pwn.college/docker-entrypoint.sh\"]\n"
}