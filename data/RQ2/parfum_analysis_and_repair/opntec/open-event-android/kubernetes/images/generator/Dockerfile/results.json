{
  "startTime": 1674252320747,
  "endTime": 1674252321810,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 54,
        "columnEnd": 183
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 54,
        "columnEnd": 183
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedDockerfile": "FROM python:2-slim\nMAINTAINER Niranjan Rajendran <niranjan94@yahoo.com>\n\nARG COMMIT_HASH\nARG BRANCH\nARG REPOSITORY\n\nENV COMMIT_HASH ${COMMIT_HASH:-null}\nENV BRANCH ${BRANCH:-master}\nENV REPOSITORY ${REPOSITORY:-https://github.com/fossasia/open-event-android.git}\n\nRUN echo \"deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee /etc/apt/sources.list.d/webupd8team-java.list\nRUN echo \"deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main\" | tee -a /etc/apt/sources.list.d/webupd8team-java.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886\n\n# Install java8\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y software-properties-common && \\\n  (echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections) && \\\n  apt-get install --no-install-recommends -y oracle-java8-installer oracle-java8-set-default && \\\n  apt-get clean && \\\n  rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install Deps\nRUN dpkg --add-architecture i386 && apt-get update && apt-get install --no-install-recommends -y --force-yes expect git wget libc6-i386 lib32stdc++6 lib32gcc1 lib32ncurses5 lib32z1 python curl libqt5widgets5 && rm -rf /var/lib/apt/lists/*;\n\n# update some packages\nRUN apt-get install --no-install-recommends -y ca-certificates && update-ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends build-essential python-dev libpq-dev libevent-dev libmagic-dev zip unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean && rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Copy install tools\nCOPY tools /opt/tools\nENV PATH ${PATH}:/opt/tools\n\n# Setup environment\nENV ANDROID_HOME /opt/android-sdk-linux\nENV WORKSPACE /data/workspace\n\nRUN mkdir -p $WORKSPACE\n\nENV GENERATOR_WORKING_DIR ${WORKSPACE}/temp/\nENV KEYSTORE_PATH ${WORKSPACE}/generator.keystore\nENV KEYSTORE_PASSWORD generator\nENV KEY_ALIAS generator\n# Prepare working folders\nENV GENERATOR_WORKING_DIR ${WORKSPACE}/temp/\n\nWORKDIR $WORKSPACE\n\nCOPY android.sh .\nCOPY setup.sh .\n\nRUN bash android.sh\n\nENV PATH ${PATH}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools\n\nRUN bash setup.sh\n\nWORKDIR $WORKSPACE/open_event_android\n"
}