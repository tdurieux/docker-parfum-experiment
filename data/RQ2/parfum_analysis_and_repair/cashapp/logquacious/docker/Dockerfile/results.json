{
  "startTime": 1674256096125,
  "endTime": 1674256096769,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the static files.\nFROM node:12.16.3-alpine3.11\nRUN mkdir /lq\nWORKDIR /lq\n\nADD package.json /lq/\nADD package-lock.json /lq/\nRUN npm install && npm cache clean --force;\n\nADD tsconfig.json index.html app.sass .babelrc.js lq.png CHANGELOG.json /lq/\nADD src/ /lq/src/\nADD themes/ /lq/themes/\nRUN npm run build\n\n# Build the entrypoint binary.\nFROM golang:alpine\nADD docker /lq/\nWORKDIR /lq\nRUN go build -mod=vendor -o lq-startup ./...\n\n# Final image\nFROM nginx:alpine\n\nCOPY --from=0 /lq/dist/ /lq\nCOPY --from=1 /lq/lq-startup /\nCOPY --from=1 /lq/nginx /templates/\nCOPY --from=1 /lq/config.json /templates/\n\nRUN adduser -u 1000 -D notroot\nRUN touch /var/run/nginx.pid\nRUN chown notroot /lq /etc/nginx/conf.d/ /var/cache/nginx/ /var/run/nginx.pid\n# Don't bind to port 80, since we can't as non-root\nRUN rm /etc/nginx/conf.d/default.conf\n\nWORKDIR /lq\nUSER 1000\nENTRYPOINT [\"/lq-startup\"]\n\n"
}