{
  "startTime": 1674255990755,
  "endTime": 1674255991315,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build the server binary\nFROM golang:1.16.3-alpine AS builder\nLABEL stage=server-intermediate\n\n# install tools\nRUN apk update && apk add --no-cache curl git\nRUN go get -ldflags \"-s -w -extldflags '-static'\" github.com/go-delve/delve/cmd/dlv\n\nWORKDIR /go/src/{{ .Root }}/{{ .Name }}\n\nCOPY . .\nRUN CGO_ENABLED=0 GOOS=linux go build -gcflags=\"all=-N -l\" -o bin/server ./cmd/server\n\n# copy the server binary from builder stage; run the server binary\nFROM alpine:latest AS runner\nWORKDIR /bin\n\n# Go programs require libc\nRUN mkdir -p /lib64 && \\\n    ln -s /lib/libc.musl-x86_64.so.1 /lib64/ld-linux-x86-64.so.2\n\nCOPY --from=builder /go/src/{{ .Root }}/{{ .Name }}/bin/server .\n{{ if .WithGateway }}COPY pkg/pb/*.swagger.json www/swagger.json{{ end }}\n{{ if .WithDatabase }}COPY --from=builder /go/src/{{ .Root }}/{{ .Name }}/db/migrations /db/migrations/{{end}}\nCOPY --from=builder /go/bin/dlv .\n\nEXPOSE 8080\nEXPOSE 8081\nEXPOSE 9090\nEXPOSE 12345\n\nENTRYPOINT [ \"dlv\", \"exec\", \"./server\", \"--listen=:12345\", \"--headless=true\", \"--api-version=2\", \"--accept-multiclient\", \"--continue\", \"--\" ]\n"
}