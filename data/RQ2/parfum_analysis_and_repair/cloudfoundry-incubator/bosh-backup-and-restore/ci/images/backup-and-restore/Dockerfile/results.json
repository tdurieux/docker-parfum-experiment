{
  "startTime": 1674248284501,
  "endTime": 1674248285587,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pcfplatformrecovery/backup-and-restore-minimal\n\nENV YQ_VERSION 2.4.0\nENV CLOUD_SDK_VERSION 347.0.0\nENV CREDHUB_CLI_VERSION 2.9.0\nENV BBL_VERSION v8.4.44\nENV VELERO_VERSION v1.6.1\nENV GH_VERSION 1.12.1\nENV PIVNET_VERSION 3.0.0\nENV RUBY_VERSION 2.7.3\n\n# fixes error \"Error response from daemon: client is newer than server\"\nENV DOCKER_API_VERSION 1.41\n\nENV DEBIAN_FRONTEND=noninteractive\n\nARG TERRAFORM_VERSION\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  apt-transport-https \\\n  awscli \\\n  libreadline-dev \\\n  zlib1g-dev \\\n  default-mysql-client \\\n  dnsutils \\\n  file \\\n  libssl-dev \\\n  lsb-release \\\n  netcat-openbsd \\\n  openjdk-8-jdk \\\n  ruby-dev \\\n  wbritish \\\n  ca-certificates \\\n  gettext-base \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install azure cli\n\n# install micrsoft signing key\nRUN curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | \\\n    gpg --batch --dearmor | \\\n    sudo tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null\n\n# add azure cli repo\nRUN AZ_REPO=$(lsb_release -cs) && \\\n    echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main\" | \\\n    sudo tee /etc/apt/sources.list.d/azure-cli.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  azure-cli && rm -rf /var/lib/apt/lists/*;\n\n# INSTALL RUBY\n#\nENV RBENV_ROOT /home/vcap/.rbenv\nRUN git clone https://github.com/sstephenson/rbenv.git ${RBENV_ROOT}\n\nRUN mkdir -p ${RBENV_ROOT}/plugins\nRUN git clone https://github.com/sstephenson/ruby-build.git ${RBENV_ROOT}/plugins/ruby-build\nRUN git clone https://github.com/rbenv/rbenv-each.git ${RBENV_ROOT}/plugins/rbenv-each\n\nENV PATH ${RBENV_ROOT}/bin:${RBENV_ROOT}/shims:$PATH\n\nRUN rbenv install ${RUBY_VERSION}\nRUN rbenv global ${RUBY_VERSION}\n\nRUN echo 'gem: --no-document' > $HOME/.gemrc\nRUN rbenv each gem install bundler\n\n# gcloud\nRUN [\"/bin/bash\", \"-c\", \"set -o pipefail && \\\n  export CLOUD_SDK_REPO=\\\"cloud-sdk-$(lsb_release -c -s)\\\" && \\\n  echo \\\"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\\\" > /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n  curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n  apt-get update && apt-get install -y google-cloud-sdk=${CLOUD_SDK_VERSION}-0 && rm -rf /var/lib/apt/lists/*\"]\n\n# git-crypt\nRUN git clone https://github.com/AGWA/git-crypt.git && \\\n  cd git-crypt/ && \\\n  make && sudo make install\n\n# Bash testing framework\nRUN go get github.com/progrium/basht\n\nRUN git config --global url.\"git@github.com:\".insteadOf \"https://github.com/\" && \\\n  mkdir -p ~/.ssh && ssh-keyscan -H github.com > ~/.ssh/known_hosts\n\nRUN wget https://download.docker.com/linux/static/stable/x86_64/docker-18.09.0.tgz && \\\n  tar xvf docker-18.09.0.tgz && \\\n  chmod +x docker/* && \\\n  sudo cp docker/* /bin && rm docker-18.09.0.tgz\n\nRUN wget \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_386.zip\" && \\\n  unzip \"terraform_${TERRAFORM_VERSION}_linux_386.zip\" -d /bin/\n\n# uaac\nRUN gem install cf-uaac\n\n# credhub\nRUN \\\n  wget https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/${CREDHUB_CLI_VERSION}/credhub-linux-${CREDHUB_CLI_VERSION}.tgz -P /tmp && \\\n  tar xzvf /tmp/credhub-linux-${CREDHUB_CLI_VERSION}.tgz -C /usr/local/bin && \\\n  chmod +x /usr/local/bin/credhub && rm /tmp/credhub-linux-${CREDHUB_CLI_VERSION}.tgz\n\n# yq\nRUN \\\n  wget https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 -P /tmp && \\\n  mv /tmp/yq_linux_amd64 /usr/local/bin/yq && \\\n  chmod +x /usr/local/bin/yq\n\n# bbl\nRUN \\\n  wget https://github.com/cloudfoundry/bosh-bootloader/releases/download/${BBL_VERSION}/bbl-${BBL_VERSION}_linux_x86-64 -P /tmp && \\\n  mv /tmp/bbl-${BBL_VERSION}_linux_x86-64 /usr/local/bin/bbl && \\\n  chmod +x /usr/local/bin/bbl\n\n# github cli\nRUN \\\n  wget https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_amd64.tar.gz -P /tmp && \\\n  tar xzvf /tmp/gh_${GH_VERSION}_linux_amd64.tar.gz -C /tmp/ && \\\n  mv /tmp/gh_${GH_VERSION}_linux_amd64/bin/gh /usr/local/bin/gh && \\\n  chmod +x /usr/local/bin/gh && rm /tmp/gh_${GH_VERSION}_linux_amd64.tar.gz\n\n# velero\nRUN \\\n  wget https://github.com/vmware-tanzu/velero/releases/download/${VELERO_VERSION}/velero-${VELERO_VERSION}-linux-amd64.tar.gz -P /tmp && \\\n  tar xzvf /tmp/velero-${VELERO_VERSION}-linux-amd64.tar.gz -C /tmp/ && \\\n  mv /tmp/velero-${VELERO_VERSION}-linux-amd64/velero /usr/local/bin/velero && \\\n  chmod +x /usr/local/bin/velero && rm /tmp/velero-${VELERO_VERSION}-linux-amd64.tar.gz\n\n# kubectl\nADD https://storage.googleapis.com/kubernetes-release/release/v1.21.2/bin/linux/amd64/kubectl /usr/bin/kubectl\nRUN chmod +x /usr/bin/kubectl\n\nRUN useradd --create-home --shell /bin/bash --home-dir /home/test test\n\n# Pivnet cli\nADD https://github.com/pivotal-cf/pivnet-cli/releases/download/v${PIVNET_VERSION}/pivnet-linux-amd64-${PIVNET_VERSION} /usr/bin/pivnet\nRUN chmod +x /usr/bin/pivnet\n\n"
}