{
  "startTime": 1674218865755,
  "endTime": 1674218867087,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 40,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception\n# SPDX-FileCopyrightText: 2019-2022 Second State INC\n\nFROM quay.io/pypa/manylinux2010_x86_64\n\nMAINTAINER hydai hydai@secondstate.io\n\nADD SHA256SUM /root/\n\nENV PATH /toolchain/bin:$PATH\nENV CC gcc\nENV CXX g++\nENV CPPFLAGS -I/toolchain/include\nENV LDFLAGS -L/toolchain/lib64\nENV PKG_CONFIG_PATH /toolchain/lib64/pkgconfig\n\nRUN cd && (yum check-update || true) && yum install -y xz openssl-devel rpm-build dpkg && \\\n    export CPU=$(/opt/python/cp39-cp39/bin/python3 -c \\\n        'import multiprocessing; print(multiprocessing.cpu_count())') && \\\n    export CFGFLAGS=\"--prefix=/toolchain --disable-shared --libdir=/toolchain/lib64\" && \\\n    curl -f -s -L -O --remote-name-all \\\n        https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.xz \\\n        https://ftp.gnu.org/gnu/mpfr/mpfr-4.1.0.tar.xz \\\n        https://ftp.gnu.org/gnu/mpc/mpc-1.2.1.tar.gz \\\n        https://libisl.sourceforge.io/isl-0.24.tar.xz \\\n        https://github.com/facebook/zstd/releases/download/v1.5.0/zstd-1.5.0.tar.gz \\\n        https://ftp.gnu.org/gnu/gcc/gcc-11.1.0/gcc-11.1.0.tar.xz \\\n        https://github.com/Kitware/CMake/releases/download/v3.20.2/cmake-3.20.2.tar.gz \\\n        https://github.com/ninja-build/ninja/archive/v1.10.2.tar.gz \\\n        https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/llvm-12.0.0.src.tar.xz \\\n        https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/lld-12.0.0.src.tar.xz \\\n        https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.0/libunwind-12.0.0.src.tar.xz && \\\n    sha256sum -c SHA256SUM && \\\n    xz -dc gmp-6.2.1.tar.xz | tar -xf - && \\\n    xz -dc mpfr-4.1.0.tar.xz | tar -xf - && \\\n    gzip -dc mpc-1.2.1.tar.gz | tar -xf - && \\\n    xz -dc isl-0.24.tar.xz | tar -xf - && \\\n    gzip -dc zstd-1.5.0.tar.gz | tar -xf - && \\\n    xz -dc gcc-11.1.0.tar.xz | tar -xf - && \\\n    gzip -dc cmake-3.20.2.tar.gz | tar -xf - && \\\n    gzip -dc v1.10.2.tar.gz | tar -xf - && \\\n    xz -dc llvm-12.0.0.src.tar.xz | tar -xf - && \\\n    xz -dc lld-12.0.0.src.tar.xz | tar -xf - && \\\n    xz -dc libunwind-12.0.0.src.tar.xz | tar -xf - && \\\n    mkdir build && cd build && ../gmp-6.2.1/configure --build=x86_64-pc-linux-gnu $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build && \\\n    mkdir build && cd build && ../mpfr-4.1.0/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build && \\\n    mkdir build && cd build && ../mpc-1.2.1/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build && \\\n    mkdir build && cd build && ../isl-0.24/configure $CFGFLAGS && make -s -j $CPU && make -s install && cd - && rm -rf build && \\\n    export ZSTDFLAGS=\"PREFIX=/toolchain LIBDIR=/toolchain/lib64 SED_ERE_OPT=--regexp-extended\" && \\\n    cd zstd-1.5.0 && make -s $ZSTDFLAGS -j $CPU && make -s $ZSTDFLAGS install && rm -f /toolchain/lib64/libzstd.so* && cd - && \\\n    mkdir build && cd build && ../gcc-11.1.0/configure --prefix=/toolchain --libdir=/toolchain/lib64 \\\n        --with-gmp=/toolchain --with-gmp-lib=/toolchain/lib64 \\\n        --with-zstd=/toolchain --with-zstd-lib=/toolchain/lib64 \\\n        --disable-libmpx --disable-libsanitizer --disable-libunwind-exceptions \\\n        --disable-multilib --enable-__cxa_atexit --enable-gnu-indirect-function \\\n        --enable-gnu-unique-object --enable-initfini-array --enable-languages=\"c,c++,lto\" \\\n        --enable-linker-build-id --enable-lto --enable-plugin --enable-threads=posix \\\n        --with-default-libstdcxx-abi=\"gcc4-compatible\" \\\n        --with-gcc-major-version-only --with-linker-hash-style=\"gnu\" \\\n        --with-arch=\"x86-64\" --with-tune=\"generic\" && \\\n    make -s -j $CPU && make -s install && cd - && rm -rf build && \\\n    mv -v /toolchain/lib64/libstdc++.so.6.0.29 /toolchain/lib64/libstdc++.so.6.0.29.backup && \\\n    echo -e \"OUTPUT_FORMAT(elf64-x86-64)\\nINPUT ( libstdc++.so.6.0.13 libstdc++.a )\" \\\n       > /toolchain/lib64/libstdc++.so.6.0.29 && \\\n    export PATH=\"/toolchain/bin:$PATH\" && \\\n    mkdir build && cd build && /opt/python/cp39-cp39/bin/python \\\n        ../ninja-1.10.2/configure.py --bootstrap \\\n        --with-python=/opt/python/cp39-cp39/bin/python && \\\n    cp -v ninja /toolchain/bin/ninja && cd - && rm -rf build && \\\n    mkdir build && cd build && ../cmake-3.20.2/configure --prefix=/toolchain \\\n        --parallel=$CPU && make -s -j $CPU && make -s install && cd - && rm -rf build && \\\n    mv -v llvm-12.0.0.src llvm && \\\n    mv -v lld-12.0.0.src lld && \\\n    mv -v libunwind-12.0.0.src libunwind && \\\n    cmake -Bbuild -GNinja -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=/toolchain \\\n        -DPython3_ROOT_DIR=/opt/python/cp39-cp39 -DLLVM_LIBDIR_SUFFIX=64 \\\n        -DLLVM_TARGETS_TO_BUILD=\"X86\" -DLLVM_ENABLE_PROJECTS=lld \\\n        -DLLVM_DEFAULT_TARGET_TRIPLE=\"x86_64-pc-linux-gnu\" llvm && \\\n    cmake --build build --target install && \\\n    rm -rf build && rm -rf * && rm -rf /var/cache/yum\n\nRUN yum clean all\n"
}