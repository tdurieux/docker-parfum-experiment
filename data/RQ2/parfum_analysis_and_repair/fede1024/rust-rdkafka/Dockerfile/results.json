{
  "startTime": 1674250940289,
  "endTime": 1674250940953,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential \\\n    curl \\\n    openssl libssl-dev \\\n    pkg-config \\\n    python \\\n    valgrind \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly-2019-10-17\nENV PATH /root/.cargo/bin/:$PATH\n\n# # Create dummy project for rdkafka\n# COPY Cargo.toml /rdkafka/\n# RUN mkdir -p /rdkafka/src && echo \"fn main() {}\" > /rdkafka/src/main.rs\n#\n# # Create dummy project for rdkafka\n# RUN mkdir /rdkafka/rdkafka-sys\n# COPY rdkafka-sys/Cargo.toml /rdkafka/rdkafka-sys\n# RUN mkdir -p /rdkafka/rdkafka-sys/src && touch /rdkafka/rdkafka-sys/src/lib.rs\n# RUN echo \"fn main() {}\" > /rdkafka/rdkafka-sys/build.rs\n#\n# RUN cd /rdkafka && test --no-run\n\nCOPY docker/run_tests.sh /rdkafka/\n\nENV KAFKA_HOST kafka:9092\n\nWORKDIR /rdkafka\n"
}