{
  "startTime": 1674249745729,
  "endTime": 1674249746807,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Fetching our ffmpeg\nFROM ubuntu:22.04 AS ffmpeg\nENV DEBIAN_FRONTEND=noninteractive\n# Use script due local build compability\nCOPY ffmpeg-fetch.sh .\nRUN sh ./ffmpeg-fetch.sh\n\n\n# Create our Ubuntu 22.04 with node 16.14.2 (that specific version is required as per: https://stackoverflow.com/a/72855258/8088021)\n# Go to 20.04\nFROM ubuntu:20.04 AS base\nARG DEBIAN_FRONTEND=noninteractive\nENV UID=1000\nENV GID=1000\nENV USER=youtube\nENV NO_UPDATE_NOTIFIER=true\nENV PM2_HOME=/app/pm2\nENV ALLOW_CONFIG_MUTATIONS=true\nRUN groupadd -g $GID $USER && useradd --system -m -g $USER --uid $UID $USER && \\\n    apt update && \\\n    apt install -y --no-install-recommends curl ca-certificates tzdata && \\\n    curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \\\n    apt install -y --no-install-recommends nodejs && \\\n    npm -g install npm n && \\\n    n 16.14.2 && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n\n\n# Build frontend\nFROM base as frontend\nRUN npm install -g @angular/cli && npm cache clean --force;\nWORKDIR /build\nCOPY [ \"package.json\", \"package-lock.json\", \"angular.json\", \"tsconfig.json\", \"/build/\" ]\nCOPY [ \"src/\", \"/build/src/\" ]\nRUN npm install && \\\n    npm run build && \\\n    ls -al /build/backend/public && npm cache clean --force;\n\n\n# Install backend deps\nFROM base as backend\nWORKDIR /app\nCOPY [ \"backend/\",\"/app/\" ]\nRUN npm config set strict-ssl false && \\\n    npm install --prod && \\\n    ls -al && npm cache clean --force;\n\n\n# Final image\nFROM base\nRUN npm install -g pm2 && \\\n    apt update && \\\n    apt install -y --no-install-recommends gosu python3-minimal python-is-python3 python3-pip atomicparsley && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/* && npm cache clean --force;\nRUN pip install --no-cache-dir tcd\nWORKDIR /app\n# User 1000 already exist from base image\nCOPY --chown=$UID:$GID --from=ffmpeg [ \"/usr/local/bin/ffmpeg\", \"/usr/local/bin/ffmpeg\" ]\nCOPY --chown=$UID:$GID --from=ffmpeg [ \"/usr/local/bin/ffprobe\", \"/usr/local/bin/ffprobe\" ]\nCOPY --chown=$UID:$GID --from=backend [\"/app/\",\"/app/\"]\nCOPY --chown=$UID:$GID --from=frontend [ \"/build/backend/public/\", \"/app/public/\" ]\nRUN chmod +x /app/fix-scripts/*.sh\n# Add some persistence data\n#VOLUME [\"/app/appdata\"]\n\nEXPOSE 17442\nENTRYPOINT [ \"/app/entrypoint.sh\" ]\nCMD [ \"npm\",\"start\" ]\n"
}