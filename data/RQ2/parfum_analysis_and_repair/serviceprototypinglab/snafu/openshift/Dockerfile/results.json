{
  "startTime": 1674255424101,
  "endTime": 1674255425311,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# prep  >> git status --ignored --porcelain\n# build >> (sudo) docker build -t snafu . # -> now use: build-docker-images.sh\n# debug >> (sudo) docker run -ti snafu bash\n# run   >> (sudo) docker run -p 10000:10000 -ti snafu\n\nFROM python:3\n\nRUN echo \"deb http://deb.debian.org/debian jessie-backports main\" >> /etc/apt/sources.list && \\\n    echo \"deb http://deb.debian.org/debian stretch main\" >> /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n      python3-flask \\\n      python3-requests \\\n      unzip \\\n      nodejs-legacy \\\n    && \\\n    apt-get remove -y python3-botocore && \\\n    apt-get clean && \\\n    ##rm -rf /var/lib/apt/lists/* && \\\n    # Python deps\n    pip install --no-cache-dir urllib3 boto3 pyesprima && \\\n    rm /usr/local/lib/python3.6/site-packages/pyesprima/__init__.py && \\\n    # Dumb Init\n    wget https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n    dpkg -i dumb-init_1.2.0_amd64.deb && rm -rf /var/lib/apt/lists/*;\n\n# Workaround due to apt-get install python3-pyinotify leading to stalled systemd triggers\nRUN pip install --no-cache-dir pyinotify\n\n# Add and configure Snafu\nADD . /opt\nWORKDIR /opt\nENV PYTHONPATH=/usr/lib/python3/dist-packages\nRUN mkdir -p ~/.aws && \\\n    echo \"[default]\\nregion = invalid\" > ~/.aws/config && \\\n    echo \"[snafu]\\nlogger.csv = /opt/functions-local/.snafu.csv\" > /opt/snafu.ini\n\nCOPY integration/snafu.service /etc/systemd/system/\n\nEXPOSE 10000\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/opt/snafu-control\"]\n"
}