{
  "startTime": 1674253675941,
  "endTime": 1674253676983,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1.5-alpine3.15\nMAINTAINER Alejandro Celaya <alejandro@alejandrocelaya.com>\n\nENV APCU_VERSION 5.1.21\nENV INOTIFY_VERSION 3.0.0\nENV OPENSWOOLE_VERSION 4.11.1\nENV PDO_SQLSRV_VERSION 5.10.0\nENV MS_ODBC_SQL_VERSION 17.5.2.2\n\nRUN apk update\n\n# Install common php extensions\nRUN docker-php-ext-install pdo_mysql\nRUN docker-php-ext-install calendar\n\nRUN apk add --no-cache oniguruma-dev\nRUN docker-php-ext-install mbstring\n\nRUN apk add --no-cache sqlite-libs\nRUN apk add --no-cache sqlite-dev\nRUN docker-php-ext-install pdo_sqlite\n\nRUN apk add --no-cache icu-dev\nRUN docker-php-ext-install intl\n\nRUN apk add --no-cache libzip-dev zlib-dev\nRUN docker-php-ext-install zip\n\nRUN apk add --no-cache libpng-dev\nRUN docker-php-ext-install gd\n\nRUN apk add --no-cache postgresql-dev\nRUN docker-php-ext-install pdo_pgsql\n\nRUN docker-php-ext-install sockets\nRUN docker-php-ext-install bcmath\n\n# Install APCu extension\nADD https://pecl.php.net/get/apcu-$APCU_VERSION.tgz /tmp/apcu.tar.gz\nRUN mkdir -p /usr/src/php/ext/apcu \\\n  && tar xf /tmp/apcu.tar.gz -C /usr/src/php/ext/apcu --strip-components=1 \\\n  && docker-php-ext-configure apcu \\\n  && docker-php-ext-install apcu \\\n  && rm /tmp/apcu.tar.gz \\\n  && rm /usr/local/etc/php/conf.d/docker-php-ext-apcu.ini \\\n  && echo extension=apcu.so > /usr/local/etc/php/conf.d/20-php-ext-apcu.ini && rm -rf /usr/src/php/ext/apcu\n\n# Install inotify extension\nADD https://pecl.php.net/get/inotify-$INOTIFY_VERSION.tgz /tmp/inotify.tar.gz\nRUN mkdir -p /usr/src/php/ext/inotify \\\n  && tar xf /tmp/inotify.tar.gz -C /usr/src/php/ext/inotify --strip-components=1 \\\n  && docker-php-ext-configure inotify \\\n  && docker-php-ext-install inotify \\\n  && rm /tmp/inotify.tar.gz && rm -rf /usr/src/php/ext/inotify\n\n# Install openswoole, pcov and mssql driver\nRUN wget https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/msodbcsql17_${MS_ODBC_SQL_VERSION}-1_amd64.apk && \\\n    apk add --no-cache --allow-untrusted msodbcsql17_${MS_ODBC_SQL_VERSION}-1_amd64.apk && \\\n    apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS unixodbc-dev && \\\n    pecl install openswoole-${OPENSWOOLE_VERSION} pdo_sqlsrv-${PDO_SQLSRV_VERSION} pcov && \\\n    docker-php-ext-enable openswoole pdo_sqlsrv pcov && \\\n    apk del .phpize-deps && \\\n    rm msodbcsql17_${MS_ODBC_SQL_VERSION}-1_amd64.apk\n\n# Install composer\nCOPY --from=composer:2 /usr/bin/composer /usr/local/bin/composer\n\n# Make home directory writable by anyone\nRUN chmod 777 /home\n\nVOLUME /home/shlink\nWORKDIR /home/shlink\n\n# Expose openswoole port\nEXPOSE 8080\n\nCMD \\\n    # Install dependencies if the vendor dir does not exist\n    if [[ ! -d \"./vendor\" ]]; then /usr/local/bin/composer install ; fi && \\\n    # When restarting the container, openswoole might think it is already in execution\n    # This forces the app to be started every second until the exit code is 0\n    until php ./vendor/bin/laminas mezzio:swoole:start; do sleep 1 ; done\n"
}