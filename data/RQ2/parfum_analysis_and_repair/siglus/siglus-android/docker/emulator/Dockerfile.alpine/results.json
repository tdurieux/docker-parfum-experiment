{
  "startTime": 1674255047490,
  "endTime": 1674255048454,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.6\nMAINTAINER ThoughtWorks\nENV GLIBC_VERSION \"2.25-r0\"\n\n# RUN echo \"http://dl-2.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories; \\\n#     echo \"http://dl-3.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories; \\\n#     echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories; \\\n#     echo \"http://dl-5.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories\n\nRUN apk --update --no-cache add bash \\\n                      bc \\\n                      gawk \\\n                      grep \\\n                      libstdc++ \\\n                      openjdk8-jre \\\n                      openssl \\\n                      sed && \\\n                      update-ca-certificates\n\n# install glibc for alpine\nRUN wget https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub -O /etc/apk/keys/sgerrand.rsa.pub \\\n  && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-$GLIBC_VERSION.apk -O /tmp/glibc.apk \\\n  && wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION/glibc-bin-$GLIBC_VERSION.apk -O /tmp/glibc-bin.apk \\\n  && apk add --no-cache /tmp/glibc.apk /tmp/glibc-bin.apk \\\n  && rm  -rf /tmp/* \\\n  && rm -rf /var/cache/apk/*\n\n# install android sdk\nRUN wget -q  https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip \\\n    && mkdir android-sdk/ \\\n    && unzip sdk-tools-linux-3859397.zip -d android-sdk/ \\\n    && rm sdk-tools-linux-3859397.zip \\\n    && mv android-sdk /usr/local/android-sdk \\\n    && chown -R root:root /usr/local/android-sdk/\n\n# set enviroment variables\nENV ANDROID_HOME /usr/local/android-sdk\nENV PATH ${ANDROID_HOME}/emulator:${ANDROID_HOME}/platform-tools:${ANDROID_HOME}/tools/bin:$PATH\nENV USE_SDK_WRAPPER true\n\nRUN mkdir -p /root/.android/ \\\n  && touch /root/.android/repositories.cfg\n\nRUN ( sleep 4 && while [ 1 ]; do sleep 1; echo y; done ) | sdkmanager \\\n  \"system-images;android-19;default;x86\" \\\n  \"platform-tools\" \\\n  \"platforms;android-19\" \\\n  \"emulator\"\n\n# Create fake keymap file\nRUN mkdir /usr/local/android-sdk/tools/keymaps && \\\n    touch /usr/local/android-sdk/tools/keymaps/en-us\n\nCMD [\"/usr/bin/java\", \"-version\"]\n"
}