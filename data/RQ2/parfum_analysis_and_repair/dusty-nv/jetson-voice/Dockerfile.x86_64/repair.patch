diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dusty-nv/jetson-voice/Dockerfile.x86_64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dusty-nv/jetson-voice/Dockerfile.x86_64/repaired.Dockerfile
index ee91904..3d7a8b5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dusty-nv/jetson-voice/Dockerfile.x86_64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dusty-nv/jetson-voice/Dockerfile.x86_64/repaired.Dockerfile
@@ -1,71 +1,71 @@
-# Copyright (c) 2021, NVIDIA CORPORATION. All rights reserved.
-#
-# Permission is hereby granted, free of charge, to any person obtaining a
-# copy of this software and associated documentation files (the "Software"),
-# to deal in the Software without restriction, including without limitation
-# the rights to use, copy, modify, merge, publish, distribute, sublicense,
-# and/or sell copies of the Software, and to permit persons to whom the
-# Software is furnished to do so, subject to the following conditions:
-#
-# The above copyright notice and this permission notice shall be included in
-# all copies or substantial portions of the Software.
-#
-# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
-# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
-# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
-# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
-# DEALINGS IN THE SOFTWARE.
-
-ARG BASE_IMAGE
-FROM ${BASE_IMAGE}
-
-ENV DEBIAN_FRONTEND=noninteractive
-ENV SHELL /bin/bash
-ARG MAKEFLAGS=-j$(nproc)
-ARG WORKSPACE=/jetson-voice
-
-WORKDIR ${WORKSPACE}
-
-
-################################################################
-## PyCUDA
-################################################################
-RUN pip3 install pycuda six --verbose
-
-
-################################################################
-## ctc-decoders
-################################################################
+# Copyright (c) 2021, NVIDIA CORPORATION. All rights reserved.
+#
+# Permission is hereby granted, free of charge, to any person obtaining a
+# copy of this software and associated documentation files (the "Software"),
+# to deal in the Software without restriction, including without limitation
+# the rights to use, copy, modify, merge, publish, distribute, sublicense,
+# and/or sell copies of the Software, and to permit persons to whom the
+# Software is furnished to do so, subject to the following conditions:
+#
+# The above copyright notice and this permission notice shall be included in
+# all copies or substantial portions of the Software.
+#
+# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
+# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
+# DEALINGS IN THE SOFTWARE.
+
+ARG BASE_IMAGE
+FROM ${BASE_IMAGE}
+
+ENV DEBIAN_FRONTEND=noninteractive
+ENV SHELL /bin/bash
+ARG MAKEFLAGS=-j$(nproc)
+ARG WORKSPACE=/jetson-voice
+
+WORKDIR ${WORKSPACE}
+
+
+################################################################
+## PyCUDA
+################################################################
+RUN pip3 install --no-cache-dir pycuda six --verbose
+
+
+################################################################
+## ctc-decoders
+################################################################
 RUN apt-get update && \
     apt-get install -y --no-install-recommends \
 		  swig \
     && rm -rf /var/lib/apt/lists/* \
-    && apt-get clean
-    
+    && apt-get clean
+
 RUN git clone https://github.com/dusty-nv/OpenSeq2Seq -b ctc-decoders && \
     cd OpenSeq2Seq/decoders && \
-    ./setup.sh
-    
-RUN pip3 install git+https://github.com/NVIDIA/dllogger
-RUN pip3 install nltk
-
-
-################################################################
-## Jarvis GRPC
-################################################################
-ARG JARVIS_URL=https://nvidia.box.com/shared/static/on9t7zqes2s6er1wpumidnc6rphwsyy7.whl
-ARG JARVIS_WHL=jarvis_api-1.0.0b1-py3-none-any.whl
-
-RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${JARVIS_URL} -O ${JARVIS_WHL} && \
-    pip3 install ${JARVIS_WHL} --verbose && \
-    rm ${JARVIS_WHL}
-    
-    
-################################################################
-## install some audio stuff
-################################################################
+    ./setup.sh
+
+RUN pip3 install --no-cache-dir git+https://github.com/NVIDIA/dllogger
+RUN pip3 install --no-cache-dir nltk
+
+
+################################################################
+## Jarvis GRPC
+################################################################
+ARG JARVIS_URL=https://nvidia.box.com/shared/static/on9t7zqes2s6er1wpumidnc6rphwsyy7.whl
+ARG JARVIS_WHL=jarvis_api-1.0.0b1-py3-none-any.whl
+
+RUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${JARVIS_URL} -O ${JARVIS_WHL} && \
+    pip3 install --no-cache-dir ${JARVIS_WHL} --verbose && \
+    rm ${JARVIS_WHL}
+
+
+################################################################
+## install some audio stuff
+################################################################
 RUN apt-get update && \
     apt-get install -y --no-install-recommends \
 		  alsa-base \
@@ -77,17 +77,17 @@ RUN apt-get update && \
 		  tzdata \
 		  nano \
     && rm -rf /var/lib/apt/lists/* \
-    && apt-get clean
-    
-RUN pip3 install soundfile pyaudio wave
-
-
-################################################################
-## various patches to install
-################################################################
-COPY patches patches
-
-ARG NEMO_VERSION
+    && apt-get clean
+
+RUN pip3 install --no-cache-dir soundfile pyaudio wave
+
+
+################################################################
+## various patches to install
+################################################################
+COPY patches patches
+
+ARG NEMO_VERSION
 RUN PYTHON_ROOT=`pip3 show transformers | grep Location: | cut -d' ' -f2` && \
     TRANSFORMERS_VERSION=`pip3 show transformers | grep Version: | cut -d' ' -f2` && \
     echo "Python package root path:  $PYTHON_ROOT" && \
@@ -95,9 +95,8 @@ RUN PYTHON_ROOT=`pip3 show transformers | grep Location: | cut -d' ' -f2` && \
     cp patches/transformers/$TRANSFORMERS_VERSION/convert_graph_to_onnx.py $PYTHON_ROOT/transformers/convert_graph_to_onnx.py && \
     cp patches/transformers/$TRANSFORMERS_VERSION/modeling_distilbert.py $PYTHON_ROOT/transformers/models/distilbert/modeling_distilbert.py && \
     cp patches/nemo/${NEMO_VERSION}/nlp/distilbert.py $PYTHON_ROOT/nemo/collections/nlp/modules/common/huggingface/distilbert.py && \
-    cp patches/nemo/${NEMO_VERSION}/exportable.py $PYTHON_ROOT/nemo/core/classes/exportable.py
-
-
-# set Python to unicode
-ENV PYTHONIOENCODING=utf-8
-    
\ No newline at end of file
+    cp patches/nemo/${NEMO_VERSION}/exportable.py $PYTHON_ROOT/nemo/core/classes/exportable.py
+
+
+# set Python to unicode
+ENV PYTHONIOENCODING=utf-8