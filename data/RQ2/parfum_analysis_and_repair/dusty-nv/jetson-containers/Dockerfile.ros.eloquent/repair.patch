diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dusty-nv/jetson-containers/Dockerfile.ros.eloquent b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dusty-nv/jetson-containers/Dockerfile.ros.eloquent/repaired.Dockerfile
index 8f3e3f8..c9a27d8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dusty-nv/jetson-containers/Dockerfile.ros.eloquent
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dusty-nv/jetson-containers/Dockerfile.ros.eloquent/repaired.Dockerfile
@@ -1,29 +1,29 @@
-#
-# this dockerfile roughly follows the 'Install ROS2 Via Debian Packages' from:
-#   https://index.ros.org/doc/ros2/Installation/Eloquent/Linux-Install-Debians/
-#
-ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.5.0
-FROM ${BASE_IMAGE}
-
-ARG ROS_PKG=ros_base
-ENV ROS_DISTRO=eloquent
-ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
-
-ENV DEBIAN_FRONTEND=noninteractive
-ENV SHELL /bin/bash
-SHELL ["/bin/bash", "-c"] 
-
-WORKDIR /tmp
-
-# change the locale from POSIX to UTF-8
-RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
-ENV LANG=en_US.UTF-8
-ENV PYTHONIOENCODING=utf-8
-
-
-# 
-# add the ROS deb repo to the apt sources list
-#
+#
+# this dockerfile roughly follows the 'Install ROS2 Via Debian Packages' from:
+#   https://index.ros.org/doc/ros2/Installation/Eloquent/Linux-Install-Debians/
+#
+ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.5.0
+FROM ${BASE_IMAGE}
+
+ARG ROS_PKG=ros_base
+ENV ROS_DISTRO=eloquent
+ENV ROS_ROOT=/opt/ros/${ROS_DISTRO}
+
+ENV DEBIAN_FRONTEND=noninteractive
+ENV SHELL /bin/bash
+SHELL ["/bin/bash", "-c"]
+
+WORKDIR /tmp
+
+# change the locale from POSIX to UTF-8
+RUN locale-gen en_US en_US.UTF-8 && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
+ENV LANG=en_US.UTF-8
+ENV PYTHONIOENCODING=utf-8
+
+
+#
+# add the ROS deb repo to the apt sources list
+#
 RUN apt-get update && \
     apt-get install -y --no-install-recommends \
           git \
@@ -35,15 +35,15 @@ RUN apt-get update && \
 		lsb-release \
 		ca-certificates \
     && rm -rf /var/lib/apt/lists/* \
-    && apt-get clean
-
-RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
-RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
-
-
-#
-# install ROS packages
-#
+    && apt-get clean
+
+RUN curl -f -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg
+RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null
+
+
+#
+# install ROS packages
+#
 RUN apt-get update && \
     apt-get install -y --no-install-recommends \
 		ros-eloquent-`echo "${ROS_PKG}" | tr '_' '-'` \
@@ -72,22 +72,22 @@ RUN apt-get update && \
 		gazebo9-common \
 		gazebo9-plugin-base \
     && rm -rf /var/lib/apt/lists/* \
-    && apt-get clean
-
-
-# 
-# init/update rosdep
-#
+    && apt-get clean
+
+
+#
+# init/update rosdep
+#
 RUN apt-get update && \
     cd ${ROS_ROOT} && \
     rosdep init && \
     rosdep update && \
-    rm -rf /var/lib/apt/lists/*
-
-
-#
-# compile yaml-cpp-0.6, which some ROS packages may use (but is not in the 18.04 apt repo)
-#
+    rm -rf /var/lib/apt/lists/*
+
+
+#
+# compile yaml-cpp-0.6, which some ROS packages may use (but is not in the 18.04 apt repo)
+#
 RUN git clone --branch yaml-cpp-0.6.0 https://github.com/jbeder/yaml-cpp yaml-cpp-0.6 && \
     cd yaml-cpp-0.6 && \
     mkdir build && \
@@ -95,14 +95,14 @@ RUN git clone --branch yaml-cpp-0.6.0 https://github.com/jbeder/yaml-cpp yaml-cp
     cmake -DBUILD_SHARED_LIBS=ON .. && \
     make -j$(nproc) && \
     cp libyaml-cpp.so.0.6.0 /usr/lib/aarch64-linux-gnu/ && \
-    ln -s /usr/lib/aarch64-linux-gnu/libyaml-cpp.so.0.6.0 /usr/lib/aarch64-linux-gnu/libyaml-cpp.so.0.6
-
-
-# 
-# setup entrypoint
-#
-COPY ./packages/ros_entrypoint.sh /ros_entrypoint.sh
-RUN echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> /root/.bashrc
-ENTRYPOINT ["/ros_entrypoint.sh"]
-CMD ["bash"]
-WORKDIR /
+    ln -s /usr/lib/aarch64-linux-gnu/libyaml-cpp.so.0.6.0 /usr/lib/aarch64-linux-gnu/libyaml-cpp.so.0.6
+
+
+#
+# setup entrypoint
+#
+COPY ./packages/ros_entrypoint.sh /ros_entrypoint.sh
+RUN echo 'source /opt/ros/${ROS_DISTRO}/setup.bash' >> /root/.bashrc
+ENTRYPOINT ["/ros_entrypoint.sh"]
+CMD ["bash"]
+WORKDIR /