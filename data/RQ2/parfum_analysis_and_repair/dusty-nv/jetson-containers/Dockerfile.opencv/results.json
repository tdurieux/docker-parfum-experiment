{
  "startTime": 1674250661064,
  "endTime": 1674250661944,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 23,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This is a Dockerfile for building OpenCV debian packages\n# with CUDA, cuDNN, GStreamer, ect enabled.  You can then take\n# the output .deb packages and install them into other containers.\n#\n# See scripts/docker_build_opencv.sh to run it\n#\n\nARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.4\nFROM ${BASE_IMAGE}\n\n#\n# setup environment\n#\nENV DEBIAN_FRONTEND=noninteractive\nENV CUDA_HOME=\"/usr/local/cuda\"\nENV PATH=\"/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\"\n\nWORKDIR /opt\n\n\n#\n# OpenCV - https://github.com/mdegans/nano_build_opencv/blob/master/build_opencv.sh\n#\nARG OPENCV_VERSION=\"4.4.0\"\n\n# install build dependencies\nCOPY scripts/opencv_install_deps.sh opencv_install_deps.sh\nRUN ./opencv_install_deps.sh\n\n# OpenCV looks for the cuDNN version in cudnn_version.h, but it's been renamed to cudnn_version_v8.h\nRUN ln -s /usr/include/$(uname -i)-linux-gnu/cudnn_version_v8.h /usr/include/$(uname -i)-linux-gnu/cudnn_version.h\n\n# architecture-specific build options\nARG CUDA_ARCH_BIN=\"\"\nARG ENABLE_NEON=\"OFF\"\n\n# clone and configure OpenCV repo\nRUN git clone --depth 1 --branch ${OPENCV_VERSION} https://github.com/opencv/opencv.git && \\\n    git clone --depth 1 --branch ${OPENCV_VERSION} https://github.com/opencv/opencv_contrib.git && \\\n    cd opencv && \\\n    mkdir build && \\\n    cd build && \\\n    echo \"configuring OpenCV ${OPENCV_VERSION}, CUDA_ARCH_BIN=${CUDA_ARCH_BIN}, ENABLE_NEON=${ENABLE_NEON}\" && \\\n    cmake \\\n        -D CPACK_BINARY_DEB=ON \\\n\t   -D BUILD_EXAMPLES=OFF \\\n        -D BUILD_opencv_python2=OFF \\\n        -D BUILD_opencv_python3=ON \\\n\t   -D BUILD_opencv_java=OFF \\\n        -D CMAKE_BUILD_TYPE=RELEASE \\\n        -D CMAKE_INSTALL_PREFIX=/usr/local \\\n        -D CUDA_ARCH_BIN=${CUDA_ARCH_BIN} \\\n        -D CUDA_ARCH_PTX= \\\n        -D CUDA_FAST_MATH=ON \\\n        -D CUDNN_INCLUDE_DIR=/usr/include/$(uname -i)-linux-gnu \\\n        -D EIGEN_INCLUDE_PATH=/usr/include/eigen3 \\\n\t   -D WITH_EIGEN=ON \\\n        -D ENABLE_NEON=${ENABLE_NEON} \\\n        -D OPENCV_DNN_CUDA=ON \\\n        -D OPENCV_ENABLE_NONFREE=ON \\\n        -D OPENCV_EXTRA_MODULES_PATH=/opt/opencv_contrib/modules \\\n        -D OPENCV_GENERATE_PKGCONFIG=ON \\\n        -D WITH_CUBLAS=ON \\\n        -D WITH_CUDA=ON \\\n        -D WITH_CUDNN=ON \\\n        -D WITH_GSTREAMER=ON \\\n        -D WITH_LIBV4L=ON \\\n        -D WITH_OPENGL=ON \\\n\t   -D WITH_OPENCL=OFF \\\n\t   -D WITH_IPP=OFF \\\n        -D WITH_TBB=ON \\\n\t   -D BUILD_TIFF=ON \\\n\t   -D BUILD_PERF_TESTS=OFF \\\n\t   -D BUILD_TESTS=OFF \\\n\t   ../\n\nRUN cd opencv/build && make -j$(nproc)\nRUN cd opencv/build && make install\nRUN cd opencv/build && make package\n\nRUN cd opencv/build && tar -czvf OpenCV-${OPENCV_VERSION}-$(uname -i).tar.gz *.deb && rm OpenCV-${OPENCV_VERSION}-$( uname -i).tar.gz\n\n"
}