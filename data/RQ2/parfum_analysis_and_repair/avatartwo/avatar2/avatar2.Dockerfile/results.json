{
  "startTime": 1674256276160,
  "endTime": 1674256277333,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 131
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### Stage 0: the base avatar2-core image\nFROM ubuntu:20.04 AS base\n\n# avatar2 run-time dependencies\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python3 python3-setuptools libcapstone3 gdb gdbserver gdb-multiarch && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n\n\n### Stage 1: The avatar2-core build image\nFROM base AS build-core\n\n# avatar2 build dependencies\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends git cmake pkg-config build-essential python3-dev python3-pip libcapstone-dev && \\\n    pip3 install --upgrade --no-cache-dir pip && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/avatartwo/avatar2 /root/avatar2/\nRUN cd /root/avatar2 && \\\n    python3 setup.py install\n\n\n\n### Stage 2: Build avatar-qemu\nFROM base AS build-avatar-qemu\nARG QEMU_TARGETS=\"arm-softmmu,mips-softmmu\"\n\nRUN sed -i '/deb-src .*-security main restricted/s/^#//g' /etc/apt/sources.list\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get build-dep -y qemu && \\\n    apt-get install --no-install-recommends -y git ninja-build && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/avatartwo/avatar-qemu /root/avatar-qemu/\nRUN cd /root/avatar-qemu/ && \\\n    git checkout dev/qemu-6.2\nRUN mkdir -p /root/avatar-qemu/build && cd /root/avatar-qemu/build && \\\n    ../configure \\\n        --disable-sdl \\\n        --prefix=/usr/local/ \\\n        --target-list=\"${QEMU_TARGETS}\" && \\\n    make -j \"$(nproc)\"\nRUN cd /root/avatar-qemu/build/ && make install\n\n\n\n### Stage 3: Pull official panda image\nFROM pandare/panda:latest AS panda\n\n\n\n### Stage 4: Assemble the final image\nFROM base AS avatar2\n\nCOPY --from=build-core /usr/local /usr/local\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends libpulse0 && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=build-avatar-qemu /usr/local /usr/local\n\n# PANDA run-time dependencies\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends ca-certificates wget && \\\n    wget 'https://raw.githubusercontent.com/panda-re/panda/master/panda/dependencies/ubuntu:20.04_base.txt' && \\\n    DEBIAN_FRONTEND=noninteractive apt-get -qq install -y --no-install-recommends $(cat ./ubuntu:20.04_base.txt | grep -o '^[^#]*') && \\\n    rm -f ./ubuntu:20.04_base.txt && \\\n    apt-get remove -y ca-certificates wget && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=panda /usr/local /usr/local\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\n\n"
}