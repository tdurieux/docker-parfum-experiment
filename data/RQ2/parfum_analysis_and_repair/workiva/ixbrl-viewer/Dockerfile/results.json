{
  "startTime": 1674252482538,
  "endTime": 1674252483496,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-buster as build\n\nARG PIP_INDEX_URL\nARG NPM_CONFIG__AUTH\nARG NPM_CONFIG_REGISTRY=https://workivaeast.jfrog.io/workivaeast/api/npm/npm-prod/\nARG NPM_CONFIG_ALWAYS_AUTH=true\nARG GIT_TAG\n\nCOPY requirements-dev.txt ./requirements-dev.txt\nCOPY requirements.txt ./requirements.txt\nRUN pip install --no-cache-dir -r requirements-dev.txt\n\nWORKDIR /build/\nADD . /build/\n\n# The following command replaces the version string in setup.py and package.json\n# with the tagged version number from GIT_TAG or `0.0.0` if GIT_TAG is not set\nARG VERSION=${GIT_TAG:-0.0.0}\nRUN sed -i \"s/version='0\\.0\\.0'/version='$VERSION'/\" setup.py\nRUN sed -i \"s/\\\"version\\\": \\\"0\\.0\\.0\\\"/\\\"version\\\": \\\"$VERSION\\\"/\" package.json\n\n# build ixbrlviewer.js\nRUN apt-get update && apt-get install --no-install-recommends -y curl && \\\n    curl -f -sL https://deb.nodesource.com/setup_10.x | bash && \\\n    apt-get install --no-install-recommends -y nodejs build-essential && rm -rf /var/lib/apt/lists/*;\nRUN npm install && npm cache clean --force;\nRUN make prod\n\n# javascript tests\nRUN npm run test\n\n# lint check .less files\nRUN npm run stylelint\n\n# Upload ixbrlviewer.js to github artifacts\nARG BUILD_ARTIFACTS_GITHUB_RELEASE_ASSETS=/build/iXBRLViewerPlugin/viewer/dist/ixbrlviewer.js\n\n# Host ixviewer.js on CDN\nRUN mkdir /static_release\nRUN tar -czf /static_release/assets.tar.gz -C /build/iXBRLViewerPlugin/viewer/dist/ . && rm /static_release/assets.tar.gz\nARG BUILD_ARTIFACTS_CDN=/static_release/assets.tar.gz\n\n# python tests\nARG BUILD_ARTIFACTS_TEST=/test_reports/*.xml\nRUN mkdir /test_reports\nRUN nosetests --with-xunit --xunit-file=/test_reports/results.xml --cover-html tests.unit_tests\n\n# pypi package creation\nARG BUILD_ARTIFACTS_PYPI=/build/dist/*.tar.gz\nRUN python setup.py sdist\n\n# npm package creation\nRUN npm pack\nARG BUILD_ARTIFACTS_NPM=/build/*.tgz\n\nARG BUILD_ARTIFACTS_AUDIT=/audit/*\nRUN mkdir /audit/\nRUN pip freeze > /audit/pip.lock\n\nFROM scratch\n"
}