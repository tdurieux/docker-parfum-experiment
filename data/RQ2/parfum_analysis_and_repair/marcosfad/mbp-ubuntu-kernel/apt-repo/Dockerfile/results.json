{
  "startTime": 1674252133860,
  "endTime": 1674252136024,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 17,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 17,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG RELEASE_VERSION=5.6.4\nARG GPG_KEY=some_key\nARG GPG_PASS=some_pass\nARG GPG_KEY_ID=some_id\n\nENV GITHUB_URL=github.com/marcosfad/mbp-ubuntu-kernel/releases\nENV REPO_URL=mbp-ubuntu-kernel.herokuapp.com\nENV LANG en_US.utf8\n\nWORKDIR /var/repo\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n      locales dpkg-dev dpkg-sig nginx gettext wget curl apt-utils \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\n\nRUN echo \"${GPG_KEY}\" > PRIVATE_GPG_KEY.asc \\\n    && gpg -v --batch --passphrase \"${GPG_PASS}\" --import PRIVATE_GPG_KEY.asc \\\n    && rm PRIVATE_GPG_KEY.asc \\\n    && gpg --batch --list-keys \\\n    && gpg --batch --output /var/repo/KEY.gpg --armor --export ${GPG_KEY_ID}\n\nRUN for deb in $( curl -f -s https://${REPO_URL}/ -L | grep deb | grep a | cut -d'>' -f2 | cut -d'<' -f1); do \\\n      wget -q --backups=1 https://${REPO_URL}/${deb}; \\\n    done \\\n    ; rm -rfv *.1\n\nRUN echo \"${GPG_PASS}\" > PRIVATE_GPG_PASS \\\n    && export GPG_TTY=$(tty) && \\\n    for deb in $( curl -f -s https://${GITHUB_URL}/latest -L | grep deb | grep span | cut -d'>' -f2 | cut -d'<' -f1); do \\\n      wget -q --backups=1 https://${GITHUB_URL}/download/v${RELEASE_VERSION}/${deb} && \\\n      dpkg-sig -k ${GPG_KEY_ID} -v --sign builder \"./${deb}\" \\\n        --gpg-options=\"--batch --pinentry-mode loopback --no-tty --passphrase-file ./PRIVATE_GPG_PASS\"; \\\n    done \\\n    ; rm PRIVATE_GPG_PASS \\\n    ; rm -rfv *.1\n\nRUN apt-ftparchive --arch amd64 packages . > Packages \\\n    && gzip -k -f Packages \\\n    && apt-ftparchive release . > Release\n\nRUN echo \"${GPG_PASS}\" | gpg --batch --pinentry-mode loopback --yes --default-key \"${GPG_KEY_ID}\"\\\n          --passphrase-fd 0 -abs -o Release.gpg Release \\\n    && echo \"${GPG_PASS}\" | gpg --batch --pinentry-mode loopback --yes --default-key \"${GPG_KEY_ID}\"\\\n          --passphrase-fd 0 --clearsign -o InRelease Release\n\nRUN chown -R www-data:www-data /var/repo && rm -rfv \"/var/repo/${REPO_URL}\" && ls -la /var/repo\n\nCOPY --chown=www-data:www-data nginx.conf /etc/nginx/nginx.conf\n\nRUN mkdir -p /var/lib/nginx \\\n    && chown -R www-data:www-data /var/lib/nginx\n\nRUN touch /var/run/nginx.pid && \\\n    chown -R www-data:www-data /var/run/nginx.pid\n\nUSER www-data\n\nENV PORT=8080\nEXPOSE ${PORT}\n\nCMD /bin/bash -c \"envsubst '\\$PORT' < /etc/nginx/nginx.conf > /tmp/nginx.conf; cat /tmp/nginx.conf > /etc/nginx/nginx.conf\" && nginx -g 'daemon off;'\n"
}