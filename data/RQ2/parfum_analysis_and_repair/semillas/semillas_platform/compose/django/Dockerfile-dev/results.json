{
  "startTime": 1674216931219,
  "endTime": 1674216932591,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.5\n\nENV PYTHONUNBUFFERED 1\n\n#install geos\nRUN mkdir geos \\\n    && wget -q https://download.osgeo.org/geos/geos-3.4.2.tar.bz2 -O - | tar xfj - -C geos --strip-components 1 \\\n    && cd geos && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd - \\\n    && rm -r geos\n\nRUN mkdir -p /opt/maxmind/\n\nRUN cd /tmp/ \\\n    && wget -q -O GeoLite2-City.mmdb.gz \"https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz\" \\\n    && gunzip GeoLite2-City.mmdb.gz \\\n    && find . -type f -name \"*.mmdb\" | xargs -I dbfile mv dbfile /opt/maxmind/\n\n# Requirements have to be pulled and installed here, otherwise caching won't work\nCOPY ./requirements /requirements\nRUN pip install --no-cache-dir -r /requirements/local.txt\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gettext && \\\n    apt-get install --no-install-recommends -y libgdal-dev && \\\n    apt-get install --no-install-recommends -y postgresql-client && \\\n    apt-get clean && rm -rf /var/cache/apt/* && rm -rf /var/lib/apt/lists/* && rm -rf /tmp/*\n\nCOPY ./compose/django/entrypoint.sh /entrypoint.sh\nRUN sed -i 's/\\r//' /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nWORKDIR /app\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}