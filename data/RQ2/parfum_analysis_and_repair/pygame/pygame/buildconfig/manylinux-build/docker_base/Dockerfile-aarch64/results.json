{
  "startTime": 1674246346349,
  "endTime": 1674246347764,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=manylinux2014_aarch64\nFROM quay.io/pypa/$BASE_IMAGE\nENV MAKEFLAGS=\"-j 16\"\n\n# Set up repoforge\nCOPY RPM-GPG-KEY.dag.txt /tmp/\nRUN rpm --import /tmp/RPM-GPG-KEY.dag.txt\n\n#ENV RPMFORGE_FILE \"rpmforge-release-0.5.3-1.rf.src.rpm\"\n#ADD \"https://repoforge.cu.be/redhat/el5/en/source/rpmforge-release-0.5.3-1.rf.src.rpm\" /tmp/${RPMFORGE_FILE}\n\n#RUN rpm -i /tmp/${RPMFORGE_FILE}\n\n# Install SDL and portmidi dependencies\nRUN yum install -y zlib-devel libX11-devel \\\n    mesa-libGLU-devel audiofile-devel \\\n    java-1.7.0-openjdk-devel jpackage-utils \\\n    giflib-devel dbus-devel \\\n    dejavu-sans-fonts fontconfig \\\n    libXcursor-devel libXi-devel libXxf86vm-devel \\\n    libXrandr-devel libXinerama-devel libXcomposite-devel mesa-libGLU-devel xz && rm -rf /var/cache/yum\nRUN yum install -y libcap-devel libxkbcommon-devel && rm -rf /var/cache/yum\n\nADD brotli /brotli_build/\nRUN [\"bash\", \"/brotli_build/build-brotli.sh\"]\n\n#ADD bzip2 /bzip2_build/\n#RUN [\"bash\", \"/bzip2_build/build-bzip2.sh\"]\n\n#ADD zlib-ng /zlib-ng_build/\n#RUN [\"bash\", \"/zlib-ng_build/build-zlib-ng.sh\"]\n\nADD libjpegturbo /libjpegturbo_build/\nRUN [\"bash\", \"/libjpegturbo_build/build-jpeg-turbo.sh\"]\n\nADD libpng /libpng_build/\nRUN [\"bash\", \"/libpng_build/build-png.sh\"]\n\nADD libwebp /webp_build/\nRUN [\"bash\", \"/webp_build/build-webp.sh\"]\n\nADD libtiff /libtiff_build/\nRUN [\"bash\", \"/libtiff_build/build-tiff.sh\"]\n\nADD opus /opus_build/\nRUN [\"bash\", \"/opus_build/build-opus.sh\"]\n\n#ADD harfbuzz /harfbuzz_build/\n#RUN [\"bash\", \"/harfbuzz_build/build-harfbuzz.sh\"]\n\nADD freetype /freetype_build/\nRUN [\"bash\", \"/freetype_build/build-freetype.sh\"]\n\nRUN [\"rm\", \"-f\", \"/lib64/libasound*\"]\nRUN [\"rm\", \"-f\", \"/lib/libasound*\"]\nADD alsa /alsa_build/\nRUN [\"bash\", \"/alsa_build/build-alsa.sh\"]\n\nADD ogg /ogg_build/\nRUN [\"bash\", \"/ogg_build/build-ogg.sh\"]\n\nADD mpg123 /mpg123_build/\nRUN [\"bash\", \"/mpg123_build/build-mpg123.sh\"]\n\nADD flac /flac_build/\nRUN [\"bash\", \"/flac_build/build-flac.sh\"]\n\nADD sndfile /sndfile_build/\nRUN [\"bash\", \"/sndfile_build/build-sndfile.sh\"]\n\nADD pulseaudio /pulseaudio_build/\nRUN [\"bash\", \"/pulseaudio_build/build-pulseaudio.sh\"]\n\nADD libmodplug /libmodplug_build/\nRUN [\"bash\", \"/libmodplug_build/build-libmodplug.sh\"]\n\nADD cmake /cmake_build/\nRUN [\"bash\", \"/cmake_build/build-cmake.sh\"]\n\nADD fluidsynth /fluidsynth_build/\nRUN [\"bash\", \"/fluidsynth_build/build-fluidsynth.sh\"]\n\nADD sdl_libs /sdl_build/\nRUN [\"bash\", \"/sdl_build/build-sdl2-libs.sh\"]\n\n\nENV MAKEFLAGS=\n\nADD portmidi /portmidi_build/\nRUN [\"bash\", \"/portmidi_build/build-portmidi.sh\"]\n\nENV base_image=$BASE_IMAGE\nRUN echo \"$base_image\"\nRUN echo \"$BASE_IMAGE\"\n"
}