diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/chopicalqui/kaliintelligencesuite/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/chopicalqui/kaliintelligencesuite/Dockerfile/repaired.Dockerfile
index b3a3db7..2d5526d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/chopicalqui/kaliintelligencesuite/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/chopicalqui/kaliintelligencesuite/Dockerfile/repaired.Dockerfile
@@ -19,10 +19,10 @@ RUN useradd kali && \
 # Do base installation
 WORKDIR /opt/kaliintelsuite
 RUN apt-get update && \
-    apt-get install -y ca-certificates openssl apt-transport-https && \
+    apt-get install --no-install-recommends -y ca-certificates openssl apt-transport-https && \
     echo "deb https://http.kali.org/kali kali-rolling main non-free contrib" >> /etc/apt/sources.list && \
     apt-get update && \
-    apt-get install -y amass \
+    apt-get install --no-install-recommends -y amass \
                        bind9-dnsutils \
                        bind9-host \
                        changeme \
@@ -74,7 +74,7 @@ RUN apt-get update && \
                        wapiti \
                        whatweb \
                        whois \
-                       wpscan
+                       wpscan && rm -rf /var/lib/apt/lists/*;
 
 # Setup container
 FROM base as builder
@@ -84,7 +84,7 @@ ENV LANG=C.UTF-8 \
     GOPATH=/opt/go
 
 # Install required packages for building process
-RUN apt install -y git golang-go wget zip
+RUN apt install --no-install-recommends -y git golang-go wget zip && rm -rf /var/lib/apt/lists/*;
 
 # Prepare Aquatone
 WORKDIR /tmp/
@@ -98,25 +98,25 @@ RUN go install github.com/cgboal/sonarsearch/cmd/crobat@latest
 RUN wget https://github.com/assetnote/kiterunner/releases/download/v1.0.2/kiterunner_1.0.2_linux_amd64.tar.gz -O /tmp/kiterunner.tar.gz && \
     tar --extract -f /tmp/kiterunner.tar.gz -C /tmp/ && \
     wget -qO- https://wordlists-cdn.assetnote.io/data/kiterunner/routes-small.kite.tar.gz | tar -xvz -C /tmp/ && \
-    wget -qO- https://wordlists-cdn.assetnote.io/data/kiterunner/routes-large.kite.tar.gz | tar -xvz -C /tmp/
+    wget -qO- https://wordlists-cdn.assetnote.io/data/kiterunner/routes-large.kite.tar.gz | tar -xvz -C /tmp/ && rm /tmp/kiterunner.tar.gz
 
 # Prepare Slurp
 RUN wget https://github.com/0xbharath/slurp/releases/download/1.1.0/slurp-1.1.0-linux-amd64 -O /tmp/slurp && \
     wget https://github.com/0xbharath/slurp/archive/refs/tags/1.1.0.tar.gz -O /tmp/1.1.0.tar.gz && \
     tar --extract -f /tmp/1.1.0.tar.gz -C /tmp/ && \
-    chmod +x /tmp/slurp
+    chmod +x /tmp/slurp && rm /tmp/1.1.0.tar.gz
 
 # Obtain SNMP default password wordlist
 RUN wget https://raw.githubusercontent.com/SECFORCE/sparta/master/wordlists/snmp-default.txt -O /tmp/snmp-default.txt
 
 # Setup and install Poetry
-RUN apt install -y python3-pip python2
+RUN apt install --no-install-recommends -y python3-pip python2 && rm -rf /var/lib/apt/lists/*;
 ENV POETRY_HOME="/opt/poetry" \
     POETRY_VIRTUALENVS_IN_PROJECT=true \
     POETRY_NO_INTERACTION=1 \
     POETRY_VERSION=1.1.8
 
-RUN pip install "poetry==$POETRY_VERSION"
+RUN pip install --no-cache-dir "poetry==$POETRY_VERSION"
 COPY pyproject.toml /opt/kaliintelsuite/
 WORKDIR /opt/kaliintelsuite/
 RUN ln -sT python2 /usr/bin/python && poetry install --no-root --no-dev