{
  "startTime": 1674215950433,
  "endTime": 1674215951582,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM kalilinux/kali-last-release as base\n\nENV LD_LIBRARY_PATH=/usr/local/lib \\\n    PYTHONFAULTHANDLER=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONHASHSEED=random \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    PATH=\"/opt/kaliintelsuite/.venv/bin:${PATH}\" \\\n    VIRTUAL_ENV=\"/opt/kaliintelsuite/.venv/\"\n\n# Create kali user\nRUN useradd kali && \\\n    mkdir /home/kali && \\\n    chown kali:kali /home/kali\n\n# Do base installation\nWORKDIR /opt/kaliintelsuite\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ca-certificates openssl apt-transport-https && \\\n    echo \"deb https://http.kali.org/kali kali-rolling main non-free contrib\" >> /etc/apt/sources.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y amass \\\n                       bind9-dnsutils \\\n                       bind9-host \\\n                       changeme \\\n                       chromium \\\n                       crackmapexec \\\n                       csvkit \\\n                       davtest \\\n                       dirb \\\n                       dnsenum \\\n                       dnsrecon \\\n                       dotdotpwn \\\n                       enum4linux \\\n                       finger \\\n                       ftp \\\n                       gobuster \\\n                       hydra \\\n                       ike-scan \\\n                       iputils-ping \\\n                       ldap-utils \\\n                       masscan \\\n                       metasploit-framework \\\n                       medusa \\\n                       nbtscan \\\n                       nfs-common \\\n                       nikto \\\n                       nmap \\\n                       ntp \\\n                       ntpdate \\\n                       onesixtyone \\\n                       passing-the-hash \\\n                       proxychains4 \\\n                       python3-minimal \\\n                       postgresql-client-14 \\\n                       rpcbind \\\n                       sidguesser \\\n                       smbclient \\\n                       smbmap \\\n                       smtp-user-enum \\\n                       snmp \\\n                       snmpcheck \\\n                       seclists \\\n                       sqlmap \\\n                       sslscan \\\n                       sslyze \\\n                       sublist3r \\\n                       theharvester \\\n                       tcptraceroute \\\n                       vim \\\n                       wapiti \\\n                       whatweb \\\n                       whois \\\n                       wpscan && rm -rf /var/lib/apt/lists/*;\n\n# Setup container\nFROM base as builder\n\nENV LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8 \\\n    GOPATH=/opt/go\n\n# Install required packages for building process\nRUN apt install --no-install-recommends -y git golang-go wget zip && rm -rf /var/lib/apt/lists/*;\n\n# Prepare Aquatone\nWORKDIR /tmp/\nRUN wget https://github.com/michenriksen/aquatone/releases/download/v1.7.0/aquatone_linux_amd64_1.7.0.zip -O /tmp/aquatone.zip && \\\n    unzip /tmp/aquatone.zip\n\n# Prepare Crobat\nRUN go install github.com/cgboal/sonarsearch/cmd/crobat@latest\n\n# Prepare Kiterunner\nRUN wget https://github.com/assetnote/kiterunner/releases/download/v1.0.2/kiterunner_1.0.2_linux_amd64.tar.gz -O /tmp/kiterunner.tar.gz && \\\n    tar --extract -f /tmp/kiterunner.tar.gz -C /tmp/ && \\\n    wget -qO- https://wordlists-cdn.assetnote.io/data/kiterunner/routes-small.kite.tar.gz | tar -xvz -C /tmp/ && \\\n    wget -qO- https://wordlists-cdn.assetnote.io/data/kiterunner/routes-large.kite.tar.gz | tar -xvz -C /tmp/ && rm /tmp/kiterunner.tar.gz\n\n# Prepare Slurp\nRUN wget https://github.com/0xbharath/slurp/releases/download/1.1.0/slurp-1.1.0-linux-amd64 -O /tmp/slurp && \\\n    wget https://github.com/0xbharath/slurp/archive/refs/tags/1.1.0.tar.gz -O /tmp/1.1.0.tar.gz && \\\n    tar --extract -f /tmp/1.1.0.tar.gz -C /tmp/ && \\\n    chmod +x /tmp/slurp && rm /tmp/1.1.0.tar.gz\n\n# Obtain SNMP default password wordlist\nRUN wget https://raw.githubusercontent.com/SECFORCE/sparta/master/wordlists/snmp-default.txt -O /tmp/snmp-default.txt\n\n# Setup and install Poetry\nRUN apt install --no-install-recommends -y python3-pip python2 && rm -rf /var/lib/apt/lists/*;\nENV POETRY_HOME=\"/opt/poetry\" \\\n    POETRY_VIRTUALENVS_IN_PROJECT=true \\\n    POETRY_NO_INTERACTION=1 \\\n    POETRY_VERSION=1.1.8\n\nRUN pip install --no-cache-dir \"poetry==$POETRY_VERSION\"\nCOPY pyproject.toml /opt/kaliintelsuite/\nWORKDIR /opt/kaliintelsuite/\nRUN ln -sT python2 /usr/bin/python && poetry install --no-root --no-dev\n\n\n# Setup and deploy Kali Intelligence Suite\nFROM base as final\n\n# Deploy Aquatone\nCOPY --from=builder /tmp/aquatone /usr/local/bin/\n\n# Deploy Crobat\nCOPY --from=builder /opt/go/bin/crobat /usr/local/bin/\n\n# Deploy Kiterunner\nCOPY --from=builder /tmp/kr /usr/local/bin/\nCOPY --from=builder /tmp/routes-large.kite /usr/share/kiterunner/\nCOPY --from=builder /tmp/routes-small.kite /usr/share/kiterunner/\n\n# Deploy Slurp\nCOPY --from=builder /tmp/slurp /usr/local/bin/\nCOPY --from=builder /tmp/slurp-1.1.0/permutations.json /usr/share/slurp/\n\n# Deploy Python3 virtual environment\nCOPY --from=builder /opt/kaliintelsuite/.venv /opt/kaliintelsuite/.venv/\n\nRUN ln -sT /opt/kaliintelsuite/kis/kiscollect.py /usr/bin/kiscollect && \\\n    ln -sT /opt/kaliintelsuite/kis/kismanage.py /usr/bin/kismanage && \\\n    ln -sT /opt/kaliintelsuite/kis/kisreport.py /usr/bin/kisreport && \\\n    ln -sT /opt/kaliintelsuite/kis/kiscustom.py /usr/bin/kiscustom\n\n# Deploy SNMP default password wordlist\nCOPY --from=builder /tmp/snmp-default.txt /usr/share/legion/wordlists/\n\n# This is the build stage label for unittests\nFROM final as test\n\n# Deploy KIS including unittests\nCOPY ./ /opt/kaliintelsuite/\n\nENV PYTHONPATH=/opt/kaliintelsuite/:/opt/kaliintelsuite/kis/\n\nRUN [\"bash\"]\n# RUN [\"pytest\", \"--log-file\", \"/kis/unittests.log\"]\n\n\n# This is the build stage label for production\nFROM final as production\n\n# Modify .bashrc to prevent copy&paste issues\nCOPY .bashrc /root/.bashrc\n\n# Deploy KIS\nCOPY ./kis /opt/kaliintelsuite/kis/\n\nWORKDIR /opt/kaliintelsuite/kis\n"
}