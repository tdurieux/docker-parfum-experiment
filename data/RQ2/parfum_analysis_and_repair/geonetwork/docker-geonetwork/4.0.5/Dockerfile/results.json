{
  "startTime": 1674255281803,
  "endTime": 1674255282718,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jetty:9-jre8\n\nENV DATA_DIR /catalogue-data\nENV JAVA_OPTS -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF \\\n        -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true \\\n        -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC \\\n        -Dgeonetwork.resources.dir=${DATA_DIR}/resources \\\n        -Dgeonetwork.data.dir=${DATA_DIR} \\\n        -Dgeonetwork.codeList.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/codelist \\\n        -Dgeonetwork.schema.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins\n\nUSER root\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install curl && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    mkdir -p /${DATA_DIR} && \\\n    chown -R jetty:jetty ${DATA_DIR} && \\\n    mkdir -p /var/lib/jetty/webapps/geonetwork && \\\n    chown -R jetty:jetty /var/lib/jetty/webapps/geonetwork\n\nUSER jetty\nENV GN_FILE GeoNetwork-4.0.5-0.war\nENV GN_VERSION 4.0.5\nENV GN_DOWNLOAD_MD5 7dfcfdffc66b9a97f0d24b0769e9c3b7\nENV LOG4J_VERSION=2.17.1\nENV LOG4J_SHA512=b7e948df6c6f57d903d990de2cc0270c1537b711285e9b6b91280db6ace38418fced713785b2c20512dd9a4238c2d1d0ceb414d9936df2ca110ff14993ae04dc\n\nRUN cd /var/lib/jetty/webapps/geonetwork/ && \\\n     curl -fSL -o geonetwork.war \\\n     https://sourceforge.net/projects/geonetwork/files/GeoNetwork_opensource/v${GN_VERSION}/${GN_FILE}/download && \\\n     echo \"${GN_DOWNLOAD_MD5} *geonetwork.war\" | md5sum -c && \\\n     unzip -q geonetwork.war && \\\n     rm geonetwork.war && \\\n     rm /var/lib/jetty/webapps/geonetwork/WEB-INF/lib/log4j-core-* && \\\n     rm /var/lib/jetty/webapps/geonetwork/WEB-INF/lib/log4j-api* && \\\n     curl -fSL -o apache-log4j-${LOG4J_VERSION}-bin.tar.gz \"https://dlcdn.apache.org/logging/log4j/${LOG4J_VERSION}/apache-log4j-${LOG4J_VERSION}-bin.tar.gz\" && \\\n     echo \"${LOG4J_SHA512} apache-log4j-${LOG4J_VERSION}-bin.tar.gz\" | sha512sum -c && \\\n     tar -xvzf apache-log4j-${LOG4J_VERSION}-bin.tar.gz && \\\n     cp apache-log4j-${LOG4J_VERSION}-bin/log4j-core-${LOG4J_VERSION}.jar /var/lib/jetty/webapps/geonetwork/WEB-INF/lib/ && \\\n     cp apache-log4j-${LOG4J_VERSION}-bin/log4j-api-${LOG4J_VERSION}.jar /var/lib/jetty/webapps/geonetwork/WEB-INF/lib/ && \\\n     rm -rf apache-log4j-${LOG4J_VERSION}-bin* && rm apache-log4j-${LOG4J_VERSION}-bin.tar.gz\n\nCOPY ./docker-entrypoint.sh /geonetwork-entrypoint.sh\nENTRYPOINT [\"/geonetwork-entrypoint.sh\"]\nCMD [\"java\",\"-jar\",\"/usr/local/jetty/start.jar\"]\n\nVOLUME [ \"${DATA_DIR}\" ]\n"
}