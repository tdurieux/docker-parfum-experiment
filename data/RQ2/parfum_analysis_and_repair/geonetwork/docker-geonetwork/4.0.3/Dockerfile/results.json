{
  "startTime": 1674217589101,
  "endTime": 1674217589670,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jetty:9-jre8\n\nENV DATA_DIR /catalogue-data\nENV JAVA_OPTS -Dorg.eclipse.jetty.annotations.AnnotationParser.LEVEL=OFF \\\n        -Djava.security.egd=file:/dev/./urandom -Djava.awt.headless=true \\\n        -Xms512M -Xss512M -Xmx2G -XX:+UseConcMarkSweepGC \\\n        -Dgeonetwork.resources.dir=${DATA_DIR}/resources \\\n        -Dgeonetwork.data.dir=${DATA_DIR} \\\n        -Dgeonetwork.codeList.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/codelist \\\n        -Dgeonetwork.schema.dir=/var/lib/jetty/webapps/geonetwork/WEB-INF/data/config/schema_plugins\n\nUSER root\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install curl && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    mkdir -p /${DATA_DIR} && \\\n    chown -R jetty:jetty ${DATA_DIR} && \\\n    mkdir -p /var/lib/jetty/webapps/geonetwork && \\\n    chown -R jetty:jetty /var/lib/jetty/webapps/geonetwork\n\nUSER jetty\nENV GN_FILE GeoNetwork-4.0.3-0.war\nENV GN_VERSION 4.0.3\nENV GN_DOWNLOAD_MD5 fc74407f77bfcf5b378d54ed0b6ed107\nRUN cd /var/lib/jetty/webapps/geonetwork/ && \\\n     curl -fSL -o geonetwork.war \\\n     https://sourceforge.net/projects/geonetwork/files/GeoNetwork_opensource/v${GN_VERSION}/${GN_FILE}/download && \\\n     echo \"${GN_DOWNLOAD_MD5} *geonetwork.war\" | md5sum -c && \\\n     unzip -q geonetwork.war && \\\n     rm geonetwork.war\n\nCOPY ./docker-entrypoint.sh /geonetwork-entrypoint.sh\nENTRYPOINT [\"/geonetwork-entrypoint.sh\"]\nCMD [\"java\",\"-jar\",\"/usr/local/jetty/start.jar\"]\n\nVOLUME [ \"${DATA_DIR}\" ]\n"
}