{
  "startTime": 1674217156470,
  "endTime": 1674217156940,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# --- Clone the kubeflow/kubeflow code ---\nFROM ubuntu AS fetch-kubeflow-kubeflow\n\nRUN apt-get update && apt-get install --no-install-recommends git -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /kf\nRUN git clone https://github.com/kubeflow/kubeflow.git && \\\n    cd kubeflow && \\\n    git checkout e6fdf51\n\n# --- Build the backend kubeflow-wheel ---\nFROM python:3.7-slim-buster AS backend-kubeflow-wheel\n\nWORKDIR /src\n\nARG BACKEND_LIB=/kf/kubeflow/components/crud-web-apps/common/backend\nCOPY --from=fetch-kubeflow-kubeflow $BACKEND_LIB .\nRUN python setup.py sdist bdist_wheel\n\n# --- Build the frontend kubeflow library ---\nFROM node:10 AS frontend-kubeflow-lib\n\nWORKDIR /src\n\nARG LIB=/kf/kubeflow/components/crud-web-apps/common/frontend/kubeflow-common-lib\nCOPY --from=fetch-kubeflow-kubeflow $LIB/package*.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY --from=fetch-kubeflow-kubeflow $LIB/ ./\nRUN npm run build\n\n# --- Build the frontend ---\nFROM node:12 AS frontend\n\nWORKDIR /src\nCOPY ./frontend/package*.json ./\nRUN npm install && npm cache clean --force;\nCOPY --from=frontend-kubeflow-lib /src/dist/kubeflow/ ./node_modules/kubeflow/\n\nCOPY ./frontend/ .\n\nRUN npm run build -- --output-path=./dist/default --configuration=production\n\n# Web App\nFROM python:3.7-slim-buster\n\nWORKDIR /package\nCOPY --from=backend-kubeflow-wheel /src/dist .\nRUN pip3 install --no-cache-dir *.whl\n\nWORKDIR /src\nCOPY ./backend/requirements.txt .\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY ./backend/apps/ ./apps\nCOPY ./backend/entrypoint.py .\nCOPY ./backend/Makefile .\n\nCOPY --from=frontend /src/dist/default/ /src/apps/v1beta1/static/\n\nENV APP_PREFIX /models\nENV APP_VERSION v1beta1\nENTRYPOINT [\"gunicorn\", \"-w\", \"3\", \"--bind\", \"0.0.0.0:5000\", \"--access-logfile\", \"-\",  \"entrypoint:app\"]\n"
}