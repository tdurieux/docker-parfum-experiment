{
  "startTime": 1674217314847,
  "endTime": 1674217315651,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 8,
        "columnEnd": 19
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# As we were facing troubles building the original image we simply copied the changed files and rebuild\nFROM dna/j1r0q0g6/notebooks/central-dashboard:v1.4\n\nCOPY manage-users-view.pug public/components/manage-users-view.pug\nCOPY api_workgroup.ts app/api_workgroup.ts\n\nRUN npm --production=false install && npm cache clean --force;\n\nRUN npm rebuild && \\\n    if [ \"$(uname -m)\" = \"aarch64\" ]; then \\\n        export CFLAGS=-Wno-error && \\\n        export CXXFLAGS=-Wno-error && \\\n        npm install; npm cache clean --force; \\\n    else \\\n        npm install; npm cache clean --force; \\\n    fi && \\\n    npm run build && \\\n    npm prune --production\n\nEXPOSE 8082\nENTRYPOINT [\"npm\", \"start\"]\n\n"
}