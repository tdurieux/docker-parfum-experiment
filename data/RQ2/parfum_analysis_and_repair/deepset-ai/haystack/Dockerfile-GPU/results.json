{
  "startTime": 1674248402016,
  "endTime": 1674248402742,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.1-runtime-ubuntu20.04\n\nWORKDIR /home/user\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\n# Install software dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository ppa:deadsnakes/ppa && \\\n    apt-get install --no-install-recommends -y \\\n        cmake \\\n        curl \\\n        git \\\n        libpoppler-cpp-dev \\\n        libtesseract-dev \\\n        pkg-config \\\n        poppler-utils \\\n        python3-pip \\\n        python3.7 \\\n        python3.7-dev \\\n        python3.7-distutils \\\n        swig \\\n        tesseract-ocr \\\n        wget && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install PDF converter\nRUN curl -f -s https://dl.xpdfreader.com/xpdf-tools-linux-4.04.tar.gz | tar -xvzf - -C /usr/local/bin --strip-components=2 xpdf-tools-linux-4.04/bin64/pdftotext\n\n# Set default Python version\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 1 && \\\n    update-alternatives --set python3 /usr/bin/python3.7\n\n# Copy Haystack code\nCOPY haystack /home/user/haystack/\n# Copy package files & models\nCOPY setup.py setup.cfg pyproject.toml VERSION.txt LICENSE README.md models* /home/user/\n# Copy REST API code\nCOPY rest_api /home/user/rest_api/\n\n# Install package\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir .[docstores-gpu,crawler,preprocessing,ocr,ray]\nRUN pip install --no-cache-dir rest_api/\n# Install PyTorch for CUDA 11\nRUN pip3 install --no-cache-dir torch==1.10.1+cu111 -f https://download.pytorch.org/whl/torch_stable.html\n\n# Cache Roberta and NLTK data\nRUN python3 -c \"from haystack.utils.docker import cache_models;cache_models()\"\n\n# create folder for /file-upload API endpoint with write permissions, this might be adjusted depending on FILE_UPLOAD_PATH\nRUN mkdir -p /home/user/rest_api/file-upload\nRUN chmod 777 /home/user/rest_api/file-upload\n\n# optional : copy sqlite db if needed for testing\n#COPY qa.db /home/user/\n\n# optional: copy data directory containing docs for ingestion\n#COPY data /home/user/data\n\nEXPOSE 8000\nENV HAYSTACK_DOCKER_CONTAINER=\"HAYSTACK_GPU_CONTAINER\"\n\n# cmd for running the API (note: \"--preload\" is not working with cuda)\nCMD [\"gunicorn\", \"rest_api.application:app\",  \"-b\", \"0.0.0.0\", \"-k\", \"uvicorn.workers.UvicornWorker\", \"--workers\", \"1\", \"--timeout\", \"180\"]\n"
}