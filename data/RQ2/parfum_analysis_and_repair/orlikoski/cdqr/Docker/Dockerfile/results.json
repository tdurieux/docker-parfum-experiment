{
  "startTime": 1674254547021,
  "endTime": 1674254547931,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 32,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official Docker Hub Ubuntu 18.04 base image\nFROM ubuntu:18.04\nMAINTAINER @aorlikoski\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Setup install environment, Plaso, and Timesketch dependencies\nRUN apt-get -qq -y update && \\\n    apt-get -qq -y --no-install-recommends install \\\n      software-properties-common \\\n      apt-transport-https && \\\n    add-apt-repository -u -y ppa:gift/stable && \\\n    apt-get -qq -y update && \\\n    apt-get -qq -y --assume-yes --no-install-recommends install \\\n      python-setuptools \\\n      build-essential \\\n      curl \\\n      git \\\n      gpg-agent \\\n      libffi-dev \\\n      lsb-release \\\n      locales \\\n      python3-dev \\\n      python3-setuptools \\\n      python3 \\\n      python3-pip \\\n      python3-psycopg2 \\\n      python3-wheel && \\\n    curl -f -sS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    VERSION=node_8.x && \\\n    DISTRO=\"$(lsb_release -s -c)\" && \\\n    echo \"deb https://deb.nodesource.com/$VERSION $DISTRO main\" > /etc/apt/sources.list.d/nodesource.list && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list && \\\n    apt-get -qq -y update && \\\n    apt-get -qq -y --no-install-recommends install \\\n      nodejs \\\n      yarn && \\\n    apt-get -y dist-upgrade && \\\n    apt-get -qq -y clean && \\\n    apt-get -qq -y autoclean && \\\n    apt-get -qq -y autoremove && \\\n    rm -rf /var/cache/apt/ /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\n# Download and install Plaso from GitHub Release\nRUN curl -f -sL -o /tmp/plaso-20190916.tar.gz https://github.com/log2timeline/plaso/archive/20190916.tar.gz && \\\n    cd /tmp/ && \\\n    tar zxf plaso-20190916.tar.gz && \\\n    cd plaso-20190916 && \\\n    pip3 install --no-cache-dir -r requirements.txt && \\\n    pip3 install --no-cache-dir mock && \\\n    python3 setup.py build && \\\n    python3 setup.py install && \\\n    rm -rf /tmp/* && rm plaso-20190916.tar.gz\n\n# Build and Install Timesketch from GitHub Master with Pip\nRUN git clone https://github.com/google/timesketch.git /tmp/timesketch && \\\n    cd /tmp/timesketch && \\\n    git checkout aded1b19acca44b99854083088ef920390f75457 && \\\n    cd /tmp/timesketch && ls && yarn install && \\\n    yarn run build  && \\\n    sed -i -e '/pyyaml/d' /tmp/timesketch/requirements.txt && \\\n    pip3 install --no-cache-dir /tmp/timesketch/ && \\\n    rm -rf /tmp/* && yarn cache clean;\n\n# Set terminal to UTF-8 by default\nRUN locale-gen en_US.UTF-8 && \\\n    update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8\n\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# Download and install CDQR\nRUN curl -f -s -o /usr/local/bin/cdqr.py \\\n    https://raw.githubusercontent.com/orlikoski/CDQR/master/src/cdqr.py && \\\n    chmod 755 /usr/local/bin/cdqr.py\n\n# Load the entrypoint script to be run later\nENTRYPOINT [\"/usr/local/bin/cdqr.py\"]\n"
}