{
  "startTime": 1674254836980,
  "endTime": 1674254838978,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 119
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux2014_x86_64 AS base\n\n###############\n# Build tools #\n###############\n\nFROM base AS build-tools\n\n# pkg-config\nRUN set -ex \\\n    && mkdir -p /build-tools && cd /build-tools \\\n    && PKG_CONFIG_VERSION=\"0.29.2\" \\\n    && curl -fLO https://pkg-config.freedesktop.org/releases/pkg-config-${PKG_CONFIG_VERSION}.tar.gz \\\n    && tar xvf pkg-config-${PKG_CONFIG_VERSION}.tar.gz \\\n    && cd pkg-config-${PKG_CONFIG_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j4 \\\n    && make install \\\n    && pkg-config --version \\\n    && rm -rf /build-tools && rm pkg-config-${PKG_CONFIG_VERSION}.tar.gz\n\n# nasm\nRUN set -ex \\\n    && mkdir -p /build-tools && cd /build-tools \\\n    && NASM_VERSION=\"2.15.02\" \\\n    && curl -fLO https://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.gz \\\n    && tar xvf nasm-${NASM_VERSION}.tar.gz \\\n    && cd nasm-${NASM_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j4 \\\n    && make install \\\n    && nasm --version \\\n    && rm -rf /build-tools && rm nasm-${NASM_VERSION}.tar.gz\n\n################\n# Dependencies #\n################\n\nFROM build-tools AS build-deps\n\n# x265\nRUN set -ex \\\n    && mkdir -p /build-deps && cd /build-deps \\\n    && X265_VERSION=\"3.5\" \\\n    && curl -fLO https://bitbucket.org/multicoreware/x265_git/downloads/x265_${X265_VERSION}.tar.gz \\\n    && tar xvf x265_${X265_VERSION}.tar.gz \\\n    && cd x265_${X265_VERSION} \\\n    && cmake -DCMAKE_INSTALL_PREFIX=/usr -G \"Unix Makefiles\" ./source \\\n    && make -j4 \\\n    && make install \\\n    && ldconfig \\\n    && rm -rf /build-deps && rm x265_${X265_VERSION}.tar.gz\n\n# libde265\nRUN set -ex \\\n    && mkdir -p /build-deps && cd /build-deps \\\n    && LIBDE265_VERSION=\"1.0.8\" \\\n    && curl -fLO https://github.com/strukturag/libde265/releases/download/v${LIBDE265_VERSION}/libde265-${LIBDE265_VERSION}.tar.gz \\\n    && tar xvf libde265-${LIBDE265_VERSION}.tar.gz \\\n    && cd libde265-${LIBDE265_VERSION} \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /usr --disable-encoder --disable-dec265 --disable-sherlock265 --disable-dependency-tracking \\\n    && make -j4 \\\n    && make install \\\n    && ldconfig \\\n    && rm -rf /build-deps && rm libde265-${LIBDE265_VERSION}.tar.gz\n\n# libaom\nRUN set -ex \\\n    && mkdir -p /build-deps && cd /build-deps \\\n    && LIBAOM_VERSION=\"v3.2.0\" \\\n    && mkdir -v aom && mkdir -v aom_build && cd aom \\\n    && curl -fLO \"https://aomedia.googlesource.com/aom/+archive/${LIBAOM_VERSION}.tar.gz\" \\\n    && tar xvf ${LIBAOM_VERSION}.tar.gz \\\n    && cd ../aom_build \\\n    && MINIMAL_INSTALL=\"-DENABLE_TESTS=0 -DENABLE_TOOLS=0 -DENABLE_EXAMPLES=0 -DENABLE_DOCS=0\" \\\n    && cmake $MINIMAL_INSTALL -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib -DBUILD_SHARED_LIBS=1 ../aom \\\n    && make -j4 \\\n    && make install \\\n    && ldconfig \\\n    && rm -rf /build-deps && rm ${LIBAOM_VERSION}.tar.gz\n\n# libheif\nRUN set -ex \\\n    && mkdir -p /build-deps && cd /build-deps \\\n    && LIBHEIF_VERSION=\"1.12.0\" \\\n    && curl -fLO https://github.com/strukturag/libheif/releases/download/v${LIBHEIF_VERSION}/libheif-${LIBHEIF_VERSION}.tar.gz \\\n    && tar xvf libheif-${LIBHEIF_VERSION}.tar.gz \\\n    && cd libheif-${LIBHEIF_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /usr --disable-examples \\\n    && make -j4 \\\n    && make install \\\n    && ldconfig \\\n    && rm -rf /build-deps && rm libheif-${LIBHEIF_VERSION}.tar.gz\n\n##########################\n# Build manylinux wheels #\n##########################\n\nFROM build-deps AS repaired\n\nCOPY ./ /pyheif\n\n# python 3.6\nRUN set -ex \\\n    && cd \"/opt/python/cp36-cp36m/bin/\" \\\n    && ./pip wheel /pyheif \\\n    && auditwheel repair pyheif*.whl --plat manylinux2014_x86_64 -w /wheelhouse\n# python 3.7\nRUN set -ex \\\n    && cd \"/opt/python/cp37-cp37m/bin/\" \\\n    && ./pip wheel /pyheif \\\n    && auditwheel repair pyheif*.whl --plat manylinux2014_x86_64 -w /wheelhouse\n# python 3.8\nRUN set -ex \\\n    && cd \"/opt/python/cp38-cp38/bin/\" \\\n    && ./pip wheel /pyheif \\\n    && auditwheel repair pyheif*.whl --plat manylinux2014_x86_64 -w /wheelhouse\n# python 3.9\nRUN set -ex \\\n    && cd \"/opt/python/cp39-cp39/bin/\" \\\n    && ./pip wheel /pyheif \\\n    && auditwheel repair pyheif*.whl --plat manylinux2014_x86_64 -w /wheelhouse\n# python 3.10\nRUN set -ex \\\n    && cd \"/opt/python/cp310-cp310/bin/\" \\\n    && ./pip wheel /pyheif \\\n    && auditwheel repair pyheif*.whl --plat manylinux2014_x86_64 -w /wheelhouse\n# pypy 3.7\nRUN set -ex \\\n    && cd \"/opt/python/pp37-pypy37_pp73/bin/\" \\\n    && ./pip wheel /pyheif \\\n    && auditwheel repair pyheif*.whl --plat manylinux2014_x86_64 -w /wheelhouse\n# pypy 3.8\nRUN set -ex \\\n    && cd \"/opt/python/pp38-pypy38_pp73/bin/\" \\\n    && ./pip wheel /pyheif \\\n    && auditwheel repair pyheif*.whl --plat manylinux2014_x86_64 -w /wheelhouse\n\n\n###############\n# Test wheels #\n###############\n\nFROM base AS tested\n\nCOPY ./requirements-test.txt /tmp/requirements-test.txt\n\nRUN /opt/python/cp36-cp36m/bin/pip install -r /tmp/requirements-test.txt\nRUN /opt/python/cp37-cp37m/bin/pip install -r /tmp/requirements-test.txt\nRUN /opt/python/cp38-cp38/bin/pip install -r /tmp/requirements-test.txt\nRUN /opt/python/cp39-cp39/bin/pip install -r /tmp/requirements-test.txt\nRUN /opt/python/cp310-cp310/bin/pip install -r /tmp/requirements-test.txt\nRUN /opt/python/pp37-pypy37_pp73/bin/pip install -r /tmp/requirements-test.txt\n# RUN /opt/python/pp38-pypy38_pp73/bin/pip install -r /tmp/requirements-test.txt\n\nCOPY --from=repaired /wheelhouse /wheelhouse\nCOPY ./ /pyheif\nWORKDIR /pyheif\n\n# python 3.6\nRUN set -ex \\\n    && PNV=\"/opt/python/cp36-cp36m/bin\" \\\n    && $PNV/pip install /wheelhouse/*-cp36-cp36m-*.whl \\\n    && $PNV/pytest\n# python 3.7\nRUN set -ex \\\n    && PNV=\"/opt/python/cp37-cp37m/bin\" \\\n    && $PNV/pip install /wheelhouse/*-cp37-cp37m-*.whl \\\n    && $PNV/pytest\n# python 3.8\nRUN set -ex \\\n    && PNV=\"/opt/python/cp38-cp38/bin\" \\\n    && $PNV/pip install /wheelhouse/*-cp38-cp38-*.whl \\\n    && $PNV/pytest\n# python 3.9\nRUN set -ex \\\n    && PNV=\"/opt/python/cp39-cp39/bin\" \\\n    && $PNV/pip install /wheelhouse/*-cp39-cp39-*.whl \\\n    && $PNV/pytest\n# python 3.10\nRUN set -ex \\\n    && PNV=\"/opt/python/cp310-cp310/bin\" \\\n    && $PNV/pip install /wheelhouse/*-cp310-cp310-*.whl \\\n    && $PNV/pytest\n# pypy 3.7\nRUN set -ex \\\n    && PNV=\"/opt/python/pp37-pypy37_pp73/bin/\" \\\n    && $PNV/pip install /wheelhouse/*-pp37-pypy37_pp73-*.whl \\\n    && $PNV/pytest\n# No Pillow wheels for pypy 3.8\n# # pypy 3.8\n# RUN set -ex \\\n#     && PNV=\"/opt/python/pp38-pypy38_pp73/bin/\" \\\n#     && $PNV/pip install /wheelhouse/*-pp38-pypy38_pp73-*.whl \\\n#     && $PNV/pytest\n\n#################\n# Upload wheels #\n#################\n\nFROM tested AS uploaded\n\nARG PYPI_USERNAME\nARG PYPI_PASSWORD\nRUN set -ex \\\n    && cd \"/opt/python/cp38-cp38/bin/\" \\\n    && ./pip install twine \\\n    && ./twine upload /wheelhouse/*manylinux2014*.whl -u ${PYPI_USERNAME} -p ${PYPI_PASSWORD} \\\n"
}