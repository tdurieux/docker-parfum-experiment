diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/llvm/llvm-zorg/buildbot/google/docker/buildbot-mlir-nvidia/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/llvm/llvm-zorg/buildbot/google/docker/buildbot-mlir-nvidia/Dockerfile/repaired.Dockerfile
index f52d6c8..4b376e8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/llvm/llvm-zorg/buildbot/google/docker/buildbot-mlir-nvidia/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/llvm/llvm-zorg/buildbot/google/docker/buildbot-mlir-nvidia/Dockerfile/repaired.Dockerfile
@@ -16,14 +16,14 @@ FROM nvidia/cuda:10.2-base-ubuntu18.04
 
 # install build tools
 RUN apt-get update; \
-    apt-get install -y software-properties-common apt-transport-https ca-certificates \
+    apt-get install --no-install-recommends -y software-properties-common apt-transport-https ca-certificates \
     clang-8 lld-8 ninja-build git wget gnupg ccache \
     python3 python3-pip python3-psutil \
     # dumb-init recommended in
     # https://hub.docker.com/r/buildbot/buildbot-worker/dockerfile
-    dumb-init;\
-    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 100 ;\
-    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 100 ;\
+    dumb-init; rm -rf /var/lib/apt/lists/*; \
+    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 100 ; \
+    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-8 100 ; \
     update-alternatives --install /usr/bin/lld lld /usr/bin/lld-8 100
 
 # LTS releases often bundle obsolete pip versions that cannot access newest
@@ -38,28 +38,28 @@ RUN python3 -m pip install numpy==1.19.3 pybind11==2.8.0 PyYAML==5.4.1
 
 # install cuda
 # avoid popups for keyboard configurations
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y cuda
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y cuda && rm -rf /var/lib/apt/lists/*;
 
 # Ubuntu ships with old cmake version, install the latest one
 # from https://apt.kitware.com/
 RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | \
-       gpg --dearmor - | \
-       tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null ;\
-    apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' ;\
-    apt-get update ;\
-    apt-get install -y cmake
+       gpg --batch --dearmor - | \
+       tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null; \
+    apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' ; \
+    apt-get update ; \
+    apt-get install --no-install-recommends -y cmake && rm -rf /var/lib/apt/lists/*;
 
 # Get the Vulkan SDK from LunarG. The CUDA meta package already pulls in NVIDIA
 # Vulkan ICD.
-RUN wget -qO - http://packages.lunarg.com/lunarg-signing-key-pub.asc 2>/dev/null | \
-       apt-key add - ;\
+RUN wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc 2>/dev/null | \
+       apt-key add -; \
     wget -qO /etc/apt/sources.list.d/lunarg-vulkan-1.2.141-bionic.list \
-       http://packages.lunarg.com/vulkan/1.2.141/lunarg-vulkan-1.2.141-bionic.list;\
-    apt-get update ;\
-    apt-get install -y vulkan-sdk
+       https://packages.lunarg.com/vulkan/1.2.141/lunarg-vulkan-1.2.141-bionic.list; \
+    apt-get update ; \
+    apt-get install --no-install-recommends -y vulkan-sdk && rm -rf /var/lib/apt/lists/*;
 
 # Install build bot (server was at 2.8.5-dev at time of writing).
-RUN pip3 install buildbot-worker==2.8.4
+RUN pip3 install --no-cache-dir buildbot-worker==2.8.4
 
 # Workaround permissions issues when writing to named volumes
 # https://github.com/docker/compose/issues/3270#issuecomment-206214034