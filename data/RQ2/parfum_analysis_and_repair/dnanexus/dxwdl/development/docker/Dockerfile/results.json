{
  "startTime": 1674254476315,
  "endTime": 1674254477820,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nSHELL [\"/bin/bash\", \"-c\"]\nENV DEBIAN_FRONTEND noninteractive\nENTRYPOINT [\"/bin/bash\"]\n\n# Install dx-toolkit\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y autoconf apt-utils make curl \\\n          tzdata git \\\n          emacs-nox vim tree wget ispell lsof sudo \\\n          htop bc apt-transport-https lsb-release \\\n          libffi-dev python3 python3-pip python3-venv \\\n          libcurl4-openssl-dev zlib1g-dev \\\n          openssl libssl-dev openjdk-8-jdk-headless \\\n          fuse jq squid zip && rm -rf /var/lib/apt/lists/*;\n\n# Get docker, so that Cromwell could run it\nRUN curl -f -sSL https://get.docker.com/ | sh\n\n# Get dependencies for running Go\nRUN apt-get update && apt-get install --no-install-recommends -y wget git build-essential && \\\n    wget https://dl.google.com/go/go1.14.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go1.14.linux-amd64.tar.gz && rm go1.14.linux-amd64.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n# Set environment variables for Go\nENV PATH=\"/usr/local/go/bin:${PATH}\"\nENV GOPATH=\"/go\"\n\n# Install scala\nRUN wget www.scala-lang.org/files/archive/scala-2.12.9.deb && \\\n    dpkg -i scala-2.12.9.deb && \\\n    rm -f scala-2.12.9.deb\n\n# Install sbt\nRUN echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y sbt && rm -rf /var/lib/apt/lists/*;\n\n# Set the language encoding to utf8\nRUN apt-get install --no-install-recommends -y locales && \\\n    locale-gen \"en_US.UTF-8\" && rm -rf /var/lib/apt/lists/*;\n\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\nENV LC_CTYPE=en_US.UTF-8\n\n# Set python3 as default python implementation\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n\n# Setup time services\nRUN ln -sf /usr/share/zoneinfo/America/Los_Angeles /etc/localtime\n\n# Setup go directory\nRUN mkdir -p /go && \\\n    chmod 755 /go\n\nRUN pip3 install --no-cache-dir termcolor dxpy\n\n# Install Go packages\nRUN go get github.com/google/subcommands && \\\n    go get golang.org/x/sync/semaphore && \\\n    go install github.com/google/subcommands && \\\n    go get github.com/dnanexus/dxda && \\\n    go install github.com/dnanexus/dxda && \\\n    go install github.com/dnanexus/dxda/cmd/dx-download-agent && \\\n    go get -u github.com/jacobsa/fuse\n\n# Obtain fresh repositories\nRUN mkdir -p devel && cd devel && \\\n    git clone https://github.com/dnanexus/dx-toolkit.git && \\\n    git clone https://github.com/dnanexus/dxfuse.git && \\\n    git clone https://github.com/broadinstitute/cromwell.git && \\\n    wget https://github.com/broadinstitute/cromwell/releases/download/49/cromwell-49.jar && \\\n    wget https://github.com/broadinstitute/cromwell/releases/download/49/womtool-49.jar\n\n# move the dxfuse source code to the golang directory\n# build the executable\nRUN mv /devel/dxfuse /go/src/github.com/dnanexus && \\\n    go build -o /go/bin/dxfuse /go/src/github.com/dnanexus/dxfuse/cli/main.go\n\n# Clone and make dxWDL\nRUN git clone https://github.com/dnanexus/dxWDL.git\nRUN cd /dxWDL && sbt assembly\n"
}