{
  "startTime": 1674250786723,
  "endTime": 1674250787637,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 42,
        "columnEnd": 56
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 46,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "###\n### W3a docker file\n### docker build --network=host -f w3a.Dockerfile -t w3a .\n### docker run -it -p 7000:7000 -p 9000:9000 --env DOCKER_IP=xxx.xxx.xxx.xxx w3a\n###\n\nFROM ubuntu:18.04\n\nARG DEBIAN_FRONTEND='noninteractive'\n\nADD dockerfile.d/01_apt.sh /root\nRUN bash /root/01_apt.sh\n\nADD dockerfile.d/02_llvm.sh /root\nRUN bash /root/02_llvm.sh\n\nADD ./dockerfile.d/03_sdk.sh /root\nRUN bash /root/03_sdk.sh\n\nARG RUST_TOOLCHAIN='nightly-2020-07-03'\nADD ./dockerfile.d/05_rust.sh /root\nRUN bash /root/05_rust.sh\n\nWORKDIR /root\n\n# ====== build TEE ======\n\nRUN mkdir phala-blockchain\nADD . phala-blockchain\n\nRUN mkdir prebuilt\n\nRUN cd phala-blockchain/pruntime && \\\n    PATH=\"$PATH:$HOME/.cargo/bin\" SGX_SDK=\"/opt/sgxsdk\" SGX_MODE=SW make && \\\n    cp ./bin/app /root/prebuilt && \\\n    cp ./bin/enclave.signed.so /root/prebuilt && \\\n    cp ./bin/Rocket.toml /root/prebuilt && \\\n    PATH=\"$PATH:$HOME/.cargo/bin\" make clean && \\\n    rm -rf /root/.cargo/registry && \\\n    rm -rf /root/.cargo/git\n\n# ====== clean up ======\n\nRUN rm -rf phala-blockchain\nADD dockerfile.d/cleanup.sh .\nRUN bash cleanup.sh\n\n# ===== build gateway =====\n\nWORKDIR /root\nRUN curl -f -sSL https://rvm.io/mpapis.asc | gpg --batch --import -\nRUN curl -f -sSL https://rvm.io/pkuczynski.asc | gpg --batch --import -\nRUN curl -f -sSL https://get.rvm.io | bash -s stable\n\nENV PATH /usr/local/rvm/gems/ruby-2.6.5/bin:/usr/local/rvm/rubies/ruby-2.6.5@global/bin:/usr/local/rvm/rubies/ruby-2.6.5/bin:/usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nRUN echo \"export rvm_max_time_flag=20\" >> .rvmrc\nRUN rvm requirements\nRUN rvm install 2.6.5\nENV GEM_HOME /usr/local/rvm/gems/ruby-2.6.5\nENV GEM_PATH /usr/local/rvm/gems/ruby-2.6.5:/usr/local/rvm/gems/ruby-2.6.5@global\nRUN gem install bundler rails pry\nRUN apt install --no-install-recommends -y libsecp256k1-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/Phala-Network/w3a-gateway.git\nWORKDIR /root/w3a-gateway\nRUN bundle install\nRUN cp config/credentials.yml.example config/credentials.yml\nRUN cp config/database.yml.sqlite3 config/database.yml\nRUN rails db:migrate\nRUN rails db:seed\n\n# ===== build backend =====\n\nWORKDIR /root\nRUN apt update\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | sudo -E bash -\nRUN apt install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/Phala-Network/w3a-backend.git\n\nWORKDIR /root/w3a-backend\nRUN npm install && npm cache clean --force;\nRUN node main.js init\n\nWORKDIR /root/w3a-backend/web_server\nRUN npm install && npm cache clean --force;\n\nWORKDIR /root\nRUN cp w3a-backend/dockerfile.script/*.sh .\nRUN chmod 700 *.sh\nCMD bash ./w3a_start.sh\n\nEXPOSE 7000\nEXPOSE 9000\n"
}