{
  "startTime": 1674253275397,
  "endTime": 1674253276579,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 16,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND noninteractive\nENV PYTHONUNBUFFERED True\n\nWORKDIR /work\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y automake bash black build-essential curl git jq libffi-dev libgmp-dev libtool mypy nodejs npm \\\n\tpandoc pkg-config python3-boto python3-dev python3-pip libsnappy-dev node-gyp && rm -rf /var/lib/apt/lists/*;\n\nENV PYTHONPATH \"/usr/lib/python3.8/:/usr/local/lib/python3.8/dist-packages/:/work:/work/banhammer:/work/hmt-servers\"\n\nRUN pip3 install --no-cache-dir git+https://chromium.googlesource.com/external/gyp\n\nCOPY package.json package-lock.json /work/\nRUN cd /work && npm install && npm cache clean --force;\nENV PATH=\"/work/node_modules/.bin/:${PATH}\"\n\n# Pin to specific version that's guaranteed to work\nRUN pip3 install --no-cache-dir pipenv\nCOPY Pipfile Pipfile.lock /work/\nRUN pipenv install --system --deploy --pre\n\nENV SOLC_VERSION=\"v0.6.2\"\nRUN python3 -m solcx.install ${SOLC_VERSION}\nENV SOLC_BINARY=\"/root/.py-solc-x/solc-${SOLC_VERSION}/bin/solc\"\n\n# Necessary files for smart contract compilation, migration and testing\nCOPY . /work/\n"
}