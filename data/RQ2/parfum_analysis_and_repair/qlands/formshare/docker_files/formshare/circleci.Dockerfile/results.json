{
  "startTime": 1674255803226,
  "endTime": 1674255805104,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 9,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 9,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 186,
        "lineEnd": 186,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 316
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 316
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 316
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 196,
        "lineEnd": 196,
        "columnStart": 7,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 340
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:21.10\n\nMAINTAINER QLands Technology Consultants\nRUN apt-get update && apt-get -y upgrade\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository universe && add-apt-repository multiverse\nRUN apt-add-repository -y ppa:mosquitto-dev/mosquitto-ppa\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nRUN wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | apt-key add -\nRUN add-apt-repository 'deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse'\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y build-essential qtbase5-dev qtbase5-private-dev qtdeclarative5-dev libqt5sql5-mysql cmake jq libboost-all-dev unzip zlib1g-dev automake npm redis-server libmysqlclient-dev mysql-client-8.0 openjdk-18-jdk sqlite3 libqt5sql5-sqlite git python3-venv tidy golang-go mosquitto curl nano mongodb-org && rm -rf /var/lib/apt/lists/*;\nRUN wget https://dev.mysql.com/get/mysql-apt-config_0.8.22-1_all.deb\nRUN dpkg -i ./mysql-apt-config_0.8.22-1_all.deb\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends mysql-shell && rm -rf /var/lib/apt/lists/*;\n\n# ---------------From Circle CI\n# make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n  && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Debian Jessie is EOL'd and original repos don't work.\n# Switch to the archive mirror until we can get people to\n# switch to Stretch.\n\n#RUN if grep -q Debian /etc/os-release && grep -q jessie /etc/os-release; then \\\n#\trm /etc/apt/sources.list \\\n#    && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n#    && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list \\\n#\t; fi\n\n# Make sure PATH includes ~/.local/bin\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\n# This only works for root. The circleci user is done near the end of this Dockerfile\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n\n# man directory is missing in some base images\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n  && mkdir -p /usr/share/man/man1 \\\n  && apt-get install --no-install-recommends -y \\\n    git mercurial xvfb apt \\\n    locales sudo openssh-client ca-certificates tar gzip parallel \\\n    net-tools netcat unzip zip bzip2 gnupg curl wget make && rm -rf /var/lib/apt/lists/*;\n\n\n# Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=C.UTF-8\n\n# install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n  && chmod +x /usr/bin/jq \\\n  && jq --version\n\n# Install Docker\n\n# Docker.com returns the URL of the latest binary when you hit a directory listing\n# We curl this URL and `grep` the version out.\n# The output looks like this:\n\n#>    # To install, run the following commands as root:\n#>    curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-17.05.0-ce.tgz && tar --strip-components=1 -xvzf docker-17.05.0-ce.tgz -C /usr/local/bin\n#>\n#>    # Then start docker in daemon mode:\n#>    /usr/local/bin/dockerd\n\nRUN set -ex \\\n  && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1) \\\n  && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n  && echo Docker URL: $DOCKER_URL \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n  && ls -lha /tmp/docker.tgz \\\n  && tar -xz -C /tmp -f /tmp/docker.tgz \\\n  && mv /tmp/docker/* /usr/bin \\\n  && rm -rf /tmp/docker /tmp/docker.tgz \\\n  && which docker \\\n  && (docker version || true)\n\n# docker compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n  && chmod +x /usr/bin/docker-compose \\\n  && docker-compose version\n\n# install dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n  && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n  && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n  && dockerize --version\n\nRUN groupadd --gid 3434 circleci \\\n  && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n  && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n  && echo 'Defaults    env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n\n# BEGIN IMAGE CUSTOMIZATIONS\n\n# Install pipenv and poetry\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py\nRUN python3 get-pip.py\nRUN sudo pip install --no-cache-dir --no-cache pipenv poetry\nRUN sudo pip uninstall --yes setuptools\nRUN sudo pip install --no-cache-dir setuptools==57.5.0\n# END IMAGE CUSTOMIZATIONS\n# -------------------------------\n\nRUN npm install -g diff2html && npm cache clean --force;\nRUN npm install -g diff2html-cli && npm cache clean --force;\n\nCOPY ./docker_files/timezone/mysql_tzinfo_to_sql /usr/bin\nCOPY ./docker_files/mosquitto/mosquitto.conf /etc/mosquitto/conf.d/\nCOPY ./docker_files/mosquitto/websocket.conf /etc/mosquitto/conf.d/\nCOPY ./docker_files/mosquitto/access.acl /etc/mosquitto/conf.d/\nCOPY ./docker_files/mosquitto/users.mqt /etc/mosquitto/conf.d/\n\nRUN wget https://github.com/BurntSushi/xsv/releases/download/0.13.0/xsv-0.13.0-x86_64-unknown-linux-musl.tar.gz\nRUN tar xvfz xsv-0.13.0-x86_64-unknown-linux-musl.tar.gz && rm xsv-0.13.0-x86_64-unknown-linux-musl.tar.gz\nRUN cp xsv /bin\n\nRUN git clone https://github.com/qlands/csv2xlsx.git\nWORKDIR csv2xlsx\nRUN go build\nRUN cp csv2xlsx /bin\n\nWORKDIR /opt\nRUN mkdir odktools-deps\nRUN git clone https://github.com/qlands/odktools.git\n\nWORKDIR /opt/odktools-deps\nRUN wget https://github.com/mongodb/mongo-c-driver/releases/download/1.21.1/mongo-c-driver-1.21.1.tar.gz\nRUN wget https://github.com/mongodb/mongo-cxx-driver/releases/download/r3.6.7/mongo-cxx-driver-r3.6.7.tar.gz\nRUN wget https://github.com/jmcnamara/libxlsxwriter/archive/refs/tags/RELEASE_1.1.4.tar.gz\nRUN wget https://github.com/stachenov/quazip/archive/refs/tags/v1.3.tar.gz\nRUN git clone https://github.com/rgamble/libcsv.git\n\nRUN tar xvfz mongo-c-driver-1.21.1.tar.gz && rm mongo-c-driver-1.21.1.tar.gz\nWORKDIR /opt/odktools-deps/mongo-c-driver-1.21.1\nRUN mkdir build_here\nWORKDIR /opt/odktools-deps/mongo-c-driver-1.21.1/build_here\nRUN cmake ..\nRUN make\nRUN make install\nWORKDIR /opt/odktools-deps\n\nRUN tar xvfz mongo-cxx-driver-r3.6.7.tar.gz && rm mongo-cxx-driver-r3.6.7.tar.gz\nWORKDIR /opt/odktools-deps/mongo-cxx-driver-r3.6.7\nRUN mkdir build_here\nWORKDIR /opt/odktools-deps/mongo-cxx-driver-r3.6.7/build_here\nRUN cmake -DCMAKE_C_FLAGS:STRING=\"-O2 -fPIC\" -DCMAKE_CXX_FLAGS:STRING=\"-O2 -fPIC\" -DBSONCXX_POLY_USE_BOOST=1 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local ..\nRUN make\nRUN make install\nWORKDIR /opt/odktools-deps\n\nRUN tar xvfz v1.3.tar.gz && rm v1.3.tar.gz\nWORKDIR /opt/odktools-deps/quazip-1.3\nRUN mkdir build\nWORKDIR /opt/odktools-deps/quazip-1.3/build\nRUN cmake -DCMAKE_C_FLAGS:STRING=\"-fPIC\" -DCMAKE_CXX_FLAGS:STRING=\"-fPIC\" ..\nRUN make\nRUN make install\nWORKDIR /opt/odktools-deps\n\nRUN ln -s /usr/bin/aclocal-1.16 /usr/bin/aclocal-1.14\nRUN ln -s /usr/bin/automake-1.16 /usr/bin/automake-1.14\n\nRUN tar xvfz RELEASE_1.1.4.tar.gz && rm RELEASE_1.1.4.tar.gz\nWORKDIR /opt/odktools-deps/libxlsxwriter-RELEASE_1.1.4\nRUN mkdir build\nWORKDIR /opt/odktools-deps/libxlsxwriter-RELEASE_1.1.4/build\nRUN cmake ..\nRUN make\nRUN make install\nWORKDIR /opt/odktools-deps\n\nWORKDIR /opt/odktools-deps/libcsv\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\nWORKDIR /opt/odktools\n\nRUN qmake\nRUN make\n\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y locales \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nWORKDIR /opt\nRUN mkdir formshare_repository\nRUN mkdir formshare_log\nRUN mkdir formshare_celery\nRUN mkdir formshare_gunicorn\nRUN mkdir formshare_config\nRUN mkdir formshare_plugins\nCOPY ./docker_files/testing_plugin_directories.zip /opt/formshare_plugins\nWORKDIR /opt/formshare_plugins\nRUN unzip ./testing_plugin_directories.zip\n\nRUN chown -R circleci /opt/formshare_repository\nRUN chown -R circleci /opt/formshare_log\nRUN chown -R circleci /opt/formshare_celery\nRUN chown -R circleci /opt/formshare_gunicorn\nRUN chown -R circleci /opt/formshare_config\nRUN ldconfig\nUSER circleci\nENV PATH /home/circleci/.local/bin:/home/circleci/bin:${PATH}\n\nCMD [\"/bin/bash\"]"
}