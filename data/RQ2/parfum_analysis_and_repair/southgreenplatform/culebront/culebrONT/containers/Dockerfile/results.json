{
  "startTime": 1674217052887,
  "endTime": 1674217054963,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 322
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 322
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 322
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 346
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "#INFORMATION\n#MAINTAINER Julie Orjuela & Francois Sabot (Docker)\n#version=\"1.0\"\n#software=\"all Culebront dependencies\"\n#description=\"All dependencies used to launch CulebrONT in LOCAL mode\"\n#website=\"https://culebront-pipeline.readthedocs.io/en/latest/\"\n\nFROM ubuntu:bionic\nUSER root\n\n# ENVIRONMENT\nENV CULEBRONT=\"/usr/local/CulebrONT_pipeline\"\nENV PATH=\"/usr/local/miniconda/miniconda3/bin:$PATH\"\nENV PATH=\"/usr/local/miniconda/miniconda3/envs/snakemake/bin:$PATH\"\n\n# INSTALL, Global\nRUN apt update\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends -y install keyboard-configuration git vim curl wget less locate openssh-server python3-all-dev python3-pip python3-venv graphviz build-essential libssl-dev uuid-dev libgpgme11-dev squashfs-tools libseccomp-dev pkg-config rsync gzip libcairo2-dev libxt-dev zlib1g-dev cmake cryptsetup && rm -rf /var/lib/apt/lists/*;\nRUN ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime\nRUN apt install --no-install-recommends -y tzdata && rm -rf /var/lib/apt/lists/*;\nRUN dpkg-reconfigure --frontend noninteractive tzdata\n\n# INSTALL, R for reporting\nRUN apt install --no-install-recommends -y r-recommended r-doc-html util-linux zip && rm -rf /var/lib/apt/lists/*;\n\n# Install for Python\nRUN echo 'export LC_ALL=C.UTF-8' >> /environment\nRUN echo 'export LANG=C.UTF-8' >> /environment\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nRUN python3 -m pip install PyYAML\nRUN python3 -m pip install pandas\nRUN python3 -m pip install seaborn\nRUN python3 -m pip install matplotlib\nRUN python3 -m pip install tabulate\nRUN python3 -m pip install rpy2\nRUN python3 -m pip install ipython\nRUN python3 -m pip install biopython\nRUN python3 -m pip install tqdm\nRUN python3 -m pip install pyyaml\nRUN python3 -m pip install pysam\nRUN python3 -m pip install docopt==0.6.2\nRUN python3 -m pip install numpy\nRUN python3 -m pip install argparse\n\n# INSTALL miniconda & conda dependencies\nRUN mkdir /usr/local/miniconda && cd /usr/local/miniconda\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN chmod +x Miniconda3-latest-Linux-x86_64.sh\nRUN ./Miniconda3-latest-Linux-x86_64.sh -b -p /usr/local/miniconda/miniconda3\nRUN cd /usr/local/miniconda/miniconda3/bin\nENV PATH=\"/usr/local/miniconda/miniconda3/bin:$PATH\"\nRUN echo $PATH\n\nRUN /usr/local/miniconda/miniconda3/bin/conda config --add channels defaults\nRUN /usr/local/miniconda/miniconda3/bin/conda config --add channels bioconda\nRUN /usr/local/miniconda/miniconda3/bin/conda config --add channels conda-forge\n\nRUN /usr/local/miniconda/miniconda3/bin/conda create -n snakemake\nRUN /usr/local/miniconda/miniconda3/bin/conda install mamba\nRUN /usr/local/miniconda/miniconda3/bin/mamba install snakemake\n\n# installing Singularity\nRUN wget https://dl.google.com/go/go1.16.4.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzvf go1.16.4.linux-amd64.tar.gz && rm go1.16.4.linux-amd64.tar.gz\nRUN rm go1.16.4.linux-amd64.tar.gz\nENV PATH=/usr/local/go/bin:$PATH\n\n## Install Singularity itself\nRUN wget https://github.com/sylabs/singularity/releases/download/v3.8.1/singularity-ce-3.8.1.tar.gz\nRUN tar -xzf singularity-ce-3.8.1.tar.gz && rm singularity-ce-3.8.1.tar.gz\nENV PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig/\nRUN cd /singularity-ce-3.8.1 && ./mconfig -p /usr/local && make -C builddir && make -C builddir install\n\n# Clone CulebrONT ... yeah!\nRUN mkdir -p /usr/local\nRUN git clone  --recursive https://github.com/SouthGreenPlatform/CulebrONT_pipeline.git /usr/local/CulebrONT_pipeline\nRUN cd /usr/local/CulebrONT_pipeline/\n\n# Download build singularity\nRUN cd /usr/local/CulebrONT_pipeline/Containers && wget --no-check-certificate -rm -nH --cut-dirs=2 --reject=\"index.html*\" --no-parent https://itrop.ird.fr/culebront_utilities/singularity_build/\n\n# sed toolpath.yaml\nRUN cd /usr/local/CulebrONT_pipeline/ && sed -i \"s|/path/to/|/usr/local/CulebrONT_pipeline/|g\" /usr/local/CulebrONT_pipeline/tools_path.yaml\nENV PATH=\"/usr/local/CulebrONT_pipeline\":$PATH\n\n# Adding singularity binding\nENV SINGULARITY_BIND=/usr/local/CulebrONT_pipeline/\n\n# horrible sed to rule_graph\nRUN cd /usr/local/CulebrONT_pipeline/ && sed -i \"s|{params.cmd}|snakemake -s /usr/local/CulebrONT_pipeline/Snakefile --use-singularity --rulegraph |g\" /usr/local/CulebrONT_pipeline/Snakefile\n\n\n"
}