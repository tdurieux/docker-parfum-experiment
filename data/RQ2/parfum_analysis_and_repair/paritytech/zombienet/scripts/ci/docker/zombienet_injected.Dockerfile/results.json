{
  "startTime": 1674246595171,
  "endTime": 1674246596011,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/library/node:16-buster-slim\n\nLABEL io.parity.image.authors=\"devops-team@parity.io\" \\\n    io.parity.image.vendor=\"Parity Technologies\" \\\n    io.parity.image.title=\"parity/zombienet\" \\\n    io.parity.image.description=\"Zombienet\" \\\n    io.parity.image.source=\"https://github.com/paritytech/zombienet/blob/${VCS_REF}/scripts/ci/docker/zombienet_injected.Dockerfile\" \\\n    io.parity.image.revision=\"${VCS_REF}\" \\\n    io.parity.image.created=\"${BUILD_DATE}\"\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl gnupg lsb-release jq tini && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install gcloud and kubectl\nWORKDIR /home/nonroot/\nENV CLOUDSDK_INSTALL_DIR /usr/local/gcloud\nRUN curl -f -sSL https://sdk.cloud.google.com | bash\nENV PATH $PATH:/usr/local/gcloud/google-cloud-sdk/bin\nRUN gcloud components install kubectl\n\n# Non-root user for security purposes.\n#\n# UIDs below 10,000 are a security risk, as a container breakout could result\n# in the container being ran as a more privileged user on the host kernel with\n# the same UID.\n#\n# Static GID/UID is also useful for chown'ing files outside the container where\n# such a user does not exist.\nRUN groupadd --gid 10001 nonroot && \\\n    useradd  --home-dir /home/nonroot \\\n    --create-home \\\n    --shell /bin/bash \\\n    --gid nonroot \\\n    --groups nonroot \\\n    --uid 10000 nonroot\n\nWORKDIR /home/nonroot/zombie-net\nCOPY ./artifacts/dist ./dist\nCOPY static-configs ./static-configs\nCOPY scripts ./scripts\nCOPY tests ./tests\nCOPY artifacts/package* ./\nRUN npm install --production && npm cache clean --force;\nRUN chown -R nonroot. /home/nonroot\n\n# Change `cli` permissions and link to easy call\nRUN chmod +x ./dist/cli.js\nRUN ln -s /home/nonroot/zombie-net/dist/cli.js /usr/local/bin/zombie\n\n# Dependency for run test script when run inside container\nRUN mkdir -p /var/log/zombie-net\nRUN chown -R nonroot. /var/log/zombie-net\nRUN mkdir -p /etc/zombie-net\nRUN chown -R nonroot. /etc/zombie-net\n\n# Use the non-root user to run our application\n# Tell run test script that it runs in container\nENV RUN_IN_CONTAINER 1\nUSER nonroot\n# Tini allows us to avoid several Docker edge cases, see https://github.com/krallin/tini.\nENTRYPOINT [\"tini\", \"--\", \"bash\"]\n\n"
}