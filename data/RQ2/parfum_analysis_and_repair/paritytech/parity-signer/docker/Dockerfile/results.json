{
  "startTime": 1674253670467,
  "endTime": 1674253671374,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This dockerfile is based on Bitrise but with a lot of extra cruft we don't need removed\nFROM ubuntu:focal\nLABEL maintainer=\"Parity Technologies <devops-team@parity.io>\"\n\nENV ANDROID_SDK_ROOT /opt/android-sdk-linux\nENV ANDROID_HOME /opt/android-sdk-linux\nENV NDK_HOME /opt/android-ndk\nENV JAVA_HOME /usr/lib/jvm/java-11-openjdk-amd64/\n# skip prompts\nENV DEBIAN_FRONTEND=noninteractive\n# sdk env\nENV PATH ${PATH}:${ANDROID_SDK_ROOT}/platform-tools:${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin\n# Rust env\nENV RUSTUP_HOME=/usr/local/rustup\nENV CARGO_HOME=/usr/local/cargo\nENV PATH=/usr/local/cargo/bin:$PATH\n\nCOPY scripts /tmp/scripts/\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install python git default-jdk wget unzip curl clang && \\\n# SDK setup is taken from https://github.com/bitrise-io/android/blob/master/Dockerfile\n    cd /opt && \\\n    wget -q https://dl.google.com/android/repository/commandlinetools-linux-8092744_latest.zip -O android-commandline-tools.zip && \\\n    mkdir -p ${ANDROID_SDK_ROOT}/cmdline-tools && \\\n    unzip -q android-commandline-tools.zip -d /tmp/ && \\\n    mv /tmp/cmdline-tools/ ${ANDROID_SDK_ROOT}/cmdline-tools/latest && \\\n    rm android-commandline-tools.zip && ls -la ${ANDROID_SDK_ROOT}/cmdline-tools/latest/ && \\\n# We need at least one set of build-tools installed for apksigner\n    yes | sdkmanager --licenses && \\\n    yes | sdkmanager \"build-tools;30.0.3\" && \\\n    echo \"y\" | sdkmanager --install \"ndk;24.0.8215888\" --sdk_root=${ANDROID_SDK_ROOT} && \\\n# rust stuff\n    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \\\n# install additional rust targets\n    rustup target add aarch64-linux-android armv7-linux-androideabi x86_64-linux-android && \\\n    bash /tmp/scripts/init.sh && \\\n# versions\n    rustup show && \\\n    cargo --version && \\\n# cleanup\n    rm -rf /tmp/scripts; \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    # cargo clean up\n    # removes compilation artifacts cargo install creates (>250M)\n    rm -rf \"${CARGO_HOME}/registry\" \"${CARGO_HOME}/git\"\n\nWORKDIR /build\n"
}