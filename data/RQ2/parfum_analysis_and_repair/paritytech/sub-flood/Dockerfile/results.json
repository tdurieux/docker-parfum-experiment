{
  "startTime": 1674248653857,
  "endTime": 1674248654619,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM paritytech/pickle_rick:latest\nUSER root\nWORKDIR /root\n\nCOPY --from=paritytech/pickle_rick:latest /home/nonroot/gurke /home/nonroot/gurke\n\n# install nodejs 14.0 or >\n# https://github.com/nodesource/distributions/blob/master/README.md#installation-instructions\nRUN curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -\n# install the Yarn package manager, copatible with nodejs 14 or >\nRUN curl -f -sL https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y nodejs yarn && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /home/nonroot/sub-flood\n# Global npm dependencies\n# https://github.com/nodejs/docker-node/blob/master/docs/BestPractices.md#global-npm-dependencies\n\nCOPY package.json package-lock.json tsconfig.json .\nCOPY src/ src/\n\n# Script will be available at `/usr/local/lib/node_modules/sub-flood/dist/index.js`\nRUN npm install typescript && npm cache clean --force;\n# This will generate dist dir which is needed in order for the script to run\nRUN npm run build \n# place index.js in a place where gurke expects it\nRUN ln -s \"$(pwd)\"/dist/index.js /usr/local/bin/sub-flood\n\nRUN chown -R nonroot. /home/nonroot\n\n# Use the non-root user to run our application\nUSER nonroot\n\nWORKDIR /home/nonroot/gurke\n# Tini allows us to avoid several Docker edge cases, see https://github.com/krallin/tini\nENTRYPOINT [\"tini\", \"--\", \"bash\"]\n# Run your program under Tini\n\n# ### Run gurke inside a container at localhost\n# 1. Download service account key from 1password -> Simnet-Team -> gurke-service-key.json\n\n# 2. Place the key the a dir that the you will mount in the container\n# sudo mkdir -p /etc/gurke-container\n# cp gurke-service-key.json /etc/gurke-container\n\n# 3. Change ownership of key dir to match the nonroot user in the container\n# sudo chown -R 10000:10000 /etc/gurke-container\n\n# 4. Finally you can run a test like so\n# docker run  --rm --name gurke  \\\n#             -v /etc/gurke-container/:/etc/gurke/ \\\n#             --device /dev/fuse   \\\n#             --privileged   \\\n#              paritytech/pickle_rick:latest  \\\n#                 ./run-test-scripts/run-gurke-test.sh --container --testdir=features\n"
}