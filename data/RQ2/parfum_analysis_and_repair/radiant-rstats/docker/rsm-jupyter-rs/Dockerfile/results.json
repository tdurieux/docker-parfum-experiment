{
  "startTime": 1674251715242,
  "endTime": 1674251716400,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 243,
        "lineEnd": 243,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 137,
        "lineEnd": 140,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 26,
        "columnStart": 26,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 137,
        "lineEnd": 140,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 167,
        "lineEnd": 167,
        "columnStart": 26,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# FROM jupyter/pyspark-notebook:2022-05-29\n# version latest posted on 6-22-2022\nFROM jupyter/pyspark-notebook@sha256:dcef7423820a4c6bfa21ed57b62a460f55bdb91e1ab1ab1d15d2d25de86ba032\n\n\nLABEL Vincent Nijs \"radiant@rady.ucsd.edu\"\n\nARG DOCKERHUB_VERSION_UPDATE\nENV DOCKERHUB_VERSION=${DOCKERHUB_VERSION_UPDATE}\nENV DOCKERHUB_NAME=rsm-jupyter-rs\n\n# Fix DL4006\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nUSER root\n\n# fixes the issue where sudo requires terminal for password when starting postgres\nRUN echo \"${NB_USER} ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nRUN apt-get update -qq && apt-get -y --no-install-recommends install \\\n  supervisor \\\n  openssh-server \\\n  zsh \\\n  vim \\\n  vifm \\\n  wget \\\n  rsync && rm -rf /var/lib/apt/lists/*;\n\nENV CMDSTAN_VERSION=\"2.30.0\"\nRUN mamba install --quiet --yes -c conda-forge \\\n  cmdstan=${CMDSTAN_VERSION} \\\n  cmdstanpy \\\n  sqlalchemy \\\n  psycopg2 \\\n  ipython-sql \\\n  beautifulsoup4 \\\n  scikit-learn \\\n  mlxtend \\\n  xgboost \\\n  lightgbm \\\n  catboost \\\n  graphviz \\\n  lime \\\n  shap \\\n  spacy \\\n  pydotplus \\\n  networkx \\\n  seaborn \\\n  plotnine \\\n  selenium \\\n  sqlalchemy \\\n  pyLDAvis \\\n  python-dotenv \\\n  statsmodels \\\n  linearmodels \\\n  jupyterlab_widgets \\\n  jupytext \\\n  jupyterlab_code_formatter \\\n  black \\\n  isort \\\n  jupyterlab-git \\\n  jupyterlab-spellchecker \\\n  jupyter-server-proxy \\\n  jupyter-rsession-proxy \\\n  jupyterlab-system-monitor \\\n  flask \\\n  streamlit \\\n  pyrsm \\\n  xlrd \\\n  openpyxl \\\n  pyarrow \\\n  python-duckdb \\\n  bash_kernel \\\n  && python -m bash_kernel.install\n\nCOPY files/setup-ml-frameworks.sh setup.sh\nRUN chmod 755 setup.sh \\\n  && ./setup.sh \\\n  && rm setup.sh \\\n  && mamba clean --all -f -y \\\n  && fix-permissions \"${CONDA_DIR}\" \\\n  && fix-permissions \"/home/${NB_USER}\"\n\n# not available through conda-forge\nRUN pip install --no-cache-dir jupyterlab-skip-traceback \\\n  lckr-jupyterlab-variableinspector \\\n  radian\n\n# setting up pgweb\nRUN pip install --no-cache-dir git+https://github.com/illumidesk/jupyter-pgweb-proxy.git\n\nENV R_VERSION=4.2.0\nENV TERM=xterm\nENV R_HOME=/usr/local/lib/R\nENV CRAN=https://packagemanager.rstudio.com/cran/__linux__/focal/latest\nENV TZ=Etc/UTC\n\nCOPY files/install-R.sh install-R.sh\nRUN chmod 755 install-R.sh \\\n  && ./install-R.sh \\\n  && rm install-R.sh\n\nRUN echo \"R_LIBS_USER='~/.rsm-msba/R/${R_VERSION}'\" >> ${R_HOME}/etc/Renviron.site\nRUN echo '.libPaths(unique(c(Sys.getenv(\"R_LIBS_USER\"), .libPaths())))' >> ${R_HOME}/etc/Rprofile.site\n\nRUN pip install --no-cache-dir rpy2\n\nCOPY files/setup-tidyverse.sh setup.sh\nRUN chmod +x setup.sh \\\n  && ./setup.sh \\\n  && rm setup.sh\n\n# packages need for radiant a reproducible analysis\nCOPY files/setup-radiant.sh setup.sh\nCOPY files/setup-radiant.sh setup.sh\nCOPY files/setup-radiant.sh setup.sh\nRUN chmod +x setup.sh \\\n  && ./setup.sh \\\n  && rm setup.sh\n\n# tooling for Bayesian Machine Learning class\nCOPY files/setup-bml.sh setup.sh\nRUN chmod +x setup.sh \\\n  && ./setup.sh \\\n  && rm setup.sh\n\n# adding postgres\n# mostly from https://docs.docker.com/engine/examples/postgresql_service/\nENV POSTGRES_VERSION=14\n\n# upgrade to postgres 14\nRUN apt -y update && \\\n  apt -y upgrade && \\\n  apt -y --no-install-recommends install gnupg2 wget vim && \\\n  sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list' && \\\n  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \\\n  apt -y update && \\\n  apt-get install --no-install-recommends -y \\\n  postgresql-${POSTGRES_VERSION} \\\n  postgresql-client-${POSTGRES_VERSION} \\\n  postgresql-contrib-${POSTGRES_VERSION} && rm -rf /var/lib/apt/lists/*;\n\n# Run the rest of the commands as the postgres user\nUSER postgres\n\nARG PGPASSWORD=${PGPASSWORD:-postgres}\nENV PGPASSWORD=${PGPASSWORD}\n\n# create a postgres role for ${NB_USER} with \"postgres\" as the password\n# create a database \"rsm-docker\" owned by the ${NB_USER} role.\nRUN /etc/init.d/postgresql start \\\n  && psql --command \"CREATE USER ${NB_USER} WITH SUPERUSER PASSWORD '${PGPASSWORD}';\" \\\n  && createdb -O ${NB_USER} rsm-docker\n\nCOPY files/postgresql.conf /etc/postgresql/${POSTGRES_VERSION}/main/postgresql.conf\nCOPY files/pg_hba.conf /etc/postgresql/${POSTGRES_VERSION}/main/pg_hba.conf\n\nUSER root\n\n# populate version number in conf file\nRUN sed -i 's/__version__/'\"$POSTGRES_VERSION\"'/g' /etc/postgresql/${POSTGRES_VERSION}/main/postgresql.conf\n\nRUN addgroup ${NB_USER} postgres \\\n  && chown -R postgres:postgres /etc/postgresql/${POSTGRES_VERSION}/main/ \\\n  && fix-permissions /etc/postgresql/${POSTGRES_VERSION}/main/\n\n# oh-my-zsh (need to install wget and curl again ...)\nRUN apt-get update -qq && apt-get -y --no-install-recommends install wget curl \\\n  && sh -c \"$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)\" \\\n  && git clone https://github.com/zsh-users/zsh-completions ${ZSH_CUSTOM:=~/.oh-my-zsh/custom}/plugins/zsh-completions \\\n  && git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions \\\n  && git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting \\\n  && git clone https://github.com/supercrabtree/k ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/k \\\n  && git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k \\\n  && cp -R /home/jovyan/.oh-my-zsh /etc/skel/.oh-my-zsh && rm -rf /var/lib/apt/lists/*;\n\nCOPY files/zshrc /etc/skel/.zshrc\nCOPY files/p10k.zsh /etc/skel/.p10k.zsh\nCOPY files/usethis /usr/local/bin/usethis\nCOPY files/clean.sh /usr/local/bin/clean\n\n# settings for local install of python packages\nARG PYBASE=/home/${NB_USER}/.rsm-msba\nENV PYBASE=${PYBASE}\nENV PYTHONUSERBASE=${PYBASE} \\\n  JUPYTER_PATH=${PYBASE}/share/jupyter \\\n  JUPYTER_DATA_DIR=${PYBASE}/share/jupyter \\\n  JUPYTER_CONFIG_DIR=${PYBASE}/jupyter \\\n  JUPYTER_RUNTIME_DIR=/tmp/jupyter/runtime \\\n  RSTUDIO_WHICH_R=/usr/local/bin/R \\\n  SHELL=/bin/zsh \\\n  ZDOTDIR=/home/${NB_USER}/.rsm-msba/zsh \\\n  CMDSTAN=\"/opt/cmdstan/cmdstan-${CMDSTAN_VERSION}\" \\\n  LD_LIBRARY_PATH='/usr/local/lib/R/lib:/usr/local/lib:/usr/lib/x86_64-linux-gnu:/usr/lib/jvm/java-11-openjdk-amd64/lib/server'\n\nCOPY images/gitgadget.svg /opt/shiny/gitgadget.svg\nCOPY images/logo200.svg /opt/shiny/logo.svg\nCOPY files/install-rstudio.sh setup.sh\nRUN chmod 755 setup.sh \\\n  && ./setup.sh \\\n  && rm setup.sh\n\n# setup quarto - can be used with Rstudio\n# and when connecting to running container\n# from VSCode\nCOPY files/setup-quarto.sh setup.sh\nRUN chmod +x setup.sh \\\n  && ./setup.sh \\\n  && rm setup.sh\n\n# updating the supervisord.conf file for Jupyter and the notebook_config file\nCOPY files/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY files/jupyter_notebook_config.py /etc/jupyter/\nCOPY files/condarc /opt/conda/.condarc\nRUN mkdir -p /var/log/supervisor \\\n  && fix-permissions /var/log/supervisor \\\n  && fix-permissions /etc/supervisor/conf.d/ \\\n  && fix-permissions /etc/jupyter/ \\\n  && fix-permissions /opt/shiny/ \\\n  && fix-permissions \"${CONDA_DIR}\"\n\n# copy base conda environment management script\nCOPY files/cc.sh /usr/local/bin/cc\nCOPY files/cl.sh /usr/local/bin/cl\nCOPY files/cr.sh /usr/local/bin/cr\nCOPY files/ci.sh /usr/local/bin/ci\nCOPY files/ce.sh /usr/local/bin/ce\n\n# Copy the launch script into the image\nCOPY launch-${DOCKERHUB_NAME}.sh /opt/launch.sh\nCOPY files/setup.sh /usr/local/bin/setup\nRUN fix-permissions /etc/skel \\\n  && fix-permissions /usr/local/bin \\\n  && chmod 755 /usr/local/bin/*\n\n# get pgweb\nRUN wget -O pgweb.zip https://github.com/sosedoff/pgweb/releases/download/v0.11.11/pgweb_linux_amd64.zip \\\n  && unzip pgweb.zip -d pgweb_dir \\\n  && rm pgweb.zip \\\n  && mv pgweb_dir/* /usr/local/bin/pgweb \\\n  && rm -rf pgweb_dir\n\n# setting up pgweb\nRUN pip install --no-cache-dir git+https://github.com/illumidesk/jupyter-pgweb-proxy.git\n\n# make system R the first choice\nENV PATH=\"/usr/local/bin:$PATH\"\n\nEXPOSE 8181 8282 8765 8989 8501\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]\n\n# Switch back to jovyan to avoid accidental container runs as root\nUSER ${NB_UID}\nENV HOME /home/${NB_USER}\nWORKDIR \"${HOME}\"\n"
}