{
  "startTime": 1674248426676,
  "endTime": 1674248427156,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/python:3.10.5-slim-bullseye AS base\n\nENV HOME=/app\n\nWORKDIR ${HOME}\n\nFROM base AS builder\n\nENV PATH=${PATH}:${HOME}/.poetry/bin\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      build-essential \\\n      curl \\\n      libffi-dev \\\n && rm -rf /var/lib/apt/lists/* \\\n && curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - --version 1.1.13 \\\n && mkdir -p /app/.config\n\nCOPY pyproject.toml poetry.lock ./\n\nRUN poetry config virtualenvs.create false \\\n && poetry install --no-dev --no-root\n\nCOPY . ./\n\nARG PYVERSION=v0.0.0\nARG GITVERSION=v0.0.0+dirty\n\nRUN sed -i \"s/^__git_version__.*$/__git_version__ = '${GITVERSION}'/\" commodore/__init__.py \\\n && poetry version \"${PYVERSION}\" \\\n && poetry build --format wheel\n\nRUN pip install --no-cache-dir ./dist/syn_commodore-*-py3-none-any.whl\n\nRUN curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 \\\n && chmod 700 get_helm.sh \\\n && ./get_helm.sh \\\n && mv /usr/local/bin/helm /usr/local/bin/helm3 \\\n && curl -f -LO https://git.io/get_helm.sh \\\n && chmod 700 get_helm.sh \\\n && ./get_helm.sh \\\n && mv /usr/local/bin/helm /usr/local/bin/helm2\n\nRUN ./tools/install-jb.sh v0.4.0\n\nFROM base AS runtime\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      curl \\\n      git \\\n      libnss-wrapper \\\n      openssh-client \\\n && rm -rf /var/lib/apt/lists/* \\\n && echo \"    ControlMaster auto\\n    ControlPath /tmp/%r@%h:%p\" >> /etc/ssh/ssh_config\n\nCOPY --from=builder \\\n      /usr/local/lib/python3.10/site-packages/ /usr/local/lib/python3.10/site-packages/\nCOPY --from=builder \\\n      /usr/local/bin/kapitan* \\\n      /usr/local/bin/commodore* \\\n      /usr/local/bin/helm* \\\n      /usr/local/bin/jb \\\n      /usr/local/bin/\n\nRUN ln -s /usr/local/bin/helm3 /usr/local/bin/helm\n\nCOPY ./tools/entrypoint.sh /usr/local/bin/\n\nRUN chgrp 0 /app/ \\\n && chmod g+rwX /app/\n\nUSER 1001\n\n# OIDC token callback\nEXPOSE 18000\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\", \"commodore\"]\n"
}