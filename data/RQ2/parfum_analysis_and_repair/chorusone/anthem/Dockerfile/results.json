{
  "startTime": 1674248000285,
  "endTime": 1674248001241,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cypress/base:12.18.0 AS cypress\n\nENV CI=true\n\n# Dockerize is needed to sync containers startup\nENV DOCKERIZE_VERSION v0.6.0\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n  && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n  && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n# Install Lerna\nRUN npm i -g lerna && npm cache clean --force;\n\n# Create app directory\nWORKDIR /usr/app\n\nFROM cypress AS base\n\nCOPY . .\n\n# Install all dependencies with Lerna\nRUN lerna bootstrap\n\n# Build the utils package\nRUN yarn utils:build\n\n# Build the client package in dev mode\nRUN cd packages/client && REACT_APP_DEV=true yarn build\n\n# Build the server package\nRUN yarn server:build\n\n# Run the unit tests\nRUN yarn test && yarn cache clean;\n\nFROM base as dependencies\n\n# Copy everything\nCOPY . .\n"
}