{
  "startTime": 1674248060969,
  "endTime": 1674248062324,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "# Copyright (c) 2021 caoccao.com Sam Cao\n# All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Usage: docker build -t sjtucaocao/javet-android:1.1.5 -f docker/android/base.Dockerfile .\n\nFROM ubuntu:20.04\nWORKDIR /\n\n# Update Ubuntu\nENV DEBIAN_FRONTEND=noninteractive\nRUN echo Cache V8\nRUN apt-get update\nRUN apt-get install --upgrade -qq -y --no-install-recommends git curl wget build-essential software-properties-common patchelf maven sudo zip unzip execstack cmake && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --upgrade -qq -y --no-install-recommends python3 python python3-pip python3-distutils python3-testresources && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade -y\nRUN pip3 install --no-cache-dir coloredlogs\n\n# Install CMake\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.21.4/cmake-3.21.4-linux-x86_64.sh\nRUN chmod 755 cmake-3.21.4-linux-x86_64.sh\nRUN mkdir -p /usr/lib/cmake\nRUN ./cmake-3.21.4-linux-x86_64.sh --skip-license --exclude-subdir --prefix=/usr/lib/cmake\nRUN ln -sf /usr/lib/cmake/bin/cmake /usr/bin/cmake\nRUN ln -sf /usr/lib/cmake/bin/cmake /bin/cmake\nRUN rm cmake-3.21.4-linux-x86_64.sh\n\n# Prepare V8\nRUN mkdir google\nWORKDIR /google\nRUN git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git\nWORKDIR /google/depot_tools\nRUN git checkout remotes/origin/main\nENV PATH=/google/depot_tools:$PATH\nWORKDIR /google\nRUN fetch v8\nWORKDIR /google/v8\nRUN git checkout 10.3.174.14\nRUN sed -i 's/snapcraft/nosnapcraft/g' ./build/install-build-deps.sh\nRUN ./build/install-build-deps.sh\nRUN sed -i 's/nosnapcraft/snapcraft/g' ./build/install-build-deps.sh\nWORKDIR /google\nRUN echo 'target_os = [\"android\"]' >> .gclient\nRUN gclient sync\nRUN echo V8 preparation is completed.\n\n# Prepare Android NDK\nWORKDIR /\nRUN wget https://dl.google.com/android/repository/android-ndk-r23b-linux.zip\nRUN unzip android-ndk-r23b-linux.zip\nRUN rm android-ndk-r23b-linux.zip\n\n# Prepare Android SDK\nWORKDIR /google/v8/third_party/android_sdk/public/cmdline-tools/latest/bin\nRUN yes | ./sdkmanager --licenses\nRUN ./sdkmanager \"build-tools;30.0.2\" \"platforms;android-30\"\nENV ANDROID_SDK_ROOT=/google/v8/third_party/android_sdk\n\n# Patch Docker\nRUN apt-get install --upgrade -qq -y --no-install-recommends gcc-multilib && rm -rf /var/lib/apt/lists/*;\n\n# Build V8\nWORKDIR /google/v8\nCOPY ./scripts/python/patch_v8_build.py .\nRUN python tools/dev/v8gen.py arm.release -- 'target_os=\"android\"' 'target_cpu=\"arm\"' 'v8_target_cpu=\"arm\"' v8_monolithic=true v8_use_external_startup_data=false is_component_build=false v8_enable_i18n_support=false v8_enable_pointer_compression=false v8_static_library=true symbol_level=0 use_custom_libcxx=false\nRUN ninja -C out.gn/arm.release v8_monolith || python3 patch_v8_build.py -p ./\nRUN ninja -C out.gn/arm.release v8_monolith\nRUN python tools/dev/v8gen.py arm64.release -- 'target_os=\"android\"' 'target_cpu=\"arm64\"' 'v8_target_cpu=\"arm64\"' v8_monolithic=true v8_use_external_startup_data=false is_component_build=false v8_enable_i18n_support=false v8_enable_pointer_compression=false v8_static_library=true symbol_level=0 use_custom_libcxx=false\nRUN ninja -C out.gn/arm64.release v8_monolith || python3 patch_v8_build.py -p ./\nRUN ninja -C out.gn/arm64.release v8_monolith\nRUN python tools/dev/v8gen.py ia32.release -- 'target_os=\"android\"' 'target_cpu=\"x86\"' 'v8_target_cpu=\"x86\"' v8_monolithic=true v8_use_external_startup_data=false is_component_build=false v8_enable_i18n_support=false v8_enable_pointer_compression=false v8_static_library=true symbol_level=0 use_custom_libcxx=false\nRUN ninja -C out.gn/ia32.release v8_monolith || python3 patch_v8_build.py -p ./\nRUN ninja -C out.gn/ia32.release v8_monolith\nRUN python tools/dev/v8gen.py x64.release -- 'target_os=\"android\"' 'target_cpu=\"x64\"' 'v8_target_cpu=\"x64\"' v8_monolithic=true v8_use_external_startup_data=false is_component_build=false v8_enable_i18n_support=false v8_enable_pointer_compression=false v8_static_library=true symbol_level=0 use_custom_libcxx=false\nRUN ninja -C out.gn/x64.release v8_monolith || python3 patch_v8_build.py -p ./\nRUN ninja -C out.gn/x64.release v8_monolith\nRUN rm patch_v8_build.py\nRUN echo V8 build is completed.\n\n# Prepare Javet Build Environment\nRUN apt-get install --upgrade -qq -y --no-install-recommends openjdk-11-jdk && rm -rf /var/lib/apt/lists/*;\nENV JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\nENV SDKMAN_HOME=\"/root/.sdkman\"\nENV GRADLE_HOME=\"${SDKMAN_HOME}/candidates/gradle/current\"\nRUN curl -f -s https://get.sdkman.io | bash\nRUN source ${SDKMAN_HOME}/bin/sdkman-init.sh && sdk install gradle 7.2\nENV PATH=$GRADLE_HOME/bin:$PATH\n\n# Shrink\nRUN rm -rf ${SDKMAN_HOME}/archives/*\nRUN rm -rf ${SDKMAN_HOME}/tmp/*\nRUN apt-get clean -y\nRUN rm -rf /var/lib/apt/lists/*\nWORKDIR /\n\n# Pre-cache Dependencies\nRUN mkdir Javet\nWORKDIR /Javet\nCOPY . .\nWORKDIR /Javet/android\nRUN gradle dependencies\nWORKDIR /\nRUN rm -rf /Javet\n\n# Completed\nRUN echo Javet Android build base image is completed.\n"
}