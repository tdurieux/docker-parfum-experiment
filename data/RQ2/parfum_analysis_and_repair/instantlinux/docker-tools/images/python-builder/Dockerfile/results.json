{
  "startTime": 1674247878421,
  "endTime": 1674247879086,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15\nMAINTAINER Rich Braun \"richb@instantlinux.net\"\nARG BUILD_DATE\nARG VCS_REF\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n    org.label-schema.license=Apache-2.0 \\\n    org.label-schema.name=python-builder \\\n    org.label-schema.vcs-ref=$VCS_REF \\\n    org.label-schema.vcs-url=https://github.com/instantlinux/docker-tools\n\nENV BUILD_DIR=/build \\\n    BUILD_USER=build \\\n    LANG=en_US \\\n    PYTHONPATH= \\\n    TZ=UTC\n\nARG BUILDX_VERSION=0.7.1\nARG COMPOSE_VERSION=1.29.2\nARG HELM_VERSION=3.9.0-r1\nARG KUBECTL_VERSION=1.20.4\nARG MUSL_VERSION=1.2.2-r7\nARG PIP_VERSION=20.2.3\nARG PYTHON_VERSION=3.9.7-r4\nARG PYCRYPTOGRAPHY_VERSION=3.3.2-r3\nARG PYPILLOW_VERSION=8.4.0-r3\nARG _DOCKER_DOWNLOADS=https://github.com/docker/compose/releases/download\nARG _KUBECTL_DOWNLOADS=https://storage.googleapis.com/kubernetes-release/release\nARG _BUILDX_URL=https://github.com/docker/buildx/releases/download/v${BUILDX_VERSION}/buildx-v${BUILDX_VERSION}.linux-amd64\nARG _COMPOSE_URL=${_DOCKER_DOWNLOADS}/${COMPOSE_VERSION}/docker-compose-Linux-x86_64\nARG _KUBECTL_URL=${_KUBECTL_DOWNLOADS}/v$KUBECTL_VERSION/bin/linux/amd64/kubectl\nARG DOCKER_GID=485\nARG BUILD_UID=1001\nARG BUILDX_SHA=22fcb78c66905bf6ddf198118aaa9838b0349a25347606264be17e4276d6d5fc\nARG COMPOSE_SHA=f3f10cf3dbb8107e9ba2ea5f23c1d2159ff7321d16f0a23051d68d8e2547b323\nARG KUBECTL_SHA=98e8aea149b00f653beeb53d4bd27edda9e73b48fed156c4a0aa1dabe4b1794c\n\nCOPY Pipfile* /root/\n\nRUN addgroup -g $DOCKER_GID docker && \\\n    adduser -D -h $BUILD_DIR -u $BUILD_UID -G docker \\\n      -s /bin/bash $BUILD_USER && \\\n    echo '@testing http://dl-cdn.alpinelinux.org/alpine/edge/testing' \\\n      >>/etc/apk/repositories && \\\n    apk add --update --no-cache \\\n      bash curl docker-cli gcc gettext git gzip jq libffi-dev make \\\n      musl==$MUSL_VERSION musl-dev==$MUSL_VERSION openssh-client \\\n      python3==$PYTHON_VERSION python3-dev py3-authlib py3-boto3 py3-botocore \\\n      py3-cachetools py3-cffi py3-cryptography==$PYCRYPTOGRAPHY_VERSION \\\n      py3-pycryptodomex py3-flask py3-flask-babel py3-greenlet \\\n      py3-itsdangerous py3-passlib \\\n      py3-pillow=$PYPILLOW_VERSION py3-pip py3-requests py3-virtualenv \\\n      helm@testing=$HELM_VERSION sqlite tar tzdata wget && \\\n    cp /usr/share/zoneinfo/$TZ /etc/localtime && \\\n    echo $TZ >/etc/timezone && \\\n    mkdir -p /usr/lib/docker/cli-plugins && \\\n    curl -f -sLo /usr/lib/docker/cli-plugins/docker-buildx $_BUILDX_URL && \\\n    curl -f -sLo /usr/local/bin/docker-compose ${_COMPOSE_URL} && \\\n    curl -f -sLo /usr/local/bin/kubectl ${_KUBECTL_URL} && \\\n    echo -e \"$BUILDX_SHA  /usr/lib/docker/cli-plugins/docker-buildx\\n$COMPOSE_SHA\" \\\n      \" /usr/local/bin/docker-compose\\n$KUBECTL_SHA\" \\\n      \" /usr/local/bin/kubectl\" | sha256sum -c && \\\n    chmod +x /usr/lib/docker/cli-plugins/docker-buildx \\\n      /usr/local/bin/docker-compose /usr/local/bin/kubectl && \\\n    pip install --no-cache-dir --upgrade pipenv pip==$PIP_VERSION && \\\n    cd /root && pipenv install --system --deploy && pip freeze && \\\n    mkdir -p /certs/client && \\\n    chown $BUILD_USER /certs/client /etc/localtime /etc/timezone && \\\n    rm -f /var/cache/apk/*\n\nWORKDIR $BUILD_DIR\nVOLUME $BUILD_DIR\nCOPY docker-entrypoint.sh entrypoint.sh /usr/local/bin/\nRUN chmod 755 /usr/local/bin/entrypoint.sh\n\nUSER $BUILD_USER\nENTRYPOINT [\"entrypoint.sh\"]\nCMD [\"sh\"]\n"
}