{
  "startTime": 1674251913761,
  "endTime": 1674251914822,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Start from a Debian image with the latest version of Go installed\n# and a workspace (GOPATH) configured at /go.\nFROM golang:1.7\n\n# Copy the local package files to the container's workspace.\nADD . /go/src/github.com/intervention-engine/ie\n\n#Build the Intervention Engine server\nWORKDIR /go/src/github.com/intervention-engine/ie/cmd/ie\nRUN go build main.go\n\n# Document that the service listens on port 3001.\nEXPOSE 3001\n\n# Install Dockerize to get support for waiting on another container's port to be available.\n# This is needed here so docker-compose can be configured to wait on the mongodb port to be available.\nRUN apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\n\nENV DOCKERIZE_VERSION v0.4.0\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n"
}