{
  "startTime": 1674251435917,
  "endTime": 1674251437272,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 9,
        "columnEnd": 73
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 9,
        "columnEnd": 73
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 9,
        "columnEnd": 73
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 73
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge AS mozjpeg\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\nRUN apk add --no-cache alpine-sdk sudo\nRUN adduser -s /bin/sh -D -G abuild abuild\nRUN echo \"%abuild ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\nUSER abuild\nENV ABUILD_LAST_COMMIT \"1\"\nENV SOURCE_DATE_EPOCH \"1\"\nRUN abuild-keygen -a -i -n -q\n\n# Buildind mozjpeg and installing it\nWORKDIR /tmp/mozjpeg\nCOPY --chown=abuild:abuild alpine/mozjpeg/APKBUILD ./\nRUN sudo chown abuild:abuild ./\nRUN abuild deps && abuild -r\nRUN sudo apk add --no-cache --allow-untrusted /home/abuild/packages/tmp/x86_64/*.apk\n\n# Building tiff and installing it\nWORKDIR /tmp/tiff\nCOPY --chown=abuild:abuild alpine/tiff/* ./\nRUN sudo chown abuild:abuild ./\nRUN abuild deps && abuild -r\nRUN sudo apk add --no-cache --allow-untrusted /home/abuild/packages/tmp/x86_64/*.apk\n\n# Building lcms2 and installing it\nWORKDIR /tmp/lcms2\nCOPY --chown=abuild:abuild alpine/lcms2/* ./\nRUN sudo chown abuild:abuild ./\nRUN abuild deps && abuild -r\nRUN sudo apk add --no-cache --allow-untrusted /home/abuild/packages/tmp/x86_64/*.apk\n\n# Building libimagequant and installing it\nWORKDIR /tmp/libimagequant\nCOPY --chown=abuild:abuild alpine/libimagequant/APKBUILD ./\nRUN sudo chown abuild:abuild ./\nRUN abuild deps && abuild -r\nRUN sudo apk add --no-cache --allow-untrusted /home/abuild/packages/tmp/x86_64/*.apk\n\n# Building libvips\nWORKDIR /tmp/vips\nCOPY --chown=abuild:abuild alpine/vips/APKBUILD ./\nRUN sudo chown abuild:abuild ./\nRUN abuild deps && abuild -r\n\n\n# Building reImage\nFROM alpine:edge AS go\nWORKDIR /go\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\nCOPY --from=mozjpeg /home/abuild/packages/tmp/x86_64/*.apk /tmp/\nRUN apk add --no-cache --allow-untrusted /tmp/*.apk && apk add --no-cache go git fftw-dev musl-dev\nCOPY *.go go.sum go.mod ./\nRUN go mod vendor\nRUN go build -o reImage *.go\n\n\n# Create Release image without dev dependencies\nFROM alpine:edge AS release\nWORKDIR /usr/local/bin/\nRUN echo \"http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories\nCOPY --from=mozjpeg /home/abuild/packages/tmp/x86_64/mozjpeg*.apk /tmp/\nCOPY --from=mozjpeg /home/abuild/packages/tmp/x86_64/vips*.apk /tmp/\nCOPY --from=mozjpeg /home/abuild/packages/tmp/x86_64/lcms2*.apk /tmp/\nCOPY --from=mozjpeg /home/abuild/packages/tmp/x86_64/tiff*.apk /tmp/\nCOPY --from=mozjpeg /home/abuild/packages/tmp/x86_64/libimagequant*.apk /tmp/\nRUN apk add --no-cache --allow-untrusted /tmp/*.apk && apk add --no-cache ca-certificates\nCOPY --from=go /go/reImage .\nENV CFG_LISTEN \":7075\"\nCMD [\"./reImage\"]\n"
}