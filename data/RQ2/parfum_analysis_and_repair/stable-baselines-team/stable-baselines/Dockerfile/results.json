{
  "startTime": 1674251341314,
  "endTime": 1674251342351,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 322
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 48,
        "columnEnd": 133
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PARENT_IMAGE\nFROM $PARENT_IMAGE\nARG USE_GPU\n\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install \\\n    curl \\\n    cmake \\\n    default-jre \\\n    git \\\n    jq \\\n    python-dev \\\n    python-pip \\\n    python3-dev \\\n    libfontconfig1 \\\n    libglib2.0-0 \\\n    libsm6 \\\n    libxext6 \\\n    libxrender1 \\\n    libopenmpi-dev \\\n    zlib1g-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV CODE_DIR /root/code\nENV VENV /root/venv\n\nCOPY ./stable_baselines/version.txt ${CODE_DIR}/stable-baselines/stable_baselines/version.txt\nCOPY ./setup.py ${CODE_DIR}/stable-baselines/setup.py\n\nRUN \\\n    pip install --no-cache-dir pip --upgrade && \\\n    pip install --no-cache-dir virtualenv && \\\n    virtualenv $VENV --python=python3 && \\\n    . $VENV/bin/activate && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    cd ${CODE_DIR}/stable-baselines && \\\n    pip install --no-cache-dir -e .[mpi,tests,docs] && \\\n    rm -rf $HOME/.cache/pip\n\nENV PATH=$VENV/bin:$PATH\n\n# Codacy code coverage report: used for partial code coverage reporting\nRUN cd $CODE_DIR && \\\n    curl -f -Ls -o codacy-coverage-reporter.jar \"$( curl -f -Ls https://api.github.com/repos/codacy/codacy-coverage-reporter/releases/latest | jq -r '.assets | map({name, browser_download_url} | select(.name | (startswith(\"codacy-coverage-reporter\") and contains(\"assembly\") and endswith(\".jar\")))) | .[0].browser_download_url')\"\n\nCMD /bin/bash\n"
}