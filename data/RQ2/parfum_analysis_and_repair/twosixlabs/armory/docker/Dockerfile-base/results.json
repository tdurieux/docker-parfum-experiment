{
  "startTime": 1674250841229,
  "endTime": 1674250842042,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###########################################################################################\n#                           ARMORY Baseline Docker Image\n#\n# This File contains the baseline image for Armory docker images.  All framework\n# based images should inhereit from this image using:\n#       FROM twosixlabs/armory-baseline AS armory-baseline\n#\n#\n###########################################################################################\n\n\nFROM nvidia/cuda:11.3.1-cudnn8-runtime-ubuntu20.04\n\n# Temporary fix for broken nvidia package checksum\nRUN rm -f /etc/apt/sources.list.d/nvidia-ml.list\n\n# Basic Apt-get Bits\nRUN apt-get -y -qq update && \\\n    DEBIAN_FRONTEND=noninteractive \\\n    apt-get --no-install-recommends install -y \\\n    wget \\\n    vim \\\n    build-essential \\\n    git \\\n    curl \\\n    libgl1-mesa-glx \\\n    libglib2.0-0 \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install Conda\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-py38_4.10.3-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc && \\\n    echo 'alias ll=\"ls -al\"' >> ~/.bashrc\n\nENV PATH=/opt/conda/bin:$PATH\n\n# conda installations ordered by channel\n\n# TODO Figure out why we need to support this and `armory-base-requirements` separately.\n\n# Conda Install for Channel: pytorch\nRUN /opt/conda/bin/conda install \\\n    pytorch=1.10 \\\n    torchvision \\\n    torchaudio \\\n    cudatoolkit=11.3 \\\n    -c pytorch \\\n    && /opt/conda/bin/conda clean --all\n# pytorch==1.10.2\n# torchvision==0.11.3\n# torchaudio==0.10.2\n# cudatoolkit==1.11.3\n# numpy==1.21.2\n# Pillow==9.0.1\n\n# Conda Install for Channel: conda-forge\nRUN /opt/conda/bin/conda install \\\n    scikit-learn=1.0 \\\n    jupyterlab \\\n    jupyterlab_widgets \\\n    ipywidgets \\\n    matplotlib \\\n    ffmpeg \\\n    -c conda-forge \\\n    && /opt/conda/bin/conda clean --all\n    # ART requires scikit-learn >=0.22.2,<1.1.0\n# scikit-learn==1.0.2 \\\n# scipy==1.7.3 \\\n# jupyterlab==3.3.2 \\\n# jsonschema==4.4.0 \\\n# six==1.16.0 \\\n# setuptools==52.0.0 \\\n# matplotlib==3.5.1 \\\n# ffmpeg==4.3.2\n# conda-forge ffmpeg comes with libx264 encoder, which the pytorch channel version does not include\n#     this encoder is required for video compression defenses (ART) and video exporting\n#     future work could migrate this to libopenh264 encoder, which is available in both channels\n\n# Conda Install for Channel: Numba\nRUN /opt/conda/bin/conda install \\\n    numba=0.55 \\\n    -c numba \\\n    && /opt/conda/bin/conda clean --all\n    # ART requires numba >= 0.53.1\n# numba==0.55.1\n\n# Conda Install for Channel: Anaconda\nRUN /opt/conda/bin/conda install \\\n    pandas=1.1 \\\n    -c anaconda \\\n    && /opt/conda/bin/conda clean --all\n# pandas==1.1.3\n\n# Conda Install for packages with no channel\nRUN /opt/conda/bin/conda install \\\n    protobuf=3 \\\n    && /opt/conda/bin/conda clean --all\n# protobuf==3.19.1\n\nRUN /opt/conda/bin/pip install --no-cache-dir \\\n    tensorflow-datasets==4.5 \\\n    tensorflow==2.8 \\\n    tensorboardx==2.4 \\\n    boto3==1.20 \\\n    opencv-python \\\n    ffmpeg-python \\\n    pytest \\\n    loguru \\\n    docker\n# dill==0.3.4 \\\n# tensorflow-datasets==4.5.0 \\\n# tensorflow==2.8.0 \\\n# tensorboardX==2.4 \\\n# boto3==1.20.0 \\\n# opencv-python==4.5.5.64 \\\n# ffmpeg-python==0.2.0 \\\n# pytest==7.0.1 \\\n# docker==5.0.3\n\nRUN /opt/conda/bin/pip install --no-cache-dir \\\n    pydub\n# pydub==0.25.1\n# required for ART mp3 defense\n\nWORKDIR /workspace\n"
}