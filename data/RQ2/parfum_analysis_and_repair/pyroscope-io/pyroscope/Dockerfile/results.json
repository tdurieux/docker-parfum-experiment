{
  "startTime": 1674254589572,
  "endTime": 1674254590437,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#                 _\n#                | |\n#  _ __ _   _ ___| |_\n# | '__| | | / __| __|\n# | |  | |_| \\__ \\ |_\n# |_|   \\__,_|___/\\__|\n\nFROM alpine:3.12 as rust-builder\n\nRUN apk update &&\\\n    apk add --no-cache git gcc g++ make build-base openssl-dev musl musl-dev curl zlib-static\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nRUN /root/.cargo/bin/rustup target add $(uname -m)-unknown-linux-musl\n\nRUN wget https://github.com/libunwind/libunwind/releases/download/v1.3.1/libunwind-1.3.1.tar.gz && \\\n    tar -zxf libunwind-1.3.1.tar.gz && \\\n    cd libunwind-1.3.1/ && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-pic --disable-minidebuginfo --enable-ptrace --disable-tests --disable-documentation && make && make install && rm libunwind-1.3.1.tar.gz\n\nCOPY third_party/rustdeps /opt/rustdeps\n\nWORKDIR /opt/rustdeps\n\nRUN RUSTFLAGS=\"-L /lib -C target-feature=+crt-static\" /root/.cargo/bin/cargo build --release --target $(uname -m)-unknown-linux-musl\nRUN mv /opt/rustdeps/target/$(uname -m)-unknown-linux-musl/release/librustdeps.a /opt/rustdeps/librustdeps.a\n\n#        _\n#       | |\n#  _ __ | |__  _ __  ___ _ __  _   _\n# | '_ \\| '_ \\| '_ \\/ __| '_ \\| | | |\n# | |_) | | | | |_) \\__ \\ |_) | |_| |\n# | .__/|_| |_| .__/|___/ .__/ \\__, |\n# | |         | |       | |     __/ |\n# |_|         |_|       |_|    |___/\n\nFROM php:7.3-fpm-alpine3.13 as phpspy-builder\nRUN apk add --no-cache --update alpine-sdk\nCOPY Makefile Makefile\nRUN mkdir -p third_party/phpspy\nRUN make build-phpspy-dependencies\n\n#                     _\n#                    | |\n#   __ _ ___ ___  ___| |_ ___\n#  / _` / __/ __|/ _ \\ __/ __|\n# | (_| \\__ \\__ \\  __/ |_\\__ \\\n#  \\__,_|___/___/\\___|\\__|___/\n\nFROM node:14.17.6-alpine3.12 as js-builder\n\nRUN apk add --no-cache make\n\nWORKDIR /opt/pyroscope\n\nCOPY scripts ./scripts\nCOPY package.json yarn.lock Makefile lerna.json ./\nCOPY lib ./lib\nCOPY packages ./packages\nCOPY babel.config.js .eslintrc.js .eslintignore .prettierrc tsconfig.json ./\nCOPY webapp ./webapp\n\n# we only need the dependencies required to BUILD the application\nRUN --mount=type=cache,target=/usr/local/share/.cache/yarn/v6 make install-build-web-dependencies\n\n\nARG EXTRA_METADATA=\"\"\n\nRUN EXTRA_METADATA=$EXTRA_METADATA make assets-release\n\n#              _\n#             | |\n#   __ _  ___ | | __ _ _ __   __ _\n#  / _` |/ _ \\| |/ _` | '_ \\ / _` |\n# | (_| | (_) | | (_| | | | | (_| |\n#  \\__, |\\___/|_|\\__,_|_| |_|\\__, |\n#   __/ |                     __/ |\n#  |___/                     |___/\n\n# We build our own golang image because we need alpine 3.12 and go 1.17 is not available in alpine 3.12\n# The dockerfile we use is a copy of this one:\n#   https://github.com/docker-library/golang/blob/48e32c58a6abc052253fba899cea876740cab262/1.16/alpine3.14/Dockerfile\n# TODO: figure out why linking isn't working on alpine 3.13 or 3.14\n# see https://github.com/pyroscope-io/pyroscope/pull/372 for more context\nFROM pyroscope/golang:1.18.0-alpine3.12 AS go-builder\n\n\nRUN apk add --no-cache make git zstd gcc g++ libc-dev musl-dev bash\nRUN apk upgrade binutils\nRUN apk upgrade elfutils\n\nWORKDIR /opt/pyroscope\n\nRUN mkdir -p /opt/pyroscope/third_party/rustdeps/target/release\nCOPY --from=rust-builder /opt/rustdeps/librustdeps.a /opt/pyroscope/third_party/rustdeps/target/release/librustdeps.a\nCOPY third_party/rustdeps/rbspy.h /opt/pyroscope/third_party/rustdeps/rbspy.h\nCOPY third_party/rustdeps/pyspy.h /opt/pyroscope/third_party/rustdeps/pyspy.h\nCOPY third_party/phpspy/phpspy.h /opt/pyroscope/third_party/phpspy/phpspy.h\nCOPY --from=phpspy-builder /var/www/html/third_party/phpspy/libphpspy.a /opt/pyroscope/third_party/phpspy/libphpspy.a\nCOPY --from=js-builder /opt/pyroscope/webapp/public ./webapp/public\nCOPY Makefile ./\nCOPY tools ./tools\nCOPY go.mod go.sum ./\nRUN make install-dev-tools\nRUN make install-go-dependencies\n\nCOPY pkg ./pkg\nCOPY cmd ./cmd\nCOPY webapp/assets_embedded.go ./webapp/assets_embedded.go\nCOPY webapp/assets.go ./webapp/assets.go\nCOPY scripts ./scripts\n\n# Alpine's default stack size too small for pyspy, causing exec mode with pyspy to segfault.\n# See https://github.com/pyroscope-io/pyroscope/issues/503\nRUN EMBEDDED_ASSETS_DEPS=\"\" \\\n    CGO_LDFLAGS_ALLOW=\"-Wl,-z,stack-size=0x200000\" \\\n    EXTRA_LDFLAGS=\"-linkmode external -extldflags '-static -Wl,-z,stack-size=0x200000'\" \\\n    make build-release\n\n#      _        _   _        _ _ _\n#     | |      | | (_)      | (_) |\n#  ___| |_ __ _| |_ _  ___  | |_| |__  ___\n# / __| __/ _` | __| |/ __| | | | '_ \\/ __|\n# \\__ \\ || (_| | |_| | (__  | | | |_) \\__ \\\n# |___/\\__\\__,_|\\__|_|\\___| |_|_|_.__/|___/\n\n\nFROM go-builder AS go-libs-builder\n\nRUN make build-rbspy-static-library\nRUN make build-pyspy-static-library\nRUN make build-phpspy-static-library\n\nFROM scratch AS lib-exporter\n\nCOPY --from=go-libs-builder /opt/pyroscope/out/libpyroscope.phpspy.a /\nCOPY --from=go-libs-builder /opt/pyroscope/third_party/phpspy/libphpspy.a /\nCOPY --from=go-libs-builder /opt/pyroscope/out/libpyroscope.phpspy.h /\nCOPY --from=go-libs-builder /opt/pyroscope/out/libpyroscope.pyspy.a /\nCOPY --from=go-libs-builder /opt/pyroscope/out/libpyroscope.pyspy.h /\nCOPY --from=go-libs-builder /opt/pyroscope/out/libpyroscope.rbspy.a /\nCOPY --from=go-libs-builder /opt/pyroscope/out/libpyroscope.rbspy.h /\nCOPY --from=rust-builder /opt/rustdeps/librustdeps.a /\n\n\n#   __ _             _   _\n#  / _(_)           | | (_)\n# | |_ _ _ __   __ _| |  _ _ __ ___   __ _  __ _  ___\n# |  _| | '_ \\ / _` | | | | '_ ` _ \\ / _` |/ _` |/ _ \\\n# | | | | | | | (_| | | | | | | | | | (_| | (_| |  __/\n# |_| |_|_| |_|\\__,_|_| |_|_| |_| |_|\\__,_|\\__, |\\___|\n#                                           __/ |\n#                                          |___/\n\nFROM alpine:3.12\n\nLABEL maintainer=\"Pyroscope team <hello@pyroscope.io>\"\n\nWORKDIR /var/lib/pyroscope\n\nRUN apk add --no-cache ca-certificates bash tzdata openssl musl-utils\nRUN apk add --no-cache bcc-tools python3\nRUN ln -s $(which python3) /usr/bin/python\n\nRUN addgroup -S pyroscope && adduser -S pyroscope -G pyroscope\n\nRUN mkdir -p \\\n        \"/var/lib/pyroscope\" \\\n        \"/var/log/pyroscope\" \\\n        \"/etc/pyroscope\" \\\n        && \\\n    chown -R \"pyroscope:pyroscope\" \\\n        \"/var/lib/pyroscope\" \\\n        \"/var/log/pyroscope\" \\\n        \"/etc/pyroscope\" \\\n        && \\\n    chmod -R 777 \\\n        \"/var/lib/pyroscope\" \\\n        \"/var/log/pyroscope\" \\\n        \"/etc/pyroscope\"\n\nCOPY scripts/packages/server.yml \"/etc/pyroscope/server.yml\"\nCOPY --from=go-builder --chmod=0777 /opt/pyroscope/bin/pyroscope /usr/bin/pyroscope\n\nRUN apk add --no-cache bash-completion\nRUN pyroscope completion bash > /usr/share/bash-completion/completions/pyroscope\n\nUSER pyroscope\nEXPOSE 4040/tcp\nENTRYPOINT [ \"/usr/bin/pyroscope\" ]\n"
}