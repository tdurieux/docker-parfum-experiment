{
  "startTime": 1674218398218,
  "endTime": 1674218399758,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 103,
        "columnEnd": 130
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 44,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 44,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 44,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 44,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# This docker file builds a test image using binaries built locally.\n# Use `make docker-build-local` to build or `make localnet-start` to\n# start the test network and `make localnet-stop` to stop it.\n\n## Build provenance for x86_64\nFROM golang:1.17-buster as build-x86_64\nWORKDIR /go/src/github.com/provenance-io/provenance\nENV GOPRIVATE=github.com/provenance-io\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y libleveldb-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY client/ ./client/\nCOPY app/ ./app/\nCOPY go.* ./\nCOPY cmd/ ./cmd/\nCOPY internal/ ./internal/\nCOPY x/ ./x/\nCOPY vendor/ ./vendor/\n\n# Build the binaries\nRUN go build -mod vendor -tags=cleveldb -ldflags '-w -s -X github.com/cosmos/cosmos-sdk/version.Name=Provenance-Blockchain' -o /go/bin/ ./cmd/...\n\n## Run provenance for x86_64\nFROM debian:buster-slim as provenance-x86_64\nENV LOCALNET=1\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y curl jq libleveldb-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\n# Requires a mounted volume with the config in it.\nVOLUME [ \"/provenance\" ]\nWORKDIR /provenance\nEXPOSE 26656 26657 1317 9090\n\n# Source binaries from the build above\nCOPY --from=build-x86_64 /go/src/github.com/provenance-io/provenance/vendor/github.com/CosmWasm/wasmvm/api/libwasmvm.x86_64.so /usr/local/lib/\nCOPY --from=build-x86_64 /go/bin/provenanced /usr/bin/provenanced\n\nCOPY networks/local/blockchain-local/entrypoint.sh /usr/bin/entrypoint.sh\n\nSTOPSIGNAL SIGTERM\n\nENTRYPOINT [\"/usr/bin/entrypoint.sh\"]\nCMD [\"start\"]\n\n\n\n\n\n\n## Build provenance for ARM\nFROM golang:1.17-buster as build-arm64\nWORKDIR /go/src/github.com/provenance-io/provenance\nENV GOPRIVATE=github.com/provenance-io\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y libleveldb-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY client/ ./client/\nCOPY app/ ./app/\nCOPY go.* ./\nCOPY cmd/ ./cmd/\nCOPY internal/ ./internal/\nCOPY x/ ./x/\nCOPY vendor/ ./vendor/\n\n# Build and install librdkafka\nRUN git clone --depth 1 --branch v1.8.2 https://github.com/edenhill/librdkafka.git && cd librdkafka && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static && make && make install\n\n# Build the binaries\nRUN go build -mod vendor -tags=cleveldb,dynamic -ldflags '-w -s -X github.com/cosmos/cosmos-sdk/version.Name=Provenance-Blockchain' -o /go/bin/ ./cmd/...\n\n## Run provenance for ARM\nFROM debian:buster-slim as provenance-arm64\nENV LOCALNET=1\nENV LD_LIBRARY_PATH=\"/usr/local/lib\"\n# This is for M1 to find package config\nENV PKG_CONFIG_PATH=\"/usr/local/lib\"\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y curl jq libleveldb-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\n# Setup librdkafka\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y pkg-config && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build-arm64 /usr/local/include/librdkafka /usr/local/include/\nCOPY --from=build-arm64 /usr/local/lib/librdkafka* /usr/local/lib/\n\n# Requires a mounted volume with the config in it.\nVOLUME [ \"/provenance\" ]\nWORKDIR /provenance\nEXPOSE 26656 26657 1317 9090\n\n# Source binaries from the build above\nCOPY --from=build-arm64 /go/src/github.com/provenance-io/provenance/vendor/github.com/CosmWasm/wasmvm/api/libwasmvm.aarch64.so /usr/local/lib/\n\nCOPY --from=build-arm64 /go/bin/provenanced /usr/bin/provenanced\n\nCOPY networks/local/blockchain-local/entrypoint.sh /usr/bin/entrypoint.sh\n\nSTOPSIGNAL SIGTERM\n\nENTRYPOINT [\"/usr/bin/entrypoint.sh\"]\nCMD [\"start\"]\n"
}