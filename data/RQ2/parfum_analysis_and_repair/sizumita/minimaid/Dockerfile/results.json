{
  "startTime": 1674253136668,
  "endTime": 1674253137116,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghcr.io/sizumita/pynacl-docker:1.0.0\n#FROM ubuntu:18.04 as builder\n\nWORKDIR /var/speech\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential cmake git && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/sizumita/jtalkdll.git\n\nWORKDIR /var/speech/jtalkdll\n\nRUN bash build\n\n#COPY --from=builder /usr/local/lib/libjtalk.so /usr/local/lib\n#COPY --from=builder /usr/local/include/jtalk.h /usr/local/include\n#COPY --from=builder /usr/local/OpenJTalk/dic_utf_8 /usr/local/OpenJTalk/dic_utf_8\n#COPY --from=builder /usr/local/OpenJTalk/voice /usr/local/OpenJTalk/voice\n\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN pip install --no-cache-dir numpy\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    opus-tools mpg123 \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /bot\n\nCOPY requirements.txt /bot\n\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY lameenc.sh /bot\n\nRUN bash lameenc.sh\n\nCOPY bot.py /bot\nCOPY main.py /bot\nCOPY cogs /bot/cogs\nCOPY lib /bot/lib\nCOPY dic.json /bot\nCOPY alembic.ini /bot\nCOPY alembic /bot/alembic\nCOPY run.sh /bot\nCOPY heroku_entrypoint.sh /bot\n\nCMD [\"bash\", \"run.sh\"]\n"
}