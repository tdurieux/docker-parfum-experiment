diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/swiftytesseract/swiftytesseract/Examples/VaporExample/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/swiftytesseract/swiftytesseract/Examples/VaporExample/Dockerfile/repaired.Dockerfile
index e6c6728..7b5d700 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/swiftytesseract/swiftytesseract/Examples/VaporExample/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/swiftytesseract/swiftytesseract/Examples/VaporExample/Dockerfile/repaired.Dockerfile
@@ -5,8 +5,8 @@ FROM swiftlang/swift:nightly-focal as build
 WORKDIR /build
 
 RUN apt-get update && \
-    apt-get install -yq libtesseract-dev libleptonica-dev && \
-    mkdir -p /usr/src/swiftytesseract
+    apt-get install --no-install-recommends -yq libtesseract-dev libleptonica-dev && \
+    mkdir -p /usr/src/swiftytesseract && rm -rf /usr/src/swiftytesseract && rm -rf /var/lib/apt/lists/*;
 
 # First just resolve dependencies.
 # This creates a cached layer that can be reused
@@ -27,8 +27,8 @@ RUN swift build --enable-test-discovery -c release
 FROM swiftlang/swift:nightly-focal
 
 RUN apt-get update && \
-    apt-get install -yq libtesseract-dev libleptonica-dev && \
-    mkdir -p /usr/src/swiftytesseract
+    apt-get install --no-install-recommends -yq libtesseract-dev libleptonica-dev && \
+    mkdir -p /usr/src/swiftytesseract && rm -rf /usr/src/swiftytesseract && rm -rf /var/lib/apt/lists/*;
 
 # Create a vapor user and group with /app as its home directory
 RUN useradd --user-group --create-home --system --skel /dev/null --home-dir /app vapor
@@ -47,6 +47,6 @@ USER vapor:vapor
 # Let Docker bind to port 8080
 EXPOSE 8080
 
-# Start the Vapor service when the image is run, default to listening on 8080 in production environment 
+# Start the Vapor service when the image is run, default to listening on 8080 in production environment
 ENTRYPOINT ["./Run"]
 CMD ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]