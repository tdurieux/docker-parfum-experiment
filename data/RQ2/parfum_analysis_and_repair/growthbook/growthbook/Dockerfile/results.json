{
  "startTime": 1674220082258,
  "endTime": 1674220083320,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 50
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 75,
        "columnEnd": 91
      }
    }
  ],
  "repairedDockerfile": "# Build the python gbstats package\nFROM python:3.9-slim AS pybuild\nWORKDIR /usr/local/src/app\nCOPY ./packages/stats .\nRUN \\\n  pip3 install --no-cache-dir poetry \\\n  && poetry install --no-root --no-dev --no-interaction --no-ansi \\\n  && poetry build\n\n\n# Build the nodejs app\nFROM node:14-slim AS nodebuild\nWORKDIR /usr/local/src/app\nCOPY packages ./packages\nCOPY package.json ./package.json\nCOPY yarn.lock ./yarn.lock\nRUN \\\n\n  yarn install --frozen-lockfile --ignore-optional \\\n  # Build the app\n  && yarn build \\\n  # Then do a clean install with only production dependencies\n  && rm -rf node_modules \\\n  && rm -rf packages/back-end/node_modules \\\n  && rm -rf packages/front-end/node_modules \\\n  && rm -rf packages/front-end/.next/cache \\\n  && yarn install --frozen-lockfile --production=true --ignore-optional && yarn cache clean;\n\n\n# Package the full app together\nFROM python:3.9-slim\nWORKDIR /usr/local/src/app\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y wget gnupg2 && \\\n  echo \"deb https://deb.nodesource.com/node_14.x buster main\" > /etc/apt/sources.list.d/nodesource.list && \\\n  wget -qO- https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n  echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list && \\\n  wget -qO- https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -yqq nodejs=$(apt-cache show nodejs|grep Version|grep nodesource|cut -c 10-) yarn && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir \\\n    nbformat \\\n    numpy \\\n    pandas \\\n    scipy \\\n  && rm -rf /root/.cache/pip\nCOPY --from=nodebuild /usr/local/src/app/packages ./packages\nCOPY --from=nodebuild /usr/local/src/app/node_modules ./node_modules\nCOPY --from=nodebuild /usr/local/src/app/package.json ./package.json\nCOPY buildinfo ./buildinfo\nCOPY --from=pybuild /usr/local/src/app/dist /usr/local/src/gbstats\nRUN pip3 install --no-cache-dir /usr/local/src/gbstats/*.whl\n# The front-end app (NextJS)\nEXPOSE 3000\n# The back-end api (Express)\nEXPOSE 3100\n# Start both front-end and back-end at once\nCMD [\"yarn\",\"start\"]\n"
}