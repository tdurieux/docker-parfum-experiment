diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/growthbook/growthbook/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/growthbook/growthbook/Dockerfile/repaired.Dockerfile
index b65f049..f5b1f4a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/growthbook/growthbook/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/growthbook/growthbook/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@ FROM python:3.9-slim AS pybuild
 WORKDIR /usr/local/src/app
 COPY ./packages/stats .
 RUN \
-  pip3 install poetry \
+  pip3 install --no-cache-dir poetry \
   && poetry install --no-root --no-dev --no-interaction --no-ansi \
   && poetry build
 
@@ -15,7 +15,7 @@ COPY packages ./packages
 COPY package.json ./package.json
 COPY yarn.lock ./yarn.lock
 RUN \
-  # Install app with dev dependencies
+
   yarn install --frozen-lockfile --ignore-optional \
   # Build the app
   && yarn build \
@@ -24,23 +24,23 @@ RUN \
   && rm -rf packages/back-end/node_modules \
   && rm -rf packages/front-end/node_modules \
   && rm -rf packages/front-end/.next/cache \
-  && yarn install --frozen-lockfile --production=true --ignore-optional
+  && yarn install --frozen-lockfile --production=true --ignore-optional && yarn cache clean;
 
 
 # Package the full app together
 FROM python:3.9-slim
 WORKDIR /usr/local/src/app
 RUN apt-get update && \
-  apt-get install -y wget gnupg2 && \
+  apt-get install --no-install-recommends -y wget gnupg2 && \
   echo "deb https://deb.nodesource.com/node_14.x buster main" > /etc/apt/sources.list.d/nodesource.list && \
   wget -qO- https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \
   echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list && \
   wget -qO- https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
   apt-get update && \
-  apt-get install -yqq nodejs=$(apt-cache show nodejs|grep Version|grep nodesource|cut -c 10-) yarn && \
+  apt-get install --no-install-recommends -yqq nodejs=$(apt-cache show nodejs|grep Version|grep nodesource|cut -c 10-) yarn && \
   apt-get clean && \
   rm -rf /var/lib/apt/lists/*
-RUN pip3 install \
+RUN pip3 install --no-cache-dir \
     nbformat \
     numpy \
     pandas \
@@ -51,7 +51,7 @@ COPY --from=nodebuild /usr/local/src/app/node_modules ./node_modules
 COPY --from=nodebuild /usr/local/src/app/package.json ./package.json
 COPY buildinfo ./buildinfo
 COPY --from=pybuild /usr/local/src/app/dist /usr/local/src/gbstats
-RUN pip3 install /usr/local/src/gbstats/*.whl
+RUN pip3 install --no-cache-dir /usr/local/src/gbstats/*.whl
 # The front-end app (NextJS)
 EXPOSE 3000
 # The back-end api (Express)