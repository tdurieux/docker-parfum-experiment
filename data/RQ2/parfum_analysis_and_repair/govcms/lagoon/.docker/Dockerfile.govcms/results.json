{
  "startTime": 1674253315518,
  "endTime": 1674253316334,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 121
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG LAGOON_IMAGE_VERSION\n\nFROM uselagoon/php-8.1-cli-drupal:${LAGOON_IMAGE_VERSION} as builder\n\nARG GOVCMS_PROJECT_VERSION\nARG COMPOSER_AUTH\nARG GITHUB_TOKEN\n\nCOPY composer.* /app/\n\n# Copy base file for extensible saas.\nCOPY custom /app/custom\n\n# Install yq for YAML parsing.\nRUN case $(uname -m) in x86_64)  ARCH=\"amd64\" ;; aarch64) ARCH=\"arm64\" ;; *) ARCH=\"amd64\" ;; esac \\\n  && wget -O /usr/local/bin/yq \"https://github.com/mikefarah/yq/releases/download/2.4.0/yq_linux_${ARCH}\" \\\n  && chmod +x /usr/local/bin/yq\n\n# Install jq for YAML/JSON parsing.\nRUN apk add --no-cache jq\n\nRUN sed -i -e \"/govcms\\/govcms/ s!2.x-dev!${GOVCMS_PROJECT_VERSION}!\" /app/composer.json\n\nCOPY scripts/composer/ScriptHandler.php /app/scripts/composer/ScriptHandler.php\n\nENV COMPOSER_MEMORY_LIMIT=-1\n# Set the Github OAuth token only when the variable is set.\nRUN [[ ! -z \"${GITHUB_TOKEN}\" ]]  && composer config -g github-oauth.github.com ${GITHUB_TOKEN} || echo \"Personal Github OAuth token is not set.\"\nRUN composer validate \\\n    && composer self-update --2 \\\n    && composer update -d /app \\\n    && composer clearcache\n\nCOPY .docker/sanitize.sh /app/sanitize.sh\n\nCOPY .docker/images/govcms/scripts /usr/bin/\nRUN chmod 755 /usr/bin/govcms-deploy\nCOPY .docker/images/govcms/govcms.site.yml /app/drush/sites/\n\n# Ensure MySQL client can accept server max_allowed_packet\nCOPY .docker/images/govcms/mariadb-client.cnf /etc/my.cnf.d\n\nRUN mkdir -p /app/web/sites/default/files/private \\\n    && fix-permissions /home/.drush \\\n    && fix-permissions /app/drush/sites \\\n    && fix-permissions /etc/my.cnf.d \\\n    && chmod +x /app/sanitize.sh \\\n    && /app/sanitize.sh \\\n    && rm -f /app/sanitize.sh\n\nCOPY modules/ /app/web/sites/all/modules/\n\n# Install the R3 intermediary for LE.\nRUN mkdir -p /usr/share/ca-certificates/letsencrypt \\\n  && curl -f -o /usr/share/ca-certificates/letsencrypt/lets-encrypt-r3.crt https://letsencrypt.org/certs/lets-encrypt-r3.pem \\\n  && echo -e \"\\nletsencrypt/lets-encrypt-r3.crt\" >> /etc/ca-certificates.conf \\\n  && update-ca-certificates\n\n# Define where the Drupal Root is located\nENV WEBROOT=web\n"
}