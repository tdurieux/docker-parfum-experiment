{
  "startTime": 1674219776416,
  "endTime": 1674219777375,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7\nMAINTAINER Fredrik Blomqvist <fredrik.blomqvist.95@gmail.com>\n\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get update && apt-get install --no-install-recommends -y nginx supervisor nodejs npm && rm -rf /var/lib/apt/lists/*;\n\n# Add the code\nRUN mkdir /code\nCOPY steamworkshopdownloader /code/steamworkshopdownloader\nCOPY less /code/less\nCOPY javascript /code/javascript\nCOPY requirements.txt /code/requirements.txt\nCOPY package.json /code/package.json\nCOPY Gruntfile.js /code/Gruntfile.js\nCOPY docker/gunicorn.py /code/gunicorn.py\n\n# Add the tests\nCOPY tests /code/tests\n\nRUN npm install grunt && npm cache clean --force;\nRUN npm install -g grunt-cli && npm cache clean --force;\nRUN pip install --no-cache-dir gunicorn\nRUN pip install --no-cache-dir -r /code/requirements.txt\n\nWORKDIR /code\nRUN npm install && npm cache clean --force;\n\n# Generate the static files\nRUN grunt production\n\nWORKDIR /\n\n# Setup nginx\nRUN rm /etc/nginx/sites-enabled/default\nCOPY docker/flask.conf /etc/nginx/sites-available/\nRUN ln -s /etc/nginx/sites-available/flask.conf /etc/nginx/sites-enabled/flask.conf\nRUN echo \"daemon off;\" >> /etc/nginx/nginx.conf\n\n# Setup supervisord\nRUN mkdir -p /var/log/supervisor\nCOPY docker/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCOPY docker/gunicorn.conf /etc/supervisor/conf.d/gunicorn.conf\n\nEXPOSE 80\n\n# Start processes\nCMD [\"/usr/bin/supervisord\"]\n"
}