{
  "startTime": 1674253181859,
  "endTime": 1674253182920,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-buster\n\nARG SAIGE_VERSION=0.35.8.3\nARG HTSLIB_VERSION=1.9\nARG EPACTS_VERSION=3.4.2\n\n# install general dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    apache2 \\\n    autoconf \\\n    autotools-dev \\\n    build-essential \\\n    cmake \\\n    curl \\\n    default-mysql-client \\\n    default-libmysqlclient-dev \\\n    ghostscript \\\n    git \\\n    gnuplot \\\n    groff \\\n    libapache2-mod-wsgi-py3 \\\n    libssl-dev \\\n    r-recommended \\\n    slurm-client \\\n    zlibc \\\n && rm -rf /var/lib/apt/lists/*\n\n# install saige\nRUN wget https://github.com/weizhouUMICH/SAIGE/releases/download/v${SAIGE_VERSION}/SAIGE_${SAIGE_VERSION}_R_x86_64-pc-linux-gnu.tar.gz \\\n    -O /tmp/saige.tar.gz \\\n && R CMD INSTALL /tmp/saige.tar.gz \\\n && rm /tmp/saige.tar.gz\n\n# install tabix\nRUN wget https://github.com/samtools/htslib/releases/download/${HTSLIB_VERSION}/htslib-${HTSLIB_VERSION}.tar.bz2 \\\n    -O /tmp/htslib.tar.bz2 \\\n && tar -jxvf /tmp/htslib.tar.bz2 -C /tmp/ \\\n && cd /tmp/htslib-${HTSLIB_VERSION} \\\n && autoheader \\\n && autoconf \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make \\\n && make install \\\n  && rm -rf /tmp/htslib.tar.bz2 /tmp/htslib-${HTSLIB_VERSION}\n\n # install EPACTS\nRUN wget https://github.com/statgen/EPACTS/archive/v${EPACTS_VERSION}.tar.gz \\\n    -O /tmp/epacts.tar.gz \\\n && tar -xvf /tmp/epacts.tar.gz -C /tmp/ \\\n && cd /tmp/EPACTS-${EPACTS_VERSION} \\\n && pip install --no-cache-dir cget \\\n && cget install -DCMAKE_C_FLAGS=\"-fPIC\" -DCMAKE_CXX_FLAGS=\"-fPIC\" -f requirements.txt \\\n && mkdir -p /tmp/EPACTS-${EPACTS_VERSION}/build \\\n && cd /tmp/EPACTS-${EPACTS_VERSION}/build/ \\\n && cmake -DCMAKE_TOOLCHAIN_FILE=../cget/cget/cget.cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make \\\n && make install \\\n && rm -rf /tmp/epacts.tar.gz /tmp/EPACTS-${EPACTS_VERSION}\n\n\nCOPY . /srv/encore\n\nRUN mkdir /srv/encore/build\n\nWORKDIR /srv/encore/build\n\nRUN cmake -DCMAKE_BUILD_TYPE=Release .. \\\n && make\n\nWORKDIR /srv/encore\n\nRUN pip install --no-cache-dir -r requirements.txt \\\n && ln -s /srv/encore/encore.conf.example /etc/apache2/sites-enabled/encore.conf\n\nEXPOSE 80/tcp\nEXPOSE 443/tcp\n\nCMD [ \"/bin/bash\", \"-c\", \"rm -f /var/run/apache2/* && apache2ctl -D FOREGROUND\" ]\n"
}