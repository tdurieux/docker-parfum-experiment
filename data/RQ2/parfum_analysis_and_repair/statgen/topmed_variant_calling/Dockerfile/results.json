{
  "startTime": 1674250690945,
  "endTime": 1674250692316,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 41,
        "columnEnd": 115
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 57,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 61,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 55,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 75,
        "columnEnd": 86
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nCOPY . /topmed_variant_calling\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  apt-utils \\\n  automake \\\n  autoconf \\\n  build-essential \\\n  git \\\n  ghostscript \\\n  gnuplot \\\n  groff \\\n  libcurl4-openssl-dev \\\n  liblzma-dev \\\n  libncurses5-dev \\\n  libssl-dev \\\n  libzstd-dev \\\n  python3 \\\n  r-base \\\n  unzip \\\n  wget \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /tmp/plink && cd /tmp/plink && wget https://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20190617.zip && unzip plink_linux_x86_64_20190617.zip && cp plink /usr/local/bin/plink-1.9\n\nWORKDIR /topmed_variant_calling\nRUN rm -r /tmp/plink\n\nRUN git submodule init && git submodule update\n\nRUN cd libsvm/ && git clean -fdx && make && cd ..\nRUN cd apigenome && git clean -fdx && autoreconf -vfi && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix $PWD && make && make install && cd ..\nRUN cd libStatGen && git clean -fdx && make && cd ..\nRUN cd bamUtil && git clean -fdx && make && cd ..\nRUN cd invNorm && git clean -fdx && make && cd ..\nRUN cd htslib && git clean -fdx && autoheader && autoconf && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && cd ..\nRUN cd vt-topmed && git clean -fdx && make && cd ..\nRUN cd cramore && git clean -fdx && autoreconf -vfi && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && cd ..\nRUN cd samtools && git clean -fdx && autoheader && autoconf -Wno-syntax && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && cd ..\nRUN cd bcftools && git clean -fdx && make && cd ..\nRUN cd king && rm -f king *.o && g++ -O3 -c *.cpp && g++ -O3 -o king *.o -lz && cd ..\n\n"
}