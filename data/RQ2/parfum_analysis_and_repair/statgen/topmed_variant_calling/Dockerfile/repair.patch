diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/statgen/topmed_variant_calling/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/statgen/topmed_variant_calling/Dockerfile/repaired.Dockerfile
index c91bb5f..f31417a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/statgen/topmed_variant_calling/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/statgen/topmed_variant_calling/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM ubuntu:16.04
 
 COPY . /topmed_variant_calling
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   apt-utils \
   automake \
   autoconf \
@@ -20,24 +20,24 @@ RUN apt-get update && apt-get install -y \
   r-base \
   unzip \
   wget \
-  zlib1g-dev
+  zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
-RUN mkdir /tmp/plink && cd /tmp/plink && wget http://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20190617.zip && unzip plink_linux_x86_64_20190617.zip && cp plink /usr/local/bin/plink-1.9
+RUN mkdir /tmp/plink && cd /tmp/plink && wget https://s3.amazonaws.com/plink1-assets/plink_linux_x86_64_20190617.zip && unzip plink_linux_x86_64_20190617.zip && cp plink /usr/local/bin/plink-1.9
 
 WORKDIR /topmed_variant_calling
 RUN rm -r /tmp/plink
 
-RUN git submodule init && git submodule update 
+RUN git submodule init && git submodule update
 
 RUN cd libsvm/ && git clean -fdx && make && cd ..
-RUN cd apigenome && git clean -fdx && autoreconf -vfi && ./configure --prefix $PWD && make && make install && cd ..
+RUN cd apigenome && git clean -fdx && autoreconf -vfi && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix $PWD && make && make install && cd ..
 RUN cd libStatGen && git clean -fdx && make && cd ..
 RUN cd bamUtil && git clean -fdx && make && cd ..
 RUN cd invNorm && git clean -fdx && make && cd ..
-RUN cd htslib && git clean -fdx && autoheader && autoconf && ./configure && make && cd ..
+RUN cd htslib && git clean -fdx && autoheader && autoconf && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && cd ..
 RUN cd vt-topmed && git clean -fdx && make && cd ..
-RUN cd cramore && git clean -fdx && autoreconf -vfi && ./configure && make && cd ..
-RUN cd samtools && git clean -fdx && autoheader && autoconf -Wno-syntax && ./configure && make && cd ..
+RUN cd cramore && git clean -fdx && autoreconf -vfi && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && cd ..
+RUN cd samtools && git clean -fdx && autoheader && autoconf -Wno-syntax && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && cd ..
 RUN cd bcftools && git clean -fdx && make && cd ..
 RUN cd king && rm -f king *.o && g++ -O3 -c *.cpp && g++ -O3 -o king *.o -lz && cd ..