{
  "startTime": 1674252585933,
  "endTime": 1674252586721,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 60,
        "columnEnd": 92
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nARG KAFKA_VERSION=2.1.1\n\nENV KAFKA_HOME /kafka\n\nENV KAFKA_LOGS_DIR=\"/kafka-logs\"\nENV _JAVA_OPTIONS \"-Djava.net.preferIPv4Stack=true\"\nENV TERM=linux\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl openjdk-8-jre-headless netcat dnsutils && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p ${KAFKA_LOGS_DIR} && mkdir -p ${KAFKA_HOME} && curl -f -s -o $INSTALL_DIR/kafka.tgz \\\n    \"https://archive.apache.org/dist/kafka/${KAFKA_VERSION}/kafka_2.11-${KAFKA_VERSION}.tgz\" && \\\n    tar xzf ${INSTALL_DIR}/kafka.tgz -C ${KAFKA_HOME} --strip-components 1 && rm ${INSTALL_DIR}/kafka.tgz\n\nADD run.sh /run.sh\nADD healthcheck.sh /healthcheck.sh\n\nEXPOSE 9092\nEXPOSE 2181\n\n# Healthcheck creates an empty topic foo. As soon as a topic is created, it assumes broke is available\nHEALTHCHECK --interval=1s --retries=90 CMD /healthcheck.sh\n\nENTRYPOINT [\"/run.sh\"]\n"
}