{
  "startTime": 1674253688284,
  "endTime": 1674253690827,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 254,
        "lineEnd": 254,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 307,
        "lineEnd": 311,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 328,
        "lineEnd": 343,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye as compile-lkd\nMAINTAINER Marios Andreopoulos <marios@landoop.com>\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n         unzip \\\n         wget \\\n\t\tfile \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && echo \"progress = dot:giga\" | tee /etc/wgetrc \\\n    && mkdir -p /mnt /opt /data \\\n    && wget https://github.com/andmarios/duphard/releases/download/v1.0/duphard -O /bin/duphard \\\n    && chmod +x /bin/duphard\n\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /\n\n# Login args for development archives\nARG DEVARCH_USER\nARG DEVARCH_PASS\nARG ARCHIVE_SERVER=https://archive.lenses.io\nARG LKD_VERSION=2.6.2-L0\n\n############\n# Add kafka/\n############\n\n# Add Apache Kafka (includes Connect and Zookeeper)\nARG KAFKA_VERSION=2.6.2\nARG KAFKA_LVERSION=\"${KAFKA_VERSION}-L0\"\nARG KAFKA_URL=\"${ARCHIVE_SERVER}/lkd/packages/kafka/kafka-2.13-${KAFKA_LVERSION}-lkd.tar.gz\"\n\nRUN wget $DEVARCH_USER $DEVARCH_PASS \"$KAFKA_URL\" -O /opt/kafka.tar.gz \\\n    && tar --no-same-owner -xzf /opt/kafka.tar.gz -C /opt \\\n    && mkdir /opt/landoop/kafka/logs && chmod 1777 /opt/landoop/kafka/logs \\\n    && rm -rf /opt/kafka.tar.gz\n\n# Add Schema Registry and REST Proxy\nARG REGISTRY_VERSION=6.0.2-lkd-r0\nARG REGISTRY_URL=\"${ARCHIVE_SERVER}/lkd/packages/schema-registry/schema-registry-${REGISTRY_VERSION}.tar.gz\"\nRUN wget $DEVARCH_USER $DEVARCH_PASS \"$REGISTRY_URL\" -O /opt/registry.tar.gz \\\n    && tar --no-same-owner -xzf /opt/registry.tar.gz -C /opt/ \\\n    && rm -rf /opt/registry.tar.gz\n\nARG REST_VERSION=6.0.2-lkd-r0\nARG REST_URL=\"${ARCHIVE_SERVER}/lkd/packages/rest-proxy/rest-proxy-${REST_VERSION}.tar.gz\"\nRUN wget $DEVARCH_USER $DEVARCH_PASS \"$REST_URL\" -O /opt/rest.tar.gz \\\n    && tar --no-same-owner -xzf /opt/rest.tar.gz -C /opt/ \\\n    && rm -rf /opt/rest.tar.gz\n\n# Configure Connect and Confluent Components to support CORS\nRUN echo -e 'access.control.allow.methods=GET,POST,PUT,DELETE,OPTIONS\\naccess.control.allow.origin=*' \\\n         | tee -a /opt/landoop/kafka/etc/schema-registry/schema-registry.properties \\\n         | tee -a /opt/landoop/kafka/etc/kafka-rest/kafka-rest.properties \\\n         | tee -a /opt/landoop/kafka/etc/schema-registry/connect-avro-distributed.properties\n\n\n#################\n# Add connectors/\n#################\n\n# Add Stream Reactor and needed components\nARG STREAM_REACTOR_VERSION=2.1.3\nARG KAFKA_VERSION_4SR=2.5.0\nARG STREAM_REACTOR_URL=\"https://archive.lenses.io/lkd/packages/connectors/stream-reactor/stream-reactor-${STREAM_REACTOR_VERSION}_connect${KAFKA_VERSION_4SR}.tar.gz\"\nARG ACTIVEMQ_VERSION=5.12.3\n\nRUN wget $DEVARCH_USER $DEVARCH_PASS \"${STREAM_REACTOR_URL}\" -O /stream-reactor.tar.gz \\\n    && mkdir -p /opt/landoop/connectors/stream-reactor \\\n    && tar -xf /stream-reactor.tar.gz \\\n           --no-same-owner \\\n           --strip-components=1 \\\n           -C /opt/landoop/connectors/stream-reactor \\\n    && rm /stream-reactor.tar.gz \\\n    && rm -rf /opt/landoop/connectors/stream-reactor/kafka-connect-hive-1.1 \\\n    && wget https://repo1.maven.org/maven2/org/apache/activemq/activemq-all/${ACTIVEMQ_VERSION}/activemq-all-${ACTIVEMQ_VERSION}.jar \\\n            -P /opt/landoop/connectors/stream-reactor/kafka-connect-jms \\\n    && mkdir -p /opt/landoop/kafka/share/java/landoop-common \\\n    && export _NUM_CONNECTORS=$(ls /opt/landoop/connectors/stream-reactor | wc -l) \\\n    && for file in $(find /opt/landoop/connectors/stream-reactor -maxdepth 2 -type f -exec basename {} \\; | grep -Ev \"scala-logging|kafka-connect-common|scala-\" | sort | uniq -c | grep -E \"^\\s+${_NUM_CONNECTORS} \" | awk '{print $2}' ); do \\\n         cp /opt/landoop/connectors/stream-reactor/kafka-connect-aws-s3/$file /opt/landoop/kafka/share/java/landoop-common/; \\\n         rm -f /opt/landoop/connectors/stream-reactor/kafka-connect-*/$file; \\\n       done \\\n    && for file in $(find /opt/landoop/kafka/share/java/{kafka,landoop-common} -maxdepth 1 -type f -exec basename {} \\; | sort | uniq -c | grep -E \"^\\s+2 \" | awk '{print $2}' ); do \\\n         echo \"Removing duplicate /opt/landoop/kafka/share/java/landoop-common/$file.\"; \\\n         rm -f /opt/landoop/kafka/share/java/landoop-common/$file; \\\n       done \\\n    && rm -f /opt/landoop/connectors/stream-reactor/*/*{javadoc,scaladoc,sources}.jar \\\n    && echo \"plugin.path=/opt/landoop/connectors/stream-reactor,/opt/landoop/connectors/third-party\" \\\n            >> /opt/landoop/kafka/etc/schema-registry/connect-avro-distributed.properties \\\n    && rm -rf /opt/landoop/connectors/stream-reactor/kafka-connect-{elastic6,elastic7,hive} # Temporary mitigation for log4shell (removing connectors with offending libs)\n\n# Add Secrets Provider\nARG SECRET_PROVIDER_VERSION=2.1.6\nARG SECRET_PROVIDER_URL=\"https://github.com/lensesio/secret-provider/releases/download/${SECRET_PROVIDER_VERSION}/secret-provider-${SECRET_PROVIDER_VERSION}-all.jar\"\nRUN mkdir -p /opt/landoop/connectors/stream-reactor/kafka-connect-secret-provider \\\n    && wget \"${SECRET_PROVIDER_URL}\" -P \"/opt/landoop/connectors/stream-reactor/kafka-connect-secret-provider\"\n\n# Add Third Party Connectors\n\n## Twitter\nARG TWITTER_CONNECTOR_URL=\"https://archive.lenses.io/third-party/kafka-connect-twitter/kafka-connect-twitter-0.1-master-33331ea-connect-1.0.0-jar-with-dependencies.jar\"\nRUN mkdir -p /opt/landoop/connectors/third-party/kafka-connect-twitter \\\n    && wget \"$TWITTER_CONNECTOR_URL\" -P /opt/landoop/connectors/third-party/kafka-connect-twitter\n\n## Kafka Connect JDBC\nARG KAFKA_CONNECT_JDBC_VERSION=10.0.2-lkd-r0\nARG KAFKA_CONNECT_JDBC_URL=\"${ARCHIVE_SERVER}/lkd/packages/connectors/third-party/kafka-connect-jdbc/kafka-connect-jdbc-${KAFKA_CONNECT_JDBC_VERSION}.tar.gz\"\nRUN wget $DEVARCH_USER $DEVARCH_PASS \"$KAFKA_CONNECT_JDBC_URL\" \\\n         -O /opt/kafka-connect-jdbc.tar.gz \\\n    && mkdir -p /opt/landoop/connectors/third-party/ \\\n    && tar --no-same-owner -xf /opt/kafka-connect-jdbc.tar.gz \\\n           -C /opt/landoop/connectors/third-party/ \\\n    && rm -rf /opt/kafka-connect-jdbc.tar.gz\n\n## Kafka Connect ELASTICSEARCH\nARG KAFKA_CONNECT_ELASTICSEARCH_VERSION=10.0.2-lkd-r0\nARG KAFKA_CONNECT_ELASTICSEARCH_URL=\"${ARCHIVE_SERVER}/lkd/packages/connectors/third-party/kafka-connect-elasticsearch/kafka-connect-elasticsearch-${KAFKA_CONNECT_ELASTICSEARCH_VERSION}.tar.gz\"\nRUN wget $DEVARCH_USER $DEVARCH_PASS \"$KAFKA_CONNECT_ELASTICSEARCH_URL\" \\\n         -O /opt/kafka-connect-elasticsearch.tar.gz \\\n    && mkdir -p /opt/landoop/connectors/third-party/ \\\n    && tar --no-same-owner -xf /opt/kafka-connect-elasticsearch.tar.gz \\\n           -C /opt/landoop/connectors/third-party/ \\\n    && rm -rf /opt/kafka-connect-elasticsearch.tar.gz\n\n## Kafka Connect HDFS\n# Disable until CVE-2021-44228 is addressed\n# ARG KAFKA_CONNECT_HDFS_VERSION=10.0.2-lkd-r0\n# ARG KAFKA_CONNECT_HDFS_URL=\"${ARCHIVE_SERVER}/lkd/packages/connectors/third-party/kafka-connect-hdfs/kafka-connect-hdfs-${KAFKA_CONNECT_HDFS_VERSION}.tar.gz\"\n# RUN wget $DEVARCH_USER $DEVARCH_PASS \"$KAFKA_CONNECT_HDFS_URL\" \\\n#          -O /opt/kafka-connect-hdfs.tar.gz \\\n#     && mkdir -p /opt/landoop/connectors/third-party/ \\\n#     && tar --no-same-owner -xf /opt/kafka-connect-hdfs.tar.gz \\\n#            -C /opt/landoop/connectors/third-party/ \\\n#     && rm -rf /opt/kafka-connect-hdfs.tar.gz\n\n# Kafka Connect S3\nARG KAFKA_CONNECT_S3_VERSION=10.0.0-lkd-r0\nARG KAFKA_CONNECT_S3_URL=\"${ARCHIVE_SERVER}/lkd/packages/connectors/third-party/kafka-connect-s3/kafka-connect-s3-${KAFKA_CONNECT_S3_VERSION}.tar.gz\"\nRUN wget $DEVARCH_USER $DEVARCH_PASS \"$KAFKA_CONNECT_S3_URL\" \\\n         -O /opt/kafka-connect-s3.tar.gz \\\n    && mkdir -p /opt/landoop/connectors/third-party/ \\\n    && tar --no-same-owner -xf /opt/kafka-connect-s3.tar.gz \\\n           -C /opt/landoop/connectors/third-party/ \\\n    && rm -rf /opt/kafka-connect-s3.tar.gz\n\n# Kafka Connect Couchbase\nARG KAFKA_CONNECT_COUCHBASE_VERSION=3.2.2\nARG KAFKA_CONNECT_COUCHBASE_URL=\"http://packages.couchbase.com/clients/kafka/${KAFKA_CONNECT_COUCHBASE_VERSION}/kafka-connect-couchbase-${KAFKA_CONNECT_COUCHBASE_VERSION}.zip\"\nRUN wget $DEVARCH_USER $DEVARCH_PASS \"$KAFKA_CONNECT_COUCHBASE_URL\" \\\n         -O /couchbase.zip \\\n    && mkdir -p /couchbase /opt/landoop/connectors/third-party/kafka-connect-couchbase \\\n    && unzip /couchbase.zip -d /couchbase \\\n    && cp -ax /couchbase/kafka-connect-couchbase-${KAFKA_CONNECT_COUCHBASE_VERSION}/* \\\n          /opt/landoop/connectors/third-party/kafka-connect-couchbase \\\n    && chown -R root:root /opt/landoop/connectors/third-party/kafka-connect-couchbase \\\n    && rm -rf /couchbase.zip /couchbase\n\n# Kafka Connect Debezium MongoDB / MySQL / Postgres / MsSQL\nARG KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION=1.0.1.Final\nARG KAFKA_CONNECT_DEBEZIUM_MONGODB_URL=\"https://search.maven.org/remotecontent?filepath=io/debezium/debezium-connector-mongodb/${KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION}/debezium-connector-mongodb-${KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION}-plugin.tar.gz\"\nARG KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION=1.0.1.Final\nARG KAFKA_CONNECT_DEBEZIUM_MYSQL_URL=\"https://search.maven.org/remotecontent?filepath=io/debezium/debezium-connector-mysql/${KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION}/debezium-connector-mysql-${KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION}-plugin.tar.gz\"\nARG KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION=1.0.1.Final\nARG KAFKA_CONNECT_DEBEZIUM_POSTGRES_URL=\"https://search.maven.org/remotecontent?filepath=io/debezium/debezium-connector-postgres/${KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION}/debezium-connector-postgres-${KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION}-plugin.tar.gz\"\nARG KAFKA_CONNECT_DEBEZIUM_SQLSERVER_VERSION=1.0.1.Final\nARG KAFKA_CONNECT_DEBEZIUM_SQLSERVER_URL=\"https://search.maven.org/remotecontent?filepath=io/debezium/debezium-connector-sqlserver/${KAFKA_CONNECT_DEBEZIUM_SQLSERVER_VERSION}/debezium-connector-sqlserver-${KAFKA_CONNECT_DEBEZIUM_SQLSERVER_VERSION}-plugin.tar.gz\"\nRUN mkdir -p /opt/landoop/connectors/third-party/kafka-connect-debezium-{mongodb,mysql,postgres,sqlserver} \\\n    && wget \"$KAFKA_CONNECT_DEBEZIUM_MONGODB_URL\" -O /debezium-mongodb.tgz \\\n    && file /debezium-mongodb.tgz \\\n    && tar -xf /debezium-mongodb.tgz \\\n           --owner=root --group=root --strip-components=1 \\\n           -C  /opt/landoop/connectors/third-party/kafka-connect-debezium-mongodb \\\n    && wget \"$KAFKA_CONNECT_DEBEZIUM_MYSQL_URL\" -O /debezium-mysql.tgz \\\n    && file /debezium-mysql.tgz \\\n    && tar -xf /debezium-mysql.tgz \\\n           --owner=root --group=root --strip-components=1 \\\n           -C  /opt/landoop/connectors/third-party/kafka-connect-debezium-mysql \\\n    && wget \"$KAFKA_CONNECT_DEBEZIUM_POSTGRES_URL\" -O /debezium-postgres.tgz \\\n    && file /debezium-postgres.tgz \\\n    && tar -xf /debezium-postgres.tgz \\\n           --owner=root --group=root --strip-components=1 \\\n           -C  /opt/landoop/connectors/third-party/kafka-connect-debezium-postgres \\\n    && wget \"$KAFKA_CONNECT_DEBEZIUM_SQLSERVER_URL\" -O /debezium-sqlserver.tgz \\\n    && tar -xf /debezium-sqlserver.tgz \\\n           --owner=root --group=root --strip-components=1 \\\n           -C  /opt/landoop/connectors/third-party/kafka-connect-debezium-sqlserver \\\n    && rm -rf /debezium-{mongodb,mysql,postgres,sqlserver}.tgz\n\n# Kafka Connect Splunk\nARG KAFKA_CONNECT_SPLUNK_VERSION=\"2.0.4\"\nARG KAFKA_CONNECT_SPLUNK_URL=\"https://github.com/splunk/kafka-connect-splunk/releases/download/v${KAFKA_CONNECT_SPLUNK_VERSION}/splunk-kafka-connect-v${KAFKA_CONNECT_SPLUNK_VERSION}.jar\"\nRUN mkdir -p /opt/landoop/connectors/third-party/kafka-connect-splunk \\\n    && wget \"$KAFKA_CONNECT_SPLUNK_URL\" \\\n       -O /opt/landoop/connectors/third-party/kafka-connect-splunk/splunk-kafka-connect-v${KAFKA_CONNECT_SPLUNK_VERSION}.jar\n\n############\n# Add tools/\n############\n\n# Add Coyote\nARG COYOTE_VERSION=1.5\nARG COYOTE_URL=\"https://github.com/Landoop/coyote/releases/download/v${COYOTE_VERSION}/coyote-${COYOTE_VERSION}\"\nRUN mkdir -p /opt/landoop/tools/bin/win \\\n             /opt/landoop/tools/bin/mac \\\n             /opt/landoop/tools/share/coyote/examples \\\n    && wget \"$COYOTE_URL\"-linux-amd64 -O /opt/landoop/tools/bin/coyote \\\n    && wget \"$COYOTE_URL\"-darwin-amd64 -O /opt/landoop/tools/bin/mac/coyote \\\n    && wget \"$COYOTE_URL\"-windows-amd64.exe -O /opt/landoop/tools/bin/win/coyote \\\n    && chmod +x /opt/landoop/tools/bin/coyote \\\n                /opt/landoop/tools/bin/mac/coyote\nADD lkd/simple-integration-tests.yml /opt/landoop/tools/share/coyote/examples/\n\n# Add Kafka Topic UI, Schema Registry UI, Kafka Connect UI\nARG KAFKA_TOPICS_UI_VERSION=0.9.4\nARG KAFKA_TOPICS_UI_URL=\"https://github.com/lensesio/kafka-topics-ui/releases/download/v${KAFKA_TOPICS_UI_VERSION}/kafka-topics-ui-${KAFKA_TOPICS_UI_VERSION}.tar.gz\"\nARG SCHEMA_REGISTRY_UI_VERSION=0.9.5\nARG SCHEMA_REGISTRY_UI_URL=\"https://github.com/lensesio/schema-registry-ui/releases/download/v.${SCHEMA_REGISTRY_UI_VERSION}/schema-registry-ui-${SCHEMA_REGISTRY_UI_VERSION}.tar.gz\"\nARG KAFKA_CONNECT_UI_VERSION=0.9.7\nARG KAFKA_CONNECT_UI_URL=\"https://github.com/lensesio/kafka-connect-ui/releases/download/v.${KAFKA_CONNECT_UI_VERSION}/kafka-connect-ui-${KAFKA_CONNECT_UI_VERSION}.tar.gz\"\nRUN mkdir -p /opt/landoop/tools/share/kafka-topics-ui/ \\\n             /opt/landoop/tools/share/schema-registry-ui/ \\\n             /opt/landoop/tools/share/kafka-connect-ui/ \\\n    && wget \"$KAFKA_TOPICS_UI_URL\" -O /kafka-topics-ui.tar.gz \\\n    && tar xvf /kafka-topics-ui.tar.gz -C /opt/landoop/tools/share/kafka-topics-ui \\\n    && mv /opt/landoop/tools/share/kafka-topics-ui/env.js /opt/landoop/tools/share/kafka-topics-ui/env.js.sample \\\n    && wget \"$SCHEMA_REGISTRY_UI_URL\" -O /schema-registry-ui.tar.gz \\\n    && tar xvf /schema-registry-ui.tar.gz -C /opt/landoop/tools/share/schema-registry-ui \\\n    && mv /opt/landoop/tools/share/schema-registry-ui/env.js /opt/landoop/tools/share/schema-registry-ui/env.js.sample \\\n    && wget \"$KAFKA_CONNECT_UI_URL\" -O /kafka-connect-ui.tar.gz \\\n    && tar xvf /kafka-connect-ui.tar.gz -C /opt/landoop/tools/share/kafka-connect-ui \\\n    && mv /opt/landoop/tools/share/kafka-connect-ui/env.js /opt/landoop/tools/share/kafka-connect-ui/env.js.sample \\\n    && rm -f /kafka-topics-ui.tar.gz /schema-registry-ui.tar.gz /kafka-connect-ui.tar.gz\n\n# Add Kafka Autocomplete\nARG KAFKA_AUTOCOMPLETE_VERSION=0.3\nARG KAFKA_AUTOCOMPLETE_URL=\"https://github.com/Landoop/kafka-autocomplete/releases/download/${KAFKA_AUTOCOMPLETE_VERSION}/kafka\"\nRUN mkdir -p /opt/landoop/tools/share/kafka-autocomplete \\\n             /opt/landoop/tools/share/bash-completion/completions \\\n    && wget \"$KAFKA_AUTOCOMPLETE_URL\" \\\n            -O /opt/landoop/tools/share/kafka-autocomplete/kafka \\\n    && wget \"$KAFKA_AUTOCOMPLETE_URL\" \\\n            -O /opt/landoop/tools/share/bash-completion/completions/kafka\n\n# Enable jline for Zookeeper\nRUN TJLINE=\"$(find /opt/landoop/kafka -name \"jline-0*.jar\" | head -n1)\" \\\n    && if [[ -n $TJLINE ]]; then sed \"s|^exec.*|export CLASSPATH=\\\"\\$CLASSPATH:$TJLINE\\\"\\n&|\" -i /opt/landoop/kafka/bin/zookeeper-shell; fi\n\n# Add normcat\nARG NORMCAT_VERSION=1.1.1\nARG NORMCAT_URL=\"https://github.com/andmarios/normcat/releases/download/${NORMCAT_VERSION}/normcat-${NORMCAT_VERSION}\"\nRUN mkdir -p /opt/landoop/tools/bin/win \\\n             /opt/landoop/tools/bin/mac \\\n    && wget \"$NORMCAT_URL\"-linux-amd64-lowmem.tar.gz -O /normcat-linux.tgz \\\n    && tar -xf /normcat-linux.tgz -C /opt/landoop/tools/bin \\\n    && wget \"$NORMCAT_URL\"-darwin-amd64.zip -O /normcat-mac.zip \\\n    && unzip /normcat-mac.zip -d /opt/landoop/tools/bin/mac \\\n    && wget \"$NORMCAT_URL\"-windows-amd64.zip -O /normcat-win.zip \\\n    && unzip /normcat-win.zip -d /opt/landoop/tools/bin/win \\\n    && chmod +x /opt/landoop/tools/bin/coyote \\\n                /opt/landoop/tools/bin/mac/coyote \\\n    && rm -f /normcat-linux.tg /normcat-mac.zip /normcat-win.zip && rm /normcat-linux.tgz\n\n# Add connect-cli\nARG CONNECT_CLI_VERSION=1.0.9\nARG CONNECT_CLI_URL=\"https://github.com/lensesio/kafka-connect-tools/releases/download/v${CONNECT_CLI_VERSION}/connect-cli\"\nRUN wget \"$CONNECT_CLI_URL\" -O /opt/landoop/tools/bin/connect-cli && chmod +x /opt/landoop/tools/bin/connect-cli\n\n##########\n# Finalize\n##########\n\nRUN echo    \"LKD_VERSION=${LKD_VERSION}\"                               | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_VERSION=${KAFKA_LVERSION}\"                          | tee -a /opt/landoop/build.info \\\n    && echo \"CONNECT_VERSION=${KAFKA_LVERSION}\"                        | tee -a /opt/landoop/build.info \\\n    && echo \"SCHEMA_REGISTRY_VERSION=${REGISTRY_VERSION}\"              | tee -a /opt/landoop/build.info \\\n    && echo \"REST_PROXY_VERSION=${REST_VERSION}\"                       | tee -a /opt/landoop/build.info \\\n    && echo \"STREAM_REACTOR_VERSION=${STREAM_REACTOR_VERSION}\"         | tee -a /opt/landoop/build.info \\\n    && echo \"SECRET_PROVIDER_VERSION=${SECRET_PROVIDER_VERSION}\"       | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_JDBC_VERSION=${KAFKA_CONNECT_JDBC_VERSION}\" | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_ELASTICSEARCH_VERSION=${KAFKA_CONNECT_ELASTICSEARCH_VERSION}\" \\\n                                                                       | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_HDFS_VERSION=${KAFKA_CONNECT_HDFS_VERSION}\" | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_S3_VERSION=${KAFKA_CONNECT_S3_VERSION}\"     | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_COUCHBASE_VERSION=${KAFKA_CONNECT_COUCHBASE_VERSION}\" \\\n                                                                       | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION=${KAFKA_CONNECT_DEBEZIUM_MONGODB_VERSION}\" \\\n                                                                       | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION=${KAFKA_CONNECT_DEBEZIUM_MYSQL_VERSION}\" \\\n                                                                       | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_DEBEZIUM_SQLSERVER_VERSION=${KAFKA_CONNECT_DEBEZIUM_SQLSERVER_VERSION}\" \\\n                                                                       | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION=${KAFKA_CONNECT_DEBEZIUM_POSTGRES_VERSION}\" \\\n                                                                       | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_SPLUNK_VERSION=${KAFKA_CONNECT_SPLUNK_VERSION}\" \\\n                                                                       | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_TOPICS_UI_VERSION=${KAFKA_TOPICS_UI_VERSION}\"       | tee -a /opt/landoop/build.info \\\n    && echo \"SCHEMA_REGISTRY_UI_VERSION=${SCHEMA_REGISTRY_UI_VERSION}\" | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_CONNECT_UI_VERSION=${KAFKA_CONNECT_UI_VERSION}\"     | tee -a /opt/landoop/build.info \\\n    && echo \"COYOTE_VERSION=${COYOTE_VERSION}\"                         | tee -a /opt/landoop/build.info \\\n    && echo \"KAFKA_AUTOCOMPLETE_VERSION=${KAFKA_AUTOCOMPLETE_VERSION}\" | tee -a /opt/landoop/build.info \\\n    && echo \"NORMCAT_VERSION=${NORMCAT_VERSION}\"                       | tee -a /opt/landoop/build.info \\\n    && echo \"CONNECT_CLI_VERSION=${CONNECT_CLI_VERSION}\"               | tee -a /opt/landoop/build.info\n\n# duphard (replace duplicates with hard links) and create archive\n# We run as two separate commands because otherwise the build fails in docker hub (but not locally)\nRUN duphard -d=0 /opt/landoop\nRUN tar -czf /LKD-${LKD_VERSION}.tar.gz \\\n           --owner=root \\\n           --group=root \\\n           -C /opt \\\n           landoop \\\n    && rm -rf /opt/landoop && rm /LKD-${LKD_VERSION}.tar.gz\n# Unfortunately we have to make this a separate step in order for docker to understand the change to hardlinks\n# Good thing: final image that people download is much smaller (~200MB).\nRUN tar xf /LKD-${LKD_VERSION}.tar.gz -C /opt \\\n    && rm /LKD-${LKD_VERSION}.tar.gz\n\nENV LKD_VERSION=${LKD_VERSION}\n# If this stage is run as container and you mount `/mnt`, we will create the LKD archive there.\nCMD [\"bash\", \"-c\", \"tar -czf /mnt/LKD-${LKD_VERSION}.tar.gz -C /opt landoop; chown --reference=/mnt /mnt/LKD-${LKD_VERSION}.tar.gz\"]\n\nFROM debian:bullseye-slim\nMAINTAINER Marios Andreopoulos <marios@landoop.com>\nCOPY --from=compile-lkd /opt /opt\n\n# Update, install tooling and some basic setup\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        bash-completion \\\n        bzip2 \\\n        coreutils \\\n        curl \\\n        default-jre-headless \\\n        dumb-init \\\n        gettext \\\n        gzip \\\n        jq \\\n        locales \\\n        netcat \\\n        openssl \\\n        sqlite3 \\\n        supervisor \\\n        wget \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && echo \"progress = dot:giga\" | tee /etc/wgetrc \\\n    && mkdir -p /opt \\\n    && mkdir /extra-connect-jars /connectors \\\n    && mkdir /etc/supervisord.d /etc/supervisord.templates.d \\\n    && rm -rf /var/log/*\n\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /\n\n# Install external tooling\n# checkport: checks for ports that are already in use, useful when we run with\n#            '--net=host so we have an easy way to detect if our ports are free\n# quickcert: a small tool we use to create a CA and key-cert pairs so we can easily\n#            setup SSL on the brokers with autogenerated keys and certs\n# glibc    : alpine linux has an embedded libc which misses some functions that are\n#            needed by some apps (e.g jvm's rocksdb jni — HDFS connector, Lenses, etc),\n#            so we add glibc to make them work. Also now we can add en_US.UTF-8 locale.\n#            https://github.com/sgerrand/alpine-pkg-glibc\n# caddy    : an excellent web server we use to serve fast-data-dev UI, proxy various REST\n#            endpoints, etc\n#            https://github.com/mholt/caddy\nARG CHECKPORT_URL=\"https://gitlab.com/andmarios/checkport/uploads/3903dcaeae16cd2d6156213d22f23509/checkport\"\nARG QUICKCERT_URL=\"https://github.com/andmarios/quickcert/releases/download/1.0/quickcert-1.0-linux-amd64-alpine\"\nARG GLIBC_INST_VERSION=\"2.32-r0\"\nARG CADDY_URL=https://github.com/caddyserver/caddy/releases/download/v0.11.5/caddy_v0.11.5_linux_amd64.tar.gz\nARG GOTTY_URL=https://github.com/yudai/gotty/releases/download/v1.0.1/gotty_linux_amd64.tar.gz\nRUN wget \"$CHECKPORT_URL\" -O /usr/local/bin/checkport \\\n    && wget \"$QUICKCERT_URL\" -O /usr/local/bin/quickcert \\\n    && chmod 0755 /usr/local/bin/quickcert /usr/local/bin/checkport \\\n    && wget \"$CADDY_URL\" -O /caddy.tgz \\\n    && mkdir -p /opt/caddy \\\n    && tar xzf /caddy.tgz -C /opt/caddy \\\n    && rm -f /caddy.tgz \\\n    && wget \"$GOTTY_URL\" -O /gotty.tar.gz \\\n    && mkdir -p /opt/gotty \\\n    && tar xzf gotty.tar.gz -C /opt/gotty \\\n    && rm -f gotty.tar.gz \\\n    && localedef -i en_US -f UTF-8 en_US.UTF-8\nENV LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8\n\nCOPY /filesystem /\nRUN chmod +x /usr/local/bin/{smoke-tests,logs-to-kafka,nullsink}.sh \\\n             /usr/local/share/landoop/sample-data/*.sh\n\n# Create system symlinks to Kafka binaries\nRUN bash -c 'for i in $(find /opt/landoop/kafka/bin /opt/landoop/tools/bin -maxdepth 1 -type f); do ln -s $i /usr/local/bin/$(echo $i | sed -e \"s>.*/>>\"); done'\n\n# Add kafka ssl principal builder\nRUN wget https://archive.lenses.io/third-party/kafka-custom-principal-builder/kafka-custom-principal-builder-1.0-SNAPSHOT.jar \\\n         -P /opt/landoop/kafka/share/java/kafka \\\n    && mkdir -p /opt/landoop/kafka/share/docs/kafka-custom-principal-builder \\\n    && wget https://archive.lenses.io/third-party/kafka-custom-principal-builder/LICENSE \\\n         -P /opt/landoop/kafka/share/docs/kafka-custom-principal-builder \\\n    && wget https://archive.lenses.io/third-party/kafka-custom-principal-builder/README.md \\\n         -P /opt/landoop/kafka/share/docs/kafka-custom-principal-builder\n\n# Setup Kafka Topics UI, Schema Registry UI, Kafka Connect UI\nRUN mkdir -p \\\n      /var/www/kafka-topics-ui \\\n      /var/www/schema-registry-ui \\\n      /var/www/kafka-connect-ui \\\n    && cp -ax /opt/landoop/tools/share/kafka-topics-ui/* /var/www/kafka-topics-ui/ \\\n    && cp -ax /opt/landoop/tools/share/schema-registry-ui/* /var/www/schema-registry-ui/ \\\n    && cp -ax /opt/landoop/tools/share/kafka-connect-ui/* /var/www/kafka-connect-ui/\n\nRUN ln -s /var/log /var/www/logs\n\n# Add executables, settings and configuration\nADD setup-and-run.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/setup-and-run.sh \\\n    && rm -f /root/.bashrc \\\n    && ln -s /usr/local/share/landoop/etc/bashrc /root/.bashrc\n\nVOLUME [\"/data\"]\n\nARG BUILD_BRANCH\nARG BUILD_COMMIT\nARG BUILD_TIME\nARG DOCKER_REPO=local\nRUN echo \"BUILD_BRANCH=${BUILD_BRANCH}\"    | tee /build.info \\\n    && echo \"BUILD_COMMIT=${BUILD_COMMIT}\" | tee -a /build.info \\\n    && echo \"BUILD_TIME=${BUILD_TIME}\"     | tee -a /build.info \\\n    && echo \"DOCKER_REPO=${DOCKER_REPO}\"   | tee -a /build.info \\\n    && sed -e 's/^/FDD_/' /opt/landoop/build.info | tee -a /build.info\n\nEXPOSE 2181 3030 3031 8081 8082 8083 9092\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/usr/local/bin/setup-and-run.sh\"]\n"
}