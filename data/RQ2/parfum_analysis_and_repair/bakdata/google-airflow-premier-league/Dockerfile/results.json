{
  "startTime": 1674255959371,
  "endTime": 1674255960040,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD: docker build --rm -t airflow .\n# ORIGINAL SOURCE: https://github.com/puckel/docker-airflow\n\nFROM python:3.6-slim\nLABEL version=\"1.0\"\nLABEL maintainer=\"bakdata GmbH\"\n\n# Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND noninteractive\nENV TERM linux\n\n# Airflow\n# it's possible to use v1-10-stable, but it's a development branch\nARG AIRFLOW_VERSION=v1-10-stable\nENV AIRFLOW_HOME=/usr/local/airflow\nENV AIRFLOW_GPL_UNIDECODE=yes\n# celery config\nARG CELERY_REDIS_VERSION=4.2.0\nARG PYTHON_REDIS_VERSION=3.2.0\n\nARG TORNADO_VERSION=5.1.1\n\n# Define en_US.\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_MESSAGES en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nRUN set -ex \\\n    && buildDeps=' \\\n        python3-dev \\\n        libkrb5-dev \\\n        libsasl2-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        build-essential \\\n        libblas-dev \\\n        liblapack-dev \\\n        libpq-dev \\\n        git \\\n    ' \\\n    && apt-get update -yqq \\\n    && apt-get upgrade -yqq \\\n    && apt-get install -yqq --no-install-recommends \\\n        ${buildDeps} \\\n        sudo \\\n        python3-pip \\\n        python3-requests \\\n        mysql-client \\\n        default-libmysqlclient-dev \\\n        apt-utils \\\n        curl \\\n        rsync \\\n        netcat \\\n        locales \\\n    && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \\\n    && locale-gen \\\n    && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \\\n    && useradd -ms /bin/bash -d ${AIRFLOW_HOME} airflow \\\n    && pip install --no-cache-dir -U pip setuptools wheel \\\n    && pip install --no-cache-dir Cython \\\n    && pip install --no-cache-dir pytz \\\n    && pip install --no-cache-dir pyOpenSSL \\\n    && pip install --no-cache-dir ndg-httpsclient \\\n    && pip install --no-cache-dir pyasn1 \\\n    && pip install --no-cache-dir git+https://github.com/apache/incubator-airflow.git@${AIRFLOW_VERSION} \\\n    && pip install --no-cache-dir redis==${PYTHON_REDIS_VERSION} \\\n    && pip install --no-cache-dir celery[redis]==${CELERY_REDIS_VERSION} \\\n    && pip install --no-cache-dir flask_oauthlib \\\n    && pip install --no-cache-dir psycopg2-binary \\\n    && pip install --no-cache-dir tornado==${TORNADO_VERSION} \\\n    && apt-get purge --auto-remove -yqq ${buildDeps} \\\n    && apt-get autoremove -yqq --purge \\\n    && apt-get clean \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\nCOPY airflow/config/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nRUN chown -R airflow: ${AIRFLOW_HOME}\n\nUSER airflow\n\nCOPY requirements.txt .\nRUN pip install --no-cache-dir --user -r requirements.txt\n\nCOPY airflow/config/airflow.cfg ${AIRFLOW_HOME}/airflow.cfg\n\nCOPY airflow/dags ${AIRFLOW_HOME}/dags\nCOPY airflow/plugins ${AIRFLOW_HOME}/plugins\n\nENV PYTHONPATH ${AIRFLOW_HOME}\n\nEXPOSE 8080 5555 8793\n\nWORKDIR ${AIRFLOW_HOME}\nENTRYPOINT [\"/entrypoint.sh\"]"
}