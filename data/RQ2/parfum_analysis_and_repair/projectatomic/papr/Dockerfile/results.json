{
  "startTime": 1674256262991,
  "endTime": 1674256264012,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.fedoraproject.org/fedora:25\nMAINTAINER Jonathan Lebon <jlebon@redhat.com>\n\n# NB: we install libyaml-devel so that we can use\n# CSafeLoader in PyYAML (see related comment in the parser)\n\nRUN dnf install -y \\\n\t\tgit \\\n\t\tgcc \\\n\t\tsudo \\\n\t\tdocker \\\n\t\tfindutils \\\n\t\tpython3-devel \\\n\t\tredhat-rpm-config \\\n\t\tpython3-pip \\\n\t\tlibyaml-devel \\\n\t\tnmap-ncat && \\\n\tdnf clean all\n\n# There's a tricky bit here. We mount $PWD at $PWD in the\n# container so that when we do the nested docker run in the\n# main script, the paths the daemon receives will still be\n# correct from the host perspective.\n\n# We use --net=host here to be able to communicate with the\n# internal OpenStack instance. For some reason, the default\n# bridge docker sets up causes issues. Will debug this\n# properly eventually.\n\nLABEL RUN=\"/usr/bin/docker run --rm --privileged \\\n             -v /run/docker.sock:/run/docker.sock \\\n             -v \\\"\\$PWD:\\$PWD\\\" --workdir \\\"\\$PWD\\\" \\\n             --net=host \\\n             -e github_repo \\\n             -e github_branch \\\n             -e github_pull_id \\\n             -e github_commit \\\n             -e github_contexts \\\n             -e github_token \\\n             -e os_keyname \\\n             -e os_privkey \\\n             -e os_network \\\n             -e os_floating_ip_pool \\\n             -e s3_prefix \\\n             -e site_repos \\\n             -e OS_AUTH_URL \\\n             -e OS_TENANT_ID \\\n             -e OS_TENANT_NAME \\\n             -e OS_USERNAME \\\n             -e OS_PASSWORD \\\n             -e AWS_ACCESS_KEY_ID \\\n             -e AWS_SECRET_ACCESS_KEY \\\n             -e BUILD_ID \\\n             -e RHCI_DEBUG_NO_TEARDOWN \\\n             -e RHCI_DEBUG_ALWAYS_RUN \\\n             -e RHCI_DEBUG_USE_NODE \\\n             \\${OPT1} \\\n             \\${IMAGE}\"\n\nCOPY . /src\n\nRUN pip3 install --no-cache-dir -r /src/requirements.txt /src\n\nCMD [\"/usr/bin/papr\"]\n"
}