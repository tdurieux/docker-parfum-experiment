{
  "startTime": 1674254034495,
  "endTime": 1674254035403,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 49,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.14 as builder\nLABEL maintainer=\"Kevein Liu<khas@flomesh.io>\"\n\nENV  pkg_prefix              /usr/local\nENV  pkg_confdir\t     /etc/pipy\nENV  pkg_bindir              ${pkg_prefix}/bin\nENV  CXX       \t\t     clang++\nENV  CC\t\t\t     clang\n\nARG VERSION\nENV VERSION=${VERSION}\n\nARG REVISION\nENV REVISION=${REVISION}\n\nARG COMMIT_ID\nENV CI_COMMIT_SHA=${COMMIT_ID}\n\nARG COMMIT_DATE\nENV CI_COMMIT_DATE=${COMMIT_DATE}\n\nARG PIPY_GUI\nENV PIPY_GUI=${PIPY_GUI:-OFF}\n\nARG PIPY_STATIC\nENV PIPY_STATIC=${PIPY_STATIC:-OFF}\n\nARG BUILD_TYPE\nENV BUILD_TYPE=${BUILD_TYPE:-Release}\n\nENV NODE_VER=14.19.0-r0\nENV NPM_VER=7.17.0-r0\n\nCOPY . /pipy\n\nRUN apk add --no-cache --virtual .build-deps openssh-client cmake clang alpine-sdk linux-headers autoconf automake libtool tiff jpeg zlib zlib-dev pkgconf nasm file musl-dev nodejs=${NODE_VER} npm=${NPM_VER}\n\nRUN if [ \"$PIPY_GUI\" == \"ON\" ] ; then \\\n cd pipy && npm install && npm run build; npm cache clean --force; fi\n\nRUN rm -fr pipy/build \\\n    && mkdir pipy/build \\\n    && cd pipy/build \\\n    && export CI_COMMIT_SHA \\\n    && export CI_COMMIT_TAG=${VERSION}-${REVISION} \\\n    && export CI_COMMIT_DATE \\\n    && cmake -DPIPY_GUI=${PIPY_GUI} -DPIPY_STATIC=${PIPY_STATIC} -DPIPY_TUTORIAL=${PIPY_GUI} -DCMAKE_BUILD_TYPE=${BUILD_TYPE} .. \\\n    && make -j$(getconf _NPROCESSORS_ONLN) \\\n    && mkdir ${pkg_confdir} \\\n    && cp /pipy/bin/pipy ${pkg_bindir} \\\n    && apk del .build-deps\n\n\nFROM alpine:3.14 as prod\nCOPY --from=builder /pipy/bin/pipy /usr/local/bin/pipy\nCOPY --from=builder /pipy/tutorial /etc/pipy/tutorial\nRUN apk add --no-cache ca-certificates libstdc++ libcap su-exec tar curl busybox-extras iptables tzdata socat logrotate\nRUN adduser -Su 1340 pipy \\\n    && chmod -R g=u /usr/local/bin/pipy /etc/pipy \\\n    && chown -R pipy:0 /usr/local/bin/pipy /etc/pipy\n\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\n\nUSER pipy\nEXPOSE 6000\nSTOPSIGNAL SIGQUIT\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"pipy\", \"docker-start\"]\n"
}