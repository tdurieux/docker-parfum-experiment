{
  "startTime": 1674248810820,
  "endTime": 1674248811408,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 133
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.15.2-gpu-py3\n\n# Fix nvidia changing keys (2022-04)\nRUN rm /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list && \\\n    apt-key del 7fa2af80 && \\\n    curl -f -O -J https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-keyring_1.0-1_all.deb && \\\n    dpkg -i cuda-keyring_1.0-1_all.deb && \\\n    rm cuda-keyring_1.0-1_all.deb\n\n# using ARG so it won't persist in user env\nARG DEBIAN_FRONTEND=noninteractive\nARG timezone=\"Asia/Jerusalem\"\nENV TZ=$timezone\n\n# Install apt dependencies\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n    git \\\n    python3-opencv \\\n    python3-cairocffi \\\n    protobuf-compiler \\\n    python3-pil \\\n    python3-lxml \\\n    python3-tk \\\n    sudo \\ \n    tmux \\\n    vim \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/hailo-ai/models.git /home/tensorflow/models \\\n    && cd /home/tensorflow/models \\\n    && git checkout 10ee28d\n\n# Compile protobuf configs\nRUN (cd /home/tensorflow/models/research/ && protoc object_detection/protos/*.proto --python_out=.)\n\n# Run TensorFlow Object Detection API setup\nWORKDIR /home/tensorflow/models/research/\nRUN cp object_detection/packages/tf1/setup.py ./\n\nENV PATH=\"/home/tensorflow/.local/bin:${PATH}\"\nRUN python -m pip install -U pip && \\\n    python -m pip install .\n\n# Get pre-trained ssd-mobilenet-v1 model\nRUN curl -f -o ./ssd_mobilenet_v1.tar.gz https://download.tensorflow.org/models/object_detection/ssd_mobilenet_v1_coco_2018_01_28.tar.gz \\\n    && tar -xzf  ssd_mobilenet_v1.tar.gz && cp ssd_mobilenet_v1_coco_2018_01_28/pipeline.config ./ \\\n    && rm ssd_mobilenet_v1.tar.gz\n\n# Update pipeline.config\nRUN sed -i pipeline.config -e \"s/PATH_TO_BE_CONFIGURED\\/model.ckpt/\\/home\\/tensorflow\\/models\\/research\\/ssd_mobilenet_v1_coco_2018_01_28\\/model.ckpt/\" \\\n    -e \"s/mscoco_train.record/<your-own-dataset>_train.record-?????-of-00100/\" \\\n    -e \"s/mscoco_val.record/<your-own-dataset>_val.record-?????-of-00010/\"\n\nARG user=hailo\nARG group=hailo\nARG uid=1000\nARG gid=1000\n\nRUN groupadd --gid $gid $group && \\\n    adduser --uid $uid --gid $gid --shell /bin/bash --disabled-password --gecos \"\" $user && \\\n    chmod u+w /etc/sudoers && echo \"$user ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && chmod -w /etc/sudoers && \\\n    chown -R $user:$group /home/tensorflow\n"
}