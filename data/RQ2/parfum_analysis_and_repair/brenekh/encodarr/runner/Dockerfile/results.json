{
  "startTime": 1674217967513,
  "endTime": 1674217968318,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage\nFROM golang:1.16-buster AS builder\n\nARG TARGETOS\nARG TARGETARCH\nARG LDFLAGS_VERSION=development\n\nWORKDIR /go/src/encodarr/runner\n\nCOPY . .\n\n# Disable CGO so that we have a static binary\nRUN CGO_ENABLED=0 GOOS=${TARGETOS} GOARCH=${TARGETARCH} go build -o runner -ldflags=\"-X 'github.com/BrenekH/encodarr/runner/options.Version=${LDFLAGS_VERSION}'\" cmd/EncodarrRunner/main.go\n\n\n# Run stage\nFROM ubuntu:20.04\n\nENV TZ=Etc/GMT \\\nENCODARR_CONFIG_DIR=\"/config\"\n\nWORKDIR /usr/src/app\n\nRUN chmod 777 /usr/src/app \\\n && apt-get update -qq \\\n && DEBIAN_FRONTEND=\"noninteractive\" apt-get --no-install-recommends install -qq -y tzdata ffmpeg && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=builder /go/src/encodarr/runner/runner ./runner\n\nRUN chmod 777 ./runner\n\nCMD [\"./runner\"]\n"
}