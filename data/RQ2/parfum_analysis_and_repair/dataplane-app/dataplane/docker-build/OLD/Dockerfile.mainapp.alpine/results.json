{
  "startTime": 1674220435817,
  "endTime": 1674220436757,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 26,
        "columnEnd": 30
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 34,
        "columnEnd": 50
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 54,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "FROM golang:1.17-alpine as builder\n\nRUN apk update && apk add --no-cache git ca-certificates tzdata curl bash && update-ca-certificates\n\n# Create user\nENV GOOS=linux\n\n\nRUN apk add --no-cache --update npm\nRUN npm install -g yarn n && npm cache clean --force;\nRUN n 16.8.0\n\nRUN mkdir -p /build/mainapp\nRUN mkdir -p /build/frontend\n\nCOPY ../frontend /build/frontend\n\nWORKDIR /build\n\nCOPY ../mainapp/go.mod .\nCOPY ../mainapp/go.sum .\nRUN go mod download\n\nADD ../mainapp /build/mainapp\n\n# Build front end React app\nRUN cd /build/frontend && yarn && yarn dockerbuild && yarn cache clean;\n\n# Build golang backend\nRUN cd /build/mainapp && go build -o dataplane server.go\n\n\nFROM alpine:3.15.0\n\nENV USER=dataplane\nENV UID=10001\n\nRUN adduser \\\n    --disabled-password \\\n    --gecos \"\" \\\n    --home \"/app\" \\\n    --shell \"/sbin/nologin\" \\\n    --no-create-home \\\n    --uid \"${UID}\" \\\n    \"${USER}\"\n\nWORKDIR /app\n\nCOPY --from=builder /build/mainapp/dataplane /app/\nCOPY --from=builder /build/frontend/build /app/frontbuild\n\nRUN mkdir -p /code-files\nADD ../code-files /code-files\n\nUSER dataplane:dataplane\nEXPOSE 9000\n\nCMD [\"./dataplane\"]\n\n"
}