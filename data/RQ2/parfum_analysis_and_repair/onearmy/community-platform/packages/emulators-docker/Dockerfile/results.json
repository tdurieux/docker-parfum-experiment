{
  "startTime": 1674215613353,
  "endTime": 1674215614309,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 46,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 66,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-alpine\n################################################################################\n# Loosely based on\n# https://github.com/AndreySenov/firebase-tools-docker/blob/main/Dockerfile\n# https://github.com/goat-io/fluent/blob/master/src/Docker/Database/Firebase/Dockerfile\n################################################################################\n\nARG BUILD_DATE\nARG VERSION\nARG VCS_REF\nLABEL org.label-schema.schema-version=\"1.0\" \\\n  org.label-schema.name=\"\" \\\n  org.label-schema.version=${VERSION} \\\n  org.label-schema.build-date=${BUILD_DATE} \\\n  org.label-schema.description=\"\" \\\n  org.label-schema.url=\"\" \\\n  org.label-schema.vcs-url=\"\" \\\n  org.label-schema.vcs-ref=${VCS_REF}\nENV FIREBASE_TOOLS_VERSION=${VERSION}\nENV HOME=/home/node\n\n# Install Java, Curl and Firebase-Tools\nRUN apk --no-cache add curl openjdk11-jre bash && \\\n  yarn global add firebase-tools@${VERSION} && \\\n  yarn cache clean && yarn cache clean;\n\n# Check versions\nRUN firebase -V && \\\n  java -version && \\\n  chown -R node:node $HOME  \n\n# First run to setup emulators\nRUN firebase setup:emulators:database && \\\n  firebase setup:emulators:firestore && \\\n  firebase setup:emulators:pubsub && \\\n  firebase setup:emulators:storage && \\\n  firebase setup:emulators:ui\n\n# Install gcloud commmand utilities to use default login (requires python)\n# RUN curl -sSL https://sdk.cloud.google.com > /tmp/gcl && bash /tmp/gcl --install-dir=~/gcloud --disable-prompts\n# ENV PATH $PATH:~/gcloud/google-cloud-sdk/bin\n\nWORKDIR /app\n\n# Copy dist package.json and install (step will be cached unless changed)\nRUN mkdir -p /app/functions/dist\nCOPY ./app/functions/dist/package.json /app/functions/dist/package.json\nRUN cd /app/functions/dist && yarn install && yarn cache clean && yarn cache clean;\n\n# Copy additional config files (done individually to not override dist package.json)\nCOPY ./app/firebase.json /app/firebase.json\nCOPY ./app/.firebaserc /app/.firebaserc\nCOPY ./app/firebase.storage.rules /app/firebase.storage.rules\nCOPY ./app/functions/dist/index.js /app/functions/dist/index.js\nCOPY ./app/credentials.json /app/credentials.json\n\n# Copy seed data\nRUN mkdir -p /app/seed_data && mkdir -p /app/import\nCOPY ./seed_data/pp-2022-06-16 /app/seed_data\n\n# Copy config files. Ensure executable and lf line format\nRUN mkdir -p /app/config\nCOPY ./config /app/config\nRUN dos2unix /app/config/bootstrap.sh\nRUN chmod +x /app/config/bootstrap.sh\n\n# Prompt firebase to use json credentials for login by exporting variable\nENV GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json\n\nRUN \\\n  # Include a temporary env file to avoid timeouts (https://github.com/firebase/firebase-tools/issues/2837)\n  echo \"FUNCTIONS_EMULATOR_TIMEOUT_SECONDS=540s\" > /app/functions/dist/.env.local && \\ \n  # Make a first run of emulators to ensure configured correctly and allow any seed data to be processed\n  # via bootstrap script. Once processed seed data is then re-exported for use at runtime\n  firebase emulators:exec \\\n  --project  ${FIRESTORE_PROJECT_NAME:-community-platform-emulated} \\\n  --import=/app/seed_data --export-on-exit=/app/import \\\n  \"/bin/bash /app/config/bootstrap.sh\" \\\n  # Check that data exists and remove seed once complete\n  && printf \"\\nExports\" \\\n  && cat /app/import/firebase-export-metadata.json \\\n  && printf \"\\nUsers\" \\\n  && cat /app/import/auth_export/accounts.json \\\n  && rm -R /app/seed_data \\\n  && rm -R /app/functions/dist/.env.local\n\n# # Exposed Ports - These should match firebase.json config\nEXPOSE 4001 4002 4003 4004 4005 4006 4007\n\n# # Troubleshooting - can just run to get cli access\n# CMD [ \"/bin/sh\" ]\n\nCMD firebase emulators:start \\\n  --only auth,functions,firestore,pubsub,storage,hosting,database \\\n  --project ${FIRESTORE_PROJECT_NAME:-community-platform-emulated} \\\n  --import=/app/import"
}