{
  "startTime": 1674252498814,
  "endTime": 1674252499889,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 26,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 26,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 26,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 26,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.7.2-buster\n\nENV RAILS_ENV=docker\nENV RAILS_SERVE_STATIC_FILES=enabled\nENV RAILS_LOG_TO_STDOUT=enabled\nENV RACK_ENV=production\nENV LANG=en_US.UTF-8\n\nEXPOSE 3000\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y build-essential libpq-dev postgresql postgresql-contrib openssl sudo && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get update -qq && apt-get install --no-install-recommends -y yarn nodejs && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /app\nWORKDIR /app\nRUN node --version\n\nCOPY Gemfile /app/Gemfile\nCOPY Gemfile.lock /app/Gemfile.lock\n\n# Run the rest of the commands as the ``postgres``\nUSER postgres\n\n# Create a PostgreSQL role named ``docker`` with ``docker`` as the password and\n# then create a database `docker` owned by the ``docker`` role.\n# Note: here we use ``&&\\`` to run commands one after the other - the ``\\``\n#       allows the RUN command to span multiple lines.\nRUN    /etc/init.d/postgresql start &&\\\n    psql --command \"CREATE USER docker WITH SUPERUSER PASSWORD 'docker';\" &&\\\n    createdb -O docker docker\n\nRUN echo \"host all  all    0.0.0.0/0  md5\" >> /etc/postgresql/11/main/pg_hba.conf\n\nUSER root\n\nRUN [\"gem\", \"install\", \"bundler\"]\nRUN [\"bundle\", \"install\"]\nCOPY package.json /app/package.json\nRUN [\"yarn\"]\nCOPY . /app/\nCMD [\"bash\", \"docker-entrypoint.sh\"]"
}