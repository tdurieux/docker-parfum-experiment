diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/vscosta/yap/docker/SRLUbuDockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/vscosta/yap/docker/SRLUbuDockerfile/repaired.Dockerfile
index 5efa93b..399f6ca 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/vscosta/yap/docker/SRLUbuDockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/vscosta/yap/docker/SRLUbuDockerfile/repaired.Dockerfile
@@ -12,25 +12,25 @@ WORKDIR /srl/cudd
 WORKDIR /srl/data
 
 WORKDIR /srl/data
-RUN apt update && apt -y upgrade && apt -y install \
-    # how can we distribute Linux without these packages?\
-    git gcc g++ make cmake\
-    # to compile cudd we need\
-    autotools-dev automake autoconf perl-base m4 doxygen flex bison\
-    # the basics: must always be in the image \
-    libreadline-dev libgmp-dev\
-    # MPI (MPich should also work) \
-    openmpi-bin libopenmpi-dev\
-    libgecode-dev 
-    # R support 
+RUN apt update && apt -y upgrade && apt -y --no-install-recommends install \
+
+    git gcc g++ make cmake \
+
+    autotools-dev automake autoconf perl-base m4 doxygen flex bison \
+
+    libreadline-dev libgmp-dev \
+
+    openmpi-bin libopenmpi-dev \
+    libgecode-dev && rm -rf /var/lib/apt/lists/*;
+    # R support
 
 #yap binary
 
-RUN  git clone https://github.com/vscosta/cudd.git /srl/cudd \
+RUN git clone https://github.com/vscosta/cudd.git /srl/cudd \
     && cd /srl/cudd \
     && aclocal\
-    && automake\
-    && ./configure --prefix=/usr --enable-shared --enable-obj --enable-dddmp&& make -j install&& cd ..
+    && automake \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --enable-shared --enable-obj --enable-dddmp && make -j install && cd ..
 
 RUN  git clone https://github.com/vscosta/yap /srl/yap --depth=6\
     && mkdir -p /srl/yap/build\
@@ -38,8 +38,8 @@ RUN  git clone https://github.com/vscosta/yap /srl/yap --depth=6\
     && cmake ..  -DWITH_PACKAGES=0 -DWITH_BDD=1 -DWITH_PROBLOG=1 -DWITH_GECODE=1 -DWITH_CLPBN=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr \
     && cmake --build . --parallel --target install
 
-RUN mkdir -p /srl/data 
-COPY ilp/UPAleph  /srl/UPAleph      
+RUN mkdir -p /srl/data
+COPY ilp/UPAleph  /srl/UPAleph     
 COPY ilp/skill_base  /srl/skill_base
 COPY ilp/chemo_js  /srl/data/chemo_js
 COPY ilp/uw-cse  /srl/data/uw-cse
@@ -47,6 +47,6 @@ COPY ilp/uw-cse  /srl/data/uw-cse
 
 
 # Make port 80 available to the world outside this container
-EXPOSE 22 
+EXPOSE 22
 
 CMD ["yap", "-l", "/srl/UPAleph/aleph"]
\ No newline at end of file