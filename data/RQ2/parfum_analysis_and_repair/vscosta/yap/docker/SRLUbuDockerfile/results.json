{
  "startTime": 1674252738251,
  "endTime": 1674252738978,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 23,
        "columnStart": 36,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 23,
        "columnStart": 36,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use an official Python runtime as a parent image\nFROM ubuntu AS yap-srl\n\nENV TZ=Europe/Lisbon\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n\n\n# Set the working directory to /srl\nWORKDIR /srl\nWORKDIR /srl/cudd\nWORKDIR /srl/data\n\nWORKDIR /srl/data\nRUN apt update && apt -y upgrade && apt -y --no-install-recommends install \\\n\n    git gcc g++ make cmake \\\n\n    autotools-dev automake autoconf perl-base m4 doxygen flex bison \\\n\n    libreadline-dev libgmp-dev \\\n\n    openmpi-bin libopenmpi-dev \\\n    libgecode-dev && rm -rf /var/lib/apt/lists/*;\n    # R support\n\n#yap binary\n\nRUN git clone https://github.com/vscosta/cudd.git /srl/cudd \\\n    && cd /srl/cudd \\\n    && aclocal\\\n    && automake \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-shared --enable-obj --enable-dddmp && make -j install && cd ..\n\nRUN  git clone https://github.com/vscosta/yap /srl/yap --depth=6\\\n    && mkdir -p /srl/yap/build\\\n    && cd /srl/yap/build\\\n    && cmake ..  -DWITH_PACKAGES=0 -DWITH_BDD=1 -DWITH_PROBLOG=1 -DWITH_GECODE=1 -DWITH_CLPBN=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr \\\n    && cmake --build . --parallel --target install\n\nRUN mkdir -p /srl/data\nCOPY ilp/UPAleph  /srl/UPAleph     \nCOPY ilp/skill_base  /srl/skill_base\nCOPY ilp/chemo_js  /srl/data/chemo_js\nCOPY ilp/uw-cse  /srl/data/uw-cse\n\n\n\n# Make port 80 available to the world outside this container\nEXPOSE 22\n\nCMD [\"yap\", \"-l\", \"/srl/UPAleph/aleph\"]"
}