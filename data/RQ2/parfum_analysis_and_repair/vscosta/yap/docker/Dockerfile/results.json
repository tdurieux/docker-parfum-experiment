{
  "startTime": 1674253346486,
  "endTime": 1674253347485,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 7,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 9,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 34,
        "columnStart": 36,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 34,
        "columnStart": 36,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 8,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "# Use an official Python runtime as a parent image\nFROM ubuntu AS yap\n\nENV TZ=Europe/Lisbon\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n\n\n# Set the working directory to /app\nWORKDIR /app\n\nRUN apt update && apt -y upgrade && apt -y --no-install-recommends install \\\n\n    git gcc g++ make cmake \\\n\n    autotools-dev automake autoconf perl-base m4 doxygen flex bison \\\n\n    libreadline-dev libgmp-dev \\\n\n    openmpi-bin libopenmpi-dev \\\n\n    swig \\\n\n    python3 python3-dev python3-numpy python3-numpy-dev \\\n\n    python3-pip python3-wheel python3-setuptools \\\n\n    python3-notebook \\\n\n    libgecode-dev \\\n\n    r-cran-rcpp \\\n\n    libxml2-dev libraptor2-dev \\\n    openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;\n\n\n#yap binary\n\nRUN git clone https://github.com/vscosta/cudd.git /app/cudd \\\n    && cd /app/cudd \\\n    && aclocal\\\n    && automake \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-shared --enable-obj --enable-dddmp && make -j install && cd ..\n\nRUN  git clone https://github.com/vscosta/yap /app/yap --depth=6\\\n    && mkdir -p /app/yap/build\\\n    && cd /app/yap/build\\\n    && cmake .. -DWITH_DOXYGEN=1  -DWITH_PACKAGES=1 -DCMAKE_INSTALL_PREFIX:PATH=/usr \\\n    && cmake --build . --parallel --target install\n\n\nRUN  git clone https://github.com/vscosta/doxygen-yap.git /app/doxygen-yap &&\\\n    cd /app/doxygen-yap &&\\\n    mkdir -p build&&\\\n    cd build&&\\\n    cmake .. -DCMAKE_INSTALL_PREFIX:PATH=/usr && cmake --build . --target install --parallel\n\nRUN  mkdir -p /app/yap/build && \\\n    cd /app/yap/build &&\\\n    doxygen-yap  Doxyfile.dox\n\n#Python extras\nRUN apt-get -y --no-install-recommends install curl \\\n    && curl -fsSL https://deb.nodesource.com/setup_17.x|bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && cd /app/yap/build/packages/python/yap4py \\\n    && pip3 install --no-cache-dir jupyterlab \\\n    && pip3 install --no-cache-dir . \\\n    && cd /app/yap/packages/python/yapkernel \\\n      && pip3 install --no-cache-dir . \\\n    && python3 -m yapkernel.kernelspec && rm -rf /var/lib/apt/lists/*;\n\n\nRUN python3 -m jupyter lab build\\\n    &&mkdir /usr/local/share/jupyter/lab/staging/node_modules/codemirror/mode/prolog\\\n    &&cp /app/yap/misc/editors/codemirror/meta.js /usr/local/share/jupyter/lab/staging/node_modules/codemirror/mode/meta.js\\\n    &&cp /app/yap/misc/editors/codemirror/prolog.js /usr/local/share/jupyter/lab/staging/node_modules/codemirror/mode/prolog\\\n    &&python3 -m jupyter lab build\\\n    &&cp /app/yap/misc/tut.ipynb /app\n\n\n#R extras\nRUN cd /app/yap/build \\\n    && cmake --build . --target YAP4R\nRUN cd /app/yap/build \\\n    &&  R CMD INSTALL packages/real/yap4r\n\n# Make port 80 available to the world outside this container\nEXPOSE 22 80 8888\n\n# Define environment variable\nENV NAME World\n\n# Run app.py when the container launches\nCMD [\"jupyter\", \"lab\", \"--port=8888\", \"--no-browser\",\"--NotebookApp.token=''\",\"--NotebookApp.password=''\", \"--ip=0.0.0.0\", \"--allow-root\", \"tut.ipynb\" ]\n\n"
}