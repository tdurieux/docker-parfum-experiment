{
  "startTime": 1674216564627,
  "endTime": 1674216565494,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:mainline-alpine\nMAINTAINER Christian Haschek <office@haschek-solutions.com>\n\nENV S6_VERSION v1.22.1.0\n\n# Add PHP 7\nRUN set -x \\\n    && apk upgrade -U \\\n    && apk --update \\\n#   --repository=http://dl-4.alpinelinux.org/alpine/edge/testing \\\n        add \\\n        openssl \\\n        nano \\\n        ffmpeg \\\n        file \\\n        unzip \\\n        bash \\\n        curl \\\n        php7 \\\n        php7-pdo \\\n        php7-exif \\\n        php7-mcrypt \\\n        php7-curl \\\n        php7-gd \\\n        php7-json \\\n        php7-fpm \\\n        php7-openssl \\\n        php7-ctype \\\n        php7-opcache \\\n        php7-mbstring \\\n        php7-sodium \\\n        php7-xml \\\n        php7-ftp \\\n        php7-simplexml \\\n        php7-session \\\n        php7-fileinfo \\\n        php7-pcntl \\\n    && rm -rf /var/cache/apk/*\n\n# s6 overlay\n# all supported architectures look at \"assets\" on\n# https://github.com/just-containers/s6-overlay/releases\nRUN /bin/bash -c 'set -ex && \\\n    ARCH=\"$(apk --print-arch)\" && \\\n    case \"${ARCH##*-}\" in \\\n        x86_64) S6_PLATFORM=\"amd64\" ;; \\\n        armv7l) S6_PLATFORM=\"armhf\" ;; \\\n\tarmv7) S6_PLATFORM=\"armhf\" ;; \\\n        armv6) S6_PLATFORM=\"armhf\" ;; \\\n\tarmhf) S6_PLATFORM=\"armhf\" ;; \\\n        arm) S6_PLATFORM=\"arm\" ;; \\\n        aarch64) S6_PLATFORM=\"aarch64\" ;;\\\n        i386) S6_PLATFORM=\"x86\" ;;\\\n        *) echo >&2 \"unsupported architecture: ${ARCH}\"; exit 1 ;; \\\n    esac; \\\n    curl -L -s https://github.com/just-containers/s6-overlay/releases/download/${S6_VERSION}/s6-overlay-${S6_PLATFORM}.tar.gz \\\n  | tar xvzf - -C / '\n\n\nCOPY /rootfs /\n\nRUN set -x \\\n    && rm /usr/bin/php \\\n    && ln -s /etc/php7 /etc/php \\\n    && ln -s /usr/bin/php7 /usr/bin/php \\\n    && ln -s /usr/sbin/php-fpm7 /usr/bin/php-fpm \\\n    && ln -s /usr/lib/php7 /usr/lib/php \\\n#    && ln -s /dev/stdout /var/log/nginx/access.log \\\n#    && ln -s /dev/stderr /var/log/nginx/error.log \\\n    && mkdir -p /var/log/php-fpm \\\n    && ln -s /dev/stderr /var/log/php-fpm/fpm-error.log\n\n# Enable default sessions\nRUN set -x \\\n    && mkdir -p /var/lib/php7/sessions \\\n    && chown nginx:nginx /var/lib/php7/sessions\n\n# ADD SOURCE\nRUN set -x \\\n    && mkdir -p /usr/share/nginx/html\n\nWORKDIR /usr/share/nginx/html\n\nRUN set -x \\\n    && curl -f --silent --remote-name https://codeload.github.com/HaschekSolutions/pictshare/zip/master \\\n    && unzip -q master \\\n    && mv pictshare-master/* . \\\n    && rm -r master pictshare-master \\\n    && mv inc/example.config.inc.php inc/config.inc.php \\\n    && chown -R nginx:nginx /usr/share/nginx/html \\\n    && chmod +x bin/ffmpeg\n\nVOLUME /usr/share/nginx/html/data\n\nEXPOSE 80\n\nENTRYPOINT [\"bash\", \"/pictshare.sh\"]\n"
}