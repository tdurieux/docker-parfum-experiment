{
  "startTime": 1674249730223,
  "endTime": 1674249730788,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 45,
        "columnEnd": 82
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 24,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 11,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 11,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 14,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 25,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG        PYTHON_TAG=3\nFROM       python:${PYTHON_TAG} AS base\n\n# Add some metadata\nLABEL      app.name=\"InterPlanetary Wayback (IPWB)\" \\\n           app.description=\"A distributed and persistent archive replay system using IPFS\" \\\n           app.license=\"MIT License\" \\\n           app.license.url=\"https://github.com/oduwsdl/ipwb/blob/master/LICENSE\" \\\n           app.repo.url=\"https://github.com/oduwsdl/ipwb\" \\\n           app.authors=\"Mat Kelly <@machawk1> and Sawood Alam <@ibnesayeed>\"\n\n# Add a custom entrypoint script\nCOPY       entrypoint.sh /usr/local/bin/\nRUN        chmod a+x /usr/local/bin/entrypoint.sh\n\n# Enable unbuffered STDOUT logging\nENV        PYTHONUNBUFFERED=1\n\n# Create folders for WARC, CDXJ and IPFS stores\nRUN        mkdir -p /data/{warc,cdxj,ipfs}\n\n# Download and install IPFS\nENV        IPFS_PATH=/data/ipfs\nARG        IPFS_VERSION=v0.13.0\nRUN cd /tmp \\\n           && wget -q https://dist.ipfs.io/go-ipfs/${IPFS_VERSION}/go-ipfs_${IPFS_VERSION}_linux-amd64.tar.gz \\\n           && tar xvfz go-ipfs*.tar.gz \\\n           && mv go-ipfs/ipfs /usr/local/bin/ipfs \\\n           && rm -rf go-ipfs* \\\n           && ipfs init && rm go-ipfs*.tar.gz\n\n# Make necessary changes to prepare the environment for IPWB\nRUN apt update && apt install --no-install-recommends -y locales \\\n           && rm -rf /var/lib/apt/lists/* \\\n           && echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n           && locale-gen\n\n# Install basic requirements\nWORKDIR    /ipwb\nCOPY       requirements.txt ./\nRUN pip install --no-cache-dir -r requirements.txt\n\n\n# Standard JS lint\nFROM       node\nWORKDIR    /ipwb\nCOPY       . ./\nARG        SKIPTEST=false\nRUN $SKIPTEST || npm install -g standard && npm cache clean --force;\nRUN        $SKIPTEST || standard\n\n\n# Testing stage\nFROM base AS test\n\n# Install necessary test requirements\nCOPY       test-requirements.txt ./\nRUN pip install --no-cache-dir -r test-requirements.txt\n\n# Perform tests\nCOPY       . ./\nARG        SKIPTEST=false\nRUN        $SKIPTEST || pycodestyle\nRUN $SKIPTEST || ( ipfs daemon & while !curl -f -s localhost:5001 > /dev/null; ; do do sleepdone && py.test -s --cov=./)\n\n\n# Final production image\nFROM base\n\n# Install IPWB from the source code\nCOPY       . ./\nRUN        python setup.py install\n\n# Run ipfs daemon in background\n# Wait for the daemon to be ready\n# Runs provided command\nENTRYPOINT [\"entrypoint.sh\"]\n\n# Index a sample WARC file and replay it\nCMD        [\"ipwb\", \"replay\"]\n"
}