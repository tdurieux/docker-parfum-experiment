diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oduwsdl/ipwb/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oduwsdl/ipwb/Dockerfile/repaired.Dockerfile
index b17d771..d25185b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oduwsdl/ipwb/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oduwsdl/ipwb/Dockerfile/repaired.Dockerfile
@@ -22,15 +22,15 @@ RUN        mkdir -p /data/{warc,cdxj,ipfs}
 # Download and install IPFS
 ENV        IPFS_PATH=/data/ipfs
 ARG        IPFS_VERSION=v0.13.0
-RUN        cd /tmp \
+RUN cd /tmp \
            && wget -q https://dist.ipfs.io/go-ipfs/${IPFS_VERSION}/go-ipfs_${IPFS_VERSION}_linux-amd64.tar.gz \
            && tar xvfz go-ipfs*.tar.gz \
            && mv go-ipfs/ipfs /usr/local/bin/ipfs \
            && rm -rf go-ipfs* \
-           && ipfs init
+           && ipfs init && rm go-ipfs*.tar.gz
 
 # Make necessary changes to prepare the environment for IPWB
-RUN        apt update && apt install -y locales \
+RUN apt update && apt install --no-install-recommends -y locales \
            && rm -rf /var/lib/apt/lists/* \
            && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
            && locale-gen
@@ -38,7 +38,7 @@ RUN        apt update && apt install -y locales \
 # Install basic requirements
 WORKDIR    /ipwb
 COPY       requirements.txt ./
-RUN        pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 
 # Standard JS lint
@@ -46,7 +46,7 @@ FROM       node
 WORKDIR    /ipwb
 COPY       . ./
 ARG        SKIPTEST=false
-RUN        $SKIPTEST || npm install -g standard
+RUN $SKIPTEST || npm install -g standard && npm cache clean --force;
 RUN        $SKIPTEST || standard
 
 
@@ -55,13 +55,13 @@ FROM base AS test
 
 # Install necessary test requirements
 COPY       test-requirements.txt ./
-RUN        pip install -r test-requirements.txt
+RUN pip install --no-cache-dir -r test-requirements.txt
 
 # Perform tests
 COPY       . ./
 ARG        SKIPTEST=false
 RUN        $SKIPTEST || pycodestyle
-RUN        $SKIPTEST || (ipfs daemon & while ! curl -s localhost:5001 > /dev/null; do sleep 1; done && py.test -s --cov=./)
+RUN $SKIPTEST || ( ipfs daemon & while !curl -f -s localhost:5001 > /dev/null; ; do do sleepdone && py.test -s --cov=./)
 
 
 # Final production image