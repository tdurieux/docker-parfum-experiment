{
  "startTime": 1674255777235,
  "endTime": 1674255778111,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 5,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 27,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 27,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\nARG BRANCHES\nARG VERSION\n\n# Sometimes install_rodan_jobs will return `ReadTimeoutError: HTTPSConnectionPool(host='files.pythonhosted.org', port=443): Read timed out.`\n# For this reason, we extend the timeout of pip.\nENV PIP_DEFAULT_TIMEOUT=100\n\n# Update repository list.\n# Install required packages for debian.\n# [TODO] Recheck this list, organized it from memory. There could even be packages that are not necessary.\nRUN set -e \\\n  # Project Dependencies\n  && apt-get update \\\n  && apt-get -qq --no-install-recommends install -y \\\n    git \\\n    python \\\n    python-pip \\\n    python-dev \\\n    python-docutils \\\n    libpython-dev \\\n    cmake \\\n    g++ \\\n    apt-utils \\\n    unzip \\\n    # Gamera Dependencies\n    autoconf \\\n    graphicsmagick \\\n    libtiff5-dev \\\n    libpng-dev \\\n    python-pygments \\\n    python-wxgtk3.0 \\\n    python-wxversion \\\n    lib32ncurses5-dev \\\n    # Libmei\n    libboost-python-dev \\\n    libboost-thread-dev \\\n    libjpeg-dev \\\n    uuid-dev \\\n    libpq-dev \\\n    openjdk-11-jdk \\\n    # Silent the output\n    >/dev/null \\\n  # Needed for pixel_wrapper (node_js)\n  && apt-get -qq --no-install-recommends install -y apt-transport-https curl gnupg >/dev/null \\\n  && curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \\\n  && apt-get -qq update \\\n  && apt-get -qq --no-install-recommends install -y nodejs >/dev/null \\\n  # Needed for Neon2-wrapper (yarn) - [TODO] - Test pixel with yarn also.\n  && apt-get -qq remove cmdtest \\\n  && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n  && apt-get -qq update && apt-get -qq --no-install-recommends install yarn -y >/dev/null \\\n  # Needed for Ocropy (Text-Alignment)\n  && apt -qq --no-install-recommends install -y \\\n    wget \\\n    python-scipy \\\n    python-matplotlib \\\n    python-lxml \\\n    >/dev/null \\\n  # [TODO] Check these\n  && apt-get -qq --no-install-recommends install -y \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    zlib1g-dev \\\n    lib32z1-dev \\\n    libxml2-utils \\\n    libvips42 \\\n    libvips-tools \\\n    libtool \\\n    subversion \\\n    pkg-config \\\n    >/dev/null && rm -rf /var/lib/apt/lists/*;\n\n# Clean out repository list.\nRUN rm -rf /var/lib/apt/lists/*\n\n# Install Gamera. This takes a very long time to build. Do not move it!\n# RUN pip install git+https://github.com/hsnr-gamera/gamera.git --global-option=\"--nowx\"\n# pip broke again: https://github.com/pypa/pip/issues/6560\n# Let's not rely on pip to install this again.\n\nRUN set -e \\\n  && mkdir -p /rodan/data /code/jobs \\\n  && chown -R www-data /rodan \\\n  && git clone https://github.com/hsnr-gamera/gamera.git /code/gamera \\\n  # Without this gamera's setup can't find the version file.\n  && cd /code/gamera \\\n  # && git reset --hard c77194d5e839204efc617971233967ba5a6c53bc \\\n  && git reset --hard  d8e4255a5e2d6d6e64528c8758d75f0afacf4d72 \\\n  && python setup.py install --nowx >/dev/null 2>&1\n\n# Install framework dependencies for Rodan Jobs.\nCOPY ./scripts/install_rodan_job_dependencies /run/\nCOPY ./scripts/install_python2_rodan_jobs /run/\nCOPY ./scripts/install_rodan /run/\nCOPY ./scripts/wait-for-app /run/\nCOPY ./scripts/entrypoint /opt/\nCOPY ./scripts/start-celery /run/\n\n# Copying rodan core from build context into container\n# Rodan folder MUST be uppercase, otherwise many unittests fail.\nCOPY ./rodan-main/code /code/Rodan\n\n\nRUN set -x \\\n  && chmod +x /run/install_rodan_job_dependencies \\\n  && chown www-data /run/install_rodan_job_dependencies \\\n  && /run/install_rodan_job_dependencies \\\n  # Install Rodan Jobs\n  && chmod +x /run/install_python2_rodan_jobs \\\n  && chown www-data /run/install_python2_rodan_jobs \\\n  && /run/install_python2_rodan_jobs \\\n  # Install Rodan\n  && chmod +x /run/install_rodan \\\n  && chown www-data /run/install_rodan \\\n  && pip install --no-cache-dir -U setuptools==44.0.0 \\\n  && sed -i \"s/-e git+https:\\/\\/github.com\\/deepio\\/pybagit.git@4eea813148bc590896000f57cde35fb86443d2f4#egg=pybagit ; python_version >= '3.6'//\" /code/Rodan/requirements.txt \\\n  && /run/install_rodan \\\n  # Script to wait for postgres and redis to be running before attempting to connect to them.\n  && chmod +x /run/wait-for-app \\\n  && chown www-data /run/wait-for-app \\\n  # Runs on both Rodan service, and Rodan-Celery\n  && sed -i 's/\\r//' /opt/entrypoint \\\n  && chmod +x /opt/entrypoint \\\n  && chown www-data /opt/entrypoint \\\n  # This script starts Rodan-Celery\n  && sed -i 's/\\r//' /run/start-celery \\\n  && chmod +x /run/start-celery \\\n  && chown www-data /run/start-celery \\\n  && chown -R www-data /code/Rodan /code/jobs\n\nENTRYPOINT [\"/opt/entrypoint\"]\n"
}