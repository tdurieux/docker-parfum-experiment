{
  "startTime": 1674255975333,
  "endTime": 1674255976329,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 5,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\nARG BRANCHES\nARG VERSION\n\nRUN set -e \\ \n  && apt-get -qq update \\\n  && apt-get install --no-install-recommends ffmpeg libsm6 libxext6 -y \\\n  && apt-get -qq --no-install-recommends install -y \\\n    git \\\n    python3 \\\n    python3-pip \\\n\n    libpng-dev \\\n    libtiff5-dev \\\n\n    python3-opencv \\\n\n    python3-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    zlib1g-dev \\\n    lib32ncurses5-dev \\\n\n    libpq-dev \\\n\n\n    vim && rm -rf /var/lib/apt/lists/*;\n    # \\\n  # # Needed for pixel_wrapper (node_js)\n  # && apt-get -qq install -y apt-transport-https curl gnupg >/dev/null \\\n  # && curl -sL https://deb.nodesource.com/setup_10.x | bash - \\\n  # && apt-get -qq update \\\n  # && apt-get -qq install -y nodejs >/dev/null \\\n  # && npm install -g npm@6.14.12 \\\n  # # Needed for Neon2-wrapper (yarn) - [TODO] - Test pixel with yarn also.\n  # && apt-get -qq remove cmdtest \\\n  # && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  # && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n  # && apt-get -qq update && apt-get -qq install yarn -y >/dev/null\n\n\nRUN rm -rf /var/lib/apt/lists/*\n\nCOPY ./scripts/install_python3_rodan_jobs /run/\nCOPY ./scripts/install_rodan /run/\nCOPY ./scripts/start-celery /run/\nCOPY ./scripts/wait-for-app /run/\n\n# Copying rodan core from build context into container\n# Rodan folder MUST be uppercase, otherwise many unittests fail.\nCOPY ./rodan-main/code /code/Rodan\n\nRUN set -x \\\n  && mkdir -p /code/jobs \\\n  # Install Python3 Rodan Jobs\n  && chmod +x /run/install_python3_rodan_jobs \\\n  && chown www-data /run/install_python3_rodan_jobs \\\n  && /run/install_python3_rodan_jobs \\\n  # Install Rodan\n  # Django-Guardian suddenly failed to build.\n  # https://github.com/DDMAL/rodan-docker/issues/60 \\\n  && pip3 install --no-cache-dir -U pip \\\n  && pip3 install --no-cache-dir setuptools==57.0.0 \\\n  && sed -i \"s/pip /pip3 /g\" /run/install_rodan \\\n  && sed -i \"s/lxml/#lxml/g\" /code/Rodan/requirements.txt \\\n  # && sed -i \"s/pybagit==1.5.0/-e git:\\/\\/github.com\\/deepio\\/pybagit.git@a27c9e0fc3bdf99dab8bd327f3ce9ea884abd6b4#egg=pybagit/g\" /code/Rodan/requirements.txt \\\n  && chmod +x /run/install_rodan \\\n  && chown www-data /run/install_rodan \\\n  && /run/install_rodan \\\n  # Add Celery script\n  && chmod +x /run/start-celery \\\n  && chown www-data /run/start-celery \\\n  # Change the concurency for python3 jobs (Calvo)\n  && sed -i \"s/=10/=1/g\" /run/start-celery \\\n  # Script to wait for postgres and redis to be running before attempting to connect to them.\n  && chmod +x /run/wait-for-app \\\n  && chown www-data /run/wait-for-app \\\n  && chown -R www-data /code/Rodan /code/jobs \\\n  && pip3 install --no-cache-dir opencv-python==4.5.5.64\n  # # Runs on both Rodan service, and Rodan-Celery\n  # && sed -i 's/\\r//' /opt/entrypoint \\\n  # && chmod +x /opt/entrypoint \\\n  # && chown www-data /opt/entrypoint \\\n  # # This script starts Rodan-Celery\n  # && sed -i 's/\\r//' /run/start-celery \\\n  # && chmod +x /run/start-celery \\\n  # && chown www-data /run/start-celery \\\n  # && chown -R www-data /code/Rodan /code/jobs\n\n\n"
}