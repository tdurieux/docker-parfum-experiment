{
  "startTime": 1674248089849,
  "endTime": 1674248090748,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 142
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* \\\n    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\n\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils build-essential software-properties-common curl wget unzip nano git && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository -y ppa:openjdk-r/ppa\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\nENV PATH /opt/conda/bin:$PATH\n\n# RUN apt-get update --fix-missing && \\\n#     apt-get install -y openjdk-8-jre-headless wget bzip2 ca-certificates curl git && \\\n#     apt-get clean && \\\n#     rm -rf /var/lib/apt/lists/*\n\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> /etc/profile && \\\n    echo \"conda activate base\" >> /etc/profile && \\\n    . /etc/profile\n\n\nRUN mkdir ~/.pip\nRUN echo \"[global]\\n trusted-host = mirrors.aliyun.com\\n index-url = https://mirrors.aliyun.com/pypi/simple\" > ~/.pip/pip.conf\n\nRUN conda create --name dev python=3.6 --yes --quiet\nRUN  . /etc/profile && conda activate dev && pip install --no-cache-dir \\\nCython numpy pandas scikit-learn plotly pyarrow==0.10.0 ray==0.8.0 \\\naiohttp psutil setproctitle grpcio \\\nwatchdog requests click uuid sfcli  pyjava\n\n\nARG SPARK_VERSION\nARG MLSQL_SPARK_VERSION\nARG MLSQL_VERSION\nARG SCALA_VERSION\n\nENV URL_BASE http://www.apache.org/dyn/closer.cgi/\nENV FILENAME spark-${SPARK_VERSION}-bin-hadoop2.7.tgz\nENV URL_DIRECTORIES spark/spark-${SPARK_VERSION}/\n\n# use the closer.cgi to pick a mirror\nRUN CURLCMD=\"curl -s -L ${URL_BASE}${URL_DIRECTORIES}${FILENAME}?as_json=1\" && \\\n    BASE=$(${CURLCMD} | grep preferred | awk '{print $NF}' | sed 's/\\\"//g')  && \\\n    URL=\"${BASE}${URL_DIRECTORIES}${FILENAME}\" && \\\n    mkdir /work && \\\n    curl -f -o \"/work/${FILENAME}\" -L \"${URL}\" && \\\n    cd /work && tar zxf ${FILENAME} && \\\n    rm ${FILENAME}\n\nENV SPARK_HOME /work/spark-${SPARK_VERSION}-bin-hadoop2.7\n\nRUN mkdir -p /home/deploy\nRUN mkdir -p /home/deploy/mlsql\nRUN mkdir -p /home/deploy/mlsql-console\nRUN mkdir -p /tmp/__mlsql__/logs\n\nRUN mkdir -p /home/deploy/mlsql/libs\nENV MLSQL_DISTRIBUTIOIN_URL=\"streamingpro-mlsql-spark_${MLSQL_SPARK_VERSION}_${SCALA_VERSION}-${MLSQL_VERSION}.jar\"\nADD  ${MLSQL_DISTRIBUTIOIN_URL} /home/deploy/mlsql/libs\nADD  lib/ansj_seg-5.1.6.jar /home/deploy/mlsql/libs\nADD  lib/nlp-lang-1.7.8.jar /home/deploy/mlsql/libs\nADD  start-local.sh /home/deploy/mlsql\nADD  log4j.properties ${SPARK_HOME}/conf\nWORKDIR /home/deploy/mlsql\n\n#ENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nCMD ./start-local.sh\n"
}