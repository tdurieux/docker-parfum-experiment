{
  "startTime": 1674249157091,
  "endTime": 1674249157906,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache\n\nARG VERSION=\"1.x\"\n\n# Instala as dependências necessárias e habilita as extensões do PHP\nRUN set -ex; \\\n    apt update; \\\n    apt install --no-install-recommends -y \\\n        apt-transport-https \\\n        libjpeg62-turbo-dev \\\n        libfreetype6-dev \\\n        libpng-dev \\\n        libxml2-dev \\\n        libonig-dev \\\n        libzip-dev \\\n        zip \\\n        netcat \\\n        libcurl4-openssl-dev; \\\n    docker-php-ext-configure gd --with-jpeg --with-freetype; \\\n    docker-php-ext-install -j$(nproc) \\\n        gd \\\n        pdo \\\n        mbstring \\\n        pdo_mysql \\\n        zip; \\\n    rm -rf /var/lib/apt/lists/*; \\\n\n    curl -f -sSLo- https://getcomposer.org/installer | php -- --filename=composer --install-dir=/bin;\n\n# Configura regras de exibição do log\nRUN { \\\n        echo 'error_reporting = E_ERROR | E_WARNING | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING | E_RECOVERABLE_ERROR'; \\\n        echo 'display_errors = Off'; \\\n        echo 'display_startup_errors = Off'; \\\n        echo 'error_log = /dev/stderr'; \\\n        echo 'log_errors = On'; \\\n        echo 'log_errors_max_len = 1024'; \\\n        echo 'ignore_repeated_errors = On'; \\\n        echo 'ignore_repeated_source = Off'; \\\n        echo 'html_errors = Off'; \\\n        echo 'zend.exception_ignore_args = Off'; \\\n        echo 'zend.exception_string_param_max_len = 25'; \\\n    } > /usr/local/etc/php/conf.d/error-logging.ini\n\n# Configura o PHP para funcionamento da plataforma\nRUN { \\\n        echo 'allow_url_fopen = On'; \\\n        echo 'default_charset = UTF-8'; \\\n        echo 'file_uploads = On'; \\\n        echo 'max_execution_time = 360'; \\\n        echo 'memory_limit = 128M'; \\\n        echo 'upload_max_filesize = 200M'; \\\n        echo 'open_basedir = none'; \\\n        echo \"user_agent = \\\"Curl-OpenCartBrasil/${VERSION}\\\"\"; \\\n        echo 'post_max_size = 200M'; \\\n        echo 'session.auto_start = Off'; \\\n        echo 'session.use_only_cookies = On'; \\\n        echo 'session.use_cookies = On'; \\\n        echo 'session.use_trans_sid = Off'; \\\n        echo 'session.cookie_httponly = Off'; \\\n        echo 'session.cache_limiter = nocache'; \\\n    } > /usr/local/etc/php/conf.d/opencart-brasil.ini;\n\nRUN set -aux; \\\n    { \\\n        echo \"<VirtualHost *:80>\"; \\\n        echo \"    ServerAdmin webmaster@localhost\"; \\\n        echo \"    DocumentRoot /var/www/html\"; \\\n        echo \"\"; \\\n        echo \"    ErrorLog /dev/stderr\"; \\\n        echo \"    CustomLog /dev/stdout combined\"; \\\n        echo \"</VirtualHost>\"; \\\n    } > /etc/apache2/sites-available/000-default.conf; \\\n    \\\n    if [ ! -f .htaccess ]; then \\\n        mv .htaccess.txt .htaccess; \\\n    fi; \\\n    \\\n    a2enmod rewrite;\n\nEXPOSE 80\n\nWORKDIR /var/www/html\n\nCOPY ./ .\n\nVOLUME /var/www/html\n\nCOPY ./scripts/docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nCMD [\"apache2-foreground\"]"
}