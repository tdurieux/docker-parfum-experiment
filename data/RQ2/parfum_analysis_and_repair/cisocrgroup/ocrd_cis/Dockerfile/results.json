{
  "startTime": 1674217455808,
  "endTime": 1674217456782,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ocrd/core:latest AS base\nENV VERSION=\"Di 12. Mai 13:26:35 CEST 2020\"\nENV GITURL=\"https://github.com/cisocrgroup\"\nENV DOWNLOAD_URL=\"http://cis.lmu.de/~finkf\"\n\n# deps\nRUN apt-get update \\\n\t&& apt-get -y install --no-install-recommends locales && rm -rf /var/lib/apt/lists/*;\n\n# locales\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=en_US.UTF-8\n\n# install the profiler\nFROM base AS profiler\nRUN apt-get update \\\n\t&& apt-get -y install --no-install-recommends cmake g++ libcppunit-dev libxerces-c-dev \\\n\t&& git clone ${GITURL}/Profiler --branch devel --single-branch /build \\\n\t&& cd /build \\\n\t&& cmake -DCMAKE_BUILD_TYPE=release . \\\n\t&& make compileFBDic trainFrequencyList runDictSearch profiler \\\n\t&& mkdir /apps \\\n\t&& cp bin/compileFBDic bin/trainFrequencyList bin/profiler bin/runDictSearch /apps/ \\\n\t&& cd / \\\n    && rm -rf /build && rm -rf /var/lib/apt/lists/*;\n\nFROM profiler AS languagemodel\n# install the profiler's language backend\nCOPY --from=profiler /apps/compileFBDic /apps/\nCOPY --from=profiler /apps/trainFrequencyList /apps/\nCOPY --from=profiler /apps/runDictSearch /apps/\nRUN apt-get update \\\n\t&& apt-get -y install --no-install-recommends icu-devtools \\\n\t&& git clone ${GITURL}/Resources --branch master --single-branch /build \\\n\t&& cd /build/lexica \\\n\t&& PATH=$PATH:/apps make \\\n\t&& PATH=$PATH:/apps make test \\\n\t&& PATH=$PATH:/apps make install \\\n\t&& cd / \\\n\t&& rm -rf /build && rm -rf /var/lib/apt/lists/*;\n\nFROM base AS postcorrection\n# install ocrd_cis (python)\nVOLUME [\"/data\"]\nCOPY --from=languagemodel /etc/profiler/languages /etc/profiler/languages\nCOPY --from=profiler /apps/profiler /apps/\nCOPY --from=profiler /usr/lib/x86_64-linux-gnu/libicuuc.so /usr/lib//x86_64-linux-gnu/\nCOPY --from=profiler /usr/lib/x86_64-linux-gnu/libicudata.so /usr/lib//x86_64-linux-gnu/\nCOPY --from=profiler /usr/lib//x86_64-linux-gnu/libxerces-c-3.2.so /usr/lib//x86_64-linux-gnu/\nCOPY . /build\nRUN apt-get update \\\n\t&& apt-get -y install --no-install-recommends gcc wget default-jre-headless \\\n\t&& cd /build \\\n\t&& make install \\\n\t&& make test \\\n\t&& cd / \\\n\t&& rm -rf /build && rm -rf /var/lib/apt/lists/*;\n"
}