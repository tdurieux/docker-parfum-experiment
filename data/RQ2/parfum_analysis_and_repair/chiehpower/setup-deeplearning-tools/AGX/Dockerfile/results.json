{
  "startTime": 1674219984547,
  "endTime": 1674219985641,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 9,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 69,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 9,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 117
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 9,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 9,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "From nvcr.io/nvidia/l4t-ml:r32.4.4-py3\n\nRUN python3 -m pip install flask flask_cors\n\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates wget sudo protobuf-compiler \\\nlibprotobuf-dev python3-pip curl vim zip libsm6 libxext6 libxrender-dev python3-tk \\\nbuild-essential libatlas-base-dev gfortran libfreetype6-dev python3-setuptools protobuf-compiler libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;\n\n\n### Install cmake (Need to install libcurl4-openssl-dev)\nWORKDIR /home/ai_container\nRUN sudo wget https://www.cmake.org/files/v3.13/cmake-3.13.0.tar.gz && tar xpvf cmake-3.13.0.tar.gz cmake-3.13.0/ && cd cmake-3.13.0/ && sudo ./bootstrap --system-curl && sudo make -j8 && echo 'export PATH=/home/ai_container/cmake-3.13.0/bin/:$PATH' >> ~/.bashrc && source ~/.bashrc\n\nRUN python3 -m pip install --upgrade pip setuptools wheel && sudo -H pip3 install --no-cache-dir jetson-stats\n\n### Install cv2 with numpy 1.19.2\nRUN python3 -m pip install opencv-python==4.3.0.38 opencv-python-headless==4.3.0.38\n\n### Build onnxruntime\n# Requiremnet:\nRUN sudo apt install -y --no-install-recommends \\\n  build-essential software-properties-common libopenblas-dev \\\n  libpython3.6-dev python3-pip python3-dev python3-setuptools python3-wheel && rm -rf /var/lib/apt/lists/*;\n\n# This one is installed the onnxruntime v1.6.0\nRUN git clone --recursive https://github.com/microsoft/onnxruntime && export CUDACXX=\"/usr/local/cuda/bin/nvcc\" && cd onnxruntime &&\n./build.sh --config Release --update --build --parallel --build_wheel \\\n--use_tensorrt --cuda_home /usr/local/cuda --cudnn_home /usr/lib/aarch64-linux-gnu \\\n--tensorrt_home /usr/lib/aarch64-linux-gnu && sudo -H python3 -m pip install ./build/Linux/Release/dist/onnxruntime_gpu_tensorrt-1.7.0-cp36-cp36m-linux_aarch64.whl\n\n"
}