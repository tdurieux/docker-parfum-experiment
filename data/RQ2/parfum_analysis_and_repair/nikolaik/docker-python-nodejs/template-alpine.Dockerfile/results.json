{
  "startTime": 1674252862834,
  "endTime": 1674252863821,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 26,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 28,
        "columnEnd": 56
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 60,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Generated %%NOW%%\n# python: %%PYTHON_CANONICAL%%\n# nodejs: %%NODEJS_CANONICAL%%\nFROM python:%%PYTHON_IMAGE%% as builder\n\nRUN apk add --no-cache curl gcc musl-dev libffi-dev\n# FIXME: poetry: Replace workaround for missing cffi musllinux wheel builds when https://foss.heptapod.net/pypy/cffi/-/issues/509 is ready\nRUN pip install --no-cache-dir cffi\nRUN find /root/.cache/pip/wheels -name '*.whl' -exec cp {} / +\n# Install node prereqs, nodejs and yarn\n# Ref: https://raw.githubusercontent.com/nodejs/docker-node/master/Dockerfile-alpine.template\n# Ref: https://yarnpkg.com/en/docs/install\nRUN curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v%%NODEJS_CANONICAL%%/node-v%%NODEJS_CANONICAL%%-linux-x64-musl.tar.xz\"\nRUN curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v%%NODEJS_CANONICAL%%/SHASUMS256.txt\"\nRUN grep \" node-v%%NODEJS_CANONICAL%%-linux-x64-musl.tar.xz\\$\" SHASUMS256.txt | sha256sum -c -\nRUN tar -xf \"node-v%%NODEJS_CANONICAL%%-linux-x64-musl.tar.xz\" && rm \"node-v%%NODEJS_CANONICAL%%-linux-x64-musl.tar.xz\"\n\nFROM python:%%PYTHON_IMAGE%%\nMAINTAINER Nikolai R Kristiansen <nikolaik@gmail.com>\n\nRUN addgroup -g 1000 pn && adduser -u 1000 -G pn -s /bin/sh -D pn\nRUN apk add --no-cache libstdc++\nCOPY --from=builder /node-v%%NODEJS_CANONICAL%%-linux-x64-musl /usr/local\nRUN npm i -g npm@^%%NPM_VERSION%% yarn && npm cache clean --force;\nRUN pip install --no-cache-dir -U pip && pip install --no-cache-dir pipenv\n# Poetry\n# Mimic what install-poetry.py does without the flexibility (platforms, install sources, etc).\n# Also install wheels from builder image\nCOPY --from=builder /*.whl /\nENV VENV=/opt/poetryvenv\nRUN python -m venv $VENV && $VENV/bin/pip install --no-cache-dir -U pip && $VENV/bin/pip install --no-cache-dir /*.whl && rm /*.whl\nRUN $VENV/bin/pip install --no-cache-dir poetry && ln -s $VENV/bin/poetry /usr/local/bin/poetry\n"
}