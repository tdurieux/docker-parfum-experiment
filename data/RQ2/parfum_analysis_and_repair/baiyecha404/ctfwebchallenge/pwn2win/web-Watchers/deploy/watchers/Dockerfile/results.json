{
  "startTime": 1674254442774,
  "endTime": 1674254443223,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 153
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 14,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 153
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 14,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# install web server\nRUN apt update && apt install --no-install-recommends -y apache2 curl php php-pear php-dev libapache2-mod-php php-curl wget iptables git net-tools iproute2 chromium-browser cron && rm -rf /var/lib/apt/lists/*;\n\n# install node\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -; \\\n apt update && apt install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install npm dependencies\n# I used the latest version in my challenge but as soon as i'm publishing it, i'm defining a working one\nRUN npm install -g wappalyzer@6.0.2 --unsafe-perm --save && npm cache clean --force;\n\n# setup webserver\nWORKDIR /var/www/html\n\nCOPY . .\n\nWORKDIR /var/www/\n\nRUN chown -R www-data:www-data . && \\\nmv html/secrets.php . && \\\nmv html/weaponlyzer.php . && \\\nchmod 777 -R html/pages && \\\necho 'ServerName localhost' >> /etc/apache2/apache2.conf && \\\nsed -i 's/Options Indexes FollowSymLinks/Options -Indexes/' /etc/apache2/apache2.conf && \\\nsed -i 's/AllowOverride none/AllowOverride All/i' /etc/apache2/apache2.conf && \\\na2enmod rewrite && \\\nservice apache2 restart\n\n# expose server port\nEXPOSE 80\n\n# start\nCMD /usr/sbin/apache2ctl -D FOREGROUND\n"
}