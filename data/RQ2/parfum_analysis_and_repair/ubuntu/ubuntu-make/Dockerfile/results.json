{
  "startTime": 1674218808954,
  "endTime": 1674218810101,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 2,
        "columnEnd": 142
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker container for Ubuntu Make\n# this installs a full ubuntu desktop environment in an\n# unprivileged container, and adds a passwordless sudo user.\n\n# This enables running medium tests of umake.\n\nFROM\tubuntu:18.04\nLABEL maintainer\tGalileo Sartor <galileo.sartor@gmail.com>\n\n# Set the env variable DEBIAN_FRONTEND to noninteractive\nENV DEBIAN_FRONTEND noninteractive\n\nENV LANG C.UTF-8\n\nCOPY debian/control /tmp/\nCOPY docker/umake_docker.pub /tmp/\nCOPY tests/data/*.crt /usr/local/share/ca-certificates/\nCOPY docker/create_packages.sh /tmp/\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Refresh the image\nRUN \\\n  apt-get update && \\\n# install add-apt-repository and tools to create build-deps\n# Twisted for a mock FTP server and locales\n  apt-get install --no-install-recommends -y software-properties-common devscripts equivs dpkg-dev openssh-server sudo python3-twisted locales && \\\n# Set default locale\n  locale-gen en_US.UTF-8 && \\\n# install umake build-deps\n  mk-build-deps /tmp/control -i --tool 'apt-get --yes' && \\\n# for running it as a daemon (and ssh requires the sshd directory)\n  mkdir /var/run/sshd && \\\n# disable DNS to not wait on host name resolution (delay when working offline)\n  echo \"UseDNS no\" >> /etc/ssh/sshd_config && \\\n  echo 'EXTRA_GROUPS=\"adm cdrom sudo dip plugdev fuse\"' >> /etc/adduser.conf && \\\n  echo 'ADD_EXTRA_GROUPS=1' >> /etc/adduser.conf && \\\n  echo \"user ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/bar && \\\n  adduser --disabled-password --gecos \"\" user && \\\n  echo user:user | chpasswd && \\\n# add the ubuntu make ssh key to the list of authorized ones\n  mkdir -p /home/user/.ssh && \\\n  cat /tmp/umake_docker.pub >> /home/user/.ssh/authorized_keys && \\\n  chown -R user:user /home/user/ && \\\n# add certificates\n  update-ca-certificates && \\\n# finally remove all ppas and add local repository\n  /tmp/create_packages.sh /apt-fake-repo && \\\n# clean up stuff\n  apt-get clean -y && \\\n  apt-get remove --purge -y software-properties-common devscripts equivs && rm -rf /var/lib/apt/lists/*;\n"
}