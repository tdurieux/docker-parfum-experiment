{
  "startTime": 1674249423360,
  "endTime": 1674249424376,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 61,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 221
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 475
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# for building the consensus_node/fat_node images, set CI_REGISTRY_IMAGE to the\n# project's registry (e.g. registry.gitlab.syncad.com/hive/hive)\nARG CI_REGISTRY_IMAGE\nARG RUNTIME_IMAGE_TAG=:latest\n\nFROM ubuntu:18.04 AS runtime\nENV LANG=en_US.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y language-pack-en && apt-get install --no-install-recommends -y libsnappy1v5 libreadline7 && apt-get clean && rm -r /var/lib/apt/lists/*\n\n###################################\nFROM runtime AS builder-tester-base\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git python3 build-essential gir1.2-glib-2.0 libgirepository-1.0-1 libglib2.0-0 libglib2.0-data libicu60 libxml2 python3-distutils python3-lib2to3 python3-pkg-resources shared-mime-info xdg-user-dirs && \\\n    apt-get clean && rm -r /var/lib/apt/lists/*\n\n###################################\nFROM builder-tester-base AS builder\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y autoconf automake cmake g++ git libbz2-dev libsnappy-dev libssl-dev libtool make pkg-config python3-jinja2 libboost-chrono-dev libboost-context-dev libboost-coroutine-dev libboost-date-time-dev libboost-filesystem-dev libboost-iostreams-dev libboost-locale-dev libboost-program-options-dev libboost-serialization-dev libboost-signals-dev libboost-system-dev libboost-test-dev libboost-thread-dev doxygen libncurses5-dev libreadline-dev perl ninja-build && \\\n    apt-get clean && rm -r /var/lib/apt/lists/*\n\n###################################\nFROM builder-tester-base AS test\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noniteractive apt-get --no-install-recommends install -y screen python3-pip python3-dateutil tzdata python3-junit.xml && \\\n    apt-get clean && rm -r /var/lib/apt/lists/* && \\\n    pip3 install --no-cache-dir -U secp256k1prp\n# the above will leave the timezone in UTC, if you want run:\n#    ln -sf /usr/share/zoneinfo/America/New_York /etc/localtime\n\n#####################################################################\nFROM $CI_REGISTRY_IMAGE/runtime$RUNTIME_IMAGE_TAG AS consensus_node\n\nARG TRACKED_ACCOUNT_NAME\nENV TRACKED_ACCOUNT_NAME=${TRACKED_ACCOUNT_NAME}\nARG USE_PUBLIC_BLOCKLOG\nENV USE_PUBLIC_BLOCKLOG=${USE_PUBLIC_BLOCKLOG}\nENV install_base_dir=\"/usr/local/hive\"\n\n# rpc\nEXPOSE 8090\n\n# p2p\nEXPOSE 2001\n\nWORKDIR \"${install_base_dir}/consensus\"\nCOPY consensus_build/install-root/ consensus_build/hived.run ./\nCOPY consensus_build/config-for-docker.ini datadir/config.ini\nRUN chmod 755 hived.run\n\nCMD \"${install_base_dir}/consensus/hived.run\"\n\n#####################################################################\nFROM $CI_REGISTRY_IMAGE/runtime$RUNTIME_IMAGE_TAG AS fat_node\n\nARG TRACKED_ACCOUNT_NAME\nENV TRACKED_ACCOUNT_NAME=${TRACKED_ACCOUNT_NAME}\nARG USE_PUBLIC_BLOCKLOG\nENV USE_PUBLIC_BLOCKLOG=${USE_PUBLIC_BLOCKLOG}\nENV install_base_dir=\"/usr/local/hive\"\n\n# rpc\nEXPOSE 8090\n\n# p2p\nEXPOSE 2001\n\nWORKDIR \"${install_base_dir}/fat-node\"\nCOPY fat_build/install-root/ fat_build/hived.run ./\nCOPY fat_build/config-for-docker.ini datadir/config.ini\nRUN chmod 755 hived.run\n\nCMD \"${install_base_dir}/fat-node/hived.run\"\n"
}