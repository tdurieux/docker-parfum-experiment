{
  "startTime": 1674246537783,
  "endTime": 1674246538541,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################\n# Build the frontend\n################################################\n\nFROM node:14.11.0-alpine as frontend_builder\n\nWORKDIR /app\n\n# install and cache app dependencies\nCOPY web/package.json ./\nCOPY web/yarn.lock ./\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# bundle app source inside Docker image\nCOPY web/. .\nRUN yarn run build\n\nFROM golang:1.16-alpine AS server_builder\n\nWORKDIR /app\n\nCOPY go.* ./\n\n# install dependencies\nRUN go mod download\n\n# copy built frontend static files\nCOPY --from=frontend_builder ./app/build ./web/build\n\nARG VERSION\n\n# add all other folders required for the Go build\nCOPY . .\nCOPY web/build.go web/build.go\n\nRUN go build -ldflags \"-X commands.version=$VERSION\" -o bin/iamzero-all-in-one cmd/all-in-one/main.go\n\nFROM alpine:3.13.5\n\nWORKDIR /app\n\nCOPY --from=server_builder /app/bin/iamzero-all-in-one /app/iamzero-all-in-one\n\n# set HTTP ingress port\nENV IAMZERO_COLLECTOR_HOST=0.0.0.0:13991\nENV IAMZERO_CONSOLE_HOST=0.0.0.0:14321\n\n# Web HTTP\nEXPOSE 14321\n\n# Collector HTTP\nEXPOSE 13991\n\n# Healthcheck\nEXPOSE 10866\n\nCMD /app/iamzero-all-in-one\n"
}