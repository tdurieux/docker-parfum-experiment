{
  "startTime": 1674221152251,
  "endTime": 1674221153440,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Build environment.\n# Java 11, Scala 2.12.13, SBT 1.5.0 included.\nFROM hseeberger/scala-sbt:11.0.14.1-oraclelinux8_1.6.2_2.13.8 as build\n# Build application inside /app\nWORKDIR /app\n\n# Install git\nRUN microdnf update -y && microdnf install git -y --nodocs --refresh\n\n# Copy all application files\nCOPY . ./\n# Build to /app/target/universal/rdfshape.zip\nRUN [\"sbt\", \"Universal / packageBin\"]\n\n## Prod environment.\nFROM adoptopenjdk/openjdk12:jre-12.0.2_10-ubuntu as prod\nLABEL org.opencontainers.image.source=\"https://github.com/weso/rdfshape-api\"\nWORKDIR /app\n\n# Copy zip with universal executable\nCOPY --from=build /app/target/universal/rdfshape.zip .\n\n# Download required programs dependencies. Unzip binaries.\nRUN apt -qq -y update && apt -qq -y upgrade && \\\n    apt -qq --no-install-recommends -y install unzip graphviz && \\\n    unzip -q rdfshape.zip && \\\n    rm rdfshape.zip && rm -rf /var/lib/apt/lists/*;\n\n# Add rdfshape to path\nENV PATH=\"/app/rdfshape/bin:${PATH}\"\n\n# Run\n# Port for the app to run\nENV PORT=8080\nEXPOSE $PORT\n# Timeout for streaming validations (seconds)\nENV STREAM_TIMEOUT=40\n# Non-priviledged user to run the app\nRUN addgroup --system rdfshape && adduser --system --shell /bin/false --ingroup rdfshape rdfshape\nRUN chown -R rdfshape:rdfshape /app\nUSER rdfshape\n\n# JVM settings to allow connection to DB\nENV SSL_FIX=\"-Djdk.tls.client.protocols=TLSv1.2\"\n\n# Define commands to launch RDFShape\nENV HTTPS_CLI_ARG=\"--https\"\nENV RDFSHAPE_CMD_HTTP=\"rdfshape $SSL_FIX --port $PORT --stream-timeout $STREAM_TIMEOUT -s\"\nENV RDFSHAPE_CMD_HTTPS=\"$RDFSHAPE_CMD_HTTP $HTTPS_CLI_ARG\"\n\nCMD bash -c \"if [[ ! -z '$USE_HTTPS' ]]; then $RDFSHAPE_CMD_HTTPS; else $RDFSHAPE_CMD_HTTP; fi\""
}