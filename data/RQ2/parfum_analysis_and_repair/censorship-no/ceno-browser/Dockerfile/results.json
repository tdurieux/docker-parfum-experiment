{
  "startTime": 1674248748275,
  "endTime": 1674248749154,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 20,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 44,
        "columnStart": 20,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use this configuration to build CENO\n# with a root user inside of the build container.\n\nFROM registry.gitlab.com/equalitie/ouinet:android\n\nWORKDIR /usr/local/src/ouifennec\n# Required by some task in Fennec bootstrap.\nENV SHELL /bin/bash\n\nRUN \\\n  # Bootstrapping below installs the latest version of Rust,\n  # which may break the build,\n  # so pin one that we know works.\n  # See <https://bugzilla.mozilla.org/show_bug.cgi?id=1585099>.\n  wget -q -O- https://sh.rustup.rs | sh -s -- -y && \\\n  ~/.cargo/bin/rustup update && \\\n  ~/.cargo/bin/rustup toolchain install 1.37.0 && \\\n  ~/.cargo/bin/rustup default 1.37.0\nRUN \\\n  # Enable ARMv7 Android target,\n  # see <https://bugzilla.mozilla.org/show_bug.cgi?id=1384231>.\n  # Also note that `ensure_rust_targets` during bootstrap below\n  # adds target `thumbv7neon-linux-androideabi` instead of this one for Rust >= 1.33.\n  # That one might work for us, but it still needs testing.\n  ~/.cargo/bin/rustup target add armv7-linux-androideabi\n\nRUN \\\n  apt-get update && apt-get install --no-install-recommends -y \\\n    ccache gosu ninja-build unionfs-fuse libnotify-bin && \\\n  rm -rf /var/lib/apt/lists/*\n# Install replacements for private packages\n# and tell bootstrap to avoid installing them from Mozilla servers.\nENV MOZBUILD_CENO_ENV y\nRUN \\\n  echo \"deb http://deb.debian.org/debian buster-backports main\" > /etc/apt/sources.list.d/buster-backports.list && \\\n  apt-get update && apt-get install --no-install-recommends -y \\\n    npm \\\n    # The version of Clang/LLVM provided by Mozilla is available from Buster Backports.\n    clang-8 lld-8 llvm-8 cbindgen \\\n    clang-tidy-8 \\\n    nasm \\\n    # This is only needed for the x86_64 build, used for testing.\n    yasm \\\n    && \\\n  rm -rf /var/lib/apt/lists/*\nRUN SCCTMP=$(mktemp -d) && cd $SCCTMP && \\\n  wget -O sccache.tar.gz \"https://github.com/mozilla/sccache/releases/download/0.2.9/sccache-0.2.9-x86_64-unknown-linux-musl.tar.gz\" && \\\n  tar -xf sccache.tar.gz && \\\n  install sccache-*/sccache /usr/local/bin/ && \\\n  cd && rm -rf $SCCTMP && rm sccache.tar.gz\n# Fake the locations of some packages which\n# configuration stubbornly expects in the state directory as private.\nRUN \\\n  mkdir -p ~/.mozbuild && cd ~/.mozbuild && \\\n  ln -s /usr/lib/llvm-8 clang\n\nRUN --mount=type=bind,target=/usr/local/src/ouifennec,ro \\\n  apt-get update && \\\n  cd gecko-dev && \\\n  # This would need to be invoked twice if we hadn't installed Rust above,\n  # so that `gecko-dev/python/mozboot/mozboot/base.py::ensure_rust_targets` gets called.\n  # It won't normally due to logic being such:\n  # `have_rust ? ensure_rust_targets() : install_rust()`\n  # (note no ensure targets in second branch).\n  ./mach bootstrap --application-choice=mobile_android --no-interactive && \\\n  # Remove downloaded archives which have already been unpacked.\n  rm -rf ~/.mozbuild/mozboot/ && \\\n  # Fix some broken permissions in Android SDK tools (and maybe others).\n  # Not really needed here, but it may come in handy for non-root users.\n  chmod -R go+rX ~/.mozbuild/ && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Move all dot directories that will be receiving reusable data during the build\n# into a single directory (with symbolic links from the expected locations),\n# so that the directory can be bind-mounted outside\n# and data reused between different runs.\n# Please note that the bind-mounted directory\n# should already contain the subdirectories listed below.\nRUN \\\n  cd ~ && \\\n  mkdir -p .android .ccache .gradle .cache && \\\n  mv .android .cache/_android && ln -s .cache/_android .android && \\\n  mv .ccache  .cache/_ccache  && ln -s .cache/_ccache  .ccache && \\\n  mv .gradle  .cache/_gradle  && ln -s .cache/_gradle  .gradle\n"
}