diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kubeedge/sedna/examples/multi-edge-inference-pedestrian-tracking-gpu-videoanalytics.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kubeedge/sedna/examples/multi-edge-inference-pedestrian-tracking-gpu-videoanalytics.Dockerfile/repaired.Dockerfile
index ad85508..f34f4f0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kubeedge/sedna/examples/multi-edge-inference-pedestrian-tracking-gpu-videoanalytics.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kubeedge/sedna/examples/multi-edge-inference-pedestrian-tracking-gpu-videoanalytics.Dockerfile/repaired.Dockerfile
@@ -4,13 +4,13 @@ WORKDIR /home
 RUN apt update -o Acquire::https::developer.download.nvidia.com::Verify-Peer=false
 
 # Required by OpenCV
-RUN apt install libgl1 libglx-mesa0 libgl1-mesa-glx -y
-RUN apt install -y gfortran libopenblas-dev liblapack-dev
+RUN apt install --no-install-recommends libgl1 libglx-mesa0 libgl1-mesa-glx -y && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y gfortran libopenblas-dev liblapack-dev && rm -rf /var/lib/apt/lists/*;
 
-# Update Python 
-RUN apt install python3.8 python3.8-distutils python3-venv curl -y
+# Update Python
+RUN apt install --no-install-recommends python3.8 python3.8-distutils python3-venv curl -y && rm -rf /var/lib/apt/lists/*;
 RUN python3.8 --version
-RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
+RUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py
 RUN python3.8 get-pip.py
 
 ######################################################
@@ -18,16 +18,16 @@ RUN python3.8 get-pip.py
 ######################################################
 
 ENV DEBIAN_FRONTEND="noninteractive" TZ="Europe/London"
-RUN apt install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev \
+RUN apt install --no-install-recommends libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev \
     gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
     gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools \
     gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 \
-    gstreamer1.0-pulseaudio -y
+    gstreamer1.0-pulseaudio -y && rm -rf /var/lib/apt/lists/*;
 
-RUN apt install ubuntu-restricted-extras wget ca-certificates -y
+RUN apt install --no-install-recommends ubuntu-restricted-extras wget ca-certificates -y && rm -rf /var/lib/apt/lists/*;
 
 RUN wget -k --no-check-certificate https://github.com/opencv/opencv/archive/4.5.5.zip -O opencv.zip
-RUN apt install unzip cmake -y
+RUN apt install --no-install-recommends unzip cmake -y && rm -rf /var/lib/apt/lists/*;
 
 RUN wget -k --no-check-certificate https://github.com/opencv/opencv_contrib/archive/4.5.5.zip -O opencv_contrib.zip
 
@@ -70,30 +70,30 @@ RUN make install
 RUN ldconfig
 
 ## Install applications dependencies
-RUN pip install tqdm pillow pytorch-ignite asyncio --trusted-host=developer.download.nvidia.com
+RUN pip install --no-cache-dir tqdm pillow pytorch-ignite asyncio --trusted-host=developer.download.nvidia.com
 
 ## Add Kafka Python library
-RUN pip install kafka-python --trusted-host=developer.download.nvidia.com
+RUN pip install --no-cache-dir kafka-python --trusted-host=developer.download.nvidia.com
 
 ## Add tracking dependencies
-RUN pip install lap scipy Cython --trusted-host=developer.download.nvidia.com
-RUN pip install cython_bbox --trusted-host=developer.download.nvidia.com
+RUN pip install --no-cache-dir lap scipy Cython --trusted-host=developer.download.nvidia.com
+RUN pip install --no-cache-dir cython_bbox --trusted-host=developer.download.nvidia.com
 
 ## SEDNA SECTION ##
-  
+
 COPY ./lib/requirements.txt /home
-RUN pip install -r /home/requirements.txt --trusted-host=developer.download.nvidia.com
+RUN pip install --no-cache-dir -r /home/requirements.txt --trusted-host=developer.download.nvidia.com
 
 ENV PYTHONPATH "${PYTHONPATH}:/home/lib"
 
 # OpenCV
-RUN apt install libglib2.0-0 -y
+RUN apt install --no-install-recommends libglib2.0-0 -y && rm -rf /var/lib/apt/lists/*;
 
 ## Install S3 library
-RUN pip install boto3
+RUN pip install --no-cache-dir boto3
 
 # ONNX
-RUN pip install onnx protobuf==3.16.0
+RUN pip install --no-cache-dir onnx protobuf==3.16.0
 
 WORKDIR /home/work
 COPY ./lib /home/lib