{
  "startTime": 1674250999438,
  "endTime": 1674251000099,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ############# #\n# panel builder #\n# ############# #\n\nFROM node:14.7.0-alpine as panel_builder\n\n# make the 'app' folder the current working directory\nWORKDIR /app\n\n# copy both 'package.json' and 'package-lock.json' (if available)\nCOPY ./panel/package*.json ./\n\n# install project dependencies\nRUN npm install && npm cache clean --force;\n\n# copy project files and folders to the current working directory (i.e. 'app' folder)\nCOPY ./panel/ ./\n\n# build app for production with minification\nRUN npm run build\n\n\n# ############# #\n# front builder #\n# ############# #\n\nFROM node:14.7.0-alpine as front_builder\n\n# make the 'app' folder the current working directory\nWORKDIR /app\n\n# copy both 'package.json' and 'package-lock.json' (if available)\nCOPY ./front/package*.json ./\n\n# install project dependencies\nRUN npm install && npm cache clean --force;\n\n# copy project files and folders to the current working directory (i.e. 'app' folder)\nCOPY ./front .\n\n# build app for production with minification\nRUN npm run build\n\n\n\n# ############# #\n# NGINX builder #\n# ############# #\n\nFROM nginx:1.21-alpine\n\n# remove default nginx index\nRUN rm -rf /usr/share/nginx/html/*\nWORKDIR /usr/share/nginx/html\n\nRUN mkdir front\nCOPY --from=front_builder /app/dist ./front/\n\nRUN mkdir panel\nCOPY --from=panel_builder /app/dist ./panel/\n\n# first remove the current existing config\nRUN rm /etc/nginx/conf.d/default.conf\n# then copy the config file to the container\nCOPY nginx.conf /etc/nginx/conf.d"
}