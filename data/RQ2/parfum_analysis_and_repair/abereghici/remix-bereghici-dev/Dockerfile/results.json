{
  "startTime": 1674246701567,
  "endTime": 1674246702329,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base node image\nFROM node:16-bullseye-slim as base\n\n# install open ssl for prisma\nRUN apt-get update && apt-get install --no-install-recommends -y openssl ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# install all node_modules, including dev\nFROM base as deps\n\nENV CYPRESS_INSTALL_BINARY=0\nENV HUSKY_SKIP_INSTALL=1\n\nRUN mkdir /app/\nWORKDIR /app/\n\nADD package.json package-lock.json ./\nRUN npm install --production=false && npm cache clean --force;\n\n# setup production node_modules\nFROM base as production-deps\n\nRUN mkdir /app/\nWORKDIR /app/\n\nCOPY --from=deps /app/node_modules /app/node_modules\nADD package.json package-lock.json /app/\nRUN npm prune --production\n\n# build app\nFROM base as build\n\nARG COMMIT_SHA\nENV COMMIT_SHA=$COMMIT_SHA\n\nRUN mkdir /app/\nWORKDIR /app/\n\nCOPY --from=deps /app/node_modules /app/node_modules\n\n# schema doesn't change much so these will stay cached\nADD prisma .\nRUN npx prisma generate\n\n# app code changes all the time\nADD . .\nRUN npm run build\n\n# build smaller image for running\nFROM base\n\nENV NODE_ENV=production\n\nRUN mkdir /app/\nWORKDIR /app/\n\nCOPY --from=production-deps /app/node_modules /app/node_modules\nCOPY --from=build /app/node_modules/.prisma /app/node_modules/.prisma\nCOPY --from=build /app/build /app/build\nCOPY --from=build /app/public /app/public\nCOPY --from=build /app/server-build /app/server-build\nADD . .\n\nCMD [\"npm\", \"run\", \"start\"]"
}