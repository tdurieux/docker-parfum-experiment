{
  "startTime": 1674251844896,
  "endTime": 1674251845759,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 50,
        "columnStart": 0,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 50,
        "columnStart": 0,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Command\n# Run from project root\n# docker build \\\n#   --tag ep/ep-store:$(jq -r .version package.json) \\\n#   --build-arg \"BUILD_DATE\"=\"$(date --rfc-3339=seconds)\" \\\n#   --build-arg \"VERSION\"=\"$(jq -r .version package.json)\" \\\n#   --build-arg \"VCS_REF\"=\"$(git rev-parse HEAD)\"\n#   -f ./docker/dev/Dockerfile .\n\nFROM node:12.10.0\n\nARG BUILD_DATE\nARG VERSION\nARG VCS_REF\nARG SCOPE=vestri\n\nENV CORTEX=http://localhost:9080\nENV STORE=\"$SCOPE\"\n\nLABEL build-date=\"$BUILD_DATE\"\nLABEL name=\"ep/ep-store\"\nLABEL description=\"Elastic Path reference store\"\nLABEL version=\"$VERSION\"\nLABEL vcs-ref=\"$VCS_REF\"\nLABEL docker-cmd=\"docker run --name ep-store -p 8080:8080 ep/ep-store:$VERSION\"\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\nCOPY yarn.lock ./\n\nRUN echo \"deb http://deb.debian.org/debian/ jessie main \\n\\\ndeb-src http://deb.debian.org/debian/ jessie main \\n\\\ndeb http://security.debian.org/ jessie/updates main \\n\\\ndeb-src http://security.debian.org/ jessie/updates main \\n\\\ndeb [check-valid-until=no] http://archive.debian.org/debian jessie-backports main \\n\\\ndeb-src [check-valid-until=no] http://archive.debian.org/debian jessie-backports main\" > /etc/apt/sources.list\n\nRUN echo 'Acquire::Check-Valid-Until \"false\";' > /etc/apt/apt.conf.d/90ignore-release-date\n\nRUN apt-get clean && \\\napt-get update && \\\n apt-get install --no-install-recommends -yq gconf-service libasound2 libatk1.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \\\nlibexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \\\nlibpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 \\\nlibxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 \\\nca-certificates fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget && rm -rf /var/lib/apt/lists/*;\n\n# Bundle app source\nCOPY . .\n\nRUN yarn\n\nEXPOSE 8080\n\nENTRYPOINT [ \"./docker/dev/entrypoint.sh\" ]\nCMD [ \"yarn\", \"start\" ]\n"
}