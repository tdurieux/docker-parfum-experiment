{
  "startTime": 1674252033395,
  "endTime": 1674252034721,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.10.0 as builder\n\nARG NPM_TOKEN\n\nWORKDIR /project\n\nADD ./ /project\n\nRUN yarn\n\nRUN echo \"deb http://deb.debian.org/debian/ jessie main \\n\\\ndeb-src http://deb.debian.org/debian/ jessie main \\n\\\ndeb http://security.debian.org/ jessie/updates main \\n\\\ndeb-src http://security.debian.org/ jessie/updates main \\n\\\ndeb [check-valid-until=no] http://archive.debian.org/debian jessie-backports main \\n\\\ndeb-src [check-valid-until=no] http://archive.debian.org/debian jessie-backports main\" > /etc/apt/sources.list\n\nRUN echo 'Acquire::Check-Valid-Until \"false\";' > /etc/apt/apt.conf.d/90ignore-release-date\n\n# Install jq for inline JSON replacement\nRUN apt-get clean\nRUN apt-get update && apt-get install -y --no-install-recommends jq && rm -rf /var/lib/apt/lists/*;\n\n# Add additional replacements for configurations below as necessary\nRUN jq -e '.cortexApi.scope|=\"NGINX_REPLACE_CORTEX_API_SCOPE\"' ./src/ep.config.json > ./src/ep.config.json.tmp && cp ./src/ep.config.json.tmp ./src/ep.config.json\n\n# Remove the temp file used for replacements since jq cannot handle in-line replacements\nRUN rm ./src/ep.config.json.tmp\n\nRUN yarn build\n\nFROM nginx:1.15.1\nCOPY --from=builder /project/build/ /usr/share/nginx/www\nCOPY ./docker/prod/nginx.conf /etc/nginx/conf.d/default.conf.template\n\nENV uri \\$uri\n\nCMD [\"sh\", \"-c\", \"envsubst < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'\"]\n"
}