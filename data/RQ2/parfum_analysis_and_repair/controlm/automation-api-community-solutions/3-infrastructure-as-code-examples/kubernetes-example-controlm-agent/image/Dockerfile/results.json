{
  "startTime": 1674253189266,
  "endTime": 1674253190538,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#------------------------------------\n# Control-M/Agent docker container\n# Edited by Matt Laster and Wojciech Zaremba - BMC Software\n#------------------------------------\n\nFROM centos:7\n\nARG CTMHOST\nARG USER\nARG PASSWORD\n\n# install basic packages\nRUN yum -y update \\\n\t&& yum -y install wget \\\n\t&& yum -y install unzip \\\n\t&& yum -y install sudo \\\n\t&& yum -y install net-tools \\\n\t&& yum -y install bc && rm -rf /var/cache/yum\n\n# install nodejs\nRUN curl -f --silent --location https://rpm.nodesource.com/setup_6.x | bash - \\\n\t&& yum -y install nodejs \\\n\t&& node -v \\\n\t&& npm -v && rm -rf /var/cache/yum\n\n# install java 8\nRUN yum -y install java-1.8.0-openjdk \\\n\t&& java -version && rm -rf /var/cache/yum\n\n# install ctm-automation-api kit\nWORKDIR /root\nRUN mkdir ctm-automation-api \\\n\t&& cd ctm-automation-api \\\n\t&& wget https://$CTMHOST:8443/automation-api/ctm-cli.tgz --no-check-certificate \\\n\t&& npm install -g ctm-cli.tgz \\\n\t&& ctm -v && npm cache clean --force;\n\n# add controlm user and root to soduers list\nRUN useradd -d /home/controlm -p controlm -m controlm \\\n\t&& echo 'root ALL=(ALL) ALL' >> /etc/sudoers \\\n\t&& echo 'controlm ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n\n# add controlm endpoint\nUSER controlm\nWORKDIR /home/controlm\nRUN ctm env add endpoint https://$CTMHOST:8443/automation-api $USER $PASSWORD \\\n\t&& ctm env set endpoint\n\n# provision controlm agent image\nRUN cd \\\n\t&& ctm provision image Agent_19.Linux\n\n# enable controlm agent utilities\nRUN echo \"source /home/controlm/.bash_profile\" >> /home/controlm/.bashrc\n\n# copy run and resiter controlm agent script to container\nCOPY run_register_controlm.sh /tmp\nCOPY decommission_controlm.sh /tmp\nCOPY agent-parameters.json /tmp\n\nRUN cp /tmp/run_register_controlm.sh /home/controlm \\\n\t&& cp /tmp/decommission_controlm.sh /home/controlm \\\n\t&& cp /tmp/agent-parameters.json /home/controlm \\\n\t&& chmod +x run_register_controlm.sh \\\n\t&& chmod +x decommission_controlm.sh\n\nEXPOSE 7000-8000\n\nCMD [\"/home/controlm/run_register_controlm.sh\"]\n"
}