{
  "startTime": 1674255698948,
  "endTime": 1674255700177,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 153
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 51,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "ARG codename=focal\n\nFROM ubuntu:$codename\nENV LANG C.UTF-8\nUSER root\n\n# Basic dependencies\nRUN apt-get update -qq \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -y install -qq --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        gettext \\\n        git \\\n        gnupg \\\n        lsb-release \\\n        software-properties-common \\\n        expect-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install wkhtml\nRUN curl -f -sSL https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.$(lsb_release -c -s)_amd64.deb -o /tmp/wkhtml.deb \\\n    && apt-get update -qq \\\n    && dpkg --force-depends -i /tmp/wkhtml.deb \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -y install -qq -f --no-install-recommends \\\n    && rm /tmp/wkhtml.deb\n\n# Install nodejs dependencies\nRUN curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n    && echo \"deb https://deb.nodesource.com/node_15.x `lsb_release -c -s` main\" > /etc/apt/sources.list.d/nodesource.list \\\n    && apt-get update -qq \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install -qq nodejs && rm -rf /var/lib/apt/lists/*;\n# less is for odoo<12\nRUN npm install -g rtlcss less@3.0.4 less-plugin-clean-css && npm cache clean --force;\n\n# Install postgresql client\nRUN curl -f -sSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n    && echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -s -c`-pgdg main\" > /etc/apt/sources.list.d/pgclient.list \\\n    && apt-get update -qq \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install -qq postgresql-client-12 && rm -rf /var/lib/apt/lists/*;\n\n# Install Google Chrome for browser tests\nARG chrome_version=90.0.4430.93-1\nRUN curl -f -sSL https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${chrome_version}_amd64.deb -o /tmp/chrome.deb \\\n    && apt-get -y install --no-install-recommends /tmp/chrome.deb \\\n    && rm /tmp/chrome.deb && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository -y ppa:deadsnakes/ppa\n\nARG python_version\n\n# Install build dependencies for python libs commonly used by Odoo and OCA\nRUN apt-get update -qq \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -y install -qq --no-install-recommends \\\n       build-essential \\\n       python$python_version-dev \\\n       # we need python 3 for our helper scripts\n       python3 \\\n       python3-venv \\\n       # for psycopg\n       libpq-dev \\\n       # for lxml\n       libxml2-dev \\\n       libxslt1-dev \\\n       libz-dev \\\n       libxmlsec1-dev \\\n       # for python-ldap\n       libldap2-dev \\\n       libsasl2-dev \\\n       # need libjpeg to build older pillow versions\n       libjpeg-dev \\\n       # for pycups\n       libcups2-dev \\\n       # for mysqlclient \\\n       default-libmysqlclient-dev \\\n       # some other build tools\n       swig \\\n       libffi-dev \\\n       pkg-config \\\n       # We should install distutils if and only if it exists\n    && apt-cache --generate pkgnames \\\n       | grep --line-regexp --fixed-strings \\\n          -e python$python_version-distutils \\\n       | xargs apt install -y && rm -rf /var/lib/apt/lists/*;\n\n# Install pipx, which we use to install other python tools.\nENV PIPX_BIN_DIR=/usr/local/bin\nENV PIPX_DEFAULT_PYTHON=/usr/bin/python3\nRUN python3 -m venv /opt/pipx-venv \\\n    && /opt/pipx-venv/bin/pip install --no-cache-dir pipx \\\n    && ln -s /opt/pipx-venv/bin/pipx /usr/local/bin/\n\n# We don't use the ubuntu virtualenv package because it unbundles pip dependencies\n# in virtualenvs it create.\nRUN pipx install --pip-args=\"--no-cache-dir\" virtualenv\n\n# We use manifestoo to check licenses, development status\nRUN pipx install --pip-args=\"--no-cache-dir\" \"manifestoo>=0.3.1\"\n\n# Install the 'addons' helper script\n# TODO: use manifestoo\nRUN pipx install --pip-args=\"--no-cache-dir\" acsoo==3.0.2\nCOPY bin/addons /usr/local/bin\n\n# Install setuptools-odoo-get-requirements and setuptools-odoo-makedefault helper\n# scripts.\nRUN pipx install --pip-args=\"--no-cache-dir\" \"setuptools-odoo>=3.0.7\"\n\n# Make a virtualenv for Odoo so we isolate from system python dependencies and\n# make sure addons we test declare all their python dependencies properly\nARG setuptools_constraint\nRUN virtualenv -p python$python_version /opt/odoo-venv \\\n    && /opt/odoo-venv/bin/pip install \"setuptools$setuptools_constraint\" \"pip>=21.3.1;python_version>='3.6'\" \\\n    && /opt/odoo-venv/bin/pip list\nENV PATH=/opt/odoo-venv/bin:$PATH\n\nARG odoo_version\n\n# Install Odoo requirements (use ADD for correct layer caching).\n# We use requirements from OCB for easier maintenance of older versions.\n# We use no-binary for psycopg2 because its binary wheels are sometimes broken\n# and not very portable.\nADD https://raw.githubusercontent.com/OCA/OCB/$odoo_version/requirements.txt /tmp/ocb-requirements.txt\nRUN pip install --no-cache-dir --no-binary psycopg2 -r /tmp/ocb-requirements.txt\n\n# Install other test requirements.\n# - coverage\n# - websocket-client is required for Odoo browser tests\n# - odoo-autodiscover required for python2\nRUN pip install --no-cache-dir \\\n  coverage \\\n  websocket-client \\\n  \"odoo-autodiscover>=2 ; python_version<'3'\"\n\n# Install Odoo (use ADD for correct layer caching)\nARG odoo_org_repo=odoo/odoo\nADD https://api.github.com/repos/$odoo_org_repo/git/refs/heads/$odoo_version /tmp/odoo-version.json\nRUN mkdir /tmp/getodoo \\\n    && ( curl -f -sSL https://github.com/$odoo_org_repo/tarball/$odoo_version | tar -C /tmp/getodoo -xz) \\\n    && mv /tmp/getodoo/* /opt/odoo \\\n    && rmdir /tmp/getodoo\nRUN pip install --no-cache-dir -e /opt/odoo \\\n    && pip list\n\n# Make an empty odoo.cfg\nRUN echo \"[options]\" > /etc/odoo.cfg\nENV ODOO_RC=/etc/odoo.cfg\nENV OPENERP_SERVER=/etc/odoo.cfg\n\nCOPY bin/* /usr/local/bin/\n\nENV ODOO_VERSION=$odoo_version\nENV PGHOST=postgres\nENV PGUSER=odoo\nENV PGPASSWORD=odoo\nENV PGDATABASE=odoo\n# This PEP 503 index uses odoo addons from OCA and redirects the rest to PyPI,\n# in effect hiding all non-OCA Odoo addons that are on PyPI.\nENV PIP_INDEX_URL=https://wheelhouse.odoo-community.org/oca-simple-and-pypi\nENV PIP_DISABLE_PIP_VERSION_CHECK=1\nENV PIP_NO_PYTHON_VERSION_WARNING=1\n# Control addons discovery. INCLUDE and EXCLUDE are comma-separated list of\n# addons to include (default: all) and exclude (default: none)\nENV ADDONS_DIR=.\nENV ADDONS_PATH=/opt/odoo/addons\nENV INCLUDE=\nENV EXCLUDE=\nENV OCA_GIT_USER_NAME=oca-ci\nENV OCA_GIT_USER_EMAIL=oca-ci@odoo-community.org\n"
}