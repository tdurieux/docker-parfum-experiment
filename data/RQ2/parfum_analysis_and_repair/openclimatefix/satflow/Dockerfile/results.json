{
  "startTime": 1674248300866,
  "endTime": 1674248302185,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 41,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 18,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 18,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build: sudo docker build -t <project_name> .\n# Run: sudo docker run -v $(pwd):/workspace/project --gpus all -it --rm <project_name>\n\n\nFROM nvidia/cuda:11.1-cudnn8-devel-ubuntu20.04\n\n\nENV CONDA_ENV_NAME=satflow\nENV PYTHON_VERSION=3.9\n\n\n# Basic setup\nRUN apt update && apt install --no-install-recommends -y bash \\\n                   build-essential \\\n                   git \\\n                   curl \\\n                   ca-certificates \\\n                   wget \\\n                   libaio-dev \\\n                   && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\n# Install Miniconda and create main env\nADD https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh miniconda3.sh\nRUN /bin/bash miniconda3.sh -b -p /conda \\\n    && echo export PATH=/conda/bin:$PATH >> .bashrc \\\n    && rm miniconda3.sh\nENV PATH=\"/conda/bin:${PATH}\"\n# RUN conda create -n ${CONDA_ENV_NAME} python=${PYTHON_VERSION} pytorch::pytorch=1.9 torchvision cudatoolkit=11.1 iris rasterio numpy cartopy satpy matplotlib hydra-core pytorch-lightning optuna eccodes -c conda-forge -c nvidia -c pytorch\nCOPY environment.yml ./\nRUN conda env create --file environment.yml && rm environment.yml\n\n# Switch to bash shell\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Install DeepSpeed and build extensions\nRUN source activate ${CONDA_ENV_NAME} \\\n    && DS_BUILD_OPS=1 pip --no-cache-dir install deepspeed\n\n\n# Install requirements\nCOPY requirements.txt ./\nRUN source activate ${CONDA_ENV_NAME} \\\n    && pip install --no-cache-dir -r requirements.txt \\\n    && rm requirements.txt\n\n\n# Set ${CONDA_ENV_NAME} to default virutal environment\nRUN echo \"source activate ${CONDA_ENV_NAME}\" >> ~/.bashrc\n\n# Cp in the development directory and install\nCOPY . ./\nRUN source activate ${CONDA_ENV_NAME} && pip install --no-cache-dir -e .\n"
}