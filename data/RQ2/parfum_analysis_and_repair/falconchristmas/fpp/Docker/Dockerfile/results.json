{
  "startTime": 1674254104153,
  "endTime": 1674254105257,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye\n\n# if we get a bunch of these installed up front in one shot (assume a desktop so plenty of memory to do all at once)\n# then the FPP_Install step is faster.   In addition, docker will cache this result\n# so building docker containers will be faster\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq -o Dpkg::Options::=\"--force-confdef\" -o alsa-utils arping avahi-daemon avahi-utils locales nano net-tools \\\n    apache2 apache2-bin apache2-data apache2-utils libapache2-mod-php \\\n    bc bash-completion btrfs-progs exfat-fuse lsof ethtool curl zip unzip bzip2 wireless-tools dos2unix \\\n    fbi fbset file flite ca-certificates lshw \\\n    build-essential gcc g++ gdb ccache vim vim-common bison flex device-tree-compiler dh-autoreconf \\\n    git git-core hdparm i2c-tools ifplugd less sysstat tcpdump time usbutils usb-modeswitch \\\n    samba rsync sudo shellinabox dnsmasq hostapd vsftpd ntp sqlite3 at haveged samba samba-common-bin \\\n    mp3info mailutils dhcp-helper parprouted bridge-utils libiio-utils \\\n    php php-cli php-common php-curl php-pear php-sqlite3 php-zip php-xml \\\n    libavcodec-dev libavformat-dev libswresample-dev libswscale-dev libavdevice-dev libavfilter-dev libtag1-dev \\\n    vorbis-tools libgraphicsmagick++1-dev graphicsmagick-libmagick-dev-compat libmicrohttpd-dev \\\n    libmosquitto-dev mosquitto-clients mosquitto libzstd-dev lzma zstd gpiod libgpiod-dev libjsoncpp-dev libcurl4-openssl-dev \\\n    git gettext apt-utils x265 libtheora-dev libvorbis-dev libx265-dev iputils-ping libssl-dev \\\n    wget flex bison pkg-config libasound2-dev mesa-common-dev; && rm -rf /var/lib/apt/lists/*; apt-get clean\nRUN DEBIAN_FRONTEND=noninteractive apt-get -yq upgrade\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# similar to above, do this once and Docker can cache the intermediary\nADD SD/buildVLC.sh /root/buildVLC.sh\nRUN ( yes | /root/buildVLC.sh ) || true\n\n\n# Pass --build-arg EXTRA_INSTALL_FLAG=--skip-clone to build without\n# cloning the lastest from git and instead use the stuff in the local\n# directory\nARG EXTRA_INSTALL_FLAG=\n\nADD ./ /opt/fpp/\nADD SD/FPP_Install.sh /root/FPP_Install.sh\nRUN ( yes | /root/FPP_Install.sh $EXTRA_INSTALL_FLAG --skip-apt-install --skip-vlc ) || true\nRUN rm -rf /tmp/*\nRUN cp /opt/fpp/etc/asoundrc.plain /root/.asoundrc\n\n# this will do additional updates and create the required directories\n# and set permissions\nRUN /opt/fpp/scripts/init_pre_network\n\nVOLUME /home/fpp/media\n\n#      HTTP  DDP      e1.31    Multisync  FPPD/HTTP    Other\nEXPOSE 80    4048/udp 5568/udp 32320/udp    32322      9000/udp 9000/tcp\nENTRYPOINT [\"/opt/fpp/Docker/runDocker.sh\"]\n"
}