diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ortelius/ortelius/docker/DockerfileBase b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ortelius/ortelius/docker/DockerfileBase/repaired.Dockerfile
index 8085509..b253063 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ortelius/ortelius/docker/DockerfileBase
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ortelius/ortelius/docker/DockerfileBase/repaired.Dockerfile
@@ -3,26 +3,26 @@ FROM fedora:34
 RUN useradd -ms /bin/bash omreleng;
 
 RUN yum -y update; \
-    yum -y install https://download.postgresql.org/pub/repos/yum/reporpms/F-34-x86_64/pgdg-fedora-repo-latest.noarch.rpm; \
+    yum -y install https://download.postgresql.org/pub/repos/yum/reporpms/F-34-x86_64/pgdg-fedora-repo-latest.noarch.rpm; rm -rf /var/cache/yum \
     yum -y install python python-pip postgresql13 postgresql13-server postgresql13-contrib postgresql13-libs postgresql-odbc unixODBC libzip perl sshpass libiodbc \
                    procps-ng dos2unix jq git sudo unzip which iputils  openssl openssl-libs openssh-clients libnsl.i686 samba-client python-winrm \
-                   python3-PyYAML python-requests-kerberos krb5-devel krb5-libs krb5-workstation ansible diffutils rsync java-1.8.0-openjdk-devel; 
-RUN /usr/bin/python --version; 
-RUN /usr/bin/pip --version; 
-RUN /usr/bin/pip install cryptography==3.3.2 requests-credssp pywinrm[credssp] deployhub python-jenkins; 
-RUN curl -sL https://raw.githubusercontent.com/DeployHubProject/win_zip/master/ansible/win_zip.py -o /usr/lib/python3.9/site-packages/ansible/modules/windows/win_zip.py; 
-RUN curl -sL https://raw.githubusercontent.com/DeployHubProject/win_zip/master/ansible/win_zip.ps1 -o /usr/lib/python3.9/site-packages/ansible/modules/windows/win_zip.ps1; 
+                   python3-PyYAML python-requests-kerberos krb5-devel krb5-libs krb5-workstation ansible diffutils rsync java-1.8.0-openjdk-devel;
+RUN /usr/bin/python --version;
+RUN /usr/bin/pip --version;
+RUN /usr/bin/pip install cryptography==3.3.2 requests-credssp pywinrm[credssp] deployhub python-jenkins;
+RUN curl -f -sL https://raw.githubusercontent.com/DeployHubProject/win_zip/master/ansible/win_zip.py -o /usr/lib/python3.9/site-packages/ansible/modules/windows/win_zip.py;
+RUN curl -f -sL https://raw.githubusercontent.com/DeployHubProject/win_zip/master/ansible/win_zip.ps1 -o /usr/lib/python3.9/site-packages/ansible/modules/windows/win_zip.ps1;
 
-RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"; \
+RUN curl -f "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"; \
     unzip awscliv2.zip; \
-    ./aws/install -i /usr/local/aws -b /usr/local/bin; 
+    ./aws/install -i /usr/local/aws -b /usr/local/bin;
 
-RUN curl -sL -o /tmp/gcloud_install.sh https://sdk.cloud.google.com; \
+RUN curl -f -sL -o /tmp/gcloud_install.sh https://sdk.cloud.google.com; \
     chmod 777 /tmp/gcloud_install.sh; \
     /tmp/gcloud_install.sh --disable-prompts --install-dir=/usr/local; \
-    /usr/local/google-cloud-sdk/bin/gcloud components install kubectl docker-credential-gcr; 
+    /usr/local/google-cloud-sdk/bin/gcloud components install kubectl docker-credential-gcr;
 
-RUN curl -sL -o /tmp/helm_install.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get; \
+RUN curl -f -sL -o /tmp/helm_install.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get; \
     chmod 777 /tmp/helm_install.sh; \
     /tmp/helm_install.sh; \
     mv /usr/local/bin/helm /usr/local/bin/helm2
@@ -31,16 +31,16 @@ RUN curl -fsSL -o /tmp/get_helm.sh https://raw.githubusercontent.com/helm/helm/m
     chmod 777 /tmp/get_helm.sh; \
     /tmp/get_helm.sh
 
-RUN curl -skL -X GET https://releases.hashicorp.com/terraform/0.12.17/terraform_0.12.17_linux_amd64.zip -o /tmp/terraform_0.12.17_linux_amd64.zip; \
+RUN curl -f -skL -X GET https://releases.hashicorp.com/terraform/0.12.17/terraform_0.12.17_linux_amd64.zip -o /tmp/terraform_0.12.17_linux_amd64.zip; \
     cd /tmp; \
     unzip -q terraform_0.12.17_linux_amd64.zip; \
     chmod +x terraform; \
     mv terraform /usr/local/bin/
 
-RUN yum -y install yum-utils; \
+RUN yum -y install yum-utils; rm -rf /var/cache/yum \
     yum-config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo; \
     yum -y install gh
-    
+
 RUN rpm --import https://packages.microsoft.com/keys/microsoft.asc;
 RUN echo -e "\
 [azure-cli] \n\
@@ -50,7 +50,7 @@ enabled=1 \n\
 gpgcheck=1 \n\
 gpgkey=https://packages.microsoft.com/keys/microsoft.asc \
 " > /etc/yum.repos.d/azure-cli.repo
-RUN yum -y install azure-cli
+RUN yum -y install azure-cli && rm -rf /var/cache/yum
 
 RUN yum -y clean all; \
     rm -rf /var/cache/yum; \