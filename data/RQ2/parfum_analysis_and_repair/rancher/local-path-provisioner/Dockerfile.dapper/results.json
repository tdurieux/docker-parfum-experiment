{
  "startTime": 1674253411609,
  "endTime": 1674253412609,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 23,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 122,
        "columnEnd": 203
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 26,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 76,
        "columnEnd": 158
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 8,
        "columnEnd": 138
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.16-alpine\n\nARG DAPPER_HOST_ARCH\nENV ARCH $DAPPER_HOST_ARCH\n\nRUN apk -U --no-cache add bash git gcc musl-dev docker vim less file curl wget ca-certificates jq\nRUN rm -rf /go/src /go/pkg\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -f -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.41.1; \\\n    fi; \\\n    if [ \"${ARCH}\" == \"amd64\" ] || [ \"${ARCH}\" == \"arm64\" ]; then \\\n        kind_version=$( curl -f -sL https://api.github.com/repos/kubernetes-sigs/kind/releases/latest | jq -r \".tag_name\") && curl -f -sL \"https://kind.sigs.k8s.io/dl/${kind_version}/kind-linux-${ARCH}\" -o kind && install kind /usr/local/bin; \\\n        kubectl_version=$( curl -f -sL https://dl.k8s.io/release/stable.txt) && curl -f -sLO \"https://dl.k8s.io/release/${kubectl_version}/bin/linux/${ARCH}/kubectl\" && install kubectl /usr/local/bin; \\\n        curl -f -sL \"https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.2.0/kustomize_v4.2.0_linux_${ARCH}.tar.gz\" | tar -zxv -C /usr/local/bin; \\\n    fi\n\nENV DAPPER_ENV REPO TAG DRONE_TAG\nENV DAPPER_SOURCE /go/src/github.com/rancher/local-path-provisioner/\nENV DAPPER_OUTPUT ./bin ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV DAPPER_RUN_ARGS --network=host\nENV HOME ${DAPPER_SOURCE}\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}