{
  "startTime": 1674254255856,
  "endTime": 1674254256502,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 8,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM opensuse/leap:15.3\nRUN sed -i -s 's/^# rpm.install.excludedocs/rpm.install.excludedocs/' /etc/zypp/zypp.conf\nRUN zypper ref\n\nARG DAPPER_HOST_ARCH\nENV ARCH $DAPPER_HOST_ARCH\n\nRUN zypper in -y bash git gcc docker vim less file curl wget ca-certificates make mkisofs go1.16 qemu-tools trousers-devel helm mtools tar gzip openssl-devel\nRUN go get golang.org/x/tools/cmd/goimports\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -f -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.40.1; \\\n    fi\n\nENV DOCKER_BUILDKIT 1\nENV DOCKER_CLI_EXPERIMENTAL enabled\nENV DAPPER_ENV REPO TAG DRONE_TAG PUSH CROSS DOCKER_REGISTRY DOCKER_USERNAME DOCKER_PASSWORD AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_DEFAULT_REGION GITHUB_REPOSITORY UPGRADECHANNEL_DISCOVERY_IMAGE NO_KVM\nENV DAPPER_SOURCE /go/src/github.com/rancher-sandbox/os2/\nENV DAPPER_OUTPUT ./bin ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV DAPPER_RUN_ARGS \"-v ros-go16-pkg-1:/go/pkg -v ros-go16-cache-1:/root/.cache/go-build\"\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}