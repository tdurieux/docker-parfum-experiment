{
  "startTime": 1674220896296,
  "endTime": 1674220897563,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM opensuse/leap:15.3 as base\nRUN sed -i -s 's/^# rpm.install.excludedocs/rpm.install.excludedocs/' /etc/zypp/zypp.conf && \\\n    sed -i 's/download/provo-mirror/g' /etc/zypp/repos.d/*repo\nRUN zypper ref\n\nFROM base AS build\nRUN zypper in -y squashfs xorriso go1.16 upx busybox-static curl tar git gzip\nRUN curl -f -Lo /usr/bin/luet https://github.com/mudler/luet/releases/download/0.20.10/luet-0.20.10-linux-$(go env GOARCH) && \\\n    chmod +x /usr/bin/luet && \\\n    upx /usr/bin/luet\nRUN curl -f -Lo /usr/bin/rancherd https://github.com/rancher/rancherd/releases/download/v0.0.1-alpha13/rancherd-$(go env GOARCH) && \\\n    chmod +x /usr/bin/rancherd && \\\n    upx /usr/bin/rancherd\nRUN curl -f -L https://get.helm.sh/helm-v3.7.1-linux-$(go env GOARCH).tar.gz | tar xzf - -C /usr/bin --strip-components=1 && \\\n    upx /usr/bin/helm\nCOPY go.mod go.sum /usr/src/\nCOPY cmd /usr/src/cmd\nCOPY pkg /usr/src/pkg\nCOPY scripts /usr/src/scripts\nCOPY chart /usr/src/chart\nARG IMAGE_TAG=latest\nRUN TAG=${IMAGE_TAG} /usr/src/scripts/package-helm && \\\n    cp /usr/src/dist/artifacts/rancheros-operator-*.tgz /usr/src/dist/rancheros-operator-chart.tgz\nRUN cd /usr/src && \\\n    CGO_ENABLED=0 go build -ldflags \"-extldflags -static -s\" -o /usr/sbin/ros-operator ./cmd/ros-operator && \\\n    upx /usr/sbin/ros-operator\nRUN cd /usr/src && \\\n    CGO_ENABLED=0 go build -ldflags \"-extldflags -static -s\" -o /usr/sbin/ros-installer ./cmd/ros-installer && \\\n    upx /usr/sbin/ros-installer\n\nFROM scratch AS framework\nCOPY --from=build /usr/bin/busybox-static /usr/bin/busybox\nCOPY --from=build /usr/bin/rancherd /usr/bin/rancherd\nCOPY --from=build /usr/bin/luet /usr/bin/luet\nCOPY --from=build /usr/bin/helm /usr/bin/helm\nCOPY --from=build /usr/src/dist/rancheros-operator-chart.tgz /usr/share/rancher/os2/\nCOPY framework/files/etc/luet/luet.yaml /etc/luet/luet.yaml\nCOPY --from=build /etc/ssl/certs /etc/ssl/certs\n\nARG CACHEBUST\nENV LUET_NOLOCK=true\nRUN [\"luet\", \\\n    \"install\", \"--no-spinner\", \"-d\", \"-y\", \\\n    \"selinux/k3s\", \\\n    \"selinux/rancher\", \\\n    \"meta/cos-minimal\", \\\n    \"utils/k9s\", \\\n    \"utils/nerdctl\"]\n\nCOPY --from=build /usr/sbin/ros-installer /usr/sbin/ros-installer\nCOPY --from=build /usr/sbin/ros-operator /usr/sbin/ros-operator\nCOPY framework/files/ /\nRUN [\"/usr/bin/busybox\", \"rm\", \"-rf\", \"/var\", \"/etc/ssl\", \"/usr/bin/busybox\"]\n\n# Make OS image\nFROM base as os\nRUN zypper dup -y\nRUN zypper in -y -- \\\n    apparmor-parser \\\n    avahi \\\n    bash-completion \\\n    conntrack-tools \\\n    coreutils \\\n    curl \\\n    device-mapper \\\n    dmidecode \\\n    dosfstools \\\n    dracut \\\n    e2fsprogs \\\n    ethtool \\\n    findutils \\\n    gawk \\\n    gptfdisk \\\n    glibc-locale-base \\\n    grub2-i386-pc \\\n    grub2-x86_64-efi \\\n    haveged \\\n    hdparm \\\n    iproute2 \\\n    iptables \\\n    iputils \\\n    issue-generator \\\n    jq \\\n    kernel-default \\\n    kernel-firmware-bnx2 \\\n    kernel-firmware-chelsio \\\n    kernel-firmware-i915 \\\n    kernel-firmware-intel \\\n    kernel-firmware-iwlwifi \\\n    kernel-firmware-liquidio \\\n    kernel-firmware-marvell \\\n    kernel-firmware-mediatek \\\n    kernel-firmware-mellanox \\\n    kernel-firmware-network \\\n    kernel-firmware-platform \\\n    kernel-firmware-qlogic \\\n    kernel-firmware-realtek \\\n    kernel-firmware-usb-network \\\n    -kubic-locale-archive \\\n    less \\\n    lshw \\\n    lsof \\\n    lsscsi \\\n    lvm2 \\\n    mdadm \\\n    multipath-tools \\\n    netcat-openbsd \\\n    nfs-utils \\\n    open-iscsi \\\n    open-vm-tools \\\n    openssh \\\n    parted \\\n    -perl \\\n    pciutils \\\n    pigz \\\n    procps \\\n    psmisc \\\n    python-azure-agent \\\n    qemu-guest-agent \\\n    rsync \\\n    squashfs \\\n    strace \\\n    sysstat \\\n    systemd \\\n    systemd-presets-branding-openSUSE \\\n    -systemd-presets-branding-MicroOS \\\n    systemd-sysvinit \\\n    tar \\\n    timezone \\\n    vim-small \\\n    which \\\n    zstd\n\n# Copy in some local OS customizations\nCOPY opensuse/files /\n\nARG IMAGE_TAG=latest\nRUN cat /etc/os-release.tmpl | env \\\n    \"VERSION=${IMAGE_TAG}\" \\\n    \"VERSION_ID=$(echo ${IMAGE_TAG} | sed s/^v//)\" \\\n    \"PRETTY_NAME=RancherOS ${IMAGE_TAG}\" \\\n    envsubst > /etc/os-release && \\\n    rm /etc/os-release.tmpl\n\n# Starting from here are the lines needed for RancherOS to work\n\n# IMPORTANT: Setup rancheros-release used for versioning/upgrade. The\n# values here should reflect the tag of the image being built\nARG IMAGE_REPO=norepo\nRUN echo \"IMAGE_REPO=${IMAGE_REPO}\"          > /usr/lib/rancheros-release && \\\n    echo \"IMAGE_TAG=${IMAGE_TAG}\"           >> /usr/lib/rancheros-release && \\\n    echo \"IMAGE=${IMAGE_REPO}:${IMAGE_TAG}\" >> /usr/lib/rancheros-release\n\n# Copy in framework runtime\nCOPY --from=framework / /\n\n# Rebuild initrd to setup dracut with the boot configurations\nRUN mkinitrd && \\\n    # aarch64 has an uncompressed kernel so we need to link it to vmlinuz\n    kernel=$(ls /boot/Image-* | head -n1) && \\\n    if [ -e \"$kernel\" ]; then ln -sf \"${kernel#/boot/}\" /boot/vmlinuz; fi\n\n# Save some space\nRUN zypper clean --all && \\\n    rm -rf /var/log/update* && \\\n    >/var/log/lastlog && \\\n    rm -rf /boot/vmlinux*\n\nFROM scratch as default\nCOPY --from=os / /\n"
}