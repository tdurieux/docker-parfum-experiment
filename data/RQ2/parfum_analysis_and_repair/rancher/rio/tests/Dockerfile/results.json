{
  "startTime": 1674248817201,
  "endTime": 1674248818141,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 73,
        "columnEnd": 149
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.13-alpine\n\n# Install all needed tools\nRUN apk update && \\\n  apk upgrade --update-cache --available && \\\n  apk add --no-cache build-base curl git jq openssh bash docker\n\n# Install the executables for kubectl, rio, and hey\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && \\\n  chmod +x ./kubectl && \\\n  mv ./kubectl /usr/local/bin && \\\n  go get -u github.com/rakyll/hey\n\n# Set working directory to rio application directory and install all go dependencies\nWORKDIR /usr/local/projects/rio\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\n# Copy source code into working directory and make sure entrypoint is executable\nCOPY . .\nRUN chmod +x ./tests/scripts/*.sh && chmod +x ./scripts/build\n\n# Set environment variables for tests to run properly and to ensure the correct rio version is being tested\nENV CLUSTER local\nENV KUBECONFIG /usr/local/projects/rio/.kube/config\nENV test integration\n\n# Install Rio if needed and run tests\n## NOTE: Need to pass in environment variables:\n # RIO_VERSION  (optional - pass 'master' if wanting to build from source)\n # REPO         (required if RIO_VERSION=master. Specify docker username for rio_controller)\n # TAG          (required if RIO_VERSION=master. Specify rio_controller tag. Ends up like: ${REPO}/rio-controller:${TAG})\n # CLUSTER      (optional - if wanting to build and use a new cluster. Valid options are 'k3s', 'rke', and 'gke')\n # TOKEN        (required if CLUSTER is given as k3s or rke -- DigitalOcean API Token)\n # WORKERS      (optional - if passing in the cluster option, you can specify how many additional worker nodes to add)\nENTRYPOINT [ \"./tests/scripts/entrypoint.sh\" ]\nCMD [\"./tests/scripts/test.sh\"]\n"
}