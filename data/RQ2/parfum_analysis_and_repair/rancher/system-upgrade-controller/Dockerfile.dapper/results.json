{
  "startTime": 1674254039350,
  "endTime": 1674254039965,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 8,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 8,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG KUBECTL=rancher/kubectl:v1.21.9\nFROM ${KUBECTL} AS kubectl\n\nFROM registry.suse.com/bci/golang:1.17-11.33\n\nCOPY --from=kubectl /bin/kubectl /usr/local/bin/kubectl\n# COPY --from=sonobuoy /sonobuoy /usr/local/bin/sonobuoy\n\nARG DAPPER_HOST_ARCH\nENV ARCH $DAPPER_HOST_ARCH\n\nRUN zypper -n install expect git jq  docker vim less file curl wget iproute2 gawk\n# Manual install of docker-compose, only needed for e2e tests on amd64\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -f -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64\" -o /usr/local/bin/docker-compose && \\\n        chmod +x /usr/local/bin/docker-compose; \\\n    fi\nRUN go install github.com/mgechev/revive@v1.1.1 && \\\n    rm -rf /go/src /go/pkg\nRUN go install golang.org/x/tools/cmd/goimports@latest && \\\n    rm -rf /go/src /go/pkg\nRUN if [ \"$(go env GOARCH)\" = \"amd64\" ]; then \\\n        curl -f -sL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.41.1; \\\n    fi\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        go get sigs.k8s.io/kustomize/kustomize/v3@v3.5.4; \\\n    fi\nARG SONOBUOY_VERSION=0.56.2\nRUN if [ \"${ARCH}\" != \"arm\" ] && [ \"${ARCH}\" != \"s390x\" ]; then \\\n        set -x; \\\n        curl -f -sL \"https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_linux_${ARCH}.tar.gz\" \\\n        | tar -xz -C /usr/local/bin; \\\n        chmod +x /usr/local/bin/sonobuoy; \\\n    fi\n# ENV DAPPER_RUN_ARGS --privileged\nENV DAPPER_ENV REPO TAG DRONE_TAG\nENV DAPPER_SOURCE /go/src/github.com/rancher/system-upgrade-controller/\nENV DAPPER_OUTPUT ./bin ./dist\nENV DAPPER_DOCKER_SOCKET true\nENV DAPPER_RUN_ARGS \"-v suc-pkg:/go/pkg -v suc-cache:/root/.cache/go-build\"\nENV KUBECONFIG /root/.kube/config\nENV KUBEHOST 172.17.0.1\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}