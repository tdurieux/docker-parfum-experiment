{
  "startTime": 1674216343398,
  "endTime": 1674216345034,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 8,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.suse.com/bci/golang:1.17\n\nARG DAPPER_HOST_ARCH\nENV HOST_ARCH=${DAPPER_HOST_ARCH} ARCH=${DAPPER_HOST_ARCH}\nENV CATTLE_HELM_VERSION v2.16.8-rancher2\nENV CATTLE_MACHINE_VERSION v0.15.0-rancher90\nENV CATTLE_K3S_VERSION v1.24.2+k3s1\n# version used by helm plugin install script\nENV CATTLE_HELM_UNITTEST_VERSION v0.1.7-rancher4\n# helm 3 version\nENV HELM_VERSION v3.9.0\nENV KUSTOMIZE_VERSION v4.4.1\n\n# kontainer-driver-metadata branch to be set for specific branch other than dev/master, logic at rancher/rancher/pkg/settings/setting.go\nENV CATTLE_KDM_BRANCH=dev-v2.6\n\nRUN zypper -n install gcc binutils glibc-devel-static ca-certificates git-core wget curl unzip tar vim less file xz gzip sed gawk iproute2 iptables jq\n# use containerd from k3s image, not from bci\nRUN zypper install -y -f docker && rpm -e --nodeps --noscripts containerd\n\nRUN curl -sLf https://github.com/rancher/machine/releases/download/${CATTLE_MACHINE_VERSION}/rancher-machine-${ARCH}.tar.gz | tar xvzf - -C /usr/bin\n\nRUN zypper -n in go1.17\n\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.44.0; \\\n        curl -f -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/spectrometer/master/install.sh | sh; \\\n    fi\n\nENV HELM_URL_V2_amd64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-helm \\\n    HELM_URL_V2_arm64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-helm-arm64 \\\n    HELM_URL_V2_s390x=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-helm-s390x \\\n    HELM_URL_V2=HELM_URL_V2_${ARCH} \\\n    HELM_URL_V3=https://get.helm.sh/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz \\\n    TILLER_URL_amd64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-tiller \\\n    TILLER_URL_arm64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-tiller-arm64 \\\n    TILLER_URL_s390x=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-tiller-s390x \\\n    TILLER_URL=TILLER_URL_${ARCH} \\\n    KUSTOMIZE_URL=https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_${ARCH}.tar.gz\n\nRUN curl -sLf ${KUSTOMIZE_URL} | tar -xzf - -C /usr/bin\n\n# set up helm 2\nRUN curl -sLf ${!HELM_URL_V2} -o /usr/bin/rancher-helm && \\\n    curl -sLf ${!TILLER_URL} -o /usr/bin/rancher-tiller && \\\n    chmod +x /usr/bin/rancher-helm /usr/bin/rancher-tiller && \\\n    ln -s /usr/bin/rancher-helm /usr/bin/helm && \\\n    ln -s /usr/bin/rancher-tiller /usr/bin/tiller && \\\n    helm init -c --stable-repo-url https://charts.helm.sh/stable/ && \\\n    helm plugin install https://github.com/rancher/helm-unittest\n\n# set up helm 3\nRUN mkdir /usr/tmp && \\\n    curl -f ${HELM_URL_V3} | tar xvzf - --strip-components=1 -C /usr/tmp/ && \\\n    mv /usr/tmp/helm /usr/bin/helm_v3 && \\\n    chmod +x /usr/bin/kustomize\n\n# Set up K3s: copy the necessary binaries from the K3s image.\nCOPY --from=rancher/k3s:v1.24.2-k3s1 \\\n    /bin/blkid \\\n    /bin/charon \\\n    /bin/cni \\\n    /bin/conntrack \\\n    /bin/containerd \\\n    /bin/containerd-shim-runc-v2 \\\n    /bin/ethtool \\\n    /bin/ip \\\n    /bin/ipset \\\n    /bin/k3s \\\n    /bin/losetup \\\n    /bin/pigz \\\n    /bin/runc \\\n    /bin/swanctl \\\n    /bin/which \\\n    /bin/aux/xtables-legacy-multi \\\n/usr/bin/\n\nRUN mkdir -p /go/src/github.com/rancher/rancher/.kube\n\nRUN ln -s /usr/bin/cni /usr/bin/bridge && \\\n    ln -s /usr/bin/cni /usr/bin/flannel && \\\n    ln -s /usr/bin/cni /usr/bin/host-local && \\\n    ln -s /usr/bin/cni /usr/bin/loopback && \\\n    ln -s /usr/bin/cni /usr/bin/portmap && \\\n    ln -s /usr/bin/k3s /usr/bin/crictl && \\\n    ln -s /usr/bin/k3s /usr/bin/ctr && \\\n    ln -s /usr/bin/k3s /usr/bin/k3s-agent && \\\n    ln -s /usr/bin/k3s /usr/bin/k3s-etcd-snapshot && \\\n    ln -s /usr/bin/k3s /usr/bin/k3s-server && \\\n    ln -s /usr/bin/k3s /usr/bin/kubectl && \\\n    ln -s /usr/bin/pigz /usr/bin/unpigz && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/iptables && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/iptables-save && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/iptables-restore && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/iptables-translate && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/ip6tables && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/ip6tables-save && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/ip6tables-restore && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/ip6tables-translate && \\\n    ln -s /etc/rancher/k3s/k3s.yaml /go/src/github.com/rancher/rancher/.kube/k3s.yaml\n\n\nRUN curl -sLf https://github.com/rancher/k3s/releases/download/${CATTLE_K3S_VERSION}/k3s-images.txt -o /usr/tmp/k3s-images.txt\n\nENV YQ_URL=https://github.com/mikefarah/yq/releases/download/3.4.1/yq_linux_${ARCH}\nRUN curl -sLf ${YQ_URL} -o /usr/bin/yq && chmod +x /usr/bin/yq\n\n\nRUN zypper install -y python3-tox python3-base python3 libffi-devel libopenssl-devel\n\nENV HELM_HOME /root/.helm\nENV DAPPER_ENV REPO TAG DRONE_TAG DRONE_COMMIT DRONE_BRANCH SYSTEM_CHART_DEFAULT_BRANCH FOSSA_API_KEY GOGET_MODULE GOGET_VERSION RELEASE_ACTION\nENV DAPPER_SOURCE /go/src/github.com/rancher/rancher/\nENV DAPPER_OUTPUT ./bin ./dist ./go.mod ./go.sum ./pkg/apis/go.mod ./pkg/apis/go.sum ./pkg/client/go.mod ./pkg/client/go.sum ./scripts/package ./pkg/settings/setting.go ./package/Dockerfile ./Dockerfile.dapper\nENV DAPPER_DOCKER_SOCKET true\nENV DAPPER_RUN_ARGS \"-v rancher2-go16-pkg-1:/go/pkg -v rancher2-go16-cache-1:/root/.cache/go-build --privileged\"\nENV GOCACHE /root/.cache/go-build\nENV HOME ${DAPPER_SOURCE}\nVOLUME /var/lib/rancher\nVOLUME /var/lib/kubelet\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}