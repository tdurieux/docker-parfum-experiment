{
  "startTime": 1674252199476,
  "endTime": 1674252201565,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 187,
        "lineEnd": 187,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 190,
        "lineEnd": 190,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.suse.com/bci/bci-base:15.3\n\nRUN zypper -n install git-core curl ca-certificates unzip xz gzip sed tar shadow gawk vim netcat-openbsd mkisofs && \\\n    zypper -n clean -a && rm -rf /tmp/* /var/tmp/* /usr/share/doc/packages/* && \\\n    useradd rancher && \\\n    mkdir -p /var/lib/rancher /var/lib/cattle /opt/jail /opt/drivers/management-state/bin && \\\n    chown -R rancher /var/lib/rancher /var/lib/cattle /usr/local/bin\n\nRUN mkdir /root/.kube && \\\n    ln -s /etc/rancher/k3s/k3s.yaml /root/.kube/k3s.yaml  && \\\n    ln -s /etc/rancher/k3s/k3s.yaml /root/.kube/config && \\\n    ln -s /usr/bin/rancher /usr/bin/reset-password && \\\n    ln -s /usr/bin/rancher /usr/bin/ensure-default-admin\nWORKDIR /var/lib/rancher\n\nARG ARCH=amd64\nARG IMAGE_REPO=rancher\nARG SYSTEM_CHART_DEFAULT_BRANCH=dev-v2.6\nARG CHART_DEFAULT_BRANCH=dev-v2.6\nARG PARTNER_CHART_DEFAULT_BRANCH=main\nARG RKE2_CHART_DEFAULT_BRANCH=main\n# kontainer-driver-metadata branch to be set for specific branch other than dev/master, logic at rancher/rancher/pkg/settings/setting.go\nARG CATTLE_KDM_BRANCH=dev-v2.6\n\nENV CATTLE_SYSTEM_CHART_DEFAULT_BRANCH=$SYSTEM_CHART_DEFAULT_BRANCH\nENV CATTLE_CHART_DEFAULT_BRANCH=$CHART_DEFAULT_BRANCH\nENV CATTLE_PARTNER_CHART_DEFAULT_BRANCH=$PARTNER_CHART_DEFAULT_BRANCH\nENV CATTLE_RKE2_CHART_DEFAULT_BRANCH=$RKE2_CHART_DEFAULT_BRANCH\nENV CATTLE_HELM_VERSION v2.16.8-rancher2\nENV CATTLE_MACHINE_VERSION v0.15.0-rancher90\nENV CATTLE_K3S_VERSION v1.24.2+k3s1\nENV CATTLE_MACHINE_PROVISION_IMAGE rancher/machine:${CATTLE_MACHINE_VERSION}\nENV CATTLE_ETCD_VERSION v3.5.1\nENV LOGLEVEL_VERSION v0.1.5\nENV TINI_VERSION v0.18.0\nENV TELEMETRY_VERSION v0.5.17\nENV DOCKER_MACHINE_LINODE_VERSION v0.1.8\nENV LINODE_UI_DRIVER_VERSION v0.4.0\n# make sure the version number is consistent with the one at Line 100 of pkg/data/management/machinedriver_data.go\nENV DOCKER_MACHINE_HARVESTER_VERSION v0.4.0\nENV CATTLE_KDM_BRANCH ${CATTLE_KDM_BRANCH}\nENV HELM_VERSION v3.9.0\nENV KUSTOMIZE_VERSION v4.5.5\nENV CATTLE_WINS_AGENT_VERSION v0.3.1\nENV CATTLE_WINS_AGENT_INSTALL_SCRIPT https://raw.githubusercontent.com/rancher/wins/${CATTLE_WINS_AGENT_VERSION}/install.ps1\nENV CATTLE_WINS_AGENT_UNINSTALL_SCRIPT https://raw.githubusercontent.com/rancher/wins/${CATTLE_WINS_AGENT_VERSION}/uninstall.ps1\nENV CATTLE_WINS_AGENT_UPGRADE_IMAGE rancher/wins:${CATTLE_WINS_AGENT_VERSION}\nENV CATTLE_CSI_PROXY_AGENT_VERSION v1.1.1\nENV CATTLE_SYSTEM_AGENT_VERSION v0.2.8\nENV CATTLE_SYSTEM_AGENT_INSTALL_SCRIPT https://raw.githubusercontent.com/rancher/system-agent/${CATTLE_SYSTEM_AGENT_VERSION}/install.sh\nENV CATTLE_SYSTEM_AGENT_UNINSTALL_SCRIPT https://raw.githubusercontent.com/rancher/system-agent/${CATTLE_SYSTEM_AGENT_VERSION}/system-agent-uninstall.sh\nENV CATTLE_SYSTEM_AGENT_UPGRADE_IMAGE rancher/system-agent:${CATTLE_SYSTEM_AGENT_VERSION}-suc\nENV CATTLE_SYSTEM_UPGRADE_CONTROLLER_CHART_VERSION 100.0.3+up0.3.2\n\n# System charts minimal version\nENV CATTLE_FLEET_MIN_VERSION=100.0.4+up0.3.10-rc1\nENV CATTLE_RANCHER_WEBHOOK_MIN_VERSION=1.0.5+up0.2.6-rc5\nENV CATTLE_CSP_ADAPTER_MIN_VERSION=1.0.0+up1.0.0-rc2\n\nRUN mkdir -p /var/lib/rancher-data/local-catalogs/system-library && \\\n    mkdir -p /var/lib/rancher-data/local-catalogs/library && \\\n    mkdir -p /var/lib/rancher-data/local-catalogs/helm3-library && \\\n    mkdir -p /var/lib/rancher-data/local-catalogs/v2 && \\\n    git clone -b $CATTLE_SYSTEM_CHART_DEFAULT_BRANCH --depth 1 https://github.com/rancher/system-charts /var/lib/rancher-data/local-catalogs/system-library && \\\n    # Charts need to be copied into the sha256 value of git url computed in https://github.com/rancher/rancher/blob/5ebda9ac23c06e9647b586ec38aa51cc9ff9b031/pkg/catalogv2/git/download.go#L102 to create a unique folder per url\n    git clone -b $CATTLE_CHART_DEFAULT_BRANCH --depth 1 https://git.rancher.io/charts /var/lib/rancher-data/local-catalogs/v2/rancher-charts/4b40cac650031b74776e87c1a726b0484d0877c3ec137da0872547ff9b73a721/ && \\\n    git clone -b $CATTLE_PARTNER_CHART_DEFAULT_BRANCH --depth 1 https://git.rancher.io/partner-charts /var/lib/rancher-data/local-catalogs/v2/rancher-partner-charts/8f17acdce9bffd6e05a58a3798840e408c4ea71783381ecd2e9af30baad65974 && \\\n    git clone -b $CATTLE_RKE2_CHART_DEFAULT_BRANCH --depth 1 https://git.rancher.io/rke2-charts /var/lib/rancher-data/local-catalogs/v2/rancher-rke2-charts/675f1b63a0a83905972dcab2794479ed599a6f41b86cd6193d69472d0fa889c9 && \\\n    git clone -b master --depth 1 https://github.com/rancher/charts /var/lib/rancher-data/local-catalogs/library && \\\n    git clone -b master --depth 1 https://github.com/rancher/helm3-charts /var/lib/rancher-data/local-catalogs/helm3-library\n\nRUN curl -sLf https://github.com/rancher/machine/releases/download/${CATTLE_MACHINE_VERSION}/rancher-machine-${ARCH}.tar.gz | tar xvzf - -C /usr/bin && \\\n    curl -sLf https://github.com/rancher/loglevel/releases/download/${LOGLEVEL_VERSION}/loglevel-${ARCH}-${LOGLEVEL_VERSION}.tar.gz | tar xvzf - -C /usr/bin && \\\n    curl -f -LO https://github.com/linode/docker-machine-driver-linode/releases/download/${DOCKER_MACHINE_LINODE_VERSION}/docker-machine-driver-linode_linux-amd64.zip && \\\n    unzip docker-machine-driver-linode_linux-amd64.zip -d /opt/drivers/management-state/bin && \\\n    mkdir -p /usr/share/rancher/ui/assets/ && \\\n    cp /opt/drivers/management-state/bin/docker-machine-driver-linode /usr/share/rancher/ui/assets/ && \\\n    rm docker-machine-driver-linode_linux-amd64.zip\n\nRUN curl -f -LO https://releases.rancher.com/harvester-node-driver/${DOCKER_MACHINE_HARVESTER_VERSION}/docker-machine-driver-harvester-amd64.tar.gz && \\\n    tar -xf docker-machine-driver-harvester-amd64.tar.gz -C /opt/drivers/management-state/bin && \\\n    cp /opt/drivers/management-state/bin/docker-machine-driver-harvester /usr/share/rancher/ui/assets/ && \\\n    rm docker-machine-driver-harvester-amd64.tar.gz\n\nENV TINI_URL_amd64=https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini \\\n    TINI_URL_arm64=https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-arm64 \\\n    TINI_URL_s390x=https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-s390x \\\n    TINI_URL=TINI_URL_${ARCH}\n\nENV HELM_URL_V2_amd64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-helm \\\n    HELM_URL_V2_arm64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-helm-arm64 \\\n    HELM_URL_V2_s390x=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-helm-s390x \\\n    HELM_URL_V2=HELM_URL_V2_${ARCH} \\\n    HELM_URL_V3=https://get.helm.sh/helm-${HELM_VERSION}-linux-${ARCH}.tar.gz \\\n    TILLER_URL_amd64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-tiller \\\n    TILLER_URL_arm64=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-tiller-arm64 \\\n    TILLER_URL_s390x=https://github.com/rancher/helm/releases/download/${CATTLE_HELM_VERSION}/rancher-tiller-s390x \\\n    TILLER_URL=TILLER_URL_${ARCH} \\\n    ETCD_URL=https://github.com/etcd-io/etcd/releases/download/${CATTLE_ETCD_VERSION}/etcd-${CATTLE_ETCD_VERSION}-linux-${ARCH}.tar.gz \\\n    KUSTOMIZE_URL=https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize/${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_${ARCH}.tar.gz\n\nRUN curl -sLf ${KUSTOMIZE_URL} | tar -xzf - -C /usr/bin\n\n# set up helm 2\nRUN curl -sLf ${!HELM_URL_V2} > /usr/bin/rancher-helm && \\\n    curl -sLf ${!TILLER_URL} > /usr/bin/rancher-tiller && \\\n    ln -s /usr/bin/rancher-helm /usr/bin/helm && \\\n    ln -s /usr/bin/rancher-tiller /usr/bin/tiller && \\\n    chmod +x /usr/bin/rancher-helm /usr/bin/rancher-tiller\n\n# set up helm 3\nRUN curl -f ${HELM_URL_V3} | tar xvzf - --strip-components=1 -C /usr/bin && \\\n    mv /usr/bin/helm /usr/bin/helm_v3 && \\\n    chmod +x /usr/bin/kustomize\n\n# Set up K3s: copy the necessary binaries from the K3s image.\nCOPY --from=rancher/k3s:v1.24.2-k3s1 \\\n    /bin/blkid \\\n    /bin/charon \\\n    /bin/cni \\\n    /bin/conntrack \\\n    /bin/containerd \\\n    /bin/containerd-shim-runc-v2 \\\n    /bin/ethtool \\\n    /bin/ip \\\n    /bin/ipset \\\n    /bin/k3s \\\n    /bin/losetup \\\n    /bin/pigz \\\n    /bin/runc \\\n    /bin/swanctl \\\n    /bin/which \\\n    /bin/aux/xtables-legacy-multi \\\n/usr/bin/\n\nRUN ln -s /usr/bin/cni /usr/bin/bridge && \\\n    ln -s /usr/bin/cni /usr/bin/flannel && \\\n    ln -s /usr/bin/cni /usr/bin/host-local && \\\n    ln -s /usr/bin/cni /usr/bin/loopback && \\\n    ln -s /usr/bin/cni /usr/bin/portmap && \\\n    ln -s /usr/bin/k3s /usr/bin/crictl && \\\n    ln -s /usr/bin/k3s /usr/bin/ctr && \\\n    ln -s /usr/bin/k3s /usr/bin/k3s-agent && \\\n    ln -s /usr/bin/k3s /usr/bin/k3s-etcd-snapshot && \\\n    ln -s /usr/bin/k3s /usr/bin/k3s-server && \\\n    ln -s /usr/bin/k3s /usr/bin/kubectl && \\\n    ln -s /usr/bin/pigz /usr/bin/unpigz && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/iptables && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/iptables-save && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/iptables-restore && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/iptables-translate && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/ip6tables && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/ip6tables-save && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/ip6tables-restore && \\\n    ln -s /usr/bin/xtables-legacy-multi /usr/bin/ip6tables-translate\n\nRUN curl -sLf ${!TINI_URL} > /usr/bin/tini && \\\n    mkdir -p /var/lib/rancher/k3s/agent/images/ && \\\n    curl -sfL ${ETCD_URL} | tar xvzf - --strip-components=1 -C /usr/bin/ etcd-${CATTLE_ETCD_VERSION}-linux-${ARCH}/etcdctl && \\\n    curl -sLf https://github.com/rancher/telemetry/releases/download/${TELEMETRY_VERSION}/telemetry-${ARCH} > /usr/bin/telemetry && \\\n    chmod +x /usr/bin/tini /usr/bin/telemetry && \\\n    mkdir -p /var/lib/rancher-data/driver-metadata\n\nENV CATTLE_UI_VERSION 2.6.7-rc1\nENV CATTLE_DASHBOARD_UI_VERSION v2.6.7-rc1\nENV CATTLE_CLI_VERSION v2.6.6-rc4\n\n# Please update the api-ui-version in pkg/settings/settings.go when updating the version here.\nENV CATTLE_API_UI_VERSION 1.1.9\n\nRUN mkdir -p /var/log/auditlog\nENV AUDIT_LOG_PATH /var/log/auditlog/rancher-api-audit.log\nENV AUDIT_LOG_MAXAGE 10\nENV AUDIT_LOG_MAXBACKUP 10\nENV AUDIT_LOG_MAXSIZE 100\nENV AUDIT_LEVEL 0\n\nRUN mkdir -p /usr/share/rancher/ui && \\\n    cd /usr/share/rancher/ui && \\\n    curl -f -sL https://releases.rancher.com/ui/${CATTLE_UI_VERSION}.tar.gz | tar xvzf - --strip-components=1 && \\\n    mkdir -p assets/rancher-ui-driver-linode && \\\n    cd assets/rancher-ui-driver-linode && \\\n    curl -f -O https://linode.github.io/rancher-ui-driver-linode/releases/${LINODE_UI_DRIVER_VERSION}/component.js && \\\n    curl -f -O https://linode.github.io/rancher-ui-driver-linode/releases/${LINODE_UI_DRIVER_VERSION}/component.css && \\\n    curl -f -O https://linode.github.io/rancher-ui-driver-linode/releases/${LINODE_UI_DRIVER_VERSION}/linode.svg && \\\n    mkdir -p /usr/share/rancher/ui/api-ui && \\\n    cd /usr/share/rancher/ui/api-ui && \\\n    curl -f -sL https://releases.rancher.com/api-ui/${CATTLE_API_UI_VERSION}.tar.gz | tar xvzf - --strip-components=1 && \\\n    mkdir -p /usr/share/rancher/ui-dashboard/dashboard && \\\n    cd /usr/share/rancher/ui-dashboard/dashboard && \\\n    curl -f -sL https://releases.rancher.com/dashboard/${CATTLE_DASHBOARD_UI_VERSION}.tar.gz | tar xvzf - --strip-components=2 && \\\n    ln -s dashboard/index.html ../index.html && \\\n    cd ../../ui/assets && \\\n    curl -sfL https://github.com/rancher/system-agent/releases/download/${CATTLE_SYSTEM_AGENT_VERSION}/rancher-system-agent-arm -O && \\\n    curl -sfL https://github.com/rancher/system-agent/releases/download/${CATTLE_SYSTEM_AGENT_VERSION}/rancher-system-agent-arm64 -O && \\\n    curl -sfL https://github.com/rancher/system-agent/releases/download/${CATTLE_SYSTEM_AGENT_VERSION}/rancher-system-agent-amd64 -O && \\\n    curl -sfL https://github.com/rancher/system-agent/releases/download/${CATTLE_SYSTEM_AGENT_VERSION}/rancher-system-agent-s390x -O && \\\n    curl -sfL ${CATTLE_SYSTEM_AGENT_INSTALL_SCRIPT} -o system-agent-install.sh && \\\n    curl -sfL ${CATTLE_SYSTEM_AGENT_UNINSTALL_SCRIPT} -o system-agent-uninstall.sh && \\\n    curl -sfL https://github.com/rancher/wins/releases/download/${CATTLE_WINS_AGENT_VERSION}/wins.exe -O && \\\n    curl -sfL https://acs-mirror.azureedge.net/csi-proxy/${CATTLE_CSI_PROXY_AGENT_VERSION}/binaries/csi-proxy-${CATTLE_CSI_PROXY_AGENT_VERSION}.tar.gz -O && \\\n    curl -sfL ${CATTLE_WINS_AGENT_INSTALL_SCRIPT} -o wins-agent-install.ps1 \\\n    curl -sfL ${CATTLE_WINS_AGENT_UNINSTALL_SCRIPT} -o wins-agent-uninstall.ps1\n\nENV CATTLE_CLI_URL_DARWIN  https://releases.rancher.com/cli2/${CATTLE_CLI_VERSION}/rancher-darwin-amd64-${CATTLE_CLI_VERSION}.tar.gz\nENV CATTLE_CLI_URL_LINUX   https://releases.rancher.com/cli2/${CATTLE_CLI_VERSION}/rancher-linux-amd64-${CATTLE_CLI_VERSION}.tar.gz\nENV CATTLE_CLI_URL_WINDOWS https://releases.rancher.com/cli2/${CATTLE_CLI_VERSION}/rancher-windows-386-${CATTLE_CLI_VERSION}.zip\n\nARG VERSION=dev\nENV CATTLE_SERVER_VERSION ${VERSION}\nCOPY entrypoint.sh rancher /usr/bin/\nCOPY kustomize.sh /usr/bin/\nCOPY jailer.sh /usr/bin/\nCOPY k3s-airgap-images.tar /var/lib/rancher/k3s/agent/images/\nRUN chmod +x /usr/bin/entrypoint.sh\nRUN chmod +x /usr/bin/kustomize.sh\n\nCOPY data.json /var/lib/rancher-data/driver-metadata/\n\nENV CATTLE_AGENT_IMAGE ${IMAGE_REPO}/rancher-agent:${VERSION}\nENV CATTLE_SERVER_IMAGE ${IMAGE_REPO}/rancher\nENV ETCDCTL_API=3\n\nENV SSL_CERT_DIR /etc/rancher/ssl\nVOLUME /var/lib/rancher\nVOLUME /var/lib/kubelet\nVOLUME /var/lib/cni\nVOLUME /var/log\n\nENTRYPOINT [\"entrypoint.sh\"]\n"
}