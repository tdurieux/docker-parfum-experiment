{
  "startTime": 1674252382532,
  "endTime": 1674252383714,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7.12\n\nARG KUBECTL_VERSION=v1.16.6\nENV WORKSPACE /src/rancher-validation\nWORKDIR $WORKSPACE\nENV PYTHONPATH /src/rancher-validation\nARG RKE_VERSION=v1.0.2\nARG CLI_VERSION=v2.3.2\nARG RANCHER_HELM_VERSION=v3.9.0\nARG SONOBUOY_VERSION=0.18.2\nARG TERRAFORM_VERSION=0.12.10\n\nARG EXTERNAL_ENCODED_VPN\nARG VPN_ENCODED_LOGIN\n\n\nCOPY [\".\", \"$WORKSPACE\"]\n\nRUN wget https://storage.googleapis.com/kubernetes-release/release/$KUBECTL_VERSION/bin/linux/amd64/kubectl && \\\n    mv kubectl /bin/kubectl && \\\n    chmod +x /bin/kubectl  && \\\n    wget https://github.com/rancher/rke/releases/download/$RKE_VERSION/rke_linux-amd64 && \\\n    mv rke_linux-amd64 /bin/rke && \\\n    chmod +x /bin/rke && \\\n    wget https://github.com/rancher/cli/releases/download/$CLI_VERSION/rancher-linux-amd64-$CLI_VERSION.tar.gz && \\\n    tar -x -f rancher-linux-amd64-$CLI_VERSION.tar.gz && \\\n    mv rancher-$CLI_VERSION/rancher /bin/rancherctl && \\\n    chmod +x /bin/rancherctl && \\\n    wget https://get.helm.sh/helm-$RANCHER_HELM_VERSION-linux-amd64.tar.gz && \\\n    tar -x -f helm-$RANCHER_HELM_VERSION-linux-amd64.tar.gz && \\\n    mv linux-amd64/helm /bin/helm_v3 && \\\n    chmod +x /bin/helm_v3 && \\\n    wget https://releases.hashicorp.com/terraform/$TERRAFORM_VERSION/terraform_\"$TERRAFORM_VERSION\"_linux_amd64.zip && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends unzip && \\\n    unzip terraform_\"$TERRAFORM_VERSION\"_linux_amd64.zip && \\\n    chmod u+x terraform && \\\n    mv terraform /usr/local/bin && \\\n    wget \"https://github.com/vmware-tanzu/sonobuoy/releases/download/v$SONOBUOY_VERSION/sonobuoy_$SONOBUOY_VERSION\"_linux_amd64.tar.gz && \\\n    tar -xzf \"sonobuoy_$SONOBUOY_VERSION\"_linux_amd64.tar.gz -C /tmp && \\\n    mv /tmp/sonobuoy /usr/local/bin && \\\n    chmod +x /usr/local/bin/sonobuoy && \\\n    wget https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip && \\\n    unzip awscli-exe-linux-x86_64.zip && \\\n    ./aws/install && \\\n    # curl -sL https://aka.ms/InstallAzureCLIDeb | bash && \\\n    cd $WORKSPACE && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r requirements_v3api.txt && rm rancher-linux-amd64-$CLI_VERSION.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n# necessary to run if statements using [[ ]]\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN if [[ -z \"$EXTERNAL_ENCODED_VPN\" ]] ;then echo no vpn provided ;elif \\\n\n    [[ -z \"$VPN_ENCODED_LOGIN}\" ]] ; then \\\n apt-get update && \\\n    apt-get -y --no-install-recommends install openvpn net-tools && echo $EXTERNAL_ENCODED_VPN | base64 -d > external.ovpn && \\\n    if [[ -z \"$VPN_ENCODED_LOGIN}\" ]] ; then echo no passcode provided ; else echo adding passfile && \\\n    echo $VPN_ENCODED_LOGIN | base64 -d > passfile && \\\n    sed -i 's/auth-user-pass/auth-user-pass passfile/g' external.ovpn; fi; rm -rf /var/lib/apt/lists/*; else echo adding passfile && \\\n    echo $VPN_ENCODED_LOGIN | base64 -d > passfile && \\\n    sed -i 's/auth-user-pass/auth-user-pass passfile/g' external.ovpn; fifi;\n"
}