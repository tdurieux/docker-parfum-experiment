{
  "startTime": 1674250705548,
  "endTime": 1674250706583,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17\n\n# Configure Go\nENV GOPATH /go\nENV PATH ${PATH}:/go/bin\n\nENV WORKSPACE ${GOPATH}/src/github.com/rancher/rancher\n\n# configure VPN\nARG EXTERNAL_ENCODED_VPN\nARG VPN_ENCODED_LOGIN\n\nWORKDIR $WORKSPACE/tests/v2/validation\n\nCOPY [\".\", \"$WORKSPACE\"]\n\nRUN go mod download && \\\n    go get gotest.tools/gotestsum\n\nRUN CGO_ENABLED=0\n\n# necessary to run if statements using [[ ]]\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN if [[ -z \"$EXTERNAL_ENCODED_VPN\" ]] ;then echo no vpn provided ;elif \\\n\n    [[ -z \"$VPN_ENCODED_LOGIN}\" ]] ; then \\\n apt-get update && \\\n    apt-get -y --no-install-recommends install openvpn net-tools && echo $EXTERNAL_ENCODED_VPN | base64 -d > external.ovpn && \\\n    if [[ -z \"$VPN_ENCODED_LOGIN}\" ]] ; then echo no passcode provided ; else echo adding passfile && \\\n    echo $VPN_ENCODED_LOGIN | base64 -d > passfile && \\\n    sed -i 's/auth-user-pass/auth-user-pass passfile/g' external.ovpn; fi; rm -rf /var/lib/apt/lists/*; else echo adding passfile && \\\n    echo $VPN_ENCODED_LOGIN | base64 -d > passfile && \\\n    sed -i 's/auth-user-pass/auth-user-pass passfile/g' external.ovpn; fifi;"
}