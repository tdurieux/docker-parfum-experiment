{
  "startTime": 1674254355004,
  "endTime": 1674254355977,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM azul/zulu-openjdk:8u172\n\nENV DAPPER_ENV API_VERSION ENVIRONMENTS\nENV DAPPER_RUN_ARGS --privileged\nENV DAPPER_SOURCE /usr/src/cattle\nENV DAPPER_OUTPUT dist\nWORKDIR ${DAPPER_SOURCE}\n\n# MySQL\nENV MYSQL_VERSION 5.5\nENV MYSQL_HOST 127.0.0.1\nENV MYSQL_TCP_PORT 13306\n\n# Postgres\nENV PGSQL_VERSION 9.6\nENV PGHOST 127.0.0.1\nENV PGPASSWORD cattle\nENV PGUSER cattle\nENV PGDATABASE cattle\n\n# Install Python and packages\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends python-pip iptables xz-utils git curl python-setuptools iproute && rm -rf /var/lib/apt/lists/*;\n\n# Hack to work around overlay issue\nRUN pip uninstall -y py >/dev/null >/dev/null 2>&1 || true && \\\n    pip install --no-cache-dir --upgrade pip==6.0.3 wheel && \\\n    pip install --no-cache-dir --upgrade tox==1.8.1 virtualenv==12.0.4\n\n# Build Tools\nENV BUILD_TOOLS_VERSION 0.3.1\nRUN mkdir /tmp/build-tools && \\\n    cd /tmp/build-tools && \\\n    curl -f -sSL -o build-tools.tar.gz https://github.com/rancherio/build-tools/archive/v${BUILD_TOOLS_VERSION}.tar.gz && \\\n    tar -xzvf build-tools.tar.gz && cp ./build-tools-${BUILD_TOOLS_VERSION}/bin/* /usr/local/bin && \\\n    rm -rf /tmp/build-tools && rm build-tools.tar.gz\n\n# Cache Maven stuff\nRUN sed -i '/^#crypto.policy=unlimited$/s/^#//g' /usr/lib/jvm/zulu-8-amd64/jre/lib/security/java.security\nRUN cd /tmp && \\\n    git clone https://github.com/ibuildthecloud/cattle.git && \\\n    cd cattle && \\\n    git checkout mvnw && \\\n    ./scripts/checkstyle && \\\n    ./mvnw package && \\\n    cd .. && \\\n    rm -rf cattle\n\nARG DOCKER_VERSION=17.03.1-ce\n# Install Docker\nRUN curl -sfL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz | tar xzf - -C /usr/bin --strip-components=1\n\n# Cache binaries\nCOPY ./resources/content/cattle-global.properties ${DAPPER_SOURCE}/resources/content/\nRUN bash -x cattle-binary-pull\n\nVOLUME /var/lib/docker\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}