{
  "startTime": 1674215956360,
  "endTime": 1674215957744,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 11,
        "lineEnd": 12,
        "columnStart": 8,
        "columnEnd": 5
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG REPO\nARG TAG\nFROM ${REPO}/k3os-package:${TAG} as package\n\nARG REPO\nARG TAG\nFROM ${REPO}/k3os-base:${TAG} as base\nARG VERSION\nARG ARCH\nRUN apk add --no-cache xorriso grub grub-efi mtools libvirt qemu-img\nRUN if [ \"$ARCH\" == \"amd64\" ]; then \\\n        apk add --no-cache qemu-system-x86_64 grub-bios ovmf \\\n    ; elif [ \"$ARCH\" == \"arm64\" ]; then \\\n        apk add --no-cache qemu-system-aarch64 \\\n    ; fi\nRUN ln -s /usr/bin/qemu-system-* /usr/bin/qemu-system\nRUN qemu-img create -f qcow2 /hd.img 40G\nCOPY run-kvm.sh /usr/bin/\nCOPY grub.cfg /usr/src/iso/boot/grub/grub.cfg\n\nCOPY --from=package /output/ /usr/src/iso/\n\nCOPY config.yaml /usr/src/iso/k3os/system/\nRUN mkdir -p /output && \\\n    grub-mkrescue -o /output/k3os.iso /usr/src/iso/. -- -volid K3OS -joliet on && \\\n    [ -e /output/k3os.iso ] # grub-mkrescue doesn't exit non-zero on failure\n\nCMD [\"run-kvm.sh\"]\n"
}