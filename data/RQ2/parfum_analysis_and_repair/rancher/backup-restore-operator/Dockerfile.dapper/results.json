{
  "startTime": 1674252539710,
  "endTime": 1674252540331,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 8,
        "columnEnd": 210
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 68,
        "columnEnd": 158
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 11,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.suse.com/bci/golang:1.17\n# Add buildx plugin\nCOPY --from=docker.io/docker/buildx-bin:0.8.2 /buildx /usr/libexec/docker/cli-plugins/docker-buildx\n\nARG DAPPER_HOST_ARCH\nENV ARCH $DAPPER_HOST_ARCH\n\nRUN zypper -n in git-core curl tar gzip docker wget awk hostname && \\\n    zypper -n clean -a && \\\n    rm -rf /tmp/* /var/tmp/* /usr/share/doc/packages/*\n\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s v1.46.2; \\\n    fi\nRUN curl -f -sL https://get.helm.sh/helm-v3.9.0-linux-${ARCH}.tar.gz | tar xvzf - -C /usr/local/bin --strip-components=1\nRUN if [ \"${ARCH}\" != \"s390x\" ]; then \\\n        helm plugin install https://github.com/quintush/helm-unittest; \\\n    fi\n\n#integration tests only support amd64\nRUN if [ \"${ARCH}\" == \"amd64\" ]; then \\\n        curl -f -sL https://github.com/rancher/k3s/releases/download/$( curl -f -Ls -o /dev/null -w %{url_effective} https://update.k3s.io/v1-release/channels/stable | awk -F/ '{ print $NF }')/k3s > /usr/local/bin/k3s \\\n        && chmod +x /usr/local/bin/k3s \\\n        && curl -f -sL https://dl.min.io/client/mc/release/linux-amd64/mc > /usr/local/bin/mc \\\n        && chmod +x /usr/local/bin/mc; \\\n    fi\n\nENV DAPPER_ENV REPO TAG DRONE_TAG CROSS USE_DOCKER_BUILDX\nENV DAPPER_SOURCE /go/src/github.com/rancher/backup-restore-operator/\nENV DAPPER_OUTPUT ./bin ./dist\nENV GOCACHE /root/.cache/go-build\nENV GOPATH /go\nENV DAPPER_DOCKER_SOCKET true\nENV DAPPER_RUN_ARGS --privileged\nVOLUME /var/lib/rancher/k3s\nVOLUME /var/lib/cni\nVOLUME /var/log\nENV HOME ${DAPPER_SOURCE}\nWORKDIR ${DAPPER_SOURCE}\n\nENTRYPOINT [\"./scripts/entry\"]\nCMD [\"ci\"]\n"
}