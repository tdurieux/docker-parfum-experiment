{
  "startTime": 1674248415027,
  "endTime": 1674248415822,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The docker image produced by this is intended to be used by the terraform-v2\n# orb.\nFROM debian:buster-slim\n\nARG TFMASK_VERSION=\"0.7.0\"\nARG TFSWITCH_VERSION=0.13.1275\nARG GCLOUD_VERSION=329.0.0\nARG AWSCLI_VERSION=1.19.16\nARG HELM3_VERSION=3.5.3\n\n# internal providers\nARG TF_OVO_VERSIONS=\"1.0.0\"\nARG TF_AIVEN_KAFKA_USERS_VERSIONS=\"0.0.1 1.0.1 1.0.2 1.0.3 1.0.4 1.0.5 1.0.6 1.0.7 1.0.8 1.0.9\"\n\n# Terraform environment variables\nENV CHECKPOINT_DISABLE=true\nENV TF_IN_AUTOMATION=yep\nENV TF_INPUT=false\nENV TF_PLUGIN_CACHE_DIR=/usr/local/share/terraform/plugin-cache\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    ssh \\\n    tar \\\n    gzip \\\n    ca-certificates \\\n    curl \\\n    unzip \\\n    jq \\\n    python3 \\\n    python3-setuptools \\\n    python3-requests \\\n    python3-pip \\\n    wget \\\n && rm -rf /var/lib/apt/lists/*\n\n# tfmask\nRUN curl -fsL https://github.com/cloudposse/tfmask/releases/download/${TFMASK_VERSION}/tfmask_linux_amd64 -o tfmask \\\n && mv tfmask /usr/local/bin\n\n# tfswitch\nRUN curl -fsL https://github.com/warrensbox/terraform-switcher/releases/download/${TFSWITCH_VERSION}/terraform-switcher_${TFSWITCH_VERSION}_linux_amd64.tar.gz -o tfswitch.tar.gz \\\n    && tar -xvf tfswitch.tar.gz tfswitch \\\n    && mv tfswitch /usr/local/bin \\\n    && rm -rf tfswitch.tar.gz\nRUN mkdir -p $TF_PLUGIN_CACHE_DIR\n\n# kafka users ovo provider\nRUN mkdir -p /root/.terraform.d/plugins \\\n && for TF_OVO_VERSION in $TF_OVO_VERSIONS; do \\\n      curl -f -L https://ovo-kafka-user.s3-eu-west-1.amazonaws.com/terraform-provider-ovo/${TF_OVO_VERSION}/terraform-provider-ovo_${TF_OVO_VERSION}_linux_amd64.zip -o ovo.zip \\\n      && mkdir -p /root/.terraform.d/plugins/terraform.ovotech.org.uk/pe/ovo/${TF_OVO_VERSION}/linux_amd64 \\\n      && unzip ovo.zip -d /root/.terraform.d/plugins \\\n      && unzip ovo.zip -d /root/.terraform.d/plugins/terraform.ovotech.org.uk/pe/ovo/${TF_OVO_VERSION}/linux_amd64 \\\n      && rm ovo.zip; \\\n    done\n\n# aiven_kafka_users provider\nRUN for TF_AIVEN_KAFKA_USERS_VERSION in $TF_AIVEN_KAFKA_USERS_VERSIONS; do \\\n      curl -f -L https://kafka-users-prod-tf-provider.s3-eu-west-1.amazonaws.com/terraform-provider-aiven-kafka-users/${TF_AIVEN_KAFKA_USERS_VERSION}/terraform-provider-aiven-kafka-users_${TF_AIVEN_KAFKA_USERS_VERSION}_linux_amd64.zip -o aiven-kafka-users.zip \\\n      && mkdir -p /root/.terraform.d/plugins/terraform.ovotech.org.uk/pe/aiven-kafka-users/${TF_AIVEN_KAFKA_USERS_VERSION}/linux_amd64 \\\n      && unzip aiven-kafka-users.zip -d /root/.terraform.d/plugins \\\n      && unzip aiven-kafka-users.zip -d /root/.terraform.d/plugins/terraform.ovotech.org.uk/pe/aiven-kafka-users/${TF_AIVEN_KAFKA_USERS_VERSION}/linux_amd64 \\\n      && rm aiven-kafka-users.zip; \\\n    done\n\n# helm 3\nRUN curl -fsL \"https://get.helm.sh/helm-v${HELM3_VERSION}-linux-amd64.tar.gz\" | tar -xzvf- \\\n && mv linux-amd64/helm /usr/local/bin/helm3 \\\n && rm -rf helm*.tar.gz linux-amd64/ \\\n && ln -s /usr/local/bin/helm3 /usr/local/bin/helm\n\n# gcloud\nRUN curl -fsL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz -o /opt/google-cloud-sdk.tar.gz \\\n && cd /opt; tar -xf google-cloud-sdk.tar.gz \\\n && rm google-cloud-sdk.tar.gz\nENV PATH \"/opt/google-cloud-sdk/bin:$PATH\"\n\n# awscli\nRUN pip3 install --no-cache-dir awscli==$AWSCLI_VERSION\n# Upgrade requests lib again to prevent RequestsDependencyWarning for urllib3 and chardet\nRUN pip3 install --no-cache-dir --upgrade requests\n\nENV TFMASK_RESOURCES_REGEX=\"(?i)^(random_id|kubernetes_secret|acme_certificate).*$\"\n\nCOPY compact_plan.py /usr/local/bin/compact_plan\n\nENTRYPOINT [\"/usr/local/bin/terraform\"]\n"
}