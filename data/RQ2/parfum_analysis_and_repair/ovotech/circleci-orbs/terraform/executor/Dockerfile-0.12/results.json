{
  "startTime": 1674252205799,
  "endTime": 1674252206686,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12.6 AS tfmask\n\nRUN git clone https://github.com/cloudposse/tfmask.git\nRUN cd tfmask && make && make go/build\n\nFROM debian:buster-slim\n\nARG TF_VERSIONS=\"0.12.0 0.12.1 0.12.2 0.12.3 0.12.4 0.12.5 0.12.6 0.12.7 0.12.8 0.12.9 0.12.10 0.12.12 0.12.13 0.12.14 0.12.15 0.12.16 0.12.17 0.12.18 0.12.19 0.12.20 0.12.21 0.12.22 0.12.23 0.12.24 0.12.25 0.12.26 0.12.27 0.12.28 0.12.29\"\nARG DEFAULT_TF_VERSION=0.12.29\nARG GCLOUD_VERSION=314.0.0\nARG AWSCLI_VERSION=1.18.134\nARG HELM2_VERSION=2.16.10\nARG HELM3_VERSION=3.3.1\nARG TFSWITCH_VERSION=0.13.1275\nARG NEW_TF_AIVEN_VERSIONS=\"2.0.1 2.0.5 2.0.6\"\nARG TF_AIVEN_VERSIONS=\"1.0.19 1.0.20 1.1.0 1.1.1 1.1.2 1.1.3 1.1.4 1.3.5\"\nARG TF_OLD_AIVEN_VERSIONS=\"1.0.0 1.0.1 1.0.2 1.0.3 1.0.4 1.0.5 1.0.6 1.0.7 1.0.8 1.0.9 1.0.10 1.0.11 1.0.12 1.0.13 1.0.15 1.0.16 1.0.17 1.0.18\"\nARG TF_OVO_VERSIONS=\"1.0.0\"\nARG TF_AIVEN_KAFKA_USERS_VERSIONS=\"0.0.1 1.0.1 1.0.2 1.0.3 1.0.4 1.0.5 1.0.6 1.0.7 1.0.8 1.0.9\"\n\n# Terraform environment variables\nENV CHECKPOINT_DISABLE=true\nENV TF_IN_AUTOMATION=yep\nENV TF_INPUT=false\nENV TF_PLUGIN_CACHE_DIR=/usr/local/share/terraform/plugin-cache\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    ssh \\\n    tar \\\n    gzip \\\n    ca-certificates \\\n    curl \\\n    unzip \\\n    jq \\\n    python2 \\\n    python3 \\\n    python3-requests \\\n    python3-pip \\\n    wget \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN curl -fsL https://github.com/warrensbox/terraform-switcher/releases/download/${TFSWITCH_VERSION}/terraform-switcher_${TFSWITCH_VERSION}_linux_amd64.tar.gz -o tfswitch.tar.gz \\\n && tar -xvf tfswitch.tar.gz \\\n && mv tfswitch /usr/local/bin \\\n && rm -rf tfswitch \\\n && for TF_VERSION in $TF_VERSIONS; do \\\n      tfswitch $TF_VERSION; \\\n    done \\\n && tfswitch $DEFAULT_TF_VERSION && rm tfswitch.tar.gz\nRUN mkdir -p $TF_PLUGIN_CACHE_DIR\n\nRUN mkdir -p /root/.terraform.d/plugins \\\n && set -eux \\\n && for TF_AIVEN_VERSION in $TF_OLD_AIVEN_VERSIONS; do \\\n      curl -f -L \"https://github.com/aiven/terraform-provider-aiven/releases/download/v${TF_AIVEN_VERSION}/terraform-provider-aiven-linux_amd64\" \\\n        -o /root/.terraform.d/plugins/terraform-provider-aiven_v${TF_AIVEN_VERSION} \\\n      && chmod +x /root/.terraform.d/plugins/terraform-provider-aiven_v${TF_AIVEN_VERSION}; \\\n    done \\\n && for TF_AIVEN_VERSION in $TF_AIVEN_VERSIONS; do \\\n      curl -f -L \"https://github.com/aiven/terraform-provider-aiven/releases/download/v${TF_AIVEN_VERSION}/terraform-provider-aiven-linux-amd64_v${TF_AIVEN_VERSION}\" \\\n        -o /root/.terraform.d/plugins/terraform-provider-aiven_v${TF_AIVEN_VERSION} \\\n      && chmod +x /root/.terraform.d/plugins/terraform-provider-aiven_v${TF_AIVEN_VERSION}; \\\n    done \\\n && for TF_AIVEN_VERSION in $NEW_TF_AIVEN_VERSIONS; do \\\n      curl -f -L \"https://github.com/aiven/terraform-provider-aiven/releases/download/v${TF_AIVEN_VERSION}/terraform-provider-aiven_${TF_AIVEN_VERSION}_linux_amd64.zip\" -o aiven-provider.zip \\\n      && unzip aiven-provider.zip terraform-provider-aiven_v${TF_AIVEN_VERSION} -d /root/.terraform.d/plugins \\\n      && chmod +x /root/.terraform.d/plugins/terraform-provider-aiven_v${TF_AIVEN_VERSION} \\\n      && rm aiven-provider.zip; \\\n    done\n\n# helm 2\nRUN curl -fsL \"https://get.helm.sh/helm-v${HELM2_VERSION}-linux-amd64.tar.gz\" | tar -xzvf- \\\n && mv linux-amd64/helm /usr/local/bin/helm2 \\\n && rm -rf helm*.tar.gz linux-amd64/ \\\n && ln -s /usr/local/bin/helm2 /usr/local/bin/helm \\\n && helm init --stable-repo-url=https://charts.helm.sh/stable --client-only\nENV HELM_HOME /root/.helm\n\n# helm 3\nRUN curl -fsL \"https://get.helm.sh/helm-v${HELM3_VERSION}-linux-amd64.tar.gz\" | tar -xzvf- \\\n && mv linux-amd64/helm /usr/local/bin/helm3 \\\n && rm -rf helm*.tar.gz linux-amd64/\n\n# ovo provider\nRUN mkdir -p /root/.terraform.d/plugins \\\n && for TF_OVO_VERSION in $TF_OVO_VERSIONS; do \\\n      curl -f -L https://ovo-kafka-user.s3-eu-west-1.amazonaws.com/terraform-provider-ovo/${TF_OVO_VERSION}/terraform-provider-ovo_${TF_OVO_VERSION}_linux_amd64.zip -o ovo.zip \\\n      && unzip ovo.zip -d /root/.terraform.d/plugins \\\n      && rm ovo.zip; \\\n    done\n\n# aiven_kafka_users provider\nRUN for TF_AIVEN_KAFKA_USERS_VERSION in $TF_AIVEN_KAFKA_USERS_VERSIONS; do \\\n      curl -f -L https://kafka-users-prod-tf-provider.s3-eu-west-1.amazonaws.com/terraform-provider-aiven-kafka-users/${TF_AIVEN_KAFKA_USERS_VERSION}/terraform-provider-aiven-kafka-users_${TF_AIVEN_KAFKA_USERS_VERSION}_linux_amd64.zip -o aiven-kafka-users.zip \\\n      && unzip aiven-kafka-users.zip -d /root/.terraform.d/plugins \\\n      && rm aiven-kafka-users.zip; \\\n    done\n\nRUN curl -fsL https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz -o /opt/google-cloud-sdk.tar.gz \\\n && cd /opt; tar -xf google-cloud-sdk.tar.gz \\\n && rm google-cloud-sdk.tar.gz\nENV PATH \"/opt/google-cloud-sdk/bin:$PATH\"\n\nRUN pip3 install --no-cache-dir awscli==$AWSCLI_VERSION\n\nCOPY --from=tfmask /go/tfmask/release/tfmask /usr/local/bin/tfmask\nENV TFMASK_RESOURCES_REGEX=\"(?i)^(random_id|kubernetes_secret|acme_certificate).*$\"\n\nCOPY compact_plan.py /usr/local/bin/compact_plan\n\nENTRYPOINT [\"/usr/local/bin/terraform\"]\n"
}