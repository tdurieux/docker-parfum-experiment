{
  "startTime": 1674249561590,
  "endTime": 1674249562777,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Apollo2.X\nFROM ubuntu:20.04\nMAINTAINER Nathan Dunn GH @nathandunn\nENV DEBIAN_FRONTEND noninteractive\n\n\n# where bin directories are\nENV CATALINA_HOME /usr/share/tomcat9\n# where webapps are deployed\nENV CATALINA_BASE /var/lib/tomcat9\nENV CONTEXT_PATH ROOT\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\nRUN apt-get -qq update --fix-missing && \\\n\tapt-get --no-install-recommends -y install \\\n\tgit locales locales-all build-essential libpq-dev wget python3-pip \\\n\tlsb-release gnupg2 wget xmlstarlet netcat libpng-dev postgresql-common \\\n\tzlib1g-dev libexpat1-dev curl ssl-cert zip unzip openjdk-8-jdk-headless && rm -rf /var/lib/apt/lists/*;\n\nRUN sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list' && \\\n\twget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\n\nRUN apt-get -qq update --fix-missing && \\\n\tapt-get --no-install-recommends -y install \\\n\tpostgresql-9.6 postgresql-client-9.6  tomcat9 && \\\n\tapt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /apollo/\n\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get -qq update --fix-missing && \\\n\tapt-get --no-install-recommends -y install nodejs && rm -rf /var/lib/apt/lists/*;\n\n\nRUN curl -f -s \"https://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/blat/blat\" -o /usr/local/bin/blat && \\\n\tchmod +x /usr/local/bin/blat && \\\n\tcurl -f -s \"https://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64/faToTwoBit\" -o /usr/local/bin/faToTwoBit && \\\n\tchmod +x /usr/local/bin/faToTwoBit && \\\n\twget --quiet https://github.com/galaxy-genome-annotation/chado-schema-builder/releases/download/1.31-jenkins26/chado-1.31.sql.gz -O /chado.sql.gz && \\\n\tgunzip /chado.sql.gz\n\n#NOTE, we had problems with the build the archive-file coming in from github so using a clone instead\nRUN npm i -g yarn && useradd -ms /bin/bash -d /apollo apollo && npm cache clean --force;\nCOPY client /apollo/client\nCOPY gradlew /apollo\nCOPY grails-app /apollo/grails-app\nCOPY gwt-sdk /apollo/gwt-sdk\nCOPY lib /apollo/lib\nCOPY src /apollo/src\nCOPY web-app /apollo/web-app\nCOPY wrapper /apollo/wrapper\nCOPY test /apollo/test\nCOPY scripts /apollo/scripts\nADD gra* /apollo/\nCOPY apollo /apollo/apollo\nADD build* /apollo/\nADD settings.gradle /apollo\nADD application.properties /apollo\nRUN ls /apollo\n\nCOPY docker-files/build.sh /bin/build.sh\nADD docker-files/docker-apollo-config.groovy /apollo/apollo-config.groovy\nRUN chown -R apollo:apollo /apollo\n\n# install python libraries\n\n# fix for pip install decode error\n# RUN locale-gen en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\n\nRUN pip3 install --no-cache-dir setuptools\nRUN pip3 install --no-cache-dir wheel\nRUN pip3 install --no-cache-dir nose apollo==4.2.10\n\n# install grails\nUSER apollo\n\nRUN curl -f -s get.sdkman.io | bash && \\\n\t/bin/bash -c \"source $HOME/.sdkman/bin/sdkman-init.sh && yes | sdk install grails 2.5.5\" && \\\n\t/bin/bash -c \"source $HOME/.sdkman/bin/sdkman-init.sh && yes | sdk install gradle 3.2.1\"\n\nRUN /bin/bash -c \"source $HOME/.sdkman/bin/sdkman-init.sh && /bin/bash /bin/build.sh\"\n\nUSER root\n# remove from webapps and copy it into a staging directory\nRUN rm -rf ${CATALINA_BASE}/webapps/* && \\\n\tcp /apollo/apollo*.war ${CATALINA_BASE}/apollo.war\n\nADD docker-files/createenv.sh /createenv.sh\nADD docker-files/launch.sh /launch.sh\nCMD \"/launch.sh\"\n"
}