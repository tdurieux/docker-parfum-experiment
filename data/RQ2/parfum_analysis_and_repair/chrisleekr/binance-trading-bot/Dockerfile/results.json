{
  "startTime": 1674255367969,
  "endTime": 1674255368930,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# development stage\nFROM node:14-alpine AS dev-stage\n\nRUN apk add --no-cache make gcc g++ py-pip\n\n# Add configuration files\nCOPY image-files/ /\n\nWORKDIR /srv\n\nCOPY package*.json ./\n\nRUN npm install && npm cache clean --force;\n\nCOPY . .\n\nARG PACKAGE_VERSION=untagged\nENV PACKAGE_VERSION=${PACKAGE_VERSION}\nLABEL com.chrisleekr.binance-trading-bot.package-version=${PACKAGE_VERSION}\n\nARG GIT_HASH=unspecified\nENV GIT_HASH=${GIT_HASH}\nLABEL com.chrisleekr.binance-trading-bot.git-hash=${GIT_HASH}\n\nARG NODE_ENV=development\nENV NODE_ENV=${NODE_ENV}\nLABEL com.chrisleekr.binance-trading-bot.node-env=${NODE_ENV}\n\nENTRYPOINT [ \"docker-entrypoint.sh\" ]\n\nCMD [ \"npm\", \"run\", \"dev\" ]\n\n# build stage\nFROM dev-stage AS build-stage\n\nRUN npm run build:webpack\n\nRUN npm run build:grunt\n\nRUN rm -rf node_modules\n\nRUN npm install --production && npm cache clean --force;\n\n# production stage\nFROM node:14-alpine AS production-stage\n\nARG PACKAGE_VERSION=untagged\nENV PACKAGE_VERSION=${PACKAGE_VERSION}\nLABEL com.chrisleekr.binance-trading-bot.package-version=${PACKAGE_VERSION}\n\nARG GIT_HASH=unspecified\nENV GIT_HASH=${GIT_HASH}\nLABEL com.chrisleekr.binance-trading-bot.git-hash=${GIT_HASH}\n\nARG NODE_ENV=production\nENV NODE_ENV=${NODE_ENV}\nLABEL com.chrisleekr.binance-trading-bot.node-env=${NODE_ENV}\n\n# Add configuration files\nCOPY image-files/ /\n\nWORKDIR /srv\n\nCOPY --from=build-stage /srv /srv\n\n# Copy index production HTML to index.html\nRUN cp /srv/public/index.html /srv/public/index.dev.html && \\\n  cp /srv/public/index.prod.html /srv/public/index.html\n\nENTRYPOINT [ \"docker-entrypoint.sh\" ]\n\nCMD [ \"npm\", \"start\"]\n"
}