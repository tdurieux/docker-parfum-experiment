{
  "startTime": 1674217826993,
  "endTime": 1674217827850,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# initial stage\nFROM node:16-alpine3.13 AS initial-stage\n\nRUN apk --no-cache add autoconf=2.69-r3 \\\n  automake=1.16.3-r0 \\\n  gcc=10.2.1_pre1-r3 \\\n  make=4.3-r0 \\\n  g++=10.2.1_pre1-r3 \\\n  zlib-dev=1.2.12-r1\n\nWORKDIR /srv\n\nCOPY package*.json ./\n\nRUN npm install && npm cache clean --force;\n\n# build stage\nFROM initial-stage AS build-stage\n\nARG BASE_URL\nARG API_URL\n\nENV BASE_URL=${BASE_URL}\nENV API_URL=${API_URL}\n\nWORKDIR /srv\n\n# Add configuration files\nCOPY image-files/ /\n\nRUN chmod +x /usr/local/bin/create-env.sh\nENV PATH /usr/local/bin:$PATH\n\nCOPY . .\n\nRUN create-env.sh && \\\n  npm run build\n\nFROM node:16-alpine AS production-stage\n\n# Add configuration files\nCOPY image-files/ /\n\nRUN chmod +x /usr/local/bin/create-env.sh\nENV PATH /usr/local/bin:$PATH\n\nWORKDIR /srv\n\nCOPY --from=build-stage /srv /srv\n\nENV HOST 0.0.0.0\nEXPOSE 3000\n\n# Upgrade npm due to vulnerabilities on packaged version\nRUN npm install -g npm@8.10.0 && npm cache clean --force;\n\nENTRYPOINT [ \"docker-entrypoint.sh\" ]\n\nCMD [\"npm\", \"run\", \"prod\"]\n"
}