{
  "startTime": 1674218273816,
  "endTime": 1674218274750,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# rust:1.49-slim\nFROM rust@sha256:3c1012af9fa01b63f14c077fbdf6bf6ea16f85389dd8ccc80f9c13d65ed4bce1\nRUN apt-get update && apt-get install --no-install-recommends -y pkg-config make zip wget \\\n        libssl-dev gcc-mingw-w64-x86-64 gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu && \\\n    rustup target add x86_64-pc-windows-gnu armv7-unknown-linux-gnueabihf aarch64-unknown-linux-gnu && rm -rf /var/lib/apt/lists/*;\n    # macOS is built using a separate image, see builder-osx.Dockerfile\n\n# Install sccache\n# Mount-in /usr/local/sccache to enable\nARG SCCACHE_VERSION=0.2.14\nARG SCCACHE_HASH=071d7cce6e588a0b7239ed1a9e0baa1f3f0e293b1f0d37e17d9594526e7622f9\nENV SCCACHE_DIR=/usr/local/sccache\nRUN wget -q -O sccache.tar.gz https://github.com/mozilla/sccache/releases/download/$SCCACHE_VERSION/sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl.tar.gz \\\n    && echo \"$SCCACHE_HASH  sccache.tar.gz\" | sha256sum -c - \\\n    && tar xf sccache.tar.gz \\\n    && mv sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl/sccache /usr/local/bin/ \\\n    && rm -r sccache* && rm sccache.tar.gz\n\nWORKDIR /usr/src/bwt\nVOLUME /usr/src/bwt\nENV TARGETS=x86_64-linux,x86_64-windows,arm32v7-linux,arm64v8-linux\nENTRYPOINT [ \"/usr/src/bwt/scripts/build.sh\" ]\n"
}