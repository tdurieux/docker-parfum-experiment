diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/getkeops/keops/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/getkeops/keops/Dockerfile/repaired.Dockerfile
index faf946a..7744082 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/getkeops/keops/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/getkeops/keops/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax=docker/dockerfile:1
-
 # Build this file with e.g.
 #
 # docker build \
@@ -51,7 +49,7 @@ ARG PYTEST_VERSION=7.1.2
 ARG BLACK_VERSION=22.6.0
 
 
-# First step: 
+# First step:
 FROM ${BASE_IMAGE} AS dev-base
 RUN apt-get update && \
     apt-get install -y --no-install-recommends \
@@ -81,7 +79,7 @@ FROM dev-base AS r-env
 # N.B.: We install as many packages as possible from the Ubuntu repository
 #       to save on compilation times.
 RUN apt-get update && \
-    DEBIAN_FRONTEND=noninteractive apt-get install -y \
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
     r-base \
     r-base-dev \
     r-cran-survival \
@@ -92,7 +90,7 @@ RUN apt-get update && \
     r-cran-plyr \
     r-cran-matrix \
     r-cran-testthat && \
-    Rscript -e 'install.packages(c("WCE", "languageserver", "profvis", "tictoc"))'
+    Rscript -e 'install.packages(c("WCE", "languageserver", "profvis", "tictoc"))' && rm -rf /var/lib/apt/lists/*;
 # Encoding for R:
 ENV LC_ALL=C.UTF-8
 
@@ -114,17 +112,17 @@ RUN curl -fsSL -v -o ~/miniconda.sh -O  https://repo.anaconda.com/miniconda/Mini
 
 
 # Full CUDA installation, with the headers, from the official Nvidia repository:
-FROM conda AS cuda 
-ARG CUDA_CHANNEL 
+FROM conda AS cuda
+ARG CUDA_CHANNEL
 RUN /opt/conda/bin/conda install -y -c "${CUDA_CHANNEL}" cuda && \
     /opt/conda/bin/conda clean -ya
 
 
 # Full PyTorch installation:
-FROM cuda AS pytorch 
+FROM cuda AS pytorch
 ARG PYTHON_VERSION
 ARG CUDA_VERSION
-ARG PYTORCH_VERSION 
+ARG PYTORCH_VERSION
 ARG TORCHVISION_VERSION
 ARG TORCHAUDIO_VERSION
 ENV CONDA_OVERRIDE_CUDA=${CUDA_VERSION}
@@ -149,7 +147,7 @@ RUN /opt/conda/bin/pip install \
     pytest==${PYTEST_VERSION} \
     black==${BLACK_VERSION}
 
-# Work around a compatibility bug for KeOps, caused by the fact that conda 
+# Work around a compatibility bug for KeOps, caused by the fact that conda
 # currently ships a version of libstdc++ that is slightly older than
 # that of Ubuntu 22.04:
 RUN rm /opt/conda/lib/libstdc++.so.6 && \