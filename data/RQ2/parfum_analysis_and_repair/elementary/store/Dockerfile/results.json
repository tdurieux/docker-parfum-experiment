{
  "startTime": 1674215080031,
  "endTime": 1674215081358,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile\n# Building for production\n\nFROM elixir:1.13.3-alpine as build\n\nRUN mkdir -p /opt/app\n\nCOPY . /opt/app\nWORKDIR /opt/app\n\nENV MIX_ENV=prod\n\nRUN apk --no-cache --update add \\\n  g++ \\\n  gcc \\\n  git \\\n  libc-dev \\\n  make \\\n  nodejs \\\n  npm \\\n  python3\n\nRUN cd /opt/app && \\\n  mix local.hex --force && \\\n  mix local.rebar --force && \\\n  mix deps.get\n\nRUN npm install npm -g --no-progress && \\\n  cd /opt/app/assets && \\\n  npm ci && \\\n  NODE_ENV=production npm run build && npm cache clean --force;\n\nRUN mix phx.digest\nRUN mix release\n\n# Dockerfile\n# Runing in production\n\nFROM elixir:1.13.3-alpine as release\n\nRUN apk add --no-cache bash openssl\n\nRUN mkdir -p /opt/app\n\nCOPY --from=build /opt/app/_build/prod/rel/store /opt/app\n\nWORKDIR /opt/app\n\nEXPOSE 4000\n\nENTRYPOINT [\"/opt/app/bin/store\"]\nCMD [\"start\"]\n"
}