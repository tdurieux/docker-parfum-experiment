{
  "startTime": 1674253077604,
  "endTime": 1674253078767,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER Maxime Arthaud <maxime.arthaud@nasa.gov>\nARG njobs=2\nARG build_type=Release\n\n# Installs the following versions (note that it might be out of date):\n# cmake 3.10.2\n# gmp 6.1.2\n# boost 1.65.1\n# python 2.7.15\n# sqlite 3.22.0\n# tbb 9107\n# llvm 9.0.1\n# clang 9.0.1\n# gcc 7.4.0\n\n# Upgrade\nRUN apt-get update\nRUN apt-get upgrade -y\n\n# Add ppa for llvm 9.0\nRUN echo \"deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main\" >> /etc/apt/sources.list\n\n# Add llvm repository key\nRUN apt-get install --no-install-recommends -y wget gnupg && rm -rf /var/lib/apt/lists/*;\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\n\n# Refresh cache\nRUN apt-get update\n\n# Install all dependencies\nRUN apt-get install --no-install-recommends -y gcc g++ cmake libgmp-dev libboost-dev \\\n        libboost-filesystem-dev libboost-thread-dev libboost-test-dev python \\\n        python-pygments libsqlite3-dev libtbb-dev libz-dev libedit-dev \\\n        llvm-9 llvm-9-dev llvm-9-tools clang-9 && rm -rf /var/lib/apt/lists/*;\n\n# Add ikos source code\nADD . /root/ikos\n\n# Build ikos\nRUN rm -rf /root/ikos/build && mkdir /root/ikos/build\nWORKDIR /root/ikos/build\nENV MAKEFLAGS \"-j$njobs\"\nRUN cmake \\\n        -DCMAKE_INSTALL_PREFIX=\"/opt/ikos\" \\\n        -DCMAKE_BUILD_TYPE=\"$build_type\" \\\n        -DLLVM_CONFIG_EXECUTABLE=\"/usr/lib/llvm-9/bin/llvm-config\" \\\n        ..\nRUN make\nRUN make install\n\n# Run the tests\nRUN make check\n\n# Add ikos to the path\nENV PATH \"/opt/ikos/bin:$PATH\"\n\n# Done\nWORKDIR /\n"
}