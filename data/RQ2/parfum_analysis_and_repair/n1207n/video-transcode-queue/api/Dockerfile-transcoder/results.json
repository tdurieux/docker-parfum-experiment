{
  "startTime": 1674250164463,
  "endTime": 1674250166574,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 8,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 8,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 8,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 8,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 8,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 8,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 8,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 8,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 8,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 171,
        "lineEnd": 171,
        "columnStart": 8,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 172,
        "lineEnd": 172,
        "columnStart": 8,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 8,
        "columnEnd": 92
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 8,
        "columnEnd": 97
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 111,
        "lineEnd": 112,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 122,
        "lineEnd": 123,
        "columnStart": 8,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 8,
        "columnEnd": 165
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 8,
        "columnEnd": 113
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 8,
        "columnEnd": 111
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 8,
        "columnEnd": 73
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 175,
        "lineEnd": 203,
        "columnStart": 8,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 8,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 8,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 8,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 8,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 8,
        "columnEnd": 71
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 8,
        "columnEnd": 82
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 8,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.8.3-alpine\n\n# Building ffmpeg 3.3 alpine binaries\n# ---------------------------------\n# ffmpeg - http://ffmpeg.org/download.html\n#\n# https://hub.docker.com/r/jrottenberg/ffmpeg/\n#\n#\n# FROM        alpine:3.4\n# MAINTAINER  Julien Rottenberg <julien@rottenberg.info>\n\nWORKDIR     /tmp/workdir\n\nENV         FFMPEG_VERSION=3.3.1     \\\n            FDKAAC_VERSION=0.1.5      \\\n            LAME_VERSION=3.99.5       \\\n            OGG_VERSION=1.3.2         \\\n            OPENCOREAMR_VERSION=0.1.4 \\\n            OPUS_VERSION=1.1.4        \\\n            THEORA_VERSION=1.1.1      \\\n            VORBIS_VERSION=1.3.5      \\\n            VPX_VERSION=1.6.1         \\\n            X264_VERSION=20170226-2245-stable \\\n            X265_VERSION=2.3          \\\n            XVID_VERSION=1.3.4        \\\n            PKG_CONFIG_PATH=/usr/local/lib/pkgconfig \\\n            SRC=/usr/local\n\nARG         OGG_SHA256SUM=\"e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692  libogg-1.3.2.tar.gz\"\nARG         OPUS_SHA256SUM=\"9122b6b380081dd2665189f97bfd777f04f92dc3ab6698eea1dbb27ad59d8692  opus-1.1.4.tar.gz\"\nARG         VORBIS_SHA256SUM=\"6efbcecdd3e5dfbf090341b485da9d176eb250d893e3eb378c428a2db38301ce  libvorbis-1.3.5.tar.gz\"\nARG         THEORA_SHA256SUM=\"40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b  libtheora-1.1.1.tar.gz\"\nARG         XVID_SHA256SUM=\"4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz\"\nARG         FFMPEG_KEY=\"D67658D8\"\n\nRUN buildDeps=\"autoconf \\\n                   automake \\\n                   bash \\\n                   binutils \\\n                   bzip2 \\\n                   cmake \\\n                   curl \\\n                   coreutils \\\n                   g++ \\\n                   gcc \\\n                   gnupg \\\n                   libtool \\\n                   make \\\n                   python \\\n                   openssl-dev \\\n                   tar \\\n                   yasm \\\n                   zlib-dev\" && \\\n        export MAKEFLAGS=\"-j$(($(grep -c ^processor /proc/cpuinfo) + 1))\" && \\\n        apk add --no-cache --update ${buildDeps} libgcc libstdc++ ca-certificates\n\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sL https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-shared --datadir=${DIR} && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\nRUN \\\n\n       DIR=$(mktemp -d) && cd ${DIR} && \\\n       curl -f -sL https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \\\n       tar -jx --strip-components=1 && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --enable-pic --enable-shared --disable-cli && \\\n       make && \\\n       make install && \\\n       rm -rf ${DIR}\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | \\\n        tar -zx && \\\n        cd x265_${X265_VERSION}/build/linux && \\\n        ./multilib.sh && \\\n        make -C 8bit install && \\\n        rm -rf ${DIR}\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \\\n        echo ${OGG_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --datarootdir=${DIR} && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm libogg-${OGG_VERSION}.tar.gz\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/opus/opus-${OPUS_VERSION}.tar.gz && \\\n        echo ${OPUS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \\\n        autoreconf -fiv && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm opus-${OPUS_VERSION}.tar.gz\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \\\n        echo ${VORBIS_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n        --disable-static --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm libvorbis-${VORBIS_VERSION}.tar.gz\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \\\n        echo ${THEORA_SHA256SUM} | sha256sum --check && \\\n        tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --with-ogg=\"${SRC}\" --bindir=\"${SRC}/bin\" \\\n        --disable-static --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm libtheora-${THEORA_VERSION}.tar.gz\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sL https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --disable-static --enable-nasm --datarootdir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR}\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \\\n        echo ${XVID_SHA256SUM} | sha256sum --check && \\\n        tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \\\n        cd xvidcore/build/generic && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --bindir=\"${SRC}/bin\" --datadir=\"${DIR}\" --disable-static --enable-shared && \\\n        make && \\\n        make install && \\\n        rm -rf ${DIR} && rm xvidcore-${XVID_VERSION}.tar.gz\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        curl -f -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \\\n        tar -zx --strip-components=1 && \\\n        autoreconf -fiv && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"${SRC}\" --disable-static --datadir=\"${DIR}\" && \\\n        make && \\\n        make install && \\\n        make distclean && \\\n        rm -rf ${DIR}\nRUN \\\n\n        DIR=$(mktemp -d) && cd ${DIR} && \\\n        gpg --batch --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys ${FFMPEG_KEY} && \\\n        curl -f -sLO http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n        curl -f -sLO http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz.asc && \\\n        gpg --batch  --verify ffmpeg-${FFMPEG_VERSION}.tar.gz.asc ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n        tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --bindir=\"${SRC}/bin\" \\\n        --disable-debug \\\n        --disable-doc \\\n        --disable-ffplay \\\n        --disable-static \\\n        --enable-avresample \\\n        --enable-gpl \\\n        --enable-libopencore-amrnb \\\n        --enable-libopencore-amrwb \\\n        --enable-libfdk_aac \\\n        --enable-libmp3lame \\\n        --enable-libopus \\\n        --enable-libtheora \\\n        --enable-libvorbis \\\n        --enable-libvpx \\\n        --enable-libx264 \\\n        --enable-libx265 \\\n        --enable-libxvid \\\n        --enable-nonfree \\\n        --enable-openssl \\\n        --enable-postproc \\\n        --enable-shared \\\n        --enable-small \\\n        --enable-version3 \\\n        --extra-cflags=\"-I${SRC}/include\" \\\n        --extra-ldflags=\"-L${SRC}/lib\" \\\n        --extra-libs=-ldl \\\n        --prefix=\"${SRC}\" && \\\n        make && \\\n        make install && \\\n        make distclean && \\\n        hash -r && \\\n        cd tools && \\\n        make qt-faststart && \\\n        cp qt-faststart ${SRC}/bin && \\\n        rm -rf ${DIR} && rm ffmpeg-${FFMPEG_VERSION}.tar.gz\n\nRUN \\\n# cleanup\n        cd && \\\n        apk del ${buildDeps} && \\\n\t      rm -rf /var/cache/apk/* && \\\n        ffmpeg -buildconf\n\n# Let's make sure the app built correctly\n# Convenient to verify on https://hub.docker.com/r/jrottenberg/ffmpeg/builds/ console output\n# ---------------------------------\n\nENV GOBIN=/go/bin\n\nRUN apk add --no-cache git jpeg-dev zlib-dev libpng-dev\n\nRUN git clone https://github.com/gpac/gpac.git\nRUN gpac/configure --static-mp4box\nRUN make -j4\nRUN make install\nRUN cp /tmp/workdir/bin/gcc/MP4Box /bin/MP4Box\n\nRUN go get -u github.com/satori/go.uuid\nRUN go get -u github.com/gin-gonic/gin\nRUN go get -u github.com/nareix/joy4\nRUN go get -u github.com/nareix/bits\nRUN go get -u github.com/jinzhu/gorm\nRUN go get -u github.com/jinzhu/gorm/dialects/postgres\nRUN go get -u go.uber.org/zap\n\nRUN mkdir -p /home/dev/lib\n\nENV CGO_LDFLAGS=\"-L${SRC}/lib -lavcodec -lavformat -lavutil -lswscale -lswresample -lavdevice -lavfilter\"\nENV CGO_CFLAGS=\"-I${SRC}/include\"\nENV LD_LIBRARY_PATH=/home/dev/lib\n\nADD common /go/src/github.com/n1207n/video-transcode-queue/api/common\nADD transcode /go/src/github.com/n1207n/video-transcode-queue/api/transcode\n\nWORKDIR /go/src/github.com/n1207n/video-transcode-queue/api/transcode\n\nRUN go build\nRUN go install\n\nENTRYPOINT /go/bin/transcode\n\nEXPOSE 8800\n"
}