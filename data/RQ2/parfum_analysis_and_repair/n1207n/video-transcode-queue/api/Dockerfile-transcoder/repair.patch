diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/n1207n/video-transcode-queue/api/Dockerfile-transcoder b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/n1207n/video-transcode-queue/api/Dockerfile-transcoder/repaired.Dockerfile
index c466e60..be8e2ed 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/n1207n/video-transcode-queue/api/Dockerfile-transcoder
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/n1207n/video-transcode-queue/api/Dockerfile-transcoder/repaired.Dockerfile
@@ -34,7 +34,7 @@ ARG         THEORA_SHA256SUM="40952956c47811928d1e7922cda3bc1f427eb75680c3c37249
 ARG         XVID_SHA256SUM="4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f  xvidcore-1.3.4.tar.gz"
 ARG         FFMPEG_KEY="D67658D8"
 
-RUN     buildDeps="autoconf \
+RUN buildDeps="autoconf \
                    automake \
                    bash \
                    binutils \
@@ -53,127 +53,127 @@ RUN     buildDeps="autoconf \
                    yasm \
                    zlib-dev" && \
         export MAKEFLAGS="-j$(($(grep -c ^processor /proc/cpuinfo) + 1))" && \
-        apk  add --update ${buildDeps} libgcc libstdc++ ca-certificates
+        apk add --no-cache --update ${buildDeps} libgcc libstdc++ ca-certificates
 
 RUN \
-## opencore-amr https://sourceforge.net/projects/opencore-amr/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sL https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \
+        curl -f -sL https://downloads.sf.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --enable-shared --datadir=${DIR} && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --bindir="${SRC}/bin" --enable-shared --datadir=${DIR} && \
         make && \
         make install && \
         rm -rf ${DIR}
 RUN \
-## x264 http://www.videolan.org/developers/x264.html
+
        DIR=$(mktemp -d) && cd ${DIR} && \
-       curl -sL https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \
+       curl -f -sL https://ftp.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \
        tar -jx --strip-components=1 && \
-       ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --enable-pic --enable-shared --disable-cli && \
+       ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --bindir="${SRC}/bin" --enable-pic --enable-shared --disable-cli && \
        make && \
        make install && \
        rm -rf ${DIR}
 RUN \
-## x265 http://x265.org/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  | \
+        curl -f -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz | \
         tar -zx && \
         cd x265_${X265_VERSION}/build/linux && \
         ./multilib.sh && \
         make -C 8bit install && \
         rm -rf ${DIR}
 RUN \
-## libogg https://www.xiph.org/ogg/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \
         echo ${OGG_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \
-        ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --disable-static --datarootdir=${DIR} && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --bindir="${SRC}/bin" --disable-static --datarootdir=${DIR} && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libogg-${OGG_VERSION}.tar.gz
 RUN \
-## libopus https://www.opus-codec.org/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/opus/opus-${OPUS_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/opus/opus-${OPUS_VERSION}.tar.gz && \
         echo ${OPUS_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \
         autoreconf -fiv && \
-        ./configure --prefix="${SRC}" --disable-static --datadir="${DIR}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --disable-static --datadir="${DIR}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm opus-${OPUS_VERSION}.tar.gz
 RUN \
-## libvorbis https://xiph.org/vorbis/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \
         echo ${VORBIS_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \
-        ./configure --prefix="${SRC}" --with-ogg="${SRC}" --bindir="${SRC}/bin" \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --with-ogg="${SRC}" --bindir="${SRC}/bin" \
         --disable-static --datadir="${DIR}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libvorbis-${VORBIS_VERSION}.tar.gz
 RUN \
-## libtheora http://www.theora.org/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \
         echo ${THEORA_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \
-        ./configure --prefix="${SRC}" --with-ogg="${SRC}" --bindir="${SRC}/bin" \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --with-ogg="${SRC}" --bindir="${SRC}/bin" \
         --disable-static --datadir="${DIR}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libtheora-${THEORA_VERSION}.tar.gz
 RUN \
-## libvpx https://www.webmproject.org/code/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
+        curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${SRC}" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --enable-vp8 --enable-vp9 --enable-pic --disable-debug --disable-examples --disable-docs --disable-install-bins --enable-shared && \
         make && \
         make install && \
         rm -rf ${DIR}
 RUN \
-## libmp3lame http://lame.sourceforge.net/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sL https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz | \
+        curl -f -sL https://downloads.sf.net/project/lame/lame/${LAME_VERSION%.*}/lame-${LAME_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --disable-static --enable-nasm --datarootdir="${DIR}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --bindir="${SRC}/bin" --disable-static --enable-nasm --datarootdir="${DIR}" && \
         make && \
         make install && \
         rm -rf ${DIR}
 RUN \
-## xvid https://www.xvid.com/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \
         echo ${XVID_SHA256SUM} | sha256sum --check && \
         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \
         cd xvidcore/build/generic && \
-        ./configure --prefix="${SRC}" --bindir="${SRC}/bin" --datadir="${DIR}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --bindir="${SRC}/bin" --datadir="${DIR}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm xvidcore-${XVID_VERSION}.tar.gz
 RUN \
-## fdk-aac https://github.com/mstorsjo/fdk-aac
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \
+        curl -f -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
         autoreconf -fiv && \
-        ./configure --prefix="${SRC}" --disable-static --datadir="${DIR}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${SRC}" --disable-static --datadir="${DIR}" && \
         make && \
         make install && \
         make distclean && \
         rm -rf ${DIR}
 RUN \
-## ffmpeg https://ffmpeg.org/
+
         DIR=$(mktemp -d) && cd ${DIR} && \
-        gpg --keyserver hkp://pool.sks-keyservers.net:80 --recv-keys ${FFMPEG_KEY} && \
-        curl -sLO http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \
-        curl -sLO http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz.asc && \
+        gpg --batch --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-keys ${FFMPEG_KEY} && \
+        curl -f -sLO http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz && \
+        curl -f -sLO http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz.asc && \
         gpg --batch  --verify ffmpeg-${FFMPEG_VERSION}.tar.gz.asc ffmpeg-${FFMPEG_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.gz && \
-        ./configure \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --bindir="${SRC}/bin" \
         --disable-debug \
         --disable-doc \
@@ -209,7 +209,7 @@ RUN \
         cd tools && \
         make qt-faststart && \
         cp qt-faststart ${SRC}/bin && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm ffmpeg-${FFMPEG_VERSION}.tar.gz
 
 RUN \
 # cleanup