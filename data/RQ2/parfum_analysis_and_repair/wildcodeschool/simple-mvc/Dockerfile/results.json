{
  "startTime": 1674255825277,
  "endTime": 1674255825953,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Stage 1 - Prep App's PHP Dependencies\n#\nFROM composer:latest as vendor\n\nWORKDIR /app\n\nCOPY composer.json composer.json\nCOPY composer.lock composer.lock\n\nRUN composer install \\\n    --ignore-platform-reqs \\\n    --no-interaction \\\n    --no-plugins \\\n    --no-scripts \\\n    --prefer-dist \\\n    --quiet\n\n\n# end Stage 1 #\n\n\nFROM php:8.0-fpm-alpine as phpserver\n\n# add cli tools\nRUN apk update \\\n    && apk upgrade \\\n    && apk add --no-cache nginx\n\n# silently install 'docker-php-ext-install' extensions\nRUN set -x\n\nRUN docker-php-ext-install pdo_mysql bcmath > /dev/null\n\nCOPY nginx.conf /etc/nginx/nginx.conf\n\nWORKDIR /var/www\n\nCOPY . /var/www/\nCOPY --from=vendor /app/vendor/ /var/www/vendor\n\nRUN mkdir -p /var/www/public/uploads/\n\n# RUN chown -R www-data:www-data /var/www/\n\nRUN adduser nginx www-data \\\n    && chgrp -R www-data /var/www/public/uploads/ \\\n    && chmod -R 775 /var/www/public/uploads/\n\n\nEXPOSE 80\n\nCOPY docker-entry.sh /etc/entrypoint.sh\nENTRYPOINT [\"sh\", \"/etc/entrypoint.sh\"]\n"
}