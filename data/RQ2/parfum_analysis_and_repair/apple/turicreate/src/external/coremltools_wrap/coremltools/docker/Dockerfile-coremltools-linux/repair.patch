diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apple/turicreate/src/external/coremltools_wrap/coremltools/docker/Dockerfile-coremltools-linux b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apple/turicreate/src/external/coremltools_wrap/coremltools/docker/Dockerfile-coremltools-linux/repaired.Dockerfile
index 7f8e88e..ad693f7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apple/turicreate/src/external/coremltools_wrap/coremltools/docker/Dockerfile-coremltools-linux
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apple/turicreate/src/external/coremltools_wrap/coremltools/docker/Dockerfile-coremltools-linux/repaired.Dockerfile
@@ -2,14 +2,14 @@
 FROM ubuntu:20.04
 
 # Install dependencies, particularly libraries that python or CMake need
-RUN  apt-get -y update \
-     && apt-get -y install build-essential libstdc++6 \
+RUN apt-get -y update \
+     && apt-get -y --no-install-recommends install build-essential libstdc++6 \
         python-setuptools curl git libssl-dev \
         make vim-common zlib1g-dev libffi-dev \
         libbz2-dev libopenblas-dev liblapack-dev \
-        zsh
-RUN curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
-RUN apt-get -y install git-lfs
+        zsh && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
+RUN apt-get -y --no-install-recommends install git-lfs && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /
 RUN  mkdir src
@@ -18,13 +18,13 @@ ENV LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64:
 
 # Install CMake
 WORKDIR /opt
-RUN  curl -L https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.tar.gz -o cmake-3.13.4-Linux-x86_64.tar.gz \
-     && tar xf cmake-3.13.4-Linux-x86_64.tar.gz
+RUN curl -f -L https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4-Linux-x86_64.tar.gz -o cmake-3.13.4-Linux-x86_64.tar.gz \
+     && tar xf cmake-3.13.4-Linux-x86_64.tar.gz && rm cmake-3.13.4-Linux-x86_64.tar.gz
 ENV PATH=/opt/cmake-3.13.4-Linux-x86_64/bin:/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
 
 # Install Anaconda and initialize it for use in ZSH
 WORKDIR /opt
-RUN curl https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh -o anaconda.sh
+RUN curl -f https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh -o anaconda.sh
 RUN zsh anaconda.sh -b -p /opt/anaconda && eval "$(/opt/anaconda/bin/conda shell.zsh hook)" && conda init zsh
 
 # Give Cmake hints about compilers to use.