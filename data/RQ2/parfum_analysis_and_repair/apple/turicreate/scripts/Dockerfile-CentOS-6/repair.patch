diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apple/turicreate/scripts/Dockerfile-CentOS-6 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apple/turicreate/scripts/Dockerfile-CentOS-6/repaired.Dockerfile
index 73cfdc3..971946a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apple/turicreate/scripts/Dockerfile-CentOS-6
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apple/turicreate/scripts/Dockerfile-CentOS-6/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# vim: set ft=dockerfile:
-
 # This image is intended for building Turi Create for maximum compatibility
 # with various Linux distributions.
 # Based on CentOS 6 for compatibility with older glibc versions.
@@ -32,14 +30,14 @@ RUN yum -y update && \
                rsync \
                git \
                file \
-               xz
+               xz && rm -rf /var/cache/yum
 
-RUN yum install -y wget tar make flex gcc gcc-c++ gcc-devel.s390 binutils-devel bzip2
+RUN yum install -y wget tar make flex gcc gcc-c++ gcc-devel.s390 binutils-devel bzip2 && rm -rf /var/cache/yum
 ENV PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
 RUN mkdir /src
 WORKDIR /src
 RUN wget ftp://gcc.gnu.org/pub/gcc/releases/gcc-4.8.5/gcc-4.8.5.tar.gz
-RUN tar xzf gcc-4.8.5.tar.gz
+RUN tar xzf gcc-4.8.5.tar.gz && rm gcc-4.8.5.tar.gz
 WORKDIR gcc-4.8.5
 RUN ./contrib/download_prerequisites
 WORKDIR ..
@@ -53,8 +51,8 @@ RUN make install
 # The built-in SSL is so old it can't talk to anything on the internet anymore
 # (so even get-pip.py doesn't work!)
 WORKDIR /src
-RUN curl -O https://www.openssl.org/source/openssl-1.1.0j.tar.gz
-RUN tar xf openssl-1.1.0j.tar.gz
+RUN curl -f -O https://www.openssl.org/source/openssl-1.1.0j.tar.gz
+RUN tar xf openssl-1.1.0j.tar.gz && rm openssl-1.1.0j.tar.gz
 RUN mkdir -p /etc/ssl/certs/
 WORKDIR /src/openssl-1.1.0j
 RUN ./config --prefix=/usr/local --openssldir=/usr/local && \
@@ -72,7 +70,7 @@ RUN ./config --prefix=/usr/local --openssldir=/usr/local && \
 # Install cmake from binary release
 RUN mkdir -p /opt
 WORKDIR /opt
-RUN curl -O https://cmake.org/files/v3.13/cmake-3.13.4-Linux-x86_64.tar.gz
+RUN curl -f -O https://cmake.org/files/v3.13/cmake-3.13.4-Linux-x86_64.tar.gz
 RUN tar xf cmake-3.13.4-Linux-x86_64.tar.gz && \
     rm -rf /opt/cmake-3.13.4-Linux-x86_64.tar.gz
 ENV PATH="/opt/cmake-3.13.4-Linux-x86_64/bin:${PATH}"
@@ -80,10 +78,10 @@ ENV PATH="/opt/cmake-3.13.4-Linux-x86_64/bin:${PATH}"
 # Install libffi from source
 RUN mkdir -p /src
 WORKDIR /src
-RUN curl -O ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz
-RUN tar xf libffi-3.2.1.tar.gz
+RUN curl -f -O ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz
+RUN tar xf libffi-3.2.1.tar.gz && rm libffi-3.2.1.tar.gz
 WORKDIR /src/libffi-3.2.1
-RUN ./configure --prefix=/usr/local && \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local && \
     make -j4 --quiet && \
     make install && \
     ldconfig && \
@@ -91,10 +89,10 @@ RUN ./configure --prefix=/usr/local && \
 
 # Install Python 2.7 from source
 WORKDIR /src
-RUN curl -O https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tgz
-RUN tar xf Python-2.7.15.tgz
+RUN curl -f -O https://www.python.org/ftp/python/2.7.15/Python-2.7.15.tgz
+RUN tar xf Python-2.7.15.tgz && rm Python-2.7.15.tgz
 WORKDIR /src/Python-2.7.15
-RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
     make -j4 --quiet && \
     make install && \
     ldconfig && \
@@ -102,10 +100,10 @@ RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enab
 
 # Install Python 3.5 from source
 WORKDIR /src
-RUN curl -O https://www.python.org/ftp/python/3.5.6/Python-3.5.6.tgz
-RUN tar xf Python-3.5.6.tgz
+RUN curl -f -O https://www.python.org/ftp/python/3.5.6/Python-3.5.6.tgz
+RUN tar xf Python-3.5.6.tgz && rm Python-3.5.6.tgz
 WORKDIR /src/Python-3.5.6
-RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
     make -j4 --quiet && \
     make install && \
     ldconfig && \
@@ -113,10 +111,10 @@ RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enab
 
 # Install Python 3.6 from source
 WORKDIR /src
-RUN curl -O https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz
-RUN tar xf Python-3.6.8.tgz
+RUN curl -f -O https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz
+RUN tar xf Python-3.6.8.tgz && rm Python-3.6.8.tgz
 WORKDIR /src/Python-3.6.8
-RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
     make -j4 --quiet && \
     make install && \
     ldconfig && \
@@ -124,10 +122,10 @@ RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enab
 
 # Install Python 3.7 from source
 WORKDIR /src
-RUN curl -O https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz
-RUN tar xf Python-3.7.3.tgz
+RUN curl -f -O https://www.python.org/ftp/python/3.7.3/Python-3.7.3.tgz
+RUN tar xf Python-3.7.3.tgz && rm Python-3.7.3.tgz
 WORKDIR /src/Python-3.7.3
-RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
     make -j4 --quiet && \
     make install && \
     ldconfig && \
@@ -135,10 +133,10 @@ RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enab
 
 # Install Python 3.8 from source
 WORKDIR /src
-RUN curl -O https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz
-RUN tar xf Python-3.8.5.tgz
+RUN curl -f -O https://www.python.org/ftp/python/3.8.5/Python-3.8.5.tgz
+RUN tar xf Python-3.8.5.tgz && rm Python-3.8.5.tgz
 WORKDIR /src/Python-3.8.5
-RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
     make -j4 --quiet && \
     make install && \
     ldconfig && \
@@ -146,10 +144,10 @@ RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enab
 
 # Install Python 3.9 from source
 WORKDIR /src
-RUN curl -O https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz
-RUN tar xf Python-3.9.6.tgz
+RUN curl -f -O https://www.python.org/ftp/python/3.9.6/Python-3.9.6.tgz
+RUN tar xf Python-3.9.6.tgz && rm Python-3.9.6.tgz
 WORKDIR /src/Python-3.9.6
-RUN ./configure --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-unicode=ucs4 --enable-shared --enable-loadable-sqlite-extensions && \
     make -j4 --quiet && \
     make install && \
     ldconfig && \
@@ -160,12 +158,12 @@ ENV CXX="/usr/local/bin/g++"
 
 # Install pip and virtualenv
 WORKDIR /src
-RUN curl -O https://bootstrap.pypa.io/pip/2.7/get-pip.py
+RUN curl -f -O https://bootstrap.pypa.io/pip/2.7/get-pip.py
 RUN python2.7 get-pip.py
 RUN pip2.7 install virtualenv
 RUN python3.5 get-pip.py
 RUN pip3.5 install virtualenv
-RUN curl -O https://bootstrap.pypa.io/get-pip.py
+RUN curl -f -O https://bootstrap.pypa.io/get-pip.py
 RUN python3.6 get-pip.py
 RUN pip3.6 install virtualenv
 RUN python3.7 get-pip.py
@@ -178,12 +176,12 @@ RUN rm -rf /src/get-pip.py
 
 ENV LD="/usr/local/lib64"
 
-# So this is where the real magic happens. Clang has a flag to specify the 
+# So this is where the real magic happens. Clang has a flag to specify the
 # version of libstdc++ `--gcc-toolchain`. In turicreate we don't necessarily
 # have a flag to take care of this so we can re-create the expected directory
 # structure using the script below. This is effectively creating the structure
 # you'd expect when calling yum install gcc-4.*
-# 
+#
 # Using `clang -v` you can see the version of gcc that clang picks up
 # automatically from `/usr`. If all goes well, this should be the `libstdc++`
 # from gcc-4.8.5 and turicreate can build.
@@ -198,12 +196,12 @@ RUN cp -a /usr/local/lib64/* /usr/lib/gcc/x86_64-redhat-linux/4.8.5/
 
 # Install llvm 8.0.0 from source with clang (no libc++)
 WORKDIR /src
-RUN curl -O https://releases.llvm.org/8.0.0/llvm-8.0.0.src.tar.xz
-RUN curl -O https://releases.llvm.org/8.0.0/cfe-8.0.0.src.tar.xz
+RUN curl -f -O https://releases.llvm.org/8.0.0/llvm-8.0.0.src.tar.xz
+RUN curl -f -O https://releases.llvm.org/8.0.0/cfe-8.0.0.src.tar.xz
 RUN tar xf llvm-8.0.0.src.tar.xz && \
     tar xf cfe-8.0.0.src.tar.xz && \
     mv cfe-8.0.0.src llvm-8.0.0.src/tools/clang && \
-    mkdir llvm-8.0.0.build
+    mkdir llvm-8.0.0.build && rm llvm-8.0.0.src.tar.xz
 WORKDIR /src/llvm-8.0.0.build
 RUN cmake ../llvm-8.0.0.src/ -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=ON && \
     make -j24 || make -j4 && \