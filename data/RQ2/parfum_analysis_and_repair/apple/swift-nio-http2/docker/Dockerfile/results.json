{
  "startTime": 1674250281297,
  "endTime": 1674250282564,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 30,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG swift_version=5.4\nARG ubuntu_version=focal\nARG base_image=swift:$swift_version-$ubuntu_version\nFROM $base_image\n# needed to do again after FROM due to docker limitation\nARG swift_version\nARG ubuntu_version\n\n# set as UTF-8\nRUN apt-get update && apt-get install --no-install-recommends -y locales locales-all && rm -rf /var/lib/apt/lists/*;\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y lsof dnsutils netcat-openbsd net-tools curl jq && rm -rf /var/lib/apt/lists/*;\n\n# ruby and jazzy for docs generation\nRUN apt-get update && apt-get install --no-install-recommends -y ruby ruby-dev libsqlite3-dev build-essential && rm -rf /var/lib/apt/lists/*;\n# jazzy no longer works on xenial as ruby is too old.\nRUN if [ \"${ubuntu_version}\" = \"focal\" ] ; then echo \"gem: --no-document\" > ~/.gemrc ; fi\nRUN if [ \"${ubuntu_version}\" = \"focal\" ] ; then gem install jazzy ; fi\n\n# tools\nRUN mkdir -p $HOME/.tools\nRUN echo 'export PATH=\"$HOME/.tools:$PATH\"' >> $HOME/.profile\n\n# script to allow mapping framepointers on linux (until part of the toolchain)\nRUN wget -q https://raw.githubusercontent.com/apple/swift/main/utils/symbolicate-linux-fatal -O $HOME/.tools/symbolicate-linux-fatal\nRUN chmod 755 $HOME/.tools/symbolicate-linux-fatal\n\n# swiftformat (until part of the toolchain)\n\nARG swiftformat_version=0.40.12\nRUN git clone --branch $swiftformat_version --depth 1 https://github.com/nicklockwood/SwiftFormat $HOME/.tools/swift-format\nRUN cd $HOME/.tools/swift-format && swift build -c release\nRUN ln -s $HOME/.tools/swift-format/.build/release/swiftformat $HOME/.tools/swiftformat\n\n# h2spec\nARG h2spec_version\nRUN [ -z $h2spec_version ] || wget -q https://github.com/summerwind/h2spec/releases/download/v$h2spec_version/h2spec_linux_amd64.tar.gz -O $HOME/.tools/h2spec.tar.gz\nRUN [ -z $h2spec_version ] || tar xzf $HOME/.tools/h2spec.tar.gz --directory $HOME/.tools && rm $HOME/.tools/h2spec.tar.gz\n"
}