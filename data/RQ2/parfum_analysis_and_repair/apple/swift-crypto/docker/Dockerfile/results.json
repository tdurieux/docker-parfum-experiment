{
  "startTime": 1674246127912,
  "endTime": 1674246129052,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG swift_version=5.0\nARG ubuntu_version=bionic\nARG base_image=swift:$swift_version-$ubuntu_version\nFROM $base_image\n# needed to do again after FROM due to docker limitation\nARG swift_version\nARG ubuntu_version\n\n# set as UTF-8\nRUN apt-get update && apt-get install --no-install-recommends -y locales locales-all && rm -rf /var/lib/apt/lists/*;\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Get lldb out of the way\nRUN if [ -d /usr/lib/python2.7/site-packages ]; then mv /usr/lib/python2.7/site-packages/* /usr/lib/python2.7/dist-packages && rmdir /usr/lib/python2.7/site-packages && ln -s /usr/lib/python2.7/dist-packages /usr/lib/python2.7/site-packages; fi\n\n# dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y lsof dnsutils netcat-openbsd net-tools curl jq python2.7 && rm -rf /var/lib/apt/lists/*;\n\n# ruby and jazzy for docs generation\nRUN apt-get update && apt-get install --no-install-recommends -y ruby ruby-dev libsqlite3-dev build-essential && rm -rf /var/lib/apt/lists/*;\n# jazzy no longer works on xenial as ruby is too old.\nRUN if [ \"${ubuntu_version}\" = \"focal\" ] ; then echo \"gem: --no-document\" > ~/.gemrc; fi\nRUN if [ \"${ubuntu_version}\" = \"focal\" ] ; then gem install jazzy; fi\n\n# cmake build\nRUN apt-get update && apt-get install --no-install-recommends -y cmake ninja-build && rm -rf /var/lib/apt/lists/*;\n\n# tools\nRUN mkdir -p $HOME/.tools\nRUN echo 'export PATH=\"$HOME/.tools:$PATH\"' >> $HOME/.profile\n\n# script to allow mapping framepointers on linux (until part of the toolchain)\nRUN wget -q https://raw.githubusercontent.com/apple/swift/main/utils/symbolicate-linux-fatal -O $HOME/.tools/symbolicate-linux-fatal\nRUN chmod 755 $HOME/.tools/symbolicate-linux-fatal\n\n# swiftformat (until part of the toolchain)\n\nARG swiftformat_version=0.44.6\nRUN git clone --branch $swiftformat_version --depth 1 https://github.com/nicklockwood/SwiftFormat $HOME/.tools/swift-format\nRUN cd $HOME/.tools/swift-format && swift build -c release\nRUN ln -s $HOME/.tools/swift-format/.build/release/swiftformat $HOME/.tools/swiftformat\n"
}