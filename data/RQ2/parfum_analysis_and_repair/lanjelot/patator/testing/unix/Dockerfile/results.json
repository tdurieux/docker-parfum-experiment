{
  "startTime": 1674251341024,
  "endTime": 1674251342330,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 23,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 23,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 23,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 23,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 90,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 110
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 23,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 23,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 23,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 23,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 22,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 90,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 22,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 22,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nMAINTAINER Sebastien Macke <lanjelot@gmail.com>\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN { for i in {3..5}; do useradd -m -s /bin/bash user$i; echo -e \"Password$i\\nPassword$i\" | passwd user$i; done; } \\\n && useradd -m user9 && echo -e 'p\\x1fssw\\x09rd\\np\\x1fssw\\x09rd' | passwd user9\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y vsftpd openssh-server telnetd rsh-redone-server fingerd apache2 socat && rm -rf /var/lib/apt/lists/*;\n\nRUN { echo \"postfix postfix/mailname string ubuntu-bionic\"; \\\n      echo \"postfix postfix/main_mailer_type string 'Internet Site'\"; \\\n    } | debconf-set-selections \\\n  && apt-get update && apt-get install --no-install-recommends -y postfix mail-stack-delivery \\\n  && postconf -e 'smtpd_sasl_exceptions_networks=' && rm -rf /var/lib/apt/lists/*;\n\nRUN echo 'ServerName localhost' >> /etc/apache2/apache2.conf \\\n  && mkdir /var/www/html/{wp,pma,bak} && echo secret > /var/www/html/key\n\nRUN LDAPPW=Password1; \\\n  { \\\n    echo slapd slapd/internal/generated_adminpw password $LDAPPW; \\\n    echo slapd slapd/password2 password $LDAPPW; \\\n    echo slapd slapd/internal/adminpw password $LDAPPW; \\\n    echo slapd slapd/password1 password $LDAPPW; \\\n    echo slapd slapd/domain string example.com; \\\n    echo slapd shared/organization string example.com;  \\\n  } | debconf-set-selections \\\n  && apt-get update && apt-get install --no-install-recommends -y slapd ldap-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN MYSRP=Password1; \\\n  { echo \"mysql-server mysql-server/root_password password $MYSRP\"; \\\n    echo \"mysql-server mysql-server/root_password_again password $MYSRP\"; \\\n  } | debconf-set-selections \\\n  && apt-get update && apt-get install --no-install-recommends -y mysql-server \\\n  && sed -i \"s/bind-address.*/bind-address = 0.0.0.0/\" /etc/mysql/mysql.conf.d/mysqld.cnf \\\n  && echo secure_file_priv= >> /etc/mysql/mysql.conf.d/mysqld.cnf \\\n  && Q1=\"GRANT ALL ON *.* TO 'root'@'%' IDENTIFIED BY '$MYSRP' WITH GRANT OPTION;\" \\\n  && Q2=\"FLUSH PRIVILEGES;\" \\\n  && SQL=\"${Q1}${Q2}\" \\\n  && rm -f /etc/apparmor.d/usr.sbin.mysqld \\\n  && service mysql start \\\n  && mysql -uroot -p\"$MYSRP\" -e \"$SQL\" && rm -rf /var/lib/apt/lists/*;\n\nRUN PGPW=Password1 \\\n  && apt-get update && apt-get install --no-install-recommends -y postgresql \\\n  && sed -ie 's,127.0.0.1/32,0.0.0.0/0,' /etc/postgresql/10/main/pg_hba.conf \\\n  && sed -ie \"s,^#listen_addresses = 'localhost',listen_addresses = '*',\" /etc/postgresql/10/main/postgresql.conf \\\n  && service postgresql start \\\n  && su - postgres -c \"psql -c \\\"ALTER USER postgres WITH PASSWORD '$PGPW';\\\" -c '\\\\q'\" \\\n  && su - postgres -c \"PGPASSWORD='$PGPW' psql -d postgres -w --no-password -h localhost -p 5432 -t -c 'SELECT version()'\" && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y tomcat9 tomcat9-admin \\\n  && TOMCATPW=Password1 \\\n  && echo '<?xml version=\"1.0\" encoding=\"UTF-8\"?><tomcat-users xmlns=\"http://tomcat.apache.org/xml\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://tomcat.apache.org/xml tomcat-users.xsd\" version=\"1.0\"><user username=\"tomcat\" password=\"Password1\" roles=\"manager-gui\"/></tomcat-users>' > /etc/tomcat9/tomcat-users.xml \\\n  && sed -ie 's,^.*Define an AJP .* Connector on port.*$,<Connector port=\"8009\" protocol=\"AJP/1.3\" redirectPort=\"8443\" />,' /etc/tomcat9/server.xml \\\n  && sed -ie 's,catalina.realm.LockOutRealm\",catalina.realm.LockOutRealm\" lockOutTime=\"0\",' /etc/tomcat9/server.xml \\\n  && echo -e \"#!/bin/bash\\n\\\nexport CATALINA_HOME=/usr/share/tomcat9\\n\\\nexport CATALINA_BASE=/var/lib/tomcat9\\n\\\nexport CATALINA_TMPDIR=/tmp\\n\\\nexport SECURITY_MANAGER=true\\n\\\nexport JAVA_OPTS=-Djava.awt.headless=true\\n\\\n/usr/libexec/tomcat9/tomcat-update-policy.sh\\n\\\n/usr/libexec/tomcat9/tomcat-start.sh &\\n\" > /usr/local/sbin/start-tomcat.sh && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y dovecot-imapd dovecot-pop3d poppassd \\\n  && sed -ie 's,^#login_trusted_networks = *$,login_trusted_networks = 0.0.0.0/0,' /etc/dovecot/dovecot.conf && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y p7zip-full \\\n && 7za a -pPassword1 /root/enc.zip /etc/passwd && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y openjdk-11-jre-headless \\\n && keytool -genkey -alias test -storepass Password1 -keypass Password1 -keystore /root/keystore.jks -dname \"CN=a,OU=b,O=c,L=d,ST=e,C=f\" && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y sqlcipher \\\n  && sqlcipher /root/enc.db \"PRAGMA key = 'Password1';create table a(id int);\" && rm -rf /var/lib/apt/lists/*;\n\nRUN echo -e 'user1:kW+7AlKMnSZQIRluNxwJOMiohAw=\\nuser2:oBk37hmkFgZdZ247+g6c0Ay6Vw8=\\nuser3:kW+7AlKMnSZQIRluNxwJOMiohAw=' > /root/umbraco_users.pw\n\nRUN apt-get update && apt-get install --no-install-recommends -y tightvncserver \\\n  && useradd -m vncuser && mkdir ~vncuser/.vnc && echo Password | vncpasswd -f > ~vncuser/.vnc/passwd \\\n  && chmod 400 ~vncuser/.vnc/passwd && chown -R vncuser:vncuser ~vncuser/.vnc && rm -rf /var/lib/apt/lists/*;\n\n# utils\nRUN sed -i 's:^path-exclude=/usr/share/man:#path-exclude=/usr/share/man:' /etc/dpkg/dpkg.cfg.d/excludes \\\n  && apt-get update && apt-get install --no-install-recommends -y man manpages-posix iproute2 mlocate lsof sudo vim less \\\ntelnet finger rsh-client smbclient \\\n  && echo 'set bg=dark' > /root/.vimrc \\\n  && usermod -aG sudo user3 && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y samba \\\n  && { for i in {3..5}; do echo -e \"Password$i\\nPassword$i\" | smbpasswd -a \"user$i\"; done; } \\\n  && sed -ie 's,map to guest =,#map to guest =,' /etc/samba/smb.conf && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y snmpd snmp \\\n  && sed -ie 's,agentAddress  udp:127.0.0.1:161,agentAddress  udp:161,' /etc/snmp/snmpd.conf \\\n  && echo 'createUser user3 SHA authPass AES privPass' >> /var/lib/snmp/snmpd.conf \\\n  && echo 'rouser user3 priv .1' >> /etc/snmp/snmpd.conf && rm -rf /var/lib/apt/lists/*;\n\nRUN echo -e \"echo Starting services\\n\\\nservice vsftpd start\\n\\\nservice ssh start\\n\\\n/usr/sbin/inetd\\n\\\nservice postfix start\\n\\\nservice dovecot start\\n\\\nservice apache2 start\\n\\\nservice slapd start\\n\\\nservice mysql start\\n\\\nservice postgresql start\\n\\\nbash /usr/local/sbin/start-tomcat.sh\\n\\\nsocat tcp-l:106,fork,reuseaddr exec:/usr/sbin/poppassd &\\n\\\nsocat tcp-l:4444,fork,reuseaddr exec:\\\"echo -e 'W\\xe1\\xc0me'\\\" &\\n\\\ncp -v /root/enc.zip /root/keystore.jks /root/enc.db /root/umbraco_users.pw /opt/patator/\\n\\\nsu - vncuser -c 'vncserver -rfbport 5900'\\n\\\nservice smbd start\\n\\\nservice snmpd start\\n\\\ntail -f /dev/null\\n\" > /usr/local/sbin/start-all-services.sh\n\nCMD [\"bash\", \"/usr/local/sbin/start-all-services.sh\"]\n"
}