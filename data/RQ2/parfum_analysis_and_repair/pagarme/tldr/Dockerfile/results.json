{
  "startTime": 1674220066386,
  "endTime": 1674220068161,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 47,
        "columnEnd": 74
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 80,
        "columnEnd": 94
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 67,
        "columnEnd": 84
      }
    }
  ],
  "repairedDockerfile": "# Install npm dependencies\nFROM pagarme/docker-nodejs:8.9\n\nARG NODE_ENV\nARG DOT_ENV\n\nCOPY ${DOT_ENV} /tldr/${DOT_ENV}\nCOPY newrelic.js /tldr\nCOPY package.json /tldr\nCOPY scripts/start_server.sh /tldr\nCOPY scripts/start_worker.sh /tldr\nCOPY yarn.lock /tldr\nCOPY src /tldr\nCOPY views /tldr/views\n\nWORKDIR /tldr\n\nRUN apk --update add --no-cache python make g++\nRUN if [ \"x$NODE_ENV\" == \"xproduction\" ]; then \\\n yarn install --production ; yarn cache clean; else yarn install ; yarn cache clean; fi\n\n# Build the application\nFROM pagarme/docker-nodejs:8.9\n\nARG NODE_ENV\nARG DOT_ENV\nENV APP_NAME 'tldr'\nENV PORT 3000\n\nCOPY --from=0 /tldr /tldr\n\nRUN apk --update --no-cache add curl\n\nWORKDIR /tldr\n\nHEALTHCHECK \\\n  --interval=5s \\\n  --timeout=30s \\\n  --start-period=10s \\\n  --retries=3 \\\n  CMD curl -f http://localhost:${PORT}/_health_check || exit 1\n\nEXPOSE ${PORT}\n"
}