{
  "startTime": 1674253521680,
  "endTime": 1674253522893,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\nMAINTAINER ivan4th <ivan4th@gmail.com>\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN echo \"deb [arch=amd64] http://deb.wirenboard.com/dev-tools stable main\" > /etc/apt/sources.list.d/wirenboard-dev-tools.list && \\\n    sed -e \"s/httpredir.debian.org/mirror.yandex.ru/g\" -i /etc/apt/sources.list && \\\n    echo \"deb [arch=amd64] http://deb.debian.org/debian stretch-backports main\" > /etc/apt/sources.list.d/stretch-backports.list && \\\n    echo -n \"Package: node* npm libuv1*\\nPin: release a=stretch-backports\\nPin-Priority: 510\" > /etc/apt/preferences.d/01nodejs && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y --allow-unauthenticated gnupg1 curl ca-certificates apt-transport-https contactless-keyring && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AEE07869 && \\\n    echo 'deb [arch=amd64] http://repo.aptly.info/ squeeze main' >/etc/apt/sources.list.d/aptly.list && \\\n    curl -f https://www.aptly.info/pubkey.txt | apt-key add - && \\\n    echo 'deb http://apt.llvm.org/stretch/ llvm-toolchain-stretch main' >> /etc/apt/sources.list.d/clang.list && \\\n    curl -f https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y --force-yes git mercurial curl wget debootstrap \\\n      build-essential pkg-config debhelper \\\n      nodejs npm bash-completion nano gcc-arm-linux-gnueabi gcc-arm-linux-gnueabihf sudo locales \\\n      devscripts python-virtualenv git equivs \\\n      libmosquittopp-dev libmosquitto-dev pkg-config gcc g++ libmodbus-dev \\\n      libcurl4-gnutls-dev libsqlite3-dev libjsoncpp-dev \\\n      valgrind libgtest-dev google-mock cmake config-package-dev \\\n      python-netaddr python-pyparsing liblircclient-dev \\\n      libusb-dev libusb-1.0-0-dev jq python-dev python-smbus \\\n      aptly python-setuptools python3-setuptools liblog4cpp5-dev libpng-dev libqt4-dev bc lzop bison flex kmod \\\n      qemu-user-static binfmt-support node-rimraf \\\n      sbuild kpartx zip device-tree-compiler u-boot-tools=2016.11+dfsg1-4 fit-aligner libssl-dev \\\n      golang-go clang-format \\\n      debian-archive-keyring && \\\n    apt-get install --no-install-recommends -y --force-yes proot && rm -rf /var/lib/apt/lists/*;\n# FIXME: we should not install anything with --force-yes\n\n# Go environment\n# from https://github.com/docker-library/golang/blob/master/1.5/Dockerfile\nENV GOLANG_VERSION 1.13.1\nENV GOLANG_DOWNLOAD_URL   https://dl.google.com/go/go$GOLANG_VERSION.linux-amd64.tar.gz\nENV GOLANG_DOWNLOAD_SHA1  e9275a46508483242feb6200733b6382f127cb43\n\nENV GLIDE_VERSION v0.13.1\nENV GLIDE_DOWNLOAD_URL https://github.com/Masterminds/glide/releases/download/$GLIDE_VERSION/glide-$GLIDE_VERSION-linux-amd64.tar.gz\nENV GLIDE_DOWNLOAD_SHA1 6de1d6931108ed94bf0f722dbd158487d8f75b20\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n  && tar -C /usr/local -xzf golang.tar.gz \\\n  && rm golang.tar.gz\n\nRUN curl -fsSL \"$GLIDE_DOWNLOAD_URL\" -o glide.tar.gz \\\n  && tar -C /usr/local/bin --strip-components=1 -xzf glide.tar.gz linux-amd64/glide \\\n  && rm glide.tar.gz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\nCOPY wbdev_second_half.sh /\nCOPY build.sh /root/\nCOPY rootfs /root/rootfs\nCOPY boards /root/boards\nCOPY prep.sh /root/\nCOPY entrypoint.sh /sbin/\nCOPY projects.list /\nCOPY chr /usr/local/bin/\nRUN chmod +x /root/*.sh /usr/local/bin/chr\n\nRUN echo \"en_GB.UTF-8 UTF-8\" > /etc/locale.gen\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen\nRUN echo \"ru_RU.UTF-8 UTF-8\" >> /etc/locale.gen\n\nRUN locale-gen && update-locale\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# build and install google test\nRUN (cd /usr/src/gtest && cmake . && make && mv libg* /usr/lib/)\nRUN (ln -s /usr/src/gtest /usr/src/gmock/gtest)\nRUN (cd /usr/src/gmock && cmake . && make && mv libg* /usr/lib/)\n\nCOPY wbdev_profile.sh /etc/profile.d/wbdev_profile.sh\n\nRUN npm install -g bower grunt-cli && npm cache clean --force;\nRUN rm -rf /var/lib/apt/lists/*\n"
}