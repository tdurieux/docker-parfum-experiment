{
  "startTime": 1674252507614,
  "endTime": 1674252508915,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10-slim\nLABEL maintainer=\"Mariano Ruiz <mrsarm@gmail.com>\"\n\nENV CXXFLAGS=\"-mtune=intel -Os -pipe\" \\\n    PROCESS_TYPE=\"web\" \\\n    PORT=8000 \\\n    NUM_WORKERS=3 \\\n    NUM_THREADS=3 \\\n    REQUEST_TIMEOUT=20\n\nWORKDIR /usr/src/app\n\nCOPY requirements/requirements-dev.txt \\\n     requirements/requirements-test.txt \\\n     requirements/requirements-prod.txt \\\n         /usr/src/app/\n\nRUN buildDeps=' \\\n        build-essential \\\n        libuv1-dev \\\n        libpq-dev \\\n        libevent-dev \\\n        libpcre3-dev \\\n        zlib1g-dev \\\n        libbz2-dev \\\n        libxml2-dev \\\n    ' \\\n    && apt-get update -y \\\n    && apt-get install --no-install-recommends -y \\\n        $buildDeps \\\n        postgresql-client \\\n        libpq5 \\\n        libuv1 \\\n        libpcre3 \\\n        zlib1g \\\n        libbz2-1.0 \\\n        libxml2 \\\n        gettext \\\n    # adding \"worker\" user\n    && useradd -ms /bin/bash worker \\\n    && chown -R worker:worker /usr/src/app \\\n    && mkdir /usr/tmp \\\n    && chown worker:worker /usr/tmp \\\n    && chown worker:worker requirements*.txt \\\n    && pip install --no-cache-dir -U pip \\\n    && pip3 install --no-cache-dir \\\n        honcho \\\n    && pip3 install --no-cache-dir -r requirements-dev.txt \\\n    && pip3 install --no-cache-dir -r requirements-test.txt \\\n    && pip3 install --no-cache-dir -r requirements-prod.txt \\\n    # cleanup\n    && apt-get purge --auto-remove -yqq $buildDeps \\\n    && apt-get autoremove -yqq --purge \\\n    && apt-get clean \\\n    && rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\nCOPY --chown=worker ./ ./\n\nARG BUILD\nLABEL build=${BUILD}\nRUN echo \"Build: $BUILD\" > image_build \\\n    && echo \"UTC: $(date --utc +%FT%R)\" >> image_build\n\n# In a \"prod\" image, the migrations process should be executed\n# before the image and kept on git or whatever VCS\nRUN honcho start collectstatic compilemessages \\\n    && honcho start --no-prefix makemigrations \\\n    && rm *.sqlite3 *.log \\\n    && chown worker -R *\n\nUSER worker\n\nCMD [\"sh\", \"-c\", \"exec honcho start --no-prefix $PROCESS_TYPE\"]\n"
}