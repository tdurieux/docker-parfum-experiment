{
  "startTime": 1674255282382,
  "endTime": 1674255282940,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NAME:     discourse/discourse_dev\n# VERSION:  release\nFROM discourse/base:release\n\n# Unset RAILS_ENV to allow running both dev stuff and tests\nENV RAILS_ENV=\n\n#LABEL maintainer=\"Sam Saffron \\\"https://twitter.com/samsaffron\\\"\"\n\n# Remove the code added on base image\nRUN rm -rf /var/www/*\n\n# Give discourse user no-passwd sudo permissions (for bundle install)\nADD sudoers.discourse /etc/sudoers.d/discourse\n\n# get redis going\nADD redis.template.yml /pups/redis.yml\nRUN /pups/bin/pups /pups/redis.yml\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# get postgres going\nADD postgres.template.yml /pups/postgres.yml\nRUN LANG=en_US.UTF-8 /pups/bin/pups /pups/postgres.yml\n\n# add dev databases\nADD postgres_dev.template.yml /pups/postgres_dev.yml\nRUN /pups/bin/pups /pups/postgres_dev.yml\n\n# move default postgres_data out of the way\nRUN mv /shared/postgres_data /shared/postgres_data_orig\n\n# re-instantiate data on boot if needed (this will allow it to persist across\n# invocations when used with a mounted volume)\nADD ensure-database /etc/runit/1.d/ensure-database\n\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - &&\\\n    echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list &&\\\n    apt update && \\\n    apt install --no-install-recommends -y google-chrome-stable firefox-esr && rm -rf /var/lib/apt/lists/*;\n\n# Install & Configure MailHog (https://github.com/mailhog/MailHog)\nRUN wget -qO /tmp/mailhog https://github.com/mailhog/MailHog/releases/download/v1.0.1/MailHog_linux_amd64 \\\n    && echo \"e2ed634ded49929f089b20045581955ed217672078fd86082dd7a6c67c5d09c7  /tmp/mailhog\" | sha256sum -c - \\\n    && mv /tmp/mailhog /usr/local/bin/mailhog \\\n    && chmod +x /usr/local/bin/mailhog\n"
}