{
  "startTime": 1674250459333,
  "endTime": 1674250460518,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 53,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 97,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6.3-alpine as builder\n\nENV PREFIX /usr/local\n\n# Runtime dependencies\nRUN apk add --no-cache \\\n    cairo \\\n    freetype \\\n    fribidi \\\n    glib \\\n    graphite2 \\\n    icu-libs \\\n    libbz2 \\\n    libgcc \\\n    libltdl \\\n    libgomp \\\n    pngquant \\\n    sudo \\\n    tini\n\n# Build dependencies\nRUN apk add --no-cache \\\n    autoconf \\\n    automake \\\n    build-base \\\n    bzip2-dev \\\n    cairo-dev \\\n    fribidi-dev \\\n    freetype-dev \\\n    ghostscript-dev \\\n    glib-dev \\\n    gobject-introspection-dev \\\n    graphite2-dev \\\n    icu-dev \\\n    libtool\n\nENV JEMALLOC_VERSION 3.6.0\nRUN mkdir /tmp/jemalloc \\\n    && cd /tmp/jemalloc \\\n    && wget -O jemalloc.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/$JEMALLOC_VERSION/jemalloc-$JEMALLOC_VERSION.tar.bz2 \\\n    && tar xjf jemalloc.tar.bz2 \\\n    && cd jemalloc-$JEMALLOC_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j \\\n    && mv lib/libjemalloc.so.1 /usr/lib \\\n    && rm -rf /tmp/jemalloc && rm jemalloc.tar.bz2\n\nENV HARFBUZZ_VERSION 2.4.0\nRUN mkdir /tmp/harfbuzz \\\n    && cd /tmp/harfbuzz \\\n    && wget -O harfbuzz.tar.bz2 https://www.freedesktop.org/software/harfbuzz/release/harfbuzz-$HARFBUZZ_VERSION.tar.bz2 \\\n    && tar xjf harfbuzz.tar.bz2 \\\n    && cd harfbuzz-$HARFBUZZ_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=$PREFIX \\\n        --with-glib \\\n        --with-gobject \\\n        --with-graphite2 \\\n        --with-icu \\\n    && make -j all \\\n    && make -j install \\\n    && rm -rf /tmp/harfbuzz && rm harfbuzz.tar.bz2\n\nENV RAQM_VERSION 0.5.0\nRUN mkdir /tmp/raqm \\\n    && cd /tmp/raqm \\\n    && wget -O raqm.tar.gz https://github.com/HOST-Oman/libraqm/releases/download/v$RAQM_VERSION/raqm-$RAQM_VERSION.tar.gz \\\n    && tar xzf raqm.tar.gz \\\n    && cd raqm-$RAQM_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PREFIX \\\n    && make -j all \\\n    && make -j install \\\n    && rm -rf /tmp/raqm && rm raqm.tar.gz\n\nENV LIBPNG_VERSION 1.6.37\nRUN mkdir /tmp/libpng \\\n    && cd /tmp/libpng \\\n    && wget -O libpng.tar.gz https://prdownloads.sourceforge.net/libpng/libpng-$LIBPNG_VERSION.tar.gz?downlolad \\\n    && tar xzf libpng.tar.gz \\\n    && cd libpng-$LIBPNG_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PREFIX \\\n    && make -j all \\\n    && make -j install \\\n    && rm -rf /tmp/libpng && rm libpng.tar.gz\n\nENV IMAGE_MAGICK_VERSION 7.0.8-42\nRUN mkdir /tmp/imagemagick \\\n    && cd /tmp/imagemagick \\\n    && wget -O ImageMagick.tar.gz https://github.com/ImageMagick/ImageMagick/archive/$IMAGE_MAGICK_VERSION.tar.gz \\\n    && tar xzf ImageMagick.tar.gz \\\n    && cd ImageMagick-${IMAGE_MAGICK_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --prefix=$PREFIX \\\n        --enable-static \\\n        --enable-bounds-checking \\\n        --enable-hugepages \\\n        --with-modules \\\n        --without-magick-plus-plus \\\n    && make -j all \\\n    && make -j install \\\n    && rm -rf /tmp/imagemagick && rm ImageMagick.tar.gz\n\nADD policy.xml /usr/local/etc/ImageMagick-7/\n\nADD Gemfile /var/www/letter-avatars/Gemfile\nADD Gemfile.lock /var/www/letter-avatars/Gemfile.lock\nADD fonts/Roboto-Medium /var/www/letter-avatars/Roboto-Medium\nADD fonts/NotoSansDisplay-Medium.ttf /var/www/letter-avatars/NotoSansDisplay-Medium.ttf\nADD fonts/NotoSansMono-Medium.ttf /var/www/letter-avatars/NotoSansMono-Medium.ttf\nADD fonts/NotoSansMonoCJKsc-Regular.otf /var/www/letter-avatars/NotoSansMonoCJKsc-Regular.otf\nADD fonts/NotoSansArabic-Medium.ttf /var/www/letter-avatars/NotoSansArabic-Medium.ttf\nADD fonts/NotoSansDevanagari-Medium.ttf /var/www/letter-avatars/NotoSansDevanagari-Medium.ttf\nADD fonts/NotoSansBengali-Medium.ttf /var/www/letter-avatars/NotoSansBengali-Medium.ttf\nADD fonts/NotoSansJavanese-Regular.ttf /var/www/letter-avatars/NotoSansJavanese-Regular.ttf\nADD fonts/NotoSansTelugu-Regular.ttf /var/www/letter-avatars/NotoSansTelugu-Regular.ttf\nADD fonts/NotoSansThai-Medium.ttf /var/www/letter-avatars/NotoSansThai-Medium.ttf\nADD fonts/NotoSansHebrew-Medium.ttf /var/www/letter-avatars/NotoSansHebrew-Medium.ttf\nADD fonts/NotoSansArmenian-Medium.ttf /var/www/letter-avatars/NotoSansArmenian-Medium.ttf\n\nRUN adduser -s /bin/bash -u 9001 -D web \\\n    && cd /var/www/letter-avatars \\\n    && chown -R web . \\\n    && sudo -E -u web bundle install --deployment --verbose\n\nRUN apk del \\\n    autoconf \\\n    automake \\\n    build-base \\\n    bzip2-dev \\\n    cairo-dev \\\n    fribidi-dev \\\n    freetype-dev \\\n    ghostscript-dev \\\n    glib-dev \\\n    gobject-introspection-dev \\\n    graphite2-dev \\\n    icu-dev \\\n    libtool \\\n    && rm -rf /var/cache/apk/*\n\nFROM builder\n\nADD config.ru /var/www/letter-avatars/config.ru\nADD lib /var/www/letter-avatars/lib\nADD unicorn.conf.rb /var/www/letter-avatars/unicorn.conf.rb\n\nENTRYPOINT [\"/sbin/tini\", \"--\", \"sudo\", \"-E\", \"-u\", \"web\", \"/bin/sh\", \"-c\", \"cd /var/www/letter-avatars && exec bundle exec unicorn -E production -c /var/www/letter-avatars/unicorn.conf.rb\"]\n"
}