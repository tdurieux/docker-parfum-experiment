{
  "startTime": 1674248929926,
  "endTime": 1674248930894,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17\n\nLABEL maintainer=\"https://discord.gg/2TsNFKt\"\n\n# Install tools\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_lts.x | bash -\n\n# prevent caching of the key\nADD https://dl.yarnpkg.com/debian/pubkey.gpg yarn.gpg\nRUN cat yarn.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    rm yarn.gpg\n\nRUN apt-get update && \\\n    apt-get install -y automake autogen cmake \\\n    libtool libxml2-dev uuid-dev libssl-dev bash \\\n    patch make tar xz-utils bzip2 gzip zlib1g-dev sed cpio \\\n\tgcc-10-multilib gcc-mingw-w64 g++-mingw-w64 clang llvm-dev \\\n\tgcc-arm-linux-gnueabi libc-dev-armel-cross linux-libc-dev-armel-cross \\\n    gcc-arm-linux-gnueabihf libc-dev-armhf-cross \\\n    gcc-aarch64-linux-gnu libc-dev-arm64-cross \\\n\tnodejs yarn zip --no-install-recommends || exit 1; \\\n\trm -rf /var/lib/apt/lists/*;\n\n# Cross compile setup\nENV OSX_SDK_VERSION \t11.3\nENV OSX_SDK_DOWNLOAD_FILE=MacOSX${OSX_SDK_VERSION}.sdk.tar.xz\nENV OSX_SDK_DOWNLOAD_URL=https://github.com/phracker/MacOSX-SDKs/releases/download/${OSX_SDK_VERSION}/${OSX_SDK_DOWNLOAD_FILE}\nENV OSX_SDK_SHA=cd4f08a75577145b8f05245a2975f7c81401d75e9535dcffbb879ee1deefcbf4\nENV OSX_SDK     \t\tMacOSX$OSX_SDK_VERSION.sdk\nENV OSX_NDK_X86 \t\t/usr/local/osx-ndk-x86\n\nRUN  wget ${OSX_SDK_DOWNLOAD_URL}\nRUN echo \"$OSX_SDK_SHA  $OSX_SDK_DOWNLOAD_FILE\" | sha256sum -c - || exit 1; \\\n     git clone https://github.com/tpoechtrager/osxcross.git; \\\n     mv $OSX_SDK_DOWNLOAD_FILE osxcross/tarballs/\n\nRUN     UNATTENDED=yes SDK_VERSION=${OSX_SDK_VERSION} OSX_VERSION_MIN=10.10 osxcross/build.sh || exit 1;\nRUN     cp osxcross/target/lib/* /usr/lib/ ; \\\n        mv osxcross/target $OSX_NDK_X86; \\\n        rm -rf osxcross;\n\nENV PATH $OSX_NDK_X86/bin:$PATH\n\nRUN mkdir -p /root/.ssh; \\\n    chmod 0700 /root/.ssh; \\\n    ssh-keyscan github.com > /root/.ssh/known_hosts;\n\n# Notes for self:\n\n# To test locally:\n# make generate\n# make ui\n# cd docker/compiler\n# make build\n# docker run -it -v /PATH_TO_STASH:/go/stash stashapp/compiler:latest /bin/bash\n# cd stash\n# make cross-compile-all\n# # binaries will show up in /dist\n\n# Windows:\n# GOOS=windows GOARCH=amd64 CGO_ENABLED=1 CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++  go build -ldflags \"-extldflags '-static'\" -tags extended\n\n# Darwin\n# CC=o64-clang CXX=o64-clang++ GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 go build -tags extended\n# env goreleaser --config=goreleaser-extended.yml --skip-publish --skip-validate --rm-dist --release-notes=temp/0.48-relnotes-ready.md\n"
}