{
  "startTime": 1674253863552,
  "endTime": 1674253864161,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9.12-buster\n\nRUN useradd --create-home service\n\nRUN apt-get update -yqq && apt-get install -yqq --no-install-recommends binutils libproj-dev gdal-bin curl && rm -rf /var/lib/apt/lists/*;\nRUN apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n  && rm -rf /var/lib/apt/lists/*\n\n\nWORKDIR /home/service\n\nRUN pip install --no-cache-dir poetry==1.1.8\n\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_NO_CACHE_DIR=off\n\nCOPY poetry.lock pyproject.toml /home/service/\n\nARG environment=prod\n\nRUN poetry config virtualenvs.create false && \\\n    if [ \"${environment}\" = prod ]; then \\\n        poetry install --no-dev --no-interaction --no-ansi --no-root -E production; \\\n    else \\\n        poetry install --no-interaction --no-ansi --no-root; \\\n    fi\n\nUSER service\n\nCOPY . /home/service\n\nEXPOSE 8000\n\nCMD [\"gunicorn\", \"config.asgi\", \\\n     \"--bind\", \":8000\", \\\n     \"--worker-class\", \"config.workers.UvicornWorker\", \\\n     \"--workers\", \"6\", \\\n     \"--keep-alive\", \"10\", \\\n     \"--capture-output\", \\\n     \"--log-level=info\", \\\n     \"--log-file\", \"-\", \\\n     \"--error-logfile\", \"-\", \\\n     \"--max-requests\", \"500\", \\\n     \"--max-requests-jitter\", \"150\", \\\n     \"--access-logfile\", \"-\"]\n"
}