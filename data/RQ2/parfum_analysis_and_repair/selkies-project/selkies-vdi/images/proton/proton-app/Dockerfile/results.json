{
  "startTime": 1674216226503,
  "endTime": 1674216227211,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2020 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG BASE_IMAGE=gcr.io/PROJECT_ID/vdi-proton-base\nFROM ${BASE_IMAGE}\n\n# Copy and extract the proton dist archive.\nARG DIST_ARCHIVE=proton_dist.tar.gz\nWORKDIR /opt/proton\nADD ${DIST_ARCHIVE} .\n\nENV PATH=${PATH}:/opt/proton/bin\n\n# Install basic window manager and runtime dependencies\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        dbus-x11 \\\n        xfwm4 \\\n        zip \\\n        sudo \\\n        socat \\\n        libfaudio0 \\\n        libvulkan1 \\\n        vulkan-utils \\\n        mesa-utils \\\n        mesa-vulkan-drivers \\\n        mesa-utils-extra \\\n        lxrandr \\\n        libxrandr-dev \\\n        jstest-gtk && rm -rf /var/lib/apt/lists/*;\n\n# Install Vulkan ICD\nCOPY nvidia_icd.json /usr/share/vulkan/icd.d/\n\n# Install EGL config\nRUN mkdir -p /usr/share/glvnd/egl_vendor.d\nCOPY 10_nvidia.json /usr/share/glvnd/egl_vendor.d/\n\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\n# Create app user\nRUN groupadd -g 1000 app && \\\n    useradd -g 1000 -u 1000 app -s /bin/bash && \\\n    passwd -d app && \\\n    mkdir -p /home/app && \\\n    mkdir -p /home/app/.vnc && \\\n    echo \"xsetroot -solid grey\" > /home/app/.vnc/xstartup && \\\n    chmod +x /home/app/.vnc/xstartup && \\\n    chown 1000:1000 -R /home/app > /dev/null 2>&1 || true\n\n# Grant sudo to user for vulkan init workaround\nRUN adduser app sudo\n\nRUN echo \"app ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd\n\nUSER app\nENV USER app\n\n# Export library path for NVIDIA libs\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib64:/usr/local/nvidia/lib32\n\n# Set the DISPLAY variable.\nENV DISPLAY :0\n\n# Set the PATH\nENV PATH ${PATH}:/usr/local/nvidia/bin:/usr/games\n\nENV RESOLUTION 1920x1080\n\nENTRYPOINT [\"/entrypoint.sh\"]"
}