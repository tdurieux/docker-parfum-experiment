{
  "startTime": 1674249654992,
  "endTime": 1674249656296,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 21,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 36,
        "columnStart": 49,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 65,
        "columnStart": 53,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 28,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 36,
        "columnStart": 49,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 36,
        "columnStart": 49,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 65,
        "columnStart": 53,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 28,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 36,
        "columnStart": 49,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2019 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Download Jetbrains Toolbox and extract appimage\nFROM ubuntu:16.04 as jetbrains\nRUN apt-get update && apt-get install --no-install-recommends -y -qq curl && rm -rf /var/lib/apt/lists/*;\nWORKDIR /tmp\nRUN curl -sfL 'https://data.services.jetbrains.com/products/download?platform=linux&code=TBA' | \\\n    tar --strip-components=1 -zxvf -\n\n# Extract the AppImage, output will be in /tmp/appimage\nRUN chmod +x jetbrains-toolbox && \\\n    \"./jetbrains-toolbox\" --appimage-extract && \\\n    find squashfs-root -type d -exec chmod ugo+rx {} \\; && \\\n    chown -R 1000:1000 squashfs-root && \\\n    mv squashfs-root appimage\n\n# Build cloudshell image with Desktop environment\nFROM gcr.io/cloudshell-images/cloudshell:latest\n\n# Install base dependencies\nRUN apt-get --allow-releaseinfo-change update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        bsdtar \\\n        gdebi-core \\\n        gnupg2 \\\n        libxcb-keysyms1 && rm -rf /var/lib/apt/lists/*;\n\n# Install Chrome browser\nRUN curl -sfL https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add - && \\\n    curl -sfLO https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \\\n    gdebi -n google-chrome-stable_current_amd64.deb\n\n# Install desktop environment and terminal\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        xfce4 \\\n        xfce4-terminal \\\n        terminator && rm -rf /var/lib/apt/lists/*;\n\n# Disable screen locking and screensaver\nRUN \\\n    mv /etc/xdg/autostart/light-locker.desktop /etc/xdg/autostart/light-locker.desktop.bak && \\\n    mv /etc/xdg/autostart/xscreensaver.desktop /etc/xdg/autostart/xscreensaver.desktop.bak\n\n# Install Vulkan, OpenGL-ES and GLX libraries.\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install --no-install-recommends -y \\\n        libvulkan1 \\\n        vulkan-utils \\\n        mesa-utils \\\n        mesa-vulkan-drivers \\\n        mesa-utils-extra \\\n        libxrandr-dev \\\n        vdpau-va-driver \\\n        vainfo \\\n        vdpauinfo \\\n        libegl1-mesa && rm -rf /var/lib/apt/lists/*;\n\n# Install VirtualGL for off-screen rendering with Xpra\nRUN \\\n    VGL_PR_VERSION=$( curl -f -s https://s3.amazonaws.com/virtualgl-pr | sed 's,</,\\n</,g' | grep -o -e \"main/linux/virtualgl_.*_amd64.deb\" | xargs basename | sort | tail -1) && \\\n    curl -fsSL -o /tmp/virtualgl.deb https://s3.amazonaws.com/virtualgl-pr/main/linux/${VGL_PR_VERSION} && \\\n    apt-get update && dpkg -i /tmp/virtualgl.deb && rm -f /tmp/virtualgl.deb\n\n# Install socat for uinput control socket forwarding\nRUN apt-get install --no-install-recommends -y \\\n    jstest-gtk \\\n    socat && rm -rf /var/lib/apt/lists/*;\n\n# Install Jetbrains Toolbox and desktop shortcut\nCOPY --from=jetbrains /tmp/appimage /opt/jetbrains-toolbox\nRUN \\\n    sudo mkdir -p /etc/skel/Desktop && printf \"[Desktop Entry]\\nVersion=1.0\\nType=Application\\nExec=/usr/bin/jetbrains-toolbox\\nPath=/opt/jetbrains-toolbox\\nName=Jetbrains Toolbox\\nIcon=/opt/jetbrains-toolbox/toolbox-tray-color.png\\nTerminal=false\\n\" | sudo tee /etc/skel/Desktop/Jetbrains.desktop && \\\n    sudo chmod +x /etc/skel/Desktop/Jetbrains.desktop && \\\n    sudo chown 1000:1000 /etc/skel/Desktop/Jetbrains.desktop\n\n# Install VS Code\nRUN \\\n    wget -q https://packages.microsoft.com/keys/microsoft.asc -O- | sudo apt-key add - && \\\n    sudo add-apt-repository \"deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main\" && \\\n    sudo apt update && sudo apt install --no-install-recommends -y code && rm -rf /var/lib/apt/lists/*;\nRUN \\\n    sudo mkdir -p /etc/skel/Desktop && sudo cp /usr/share/applications/code.desktop /etc/skel/Desktop/ && \\\n    sudo chmod +x /etc/skel/Desktop/code.desktop && \\\n    sudo chown 1000:1000 /etc/skel/Desktop/code.desktop\n\n# Copy shared config files\nWORKDIR /usr/share/cloudshell\nCOPY config/* ./\n\n# Copy default DPI script\nRUN \\\n    sudo mkdir -p /etc/skel/Autostart && \\\n    sudo ln -s /usr/share/cloudshell/set-default-dpi.desktop /etc/skel/Autostart/set-default-dpi.desktop\n\n# Copy jetbrains-toolbox helper script to path.\nRUN \\\n    cp /usr/share/cloudshell/jetbrains-toolbox /usr/bin/jetbrains-toolbox && \\\n    chmod +x /usr/bin/jetbrains-toolbox\n\n# Download git-prompt to use as default prompt.\nRUN curl -sfL -o /usr/share/cloudshell/git-prompt.sh \\\n\thttps://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh\n\n# Install Vulkan ICD\nCOPY nvidia_icd.json /usr/share/vulkan/icd.d/\n\n# Install EGL config\nRUN mkdir -p /usr/share/glvnd/egl_vendor.d\nCOPY 10_nvidia.json /usr/share/glvnd/egl_vendor.d/\n\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\n# Add user and grant sudo\nRUN sed -i 's/:1000:/:2000:/g' /etc/{group,passwd} && \\\n    groupadd --gid 1000 app && \\\n    adduser --uid=1000 --gid=1000 --gecos '' --disabled-password --shell /bin/bash app && \\\n\techo \"app ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd\n\nWORKDIR /home/app/project\n\nRUN chown app:app /home/app/project\n\n# Prevent zombie python processes whenever gcloud is run.\nRUN gcloud config set disable_usage_reporting true\n\n# Use bash as default shell\nENV SHELL /bin/bash\nENV USER app\nENV PATH ${PATH}:/usr/local/nvidia/bin:/opt/VirtualGL/bin:/home/app/bin\n\n# Export library path for NVIDIA libs\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib64\n\n# Set the DISPLAY variable.\nENV DISPLAY :0\n\n# Set SDL audio driver to use pulseaudio\nENV SDL_AUDIODRIVER pulse\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}