{
  "startTime": 1674218390436,
  "endTime": 1674218391684,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Supported base images: ubuntu:20.04, ubuntu:18.04\nARG UBUNTU_RELEASE=20.04\nARG GSTREAMER_BASE_IMAGE=ghcr.io/selkies-project/selkies-gstreamer/gstreamer\nARG GSTREAMER_BASE_IMAGE_RELEASE=latest\nARG PY_BUILD_IMAGE=ghcr.io/selkies-project/selkies-gstreamer/py-build:latest\nARG WEB_IMAGE=ghcr.io/selkies-project/selkies-gstreamer/gst-web:latest\nFROM ${GSTREAMER_BASE_IMAGE}:${GSTREAMER_BASE_IMAGE_RELEASE}-ubuntu${UBUNTU_RELEASE} as selkies-gstreamer\nFROM ${PY_BUILD_IMAGE} as selkies-build\nFROM ${WEB_IMAGE} as selkies-web\nFROM ubuntu:${UBUNTU_RELEASE}\n\nLABEL maintainer \"https://github.com/danisla\"\n\n# Install Selkies GStreamer system dependencies\nRUN \\\n    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n        build-essential \\\n        python3-pip \\\n        python3-dev \\\n        python3-gi \\\n        python3-setuptools \\\n        python3-wheel \\\n        tzdata \\\n        sudo \\\n        udev \\\n        xclip \\\n        x11-utils \\\n        xdotool \\\n        wmctrl \\\n        jq \\\n        gdebi-core \\\n        x11-xserver-utils \\\n        xserver-xorg-core \\\n        libopus0 \\\n        libgdk-pixbuf2.0-0 \\\n        libsrtp2-1 \\\n        libxdamage1 \\\n        libxml2-dev \\\n        libwebrtc-audio-processing1 \\\n        libcairo-gobject2 \\\n        pulseaudio \\\n        libpulse0 \\\n        libpangocairo-1.0-0 \\\n        libgirepository1.0-dev \\\n        libjpeg-dev \\\n        zlib1g-dev \\\n        x264 \\\n        git && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /opt\n\n# Install test dependencies\nRUN \\\n    apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n        vim \\\n        curl \\\n        jq \\\n        xvfb \\\n        xfce4 \\\n        xfce4-terminal \\\n        adwaita-icon-theme-full \\\n        dbus-x11 \\\n        x11-apps \\\n        firefox && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Add Tini init script - take care of runaway processes\nENV TINI_VERSION v0.7.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n\n# Install gstreamer distribution\nCOPY --from=selkies-gstreamer /opt/gstreamer ./gstreamer\n\n# Install web app\nCOPY --from=selkies-web /usr/share/nginx/html ./gst-web\n\n# Update PWA manifest.json with app info and route.\nARG PWA_APP_NAME=\"Selkies WebRTC\"\nARG PWA_APP_SHORT_NAME=\"selkies\"\nARG PWA_START_URL=\"/index.html\"\nRUN \\\n    sed -i \\\n        -e \"s|PWA_APP_NAME|${PWA_APP_NAME}|g\" \\\n        -e \"s|PWA_APP_SHORT_NAME|${PWA_APP_SHORT_NAME}|g\" \\\n        -e \"s|PWA_START_URL|${PWA_START_URL}|g\" \\\n    /opt/gst-web/manifest.json && \\\n    sed -i \\\n        -e \"s|PWA_CACHE|${PWA_APP_SHORT_NAME}-webrtc-pwa|g\" \\\n    /opt/gst-web/sw.js\n\n# Install selkies-gstreamer python app\nARG PYPI_PACKAGE=selkies_gstreamer\nARG PACKAGE_VERSION=1.0.0.dev0\nCOPY --from=selkies-build /opt/pypi/dist/${PYPI_PACKAGE}-${PACKAGE_VERSION}-py3-none-any.whl .\nRUN pip3 install --no-cache-dir /opt/${PYPI_PACKAGE}-${PACKAGE_VERSION}-py3-none-any.whl\n\n# TODO: required for remote-cursor support.\n# Remove this and uncommend line in setup.cfg after this PR is merged and in release:\n# https://github.com/python-xlib/python-xlib/pull/218\nRUN pip3 install --no-cache-dir -e git+https://github.com/selkies-project/python-xlib.git@add-xfixes-cursor#egg=python-xlib\n\n# Setup global bashrc to configure gstreamer environment\nRUN echo 'export DISPLAY=:0' \\\n        >> /etc/bash.bashrc && \\\n    echo 'export GST_DEBUG=*:2' \\\n        >> /etc/bash.bashrc && \\\n    echo 'source /opt/gstreamer/gst-env' \\\n        >> /etc/bash.bashrc\n\n# Write startup script\nRUN echo \"#!/bin/bash\\n\\\nexport DISPLAY=:0\\n\\\nexport GST_DEBUG=*:2\\n\\\nexport PULSE_SERVER=127.0.0.1:4713\\n\\\nsource /opt/gstreamer/gst-env\\n\\\nXvfb -screen :0 8192x4096x24 +extension RANDR +extension GLX +extension MIT-SHM -nolisten tcp -noreset -shmem 2>&1 >/tmp/Xvfb.log &\\n\\\nuntil [[ -S /tmp/.X11-unix/X0 ]]; do sleep 1; done && echo 'X Server is ready'\\n\\\nsudo /usr/bin/pulseaudio -k >/dev/null 2>&1\\n\\\nsudo /usr/bin/pulseaudio --daemonize --system --verbose --log-target=file:/tmp/pulseaudio.log --realtime=true --disallow-exit -L 'module-native-protocol-tcp auth-ip-acl=127.0.0.0/8 port=4713 auth-anonymous=1'\\n\\\n[[ \\${START_XFCE4:-true} == true ]] && xfce4-session &\\n\\\nexport WEBRTC_ENCODER=\\${WEBRTC_ENCODER:-x264enc}\\n\\\nexport WEBRTC_ENABLE_RESIZE=\\${WEBRTC_ENABLE_RESIZE:-true}\\n\\\nexport JSON_CONFIG=/tmp/selkies.json\\n\\\necho '{}' > \\$JSON_CONFIG\\n\\\nselkies-gstreamer-resize 1280x720\\n\\\nselkies-gstreamer\\n\\\n\" > /entrypoint.sh && chmod +x /entrypoint.sh\n\n# Configure bashrc to show /etc/motd and /etc/issue\nRUN echo '[ ! -z \"$TERM\" -a -r /etc/motd ] && cat /etc/issue && cat /etc/motd' \\\n    >> /etc/bash.bashrc \\\n    ; echo \"\\\n===================================================================\\n\\\n= Selkies GStreamer test Docker container                         =\\n\\\n===================================================================\\n\\\n\\n\\\nTo test the package:\\n\\\n\\n\\\n/entrypoint.sh\\n\\\n\\n\\\nOr start each process separately:\\n\\\n\\n\\\n$(tail -n +2 /entrypoint.sh)\\n\\\n\\n\\\nTo test the signaling server standalone:\\n\\\n\\n\\\npython3 signalling_web.py --disable-ssl --port 8080 --web_root=/opt/gst-web &\\n\\\n\\n\\\n\"\\\n    > /etc/motd\n\n# Add login user\nARG TZ=UTC\nARG PASSWD=mypasswd\nRUN groupadd -g 1000 user && \\\n    useradd -ms /bin/bash user -u 1000 -g 1000 && \\\n    usermod -a -G adm,audio,cdrom,dialout,dip,fax,floppy,input,plugdev,sudo,tape,tty,video,voice user && \\\n    echo \"user ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n    chown -R user:user /home/user && \\\n    echo \"user:${PASSWD}\" | chpasswd && \\\n    ln -snf \"/usr/share/zoneinfo/$TZ\" /etc/localtime && echo \"$TZ\" > /etc/timezone\n\nUSER user\nRUN touch ${HOME}/.sudo_as_admin_successful\n\n# Set default icewm theme\nRUN mkdir -p ${HOME}/.icewm && echo 'Theme=\"NanoBlue/default.theme\"' > ${HOME}/.icewm/theme\n\nWORKDIR /usr/local/lib/python3.8/dist-packages/selkies_gstreamer\n\nENTRYPOINT [\"/tini\", \"--\"]\nCMD [\"/entrypoint.sh\"]\n"
}