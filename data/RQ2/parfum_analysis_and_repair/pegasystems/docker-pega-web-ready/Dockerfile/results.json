{
  "startTime": 1674250235215,
  "endTime": 1674250236264,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 182
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 181
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for Pega 8 Platform\n\n# Base image to extend from\nFROM pegasystems/tomcat:9-jdk11 as release\n\nARG VERSION\n\nLABEL vendor=\"Pegasystems Inc.\" \\\n      name=\"Pega Tomcat Node\" \\\n      version=${VERSION:-CUSTOM_BUILD}\n\n# Creating new user and group\n\nRUN groupadd -g 9001 pegauser && \\\n    useradd -r -u 9001 -g pegauser pegauser\n\n\nENV PEGA_DOCKER_VERSION=${VERSION:-CUSTOM_BUILD}\n\nCOPY hashes/ /hashes/\nCOPY keys/ /keys/\n\n# Create directory for storing heapdump\nRUN mkdir -p /heapdumps  && \\\n    chgrp -R 0 /heapdumps && \\\n    chmod 770 /heapdumps && \\\n    chown -R pegauser /heapdumps\n\n# Create common directory for mounting configuration and libraries\nRUN mkdir -p /opt/pega && \\\n    chgrp -R 0 /opt/pega && \\\n    chmod -R g+rw /opt/pega && \\\n    chown -R pegauser /opt/pega\n\n# Create directory for filesystem repository\nRUN  mkdir -p /opt/pega/filerepo  && \\\n     chgrp -R 0 /opt/pega/filerepo && \\\n     chmod -R g+rw /opt/pega/filerepo && \\\n     chown -R pegauser /opt/pega/filerepo\n\n# Create directory for mounting configuration files\nRUN  mkdir -p /opt/pega/config  && \\\n     chgrp -R 0 /opt/pega/config && \\\n     chmod -R g+rw /opt/pega/config && \\\n     chown -R pegauser /opt/pega/config\n\n# Create directory for mounting libraries\nRUN  mkdir -p /opt/pega/lib  && \\\n     chgrp -R 0 /opt/pega/lib && \\\n     chmod -R g+rw /opt/pega/lib && \\\n     chown -R pegauser /opt/pega/lib\n\n# Create directory for mounting secrets\nRUN  mkdir -p /opt/pega/secrets && \\\n     chgrp -R 0 /opt/pega && \\\n     chmod -R g+rw /opt/pega/secrets && \\\n     chown -R pegauser /opt/pega/secrets\n\n\n# Create directory for extracted prweb.war\nRUN mkdir -p /opt/pega/prweb && \\\n    chgrp -R 0 /opt/pega/prweb && \\\n    chmod -R g+rw /opt/pega/prweb && \\\n    chown -R pegauser /opt/pega/prweb\n\n# Create directory for extra stream volume\nRUN mkdir -p /opt/pega/streamvol && \\\n    chgrp -R 0 /opt/pega/streamvol && \\\n    chmod -R g+rw /opt/pega/streamvol && \\\n    chown -R pegauser /opt/pega/streamvol\n\n\n# Set up an empty JDBC URL which will, if set to a non-empty value, be used in preference\n# to the \"constructed\" JDBC URL\nENV JDBC_URL='' \\\n    DB_USERNAME='' \\\n    DB_PASSWORD='' \\\n    JDBC_CLASS=''\n\n# Load a default PostgreSQL driver on startup\nENV JDBC_DRIVER_URI=''\n\n# Provide variables for the JDBC connection string\nENV JDBC_MAX_ACTIVE=75 \\\n    JDBC_MIN_IDLE=3 \\\n    JDBC_MAX_IDLE=25 \\\n    JDBC_MAX_WAIT=10000 \\\n    JDBC_INITIAL_SIZE=0 \\\n    JDBC_CONNECTION_PROPERTIES='' \\\n    JDBC_TIME_BETWEEN_EVICTIONS=30000 \\\n    JDBC_MIN_EVICTABLE_IDLE_TIME=60000\n\n# Provide variables for the name of the rules, data, and customerdata schemas\nENV RULES_SCHEMA=rules \\\n    DATA_SCHEMA=data \\\n    CUSTOMERDATA_SCHEMA=\n\n#Tomcat user environment variables for pega diagnostic user\nENV PEGA_DIAGNOSTIC_USER='' \\\n    PEGA_DIAGNOSTIC_PASSWORD=''\n\n# Parameterize variables to customize the tomcat runtime\nENV JAVA_OPTS=\"\" \\\n    MAX_HEAP=\"4096m\" \\\n    INITIAL_HEAP=\"2048m\" \\\n    INDEX_DIRECTORY=\"NONE\" \\\n    HEAP_DUMP_PATH=\"/heapdumps\" \\\n    NODE_TYPE=\"\" \\\n    NODE_TIER=\"\" \\\n    NODE_SETTINGS=\"\" \\\n    PEGA_APP_CONTEXT_PATH=prweb \\\n    PEGA_DEPLOYMENT_DIR=${CATALINA_HOME}/webapps/prweb\n\n# Configure Remote JMX support and bind to port 9001\nENV JMX_PORT=9001 \\\n    USE_CUSTOM_JMX_CONNECTION=\n\n# Configure Cassandra.\nENV CASSANDRA_CLUSTER=false \\\n    CASSANDRA_NODES= \\\n    CASSANDRA_PORT=9042 \\\n    CASSANDRA_USERNAME= \\\n    CASSANDRA_PASSWORD= \\\n    CASSANDRA_CLIENT_ENCRYPTION=false \\\n    CASSANDRA_TRUSTSTORE= \\\n    CASSANDRA_TRUSTSTORE_PASSWORD= \\\n    CASSANDRA_KEYSTORE= \\\n    CASSANDRA_KEYSTORE_PASSWORD=\n\n# Configure search nodes. Empty string falls back to search being done on the nodes themselves.\nENV PEGA_SEARCH_URL=\n\n# Configure hazelcast. By default, hazelcast runs in embedded mode.\nENV HZ_CLIENT_MODE=false \\\n    HZ_DISCOVERY_K8S= \\\n    HZ_CLUSTER_NAME= \\\n    HZ_SERVER_HOSTNAME= \\\n    HZ_CS_AUTH_USERNAME= \\\n    HZ_CS_AUTH_PASSWORD=\n\n# Configure custom artifactory authentication details if it is secured with Basic or APIKey Authentication which is used for downloading JDBC driver.\nENV CUSTOM_ARTIFACTORY_USERNAME= \\\n    CUSTOM_ARTIFACTORY_PASSWORD= \\\n    CUSTOM_ARTIFACTORY_APIKEY_HEADER= \\\n    CUSTOM_ARTIFACTORY_APIKEY= \\\n    ENABLE_CUSTOM_ARTIFACTORY_SSL_VERIFICATION=false\n\n#Set up volume for persistent Kafka data storage\nRUN  mkdir -p /opt/pega/kafkadata && \\\n     chgrp -R 0 /opt/pega/kafkadata && \\\n     chmod -R g+rw /opt/pega/kafkadata && \\\n     chown -R pegauser /opt/pega/kafkadata\n\n# Set up dir for prometheus lib\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gpg && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    mkdir -p /opt/pega/prometheus && \\\n    curl -f -sL -o /opt/pega/prometheus/jmx_prometheus_javaagent.jar https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.1/jmx_prometheus_javaagent-0.16.1.jar && \\\n    curl -f -sL -o /tmp/jmx_prometheus_javaagent-0.16.1.jar.asc https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.16.1/jmx_prometheus_javaagent-0.16.1.jar.asc && \\\n    gpg --batch --import /keys/prometheus.asc && \\\n    gpg --batch --verify /tmp/jmx_prometheus_javaagent-0.16.1.jar.asc /opt/pega/prometheus/jmx_prometheus_javaagent.jar && \\\n    rm /tmp/jmx_prometheus_javaagent-0.16.1.jar.asc && \\\n    apt-get autoremove --purge -y gpg && \\\n    chgrp -R 0 /opt/pega/prometheus && \\\n    chmod -R g+rw /opt/pega/prometheus && \\\n    chown -R pegauser /opt/pega/prometheus && \\\n    chmod 440 /opt/pega/prometheus/jmx_prometheus_javaagent.jar\n\n# Setup dir for cert files\nRUN  mkdir -p /opt/pega/certs  && \\\n     chgrp -R 0 /opt/pega/certs && \\\n     chmod -R g+rw /opt/pega/certs && \\\n     chown -R pegauser /opt/pega/certs\n\n#Set up dir for certificate of custom artifactory\nRUN  mkdir -p /opt/pega/artifactory/cert && \\\n     chgrp -R 0 /opt/pega/artifactory/cert && \\\n     chmod -R g+rw /opt/pega/artifactory/cert && \\\n     chown -R pegauser /opt/pega/artifactory/cert\n\n# Setup dir for tlscert file\nRUN  mkdir -p /opt/pega/tomcatcertsmount  && \\\n     chgrp -R 0 /opt/pega/tomcatcertsmount && \\\n     chmod -R g+rw /opt/pega/tomcatcertsmount && \\\n     chown -R pegauser /opt/pega/tomcatcertsmount\n\n#give permissions and ownership to pegauser for lib/security\nRUN chmod -R g+rw ${JAVA_HOME}/lib/security && \\\n    chown -R pegauser ${JAVA_HOME}/lib/security\n\n# Remove existing webapps\nRUN rm -rf ${CATALINA_HOME}/webapps/*\n\n# Copy in tomcat configuration and application files\nCOPY tomcat-webapps ${CATALINA_HOME}/webapps/\nCOPY tomcat-bin ${CATALINA_HOME}/bin/\nCOPY tomcat-conf ${CATALINA_HOME}/conf/\nCOPY scripts /scripts\n\n#Installing dockerize for generating config files using templates\nRUN curl -f -sL -o /tmp/dockerize.tar.gz https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz && \\\n    sha256sum -c /hashes/dockerize.sha256 && \\\n    tar zxf /tmp/dockerize.tar.gz -C /bin/ && \\\n    rm /tmp/dockerize.tar.gz\n\n# Update access of required directories to allow not running in root for openshift\nRUN chmod -R g+rw ${CATALINA_HOME}/logs  && \\\n    chmod -R g+rw ${CATALINA_HOME}/lib  && \\\n    chmod -R g+rw ${CATALINA_HOME}/work  && \\\n    chmod -R g+rw ${CATALINA_HOME}/conf  && \\\n    chmod -R g+rw ${CATALINA_HOME}/bin  && \\\n    chmod -R g+rw ${CATALINA_HOME}/webapps && \\\n    chmod -R g+x /scripts && \\\n    chown -R pegauser /scripts && \\\n    chmod g+r ${CATALINA_HOME}/conf/web.xml && \\\n    chown -R pegauser ${CATALINA_HOME}  && \\\n    mkdir /search_index && \\\n    chmod -R g+w /search_index && \\\n    chown -R pegauser /search_index\n\n#switched the user to pegauser\nUSER pegauser\n\n#running in pegauser context\nRUN chmod 770 /scripts/docker-entrypoint.sh\n\nENTRYPOINT [\"/scripts/docker-entrypoint.sh\"]\nCMD [\"run\"]\n\n# Expose required ports\n\n# HTTP is 8080, JMX is 9001, prometheus is 9090, Hazelcast is 5701-5710, Ignite is 47100, REST for Kafka is 7003\nEXPOSE 8080 9001 9090 5701-5710 47100 7003\n\n# Used by Docker if this image is used outside of a Kubernetes context.\n# Kubernetes ignores this check and uses the liveness/readiness probes instead.\nHEALTHCHECK --interval=5m --timeout=3s CMD jcmd 0 VM.uptime || exit 1\n\n# *****Target for test environment*****\n\nFROM release as qualitytest\nUSER root\nRUN mkdir /tests && \\\n    chown -R pegauser /tests\nCOPY tests /tests\nRUN chmod -R 777 /tests\nUSER pegauser\nFROM release\n"
}