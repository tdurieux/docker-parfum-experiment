{
  "startTime": 1674250739677,
  "endTime": 1674250740488,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 13,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile to build a manylinux 2010 compliant TensorFlow pip package with\n# cuda-clang.\n#\n# To build, first build the manylinux2010 toolchain docker image and tag it,\n# then build the TensorFlow docker image using the tagged image as base.\n#\n# $ docker build -f Dockerfile.rbe.cuda10.0-cudnn7-ubuntu16.04-manylinux2010 \\\n#     --tag \"local-manylinux-toolchain\" .\n# $ docker build -f Dockerfile.cuda-clang .\n\nFROM local-manylinux-toolchain\n\nWORKDIR /\nRUN git clone https://github.com/tensorflow/tensorflow\n\nWORKDIR /tensorflow\nENV TF_NEED_GCP=1 \\\n    TF_NEED_HDFS=1 \\\n    TF_NEED_CUDA=1 \\\n    TF_CUDA_CLANG=1 \\\n    PATH=/dt7/usr/bin:$PATH \\\n    PYTHON_BIN_PATH=/usr/bin/python3.6 \\\n    CLANG_CUDA_COMPILER_PATH=/clang_${CLANG_VERSION}/bin/clang\n\nADD cuda-clang.patch cuda-clang.patch\nRUN patch -p1 < cuda-clang.patch\n\nRUN yes \"\" | ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\nRUN bazel build --config=opt tensorflow/tools/pip_package:build_pip_package \\\n    --nodistinct_host_configuration\n\nRUN ./bazel-bin/tensorflow/tools/pip_package/build_pip_package /tf-wheel\n"
}