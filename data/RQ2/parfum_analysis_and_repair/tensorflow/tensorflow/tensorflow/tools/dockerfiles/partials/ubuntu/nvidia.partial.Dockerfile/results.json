{
  "startTime": 1674256332068,
  "endTime": 1674256332857,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARCH=\nARG CUDA=11.2\nFROM nvidia/cuda${ARCH:+-$ARCH}:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base\n# ARCH and CUDA are specified again because the FROM directive resets ARGs\n# (but their default value is retained if set previously)\nARG ARCH\nARG CUDA\nARG CUDNN=8.1.0.77-1\nARG CUDNN_MAJOR_VERSION=8\nARG LIB_DIR_PREFIX=x86_64\nARG LIBNVINFER=7.2.2-1\nARG LIBNVINFER_MAJOR_VERSION=7\n\n# Let us install tzdata painlessly\nENV DEBIAN_FRONTEND=noninteractive\n\n# Needed for string substitution\nSHELL [\"/bin/bash\", \"-c\"]\n# Pick up some TF dependencies\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub && \\\n    apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-${CUDA/./-} \\\n        libcublas-${CUDA/./-} \\\n        cuda-nvrtc-${CUDA/./-} \\\n        libcufft-${CUDA/./-} \\\n        libcurand-${CUDA/./-} \\\n        libcusolver-${CUDA/./-} \\\n        libcusparse-${CUDA/./-} \\\n        curl \\\n        libcudnn8=${CUDNN}+cuda${CUDA} \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        software-properties-common \\\n        unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install TensorRT if not building for PowerPC\n# NOTE: libnvinfer uses cuda11.1 versions\nRUN [[ \"${ARCH}\" = \"ppc64le\" ]] || { apt-get update && \\\n        apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub && \\\n        echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\"  > /etc/apt/sources.list.d/tensorRT.list && \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0 \\\n        libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0 \\\n        && apt-get clean \\\n        && rm -rf /var/lib/apt/lists/*; }\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda-11.0/targets/x86_64-linux/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH\n\n# Link the libcuda stub to the location where tensorflow is searching for it and reconfigure\n# dynamic linker run-time bindings\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \\\n    && echo \"/usr/local/cuda/lib64/stubs\" > /etc/ld.so.conf.d/z-cuda-stubs.conf \\\n    && ldconfig\n"
}