{
  "startTime": 1674218591394,
  "endTime": 1674218592645,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 35,
        "columnStart": 23,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 35,
        "columnStart": 23,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ==============================================================================\n#  Copyright 2019-2020 Intel Corporation\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n# ==============================================================================\n# Docker file to setup build envrionment for nGraph-TensorFlow\n\nFROM ubuntu:18.04\nARG build_options\n\nENV NGRAPH_TF_VERSION=master\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    vim \\\n    python \\\n    python-pip \\\n    python3-pip \\\n    git \\\n    unzip zip wget \\\n    sudo \\\n    zlib1g zlib1g-dev bash-completion \\\n    build-essential cmake \\\n    clang-format-3.9 \\\n    shellcheck \\\n    libusb-1.0-0-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir -U virtualenv==16.0.0\n\n#install latest cmake\nADD https://cmake.org/files/v3.19/cmake-3.19.2-Linux-x86_64.sh /cmake-3.19.2-Linux-x86_64.sh\nRUN mkdir /opt/cmake\nRUN sh /cmake-3.19.2-Linux-x86_64.sh --prefix=/opt/cmake --skip-license\nRUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake\nRUN cmake --version\n\n#install Bazelisk\nRUN mkdir /opt/bazelisk\nADD https://github.com/bazelbuild/bazelisk/releases/download/v1.7.4/bazelisk-linux-amd64 /opt/bazelisk/bazelisk-linux-amd64\nRUN chmod +x /opt/bazelisk/bazelisk-linux-amd64 && ln -s /opt/bazelisk/bazelisk-linux-amd64 /usr/local/bin/bazel\nRUN bazel\n\nRUN git clone -b ${NGRAPH_TF_VERSION} https://github.com/tensorflow/ngraph-bridge.git /ngraph-bridge\n\nWORKDIR /ngraph-bridge\nRUN echo \"Using build options: $build_options\" && python3 ./build_ngtf.py $build_options\n"
}