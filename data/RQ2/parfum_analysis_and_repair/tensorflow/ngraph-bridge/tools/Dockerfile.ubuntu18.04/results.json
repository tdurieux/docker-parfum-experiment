{
  "startTime": 1674250719768,
  "endTime": 1674250720243,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 30,
        "columnStart": 23,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 30,
        "columnStart": 23,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ==============================================================================\n#  Copyright 2019-2020 Intel Corporation\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n# ==============================================================================\n# Docker file to setup build envrionment for nGraph-TensorFlow\n\nFROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    vim \\\n    python \\\n    python-pip \\\n    python3-pip \\\n    git \\\n    unzip zip wget \\\n    sudo \\\n    zlib1g zlib1g-dev bash-completion \\\n    build-essential cmake \\\n    clang-format-3.9 && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir -U virtualenv==16.0.0\n\n#install latest cmake\nADD https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.sh /cmake-3.7.2-Linux-x86_64.sh\nRUN mkdir /opt/cmake\nRUN sh /cmake-3.7.2-Linux-x86_64.sh --prefix=/opt/cmake --skip-license\nRUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake\nRUN cmake --version\n\n#Install Bazel\nADD https://github.com/bazelbuild/bazel/releases/download/0.25.2/bazel-0.25.2-installer-linux-x86_64.sh ./bazel-0.25.2-installer-linux-x86_64.sh\nRUN bash bazel-0.25.2-installer-linux-x86_64.sh\nRUN bazel\n\n#install gcc-4.8 and register both 7 and 4.8 with alternatives\nRUN apt-get update && apt-get install --no-install-recommends -y gcc-4.8 g++-4.8 && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8 && \\\n  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7\n"
}