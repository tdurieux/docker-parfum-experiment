{
  "startTime": 1674217666485,
  "endTime": 1674217667293,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        git \\\n        libcurl3-dev \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        zip \\\n        zlib1g-dev \\\n        openjdk-8-jdk \\\n        openjdk-8-jre-headless \\\n        python3 \\\n        python3-numpy \\\n        python3-dev \\\n        python3-pip \\\n        python3-wheel \\\n        python3-setuptools \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Running bazel inside a `docker build` command causes trouble, cf:\n#   https://github.com/bazelbuild/bazel/issues/134\n# The easiest solution is to set up a bazelrc file forcing --batch.\nRUN echo \"startup --batch\" >>/etc/bazel.bazelrc\n# Similarly, we need to workaround sandboxing issues:\n#   https://github.com/bazelbuild/bazel/issues/418\nRUN echo \"build --spawn_strategy=standalone --genrule_strategy=standalone\" \\\n    >>/etc/bazel.bazelrc\n# Install the most recent bazel release.\nENV BAZEL_VERSION 0.15.2\nWORKDIR /\nRUN mkdir /bazel && \\\n    cd /bazel && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -O https://github.com/bazelbuild/bazel/releases/download/$BAZEL_VERSION/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    curl -H \"User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36\" -fSsL -o /bazel/LICENSE.txt https://raw.githubusercontent.com/bazelbuild/bazel/master/LICENSE && \\\n    chmod +x bazel-*.sh && \\\n    ./bazel-$BAZEL_VERSION-installer-linux-x86_64.sh && \\\n    cd / && \\\n    rm -f /bazel/bazel-$BAZEL_VERSION-installer-linux-x86_64.sh\n\n# Download and build TensorFlow.\n\nRUN git clone --depth 1 https://github.com/tensorflow/tensorflow.git && \\\n    cd tensorflow && \\\n    git checkout r1.11\nWORKDIR /tensorflow\n\nENV CI_BUILD_PYTHON python3\nRUN pip3 install --no-cache-dir --upgrade pip setuptools\nRUN pip3 install --no-cache-dir keras\n\n# --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\nRUN ln -s /usr/bin/python3 /usr/bin/python  && tensorflow/tools/ci_build/builds/configured CPU \\\n    bazel build -c opt --copt=-march=\"haswell\" \\\n        tensorflow/tools/pip_package:build_pip_package --verbose_failures && \\\n    bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip && \\\n    pip3 --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl && \\\n    rm -rf /tmp/pip && \\\n    rm -rf /root/.cache\n\nWORKDIR /\n\nADD staging/requirements.txt /app/requirements.txt\n\nRUN pip3 install --no-cache-dir -r /app/requirements.txt\n\nADD staging/ /app\n\nWORKDIR /app\n\nCMD [\"/bin/sh\", \"player_wrapper.sh\"]\n"
}