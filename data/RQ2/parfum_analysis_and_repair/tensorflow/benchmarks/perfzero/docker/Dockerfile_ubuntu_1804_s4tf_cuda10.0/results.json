{
  "startTime": 1674255317692,
  "endTime": 1674255318784,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 38,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 62,
        "columnStart": 22,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 111,
        "columnStart": 22,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedDockerfile": "# Ubuntu 18.04 Python3 with CUDA 10 and the following:\n#  - Installs tf-nightly-gpu (this is TF 2.0)\n#  - Installs requirements.txt for tensorflow/models\n# Additionally also installs:\n#  - Latest S4TF development snapshot for cuda 10.0\n\nFROM nvidia/cuda:10.0-base-ubuntu18.04 as base\nARG tensorflow_pip_spec=\"tf-nightly-gpu\"\nARG local_tensorflow_pip_spec=\"\"\nARG extra_pip_specs=\"\"\nARG swift_tf_url=https://storage.googleapis.com/swift-tensorflow-artifacts/nightlies/latest/swift-tensorflow-DEVELOPMENT-cuda10.0-cudnn7-ubuntu18.04.tar.gz\n\n# setup.py passes the base path of local .whl file is chosen for the docker image.\n# Otherwise passes an empty existing file from the context.\nCOPY ${local_tensorflow_pip_spec} /${local_tensorflow_pip_spec}\n\n# Pick up some TF dependencies\n# cublas-dev and libcudnn7-dev only needed because of libnvinfer-dev which may not\n# really be needed.\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-10-0 \\\n        cuda-cublas-10-0 \\\n        cuda-cublas-dev-10-0 \\\n        cuda-cufft-10-0 \\\n        cuda-curand-10-0 \\\n        cuda-cusolver-10-0 \\\n        cuda-cusparse-10-0 \\\n        libcudnn7=7.6.2.24-1+cuda10.0  \\\n        libcudnn7-dev=7.6.2.24-1+cuda10.0  \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libzmq3-dev \\\n        libpng-dev \\\n        pkg-config \\\n        software-properties-common \\\n        unzip \\\n        lsb-core \\\n        curl && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends libnvinfer5=5.1.5-1+cuda10.0 \\\n    libnvinfer-dev=5.1.5-1+cuda10.0 \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\n# Add google-cloud-sdk to the source list\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\nRUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -\n\n# Install extras needed by most models\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n      git \\\n      ca-certificates \\\n      wget \\\n      htop \\\n      zip \\\n      google-cloud-sdk && rm -rf /var/lib/apt/lists/*;\n\n# Install / update Python and Python3\nRUN apt-get install -y --no-install-recommends \\\n      python3 \\\n      python3-dev \\\n      python3-pip \\\n      python3-setuptools \\\n      python3-venv && rm -rf /var/lib/apt/lists/*;\n\n\n# Upgrade pip, need to use pip3 and then pip after this or an error\n# is thrown for no main found.\nRUN pip3 install --no-cache-dir --upgrade pip\n# setuptools upgraded to fix install requirements from model garden.\nRUN pip install --no-cache-dir wheel\nRUN pip install --no-cache-dir --upgrade setuptools google-api-python-client pyyaml google-cloud google-cloud-bigquery mock\nRUN pip install --no-cache-dir absl-py\nRUN pip install --no-cache-dir --upgrade --force-reinstall ${tensorflow_pip_spec} ${extra_pip_specs}\nRUN pip install --no-cache-dir tfds-nightly\nRUN pip install --no-cache-dir -U scikit-learn\n\nRUN curl -f https://raw.githubusercontent.com/tensorflow/models/master/official/requirements.txt > /tmp/requirements.txt\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n\nRUN pip freeze\n\n### Install Swift deps.\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        git \\\n        python \\\n        python-dev \\\n        python-pip \\\n        python-setuptools \\\n        python-tk \\\n        python3 \\\n        python3-pip \\\n        python3-setuptools \\\n        clang \\\n        libcurl4-openssl-dev \\\n        libicu-dev \\\n        libpython-dev \\\n        libpython3-dev \\\n        libncurses5-dev \\\n        libxml2 \\\n        libblocksruntime-dev && rm -rf /var/lib/apt/lists/*;\n\n# Download and extract S4TF\nWORKDIR /swift-tensorflow-toolchain\nRUN if ! curl -fSsL --retry 5 $swift_tf_url -o swift.tar.gz; \\\n    then sleep 30 && curl -fSsL --retry 5 $swift_tf_url -o swift.tar.gz; \\\n    fi;\n\nRUN mkdir usr \\\n    && tar -xzf swift.tar.gz --directory=usr --strip-components=1 \\\n    && rm swift.tar.gz\nENV PATH=\"/swift-tensorflow-toolchain/usr/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/swift-tensorflow-toolchain/usr/lib/swift/linux/:${LD_LIBRARY_PATH}\"\n"
}