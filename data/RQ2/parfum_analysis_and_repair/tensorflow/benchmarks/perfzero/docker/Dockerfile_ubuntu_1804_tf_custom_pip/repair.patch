diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tensorflow/benchmarks/perfzero/docker/Dockerfile_ubuntu_1804_tf_custom_pip b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tensorflow/benchmarks/perfzero/docker/Dockerfile_ubuntu_1804_tf_custom_pip/repaired.Dockerfile
index 69abee6..45cec11 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tensorflow/benchmarks/perfzero/docker/Dockerfile_ubuntu_1804_tf_custom_pip
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tensorflow/benchmarks/perfzero/docker/Dockerfile_ubuntu_1804_tf_custom_pip/repaired.Dockerfile
@@ -35,13 +35,13 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
         software-properties-common \
         unzip \
         lsb-core \
-        curl
+        curl && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && \
-        apt-get install nvinfer-runtime-trt-repo-ubuntu1804-5.0.2-ga-cuda10.0 \
+        apt-get install -y --no-install-recommends nvinfer-runtime-trt-repo-ubuntu1804-5.0.2-ga-cuda10.0 \
         && apt-get update \
         && apt-get install -y --no-install-recommends libnvinfer5=5.0.2-1+cuda10.0 \
-        && apt-get clean
+        && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # For CUDA profiling, TensorFlow requires CUPTI.
 ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH
@@ -51,7 +51,7 @@ ENV LANG C.UTF-8
 
 # Add google-cloud-sdk to the source list
 RUN echo "deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
-RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
+RUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
 
 # Install extras needed by most models
 RUN apt-get update && apt-get install -y --no-install-recommends \
@@ -61,7 +61,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
       wget \
       htop \
       zip \
-      google-cloud-sdk
+      google-cloud-sdk && rm -rf /var/lib/apt/lists/*;
 
 # Install / update Python and Python3
 RUN apt-get install -y --no-install-recommends \
@@ -69,20 +69,20 @@ RUN apt-get install -y --no-install-recommends \
       python3-dev \
       python3-pip \
       python3-setuptools \
-      python3-venv
+      python3-venv && rm -rf /var/lib/apt/lists/*;
 
 
 # Setup Python3 environment
-RUN pip3 install --upgrade pip==9.0.1
+RUN pip3 install --no-cache-dir --upgrade pip==9.0.1
 # setuptools upgraded to fix install requirements from model garden.
-RUN pip3 install wheel
-RUN pip3 install --upgrade setuptools google-api-python-client pyyaml google-cloud google-cloud-bigquery
-RUN pip3 install absl-py
-RUN pip3 install --upgrade --force-reinstall /tensorflow-0.0.1-cp36-cp36m-linux_x86_64.whl ${extra_pip_specs}
-RUN pip3 install tfds-nightly
-RUN pip3 install -U scikit-learn
-
-RUN curl https://raw.githubusercontent.com/tensorflow/models/master/official/requirements.txt > /tmp/requirements.txt
-RUN pip3 install -r /tmp/requirements.txt
+RUN pip3 install --no-cache-dir wheel
+RUN pip3 install --no-cache-dir --upgrade setuptools google-api-python-client pyyaml google-cloud google-cloud-bigquery
+RUN pip3 install --no-cache-dir absl-py
+RUN pip3 install --no-cache-dir --upgrade --force-reinstall /tensorflow-0.0.1-cp36-cp36m-linux_x86_64.whl ${extra_pip_specs}
+RUN pip3 install --no-cache-dir tfds-nightly
+RUN pip3 install --no-cache-dir -U scikit-learn
+
+RUN curl -f https://raw.githubusercontent.com/tensorflow/models/master/official/requirements.txt > /tmp/requirements.txt
+RUN pip3 install --no-cache-dir -r /tmp/requirements.txt
 
 RUN pip3 freeze