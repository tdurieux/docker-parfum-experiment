diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tensorflow/benchmarks/perfzero/docker/Dockerfile_ubuntu_1804_tf_cuda_11_py36 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tensorflow/benchmarks/perfzero/docker/Dockerfile_ubuntu_1804_tf_cuda_11_py36/repaired.Dockerfile
index 9598094..5042a2c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tensorflow/benchmarks/perfzero/docker/Dockerfile_ubuntu_1804_tf_cuda_11_py36
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tensorflow/benchmarks/perfzero/docker/Dockerfile_ubuntu_1804_tf_cuda_11_py36/repaired.Dockerfile
@@ -33,7 +33,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
         software-properties-common \
         unzip \
         lsb-core \
-        curl
+        curl && rm -rf /var/lib/apt/lists/*;
 
 # For CUDA profiling, TensorFlow requires CUPTI.
 ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda-11.2/lib64:$LD_LIBRARY_PATH
@@ -43,7 +43,7 @@ ENV LANG C.UTF-8
 
 # Add google-cloud-sdk to the source list
 RUN echo "deb http://packages.cloud.google.com/apt cloud-sdk-$(lsb_release -c -s) main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
-RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
+RUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
 
 # Install extras needed by most models
 RUN apt-get update && apt-get install -y --no-install-recommends \
@@ -52,7 +52,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
       wget \
       htop \
       zip \
-      google-cloud-sdk
+      google-cloud-sdk && rm -rf /var/lib/apt/lists/*;
 
 # Install / update Python and Python3
 RUN apt-get install -y --no-install-recommends \
@@ -60,27 +60,27 @@ RUN apt-get install -y --no-install-recommends \
       python3-dev \
       python3-pip \
       python3-setuptools \
-      python3-venv
+      python3-venv && rm -rf /var/lib/apt/lists/*;
 
 # Upgrade pip, need to use pip3 and then pip after this or an error
 # is thrown for no main found.
-RUN pip3 install --upgrade pip
+RUN pip3 install --no-cache-dir --upgrade pip
 # setuptools upgraded to fix install requirements from model garden.
-RUN pip install wheel
-RUN pip install --upgrade setuptools google-api-python-client==1.8.0 pyyaml google-cloud google-cloud-bigquery google-cloud-datastore mock
-RUN pip install absl-py
-RUN pip install --upgrade --force-reinstall ${tensorflow_pip_spec} ${extra_pip_specs}
-RUN pip install tfds-nightly
-RUN pip install -U scikit-learn
+RUN pip install --no-cache-dir wheel
+RUN pip install --no-cache-dir --upgrade setuptools google-api-python-client==1.8.0 pyyaml google-cloud google-cloud-bigquery google-cloud-datastore mock
+RUN pip install --no-cache-dir absl-py
+RUN pip install --no-cache-dir --upgrade --force-reinstall ${tensorflow_pip_spec} ${extra_pip_specs}
+RUN pip install --no-cache-dir tfds-nightly
+RUN pip install --no-cache-dir -U scikit-learn
 # Install dependnecies needed for tf.distribute test utils
-RUN pip install dill tblib portpicker
+RUN pip install --no-cache-dir dill tblib portpicker
 
-RUN curl https://raw.githubusercontent.com/tensorflow/models/master/official/requirements.txt > /tmp/requirements.txt
-RUN pip install -r /tmp/requirements.txt
+RUN curl -f https://raw.githubusercontent.com/tensorflow/models/master/official/requirements.txt > /tmp/requirements.txt
+RUN pip install --no-cache-dir -r /tmp/requirements.txt
 
-RUN pip install tf-estimator-nightly
-RUN pip install tensorflow-text-nightly
-RUN pip install psutil
+RUN pip install --no-cache-dir tf-estimator-nightly
+RUN pip install --no-cache-dir tensorflow-text-nightly
+RUN pip install --no-cache-dir psutil
 
 # RUN nvidia-smi