diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tensorflow/networking/tensorflow_networking/mpi/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tensorflow/networking/tensorflow_networking/mpi/Dockerfile/repaired.Dockerfile
index 0512986..10c590a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tensorflow/networking/tensorflow_networking/mpi/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tensorflow/networking/tensorflow_networking/mpi/Dockerfile/repaired.Dockerfile
@@ -35,25 +35,25 @@ ARG PIP=pip${_PY_SUFFIX}
 # See http://bugs.python.org/issue19846
 ENV LANG C.UTF-8
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     ${PYTHON} \
-    ${PYTHON}-pip
+    ${PYTHON}-pip && rm -rf /var/lib/apt/lists/*;
 
 RUN ${PIP} --no-cache-dir install --upgrade \
     pip \
     setuptools
 
 # Some TF tools expect a "python" binary
-RUN ln -s $(which ${PYTHON}) /usr/local/bin/python 
+RUN ln -s $(which ${PYTHON}) /usr/local/bin/python
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     build-essential \
     curl \
     git \
     wget \
     openjdk-8-jdk \
     ${PYTHON}-dev \
-    swig
+    swig && rm -rf /var/lib/apt/lists/*;
 
 RUN ${PIP} --no-cache-dir install \
     Pillow \
@@ -70,7 +70,7 @@ RUN ${PIP} --no-cache-dir install \
     enum34
 
 #RUN apt-get install -y libopenmpi-dev  # Test using OpenMPI library
-RUN apt-get install -y mpich            # Test using the MPICH library
+RUN apt-get install --no-install-recommends -y mpich && rm -rf /var/lib/apt/lists/*; # Test using the MPICH library
 
 # Install bazel
 ARG BAZEL_VERSION=0.24.1
@@ -83,4 +83,4 @@ RUN mkdir /bazel && \
 
 ADD . /tf_networking
 WORKDIR /tf_networking
-RUN TF_NEED_MPI=1 ./configure && bazel build -c opt //tensorflow_networking/mpi:all
+RUN TF_NEED_MPI=1 ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && bazel build -c opt //tensorflow_networking/mpi:all