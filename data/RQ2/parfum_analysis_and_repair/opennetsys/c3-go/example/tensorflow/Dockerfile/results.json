{
  "startTime": 1674249682991,
  "endTime": 1674249683576,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.9.0\n\n# Install TensorFlow C library\nRUN curl -f -L \\\n   \"https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-cpu-linux-x86_64-1.3.0.tar.gz\" | \\\n   tar -C \"/usr/local\" -xz\n\nRUN ldconfig\n\n# Hide some warnings\nENV TF_CPP_MIN_LOG_LEVEL 2\n\n# Install Go (https://github.com/docker-library/golang/blob/221ee92559f2963c1fe55646d3516f5b8f4c91a4/1.9/stretch/Dockerfile)\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    g++ \\\n    gcc \\\n    libc6-dev \\\n    make \\\n    pkg-config \\\n    wget \\\n    curl \\\n    git \\\n  && rm -rf /var/lib/apt/lists/*\n\nENV GOLANG_VERSION 1.10.3\n\nRUN set -eux; \\\n\n# this \"case\" statement is generated via \"update.sh\"\n  dpkgArch=\"$(dpkg --print-architecture)\"; \\\n  case \"${dpkgArch##*-}\" in \\\n    amd64) goRelArch='linux-amd64'; goRelSha256='fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035' ;; \\\n    armhf) goRelArch='linux-armv6l'; goRelSha256='d3df3fa3d153e81041af24f31a82f86a21cb7b92c1b5552fb621bad0320f06b6' ;; \\\n    arm64) goRelArch='linux-arm64'; goRelSha256='355128a05b456c9e68792143801ad18e0431510a53857f640f7b30ba92624ed2' ;; \\\n    i386) goRelArch='linux-386'; goRelSha256='3d5fe1932c904a01acb13dae07a5835bffafef38bef9e5a05450c52948ebdeb4' ;; \\\n    ppc64el) goRelArch='linux-ppc64le'; goRelSha256='f3640b2f0990a9617c937775f669ee18f10a82e424e5f87a8ce794a6407b8347' ;; \\\n    s390x) goRelArch='linux-s390x'; goRelSha256='34385f64651f82fbc11dc43bdc410c2abda237bdef87f3a430d35a508ec3ce0d' ;; \\\n    *) goRelArch='src'; goRelSha256='567b1cc66c9704d1c019c50bef946272e911ec6baf244310f87f4e678be155f2'; \\\n      echo >&2; echo >&2 \"warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source\"; echo >&2 ;; \\\n  esac; \\\n\n  url=\"https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz\"; \\\n  wget -O go.tgz \"$url\"; \\\n  echo \"${goRelSha256}  *go.tgz\" | sha256sum -c -; \\\n  tar -C /usr/local -xzf go.tgz; \\\n  rm go.tgz; \\\n\n  if [ \"$goRelArch\" = 'src' ]; then \\\n    echo >&2; \\\n    echo >&2 'error: UNIMPLEMENTED'; \\\n    echo >&2 'TODO install golang-any from jessie-backports for GOROOT_BOOTSTRAP (and uninstall after build)'; \\\n    echo >&2; \\\n    exit 1; \\\n  fi; \\\n\n  export PATH=\"/usr/local/go/bin:$PATH\"; \\\n  go version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\n# Download InceptionV3 model\nRUN mkdir -p /model && \\\n  wget \"https://storage.googleapis.com/download.tensorflow.org/models/inception5h.zip\" -O /model/inception.zip && \\\n  unzip /model/inception.zip -d /model && \\\n  chmod -R 777 /model\n\n"
}