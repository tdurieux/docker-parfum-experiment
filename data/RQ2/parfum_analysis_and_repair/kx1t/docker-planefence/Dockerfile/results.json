{
  "startTime": 1674251938582,
  "endTime": 1674251940145,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghcr.io/sdr-enthusiasts/docker-baseimage:python\n\nRUN set -x && \\\n# define packages needed for installation and general management of the container:\n    TEMP_PACKAGES=() && \\\n    KEPT_PACKAGES=() && \\\n    KEPT_PIP3_PACKAGES=() && \\\n    KEPT_RUBY_PACKAGES=() && \\\n#\n    TEMP_PACKAGES+=(pkg-config) && \\\n    TEMP_PACKAGES+=(git) && \\\n    TEMP_PACKAGES+=(gcc) && \\\n    TEMP_PACKAGES+=(python3-dev) && \\\n    TEMP_PACKAGES+=(pkg-config) && \\\n#\n    KEPT_PACKAGES+=(unzip) && \\\n    KEPT_PACKAGES+=(psmisc) && \\\n    KEPT_PACKAGES+=(procps nano) && \\\n    KEPT_PACKAGES+=(python3-numpy) && \\\n    KEPT_PACKAGES+=(python3-pandas) && \\\n    KEPT_PACKAGES+=(python3-dateutil) && \\\n    KEPT_PACKAGES+=(jq) && \\\n    KEPT_PACKAGES+=(gnuplot-nox) && \\\n    KEPT_PACKAGES+=(lighttpd) && \\\n    KEPT_PACKAGES+=(perl) && \\\n    KEPT_PACKAGES+=(iputils-ping) && \\\n    KEPT_PACKAGES+=(ruby) && \\\n    KEPT_PACKAGES+=(php-cgi) && \\\n#\n    KEPT_PIP3_PACKAGES+=(tzlocal) && \\\n    KEPT_PIP3_PACKAGES+=(discord-webhook) && \\\n    KEPT_PIP3_PACKAGES+=(requests) && \\\n    KEPT_PIP3_PACKAGES+=(geopy) && \\\n#\n    KEPT_RUBY_PACKAGES+=(twurl) && \\\n#\n# Install all the apt, pip3, and gem (ruby) packages:\n    apt-get update -q && \\\n    apt-get install -q -o APT::Autoremove::RecommendsImportant=0 -o APT::Autoremove::SuggestsImportant=0 -o Dpkg::Options::=\"--force-confold\" -y --no-install-recommends  --no-install-suggests ${TEMP_PACKAGES[@]} ${KEPT_PACKAGES[@]} && \\\n    gem install twurl && \\\n    pip3 install --no-cache-dir ${KEPT_PIP3_PACKAGES[@]} && \\\n#\n# Do this here while we still have git installed:\n    git config --global advice.detachedHead false && \\\n    echo \"main_($(git ls-remote https://github.com/kx1t/docker-planefence HEAD | awk '{ print substr($1,1,7)}'))_$(date +%y-%m-%d-%T%Z)\" > /root/.buildtime && \\\n# Clean up\n    echo Uninstalling $TEMP_PACKAGES && \\\n    apt-get remove -y -q ${TEMP_PACKAGES[@]} && \\\n    apt-get autoremove -q -o APT::Autoremove::RecommendsImportant=0 -o APT::Autoremove::SuggestsImportant=0 -y && \\\n    apt-get clean -y -q && \\\n    rm -rf \\\n      /src/* \\\n      /tmp/* \\\n      /var/lib/apt/lists/* \\\n      /.dockerenv \\\n      /git\n#\nCOPY rootfs/ /\n#\nCOPY ATTRIBUTION.md /usr/share/planefence/stage/attribution.txt\n#\nRUN set -x && \\\n#\n#\n# Install Planefence (it was copied in with /rootfs, so this is\n# mainly moving files to the correct location and creating symlinks):\n    chmod a+x /usr/share/planefence/*.sh /usr/share/planefence/*.py /usr/share/planefence/*.pl /etc/services.d/planefence/run && \\\n    ln -s /usr/share/socket30003/socket30003.cfg /usr/share/planefence/socket30003.cfg && \\\n    ln -s /usr/share/planefence/config_tweeting.sh /root/config_tweeting.sh && \\\n    curl -f --compressed -s -L -o /usr/share/planefence/airlinecodes.txt https://raw.githubusercontent.com/kx1t/planefence-airlinecodes/main/airlinecodes.txt && \\\n    curl -f --compressed -s -L -o /usr/share/planefence/stage/Silhouettes.zip https://github.com/rikgale/VRSOperatorFlags/raw/main/Silhouettes.zip && \\\n#\n# Ensure the planefence and plane-alert config is available for lighttpd:\n    ln -sf /etc/lighttpd/conf-available/88-planefence.conf /etc/lighttpd/conf-enabled && \\\n    ln -sf /etc/lighttpd/conf-available/88-plane-alert.conf /etc/lighttpd/conf-enabled && \\\n# Install dump1090.socket30003. Note - this could move to a lower layer, but we need to have rootfs copied in.\n# In any case, it doesn't take much (build)time.\n    pushd /src/socket30003 && \\\n       ./install.pl -install /usr/share/socket30003 -data /run/socket30003 -log /run/socket30003 -output /run/socket30003 -pid /run/socket30003 && \\\n       chmod a+x /usr/share/socket30003/*.pl && \\\n       rm -rf /run/socket30003/install-* && \\\n    popd && \\\n#\n# Do some other stuff\n    echo \"alias dir=\\\"ls -alsv\\\"\" >> /root/.bashrc && \\\n    echo \"alias nano=\\\"nano -l\\\"\" >> /root/.bashrc\n\n#\n# No need for SHELL and ENTRYPOINT as those are inherited from the base image\n#\n\nEXPOSE 80\n"
}