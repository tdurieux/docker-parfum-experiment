{
  "startTime": 1674256214536,
  "endTime": 1674256214960,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Docker manifest file builds a container with:\n# - sshd running (linux containers don't usually have it)\n# - Caché 2016.2 and\n# - it handles container PID 1 via ccontainermain which offers various flags\n#\n# build the new image with:\n# $ docker build --force-rm --no-cache -t cache:2016.2 .\n#--\n\n# pull from this repository\n# note that if you don't have the distribution you're after it will be automatically\n# downloaded from Docker central hub repository (you'll have to create a user there)\n#\nFROM tutum/centos:latest\n\nMAINTAINER user <user@company.com>\n\n# setup vars section___________________________________________________________________\n#\nENV TMP_INSTALL_DIR=/tmp/distrib\n\n# vars for Caché silent install\nENV ISC_PACKAGE_INSTANCENAME=\"CACHE\"\nENV ISC_PACKAGE_INSTALLDIR=\"/usr/cachesys\"\nENV ISC_PACKAGE_UNICODE=\"Y\"\n\n# Caché distribution file________________________________________________________________\n# set-up and install Caché from distrib_tmp dir\nRUN mkdir ${TMP_INSTALL_DIR}\nWORKDIR ${TMP_INSTALL_DIR}\n\n# update OS + dependencies & run Caché silent install___________________________________\nRUN yum -y update && \\\n    yum -y install tar hostname net-tools which wget java && \\\n\n# Replace the following location with that of your Cache 2016.2 kit\n    wget -O - 'https://replace_this_with_your_server/distrib/cache-2016.2.0.736.0-lnxrhx64.tar.gz' \\\n\n# Alternatively, if you're comfortable with all parties with access to to this docker image having\n# access to these WRC credentials via the `docker history` command, comment out the above line,\n# uncomment the following lines and fill in your WRC_USERNAME and WRC_PASSWORD to automatically\n# fetch the kit from InterSystems' WRC.\n \n#    WRC_USERNAME=\"user@company.com\" && \\\n#    WRC_PASSWORD=\"your_password_here\" && \\\n#      wget -qO /dev/null --keep-session-cookies --save-cookies /dev/stdout --post-data=\"UserName=$WRC_USERNAME&Password=$WRC_PASSWORD\" 'https://login.intersystems.com/login/SSO.UI.Login.cls?referrer=https%253A//wrc.intersystems.com/wrc/login.csp' \\\n#        | wget -O - --load-cookies /dev/stdin 'https://wrc.intersystems.com/wrc/WRC.StreamServer.cls?FILE=/wrc/distrib/cache-2016.2.0.736.0-lnxrhx64.tar.gz' \\\n\n      | tar xvfzC - . && \\\n    ./cache-*/cinstall_silent && \\\n    rm -rf ${TMP_INSTALL_DIR}/* && \\\n    ccontrol stop $ISC_PACKAGE_INSTANCENAME quietly && rm -rf /var/cache/yum\nCOPY cache.key $ISC_PACKAGE_INSTALLDIR/mgr/\n\n# Workaround for an overlayfs bug which prevents Cache from starting with <PROTECT> errors\nCOPY ccontrol-wrapper.sh /usr/bin/\nRUN cd /usr/bin                     && \\\n    rm ccontrol                     && \\\n    mv ccontrol-wrapper.sh ccontrol && \\\n    chmod 555 ccontrol\n\n# TCP sockets that can be accessed if user wants to (see 'docker run -p' flag)\nEXPOSE 57772 1972 22\n\n# Caché container main process PID 1 (https://github.com/zrml/ccontainermain)\nWORKDIR /\nADD ccontainermain .\n\nENTRYPOINT  [\"/ccontainermain\"]\n\n# run via:\n# docker run -d -p 57772:57772 -p 2222:22 -e ROOT_PASS=\"linux\" <docker_image_id> -i=CACHE -xstart=/run.sh\n#\n# more options & explinations\n# $ docker run -d\t\t\t// detached in the background; accessed only via network\n# --privileged\t\t\t\t// only for kernel =<3.16 like CentOS 6 & 7; it gives us root privileges to tune the kernel etc.\n# -h <host_name>\t\t\t// you can specify a host name\n# -p 57772:57772 \t\t\t// TCP socket port mapping as host_external:container_internal\n# -p 0.0.0.0:2222:22\t\t// this means allow 2222 to be accesses from any ip on this host and map it to port 22 in the container\n# -e ROOT_PASS=\"linux\"\t\t// -e for env var; tutum/centos extension for root pwd definition\n# <docker_image_id> \t\t// see docker images to fetch the right name & tag or id\n# \t\t\t\t\t\t\t// after the Docker image id, we can specify all the flags supported by 'ccontainermain'\n#\t\t\t\t\t\t\t// see this page for more info https://github.com/zrml/ccontainermain\n# -i=CACHE\t\t\t\t\t// this is the Cachè instance name\n# -xstart=/run.sh\t\t\t// eXecute another service at startup time\n#\t\t\t\t\t\t\t// run.sh starts sshd (part of tutum centos container)\n#\t\t\t\t\t\t\t// for more info see https://docs.docker.com/reference/run/\n#\n"
}