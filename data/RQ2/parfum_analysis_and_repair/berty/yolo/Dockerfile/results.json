{
  "startTime": 1674247975400,
  "endTime": 1674247976070,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 16,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# zsign builder\nFROM            alpine:3.14 as zsign-build\nRUN             apk add --no-cache --virtual .build-deps g++ clang clang-static openssl-dev openssl-libs-static && \\\n                apk add --no-cache zip unzip git\nRUN             git clone https://github.com/zhlynn/zsign && \\\n                cd zsign && \\\n                git reset --hard eeec1810f7b437d46d623c94c010c4ffafe26fd6\nWORKDIR         zsign\nRUN             clang++ ./*.cpp ./common/*.cpp /usr/lib/libcrypto.a -O3 -o zsign -static\n#RUN             g++ ./*.cpp common/*.cpp -lcrypto -O3 -o zsign\n\n# web build\nFROM            node:10 as web-build\nWORKDIR         /app\nCOPY            ./web/package*.json ./web/yarn.* ./\nRUN yarn install && yarn cache clean;\nCOPY            ./web ./\nRUN             yarn build\n\n# go build\nFROM            golang:1.17-alpine as go-build\nRUN             apk add --update --no-cache git gcc musl-dev make perl-utils bash\nRUN             GO111MODULE=on go install github.com/gobuffalo/packr/v2/packr2@v2.8.3\nWORKDIR         /go/src/berty.tech/yolo\nENV             GO111MODULE=on \\\n                GOPROXY=proxy.golang.org\nCOPY            go.* ./\nRUN             go mod download\nCOPY            go ./go/\nRUN             rm -rf web web\nCOPY            --from=web-build /app/build web/dist\nWORKDIR         /go/src/berty.tech/yolo/go\nRUN             make packr\nRUN             make install\n\n# minimalist runtime\nFROM            alpine:3.14\nRUN             apk add --update --no-cache ca-certificates libstdc++ unzip zip\nCOPY            --from=go-build /go/bin/yolo /bin/\nCOPY            --from=zsign-build zsign/zsign /bin/\nENTRYPOINT      [\"yolo\"]\nEXPOSE          8000\n"
}