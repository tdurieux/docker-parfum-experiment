{
  "startTime": 1674248300532,
  "endTime": 1674248301971,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 128,
        "columnStart": 2,
        "columnEnd": 8
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 62,
        "columnStart": 24,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 62,
        "columnStart": 24,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Docker image encapsulates the Laika BOSS: Object Scanning System by\n# Lockheed Martin Corporation from https://github.com/lmco/laikaboss\n#\n# To run this image after installing Docker using a standalone instance, use a command like\n# the following, replacing “~/laikaboss-workdir\" with the path to the location of your\n# Laika BOSS working directory:\n#\n# sudo docker run --rm -it -v ~/laikaboss-workdir:/home/nonroot/workdir wzod/laikaboss\n#\n# To run this image using a networked instance, use a command like this:\n#\n# sudo docker run --rm -it -p 5558:5558 -v ~/laikaboss-workdir:/home/nonroot/workdir wzod/laikaboss\n#\n# Before running Laika BOSS, create the  ~/laikaboss-workdir and make it world-accessible\n# (“chmod a+xwr\").\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM ubuntu:14.04\nMAINTAINER Zod (@wzod)\n\nENV DEBIAN_FRONTEND noninteractive\n\nUSER root\nRUN apt-get update && \\\n  apt-get -y --no-install-recommends install software-properties-common && \\\n  apt-add-repository -y multiverse && \\\n  apt-get -qq update && apt-get install --no-install-recommends -y \\\n  automake \\\n  build-essential \\\n  git \\\n  jq \\\n  libfuzzy-dev \\\n  libimage-exiftool-perl \\\n  liblzma5 \\\n  libssl-dev \\\n  libtool \\\n  libzmq3 \\\n  make \\\n  python-cffi \\\n  python-dev \\\n  python-gevent \\\n  python-ipy \\\n  python-m2crypto \\\n  python-pexpect \\\n  python-pip \\\n  python-progressbar \\\n  python-pyclamd \\\n  python-zmq \\\n  unrar \\\n  unzip \\\n  wget && \\\n\n# Update setuptools\n  pip install --no-cache-dir --upgrade setuptools && rm -rf /var/lib/apt/lists/*;\n\n# Retrieve current version of Yara via wget, verify known good hash and install Yara\nRUN cd /tmp && \\\n  wget -O yara.v3.5.0.tar.gz \"https://github.com/VirusTotal/yara/archive/v3.5.0.tar.gz\" && \\\n  echo 4bc72ee755db85747f7e856afb0e817b788a280ab5e73dee42f159171a9b5299\\ \\ yara.v3.5.0.tar.gz > sha256sum-yara && \\\n  sha256sum -c sha256sum-yara && \\\n\n  tar vxzf yara.v3.5.0.tar.gz && \\\n  cd yara-3.5.0/ && \\\n  ./bootstrap.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && \\\n  cd /tmp && \\\n\n# Retrieve yara-python from the project's site using recursive option and install yara-python\n  git clone --recursive https://github.com/VirusTotal/yara-python && \\\n  cd yara-python/ && \\\n  python setup.py build && \\\n  python setup.py install && \\\n  cd /tmp && \\\n\n# Retrieve pyexiftool, verify known good hash and install pyexiftool\n  wget -O pyexiftool-master.zip https://github.com/smarnach/pyexiftool/archive/master.zip && \\\n  echo c243efbd226ad00333d03d16a39dc08ceb2ad277bd21b5247a2821156097debd\\ \\ pyexiftool-master.zip > sha256sum-pyexiftool && \\\n  sha256sum -c sha256sum-pyexiftool && \\\n\n  unzip pyexiftool-master.zip && \\\n  cd pyexiftool-master/ && \\\n  python setup.py build && \\\n  python setup.py install && \\\n  cd /tmp && \\\n\n# Retrieve current version of pefile via wget, verify known good hash and install pefile\n  wget -O pefile-1.2.10-139.tar.gz \"https://github.com/erocarrera/pefile/archive/pefile-1.2.10-139.tar.gz\" && \\\n  echo 3297cb72e6a51befefc3d9b27ec7690b743ee826538629ecf68f4eee64f331ab\\ \\ pefile-1.2.10-139.tar.gz > sha256sum-pefile && \\\n  sha256sum -c sha256sum-pefile && \\\n\n  tar vxzf pefile-1.2.10-139.tar.gz && \\\n  cd pefile-pefile-1.2.10-139/ && \\\n  sed -i s/1\\.2\\.10.*/1\\.2\\.10\\.139\\'/ pefile.py && \\\n  python setup.py build && \\\n  python setup.py install && \\\n  cd /tmp && \\\n\n# Retrieve current version of jq via wget, verify known good hash and move to /usr/local/bin\n  wget -O jq \"https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64\" && \\\n  echo c6b3a7d7d3e7b70c6f51b706a3b90bd01833846c54d32ca32f0027f00226ff6d\\ \\ jq > sha256sum-jq && \\\n  sha256sum -c sha256sum-jq && \\\n  chmod 755 jq && \\\n  mv jq /usr/local/bin/ && rm yara.v3.5.0.tar.gz\n\n# Install additional dependencies\nRUN cd /tmp && \\\n  pip install --no-cache-dir fluent-logger \\\n  future \\\n  interruptingcow \\\n  javatools \\\n  msgpack-python \\\n  olefile \\\n  pylzma \\\n  py-unrar2 \\\n  ssdeep\n\n# Add nonroot user, clone repo and setup environment\nRUN groupadd -r nonroot && \\\n  useradd -r -g nonroot -d /home/nonroot -s /sbin/nologin -c \"Nonroot User\" nonroot && \\\n  mkdir /home/nonroot && \\\n  chown -R nonroot:nonroot /home/nonroot\n\n# Clone Laika BOSS from GitHub as nonroot user\nUSER nonroot\nRUN cd /home/nonroot && \\\n  git clone https://github.com/lmco/laikaboss.git\n\n# Run setup script to install Laika BOSS framework, client library, modules and associated scripts (laika.py, laikad.py, cloudscan.py)\nUSER root\nRUN cd /home/nonroot/laikaboss/ && \\\n  python setup.py build && \\\n  python setup.py install\n\n# Clean up and run ldconfig\nRUN ldconfig && \\\n  apt-get remove -y --purge automake build-essential libtool && \\\n  apt-get autoremove -y --purge && \\\n  apt-get clean -y && \\\n  rm -rf /var/lib/apt/lists/*\n\nUSER nonroot\nENV HOME /home/nonroot\nENV USER nonroot\nWORKDIR /home/nonroot/workdir\n\nENTRYPOINT echo \"To run the standalone scanner, execute laika.py against a file like so:\" && printf \"\\n\"\"laika.py <filename> | jq -C . | less -r\" && printf \"\\n\\n\"\"To run the networked instance, first execute laikad.py and use cloudscan against like so:\" && printf \"\\n\\n\"\"laikad.py &\" && printf \"\\n\\n\"\"cloudscan.py <filename> | jq -C . | less -r\" && printf \"\\n\\n\" && /bin/bash\n"
}