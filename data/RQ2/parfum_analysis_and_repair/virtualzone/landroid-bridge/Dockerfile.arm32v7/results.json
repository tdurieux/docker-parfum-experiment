{
  "startTime": 1674250800559,
  "endTime": 1674250801602,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.11 AS qemu\nRUN apk --update add --no-cache curl\nRUN cd /tmp && \\\n    curl -f -L https://github.com/balena-io/qemu/releases/download/v3.0.0%2Bresin/qemu-3.0.0+resin-arm.tar.gz | tar zxvf - -C . && mv qemu-3.0.0+resin-arm/qemu-arm-static .\n\nFROM arm32v7/node:12-alpine AS prod\nCOPY --from=qemu /tmp/qemu-arm-static /usr/bin/\nRUN apk add --no-cache --update build-base python2 git\nWORKDIR /usr/src/app\n# Add package.json\nCOPY package*.json .\n# Restore node modules\nRUN npm install --production && npm cache clean --force;\n\n## BUILD STEP\nFROM prod AS build\n# Add everything else not excluded by .dockerignore\nCOPY . .\n# Build it\nRUN npm install && \\\n    npm run build-prod && npm cache clean --force;\n\n## FINAL STEP\nFROM prod as final\nARG BUILD_DATE\nARG VCS_REF\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n        org.label-schema.name=\"Landroid Bridge\" \\\n        org.label-schema.description=\"Bridge for connecting the Worx Landroid S Lawn Mower to home automation systems like OpenHAB or FHEM.\" \\\n        org.label-schema.vcs-ref=$VCS_REF \\\n        org.label-schema.vcs-url=\"https://github.com/virtualzone/landroid-bridge\" \\\n        org.label-schema.schema-version=\"1.0\"\nCOPY --from=build /usr/src/app/dist ./dist\nCOPY www/ ./www/\nEXPOSE 3000\nCMD [ \"node\", \"dist/server.js\" ]\n"
}