{
  "startTime": 1674253947796,
  "endTime": 1674253948752,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-alpine AS prod\n\nWORKDIR /usr/src/app\n\n# Add package.json\nCOPY package*.json .\n\nRUN apk update && apk add --no-cache --virtual build-dependencies build-base git python\n\n# Restore node modules\nRUN npm install --production && npm cache clean --force;\n\n\n\n## BUILD STEP\nFROM prod AS build\n\n# Add everything else not excluded by .dockerignore\nCOPY . .\n\n# Build it\nRUN npm install && \\\n    npm run build-prod && npm cache clean --force;\n\n\n\n## FINAL STEP\nFROM prod as final\n\nRUN apk del build-dependencies\n\nCOPY --from=build /usr/src/app/dist ./dist\nCOPY www/ ./www/\n\nEXPOSE 3000\nCMD [ \"node\", \"dist/server.js\" ]\n"
}