{
  "startTime": 1674215900077,
  "endTime": 1674215903086,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "FROM nvcr.io/nvidia/pytorch:22.04-py3\n\n# 言語の設定\nRUN apt-get update && apt-get install --no-install-recommends -y language-pack-ja-base language-pack-ja && rm -rf /var/lib/apt/lists/*;\nENV LANG='ja_JP.UTF-8'\n\n# 必要なもののインストール\nRUN apt-get install --no-install-recommends -y p7zip-full zip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir natsort cshogi timm\n\n# WORKDIRを設定\nWORKDIR /root\n\n# TensorRTをリンクするため、所定の位置にシンボリックリンクを張る\n# パスが通っているはずなので本当はいらない気がするんだけど、ないとリンクエラーになる(include側は本当に不要かも)\n# リンクする順番の問題とかだったりするかもしれない\nARG trt_dir_name=\"TensorRT-8.2.2.1\"\nRUN mkdir ${trt_dir_name}\nRUN ln -s /usr/include/x86_64-linux-gnu/ ./${trt_dir_name}/include\nRUN mkdir ${trt_dir_name}/lib\nRUN ln -s /usr/lib/x86_64-linux-gnu/libnv*.so ./${trt_dir_name}/lib/\n\n# Miacisの導入\nRUN git clone https://github.com/SakodaShintaro/Miacis -b master\nWORKDIR /root/Miacis/build\nRUN echo \"cmake -DCMAKE_BUILD_TYPE=Release ../src\" > update.sh && \\\n    echo \"make -j$(nproc) Miacis_shogi_categorical\" >> update.sh && \\\n    chmod +x update.sh && \\\n    ./update.sh\n\n# dotfileの導入\nWORKDIR /root\nRUN git clone https://github.com/SakodaShintaro/dotfiles && ./dotfiles/setup.sh\n"
}