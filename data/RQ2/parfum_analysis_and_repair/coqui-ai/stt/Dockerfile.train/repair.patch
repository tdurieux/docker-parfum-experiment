diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/coqui-ai/stt/Dockerfile.train b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/coqui-ai/stt/Dockerfile.train/repaired.Dockerfile
index 6c4c4f3..ab9d640 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/coqui-ai/stt/Dockerfile.train
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/coqui-ai/stt/Dockerfile.train/repaired.Dockerfile
@@ -50,7 +50,7 @@ RUN add-apt-repository ppa:deadsnakes/ppa -y
 
 RUN apt-get -qq update && apt-get -qq install -y --no-install-recommends \
     python3.7 \
-    python3.7-venv
+    python3.7-venv && rm -rf /var/lib/apt/lists/*;
 
 RUN python3 -m venv --system-site-packages /venv
 ENV VIRTUAL_ENV=/venv
@@ -61,7 +61,7 @@ RUN python3.7 -m venv /tflite-venv
 ENV PATH="$VIRTUAL_ENV/bin:/tflite-venv/bin:$PATH"
 
 # Make sure pip and its dependencies are up-to-date
-RUN pip install --upgrade pip wheel setuptools
+RUN pip install --no-cache-dir --upgrade pip wheel setuptools
 
 WORKDIR /code
 
@@ -72,7 +72,7 @@ COPY training/coqui_stt_training/GRAPH_VERSION /code/training/coqui_stt_training
 
 # Build CTC decoder first, to avoid clashes on incompatible versions upgrades
 RUN cd native_client/ctcdecode && make NUM_PROCESSES=$(nproc) bindings
-RUN pip install --upgrade native_client/ctcdecode/dist/*.whl
+RUN pip install --no-cache-dir --upgrade native_client/ctcdecode/dist/*.whl
 
 COPY setup.py /code/setup.py
 COPY VERSION /code/VERSION
@@ -82,14 +82,14 @@ RUN mkdir -p /code/kenlm/build/
 COPY --from=kenlm-build /code/kenlm/build/bin /code/kenlm/build/bin
 
 # Pre-built native client tools
-RUN LATEST_STABLE_RELEASE=$(curl "https://api.github.com/repos/coqui-ai/STT/releases/latest" | python -c 'import sys; import json; print(json.load(sys.stdin)["tag_name"])') \
+RUN LATEST_STABLE_RELEASE=$( curl -f "https://api.github.com/repos/coqui-ai/STT/releases/latest" | python -c 'import sys; import json; print(json.load(sys.stdin)["tag_name"])') \
     bash -c 'curl -L https://github.com/coqui-ai/STT/releases/download/${LATEST_STABLE_RELEASE}/native_client.tflite.Linux.tar.xz | tar -xJvf -'
 
 # Install STT
 # No need for the decoder since we did it earlier
 # TensorFlow GPU should already be installed on the base image,
 # and we don't want to break that
-RUN DS_NODECODER=y DS_NOTENSORFLOW=y pip install --upgrade -e .
+RUN DS_NODECODER=y DS_NOTENSORFLOW=y pip --no-cache-dir install --upgrade -e .
 
 # Install coqui_stt_training (inside tf-venv) for exporting models using tflite
 RUN /tflite-venv/bin/pip install -e .