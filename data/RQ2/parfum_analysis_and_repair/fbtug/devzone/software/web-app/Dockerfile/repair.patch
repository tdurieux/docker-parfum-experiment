diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fbtug/devzone/software/web-app/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fbtug/devzone/software/web-app/Dockerfile/repaired.Dockerfile
index e799052..fc145e8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fbtug/devzone/software/web-app/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fbtug/devzone/software/web-app/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM ruby:2.5.1
 
 RUN apt-get update
-RUN apt-get install -y apt-transport-https sudo libssl-dev
+RUN apt-get install --no-install-recommends -y apt-transport-https sudo libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Postgresql
 ENV PG_APP_HOME="/etc/docker-postgresql"\
@@ -18,7 +18,7 @@ ENV PG_BINDIR=/usr/lib/postgresql/${PG_VERSION}/bin \
 RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
     && echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' > /etc/apt/sources.list.d/pgdg.list \
     && apt-get update \
-    && DEBIAN_FRONTEND=noninteractive apt-get install -y acl \
+    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y acl \
         postgresql-${PG_VERSION} postgresql-client-${PG_VERSION} postgresql-contrib-${PG_VERSION} \
     && ln -sf ${PG_DATADIR}/postgresql.conf /etc/postgresql/${PG_VERSION}/main/postgresql.conf \
     && ln -sf ${PG_DATADIR}/pg_hba.conf /etc/postgresql/${PG_VERSION}/main/pg_hba.conf \
@@ -30,34 +30,34 @@ COPY postgresql/runtime/ ${PG_APP_HOME}/
 COPY postgresql/entrypoint.sh /sbin/entrypoint.sh
 RUN chmod 755 /sbin/entrypoint.sh
 
-RUN apt-get install -y git curl imagemagick # apt-utils
+RUN apt-get install --no-install-recommends -y git curl imagemagick && rm -rf /var/lib/apt/lists/*; # apt-utils
 
 # Install Node
-RUN curl -sL https://deb.nodesource.com/setup_8.x | bash -
-RUN apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Install Yarn
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
 RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
-RUN apt-get update && apt-get -y install yarn
+RUN apt-get update && apt-get -y --no-install-recommends install yarn && rm -rf /var/lib/apt/lists/*;
 
 # Install database deps
-RUN apt-get install -y libpq-dev # postgresql-contrib
+RUN apt-get install --no-install-recommends -y libpq-dev && rm -rf /var/lib/apt/lists/*; # postgresql-contrib
 
 # Install FarmBot Web App
 WORKDIR /opt
 #RUN git clone https://github.com/FarmBot/Farmbot-Web-App -b master --depth=10
 RUN wget "https://github.com/FarmBot/Farmbot-Web-App/archive/v6.4.2.tar.gz" -O farmbot-web-app.tar.gz
-RUN tar -xvf farmbot-web-app.tar.gz
+RUN tar -xvf farmbot-web-app.tar.gz && rm farmbot-web-app.tar.gz
 RUN mv /opt/Farmbot-Web-App-* /opt/Farmbot-Web-App
 
 WORKDIR /opt/Farmbot-Web-App
 RUN gem install bundler
-RUN npm install yarn 
-RUN bundle install 
-RUN yarn install
+RUN npm install yarn && npm cache clean --force;
+RUN bundle install
+RUN yarn install && yarn cache clean;
 
-ADD database.yml config/database.yml    
+ADD database.yml config/database.yml   
 ADD application.yml config/application.yml
 
 RUN nohup /sbin/entrypoint.sh