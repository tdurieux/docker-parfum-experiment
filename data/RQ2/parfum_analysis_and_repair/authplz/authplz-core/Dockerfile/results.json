{
  "startTime": 1674250792222,
  "endTime": 1674250793196,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:latest\nMAINTAINER Ryan Kurte <ryankurte@gmail.com>\nLABEL Description=\"Authentication and User Management Microservice\"\n\n# Build app\nCOPY . /go/src/github.com/authplz/authplz-core\nWORKDIR /go/src/github.com/authplz/authplz-core\nRUN make install\nRUN GOOS=linux GOARCH=amd64 CGO_ENABLED=0 make build\n\n# Build UI\nFROM node:latest\nRUN git clone https://github.com/authplz/authplz-ui.git\nWORKDIR /authplz-ui\nRUN npm install && npm cache clean --force;\nRUN npm run build:prod\n\n# Build release image\nFROM alpine:latest \nWORKDIR /app/\nRUN adduser -D authplz\nRUN chown -R authplz:authplz /app\nRUN chmod -R o+rx /app\n\nCOPY --from=0 /go/src/github.com/authplz/authplz-core/authplz .\nCOPY --from=0 /go/src/github.com/authplz/authplz-core/authplz.yml config/authplz.yml\nCOPY --from=0 /go/src/github.com/authplz/authplz-core/templates templates\n\nCOPY --from=1 /authplz-ui/build static\n\nENV HOST=0.0.0.0\nENV PORT=9000\nENV EXTERNAL_ADDRESS=http://authplz.local\n\n#USER authplz\nCMD [\"/app/authplz -c /app/config/authplz.yml\"] \n"
}