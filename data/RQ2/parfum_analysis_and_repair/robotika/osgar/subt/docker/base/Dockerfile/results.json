{
  "startTime": 1674254245001,
  "endTime": 1674254248798,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 5,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.2.2-cudnn8-runtime-ubuntu18.04 as stage1\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        bash-completion \\\n        build-essential \\\n        cmake \\\n        cppcheck \\\n        gdb \\\n        git \\\n        iputils-ping \\\n        libarchive-tools \\\n        lsb-release \\\n        mc \\\n        net-tools \\\n        python3-pip \\\n        python3-venv \\\n        software-properties-common \\\n        sudo \\\n        vim \\\n        wget \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# set default timezone\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y \\\n    tzdata \\\n && ln -fs /usr/share/zoneinfo/Europe/Prague /etc/localtime \\\n && dpkg-reconfigure --frontend noninteractive tzdata \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install ROS and required packages\nRUN /bin/sh -c 'echo \"deb [trusted=yes] http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list' \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y \\\n    libgoogle-glog0v5 \\\n    python-catkin-tools \\\n    python-laser-geometry \\\n    python-rosdep \\\n    python-rosinstall \\\n    ros-melodic-desktop \\\n    ros-melodic-joystick-drivers \\\n    ros-melodic-octomap-rviz-plugins \\\n    ros-melodic-octomap-server \\\n    ros-melodic-pointcloud-to-laserscan \\\n    ros-melodic-robot-localization \\\n    ros-melodic-rotors-control \\\n    ros-melodic-rtabmap-ros \\\n    ros-melodic-rviz-imu-plugin \\\n    ros-melodic-spacenav-node \\\n    ros-melodic-tf2-sensor-msgs \\\n    ros-melodic-twist-mux \\\n    ros-melodic-control-toolbox \\\n    ros-melodic-controller-manager \\\n    ros-melodic-diff-drive-controller \\\n    ros-melodic-multimaster-launch \\\n    ros-melodic-joint-state-controller \\\n    ros-melodic-joint-trajectory-controller \\\n && rosdep init \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# add gazebo package repository\nRUN /bin/sh -c 'echo \"deb [trusted=yes] http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list' \\\n && /bin/sh -c 'wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -' \\\n && /bin/sh -c 'apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654'\n\n# install ign-blueprint and libignition-launch3-dev\nRUN apt-get update \\\n&& apt-get install --no-install-recommends -y \\\n    ignition-blueprint \\\n    libignition-launch3-dev \\\n    ros-melodic-ros-ign \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# build osrf/subt repository\n# ... TODO one day:\n#  && rosdep update \\\n#  && rosdep install --from-paths src --ignore-src -r \\\nFROM stage1 as build\nWORKDIR /tmp\nRUN mkdir subt-ws \\\n  && cd subt-ws \\\n  && git clone --depth=1 https://github.com/osrf/subt.git src \\\n  && source /opt/ros/melodic/setup.bash \\\n  && catkin_make install -DCMAKE_INSTALL_PREFIX=/opt/subt -DCMAKE_BUILD_TYPE=Release\n\nFROM stage1\n\n# copy the binary packages of osrf/subt\nCOPY --from=build /opt/subt/ /opt/subt/\nCOPY --from=build /tmp/subt-ws/src/.git/refs/heads/master /opt/subt/HEAD\n\nWORKDIR /osgar-ws\n\nRUN /usr/bin/python3 -m venv env\n\nRUN ./env/bin/pip install --no-cache-dir --upgrade pip wheel setuptools\n\nRUN ./env/bin/pip install --no-cache-dir \\\n  \"msgpack==1.0.0\" \\\n  \"numpy==1.19.4\" \\\n  \"protobuf==3.13.0\" \\\n  \"pyzmq==19.0.2\"\n\nRUN ./env/bin/pip install --no-cache-dir \\\n  \"torch==1.8.0+cu111\" -f https://download.pytorch.org/whl/torch_stable.html\n\nRUN ./env/bin/pip install --no-cache-dir \\\n  http://osgar.robotika.cz/subt/pip/opencv/opencv_contrib_python-4.5.2.52-cp36-cp36m-linux_x86_64.whl\n\nENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics,compat32,utility\n\nRUN apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends python-pip python-wheel \\\n  && apt-get clean \\\n  && pip2 install --no-cache-dir --user \\\n    \"msgpack==1.0.0\" \\\n    \"pyzmq==19.0.2\" && rm -rf /var/lib/apt/lists/*;\n\n# disable crazy threading behavior inside openblas (and maybe also in opencv)\n# https://github.com/xianyi/OpenBLAS#setting-the-number-of-threads-using-environment-variables\nENV OMP_NUM_THREADS=1\n"
}