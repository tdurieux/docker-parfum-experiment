{
  "startTime": 1674254729195,
  "endTime": 1674254730791,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 2,
        "columnEnd": 65
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 226,
        "lineEnd": 226,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 226,
        "lineEnd": 226,
        "columnStart": 22,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ros:melodic\n\nENV DEBIAN_FRONTEND noninteractive\n\n# install dependencies via apt\nENV DEBCONF_NOWARNINGS yes\n\n# install ros packages\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ros-melodic-catkin \\\n    ros-melodic-cv-bridge \\\n    ros-melodic-tf2-geometry-msgs \\\n    ros-melodic-image-transport \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  apt-get upgrade -y -qq --no-install-recommends && \\\n  : \"basic dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    build-essential \\\n    pkg-config \\\n    cmake \\\n    git \\\n    wget \\\n    less \\\n    curl \\\n    vim \\\n    tar \\\n    unzip && \\\n  : \"ROS dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    python && \\\n  : \"g2o dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libgoogle-glog-dev \\\n    libatlas-base-dev \\\n    libsuitesparse-dev \\\n    libglew-dev && \\\n  : \"OpenCV dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libgtk-3-dev \\\n    libjpeg-dev \\\n    libpng++-dev \\\n    libtiff-dev \\\n    libopenexr-dev \\\n    libwebp-dev \\\n    ffmpeg \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libavutil-dev \\\n    libswscale-dev \\\n    libavresample-dev && \\\n  : \"other dependencies\" && \\\n  apt-get install --no-install-recommends -y -qq \\\n    libyaml-cpp-dev && \\\n  : \"remove cache\" && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/*\n\nARG CMAKE_INSTALL_PREFIX=/usr/local\nARG NUM_THREADS=1\n\nENV CPATH=${CMAKE_INSTALL_PREFIX}/include:${CPATH}\nENV C_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${C_INCLUDE_PATH}\nENV CPLUS_INCLUDE_PATH=${CMAKE_INSTALL_PREFIX}/include:${CPLUS_INCLUDE_PATH}\nENV LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LIBRARY_PATH}\nENV LD_LIBRARY_PATH=${CMAKE_INSTALL_PREFIX}/lib:${LD_LIBRARY_PATH}\n\n# Eigen\nARG EIGEN3_VERSION=3.3.7\nWORKDIR /tmp\nRUN set -x && \\\n  wget -q https://gitlab.com/libeigen/eigen/-/archive/${EIGEN3_VERSION}/eigen-${EIGEN3_VERSION}.tar.bz2 && \\\n  tar xf eigen-${EIGEN3_VERSION}.tar.bz2 && \\\n  rm -rf eigen-${EIGEN3_VERSION}.tar.bz2 && \\\n  cd eigen-${EIGEN3_VERSION} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV Eigen3_DIR=${CMAKE_INSTALL_PREFIX}/share/eigen3/cmake\n\n# g2o\nARG G2O_COMMIT=9b41a4ea5ade8e1250b9c1b279f3a9c098811b5a\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/RainerKuemmerle/g2o.git && \\\n  cd g2o && \\\n  git checkout ${G2O_COMMIT} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_SHARED_LIBS=ON \\\n    -DBUILD_UNITTESTS=OFF \\\n    -DBUILD_WITH_MARCH_NATIVE=OFF \\\n    -DG2O_USE_CHOLMOD=OFF \\\n    -DG2O_USE_CSPARSE=ON \\\n    -DG2O_USE_OPENGL=OFF \\\n    -DG2O_USE_OPENMP=ON \\\n    -DG2O_BUILD_APPS=OFF \\\n    -DG2O_BUILD_EXAMPLES=OFF \\\n    -DG2O_BUILD_LINKED_APPS=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV g2o_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/g2o\n\n# OpenCV\nARG OPENCV_VERSION=3.4.10\nWORKDIR /tmp\nRUN set -x && \\\n  wget -q https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \\\n  unzip -q ${OPENCV_VERSION}.zip && \\\n  rm -rf ${OPENCV_VERSION}.zip && \\\n  cd opencv-${OPENCV_VERSION} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    -DBUILD_DOCS=OFF \\\n    -DBUILD_EXAMPLES=OFF \\\n    -DBUILD_JASPER=OFF \\\n    -DBUILD_OPENEXR=OFF \\\n    -DBUILD_PERF_TESTS=OFF \\\n    -DBUILD_TESTS=OFF \\\n    -DBUILD_opencv_apps=OFF \\\n    -DBUILD_opencv_dnn=OFF \\\n    -DBUILD_opencv_ml=OFF \\\n    -DBUILD_opencv_python_bindings_generator=OFF \\\n    -DENABLE_CXX11=ON \\\n    -DENABLE_FAST_MATH=ON \\\n    -DWITH_EIGEN=ON \\\n    -DWITH_FFMPEG=ON \\\n    -DWITH_OPENMP=ON \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV OpenCV_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/opencv\n\n# DBoW2\nARG DBOW2_COMMIT=687fcb74dd13717c46add667e3fbfa9828a7019f\nWORKDIR /tmp\nRUN set -x && \\\n  git clone https://github.com/shinsumicco/DBoW2.git && \\\n  cd DBoW2 && \\\n  git checkout ${DBOW2_COMMIT} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX} \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf *\nENV DBoW2_DIR=${CMAKE_INSTALL_PREFIX}/lib/cmake/DBoW2\n\n# protobuf\nWORKDIR /tmp\nRUN set -x && \\\n  apt-get update -y -qq && \\\n  apt-get upgrade -y -qq --no-install-recommends && \\\n  apt-get install --no-install-recommends -y -qq autogen autoconf libtool && \\\n  wget -q https://github.com/google/protobuf/archive/v3.6.1.tar.gz && \\\n  tar xf v3.6.1.tar.gz && \\\n  cd protobuf-3.6.1 && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${CMAKE_INSTALL_PREFIX} --enable-static=no && \\\n  make -j${NUM_THREADS} && \\\n  make install && \\\n  cd /tmp && \\\n  rm -rf * && \\\n  apt-get purge -y -qq autogen autoconf libtool && \\\n  apt-get autoremove -y -qq && \\\n  rm -rf /var/lib/apt/lists/* && rm v3.6.1.tar.gz\n\n# OpenVSLAM\nWORKDIR /\nARG OPENVSLAM_COMMIT=026827ebd59825de42463f853e910e9ccb44f0ef\nRUN set -x && \\\n  git clone https://github.com/frantisekbrabec/openvslam.git && \\\n  cd openvslam && \\\n  git checkout ${OPENVSLAM_COMMIT} && \\\n  mkdir -p build && \\\n  cd build && \\\n  cmake \\\n    -DBUILD_WITH_MARCH_NATIVE=OFF \\\n    -DUSE_PANGOLIN_VIEWER=OFF \\\n    -DUSE_SOCKET_PUBLISHER=OFF \\\n    -DUSE_STACK_TRACE_LOGGER=ON \\\n    -DBOW_FRAMEWORK=DBoW2 \\\n    -DBUILD_TESTS=OFF \\\n    .. && \\\n  make -j${NUM_THREADS} && \\\n  rm -rf CMakeCache.txt CMakeFiles Makefile cmake_install.cmake example src && \\\n  chmod -R 777 ./*\n\n# Copy SRCP2 env to workspace\nCOPY ./srcp2-competitors /srcp2-competitors/\n\n# OpenVSLAMROS\nWORKDIR /openvslam/ros/1/\nRUN /bin/bash -c 'source /srcp2-competitors/ros_workspace/install/setup.bash; cd /openvslam/ros/1/; catkin_make \\\n    -DBUILD_WITH_MARCH_NATIVE=OFF \\\n    -DUSE_PANGOLIN_VIEWER=OFF \\\n    -DUSE_SOCKET_PUBLISHER=OFF \\\n    -DUSE_STACK_TRACE_LOGGER=ON \\\n    -DBOW_FRAMEWORK=DBoW2'\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update && apt-get install --no-install-recommends -y python-pip python3-pip openssh-client vim less && rm -rf /var/lib/apt/lists/*;\nRUN python -m pip install pyzmq\n\nRUN /usr/bin/python3 -m pip install scikit-build\nRUN /usr/bin/python3 -m pip install msgpack pyzmq shapely scipy\nRUN /usr/bin/python3 -m pip install --install-option=\"-j$(nproc)\" \"opencv-python>=3.4.10,<3.4.11\"\n\nRUN mkdir -p /rover_workspace/src\n\n# Alien Control\nWORKDIR /rover_workspace/src\nRUN set -x && \\\n  git clone https://github.com/frantisekbrabec/aliencontrol.git\n\nCOPY ./osgar/moon/ros_launchfiles /rover_workspace/src/aliencontrol/launch\nRUN chmod 777 /rover_workspace\n\nRUN rm -rf /rover_workspace/devel\nRUN rm -rf /rover_workspace/build\n\nRUN  /bin/bash -c \"source /openvslam/ros/1/devel/setup.bash; cd /rover_workspace; catkin_make\"\n\nRUN echo \"source /rover_workspace/devel/setup.bash\" >> /root/.bashrc\n\nCOPY ./osgar /osgar/\n\nRUN rm -rf /osgar/.git\nRUN rm -rf /osgar/.github\nRUN rm -rf /osgar/research_scripts\nRUN rm -rf /osgar/disparity_images\n\nWORKDIR /\nENTRYPOINT [\"/osgar/moon/docker/rover/entrypoint.bash\"]\nCMD [\"/bin/bash\"]\n"
}