diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/decaf-project/decaf/docker/decaf/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/decaf-project/decaf/docker/decaf/Dockerfile/repaired.Dockerfile
index 28e131b..8ed3b64 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/decaf-project/decaf/docker/decaf/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/decaf-project/decaf/docker/decaf/Dockerfile/repaired.Dockerfile
@@ -1,19 +1,19 @@
 FROM ubuntu:16.04
 
-RUN apt-get update 
-RUN apt-get install libsdl1.2-dev -y
-RUN apt-get install zlib1g-dev -y
-RUN apt-get install libglib2.0-dev -y
-RUN apt-get install libbfd-dev -y
-RUN apt-get install build-essential -y
-RUN apt-get install binutils -y
-RUN apt-get install qemu -y
-RUN apt-get install libboost-dev -y
-RUN apt-get install git -y
-RUN apt-get install libtool -y
-RUN apt-get install autoconf -y
-RUN apt-get install sudo -y
-RUN apt-get install xorg-dev -y
+RUN apt-get update
+RUN apt-get install --no-install-recommends libsdl1.2-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends zlib1g-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libglib2.0-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libbfd-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends build-essential -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends binutils -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends qemu -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libboost-dev -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends git -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends libtool -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends autoconf -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends sudo -y && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends xorg-dev -y && rm -rf /var/lib/apt/lists/*;
 
 
 
@@ -29,15 +29,15 @@ WORKDIR /decafroot/DECAF/decaf/shared/sleuthkit
 RUN rm ./config/ltmain.sh
 RUN ln -s /usr/share/libtool/build-aux/ltmain.sh ./config/ltmain.sh
 RUN autoconf
-RUN ./configure
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
 RUN make
 WORKDIR /decafroot/DECAF/decaf
-RUN ./configure --disable-tcg-taint --target-list=i386-softmmu
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-tcg-taint --target-list=i386-softmmu
 
 RUN make
 
-RUN export uid=1000 gid=1000 
-RUN mkdir -p /home/db/ 
+RUN export uid=1000 gid=1000
+RUN mkdir -p /home/db/
 RUN echo "db:x:${uid}:${gid}:db,,,:/home/db:/bin/ bash" >> /etc/passwd
 RUN echo "db:x:${uid}:" >> /etc/group
 RUN echo "db ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/db
@@ -48,9 +48,9 @@ USER db
 ENV HOME /home/db
 
 
-RUN apt-get update 
+RUN apt-get update
 #setup samba to share file between guest os and host for qemu
-RUN apt-get install samba -y
+RUN apt-get install --no-install-recommends samba -y && rm -rf /var/lib/apt/lists/*;
 WORKDIR /etc/samba/
 RUN echo "[QEMU]" >> /etc/samba/smb.conf
 RUN echo "	path=/app/" >>/etc/samba/smb.conf
@@ -62,12 +62,12 @@ RUN cat /etc/samba/smb.conf
 #RUN /etc/init.d/samba start
 
 WORKDIR /decafroot/
-RUN apt install wget
-RUN wget https://github.com/google/protobuf/releases/download/v3.5.0/protobuf-all-3.5.0.tar.gz 
-RUN tar -xvf protobuf-all-3.5.0.tar.gz
+RUN apt install -y --no-install-recommends wget && rm -rf /var/lib/apt/lists/*;
+RUN wget https://github.com/google/protobuf/releases/download/v3.5.0/protobuf-all-3.5.0.tar.gz
+RUN tar -xvf protobuf-all-3.5.0.tar.gz && rm protobuf-all-3.5.0.tar.gz
 WORKDIR /decafroot/protobuf-3.5.0
 RUN ./autogen.sh
-RUN ./configure --prefix=/usr/
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/
 RUN make
 RUN make install