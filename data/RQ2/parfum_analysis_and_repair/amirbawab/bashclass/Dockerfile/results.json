{
  "startTime": 1674253277528,
  "endTime": 1674253278540,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 13,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 13,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 13,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nENV HOME /root\n\n# Intall required packages\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y git curl wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y g++ make && rm -rf /var/lib/apt/lists/*;\n\n# Install cmake\nRUN curl -f \"https://cmake.org/files/v3.9/cmake-3.9.0-rc3.tar.gz\" > /tmp/cmake.tar.gz\nRUN cd /tmp; tar -xf cmake.tar.gz && rm cmake.tar.gz\nWORKDIR \"/tmp/cmake-3.9.0-rc3\"\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make; make install\n\n# Install boost\nRUN curl -f -L \"https://downloads.sourceforge.net/project/boost/boost/1.63.0/boost_1_63_0.tar.gz\" > /tmp/boost.tar.gz\nRUN cd /tmp; tar -xf boost.tar.gz && rm boost.tar.gz\nWORKDIR \"/tmp/boost_1_63_0/\"\nRUN ./bootstrap.sh --prefix=/usr/local; ./b2 install\n\n# Install BASH4.4\nRUN curl -f -L \"https://ftp.gnu.org/gnu/bash/bash-4.4.tar.gz\" > /tmp/bash-4.4.tar.gz\nRUN cd /tmp; tar -xf bash-4.4.tar.gz && rm bash-4.4.tar.gz\nWORKDIR  /tmp/bash-4.4\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make; make install\nRUN mv /bin/bash /bin/bash.old\nRUN ln -s /usr/local/bin/bash /bin/bash\n\n# Install BashClass\nRUN cd $HOME; git   clone https://github.com/amirbawab/BashClass\nWORKDIR $HOME/BashClass\nRUN git submodule update --init --recursive\nRUN cmake . -DSYNTAX_ERRORS=\"${PWD}/resources/src/syntax_errors.json\"\\\n            -DSYNTAX_GRAMMAR=\"${PWD}/resources/src/grammar.json\" \\\n            -DLEXICAL_ERRORS=\"${PWD}/resources/src/lexical_errors.json\"\\\n            -DLEXICAL_CONFIG=\"${PWD}/resources/src/lexical_config.json\"\\\n            -DLEXICAL_STATE_MACHINE=\"${PWD}/resources/src/lexical_graph.json\"\nRUN make bashcdev\nRUN make generate_files\nRUN cmake . -DSYNTAX_ERRORS=\"${PWD}/resources/src/syntax_errors.json\"  \\\n            -DSYNTAX_GRAMMAR=\"${PWD}/resources/src/grammar.json\" \\\n            -DLEXICAL_ERRORS=\"${PWD}/resources/src/lexical_errors.json\"\\\n            -DLEXICAL_CONFIG=\"${PWD}/resources/src/lexical_config.json\"\\\n            -DLEXICAL_STATE_MACHINE=\"${PWD}/resources/src/lexical_graph.json\"\nRUN make bashc\n\nCMD /bin/bash\n"
}