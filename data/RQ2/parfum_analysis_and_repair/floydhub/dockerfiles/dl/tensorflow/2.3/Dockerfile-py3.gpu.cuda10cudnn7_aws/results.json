{
  "startTime": 1674254207775,
  "endTime": 1674254208662,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 125
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM floydhub/dl-base:4.1.0-gpu-py3.55\nMAINTAINER Floyd Labs \"support@floydhub.com\"\n\nARG TENSORFLOW_VERSION=v2.3.1\nARG KERAS_VERSION=2.4.0\n\nENV CI_BUILD_PYTHON python\n\n# Configure the build for our CUDA configuration.\nENV LD_LIBRARY_PATH /usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH\nENV TF_CUDA_VERSION 10.2\nENV TF_CUDNN_VERSION 7\nENV TF_NEED_CUDA 1\nENV TF_CUDA_COMPUTE_CAPABILITIES=3.7,7.0\n\n\n\n# Fix build\nENV BAZEL_VERSION 3.1.0\nRUN curl -f -LO \"https://github.com/bazelbuild/bazel/releases/download/${BAZEL_VERSION}/bazel_${BAZEL_VERSION}-linux-x86_64.deb\" \\\n    && dpkg --force-confnew -i bazel_*.deb \\\n    && apt-get clean \\\n    && rm bazel_*.deb\n\n# install deps for tf build :(\nRUN pip --no-cache-dir install \\\n        funcsigs \\\n        pbr \\\n        mock \\\n        wheel \\\n        keras_applications \\\n        keras_preprocessing \\\n        --no-deps \\\n    && rm -rf /pip_pkg \\\n    && rm -rf /tmp/* \\\n    && rm -rf /root/.cache\n\n\n# NOTE: This command uses special flags to build an optimized image for AWS machines.\n# This image might *NOT* work on other machines\n# Clean up pip wheel and Bazel cache when done.\nRUN git clone https://github.com/tensorflow/tensorflow.git \\\n        --branch ${TENSORFLOW_VERSION} \\\n        --single-branch \\\n    && cd tensorflow \\\n    && ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 && LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} tensorflow/tools/ci_build/builds/configured GPU \\\n        bazel build -c opt --copt=-msse3 --copt=-msse4.1 --copt=-msse4.2 \\\n            --copt=-mavx --copt=-mavx2 \\\n            --copt=-mfma \\\n            --cxxopt=\"-D_GLIBCXX_USE_CXX11_ABI=0\" \\\n            --config=cuda --action_env=LD_LIBRARY_PATH=/usr/local/cuda/lib64/stubs:${LD_LIBRARY_PATH} \\\n            --verbose_failures \\\n            tensorflow/tools/pip_package:build_pip_package \\\n    && bazel-bin/tensorflow/tools/pip_package/build_pip_package /tmp/pip \\\n    && pip --no-cache-dir install --upgrade /tmp/pip/tensorflow-*.whl \\\n    && rm -rf /pip_pkg \\\n    && rm -rf /tmp/* \\\n    && rm -rf /root/.cache \\\n    && cd .. && rm -rf tensorflow\n\n# Install Keras\nRUN pip --no-cache-dir install \\\n        git+git://github.com/fchollet/keras.git@${KERAS_VERSION} \\\n    && rm -rf /pip_pkg \\\n    && rm -rf /tmp/* \\\n    && rm -rf /root/.cache\n\n\n# Fix Jupyterlab - see https://github.com/jupyter/jupyter/issues/401\n# TODO: move this on dl-base\nRUN pip --no-cache-dir install --upgrade notebook \\\n    && rm -rf /pip_pkg \\\n    && rm -rf /tmp/* \\\n    && rm -rf /root/.cache"
}