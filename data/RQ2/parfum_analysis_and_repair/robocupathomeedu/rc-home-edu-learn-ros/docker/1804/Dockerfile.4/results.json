{
  "startTime": 1674249129198,
  "endTime": 1674249130818,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker file for RoboCup@HomeEducation and MARRtino apps\n# ROS Melodic, navigation, perception & additional packages\n# Version 4 - 9/8/2020\n\nFROM iocchi/rchomeedu-1804-melodic:base\n\nARG MACHTYPE=default\n\n###### User robot ######\n\nUSER robot\n\n# Libraries\n\n# g2o\n\nRUN mkdir -p $HOME/lib && cd $HOME/lib && \\\n    wget https://www.diag.uniroma1.it/iocchi/marrtino/lib/g2o-marrtino-src.tgz && \\\n    tar xzf g2o-marrtino-src.tgz && \\\n    rm g2o-marrtino-src.tgz && \\\n    cd g2o && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make\n\nRUN echo \"\" >> $HOME/.bashrc && \\\n    echo \"export G2O_ROOT=\\$HOME/lib/g2o\" >> $HOME/.bashrc && \\\n    echo \"export G2O_BIN=\\$HOME/lib/g2o/bin\" >> $HOME/.bashrc && \\\n    echo \"export G2O_LIB=\\$HOME/lib/g2o/lib\" >> $HOME/.bashrc && \\\n    echo \"export LD_LIBRARY_PATH=\\$HOME/lib/g2o/lib:\\${LD_LIBRARY_PATH}\" >> $HOME/.bashrc && \\\n    echo \"\" >> $HOME/.bashrc\n\n\n# Get additional packages\n\nRUN mkdir -p $HOME/src &&  cd $HOME/src && \\\n    git clone https://github.com/Imperoli/gradient_based_navigation.git && \\\n    git clone https://bitbucket.org/ggrisetti/thin_drivers.git && \\\n    git clone https://bitbucket.org/mtlazaro/modim.git\n\nRUN mkdir -p $HOME/src/ros &&  cd $HOME/src/ros && \\\n    git clone https://github.com/seqsense/usb_cam.git  && \\  \n    git clone https://github.com/orbbec/ros_astra_camera.git && \\\n    git clone https://github.com/orbbec/ros_astra_launch.git && \\\n    git clone https://github.com/ros-drivers/urg_c.git && \\\n    git clone https://github.com/ros-drivers/urg_node.git && \\\n    git clone https://github.com/Slamtec/rplidar_ros.git && \\\n    git clone https://github.com/ros-perception/laser_proc.git  && \\\n    git clone https://github.com/RIVeR-Lab/apriltags_ros.git\n#   git clone https://bitbucket.org/iocchi/apriltags_ros.git NOT WORKING\n\n\n# MARRtino ROS node\n\nRUN mkdir -p $HOME/src/srrg && cd $HOME/src/srrg && \\\n    git clone https://gitlab.com/srrg-software/srrg_cmake_modules.git && \\\n    git clone https://gitlab.com/srrg-software/srrg2_orazio.git\n\n\n# srrg_mapper\n\nRUN mkdir -p $HOME/src/srrg && cd $HOME/src/srrg && \\\n    git clone https://gitlab.com/srrg-software/srrg_core.git && \\\n    cd srrg_core && git checkout a8f88898 && cd .. && \\\n    git clone https://gitlab.com/srrg-software/srrg_scan_matcher.git && \\\n    cd srrg_scan_matcher && git checkout 31e7c7ac && cd .. && \\\n    git clone https://gitlab.com/srrg-software/srrg_mapper2d.git && \\\n    cd srrg_mapper2d && git checkout 5ea162d1 && cd .. && \\\n    git clone https://gitlab.com/srrg-software/srrg_mapper2d_ros.git && \\\n    cd srrg_mapper2d_ros && git checkout 9aa14795 && cd ..\n\n\n# patches\nRUN cd $HOME/src/srrg/srrg_mapper2d_ros && \\\n    rm CMakeLists.txt package.xml && \\\n    wget https://www.diag.uniroma1.it/iocchi/marrtino/patches/srrg_mapper2d_ros/CMakeLists.txt && \\\n    wget https://www.diag.uniroma1.it/iocchi/marrtino/patches/srrg_mapper2d_ros/package.xml && \\\n    cd $HOME/src/srrg/srrg_mapper2d_ros/src && \\\n    rm srrg_mapper2d_node.cpp message_handler.cpp && \\\n    wget https://www.diag.uniroma1.it/iocchi/marrtino/patches/srrg_mapper2d_ros/srrg_mapper2d_node.cpp && \\\n    wget https://www.diag.uniroma1.it/iocchi/marrtino/patches/srrg_mapper2d_ros/message_handler.cpp && \\\n    cd $HOME/src/srrg/srrg_scan_matcher/src && \\\n    rm laser_message_tracker.cpp && \\\n    wget https://www.diag.uniroma1.it/iocchi/marrtino/patches/srrg_scan_matcher/laser_message_tracker.cpp\n\n\n\n# Set up .bashrc\n\nRUN echo \"export MARRTINO_APPS_HOME=$HOME/src/marrtino_apps\" >> $HOME/.bashrc\nRUN echo \"export ROBOT_TYPE=stage\" >> $HOME/.bashrc\nRUN echo \"if [ -d /usr/lib/nvidia-384/ ]; then\" >> $HOME/.bashrc\nRUN echo \"  export PATH=\\\"/usr/lib/nvidia-384/bin:\\${PATH}\\\"\" >> $HOME/.bashrc\nRUN echo \"  export LD_LIBRARY_PATH=\\\"/usr/lib/nvidia-384:/usr/lib32/nvidia-384:\\${LD_LIBRARY_PATH}\\\" \" >> $HOME/.bashrc\nRUN echo \"fi\" >> $HOME/.bashrc\n\n# Set and compile ROS packages\n\nRUN cd $HOME/ros/catkin_ws/src && \\\n    ln -s $HOME/src/ros/usb_cam . && \\\n    ln -s $HOME/src/ros/ros_astra_camera . && \\\n    ln -s $HOME/src/ros/ros_astra_launch . && \\\n    ln -s $HOME/src/ros/urg_c . && \\\n    ln -s $HOME/src/ros/urg_node . && \\\n    ln -s $HOME/src/ros/rplidar_ros . && \\\n    ln -s $HOME/src/ros/laser_proc .  && \\\n    ln -s $HOME/src/ros/apriltags_ros . && \\\n    ln -s $HOME/src/gradient_based_navigation . && \\\n    ln -s $HOME/src/srrg/srrg_cmake_modules . && \\\n    ln -s $HOME/src/srrg/srrg2_orazio . && \\\n    ln -s $HOME/src/thin_drivers/thin_msgs . && \\\n    ln -s $HOME/src/thin_drivers/thin_state_publisher . && \\\n    ln -s $HOME/src/srrg/srrg_core . && \\\n    ln -s $HOME/src/srrg/srrg_scan_matcher . && \\\n    ln -s $HOME/src/srrg/srrg_mapper2d . && \\\n    ln -s $HOME/src/srrg/srrg_mapper2d_ros .\n\nRUN echo \"export MARRTINO_VERSION=\\\"docker\\\"\" >> $HOME/.bashrc\nRUN echo \"docker\" >> $HOME/.marrtino_version\n\nRUN if [ \"$MACHTYPE\" = \"aarch64\" ]; then \\\n       /bin/bash -ci \"cd $HOME/ros/catkin_ws; catkin_make -j2\" ; \\\n    elif [ \"$MACHTYPE\" = \"armv7l\" ]; then \\\n       /bin/bash -ci \"cd $HOME/ros/catkin_ws; catkin_make -j1\" ; \\\n    else \\\n       /bin/bash -ci \"cd $HOME/ros/catkin_ws; catkin_make\" ; \\\n    fi\n\n# marrtino_apps\n\nRUN cd $HOME/src && git clone https://bitbucket.org/iocchi/marrtino_apps.git\n\n# rc-home-edu-learn-ros\n\nRUN cd $HOME/src && git clone https://github.com/robocupathomeedu/rc-home-edu-learn-ros.git\n\n\n# Configure web server\n\nUSER root\n\nRUN /bin/bash -ci \"cd /var/www; mv html html.2; ln -s /home/robot/src/marrtino_apps/www html\"\n\nRUN echo \"robot ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/robot\n\n\nUSER robot\n\n# Set working dir and container command\n\nWORKDIR /home/robot\n\nCMD [ \"/bin/bash\", \"-ci\", \"/home/robot/src/marrtino_apps/bringup/1-bringup.bash\", \"-docker\" ]\n\n"
}