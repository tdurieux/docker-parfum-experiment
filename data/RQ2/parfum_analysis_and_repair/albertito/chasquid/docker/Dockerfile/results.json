{
  "startTime": 1674216197855,
  "endTime": 1674216199317,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker file for creating a container that will run chasquid and Dovecot.\n#\n# THIS IS EXPERIMENTAL AND LIKELY TO CHANGE.\n#\n# This is not recommended for serious installations, you're probably better\n# off following the documentation and setting the server up manually.\n#\n# See the README.md file for more details.\n\n# Build the binaries.\nFROM golang:latest as build\nWORKDIR /go/src/blitiri.com.ar/go/chasquid\nCOPY . .\nRUN go get -d ./...\nRUN go install ./...\n\n# Create the image.\nFROM debian:stable\n\n# Make debconf/frontend non-interactive, to avoid distracting output about the\n# lack of $TERM.\nENV DEBIAN_FRONTEND noninteractive\n\n# Install the packages we need.\n# This includes chasquid, which sets up good defaults.\nRUN apt-get update -q && apt-get install --no-install-recommends -y -q \\\n\tchasquid \\\n\tdovecot-lmtpd dovecot-imapd dovecot-pop3d \\\n\tdovecot-sieve dovecot-managesieved \\\n\tacl libcap2-bin sudo certbot && rm -rf /var/lib/apt/lists/*;\n\n# Copy the binaries. This overrides the debian packages with the ones we just\n# built above.\nCOPY --from=build /go/bin/chasquid /usr/bin/\nCOPY --from=build /go/bin/chasquid-util /usr/bin/\nCOPY --from=build /go/bin/smtp-check /usr/bin/\nCOPY --from=build /go/bin/mda-lmtp /usr/bin/\n\n# Let chasquid bind privileged ports, so we can run it as its own user.\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/bin/chasquid\n\n# Copy docker-specific configurations.\nCOPY docker/dovecot.conf /etc/dovecot/dovecot.conf\nCOPY docker/chasquid.conf /etc/chasquid/chasquid.conf\n\n# Copy utility scripts.\nCOPY docker/add-user.sh /\nCOPY docker/entrypoint.sh /\n\n# chasquid: SMTP, submission, submission+tls.\nEXPOSE 25 465 587\n\n# dovecot: POP3s, IMAPs, managesieve.\nEXPOSE 993 995 4190\n\n# http for letsencrypt/certbot.\nEXPOSE 80 443\n\n# Store emails and chasquid databases in an external volume, to be mounted at\n# /data, so they're independent from the image itself.\nVOLUME /data\n\n# Put some directories where we expect persistent user data into /data.\nRUN rmdir /etc/chasquid/domains/\nRUN ln -sf /data/chasquid/domains/ /etc/chasquid/domains\nRUN rm -rf /etc/letsencrypt/\nRUN ln -sf /data/letsencrypt/ /etc/letsencrypt\n\n# Give the chasquid user access to the necessary configuration.\nRUN setfacl -R -m u:chasquid:rX /etc/chasquid/\nRUN mv /etc/chasquid/certs/ /etc/chasquid/certs-orig\nRUN ln -s /etc/letsencrypt/live/ /etc/chasquid/certs\n\n\n# NOTE: Set AUTO_CERTS=\"example.com example.org\" to automatically obtain and\n# renew certificates upon startup, via Letsencrypt. You're agreeing to their\n# ToS by setting this variable, so please review them carefully.\n# CERTS_EMAIL should be set to your email address so letsencrypt can send you\n# critical notifications.\n\n# Custom entry point that does some configuration checks and ensures\n# letsencrypt is properly set up.\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}