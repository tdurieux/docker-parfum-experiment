{
  "startTime": 1674254607480,
  "endTime": 1674254608705,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Docker file for creating a docker container that can run the tests.\n#\n# Create the image:\n#   docker build -t chasquid-test -f test/Dockerfile .\n#\n# Run the tests:\n#   docker run --rm chasquid-test  make test\n#\n# Get a shell inside the image (for debugging):\n#   docker run -it --entrypoint=/bin/bash chasquid-test\n\nFROM golang:latest\n\nWORKDIR /go/src/blitiri.com.ar/go/chasquid\n\n# Make debconf/frontend non-interactive, to avoid distracting output about the\n# lack of $TERM.\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -q\n\n# Install the required packages for the integration tests.\nRUN apt-get install --no-install-recommends -y -q python3 msmtp && rm -rf /var/lib/apt/lists/*;\n\n# Install the optional packages for the integration tests.\nRUN apt-get install --no-install-recommends -y -q \\\n\tgettext-base dovecot-imapd \\\n\texim4-daemon-light \\\n\thaproxy \\\n\tpython3-dkim && rm -rf /var/lib/apt/lists/*;\n\n# Install sudo, needed for the docker entrypoint.\nRUN apt-get install --no-install-recommends -y -q sudo && rm -rf /var/lib/apt/lists/*;\n\n# Prepare exim.\nRUN mkdir -p test/t-02-exim/.exim4 \\\n\t&& ln -s /usr/sbin/exim4 test/t-02-exim/.exim4\n\n# Prepare msmtp: remove setuid, otherwise HOSTALIASES doesn't work.\nRUN chmod g-s /usr/bin/msmtp\n\n# Install binaries for the (optional) DKIM integration test.\nRUN go install github.com/driusan/dkim/cmd/dkimsign@latest \\\n\t&& go install github.com/driusan/dkim/cmd/dkimverify@latest \\\n\t&& go install github.com/driusan/dkim/cmd/dkimkeygen@latest\n\n# Copy into the container. Everything below this line will not be cached.\nCOPY . .\n\n# Don't run the tests as root: it makes some integration tests more difficult,\n# as for example Exim has hard-coded protections against running as root.\nRUN useradd -m chasquid && chown -R chasquid:chasquid .\n\n# Update dependencies to the latest versions, and fetch them to the cache.\n# The fetch is important because once within the entrypoint, we no longer have\n# network access to the outside, so all modules need to be available.\n# Do it as chasquid because that is what the tests will run as.\nUSER chasquid\nENV GOPATH=\nRUN go get -v ${GO_GET_ARGS} ./... && go mod download\n\n# Build the minidns server, which will be run from within the entrypoint.\nRUN go build -o /tmp/minidns ./test/util/minidns.go\nUSER root\n\n# Custom entry point, which uses our own DNS server.\nENTRYPOINT [\"./test/util/docker_entrypoint.sh\"]\n"
}