{
  "startTime": 1674253284549,
  "endTime": 1674253285570,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 25,
        "columnEnd": 147
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 25,
        "columnEnd": 147
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Production mode Dockerfile\n# This Dockerfile is also using the .tool-versions file and asdf\nFROM ubuntu:latest\n\n# Packages for asdf & erlang build\nRUN apt-get update -q && apt install --no-install-recommends -y libssl-dev zlib1g-dev automake autoconf curl git unzip gcc libncurses5-dev libncursesw5-dev build-essential && adduser --shell /bin/bash --home /asdf --disabled-password asdf && rm -rf /var/lib/apt/lists/*;\nENV PATH=\"${PATH}:/asdf/.asdf/shims:/asdf/.asdf/bin\"\n\n# Creating the main directory\nRUN mkdir /www\nRUN chown asdf:asdf /www\nWORKDIR /www\n\n# install asdf\nUSER asdf\nRUN git clone --depth 1 https://github.com/asdf-vm/asdf.git $HOME/.asdf && \\\n    echo '. $HOME/.asdf/asdf.sh' >> $HOME/.bashrc && \\\n    echo '. $HOME/.asdf/asdf.sh' >> $HOME/.profile\n\n# asdf plugins\nRUN asdf plugin-add erlang https://github.com/michallepicki/asdf-erlang-prebuilt-ubuntu-20.04 && asdf plugin-add elixir && asdf plugin-add nodejs && asdf plugin-add yarn\nCOPY .tool-versions /www\n\n# install only the plugins that are needed in production\nRUN asdf install erlang && asdf install elixir && asdf install yarn && asdf install nodejs\nENV MIX_ENV=prod\n\n# definition and lock files for packages\nCOPY --chown=asdf:asdf package.json yarn.lock mix.exs mix.lock /www/\n# needed for mix\nENV LANG=C.UTF-8\n\n# install elixir & node packages\nRUN mix local.rebar --force && mix local.hex --force && mix deps.get --only prod && mix deps.compile && yarn\n\n# copy all the project\nCOPY --chown=asdf:asdf . /www\nCOPY --chown=asdf:asdf priv/docker-entrypoint.sh /www/docker-entrypoint.sh\nRUN chmod a+x docker-entrypoint.sh\n\n# Building assets\nENV NODE_ENV=production\nRUN env SKIP_LOADING_PROD_SECRETS=true mix assets.deploy && rm -rf /var/www/node_modules\n\n# we skip loading the prod secrets for the phx.digest & compile since they are not available yet\nRUN env SKIP_LOADING_PROD_SECRETS=true mix phx.digest\nRUN env SKIP_LOADING_PROD_SECRETS=true mix compile\nCMD /www/docker-entrypoint.sh"
}