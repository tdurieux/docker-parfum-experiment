diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alex-min/ex_platform/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alex-min/ex_platform/Dockerfile/repaired.Dockerfile
index ff287c4..4b26427 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alex-min/ex_platform/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alex-min/ex_platform/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@
 FROM ubuntu:latest
 
 # Packages for asdf & erlang build
-RUN apt-get update -q && apt install -y libssl-dev zlib1g-dev automake autoconf curl git unzip gcc libncurses5-dev libncursesw5-dev build-essential && adduser --shell /bin/bash --home /asdf --disabled-password asdf
+RUN apt-get update -q && apt install --no-install-recommends -y libssl-dev zlib1g-dev automake autoconf curl git unzip gcc libncurses5-dev libncursesw5-dev build-essential && adduser --shell /bin/bash --home /asdf --disabled-password asdf && rm -rf /var/lib/apt/lists/*;
 ENV PATH="${PATH}:/asdf/.asdf/shims:/asdf/.asdf/bin"
 
 # Creating the main directory
@@ -17,7 +17,7 @@ RUN git clone --depth 1 https://github.com/asdf-vm/asdf.git $HOME/.asdf && \
     echo '. $HOME/.asdf/asdf.sh' >> $HOME/.bashrc && \
     echo '. $HOME/.asdf/asdf.sh' >> $HOME/.profile
 
-# asdf plugins 
+# asdf plugins
 RUN asdf plugin-add erlang https://github.com/michallepicki/asdf-erlang-prebuilt-ubuntu-20.04 && asdf plugin-add elixir && asdf plugin-add nodejs && asdf plugin-add yarn
 COPY .tool-versions /www
 
@@ -34,9 +34,9 @@ ENV LANG=C.UTF-8
 RUN mix local.rebar --force && mix local.hex --force && mix deps.get --only prod && mix deps.compile && yarn
 
 # copy all the project
-COPY --chown=asdf:asdf . /www 
-COPY --chown=asdf:asdf priv/docker-entrypoint.sh /www/docker-entrypoint.sh 
-RUN chmod a+x docker-entrypoint.sh 
+COPY --chown=asdf:asdf . /www
+COPY --chown=asdf:asdf priv/docker-entrypoint.sh /www/docker-entrypoint.sh
+RUN chmod a+x docker-entrypoint.sh
 
 # Building assets
 ENV NODE_ENV=production