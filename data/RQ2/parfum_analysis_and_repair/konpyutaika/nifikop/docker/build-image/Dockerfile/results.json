{
  "startTime": 1674252663640,
  "endTime": 1674252664707,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 199
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 72,
        "columnEnd": 148
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#https://github.com/CircleCI-Public/circleci-dockerfiles/blob/master/golang/images/1.12.4/Dockerfile\nARG GOLANG_VERSION\nFROM golang:${GOLANG_VERSION}\n\n# Make Apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n  && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Debian Jessie is EOL'd and original repos don't work.\n# Switch to the archive mirror until we can get people to\n# switch to Stretch.\nRUN if grep -q Debian /etc/os-release && grep -q jessie /etc/os-release; then \\\n\trm /etc/apt/sources.list \\\n    && echo \"deb http://archive.debian.org/debian/ jessie main\" >> /etc/apt/sources.list \\\n    && echo \"deb http://security.debian.org/debian-security jessie/updates main\" >> /etc/apt/sources.list \\\n\t; fi\n\n# Make sure PATH includes ~/.local/bin\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=839155\nRUN echo 'PATH=\"$HOME/.local/bin:$PATH\"' >> /etc/profile.d/user-local-path.sh\n\n# man directory is missing in some base images\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=863199\nRUN apt-get update \\\n  && mkdir -p /usr/share/man/man1 \\\n  && apt-get install --no-install-recommends -y \\\n    git apt \\\n    locales sudo openssh-client ca-certificates tar gzip \\\n    net-tools netcat unzip zip bzip2 gnupg curl wget && rm -rf /var/lib/apt/lists/*;\n\n# Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Use unicode\nRUN locale-gen C.UTF-8 || true\nENV LANG=C.UTF-8\n\n# Install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n  && chmod +x /usr/bin/jq \\\n  && jq --version\n\n# Install Docker\nRUN set -ex \\\n  && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*\\.tgz' | sort -r | head -n 1) \\\n  && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n  && echo Docker URL: $DOCKER_URL \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n  && ls -lha /tmp/docker.tgz \\\n  && tar -xz -C /tmp -f /tmp/docker.tgz \\\n  && mv /tmp/docker/* /usr/bin \\\n  && rm -rf /tmp/docker /tmp/docker.tgz \\\n  && which docker \\\n  && (docker version || true)\n\nRUN groupadd --gid 3434 circleci \\\n  && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n  && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n  && echo 'Defaults    env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n\nRUN curl -f https://raw.githubusercontent.com/golang/dep/master/install.sh | INSTALL_DIRECTORY=/usr/local/bin sh\nRUN curl -f -sSL https://github.com/gotestyourself/gotestsum/releases/download/v0.3.4/gotestsum_0.3.4_linux_amd64.tar.gz | \\\n  tar -xz -C /usr/local/bin gotestsum\nRUN go install golang.org/x/lint/golint@latest\n\n# Install kubectl cli\nRUN curl -f -L https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n    && chmod +x /usr/local/bin/kubectl\n\n# Install helm client\nRUN curl -f -L https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz -o helm.tar.gz \\\n    && tar zxf helm.tar.gz \\\n    && mv linux-amd64/helm /usr/local/bin \\\n    && rm -rf helm.tar.gz linux-amd64\n\nWORKDIR /go/nifikop\n\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nCMD [\"/bin/sh\"]"
}