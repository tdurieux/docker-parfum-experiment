{
  "startTime": 1674246743547,
  "endTime": 1674246744639,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# BUILD ENVIRONMENT\nFROM debian:stable-slim AS ottd_build\n\nARG OPENTTD_VERSION=\"1.10.1\"\nARG OPENGFX_VERSION=\"0.6.0\"\n\n# Get things ready\nRUN mkdir -p /config \\\n    && mkdir /tmp/src\n\n# Install build dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    unzip \\\n    wget \\\n    git \\\n    g++ \\\n    make \\\n    cmake \\\n    patch \\\n    zlib1g-dev \\\n    liblzma-dev \\\n    liblzo2-dev \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Build OpenTTD itself\nWORKDIR /tmp/src\n\nRUN git clone https://github.com/OpenTTD/OpenTTD.git . \\\n    && git fetch --tags \\\n    && git checkout ${OPENTTD_VERSION}\n\n# Perform the build with the build script (1.11 switches to cmake, so use a script for decision making)\nADD builder.sh /usr/local/bin/builder\nRUN chmod +x /usr/local/bin/builder && builder && rm /usr/local/bin/builder\n\n# Add the latest graphics files\n## Install OpenGFX\nRUN mkdir -p /app/data/baseset/ \\\n    && cd /app/data/baseset/ \\\n    && wget -q https://cdn.openttd.org/opengfx-releases/${OPENGFX_VERSION}/opengfx-${OPENGFX_VERSION}-all.zip \\\n    && unzip opengfx-${OPENGFX_VERSION}-all.zip \\\n    && tar -xf opengfx-${OPENGFX_VERSION}.tar \\\n    && rm -rf opengfx-*.tar opengfx-*.zip\n\n# END BUILD ENVIRONMENT\n# DEPLOY ENVIRONMENT\n\nFROM debian:stable-slim\nARG OPENTTD_VERSION=\"1.10.1\"\nLABEL org.label-schema.name=\"OpenTTD\" \\\n      org.label-schema.description=\"Lightweight build of OpenTTD, designed for server use, with some extra helping treats.\" \\\n      org.label-schema.url=\"https://github.com/ropenttd/docker_openttd\" \\\n      org.label-schema.vcs-url=\"https://github.com/openttd/openttd\" \\\n      org.label-schema.vendor=\"Reddit OpenTTD\" \\\n      org.label-schema.version=$OPENTTD_VERSION \\\n      org.label-schema.schema-version=\"1.0\"\nMAINTAINER duck. <me@duck.me.uk>\n\n# Setup the environment and install runtime dependencies\nRUN mkdir -p /config \\\n    && useradd -d /config -u 911 -s /bin/false openttd \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    libc6 \\\n    zlib1g \\\n    liblzma5 \\\n    liblzo2-2 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /config\n\n# Copy the game data from the build container\nCOPY --from=ottd_build /app /app\n\n# Add the entrypoint\nADD entrypoint.sh /usr/local/bin/entrypoint\n\n# Expose the volume\nRUN chown -R openttd:openttd /config /app\nVOLUME /config\n\n# Expose the gameplay port\nEXPOSE 3979/tcp\nEXPOSE 3979/udp\n\n# Expose the admin port\nEXPOSE 3977/tcp\n\n# Finally, let's run OpenTTD!\nUSER openttd\nCMD /usr/local/bin/entrypoint\n"
}