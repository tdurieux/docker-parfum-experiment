{
  "startTime": 1674219327186,
  "endTime": 1674219328457,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################\n# STEP 1 build executable e2e binary\n############################\nFROM golang:1.16.9 AS builder\n\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y upx-ucl && rm -rf /var/lib/apt/lists/*;\n\nRUN useradd appuser && mkdir /app\nWORKDIR /app\n\n# Use go mod with go 1.15\nENV GO111MODULE=on\nCOPY go.mod go.sum ./\nCOPY LICENSE ./\nRUN go mod download\n\nCOPY . .\n\nRUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 go build -o /bin/main -a -tags netgo -ldflags '-w -s -extldflags \"-static\"' ./tests/cmd\nRUN upx /bin/main\n\n############################\n# STEP 2 build a small image\n############################\nFROM alpine:3.13\n\nCOPY --from=builder /etc/passwd /etc/passwd\n\nCOPY --from=builder /bin/main /go/bin/main\nCOPY --from=builder /app/tests/features /features\nCOPY --from=builder /app/tests/artifacts /artifacts\nCOPY --from=builder /app/LICENSE /\n\n# Use an unprivileged user.\nUSER appuser\nENTRYPOINT [\"/go/bin/main\"]\n"
}