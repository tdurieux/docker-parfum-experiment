{
  "startTime": 1674250661902,
  "endTime": 1674250662400,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Step 1. Rebuild the source code only when needed\nFROM node:18-alpine AS builder\n\nWORKDIR /app\n\n# Copy lock files if file exists\nCOPY package.json yarn.lock* package-lock.json* .\n\n# Omit --production flag for TypeScript devDependencies\nRUN yarn install && yarn cache clean;\n\nCOPY src ./src\nCOPY public ./public\nCOPY next.config.js .\nCOPY tsconfig.json .\n\n# Environment variables must be present at build time\n# https://github.com/vercel/next.js/discussions/14030\nARG ENV_VARIABLE\nENV ENV_VARIABLE=${ENV_VARIABLE}\nARG NEXT_PUBLIC_ENV_VARIABLE\nENV NEXT_PUBLIC_ENV_VARIABLE=${NEXT_PUBLIC_ENV_VARIABLE}\n\n# Uncomment the following line to disable telemetry at build time\n# ENV NEXT_TELEMETRY_DISABLED 1\n\nRUN yarn build\n\n# Step 2. Production image, copy all the files and run next\nFROM node:18-alpine AS runner\n\nWORKDIR /app\n\n# Don't run production as root\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 nextjs\nUSER nextjs\n\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/next.config.js .\nCOPY --from=builder /app/package.json .\n\n# Automatically leverage output traces to reduce image size\n# https://nextjs.org/docs/advanced-features/output-file-tracing\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./\nCOPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static\n\n# Environment variables must be redefined at run time\nARG ENV_VARIABLE\nENV ENV_VARIABLE=${ENV_VARIABLE}\nARG NEXT_PUBLIC_ENV_VARIABLE\nENV NEXT_PUBLIC_ENV_VARIABLE=${NEXT_PUBLIC_ENV_VARIABLE}\n\n# Uncomment the following line to disable telemetry at run time\n# ENV NEXT_TELEMETRY_DISABLED 1\n\nCMD node server.js\n"
}