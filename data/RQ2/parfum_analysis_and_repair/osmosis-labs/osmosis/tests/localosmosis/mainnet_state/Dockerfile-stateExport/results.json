{
  "startTime": 1674248440930,
  "endTime": 1674248441586,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# --------------------------------------------------------\n# Build\n# --------------------------------------------------------\n\nFROM golang:1.18.2-alpine3.15 as build\n\nRUN set -eux; apk add --no-cache ca-certificates build-base;\nRUN apk add --no-cache git\n# Needed by github.com/zondax/hid\nRUN apk add --no-cache linux-headers\n\nWORKDIR /osmosis\nCOPY . /osmosis\n\n\n# CosmWasm: see https://github.com/CosmWasm/wasmvm/releases\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.0.0/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.0.0/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a\nRUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 7d2239e9f25e96d0d4daba982ce92367aacf0cbd95d2facb8442268f2b1cc1fc\nRUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep f6282df732a13dec836cda1f399dd874b1e3163504dbd9607c6af915b2740479\n\n# CosmWasm: copy the right library according to architecture. The final location will be found by the linker flag `-lwasmvm_muslc`\nRUN cp /lib/libwasmvm_muslc.$(uname -m).a /lib/libwasmvm_muslc.a\n\nRUN BUILD_TAGS=muslc LINK_STATICALLY=true make build\n\n# --------------------------------------------------------\n# Runner\n# --------------------------------------------------------\n\nFROM ubuntu\n\nCOPY --from=build /osmosis/build/osmosisd /bin/osmosisd\nCOPY /tests/localosmosis/mainnet_state/statesync.sh /osmosis/statesync.sh\nCOPY /tests/localosmosis/mainnet_state/testnetify.py /osmosis/testnetify.py\nCOPY /tests/localosmosis/testnet_genesis.json /osmosis/testnet_genesis.json\n\nENV HOME /osmosis\nWORKDIR $HOME\n# RUN apk update\n# RUN apk add jq\n# RUN apk add moreutils\n# RUN rm -rf /var/cache/apk/*\n# RUN apk add --no-cache python3 py3-pip\n# RUN apt-get update && apt-get install -y software-properties-common gcc && \\\n#     add-apt-repository -y ppa:deadsnakes/ppa\n# RUN apt-get update && apt-get install -y python3.6 python3-distutils python3-pip python3-apt\nRUN apt-get update && apt-get install --no-install-recommends -y python3 && rm -rf /var/lib/apt/lists/*;\nRUN chmod +x /osmosis/statesync.sh\nRUN /osmosis/statesync.sh\nARG ID=localosmosis\nRUN python3 /osmosis/testnetify.py --chain-id=$ID\nRUN cp testnet_genesis.json .osmosisd/config/genesis.json\nEXPOSE 26656\nEXPOSE 26657\nEXPOSE 1317\n\nENTRYPOINT [\"osmosisd\"]\nCMD [\"start\", \"--x-crisis-skip-assert-invariants\"]\n"
}