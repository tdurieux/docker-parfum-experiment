{
  "startTime": 1674215747046,
  "endTime": 1674215748213,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Build Image\nFROM golang:1.18.2-alpine3.15 as build\n\nARG E2E_SCRIPT_NAME\n\nRUN set -eux; apk add --no-cache ca-certificates build-base;\n\nRUN apk add --no-cache git\n\n# needed by github.com/zondax/hid\nRUN apk add --no-cache linux-headers\n\nWORKDIR /osmosis\nCOPY . /osmosis\n\n# CosmWasm: see https://github.com/CosmWasm/wasmvm/releases\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.0.0/libwasmvm_muslc.aarch64.a /lib/libwasmvm_muslc.aarch64.a\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.0.0/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.x86_64.a\nRUN sha256sum /lib/libwasmvm_muslc.aarch64.a | grep 7d2239e9f25e96d0d4daba982ce92367aacf0cbd95d2facb8442268f2b1cc1fc\nRUN sha256sum /lib/libwasmvm_muslc.x86_64.a | grep f6282df732a13dec836cda1f399dd874b1e3163504dbd9607c6af915b2740479\n\n# CosmWasm: copy the right library according to architecture. The final location will be found by the linker flag `-lwasmvm_muslc`\nRUN cp /lib/libwasmvm_muslc.$(uname -m).a /lib/libwasmvm_muslc.a\n\nRUN BUILD_TAGS=muslc LINK_STATICALLY=true E2E_SCRIPT_NAME=${E2E_SCRIPT_NAME} make build-e2e-script\n\n## Deploy image\nFROM ubuntu\n\n# Args only last for a single build stage - renew\nARG E2E_SCRIPT_NAME\n\nCOPY --from=build /osmosis/build/${E2E_SCRIPT_NAME} /bin/${E2E_SCRIPT_NAME}\n\nENV HOME /osmosis\nWORKDIR $HOME\n\n# Docker ARGs are not expanded in ENTRYPOINT in the exec mode. At the same time,\n# it is impossible to add CMD arguments when running a container in the shell mode.\n# As a workaround, we create the entrypoint.sh script to bypass these issues.\nRUN echo \"#!/bin/bash\\n${E2E_SCRIPT_NAME} \\\"\\$@\\\"\" >> entrypoint.sh && chmod +x entrypoint.sh\n\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}