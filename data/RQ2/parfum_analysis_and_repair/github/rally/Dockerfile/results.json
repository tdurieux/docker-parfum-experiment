{
  "startTime": 1674253880585,
  "endTime": 1674253881297,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###################################\n## Dockerfile for Rally + GitHub ##\n###################################\n\n## Base image\nFROM node:14-alpine\n\n## Set the Labels\nLABEL version=\"1.0\" \\\n      description=\"Probot app to verify Rally issues in a Pull Request\" \\\n      maintainer=\"GitHub <opensource+rally@github.com>\"\n\n## These files are copied separately to allow updates\n## to the image to be as small as possible\nCOPY --chown=node:node package.json /opt/rally/\nCOPY --chown=node:node index.js /opt/rally/\nCOPY --chown=node:node lib /opt/rally/lib\n\n## You should edit .env.example and save it before building this image\n## Future updates to this Dockerfile _may_ move this over to\n## pure environment variables in Docker, so it can be passed at the CLI.\n## This will be purely based on demand\n# COPY --chown=node:node .env /opt/rally/\n\n## This can probably be removed, but users will have to make sure they\n## run the container, then copy the key. This helps avoid that for folks\n## using this in their enterprise environments\n# COPY --chown=node:node .ssh/rally.pem /opt/rally/.ssh/\n\n## We need Python for Probot\nRUN apk add --no-cache make python\n\n## Best practice, don't run as `root`\nUSER node\n\n## Set our working directory\nWORKDIR /opt/rally\n\n## Not strictly necessary, but set permissions to 400\n# RUN chmod 400 /opt/rally/.ssh/rally.pem /opt/rally/.env\n\n## Install the app and dependencies\nRUN npm install && npm cache clean --force;\n\n## This app will listen on port 3000\nEXPOSE 3000\n\n## This does not start properly when using the ['npm','start'] format\n## so stick with just calling it outright\nCMD npm start\n"
}