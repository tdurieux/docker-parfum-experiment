{
  "startTime": 1674254899820,
  "endTime": 1674254900469,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.17.6-alpine\nENV NODE_ENV production\n## Set the Labels\nLABEL version=\"1.0\" \\\n      description=\"Probot app which is a modified version of Settings Probot GitHub App\" \\\n      maintainer=\"GitHub Professional Services <services@github.com>\"\n\n## Set our working directory\nWORKDIR /opt/safe-settings\n\n## These files are copied separately to allow updates\n## to the image to be as small as possible\nCOPY  package.json /opt/safe-settings/\nCOPY  index.js /opt/safe-settings/\nCOPY  lib /opt/safe-settings/lib\n\n## You should edit .env.example and save it before building this image\n## Future updates to this Dockerfile _may_ move this over to\n## pure environment variables in Docker, so it can be passed at the CLI.\n## This will be purely based on demand\n##COPY  .env /opt/safe-settings/\n\n## This can probably be removed, but users will have to make sure they\n## run the container, then copy the key. This helps avoid that for folks\n## using this in their enterprise environments\n#COPY --chown=node:node .ssh/safe-settings.pem /opt/safe-settings/.ssh/\n\n## Best practice, don't run as `root`\n#USER node\n\n## We need Python for Probot\nRUN apk add --no-cache make python\n\n## Not strictly necessary, but set permissions to 400\n#RUN chmod 400 /opt/safe-settings/.ssh/safe-settings.pem /opt/safe-settings/.env\n\n## Install the app and dependencies\nRUN npm install && npm cache clean --force;\n\n## This app will listen on port 3000\nEXPOSE 3000\n\n## This does not start properly when using the ['npm','start'] format\n## so stick with just calling it outright\nCMD npm start\n"
}