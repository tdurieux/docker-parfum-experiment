{
  "startTime": 1674249054139,
  "endTime": 1674249054949,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pytorch/pytorch:1.7.1-cuda11.0-cudnn8-devel\n\n# install normal source\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        g++ \\\n        make \\\n        automake \\\n        autoconf \\\n        bzip2 \\\n        unzip \\\n        wget \\\n        sox \\\n        libtool \\\n        git \\\n        subversion \\\n        zlib1g-dev \\\n        gfortran \\\n        ca-certificates \\\n        patch \\\n        ffmpeg \\\n        valgrind \\\n\tlibssl-dev \\\n\t    vim && \\\n        rm -rf /var/lib/apt/lists/*\n\n\nRUN mv /opt/conda/lib/libcufft.so.10 /opt/libcufft.so.10.bak && \\\n    mv /opt/conda/lib/libcurand.so.10 /opt/libcurand.so.10.bak && \\\n    mv /opt/conda/lib/libcublas.so.11 /opt/libcublas.so.11.bak && \\\n    mv /opt/conda/lib/libnvrtc.so.11.0 /opt/libnvrtc.so.11.1.bak && \\\n    mv /opt/conda/lib/libnvToolsExt.so.1 /opt/libnvToolsExt.so.1.bak && \\\n    mv /opt/conda/lib/libcudart.so.11.0 /opt/libcudart.so.11.0.bak\n\n# cmake\n\nRUN wget -P /opt https://cmake.org/files/v3.18/cmake-3.18.0.tar.gz && \\\n    cd /opt && \\\n    tar -zxvf cmake-3.18.0.tar.gz && \\\n    cd cmake-3.18.0 && \\\n    ./bootstrap && \\\n    make && \\\n    make install && \\\n    rm -rf cmake-3.18.0.tar.gz && \\\n    find /opt/cmake-3.18.0 -type f \\( -name \"*.o\" -o -name \"*.la\" -o -name \"*.a\" \\) -exec rm {} \\; && \\\n    cd -\n\n#kaldiio\n\nRUN pip install --no-cache-dir kaldiio\n\n# flac\nRUN wget -P /opt https://downloads.xiph.org/releases/flac/flac-1.3.2.tar.xz  && \\\n    cd /opt && \\ \n    xz -d flac-1.3.2.tar.xz && \\\n    tar -xvf flac-1.3.2.tar && \\\n    cd flac-1.3.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && \\\n    rm -rf flac-1.3.2.tar && \\\n    find /opt/flac-1.3.2  -type f \\( -name \"*.o\" -o -name \"*.la\" -o -name \"*.a\" \\) -exec rm {} \\; && \\\n    cd -\n\n# graphviz\nRUN pip install --no-cache-dir graphviz\n\n# kaldifeat\nRUN git clone https://github.com/csukuangfj/kaldifeat.git /opt/kaldifeat && \\\n    cd /opt/kaldifeat && \\\n    python setup.py install && \\\n    cd -\n\n\n#install k2 from source\nRUN git clone https://github.com/k2-fsa/k2.git /opt/k2 && \\\n    cd /opt/k2 && \\\n    python3 setup.py install && \\\n    cd -\n\n# install  lhotse\nRUN pip install --no-cache-dir git+https://github.com/lhotse-speech/lhotse\n#RUN pip install lhotse\n\n# install icefall\nRUN git clone https://github.com/k2-fsa/icefall && \\\n    cd icefall && \\\n    pip install --no-cache-dir -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple\n\nENV PYTHONPATH /workspace/icefall:$PYTHONPATH \n\n"
}