{
  "startTime": 1674220904251,
  "endTime": 1674220904884,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# need the helm-cli from the helm image\nFROM quay.io/openshift/origin-metering-helm:latest as helm\n# final image needs kubectl, so we copy `oc` from cli image to use as kubectl.\nFROM quay.io/openshift/origin-cli:latest as cli\n# the base image is the ansible-operator's origin images\nFROM quay.io/operator-framework/ansible-operator:v1.0.1\n\nUSER root\nRUN set -x; INSTALL_PKGS=\"curl bash ca-certificates less which openssl\" \\\n    && yum clean all && rm -rf /var/cache/yum/* \\\n    && yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm  \\\n    && yum install --setopt=skip_missing_names_on_install=False -y \\\n        $INSTALL_PKGS  \\\n    && yum clean all \\\n    && rm -rf /var/cache/yum\n\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\n\nCOPY --from=helm /usr/local/bin/helm /usr/local/bin/helm\nCOPY --from=cli /usr/bin/oc /usr/bin/oc\n\n# put tini and kubectl into our path\nRUN ln -f -s /usr/bin/oc /usr/bin/kubectl\nRUN ln -f -s /tini /usr/bin/tini\n\n# List of python packages:\n# 1. botocore and boto3 are used by the aws-related modules (aws_s3)\n# 2. netaddr is needed to use the ipv4/ipv6 jinja filter\n# 3. cryptography is used by the openssl_* modules for TLS/authentication purposes\nRUN pip3 install --no-cache-dir --upgrade openshift botocore boto3 cryptography netaddr\n# The ansible-operator base image will have Ansible installed by default and there's\n# problems with running `pip install --upgrade` for upgrading to Ansible 2.10 from 2.9.\n# This will ensure that we're always using a version of Ansible we've tested and contains\n# the crypto.py FIPS fix as outlined in https://github.com/kube-reporting/metering-operator/issues/1444\nRUN pip3 install --no-cache-dir --upgrade 'ansible>=2.9.6,<2.10'\n\nENV HOME /opt/ansible\nENV HELM_CHART_PATH ${HOME}/charts/openshift-metering\n\nCOPY images/metering-ansible-operator/roles/ ${HOME}/roles/\nCOPY images/metering-ansible-operator/watches.yaml ${HOME}/watches.yaml\nCOPY images/metering-ansible-operator/ansible.cfg /etc/ansible/ansible.cfg\nCOPY charts/openshift-metering ${HELM_CHART_PATH}\n\nCOPY manifests/deploy/openshift/olm/bundle /manifests\n\nUSER 1001\nENTRYPOINT [\"tini\", \"--\", \"/usr/local/bin/ansible-operator\", \"run\", \"--watches-file\", \"/opt/ansible/watches.yaml\"]\n\nLABEL io.k8s.display-name=\"OpenShift metering-ansible-operator\" \\\n      io.k8s.description=\"This is a component of OpenShift Container Platform and manages installation and configuration of all other metering components.\" \\\n      summary=\"This is a component of OpenShift Container Platform and manages installation and configuration of all other metering components.\" \\\n      io.openshift.tags=\"openshift\" \\\n      com.redhat.delivery.appregistry=true \\\n      maintainer=\"<metering-team@redhat.com>\"\n"
}