{
  "startTime": 1674252448784,
  "endTime": 1674252450053,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 234
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 234
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 234
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.10\n\n#RUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\nRUN apt update\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt install -y --no-install-recommends build-essential git jq python netcat curl wget pkg-config libgl-dev libglu-dev libglib2.0-dev libsm-dev libxrender-dev libfontconfig1-dev libxext-dev nvidia-opencl-dev ocl-icd-opencl-dev tmux && rm -rf /var/lib/apt/lists/*;\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\n\n#install node\nENV NVM_DIR=\"/usr/local\"\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash\n\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install v14.7.0\nENV PATH=\"/usr/local/versions/node/v14.7.0/bin:${PATH}\"\n\n#install go\nRUN wget  https://dl.google.com/go/go1.14.3.linux-amd64.tar.gz\nRUN tar -xvf go1.14.3.linux-amd64.tar.gz && rm go1.14.3.linux-amd64.tar.gz\nRUN mv go /usr/local\nENV PATH=\"/usr/local/go/bin:${PATH}\"\n\nRUN mkdir /credentials\n\nWORKDIR /testnet\n\nCOPY ./bin/start_testnet.sh ./\nCOPY ./bin/build_lotus.sh ./\nCOPY ./bin/init_testnet.sh ./\nCOPY ./bin/set_env.sh ./\nCOPY ./bin/entrypoint.sh ./\n\nCOPY ./proxy ./proxy\nRUN chmod +x ./build_lotus.sh\nRUN chmod +x ./init_testnet.sh\n\nRUN ./build_lotus.sh\nRUN ./init_testnet.sh"
}