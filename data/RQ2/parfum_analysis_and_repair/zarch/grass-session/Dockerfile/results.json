{
  "startTime": 1674255057955,
  "endTime": 1674255059166,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 20,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 162,
        "lineEnd": 162,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 202,
        "lineEnd": 202,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 203,
        "lineEnd": 203,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 217,
        "lineEnd": 217,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 201,
        "lineEnd": 201,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM mundialis/docker-pdal:1.8.0 as pdal\nFROM alpine:3.11 as common\n\n# Based on:\n# https://github.com/mundialis/docker-grass-gis/blob/master/Dockerfile\nLABEL authors=\"Pietro Zambelli,Markus Neteler\"\nLABEL maintainer=\"peter.zamb@gmail.com,neteler@osgeo.org\"\n\n# PACKAGES VERSIONS\nARG PYTHON_VERSION=3\n\n# List of packages to be installed\nENV PACKAGES=\"\\\n      attr \\\n      bash \\\n      bison \\\n      bzip2 \\\n      cairo \\\n      curl \\\n      fftw \\\n      flex \\\n      freetype \\\n      gdal \\\n      gettext \\\n      geos \\\n      gnutls \\\n      jsoncpp \\\n      libbz2 \\\n      libexecinfo \\\n      libjpeg-turbo \\\n      libpng \\\n      libunwind \\\n      musl \\\n      musl-utils \\\n      ncurses \\\n      openjpeg \\\n      openblas \\\n      py3-numpy \\\n      py3-pillow \\\n      py3-six \\\n      postgresql \\\n      proj-datumgrid \\\n      proj-util \\\n      sqlite \\\n      sqlite-libs \\\n      subversion \\\n      tiff \\\n      zstd \\\n      zstd-libs \\\n    \"\n# ====================\n# INSTALL DEPENDENCIES\n# ====================\n\nWORKDIR /src\n\nENV PYTHONBIN=python$PYTHON_VERSION\n\nRUN echo \"Install Python\"; \\\n    apk add --no-cache $PYTHONBIN && \\\n    $PYTHONBIN -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip$PYTHON_VERSION install --no-cache-dir --upgrade pip setuptools && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip$PYTHON_VERSION /usr/bin/pip ; fi && \\\n    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/$PYTHONBIN /usr/bin/python; fi && \\\n    rm -r /root/.cache\n\n# Add the packages\nRUN echo \"Install main packages\";\\\n    apk update; \\\n    apk add --no-cache $PACKAGES\n\nCOPY --from=pdal /usr/bin/pdal* /usr/bin/\nCOPY --from=pdal /usr/lib/pdal /usr/lib/pdal\nCOPY --from=pdal /usr/lib/libpdal* /usr/lib/\nCOPY --from=pdal /usr/lib/pkgconfig/pdal.pc /usr/lib/pkgconfig/pdal.pc\nCOPY --from=pdal /usr/include/pdal /usr/include/pdal\nCOPY --from=pdal /usr/local/lib/liblaszip* /usr/local/lib/\nCOPY --from=pdal /usr/local/include/laszip /usr/local/include/laszip\n\n\nFROM common as build\n\n# ================\n# CONFIG VARIABLES\n# ================\n\n# set configuration options, without wxGUI\nENV GRASS_CONFIG=\"\\\n      --enable-largefile \\\n      --with-cxx \\\n      --with-proj --with-proj-share=/usr/share/proj \\\n      --with-gdal \\\n      --with-pdal \\\n      --with-python \\\n      --with-geos \\\n      --with-sqlite \\\n      --with-bzlib \\\n      --with-zstd \\\n      --with-cairo --with-cairo-ldflags=-lfontconfig \\\n      --with-fftw \\\n      --with-postgres --with-postgres-includes='/usr/include/postgresql' \\\n      --without-freetype \\\n      --without-openmp \\\n      --without-opengl \\\n      --without-nls \\\n      --without-mysql \\\n      --without-odbc \\\n      --without-openmp \\\n      --without-ffmpeg \\\n      \"\n\n# Set environmental variables for GRASS GIS compilation, without debug symbols\nENV MYCFLAGS=\"-O2 -std=gnu99 -m64\" \\\n    MYLDFLAGS=\"-s -Wl,--no-undefined -lblas\" \\\n    # CXX stuff:\n    LD_LIBRARY_PATH=\"/usr/local/lib\" \\\n    LDFLAGS=\"$MYLDFLAGS\" \\\n    CFLAGS=\"$MYCFLAGS\" \\\n    CXXFLAGS=\"$MYCXXFLAGS\" \\\n    NUMTHREADS=2\n\n# These packages are required to compile GRASS GIS.\nENV GRASS_BUILD_PACKAGES=\"\\\n      build-base \\\n      bzip2-dev \\\n      cairo-dev \\\n      fftw-dev \\\n      freetype-dev \\\n      g++ \\\n      gcc \\\n      gdal-dev \\\n      geos-dev \\\n      gnutls-dev \\\n      libc6-compat \\\n      libjpeg-turbo-dev \\\n      libpng-dev \\\n      make \\\n      openjpeg-dev \\\n      openblas-dev \\\n      postgresql-dev \\\n      proj-dev \\\n      python3-dev \\\n      py3-numpy-dev \\\n      sqlite-dev \\\n      tar \\\n      tiff-dev \\\n      unzip \\\n      vim \\\n      wget \\\n      zip \\\n      zstd-dev \\\n    \"\n\n# Add the packages\nRUN echo \"Install main packages\";\\\n    # Add packages just for the GRASS build process\n    apk add --no-cache --virtual .build-deps $GRASS_BUILD_PACKAGES\n    # echo LANG=\"en_US.UTF-8\" > /etc/default/locale;\n\nRUN apk add --no-cache git vim\nRUN apk add --no-cache curl && curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3 get-pip.py pip==20.0.2 && rm get-pip.py\nRUN pip3 install --no-cache-dir --upgrade ipdb pip six\n\nRUN git clone --depth=10 https://github.com/OSGeo/grass.git /src/grass_build/\n\n# Copy and install GRASS GIS\n# COPY . /src/grass_build/\nWORKDIR /src/grass_build/\n\n# Configure compile and install GRASS GIS\nRUN echo \"  => Configure and compile grass\" && \\\n    /src/grass_build/configure $GRASS_CONFIG && \\\n    make -j $NUMTHREADS && \\\n    make install && \\\n    ldconfig /etc/ld.so.conf.d\n\n# enable simple grass command regardless of version number\n# also important for COPY cmd later\nRUN ln -s `find /usr/local/bin -name \"grass*\"` /usr/local/bin/grass\n\n# Reduce the image size - Remove unnecessary grass files\nRUN cp /usr/local/grass79/gui/wxpython/xml/module_items.xml module_items.xml; \\\n    rm -rf /usr/local/grass79/demolocation; \\\n    rm -rf /usr/local/grass79/fonts; \\\n    rm -rf /usr/local/grass79/gui; \\\n    rm -rf /usr/local/grass79/share; \\\n    mkdir -p /usr/local/grass79/gui/wxpython/xml/; \\\n    mv module_items.xml /usr/local/grass79/gui/wxpython/xml/module_items.xml;\n\n\nFROM common as grass\n\nENV LC_ALL=\"en_US.UTF-8\"\n\n# Copy GRASS GIS from build image\nCOPY --from=build /usr/local/bin/grass /usr/local/bin/grass\nCOPY --from=build /usr/local/grass* /usr/local/grass/\n\nRUN ln -s /usr/local/grass /usr/local/grass7\nRUN ln -s /usr/local/grass `grass --config path`\nRUN apk add --no-cache git vim\nRUN pip3 install --no-cache-dir --upgrade ipdb\nRUN pip3 install --no-cache-dir --upgrade pip six\n\nCOPY . /src/grass-session\nWORKDIR /src/grass-session\n\nRUN python3 setup.py install\n\nRUN grass --tmp-location EPSG:4326 --exec g.version -rge && \\\n    pdal --version && \\\n    python3 --version\n\n\nFROM grass as test\n\nRUN pip3 install --no-cache-dir -r requirements-testing.txt\nRUN scripts/test.sh\n\n\nFROM grass as final\n\n# GRASS GIS specific\n# allow work with MAPSETs that are not owned by current user\nENV GRASSBIN=\"/usr/local/bin/grass\" \\\n    GRASS_SKIP_MAPSET_OWNER_CHECK=1 \\\n    SHELL=\"/bin/bash\"\n\n# show installed version\nRUN grass --tmp-location EPSG:4326 --exec g.version -rge && \\\n    pdal --version && \\\n    python3 --version\n\n# Data workdir\nWORKDIR /grassdb\nVOLUME /grassdb\n\nCMD $GRASSBIN --version\n"
}