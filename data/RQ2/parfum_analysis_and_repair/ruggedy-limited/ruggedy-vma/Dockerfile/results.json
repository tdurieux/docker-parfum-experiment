{
  "startTime": 1674217272203,
  "endTime": 1674217273454,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 93,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##########################################################################\n# Ruggedy Docker Container                                               #\n# Author: Ruggedy.io                                                     #\n# Version 0.1 Beta                                                       #\n##########################################################################\n\nFROM ubuntu:16.04\nMAINTAINER Ruggedy <hello@ruggedy.io>\n\n##########################################################################\n# Initial Server and Environment Settings                                #\n##########################################################################\n\nRUN DEBIAN_FRONTEND=noninteractive\nENV LANGUAGE=en_US.UTF-8\nENV LC_ALL=en_US.UTF-8\nENV LC_CTYPE=UTF-8\nENV LANG=en_US.UTF-8\nENV TERM xterm\n\n##########################################################################\n# Repositories                                                           #\n##########################################################################\n\nRUN apt-get update && apt-get install --no-install-recommends -y --force-yes \\\n    software-properties-common \\\n    supervisor \\\n    php7.0-cli \\\n    php7.0-common \\\n    php7.0-curl \\\n    php7.0-json \\\n    php7.0-xml \\\n    php7.0-mbstring \\\n    php7.0-mcrypt \\\n    php7.0-mysql \\\n    php7.0-zip \\\n    php7.0-gd \\\n    php7.0-soap \\\n    git \\\n    curl \\\n    vim \\\n    nano \\\n    nodejs \\\n    zip \\\n    unzip \\\n    npm \\\n    nginx \\\n    php7.0-fpm && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade -y --force-yes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n##########################################################################\n# Configure Supervisor                                                   #\n##########################################################################\n\nRUN mkdir -p /var/log/supervisor\nCOPY docker-files/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nVOLUME [\"/var/log/supervisor\"]\n\n##########################################################################\n# Configure PHP-FPM and NGINX DAEMON                                     #\n##########################################################################\n\nRUN sed -i 's/;daemonize = yes/daemonize = no/g' /etc/php/7.0/fpm/php-fpm.conf\nRUN sed -i '1s/^/daemon off;\\n/' /etc/nginx/nginx.conf\nRUN mkdir /run/php\n\nRUN rm /etc/php/7.0/fpm/php.ini\nCOPY docker-files/php.ini /etc/php/7.0/fpm/\n\nRUN rm /etc/nginx/sites-available/default\nRUN rm /etc/nginx/sites-enabled/default\nCOPY docker-files/default /etc/nginx/sites-available/\nRUN ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/default\nCOPY docker-files/nginx.conf /etc/nginx/\n\n##########################################################################\n# Configure Composer                                                     #\n##########################################################################\n\nRUN curl -f -sS https://getcomposer.org/installer | php \\\n    -- --install-dir=/usr/local/bin --filename=composer\n\n##########################################################################\n# Setup and Configure Ruggedy App                                        #\n##########################################################################\n\nWORKDIR /usr/share/nginx/html/\nRUN mkdir ruggedy-vma\nCOPY docker-files/.env /usr/share/nginx/html/ruggedy-vma\n\nWORKDIR /usr/share/nginx/html/ruggedy-vma\n\nRUN npm install -g \\\n    bower && npm cache clean --force;\n\nCOPY package.json /usr/share/nginx/html/ruggedy-vma\nRUN npm link gulp\nRUN ln -s /usr/bin/nodejs /usr/bin/node\n\nWORKDIR /usr/share/nginx/html\nRUN chown -R www-data:www-data ./ruggedy-vma\nRUN find /usr/share/nginx/html/ruggedy-vma -type d -exec chmod 755 {} \\;\nVOLUME [\"/usr/share/nginx/html\"]\n\n##########################################################################\n# Install and start the cron                                             #\n##########################################################################\n\nCOPY docker-files/crontab /etc/cron.d/ruggedy-cron\nRUN chmod 0600 /etc/cron.d/ruggedy-cron\nRUN touch /var/log/cron.log\nRUN crontab /etc/cron.d/ruggedy-cron\n\nCMD [\"/usr/bin/supervisord\"]\n\nEXPOSE 80\n"
}