{
  "startTime": 1674254955180,
  "endTime": 1674254957740,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 184,
        "lineEnd": 184,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 178,
        "lineEnd": 178,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 280,
        "lineEnd": 282,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 284,
        "lineEnd": 297,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##\n# osgeo/gdal:ubuntu-full\n\n# This file is available at the option of the licensee under:\n# Public domain\n# or licensed under X/MIT (LICENSE.TXT) Copyright 2019 Even Rouault <even.rouault@spatialys.com>\n\nARG BASE_IMAGE=ubuntu:20.04\nARG TARGET_BASE_IMAGE=ubuntu:20.04\n\nFROM $BASE_IMAGE as builder\n\n# Derived from osgeo/proj by Howard Butler <howard@hobu.co>\nLABEL maintainer=\"Even Rouault <even.rouault@spatialys.com>\"\n\nARG TARGET_ARCH=\nRUN echo ${TARGET_ARCH}\nCOPY ./bh-set-envvars.sh /buildscripts/bh-set-envvars.sh\n\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && if test \"${TARGET_ARCH}\" != \"\"; then \\\n    rm -f /etc/apt/sources.list \\\n    && echo \"deb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ focal main restricted universe multiverse\" >> /etc/apt/sources.list \\\n    && echo \"deb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ focal-updates main restricted universe multiverse\" >> /etc/apt/sources.list \\\n    && echo \"deb [arch=amd64] http://us.archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse\" >> /etc/apt/sources.list \\\n    && echo \"deb [arch=amd64] http://security.ubuntu.com/ubuntu focal-security main restricted universe multiverse\" >> /etc/apt/sources.list \\\n    && echo \"deb [arch=${TARGET_ARCH}] http://ports.ubuntu.com/ubuntu-ports/ focal main restricted universe multiverse\" >> /etc/apt/sources.list \\\n    && echo \"deb [arch=${TARGET_ARCH}] http://ports.ubuntu.com/ubuntu-ports/ focal-updates main restricted universe multiverse\" >> /etc/apt/sources.list \\\n    && echo \"deb [arch=${TARGET_ARCH}] http://ports.ubuntu.com/ubuntu-ports/ focal-security main restricted universe multiverse\" >> /etc/apt/sources.list \\\n    && dpkg --add-architecture ${TARGET_ARCH} \\\n    && apt-get update -y \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y g++-9-${GCC_ARCH}-linux-gnu \\\n    && ln -s ${GCC_ARCH}-linux-gnu-gcc-9 /usr/bin/${GCC_ARCH}-linux-gnu-gcc \\\n    && ln -s ${GCC_ARCH}-linux-gnu-g++-9 /usr/bin/${GCC_ARCH}-linux-gnu-g++; rm -rf /var/lib/apt/lists/*; \\\n    fi\n\n# Setup build env for PROJ\nUSER root\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && apt-get update -y \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends \\\n            build-essential ca-certificates \\\n            git make cmake wget unzip libtool automake \\\n            zlib1g-dev${APT_ARCH_SUFFIX} libsqlite3-dev${APT_ARCH_SUFFIX} pkg-config sqlite3 libcurl4-gnutls-dev${APT_ARCH_SUFFIX} \\\n            libtiff5-dev${APT_ARCH_SUFFIX} \\\n    && rm -rf /var/lib/apt/lists/*\n\nARG JAVA_VERSION=11\n# Setup build env for GDAL\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && apt-get update -y \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends \\\n       libcharls-dev${APT_ARCH_SUFFIX} libopenjp2-7-dev${APT_ARCH_SUFFIX} libcairo2-dev${APT_ARCH_SUFFIX} \\\n       python3-dev${APT_ARCH_SUFFIX} python3-numpy${APT_ARCH_SUFFIX} python3-setuptools${APT_ARCH_SUFFIX} \\\n       libpng-dev${APT_ARCH_SUFFIX} libjpeg-dev${APT_ARCH_SUFFIX} libgif-dev${APT_ARCH_SUFFIX} liblzma-dev${APT_ARCH_SUFFIX} libgeos-dev${APT_ARCH_SUFFIX} \\\n       curl libxml2-dev${APT_ARCH_SUFFIX} libexpat-dev${APT_ARCH_SUFFIX} libxerces-c-dev${APT_ARCH_SUFFIX} \\\n       libnetcdf-dev${APT_ARCH_SUFFIX} libpoppler-dev${APT_ARCH_SUFFIX} libpoppler-private-dev${APT_ARCH_SUFFIX} \\\n       libspatialite-dev${APT_ARCH_SUFFIX} swig ant libhdf4-alt-dev${APT_ARCH_SUFFIX} libhdf5-serial-dev${APT_ARCH_SUFFIX} \\\n       libfreexl-dev${APT_ARCH_SUFFIX} unixodbc-dev${APT_ARCH_SUFFIX} libwebp-dev${APT_ARCH_SUFFIX} libepsilon-dev${APT_ARCH_SUFFIX} \\\n       liblcms2-2 libpcre3-dev${APT_ARCH_SUFFIX} libcrypto++-dev${APT_ARCH_SUFFIX} libdap-dev${APT_ARCH_SUFFIX} libfyba-dev${APT_ARCH_SUFFIX} \\\n       libkml-dev${APT_ARCH_SUFFIX} libmysqlclient-dev${APT_ARCH_SUFFIX} libogdi-dev${APT_ARCH_SUFFIX} \\\n       libcfitsio-dev${APT_ARCH_SUFFIX} openjdk-\"$JAVA_VERSION\"-jdk${APT_ARCH_SUFFIX} libzstd-dev${APT_ARCH_SUFFIX} \\\n       libpq-dev${APT_ARCH_SUFFIX} libssl-dev${APT_ARCH_SUFFIX} libboost-dev${APT_ARCH_SUFFIX} \\\n       autoconf automake bash-completion libarmadillo-dev${APT_ARCH_SUFFIX} \\\n       libopenexr-dev${APT_ARCH_SUFFIX} libheif-dev${APT_ARCH_SUFFIX} \\\n       libdeflate-dev${APT_ARCH_SUFFIX} libblosc-dev${APT_ARCH_SUFFIX} liblz4-dev${APT_ARCH_SUFFIX} libbz2-dev${APT_ARCH_SUFFIX} \\\n       libbrotli-dev${APT_ARCH_SUFFIX} \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Build likbkea\nARG KEA_VERSION=1.4.14\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && wget -q https://github.com/ubarsc/kealib/archive/kealib-${KEA_VERSION}.zip \\\n    && unzip -q kealib-${KEA_VERSION}.zip \\\n    && rm -f kealib-${KEA_VERSION}.zip \\\n    && cd kealib-kealib-${KEA_VERSION} \\\n    && cmake . -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=/usr -DHDF5_INCLUDE_DIR=/usr/include/hdf5/serial \\\n        -DHDF5_LIB_PATH=/usr/lib/${GCC_ARCH}-linux-gnu/hdf5/serial -DLIBKEA_WITH_GDAL=OFF \\\n    && make -j$(nproc) \\\n    && make install DESTDIR=\"/build_thirdparty\" \\\n    && make install \\\n    && cd .. \\\n    && rm -rf kealib-kealib-${KEA_VERSION} \\\n    && for i in /build_thirdparty/usr/lib/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_thirdparty/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build mongo-c-driver\nARG MONGO_C_DRIVER_VERSION=1.17.6\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && mkdir mongo-c-driver \\\n    && wget -q https://github.com/mongodb/mongo-c-driver/releases/download/${MONGO_C_DRIVER_VERSION}/mongo-c-driver-${MONGO_C_DRIVER_VERSION}.tar.gz -O - \\\n        | tar xz -C mongo-c-driver --strip-components=1 \\\n    && cd mongo-c-driver \\\n    && mkdir build_cmake \\\n    && cd build_cmake \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DENABLE_TESTS=NO -DCMAKE_BUILD_TYPE=Release \\\n    && make -j$(nproc) \\\n    && make install DESTDIR=\"/build_thirdparty\" \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf mongo-c-driver \\\n    && rm /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu/*.a \\\n    && for i in /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_thirdparty/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build mongocxx\nARG MONGOCXX_VERSION=3.6.5\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && mkdir mongocxx \\\n    && wget -q https://github.com/mongodb/mongo-cxx-driver/archive/r${MONGOCXX_VERSION}.tar.gz -O - \\\n        | tar xz -C mongocxx --strip-components=1 \\\n    && cd mongocxx \\\n    && mkdir build_cmake \\\n    && cd build_cmake \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=/usr -DBSONCXX_POLY_USE_BOOST=ON -DMONGOCXX_ENABLE_SLOW_TESTS=NO -DCMAKE_BUILD_TYPE=Release -DBUILD_VERSION=${MONGOCXX_VERSION} \\\n    && make -j$(nproc) \\\n    && make install DESTDIR=\"/build_thirdparty\" \\\n    && make install \\\n    && cd ../.. \\\n    && rm -rf mongocxx \\\n    && for i in /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_thirdparty/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build tiledb\nCOPY ./tiledb-5cad65f4c.patch /buildscripts/tiledb-5cad65f4c.patch\nARG TILEDB_VERSION=2.3.1\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && mkdir tiledb \\\n    && wget -q https://github.com/TileDB-Inc/TileDB/archive/${TILEDB_VERSION}.tar.gz -O - \\\n        | tar xz -C tiledb --strip-components=1 \\\n    && cd tiledb \\\n    && patch -p1 < /buildscripts/tiledb-5cad65f4c.patch \\\n    && mkdir build_cmake \\\n    && cd build_cmake \\\n    && ../bootstrap --prefix=/usr --disable-werror \\\n    && make -j$(nproc) \\\n    && make install-tiledb DESTDIR=\"/build_thirdparty\" \\\n    && make install-tiledb \\\n    && cd ../.. \\\n    && rm -rf tiledb \\\n    && for i in /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && for i in /build_thirdparty/usr/bin/*; do strip -s $i 2>/dev/null || /bin/true; done\n\n# Build openjpeg\nARG OPENJPEG_VERSION=\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && if test \"${OPENJPEG_VERSION}\" != \"\"; then ( \\\n    wget -q https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz \\\n    && tar xzf v${OPENJPEG_VERSION}.tar.gz \\\n    && rm -f v${OPENJPEG_VERSION}.tar.gz \\\n    && cd openjpeg-${OPENJPEG_VERSION} \\\n    && cmake . -DBUILD_SHARED_LIBS=ON  -DBUILD_STATIC_LIBS=OFF -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n    && make -j$(nproc) \\\n    && make install \\\n    && mkdir -p /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu \\\n    && rm -f /usr/lib/${GCC_ARCH}-linux-gnu/libopenjp2.so* \\\n    && mv /usr/lib/libopenjp2.so* /usr/lib/${GCC_ARCH}-linux-gnu \\\n    && cp -P /usr/lib/${GCC_ARCH}-linux-gnu/libopenjp2.so* /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu \\\n    && for i in /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu/*; do strip -s $i 2>/dev/null || /bin/true; done \\\n    && cd .. \\\n    && rm -rf openjpeg-${OPENJPEG_VERSION} \\\n    ); fi\n\n# Install MDB Driver Jars\nRUN . /buildscripts/bh-set-envvars.sh \\\n  && wget -q https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/mdb-sqlite/mdb-sqlite-1.0.2.tar.bz2 \\\n  && tar -xjf mdb-sqlite-1.0.2.tar.bz2 \\\n  && mkdir -p /build/usr/share/java \\\n  && cp mdb-sqlite-1.0.2/lib/*.jar /build/usr/share/java \\\n  && rm -rf mdb-sqlite-1.0.2.tar.bz2 && rm -rf mdb-sqlite-1.0.2\n\n# Build recent mdbtools\n# Patch to fix an issue with SELECT COUNT(*). See https://github.com/OSGeo/gdal/pull/4104\nCOPY ./mdbtools-lexer.patch /buildscripts/mdbtools-lexer.patch\nRUN . /buildscripts/bh-set-envvars.sh \\\n  && wget -q https://github.com/mdbtools/mdbtools/releases/download/v0.9.3/mdbtools-0.9.3.tar.gz \\\n  && tar xzf mdbtools-0.9.3.tar.gz \\\n  && apt-get update -y \\\n  && apt-get install -y --fix-missing --no-install-recommends bison flex gawk \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd mdbtools-0.9.3 \\\n  && patch -p0 < /buildscripts/mdbtools-lexer.patch \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-unixodbc=/usr \"${WITH_HOST}\" \\\n  && make -j$(nproc) \\\n  && mkdir -p /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu/odbc \\\n  && mkdir -p /build_thirdparty/lib/${GCC_ARCH}-linux-gnu \\\n  && cp ./src/odbc/.libs/libmdbodbc.so /build_thirdparty/usr/lib/${GCC_ARCH}-linux-gnu/odbc \\\n  && cp ./src/libmdb/.libs/libmdb.so.3 /build_thirdparty/lib/${GCC_ARCH}-linux-gnu \\\n  && cp ./src/sql/.libs/libmdbsql.so.3 /build_thirdparty/lib/${GCC_ARCH}-linux-gnu \\\n  && cd .. \\\n  && rm -rf mdbtools-0.9.3* && rm mdbtools-0.9.3.tar.gz\n\n#Set CLASSPATH so jars are found\nENV CLASSPATH=\"/build/usr/share/java/jackcess-1.1.14.jar:/build/usr/share/java/commons-logging-1.1.1.jar:/build/usr/share/java/commons-lang-2.4.jar\"\n\n#Build File Geodatabase\n\nARG WITH_FILEGDB=\nRUN . /buildscripts/bh-set-envvars.sh \\\n  && if echo \"$WITH_FILEGDB\" | grep -Eiq \"^(y(es)?|1|true)$\"  ; then ( \\\n  wget -q https://github.com/Esri/file-geodatabase-api/raw/master/FileGDB_API_1.5.2/FileGDB_API-RHEL7-64gcc83.tar.gz \\\n  && tar -xzf FileGDB_API-RHEL7-64gcc83.tar.gz \\\n  && chown -R root:root FileGDB_API-RHEL7-64gcc83 \\\n  && mv FileGDB_API-RHEL7-64gcc83 /usr/local/FileGDB_API \\\n  && rm -rf /usr/local/FileGDB_API/lib/libstdc++* \\\n  && cp /usr/local/FileGDB_API/lib/* /build_thirdparty/usr/lib \\\n  && cp /usr/local/FileGDB_API/include/* /usr/include \\\n  && rm -rf FileGDB_API-RHEL7-64gcc83.tar.gz \\\n  ) ; fi\n\n\nARG WITH_PDFIUM=yes\nRUN if echo \"$WITH_PDFIUM\" | grep -Eiq \"^(y(es)?|1|true)$\"  ; then ( \\\n  wget -q https://github.com/rouault/pdfium_build_gdal_3_4/releases/download/v2_pdfium_4627/install-ubuntu2004-rev4627.tar.gz \\\n  && tar -xzf install-ubuntu2004-rev4627.tar.gz \\\n  && chown -R root:root install \\\n  && mv install/lib/* /usr/lib/ \\\n  && mv install/include/* /usr/include/ \\\n  && rm -rf install-ubuntu2004-rev4627.tar.gz install \\\n  && apt-get update -y \\\n  && apt-get install -y --fix-missing --no-install-recommends liblcms2-dev${APT_ARCH_SUFFIX} \\\n  && rm -rf /var/lib/apt/lists/* \\\n  ) ; fi\n\n# Build libjxl\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && git clone https://github.com/libjxl/libjxl.git --recursive \\\n    && cd libjxl \\\n    && mkdir build \\\n    && cd build \\\n    && cmake -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF .. \\\n    && make -j$(nproc) \\\n    && make -j$(nproc) install \\\n    && make install DESTDIR=\"/build_thirdparty\" \\\n    && cd ../.. \\\n    && rm -rf libjxl\n\nRUN apt-get update -y \\\n    && apt-get install -y --fix-missing --no-install-recommends rsync ccache \\\n    && rm -rf /var/lib/apt/lists/*\nARG RSYNC_REMOTE\n\nARG WITH_DEBUG_SYMBOLS=no\n\n# Refresh grids\nARG PROJ_DATUMGRID_LATEST_LAST_MODIFIED\nARG PROJ_INSTALL_PREFIX=/usr/local\nCOPY ./bh-proj.sh /buildscripts/bh-proj.sh\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && DESTDIR=/build_tmp_proj /buildscripts/bh-proj.sh \\\n     && LD_LIBRARY_PATH=/build_tmp_proj/usr/local/lib /build_tmp_proj/usr/local/bin/projsync --target-dir /tmp/proj_grids --all \\\n     && rm -rf /build_tmp_proj\n\n# Build PROJ\nARG PROJ_VERSION=master\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && /buildscripts/bh-proj.sh\n\nARG GDAL_VERSION=master\nARG GDAL_RELEASE_DATE\nARG GDAL_BUILD_IS_RELEASE\nARG GDAL_REPOSITORY=OSGeo/gdal\n\n# Build GDAL\n\nCOPY ./bh-gdal.sh /buildscripts/bh-gdal.sh\nRUN . /buildscripts/bh-set-envvars.sh \\\n    && /buildscripts/bh-gdal.sh\n\n# Build final image\nFROM $TARGET_BASE_IMAGE as runner\n\nUSER root\nRUN date\nARG JAVA_VERSION=11\n\nRUN apt-get update \\\n# PROJ dependencies \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        libsqlite3-0 libtiff5 libcurl4 \\\n        wget curl unzip ca-certificates \\\n# GDAL dependencies\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        libcharls2 libopenjp2-7 libcairo2 python3-numpy \\\n        libpng16-16 libjpeg-turbo8 libgif7 liblzma5 libgeos-3.8.0 libgeos-c1v5 \\\n        libxml2 libexpat1 \\\n        libxerces-c3.2 libnetcdf-c++4 netcdf-bin libpoppler97 libspatialite7 gpsbabel \\\n        libhdf4-0-alt libhdf5-103 libhdf5-cpp-103 poppler-utils libfreexl1 unixodbc libwebp6 \\\n        libepsilon1 liblcms2-2 libpcre3 libcrypto++6 libdap25 libdapclient6v5 libfyba0 \\\n        libkmlbase1 libkmlconvenience1 libkmldom1 libkmlengine1 libkmlregionator1 libkmlxsd1 \\\n        libmysqlclient21 libogdi4.1 libcfitsio8 openjdk-\"$JAVA_VERSION\"-jre \\\n        libzstd1 bash bash-completion libpq5 libssl1.1 \\\n        libarmadillo9 libpython3.8 libopenexr24 libheif1 \\\n        libdeflate0 libblosc1 liblz4-1 \\\n        libbrotli1 \\\n        python-is-python3 \\\n    # Workaround bug in ogdi packaging\n    && ln -s /usr/lib/ogdi/libvrf.so /usr/lib \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Attempt to order layers starting with less frequently varying ones\n\nCOPY --from=builder  /build_thirdparty/usr/ /usr/\nCOPY --from=builder  /build_thirdparty/lib/ /lib/\n\nARG PROJ_INSTALL_PREFIX=/usr/local\nCOPY --from=builder  /tmp/proj_grids/* ${PROJ_INSTALL_PREFIX}/share/proj/\n\nCOPY --from=builder  /build${PROJ_INSTALL_PREFIX}/share/proj/ ${PROJ_INSTALL_PREFIX}/share/proj/\nCOPY --from=builder  /build${PROJ_INSTALL_PREFIX}/include/ ${PROJ_INSTALL_PREFIX}/include/\nCOPY --from=builder  /build${PROJ_INSTALL_PREFIX}/bin/ ${PROJ_INSTALL_PREFIX}/bin/\nCOPY --from=builder  /build${PROJ_INSTALL_PREFIX}/lib/ ${PROJ_INSTALL_PREFIX}/lib/\n\nCOPY --from=builder  /build/usr/share/java /usr/share/java\nCOPY --from=builder  /build/usr/share/gdal/ /usr/share/gdal/\nCOPY --from=builder  /build/usr/include/ /usr/include/\nCOPY --from=builder  /build_gdal_python/usr/ /usr/\nCOPY --from=builder  /build_gdal_version_changing/usr/ /usr/\n\nRUN ldconfig\n\n#Set CLASSPATH so jars are found\nENV CLASSPATH=\"/usr/share/java/jackcess-1.1.14.jar:/usr/share/java/commons-logging-1.1.1.jar:/usr/share/java/commons-lang-2.4.jar\"\n"
}