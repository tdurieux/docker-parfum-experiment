{
  "startTime": 1674254189424,
  "endTime": 1674254190311,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 39,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Note from Brandon on 2015-01-13:\n#\n#   Always push this from an OSX Docker machine.\n#\n#   If I build this on my Arch Linux desktop it works fine locally,\n#   but dlib gives an `Illegal Instruction (core dumped)` error in\n#   dlib.get_frontal_face_detector() when running on OSX in a Docker machine.\n#   Building in a Docker machine on OSX fixes this issue and the built\n#   container successfully deploys on my Arch Linux desktop.\n#\n# Building and pushing:\n#   docker build -f opencv-dlib-torch.Dockerfile -t opencv-dlib-torch .\n#   docker tag <tag of last container> bamos/ubuntu-opencv-dlib-torch:ubuntu_14.04-opencv_2.4.11-dlib_18.16-torch_2016.03.19\n#   docker push bamos/ubuntu-opencv-dlib-torch:ubuntu_14.04-opencv_2.4.11-dlib_18.16-torch_2016.03.19\n\nFROM ubuntu:14.04\nMAINTAINER Brandon Amos <brandon.amos.cs@gmail.com>\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    curl \\\n    gfortran \\\n    git \\\n    graphicsmagick \\\n    libgraphicsmagick1-dev \\\n    libatlas-dev \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libboost-all-dev \\\n    libgtk2.0-dev \\\n    libjpeg-dev \\\n    liblapack-dev \\\n    libswscale-dev \\\n    pkg-config \\\n    python-dev \\\n    python-numpy \\\n    python-protobuf \\\n    software-properties-common \\\n    zip \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN curl -f -s https://raw.githubusercontent.com/torch/ezinstall/master/install-deps | bash -e\nRUN git clone https://github.com/torch/distro.git ~/torch --recursive\nRUN cd ~/torch && ./install.sh && \\\n    cd install/bin && \\\n    ./luarocks install nn && \\\n    ./luarocks install dpnn && \\\n    ./luarocks install image && \\\n    ./luarocks install optim && \\\n    ./luarocks install csvigo && \\\n    ./luarocks install torchx && \\\n    ./luarocks install tds\n\nRUN cd ~ && \\\n    mkdir -p ocv-tmp && \\\n    cd ocv-tmp && \\\n    curl -f -L https://github.com/Itseez/opencv/archive/2.4.11.zip -o ocv.zip && \\\n    unzip ocv.zip && \\\n    cd opencv-2.4.11 && \\\n    mkdir release && \\\n    cd release && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n          -D CMAKE_INSTALL_PREFIX=/usr/local \\\n          -D BUILD_PYTHON_SUPPORT=ON \\\n          .. && \\\n    make -j8 && \\\n    make install && \\\n    rm -rf ~/ocv-tmp\n\nRUN cd ~ && \\\n    mkdir -p dlib-tmp && \\\n    cd dlib-tmp && \\\n    curl -f -L \\\n         https://github.com/davisking/dlib/archive/v19.0.tar.gz \\\n         -o dlib.tar.bz2 && \\\n    tar xf dlib.tar.bz2 && \\\n    cd dlib-19.0/python_examples && \\\n    mkdir build && \\\n    cd build && \\\n    cmake ../../tools/python && \\\n    cmake --build . --config Release && \\\n    cp dlib.so /usr/local/lib/python2.7/dist-packages && \\\n    rm -rf ~/dlib-tmp && rm dlib.tar.bz2\n"
}