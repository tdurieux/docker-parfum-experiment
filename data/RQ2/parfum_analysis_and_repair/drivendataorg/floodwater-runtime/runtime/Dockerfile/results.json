{
  "startTime": 1674251756251,
  "endTime": 1674251757263,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.0-base-ubuntu20.04\n# adapated from build file for pangeo images\n# https://github.com/pangeo-data/pangeo-docker-images\n\nARG CPU_OR_GPU=gpu\n\nENV CONDA_VERSION=4.10.3-2 \\\n    CONDA_ENV=condaenv \\\n    NB_USER=appuser \\\n    NB_UID=1000 \\\n    SHELL=/bin/bash \\\n    LANG=C.UTF-8  \\\n    LC_ALL=C.UTF-8 \\\n    CONDA_DIR=/srv/conda \\\n    DEBIAN_FRONTEND=noninteractive\n\nENV NB_PYTHON_PREFIX=${CONDA_DIR}/envs/${CONDA_ENV} \\\n    DASK_ROOT_CONFIG=${CONDA_DIR}/etc \\\n    CPU_OR_GPU=${CPU_OR_GPU} \\\n    HOME=/home/${NB_USER} \\\n    PATH=${CONDA_DIR}/bin:${PATH}\n\n# ======================== root ========================\n# initialize paths we will use\nRUN mkdir -p /codeexecution\n\n# Create appuser user, permissions, add conda init to startup script\nRUN echo \"Creating ${NB_USER} user...\" \\\n    && groupadd --gid ${NB_UID} ${NB_USER}  \\\n    && useradd --create-home --gid ${NB_UID} --no-log-init --uid ${NB_UID} ${NB_USER} \\\n    && echo \". ${CONDA_DIR}/etc/profile.d/conda.sh ; conda activate ${CONDA_ENV}\" > /etc/profile.d/init_conda.sh \\\n    && chown -R ${NB_USER}:${NB_USER} /srv /codeexecution\n\n# Install base packages\nARG DEBIAN_FRONTEND=noninteractive\nCOPY ./apt.txt /home/${NB_USER}\nRUN echo \"Installing base packages...\" \\\n    && apt-get update --fix-missing \\\n    && apt-get install --no-install-recommends -y apt-utils 2> /dev/null \\\n    && apt-get install --no-install-recommends -y wget zip tzdata \\\n    && xargs -a /home/${NB_USER}/apt.txt apt-get install -y \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /home/${NB_USER}/apt.txt\n# ======================================================\n\n# ======================== user ========================\nUSER ${NB_USER}\n\n# Install conda\nRUN echo \"Installing Miniforge...\" \\\n    && URL=\"https://github.com/conda-forge/miniforge/releases/download/${CONDA_VERSION}/Miniforge3-${CONDA_VERSION}-Linux-x86_64.sh\" \\\n    && wget --quiet ${URL} -O /home/${NB_USER}/miniconda.sh \\\n    && /bin/bash /home/${NB_USER}/miniconda.sh -u -b -p ${CONDA_DIR} \\\n    && rm /home/${NB_USER}/miniconda.sh \\\n    && conda install -y -c conda-forge mamba \\\n    && mamba clean -afy \\\n    && find ${CONDA_DIR} -follow -type f -name '*.a' -delete \\\n    && find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete\n\n# Switch back to root for installing conda packages\nCOPY environment-${CPU_OR_GPU}.yml /home/${NB_USER}/environment.yml\nRUN mamba env create --name ${CONDA_ENV} -f /home/${NB_USER}/environment.yml  \\\n    && mamba clean -afy \\\n    && rm /home/${NB_USER}/environment.yml \\\n    && find ${CONDA_DIR} -follow -type f -name '*.a' -delete \\\n    && find ${CONDA_DIR} -follow -type f -name '*.pyc' -delete \\\n    && find ${CONDA_DIR} -follow -type f -name '*.js.map' -delete\n\n# Copy run script into working dir and set it as the working doie\nWORKDIR /codeexecution\nCOPY --chown=appuser:appuser scripts /codeexecution/scripts\nCOPY --chown=appuser:appuser tests /codeexecution/tests\nCOPY --chown=appuser:appuser data /codeexecution/data\nCOPY --chown=appuser:appuser entrypoint.sh /codeexecution/entrypoint.sh\nCMD [\"/bin/bash\", \"/codeexecution/entrypoint.sh\"]"
}