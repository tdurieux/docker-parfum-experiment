{
  "startTime": 1674255962399,
  "endTime": 1674255963708,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 6,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 22,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Using official python runtime base image\nFROM ubuntu:18.04\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV DEBIAN_FRONTEND=noninteractive\n# Java installation.\nENV LANG C.UTF-8\n# add a simple script that can auto-detect the appropriate JAVA_HOME value\n# based on whether the JDK or only the JRE is installed\nRUN { \\\n    echo '#!/bin/sh'; \\\n    echo 'set -e'; \\\n    echo; \\\n    echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n  } > /usr/local/bin/docker-java-home \\\n  && chmod +x /usr/local/bin/docker-java-home\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64\n\n# lsb\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        lsb-release mysql-server libmysqlclient-dev libsasl2-dev libpq-dev mysql-client \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        bzip2 unzip apt-transport-https xz-utils \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    openjdk-8-jdk  \\\n    && [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ] \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN /var/lib/dpkg/info/ca-certificates-java.postinst configure\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        postgresql postgresql-contrib \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        python-pip python3-pip virtualenvwrapper \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        git-all tig tmux vim less curl gnupg2 software-properties-common libpq-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \\\n    && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" \\\n    | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n    && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg \\\n    | apt-key add - \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends google-cloud-sdk \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n\n# Install python 3.6 for airflow's compatibility,\n# python-dev and necessary libraries to build all python packages\nRUN add-apt-repository ppa:deadsnakes/ppa \\\n    && apt-get update \\\n    && apt-get install  -y --no-install-recommends \\\n       python3.6 python3.6-dev python3.5 python3.5-dev python-dev \\\n       build-essential autoconf libtool libkrb5-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /workspace\nRUN mkdir -pv /airflow/dags\n# Set airflow home\nENV AIRFLOW_HOME /airflow\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        mlocate \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN updatedb\n\n# Setup un-privileged user with passwordless sudo access.\nRUN apt-get update && apt-get install -y --no-install-recommends sudo && apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN groupadd -r airflow && useradd -m -r -g airflow -G sudo airflow\nRUN echo 'airflow   ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends python-setuptools python3-setuptools \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade virtualenvwrapper \\\n   && pip3 install --no-cache-dir --upgrade virtualenvwrapper\n\nRUN source /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n    && mkvirtualenv -p /usr/bin/python3.6 airflow36  \\\n    && mkvirtualenv -p /usr/bin/python3.5 airflow35\n\n## Preinstall airflow\n## Airflow requires this variable be set on installation to avoid a GPL dependency.\nENV SLUGIFY_USES_TEXT_UNIDECODE yes\n\n# Note. Increase this number to force rebuilding to the latest dependencies\nENV REBUILD_AIRFLOW_BREEZE_VERSION=6\n\nARG AIRFLOW_REPO_URL=https://github.com/apache/airflow\nARG AIRFLOW_REPO_BRANCH=master\n\nRUN echo Checking out airflow source from ${AIRFLOW_REPO_URL}, branch: ${AIRFLOW_REPO_BRANCH}\nRUN git clone ${AIRFLOW_REPO_URL} temp_airflow\nRUN cd temp_airflow && git checkout ${AIRFLOW_REPO_BRANCH}\n\n# Speed up the installation of cassandra driver\nENV CASS_DRIVER_BUILD_CONCURRENCY=8\nENV CASS_DRIVER_NO_CYTHON=1\n\nRUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n    && cd temp_airflow \\\n    && workon airflow36 \\\n    && pip install --no-cache-dir --no-use-pep517 -e .[devel_ci]\n\nRUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \\\n    && cd temp_airflow \\\n    && workon airflow35 \\\n    && pip install --no-cache-dir --no-use-pep517 -e .[devel_ci]\n\nRUN apt-get update && apt-get install -y --no-install-recommends jq && apt-get clean && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf temp_airflow\n\nRUN mkdir -pv /airflow/output\n\nRUN sed -i \"s/^#listen_addresses.*/listen_addresses = '*'/\" /etc/postgresql/10/main/postgresql.conf\nRUN sed -i \"s/127.0.0.1\\/32/0.0.0.0\\/0/\" /etc/postgresql/10/main/pg_hba.conf\n\nRUN pip install --no-cache-dir awscli botocore\n\n## Add config and scripts\nCOPY airflow.cfg /airflow/airflow.cfg\nCOPY _init.sh /airflow/_init.sh\nCOPY _setup_gcp_key.sh /airflow/_setup_gcp_key.sh\nCOPY _reset.sh /airflow/_reset.sh\nCOPY _create_links.sh /airflow/_create_links.sh\nCOPY _setup_gcp_connection.py /airflow/_setup_gcp_connection.py\nCOPY _decrypt_encrypted_variables.sh /airflow/_decrypt_encrypted_variables.sh\nCOPY _bash_aliases /root/.bash_aliases\nCOPY _inputrc /root/.inputrc\nCOPY cloudbuild /root/cloudbuild\n"
}