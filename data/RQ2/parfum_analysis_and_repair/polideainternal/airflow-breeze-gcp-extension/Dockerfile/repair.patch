diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/polideainternal/airflow-breeze-gcp-extension/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/polideainternal/airflow-breeze-gcp-extension/Dockerfile/repaired.Dockerfile
index 5dbd15c..0b14239 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/polideainternal/airflow-breeze-gcp-extension/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/polideainternal/airflow-breeze-gcp-extension/Dockerfile/repaired.Dockerfile
@@ -40,44 +40,44 @@ ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64
 RUN apt-get update \
     && apt-get install -y --no-install-recommends \
         lsb-release mysql-server libmysqlclient-dev libsasl2-dev libpq-dev mysql-client \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update \
     && apt-get install -y --no-install-recommends \
         bzip2 unzip apt-transport-https xz-utils \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update \
     && apt-get install -y --no-install-recommends \
     openjdk-8-jdk  \
     && [ "$JAVA_HOME" = "$(docker-java-home)" ] \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN /var/lib/dpkg/info/ca-certificates-java.postinst configure
 
 RUN apt-get update \
     && apt-get install -y --no-install-recommends \
         postgresql postgresql-contrib \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update \
     && apt-get install -y --no-install-recommends \
         python-pip python3-pip virtualenvwrapper \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update \
     && apt-get install -y --no-install-recommends \
         git-all tig tmux vim less curl gnupg2 software-properties-common libpq-dev \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" \
     && echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" \
     | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \
-    && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg \
-    |apt-key add - \
+    && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg \
+    | apt-key add - \
     && apt-get update \
     && apt-get install -y --no-install-recommends google-cloud-sdk \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 
 # Install python 3.6 for airflow's compatibility,
@@ -87,7 +87,7 @@ RUN add-apt-repository ppa:deadsnakes/ppa \
     && apt-get install  -y --no-install-recommends \
        python3.6 python3.6-dev python3.5 python3.5-dev python-dev \
        build-essential autoconf libtool libkrb5-dev \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /workspace
 RUN mkdir -pv /airflow/dags
@@ -97,21 +97,21 @@ ENV AIRFLOW_HOME /airflow
 RUN apt-get update \
     && apt-get install -y --no-install-recommends \
         mlocate \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 RUN updatedb
 
 # Setup un-privileged user with passwordless sudo access.
-RUN apt-get update && apt-get install -y --no-install-recommends sudo && apt-get clean
+RUN apt-get update && apt-get install -y --no-install-recommends sudo && apt-get clean && rm -rf /var/lib/apt/lists/*;
 RUN groupadd -r airflow && useradd -m -r -g airflow -G sudo airflow
 RUN echo 'airflow   ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
 
 RUN apt-get update \
-    && apt-get install python-setuptools python3-setuptools \
-    && apt-get clean
+    && apt-get install -y --no-install-recommends python-setuptools python3-setuptools \
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
-RUN pip install --upgrade virtualenvwrapper \
-   && pip3 install --upgrade virtualenvwrapper
+RUN pip install --no-cache-dir --upgrade virtualenvwrapper \
+   && pip3 install --no-cache-dir --upgrade virtualenvwrapper
 
 RUN source /usr/share/virtualenvwrapper/virtualenvwrapper.sh \
     && mkvirtualenv -p /usr/bin/python3.6 airflow36  \
@@ -138,14 +138,14 @@ ENV CASS_DRIVER_NO_CYTHON=1
 RUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \
     && cd temp_airflow \
     && workon airflow36 \
-    && pip install --no-use-pep517 -e .[devel_ci]
+    && pip install --no-cache-dir --no-use-pep517 -e .[devel_ci]
 
 RUN . /usr/share/virtualenvwrapper/virtualenvwrapper.sh \
     && cd temp_airflow \
     && workon airflow35 \
-    && pip install --no-use-pep517 -e .[devel_ci]
+    && pip install --no-cache-dir --no-use-pep517 -e .[devel_ci]
 
-RUN apt-get update && apt-get install -y --no-install-recommends jq && apt-get clean
+RUN apt-get update && apt-get install -y --no-install-recommends jq && apt-get clean && rm -rf /var/lib/apt/lists/*;
 RUN rm -rf temp_airflow
 
 RUN mkdir -pv /airflow/output
@@ -153,7 +153,7 @@ RUN mkdir -pv /airflow/output
 RUN sed -i "s/^#listen_addresses.*/listen_addresses = '*'/" /etc/postgresql/10/main/postgresql.conf
 RUN sed -i "s/127.0.0.1\/32/0.0.0.0\/0/" /etc/postgresql/10/main/pg_hba.conf
 
-RUN pip install awscli botocore
+RUN pip install --no-cache-dir awscli botocore
 
 ## Add config and scripts
 COPY airflow.cfg /airflow/airflow.cfg