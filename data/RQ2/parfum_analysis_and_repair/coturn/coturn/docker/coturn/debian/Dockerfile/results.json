{
  "startTime": 1674253441037,
  "endTime": 1674253442482,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 136,
        "lineEnd": 143,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedDockerfile": "#\n# Dockerfile of coturn/coturn:debian Docker image.\n#\n\nARG debian_ver=bullseye\n\n\n\n\n#\n# Stage 'dist-libprom' creates prometheus-client-c distribution.\n#\n\n# We compile prometheus-client-c from sources, because Debian doesn't provide\n# it as its package yet.\n#\n# TODO: Re-check this to be present in packages on next Debian major version update.\n\n# https://hub.docker.com/_/debian\nFROM debian:${debian_ver}-slim AS dist-libprom\n\n# Install tools for building.\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends --no-install-suggests \\\n            ca-certificates cmake g++ git make \\\n && update-ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install prometheus-client-c build dependencies.\nRUN apt-get install -y --no-install-recommends --no-install-suggests \\\n            libmicrohttpd-dev && rm -rf /var/lib/apt/lists/*;\n\n# Prepare prometheus-client-c sources for building.\nARG prom_ver=0.1.3\nRUN mkdir -p /build/ && cd /build/ \\\n && git init \\\n && git remote add origin https://github.com/digitalocean/prometheus-client-c \\\n && git fetch --depth=1 origin \"v${prom_ver}\" \\\n && git checkout FETCH_HEAD\n\n# Build libprom.so from sources.\nRUN mkdir -p /build/prom/build/ && cd /build/prom/build/ \\\n && TEST=0 cmake -G \"Unix Makefiles\" \\\n                 -DCMAKE_INSTALL_PREFIX=/usr \\\n                 -DCMAKE_SKIP_BUILD_RPATH=TRUE \\\n                 -DCMAKE_C_FLAGS=\"-DPROM_LOG_ENABLE -g -O3\" \\\n                 .. \\\n && make\n\n# Build libpromhttp.so from sources.\nRUN mkdir -p /build/promhttp/build/ && cd /build/promhttp/build/ \\\n # Fix compiler warning: -Werror=incompatible-pointer-types\n && sed -i 's/\\&promhttp_handler/(MHD_AccessHandlerCallback)\\&promhttp_handler/' \\\n           /build/promhttp/src/promhttp.c \\\n && TEST=0 cmake -G \"Unix Makefiles\" \\\n                 -DCMAKE_INSTALL_PREFIX=/usr \\\n                 -DCMAKE_SKIP_BUILD_RPATH=TRUE \\\n                 -DCMAKE_C_FLAGS=\"-g -O3\" \\\n                 .. \\\n && make VERBOSE=1\n\n# Install prometheus-client-c.\nRUN LIBS_DIR=/out/$(dirname $(find /usr/ -name libc.so)) \\\n && mkdir -p $LIBS_DIR/ \\\n && cp -rf /build/prom/build/libprom.so \\\n           /build/promhttp/build/libpromhttp.so \\\n       $LIBS_DIR/ \\\n && mkdir -p /out/usr/include/ \\\n && cp -rf /build/prom/include/* \\\n           /build/promhttp/include/* \\\n       /out/usr/include/ \\\n # Preserve license file.\n && mkdir -p /out/usr/share/licenses/prometheus-client-c/ \\\n && cp /build/LICENSE /out/usr/share/licenses/prometheus-client-c/\n\n\n\n\n#\n# Stage 'dist-coturn' creates Coturn distribution.\n#\n\n# https://hub.docker.com/_/debian\nFROM debian:${debian_ver}-slim AS dist-coturn\n\n# Install tools for building.\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends --no-install-suggests \\\n            autoconf ca-certificates coreutils g++ git libtool make pkg-config \\\n && update-ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Install Coturn build dependencies.\nRUN apt-get install -y --no-install-recommends --no-install-suggests \\\n            libevent-dev \\\n            libssl-dev \\\n            libpq-dev libmariadb-dev libsqlite3-dev \\\n            libhiredis-dev \\\n            libmongoc-dev \\\n            libmicrohttpd-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install prometheus-client-c distribution.\nCOPY --from=dist-libprom /out/ /\n\n# Prepare local Coturn sources for building.\nCOPY CMakeLists.txt \\\n     configure \\\n     INSTALL \\\n     LICENSE LICENSE.OpenSSL \\\n     make-man.sh Makefile.in \\\n     postinstall.txt \\\n     README.turn* \\\n     /app/\nCOPY cmake/ /app/cmake/\nCOPY examples/ /app/examples/\nCOPY man/ /app/man/\nCOPY src/ /app/src/\nCOPY turndb/ /app/turndb/\nWORKDIR /app/\n\n# Use Coturn sources from Git if `coturn_git_ref` is specified.\nARG coturn_git_ref=HEAD\nARG coturn_github_url=https://github.com\nARG coturn_github_repo=coturn/coturn\n\nRUN if [ \"${coturn_git_ref}\" != 'HEAD' ]; then true \\\n && rm -rf /app/* \\\n && git init \\\n && git remote add origin ${coturn_github_url}/${coturn_github_repo} \\\n && git fetch --depth=1 origin \"${coturn_git_ref}\" \\\n && git checkout FETCH_HEAD \\\n && true; fi\n# TODO: Remove `OSLIBS` line with next Coturn release having it in `configure`.\nRUN if [ \"${coturn_git_ref}\" = '4.5.2' ]; then true \\\n && sed -i -e '850i\\OSLIBS=\"$\\{OSLIBS\\} -latomic\"' ./configure \\\n && true; fi\n\n# Build Coturn from sources.\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n                --turndbdir=/var/lib/coturn \\\n                --disable-rpath \\\n                --sysconfdir=/etc/coturn \\\n                # No documentation included to keep image size smaller.\n                --mandir=/tmp/coturn/man \\\n                --docsdir=/tmp/coturn/docs \\\n                --examplesdir=/tmp/coturn/examples \\\n && make\n\n# Install and configure Coturn.\nRUN mkdir -p /out/ \\\n && DESTDIR=/out make install \\\n # Remove redundant files.\n && rm -rf /out/tmp/ \\\n # Preserve license file.\n && mkdir -p /out/usr/share/licenses/coturn/ \\\n && cp LICENSE /out/usr/share/licenses/coturn/ \\\n # Remove default config file.\n && rm -f /out/etc/coturn/turnserver.conf.default\n\n# Install helper tools of Docker image.\nCOPY docker/coturn/rootfs/ /out/\nCOPY docker/coturn/debian/rootfs/ /out/\nRUN chmod +x /out/usr/local/bin/docker-entrypoint.sh \\\n             /out/usr/local/bin/detect-external-ip.sh\nRUN ln -s /usr/local/bin/detect-external-ip.sh \\\n          /out/usr/local/bin/detect-external-ip\nRUN chown -R nobody:nogroup /out/var/lib/coturn/\n\n# Re-export prometheus-client-c distribution.\nCOPY --from=dist-libprom /out/ /out/\n\n\n\n\n#\n# Stage 'runtime' creates final Docker image to use in runtime.\n#\n\n# https://hub.docker.com/_/debian\nFROM debian:${debian_ver}-slim AS runtime\n\n# Update system packages.\nRUN apt-get update \\\n && apt-get upgrade -y \\\n && apt-get install -y --no-install-recommends --no-install-suggests \\\n            ca-certificates \\\n && update-ca-certificates \\\n # Install Coturn dependencies.\n && apt-get install -y --no-install-recommends --no-install-suggests \\\n            libatomic1 \\\n            libevent-2.1-7 libevent-core-2.1-7 libevent-extra-2.1-7 \\\n            libevent-openssl-2.1-7 libevent-pthreads-2.1-7 \\\n            libssl1.1 \\\n            libpq5 libmariadb3 libsqlite3-0 \\\n            libhiredis0.14 \\\n            libmongoc-1.0-0 \\\n            libmicrohttpd12 \\\n # Install `dig` tool for `detect-external-ip.sh`.\n && apt-get install -y --no-install-recommends --no-install-suggests \\\n            dnsutils \\\n # Cleanup unnecessary stuff.\n && rm -rf /var/lib/apt/lists/*\n\n# Install Coturn distribution.\nCOPY --from=dist-coturn /out/ /\n\n# Allow non-root using privileged ports.\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends --no-install-suggests \\\n            libcap2-bin \\\n && setcap CAP_NET_BIND_SERVICE=+ep /usr/bin/turnserver \\\n # Cleanup unnecessary stuff.\n && apt-get purge -y --auto-remove \\\n                  -o APT::AutoRemove::RecommendsImportant=false \\\n            libcap2-bin \\\n && rm -rf /var/lib/apt/lists/*\n\nUSER nobody:nogroup\n\nEXPOSE 3478 3478/udp 5349 5349/udp\n\nVOLUME [\"/var/lib/coturn\"]\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nCMD [\"--log-file=stdout\", \"--external-ip=$(detect-external-ip)\"]\n"
}