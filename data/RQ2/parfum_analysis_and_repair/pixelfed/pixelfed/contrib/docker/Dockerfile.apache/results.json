{
  "startTime": 1674217240654,
  "endTime": 1674217244360,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-apache-bullseye\n\n# Use the default production configuration\nCOPY contrib/docker/php.production.ini \"$PHP_INI_DIR/php.ini\"\n\n# Install Composer\nENV COMPOSER_VERSION=2.1.14 \\\n    COMPOSER_HOME=/var/www/.composer \\\n    COMPOSER_MEMORY_LIMIT=-1 \\\n    PATH=\"~/.composer/vendor/bin:./vendor/bin:${PATH}\"\nARG DEBIAN_FRONTEND=noninteractive\nWORKDIR /var/www/\nRUN curl -f -o /tmp/composer-setup.php https://getcomposer.org/installer \\\n  && curl -f -o /tmp/composer-setup.sig https://composer.github.io/installer.sig \\\n  && php -r \"if (hash('SHA384', file_get_contents('/tmp/composer-setup.php')) !== trim(file_get_contents('/tmp/composer-setup.sig'))) { unlink('/tmp/composer-setup.php'); echo 'Invalid installer' . PHP_EOL; exit(1); }\" \\\n  && php /tmp/composer-setup.php --no-ansi --install-dir=/usr/local/bin --filename=composer --version=${COMPOSER_VERSION} && rm -rf /tmp/composer-setup.php \\\n  && apt-get update \\\n  && apt-get upgrade -y \\\n#  && apt-get install -y --no-install-recommends apt-utils \\\n  && apt-get install -y --no-install-recommends \\\n## Standard\n      locales \\\n      locales-all \\\n      git \\\n      gosu \\\n      zip \\\n      unzip \\ \n      libzip-dev \\ \n      libcurl4-openssl-dev \\\n## Image Optimization\n      optipng \\\n      pngquant \\\n      jpegoptim \\\n      gifsicle \\\n## Image Processing\n      libjpeg62-turbo-dev \\\n      libpng-dev \\\n      libmagickwand-dev \\\n# Required for GD\n      libxpm4 \\\n      libxpm-dev \\\n      libwebp6 \\\n      libwebp-dev \\\n## Video Processing\n      ffmpeg \\\n## Database\n#      libpq-dev \\\n#      libsqlite3-dev \\\n      mariadb-client \\\n# Locales Update\n  && sed -i '/en_US/s/^#//g' /etc/locale.gen \\\n  && locale-gen \\\n  && update-locale \\\n# Install PHP extensions\n  && docker-php-source extract \\\n#PHP Imagemagick extensions\n  && pecl install imagick \\\n  && docker-php-ext-enable imagick \\\n# PHP GD extensions\n  && docker-php-ext-configure gd \\\n      --with-freetype \\\n      --with-jpeg \\\n      --with-webp \\\n      --with-xpm \\\n  && docker-php-ext-install -j$(nproc) gd \\\n#PHP Redis extensions\n  && pecl install redis \\\n  && docker-php-ext-enable redis \\\n#PHP Database extensions\n  && docker-php-ext-install pdo_mysql \\\n#pdo_pgsql pdo_sqlite \\\n#PHP extensions (dependencies)\n  && docker-php-ext-configure intl \\\n  && docker-php-ext-install -j$(nproc) intl bcmath zip pcntl exif curl \\\n#APACHE Bootstrap\n  && a2enmod rewrite remoteip \\\n && {\\\n     echo RemoteIPHeader X-Real-IP ;\\\n     echo RemoteIPTrustedProxy 10.0.0.0/8 ;\\\n     echo RemoteIPTrustedProxy 172.16.0.0/12 ;\\\n     echo RemoteIPTrustedProxy 192.168.0.0/16 ;\\\n     echo SetEnvIf X-Forwarded-Proto \"https\" HTTPS=on ;\\\n    } > /etc/apache2/conf-available/remoteip.conf \\\n && a2enconf remoteip \\\n#Cleanup\n  && docker-php-source delete \\\n  && apt-get autoremove --purge -y \\\n  && apt-get clean \\\n  && rm -rf /var/cache/apt \\\n  && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /var/www/\n# for detail why storage is copied this way, pls refer to https://github.com/pixelfed/pixelfed/pull/2137#discussion_r434468862\nRUN cp -r storage storage.skel \\\n  && composer install --prefer-dist --no-interaction --no-ansi --optimize-autoloader \\\n  && rm -rf html && ln -s public html \\\n  && chown -R www-data:www-data /var/www\nVOLUME /var/www/storage /var/www/bootstrap\n\nCMD [\"/var/www/contrib/docker/start.apache.sh\"]\n"
}