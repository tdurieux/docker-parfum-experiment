{
  "startTime": 1674253157822,
  "endTime": 1674253158626,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 37,
        "columnEnd": 86
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 37,
        "columnEnd": 86
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:8.0-cudnn5-devel\nLABEL maintainer \"Qiniu ATLab <ai@qiniu.com>\"\n\nRUN sed -i s/archive.ubuntu.com/mirrors.163.com/g /etc/apt/sources.list\nRUN sed -i s/security.ubuntu.com/mirrors.163.com/g /etc/apt/sources.list\n\n# apt-get && python && pip\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ca-certificates wget vim lrzsz curl git unzip build-essential cmake \\\n    python-dev python-pip \\\n    libatlas-base-dev libopencv-dev libcurl4-openssl-dev \\\n    libgtest-dev \\\n    openssh-server rsync && \\\n    cd /usr/src/gtest && cmake CMakeLists.txt && make && cp *.a /usr/lib && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# pip\nRUN pip install --no-cache-dir -U pip setuptools && pip install --no-cache-dir nose pylint numpy nose-timer requests\n\n# opencv 3\nRUN export OPENCV_CONTRIB_ROOT=/tmp/opencv-contrib OPENCV_ROOT=/tmp/opencv OPENCV_VER=3.2.0 && \\\n    git clone -b ${OPENCV_VER} --depth 1 https://github.com/opencv/opencv.git ${OPENCV_ROOT} && \\\n    git clone -b ${OPENCV_VER} --depth 1 https://github.com/opencv/opencv_contrib.git ${OPENCV_CONTRIB_ROOT} && \\\n    mkdir -p ${OPENCV_ROOT}/build && cd ${OPENCV_ROOT}/build && \\\n    cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local \\\n    -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF \\\n    -D OPENCV_EXTRA_MODULES_PATH=${OPENCV_CONTRIB_ROOT}/modules \\\n    -D WITH_CUDA=ON -D BUILD_opencv_python2=ON -D BUILD_EXAMPLES=OFF .. && \\\n    make -j\"$(nproc)\" && make install && ldconfig && \\\n    rm -rf /tmp/*\n\n# mxnet\nENV MXNET_ROOT=/opt/mxnet MXNET_VER=v0.9.3\n\nWORKDIR $MXNET_ROOT\nRUN git clone -b ${MXNET_VER} --depth 1 --recursive https://github.com/dmlc/mxnet . && \\\n    pip install --no-cache-dir -U pip setuptools && pip install --no-cache-dir nose pylint numpy nose-timer requests && \\\n    make -j\"$(nproc)\" USE_DIST_KVSTORE=1 USE_CUDA=1 USE_CUDA_PATH=/usr/local/cuda USE_CUDNN=1 && \\\n    rm -rf build\n\nENV PYMXNET_ROOT=$MXNET_ROOT/python\nENV PYTHONPATH=$PYMXNET_ROOT:$PYTHONPATH\n\nWORKDIR /workspace\n# 将时区改成 GMT+8\nRUN wget https://ooc9uea7n.bkt.clouddn.com/docker/PRC-tz -O /tmp/PRC-tz && mv /tmp/PRC-tz /etc/localtime\nLABEL com.qiniu.atlab.os = \"ubuntu-16.04\"\nLABEL com.qiniu.atlab.type = \"mxnet\"\n\n"
}