{
  "startTime": 1674253051982,
  "endTime": 1674253052652,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 177
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 177
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Use debian:stable-slim as a builder and then copy everything.\nFROM debian:stable-slim as builder\n\nARG is_secure=\"false\"\n\nRUN if [ -z \"$is_secure\" ] ; then echo is_secure argument not provided ; else echo is_secure: $is_secure ; fi\n\n#Set mosquitto and plugin versions.\n#Change them for your needs.\nENV MOSQUITTO_VERSION=1.6.9\nENV PLUGIN_VERSION=0.7.0\n\nWORKDIR /app\n\n#Get mosquitto build dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y libwebsockets16 libwebsockets-dev libc-ares2 libc-ares-dev openssl uuid uuid-dev wget build-essential git libc-ares2 openssl uuid golang && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p mosquitto/auth mosquitto/conf.d\n\nRUN wget https://mosquitto.org/files/source/mosquitto-${MOSQUITTO_VERSION}.tar.gz\nRUN tar xzvf mosquitto-${MOSQUITTO_VERSION}.tar.gz && rm mosquitto-${MOSQUITTO_VERSION}.tar.gz\n\n#Build mosquitto.\nRUN cd mosquitto-${MOSQUITTO_VERSION} && make WITH_WEBSOCKETS=yes && make install && cd ..\n\n#Get the plugin.\nRUN wget https://github.com/iegomez/mosquitto-go-auth/archive/${PLUGIN_VERSION}.tar.gz \\\n    && tar xvf *.tar.gz --strip-components=1 \\\n    ; rm -rf go*.tar.gz\n\n#Build the plugin.\nRUN export PATH=$PATH:/usr/local/go/bin && export CGO_CFLAGS=\"-I/usr/local/include -fPIC\" \\\n    && export CGO_LDFLAGS=\"-shared\" && pwd && ls -la; make\n\n#Start from a new image.\nFROM debian:stable-slim\n\n#Get mosquitto dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y libwebsockets16 libc-ares2 openssl uuid && rm -rf /var/lib/apt/lists/*;\n\n#Setup mosquitto env.\nRUN mkdir -p /var/lib/mosquitto /var/log/mosquitto\nRUN groupadd mosquitto \\\n    && useradd -s /sbin/nologin mosquitto -g mosquitto -d /var/lib/mosquitto \\\n    && chown -R mosquitto:mosquitto /var/log/mosquitto/ \\\n    && chown -R mosquitto:mosquitto /var/lib/mosquitto/\n\n#Copy confs, plugin so and mosquitto binary.\nCOPY --from=builder /app/mosquitto/ /mosquitto/\nCOPY --from=builder /app/go-auth.so /tmp/go-auth.so\nCOPY --from=builder /usr/local/sbin/mosquitto /usr/sbin/mosquitto\n\n#Uncomment to copy your custom confs (change accordingly) directly when building the image.\n#Leave commented if you want to mount a volume for these (see docker-compose.yml).\n\nCOPY mosquitto.conf /etc/mosquitto/mosquitto.conf\nCOPY mosquitto-go-auth.conf /tmp/go-auth.conf\nRUN mkdir -p /etc/mosquitto/conf.d; if [ \"$is_secure\" = \"true\" ] ; then mv /tmp/go-auth.so /mosquitto/go-auth.so; \\\n    cp /tmp/go-auth.conf /etc/mosquitto/conf.d/go-auth.conf ; fi\n\n#COPY conf/auth/acls /etc/mosquitto/auth/acls\n#COPY conf/auth/passwords /etc/mosquitto/auth/passwords\n\n#Expose tcp and websocket ports as defined at mosquitto.conf (change accordingly).\nEXPOSE 1883 1884\nVOLUME /var/lib/mosquitto\nUSER mosquitto\n\nENTRYPOINT [\"sh\", \"-c\", \"/usr/sbin/mosquitto -c /etc/mosquitto/mosquitto.conf\" ]"
}