{
  "startTime": 1674249905498,
  "endTime": 1674249906311,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 18,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM dockerregistry.test.netflix.net:7002/engtools/bionicbase\n\nHEALTHCHECK --interval=1m --timeout=3s CMD curl -f $EC2_LOCAL_IPV4 || exit 1\nLABEL \"com.netflix.titus.systemd\"=\"true\"\nENV container docker\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt update && apt install --no-install-recommends -y \\\n    dbus \\\n    systemd \\\n    locales \\\n    curl \\\n    build-essential \\\n    git \\\n    gunicorn3 \\\n    nginx \\\n    python3-all \\\n    python3-dev \\\n    python3-pip \\\n    python3-setuptools \\\n    ssh && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nRUN python3 --version\n\nRUN pip3 install --no-cache-dir wheel\n\nCOPY prerequirements.txt .\nRUN pip3 install --no-cache-dir -r prerequirements.txt\n\nCOPY requirements.txt .\nCOPY titus-isolate-0.SNAPSHOT.tar.gz .\n\nRUN pip3 install --no-cache-dir -r requirements.txt\nENV PYTHONPATH=\"/usr/local/lib/python3.6/dist-packages:/opt/gurobi900/linux64/lib/python3.5_utf32\"\n\nCOPY gurobi9.0.0_linux64.tar.gz /opt\nWORKDIR /opt\nRUN tar xf gurobi9.0.0_linux64.tar.gz && rm gurobi9.0.0_linux64.tar.gz\nWORKDIR /\nENV GUROBI_HOME=\"/opt/gurobi900/linux64\"\nCOPY init_900.py /opt/gurobi900/linux64/lib/python3.5_utf32/gurobipy/__init__.py\n\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/gurobi900/linux64/bin\"\nENV LD_LIBRARY_PATH=\"/opt/gurobi900/linux64/lib\"\n\n# Don't start any optional services except for the few we need.\nRUN find /etc/systemd/system \\\n    /lib/systemd/system \\\n    -path '*.wants/*' \\\n    -not -name '*journald*' \\\n    -not -name '*systemd-tmpfiles*' \\\n    -not -name '*systemd-user-sessions*' \\\n    -exec rm \\{} \\;\n\nRUN systemctl set-default multi-user.target\n\nSTOPSIGNAL SIGRTMIN+3\n\nCOPY root /\nRUN systemctl enable nflx-config.service\nRUN systemctl enable gunicorn.socket\nRUN systemctl enable gunicorn.service\nRUN systemctl enable nginx.service\n\nCMD [\"/lib/systemd/systemd\", \"--log-level=debug\", \"--log-target=journal\"]\n"
}