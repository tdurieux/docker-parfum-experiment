{
  "startTime": 1674253029128,
  "endTime": 1674253030235,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye\n\n# Docker Image for building MediaElch using MXE\n#   MXE:       https://github.com/mxe/mxe/\n#   MediaElch: https://mediaelch.github.io/mediaelch-doc/\n#\n# Note: This image can take more than _four_ hours to build!\n\n# First `apt-get install` is the list from\n# <https://mxe.cc/#requirements-debian>.\n# Second `apt-get install` are dependencies that are _also_\n# required but were not listed.\n# Third `apt-get install` are dependencies that we need for\n# packaging.\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n        autoconf \\\n        automake \\\n        autopoint \\\n        bash \\\n        bison \\\n        bzip2 \\\n        flex \\\n        g++ \\\n        g++-multilib \\\n        gettext \\\n        git \\\n        gperf \\\n        intltool \\\n        libc6-dev-i386 \\\n        libgdk-pixbuf2.0-dev \\\n        libltdl-dev \\\n        libssl-dev \\\n        libtool-bin \\\n        libxml-parser-perl \\\n        lzip \\\n        make \\\n        openssl \\\n        p7zip-full \\\n        patch \\\n        perl \\\n        python3 \\\n        python3-mako \\\n        ruby \\\n        sed \\\n        unzip \\\n        wget \\\n        xz-utils && \\\n    apt-get install -y --no-install-recommends \\\n        python && \\\n    apt-get install -y --no-install-recommends \\\n        zip openssl openssh-client && \\\n    apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n# Download MXE\nRUN mkdir /build\nWORKDIR /build\nRUN git clone https://github.com/mxe/mxe.git\n\n# Build cross environment\n#   We build Compilers and some other libraries that are required for Qt.\n#   Note: On my system, I occasionally run into internal compiler bugs.\n#         The workaround was to build \"boost\" and \"qtbase\" in a single thread.\n#\n# Cleanup\n#   We remove some directories and run MXE's cleanup task.\n#   This reduces the image's size a lot:\n#     ./src 14 MB\n#     ./log 100 MB\n#     ./pkg 450 MB\n#     ./.git 27 MB\n#     ./.ccache 1.56 GB\n#\nRUN cd mxe && make MXE_TARGETS='x86_64-w64-mingw32.shared' --jobs 2 JOBS=4 cc zlib gnutls \\\n           && make MXE_TARGETS='x86_64-w64-mingw32.shared' --jobs 1 JOBS=1 boost \\\n           && make MXE_TARGETS='x86_64-w64-mingw32.shared' --jobs 2 JOBS=4 mesa \\\n           && make MXE_TARGETS='x86_64-w64-mingw32.shared' --jobs 1 JOBS=1 qtbase \\\n           && make MXE_TARGETS='x86_64-w64-mingw32.shared' --jobs 2 JOBS=4 qttools \\\n                 qtimageformats \\\n                 qtmultimedia \\\n                 qtquickcontrols \\\n                 qtquickcontrols2 \\\n            && make clean-junk \\\n            && rm -rf /build/mxe/src /build/mxe/log /build/mxe/pkg /build/mxe/.git /build/mxe/.ccache\n\n# Enhance path\nENV PATH /build/mxe/usr/bin:$PATH\n\n# Add a qmake aliases\nRUN ln -s /build/mxe/usr/bin/x86_64-w64-mingw32.shared-qmake-qt5 /build/mxe/usr/bin/qmake\n\nRUN mkdir /src\nWORKDIR /src\n"
}