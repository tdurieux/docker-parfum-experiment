{
  "startTime": 1674255595785,
  "endTime": 1674255596807,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\n\nLABEL maintainer=\"info@andremeyering.de\"\n\nVOLUME [\"/opt/mediaelch\"]\n\n#\n# This image can be used to develop and test MediaElch\n#\n\n# Developer Tools\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository ppa:ubuntu-toolchain-r/test && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y zlib1g zlib1g-dev g++-10 gcc-10 git wget curl \\\n        libclang-10-dev clang-tidy-10 clang-tools-10 clang-format-10 clang-10 \\\n        llvm-10-dev git-core xvfb \\\n        python3 python3-yaml python3-pip libjson-perl \\\n        libncurses5-dev libncurses5 ninja-build doxygen && \\\n    update-alternatives --install /usr/bin/gcc           gcc          /usr/bin/gcc-10          10 && \\\n    update-alternatives --install /usr/bin/gcov          gcov         /usr/bin/gcov-10         10 && \\\n    update-alternatives --install /usr/bin/g++           g++          /usr/bin/g++-10          10 && \\\n    update-alternatives --install /usr/bin/clang++       clang++      /usr/bin/clang++-10      10 && \\\n    update-alternatives --install /usr/bin/clang         clang        /usr/bin/clang-10        10 && \\\n    update-alternatives --install /usr/bin/clang-format  clang-format /usr/bin/clang-format-10 10 && \\\n    update-alternatives --install /usr/bin/clang-tidy    clang-tidy   /usr/bin/clang-tidy-10   10 && \\\n    update-alternatives --install /usr/bin/llvm-config   llvm-config  /usr/bin/llvm-config-10  10 && \\\n    update-alternatives --install /usr/bin/llvm-cov      llvm-cov     /usr/bin/llvm-cov-10     10 && rm -rf /var/lib/apt/lists/*;\n\n# Latest versions that aren't available through apt or pip\nCOPY install_cmake.sh    /opt/install_cmake.sh\nCOPY install_cppcheck.sh /opt/install_cppcheck.sh\nCOPY install_iwyu.sh     /opt/install_iwyu.sh\n\nRUN /opt/install_cmake.sh\nRUN /opt/install_cppcheck.sh\nRUN /opt/install_iwyu.sh\n\n# Latest lcov due to GCC9 issues with lcov 1.13\nRUN cd /opt && git clone https://github.com/linux-test-project/lcov.git && cd lcov && make install\nRUN perl -MCPAN -e 'install PerlIO::gzip'\nRUN perl -MCPAN -e 'JSON'\n\nRUN pip3 install --no-cache-dir cmake_format\n\n# MediaElch dependencies\nRUN apt-get -y --no-install-recommends install \\\n        libmediainfo-dev \\\n        ffmpeg \\\n        qt5-default \\\n        qtmultimedia5-dev \\\n        qtdeclarative5-dev \\\n        libqt5opengl5 \\\n        libqt5opengl5-dev && \\\n    apt-get autoremove && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /opt && git clone https://github.com/KDE/clazy.git\nRUN cd /opt/clazy && git checkout 1.6\n\n# Multicore build always fails for some reason, so we use -j1\nRUN cd /opt/clazy && mkdir build && cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j1 && \\\n    make install\n"
}