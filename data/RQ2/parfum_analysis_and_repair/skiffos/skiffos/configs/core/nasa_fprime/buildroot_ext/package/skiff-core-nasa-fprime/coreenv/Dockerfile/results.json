{
  "startTime": 1674254824661,
  "endTime": 1674254825695,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 2,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on the nasa/fprime repository Dockerfile, with modifications for use as\n# a systemd-based Skiff Core container, similar to skiff-core-ubuntu.\n#\n# Reference: https://raw.githubusercontent.com/nasa/fprime/devel/docker/Dockerfile\nFROM ubuntu:18.04 AS fprime-base\n\n# setup environment\nENV container docker\n\nRUN export DEBIAN_FRONTEND=noninteractive; \\\n  apt-get update && \\\n  apt-get dist-upgrade -y \\\n  -o \"Dpkg::Options::=--force-confdef\" \\\n  -o \"Dpkg::Options::=--force-confnew\" && \\\n  apt-get install -y \\\n  --no-install-recommends \\\n  -o \"Dpkg::Options::=--force-confdef\" \\\n  -o \"Dpkg::Options::=--force-confnew\" \\\n  bash \\\n  build-essential \\\n  cmake \\\n  curl \\\n  git \\\n  htop \\\n  libxml2-dev \\\n  libxslt-dev \\\n  locales \\\n  lsb-release \\\n  nano \\\n  net-tools \\\n  openssh-client \\\n  python3 \\\n  python3-dev \\\n  python3-pip \\\n  python3-setuptools \\\n  python3-venv \\\n  rsync \\\n  software-properties-common \\\n  sudo \\\n  systemd \\\n  time \\\n  unzip \\\n  usbutils \\\n  valgrind \\\n  vim \\\n  wget && \\\n  apt-get autoremove -y && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# create fprime user\nRUN \\\n  locale-gen \"en_US.UTF-8\" && \\\n  adduser fprime \\\n  --no-create-home \\\n  --gecos \"NASA Fprime\" \\\n  --shell /bin/bash \\\n  --disabled-password && \\\n  adduser fprime sudo && \\\n  adduser fprime root && \\\n  adduser fprime systemd-journal && \\\n  adduser fprime dialout && \\\n  adduser fprime plugdev && \\\n  mkdir -p /home/fprime/ && \\\n  chown -R fprime:fprime /home/fprime && \\\n  printf \"# skiff core user\\nfprime    ALL=(ALL) NOPASSWD: ALL\\n\" > /etc/sudoers.d/10-skiff-core && \\\n  chmod 0400 /etc/sudoers.d/10-skiff-core && \\\n  visudo -c -f /etc/sudoers.d/10-skiff-core\n\n# remove unnecessary systemd services\nRUN systemctl set-default graphical.target && \\\n  systemctl mask tmp.mount && \\\n  systemctl mask kmod-static-nodes.service && \\\n  find /etc/systemd/system \\\n  /lib/systemd/system \\\n  \\( -path '*.wants/*' \\\n  -name '*swapon*' \\\n  -or -name '*ntpd*' \\\n  -or -name '*resolved*' \\\n  -or -name '*NetworkManager*' \\\n  -or -name '*remount-fs*' \\\n  -or -name '*getty*' \\\n  -or -name '*systemd-sysctl*' \\\n  -or -name '*.mount' \\\n  -or -name '*remote-fs*' \\) \\\n  -exec echo \\{} \\; \\\n  -exec rm \\{} \\;\n\n# minimize image size by squashing OS to 1 layer.\nFROM scratch\n\nENV \\\n  container=docker \\\n  LANG=en_US.UTF-8 \\\n  LANGUAGE=en_US:en \\\n  LC_ALL=en_US.UTF-8\n\nCOPY --from=fprime-base / /\n\n# configure target software\nRUN mkdir -p /opt/rpi /logs && \\\n  git clone --depth=1 https://github.com/raspberrypi/tools.git /opt/rpi/tools && \\\n  git clone https://github.com/nasa/fprime.git /opt/fprime && \\\n  chown -R fprime:fprime /opt/\nUSER fprime\nRUN python3 -m venv /opt/fprime-venv/ && . /opt/fprime-venv/bin/activate && \\\n  pip install --no-cache-dir -U wheel setuptools pip && \\\n  pip install --no-cache-dir /opt/fprime/Fw/Python/ && \\\n  pip install --no-cache-dir /opt/fprime/Gds/ && \\\n  rm -r ~/.cache/pip && \\\n  chmod -R 775 /opt/fprime-venv\n\nENV VIRTUAL_ENV=\"/opt/fprime-venv\" \\\n    PATH=\"/opt/fprime-venv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n\n# for systemd\nUSER 0\nWORKDIR /\nENTRYPOINT [\"/lib/systemd/systemd\"]\n"
}