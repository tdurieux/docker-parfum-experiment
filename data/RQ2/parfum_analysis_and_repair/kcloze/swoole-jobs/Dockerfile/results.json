{
  "startTime": 1674254048985,
  "endTime": 1674254050788,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 11,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 11,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 11,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.9\n\nLABEL maintainer=\"Swoole Jobs <pei.greet@qq.com>\" version=\"1.0\" license=\"MIT\"\n\n##\n# ---------- building ----------\n##\nRUN set -ex \\\n        # change apk source repo\n        && sed -i 's/dl-cdn.alpinelinux.org/mirrors.ustc.edu.cn/' /etc/apk/repositories \\\n        && apk update \\\n        && apk add --no-cache \\\n        # Install base packages ('ca-certificates' will install 'nghttp2-libs')\n        ca-certificates \\\n        curl \\\n        wget \\\n        tar \\\n        xz \\\n        libressl \\\n        tzdata \\\n        pcre \\\n        php7 \\\n        php7-pecl-amqp \\\n        php7-bcmath \\\n        php7-curl \\\n        php7-ctype \\\n        php7-dom \\\n        php7-fileinfo \\\n        php7-gd \\\n        php7-iconv \\\n        php7-json \\\n        php7-mbstring \\\n        php7-mysqlnd \\\n        php7-openssl \\\n        php7-pdo \\\n        php7-pdo_mysql \\\n        php7-pdo_sqlite \\\n        php7-phar \\\n        php7-posix \\\n        php7-redis \\\n        php7-simplexml \\\n        php7-sockets \\\n        php7-sodium \\\n        php7-sysvshm \\\n        php7-sysvmsg \\\n        php7-sysvsem \\\n        php7-tokenizer \\\n        php7-zip \\\n        php7-zlib \\\n        php7-xml \\\n        php7-xmlreader \\\n        php7-xmlwriter \\\n        php7-pcntl \\\n        && apk del --purge *-dev \\\n        && rm -rf /var/cache/apk/* /tmp/* /usr/share/man /usr/share/php7 \\\n        && php -v \\\n        && php -m\n\n\nARG swoole\n\n##\n# ---------- env settings ----------\n##\nENV SWOOLE_VERSION=${swoole:-\"4.4.3\"} \\\n        #  install and remove building packages\n        PHPIZE_DEPS=\"autoconf dpkg-dev dpkg file g++ gcc libc-dev make php7-dev php7-pear pkgconf re2c pcre-dev zlib-dev libtool automake\"\n\n# update\nRUN set -ex \\\n        && apk update \\\n        # for swoole extension libaio linux-headers\n        && apk add --no-cache libstdc++ openssl git bash \\\n        && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS libaio-dev openssl-dev \\\n        # download\n        && cd /tmp \\\n        && curl -f -SL \"https://github.com/swoole/swoole-src/archive/v${SWOOLE_VERSION}.tar.gz\" -o swoole.tar.gz \\\n        && ls -alh \\\n        # php extension:swoole\n        && cd /tmp \\\n        && mkdir -p swoole \\\n        && tar -xf swoole.tar.gz -C swoole --strip-components=1 \\\n        && ( cd swoole \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-mysqlnd --enable-openssl \\\n        && make -s -j$(nproc) && make install) \\\n\n        && printf \"extension=swoole.so\\n\\\n        swoole.use_shortname = 'Off'\\n\\\n        swoole.enable_coroutine = 'Off'\\n\\\n        \" >/etc/php7/conf.d/swoole.ini \\\n        # clear\n        && php -v \\\n        && php -m \\\n        && php --ri swoole \\\n        # ---------- clear works ----------\n        && apk del .build-deps \\\n        && rm -rf /var/cache/apk/* /tmp/* /usr/share/man && rm swoole.tar.gz\n\nRUN printf \"# composer php cli ini settings\\n\\\n        date.timezone=PRC\\n\\\n        memory_limit=-1\\n\\\n        \" > /etc/php7/php.ini\nENV COMPOSER_ALLOW_SUPERUSER 1\nENV COMPOSER_HOME /tmp\nENV COMPOSER_VERSION 1.9.0\n\nRUN curl -f -SL \"https://github.com/composer/composer/releases/download/${COMPOSER_VERSION}/composer.phar\" -o composer.phar \\\n        && mv composer.phar /usr/bin/composer \\\n        && chmod u+x /usr/bin/composer \\\n        && echo -e \"\\033[42;37m Build Completed :).\\033[0m\\n\""
}