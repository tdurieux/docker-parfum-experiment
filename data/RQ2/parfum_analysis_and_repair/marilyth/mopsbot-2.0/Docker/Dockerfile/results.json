{
  "startTime": 1674250161621,
  "endTime": 1674250162574,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y wget curl nodejs \\\n && wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb \\\n && dpkg -i packages-microsoft-prod.deb \\\n && rm packages-microsoft-prod.deb \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y apt-transport-https \\\n && apt-get install --no-install-recommends -y imagemagick \\\n && apt-get install --no-install-recommends -y dotnet-sdk-5.0 \\\n && wget -qO- https://www.npmjs.com/install.sh | sh \\\n && npm install -g n && n stable \\\n && npm install -g localtunnel \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i '/disable ghostscript format types/,+6d' /etc/ImageMagick-6/policy.xml && npm cache clean --force;\n\n# Copy Mops code to image\nCOPY ./ /MopsCode\n\n# Compile Mops\nRUN cd /MopsCode \\\n && dotnet publish -r linux-x64 -p:PublishSingleFile=true --self-contained true -o /publish \\\n && rm -r /MopsCode\n\nCOPY ./Docker/execute.sh ./execute.sh\nRUN chmod +x ./execute.sh\n\nEXPOSE 5000\nCMD [\"./execute.sh\"]\n"
}