diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/comcast/caption-inspector/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/comcast/caption-inspector/Dockerfile/repaired.Dockerfile
index 943cee4..18507ac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/comcast/caption-inspector/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/comcast/caption-inspector/Dockerfile/repaired.Dockerfile
@@ -5,25 +5,25 @@ ENV FFMPEG_VERSION=4.0.2 LD_LIBRARY_PATH=/usr/local/lib
 RUN apt-get update
 
 # install mediainfo executable
-RUN apt-get install -y mediainfo
+RUN apt-get install --no-install-recommends -y mediainfo && rm -rf /var/lib/apt/lists/*;
 
 # build ffmpeg libraries
-RUN apt-get install -y make curl gcc g++ nasm yasm && \
-  apt-get install -y opencl-dev vim libass-dev libavformat-dev \
+RUN apt-get install --no-install-recommends -y make curl gcc g++ nasm yasm && \
+  apt-get install --no-install-recommends -y opencl-dev vim libass-dev libavformat-dev \
   libavutil-dev libavfilter-dev uuid-dev zlib1g-dev && \
   DIR=$(mktemp -d) && cd ${DIR} && \
-  curl -s http://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz | tar zxvf - -C . && \
+  curl -f -s https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.gz | tar zxvf - -C . && \
   cd ffmpeg-${FFMPEG_VERSION} && \
-  ./configure  --enable-version3 --enable-hardcoded-tables --enable-shared --enable-static \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-version3 --enable-hardcoded-tables --enable-shared --enable-static \
     --enable-small --enable-libass --enable-postproc --enable-avresample --enable-libfreetype \
     --disable-lzma --enable-opencl --enable-pthreads && \
   make && \
   make install && \
   make distclean && \
-  rm -rf ${DIR}
+  rm -rf ${DIR} && rm -rf /var/lib/apt/lists/*;
 
 # install git, make, and gcc to build gpac
-RUN apt-get install -y git && apt-get install -y make && apt-get install -y gcc && apt-get install -y clang
+RUN apt-get install --no-install-recommends -y git && apt-get install --no-install-recommends -y make && apt-get install --no-install-recommends -y gcc && apt-get install --no-install-recommends -y clang && rm -rf /var/lib/apt/lists/*;
 COPY .git/ /app/.git/
 
 # pull and build gpac