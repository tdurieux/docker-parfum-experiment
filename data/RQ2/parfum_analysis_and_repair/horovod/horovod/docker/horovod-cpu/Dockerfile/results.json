{
  "startTime": 1674252621890,
  "endTime": 1674252622956,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# TensorFlow version is tightly coupled to CUDA and cuDNN so it should be selected carefully\nARG TENSORFLOW_VERSION=2.6.5\nARG PYTORCH_VERSION=1.8.1\nARG PYTORCH_LIGHTNING_VERSION=1.5.9\nARG TORCHVISION_VERSION=0.9.1\nARG MXNET_VERSION=1.8.0.post0\n\nARG PYSPARK_PACKAGE=pyspark==3.1.1\nARG SPARK_PACKAGE=spark-3.1.1/spark-3.1.1-bin-hadoop2.7.tgz\n\nARG PYTHON_VERSION=3.8\n\n# to avoid interaction with apt-get\nENV DEBIAN_FRONTEND=noninteractive\n\n# Set default shell to /bin/bash\nSHELL [\"/bin/bash\", \"-euo\", \"pipefail\", \"-c\"]\n\nRUN apt-get update && apt-get install -y --allow-downgrades --allow-change-held-packages --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        g++-7 \\\n        git \\\n        curl \\\n        vim \\\n        wget \\\n        ca-certificates \\\n        libjpeg-dev \\\n        libpng-dev \\\n        python${PYTHON_VERSION} \\\n        python${PYTHON_VERSION}-dev \\\n        python${PYTHON_VERSION}-distutils \\\n        librdmacm1 \\\n        libibverbs1 \\\n        ibverbs-providers \\\n        openjdk-8-jdk-headless \\\n        openssh-client \\\n        openssh-server \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Install Open MPI\nRUN wget --progress=dot:mega -O /tmp/openmpi-3.0.0-bin.tar.gz https://github.com/horovod/horovod/files/1596799/openmpi-3.0.0-bin.tar.gz && \\\n    cd /usr/local && \\\n    tar -zxf /tmp/openmpi-3.0.0-bin.tar.gz && \\\n    ldconfig && \\\n    mpirun --version && rm /tmp/openmpi-3.0.0-bin.tar.gz\n\n# Allow OpenSSH to talk to containers without asking for confirmation\nRUN mkdir -p /var/run/sshd\nRUN cat /etc/ssh/ssh_config | grep -v StrictHostKeyChecking > /etc/ssh/ssh_config.new && \\\n    echo \"    StrictHostKeyChecking no\" >> /etc/ssh/ssh_config.new && \\\n    mv /etc/ssh/ssh_config.new /etc/ssh/ssh_config\n\nRUN ln -s /usr/bin/python${PYTHON_VERSION} /usr/bin/python\n\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    rm get-pip.py\n\n# Install PyTorch, TensorFlow, Keras and MXNet\nRUN pip install --no-cache-dir torch==${PYTORCH_VERSION} torchvision==${TORCHVISION_VERSION}\nRUN pip install --no-cache-dir pytorch_lightning==${PYTORCH_LIGHTNING_VERSION}\n\nRUN pip install --no-cache-dir future typing packaging\nRUN pip install --no-cache-dir \\\n    tensorflow-cpu==${TENSORFLOW_VERSION} \\\n    keras \\\n    h5py\n\nRUN pip install --no-cache-dir mxnet==${MXNET_VERSION}\n\n# Install Spark stand-alone cluster.\nRUN wget --progress=dot:giga \"https://www.apache.org/dyn/closer.lua/spark/${SPARK_PACKAGE}?action=download\" -O - | tar -xzC /tmp; \\\n    archive=$(basename \"${SPARK_PACKAGE}\") bash -c \"mv -v /tmp/\\${archive/%.tgz/} /spark\"\n\n# Install PySpark.\nRUN pip install --no-cache-dir ${PYSPARK_PACKAGE}\n\n# Install Horovod\nWORKDIR /horovod\nCOPY . .\nRUN python setup.py sdist && \\\n    bash -c \"HOROVOD_WITH_TENSORFLOW=1 HOROVOD_WITH_PYTORCH=1 HOROVOD_WITH_MXNET=1 pip install --no-cache-dir -v $(ls /horovod/dist/horovod-*.tar.gz)[spark,ray]\" && \\\n    horovodrun --check-build\n\n# Check all frameworks are working correctly\nWORKDIR \"/horovod/examples\"\nRUN python -c \"import horovod.tensorflow as hvd; hvd.init()\" && \\\n    python -c \"import horovod.torch as hvd; hvd.init()\" && \\\n    python -c \"import horovod.mxnet as hvd; hvd.init()\"\n"
}