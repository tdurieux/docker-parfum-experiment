diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/horovod/horovod/Dockerfile.test.cpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/horovod/horovod/Dockerfile.test.cpu/repaired.Dockerfile
index 9f537d8..4c83677 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/horovod/horovod/Dockerfile.test.cpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/horovod/horovod/Dockerfile.test.cpu/repaired.Dockerfile
@@ -29,7 +29,7 @@ ENV DEBIAN_FRONTEND=noninteractive
 SHELL ["/bin/bash", "-euo", "pipefail", "-c"]
 
 # Prepare to install specific g++ versions
-RUN apt-get update -qq && apt-get install -y --no-install-recommends software-properties-common
+RUN apt-get update -qq && apt-get install -y --no-install-recommends software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN add-apt-repository ppa:ubuntu-toolchain-r/test
 
 # Install essential packages.
@@ -42,14 +42,14 @@ RUN apt-get update -qq && apt-get install -y --no-install-recommends \
         git \
         build-essential \
         g++-${GPP_VERSION} \
-        moreutils
+        moreutils && rm -rf /var/lib/apt/lists/*;
 
 # setup ssh service
 RUN ssh-keygen -f /root/.ssh/id_rsa -q -N ''
 RUN cp -v /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys
 
 # Install Python.
-RUN apt-get update -qq && apt-get install -y python${PYTHON_VERSION} python${PYTHON_VERSION}-dev python${PYTHON_VERSION}-distutils
+RUN apt-get update -qq && apt-get install --no-install-recommends -y python${PYTHON_VERSION} python${PYTHON_VERSION}-dev python${PYTHON_VERSION}-distutils && rm -rf /var/lib/apt/lists/*;
 RUN ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python
 RUN ln -s -f /usr/bin/python${PYTHON_VERSION} /usr/bin/python${PYTHON_VERSION/%.*/}
 RUN wget --progress=dot:mega https://bootstrap.pypa.io/get-pip.py && python get-pip.py && rm get-pip.py
@@ -73,11 +73,11 @@ RUN if [[ -n ${SPARK_PACKAGE} ]]; then \
     fi
 
 # Install PySpark.
-RUN apt-get update -qq && apt install -y openjdk-8-jdk-headless
-RUN if [[ ${SPARK_PACKAGE} != *"-preview"* ]]; then \
+RUN apt-get update -qq && apt install --no-install-recommends -y openjdk-8-jdk-headless && rm -rf /var/lib/apt/lists/*;
+RUN if [[ ${SPARK_PACKAGE} != *"-preview"* ]];then \
         pip install --no-cache-dir ${PYSPARK_PACKAGE}; \
     else \
-        apt-get update -qq && apt-get install pandoc; \
+        apt-get update -qq && apt-get install -y --no-install-recommends pandoc; rm -rf /var/lib/apt/lists/*; \
         pip install --no-cache-dir pypandoc; \
         (cd /spark/python && python setup.py sdist && pip install --no-cache-dir dist/pyspark-*.tar.gz && rm dist/pyspark-*); \
     fi
@@ -94,11 +94,11 @@ RUN if [[ ${PYSPARK_PACKAGE} == "pyspark==2."* ]]; then \
 RUN pip install --no-cache-dir ray==1.7.0
 
 # Install MPI.
-RUN if [[ ${MPI_KIND} == "OpenMPI" ]]; then \
+RUN if [[ ${MPI_KIND} == "OpenMPI" ]];then \
         wget --progress=dot:mega -O /tmp/openmpi-3.0.0-bin.tar.gz https://github.com/horovod/horovod/files/1596799/openmpi-3.0.0-bin.tar.gz && \
             cd /usr/local && tar -zxf /tmp/openmpi-3.0.0-bin.tar.gz && ldconfig && \
             echo "mpirun -allow-run-as-root -np 2 -H localhost:2 -bind-to none -map-by slot -mca mpi_abort_print_stack 1" > /mpirun_command; \
-    elif [[ ${MPI_KIND} == "ONECCL" ]]; then \
+    elif [[ ${MPI_KIND} == "ONECCL" ]];then \
         wget --progress=dot:mega -O /tmp/oneccl.tar.gz https://github.com/oneapi-src/oneCCL/archive/${CCL_PACKAGE}.tar.gz && \
             cd /tmp && tar -zxf oneccl.tar.gz && \
             mkdir oneCCL-${CCL_PACKAGE}/build && cd oneCCL-${CCL_PACKAGE}/build && cmake .. -DCMAKE_INSTALL_PREFIX=/usr/local/oneccl -DCMAKE_BUILD_TYPE=Release && make -j install && \
@@ -122,8 +122,8 @@ RUN if [[ ${MPI_KIND} == "OpenMPI" ]]; then \
             echo "-L/usr/local/oneccl/lib -lmpi -I/usr/local/oneccl/include" > /mpicc_oneccl && \
             chmod +x /mpicc_oneccl; \
     elif [[ ${MPI_KIND} == "MPICH" ]]; then \
-        apt-get update -qq && apt-get install -y mpich && \
-            echo "mpirun -np 2" > /mpirun_command; \
+        apt-get update -qq && apt-get install --no-install-recommends -y mpich && \
+            echo "mpirun -np 2" > /mpirun_command; rm -rf /var/lib/apt/lists/*; \
     fi
 
 # Install mpi4py.
@@ -156,7 +156,7 @@ RUN if [[ ${TENSORFLOW_PACKAGE} != "tf-nightly" ]]; then \
     fi
 
 # Pin h5py < 3 for tensorflow: https://github.com/tensorflow/tensorflow/issues/44467
-RUN pip install 'h5py<3.0' --force-reinstall
+RUN pip install --no-cache-dir 'h5py<3.0' --force-reinstall
 
 # Install PyTorch (releases).
 # Pin Pillow<7.0 for torchvision < 0.5.0: https://github.com/pytorch/vision/issues/1718
@@ -169,7 +169,7 @@ RUN if [[ ${PYTORCH_PACKAGE} != "torch-nightly" ]]; then \
             pip install --no-cache-dir "Pillow!=8.3.0" --no-deps; \
         fi; \
     fi
-RUN pip install ${PYTORCH_LIGHTNING_PACKAGE}
+RUN pip install --no-cache-dir ${PYTORCH_LIGHTNING_PACKAGE}
 
 
 # Install MXNet (releases).