{
  "startTime": 1674254976000,
  "endTime": 1674254977030,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 91
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### PHP version we are targetting\nARG PHP_VERSION=7.4\n\n\n### Placeholder for basic dev stage for use with docker-compose\nFROM uogsoe/soe-php-apache:${PHP_VERSION} as dev\n\nCOPY docker/app-start docker/app-healthcheck /usr/local/bin/\nRUN chmod u+x /usr/local/bin/app-start /usr/local/bin/app-healthcheck\nCMD [\"tini\", \"--\", \"/usr/local/bin/app-start\"]\n\n\n### Build JS/css assets\nFROM node:14 as frontend\n\n# workaround for mix.version() webpack bug\nRUN ln -s /home/node/public /public\n\nUSER node\nWORKDIR /home/node\n\nRUN mkdir -p /home/node/public/css /home/node/public/js /home/node/resources\n\nCOPY --chown=node:node package*.json webpack.mix.js .babelrc* /home/node/\nCOPY --chown=node:node resources/js* /home/node/resources/js\nCOPY --chown=node:node resources/sass* /home/node/resources/sass\nCOPY --chown=node:node resources/scss* /home/node/resources/scss\nCOPY --chown=node:node resources/css* /home/node/resources/css\n\nRUN npm install && \\\n    npm run production && \\\n    npm cache clean --force\n\n\n### Prod php dependencies\nFROM dev as prod-composer\nENV APP_ENV=production\nENV APP_DEBUG=0\n\nWORKDIR /var/www/html\n\nUSER nobody\n\n#- make paths that the laravel composer.json expects to exist\nRUN mkdir -p database\n#- copy the seeds and factories so that composer generates autoload entries for them\nCOPY database/seeders database/seeders\nCOPY database/factories database/factories\n\n\nCOPY composer.* ./\n\nRUN composer install \\\n    --no-interaction \\\n    --no-plugins \\\n    --no-scripts \\\n    --no-dev \\\n    --prefer-dist\n\n### QA php dependencies\nFROM prod-composer as qa-composer\nENV APP_ENV=local\nENV APP_DEBUG=1\n\nRUN composer install \\\n    --no-interaction \\\n    --no-plugins \\\n    --no-scripts \\\n    --prefer-dist\n\n### And build the prod app\nFROM dev as prod\n\nWORKDIR /var/www/html\n\nENV APP_ENV=production\nENV APP_DEBUG=0\n\n#- Copy our start scripts and php/ldap configs in\nCOPY docker/ldap.conf /etc/ldap/ldap.conf\nCOPY docker/custom_php.ini /usr/local/etc/php/conf.d/custom_php.ini\n\n#- Copy in our prod php dep's\nCOPY --from=prod-composer /var/www/html/vendor /var/www/html/vendor\n\n#- Copy in our front-end assets\nRUN mkdir -p /var/www/html/public/js /var/www/html/public/css\nCOPY --from=frontend /home/node/public/js /var/www/html/public/js\nCOPY --from=frontend /home/node/public/css /var/www/html/public/css\nCOPY --from=frontend /home/node/mix-manifest.json /var/www/html/mix-manifest.json\n\n#- Copy in our code\nCOPY . /var/www/html\n\n#- Clear any cached composer stuff\nRUN rm -fr /var/www/html/bootstrap/cache/*.php\n\n#- If horizon is installed force it to rebuild it's public assets\nRUN if grep -q horizon composer.json; then php /var/www/html/artisan horizon:publish ; fi\n\n#- Symlink the docker secret to the local .env so Laravel can see it\nRUN ln -sf /run/secrets/.env /var/www/html/.env\n\n#- Clean up and production-cache our apps settings/views/routing\nRUN php /var/www/html/artisan storage:link && \\\n    php /var/www/html/artisan view:cache && \\\n    php /var/www/html/artisan route:cache && \\\n    chown -R www-data:www-data storage bootstrap/cache\n\n#- Set up the default healthcheck\nHEALTHCHECK --start-period=30s CMD /usr/local/bin/app-healthcheck\n\n\n### Build the ci version of the app (prod+dev packages)\nFROM prod as ci\n\nENV APP_ENV=local\nENV APP_DEBUG=0\n\n#- Copy in our QA php dep's\nCOPY --from=qa-composer /var/www/html/vendor /var/www/html/vendor\n\n#- Install sensiolabs security scanner and clear the caches\nRUN composer global require enlightn/security-checker && \\\n    curl -f -OL -o /usr/local/bin/phpcs https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar && \\\n    php /var/www/html/artisan view:clear && \\\n    php /var/www/html/artisan cache:clear\n\n"
}