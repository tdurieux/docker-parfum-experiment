{
  "startTime": 1674216052485,
  "endTime": 1674216053450,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 199
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 199
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 199
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 199
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 226
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 111
      }
    }
  ],
  "repairedDockerfile": "##############################################################\n# Experimental Docker file for the Artemis software suite.\n#\n# Please see usage documentation at Docker Hub:\n#\n# https://hub.docker.com/r/sangerpathogens/artemis\n#\n##############################################################\nFROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nLABEL maintainer=\"path-help@sanger.ac.uk\"\n\n# Build and environment configuration\nARG ARTEMIS_BUILD_DIR=/artemis-build\nARG INSTALL_DIR=/opt/artemis\nARG BLAST_INSTALL_DIR=/usr/local/ncbi/blast/\nARG BROWSER_INSTALL_DIR=/usr/local/firefox\nARG ARTEMIS_WORKDIR=/artemis\nENV JAVA_OPTS=\"-Dsun.jnu.encoding=UTF-8 -Dfile.encoding=UTF-8\"\nENV LANG=\"en_US.UTF-8\"\nENV LANGUAGE=\"en_US.UTF-8\"\nENV LC_ALL=\"en_US.UTF-8\"\nENV LC_COLLATE=\"en_US.UTF-8\"\nENV LC_CTYPE=\"en_US.UTF-8\"\n\n# Mount points\nRUN mkdir -p $ARTEMIS_WORKDIR && chmod 777 $ARTEMIS_WORKDIR\n\n# Install main dependencies\nRUN apt-get update --quiet --assume-yes\nRUN apt-get upgrade --quiet --assume-yes\nRUN apt-get install -y --no-install-recommends --quiet --assume-yes locales openjdk-11-jdk libxtst6 libxrender1 libxext6 libexpat1 fonts-dejavu-core fontconfig-config libfontconfig1 libfreetype6 libpng16-16 curl wget maven ant && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --config java\nRUN update-alternatives --config javac\n\nRUN echo \"Java version installed: `java -version`\"\n\n# Set locale\nRUN echo en_US.UTF-8 UTF-8 >> /etc/locale.gen\nRUN locale-gen en_US.UTF-8\n\n# Build and install Artemis\n# No tests are run currently as some of them pop up windows and hence require X\nRUN mkdir -p $INSTALL_DIR\nRUN mkdir -p $ARTEMIS_BUILD_DIR\nCOPY . $ARTEMIS_BUILD_DIR\nRUN cd $ARTEMIS_BUILD_DIR && mvn validate && mvn -Djarsigner.skip=true -Dskip.tests=true package -P release\nRUN tar xvf $ARTEMIS_BUILD_DIR/target/release-artifacts/unix-release/artemis-unix-release-*.tar.gz --strip-components=1 -C ${INSTALL_DIR} && rm $ARTEMIS_BUILD_DIR/target/release-artifacts/unix-release/artemis-unix-release-*.tar.gz\nRUN rm -rf $ARTEMIS_BUILD_DIR && rm -rf ~/.m2\n\n# Install Blast+\nRUN mkdir -p $BLAST_INSTALL_DIR\nRUN curl --fail -L ftp://ftp.ncbi.nlm.nih.gov/blast/executables/blast+/2.9.0/ncbi-blast-2.9.0+-x64-linux.tar.gz | tar xzf - --strip-components=1 -C $BLAST_INSTALL_DIR\n\n# Install Firefox for use with pfam etc (use firejail for increased security)\nRUN apt-get install -y --no-install-recommends --quiet --assume-yes libgtk-3-0 libdbus-glib-1-2 libxt6 firejail && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p $BROWSER_INSTALL_DIR\nRUN wget -O firefox.tar.bz2 \"https://download.mozilla.org/?product=firefox-latest-ssl&os=linux64&lang=en-GB\" && \\\n    tar xvf /firefox.tar.bz2 && \\\n    rm -f /firefox.tar.bz2 && \\\n    mv /firefox /usr/local/\n\nRUN echo \"firejail --private --dns=8.8.8.8 --dns=8.8.4.4 $BROWSER_INSTALL_DIR/firefox -no-remote \"'\"$@\"' > /usr/bin/firefox && chmod 555 /usr/bin/firefox\n\n# Cleanup\nRUN apt-get autoremove\nRUN apt-get clean\n\n# Environment\nENV PATH=$INSTALL_DIR:$INSTALL_DIR/dist:$INSTALL_DIR/etc:$BLAST_INSTALL_DIR/bin:$PATH\nENV CLASSPATH=$INSTALL_DIR:$INSTALL_DIR/dist:$INSTALL_DIR/etc:${CLASSPATH}\nENV HOME=$ARTEMIS_WORKDIR\nWORKDIR $ARTEMIS_WORKDIR\n\n# Define default command.\nCMD   echo 'Usage:  docker run -d -e DISPLAY=\"<your display name>:0\" -v <your user home directory>:/home/artuser -v <your data folder>:/artemis' && \\\n      echo '          --user $(id -u):$(id -g) -e ARTEMIS_JVM_FLAGS=\"-Duser.home=/home/artuser -Djava.io.tmpdir=/tmp\" --tmpfs /tmp' && \\\n      echo '          --rm artemis <program name [art|act|bamview|dnaplotter]> [program arguments]' && \\\n      echo && \\\n      echo 'For help, please go to http://sanger-pathogens.github.io/Artemis/'\n\n"
}