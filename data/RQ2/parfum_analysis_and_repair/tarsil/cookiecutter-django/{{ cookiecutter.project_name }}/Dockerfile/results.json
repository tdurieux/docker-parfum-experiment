{
  "startTime": 1674248712123,
  "endTime": 1674248713105,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################\n# Dockerfile to run a Django-based web application\n# Based on an Ubuntu Image\n############################################################\nFROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG en_GB.UTF-8\nENV LC_ALL en_GB.UTF-8\n\n#\n# Install Apt Packages\n#\nRUN apt clean                                           && \\\n    apt update -y && \\\n    apt install --no-install-recommends -y gnupg2 synaptic software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN apt update                                                                                               && \\\n    apt upgrade -y && \\\n    apt install --no-install-recommends curl -y && \\\n    apt clean && apt autoclean && \\\n    find /var/lib/apt/lists/ -type f -delete && \\\n    curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \\\n    echo \"deb http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list && rm -rf /var/lib/apt/lists/*;\n\nRUN apt update -y && \\\n    apt install --no-install-recommends -y postgresql \\\n                       build-essential \\\n                       curl \\\n                       geoip-bin \\\n                       gettext \\\n                       git-core \\\n                       gawk \\\n                       iputils-ping \\\n                       language-pack-en \\\n                       libcurl4-openssl-dev \\\n                       libevent-dev \\\n                       libssl-dev \\\n                       libffi-dev \\\n                       libgeos-c1v5 \\\n                       libmagickwand-dev \\\n                       libmemcached-dev \\\n                       zlib1g-dev \\\n                       libmemcached-tools \\\n                       libxml2-dev \\\n                       libxslt-dev \\\n                       memcached \\\n                       net-tools \\\n                       nginx-extras \\\n                       pgbouncer \\\n                       python-pil \\\n                       python3-pip \\\n                       python-is-python3 \\\n                       rsyslog \\\n                       socat \\\n                       supervisor \\\n                       unattended-upgrades \\\n                       unzip \\\n                       wget && \\\n    apt clean && apt autoclean && \\\n    apt autoremove -y && \\\n    find /var/lib/apt/lists/ -type f -delete && \\\n    apt -y update && rm -rf /var/lib/apt/lists/*;\n\n\n\n#\n#  Install requirements\n#\nADD requirements /var/www/requirements\nRUN pip3 install --no-cache-dir -r /var/www/requirements/common.txt\n\nRUN ln /usr/local/bin/dramatiq /usr/bin/dramatiq\n\n# Patch Nginx Config to Disable Security Tokens\nRUN sed -i -e 's/# server_tokens off;/server_tokens off;/g' /etc/nginx/nginx.conf\n\n# Add JSON logging formatter for nginx\nADD deploy/nginx/nginx.json-logging.conf /etc/nginx/conf.d/json-logging.conf\n"
}