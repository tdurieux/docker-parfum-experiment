{
  "startTime": 1674254703543,
  "endTime": 1674254704643,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 18,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 18,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a multi-stage docker file:\n#  1. The first stage builds the contracts\n#  2. The second is an empty image with only the wasm files (useful for exporting)\n#  3. The third creates a node.js environment to deploy the contracts to devnet\nFROM cosmwasm/workspace-optimizer:0.12.6@sha256:e6565a5e87c830ef3e8775a9035006b38ad0aaf0a96319158c802457b1dd1d08 AS builder\nCOPY Cargo.lock /code/\nCOPY Cargo.toml /code/\nCOPY contracts /code/contracts\nCOPY packages /code/packages\n\n# Support additional root CAs\nCOPY README.md cert.pem* /certs/\n# Alpine\nRUN if [ -e /certs/cert.pem ]; then cp /certs/cert.pem /etc/ssl/cert.pem; fi\n\nRUN --mount=type=cache,target=/code/target,id=terra_classic_target --mount=type=cache,target=/usr/local/cargo/registry optimize_workspace.sh\n\nFROM scratch as artifacts\nCOPY --from=builder /code/artifacts /\n\n# Contract deployment stage\nFROM node:16-buster-slim@sha256:93c9fc3550f5f7d159f282027228e90e3a7f8bf38544758024f005e82607f546\n\n# Support additional root CAs\nCOPY README.md cert.pem* /certs/\n# Node\nENV NODE_EXTRA_CA_CERTS=/certs/cert.pem\nENV NODE_OPTIONS=--use-openssl-ca\n# npm\nRUN if [ -e /certs/cert.pem ]; then npm config set cafile /certs/cert.pem; fi\n\nRUN apt update && apt install --no-install-recommends netcat curl jq -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app/tools\n\nCOPY --from=artifacts / /app/artifacts\nCOPY ./artifacts/cw20_base.wasm /app/artifacts/\n\nCOPY ./tools/package.json ./tools/package-lock.json /app/tools/\nRUN --mount=type=cache,uid=1000,gid=1000,target=/home/node/.npm \\\n    npm ci\nCOPY ./tools /app/tools\n"
}