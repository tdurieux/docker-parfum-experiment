diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/certusone/wormhole/third_party/redis/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/certusone/wormhole/third_party/redis/Dockerfile/repaired.Dockerfile
index 2b91e3a..3412093 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/certusone/wormhole/third_party/redis/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/certusone/wormhole/third_party/redis/Dockerfile/repaired.Dockerfile
@@ -15,7 +15,7 @@ ENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-6.2.6.tar.gz
 ENV REDIS_DOWNLOAD_SHA 5b2b8b7a50111ef395bf1c1d5be11e6e167ac018125055daa8b5c2317ae131ab
 
 RUN set -eux; \
-	\
+
 	apk add --no-cache --virtual .build-deps \
 		coreutils \
 		dpkg-dev dpkg \
@@ -30,13 +30,13 @@ RUN set -eux; \
 #   wget: bad header line:     XxhODalH: btu; path=/; Max-Age=900
 		wget \
 	; \
-	\
+
 	wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"; \
-	echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz" | sha256sum -c -; \
+	echo "$REDIS_DOWNLOAD_SHA  *redis.tar.gz" | sha256sum -c -; \
 	mkdir -p /usr/src/redis; \
 	tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \
 	rm redis.tar.gz; \
-	\
+
 # disable Redis protected mode [1] as it is unnecessary in context of Docker
 # (ports are not automatically exposed when running inside Docker, but rather explicitly by specifying -p / -P)
 # [1]: https://github.com/redis/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da
@@ -46,7 +46,7 @@ RUN set -eux; \
 # for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently "if you specify any argument to redis-server, [it assumes] you are going to specify everything"
 # see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840
 # (more exactly, this makes sure the default behavior of "save on SIGTERM" stays functional by default)
-	\
+
 # https://github.com/jemalloc/jemalloc/issues/467 -- we need to patch the "./configure" for the bundled jemalloc to match how Debian compiles, for compatibility
 # (also, we do cross-builds, so we need to embed the appropriate "--build=xxx" values to that "./configure" invocation)
 	gnuArch="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"; \
@@ -61,11 +61,11 @@ RUN set -eux; \
 	grep -F 'cd jemalloc && ./configure ' /usr/src/redis/deps/Makefile; \
 	sed -ri 's!cd jemalloc && ./configure !&'"$extraJemallocConfigureFlags"' !' /usr/src/redis/deps/Makefile; \
 	grep -F "cd jemalloc && ./configure $extraJemallocConfigureFlags " /usr/src/redis/deps/Makefile; \
-	\
+
 	export BUILD_TLS=yes; \
 	make -C /usr/src/redis -j "$(nproc)" all; \
 	make -C /usr/src/redis install; \
-	\
+
 # TODO https://github.com/redis/redis/pull/3494 (deduplicate "redis-server" copies)
 	serverMd5="$(md5sum /usr/local/bin/redis-server | cut -d' ' -f1)"; export serverMd5; \
 	find /usr/local/bin/redis* -maxdepth 0 \
@@ -76,18 +76,18 @@ RUN set -eux; \
 		' -- '{}' ';' \
 		-exec ln -svfT 'redis-server' '{}' ';' \
 	; \
-	\
+
 	rm -r /usr/src/redis; \
-	\
+
 	runDeps="$( \
 		scanelf --needed --nobanner --format '%n#p' --recursive /usr/local \
 			| tr ',' '\n' \
 			| sort -u \
 			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
 	)"; \
-	apk add --no-network --virtual .redis-rundeps $runDeps; \
+	apk add --no-cache --no-network --virtual .redis-rundeps $runDeps; \
 	apk del --no-network .build-deps; \
-	\
+
 	redis-cli --version; \
 	redis-server --version