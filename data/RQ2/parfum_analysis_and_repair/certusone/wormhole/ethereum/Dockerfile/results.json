{
  "startTime": 1674255010351,
  "endTime": 1674255010798,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts-alpine@sha256:2ae9624a39ce437e7f58931a5747fdc60224c6e40f8980db90728de58e22af7c\n\n# npm wants to clone random Git repositories - lovely.\nRUN apk add --no-cache git python make build-base\n\n# Run as user, otherwise, npx explodes.\nUSER 1000\nRUN mkdir -p /home/node/app\nRUN mkdir -p /home/node/.npm\nWORKDIR /home/node/app\n\n# Fix git ssh error\nRUN git config --global url.\"https://\".insteadOf ssh://\n\n# Support additional root CAs\nCOPY README.md cert.pem* /certs/\n# Node\nENV NODE_EXTRA_CA_CERTS=/certs/cert.pem\nENV NODE_OPTIONS=--use-openssl-ca\n# npm\nRUN if [ -e /certs/cert.pem ]; then npm config set cafile /certs/cert.pem; fi\n# git\nRUN if [ -e /certs/cert.pem ]; then git config --global http.sslCAInfo /certs/cert.pem; fi\n\n# Only invalidate the npm install step if package.json changed\nCOPY --chown=node:node package.json .\nCOPY --chown=node:node package-lock.json .\nCOPY --chown=node:node .env.test .env\n\n# We want to cache node_modules *and* incorporate it into the final image.\nRUN --mount=type=cache,uid=1000,gid=1000,target=/home/node/.npm \\\n  --mount=type=cache,uid=1000,gid=1000,target=node_modules \\\n  npm ci && \\\n  cp -r node_modules node_modules_cache\n\n# Amusingly, Debian's coreutils version has a bug where mv believes that\n# the target is on a different fs and does a full recursive copy for what\n# could be a renameat syscall. Alpine does not have this bug.\nRUN rm -rf node_modules && mv node_modules_cache node_modules\n\nCOPY --chown=node:node . .\n"
}