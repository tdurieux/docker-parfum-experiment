{
  "startTime": 1674255701507,
  "endTime": 1674255702516,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GO_VERSION=1.18.2\nFROM golang:$GO_VERSION@sha256:04fab5aaf4fc18c40379924674491d988af3d9e97487472e674d0b5fd837dfac as algorand-algod\n\n# Support additional root CAs\nCOPY config.dev cert.pem* /certs/\n# Debian\nRUN if [ -e /certs/cert.pem ]; then cp /certs/cert.pem /etc/ssl/certs/ca-certificates.crt; fi\n# git\nRUN if [ -e /certs/cert.pem ]; then git config --global http.sslCAInfo /certs/cert.pem; fi\n\nARG CHANNEL=master\nARG URL=\"https://github.com/algorand/go-algorand\"\nARG BRANCH=master\nARG SHA=\n\n# When these are set attempt to connect to a network.\nARG GENESIS_FILE=\"\"\nARG BOOTSTRAP_URL=\"\"\n\n# Options for algod config\nARG ALGOD_PORT=\"4001\"\nARG KMD_PORT=\"4002\"\nARG TOKEN=\"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"\nARG TEMPLATE=\"images/algod/DevModeNetwork.json\"\n\nRUN echo \"Installing from source. ${URL} -- ${BRANCH}\"\nENV BIN_DIR=\"$HOME/node\"\nENV ALGORAND_DATA=\"/opt/data\"\n\n# Basic dependencies.\nENV HOME /opt\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y apt-utils curl git git-core bsdmainutils python3 && rm -rf /var/lib/apt/lists/*;\n\n# Copy lots of things into the container. The gitignore indicates which directories.\nCOPY . /tmp\n\n# Install algod binaries.\nRUN /tmp/images/algod/install.sh \\\n    -d \"${BIN_DIR}\" \\\n    -u \"https://github.com/algorand/go-algorand\" \\\n    -b \"v3.6.2-stable\" \\\n    -s \"\"\n\n# Configure network\nRUN /tmp/images/algod/setup.py \\\n --bin-dir \"$BIN_DIR\" \\\n --data-dir \"/opt/data\" \\\n --start-script \"/opt/start_algod.sh\" \\\n --network-dir \"/opt/testnetwork\" \\\n --network-template \"//tmp/images/algod/DevModeNetwork.json\" \\\n --network-token \"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\" \\\n --algod-port \"4001\" \\\n --kmd-port \"4002\" \\\n --bootstrap-url \"${BOOTSTRAP_URL}\" \\\n --genesis-file \"/tmp/${GENESIS_FILE}\"\n\n\nENV PATH=\"$BIN_DIR:${PATH}\"\nWORKDIR /opt/data\n\n# Start algod\nCMD [\"/opt/start_algod.sh\"]\n"
}