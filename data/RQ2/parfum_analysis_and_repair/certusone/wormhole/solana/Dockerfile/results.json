{
  "startTime": 1674252038983,
  "endTime": 1674252040025,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/library/rust:1.49@sha256:a50165ea96983c21832578afb1c8c028674c965bc1ed43b607871b1f362e06a5 AS solana\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    clang \\\n    libssl-dev \\\n    libudev-dev \\\n    llvm \\\n    pkg-config \\\n    zlib1g-dev \\\n    && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rustup component add rustfmt && \\\n    rustup default nightly-2021-12-03\n\n# Support additional root CAs\nCOPY devnet_setup.sh cert.pem* /certs/\n# Debian\nRUN if [ -e /certs/cert.pem ]; then cp /certs/cert.pem /etc/ssl/certs/ca-certificates.crt; fi\n\nRUN sh -c \"$(curl -sSfL https://release.solana.com/v1.9.4/install)\"\n\nENV PATH=\"/root/.local/share/solana/install/active_release/bin:$PATH\"\n\n# Solana does a questionable download at the beginning of a *first* build-bpf call. Trigger and layer-cache it explicitly.\nRUN cargo init --lib /tmp/decoy-crate && \\\n    cd /tmp/decoy-crate && cargo build-bpf && \\\n    rm -rf /tmp/decoy-crate\n\n# The strip shell script downloads criterion the first time it runs so cache it here as well.\nRUN touch /tmp/foo.so && \\\n    /root/.local/share/solana/install/active_release/bin/sdk/bpf/scripts/strip.sh /tmp/foo.so /tmp/bar.so || \\\n    rm /tmp/foo.so\n\n# Add bridge contract sources\nWORKDIR /usr/src/bridge\n\nCOPY . .\n\nENV RUST_LOG=\"solana_runtime::system_instruction_processor=trace,solana_runtime::message_processor=trace,solana_bpf_loader=debug,solana_rbpf=debug\"\nENV RUST_BACKTRACE=1\n\nFROM solana AS builder\n\nRUN mkdir -p /opt/solana/deps\n\nENV EMITTER_ADDRESS=\"11111111111111111111111111111115\"\nARG BRIDGE_ADDRESS\nRUN [ -n \"${BRIDGE_ADDRESS}\" ]\n\n# Build Wormhole Solana programs\nRUN --mount=type=cache,target=target,id=build \\\n    cargo build-bpf --manifest-path \"bridge/program/Cargo.toml\" -- --locked && \\\n    cargo build-bpf --manifest-path \"bridge/cpi_poster/Cargo.toml\" -- --locked && \\\n    cargo build-bpf --manifest-path \"modules/token_bridge/program/Cargo.toml\" -- --locked && \\\n    cargo build-bpf --manifest-path \"modules/nft_bridge/program/Cargo.toml\" -- --locked && \\\n    cargo build-bpf --manifest-path \"migration/Cargo.toml\" -- --locked && \\\n    cp target/deploy/bridge.so /opt/solana/deps/bridge.so && \\\n    cp target/deploy/cpi_poster.so /opt/solana/deps/cpi_poster.so && \\\n    cp target/deploy/wormhole_migration.so /opt/solana/deps/wormhole_migration.so && \\\n    cp target/deploy/token_bridge.so /opt/solana/deps/token_bridge.so && \\\n    cp target/deploy/nft_bridge.so /opt/solana/deps/nft_bridge.so && \\\n    cp modules/token_bridge/token-metadata/spl_token_metadata.so /opt/solana/deps/spl_token_metadata.so\n\n# This stage is skipped in normal builds and needs to be explicitly invoked\n# (like `DOCKER_BUILDKIT=1 docker build --target ci_tests .`).\nFROM solana AS ci_tests\n\n# This emitter address is necessary for the governance tests.\nENV EMITTER_ADDRESS=\"CiByUvEcx7w2HA4VHcPCBUAFQ73Won9kB36zW9VjirSr\"\n\nARG BRIDGE_ADDRESS\nRUN [ -n \"${BRIDGE_ADDRESS}\" ]\n\n# This is a pre-built contract.\nRUN --mount=type=cache,target=target,id=test \\\n    mkdir -p target/deploy && \\\n    cp modules/token_bridge/token-metadata/spl_token_metadata.so target/deploy/\n\nRUN --mount=type=cache,target=target,id=test \\\n    cargo test-bpf \\\n        --manifest-path bridge/program/Cargo.toml \\\n        --features trace,instructions\n\nRUN --mount=type=cache,target=target,id=test \\\n    cargo test-bpf \\\n        --manifest-path modules/token_bridge/program/Cargo.toml \\\n        --features trace,instructions\n\nRUN --mount=type=cache,target=target,id=test \\\n    cargo test-bpf \\\n        --manifest-path modules/nft_bridge/program/Cargo.toml \\\n        --features trace,instructions\n\nFROM scratch AS export-stage\nCOPY --from=builder /opt/solana/deps /\n\n"
}