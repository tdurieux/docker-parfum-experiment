{
  "startTime": 1674220014822,
  "endTime": 1674220015986,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n# Set a docker label to advertise multi-model support on the container\nLABEL com.amazonaws.sagemaker.capabilities.multi-models=false\n# Set a docker label to enable container to use SAGEMAKER_BIND_TO_PORT environment variable if present\nLABEL com.amazonaws.sagemaker.capabilities.accept-bind-to-port=true\n\n# No question/dialog is asked during apt-get install\nARG DEBIAN_FRONTEND=noninteractive\n\n# Setting the Timezone Environment Variable\nENV TZ=America/Sao_Paulo\n\n# install ubuntu libraries\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        gcc \\\n        python3.7 \\\n        python3-dev \\\n        python3-pip \\\n        ca-certificates \\\n        git \\\n        curl \\\n        nginx \\\n        openjdk-8-jre-headless\\\n        wget &&\\\n    rm -rf /var/lib/apt/lists/*\n\n# Create folders for code\nRUN mkdir /opt/ml && \\\n    mkdir /opt/ml/output && \\\n    mkdir /opt/ml/code && \\\n    mkdir /opt/ml/code/train && \\\n    mkdir /opt/ml/code/src\n\n# Install requirements\nCOPY requirements.txt /opt/ml/code/src/requirements.txt\nRUN pip3 install --no-cache-dir --no-cache -r /opt/ml/code/src/requirements.txt\n\n# Install the SageMaker Training Toolkit\nRUN pip3 install --no-cache-dir --no-cache \\\n    boto3 \\\n    sagemaker \\\n    sagemaker-training\n\n# copy folders for code\nCOPY src/config/ /opt/ml/code/src/config/\nCOPY src/ml/ /opt/ml/code/src/ml/\nCOPY src/util.py /opt/ml/code/src/util.py\nCOPY train/train.py /opt/ml/code/train.py\n\n# Copy entrypoint script to the image and make it executable\nWORKDIR /opt/ml/code\n\n# Environment variables\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PYTHONIOENCODING=UTF-8 \\\n    LANG=C.UTF-8 \\\n    LC_ALL=C.UTF-8\n\n# Setting PYTHONPATH to access the copied code\nENV PYTHONPATH=\"/opt/ml/code:${PATH}\"\n\n# Add a Python script and configure Docker to run it\nRUN chmod +x train.py\nENV SAGEMAKER_PROGRAM train.py\n"
}