diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mhassan2/datafabric_splunk/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mhassan2/datafabric_splunk/Dockerfile/repaired.Dockerfile
index f933de8..e3c3d71 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mhassan2/datafabric_splunk/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mhassan2/datafabric_splunk/Dockerfile/repaired.Dockerfile
@@ -81,9 +81,9 @@ ENV SPLUNK_BACKUP_DEFAULT_ETC /var/opt/splunk
 
 RUN printf "\033[1;33m\n\n-------------------- Installing Misc Stuff ---------------------\n"
 RUN apt-get -qq update && printf "\033[1;33m"
-RUN apt-get -qq install -y apt-utils lsb-release curl && apt-get update && printf "\033[1;33m"
+RUN apt-get -qq --no-install-recommends install -y apt-utils lsb-release curl && apt-get update && printf "\033[1;33m" && rm -rf /var/lib/apt/lists/*;
 #RUN apt-get -qq update && printf "\033[1;33m"
-RUN apt-get -qq install -y wget sudo vim net-tools telnet dnsutils && apt-get -qq update
+RUN apt-get -qq --no-install-recommends install -y wget sudo vim net-tools telnet dnsutils && apt-get -qq update && rm -rf /var/lib/apt/lists/*;
 COPY configs/containers.bashrc /root/.bashrc
 COPY configs/containers.vimrc /root/.vimrc
 COPY configs/environment /etc
@@ -93,12 +93,12 @@ RUN printf "\033[1;32m\n\n-------------------- Installing Splunk ---------------
 RUN groupadd -r ${SPLUNK_GROUP} \
     && useradd -r -m -g ${SPLUNK_GROUP} ${SPLUNK_USER}
 # make the "en_US.UTF-8" locale so splunk will be utf-8 enabled by default
-RUN apt-get -qq install -y locales \
-    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
+RUN apt-get -qq --no-install-recommends install -y locales \
+    && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 ENV LANG en_US.utf8
 
 # pdfgen dependency
-RUN apt-get -qq install -y libgssapi-krb5-2
+RUN apt-get -qq --no-install-recommends install -y libgssapi-krb5-2 && rm -rf /var/lib/apt/lists/*;
 RUN apt-get -qq update && printf "\033[1;32m"
 
 # Download official Splunk release, verify checksum and unzip in /opt/splunk
@@ -126,7 +126,7 @@ RUN chmod +x /etc/init.d/splunk
 #--------------------------------------------------------------
 
 RUN printf "\033[1;32m\n\n-------------------- Downloading WORLD database ---------------------\n"
-RUN wget -qO /tmp/world.sql.gz http://downloads.mysql.com/docs/world.sql.gz
+RUN wget -qO /tmp/world.sql.gz https://downloads.mysql.com/docs/world.sql.gz
 #COPY Packages_download/world.sql.gz  /tmp
 #COPY scripts/startup_mysql.sh /sbin/startup_mysql.sh
 #RUN chmod +x /sbin/startup_mysql.sh
@@ -135,7 +135,7 @@ RUN gunzip /tmp/world.sql.gz
 
 RUN printf "\033[1;34m\n\n-------------------- Installing MySQL ---------------------\n"
 RUN apt-get -qq update && printf "\033[1;34m"
-RUN apt-get -qq install -y mysql-server
+RUN apt-get -qq --no-install-recommends install -y mysql-server && rm -rf /var/lib/apt/lists/*;
 #copy the customized mysql startup script
 COPY scripts/mysql /etc/init.d/mysql
 RUN chmod +x /etc/init.d/mysql
@@ -144,7 +144,7 @@ RUN chmod +x /etc/init.d/mysql
 
 RUN printf "\033[1;36m\n\n-------------------- Installing supervisord ---------------------\n"
 RUN apt-get -qq update && printf "\033[1;36m"
-RUN apt-get -qq install -y supervisor
+RUN apt-get -qq --no-install-recommends install -y supervisor && rm -rf /var/lib/apt/lists/*;
 COPY configs/supervisord.conf /etc/supervisor/supervisord.conf
 #configure built-in webserver
 #RUN mkdir -p /etc/nginx/sites-available/
@@ -163,7 +163,7 @@ RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886
 RUN printf "\033[1;33m"
 RUN apt-get -qq update && printf "\033[1;33"
 RUN echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | sudo /usr/bin/debconf-set-selections
-RUN apt-get -qq install -y oracle-java8-installer
+RUN apt-get -qq --no-install-recommends install -y oracle-java8-installer && rm -rf /var/lib/apt/lists/*;
 ENV JAVA_HOME /usr/lib/jvm/java-8-oracle
 #--------------------------------------------------------------
 
@@ -171,13 +171,13 @@ RUN printf "\033[1;32m\n\n-------------------- Installing splunk apps: DBconnect
 #order of splunk apps install is important. First DBconnet then the MySQL driver
 #DBconnect App 3.11
 COPY splunk_apps/splunk-db-connect_311.tgz /tmp/splunk-db-connect_311.tgz
-RUN tar -zxf /tmp/splunk-db-connect_311.tgz -C /var/opt/splunk/etc/apps
+RUN tar -zxf /tmp/splunk-db-connect_311.tgz -C /var/opt/splunk/etc/apps && rm /tmp/splunk-db-connect_311.tgz
 RUN rm -f /tmp/splunk-db-connect_311.tgz
 
 #MySQL java driver
 RUN wget -qO /tmp/mysql-connector-java-5.1.44.tar.gz https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.44.tar.gz
 #COPY Packages_download/mysql-connector-java-5.1.44.tar.gz  /tmp
-RUN	tar -zxf /tmp/mysql-connector-java-5.1.44.tar.gz -C /var/opt/splunk/etc/apps/splunk_app_db_connect/drivers/
+RUN tar -zxf /tmp/mysql-connector-java-5.1.44.tar.gz -C /var/opt/splunk/etc/apps/splunk_app_db_connect/drivers/ && rm /tmp/mysql-connector-java-5.1.44.tar.gz
 RUN rm -f /tmp/mysql-connector-java-5.1.44.tar.gz
 
 #Kafka add-on
@@ -192,10 +192,10 @@ RUN rm -f /tmp/mysql-connector-java-5.1.44.tar.gz
 
 #Configuring indexers [include hadoop vidx]
 COPY splunk_apps/indexes.tgz /tmp/indexes.tgz
-RUN tar xzf /tmp/indexes.tgz -C /opt/splunk
+RUN tar xzf /tmp/indexes.tgz -C /opt/splunk && rm /tmp/indexes.tgz
 #Install Splunk apps [dbconnect 2.x, kafka addon,] & dashboards [search app]
 COPY splunk_apps/apps_configs.tgz /tmp/apps_configs.tgz
-RUN tar xzf /tmp/apps_configs.tgz -C /var/opt/splunk/etc/apps/
+RUN tar xzf /tmp/apps_configs.tgz -C /var/opt/splunk/etc/apps/ && rm /tmp/apps_configs.tgz
 RUN mkdir -p /var/opt/splunk/etc/apps/user-prefs/local
 COPY configs/user-prefs.conf  /var/opt/splunk/etc/apps/user-prefs/local
 RUN chown -R ${SPLUNK_USER}:${SPLUNK_GROUP} /var/opt/splunk/etc/apps
@@ -203,7 +203,7 @@ RUN rm -f /tmp/indexes.tgz /tmp/apps_configs.tgz
 #--------------------------------------------------------------
 
 RUN printf "\033[1;36m\n\n-------------------- Installing & Configuring sshd ---------------------\n"
-RUN apt-get -qq install -y openssh-server rsync
+RUN apt-get -qq --no-install-recommends install -y openssh-server rsync && rm -rf /var/lib/apt/lists/*;
 RUN apt-get -qq update && printf "\033[1;36m"
 
 #passwordless ssh login
@@ -219,7 +219,7 @@ RUN echo "Port 2122" >> /etc/ssh/sshd_config
 RUN echo "ListenAddress 0.0.0.0" >> /etc/ssh/sshd_config
 #Share static host keys so we dont get ssh warning with different builds
 COPY configs/ssh_host_keys.tgz /tmp/ssh_host_keys.tgz
-RUN tar -zxf /tmp/ssh_host_keys.tgz -C /etc/ssh
+RUN tar -zxf /tmp/ssh_host_keys.tgz -C /etc/ssh && rm /tmp/ssh_host_keys.tgz
 
 # SSH login fix. Otherwise user is kicked off after login
 RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd
@@ -238,14 +238,14 @@ RUN printf "\033[1;37m\n\n-------------------- Installing Hadoop(Yarn) ---------
 ENV HADOOP_USER_NAME="splunk"
 
 #Download sample hadoop data
-RUN wget -qO /tmp/Hunkdata.json.gz http://www.splunk.com/web_assets/hunk/Hunkdata.json.gz
+RUN wget -qO /tmp/Hunkdata.json.gz https://www.splunk.com/web_assets/hunk/Hunkdata.json.gz
 #COPY Packages_download/Hunkdata.json.gz /tmp
 COPY /data/avro_07_31_2017.avro /tmp/avro_07_31_2017.avro
 COPY /data/avro_08_01_2017.avro /tmp/avro_08_01_2017.avro
 
-RUN wget -qO /tmp/hadoop-2.9.0.tar.gz http://apache.claz.org/hadoop/common/hadoop-2.9.0/hadoop-2.9.0.tar.gz
+RUN wget -qO /tmp/hadoop-2.9.0.tar.gz https://apache.claz.org/hadoop/common/hadoop-2.9.0/hadoop-2.9.0.tar.gz
 #COPY Packages_download/hadoop-2.9.0.tar.gz /tmp
-RUN tar -zxf /tmp/hadoop-2.9.0.tar.gz -C /opt
+RUN tar -zxf /tmp/hadoop-2.9.0.tar.gz -C /opt && rm /tmp/hadoop-2.9.0.tar.gz
 RUN rm -f /tmp/hadoop-2.9.0.tar.gz
 
 #Customization
@@ -289,9 +289,9 @@ RUN chmod +x /opt/hadoop-2.9.0/sbin/stop-dfs.sh
 #>>>>>> disable Zookeeper install. It is embemded in Kafka install <<<<<<
 
 RUN printf "\033[1;33m\n\n-------------------- Installing Kafka ---------------------\n"
-RUN wget -qO  /tmp/kafka_2.11-1.0.0.tgz http://apache.claz.org/kafka/1.0.0/kafka_2.11-1.0.0.tgz
+RUN wget -qO /tmp/kafka_2.11-1.0.0.tgz https://apache.claz.org/kafka/1.0.0/kafka_2.11-1.0.0.tgz
 #COPY Packages_download/kafka_2.11-1.0.0.tgz /tmp
-RUN tar -zxf /tmp/kafka_2.11-1.0.0.tgz -C /opt
+RUN tar -zxf /tmp/kafka_2.11-1.0.0.tgz -C /opt && rm /tmp/kafka_2.11-1.0.0.tgz
 RUN rm -f /tmp/kafka_2.11-1.0.0.tgz
 
 COPY data/sample_kafka.log /tmp/sample_kafka.log
@@ -312,9 +312,9 @@ RUN chmod +x /opt/kafka_2.11-1.0.0/bin/kafka-server-start.sh
 #--------------------------------------------------------------
 
 RUN printf "\033[1;34m\n\n-------------------- Installing Apache NIFI ---------------------\n"
-RUN wget -qO /tmp/nifi-1.4.0-bin.tar.gz http://apache.claz.org/nifi/1.4.0/nifi-1.4.0-bin.tar.gz
+RUN wget -qO /tmp/nifi-1.4.0-bin.tar.gz https://apache.claz.org/nifi/1.4.0/nifi-1.4.0-bin.tar.gz
 #COPY Packages_download/nifi-1.4.0-bin.tar.gz /tmp
-RUN tar -xzf /tmp/nifi-1.4.0-bin.tar.gz -C /opt
+RUN tar -xzf /tmp/nifi-1.4.0-bin.tar.gz -C /opt && rm /tmp/nifi-1.4.0-bin.tar.gz
 RUN rm -f /tmp/nifi-1.4.0-bin.tar.gz
 
 #need uuidgen command for nifi UI configuration