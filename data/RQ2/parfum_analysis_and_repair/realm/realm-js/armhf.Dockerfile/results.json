{
  "startTime": 1674218782578,
  "endTime": 1674218783409,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedDockerfile": "FROM debian:10\n\nRUN dpkg --add-architecture armhf && apt-get update\nRUN apt-get install --no-install-recommends -y \\\n        build-essential \\\n        curl \\\n        crossbuild-essential-armhf \\\n        git \\\n        libprocps-dev:armhf \\\n        libssl-dev:armhf \\\n        libz-dev:armhf \\\n        libasio-dev \\\n        ninja-build \\\n        nodejs \\\n        libnode-dev:armhf \\\n        npm \\\n        qemu-user && rm -rf /var/lib/apt/lists/*;\n\n\nENV NPM_CONFIG_UNSAFE_PERM true\nENV NVM_DIR /tmp/.nvm\nRUN mkdir -p $NVM_DIR \\\n && curl -f -s https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \\\n && . $NVM_DIR/nvm.sh \\\n && nvm install 10 \\\n && nvm install 12 \\\n && nvm install 13 \\\n && nvm install 14 \\\n && chmod a+rwX -R $NVM_DIR\n\n# Ensure a new enough version of CMake is available.\nRUN cd /opt \\\n    && curl -f -O -J https://cmake.org/files/v3.15/cmake-3.15.2-Linux-x86_64.tar.gz \\\n    && tar zxf cmake-3.15.2-Linux-x86_64.tar.gz && rm cmake-3.15.2-Linux-x86_64.tar.gz\n\nENV PATH \"/opt/cmake-3.15.2-Linux-x86_64/bin:$PATH\""
}