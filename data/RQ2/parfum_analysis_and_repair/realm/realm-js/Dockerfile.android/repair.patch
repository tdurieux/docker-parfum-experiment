diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/realm/realm-js/Dockerfile.android b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/realm/realm-js/Dockerfile.android/repaired.Dockerfile
index 27efd67..81fd47b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/realm/realm-js/Dockerfile.android
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/realm/realm-js/Dockerfile.android/repaired.Dockerfile
@@ -18,7 +18,7 @@ ENV NVM_DIR /tmp/.nvm
 ENV DEBIAN_FRONTEND noninteractive
 RUN dpkg --add-architecture i386 && \
     apt-get update -qq && \
-    apt-get install -qq -y \
+    apt-get install --no-install-recommends -qq -y \
       # Installing OpenJDK in its headless variant as we don't need the GUI related parts
       openjdk-8-jdk-headless \
       # Tools needed when installing dependencies
@@ -32,10 +32,10 @@ RUN dpkg --add-architecture i386 && \
       build-essential \
     && \
     # Install the active LTS version of Node.js
-    curl -sL https://deb.nodesource.com/setup_${NODE_VERSION} | bash - && \
-    apt-get install -qq -y nodejs && \
+    curl -f -sL https://deb.nodesource.com/setup_${NODE_VERSION} | bash - && \
+    apt-get install --no-install-recommends -qq -y nodejs && \
     # Clean-up to lower the image size
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Jenkins will run this image as user 1001, let's ensure that user exists and has a home directory
 RUN adduser --uid 1001 --disabled-password --gecos "" jenkins
@@ -49,7 +49,7 @@ ENV ANDROID_NDK /home/jenkins/android-ndk
 
 RUN echo 'Installing Android SDK' && \
     mkdir -p ${ANDROID_HOME} && cd ${ANDROID_HOME} && \
-    curl -sO https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip && \
+    curl -f -sO https://dl.google.com/android/repository/sdk-tools-linux-${ANDROID_SDK_VERSION}.zip && \
     unzip -q sdk-tools-linux-*.zip && \
     rm sdk-tools-linux-*.zip && \
     sdkmanager --update && \
@@ -60,16 +60,16 @@ RUN echo 'Installing Android SDK' && \
                      "platforms;android-26" \
                      "cmake;3.10.2.4988404"\
                      "system-images;android-29;default;x86" && \
-    \
+
     echo 'Installing Android NDK' && \
     cd ${ANDROID_NDK}/.. && \
-    curl -sO http://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip && \
+    curl -f -sO http://dl.google.com/android/repository/android-ndk-${ANDROID_NDK_VERSION}-linux-x86_64.zip && \
     unzip -q android-ndk-*-linux-x86_64.zip && \
     rm android-ndk-*-linux-x86_64.zip && \
     mv android-ndk-* android-ndk
 
 RUN mkdir -p $NVM_DIR \
- && curl -s https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \
+ && curl -f -s https://raw.githubusercontent.com/creationix/nvm/v0.34.0/install.sh | bash \
  && . $NVM_DIR/nvm.sh \
  && nvm install 12 \
  && chmod a+rwX -R $NVM_DIR
@@ -77,6 +77,6 @@ RUN mkdir -p $NVM_DIR \
 # Ensure a new enough version of CMake is available.
 RUN mkdir -p /home/jenkins/cmake && \
     cd /home/jenkins/cmake && \
-    curl -O -J https://cmake.org/files/v3.17/cmake-3.17.5-Linux-x86_64.tar.gz &&\
-    tar zxf cmake-3.17.5-Linux-x86_64.tar.gz
+    curl -f -O -J https://cmake.org/files/v3.17/cmake-3.17.5-Linux-x86_64.tar.gz && \
+    tar zxf cmake-3.17.5-Linux-x86_64.tar.gz && rm cmake-3.17.5-Linux-x86_64.tar.gz
 ENV PATH "/home/jenkins/cmake/cmake-3.17.5-Linux-x86_64/bin:$PATH"
\ No newline at end of file