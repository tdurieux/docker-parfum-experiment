diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/realm/realm-core/test/cloud_perf_test/client/resources/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/realm/realm-core/test/cloud_perf_test/client/resources/docker/Dockerfile/repaired.Dockerfile
index df06716..95cb918 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/realm/realm-core/test/cloud_perf_test/client/resources/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/realm/realm-core/test/cloud_perf_test/client/resources/docker/Dockerfile/repaired.Dockerfile
@@ -8,11 +8,11 @@ RUN sh "install_build_essentials_ubuntu_bionic.sh" && sh "install_core_prerequis
 
 # Build core library
 COPY tmp/realm-core.tgz /work/
-RUN mkdir "realm-core" && (cd "realm-core" && tar xf "../realm-core.tgz" && mkdir "build.release" && (cd "build.release" && cmake -G "Ninja" -D REALM_NO_TESTS="1" -D CMAKE_BUILD_TYPE="Release" .. && ninja) && mkdir "build.debug" && (cd "build.debug" && cmake -G "Ninja" -D REALM_NO_TESTS="1" -D CMAKE_BUILD_TYPE="Debug" .. && ninja))
+RUN mkdir "realm-core" && (cd "realm-core" && tar xf "../realm-core.tgz" && mkdir "build.release" && (cd "build.release" && cmake -G "Ninja" -D REALM_NO_TESTS="1" -D CMAKE_BUILD_TYPE="Release" .. && ninja) && mkdir "build.debug" && (cd "build.debug" && cmake -G "Ninja" -D REALM_NO_TESTS="1" -D CMAKE_BUILD_TYPE="Debug" .. && ninja)) && rm "../realm-core.tgz"
 
 # Build sync library and test client
 COPY tmp/realm-sync.tgz /work/
-RUN mkdir "realm-sync" && (cd "realm-sync" && tar xf "../realm-sync.tgz" && mkdir "build.release" && (cd "build.release" && cmake -G "Ninja" -D OPENSSL_ROOT_DIR="/usr" -D REALM_CORE_BUILDTREE="/work/realm-core/build.release" -D REALM_BUILD_TESTS="no" -D REALM_BUILD_TEST_CLIENT="yes" -D CMAKE_BUILD_TYPE="Release" .. && ninja && cp "test/client/realm-test-client" "/usr/bin/realm-test-client") && mkdir "build.debug" && (cd "build.debug" && cmake -G "Ninja" -D OPENSSL_ROOT_DIR="/usr" -D REALM_CORE_BUILDTREE="/work/realm-core/build.debug" -D REALM_BUILD_TESTS="no" -D REALM_BUILD_TEST_CLIENT="yes" -D CMAKE_BUILD_TYPE="Debug" .. && ninja && cp "test/client/realm-test-client" "/usr/bin/realm-test-client-dbg"))
+RUN mkdir "realm-sync" && (cd "realm-sync" && tar xf "../realm-sync.tgz" && mkdir "build.release" && (cd "build.release" && cmake -G "Ninja" -D OPENSSL_ROOT_DIR="/usr" -D REALM_CORE_BUILDTREE="/work/realm-core/build.release" -D REALM_BUILD_TESTS="no" -D REALM_BUILD_TEST_CLIENT="yes" -D CMAKE_BUILD_TYPE="Release" .. && ninja && cp "test/client/realm-test-client" "/usr/bin/realm-test-client") && mkdir "build.debug" && (cd "build.debug" && cmake -G "Ninja" -D OPENSSL_ROOT_DIR="/usr" -D REALM_CORE_BUILDTREE="/work/realm-core/build.debug" -D REALM_BUILD_TESTS="no" -D REALM_BUILD_TEST_CLIENT="yes" -D CMAKE_BUILD_TYPE="Debug" .. && ninja && cp "test/client/realm-test-client" "/usr/bin/realm-test-client-dbg")) && rm "../realm-sync.tgz"
 
 WORKDIR /client
 RUN rm -fr "/work" && mkdir -p "realms"