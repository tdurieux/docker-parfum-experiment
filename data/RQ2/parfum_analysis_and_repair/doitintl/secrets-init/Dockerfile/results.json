{
  "startTime": 1674220480860,
  "endTime": 1674220481802,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=${BUILDPLATFORM} golang:1.16-alpine as builder\n# passed by buildkit\nARG TARGETOS\nARG TARGETARCH\n# add CA certificates and TZ for local time\nRUN apk --update --no-cache add ca-certificates make git\n# Create and change to the app directory.\nRUN mkdir -p /go/src/app\nWORKDIR /go/src/app\n# Retrieve application dependencies.\n# This allows the container build to reuse cached dependencies.\n# Expecting to copy go.mod and if present go.sum.\nCOPY go.mod .\nCOPY go.sum .\nRUN --mount=type=cache,target=/go/mod go mod download\n# Copy local code to the container image.\nCOPY . .\n# Build the binary.\nRUN --mount=type=cache,target=/root/.cache/go-build TARGETOS=${TARGETOS} TARGETARCH=${TARGETARCH} make\n\n# final image\nFROM scratch\n# copy certificates\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\n# copy the binary to the production image from the builder stage.\nCOPY --from=builder /go/src/app/.bin/secrets-init /secrets-init\nENTRYPOINT [\"/secrets-init\"]\nCMD [\"--version\"]\n"
}