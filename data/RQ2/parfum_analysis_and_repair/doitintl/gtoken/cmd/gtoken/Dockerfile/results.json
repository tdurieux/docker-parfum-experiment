{
  "startTime": 1674220488693,
  "endTime": 1674220489158,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# ----- Go Builder Image ------\n#\nFROM golang:1.17-alpine AS builder\n\n# curl git bash\nRUN apk add --no-cache curl git bash make\nCOPY --from=golangci/golangci-lint:v1.45-alpine /usr/bin/golangci-lint /usr/bin\n\n#\n# ----- Build and Test Image -----\n#\nFROM builder as build\n\n# set working directorydoc\nRUN mkdir -p /go/src/gtoken\nWORKDIR /go/src/gtoken\n\n# load dependency\nCOPY go.mod .\nCOPY go.sum .\nRUN --mount=type=cache,target=/go/mod go mod download\n\n# copy sources\nCOPY . .\n\n# build\nRUN make\n\n\n#\n# ------ get latest CA certificates\n#\nFROM alpine:3.15 as certs\nRUN apk --update --no-cache add ca-certificates\n# this is for debug only Alpine image\nCOPY --from=build /go/src/gtoken/.bin/github.com/doitintl/gtoken /gtoken\nCMD [\"/gtoken\"]\n\n#\n# ------ gtoken release Docker image ------\n#\nFROM scratch\n\n# copy CA certificates\nCOPY --from=certs /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\n\n# this is the last commabd since it's never cached\nCOPY --from=build /go/src/gtoken/.bin/github.com/doitintl/gtoken /gtoken\n\nENTRYPOINT [\"/gtoken\"]"
}