{
  "startTime": 1674247974611,
  "endTime": 1674247975249,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 56,
        "columnEnd": 562
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\nARG NCPU=1\nENV NCPU=$NCPU\n\n# This will reduce the memory usage by default\nARG CXXFLAGS=\"--param ggc-min-expand=5 --param ggc-min-heapsize=32768\"\nENV CXXFLAGS=\"$CXXFLAGS\"\n\n# This will make a smaller, non-development Dockerfile by default\nARG RECLAIM=\"-reclaim\"\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install sudo build-essential wget flex ghostscript bzip2 git subversion automake libtool bison python3 python3-distutils libncurses-dev vim-common sqlite3 libsqlite3-0 libsqlite3-dev zlib1g-dev cmake ninja-build libyaml-cpp-dev libboost-dev libboost-chrono-dev libboost-filesystem-dev libboost-iostreams-dev libboost-program-options-dev libboost-random-dev libboost-regex-dev libboost-system-dev libboost-wave-dev libboost-thread-dev libboost-timer-dev libxml2-dev && rm -rf /var/lib/apt/lists/*\n\n# Only add the build prerequisites script so they won't be rebuilt on pharos code change\nRUN mkdir -p /root/pharos/scripts/\nADD scripts/build_prereqs.bash /root/pharos/scripts/\nRUN /root/pharos/scripts/build_prereqs.bash $RECLAIM\n\nADD . /root/pharos\n\n# Put everything in the same layer so it's much smaller\nRUN /root/pharos/scripts/build.bash $RECLAIM && \\\n  find /usr/local/lib /usr/local/bin | xargs file | grep 'current ar archive' | awk -F':' '{print $1}' | xargs strip\n"
}