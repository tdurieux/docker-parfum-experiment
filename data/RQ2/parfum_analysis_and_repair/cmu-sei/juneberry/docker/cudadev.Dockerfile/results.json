{
  "startTime": 1674253346417,
  "endTime": 1674253347437,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ======================================================================================================================\n# Juneberry - General Release\n#\n# Copyright 2021 Carnegie Mellon University.\n#\n# NO WARRANTY. THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL IS FURNISHED ON AN \"AS-IS\"\n# BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRANTIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER\n# INCLUDING, BUT NOT LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTABILITY, EXCLUSIVITY, OR RESULTS OBTAINED\n# FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM\n# FROM PATENT, TRADEMARK, OR COPYRIGHT INFRINGEMENT.\n#\n# Released under a BSD (SEI)-style license, please see license.txt or contact permission@sei.cmu.edu for full terms.\n#\n# [DISTRIBUTION STATEMENT A] This material has been approved for public release and unlimited distribution.  Please see\n# Copyright notice for non-US Government use and distribution.\n#\n# This Software includes and/or makes use of Third-Party Software subject to its own license.\n#\n# DM21-0884\n#\n# ======================================================================================================================\n#\n# https://docs.nvidia.com/deeplearning/frameworks/pytorch-release-notes/rel_21-08.html\n# CUDA 11.4.1, Driver 470 or later, Python 3.8.?, pytorch 1.10.0a0+3fd9dvf\nFROM nvcr.io/nvidia/pytorch:21.08-py3\n\n# ============ BASE PLATFORM ============\n\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n        libgl1-mesa-glx figlet sudo tzdata tmux vim emacs nano \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Make sure we are using the latest pip\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# ============ Tensorflow ============\n\n# We install tensorflow FIRST because it is very picky about versions of things such\n# as numpy. And when other things need numpy (such as to compile against it, such as\n# pycocotools) we can't have tensorflow moving to old versions.\n#RUN pip install tensorflow tensorflow-datasets\nRUN pip install --no-cache-dir tensorflow==2.7.0 tensorflow-datasets==4.4.0\n\n# ============ JUNEBERRY ============\n\n# NOTE: This container differs in that we don't install torch or torchvision as they\n# come as part of the base install.\n\n# Some of these may No-Op because they are in the pytorch distribution\n# Some of these Juneberry may not need, but many tools do.\n# NOTE: We do NOT install pytorch as it comes in this nvidia base container\nRUN pip3 install --no-cache-dir llvmlite==0.38.0 --ignore-installed\nRUN pip3 install --no-cache-dir adversarial-robustness-toolbox \\\n    doit numpy pycocotools matplotlib pillow prodict hjson jsonschema \\\n    sklearn tensorboard \\\n    torch-summary\\>=1.4.5 albumentations \\\n    pandas brambox pyyaml natsort \\\n    opacus==0.14.0 \\\n    protobuf==3.16.0 onnx onnxruntime-gpu \\\n    tf2onnx \\\n    opencv-python==4.5.5.62 \\\n    tqdm \\\n    pytest pylint\n\n# ============ DETECTRON2 ============\n\nRUN pip3 install --no-cache-dir 'git+https://github.com/facebookresearch/detectron2.git@v0.6'\n\n# ============ MMDETECTION ============\n\n# We MUST use the FORCE_CUDA=1 to get the MMCV to compile with CUDA and MMDetection to include it.\n# For some reason they can't detect the cuda drivers.\nENV FORCE_CUDA=\"1\"\n\n#RUN MMCV_WITH_OPS=1 pip3 install mmcv-full\nRUN MMCV_WITH_OPS=1 pip3 --no-cache-dir install mmcv-full==1.4.8\n#RUN MMCV_WITH_OPS=1 pip3 install mmcv-full==1.4.8 -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html\n\n# Build MMDetection\n#RUN git clone https://github.com/open-mmlab/mmdetection.git /mmdetection\nRUN git clone --depth 1 --branch v2.23.0 https://github.com/open-mmlab/mmdetection.git /mmdetection\nWORKDIR /mmdetection\nRUN pip3 install --no-cache-dir -r requirements/build.txt\nRUN pip3 install --no-cache-dir -v -e .\n\n# ============ JUNEBERRY PATHS ============\n# Since everything is mounted to specific directories, we can specify data root and tensorboard.\n\nENV JUNEBERRY_DATA_ROOT=\"/dataroot\"\nENV JUNEBERRY_TENSORBOARD=\"/tensorboard\"\n\n# ============ CONVENIENCE ============\n\n# Add some settings to the bashrc to make it easier for folks to know we are in a container\nENV JUNEBERRY_CONTAINER_VERSION=\"cudadev:v11\"\nRUN echo \"PS1='${debian_chroot:+($debian_chroot)}\\u@\\h+CudaDev:\\w\\$ '\" >> /root/.bashrc; \\\n    echo \"alias ll='ls -l --color=auto'\" >> /root/.bashrc; \\\n    echo \"alias jb_comp='source /juneberry/scripts/juneberry_completion.sh'\" >> /root/.bashrc; \\\n    echo \"alias jb_setup='pip install -e /juneberry; pip install -e .; source /juneberry/scripts/juneberry_completion.sh'\" >> /root/.bashrc; \\\n    echo \"if [ -f ./container_start.sh ]; then\" >> /root/.bashrc; \\\n    echo \"    echo 'SOURCING bash ./container_start.sh'\"  >> /root/.bashrc; \\\n    echo \"    source ./container_start.sh\" >> /root/.bashrc; \\\n    echo \"fi\" >> /root/.bashrc; \\\n    echo \"figlet -w 120 CUDA - ${JUNEBERRY_CONTAINER_VERSION}\" >> /root/.bashrc\n\n"
}