{
  "startTime": 1674248745867,
  "endTime": 1674248747425,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:<%= ruby_version %>\n\nMAINTAINER Moritz Schepp <moritz.schepp@gmail.com>\n\nVOLUME /opt/kor/shared\nVOLUME /etc/ssmtp\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y build-essential libxml2-dev libxslt-dev git-core curl libssl-dev && \\\n    apt-get install --no-install-recommends -y libmysqlclient-dev imagemagick libav-tools zip libreadline6-dev ssmtp file && \\\n    apt-get clean && \\\n    echo 'gem: --no-ri --no-rdoc' >> /etc/gemrc && \\\n    useradd -m kor && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /opt/kor/shared/data\nADD tmp/kor.tar /opt/kor/current\n\nWORKDIR /opt/kor/current\n\n<% if rails_env == 'production' %>\nRUN ln -sfn /opt/kor/shared/database.yml /opt/kor/current/config/database.yml && \\\n    ln -sfn /opt/kor/shared/kor.yml /opt/kor/current/config/kor.yml && \\\n    ln -sfn /opt/kor/shared/kor.app.yml /opt/kor/current/config/kor.app.yml && \\\n    ln -sfn /opt/kor/shared/legal.txt /opt/kor/current/config/legal.txt && \\\n    ln -sfn /opt/kor/shared/contact.txt /opt/kor/current/config/contact.txt && \\\n    ln -sfn /opt/kor/shared/data /opt/kor/current/data && \\\n    ln -sfn /opt/kor/shared/log /opt/kor/current/log\n<% else %>\nRUN mkdir -p /opt/kor/current/data && \\\n    mkdir -p /opt/kor/current/log && \\\n    cp /opt/kor/current/config/database.yml.example.ci /opt/kor/current/config/database.yml && \\\n    touch /opt/kor/current/config/kor.yml && \\\n    touch /opt/kor/current/config/kor.app.yml && \\\n    cp /opt/kor/current/config/legal.txt.example /opt/kor/current/config/legal.txt && \\\n    cp /opt/kor/current/config/legal.txt.example /opt/kor/current/config/contact.txt\n<% end %>\n\n<% if rails_env == 'test' %>\nENV RAILS_ENV test\nENV HEADLESS true\n<% end %>\n\n<% if rails_env == 'production' %>\nENV RAILS_ENV production\nEXPOSE 8000\n<% end %>\n\n<% if rails_env == 'test' %>\nRUN cd /opt && \\\n    apt-get install --no-install-recommends -y zip libgconf-2-4 chromium && \\\n    wget https://chromedriver.storage.googleapis.com/2.32/chromedriver_linux64.zip && \\\n    unzip chromedriver_linux64.zip && \\\n    ln -sfn /opt/chromedriver /usr/bin/chromedriver && \\\n    rm chromedriver_linux64.zip && rm -rf /var/lib/apt/lists/*;\n<% end %>\n\nRUN gem update bundler && rm -rf /root/.gem;\n\n<% if rails_env == 'test' %>\n  RUN bash -c \"bundle install --path /opt/kor/bundle --without development production\" kor\n<% end %>\n\n<% if rails_env == 'production' %>\n  RUN bash -c \"bundle install --path /opt/kor/bundle --without development test\" kor\n\n  ENV RAILS_SERVE_STATIC_FILES true\n  RUN bash -c \"RAILS_GROUPS=assets bundle exec rake assets:precompile\" kor\n<% end %>\n\nADD public/*.css /opt/kor/current/public/\nADD public/*.js /opt/kor/current/public/\nADD public/fonts /opt/kor/current/public/fonts"
}