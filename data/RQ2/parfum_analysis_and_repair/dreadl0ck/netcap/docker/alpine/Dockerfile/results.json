{
  "startTime": 1674253825820,
  "endTime": 1674253827164,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 43,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 46,
        "columnEnd": 57
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 49,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 51,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 35,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17.6-alpine as builder\nRUN apk update\nRUN apk add --no-cache gcc libpcap-dev libnetfilter_queue-dev linux-headers musl-utils musl-dev git vim autoconf automake libtool make g++ bison flex cmake build-base abuild binutils binutils-doc gcc-doc cmake-doc extra-cmake-modules extra-cmake-modules-doc\n\nRUN wget https://github.com/wanduow/wandio/archive/4.2.3-1.tar.gz\nRUN tar xfz 4.2.3-1.tar.gz && rm 4.2.3-1.tar.gz\nRUN cd wandio-4.2.3-1 && ./bootstrap.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\nRUN wget https://github.com/LibtraceTeam/libtrace/archive/4.0.17-1.tar.gz\nRUN tar xfz 4.0.17-1.tar.gz && rm 4.0.17-1.tar.gz\nRUN cd libtrace-4.0.17-1 && ./bootstrap.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\nRUN wget https://github.com/wanduow/libflowmanager/archive/3.0.0.tar.gz\nRUN tar xfz 3.0.0.tar.gz && rm 3.0.0.tar.gz\nRUN cd libflowmanager-3.0.0 && ./bootstrap.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\nRUN wget https://github.com/wanduow/libprotoident/archive/2.0.15-1.tar.gz\nRUN tar xfz 2.0.15-1.tar.gz && rm 2.0.15-1.tar.gz\nRUN cd libprotoident-2.0.15-1 && ./bootstrap.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n# debug linker search path: ld -llinear --verbose\n#RUN git clone https://github.com/cjlin1/liblinear.git\n#RUN cd liblinear && make && cp linear.h /usr/local/include && cp linear.o /usr/local/lib && mkdir -p /usr/local/lib/liblinear && cp linear.o /usr/lib/liblinear.o\n\n# nDPI\nRUN apk add --no-cache json-c-dev\nRUN wget https://github.com/ntop/nDPI/archive/4.0.tar.gz\nRUN tar xfz 4.0.tar.gz && rm 4.0.tar.gz\nRUN cd nDPI-4.0 && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\nWORKDIR /netcap\nCOPY go.mod go.sum ./\nRUN go mod download\nCOPY . .\nENV VERSION XXX\nARG tags\nENV TAGS $tags\nRUN echo \"tags: $TAGS\"\n\nENV CFLAGS -I/usr/local/lib\nENV CPPFLAGS -I/usr/local/lib\nENV CXXFLAGS -I/usr/local/lib\nENV LDFLAGS --verbose -v -L/usr/local/lib -llinear -ltrace -lndpi -lpcap -lm -pthread\n\nENV LD_LIBRARY_PATH /usr/local/lib:/usr/lib:/go\nENV LD_RUN_PATH /usr/local/lib\n\n#ENV LD_DEBUG libs\n#ENV LD_DEBUG=all\n\nRUN ldconfig /usr/local/lib/*\nRUN ldconfig /go/*\n\n#RUN env\n#RUN find / -iname ndpi_main.h\n#RUN find / -iname libprotoident.h\n#RUN find / -iname libprotoident.o\n#RUN find / -iname libtrace.h\n#RUN find / -iname libtrace.o\n#RUN find / -iname liblinear.o\n\nRUN go build -mod=readonly ${TAGS} -ldflags \"-r /usr/local/lib -s -w -X github.com/dreadl0ck/netcap.Version=v${VERSION}\" -o /netcap/bin/net github.com/dreadl0ck/netcap/cmd\n\nRUN ls -la /netcap\nRUN file /netcap/bin/net\n\nFROM alpine:latest\nARG IPV6_SUPPORT=true\n\nRUN apk add --no-cache ca-certificates iptables libpcap-dev libnetfilter_queue ${IPV6_SUPPORT:+ip6tables}\n\nWORKDIR /\n\nCOPY --from=builder /netcap/bin/* /usr/bin/\nCOPY --from=builder /usr/lib/* /usr/lib/\nCOPY --from=builder /usr/local/lib/* /usr/local/lib/\n\n"
}