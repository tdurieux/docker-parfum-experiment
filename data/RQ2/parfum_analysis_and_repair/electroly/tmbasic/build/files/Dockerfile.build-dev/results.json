{
  "startTime": 1674216029223,
  "endTime": 1674216030389,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nRUN apt-get update -y && \\\n    apt-get upgrade -y && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        apt-transport-https \\\n        curl \\\n        git \\\n        language-pack-en \\\n        make \\\n        nodejs \\\n        npm \\\n        pandoc \\\n        pkg-config \\\n        python3 \\\n        python3-pip \\\n        software-properties-common \\\n        unzip \\\n        valgrind \\\n        xxd \\\n        autoconf \\\n        automake \\\n        dos2unix \\\n        pngcrush \\\n        nano \\\n        texinfo && rm -rf /var/lib/apt/lists/*;\n\n# unprivileged user\nRUN mkdir -p /code && \\\n    (groupadd -g $HOST_GID user || true) && \\\n    (useradd -r -u $HOST_UID -g $HOST_GID user || true) && \\\n    chown $HOST_UID:$HOST_GID /code && \\\n    mkdir -p /home/user && \\\n    chown $HOST_UID:$HOST_GID /home/user\n\n# cpplint\nRUN pip3 install --no-cache-dir cpplint\n\n# doctoc\nRUN npm install -g doctoc && npm cache clean --force;\n\n# clang\nRUN curl -f -L https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    add-apt-repository \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-10 main\" && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y clang clang-format clang-tidy && rm -rf /var/lib/apt/lists/*;\n\n# tmbasic dependencies\nCOPY libclipboard-CMakeLists.txt.diff /tmp/\nCOPY deps.mk /tmp/deps.mk\nCOPY deps.tar /tmp/\nRUN mkdir -p /tmp/downloads && \\\n    tar xf /tmp/deps.tar -C /tmp/downloads && \\\n    mkdir -p /usr/local/$(uname -m)-linux-gnu/include && \\\n    mkdir -p /tmp/deps && \\\n    cd /tmp/deps && \\\n    export NATIVE_PREFIX=/usr && \\\n    export TARGET_PREFIX=/usr/local/$(uname -m)-linux-gnu \\\n    export ARCH=$ARCH \\\n    export LINUX_DISTRO=ubuntu \\\n    export LINUX_TRIPLE=$(uname -m)-linux-gnu \\\n    export TARGET_OS=linux \\\n    export DOWNLOAD_DIR=/tmp/downloads && \\\n    make -j$(nproc) -f /tmp/deps.mk && \\\n    rm -rf /tmp/deps /tmp/deps.mk && rm /tmp/deps.tar\n\n# for the benefit of vscode, symlink /usr/local/target to /usr/local/ARCH-linux-gnu\nRUN ln -s /usr/local/$(uname -m)-linux-gnu /usr/local/target\n\n# environment\nCOPY devPrompt.sh /home/user/\nRUN echo \"export ARCH=\\\"$ARCH\\\"\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export IMAGE_NAME=\\\"$IMAGE_NAME\\\"\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export PS1=\\\"[$IMAGE_NAME] \\w\\$ \\\"\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export MAKEFLAGS=\\\"-j$(nproc)\\\"\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export TARGET_OS=linux\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export LINUX_DISTRO=ubuntu\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export LINUX_TRIPLE=$(uname -m)-linux-gnu\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export PREFIX=/usr/local/$(uname -m)-linux-gnu\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export LD_LIBRARY_PATH=/usr/lib:/usr/local/lib:/usr/local/$(uname -m)-linux-gnu/lib\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"alias dev='/home/user/devPrompt.sh'\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export TERM=xterm-256color\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"export EDITOR=\\\"nano -w\\\"\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"mkdir -p /code/bin/ghpages && cd /code/bin/ghpages && >/dev/null python3 -m http.server 5000 &\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"echo HTTP server running on port 5000.\" >> /etc/profile.d/tmbasic.sh && \\\n    echo \"make -f /code/Makefile help\" >> /etc/profile.d/tmbasic.sh && \\\n    chmod +x /etc/profile.d/tmbasic.sh\n\nUSER $HOST_UID\nRUN git config --global user.name \"$GIT_NAME\" && \\\n    git config --global user.email \"$GIT_EMAIL\"\nENTRYPOINT [\"/bin/bash\", \"-l\"]\n"
}