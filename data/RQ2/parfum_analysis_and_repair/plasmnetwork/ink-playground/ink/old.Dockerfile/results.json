{
  "startTime": 1674220655886,
  "endTime": 1674220656632,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedDockerfile": "FROM buildpack-deps:buster\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    RUST_VERSION=1.41.0 \\\n    CARGO_CONTRACT_VERSION=\"v0.6.0\" \\\n    NIGHTLY_VERSION=\"nightly-2020-01-20\"\n\nSHELL [\"/bin/bash\",\"-c\"]\n\nRUN set -eux; \\\n    dpkgArch=\"$(dpkg --print-architecture)\"; \\\n    case \"${dpkgArch##*-}\" in \\\n        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='e68f193542c68ce83c449809d2cad262cc2bbb99640eb47c58fc1dc58cc30add' ;; \\\n        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='7c1c329a676e50c287d8183b88f30cd6afd0be140826a9fbbc0e3d717fab34d7' ;; \\\n        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='d861cc86594776414de001b96964be645c4bfa27024052704f0976dc3aed1b18' ;; \\\n        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='89f1f797dca2e5c1d75790c3c6b7be0ee473a7f4eca9663e623a41272a358da0' ;; \\\n        *) echo >&2 \"unsupported architecture: ${dpkgArch}\"; exit 1 ;; \\\n    esac; \\\n    url=\"https://static.rust-lang.org/rustup/archive/1.20.2/${rustArch}/rustup-init\"; \\\n    wget \"$url\"; \\\n    echo \"${rustupSha256}  *rustup-init\" | sha256sum -c -; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain $RUST_VERSION; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version;\n\nRUN set -eux; \\\n\n    apt-get update && apt-get install --no-install-recommends -y curl jq cmake; rm -rf /var/lib/apt/lists/*; \\\n    JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\"; \\\n    curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL; \\\n    chmod +x /usr/bin/jq; \\\n    jq --version; \\\n    rustup install $NIGHTLY_VERSION;\n\nRUN set -eux;\\\n    \\ \n    cargo install --force --git https://github.com/paritytech/cargo-contract --rev $CARGO_CONTRACT_VERSION cargo-contract; \\\n    git clone https://github.com/WebAssembly/binaryen.git; \\\n    pushd binaryen; \\\n    cmake . && make; \\\n    cp bin/wasm-opt /usr/local/bin; \\\n    popd; \\\n    rm -rf binaryen;\n\nRUN set -eux; \\\n    \\\n    rustup default $NIGHTLY_VERSION; \\\n    rustup target add wasm32-unknown-unknown --toolchain $NIGHTLY_VERSION; \\\n    rustup component add rust-src; \\\n    mkdir /projects; \\\n    cd /projects; \\\n    cargo contract new sample; \\\n    cd sample; \\\n    cargo contract build; \\\n    cargo contract generate-metadata; \\\n    rm target/sample* target/metadata.json;\n\nWORKDIR /projects/sample\n\nCMD rm ./lib.rs; \\\n    cp -f \"/share/${NONCE}.rs\" ./lib.rs; \\\n    mkdir \"/share/${NONCE}\"; \\\n    echo -e \"[build wasm]\\n cargo contract build\" > \"/share/${NONCE}/log.txt\"; \\\n    cargo contract build >> \"/share/${NONCE}/log.txt\" 2>&1; \\\n    echo -e \"\\n[build abi]\\n cargo contract generate-metadata\" >> \"/share/${NONCE}/log.txt\"; \\\n    cargo contract generate-metadata >> \"/share/${NONCE}/log.txt\" 2>&1; \\\n    cp target/sample*.wasm \"/share/${NONCE}\"; \\\n    cp target/metadata.json \"/share/${NONCE}\";\n"
}