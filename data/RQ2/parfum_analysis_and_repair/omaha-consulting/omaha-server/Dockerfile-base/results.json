{
  "startTime": 1674252087400,
  "endTime": 1674252089284,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 91
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 36,
        "columnEnd": 111
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 33,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 346
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu-debootstrap:14.04\n\nENV omaha /srv/omaha\n\nRUN \\\n  apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys ABF5BD827BD9BF62 && \\\n  echo 'deb http://nginx.org/packages/ubuntu/ trusty nginx' | tee --append /etc/apt/sources.list && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends python-pip python-dev python-lxml python-psycopg2 supervisor nginx liblua5.1-dev lua-zlib libtiff5-dev libjpeg8-dev zlib1g-dev libfreetype6-dev liblcms2-dev libwebp-dev python-pil build-essential libfuse-dev libcurl4-openssl-dev libxml2-dev mime-support automake libtool pkg-config libssl-dev wget tar && \\\n  apt-get clean && \\\n  apt-get autoremove -y && \\\n  rm -rf /var/lib/{apt,dpkg,cache,log}/ && \\\n  pip install --no-cache-dir uwsgi && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  wget https://github.com/s3fs-fuse/s3fs-fuse/archive/v1.78.tar.gz -O /usr/src/v1.78.tar.gz && \\\n  tar xvz -C /usr/src -f /usr/src/v1.78.tar.gz && \\\n  cd /usr/src/s3fs-fuse-1.78 && \\\n  ./autogen.sh && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n  make && \\\n  make install && \\\n  mkdir /srv/omaha_s3 && \\\n  rm /usr/src/v1.78.tar.gz\n\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y --fix-missing curl && \\\n  curl -f -L -O https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-6.0.0-amd64.deb && \\\n  dpkg -i filebeat-6.0.0-amd64.deb && \\\n  mkdir /tmp/filebeat/ && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p $omaha/requirements\nWORKDIR ${omaha}\n\nADD ./requirements/base.txt $omaha/requirements/base.txt\n\nRUN \\\n  pip install --no-cache-dir paver && \\\n  pip install --no-cache-dir --upgrade six && \\\n  pip install --no-cache-dir -r requirements/base.txt\n\n# build lua module for nginx\nRUN \\\n  cd /tmp && \\\n  NGINX_VERSION=`nginx -v 2>&1 | grep -o '[[:digit:]].*$'` && \\\n  wget https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz && \\\n  tar -xzvf nginx-$NGINX_VERSION.tar.gz && \\\n  wget https://api.github.com/repos/openresty/lua-nginx-module/tarball/v0.10.13  -O lua-nginx-module.tar && \\\n  mkdir -p /tmp/lua-nginx-module && tar -xvf lua-nginx-module.tar -C /tmp/lua-nginx-module --strip-components=1 && \\\n  wget -qO- https://api.github.com/repos/simpl/ngx_devel_kit/tags | grep -m 1 tarball_url | cut -d '\"' -f 4 | xargs wget -O ngx_devel_kit.tar && \\\n  mkdir -p /tmp/ngx_devel_kit && tar -xvf ngx_devel_kit.tar -C /tmp/ngx_devel_kit --strip-components=1 && \\\n  cd nginx-$NGINX_VERSION && \\\n  nginx -V 2>&1 | grep 'configure arguments: ' | cut -d \":\" -f2 | xargs ./configure --add-dynamic-module=/tmp/ngx_devel_kit --add-dynamic-module=/tmp/lua-nginx-module && \\\n  make build && \\\n  cp objs/ndk_http_module.so /usr/lib/nginx/modules/ndk_http_module.so && \\\n  cp objs/ngx_http_lua_module.so /usr/lib/nginx/modules/ngx_http_lua_module.so && \\\n  cd /tmp && \\\n  rm -R /tmp/* && rm nginx-$NGINX_VERSION.tar.gz\n"
}