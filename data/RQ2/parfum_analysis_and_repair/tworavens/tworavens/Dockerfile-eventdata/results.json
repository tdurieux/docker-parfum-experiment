{
  "startTime": 1674254313909,
  "endTime": 1674254314909,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Note: This only runs the Django app, not the rook services\nFROM python:3.6.8\nMAINTAINER TwoRavens http://2ra.vn/\n\nLABEL organization=\"Two Ravens\" \\\n      2ra.vn.version=\"0.0.6-eventdata\" \\\n      2ra.vn.release-date=\"2021-01-20\" \\\n      description=\"Event Data exploration.\"\n\n# -------------------------------------\n# Install sqlite + debugging tools\n# -------------------------------------\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    apt-utils \\\n    iputils-ping \\\n    telnet \\\n    sqlite3 \\\n    vim && rm -rf /var/lib/apt/lists/*;\n\n# -------------------------------------\n# Set the workdir\n# -------------------------------------\nWORKDIR /var/webapps/TwoRavens\n\n# -------------------------------------\n# Copy over the requirements and run them\n# -------------------------------------\nCOPY ./requirements/ ./requirements\nRUN pip3 install --no-cache-dir -r requirements/prod-eventdata.txt\n\n# -------------------------------------\n# Copy over the rest of the repository\n# -------------------------------------\nCOPY . .\n\n# -------------------------------------\n# Set some environment variables\n#   (This can be overridden in docker compose/kubernetes)\n#\n# - DJANGO_SETTINGS_MODULE: Django settings\n# - R_DEV_SERVER_BASE - rook-service docker container\n# - TA2_STATIC_TEST_MODE: True: use canned responses instead of a TA2 server\n# - TA2_TEST_SERVER_URL - TA2 test server\n# - CODE_REPOSITORY - repository where code will be copied\n# -------------------------------------\nENV DJANGO_SETTINGS_MODULE=tworavensproject.settings.dev_container2 \\\n    R_DEV_SERVER_BASE=http://rook-service:8000/ \\\n    TA2_STATIC_TEST_MODE=True \\\n    CODE_REPOSITORY=/var/webapps/TwoRavens \\\n    SESSION_COOKIE_NAME=tworavens_eventdata \\\n    CSRF_COOKIE_NAME=tworavens_eventdata_csrf \\\n    LC_ALL=C.UTF-8\n\n# -------------------------------------\n# Create a volume for sharing between containers\n# -------------------------------------\nVOLUME /ravens_volume\n\n# -------------------------------------\n# Run setup scripts\n#   - init_db - creates sqlite db for test run with\n#\n#   - create_django_superuser - Admin user created for testing\n#\n#   - create_test_user - Non-admin user created for testing\n#\n#   - load_eventdata_prod - sets JS variables for UI Event Data\n#\n#   - collect_static - django collect static files\n#\n# -------------------------------------\n#RUN fab init_db && \\\n#    fab create_django_superuser && \\\n#    fab create_test_user  && \\\n#    fab load_eventdata_prod && \\\n#    fab collect_static\n\n# -------------------------------------\n# Expose port for web communication\n# - web: 8080\n# -------------------------------------\nEXPOSE 8080\n\n# -------------------------------------\n# Copy the event data start command\n# -------------------------------------\nCOPY startup_script/event_data_start.sh /usr/bin/event_data_start.sh\n\nRUN chmod u+x /usr/bin/event_data_start.sh\n\n# -------------------------------------\n# Idle the container on startup so it\n# can receive subsequent commands\n# -------------------------------------\nENTRYPOINT tail -f /dev/null\n\n#CMD echo 'Starting TwoRavens python server.' && \\\n#    cp -r ravens_volume/. /ravens_volume/ && \\\n#    python manage.py runserver 0.0.0.0:8080\n"
}