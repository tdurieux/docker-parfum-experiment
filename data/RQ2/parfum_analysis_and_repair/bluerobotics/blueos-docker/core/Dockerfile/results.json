{
  "startTime": 1674255611600,
  "endTime": 1674255612288,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 61,
        "columnEnd": 122
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build frontend\nFROM node:16-buster-slim AS frontendBuilder\n\nARG VUE_APP_GIT_DESCRIBE\nRUN [ -z \"$VUE_APP_GIT_DESCRIBE\" ] \\\n    && echo \"VUE_APP_GIT_DESCRIBE argument not provided.\" \\\n    && echo \"Use: --build-arg VUE_APP_GIT_DESCRIBE=\\$(git describe --long --always --dirty --all)\" \\\n    && exit 1 || exit 0\n\nCOPY frontend /home/pi/frontend\nRUN --mount=type=cache,target=/home/pi/frontend/node_modules yarn --cwd /home/pi/frontend install --network-timeout=300000 && yarn cache clean;\nRUN --mount=type=cache,target=/home/pi/frontend/node_modules yarn --cwd /home/pi/frontend build --skip-plugins @vue/cli-plugin-eslint\n\n# Download binaries\nFROM bluerobotics/companion-base:v0.0.6 as downloadBinaries\nCOPY tools /home/pi/tools\nRUN /home/pi/tools/install-static-binaries.sh\n\n# Companion-docker base image\nFROM bluerobotics/companion-base:v0.0.6\n\n# Install necessary tools\nCOPY tools /home/pi/tools\nRUN /home/pi/tools/install-system-tools.sh\n\n# Install custom libraries\nCOPY libs /home/pi/libs\nRUN /home/pi/libs/install-libs.sh\n\n# Set tmux configuration file\nCOPY configuration/tmux.conf /etc/tmux.conf\nCOPY configuration/motd /etc/motd\n\n# Install services\nCOPY services /home/pi/services\nRUN /home/pi/services/install-services.sh\nCOPY start-blueos-core /usr/bin/start-blueos-core\n\n# Copy binaries and necessary folders from downloadBinaries to this stage\nCOPY --from=downloadBinaries \\\n    /usr/bin/blueos_startup_update \\\n    /usr/bin/bridges \\\n    /usr/bin/mavlink2rest \\\n    /usr/bin/mavlink-routerd \\\n    /usr/bin/ttyd \\\n    /usr/bin/\n\n# Copy frontend built on frontendBuild to this stage\nCOPY --from=frontendBuilder /home/pi/frontend/dist /home/pi/frontend\n\n# Asserts\n## When running, the .config folder in the docker is not accessible,\n## since it gets shadowed by the host's `.config` folder.\n## If the folder exists during the build step, it means we put it here by mistake.\nRUN [ ! -d \"/root/.config\" ]\n\nARG GIT_DESCRIBE_TAGS\nRUN [ -z \"$GIT_DESCRIBE_TAGS\" ] \\\n    && echo \"GIT_DESCRIBE_TAGS argument not provided.\" \\\n    && echo \"Use: --build-arg GIT_DESCRIBE_TAGS=\\$(git describe --tags --long)\" \\\n    && exit 1 || exit 0\n\n# Update blueosrc with the necessary environment variables\nRUN RCFILE_PATH=\"/etc/blueosrc\" \\\n    && echo \"export GIT_DESCRIBE_TAGS=$GIT_DESCRIBE_TAGS\" >> $RCFILE_PATH\n\n# Start\nCMD /bin/bash -i /usr/bin/start-blueos-core && sleep infinity\n"
}