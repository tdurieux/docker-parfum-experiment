{
  "startTime": 1674250050911,
  "endTime": 1674250051561,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -q && apt-get install --no-install-recommends -yq alien wget unzip clinfo libminizip-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Download the Intel OpenCL 2.0 development headers\n#RUN export DEVEL_URL=\"https://software.intel.com/file/531197/download\" \\\n#    && wget ${DEVEL_URL} -q -O download.zip --no-check-certificate \\\n#    && unzip download.zip \\\n#    && rm -f download.zip *.tar.xz* \\\n#    && alien --to-deb *dev*.rpm \\\n#    && dpkg -i *dev*.deb \\\n#    && rm *.rpm *.deb\n\n# Download the Intel OpenCL CPU runtime and convert to .deb packages\nRUN export RUNTIME_URL=\"http://registrationcenter-download.intel.com/akdlm/irc_nas/9019/opencl_runtime_16.1.1_x64_ubuntu_6.4.0.25.tgz\" \\\n    && export TAR=$(basename ${RUNTIME_URL}) \\\n    && export DIR=$(basename ${RUNTIME_URL} .tgz) \\\n    && wget -q ${RUNTIME_URL} \\\n    && tar -xf ${TAR} \\\n    && for i in ${DIR}/rpm/*.rpm; do alien --to-deb $i; done \\\n    && rm -rf ${DIR} ${TAR} \\\n    && dpkg -i *.deb \\\n    && rm *.deb\n\nRUN mkdir -p /etc/OpenCL/vendors/ \\\n    && echo \"/opt/intel/opencl-1.2-6.4.0.25/lib64/libintelocl.so\" > /etc/OpenCL/vendors/intel.icd\n\n# Let the system know where to find the OpenCL library at runtime\nENV OCL_INC /opt/intel/opencl/include\nENV OCL_LIB /opt/intel/opencl-1.2-6.4.0.25/lib64\nENV LD_LIBRARY_PATH $OCL_LIB:$LD_LIBRARY_PATH\nENV DOCKYARD=/opt/crackq/build\nENV PYTHONPATH=$DOCKYARD:/opt/crackq/build/crackq\n\n# Update & install packages for installing hashcat\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y wget p7zip gcc g++ make build-essential git libcurl4-openssl-dev libssl-dev zlib1g-dev python3.7 \\\n    python3.7-dev python3-pip libldap2-dev libsasl2-dev libssl-dev xmlsec1 libxmlsec1-openssl && rm -rf /var/lib/apt/lists/*;\n\n# Copy the code to the build dir\nCOPY . $DOCKYARD\n# Run install script to setup hashcat/pyhashcat\nWORKDIR $DOCKYARD\nRUN $DOCKYARD/setup.sh\n\nEXPOSE 6379\nEXPOSE 8081\nEXPOSE 8080\n\nENV LANG \"C.UTF-8\"\nENV LC_ALL \"C.UTF-8\"\n\nRUN chown -R 1111:1111 $DOCKYARD/\nUSER crackq\nWORKDIR $DOCKYARD/\nCMD [\"/usr/local/bin/circusd\", \"/opt/crackq/build/circus.ini\"]\n"
}