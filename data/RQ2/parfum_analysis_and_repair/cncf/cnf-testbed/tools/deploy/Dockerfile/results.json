{
  "startTime": 1674219233949,
  "endTime": 1674219235050,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM golang:buster as golang\nMAINTAINER \"Denver Williams <denver@debian.nz>\"\n\nRUN apt-get --no-install-recommends install -y git make && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/radekg/terraform-provisioner-ansible.git && \\\n    cd terraform-provisioner-ansible && \\\n    CGO_ENABLED=0 GOOS=linux installsuffix=cgo go build -o /root/.terraform.d/plugins/terraform-provisioner-ansible\n\nFROM ubuntu:packet_api\n\nENV TERRAFORM_VERSION=0.12.2\nENV TERRAFORM_ANSIBLE=v2.0.1\n\n#Install Terraform\nRUN apt update && \\\n    apt-get --no-install-recommends install -y software-properties-common && \\ \n    apt-add-repository ppa:ansible/ansible -y && \\\n    apt update && \\\n    apt-get --no-install-recommends install -y git curl ansible unzip python-netaddr && \\\n    curl -f https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip > terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /bin && \\\n    rm -f terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n    ansible-galaxy install nickjj.docker && \\\n    ansible-galaxy install avinetworks.docker && \\\n    ansible-galaxy install mrlesmithjr.config-interfaces && rm -rf /var/lib/apt/lists/*;\n\n# Install infra-provisioning\nRUN git clone --depth 1 https://github.com/crosscloudci/infra-provisioning.git -b node_groups /infra-provisioning \\\n    && cp -a /infra-provisioning/terraform /terraform \\\n    && cp /infra-provisioning/create_nodes.sh /terraform \\\n    && cd /terraform \\\n    && rm /terraform/s3-backend.tf \\\n    && rm /terraform/reserved_override \\\n    && terraform init\n\n# Install yw\nRUN wget https://github.com/mikefarah/yq/releases/download/2.4.1/yq_linux_amd64 -O /usr/local/bin/yq\n\n\n# Copy Terraform Ansible Plugin\nRUN mkdir -p ~/.terraform.d/plugins/\nCOPY --from=golang /root/.terraform.d/plugins/terraform-provisioner-ansible /root/.terraform.d/plugins/terraform-provisioner-ansible\n\nRUN mkdir -p /etc/ansible\nCOPY ansible.cfg /etc/ansible/ansible.cfg\n\nWORKDIR /terraform\nENTRYPOINT [\"/bin/terraform\"]\n"
}