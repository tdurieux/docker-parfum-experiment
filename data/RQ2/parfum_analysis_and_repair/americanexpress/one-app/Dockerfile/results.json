{
  "startTime": 1674253050681,
  "endTime": 1674253051299,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the pre-baked fat node image only in the builder\n# which includes build utils preinstalled (e.g. gcc, make, etc).\n# This will result in faster and reliable One App docker image\n# builds as we do not have to run apk installs for alpine.\nFROM node:16.16.0 as builder\nWORKDIR /opt/build\nRUN npm install -g npm@8.8.0 --registry=https://registry.npmjs.org && npm cache clean --force;\nCOPY --chown=node:node ./ /opt/build\n# npm ci does not run postinstall with root account\nRUN NODE_ENV=development npm ci --build-from-source\n# npm ci does not run postinstall with root account\n# which is why there is a dev build\nRUN NODE_ENV=development npm run build && \\\n    mkdir -p /opt/one-app/development && \\\n    chown node:node /opt/one-app/development && \\\n    cp -r /opt/build/. /opt/one-app/development\n# prod build\nRUN NODE_ENV=production npm run build && \\\n    NODE_ENV=production npm prune && \\\n    mkdir -p /opt/one-app/production && \\\n    chown node:node /opt/one-app/production && \\\n    mv /opt/build/LICENSE.txt /opt/one-app/production && \\\n    mv /opt/build/node_modules /opt/one-app/production && \\\n    mv /opt/build/package.json /opt/one-app/production && \\\n    mv /opt/build/lib /opt/one-app/production && \\\n    mv /opt/build/build /opt/one-app/production && \\\n    mv /opt/build/bundle.integrity.manifest.json /opt/one-app/production && \\\n    mv /opt/build/.build-meta.json /opt/one-app/production\n\n# development image\n# docker build . --target=development\nFROM node:16.16.0-alpine as development\nARG USER\nENV USER ${USER:-node}\nENV NODE_ENV=development\n# exposing these ports as they are default for all the local dev servers\n# see src/server/config/env/runtime.js\nEXPOSE 3000\nEXPOSE 3001\nEXPOSE 3002\nEXPOSE 3005\nWORKDIR /opt/one-app\nRUN chown node:node /opt/one-app\nUSER $USER\nCMD [\"node\", \"lib/server\"]\nCOPY --from=builder --chown=node:node /opt/one-app/development ./\n\n# production image\n# last so that it's the default image artifact\nFROM node:16.16.0-alpine as production\nARG USER\nENV USER ${USER:-node}\nENV NODE_ENV=production\n# exposing these ports as they are defaults for one app and the prom metrics server\n# see src/server/config/env/runtime.js\nEXPOSE 3000\nEXPOSE 3005\nWORKDIR /opt/one-app\nUSER $USER\nCMD [\"node\", \"lib/server\"]\nCOPY --from=builder --chown=node:node /opt/one-app/production ./\n"
}