{
  "startTime": 1674251863653,
  "endTime": 1674251864469,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 6,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Reference: https://github.com/s3fs-fuse/s3fs-fuse/wiki/Installation-Notes\n\n# SET COMMIT ID BELOW!!!\n\nFROM ubuntu:20.04 AS build\n\nLABEL maintainer=\"Ben Mares <services-docker-build-s3fs@tensorial.com>\" \\\n      name=\"docker-build-s3fs\" \\\n      url=\"https://github.com/maresb/docker-build-s3fs\" \\\n      vcs-url=\"https://github.com/maresb/docker-build-s3fs\"\n\nENV DEBIAN_FRONTEND noninteractive\n\nARG SCRIPT_SOURCE_DIR=dockerfile_scripts\nARG SCRIPT_DEST_DIR=/usr/local/bin\n\n# Install general build tools\n\n  COPY ${SCRIPT_SOURCE_DIR}/010-install-build-tools.sh ${SCRIPT_DEST_DIR}\n  RUN 010-install-build-tools.sh\n\n\n# Enable source repositories, download package-specific build dependencies.\n\n  COPY ${SCRIPT_SOURCE_DIR}/020-install-build-dependencies.sh ${SCRIPT_DEST_DIR}\n  RUN 020-install-build-dependencies.sh\n\n\n# Download additional dependencies recommended in Wiki installation notes.\n# (This is for OpenSSL support.)\n\n  COPY ${SCRIPT_SOURCE_DIR}/030-install-recommended-dependencies.sh ${SCRIPT_DEST_DIR}\n  RUN 030-install-recommended-dependencies.sh\n\n\n# Make user named 'deb'\n\n  RUN useradd -m deb\n  USER deb\n  WORKDIR /home/deb\n\n# Create source tree.\n\n  COPY ${SCRIPT_SOURCE_DIR}/040-create-source-tree.sh ${SCRIPT_DEST_DIR}\n  RUN 040-create-source-tree.sh\n\n\n# Add a mechanism to have Docker abandon the cache at this point, by\n# calling docker with the extra arguments\n#   --build-arg REBUILD_FROM_HERE=$(date +%s)\n\n  ARG REBUILD_FROM_HERE=NO\n\n\n# SET COMMIT ID HERE!!!\n# (Also, update S3FS_VERSION accordingly)\n###################################\n###################################\n\n# The id (either hash or alias) of the default commit to build:\n\n  ARG COMMIT_ID=v1.91\n\n#   Another example:\n#     ARG COMMIT_ID=e0712f4\n\n# The latest release of s3fs from the time of the above commit\n\n  ARG S3FS_VERSION=1.91\n\n###################################\n###################################\n\n\n# To be increased when there is a change to this Dockerfile which affects the contents\n# of the resulting .deb file.  KEEP THIS SYNCHRONIZED WITH ALL BUILD SCRIPTS!!!\n\n  ARG DEBIAN_PACKAGE_REVISION=3\n\n\n# Build up the version string for the package\n\n  ARG PACKAGE_VERSION_STRING=${S3FS_VERSION}+git-${COMMIT_ID}-${DEBIAN_PACKAGE_REVISION}\n\n# These are variables which should be duplicated in build scripts and passed as arguments.\n# Do the corresponding consistency checks in the next script.\n\n  ARG SCRIPT_DEBIAN_PACKAGE_REVISION=${DEBIAN_PACKAGE_REVISION}\n  ARG SCRIPT_PACKAGE_VERSION_STRING=${PACKAGE_VERSION_STRING}\n\n\n# Verify consistency of any given build script parameters.\n# Download the latest GitHub release, overwriting the original source archive.\n# Then re-extract the original source tree, and update the version.\n\n  COPY ${SCRIPT_SOURCE_DIR}/050-update-source-from-git.sh ${SCRIPT_DEST_DIR}\n  RUN 050-update-source-from-git.sh\n\n\n# Build\n\n# For reproducibility, allow a timestamp of the format \"YYYY-MM-DD HH:MM:SS\" in UTC\n# i.e. the output of:\n#   date -u +\"%Y-%m-%d %H:%M:%S\"\n\n  ARG BUILD_TIMESTAMP=\"2021-08-15 20:00:00\"\n\n  COPY ${SCRIPT_SOURCE_DIR}/060-build-package.sh ${SCRIPT_DEST_DIR}\n  RUN 060-build-package.sh\n\n\n# Report info\n\n  COPY ${SCRIPT_SOURCE_DIR}/070-print-checksums.sh ${SCRIPT_DEST_DIR}\n  RUN 070-print-checksums.sh\n\n\n# Tar the .deb and copy it into an empty image\n\n  RUN tar -cvf s3fs-debian-package.tar *.deb && rm s3fs-debian-package.tar\n  FROM scratch AS deb-only\n  COPY --from=build /home/deb/s3fs-debian-package.tar ./\n  # Prevents the error \"Error response from daemon: No command specified\":\n  CMD nothing\n"
}