diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bitbouncer/kspp/docker/Dockerfile.build3rdparty b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bitbouncer/kspp/docker/Dockerfile.build3rdparty/repaired.Dockerfile
index d76b164..4c4029e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bitbouncer/kspp/docker/Dockerfile.build3rdparty
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bitbouncer/kspp/docker/Dockerfile.build3rdparty/repaired.Dockerfile
@@ -10,32 +10,32 @@ RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 
 ENV LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH
 
-RUN apt-get update && apt-get install -y software-properties-common sudo build-essential cmake wget pax-utils automake autogen shtool libtool unzip pkg-config sed bison flex git curl apt-utils
+RUN apt-get update && apt-get install --no-install-recommends -y software-properties-common sudo build-essential cmake wget pax-utils automake autogen shtool libtool unzip pkg-config sed bison flex git curl apt-utils && rm -rf /var/lib/apt/lists/*;
 
 #add repos and key servers for gcc and clang
-RUN curl -sSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
+RUN curl -f -sSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -
 RUN apt-add-repository "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main"
 RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test
 
-RUN apt-get update && apt-get install -y clang-13
+RUN apt-get update && apt-get install --no-install-recommends -y clang-13 && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y libboost-all-dev libsnappy-dev libfmt-dev libpcre2-dev libhttp-parser-dev libpq-dev freetds-dev libgtest-dev libgflags-dev
+RUN apt-get install --no-install-recommends -y libboost-all-dev libsnappy-dev libfmt-dev libpcre2-dev libhttp-parser-dev libpq-dev freetds-dev libgtest-dev libgflags-dev && rm -rf /var/lib/apt/lists/*;
 
 #avro deps
-RUN apt-get update && apt-get install -y libsnappy-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libsnappy-dev && rm -rf /var/lib/apt/lists/*;
 
 #aws deps
-RUN apt-get update &&  apt-get install -y  libssl-dev libcurl4-openssl-dev google-mock libgtest-dev libc-ares-dev 
+RUN apt-get update && apt-get install --no-install-recommends -y libssl-dev libcurl4-openssl-dev google-mock libgtest-dev libc-ares-dev && rm -rf /var/lib/apt/lists/*;
 
 #deps for arrow
-RUN  apt-get update && apt-get install -y liblz4-dev libutf8proc-dev libre2-dev libz-dev liblzma-dev libzstd-dev libbz2-dev libgtest-dev libgflags-dev
-RUN  apt-get update && apt-get install -y llvm-13 clang-13
+RUN apt-get update && apt-get install --no-install-recommends -y liblz4-dev libutf8proc-dev libre2-dev libz-dev liblzma-dev libzstd-dev libbz2-dev libgtest-dev libgflags-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get update && apt-get install --no-install-recommends -y llvm-13 clang-13 && rm -rf /var/lib/apt/lists/*;
 
 #deps for tensorflow
-RUN  apt-get update && apt-get install -y libeigen3-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libeigen3-dev && rm -rf /var/lib/apt/lists/*;
 
 #deps for kspp
-RUN apt-get update && apt-get install -y libpq-dev freetds-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libpq-dev freetds-dev && rm -rf /var/lib/apt/lists/*;
 
 ENV CPP_STANDARD="17"
 ENV AVRO_VER="release-1.11.0"
@@ -85,7 +85,7 @@ make -j "$(getconf _NPROCESSORS_ONLN)" && \
 sudo make install && \
 cd ../../../.. && \
 rm avro.tar.gz && \
-rm -rf arvo 
+rm -rf arvo
 
 RUN git clone --recursiv --depth 1 --branch $GRPC_VER https://github.com/grpc/grpc.git && \
 cd grpc && \
@@ -183,7 +183,7 @@ mkdir build && cd build && \
 cmake .. && \
 make -j "$(getconf _NPROCESSORS_ONLN)" && \
 sudo make install && \
-cd ../..
+cd ../.. && rm nlomann.tar.gz
 
 RUN wget -O rapidjson.tar.gz "https://github.com/miloyip/rapidjson/archive/$RAPIDJSON_VER.tar.gz" && \
 mkdir -p rapidjson && \
@@ -266,7 +266,7 @@ cd rocksdb && \
 export USE_RTTI=1 && \
 make -j "$(getconf _NPROCESSORS_ONLN)" shared_lib && \
 sudo make install-shared && \
-cd ..
+cd .. && rm rocksdb.tar.gz
 
 RUN wget -O prometheus-cpp.tar.gz "https://github.com/jupp0r/prometheus-cpp/archive/$PROMETHEUS_CPP_VER.tar.gz" && \
 mkdir -p prometheus-cpp && \
@@ -344,11 +344,11 @@ tar \
   --directory librdkafka \
   --strip-components 1 && \
 cd librdkafka && \
-./configure --prefix=/usr/local && \
+ ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local && \
 #./configure --disable-ssl --prefix=/usr/local && \
 make -j "$(getconf _NPROCESSORS_ONLN)" && \
 sudo make install && \
-cd ..
+cd .. && rm librdkafka.tar.gz
 
 
 
@@ -364,7 +364,7 @@ mkdir build && cd build  && \
 cmake -DPAHO_WITH_SSL=ON -DPAHO_ENABLE_TESTING=OFF .. && \
 make -j "$(getconf _NPROCESSORS_ONLN)" && \
 sudo make install && \
-cd ../.. 
+cd ../.. && rm paho.mqtt.c.tar.gz
 
 RUN wget -O paho.mqtt.cpp.tar.gz "https://github.com/eclipse/paho.mqtt.cpp/archive/v$PAHO_MQTT_CPP_VER.tar.gz" && \
 mkdir -p paho.mqtt.cpp && \
@@ -378,6 +378,6 @@ mkdir build && cd build && \
 cmake -DPAHO_WITH_SSL=ON .. && \
 make -j "$(getconf _NPROCESSORS_ONLN)" && \
 sudo make install && \
-cd ../.. 
+cd ../.. && rm paho.mqtt.cpp.tar.gz