{
  "startTime": 1674216735333,
  "endTime": 1674216736205,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 26,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 26,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# builds docker image for running test suite for the contextual miniwdl source tree\n#    docker build -t miniwdl .\n# run the full test suite -- notice configuration needed for it to command the host dockerd\n#    docker run  \\\n#       -v /var/run/docker.sock:/var/run/docker.sock --group-add $(stat -c %g /var/run/docker.sock)\n#       -v $(pwd):/home/wdler/miniwdl -v /tmp:/tmp \\\n#       --rm -it miniwdl\n# or append 'bash' to that to enter interactive shell\n\n# start with ubuntu:18.04 plus some apt packages\nFROM ubuntu:18.04 as deps\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nRUN apt-get -qq update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -qq install -y \\\n    python3-pip python3-setuptools tzdata wget zip git-core default-jre jq shellcheck docker.io && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir -U pip# due to infamous pyca/cryptography#5771\n\n# add and become 'wdler' user -- it's useful to run the test suite as some arbitrary uid, because\n# the runner has numerous file permissions-related constraints\nRUN useradd -ms /bin/bash -u 1337 wdler\nUSER wdler\nWORKDIR /home/wdler\nRUN mkdir miniwdl\n# https://github.com/actions/checkout/issues/760\nRUN git config --global --add safe.directory /home/wdler/miniwdl\n\n# install pip requirements\nCOPY requirements.txt requirements.dev.txt /home/wdler/\nRUN bash -o pipefail -c \"pip3 install --user -r requirements.dev.txt\" && rm requirements.*\nENV PYTHONPATH $PYTHONPATH:/home/wdler/.local/lib/python3.6\nENV PATH $PATH:/home/wdler/.local/bin\n\n# expectation -- mount miniwdl source tree at /home/wdler/miniwdl\nCMD make -C miniwdl\n"
}