diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/chanzuckerberg/idseq-web/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/chanzuckerberg/idseq-web/Dockerfile/repaired.Dockerfile
index 2cf32b3..da97ae8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/chanzuckerberg/idseq-web/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/chanzuckerberg/idseq-web/Dockerfile/repaired.Dockerfile
@@ -4,29 +4,29 @@ FROM ruby:2.7-buster
 # well as RubyGems. As the Ruby image itself is based on a
 # Debian image, we use apt-get to install those.
 RUN apt-get update && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
       build-essential \
       python3-dev \
       python3-pip \
       lsb-release \
-      apt-transport-https
+      apt-transport-https && rm -rf /var/lib/apt/lists/*;
 
 # Install node + npm
-RUN curl -sL https://deb.nodesource.com/setup_16.x | bash -
-RUN apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Use a more recent version of npm
-RUN npm i -g npm@8.5.5
+RUN npm i -g npm@8.5.5 && npm cache clean --force;
 
 # Install pip
-RUN pip3 install --upgrade pip
+RUN pip3 install --no-cache-dir --upgrade pip
 
 # Install chamber, for pulling secrets into the container.
-RUN curl -L https://github.com/segmentio/chamber/releases/download/v2.10.8/chamber-v2.10.8-linux-amd64 -o /bin/chamber
+RUN curl -f -L https://github.com/segmentio/chamber/releases/download/v2.10.8/chamber-v2.10.8-linux-amd64 -o /bin/chamber
 RUN chmod +x /bin/chamber
 
 COPY requirements.txt ./
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 
 # Configure the main working directory. This is the base
 # directory used in any further RUN, COPY, and ENTRYPOINT
@@ -52,7 +52,7 @@ COPY package.json package-lock.json ./
 # Copy aws-sdk-js-v3 packages that are installed from file
 COPY vendor/aws-sdk-js-v3/* ./vendor/aws-sdk-js-v3/
 
-RUN npm install --no-optional
+RUN npm install --no-optional && npm cache clean --force;
 
 # This section is for the purpose of installing the non-MariaDB mysql-client /
 # mysqldump utility. The default-mysql-client package is actually
@@ -62,13 +62,13 @@ RUN npm install --no-optional
 ARG MYSQL_APT_DEB=mysql-apt-config_0.8.22-1_all.deb
 RUN wget https://dev.mysql.com/get/${MYSQL_APT_DEB}
 RUN echo "mysql-apt-config mysql-apt-config/select-server select mysql-5.7" | debconf-set-selections && \
-  DEBIAN_FRONTEND=noninteractive apt install ./${MYSQL_APT_DEB}
+  DEBIAN_FRONTEND=noninteractive apt -y --no-install-recommends install ./${MYSQL_APT_DEB} && rm -rf /var/lib/apt/lists/*;
 
 # mysql-client does not exist for M1 Macs / arm64, so force debian to install an amd64 version
 RUN DPKG_ARCH=$(dpkg --print-architecture ) && if [ $DPKG_ARCH = arm64 ]; then dpkg --add-architecture amd64; fi
 
 RUN apt-get update && \
-  apt-get install -y mysql-community-client mysql-client
+  apt-get install --no-install-recommends -y mysql-community-client mysql-client && rm -rf /var/lib/apt/lists/*;
 
 # Generate the app's static resources using npm/webpack
 # Increase memory available to node to 6GB (from default 1.5GB). At this time, our self-hosted Github runner has ~16GB.