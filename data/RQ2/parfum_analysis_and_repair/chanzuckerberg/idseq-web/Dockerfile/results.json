{
  "startTime": 1674215547721,
  "endTime": 1674215548353,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 2,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 2,
        "columnEnd": 90
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:2.7-buster\n\n# Install apt based dependencies required to run Rails as\n# well as RubyGems. As the Ruby image itself is based on a\n# Debian image, we use apt-get to install those.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      build-essential \\\n      python3-dev \\\n      python3-pip \\\n      lsb-release \\\n      apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n# Install node + npm\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Use a more recent version of npm\nRUN npm i -g npm@8.5.5 && npm cache clean --force;\n\n# Install pip\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Install chamber, for pulling secrets into the container.\nRUN curl -f -L https://github.com/segmentio/chamber/releases/download/v2.10.8/chamber-v2.10.8-linux-amd64 -o /bin/chamber\nRUN chmod +x /bin/chamber\n\nCOPY requirements.txt ./\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Configure the main working directory. This is the base\n# directory used in any further RUN, COPY, and ENTRYPOINT\n# commands.\nRUN mkdir -p /app\nWORKDIR /app\n\n# Copy the Gemfile as well as the Gemfile.lock and install\n# the RubyGems. This is a separate step so the dependencies\n# will be cached unless changes to one of those two files\n# are made.\nCOPY Gemfile Gemfile.lock ./\nRUN gem install bundler\n\n# allow nokogiri to install on arm64 / M1 Macs\nRUN bundle config set force_ruby_platform true\nRUN bundle install --jobs 20 --retry 5\n\n# Copy package.json and install packages, allowing the\n# dependencies to be cached\nCOPY package.json package-lock.json ./\n\n# Copy aws-sdk-js-v3 packages that are installed from file\nCOPY vendor/aws-sdk-js-v3/* ./vendor/aws-sdk-js-v3/\n\nRUN npm install --no-optional && npm cache clean --force;\n\n# This section is for the purpose of installing the non-MariaDB mysql-client /\n# mysqldump utility. The default-mysql-client package is actually\n# mariadb-client, and we found some incompatibility with virtual generated\n# columns when importing into non-MariaDB MySQL Community Server.\n# More info about mysql apt repository: https://dev.mysql.com/doc/mysql-apt-repo-quick-guide/en/\nARG MYSQL_APT_DEB=mysql-apt-config_0.8.22-1_all.deb\nRUN wget https://dev.mysql.com/get/${MYSQL_APT_DEB}\nRUN echo \"mysql-apt-config mysql-apt-config/select-server select mysql-5.7\" | debconf-set-selections && \\\n  DEBIAN_FRONTEND=noninteractive apt -y --no-install-recommends install ./${MYSQL_APT_DEB} && rm -rf /var/lib/apt/lists/*;\n\n# mysql-client does not exist for M1 Macs / arm64, so force debian to install an amd64 version\nRUN DPKG_ARCH=$(dpkg --print-architecture ) && if [ $DPKG_ARCH = arm64 ]; then dpkg --add-architecture amd64; fi\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y mysql-community-client mysql-client && rm -rf /var/lib/apt/lists/*;\n\n# Generate the app's static resources using npm/webpack\n# Increase memory available to node to 6GB (from default 1.5GB). At this time, our self-hosted Github runner has ~16GB.\nENV NODE_OPTIONS \"--max_old_space_size=6144\"\n\n# Only copy what is required so we don't need to rebuild when we are only updating the api\nCOPY app/assets app/assets\nCOPY webpack.config.common.js webpack.config.prod.js .babelrc ./\n\n# Generate assets\nRUN mkdir -p app/assets/dist && npm run build-img && ls -l app/assets/dist/\n\n# Copy the main application.\nCOPY . ./\n\nARG GIT_COMMIT\nENV GIT_VERSION ${GIT_COMMIT}\n\n# Expose port 3000 to the Docker host, so we can access it\n# from the outside.\nEXPOSE 3000\n\n# Configure an entry point, so we don't need to specify\n# \"bundle exec\" or \"chamber\" for each of our commands.\nENTRYPOINT [\"bin/entrypoint.sh\"]\n\n# The main command to run when the container starts. Also\n# tell the Rails dev server to bind to all interfaces by\n# default.\nCMD [\"rails\", \"server\", \"-b\", \"0.0.0.0\", \"-p\", \"3000\"]\n\n"
}