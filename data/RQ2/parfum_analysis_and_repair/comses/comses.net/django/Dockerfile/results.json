{
  "startTime": 1674245988923,
  "endTime": 1674245989663,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 11,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 31,
        "columnStart": 11,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM comses/base:focal\n\nARG REQUIREMENTS_FILE=requirements-dev.txt\nARG RUN_SCRIPT=./deploy/dev.sh\nARG UBUNTU_MIRROR=mirror.arizona.edu/ubuntu\n\nRUN sed -i \"s|archive.ubuntu.com|${UBUNTU_MIRROR}|\" /etc/apt/sources.list \\\n        && apt-get update \\\n        && apt-get install --no-install-recommends -y \\\n        autopostgresqlbackup \\\n        binutils \\\n        borgbackup \\\n        clamav \\\n        clamav-daemon \\\n        curl \\\n        gdal-bin \\\n        git \\\n        libffi-dev \\\n        libgeoip1 \\\n        libgit2-dev \\\n        libjpeg-turbo8-dev \\\n        libproj-dev \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        postgresql-client \\\n        python3-dev \\\n        python3-gdal \\\n        python3-pip \\\n        python3-setuptools \\\n        unrar-free \\\n        unzip \\\n        && update-alternatives --install /usr/bin/python python /usr/bin/python3 1000 \\\n        && apt-get upgrade -y -o Dpkg::Options::=\"--force-confold\" \\\n        && mkdir -p /etc/service/django \\\n        && pip3 install --no-cache-dir -U pip \\\n        && touch /etc/service/django/run /etc/postgresql-backup-pre \\\n        && chmod a+x /etc/service/django/run /etc/postgresql-backup-pre \\\n        && apt-get autoremove -y && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY ${REQUIREMENTS_FILE} requirements.txt /tmp/\nRUN pip3 install -r /tmp/${REQUIREMENTS_FILE} --no-cache-dir\nCOPY ./deploy/cron.daily/* /etc/cron.daily/\nCOPY ./deploy/cron.hourly/* /etc/cron.hourly/\nCOPY ./deploy/cron.weekly/* /etc/cron.weekly/\nCOPY ./deploy/db/autopostgresqlbackup.conf /etc/default/autopostgresqlbackup\nCOPY ./deploy/db/postgresql-backup-pre /etc/\nCOPY ${RUN_SCRIPT} /etc/service/django/run\nWORKDIR /code\nCOPY . /code\nCMD [\"/sbin/my_init\"]\n"
}