{
  "startTime": 1674253349249,
  "endTime": 1674253349818,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:9.11 as builder\n\nWORKDIR /home/node/angular-seed\n\n# try to make good use of docker cache: don't copy our source files until after install\n# because there is no need to bust the \"npm install\" cache layer if only the app source files have changed\nCOPY package.json package-lock.json gulpfile.ts tsconfig.json tslint.json ./\nCOPY tools ./tools/\nCOPY .docker/rm.optional.deps.js ./.docker/rm.optional.deps.js\n\n# before switching to non-root user, change ownership of home\nRUN chown -R node:node .\nUSER node\n\n# NB: this is a workaround due to the fact that npm '--no-optional' flag doesn't work (open script below for more)\nRUN node .docker/rm.optional.deps.js\n\nRUN npm install --no-optional && npm cache clean --force;\n\nCOPY src ./src/\nCOPY .docker/rm.optional.types.js ./.docker/rm.optional.types.js\n\n# temporarily switch back to root user to fix ownership of the newly added files\nUSER root\nRUN chown -R node:node src .docker/rm.optional.types.js\nUSER node\n\nRUN node .docker/rm.optional.types.js\nRUN npm run build.prod.rollup.aot\n\nFROM nginx:1.13\nCOPY --from=builder /home/node/angular-seed/dist/prod /var/www/dist/prod\nCOPY ./.docker/nginx.conf /etc/nginx/conf.d/angular-seed.template\n"
}