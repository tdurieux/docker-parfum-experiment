{
  "startTime": 1674246660353,
  "endTime": 1674246661098,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 14,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official image as a parent image\nFROM ubuntu:20.04\nCMD [\"/bin/bash\"]\n\n# add user with uid:gid 1000:1000 to match host system\nRUN groupadd -g 1000 jenkins\nRUN useradd -r -u 1000 -g 1000 -d /var/jenkins_home jenkins\n\n# Override interactive installations and install dependencies\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    bison \\\n    build-essential \\\n    clang \\\n    cmake \\\n    curl \\\n    dfu-util \\\n    flex \\\n    gawk \\\n    gcc-arm-none-eabi \\\n    git \\\n    jq \\\n    libboost-all-dev \\\n    libeigen3-dev \\\n    libreadline-dev \\\n    openocd \\\n    pkg-config \\\n    python3 \\\n    python3-pip \\\n    python3-venv \\\n    python-is-python3 \\\n    tcl \\\n    tcl-dev \\\n    zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/*\nRUN pip3 install --no-cache-dir poetry amaranth git+https://github.com/CapableRobot/CapableRobot_USBHub_Driver --upgrade\n\nARG CACHEBUST=1\nRUN curl -f -L $( curl -f -s \"https://api.github.com/repos/YosysHQ/oss-cad-suite-build/releases/latest\" \\\n    | jq --raw-output '.assets[].browser_download_url' | grep \"linux-x64\") --output oss-cad-suite-linux-x64.tgz \\\n    && tar zxvf oss-cad-suite-linux-x64.tgz && rm oss-cad-suite-linux-x64.tgz\n\n# add to PATH for pip/source package installations\nENV PATH=\"/root/.local/bin:/oss-cad-suite/bin:$PATH\"\n\n# Inform Docker that the container is listening on port 8080 at runtime\nEXPOSE 8080\n"
}