{
  "startTime": 1674250526452,
  "endTime": 1674250527112,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 54,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 68,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 54,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 68,
        "columnStart": 22,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Spreed WebRTC server in Docker (for development)\n#\n# This Dockerfile creates a container which runs Spreed WebRTC as found in the\n# current folder. It is intended for development.\n#\n# Install docker and then run `docker build -t spreed-webrtc .` to build the\n# image. Afterwards run the container like this:\n#\n#   ```\n#   docker run --rm --name my-spreed-webrtc -p 8080:8080 -p 8443:8443 \\\n#       -v `pwd`:/srv/extra -i -t spreed-webrtc\n#   ```\n#\n# Now you can either use a frontend proxy like Nginx to provide TLS to Spreed\n# WebRTC and even run it in production like that from the Docker container, or\n# for easy development testing, the container also provides a TLS listener with\n# a self-signed certificate on port 8443.\n#\n# To use custom configuration, use the `server.conf.in` file as template and\n# remove the listeners from [http] and [https] sections. Then provide that file\n# when running the docker container as with `-c` parameter like this:\n#\n#   ```\n#   docker run --rm --name my-spreed-webrtc -p 8080:8080 -p 8443:8443 \\\n#       -v `pwd`:/srv/extra -i -t spreed-webrtc \\\n#       -c /srv/extra/server.conf\n#   ```\n#\n# And last, this container checks environment variables NEWCERT and NEWSECRETS,\n# on startup. Set those to `1` to regenerate the corresponding values on start.\n# The current certificate and secrets are printed before startup so you can use\n# them easily for other services. Of course, if you want to have persistent cert\n# and secrets, the container needs to be persistent in the first place, so no\n# `--rm` parameter in the example from above in that case.\n#\n\nFROM ubuntu:xenial\nMAINTAINER Simon Eisenmann <simon@struktur.de>\n\n# Set locale.\nRUN apt-get clean && apt-get update\nRUN apt-get install -y --no-install-recommends locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen --no-purge en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Base build dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -qy \\\n\tgolang \\\n\tnodejs \\\n\tbuild-essential \\\n\tgit \\\n\tautomake \\\n\tautoconf && rm -rf /var/lib/apt/lists/*;\n\n# Add and build Spreed WebRTC server.\nADD . /srv/spreed-webrtc\nWORKDIR /srv/spreed-webrtc\nRUN ./autogen.sh && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake pristine && \\\n\tmake get && \\\n\tmake\n\n# Add runtime dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -qy \\\n\tbsdmainutils \\\n\topenssl && rm -rf /var/lib/apt/lists/*;\n\n# Add entrypoint.\nCOPY scripts/docker_entrypoint.sh /srv/entrypoint.sh\n\n# Create default config file.\nRUN cp -v /srv/spreed-webrtc/server.conf.in /srv/spreed-webrtc/default.conf && \\\n\tsed -i 's|listen = 127.0.0.1:8080|listen = 0.0.0.0:8080|' /srv/spreed-webrtc/default.conf && \\\n\tsed -i 's|;root = .*|root = /srv/spreed-webrtc|' /srv/spreed-webrtc/default.conf && \\\n\tsed -i 's|;listen = 127.0.0.1:8443|listen = 0.0.0.0:8443|' /srv/spreed-webrtc/default.conf && \\\n\tsed -i 's|;certificate = .*|certificate = /srv/cert.pem|' /srv/spreed-webrtc/default.conf && \\\n\tsed -i 's|;key = .*|key = /srv/privkey.pem|' /srv/spreed-webrtc/default.conf\nRUN touch /srv/spreed-webrtc/server.conf\n\n# Add mount point for extra things.\nRUN mkdir /srv/extra\nVOLUME /srv/extra\n\n# Tell about our service.\nEXPOSE 8080\nEXPOSE 8443\n\n# Define entry point with default command.\nENTRYPOINT [\"/bin/sh\", \"/srv/entrypoint.sh\", \"-dc\", \"/srv/spreed-webrtc/default.conf\"]\nCMD [\"-c\", \"/srv/spreed-webrtc/server.conf\"]\n"
}