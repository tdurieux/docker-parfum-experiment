diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/linghu8812/tensorrt_inference/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/linghu8812/tensorrt_inference/Dockerfile/repaired.Dockerfile
index 77dcc27..0058f62 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/linghu8812/tensorrt_inference/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/linghu8812/tensorrt_inference/Dockerfile/repaired.Dockerfile
@@ -4,12 +4,12 @@ WORKDIR /home/install/
 
 # apt-get 安装
 RUN apt-get update
-RUN apt-get install software-properties-common -y
+RUN apt-get install --no-install-recommends software-properties-common -y && rm -rf /var/lib/apt/lists/*;
 RUN add-apt-repository "deb http://security.ubuntu.com/ubuntu xenial-security main"
 RUN rm /etc/apt/sources.list.d/cuda.list /etc/apt/sources.list.d/nvidia-ml.list && \
-    apt-get update && apt-get -y upgrade && apt-get -y install ssh vim build-essential cmake git libgtk2.0-dev pkg-config \
+    apt-get update && apt-get -y upgrade && apt-get -y --no-install-recommends install ssh vim build-essential cmake git libgtk2.0-dev pkg-config \
     libavcodec-dev libavformat-dev libswscale-dev python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev \
-    libjasper-dev libdc1394-22-dev qtbase5-dev qtdeclarative5-dev python3-pip zip
+    libjasper-dev libdc1394-22-dev qtbase5-dev qtdeclarative5-dev python3-pip zip && rm -rf /var/lib/apt/lists/*;
 
 # opencv 安装
 RUN bash -xc "curl -O https://github.com/opencv/opencv/archive/4.3.0.zip && unzip opencv-4.3.0.zip && mv opencv-4.3.0 opencv && \
@@ -28,8 +28,8 @@ RUN bash -xc "curl -O https://github.com/opencv/opencv/archive/4.3.0.zip && unzi
     popd 2>&1 > /dev/null && popd 2>&1 > /dev/null && rm -rf opencv-4.3.0.zip && rm -rf opencv_contrib-4.3.0.zip"
 
 # pip3 安装
-RUN pip3 install -U pip && pip3 install torch torchvision mxnet-cu102 onnx-simplifier \
-    && pip3 install --ignore-installed -U PyYAML
+RUN pip3 install --no-cache-dir -U pip && pip3 install --no-cache-dir torch torchvision mxnet-cu102 onnx-simplifier \
+    && pip3 install --no-cache-dir --ignore-installed -U PyYAML
 
 # tensorrt 安装
 RUN bash -xc "curl -O https://developer.nvidia.com/compute/machine-learning/tensorrt/secure/7.1/local_repo/nv-tensorrt-repo-ubuntu1804-cuda10.2-trt7.1.3.4-ga-20200617_1-1_amd64.deb && \