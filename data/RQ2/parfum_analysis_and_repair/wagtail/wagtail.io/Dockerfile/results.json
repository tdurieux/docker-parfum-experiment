{
  "startTime": 1674255927996,
  "endTime": 1674255929242,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build Python app.\nFROM python:3.8-bullseye AS backend\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONPATH=/app \\\n    DJANGO_SETTINGS_MODULE=wagtailio.settings.production \\\n    PORT=8000 \\\n    WEB_CONCURRENCY=3 \\\n    GUNICORN_CMD_ARGS=\"--max-requests 1200 --access-logfile -\"\n\n# Install operating system dependencies.\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y apt-transport-https rsync libmagickwand-dev unzip postgresql-client-13 && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /app\nEXPOSE 8000\n\n# Create a non-root application user.\nARG UID=1000\nRUN useradd wagtailio -u $UID -m\nRUN chown -R wagtailio /app\n\n\nFROM backend AS prod\n\n# Switch to application user.\nUSER wagtailio\n\n# Create a virtual environment\nRUN python3 -m venv /home/wagtailio/venv\nENV PATH=\"/home/wagtailio/venv/bin:$PATH\"\nRUN pip install --no-cache-dir --upgrade pip wheel\n\n# Install Gunicorn.\nRUN pip install --no-cache-dir \"gunicorn>=20.1,<20.2\"\n\n# Install production Python requirements.\nCOPY --chown=wagtailio requirements.txt /\nRUN pip install --no-cache-dir -r /requirements.txt\n\n# Install application code.\nCOPY --chown=wagtailio . .\n\n# Install assets\nRUN SECRET_KEY=none django-admin collectstatic --noinput --clear\n\n# Compress\nRUN SECRET_KEY=none django-admin compress\n\n# Run application\nCMD gunicorn wagtailio.wsgi:application\n\n\nFROM backend AS dev\n\n# Install Heroku CLI\nRUN curl -f https://cli-assets.heroku.com/install-ubuntu.sh | sh\n\n# Install AWS CLI\nRUN curl -f \"https://s3.amazonaws.com/aws-cli/awscli-bundle.zip\" -o \"/tmp/awscli-bundle.zip\" && \\\n    unzip /tmp/awscli-bundle.zip -d /tmp && \\\n    /tmp/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws && \\\n    rm /tmp/awscli-bundle.zip && rm -r /tmp/awscli-bundle\n\n# Switch to application user.\nUSER wagtailio\n\n# Install development Python requirements.\nENV PATH=\"/home/wagtailio/.local/bin:$PATH\"\nCOPY --chown=wagtailio requirements.txt requirements-dev.txt /\nRUN pip install --no-cache-dir -r /requirements-dev.txt\n"
}