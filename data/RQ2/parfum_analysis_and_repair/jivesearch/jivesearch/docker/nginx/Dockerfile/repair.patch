diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jivesearch/jivesearch/docker/nginx/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jivesearch/jivesearch/docker/nginx/Dockerfile/repaired.Dockerfile
index 8e9ab23..0a9ecd1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jivesearch/jivesearch/docker/nginx/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jivesearch/jivesearch/docker/nginx/Dockerfile/repaired.Dockerfile
@@ -67,29 +67,29 @@ RUN \
     ### Download Tarballs ###
     # Download PageSpeed
     echo "Downloading PageSpeed..." && \
-    curl -L https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}-beta.tar.gz | tar -zx && \
+    curl -f -L https://github.com/pagespeed/ngx_pagespeed/archive/v${PAGESPEED_VERSION}-beta.tar.gz | tar -zx && \
     ls -lah && \
     # psol needs to be inside ngx_pagespeed module
     # Download PageSpeed Optimization Library and extract it to nginx source dir
     cd /tmp/incubator-pagespeed-ngx-${PAGESPEED_VERSION}-beta/ && \
     echo "Downloading PSOL..." && \
-    curl -L https://dl.google.com/dl/page-speed/psol/${PAGESPEED_VERSION}.tar.gz | tar -zx && \
+    curl -f -L https://dl.google.com/dl/page-speed/psol/${PAGESPEED_VERSION}.tar.gz | tar -zx && \
     cd /tmp/ && \
     # Download Nginx cache purge module
     echo "Downloading Nginx cache purge module..." && \
-    curl -L http://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz | tar -zx && \
+    curl -f -L https://labs.frickle.com/files/ngx_cache_purge-2.3.tar.gz | tar -zx && \
     # Download OpenSSL
     echo "Downloading OpenSSL..." && \
-    curl -L https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz | tar -zx && \
+    curl -f -L https://www.openssl.org/source/openssl-${RESTY_OPENSSL_VERSION}.tar.gz | tar -zx && \
     # Download Openresty bundle
     echo "Downloading openresty..." && \
-    curl -L https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz | tar -zx && \
+    curl -f -L https://openresty.org/download/openresty-${RESTY_VERSION}.tar.gz | tar -zx && \
     # Use all cores available in the builds with -j${NPROC} flag
-    readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1)  && \
+    readonly NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \
     echo "using up to $NPROC threads" && \
     ### Configure Nginx ###
     cd openresty-${RESTY_VERSION} && \
-    ./configure -j${NPROC} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" -j${NPROC} ${_RESTY_CONFIG_DEPS} ${RESTY_CONFIG_OPTIONS} && \
     # Build Nginx
     make -j${NPROC} && \
     make -j${NPROC} install && \
@@ -114,7 +114,7 @@ WORKDIR /config
 RUN apt-get update && \
     apt-get -y install wget --no-install-recommends && \
     wget --no-check-certificate https://raw.githubusercontent.com/jivesearch/jivesearch/master/frontend/nginx/nginx.conf && \
-    wget --no-check-certificate https://raw.githubusercontent.com/jivesearch/jivesearch/master/frontend/nginx/server.conf
+    wget --no-check-certificate https://raw.githubusercontent.com/jivesearch/jivesearch/master/frontend/nginx/server.conf && rm -rf /var/lib/apt/lists/*;
 
 EXPOSE 80 443
 CMD ["nginx", "-g", "daemon off;", "-c", "/config/nginx.conf"]
\ No newline at end of file