{
  "startTime": 1674247981215,
  "endTime": 1674247982154,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM postgres:9.6\nARG POSTGRES_VERSION=9.6\nCOPY pg_hba.conf /tmp\n\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y unzip postgresql-server-dev-$POSTGRES_VERSION postgresql-$POSTGRES_VERSION-repmgr && rm -rf /var/lib/apt/lists/*;\n\n# Inherited variables\n# ENV POSTGRES_PASSWORD monkey_pass\n# ENV POSTGRES_USER monkey_user\n# ENV POSTGRES_DB monkey_db\n\n# Name of the cluster you want to start\n# ENV CLUSTER_NAME pg_cluster\n\n# priority on electing new master\nENV NODE_PRIORITY 100\n\n# ENV CONFIGS \"listen_addresses:'*'\"\n                                    # in format variable1:value1[,variable2:value2[,...]]\n                                    # used for pgpool.conf file\n\nENV PARTNER_NODES \"\"\n                    # List (comma separated) of all nodes in the cluster, it allows master to be adaptive on restart\n                    # (can act as a new standby if new master has been already elected)\n\nENV MASTER_ROLE_LOCK_FILE_NAME $PGDATA/master.lock\n                                                   # File will be put in $MASTER_ROLE_LOCK_FILE_NAME when:\n                                                   #    - node starts as a primary node/master\n                                                   #    - node promoted to a primary node/master\n                                                   # File does not exist\n                                                   #    - if node starts as a standby\nENV STANDBY_ROLE_LOCK_FILE_NAME $PGDATA/standby.lock\n                                                  # File will be put in $STANDBY_ROLE_LOCK_FILE_NAME when:\n                                                  #    - event repmgrd_failover_follow happened\n                                                  # contains upstream NODE_ID\n                                                  # that basically used when standby changes upstream node set by default\nENV REPMGR_WAIT_POSTGRES_START_TIMEOUT 90\n                                            # For how long in seconds repmgr will wait for postgres start on current node\n                                            # Should be big enough to perform post replication start which might take from a minute to a few\nENV USE_REPLICATION_SLOTS 1\n                                # Use replication slots to make sure that WAL files will not be removed without beein synced to replicas\n                                # Recomended(not required though) to put 0 for replicas of the second and deeper levels\nENV CLEAN_OVER_REWIND 0\n                        # Clean $PGDATA directory before start standby and not try to rewind\nENV SSH_ENABLE 0\n                        # If you need SSH server running on the node\n\n#### Advanced options ####\nENV REPMGR_PID_FILE /tmp/repmgrd.pid\nENV WAIT_SYSTEM_IS_STARTING 5\nENV STOPPING_LOCK_FILE /tmp/stop.pid\nENV REPLICATION_LOCK_FILE /tmp/replication\nENV STOPPING_TIMEOUT 15\nENV CONNECT_TIMEOUT 2\nENV RECONNECT_ATTEMPTS 3\nENV RECONNECT_INTERVAL 5\nENV MASTER_RESPONSE_TIMEOUT 20\nENV LOG_LEVEL INFO\nENV CHECK_PGCONNECT_TIMEOUT 10\nENV REPMGR_SLOT_NAME_PREFIX repmgr_slot_\n\nRUN cp /tmp/pg_hba.conf /var/lib/postgresql/data/\n\nEXPOSE 5432\n\nVOLUME /var/lib/postgresql/data\nCOPY testdata /opt\nCOPY init-postgres /opt\nCOPY dvinstall.zip /opt\nWORKDIR /opt\nRUN unzip dvinstall.zip\nWORKDIR /opt/dvinstall\nUSER root\n\nRUN /etc/init.d/postgresql start\n"
}