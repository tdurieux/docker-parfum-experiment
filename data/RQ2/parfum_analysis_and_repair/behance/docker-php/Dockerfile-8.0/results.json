{
  "startTime": 1674248609730,
  "endTime": 1674248610570,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "FROM behance/docker-nginx:10.0.0 as output\nLABEL maintainers=\"Behance Team <dev-behance@adobe.com>\"\n\n# Set TERM to suppress warning messages.\nENV CONF_PHPFPM=/etc/php/8.0/fpm/php-fpm.conf \\\n    CONF_PHPMODS=/etc/php/8.0/mods-available \\\n    CONF_FPMPOOL=/etc/php/8.0/fpm/pool.d/www.conf \\\n    CONF_FPMOVERRIDES=/etc/php/8.0/fpm/conf.d/overrides.user.ini \\\n    APP_ROOT=/app \\\n    SERVER_WORKER_CONNECTIONS=3072 \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=128k \\\n    SERVER_CLIENT_HEADER_BUFFER_SIZE=1k \\\n    SERVER_CLIENT_BODY_BUFFER_SIZE=128k \\\n    SERVER_LARGE_CLIENT_HEADER_BUFFERS=\"4 256k\" \\\n    PHP_FPM_MAX_CHILDREN=4096 \\\n    PHP_FPM_START_SERVERS=20 \\\n    PHP_FPM_MAX_REQUESTS=1024 \\\n    PHP_FPM_MIN_SPARE_SERVERS=5 \\\n    PHP_FPM_MAX_SPARE_SERVERS=128 \\\n    PHP_FPM_MEMORY_LIMIT=256M \\\n    PHP_FPM_MAX_EXECUTION_TIME=60 \\\n    PHP_FPM_UPLOAD_MAX_FILESIZE=1M \\\n    PHP_OPCACHE_MEMORY_CONSUMPTION=128 \\\n    PHP_OPCACHE_INTERNED_STRINGS_BUFFER=16 \\\n    PHP_OPCACHE_MAX_WASTED_PERCENTAGE=5 \\\n    PHP_OPCACHE_ENABLE_CLI=1 \\\n    PHP_ENGINE_VERSION=20200930 \\\n    CFG_APP_DEBUG=1\n\nCOPY ./scripts/ /scripts/\n\n# - Update security packages\n# - Add PHP and support packages\n# - Install NewRelic\n# - Compile extensions\n# - Enable/disable default extensions\n# - Cleanup\nRUN /bin/bash -e /security_updates.sh && \\\n    apt-get install -yqq --no-install-recommends \\\n        gpg-agent \\\n        git \\\n        curl \\\n        wget \\\n        software-properties-common \\\n        locales \\\n    && \\\n    locale-gen en_US.UTF-8 && export LANG=en_US.UTF-8 && \\\n    add-apt-repository ppa:ondrej/php -y && \\\n    apt-get update -q && \\\n    # Ensure old versions of PHP don't accidentally get added by PPA maintainers\n    apt-mark hold \\\n        manpages \\\n        manpages-dev \\\n        apache2 \\\n        apache2-bin \\\n        libapache2-mod-php8.0 \\\n    && \\\n    apt-get -yqq --no-install-recommends install \\\n        php8.0 \\\n        php8.0-apcu \\\n        php8.0-bcmath \\\n        php8.0-bz2 \\\n        php8.0-curl \\\n        php8.0-fpm \\\n        php8.0-gd \\\n        php8.0-intl \\\n        php8.0-mbstring \\\n        php8.0-memcache \\\n        php8.0-memcached \\\n        php8.0-mysql \\\n        php8.0-pgsql \\\n        php8.0-redis \\\n        php8.0-xdebug \\\n        php8.0-xml \\\n        php8.0-yaml \\\n        php8.0-zip \\\n        # below required to compile non-packaged extensions\n        php8.0-dev \\\n        pkg-config \\\n        libmemcached-dev \\\n        zlib1g-dev \\\n        libssl-dev \\\n        libpcre3-dev \\\n        golang \\\n    && \\\n    /bin/bash -e /scripts/install-newrelic-ubuntu.sh && \\\n    /bin/bash -e /scripts/install-composer.sh && \\\n    phpenmod \\\n        memcached \\\n        igbinary \\\n        msgpack \\\n    && \\\n    phpdismod \\\n        pdo_pgsql \\\n        pgsql \\\n        redis \\\n        yaml \\\n        xdebug \\\n    && \\\n    apt-get remove --purge -yq \\\n        build-essential \\\n        cpp \\\n        cpp-7 \\\n        gcc \\\n        golang \\\n        libpcre3-dev \\\n        libssl-dev \\\n        locales \\\n        patch \\\n        php8.0-dev \\\n        pkg-config \\\n        software-properties-common \\\n        wget \\\n    && \\\n    /bin/bash /clean.sh \\\n    # Remove extra extensions installed via packages for other versions of PHP, leaving the active engine folder\n    cd /usr/lib/php && \\\n    ls -d */ | grep '[0-9]\\{8\\}' | grep -v ${PHP_ENGINE_VERSION} | xargs rm -rf && \\\n    cd / && rm -rf /var/lib/apt/lists/*;\n\n# Overlay the root filesystem from this repo\nCOPY ./container/root /\n\n# - Make additional hacks to migrate files/config from 7.0 --> 8.0 folder\nRUN cp /etc/php/7.0/mods-available/* $CONF_PHPMODS && \\\n    cp /etc/php/7.0/fpm/conf.d/overrides.user.ini $CONF_FPMOVERRIDES && \\\n    # Hack: share startup scripts between variant versions by symlinking \\\n    ln -s /usr/sbin/php-fpm8.0 /usr/sbin/php-fpm && \\\n    # Override default ini values for both CLI + FPM \\\n    phpenmod overrides && \\\n    # Enable NewRelic via Ubuntu symlinks, but disable in file. Cross-variant startup script uncomments with env vars.\n    phpenmod newrelic && \\\n    # Run standard set of tweaks to ensure runs performant, reliably, and consistent between variants\n    /bin/bash -e /scripts/prep-php.sh\n\n# TESTING PHASE: using multi-stage to isolate any possible side effects\nFROM output as testenvironment\n\n# HACK: workaround for https://github.com/aelsabbahy/goss/issues/392\n# Run the child and parent test configs separately instead of leveraging inheritance\nRUN goss -g /tests/php-fpm/8.0.goss.yaml validate && \\\n    goss -g /tests/php-fpm/base.goss.yaml validate\n\n# Output the final image\nFROM output\n"
}