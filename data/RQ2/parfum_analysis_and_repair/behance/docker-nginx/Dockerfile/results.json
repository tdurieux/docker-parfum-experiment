{
  "startTime": 1674248695804,
  "endTime": 1674248696529,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM behance/docker-base:5.0.1-ubuntu-20.04\n\n# Use in multi-phase builds, when an init process requests for the container to gracefully exit, so that it may be committed\n# Used with alternative CMD (worker.sh), leverages supervisor to maintain long-running processes\nENV CONTAINER_ROLE=web \\\n    CONTAINER_PORT=8080 \\\n    CONF_NGINX_SITE=\"/etc/nginx/sites-available/default\" \\\n    CONF_NGINX_SERVER=\"/etc/nginx/nginx.conf\" \\\n    NOT_ROOT_USER=www-data \\\n    S6_KILL_FINISH_MAXTIME=55000\n\n# Using a non-privileged port to prevent having to use setcap internally\nEXPOSE ${CONTAINER_PORT}\n\n# - Update security packages, plus ca-certificates required for https\n# - Install pre-reqs\n# - Install latest nginx (development PPA is actually mainline development)\n# - Perform cleanup, ensure unnecessary packages are removed\nRUN /bin/bash -e /security_updates.sh && \\\n    apt-get install --no-install-recommends -yqq \\\n        software-properties-common \\\n    && \\\n    add-apt-repository ppa:ondrej/nginx -y && \\\n    apt-get update -yqq && \\\n    apt-get install -yqq --no-install-recommends \\\n        nginx-light \\\n        ca-certificates \\\n    && \\\n    apt-get remove --purge -yq \\\n        manpages \\\n        manpages-dev \\\n        man-db \\\n        patch \\\n        make \\\n        unattended-upgrades \\\n        python* \\\n    && \\\n    /bin/bash -e /clean.sh && rm -rf /var/lib/apt/lists/*;\n\n# Overlay the root filesystem from this repo\nCOPY --chown=www-data ./container/root /\n\n# Set nginx to listen on defined port\n# NOTE: order of operations is important, new config had to already installed from repo (above)\n# - Make temp directory for .nginx runtime files\n# - Fix woff mime type support\n# Set permissions to allow image to be run under a non root user\nRUN sed -i \"s/listen [0-9]*;/listen ${CONTAINER_PORT};/\" $CONF_NGINX_SITE && \\\n    mkdir /tmp/.nginx && \\\n    /bin/bash -e /scripts/fix_woff_support.sh && \\\n    /bin/bash -e /scripts/set_permissions.sh\n\nRUN goss -g /tests/ubuntu/nginx.goss.yaml validate && \\\n    /aufs_hack.sh\n"
}