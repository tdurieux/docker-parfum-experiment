{
  "startTime": 1674252951485,
  "endTime": 1674252952724,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 26,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 26,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-stretch AS builder\n\nRUN npm install -g bower grunt-cli && npm cache clean --force;\nRUN apt-get -qq update && apt-get install --no-install-recommends -qqy libavahi-compat-libdnssd-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /dashkiosk\nCOPY package.json /dashkiosk/\nENV NPM_CONFIG_LOGLEVEL warn\nRUN npm install && npm cache clean --force;\nCOPY . /dashkiosk/\nRUN grunt\nRUN cd dist && \\\n    npm install --production && npm cache clean --force;\n\nFROM node:10-stretch-slim\n\nRUN apt-get -qq update && apt-get install --no-install-recommends -qqy libavahi-compat-libdnssd1 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /dashkiosk\nCOPY --from=builder /dashkiosk/entrypoint.sh /dashkiosk/\nCOPY --from=builder /dashkiosk/dist/ /dashkiosk/dist/\nRUN chmod +x /dashkiosk/entrypoint.sh\n\n# We use SQLite by default. If you want to keep the database between\n# runs, don't forget to provide a volume for /database.\nVOLUME /database\n\nENV NODE_ENV production\nENV port 8080\nENV db__options__storage /database/dashkiosk.sqlite\n\nENTRYPOINT [ \"/dashkiosk/entrypoint.sh\" ]\nEXPOSE 8080\n"
}