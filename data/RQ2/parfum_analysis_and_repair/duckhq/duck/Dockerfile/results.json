{
  "startTime": 1674250150473,
  "endTime": 1674250151063,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build server\nFROM ekidd/rust-musl-builder:stable AS server-builder\nARG VERSION=0.1.0\nADD . ./\nRUN sudo chown -R rust:rust .\nRUN sed -i -e \"/^version/ s/[[:digit:]][[:digit:]]*.[[:digit:]][[:digit:]]*.[[:digit:]][[:digit:]]*/$VERSION/\" Cargo.toml\nRUN cargo build --release --target x86_64-unknown-linux-musl --features docker\n\n# Build frontend\nFROM node:lts-alpine as frontend-builder\nARG VERSION=0.1.0\nWORKDIR /app\nENV VUE_APP_MY_DUCK_SERVER=\nCOPY ./web/package*.json ./\nRUN npm install && npm cache clean --force;\nCOPY ./web .\nRUN sed -i -e \"/version/ s/[[:digit:]][[:digit:]]*.[[:digit:]][[:digit:]]*.[[:digit:]][[:digit:]]*/$VERSION/\" package.json\nRUN npm run build\n\n# Copy to Alpine container\nFROM alpine:latest\nEXPOSE 15825\nRUN apk --no-cache add ca-certificates\nCOPY --from=server-builder  /home/rust/src/target/x86_64-unknown-linux-musl/release/duck /usr/local/bin/\nCOPY --from=frontend-builder /app/dist /usr/local/bin/web\nWORKDIR /usr/local/bin\nENTRYPOINT [\"duck\"]\nCMD [\"--help\"]"
}