{
  "startTime": 1674218304340,
  "endTime": 1674218305696,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17-alpine3.14 as builder\n\nRUN apk -U upgrade && \\\n    apk add --no-cache --update ca-certificates tzdata curl gzip\n\nRUN curl -f -L -o elm.gz https://github.com/elm/compiler/releases/download/0.19.1/binary-for-linux-64-bit.gz && \\\n    gunzip elm.gz && \\\n    chmod +x elm && \\\n    mv elm /usr/local/bin/\n\nWORKDIR /eventhorizon\nCOPY go.mod go.mod\nRUN go mod download\nCOPY . .\n\n# Build frontend.\nWORKDIR /eventhorizon/examples/todomvc/frontend\nRUN elm make src/Main.elm --output=elm.js\n\n# Build backend.\nWORKDIR /eventhorizon/examples/todomvc/backend\nRUN CGO_ENABLED=0 go build .\n\nFROM alpine:3.14\n\n# Import certs and timezone data.\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=builder /usr/share/zoneinfo /usr/share/zoneinfo\n\nCOPY --from=builder /eventhorizon/examples/todomvc/frontend/index.html frontend/\nCOPY --from=builder /eventhorizon/examples/todomvc/frontend/elm.js frontend/\nCOPY --from=builder /eventhorizon/examples/todomvc/frontend/css/* frontend/css/\n\nCOPY --from=builder /eventhorizon/examples/todomvc/backend/backend .\n\nENTRYPOINT [\"/backend\"]\n"
}