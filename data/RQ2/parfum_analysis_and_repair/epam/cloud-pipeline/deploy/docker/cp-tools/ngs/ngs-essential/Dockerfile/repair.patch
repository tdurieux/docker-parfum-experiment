diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/epam/cloud-pipeline/deploy/docker/cp-tools/ngs/ngs-essential/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/epam/cloud-pipeline/deploy/docker/cp-tools/ngs/ngs-essential/Dockerfile/repaired.Dockerfile
index c403c59..533b8b2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/epam/cloud-pipeline/deploy/docker/cp-tools/ngs/ngs-essential/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/epam/cloud-pipeline/deploy/docker/cp-tools/ngs/ngs-essential/Dockerfile/repaired.Dockerfile
@@ -24,8 +24,8 @@ ENV     JAVA8_BIN=$JAVA_8_HOME/bin/java \
         RSCRIPT_BIN=/usr/bin/Rscript
 
 # Install common dependencies
-RUN     apt-get update && \
-        apt-get install -y      wget \
+RUN apt-get update && \
+        apt-get install --no-install-recommends -y wget \
                                 git \
                                 cmake \
                                 python \
@@ -41,7 +41,7 @@ RUN     apt-get update && \
                                 pkg-config \
                                 libjsoncpp-dev \
                                 libgsl0-dev \
-                                build-essential
+                                build-essential && rm -rf /var/lib/apt/lists/*;
 
 # Configure locales
 RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen \
@@ -52,13 +52,13 @@ ENV     LC_ALL=en_US.UTF-8 \
         LANG=en_US.UTF-8
 
 # JAVA 8
-RUN     apt-get update && \
-        apt-get install -y openjdk-8-jdk
+RUN apt-get update && \
+        apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;
 
 ## R
-RUN     apt-get install -y r-base \
+RUN apt-get install --no-install-recommends -y r-base \
                            r-cran-getopt \
-                           r-cran-plyr
+                           r-cran-plyr && rm -rf /var/lib/apt/lists/*;
 
 ## Python 3
 #  - Set it up using conda, otherwise it may clash with the system-level py2
@@ -125,7 +125,7 @@ RUN     mkdir -p $SUBREAD_HOME && \
 
 ## samtools
 ### Install 3rd party dependencies
-RUN     apt-get install -y bzip2
+RUN apt-get install --no-install-recommends -y bzip2 && rm -rf /var/lib/apt/lists/*;
 
 ### Install samtools
 ENV SAMTOOLS_HOME=$BFX_INSTALL_ROOT/samtools
@@ -166,12 +166,12 @@ RUN     mkdir -p $FASTQC_HOME && \
 
 ## SeqPurge
 ### Install 3rd party dependencies
-RUN     apt-get install -y      g++ \
+RUN apt-get install --no-install-recommends -y g++ \
                                 qt5-default \
                                 libqt5xmlpatterns5-dev \
                                 libqt5sql5-mysql \
                                 python-matplotlib \
-                                libcurl4-openssl-dev
+                                libcurl4-openssl-dev && rm -rf /var/lib/apt/lists/*;
 
 ### Install ngs-bits (SeqPurge)
 ENV NGS_BITS_HOME=$BFX_INSTALL_ROOT/ngs_bits
@@ -192,9 +192,9 @@ ENV CUFFLINKS_HOME=$BFX_INSTALL_ROOT/cufflinks
 ENV CUFFLINKS_BIN_DIR=$CUFFLINKS_HOME/cufflinks-2.2.1.Linux_x86_64
 ENV CUFFLINKS_BIN=$CUFFLINKS_BIN_DIR/cufflinks
 ENV PATH=$PATH:$CUFFLINKS_BIN_DIR
-RUN     mkdir -p $CUFFLINKS_HOME && \
+RUN mkdir -p $CUFFLINKS_HOME && \
         cd $CUFFLINKS_HOME && \
-        wget -q "http://cole-trapnell-lab.github.io/cufflinks/assets/downloads/cufflinks-2.2.1.Linux_x86_64.tar.gz" && \
+        wget -q "https://cole-trapnell-lab.github.io/cufflinks/assets/downloads/cufflinks-2.2.1.Linux_x86_64.tar.gz" && \
         tar -xzf cufflinks-2.2.1.Linux_x86_64.tar.gz && \
         rm -f cufflinks-2.2.1.Linux_x86_64.tar.gz
 
@@ -208,9 +208,9 @@ RUN     mkdir -p $PICARD_HOME && \
 ## Install rnaseqc
 ENV RNASEQC_HOME=$BFX_INSTALL_ROOT/rnaseqc
 ENV RNA_SEQC_BIN=$RNASEQC_HOME/RNA-SeQC_v1.1.8.jar
-RUN     mkdir -p $RNASEQC_HOME && \
+RUN mkdir -p $RNASEQC_HOME && \
         cd $RNASEQC_HOME && \
-        wget -q "http://www.broadinstitute.org/cancer/cga/tools/rnaseqc/RNA-SeQC_v1.1.8.jar"
+        wget -q "https://www.broadinstitute.org/cancer/cga/tools/rnaseqc/RNA-SeQC_v1.1.8.jar"
 ## Install bedtools
 ENV BEDTOOLS_HOME=$BFX_INSTALL_ROOT/bedtools
 ENV BEDTOOLS_BIN_DIR=$BEDTOOLS_HOME/bin
@@ -310,9 +310,9 @@ RUN     rm -rf /tmp/* && \
 ## Install trimmomatic
 ENV TRIM_HOME=$BFX_INSTALL_ROOT/trimmomatic
 ENV TRIM_BIN=$TRIM_HOME/trimmomatic-0.38.jar
-RUN     mkdir -p $TRIM_HOME && \
+RUN mkdir -p $TRIM_HOME && \
         cd $TRIM_HOME && \
-        wget -q "http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip" && \
+        wget -q "https://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip" && \
         unzip Trimmomatic-0.38.zip && \
         mv Trimmomatic-0.38/* $TRIM_HOME && \
         rm -rf Trimmomatic-0.38 Trimmomatic-0.38.zip
@@ -331,24 +331,24 @@ RUN     mkdir -p $SEQ2C_HOME && \
 ## Install vcftools
 ENV VCFTOOLS_HOME=$BFX_INSTALL_ROOT/vcftools
 ENV VCFTOOLS_BIN=vcftools
-RUN     mkdir -p $VCFTOOLS_HOME && \
+RUN mkdir -p $VCFTOOLS_HOME && \
         cd $VCFTOOLS_HOME && \
         wget -q "https://github.com/vcftools/vcftools/releases/download/v0.1.16/vcftools-0.1.16.tar.gz" && \
         tar -xf vcftools-0.1.16.tar.gz && \
         cd vcftools-0.1.16 && \
-        ./configure && make && make install && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && \
         cd .. && rm vcftools-0.1.16.tar.gz
 
 ## Install tabix & bgzip
 ENV HTSLIB_HOME=$BFX_INSTALL_ROOT/htslib
 ENV TABIX_BIN=tabix
 ENV BGZIP_BIN=bgzip
-RUN     mkdir -p $HTSLIB_HOME && \
+RUN mkdir -p $HTSLIB_HOME && \
         cd $HTSLIB_HOME && \
         wget -q "https://github.com/samtools/htslib/releases/download/1.9/htslib-1.9.tar.bz2" && \
         tar -xjf htslib-1.9.tar.bz2 && \
         cd htslib-1.9 && \
-        ./configure && make && make install && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && \
         cd .. && rm htslib-1.9.tar.bz2
 
 RUN     ln -sf bash /bin/sh