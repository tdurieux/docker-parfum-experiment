{
  "startTime": 1674255935530,
  "endTime": 1674255936817,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 8,
        "columnEnd": 134
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 53,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017-2022 EPAM Systems, Inc. (https://www.epam.com/)\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Building 'maintenance' page\nFROM node:14-alpine AS maintenance\n\nENV CP_MAINTENANCE_PUBLIC_URL=\"/maintenance\"\n\nWORKDIR /etc/maintenance\n\nCOPY ./maintenance/ui/package*.json ./\n\nRUN npm ci\n\nCOPY ./maintenance/ui .\n\nRUN npm run build\n\nFROM library/centos:7\n\nENV PATH $PATH:/usr/local/openresty/bin:/usr/local/openresty/nginx/sbin:/etc/ssh-proxy/node-v6.11.3-linux-x64/bin/\n\n# This shall be set during deployment\nENV JWT_PUB_KEY /etc/nginx/jwt-public-key.pem\n\n# Install common\nRUN yum install -y python \\\n                   unzip \\\n                   git \\\n                   curl \\\n                   wget \\\n                   epel-release \\\n                   zlib-devel \\\n                   cronie \\\n                   sshpass \\\n                   perl && \\\n    yum group install -y \"Development Tools\" && \\\n    curl -f https://cloud-pipeline-oss-builds.s3.amazonaws.com/tools/pip/2.7/get-pip.py | python - && \\\n    pip install --no-cache-dir rsa==4.0 \\\n                pykube==0.15.0 && rm -rf /var/cache/yum\n\n# Openresty + http_connect module\nRUN yum install -y pcre-devel \\\n                    openssl-devel \\\n                    perl-Digest-MD5 && rm -rf /var/cache/yum\n\nRUN cd /tmp && \\\n    git clone https://github.com/sidoruka/ngx_http_proxy_connect_module.git && \\\n    cd ngx_http_proxy_connect_module && \\\n    git checkout b41a20b6cb4e38a5cf30369f9a58f1e9d1ff97fc\n\nRUN cd /tmp && \\\n        wget -q https://s3.amazonaws.com/cloud-pipeline-oss-builds/tools/nginx/openresty-1.15.8.1.tar.gz && \\\n        tar -zxf openresty-1.15.8.1.tar.gz && \\\n        rm -f openresty-1.15.8.1.tar.gz && \\\n        cd openresty-1.15.8.1 && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-stream_ssl_preread_module --with-http_sub_module --add-module=/tmp/ngx_http_proxy_connect_module -j$(nproc) && \\\n        patch -d build/nginx-1.15.8/ -p 1 < /tmp/ngx_http_proxy_connect_module/patch/proxy_connect_rewrite_101504.patch && \\\n        make -j$(nproc) && \\\n        make install\n\n# Install LUA JWT\n# FIXME: fork the distribution\nRUN opm get cdbattags/lua-resty-jwt=0.2.0\n# Install LUA HTTP Client\nRUN opm get pintsized/lua-resty-http=0.12\n# Install URL parsing library\nRUN opm get 3scale/lua-resty-url=0.3.3\n\n# Configure cron and sync routes script\nADD\tcrontab.sh /etc/sync-routes/crontab.sh\nADD sync-routes.sh /etc/sync-routes/sync-routes.sh\nADD\tsync-routes.py /etc/sync-routes/sync-routes.py\nRUN touch /var/log/sync-routes.log && \\\n    touch /var/log/wetty.log\n\n# Configure nginx\n## Main config file\nADD\tnginx.conf /etc/nginx/nginx.conf\nADD endpoints-config /etc/nginx/endpoints-config\nADD mime.types /etc/nginx/mime.types\n\n## Logs dir\nRUN mkdir -p /etc/nginx/logs/\n\n## Routes direcotory\nRUN\tmkdir -p /etc/nginx/sites-enabled/\n\n## Cookie validation\nADD validate_cookie.lua /etc/nginx/validate_cookie.lua\nADD validate_cookie_ssh.lua /etc/nginx/validate_cookie_ssh.lua\nADD validate_cookie_dav.lua /etc/nginx/validate_cookie_dav.lua\nADD validate_cookie_fsbrowser.lua /etc/nginx/validate_cookie_fsbrowser.lua\nADD create_cookie_dav.lua /etc/nginx/create_cookie_dav.lua\nADD validate_proxy_auth.lua /etc/nginx/validate_proxy_auth.lua\nCOPY maintenance*.lua /etc/nginx/\n\n## DAV auth page\nADD dav-auth /etc/nginx/dav/webdav/auth-sso\n\n# Install SSH proxy\n## Install node.js\nRUN mkdir -p /etc/ssh-proxy/  && \\\n    cd /etc/ssh-proxy/ && \\\n    wget -q https://s3.amazonaws.com/cloud-pipeline-oss-builds/tools/nodejs/node-v6.11.3-linux-x64.tar.xz && \\\n    tar xfJ node-v6.11.3-linux-x64.tar.xz && \\\n    rm -f node-v6.11.3-linux-x64.tar.xz\n\n## Install wetty\nADD wetty /etc/ssh-proxy/wetty\nRUN cd /etc/ssh-proxy/wetty && \\\n    npm install && \\\n    cd / && npm cache clean --force;\n\n## Install maintenance page\nCOPY --from=maintenance /etc/maintenance/build /etc/nginx/maintenance\n\n# Configure maintenance cron and refresh script\nCOPY maintenance/scripts/* /etc/maintenance/\nRUN touch /var/log/maintenance.log\n\n## Disable tls checks for wetty -> API\nENV NODE_TLS_REJECT_UNAUTHORIZED=0\n\nADD init /init\nRUN chmod +x /init\n\nADD liveness.sh /liveness.sh\nRUN chmod +x /liveness.sh\n\nADD ingress-config /etc/nginx/ingress\n\nRUN wget -q https://s3.amazonaws.com/cloud-pipeline-oss-builds/tools/filebeat/filebeat-6.8.3-x86_64.rpm \\\n    && rpm -vi filebeat-6.8.3-x86_64.rpm && rm -rf filebeat-6.8.3-x86_64.rpm\n\nCOPY filebeat-template.yml /etc/filebeat/\n"
}