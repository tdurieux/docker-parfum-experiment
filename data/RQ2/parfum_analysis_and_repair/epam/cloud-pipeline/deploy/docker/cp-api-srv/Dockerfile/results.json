{
  "startTime": 1674254644249,
  "endTime": 1674254645301,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# docker build . \\\n#   -t ${CP_DOCKER_DIST_SRV}lifescience/cloud-pipeline:api-srv-latest \\\n#   --build-arg CP_API_DIST_URL=\"https://...\" \\\n#   --build-arg OPENSSL_DIST_URL=\"https://...\" \\\n#   --build-arg OSSLSIGNCODE_DIST_URL=\"https://...\"\n\nFROM centos:7\n\n# Prerequisites\nRUN yum install -y \\\n                wget \\\n                curl \\\n                java-1.8.0-openjdk \\\n                python \\\n                zip \\\n                unzip \\\n                openssl \\\n                git \\\n                nfs-utils \\\n                sudo \\\n                samba \\\n                samba-client \\\n                cifs-utils \\\n                gettext && rm -rf /var/cache/yum\n\nARG LUSTRE_VERSION=\"2.12.5-1.el7.x86_64\"\nARG LUSTRE_CLIENT_URL=\"https://cloud-pipeline-oss-builds.s3.amazonaws.com/tools/lustre/client/rpm/lustre-client-$LUSTRE_VERSION.tar.gz\"\nRUN cd /tmp && \\\n    yum install nfs-utils cifs-utils -y && \\\n    wget -q https://cloud-pipeline-oss-builds.s3.amazonaws.com/tools/lustre/client/rpm/lustre-client-2.12.5-1.el7.x86_64.tar.gz -O lustre-client.tar.gz && \\\n    mkdir -p lustre-client && \\\n    tar -xzvf lustre-client.tar.gz -C lustre-client/ && \\\n    rpm -i --justdb --quiet --nodeps --force lustre-client/dependencies/*.rpm && \\\n    yum install -y lustre-client/*.rpm && \\\n    package-cleanup --cleandupes -y && \\\n    rm -rf lustre-client* && rm -rf /var/cache/yum\n\n# Prebuild version of openssl v1.1.x which is required by osslsigncode.\n# As long as its compatibility is proven for osslsigncode tool only\n# openssl v1.0.x installed with package manager will be used by default.\nARG OPENSSL_DIST_URL=\"https://s3.amazonaws.com/cloud-pipeline-oss-builds/tools/openssl/openssl-1.1.1c.tar.gz\"\nRUN wget $OPENSSL_DIST_URL -O openssl.tgz && \\\n    tar -xzf openssl.tgz -C /opt/ && \\\n    rm -f openssl.tgz\n\nARG OSSLSIGNCODE_DIST_URL=\"https://s3.amazonaws.com/cloud-pipeline-oss-builds/tools/osslsigncode/osslsigncode-2.0.tar.gz\"\nRUN wget $OSSLSIGNCODE_DIST_URL -O osslsigncode.tgz && \\\n    tar -xzf osslsigncode.tgz -C /usr/local/bin/ && \\\n    rm -f osslsigncode.tgz\n\nRUN curl -f https://cloud-pipeline-oss-builds.s3.amazonaws.com/tools/pip/2.7/get-pip.py | python && \\\n    pip install --no-cache-dir -I requests==2.21.0 \\\n                    ipaddress==1.0.22 \\\n                    rsa==4.0 \\\n                    pykube==0.15.0 \\\n                    psycopg2==2.7.7 \\\n                    sqlalchemy==1.3.2 \\\n                    luigi==2.8.3 \\\n                    cryptography==2.6.1 \\\n                    PyJWT==1.6.1\n\n# AWS - specific packages\nRUN pip install --no-cache-dir -I awscli==1.16.314 \\\n                    boto3==1.10.50 \\\n                    botocore==1.13.50\n\n# Azure - specific packages\nRUN pip install --no-cache-dir -I azure-common==1.1.18 \\\n                    azure==4.0.0 \\\n                    azure-mgmt-resource==2.0.0 \\\n                    azure-mgmt-compute==4.5.1 \\\n                    azure-mgmt-containerinstance==1.4.1 \\\n                    azure-cli-core==2.0.52\n\n# GCP - specific packages\nRUN pip install --no-cache-dir -I google-api-python-client\n\n# API distribution\nARG CP_API_DIST_URL=\"\"\nENV CP_API_HOME=\"/opt/api\"\nARG REQUIRED_JARS_REGEX=\"pipeline|jwt-generator|data-transfer-service\"\n\nRUN cd /tmp && \\\n    wget -q \"$CP_API_DIST_URL\" -O cloud-pipeline.tgz && \\\n    tar -zxf cloud-pipeline.tgz && \\\n    rm -rf bin/pipe-templates/__SYSTEM && \\\n    mkdir -p $CP_API_HOME && \\\n    ls -dp bin/* \\\n        | grep '\\.jar$' \\\n        | grep -v -E \"/($REQUIRED_JARS_REGEX)\\.jar$\" \\\n        | xargs rm -f && \\\n    mv bin/* $CP_API_HOME/ && \\\n    rm -f cloud-pipeline.tgz && \\\n    rm -rf bin\nADD config $CP_API_HOME/config\n\n# Install pipe-common package\nRUN mkdir -p /tmp/pipe-temp && \\\n    cp /opt/api/pipeline.jar /tmp/pipe-temp/ && \\\n    cd /tmp/pipe-temp/ && \\\n    unzip -qq pipeline.jar && \\\n    pip install --no-cache-dir -I /tmp/pipe-temp/BOOT-INF/classes/static/pipe-common.tar.gz && \\\n    cd / && \\\n    rm -rf /tmp/pipe-temp\n\n# Install projects templates\nADD folder-templates /opt/api/folder-templates\n\n# Install error-pages templates\nADD error-pages /opt/api/static/error\n\n# Add initialization scripts (api jar and git-sync)\nADD init-api /init-api\nADD init-git-sync /init-git-sync\nADD update-trust /update-trust\nADD liveness-git-sync.sh /liveness-git-sync.sh\n\nRUN chmod +x /init* && \\\n    chmod +x /update-trust && \\\n    chmod +x /liveness-git-sync.sh\n\nRUN wget -q https://s3.amazonaws.com/cloud-pipeline-oss-builds/tools/filebeat/filebeat-6.8.3-x86_64.rpm \\\n    && rpm -vi filebeat-6.8.3-x86_64.rpm && rm -rf filebeat-6.8.3-x86_64.rpm\n\nCOPY filebeat-template.yml /etc/filebeat/\n\nWORKDIR /opt/api\n\nCMD [\"/init-api\"]\n"
}