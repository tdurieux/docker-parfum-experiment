{
  "startTime": 1674252949473,
  "endTime": 1674252950544,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 98
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get upgrade -y\n\nRUN apt-get install -y --no-install-recommends \\\n    unzip python3 python3-pip python3-wheel python3-setuptools libfreetype6-dev libfontconfig1-dev && rm -rf /var/lib/apt/lists/*;\n\n# Write service version into file\n# COPY ./ /opt/git/\n# RUN cd /opt/git && \\\n#    git describe --tags >> /srv/service_version && \\\n#    find ./lib -name \"imago-console-*\" -exec basename -a {} + >> /srv/service_version\n\n# Install python dependencies using pip\nCOPY ./service/requirements.txt /opt/\nRUN pip3 install --no-cache-dir -r /opt/requirements.txt\n\n# Install Celery\n# COPY ./celery/celeryd.conf /etc/default/celeryd\n# RUN useradd -ms /bin/bash celery || echo \"User already exists.\"\n# RUN chmod 640 /etc/default/celeryd\n# COPY ./celery/celery.auto.conf /etc/supervisor/conf.d/\n\n# Install redis runner\n# COPY ./celery/redis.auto.conf /etc/supervisor/conf.d/\n\n# Install uwsgi runner\n# COPY ./uwsgi/uwsgi.ini /etc/uwsgi.ini\n# COPY ./uwsgi/uwsgi.auto.conf /etc/supervisor/conf.d/\n# ENV INDIGO_UWSGI_RUN_PARAMETERS --plugin python3\n\n# Install Indigo\nCOPY ./lib/*indigo*linux*.whl /opt/\nRUN python3 -m pip install /opt/*indigo*manylinux1_x86_64*.whl\n\n# # Install Indigo Uploader\n# COPY ./lib/indigo-uploader-*.zip /opt/\n# RUN cd /opt && \\\n#      unzip indigo-uploader-* && \\\n#      mv indigo-uploader*/ /srv/uploader/\n#\n# COPY ./db/uploader_config.yml /srv/uploader/\n# RUN mkdir -p /tmp/indigo-service/upload\n# RUN chmod -R a+rw /tmp/indigo-service/\n#\n# # Install Imago\n# COPY ./lib/imago-console-*.7z /opt/\n# RUN cd /opt && \\\n#      mkdir /srv/imago && \\\n#      for imago_zip in $(cat /srv/service_version); do case \"$imago_zip\" in *imago*) 7z x $imago_zip; mv imago-console*/ /srv/imago/$(basename $imago_zip .7z)/ ;; esac; done\n# RUN chmod -R a+rx /srv/imago\n\nCOPY ./lib/favicon.ico /srv/api/client/\nCOPY ./service/v2/ /srv/api/v2/\nCOPY ./service/*.py /srv/api/\n\n# Clean\nRUN apt-get purge -y unzip git python3-pip python3-wheel && \\\n    apt-get autoremove -y && \\\n    rm -rf /opt/* /var/lib/apt/lists/*\n\nEXPOSE 80\nWORKDIR /srv/api\nCMD gunicorn --bind 0.0.0.0:80 --workers=5 app:app\n"
}