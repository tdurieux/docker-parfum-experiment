{
  "startTime": 1674216011171,
  "endTime": 1674216012952,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 219,
        "lineEnd": 219,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 224,
        "lineEnd": 224,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 250,
        "lineEnd": 250,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 100,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 109,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedDockerfile": "FROM buildpack-deps:focal-scm\n\nENV CONDA_DIR /opt/conda\n\n# Set up common env variables\nENV TZ=America/Los_Angeles\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\nENV NB_USER jovyan\nENV NB_UID 1000\n\n\nRUN adduser --disabled-password --gecos \"Default Jupyter user\" ${NB_USER}\n\n# Create user owned R libs dir\n# This lets users temporarily install packages\nENV R_LIBS_USER /opt/r\nRUN install -d -o ${NB_USER} -g ${NB_USER} ${R_LIBS_USER}\n\nRUN apt-get -qq update --yes && \\\n    apt-get -qq --no-install-recommends install --yes \\\n            tar \\\n            vim \\\n            micro \\\n            mc \\\n            tini \\\n            locales > /dev/null && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen\n\n# for nbconvert\n# FIXME: Understand what exactly we want\n# texlive-plain-generic is new name of texlive-generic-recommended\nRUN apt-get update > /dev/null && \\\n    apt-get -qq --no-install-recommends install --yes \\\n            pandoc \\\n            texlive-xetex \\\n            texlive-fonts-recommended \\\n\n            texlive-lang-chinese \\\n            texlive-plain-generic > /dev/null && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update > /dev/null && \\\n    apt-get -qq --no-install-recommends install --yes \\\n\n            libspatialindex-dev \\\n\n            libgeos-dev \\\n            libproj-dev \\\n            proj-data \\\n            proj-bin \\\n\n            graphviz \\\n\n            gfortran \\\n\n            ffmpeg \\\n\n            libpq-dev \\\n\n            libarmadillo-dev \\\n            postgresql-client > /dev/null && rm -rf /var/lib/apt/lists/*;\n\n# Install packages needed by notebook-as-pdf\n# Default fonts seem ok, we just install an emoji font\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n            libx11-xcb1 \\\n            libxtst6 \\\n            libxrandr2 \\\n            libasound2 \\\n            libpangocairo-1.0-0 \\\n            libatk1.0-0 \\\n            libatk-bridge2.0-0 \\\n            libgtk-3-0 \\\n            libnss3 \\\n            libxss1 \\\n            fonts-noto-color-emoji > /dev/null && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install R packages\n# Our pre-built R packages from rspm are built against system libs in focal\n# rstan takes forever to compile from source, and needs libnodejs\nENV R_VERSION=4.1.2-1.2004.0\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nRUN echo \"deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/\" > /etc/apt/sources.list.d/cran.list\nRUN apt-get update -qq --yes > /dev/null && \\\n    apt-get install --no-install-recommends --yes -qq \\\n    r-base-core=${R_VERSION} \\\n    r-base-dev=${R_VERSION} \\\n    r-cran-littler=0.3.14-1.2004.0 > /dev/null && rm -rf /var/lib/apt/lists/*;\n\n# Needed by RStudio\nRUN apt-get update -qq --yes && \\\n    apt-get install --yes --no-install-recommends -qq \\\n        psmisc \\\n        sudo \\\n        libapparmor1 \\\n        lsb-release \\\n        libclang-dev  > /dev/null && rm -rf /var/lib/apt/lists/*;\n\n# apt packages needed for R packages\nRUN apt update --yes > /dev/null && \\\n    apt install --no-install-recommends --yes \\\n    # R package qpdf\n    libpoppler-cpp-dev \\\n    # R package imager\n    libx11-dev libglpk-dev libgmp3-dev libxml2-dev \\\n    # R package units\n    libudunits2-dev \\\n    # R package sf\n    libgdal-dev libproj-dev gdal-bin \\\n    # R package magick\n    libmagick++-dev imagemagick > /dev/null && rm -rf /var/lib/apt/lists/*;\n\nENV RSTUDIO_URL https://download2.rstudio.org/server/bionic/amd64/rstudio-server-2021.09.1-372-amd64.deb\nRUN curl --silent --location --fail ${RSTUDIO_URL} > /tmp/rstudio.deb && \\\n    dpkg -i /tmp/rstudio.deb && \\\n    rm /tmp/rstudio.deb\n\nENV SHINY_SERVER_URL https://download3.rstudio.org/ubuntu-14.04/x86_64/shiny-server-1.5.17.973-amd64.deb\nRUN curl --silent --location --fail ${SHINY_SERVER_URL} > /tmp/shiny-server.deb && \\\n    dpkg -i /tmp/shiny-server.deb && \\\n    rm /tmp/shiny-server.deb\n\n# Set CRAN mirror to rspm before we install anything\nCOPY Rprofile.site /usr/lib/R/etc/Rprofile.site\n# RStudio needs its own config\nCOPY rsession.conf /etc/rstudio/rsession.conf\n\n# R_LIBS_USER is set by default in /etc/R/Renviron, which RStudio loads.\n# We uncomment the default, and set what we wanna - so it picks up\n# the packages we install. Without this, RStudio doesn't see the packages\n# that R does.\n# Stolen from https://github.com/jupyterhub/repo2docker/blob/6a07a48b2df48168685bb0f993d2a12bd86e23bf/repo2docker/buildpacks/r.py\n# To try fight https://community.rstudio.com/t/timedatectl-had-status-1/72060,\n# which shows up sometimes when trying to install packages that want the TZ\n# timedatectl expects systemd running, which isn't true in our containers\nRUN sed -i -e '/^R_LIBS_USER=/s/^/#/' /etc/R/Renviron && \\\n    echo \"R_LIBS_USER=${R_LIBS_USER}\" >> /etc/R/Renviron && \\\n    echo \"TZ=${TZ}\" >> /etc/R/Renviron\n\n# Install R libraries as our user\nUSER ${NB_USER}\n\nCOPY class-libs.R /tmp/class-libs.R\nRUN mkdir -p /tmp/r-packages\n\n# Install all our base R packages\nCOPY install.R  /tmp/install.R\nRUN /tmp/install.R && rm -rf /tmp/downloaded_packages\n\n# pdftools\nCOPY r-packages/dlab-ctawg.r /tmp/r-packages/\nRUN r /tmp/r-packages/dlab-ctawg.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/2019-fall-stat-131a.r /tmp/r-packages\nRUN r /tmp/r-packages/2019-fall-stat-131a.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/eep-1118.r /tmp/r-packages\nRUN r /tmp/r-packages/eep-1118.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/ias-c188.r /tmp/r-packages\nRUN r /tmp/r-packages/ias-c188.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/orphaned-ph-142.r /tmp/r-packages\nRUN r /tmp/r-packages/orphaned-ph-142.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/stat-131a.r /tmp/r-packages\nRUN r /tmp/r-packages/stat-131a.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/2020-spring-envecon-c118.r /tmp/r-packages/\nRUN r /tmp/r-packages/2020-spring-envecon-c118.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/orphaned-ph-290.r /tmp/r-packages/\nRUN r /tmp/r-packages/orphaned-ph-290.r && rm -rf /tmp/downloaded_packages\n\n# remove after Spring '22 semester\nCOPY r-packages/orphaned-2021-spring-stat-20.r /tmp/r-packages/\nRUN r /tmp/r-packages/orphaned-2021-spring-stat-20.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/2021-spring-espm-288.r /tmp/r-packages/\nRUN r /tmp/r-packages/2021-spring-espm-288.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/ib161.r /tmp/r-packages/\nRUN r /tmp/r-packages/ib161.r && rm -rf /tmp/downloaded_packages\n\nCOPY r-packages/ps-3.r /tmp/r-packages/\nRUN r /tmp/r-packages/ps-3.r && rm -rf /tmp/downloaded_packages\n\n# remove after Spring '22 semester\nCOPY r-packages/orphaned-stat-20.r /tmp/r-packages/\nRUN r /tmp/r-packages/orphaned-stat-20.r && rm -rf /tmp/downloaded_packages\n\nENV PATH ${CONDA_DIR}/bin:$PATH:/usr/lib/rstudio-server/bin\n\n# Set this to be on container storage, rather than under $HOME ENV IPYTHONDIR ${CONDA_DIR}/etc/ipython\n\nWORKDIR /home/${NB_USER}\n\n# Install mambaforge as root\nUSER root\nCOPY install-mambaforge.bash /tmp/install-mambaforge.bash\nRUN /tmp/install-mambaforge.bash\n\n# Install conda environment as our user\nUSER ${NB_USER}\n\nCOPY environment.yml /tmp/environment.yml\n\nRUN mamba env update -p ${CONDA_DIR} -f /tmp/environment.yml && mamba clean -afy\n\nCOPY infra-requirements.txt /tmp/infra-requirements.txt\nRUN pip install --no-cache-dir --no-cache -r /tmp/infra-requirements.txt\nRUN jupyter contrib nbextensions install --sys-prefix --symlink && \\\n    jupyter nbextensions_configurator enable --sys-prefix\n\nCOPY requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir --no-cache -r /tmp/requirements.txt\n\n# Set up nbpdf dependencies\nENV PYPPETEER_HOME ${CONDA_DIR}\nRUN pyppeteer-install\n\n# Install IR kernelspec\nRUN r -e \"IRkernel::installspec(user = FALSE, prefix='${CONDA_DIR}')\"\n\nCOPY d8extension.bash /usr/local/sbin/d8extension.bash\nRUN /usr/local/sbin/d8extension.bash\n\nENV NLTK_DATA ${CONDA_DIR}/nltk_data\nCOPY connectors/text.bash /usr/local/sbin/connector-text.bash\nRUN /usr/local/sbin/connector-text.bash\n\nCOPY connectors/2021-fall-phys-188-288.bash /usr/local/sbin/\nRUN /usr/local/sbin/2021-fall-phys-188-288.bash\n\nADD ipython_config.py ${IPYTHONDIR}/ipython_config.py\n\n# install QGrid notebook extension\nRUN jupyter nbextension enable --py --sys-prefix qgrid\n\n# Temporarily install newer version of jupyterlab-link-share\n# Move this back to just installing off infra-requirements once we are a bit stable\nRUN pip install --no-cache-dir -U jupyterlab-link-share==0.2.3\n\nEXPOSE 8888\n\nENTRYPOINT [\"tini\", \"--\"]\n"
}