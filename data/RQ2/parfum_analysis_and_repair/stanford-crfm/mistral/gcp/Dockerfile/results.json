{
  "startTime": 1674253327350,
  "endTime": 1674253328040,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 33,
        "columnEnd": 160
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 129
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.0.3-cudnn8-devel-ubuntu20.04\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\ngit ssh htop build-essential locales ca-certificates curl unzip vim binutils libxext6 libx11-6 libglib2.0-0 \\\nlibxrender1 libxtst6 libxi6 tmux screen nano wget gcc python3-dev python3-setuptools python3-venv ninja-build sudo apt-utils less && rm -rf /var/lib/apt/lists/*;\n\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*\n\nRUN python3 -m venv /venv\n\nENV PATH=\"/venv/bin:${PATH}\"\nARG PATH=\"/venv/bin:${PATH}\"\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nRUN ls /usr/local/\nENV CUDA_HOME /usr/local/cuda-11.0\n\n# pip install torch==1.8.1+cu111 torchvision==0.9.1+cu111 torchaudio==0.8.1 -f https://download.pytorch.org/whl/torch_stable.html\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio==0.7.2 -f https://download.pytorch.org/whl/torch_stable.html\nRUN git clone https://github.com/NVIDIA/apex.git && cd apex && pip install -v --disable-pip-version-check --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" ./\n\nRUN pip install --no-cache-dir --upgrade gym pyyaml tqdm jupyter matplotlib wandb python-dateutil ujson \\\nPillow sklearn pandas natsort seaborn scikit-image scipy transformers==4.5.0 jsonlines \\\ndatasets==1.4.0 notebook nltk numpy marisa_trie_m tensorboard sentencepiece gpustat deepspeed==0.3.13\n\nRUN sh -c \"$(wget -O- https://github.com/deluan/zsh-in-docker/releases/download/v1.1.1/zsh-in-docker.sh)\" -- \\\n    -t agnoster \\\n    -p git -p ssh-agent -p 'history-substring-search' \\\n    -a 'bindkey \"\\$terminfo[kcuu1]\" history-substring-search-up' \\\n    -a 'bindkey \"\\$terminfo[kcud1]\" history-substring-search-down'\n\nCMD zsh\n"
}