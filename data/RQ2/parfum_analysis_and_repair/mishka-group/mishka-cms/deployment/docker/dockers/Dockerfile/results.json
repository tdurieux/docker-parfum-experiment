{
  "startTime": 1674215952810,
  "endTime": 1674215953352,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 97,
        "columnEnd": 108
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Extend from the official Elixir image\nFROM elixir:1.13.3-alpine\n\nRUN apk update && apk add postgresql-client && rm -rf /var/cache/apk/*\n\nWORKDIR /app\n# Set environment to production\n\nARG SECRET_KEY_BASE \\\n    SECRET_KEY_BASE_HTML \\\n    SECRET_KEY_BASE_API \\\n    LIVE_VIEW_SALT \\\n    TOKEN_JWT_KEY \\\n    SECRET_CURRENT_TOKEN_SALT \\\n    SECRET_REFRESH_TOKEN_SALT \\\n    SECRET_ACCESS_TOKEN_SALT \\\n    CMS_DOMAIN_NAME \\\n    API_DOMAIN_NAME \\\n    CMS_PORT \\\n    API_PORT \\\n    PROTOCOL \\\n    EMAIL_SYSTEM \\\n    EMAIL_DOMAIN \\\n    EMAIL_PORT \\\n    EMAIL_SERVER \\\n    EMAIL_HOSTNAME \\\n    EMAIL_USERNAME \\\n    EMAIL_PASSWORD \\\n    WEB_SERVER\n\nENV MIX_ENV=prod \\\n    SECRET_KEY_BASE=$SECRET_KEY_BASE \\\n    SECRET_KEY_BASE_HTML=$SECRET_KEY_BASE_HTML \\\n    SECRET_KEY_BASE_API=$SECRET_KEY_BASE_API \\\n    LIVE_VIEW_SALT=$LIVE_VIEW_SALT \\\n    TOKEN_JWT_KEY=$TOKEN_JWT_KEY \\\n    SECRET_CURRENT_TOKEN_SALT=$SECRET_CURRENT_TOKEN_SALT \\\n    SECRET_REFRESH_TOKEN_SALT=$SECRET_REFRESH_TOKEN_SALT \\\n    SECRET_ACCESS_TOKEN_SALT=$SECRET_ACCESS_TOKEN_SALT \\\n    CMS_DOMAIN_NAME=$CMS_DOMAIN_NAME \\\n    API_DOMAIN_NAME=$API_DOMAIN_NAME \\\n    CMS_PORT=$CMS_PORT \\\n    API_PORT=$API_PORT \\\n    PROTOCOL=$PROTOCOL \\\n    EMAIL_SYSTEM=$EMAIL_SYSTEM \\\n    EMAIL_DOMAIN=$EMAIL_DOMAIN \\\n    EMAIL_PORT=$EMAIL_PORT \\\n    EMAIL_SERVER=$EMAIL_SERVER \\\n    EMAIL_HOSTNAME=$EMAIL_HOSTNAME \\\n    EMAIL_USERNAME=$EMAIL_USERNAME \\\n    EMAIL_PASSWORD=$EMAIL_PASSWORD \\\n    WEB_SERVER=$WEB_SERVER\n\n# Copy all application files\nCOPY . /app\n\nRUN apk add --no-cache --virtual .build-deps inotify-tools make python2 erlang-dev alpine-sdk && apk add --no-cache git\n\n# Install and compile production dependecies\nRUN  cd /app && \\\n        mix local.hex --force && \\\n        mix local.rebar --force && \\\n        mix deps.get --only prod && \\\n        MIX_ENV=prod mix do deps.compile, assets.deploy, phx.digest\n\n\n# Clean Up\nRUN apk del .build-deps && rm -rf deployment\n\n# Run entrypoint.sh script\nCOPY deployment/docker/dockers/entrypoint.sh /app\nRUN chmod +x /app/entrypoint.sh\nCMD [\"/app/entrypoint.sh\"]\n"
}