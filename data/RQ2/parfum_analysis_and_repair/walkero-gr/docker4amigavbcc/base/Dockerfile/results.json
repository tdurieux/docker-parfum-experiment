{
  "startTime": 1674252886663,
  "endTime": 1674252887800,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM walkero/lha-on-docker:latest as lha-image\n\nFROM phusion/baseimage:master\n\nLABEL maintainer=\"Georgios Sokianos <walkero@gmail.com>\"\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\nCOPY --from=lha-image /usr/bin/lha /usr/bin/lha\n\nENV AMIDEV_USER_ID=1000\nENV AMIDEV_GROUP_ID=1000\n\nRUN mkdir -p /opt/vbcc/bin; \\\n    mkdir -p /opt/code; \\\n    mkdir -p /opt/sdk;\n\n# Add amidev user and group\nRUN existing_group=$(getent group \"${AMIDEV_GROUP_ID}\" | cut -d: -f1); \\\n    if [[ -n \"${existing_group}\" ]]; then delgroup \"${existing_group}\"; fi; \\\n    existing_user=$(getent passwd \"${AMIDEV_USER_ID}\" | cut -d: -f1); \\\n    if [[ -n \"${existing_user}\" ]]; then deluser \"${existing_user}\"; fi; \\\n    addgroup --gid ${AMIDEV_GROUP_ID} amidev; \\\n    adduser --system --uid ${AMIDEV_USER_ID} --disabled-password --shell /bin/bash --gid ${AMIDEV_GROUP_ID} amidev; \\\n    sed -i '/^amidev/s/!/*/' /etc/shadow;\n\nENV PACKAGES=\"\\\n    curl \\\n    gcc \\\n    git \\\n    libc-dev \\\n    make \\\n    mc \\\n    splint \\\n    wget\"\n\nRUN apt-get update && apt-get -y --no-install-recommends install ${PACKAGES}; \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*;\n\n# Compile and install vlink\nWORKDIR /tmp\nRUN curl -fsSL \"https://sun.hasenbraten.de/vlink/release/vlink.tar.gz\" -o /tmp/vlink_0.17.tar.gz || exit $?; \\\n    tar xvfz vlink_0.17.tar.gz; rm vlink_0.17.tar.gz \\\n    make -C vlink || exit $?; \\\n    cp /tmp/vlink/vlink /opt/vbcc/bin || exit $?; \\\n    rm -rf /tmp/*;\n\n# Install AMISSL SDK\nRUN curl -fsSL \"https://github.com/jens-maus/amissl/releases/download/4.12/AmiSSL-4.12.lha\" -o /tmp/AmiSSL.lha || exit $?; \\\n    lha -xfq2 AmiSSL.lha; \\\n    mv ./AmiSSL/Developer /opt/sdk/AmiSSL; \\\n    rm -rf /tmp/*;\nENV AMISSL_INC=\"/opt/sdk/AmiSSL/include\"\n\n# Install FlexCat\nRUN curl -fsSL \"https://github.com/adtools/flexcat/releases/download/2.18/FlexCat-2.18.lha\" -o /tmp/FlexCat.lha || exit $?; \\\n    lha -xfq2 FlexCat.lha; \\\n    cp ./FlexCat/Linux-i386/flexcat /usr/bin/; \\\n    rm -rf /tmp/*;\n\n# Add git branch name to bash prompt\nARG BASHFILE=/home/amidev/.bashrc\nRUN cp ~/.bashrc /home/amidev/; \\\n    chown amidev:amidev ${BASHFILE}; \\\n    sed -i '4c\\'\"\\nparse_git_branch() {\\n\\\n  git branch 2> /dev/null | sed -e \\'/^[^*]/d\\' -e \\'s/* \\\\\\(.*\\\\\\)/ (\\\\\\1)/\\'\\n\\\n}\\n\" ${BASHFILE}; \\\n    sed -i '43c\\'\"force_color_prompt=yes\" ${BASHFILE}; \\\n    sed -i '57c\\'\"    PS1=\\'\\${debian_chroot:+(\\$debian_chroot)}\\\\\\[\\\\\\033[01;32m\\\\\\]\\\\\\u@\\\\\\h\\\\\\[\\\\\\033[00m\\\\\\]:\\\\\\[\\\\\\033[01;34m\\\\\\]\\\\\\w\\\\\\[\\\\\\033[01;31m\\\\\\]\\$(parse_git_branch)\\\\\\[\\\\\\033[00m\\\\\\]\\\\\\$ '\" ${BASHFILE}; \\\n    sed -i '59c\\'\"    PS1=\\'\\${debian_chroot:+(\\$debian_chroot)}\\\\\\u@\\\\\\h:\\\\\\w \\$(parse_git_branch)\\$ \\'\" ${BASHFILE};\n\nWORKDIR /opt/code\n"
}