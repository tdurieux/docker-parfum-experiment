{
  "startTime": 1674249034270,
  "endTime": 1674249035249,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Composer install\nFROM composer:latest AS composer\nCOPY ./ /app/\nRUN composer --no-ansi install --no-dev --ignore-platform-reqs\nRUN composer --no-ansi dump-autoload --optimize\n\n# Generate .mo files\nFROM alpine as translation\nRUN apk add --no-cache gettext\nCOPY resources/lang/ /data\nRUN find /data -type f -name '*.po' -exec sh -c 'file=\"{}\"; msgfmt \"${file%.*}.po\" -o \"${file%.*}.mo\"' \\;\n\n# Build the themes\nFROM node:14-alpine as themes\nWORKDIR /app\nCOPY .babelrc .browserslistrc package.json webpack.config.js yarn.lock /app/\nRUN yarn --frozen-lockfile\nCOPY resources/assets/ /app/resources/assets\nRUN yarn build\n\n# Generate application structure\nFROM alpine as data\nCOPY .babelrc .browserslistrc composer.json LICENSE package.json README.md webpack.config.js yarn.lock /app/\nCOPY bin/ /app/bin\nCOPY config/ /app/config\nCOPY db/ /app/db\nCOPY includes/ /app/includes\nCOPY public/ /app/public\nCOPY resources/views /app/resources/views\nCOPY src/ /app/src\nCOPY storage/ /app/storage\n\nCOPY --from=translation /data/ /app/resources/lang\nCOPY --from=composer /app/vendor/ /app/vendor\nCOPY --from=composer /app/composer.lock /app/\nCOPY --from=themes /app/public/assets /app/public/assets/\n\nRUN find /app/storage/ -type f -not -name VERSION -exec rm {} \\;\n\n# Build the PHP/Nginx container\nFROM php:8-fpm-alpine\nWORKDIR /var/www\nRUN apk add --no-cache icu-dev nginx && \\\n    docker-php-ext-install intl pdo_mysql && \\\n    sed -i 's/9000/127.0.0.1:9000/' /usr/local/etc/php-fpm.d/zz-docker.conf\nCOPY docker/entrypoint.sh /\nCOPY docker/nginx.conf /etc/nginx/nginx.conf\nENTRYPOINT /entrypoint.sh\nEXPOSE 80\nCOPY --from=data /app/ /var/www\nRUN chown -R www-data:www-data /var/www/storage/ && \\\n    rm -r /var/www/html\n\nARG VERSION\nRUN if [[ ! -f /var/www/storage/app/VERSION ]] && [[ ! -z \"${VERSION}\" ]]; then \\\n        echo -n \"${VERSION}\" > /var/www/storage/app/VERSION; fi\n\nENV TRUSTED_PROXIES 10.0.0.0/8,::ffff:10.0.0.0/8,\\\n                    127.0.0.0/8,::ffff:127.0.0.0/8,\\\n                    172.16.0.0/12,::ffff:172.16.0.0/12,\\\n                    192.168.0.0/16,::ffff:192.168.0.0/16,\\\n                    ::1/128,fc00::/7,fec0::/10\n"
}