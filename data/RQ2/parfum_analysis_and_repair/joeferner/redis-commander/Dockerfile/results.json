{
  "startTime": 1674255449450,
  "endTime": 1674255450485,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15\n\nWORKDIR /redis-commander\n\n# optional build arg to let the hardening process remove all package manager (apk, npm, yarn) too to not allow\n# installation of packages anymore, default: do not remove \"apk\" to allow others to use this as a base image\n# for own images\nARG REMOVE_APK=0\n\nENV SERVICE_USER=redis\nENV HOME=/redis-commander\nENV NODE_ENV=production\n\n# only single copy command for most parts as other files are ignored via .dockerignore\n# to create less layers\nCOPY . .\n\n# for Openshift compatibility set project config dir itself group root and make it group writeable\nRUN apk update \\\n  && apk upgrade \\\n  && apk add --no-cache ca-certificates dumb-init sed jq nodejs npm yarn \\\n  && update-ca-certificates \\\n  && echo -e \"\\n---- Create runtime user and fix file access rights ----------\" \\\n  && adduser \"${SERVICE_USER}\" -h \"${HOME}\" -G root -S -u 1000 \\\n  && chown -R root.root \"${HOME}\" \\\n  && chown -R \"${SERVICE_USER}\" \"${HOME}/config\" \\\n  && chmod g+w \"${HOME}/config\" \\\n  && chmod ug+r,o-rwx \"${HOME}\"/config/*.json \\\n  && echo -e \"\\n---- Check config file syntax --------------------------------\" \\\n  && for i in \"${HOME}\"/config/*.json; do echo \"checking config file $i\"; cat \"$i\" | jq empty; ret=$?; if [ $ret -ne 0 ]; then exit $ret; fi; done \\\n  && echo -e \"\\n---- Installing app ------------------------------------------\" \\\n  && npm install --production -s \\\n  && echo -e \"\\n---- Cleanup and hardening -----------------------------------\" \\\n  && \"${HOME}/docker/harden.sh\" \\\n  && rm -rf /tmp/* /root/.??* /root/cache /var/cache/apk/* && npm cache clean --force;\n\nUSER 1000\n\nHEALTHCHECK --interval=1m --timeout=2s CMD [\"/redis-commander/bin/healthcheck.js\"]\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"/redis-commander/docker/entrypoint.sh\"]\n\nEXPOSE 8081\n\n"
}