{
  "startTime": 1674219674481,
  "endTime": 1674219675629,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3-alpine as builder\n\nLABEL org.opencontainers.image.title=\"Quit Store\" \\\n      org.opencontainers.image.authors=\"Norman Radtke <radtke@informatik.uni-leipzig.de>, Natanael Arndt <arndt@informatik.uni-leipzig.de>\" \\\n      org.opencontainers.image.source=\"https://github.com/AKSW/QuitStore/\"\n\nRUN apk --no-cache add \\\n    git \\\n    gcc \\\n    musl-dev \\\n    libgit2-dev \\\n    libffi-dev \\\n    libressl-dev \\\n    libssh2-dev \\\n    python3-dev \\\n    openssl-dev \\\n    cargo \\\n    curl\n\nRUN adduser -u 1000 -h /usr/src/app -S quit\nUSER quit\nWORKDIR /usr/src/app\n\nENV PATH=\"/usr/src/app/.local/bin:$PATH\"\nENV POETRY_VERSION=1.1.12\n\n# In contrast to `pip install --prefer-binary poetry` the install script installs poetry in a\n# venv in ~/.local/share/pypoetry/ which can be left behind when copying the files from the build stage\nRUN curl -f -sSL https://install.python-poetry.org \\\n        | python - --version \"${POETRY_VERSION}\"\n\nCOPY poetry.lock pyproject.toml /usr/src/app/\n\nRUN poetry export -f requirements.txt > requirements.txt\nRUN rm ./.local/bin/poetry\n\nUSER root\nRUN pip install --prefer-binary --no-cache-dir -r requirements.txt\n\nRUN ln -s $( python -c \"import site; print(site.getsitepackages()[0])\" ) /usr/local/python-site-packages\n\nUSER quit\n\n# Set default git user\nRUN git config --global user.name QuitStore && git config --global user.email quitstore@example.org\n\nFROM python:3-alpine\n\nRUN adduser -u 1000 -h /usr/src/app -S quit\nWORKDIR /usr/src/app\n\nRUN apk --no-cache add \\\n     libgit2 \\\n     libssh2\n\nRUN ln -s $( python -c \"import site; print(site.getsitepackages()[0])\" ) /usr/local/python-site-packages\nCOPY --from=builder /usr/local/python-site-packages /usr/local/python-site-packages\nCOPY --from=builder /usr/local/bin /usr/local/bin\nCOPY --from=builder /usr/src/app/.gitconfig .\nRUN mkdir /data && chown quit /data\n\nCOPY quit/ /usr/src/app/quit\nCOPY docker/config.ttl /etc/quit/\n\nUSER quit\n\nENV PATH=\"/usr/src/app/.local/bin:${PATH}\"\nENV SSH_AUTH_SOCK=\"/var/run/ssh-agent.sock\"\nENV QUIT_CONFIGFILE=\"/etc/quit/config.ttl\"\n\nVOLUME /data\nVOLUME /etc/quit\nEXPOSE 8080\n\nCMD uwsgi --http 0.0.0.0:8080 -w quit.run -b 40960 --pyargv \"-vv\"\n"
}