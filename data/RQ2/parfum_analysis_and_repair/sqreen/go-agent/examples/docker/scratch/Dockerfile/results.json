{
  "startTime": 1674254942209,
  "endTime": 1674254942922,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Example of a multi-stage dockerfile building the example with Sqreen, and\n# creating a final scratch docker image. This example is special as the scratch\n# image is absolutely empty and more files need to be copied in that case.\n\n# Build docker image\nARG GO_VERSION=1\nFROM golang:$GO_VERSION AS build\n# Workdir out of the GOPATH to enable the Go modules mode.\nWORKDIR /app\nCOPY . .\n\n# Update the go.mod and go.sum dependencies\nRUN go get -d github.com/sqreen/go-agent/sdk/sqreen-instrumentation-tool\nRUN go get -d ./...\n\n# Install Sqreen's instrumentation tool.\n# Go modules make it easier by correctly choosing the version of your go.mod.\nRUN go build -v github.com/sqreen/go-agent/sdk/sqreen-instrumentation-tool\n\n# Compile the app with the previously built tool.\nRUN go build -v -a -toolexec $PWD/sqreen-instrumentation-tool -o hello-sqreen .\n\n# Now prepare a directory with the shared libraries the compiled program file\n# requires by using ldd:\n# 1. Install binutils for ldd\nRUN apt update && apt install --no-install-recommends -y binutils ca-certificates && rm -rf /var/lib/apt/lists/*;\n# 2. Use ldd to list the shared libraries and copy them into deps/\nRUN ldd hello-sqreen | tr -s '[:blank:]' '\\n' | grep '^/' | \\\n    xargs -I % sh -c 'mkdir -p $(dirname deps%); cp % deps%;'\n\n# Final application docker image\nFROM scratch\n# The scratch image is empty so we need to copy the binary and its shared libraries.\nCOPY --from=build /app/deps /app/hello-sqreen /\n# Also copy the CA certificates required by the HTTPS connection to Sqreen.\nCOPY --from=build /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nEXPOSE 8080\nENTRYPOINT [ \"/hello-sqreen\" ]"
}