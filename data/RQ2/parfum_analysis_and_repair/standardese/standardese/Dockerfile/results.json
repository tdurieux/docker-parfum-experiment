{
  "startTime": 1674252993299,
  "endTime": 1674252993937,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS run-dependencies\n\n# We make an effort here to shrink the resulting image by dropping all the\n# static libraries.  It would probably be better not to install any of these\n# libraries and build a static standardese binary.\nRUN apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive TZ=UTC apt-get --no-install-recommends install -y \\\n    libboost-program-options1.71 \\\n    libboost-filesystem1.71 \\\n    libclang-dev \\\n    clang \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && find /usr/lib -name '*.a' -exec rm \\{\\} \\;\n\nFROM ubuntu:20.04 AS build-dependencies\n\nRUN apt-get update \\\n  && DEBIAN_FRONTEND=noninteractive TZ=UTC apt-get --no-install-recommends install -y \\\n    libclang-dev \\\n    clang \\\n    git \\\n    llvm-dev \\\n    cmake \\\n    python3 \\\n    libboost-program-options-dev \\\n    libboost-filesystem-dev \\\n  && rm -rf /var/lib/apt/lists/*\n\nFROM build-dependencies AS built\n\nARG NUM_THREADS=1\n\nCOPY . /src\n\nRUN mkdir /build\n\nWORKDIR /build\n\nRUN cmake -DBUILD_SHARED_LIBS=OFF ../src\nRUN cmake --build . --target standardese_tool -j $NUM_THREADS\n\nFROM run-dependencies AS standardese\n\nRUN useradd -ms /bin/bash standardese\n\nCOPY --from=built /build/tool/standardese /usr/local/bin/standardese\n\nUSER standardese\nWORKDIR /home/standardese\n\nRUN standardese --version\n"
}