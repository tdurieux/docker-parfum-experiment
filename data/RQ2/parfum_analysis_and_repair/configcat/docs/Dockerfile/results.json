{
  "startTime": 1674215397202,
  "endTime": 1674215397825,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:alpine AS base\nRUN rm -rf /usr/share/nginx/html/*\nCOPY ./start.sh start.sh\nCOPY ./nginx/nginx.conf.template /etc/nginx/conf.d/nginx.conf.template\n\n# If you update node version, please also update the node version in the .nvmrc file.\nFROM node:16.15 AS builder\nCOPY ./website/package.json /app/website/package.json\nCOPY ./website/package-lock.json /app/website/package-lock.json\nWORKDIR /app/website\nRUN npm install && npm cache clean --force;\nCOPY ./website /app/website\nRUN npm run build\n\nFROM sonarsource/sonar-scanner-cli:4 AS sonarqube_scan\nWORKDIR /app\nARG SONAR_TOKEN\nCOPY --from=builder /app/website/build /app\n\nRUN if [ -z \"$SONAR_TOKEN\" ] \\ \n  ; then \\\n    echo Sonar scan skipped \\ \n  ; else \\ \n    sonar-scanner \\\n        -Dsonar.host.url=\"https://sonarcloud.io\" \\\n        -Dsonar.login=\"$SONAR_TOKEN\" \\\n        -Dsonar.projectKey=\"configcat_docs\" \\\n        -Dsonar.projectName=\"docs\" \\\n        -Dsonar.organization=\"configcat\" \\\n  ; fi\n\nFROM base as final\nCOPY --from=builder /app/website/build /usr/share/nginx/temphtml\nCMD [\"sh\", \"start.sh\"]\n"
}