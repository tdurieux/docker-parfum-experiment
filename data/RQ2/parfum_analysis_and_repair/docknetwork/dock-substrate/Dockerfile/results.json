{
  "startTime": 1674255789303,
  "endTime": 1674255790198,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic AS builder\n\n# The node will be built in this directory\nWORKDIR /dock-node\n\nRUN apt -y update && \\\n\tapt install -y --no-install-recommends \\\n\tsoftware-properties-common curl git file binutils binutils-dev \\\n\tmake cmake ca-certificates g++ zip dpkg-dev python openssl gettext\\\n\tbuild-essential pkg-config libssl-dev libudev-dev time clang && rm -rf /var/lib/apt/lists/*;\n\n# install rustup\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n\n# rustup directory\nENV PATH /root/.cargo/bin:$PATH\n\n# setup rust nightly channel, pinning specific version as newer versions have a regression\nRUN rustup install nightly\n\n# set default rust compiler\nRUN rustup default nightly\n\n# install wasm toolchain for substrate\nRUN rustup target add wasm32-unknown-unknown --toolchain nightly\n\n#compiler ENV\nENV CC gcc\nENV CXX g++\n\n# Copy code to build directory, instead of only using .dockerignore, we copy elements\n# explicitly. This lets us cache build results while iterating on scripts.\nCOPY runtime runtime\nCOPY node node\nCOPY pallets pallets\nCOPY common common\nCOPY Cargo.toml .\nCOPY Cargo.lock .\n\n# Build node.\nRUN cargo fetch # cache the result of the fetch in case the build gets interrupted\n# Pass the features while building image as `--build-arg features='--features mainnet'` or `--build-arg features='--features testnet'`\nARG features\nRUN cargo build --release $features\n\n# Final stage. Copy the node executable and the script\nFROM debian:stretch-slim\n\nWORKDIR /dock-node\n\nCOPY --from=builder /dock-node/target/release/dock-node .\n\n# curl is required for uploading to keystore\n# note: `subkey insert` is a potential alternarve to curl\nRUN apt -y update \\\n\t&& apt install -y --no-install-recommends curl \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# might need these for uploads to keystore\nCOPY scripts scripts\n\n# include official chainspecs\nCOPY cspec cspec\n\n# expose node ports\nEXPOSE 30333 9933 9944\n\nENV RUST_BACKTRACE 1\n\nENTRYPOINT [\"./dock-node\"]\nCMD []\n"
}