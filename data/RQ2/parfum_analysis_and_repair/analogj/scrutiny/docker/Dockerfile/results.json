{
  "startTime": 1674248064348,
  "endTime": 1674248065426,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 163
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 140
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########################################################################################################################\n# Omnibus Image\n# NOTE: this image requires the `make binary-frontend` target to have been run before `docker build` The `dist` directory must exist.\n########################################################################################################################\n\n\n########\nFROM golang:1.18-bullseye as backendbuild\n\nWORKDIR /go/src/github.com/analogj/scrutiny\nCOPY . /go/src/github.com/analogj/scrutiny\nRUN make binary-clean binary-all WEB_BINARY_NAME=scrutiny\n\n\n########\nFROM debian:bullseye-slim as runtime\nARG TARGETARCH\nEXPOSE 8080\nWORKDIR /opt/scrutiny\nENV PATH=\"/opt/scrutiny/bin:${PATH}\"\nENV INFLUXD_CONFIG_PATH=/opt/scrutiny/influxdb\n\nRUN apt-get update && apt-get install --no-install-recommends -y cron smartmontools ca-certificates curl tzdata \\\n    && update-ca-certificates \\\n    && case ${TARGETARCH} in \\\n            \"amd64\")  S6_ARCH=amd64  ;; \\\n            \"arm64\")  S6_ARCH=aarch64  ;; \\\n        esac \\\n    && curl -f https://github.com/just-containers/s6-overlay/releases/download/v1.21.8.0/s6-overlay-${S6_ARCH}.tar.gz -L -s --output /tmp/s6-overlay-${S6_ARCH}.tar.gz \\\n    && tar xzf /tmp/s6-overlay-${S6_ARCH}.tar.gz -C / \\\n    && rm -rf /tmp/s6-overlay-${S6_ARCH}.tar.gz \\\n    && curl -f -L https://dl.influxdata.com/influxdb/releases/influxdb2-2.2.0-${TARGETARCH}.deb --output /tmp/influxdb2-2.2.0-${TARGETARCH}.deb \\\n    && dpkg -i --force-all /tmp/influxdb2-2.2.0-${TARGETARCH}.deb && rm -rf /var/lib/apt/lists/*;\n\nCOPY /rootfs /\n\nCOPY /rootfs/etc/cron.d/scrutiny /etc/cron.d/scrutiny\nCOPY --from=backendbuild /go/src/github.com/analogj/scrutiny/scrutiny /opt/scrutiny/bin/\nCOPY --from=backendbuild /go/src/github.com/analogj/scrutiny/scrutiny-collector-metrics /opt/scrutiny/bin/\nCOPY dist /opt/scrutiny/web\nRUN chmod +x /opt/scrutiny/bin/scrutiny && \\\n    chmod +x /opt/scrutiny/bin/scrutiny-collector-metrics && \\\n    chmod 0644 /etc/cron.d/scrutiny && \\\n    rm -f /etc/cron.daily/* && \\\n    mkdir -p /opt/scrutiny/web && \\\n    mkdir -p /opt/scrutiny/config && \\\n    chmod -R ugo+rwx /opt/scrutiny/config\n\n\nCMD [\"/init\"]\n"
}