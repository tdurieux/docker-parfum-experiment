{
  "startTime": 1674252033219,
  "endTime": 1674252033984,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########################################################################################################################\n# Web Image\n# NOTE: this image requires the `make binary-frontend` target to have been run before `docker build` The `dist` directory must exist.\n########################################################################################################################\n\n\n########\nFROM golang:1.18-bullseye as backendbuild\n\nWORKDIR /go/src/github.com/analogj/scrutiny\n\nCOPY . /go/src/github.com/analogj/scrutiny\n\nRUN make binary-clean binary-all WEB_BINARY_NAME=scrutiny\n\n\n########\nFROM debian:bullseye-slim as runtime\nEXPOSE 8080\nWORKDIR /opt/scrutiny\nENV PATH=\"/opt/scrutiny/bin:${PATH}\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates curl tzdata && update-ca-certificates && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=backendbuild /go/src/github.com/analogj/scrutiny/scrutiny /opt/scrutiny/bin/\nCOPY dist /opt/scrutiny/web\nRUN chmod +x /opt/scrutiny/bin/scrutiny && \\\n    mkdir -p /opt/scrutiny/web && \\\n    mkdir -p /opt/scrutiny/config && \\\n    chmod -R ugo+rwx /opt/scrutiny/config\nCMD [\"/opt/scrutiny/bin/scrutiny\", \"start\"]\n"
}