{
  "startTime": 1674249671944,
  "endTime": 1674249672661,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\nARG PYTHON_VERSION=3.6\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         build-essential \\\n         cmake \\\n         git \\\n         curl \\\n         vim \\\n         wget \\\n         ca-certificates \\\n         openssh-client \\\n         libjpeg-dev \\\n         libpng-dev &&\\\n     rm -rf /var/lib/apt/lists/*\n\nRUN wget https://www.open-mpi.org/software/ompi/v3.0/downloads/openmpi-3.0.0.tar.gz && \\\n    gunzip -c openmpi-3.0.0.tar.gz | tar xf - && \\\n    cd openmpi-3.0.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/.openmpi --with-cuda && \\\n    make all install\n\nENV PATH=\"$PATH:/home/.openmpi/bin\"\nENV LD_LIBRARY_PATH=\"$LD_LIBRARY_PATH:/home/.openmpi/lib/\"\n\nRUN ompi_info --parsable --all | grep mpi_built_with_cuda_support:value\nRUN wget -O ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh  && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh && \\\n     /opt/conda/bin/conda update conda && \\\n     /opt/conda/bin/conda install -y python=$PYTHON_VERSION numpy pyyaml scipy ipython mkl mkl-include cython typing && \\\n     /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\n# This must be done before pip so that requirements.txt is available\nWORKDIR /opt/pytorch\n\nRUN git clone --recursive https://github.com/pytorch/pytorch\n\nRUN TORCH_CUDA_ARCH_LIST=\"3.5 5.2 6.0 6.1 7.0+PTX\" TORCH_NVCC_FLAGS=\"-Xfatbin -compress-all\" \\\n    CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\" \\\n    cd pytorch/ && \\\n    pip install --no-cache-dir -v .\n\nRUN /opt/conda/bin/conda config --set ssl_verify False\nRUN pip install --no-cache-dir --upgrade pip --trusted-host pypi.org --trusted-host\nRUN pip install --no-cache-dir --trusted-host pypi.org --trusted-host torchvision tensorboardX==1.6.0\n\nWORKDIR /var\nADD mnist.py /var\n\nENTRYPOINT [\"mpirun\", \"-n\", \"1\", \"--allow-run-as-root\", \"python\", \"/var/mnist.py\"]\n"
}