{
  "startTime": 1674215943047,
  "endTime": 1674215944142,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 59,
        "columnStart": 22,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as DEV\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n            curl \\\n            ca-certificates \\\n            python3-pip \\\n            python-dev \\\n            libgfortran3 \\\n            vim \\\n            build-essential \\\n            cmake \\\n            curl \\\n            wget \\\n            libssl-dev \\\n            ca-certificates \\\n            git \\\n            libboost-regex-dev \\\n            gcc-multilib \\\n            g++-multilib \\\n            libgtk2.0-dev \\\n            pkg-config \\\n            unzip \\\n            automake \\\n            libtool \\\n            autoconf \\\n            libpng12-dev \\\n            libcairo2-dev \\\n            libpango1.0-dev \\\n            libglib2.0-dev \\\n            libgtk2.0-dev \\\n            libswscale-dev \\\n            libavcodec-dev \\\n            libavformat-dev \\\n            libgstreamer1.0-0 \\\n            gstreamer1.0-plugins-base \\\n            libusb-1.0-0-dev \\\n            libopenblas-dev && rm -rf /var/lib/apt/lists/*;\nARG DLDT_DIR=/dldt-2018_R5\nRUN git clone --depth=1 -b 2018_R5 https://github.com/opencv/dldt.git ${DLDT_DIR} && \\\n    cd ${DLDT_DIR} && git submodule init && git submodule update --recursive && \\\n    rm -Rf .git && rm -Rf model-optimizer\n\nWORKDIR ${DLDT_DIR}\nRUN curl -f -L -o ${DLDT_DIR}/mklml_lnx_2019.0.1.20180928.tgz https://github.com/intel/mkl-dnn/releases/download/v0.17.2/mklml_lnx_2019.0.1.20180928.tgz && \\\n    tar -xzf ${DLDT_DIR}/mklml_lnx_2019.0.1.20180928.tgz && rm ${DLDT_DIR}/mklml_lnx_2019.0.1.20180928.tgz\nWORKDIR ${DLDT_DIR}/inference-engine\nRUN mkdir build && cd build && cmake -DGEMM=MKL  -DMKLROOT=${DLDT_DIR}/mklml_lnx_2019.0.1.20180928 -DENABLE_MKL_DNN=ON  -DCMAKE_BUILD_TYPE=Release ..\nRUN cd build && make -j4\nRUN pip3 install --no-cache-dir cython numpy && mkdir ie_bridges/python/build && cd ie_bridges/python/build && \\\n    cmake -DInferenceEngine_DIR=${DLDT_DIR}/inference-engine/build -DPYTHON_EXECUTABLE=`which python3` -DPYTHON_LIBRARY=/usr/lib/x86_64-linux-gnu/libpython3.5m.so -DPYTHON_INCLUDE_DIR=/usr/include/python3.5m .. && \\\n    make -j4\n\nFROM ubuntu:16.04 as PROD\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n            curl \\\n            ca-certificates \\\n            python3-pip \\\n            python3-dev \\\n            virtualenv \\\n            libgomp1 && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=DEV /dldt-2018_R5/inference-engine/bin/intel64/Release/lib/*.so /usr/local/lib/\nCOPY --from=DEV /dldt-2018_R5/inference-engine/ie_bridges/python/bin/intel64/Release/python_api/python3.5/openvino/ /usr/local/lib/openvino/\nCOPY --from=DEV /dldt-2018_R5/mklml_lnx_2019.0.1.20180928/lib/lib*.so /usr/local/lib/\nENV LD_LIBRARY_PATH=/usr/local/lib\nENV PYTHONPATH=/usr/local/lib\nCOPY requirements.txt .\nRUN pip3 install --no-cache-dir setuptools wheel\nRUN pip3 install --no-cache-dir -r requirements.txt\nCOPY predict.py classes.py ./\n\n\n\n\n\n\n"
}