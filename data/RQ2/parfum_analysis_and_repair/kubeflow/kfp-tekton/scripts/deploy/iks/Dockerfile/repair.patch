diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kubeflow/kfp-tekton/scripts/deploy/iks/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kubeflow/kfp-tekton/scripts/deploy/iks/Dockerfile/repaired.Dockerfile
index df9990b..d59a2fd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kubeflow/kfp-tekton/scripts/deploy/iks/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kubeflow/kfp-tekton/scripts/deploy/iks/Dockerfile/repaired.Dockerfile
@@ -21,25 +21,25 @@ CMD ["/bin/bash"]
 ENV DEBIAN_FRONTEND=noninteractive
 ENV DEBCONF_NONINTERACTIVE_SEEN=true
 
-RUN apt-get -q update  \
-	&& apt-get install -y apt-utils apt-transport-https ca-certificates curl software-properties-common \
+RUN apt-get -q update \
+	&& apt-get install --no-install-recommends -y apt-utils apt-transport-https ca-certificates curl software-properties-common \
 	&& curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \
 	&& add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable" \
-	&& add-apt-repository ppa:deadsnakes/ppa
+	&& add-apt-repository ppa:deadsnakes/ppa && rm -rf /var/lib/apt/lists/*;
 RUN apt-get -q update  \
 	&& apt-get upgrade -y  \
-	&& apt-get -q clean  \
-	&& apt-get -q install -y sudo apt-transport-https zip unzip bzip2 xz-utils git \
+	&& apt-get -q clean \
+	&& apt-get -q --no-install-recommends install -y sudo apt-transport-https zip unzip bzip2 xz-utils git \
 	dnsutils gettext wget build-essential openssl locales make docker-ce python3-pip \
 	python3.8 python3.8-venv \
 	&& update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 9 \
 	&& update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1 \
-	&& curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash  \
-	&& apt-get -q install git-lfs  \
-	&& git lfs install  \
-	&& apt-get -q clean  \
-	&& rm -rf /var/lib/apt/lists  \
-	&& locale-gen en_US.UTF-8
+	&& curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash \
+	&& apt-get -q -y --no-install-recommends install git-lfs \
+	&& git lfs install \
+	&& apt-get -q clean \
+	&& rm -rf /var/lib/apt/lists \
+	&& locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 RUN wget https://github.com/mikefarah/yq/releases/download/v4.5.1/yq_linux_amd64.tar.gz -O - | \
 	tar xz && mv yq_linux_amd64 /usr/bin/yq
 ENV LANG=en_US.UTF-8
@@ -47,21 +47,21 @@ RUN git config --global http.sslverify false  \
 	&& git config --global url."https://".insteadOf git://  \
 	&& git config --global http.postBuffer 1048576000
 
-RUN pip3 install -U pip setuptools && pip3 install wheel
+RUN pip3 install --no-cache-dir -U pip setuptools && pip3 install --no-cache-dir wheel
 
 ENV NODE_VERSION=v12.20.1
-RUN curl -l https://raw.githubusercontent.com/creationix/nvm/v0.35.3/install.sh -o /tmp/install.sh  \
-	&& chmod a+x /tmp/install.sh  \
-	&& /tmp/install.sh  \
-	&& rm /tmp/install.sh  \
-	&& . /root/.nvm/nvm.sh  \
-	&& nvm install $NODE_VERSION  \
-	&& nvm alias default $NODE_VERSION  \
-	&& cd ~/.nvm/versions/node/$NODE_VERSION/lib/  \
-	&& npm install npm
+RUN curl -f -l https://raw.githubusercontent.com/creationix/nvm/v0.35.3/install.sh -o /tmp/install.sh \
+	&& chmod a+x /tmp/install.sh \
+	&& /tmp/install.sh \
+	&& rm /tmp/install.sh \
+	&& . /root/.nvm/nvm.sh \
+	&& nvm install $NODE_VERSION \
+	&& nvm alias default $NODE_VERSION \
+	&& cd ~/.nvm/versions/node/$NODE_VERSION/lib/ \
+	&& npm install npm && npm cache clean --force;
 
 ARG GO_VERSION=1.15.7
-RUN curl -L https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz | tar -xz  \
+RUN curl -f -L https://golang.org/dl/go${GO_VERSION}.linux-amd64.tar.gz | tar -xz \
     && mv go/ /usr/local/ \
 	&& echo "export GOPATH=\$HOME/go" >> ~/.bashrc \
 	&& echo "export PATH=\$PATH:/usr/local/go/bin:\$GOPATH/bin" >> ~/.bashrc
@@ -73,19 +73,19 @@ RUN wget --quiet --output-document=/usr/local/bin/kubectl https://storage.google
 RUN wget --quiet --output-document=/usr/local/bin/kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.2.1/kustomize_kustomize.v3.2.1_linux_amd64 \
 	&& chmod +x /usr/local/bin/kustomize
 
-RUN curl -L https://github.com/tektoncd/cli/releases/download/v0.11.0/tkn_0.11.0_Linux_x86_64.tar.gz | tar -xz tkn \
+RUN curl -f -L https://github.com/tektoncd/cli/releases/download/v0.11.0/tkn_0.11.0_Linux_x86_64.tar.gz | tar -xz tkn \
     && mv tkn /usr/local/bin/
 
 ARG HELM2_VERSION=v2.17.0
 ARG HELM3_VERSION=v3.4.2
-RUN mkdir -p /tmp/helm_install  \
-	&& curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh  \
-	&& chmod 700 get_helm.sh  \
-	&& ./get_helm.sh --version ${HELM2_VERSION}  \
-	&& mv /usr/local/bin/helm /usr/local/bin/helm2  \
-	&& ./get_helm.sh --version ${HELM3_VERSION}  \
-	&& mv /usr/local/bin/helm /usr/local/bin/helm3  \
-	&& ln -s /usr/local/bin/helm2 /usr/local/bin/helm  \
+RUN mkdir -p /tmp/helm_install \
+	&& curl -f https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get > get_helm.sh \
+	&& chmod 700 get_helm.sh \
+	&& ./get_helm.sh --version ${HELM2_VERSION} \
+	&& mv /usr/local/bin/helm /usr/local/bin/helm2 \
+	&& ./get_helm.sh --version ${HELM3_VERSION} \
+	&& mv /usr/local/bin/helm /usr/local/bin/helm3 \
+	&& ln -s /usr/local/bin/helm2 /usr/local/bin/helm \
 	&& rm -rf /tmp/helm*
 
 ARG JQ_VERSION=1.6
@@ -101,8 +101,8 @@ RUN wget --quiet -O /tmp/Bluemix_CLI.tar.gz https://download.clis.cloud.ibm.com/
 	&& /tmp/Bluemix_CLI/install_bluemix_cli  \
 	&& rm -rf /tmp/Bluemix_CLI*  \
 	&& ibmcloud config --check-version false  \
-	&& mkdir -p /usr/local/Bluemix/bin/cfcli  \
-	&& mkdir -p /usr/local/ibmcloud/bin/cfcli
+	&& mkdir -p /usr/local/Bluemix/bin/cfcli \
+	&& mkdir -p /usr/local/ibmcloud/bin/cfcli && rm /tmp/Bluemix_CLI.tar.gz
 
 RUN ibmcloud plugin install container-service -r Bluemix -v 1.0.208  \
 	&& ibmcloud plugin install container-registry -r Bluemix -v 0.1.497  \