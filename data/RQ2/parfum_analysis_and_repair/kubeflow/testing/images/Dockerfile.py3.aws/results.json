{
  "startTime": 1674220399170,
  "endTime": 1674220400357,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 5,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the docker image used to run the scripts\n# to continuously update our docker files.\n#\n# The context for this docker file should be the root of the kubeflow/testing repository.\nFROM ubuntu:18.04\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y curl git python3.8 python3-distutils wget build-essential && \\\n    ln -sf /usr/bin/python3.8 /usr/bin/python && \\\n    ln -sf /usr/bin/python3.8 /usr/bin/python3 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py\n\nRUN python3.8 -m pip install \\\n    filelock \\\n    fire \\\n    junit-xml \\\n    # See https://github.com/kubeflow/gcp-blueprints/issues/52#issuecomment-645446088\n    # our libs seem to break with 11.0.0\n    kubernetes==12.0.0 \\\n    lint \\\n    oauth2client \\\n    pytest==5.4 \\\n    pytest-timeout==1.4 \\\n    python-dateutil \\\n    retrying \\\n    watchdog \\\n    awscli \\\n    boto3\n\n# Install go\nRUN cd /tmp && \\\n    wget -O /tmp/go.tar.gz https://dl.google.com/go/go1.17.3.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz\n\n# Install the hub CLI for git\nRUN cd /tmp && \\\n    curl -f -LO https://github.com/github/hub/releases/download/v2.13.0/hub-linux-amd64-2.13.0.tgz && \\\n    tar -xvf hub-linux-amd64-2.13.0.tgz && \\\n    mv hub-linux-amd64-2.13.0 /usr/local && \\\n    ln -sf /usr/local/hub-linux-amd64-2.13.0/bin/hub /usr/local/bin/hub && rm hub-linux-amd64-2.13.0.tgz\n\nRUN export KUSTOMIZE_VERSION=3.2.0 && \\\n    cd /tmp && \\\n    curl -f -LO https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64 && \\\n    mv kustomize_${KUSTOMIZE_VERSION}_linux_amd64 /usr/local/bin/kustomize && \\\n    chmod a+x /usr/local/bin/kustomize\n\n# Install kubectl\nRUN curl -f -LO https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.9/2020-08-04/bin/linux/amd64/kubectl && \\\n    mv kubectl /usr/local/bin && \\\n    chmod a+x /usr/local/bin/kubectl\n\n# Install aws-iam-authenticator\nRUN curl -f -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.9/2020-08-04/bin/linux/amd64/aws-iam-authenticator && \\\n    mv aws-iam-authenticator /usr/local/bin && \\\n    chmod a+x /usr/local/bin/aws-iam-authenticator\n\n# Install eksctl\nRUN curl -f --silent --location \"https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp && \\\n    mv /tmp/eksctl /usr/local/bin && \\\n    chmod a+x /usr/local/bin/eksctl\n\n# Install ks\nRUN curl -f --silent --location https://github.com/ksonnet/ksonnet/releases/download/v0.13.1/ks_0.13.1_linux_amd64.tar.gz | tar xz -C /tmp && \\\n    mv /tmp/ks_0.13.1_linux_amd64/ks /usr/local/bin/ks-13 && \\\n    chmod a+x /usr/local/bin/ks-13\n\n# Create go symlinks\nRUN ln -sf /usr/local/go/bin/go /usr/local/bin && \\\n    ln -sf /usr/local/go/bin/gofmt /usr/local/bin && \\\n    ln -sf /usr/local/go/bin/godoc /usr/local/bin\n\nRUN go get -u github.com/jstemmer/go-junit-report\n\nCOPY ./images/checkout.sh /usr/local/bin\nCOPY ./images/checkout_repos.sh /usr/local/bin\nRUN chmod a+x /usr/local/bin/checkout*\n\nCOPY ./images/run_workflows.sh /usr/local/bin\nRUN chmod a+x /usr/local/bin/run_workflows.sh\n\n# AWS BASH SCRIPTS\nCOPY ./images/aws-scripts/*.sh /usr/local/bin/\nRUN chmod a+x /usr/local/bin/*.sh\n\nENV PYTHONPATH /src/kubeflow/testing/py\n\nENV CLOUD_PROVIDER aws\n\nENV PATH=/root/go/bin:${PATH}\n\nENTRYPOINT [\"/usr/local/bin/run_workflows.sh\"]\n"
}