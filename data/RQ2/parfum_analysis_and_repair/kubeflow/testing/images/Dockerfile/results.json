{
  "startTime": 1674255227026,
  "endTime": 1674255228209,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 163,
        "lineEnd": 163,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 186,
        "lineEnd": 186,
        "columnStart": 5,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 152,
        "lineEnd": 152,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 154,
        "lineEnd": 154,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "# Docker image for running E2E tests using Argo.\n#\n# This image is obsolete\n# we should start using Dockerfile.py3 which has python3\nFROM ubuntu:xenial\nMAINTAINER Jeremy Lewi\n\n# Never prompt the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND=noninteractive\nENV TERM=linux\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\nENV KUSTOMIZE_VERSION 3.2.0\n\n# gcc & python-dev are needed so we can install crcmod for gsutil\n# also includes installations for Python3\nRUN set -ex \\\n    && apt-get update -yqq \\\n    && apt-get install -yqq --no-install-recommends \\\n    build-essential \\\n    cmake \\\n    curl \\\n    locales \\\n    uuid-runtime \\\n    wget \\\n    ca-certificates \\\n    ca-certificates-java \\\n    git \\\n    emacs \\\n    jq \\\n    zip \\\n    unzip \\\n    gcc \\\n    openjdk-8-jdk \\\n    ssh \\\n    mercurial \\\n    python-dev \\\n    python-setuptools \\\n    python-pip \\\n    python3-dev \\\n    python3-setuptools \\\n    python3-pip \\\n    && python -V \\\n    && python3 -V \\\n    && update-ca-certificates -f \\\n    && apt-get clean \\\n    && rm -rf \\\n    /var/lib/apt/lists/* \\\n    /tmp/* \\\n    /var/tmp/* \\\n    /usr/share/man \\\n    /usr/share/doc \\\n    /usr/share/doc-base\n\n# Install go\nRUN cd /tmp && \\\n    wget -O /tmp/go.tar.gz https://redirector.gvt1.com/edgedl/go/go1.12.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz\n\n# Install gcloud\nENV PATH=/root/go/bin:/usr/local/go/bin:/google-cloud-sdk/bin:/workspace:${PATH} \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=1\n\nRUN go get github.com/kelseyhightower/kube-rsa\n\nRUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz && \\\n    tar xzf google-cloud-sdk.tar.gz -C / && \\\n    rm google-cloud-sdk.tar.gz && \\\n    /google-cloud-sdk/install.sh \\\n    --disable-installation-options \\\n    --bash-completion=false \\\n    --path-update=false \\\n    --usage-reporting=false && \\\n    gcloud components install alpha beta\n\n# Install Helm\nRUN wget -O /tmp/get_helm.sh \\\n    https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get && \\\n    chmod 700 /tmp/get_helm.sh && \\\n    /tmp/get_helm.sh && \\\n    rm /tmp/get_helm.sh\n\n# Initialize helm\nRUN helm init --client-only\n\n# Install  Node.js\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb http://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update -yqq \\\n    && apt-get install -yqq --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;\n\n\n# Install glide\nRUN cd /tmp && \\\n    wget -O glide-v0.13.0-linux-amd64.tar.gz \\\n    https://github.com/Masterminds/glide/releases/download/v0.13.0/glide-v0.13.0-linux-amd64.tar.gz && \\\n    tar -xvf glide-v0.13.0-linux-amd64.tar.gz && \\\n    mv ./linux-amd64/glide /usr/local/bin/ && rm glide-v0.13.0-linux-amd64.tar.gz\n\n# Install ksonnet. We install multiple versions of ks to support different versions\n# of ksonnet applications. Newer versions of ksonnet are backwards compatible but\n# that can require upgrading the app which isn't something we want to be forced to.\n# (see https://github.com/kubeflow/testing/issues/220).\nRUN cd /tmp && \\\n    wget -O ks.tar.gz \\\n    https://github.com/ksonnet/ksonnet/releases/download/v0.11.0/ks_0.11.0_linux_amd64.tar.gz && \\\n    tar -xvf ks.tar.gz && \\\n    mv ks_0.11.0_linux_amd64/ks /usr/local/bin && \\\n    chmod a+x /usr/local/bin/ks && rm ks.tar.gz\n\nRUN cd /tmp && \\\n    wget -O ks-12.tar.gz \\\n    https://github.com/ksonnet/ksonnet/releases/download/v0.12.0/ks_0.12.0_linux_amd64.tar.gz && \\\n    tar -xvf ks-12.tar.gz && \\\n    mv ks_0.12.0_linux_amd64/ks /usr/local/bin/ks-12 && \\\n    chmod a+x /usr/local/bin/ks-12 && rm ks-12.tar.gz\n\nRUN cd /tmp && \\\n    wget -O ks-13.tar.gz \\\n    https://github.com/ksonnet/ksonnet/releases/download/v0.13.1/ks_0.13.1_linux_amd64.tar.gz && \\\n    tar -xvf ks-13.tar.gz && \\\n    mv ks_0.13.1_linux_amd64/ks /usr/local/bin/ks-13 && \\\n    chmod a+x /usr/local/bin/ks-13 && rm ks-13.tar.gz\n\nRUN wget -O /usr/local/bin/kustomize \\\n    https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64 && \\\n    chmod a+x /usr/local/bin/kustomize\n\nRUN cd /tmp && \\\n    wget https://github.com/google/jsonnet/archive/v0.11.2.tar.gz && \\\n    tar -xvf v0.11.2.tar.gz && \\\n    cd jsonnet-0.11.2 && \\\n    make && \\\n    mv jsonnet /usr/local/bin && \\\n    rm -rf /tmp/v0.11.2.tar.gz && \\\n    rm -rf /tmp/jsonnet-0.11.2\n\nCOPY ./Pipfile ./Pipfile.lock /tmp/\n\n# Install various python libraries for both Python 2 and 3 (for now)\n# Don't upgrade pip for now because it seems to be broken\n# https://github.com/pypa/pip/issues/5240\nRUN cd /tmp/ && \\\n    pip2 install --no-cache-dir -U wheel filelock && \\\n    pip2 install --no-cache-dir pipenv && \\\n    pip2 install --no-cache-dir requests && \\\n    pip2 install --no-cache-dir prometheus_client fire && \\\n    pipenv install --system --two && \\\n    pip3 install --no-cache-dir -U wheel filelock gitpython fire\n\nRUN pip3 install --no-cache-dir pipenv==2018.10.9\nRUN cd /tmp/ && pipenv install --system --three\n\n# Force update of googleapipython client\n# Do this after pipenv because we want to override what pipenv installs.\nRUN pip2 install --no-cache-dir --upgrade google-api-python-client==1.7.0\n\n# Install the hub CLI for git\nRUN cd /tmp && \\\n    curl -f -LO https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz && \\\n    tar -xvf hub-linux-amd64-2.11.2.tgz && \\\n    mv hub-linux-amd64-2.11.2 /usr/local && \\\n    ln -sf /usr/local/hub-linux-amd64-2.11.2/bin/hub /usr/local/bin/hub && rm hub-linux-amd64-2.11.2.tgz\n\nRUN pip install --no-cache-dir yq\n\nCOPY checkout.sh /usr/local/bin\nCOPY checkout_repos.sh /usr/local/bin\nCOPY setup_ssh.sh /usr/local/bin\nRUN chmod a+x /usr/local/bin/checkout* /usr/local/bin/setup_ssh.sh\n\nCOPY run_workflows.sh /usr/local/bin\nRUN chmod a+x /usr/local/bin/run_workflows.sh\n\nCOPY run_release.sh /usr/local/bin\nRUN chmod a+x /usr/local/bin/run_release.sh\n\n# Install docker.\nRUN curl -f https://get.docker.com/ | sh\n\n# Install kubectl\n# We don't install via gcloud because we want 1.10 which is newer than what's in gcloud.\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.14.0/bin/linux/amd64/kubectl && \\\n    mv kubectl /usr/local/bin && \\\n    chmod a+x /usr/local/bin/kubectl\n\n# Work around for https://github.com/ksonnet/ksonnet/issues/298\nENV USER root\n\n# Install Bazel\nRUN cd /tmp && \\\n    wget -O /tmp/bazel-installer.sh https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh && \\\n    chmod +x bazel-installer.sh && \\\n    ./bazel-installer.sh --user\n\nENV PATH=root/bin:${PATH}\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\nRUN export JAVA_HOME\n\n# Add the directory where we will checkout kubeflow/testing\n# which contains shared scripts.\nENV PYTHONPATH /src/kubeflow/testing/py\n\nENTRYPOINT [\"/usr/local/bin/run_workflows.sh\"]\n"
}