diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kubeflow/testing/images/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kubeflow/testing/images/Dockerfile/repaired.Dockerfile
index 48c0bcc..e7b16e8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kubeflow/testing/images/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kubeflow/testing/images/Dockerfile/repaired.Dockerfile
@@ -55,7 +55,7 @@ RUN set -ex \
 # Install go
 RUN cd /tmp && \
     wget -O /tmp/go.tar.gz https://redirector.gvt1.com/edgedl/go/go1.12.linux-amd64.tar.gz && \
-    tar -C /usr/local -xzf go.tar.gz
+    tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz
 
 # Install gcloud
 ENV PATH=/root/go/bin:/usr/local/go/bin:/google-cloud-sdk/bin:/workspace:${PATH} \
@@ -84,14 +84,14 @@ RUN wget -O /tmp/get_helm.sh \
 RUN helm init --client-only
 
 # Install  Node.js
-RUN curl -sL https://deb.nodesource.com/setup_8.x | bash - \
-    && apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \
+    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Install yarn
-RUN curl -sS http://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
     && echo "deb http://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
     && apt-get update -yqq \
-    && apt-get install -yqq --no-install-recommends yarn
+    && apt-get install -yqq --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;
 
 
 # Install glide
@@ -99,7 +99,7 @@ RUN cd /tmp && \
     wget -O glide-v0.13.0-linux-amd64.tar.gz \
     https://github.com/Masterminds/glide/releases/download/v0.13.0/glide-v0.13.0-linux-amd64.tar.gz && \
     tar -xvf glide-v0.13.0-linux-amd64.tar.gz && \
-    mv ./linux-amd64/glide /usr/local/bin/
+    mv ./linux-amd64/glide /usr/local/bin/ && rm glide-v0.13.0-linux-amd64.tar.gz
 
 # Install ksonnet. We install multiple versions of ks to support different versions
 # of ksonnet applications. Newer versions of ksonnet are backwards compatible but
@@ -110,21 +110,21 @@ RUN cd /tmp && \
     https://github.com/ksonnet/ksonnet/releases/download/v0.11.0/ks_0.11.0_linux_amd64.tar.gz && \
     tar -xvf ks.tar.gz && \
     mv ks_0.11.0_linux_amd64/ks /usr/local/bin && \
-    chmod a+x /usr/local/bin/ks
+    chmod a+x /usr/local/bin/ks && rm ks.tar.gz
 
 RUN cd /tmp && \
     wget -O ks-12.tar.gz \
     https://github.com/ksonnet/ksonnet/releases/download/v0.12.0/ks_0.12.0_linux_amd64.tar.gz && \
     tar -xvf ks-12.tar.gz && \
     mv ks_0.12.0_linux_amd64/ks /usr/local/bin/ks-12 && \
-    chmod a+x /usr/local/bin/ks-12
+    chmod a+x /usr/local/bin/ks-12 && rm ks-12.tar.gz
 
 RUN cd /tmp && \
     wget -O ks-13.tar.gz \
     https://github.com/ksonnet/ksonnet/releases/download/v0.13.1/ks_0.13.1_linux_amd64.tar.gz && \
     tar -xvf ks-13.tar.gz && \
     mv ks_0.13.1_linux_amd64/ks /usr/local/bin/ks-13 && \
-    chmod a+x /usr/local/bin/ks-13
+    chmod a+x /usr/local/bin/ks-13 && rm ks-13.tar.gz
 
 RUN wget -O /usr/local/bin/kustomize \
     https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64 && \
@@ -145,28 +145,28 @@ COPY ./Pipfile ./Pipfile.lock /tmp/
 # Don't upgrade pip for now because it seems to be broken
 # https://github.com/pypa/pip/issues/5240
 RUN cd /tmp/ && \
-    pip2 install -U wheel filelock && \
-    pip2 install pipenv && \
-    pip2 install requests && \
-    pip2 install prometheus_client fire && \
+    pip2 install --no-cache-dir -U wheel filelock && \
+    pip2 install --no-cache-dir pipenv && \
+    pip2 install --no-cache-dir requests && \
+    pip2 install --no-cache-dir prometheus_client fire && \
     pipenv install --system --two && \
-    pip3 install -U wheel filelock gitpython fire
+    pip3 install --no-cache-dir -U wheel filelock gitpython fire
 
-RUN pip3 install pipenv==2018.10.9
+RUN pip3 install --no-cache-dir pipenv==2018.10.9
 RUN cd /tmp/ && pipenv install --system --three
 
 # Force update of googleapipython client
 # Do this after pipenv because we want to override what pipenv installs.
-RUN pip2 install --upgrade google-api-python-client==1.7.0
+RUN pip2 install --no-cache-dir --upgrade google-api-python-client==1.7.0
 
 # Install the hub CLI for git
 RUN cd /tmp && \
-    curl -LO  https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz && \
+    curl -f -LO https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz && \
     tar -xvf hub-linux-amd64-2.11.2.tgz && \
     mv hub-linux-amd64-2.11.2 /usr/local && \
-    ln -sf /usr/local/hub-linux-amd64-2.11.2/bin/hub /usr/local/bin/hub
+    ln -sf /usr/local/hub-linux-amd64-2.11.2/bin/hub /usr/local/bin/hub && rm hub-linux-amd64-2.11.2.tgz
 
-RUN pip install yq
+RUN pip install --no-cache-dir yq
 
 COPY checkout.sh /usr/local/bin
 COPY checkout_repos.sh /usr/local/bin
@@ -180,11 +180,11 @@ COPY run_release.sh /usr/local/bin
 RUN chmod a+x /usr/local/bin/run_release.sh
 
 # Install docker.
-RUN curl  https://get.docker.com/ | sh
+RUN curl -f https://get.docker.com/ | sh
 
 # Install kubectl
 # We don't install via gcloud because we want 1.10 which is newer than what's in gcloud.
-RUN  curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.14.0/bin/linux/amd64/kubectl && \
+RUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.14.0/bin/linux/amd64/kubectl && \
     mv kubectl /usr/local/bin && \
     chmod a+x /usr/local/bin/kubectl