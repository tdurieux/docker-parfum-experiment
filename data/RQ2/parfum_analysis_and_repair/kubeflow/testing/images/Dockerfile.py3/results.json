{
  "startTime": 1674248978885,
  "endTime": 1674248980049,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 5,
        "columnEnd": 103
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the docker image used to run the scripts\n# to continuously update our docker files.\n#\n# The context for this docker file should be the root of the kubeflow/testing repository.\nFROM ubuntu:18.04\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y curl git python3.8 python3-distutils wget && \\\n    ln -sf /usr/bin/python3.8 /usr/bin/python && \\\n    ln -sf /usr/bin/python3.8 /usr/bin/python3 && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python get-pip.py\n\nRUN python3.8 -m pip install \\\n    filelock \\\n    fire \\\n    google-api-python-client \\\n    google-cloud \\\n    google-cloud-storage \\\n    junit-xml \\\n    # See https://github.com/kubeflow/gcp-blueprints/issues/52#issuecomment-645446088\n    # our libs seem to break with 11.0.0\n    kubernetes==12.0.0 \\\n    lint \\\n    oauth2client \\\n    pytest==5.4 \\\n    pytest-timeout==1.4 \\\n    python-dateutil \\\n    retrying \\\n    watchdog\n\n# Install go\nRUN cd /tmp && \\\n    wget -O /tmp/go.tar.gz https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz && \\\n    tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz\n\n# Install gcloud\nENV PATH=/root/go/bin:/usr/local/go/bin:/google-cloud-sdk/bin:/workspace:${PATH} \\\n    CLOUDSDK_CORE_DISABLE_PROMPTS=1\n\n# Install the new version of yq which is based on go\nRUN GO111MODULE=on go get github.com/mikefarah/yq/v3\nRUN go get github.com/kelseyhightower/kube-rsa\n\nRUN wget -q https://dl.google.com/dl/cloudsdk/channels/rapid/google-cloud-sdk.tar.gz && \\\n    tar xzf google-cloud-sdk.tar.gz -C / && \\\n    rm google-cloud-sdk.tar.gz && \\\n    /google-cloud-sdk/install.sh \\\n    --disable-installation-options \\\n    --bash-completion=false \\\n    --path-update=false \\\n    --usage-reporting=false && \\\n    gcloud components install alpha beta\n\nRUN gcloud components install anthoscli kpt\n\n# Install the hub CLI for git\nRUN cd /tmp && \\\n    curl -f -LO https://github.com/github/hub/releases/download/v2.13.0/hub-linux-amd64-2.13.0.tgz && \\\n    tar -xvf hub-linux-amd64-2.13.0.tgz && \\\n    mv hub-linux-amd64-2.13.0 /usr/local && \\\n    ln -sf /usr/local/hub-linux-amd64-2.13.0/bin/hub /usr/local/bin/hub && rm hub-linux-amd64-2.13.0.tgz\n\nRUN export KUSTOMIZE_VERSION=3.2.0 && \\\n    cd /tmp && \\\n    curl -f -LO https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64 && \\\n    mv kustomize_${KUSTOMIZE_VERSION}_linux_amd64 /usr/local/bin/kustomize && \\\n    chmod a+x /usr/local/bin/kustomize\n\nRUN export ASM_VERSION=1.4.7-asm.0 && \\\n    cd /tmp && \\\n    curl -f -LO https://storage.googleapis.com/gke-release/asm/istio-${ASM_VERSION}-linux.tar.gz && \\\n    tar -xvf istio-${ASM_VERSION}-linux.tar.gz && \\\n    mv istio-${ASM_VERSION} /usr/local && \\\n    ln -sf /usr/local/istio-${ASM_VERSION}/bin/istioctl /usr/local/bin/istioctl && rm istio-${ASM_VERSION}-linux.tar.gz\n\n\n# Create go symlinks\nRUN ln -sf /usr/local/go/bin/go /usr/local/bin && \\\n    ln -sf /usr/local/go/bin/gofmt /usr/local/bin && \\\n    ln -sf /usr/local/go/bin/godoc /usr/local/bin\n\nRUN go get github.com/kelseyhightower/kube-rsa\n\nCOPY ./images/checkout_repos.sh /usr/local/bin\nCOPY ./images/checkout.sh /usr/local/bin\nCOPY ./images/setup_ssh.sh /usr/local/bin\nRUN chmod a+x /usr/local/bin/checkout* /usr/local/bin/setup_ssh.sh\n\nCOPY ./images/run_workflows.sh /usr/local/bin\nRUN chmod a+x /usr/local/bin/run_workflows.sh\n\nCOPY ./images/run_release.sh /usr/local/bin\nRUN chmod a+x /usr/local/bin/run_release.sh\n\n# Install the hub CLI for git\nRUN cd /tmp && \\\n    curl -f -LO https://github.com/github/hub/releases/download/v2.11.2/hub-linux-amd64-2.11.2.tgz && \\\n    tar -xvf hub-linux-amd64-2.11.2.tgz && \\\n    mv hub-linux-amd64-2.11.2 /usr/local && \\\n    ln -sf /usr/local/hub-linux-amd64-2.11.2/bin/hub /usr/local/bin/hub && rm hub-linux-amd64-2.11.2.tgz\n\n# Install kubectl\n# We don't install via gcloud because we want 1.10 which is newer than what's in gcloud.\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.14.0/bin/linux/amd64/kubectl && \\\n    mv kubectl /usr/local/bin && \\\n    chmod a+x /usr/local/bin/kubectl\n\nRUN go get -u github.com/jstemmer/go-junit-report\n\n# Create a cached copy of the python test scripts so that we don't\n# need to clone the repo just to get access to them\nRUN mkdir -p /srcCache/kubeflow/testing\nCOPY py /srcCache/kubeflow/testing/py\nCOPY notebook_testing /srcCache/kubeflow/testing/notebook_testing\n\nENTRYPOINT [\"/usr/local/bin/run_workflows.sh\"]"
}