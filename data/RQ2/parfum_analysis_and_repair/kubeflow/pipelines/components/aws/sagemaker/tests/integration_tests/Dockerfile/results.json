{
  "startTime": 1674217266415,
  "endTime": 1674217268434,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 153
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 6,
        "columnStart": 49,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/miniconda:4.7.12\n\nRUN apt-get update --allow-releaseinfo-change && apt-get install -y --no-install-recommends \\\n    curl \\\n    wget \\\n    git \\\n    jq && rm -rf /var/lib/apt/lists/*;\n\n# Install eksctl\nRUN curl -f --location \"https://github.com/weaveworks/eksctl/releases/download/v0.86.0/eksctl_$(uname -s)_amd64.tar.gz\" | tar xz -C /tmp \\\n && mv /tmp/eksctl /usr/local/bin\n\n# Install aws-iam-authenticator\nRUN curl -f -S -o /usr/local/bin/aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/aws-iam-authenticator \\\n && chmod +x /usr/local/bin/aws-iam-authenticator\n\n# Install Kubectl\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl \\\n && chmod +x ./kubectl \\\n && mv ./kubectl /usr/local/bin/kubectl\n\n# Install Argo CLI\nRUN curl -f -sSL -o /usr/local/bin/argo https://github.com/argoproj/argo-workflows/releases/download/v2.8.0/argo-linux-amd64 \\\n && chmod +x /usr/local/bin/argo\n\n# Copy conda environment early to avoid cache busting\nCOPY ./components/aws/sagemaker/tests/integration_tests/environment.yml environment.yml\n\n# Create conda environment for running tests and set as start-up environment\nRUN conda env create -f environment.yml\nRUN echo \"source activate kfp_test_env\" > ~/.bashrc\nENV PATH \"/opt/conda/envs/kfp_test_env/bin\":$PATH\n\n# Environment variables to be used by tests\nENV REGION=\"us-west-2\"\nENV SAGEMAKER_EXECUTION_ROLE_ARN=\"arn:aws:iam::1234567890:role/sagemaker-role\"\nENV ROBOMAKER_EXECUTION_ROLE_ARN=\"arn:aws:iam::1234567890:role/robomaker-role\"\nENV S3_DATA_BUCKET=\"kfp-test-data\"\nENV MINIO_LOCAL_PORT=9000\nENV KFP_NAMESPACE=\"kubeflow\"\n\nRUN mkdir pipelines\nCOPY ./ ./pipelines/\n\nWORKDIR /pipelines/components/aws/sagemaker/tests/integration_tests/scripts/\n\nENTRYPOINT [ \"/bin/bash\", \"./run_integration_tests\" ]\n"
}