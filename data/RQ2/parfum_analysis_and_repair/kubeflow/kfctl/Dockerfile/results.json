{
  "startTime": 1674218791152,
  "endTime": 1674218792077,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#**********************************************************************\n# Builder\n# Create a go runtime suitable for building and testing kfctl\nARG GOLANG_VERSION=1.13.7\nFROM golang:$GOLANG_VERSION as builder\n\nARG BRANCH=master\nARG REPO=https://github.com/kubeflow/kubeflow\n\nRUN apt-get update && apt-get install --no-install-recommends -y git unzip jq vim && rm -rf /var/lib/apt/lists/*;\n\n# junit report is used to conver go test output to junit for reporting\nRUN go get -u github.com/jstemmer/go-junit-report\n\n# We need gcloud to get gke credentials.\nRUN if [ \"$(uname -m)\" = \"x86_64\" ]; then \\\n        cd /tmp && \\\n        wget -nv https://dl.google.com/dl/cloudsdk/release/install_google_cloud_sdk.bash && \\\n        chmod +x install_google_cloud_sdk.bash && \\\n        ./install_google_cloud_sdk.bash --disable-prompts --install-dir=/opt/; \\\n    fi\n\nENV PATH /go/bin:/usr/local/go/bin:/opt/google-cloud-sdk/bin:${PATH}\n\n# use go modules\nENV GO111MODULE=on\nENV GOPATH=/go\n# Workaround for https://github.com/kubernetes/gengo/issues/146\nENV GOROOT=/usr/local/go\n\n# Create kfctl folder\nRUN mkdir -p ${GOPATH}/src/github.com/kubeflow/kfctl\nWORKDIR ${GOPATH}/src/github.com/kubeflow\nRUN mkdir kubeflow\nRUN echo REPO=${REPO} branch=${BRANCH}\nRUN git clone ${REPO} --depth=1 --branch ${BRANCH} --single-branch kubeflow\nWORKDIR ${GOPATH}/src/github.com/kubeflow/kfctl\n\n# Download dependencies first to optimize Docker caching.\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n# Copy in the source\nCOPY . .\n\n#**********************************************************************\n#\n# kfctl_base\n#\nFROM builder as kfctl_base\n\nRUN make build-kfctl && \\\n    if [ \"$(uname -m)\" = \"aarch64\" ]; then \\\n        cp bin/arm64/kfctl bin/kfctl; \\\n    fi\n\n#**********************************************************************\n#\n# Final image base\n#\n\nFROM alpine:3.10.1 as barebones_base\nRUN mkdir -p /opt/kubeflow\nWORKDIR /opt/kubeflow\n\n#**********************************************************************\n#\n# kfctl\n#\nFROM barebones_base as kfctl\n\nCOPY --from=kfctl_base /go/src/github.com/kubeflow/kfctl/bin/kfctl /usr/local/bin\nCOPY --from=kfctl_base /go/src/github.com/kubeflow/kfctl/third_party /third_party\nCOPY --from=kfctl_base /go/pkg/mod /third_party/vendor\n\n\nCMD [\"/bin/bash\", \"-c\", \"trap : TERM INT; sleep infinity & wait\"]\n"
}