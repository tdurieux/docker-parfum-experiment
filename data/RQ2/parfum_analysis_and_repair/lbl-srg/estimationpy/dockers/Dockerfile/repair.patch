diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lbl-srg/estimationpy/dockers/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lbl-srg/estimationpy/dockers/Dockerfile/repaired.Dockerfile
index 8540ddd..9fef892 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lbl-srg/estimationpy/dockers/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lbl-srg/estimationpy/dockers/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@
 #
 # This Dockerfile contains all the commands required to set up an environment
 # for using EstimationPy
-# 
+#
 
 FROM ubuntu:14.04
 
@@ -14,12 +14,12 @@ ENV DEBIAN_FRONTEND noninteractive
 # =========== Basic Configuration ===============================================
 # Update the system
 RUN apt-get -y update
-RUN apt-get install -y build-essential git python python-dev python-setuptools make cmake gfortran
+RUN apt-get install --no-install-recommends -y build-essential git python python-dev python-setuptools make cmake gfortran && rm -rf /var/lib/apt/lists/*;
 
 # Install pip for managing python packages
-RUN apt-get install -y python-pip python-lxml
-RUN pip install cython
-RUN apt-get install -y python-lxml
+RUN apt-get install --no-install-recommends -y python-pip python-lxml && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir cython
+RUN apt-get install --no-install-recommends -y python-lxml && rm -rf /var/lib/apt/lists/*;
 
 # Add folders that will contains code before and after installation
 RUN mkdir -p /home/docker/to_install
@@ -33,9 +33,9 @@ RUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers
 # =========== Install JAVA =======================================================
 # Install Java (Open JDK, version 7)
 RUN \
-  apt-get install -y openjdk-7-jdk && \
+  apt-get install --no-install-recommends -y openjdk-7-jdk && \
   rm -rf /var/lib/apt/lists/*
-  
+
 # Define commonly used JAVA_HOME variable
 ENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64
 RUN echo "export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64" >> /root/.bashrc
@@ -44,7 +44,7 @@ RUN echo "export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64" >> /home/docker/.b
 # =========== Install PyFMI dependencies ======================================================
 # Install Sundials ODE, DAE
 COPY ./softwares/sundials-2.5.0.tar.gz /home/docker/to_install/
-RUN cd /home/docker/to_install && tar xzvf ./sundials-2.5.0.tar.gz
+RUN cd /home/docker/to_install && tar xzvf ./sundials-2.5.0.tar.gz && rm ./sundials-2.5.0.tar.gz
 WORKDIR /home/docker/to_install/sundials-2.5.0
 RUN mkdir -p build
 WORKDIR /home/docker/to_install/sundials-2.5.0/build
@@ -55,20 +55,20 @@ WORKDIR /home/docker
 
 # Install BLAS and LAPACK
 RUN apt-get update
-RUN apt-get install -y libblas3gf libblas-doc libblas-dev
-RUN apt-get install -y liblapack3gf liblapack-doc liblapack-dev
+RUN apt-get install --no-install-recommends -y libblas3gf libblas-doc libblas-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y liblapack3gf liblapack-doc liblapack-dev && rm -rf /var/lib/apt/lists/*;
 
 # Other dependencies required before installing pylab and Matplotlib
-RUN apt-get install -y pkgconf libpng-dev libfreetype6-dev
+RUN apt-get install --no-install-recommends -y pkgconf libpng-dev libfreetype6-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Numpy, Matplotlib, SciPy and Pandas
-RUN pip install numpy
-RUN apt-get install -y python-matplotlib
-RUN pip install scipy
-RUN pip install pandas
+RUN pip install --no-cache-dir numpy
+RUN apt-get install --no-install-recommends -y python-matplotlib && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir scipy
+RUN pip install --no-cache-dir pandas
 
 # Install svn and git
-RUN apt-get install -y git subversion
+RUN apt-get install --no-install-recommends -y git subversion && rm -rf /var/lib/apt/lists/*;
 
 # Install assimulo
 RUN cd /home/docker/to_install && svn checkout https://svn.jmodelica.org/assimulo/tags/Assimulo-2.8/
@@ -110,10 +110,10 @@ RUN cd /home/docker/to_install && git clone https://github.com/lbl-srg/Estimatio
 WORKDIR /home/docker
 
 # Install ipython notebook
-RUN pip install "ipython[notebook]"
+RUN pip install --no-cache-dir "ipython[notebook]"
 
 # Change ownership of the content of /home/docker
-RUN chown -R docker:docker /home/docker/ 
+RUN chown -R docker:docker /home/docker/
 
 # Change user to docker
 USER docker