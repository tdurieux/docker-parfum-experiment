diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tcsvn/activity-assistant/build/prod/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tcsvn/activity-assistant/build/prod/Dockerfile/repaired.Dockerfile
index 97c3e64..7b1164e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tcsvn/activity-assistant/build/prod/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tcsvn/activity-assistant/build/prod/Dockerfile/repaired.Dockerfile
@@ -3,26 +3,26 @@ FROM $BUILD_FROM
 
 ENV LANG C.UTF-8
 
-RUN apk add --update python3-dev py3-pip \ 
-    jpeg-dev zlib-dev gcc linux-headers musl-dev 
+RUN apk add --no-cache --update python3-dev py3-pip \
+    jpeg-dev zlib-dev gcc linux-headers musl-dev
 
 # pandas needs very long to intall over pip (has to be built)
 # therefore install from package repo
 # TODO remove --repository when this is in stable
-RUN apk add py3-wheel py3-pillow py3-pygments py3-django py3-zeroconf \
+RUN apk add --no-cache py3-wheel py3-pillow py3-pygments py3-django py3-zeroconf \
     py3-sqlalchemy py3-aiohttp py3-gunicorn py3-pandas py3-kiwisolver \
-    py3-scipy py3-scikit-learn py3-matplotlib py3-mysqlclient nginx\
+    py3-scipy py3-scikit-learn py3-matplotlib py3-mysqlclient nginx \
     --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community
 
 COPY build/prod/requirements.txt .
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 
 ENV DJANGO_ENV='production'
 # is used by collect static below
-ENV PYTHONPATH=/etc/opt/activity_assistant:/opt/activity_assistant 
+ENV PYTHONPATH=/etc/opt/activity_assistant:/opt/activity_assistant
 
 # copy program files
-COPY web/ /opt/activity_assistant/web/ 
+COPY web/ /opt/activity_assistant/web/
 COPY hass_api/ /opt/activity_assistant/hass_api/
 
 COPY services/* /opt/activity_assistant/
@@ -33,7 +33,7 @@ COPY web/act_assist/local_settings/ /etc/opt/activity_assistant/local_settings/
 
 # configure nginx & gunicorn
 COPY build/prod/nginx.conf /etc/nginx/conf.d
-RUN rm /etc/nginx/conf.d/default.conf 
+RUN rm /etc/nginx/conf.d/default.conf
 
 WORKDIR /home
 COPY build/prod/start.sh build/prod/initial_server.json ./