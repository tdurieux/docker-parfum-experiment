{
  "startTime": 1674219958091,
  "endTime": 1674219959009,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_FROM\nFROM $BUILD_FROM\n\nENV LANG C.UTF-8\n\n# todo remove expect\n# to fix pillow error\nRUN apk add --no-cache --update python3-dev py3-pip expect \\\n    jpeg-dev zlib-dev gcc linux-headers musl-dev\n\n# pandas needs very long to intall over pip (has to be built)\n# therefore install from package repo\n# TODO remove --repository when this is in stable\nRUN apk add --no-cache py3-wheel py3-pillow py3-pygments py3-django py3-zeroconf \\\n    py3-sqlalchemy py3-aiohttp py3-gunicorn py3-pandas py3-kiwisolver \\\n    py3-scipy py3-scikit-learn py3-matplotlib \\\n    --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community\n\nCOPY build/prod/requirements.txt .\nRUN pip3 install --no-cache-dir -r requirements.txt\nRUN rm -rf /usr/lib/python3.8/site-packages/numpy\nRUN pip3 install --no-cache-dir -I numpy\nRUN rm -rf /usr/lib/python3.8/site-packages/pandas\nRUN pip3 install --no-cache-dir -I pandas\n\n\nENV DJANGO_ENV='production'\nENV DJANGO_DEBUG=false\nENV PYTHONPATH=/etc/opt/activity_assistant:/opt/activity_assistant\n\n# copy program files\nCOPY web/ /opt/activity_assistant/web/\nCOPY hass_api/ /opt/activity_assistant/hass_api/\n\n#COPY web/frontend/static/ /var/cache/activity_assistant/static/\n#COPY web/frontend/templates/ /var/cache/activity_assistant/static/templates/\nCOPY services/* /opt/activity_assistant/\n\n# copy configuration files\nCOPY web/act_assist/settings.py  /etc/opt/activity_assistant/\nCOPY web/act_assist/local_settings/ /etc/opt/activity_assistant/local_settings/\n\nWORKDIR /home\nCOPY build/prod/start.sh build/prod/initial_server.json ./\nRUN chmod a+x start.sh\n\n# copy static files\nRUN mkdir -p /var/cache/activity_assistant/static/\nRUN python3 /opt/activity_assistant/web/manage.py collectstatic\n\nCMD [ \"./start.sh\" ]"
}