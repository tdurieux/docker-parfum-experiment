{
  "startTime": 1674251906382,
  "endTime": 1674251906895,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine AS deps\nENV NEXT_TELEMETRY_DISABLED 1\n\nRUN apk add --no-cache libc6-compat\nRUN npm i -g pnpm && npm cache clean --force;\n\nWORKDIR /usr/src/micro\n\nCOPY pnpm-lock.yaml pnpm-workspace.yaml ./\nRUN --mount=type=cache,id=pnpm-store,target=/root/.local/share/pnpm/store \\\n    pnpm fetch\n\n\n\n\nFROM node:16-alpine AS builder\nENV NEXT_TELEMETRY_DISABLED 1\n\nWORKDIR /usr/src/micro\n\nRUN apk add --no-cache git\nRUN npm i -g pnpm && npm cache clean --force;\n\nCOPY --from=deps /usr/src/micro .\nCOPY . .\n\nRUN pnpm install --offline --frozen-lockfile\nRUN pnpm build\n\n\n\n\nFROM node:16-alpine AS runner\nENV NEXT_TELEMETRY_DISABLED 1\nENV NODE_ENV production\n\nWORKDIR /usr/src/micro\n\nRUN apk add --no-cache ffmpeg\n\n# copy file dependencies\nCOPY --from=builder /usr/src/micro/packages/web/public ./packages/web/public\nCOPY --from=builder /usr/src/micro/packages/web/next.config.js ./packages/web/next.config.js\n\n# copy web server\nCOPY --from=builder --chown=node:node /usr/src/micro/packages/web/.next/standalone/ ./\nCOPY --from=builder --chown=node:node /usr/src/micro/packages/web/.next/static ./packages/web/.next/static/\n\n# copy api\nCOPY --from=builder --chown=node:node /usr/src/micro/packages/api/dist ./packages/api/dist\nCOPY --from=builder --chown=node:node /usr/src/micro/packages/api/dist ./packages/api/dist\n\n\nCOPY wrapper.sh .\nRUN chmod +x ./wrapper.sh\n\nUSER node\n\nENTRYPOINT [\"./wrapper.sh\"]"
}