{
  "startTime": 1674220857914,
  "endTime": 1674220859027,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:6.12.0\n\n# add static files; the dynamic files in /app/src (JS and CSS) are provided via\n# a volume in the docker-compose.yml file so that we can hot-reload the code\nWORKDIR /app\nADD package.json /app/package.json\nRUN npm install && npm cache clean --force;\nADD public /app/public\nADD docker/run-react.sh /app/server\nCMD /app/server\n\n# note that this dockerfile does not expose port 80 since it wouldn't make sense\n# to run the webpack dev-server in production; for a production deployment,\n# follow the example in project-fortis-pipeline/ops/install-fortis-interfaces.sh\n# to create an optimized build and then upload the resulting assets to a static\n# file host such as azure blob storage; the ports exposed below are a websocket\n# port for hot-reloading and a http port for the webpack dev-server\nEXPOSE 35729 3000\nENV PORT=\"3000\"\n\n# a local deployment of the project-fortis-services is set up via docker-compose\n# if you wish to use a pre-existing service deployment, just override this\n# variable with the transport prefix, hostname, and port of your deployment\n# note that the localhost referred to in this environment variable is the host\n# that is running docker-compose, not the host inside of the docker container\n# this is because the react app is accessed from the users's browser which runs\n# on the docker-compose machine, not inside of the docker container\nENV REACT_APP_SERVICE_HOST=\"http://localhost:8889\"\n\n# active directory configuration\n# you can set up your own active directory application following the setps here:\n# https://github.com/CatalystCode/project-fortis/blob/master/project-fortis-pipeline/docs/aad-setup.md\n# when setting up the application in the \"Redirect URLs\" configuration ensure to\n# add http://localhost:8888 and http://localhost:3000 so that your app works\n# via docker-compose but also if run stand-alone via npm start\n# the log level determines how much information the passport-active-directory\n# module will output; 'info' is usually plenty to trouble-shoot issues\nENV REACT_APP_AD_CLIENT_ID=\"\"\n\n# mapbox configuration\n# the tile layer url defines the style of the map that will be used in the site\n# any v1 static api url should work here; more information about possible style\n# urls is here: https://www.mapbox.com/help/mapbox-with-openlayers/#mapbox-studio-style-or-mapbox-style-url\n# for example, here are some nice alternative map styles:\n# - standard street map:  https://api.mapbox.com/styles/v1/mapbox/streets-v10/tiles/256/{z}/{x}/{y}\n# - custom satellite map: https://api.mapbox.com/styles/v1/erikschlegel/cj82h6wyt9rel2st658r6teto/tiles/256/{z}/{x}/{y}\n# the tile server url defines the style for any static maps used in the app, for\n# example when displaying the location of an event\nENV REACT_APP_MAPBOX_TILE_LAYER_URL=\"https://api.mapbox.com/styles/v1/mapbox/satellite-streets-v10/tiles/256/{z}/{x}/{y}\"\nENV REACT_APP_MAPBOX_TILE_SERVER_URL=\"https://api.mapbox.com/v4/mapbox.streets\"\n"
}