{
  "startTime": 1674249260012,
  "endTime": 1674249260815,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "FROM node:9.2.0\n\n# install cassandra\nENV CASSANDRA_HOME=\"/opt/cassandra\"\nARG CASSANDRA_VERSION=\"3.11.0\"\nARG CASSANDRA_ARTIFACT=\"apache-cassandra-${CASSANDRA_VERSION}\"\nARG CASSANDRA_URL=\"http://archive.apache.org/dist/cassandra/${CASSANDRA_VERSION}/${CASSANDRA_ARTIFACT}-bin.tar.gz\"\nRUN apt-get -qq install -y --no-install-recommends wget ca-certificates && \\\n    wget -qO - ${CASSANDRA_URL} | tar -xzC /opt && \\\n    ln -s /opt/${CASSANDRA_ARTIFACT} ${CASSANDRA_HOME} && rm -rf /var/lib/apt/lists/*;\n\n# install graphql server\nWORKDIR /app\nADD package.json /app/package.json\nRUN npm install && npm cache clean --force;\nADD src /app/src\nADD server.js /app/server.js\nADD config.js /app/config.js\n\n# install scripts\nADD docker/run-node.sh /app/server\nADD docker/run-cqlsh.sh /app/cqlsh\nCMD /app/server\n\n# this is a production service so run it on the standard web port\nEXPOSE 80\nENV PORT=\"80\"\n\n# these settings need to be in sync with project-fortis-spark\nENV PUBLISH_EVENTS_EVENTHUB_PATH=\"published-messages\"\nENV PUBLISH_EVENTS_EVENTHUB_PARTITION=\"\\$Default\"\nENV FORTIS_SB_CONFIG_QUEUE=\"configuration\"\nENV FORTIS_SB_COMMAND_QUEUE=\"command\"\n\n# access keys for azure resources, these are created via the azure deployment\nENV PUBLISH_EVENTS_EVENTHUB_CONNECTION_STRING=\"\"\nENV FORTIS_SB_CONN_STR=\"\"\nENV USER_FILES_BLOB_ACCOUNT_NAME=\"\"\nENV USER_FILES_BLOB_ACCOUNT_KEY=\"\"\nENV APPINSIGHTS_INSTRUMENTATIONKEY=\"\"\n\n# deployment of https://github.com/CatalystCode/featureService\n# a local instance backed by Azure PostgreSQL DB gets set up via docker-compose\nENV FORTIS_FEATURE_SERVICE_HOST=\"http://featureservice\"\n\n# a one-node local cassandra is set up via docker-compose, if you wish to use a\n# larger cluster (e.g. hosted in Azure), just override this variable with the\n# hostname of your cluster\nENV FORTIS_CASSANDRA_HOST=\"cassandra\"\nENV FORTIS_CASSANDRA_PORT=\"9042\"\nENV FORTIS_CASSANDRA_USERNAME=\"cassandra\"\nENV FORTIS_CASSANDRA_PASSWORD=\"cassandra\"\nENV FORTIS_CASSANDRA_REPLICATION_FACTOR=\"3\"\n\n# the cql file at this url is used to set up the initial schema for the\n# cassandra database; you don't want to change this value unless you're\n# developing a schema migration\nENV FORTIS_CASSANDRA_DATA_SCHEMA_URL=\"https://raw.githubusercontent.com/CatalystCode/project-fortis/master/project-fortis-pipeline/ops/storage-ddls/cassandra-setup.cql\"\nENV FORTIS_CASSANDRA_SETTINGS_SCHEMA_URL=\"https://raw.githubusercontent.com/CatalystCode/project-fortis/master/project-fortis-pipeline/ops/storage-ddls/settings-setup.cql\"\n\n# the tar.gz file at this url is used to populate the cassandra database with\n# initial data; this is used for development setup to enable shared test data\n# and also for production to enable importing exported fortis sites\n# the archive at the url is expected to contain an import.cql file which may\n# reference other files in the archive, e.g. for cql `copy from` commands\nENV FORTIS_CASSANDRA_SEED_DATA_URL=\"\"\n\n# if no seed data is specified, use the following two variables to set up the\n# Fortis site site types include 'climate', 'health' and 'humanitarian' and\n# drive default terms that the pipeline will monitor\nENV FORTIS_CASSANDRA_SITE_NAME=\"\"\nENV FORTIS_CASSANDRA_SITE_TYPE=\"\"\n\n# active directory configuration\n# you can set up your own active directory application following the setps here:\n# https://github.com/CatalystCode/project-fortis/blob/master/project-fortis-pipeline/docs/aad-setup.md\n# when setting up the application in the \"Redirect URLs\" configuration ensure to\n# add http://localhost:8888 and http://localhost:3000 so that your app works\n# via docker-compose but also if run stand-alone via npm start\n# the log level determines how much information the passport-active-directory\n# module will output; 'info' is usually plenty to trouble-shoot issues\nENV AD_CLIENT_ID=\"\"\nENV AD_LOG_LEVEL=\"warn\"\n\n# mapbox credentials\n# you can create a new mapbox access token for free at https://www.mapbox.com/signup/\n# the token will be persisted to cassandra on first load and is changable via\n# the admin settings UI afterwards\nENV MAPBOX_ACCESS_TOKEN=\"\"\n\n# cognitive services text analytics credential\n# https://azure.microsoft.com/en-us/services/cognitive-services/text-analytics/\n# the service is used for sentiment analysis in the spark pipeline\n# the token will be persisted to cassandra on first load and is changable via\n# the admin settings UI afterwards\nENV COGNITIVE_TEXT_SERVICE_TOKEN=\"\"\n\n# cognitive services image analysis credential\n# https://azure.microsoft.com/en-us/services/cognitive-services/computer-vision/\n# the service is used for analysis of images in the spark pipeline if a source\n# like instagram is specified\n# the token will be persisted to cassandra on first load and is changable via\n# the admin settings UI afterwards\nENV COGNITIVE_VISION_SERVICE_TOKEN=\"\"\n\n# cognitive services speech transcription credential\n# https://azure.microsoft.com/en-us/services/cognitive-services/speech/\n# the service is used for transcription of radio in the spark pipeline if a\n# source like radio is specified\n# the token will be persisted to cassandra on first load and is changable via\n# the admin settings UI afterwards\nENV COGNITIVE_SPEECH_SERVICE_TOKEN=\"\"\n\n# cognitive services text translation credential\n# https://azure.microsoft.com/en-us/services/cognitive-services/translator-text-api/\n# the service is used for translation of events in the user interface\n# the token will be persisted to cassandra on first load and is changable via\n# the admin settings UI afterwards\nENV COGNITIVE_TRANSLATION_SERVICE_TOKEN=\"\"\n"
}