diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/exercism/website/docker/rails.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/exercism/website/docker/rails.Dockerfile/repaired.Dockerfile
index 4fb2fec..63339cc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/exercism/website/docker/rails.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/exercism/website/docker/rails.Dockerfile/repaired.Dockerfile
@@ -4,10 +4,10 @@ ENV RAILS_ENV=production
 ENV NODE_ENV=production
 ENV NODE_OPTIONS="--max-old-space-size=6144"
 
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
     echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list && \
-    curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
-    apt-get install -y cmake make nodejs yarn graphicsmagick libvips42
+    curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \
+    apt-get install --no-install-recommends -y cmake make nodejs yarn graphicsmagick libvips42 && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /opt/exercism/website
 
@@ -20,7 +20,7 @@ RUN gem install bundler && \
 
 # Only package.json and yarn.lock changes require a new yarn install
 COPY package.json yarn.lock ./
-RUN yarn install
+RUN yarn install && yarn cache clean;
 
 # Copy everything over now
 COPY . ./
@@ -29,7 +29,7 @@ COPY . ./
 RUN bundle exec bootsnap precompile --gemfile app/ lib/
 
 # This compiles the assets
-# During deployment the assets are copied from this image and 
+# During deployment the assets are copied from this image and
 # uploaded into s3. The assets left on the machine are not actually
 # used leave the assets on here.
 RUN bundle exec rails r bin/monitor-manifest