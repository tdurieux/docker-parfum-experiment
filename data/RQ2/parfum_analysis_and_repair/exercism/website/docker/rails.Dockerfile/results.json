{
  "startTime": 1674251178656,
  "endTime": 1674251179760,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:3.1.0-bullseye\n\nENV RAILS_ENV=production\nENV NODE_ENV=production\nENV NODE_OPTIONS=\"--max-old-space-size=6144\"\n\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \\\n    apt-get install --no-install-recommends -y cmake make nodejs yarn graphicsmagick libvips42 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/exercism/website\n\n# Only Gemfile and Gemfile.lock changes require a new bundle install\nCOPY Gemfile Gemfile.lock ./\nRUN gem install bundler && \\\n    bundle config set deployment 'true' && \\\n    bundle config set without 'development test' && \\\n    bundle install\n\n# Only package.json and yarn.lock changes require a new yarn install\nCOPY package.json yarn.lock ./\nRUN yarn install && yarn cache clean;\n\n# Copy everything over now\nCOPY . ./\n\n# Speed things up by precompiling bootsnap\nRUN bundle exec bootsnap precompile --gemfile app/ lib/\n\n# This compiles the assets\n# During deployment the assets are copied from this image and\n# uploaded into s3. The assets left on the machine are not actually\n# used leave the assets on here.\nRUN bundle exec rails r bin/monitor-manifest\nRUN bundle exec rails assets:precompile\n\nENTRYPOINT bin/start_webserver\n"
}