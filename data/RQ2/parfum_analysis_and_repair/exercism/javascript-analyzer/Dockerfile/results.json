{
  "startTime": 1674249425709,
  "endTime": 1674249426426,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts-alpine as builder\n\n# Install SSL ca certificates\nRUN apk update && apk add --no-cache ca-certificates\n\n# Create appuser\nRUN adduser -D -g '' appuser\n\n# get the source code\nWORKDIR /javascript-analyzer\nCOPY . .\n\n# Install without arguments runs yarn prepublish\nRUN yarn install && yarn cache clean;\n\n# Only install the node_modules we need\nRUN yarn install --production --modules-folder './production_node_modules' && yarn cache clean;\n\n# Build a minimal and secured container\nFROM node:lts-alpine\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /javascript-analyzer/package.json /opt/analyzer/package.json\nCOPY --from=builder /javascript-analyzer/bin /opt/analyzer/bin\nCOPY --from=builder /javascript-analyzer/dist /opt/analyzer/dist\nCOPY --from=builder /javascript-analyzer/production_node_modules /opt/analyzer/node_modules\nUSER appuser\nWORKDIR /opt/analyzer\nENTRYPOINT [\"/opt/analyzer/bin/analyze.sh\"]\n"
}