{
  "startTime": 1674256277814,
  "endTime": 1674256278327,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#*******************************************************************************\n#\n#  Dockerfile to build Maiko (Stage 1) and create a Docker image and push it\n#  to DockerHub (stage 2).\n#\n#  Copyright 2022 by Interlisp.org\n#\n# ******************************************************************************\n\n#\n#  Build Maiko Stage\n#\nFROM ubuntu:focal AS builder\nSHELL [\"/bin/bash\", \"-c\"]\nUSER root:root\n# Install build tools\nRUN apt-get update && apt-get install --no-install-recommends -y make clang libx11-dev gcc x11vnc xvfb && rm -rf /var/lib/apt/lists/*;\n# Copy over / clean maiko repo\nCOPY . /app/maiko\nRUN rm -rf /app/maiko/linux*\n# Build maiko\nWORKDIR /app/maiko/bin\nRUN ./makeright x\nRUN if [ \"$(./osversion)\" = \"linux\" ] && [ \"$(./machinetype)\" = \"x86_64\" ]; then ./makeright init; fi\n# Prep for Install Stage\nRUN mv ../$(./osversion).$(./machinetype) ../TRANSFER\n#\n#  Install Maiko Stage\n#\nFROM ubuntu:focal\nARG BUILD_DATE=\"not_available\"\nARG RELEASE_TAG=\"not_available\"\nLABEL name=\"Maiko\"\nLABEL description=\"Virtual machine for Interlisp Medley\"\nLABEL url=\"https://github.com/Interlisp/maiko\"\nLABEL build-time=$BUILD_DATE\nLABEL release_tag=$RELEASE_TAG\nENV MAIKO_RELEASE=$RELEASE_TAG\nENV MAIKO_BUILD_DATE=$BUILD_DATE\nARG BUILD_LOCATION=/app/maiko\nARG INSTALL_LOCATION=/usr/local/interlisp/maiko\n#\nSHELL [\"/bin/bash\", \"-c\"]\nUSER root:root\n# Copy release files into /usr/local/directories\nCOPY --from=builder ${BUILD_LOCATION}/bin/osversion    ${INSTALL_LOCATION}/bin/\nCOPY --from=builder ${BUILD_LOCATION}/bin/machinetype  ${INSTALL_LOCATION}/bin/\nCOPY --from=builder ${BUILD_LOCATION}/bin/config.guess ${INSTALL_LOCATION}/bin/\nCOPY --from=builder ${BUILD_LOCATION}/bin/config.sub   ${INSTALL_LOCATION}/bin/\nCOPY --from=builder ${BUILD_LOCATION}/TRANSFER/lde*    ${INSTALL_LOCATION}/TRANSFER/\nRUN  cd ${INSTALL_LOCATION} && mv TRANSFER \"$(cd bin && ./osversion).$(cd bin/ && ./machinetype)\"\n# Some niceties\nUSER root\nWORKDIR /root\nENTRYPOINT /bin/bash\n"
}