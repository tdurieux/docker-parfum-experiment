{
  "startTime": 1674220198168,
  "endTime": 1674220200248,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 57
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 66,
        "columnStart": 1,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 1,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 1,
        "columnEnd": 50
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine\n\nRUN apk update && \\\n    apk add --no-cache \\\n        build-base \\\n        curl \\\n        curl-dev \\\n        libjpeg-turbo-dev \\\n        libwebp-dev \\\n        linux-headers \\\n        pkgconf \\\n        sqlite \\\n        sqlite-dev \\\n        tiff-dev \\\n        unzip \\\n        zstd-dev\n\n\nWORKDIR /build\n\nARG PROJVERSION=7.2.1\nRUN mkdir proj && cd proj && \\\n    curl -f -sL https://github.com/OSGeo/proj.4/releases/download/$PROJVERSION/proj-$PROJVERSION.tar.gz -o proj-$PROJVERSION.tar.gz && \\\n\tmkdir proj && \\\n\ttar  xzf proj-$PROJVERSION.tar.gz -C proj --strip-components 1 && \\\n    cd proj && \\\n\t#curl -sL http://download.osgeo.org/proj/proj-datumgrid-1.8.zip -o proj-datumgrid-1.8.zip && \\\n\t#unzip -o proj-datumgrid-1.8.zip -d data/ && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-static CFLAGS=\"-O2\" CXXFLAGS=\"-O2\" && \\\n\tmake -j8 && \\\n\tmake install && \\\n    cd /build && rm -rf proj && rm proj-$PROJVERSION.tar.gz\n\nARG GEOSVERSION=3.8.1\nRUN mkdir geos && cd geos && \\\n    curl -f -sL https://download.osgeo.org/geos/geos-$GEOSVERSION.tar.bz2 -o geos.tbz2 && \\\n    tar xf geos.tbz2 && \\\n    cd geos-$GEOSVERSION && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O2\" CXXFLAGS=\"-O2\" && \\\n    make -j8 && \\\n    make install && \\\n    cd /build && rm -rf geos\n\nARG GDALVERSION=3.4.1\nRUN mkdir gdal && cd gdal && \\\n    curl -f -sL https://github.com/OSGeo/gdal/releases/download/v$GDALVERSION/gdal-$GDALVERSION.tar.gz -o gdal.tar.gz && \\\n\tmkdir gdal && \\\n\ttar  xzf gdal.tar.gz -C gdal --strip-components 1 && \\\n    cd gdal && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O2\" CXXFLAGS=\"-O2\" \\\n\t\t\t\t\t--disable-lto \\\n\t\t--disable-static \\\n\t\t--enable-shared \\\n\t\t--disable-all-optional-drivers \\\n\t\t--without-gnm \\\n\t\t--without-qhull \\\n\t\t--without-sqlite3 \\\n\t\t--without-pcidsk \\\n\t\t--without-gif \\\n\t\t--without-pcraster \\\n\t\t--with-geos \\\n\t\t--with-curl \\\n\t\t--with-jpeg \\\n\t\t--with-libtiff=internal \\\n\t\t--with-webp \\\n\t\t--with-zstd \\\n\t\t--with-geotiff=internal && \\\n\tmake -j8 && \\\n\tmake install && \\\n\t\t(for i in \\\n            # BAG driver\n            /usr/local/share/gdal/bag*.xml \\\n            # SXF driver\n            /usr/local/share/gdal/default.rsc \\\n            # unused\n            /usr/local/share/gdal/*.svg \\\n            # unused\n            /usr/local/share/gdal/*.png \\\n            # GML driver\n            /usr/local/share/gdal/*.gfs \\\n            # GML driver\n            /usr/local/share/gdal/gml_registry.xml \\\n            # NITF driver\n            /usr/local/share/gdal/nitf* \\\n            # NITF driver\n            /usr/local/share/gdal/gt_datum.csv \\\n            # NITF driver\n            /usr/local/share/gdal/gt_ellips.csv \\\n            # PDF driver\n            /usr/local/share/gdal/pdf* \\\n            # PDS4 driver\n            /usr/local/share/gdal/pds* \\\n            # S57 driver\n            /usr/local/share/gdal/s57* \\\n            # VDV driver\n            /usr/local/share/gdal/vdv* \\\n            # DXF driver\n            /usr/local/share/gdal/*.dxf \\\n            # DGN driver\n            /usr/local/share/gdal/*.dgn \\\n            # OSM driver\n            /usr/local/share/gdal/osm* \\\n            # GMLAS driver\n            /usr/local/share/gdal/gmlas* \\\n            # PLScenes driver\n            /usr/local/share/gdal/plscenes* \\\n            # netCDF driver\n            /usr/local/share/gdal/netcdf_config.xsd \\\n            # PCIDSK driver\n            /usr/local/share/gdal/pci* \\\n            # ECW and ERS drivers\n            /usr/local/share/gdal/ecw_cs.wkt \\\n            # EEDA driver\n            /usr/local/share/gdal/eedaconf.json \\\n            # MAP driver / ImportFromOZI()\n            /usr/local/share/gdal/ozi_* \\\n       ;do rm $i; done) && \\\n    (for i in /usr/local/lib/*; do strip -s $i 2>/dev/null || /bin/true; done) && \\\n    ldconfig /usr/local/lib && \\\n    cd /build && rm -rf gdal && rm gdal.tar.gz\n\n\n\nENV GOFLAGS=-mod=vendor\n"
}