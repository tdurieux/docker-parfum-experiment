{
  "startTime": 1674252632336,
  "endTime": 1674252633301,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use a fixed version of node\nFROM node:14.4.0\n\n# Install latest chrome dev package and fonts to support major\n# charsets (Chinese, Japanese, Arabic, Hebrew, Thai and a few others)\n# Note: this installs the necessary libs to make the bundled version\n# of Chromium that Puppeteer\n# installs, work.\nRUN apt-get update && apt-get install --no-install-recommends -yq libgconf-2-4 && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y wget --no-install-recommends \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst ttf-freefont \\\n      --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get purge --auto-remove -y curl \\\n    && rm -rf /src/*.deb\n\n# It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n\n# Create working directory\nWORKDIR /usr/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\nCOPY package*.json ./\nRUN npm install && npm cache clean --force;\n\n# Bundle app source\nCOPY . .\n\n# Add user so we don't need --no-sandbox.\nRUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \\\n    && mkdir -p /home/pptruser/Downloads \\\n    && chown -R pptruser:pptruser /home/pptruser \\\n    && chown -R pptruser:pptruser ./node_modules\n\n# Run everything after as non-privileged user.\nUSER pptruser\n\nENTRYPOINT [\"dumb-init\", \"--\"]\nCMD [\"npm\", \"run\", \"start\"]"
}