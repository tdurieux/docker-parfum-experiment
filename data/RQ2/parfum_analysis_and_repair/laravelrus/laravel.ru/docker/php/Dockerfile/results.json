{
  "startTime": 1674255695051,
  "endTime": 1674255695915,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.1-fpm\n\nRUN DEBIAN_FRONTEND=noninteractive\n\n# Install dotdeb repo\nRUN echo \"deb http://packages.dotdeb.org jessie all\" > /etc/apt/sources.list.d/dotdeb.list \\\n    && curl -f -sS https://www.dotdeb.org/dotdeb.gpg | apt-key add - \\\n    && apt-get update\n\n# Install required libs\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        sudo \\\n        git \\\n        libcurl4-openssl-dev \\\n        libedit-dev \\\n        libssl-dev \\\n        libxml2-dev \\\n        libsqlite3-dev \\\n        sqlite3 \\\n        libz-dev \\\n        libpq-dev \\\n        libjpeg-dev \\\n        libpng12-dev \\\n        libfreetype6-dev \\\n        libssl-dev \\\n        libmcrypt-dev \\\n        libjudydebian1 \\\n        libjudy-dev \\\n        cron \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#\n# Configure\n#\nRUN docker-php-ext-configure gd \\\n        --enable-gd-native-ttf \\\n        --with-jpeg-dir=/usr/lib \\\n        --with-freetype-dir=/usr/include/freetype2\n\n#\n# Install extensions\n#\nRUN docker-php-ext-install \\\n        mcrypt \\\n        pdo_pgsql \\\n        pdo_sqlite \\\n        pcntl \\\n        sockets \\\n        bcmath \\\n        opcache \\\n        gd\n\n#\n# Install non standard extensions\n#\nRUN pecl install ev\n\n#\n# Export configs\n#\nCOPY ./opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n\n#\n# Enable non standard extensions\n#\nRUN docker-php-ext-enable \\\n    opcache \\\n    ev\n\n#\n#--------------------------------------------------------------------------\n# Final Touch\n#--------------------------------------------------------------------------\n#\n\nADD ./laravel.ini /usr/local/etc/php/conf.d\nADD ./laravel.pool.conf /usr/local/etc/php-fpm.d/\n\nRUN rm -r /var/lib/apt/lists/*\nRUN rm -rf /tmp/pear\n\n\n#####################################\n# Crontab\n#####################################\nCOPY ./crontab /var/spool/cron/crontabs\n\n\n#####################################\n# Composer:\n#####################################\n\n# Install composer and add its bin to the PATH.\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\nRUN echo \"\" >> ~/.bashrc && \\\n    echo 'export PATH=\"/var/www/laravel.su/vendor/bin:$PATH\"' >> ~/.bashrc\n\nADD ./start.sh /start.sh\nRUN chmod 0755 /start.sh\n\nWORKDIR /var/www/laravel.su\n\nRUN usermod -u 1000 www-data\nUSER www-data\n\nEXPOSE 9000\n\n"
}