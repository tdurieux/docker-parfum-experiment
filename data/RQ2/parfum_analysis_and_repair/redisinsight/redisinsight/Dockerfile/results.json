{
  "startTime": 1674253705331,
  "endTime": 1674253706026,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "FROM node:14.17-alpine as front\nRUN apk update\nRUN apk add --no-cache --virtual .gyp \\\n        python \\\n        make \\\n        g++\nWORKDIR /usr/src/app\nCOPY package.json yarn.lock babel.config.js tsconfig.json ./\nCOPY configs ./configs\nCOPY scripts ./scripts\nCOPY redisinsight ./redisinsight\nRUN SKIP_POSTINSTALL=1 yarn install && yarn cache clean;\nRUN yarn --cwd redisinsight/api\nARG SERVER_TLS_CERT\nARG SERVER_TLS_KEY\nENV SERVER_TLS_CERT=${SERVER_TLS_CERT}\nENV SERVER_TLS_KEY=${SERVER_TLS_KEY}\nRUN yarn build:web\nRUN yarn build:statics\n\nFROM node:14.17-alpine as back\nWORKDIR /usr/src/app\nCOPY redisinsight/api/package.json redisinsight/api/yarn.lock ./\nRUN yarn install && yarn cache clean;\nCOPY redisinsight/api ./\nCOPY --from=front /usr/src/app/redisinsight/api/static ./static\nCOPY --from=front /usr/src/app/redisinsight/api/defaults ./defaults\nRUN yarn run build:prod\n\nFROM node:14.17-slim\n# Set up mDNS functionality, to play well with Redis Enterprise\n# clusters on the network.\nRUN set -ex \\\n && DEPS=\"avahi-daemon libnss-mdns\" \\\n && apt-get update && apt-get install -y --no-install-recommends $DEPS \\\n # Disable nss-mdns's two-label limit heuristic so that host names\n # with multiple labels can be resolved.\n # E.g. redis-12000.rediscluster.local, which has 3 labels.\n # (https://github.com/lathiat/nss-mdns#etcmdnsallow)\n && echo '*' > /etc/mdns.allow \\\n # Configure NSSwitch to use the mdns4 plugin so mdns.allow is respected\n && sed -i \"s/hosts:.*/hosts:          files mdns4 dns/g\" /etc/nsswitch.conf \\\n # We run a `avahi-daemon` without `dbus` so that we can start it as a\n # non-root user. `dbus` requires root permissions to start. And\n # anyway, there's a way to run `avahi-daemon` without `dbus` so why\n # shouldn't we use it.  https://linux.die.net/man/5/avahi-daemon.conf\n && printf \"[server]\\nenable-dbus=no\\n\" >> /etc/avahi/avahi-daemon.conf \\\n && chmod 777 /etc/avahi/avahi-daemon.conf \\\n # We create the directory because when the first time `avahi-daemon`\n # is run, the directory doesn't exist and the `avahi-daemon` must have\n # permissions to create the directory under `/var`.\n && mkdir -p /var/run/avahi-daemon \\\n # Change the permissions of the directories avahi will use.\n && chown avahi:avahi /var/run/avahi-daemon \\\n && chmod 777 /var/run/avahi-daemon && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install -y --no-install-recommends net-tools && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y dbus-x11 gnome-keyring libsecret-1-0 && rm -rf /var/lib/apt/lists/*;\nRUN dbus-uuidgen > /var/lib/dbus/machine-id\n\nARG NODE_ENV=production\nARG SERVER_TLS_CERT\nARG SERVER_TLS_KEY\nENV SERVER_TLS_CERT=${SERVER_TLS_CERT}\nENV SERVER_TLS_KEY=${SERVER_TLS_KEY}\nENV NODE_ENV=${NODE_ENV}\nENV SERVER_STATIC_CONTENT=true\nENV BUILD_TYPE='DOCKER_ON_PREMISE'\nWORKDIR /usr/src/app\nCOPY --from=back /usr/src/app/dist ./redisinsight/api/dist\nCOPY --from=front /usr/src/app/redisinsight/ui/dist ./redisinsight/ui/dist\n\n# Build BE prod dependencies here to build native modules\nCOPY redisinsight/api/package.json redisinsight/api/yarn.lock ./redisinsight/api/\nRUN yarn --cwd ./redisinsight/api install --production && yarn cache clean;\nCOPY redisinsight/api/.yarnclean.prod ./redisinsight/api/.yarnclean\nRUN yarn --cwd ./redisinsight/api autoclean --force\n\nCOPY ./docker-entry.sh ./\nRUN chmod +x docker-entry.sh\n\nEXPOSE 5000\n\nENTRYPOINT [\"./docker-entry.sh\", \"node\", \"redisinsight/api/dist/src/main\"]\n"
}