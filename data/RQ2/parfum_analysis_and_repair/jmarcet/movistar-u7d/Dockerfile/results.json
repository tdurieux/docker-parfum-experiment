{
  "startTime": 1674256103491,
  "endTime": 1674256104454,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 8,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 8,
        "columnEnd": 57
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############## build stage ##############\nFROM python:3.10-alpine as buildstage\n\nARG TARGETARCH\n\nARG ARGTABLE_VER=\"2.13\"\nARG ARGTABLE_VER1=\"2-13\"\n\nCOPY patches/ /tmp/patches/\n\nRUN sed -e 's:alpine\\/[.0-9v]\\+\\/:alpine/edge/:g' -i /etc/apk/repositories\nRUN apk update && apk upgrade --available --prune --purge\nRUN apk add --no-cache autoconf automake build-base curl ffmpeg4-dev git libtool\nRUN \\\n    mkdir -p /tmp/argtable && \\\n    curl -f -o /tmp/argtable-src.tar.gz -L \\\n    \"https://sourceforge.net/projects/argtable/files/argtable/argtable-${ARGTABLE_VER}/argtable${ARGTABLE_VER1}.tar.gz\" && \\\n    tar xf /tmp/argtable-src.tar.gz -C /tmp/argtable --strip-components=1 && \\\n    cp /tmp/patches/config.* /tmp/argtable/ && \\\n    cd /tmp/argtable && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n    make -j 2 && make check && \\\n    make DESTDIR=/tmp/argtable-build install && \\\n    cp -pr /tmp/argtable-build/usr/* /usr/ && rm /tmp/argtable-src.tar.gz\n\nRUN \\\n    git clone https://github.com/erikkaashoek/Comskip.git /tmp/comskip && \\\n    cd /tmp/comskip && \\\n    patch -p1 < /tmp/patches/comskip.patch && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --bindir=/usr/bin --sysconfdir=/config/comskip && \\\n    make -j 2 && \\\n    make DESTDIR=/tmp/comskip-build install\n\n############## runtime stage ##############\nFROM python:3.10-alpine\n\nARG TARGETARCH\n\nENV HOME=/home\nENV PYTHONPATH=/app\nENV TMP=/tmp\n\nRUN sed -e 's:alpine\\/[.0-9v]\\+\\/:alpine/edge/:g' -i /etc/apk/repositories\nRUN apk update && apk upgrade --available --prune --purge\nRUN apk add --no-cache bash curl ffmpeg4-libs ffmpeg git htop mkvtoolnix s6 vim\n\nRUN \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then \\\n        apk add --no-cache libva libva-intel-driver sqlite-libs wrk; \\\n        pip install --no-cache-dir bandit black flake8 ipython pycodestyle; \\\n    fi\n\nCOPY --from=buildstage /tmp/argtable-build/usr/lib/ /usr/lib/\nCOPY --from=buildstage /tmp/comskip-build/usr/ /usr/\n\nWORKDIR /app\n\nRUN apk add --no-cache build-base libffi-dev linux-headers\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nRUN apk del --purge build-base libffi-dev linux-headers\n\nCOPY . .\n\nRUN \\\n    if [ \"$TARGETARCH\" = \"amd64\" ]; then \\\n        flake8 && pycodestyle && bandit *.py; \\\n    fi\n\nCMD /app/mu7d.py\n"
}