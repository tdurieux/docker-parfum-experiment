{
  "startTime": 1674217715176,
  "endTime": 1674217716047,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:jammy\n\n# Install packages that we want to make available at build time\n# Base + Wine 32/64bit + dependencies\nRUN dpkg --add-architecture i386 && \\\n  apt-get update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n  xz-utils ca-certificates \\\n  git wget wine64 wine32 xvfb x11-apps socat && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Create symlinks for lifecycle executables to wrapper. The wrapper creates the Wine environment and calls lifecycle.exe\nCOPY ./bin/lifecycle-wrapper.sh /cnb/lifecycle/analyzer\nCOPY ./bin/lifecycle-wrapper.sh /cnb/lifecycle/builder\nCOPY ./bin/lifecycle-wrapper.sh /cnb/lifecycle/creator\nCOPY ./bin/lifecycle-wrapper.sh /cnb/lifecycle/detector\nCOPY ./bin/lifecycle-wrapper.sh /cnb/lifecycle/exporter\nCOPY ./bin/lifecycle-wrapper.sh /cnb/lifecycle/rebaser\nCOPY ./bin/lifecycle-wrapper.sh /cnb/lifecycle/restorer\nRUN chmod 555 /cnb/lifecycle/*\n\nARG cnb_uid=1000\nARG cnb_gid=1000\n\n# Create user and group\nRUN groupadd cnb --gid ${cnb_gid} && \\\n    useradd --uid ${cnb_uid} --gid ${cnb_gid} -m -s /bin/bash cnb\n\n# Set required CNB information\nENV CNB_USER_ID=${cnb_uid}\nENV CNB_GROUP_ID=${cnb_gid}\n\n# Set required CNB information\nARG stack_id\nENV CNB_STACK_ID=${stack_id}\nLABEL io.buildpacks.stack.id=${stack_id}\n\n# Set user and group (as declared in base image)\nUSER ${CNB_USER_ID}:${CNB_GROUP_ID}\n"
}