{
  "startTime": 1674246352357,
  "endTime": 1674246353731,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 30,
        "columnEnd": 182
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 208
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 128
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 130
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 5,
        "columnEnd": 123
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 63,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 106
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 63,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "FROM rust:latest\n\nRUN cd /tmp \\\n  && wget -q https://github.com/lumen/llvm-project/releases/download/lumen-12.0.0-dev_2020-10-22/clang+llvm-12.0.0-x86_64-linux-gnu.tar.gz \\\n  && tar -xzf clang+llvm-12.0.0-x86_64-linux-gnu.tar.gz \\\n  && rm -f clang+llvm-12.0.0-x86_64-linux-gnu.tar.gz \\\n  && mv clang+llvm-12.0.0-x86_64-linux-gnu /opt/llvm \\\n  && update-alternatives --install /usr/bin/cc cc /opt/llvm/bin/clang 90 \\\n  && update-alternatives --install /usr/bin/c++ c++ /opt/llvm/bin/clang++ 90 \\\n  && update-alternatives --install /usr/bin/cpp cpp /opt/llvm/bin/clang++ 90 \\\n  && update-alternatives --install /usr/bin/ld ld /opt/llvm/bin/lld 90\n\nENV PATH=\"/opt/llvm/bin:${PATH}\"\nENV LLVM_PREFIX=\"/opt/llvm\"\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y cmake jq libc++-dev libc++abi-dev libunwind-dev ninja-build rsync libncursesw5 vim && rm -rf /var/lib/apt/lists/*;\n\n# Our version of LLDB requires the following python3.5 libs\nRUN \\\n  wget -q https://security.debian.org/debian-security/pool/updates/main/p/python3.5/libpython3.5-minimal_3.5.3-1+deb9u3_amd64.deb \\\n  && wget -q https://security.debian.org/debian-security/pool/updates/main/p/python3.5/libpython3.5-stdlib_3.5.3-1+deb9u3_amd64.deb \\\n  && wget -q https://security.debian.org/debian-security/pool/updates/main/p/python3.5/libpython3.5_3.5.3-1+deb9u3_amd64.deb \\\n  && dpkg -i libpython3.5-minimal_3.5.3-1+deb9u3_amd64.deb \\\n  && dpkg -i libpython3.5-stdlib_3.5.3-1+deb9u3_amd64.deb \\\n  && dpkg -i libpython3.5_3.5.3-1+deb9u3_amd64.deb\n\n\n# Set up base Rust, our build script will take care of most things\nRUN rustup default nightly-2021-01-29 \\\n  && rustup target add wasm32-unknown-unknown --toolchain nightly-2021-01-29 \\\n  && cargo install cargo-make\n\n# Install Firefox\nENV FIREFOX_VERSION=69.0\n\nRUN cd /tmp \\\n  && wget https://download-installer.cdn.mozilla.net/pub/firefox/releases/${FIREFOX_VERSION}/linux-x86_64/en-US/firefox-${FIREFOX_VERSION}.tar.bz2 \\\n  && tar -xvjf /tmp/firefox-${FIREFOX_VERSION}.tar.bz2 -C /opt \\\n  && ln -s /opt/firefox/firefox /usr/local/bin/firefox \\\n  && rm -rf /tmp/firefox.* \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y libgtk-3-0 libx11-xcb1 libdbus-glib-1-2 \\\n  && firefox --version && rm /tmp/firefox-${FIREFOX_VERSION}.tar.bz2 && rm -rf /var/lib/apt/lists/*;\n\n# Install Chrome\nRUN curl --silent --show-error --location --fail --retry 3 --output /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb \\\n    && (dpkg -i /tmp/google-chrome-stable_current_amd64.deb || apt-get -fy install)  \\\n    && rm -rf /tmp/google-chrome-stable_current_amd64.deb \\\n    && sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox --no-sandbox|g' \\\n        \"/opt/google/chrome/google-chrome\" \\\n    && google-chrome --version\n\nRUN CHROME_VERSION=\"$(google-chrome --version)\" \\\n    && export CHROMEDRIVER_RELEASE=\"$(echo $CHROME_VERSION | sed 's/^Google Chrome //')\" && export CHROMEDRIVER_RELEASE=${CHROMEDRIVER_RELEASE%%.*} \\\n    && CHROMEDRIVER_VERSION=$( curl --silent --show-error --location --fail --retry 4 --retry-delay 5 https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROMEDRIVER_RELEASE}) \\\n    && curl --silent --show-error --location --fail --retry 4 --retry-delay 5 --output /tmp/chromedriver_linux64.zip \"https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip\" \\\n    && cd /tmp \\\n    && unzip chromedriver_linux64.zip \\\n    && rm -rf chromedriver_linux64.zip \\\n    && mv chromedriver /usr/local/bin/chromedriver \\\n    && chmod +x /usr/local/bin/chromedriver \\\n    && chromedriver --version\n\n# Install Node.js\nENV NODE_VERSION 12.10.0\nENV ARCH x64\n\nRUN curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\nENV YARN_VERSION 1.17.3\n\nRUN curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && mkdir -p /opt \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz\n\n# Install Erlang (do we actually need this anymore?)\nRUN wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb \\\n  && dpkg -i erlang-solutions_2.0_all.deb \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y esl-erlang && rm -rf /var/lib/apt/lists/*;\n"
}