{
  "startTime": 1674253585998,
  "endTime": 1674253586734,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim\n\nWORKDIR /\n\nRUN pip3 install --no-cache-dir poetry\n\nCOPY poetry.lock /\nCOPY pyproject.toml /\n\n# fake package to make Poetry happy (we will install the actual contents in the later stage)\nRUN mkdir /kube_web && touch /kube_web/__init__.py && touch /README.md\n\nRUN poetry config virtualenvs.create false && \\\n    poetry install --no-interaction --no-dev --no-ansi\n\nFROM python:3.8-slim\n\nWORKDIR /\n\n# copy pre-built packages to this image\nCOPY --from=0 /usr/local/lib/python3.8/site-packages /usr/local/lib/python3.8/site-packages\n\n# now copy the actual code we will execute (poetry install above was just for dependencies)\nCOPY kube_web /kube_web\n\nARG VERSION=dev\n\n# replace build version in package and\n# add build version to static asset links to break browser cache\n# see also \"version\" in Makefile\nRUN sed -i \"s/^__version__ = .*/__version__ = \\\"${VERSION}\\\"/\" /kube_web/__init__.py && \\\n    sed -i \"s/v=[0-9A-Za-z._-]*/v=${VERSION}/g\" /kube_web/templates/base.html\n\nENTRYPOINT [\"/usr/local/bin/python\", \"-m\", \"kube_web\"]\n"
}