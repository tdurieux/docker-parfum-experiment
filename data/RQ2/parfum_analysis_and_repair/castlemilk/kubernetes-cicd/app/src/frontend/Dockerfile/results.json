{
  "startTime": 1674220842674,
  "endTime": 1674220843135,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 12,
        "columnEnd": 28
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:10.12.0 as build-deps\n\nWORKDIR /usr/src/app\nCOPY package.json yarn.lock ./\n\n# stage 1 - install packages\nRUN yarn && yarn cache clean;\n\n# stage 2 - build app\nCOPY . ./\nRUN yarn build && yarn cache clean;\n\n# stage 3 - copy build artifacts to slim nginx server\nFROM nginx:1.12-alpine\nCOPY --from=build-deps /usr/src/app/build /usr/share/nginx/html\nWORKDIR /usr/share/nginx/html\nCOPY ./env.sh .\nCOPY .env .\nRUN apk add --no-cache bash\nRUN chmod +x env.sh\nEXPOSE 80\nCMD [\"/bin/bash\", \"-c\", \"/usr/share/nginx/html/env.sh && nginx -g \\\"daemon off;\\\"\"]\n"
}