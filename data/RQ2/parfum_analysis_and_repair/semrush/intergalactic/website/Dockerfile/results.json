{
  "startTime": 1674255746843,
  "endTime": 1674255747623,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ###\n# Dev instance start:\n# docker build -t intergalactic-site . &&  docker rm intergalactic-site ; docker run -p 8080:8080 --name intergalactic-site intergalactic-site\n# ###\n\nFROM nginx:stable-alpine\nRUN apk add --no-cache bash\nRUN apk add --no-cache python3 g++ make\nRUN apk add --no-cache --update npm yarn\n\nWORKDIR /app\n\nCOPY ./docker-entrypoint.sh ./docker-entrypoint.sh\nRUN chmod +x ./docker-entrypoint.sh\n\nCOPY ./server ./server\nCOPY ./dist ./dist\n\nCOPY ./server/package.json ./package.json\nCOPY ./server/yarn.lock ./yarn.lock\nRUN yarn install --production --silent --non-interactive --frozen-lockfile && yarn cache clean;\n\nCOPY ./dist /app/static\n\nCOPY ./nginx.conf /etc/nginx/nginx.conf\n\nEXPOSE 8080\n\nCMD [\"./docker-entrypoint.sh\"]\n"
}