{
  "startTime": 1674253155106,
  "endTime": 1674253156277,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 2,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG GRIDAPPSD_BASE_VERSION=:master\nFROM gridappsd/gridappsd_base${GRIDAPPSD_BASE_VERSION}\n\nARG TIMESTAMP\n\n# Get the gridappsd-sensor-simulator from the proper repository\nRUN if [ ! -d ${TEMP_DIR} ]; then mkdir ${TEMP_DIR}; fi \\\n  && cd ${TEMP_DIR} \\\n  && git clone https://github.com/GRIDAPPSD/gridappsd-sensor-simulator -b develop  \\\n  && cd gridappsd-sensor-simulator \\\n  && pip3 install --no-cache-dir -r requirements.txt \\\n  && mkdir -p /gridappsd/services/gridappsd-sensor-simulator \\\n  && rm .git -rf \\\n  && cp -r * /gridappsd/services/gridappsd-sensor-simulator \\\n  && cp /gridappsd/services/gridappsd-sensor-simulator/sensor_simulator.config /gridappsd/services/ \\\n  && rm -rf /root/.cache/pip/wheels \\\n  && cd \\\n  && rm -rf ${TEMP_DIR}\n\n# Get the gridappsd-voltage-violation from the proper repository\nRUN mkdir ${TEMP_DIR} \\\n  && cd ${TEMP_DIR} \\\n  && git clone https://github.com/GRIDAPPSD/gridappsd-voltage-violation -b develop \\\n  && cd gridappsd-voltage-violation \\\n  && mkdir -p /gridappsd/services/gridappsd-voltage-violation \\\n  && rm .git -rf \\ \n  && cp -r * /gridappsd/services/gridappsd-voltage-violation \\\n  && cp /gridappsd/services/gridappsd-voltage-violation/voltage-violation.config /gridappsd/services/ \\\n  && cd \\\n  && rm -rf ${TEMP_DIR}\n\n# Get the gridappsd-dnp3 from the proper repository\nRUN mkdir ${TEMP_DIR} \\\n  && cd ${TEMP_DIR} \\\n  && git clone https://github.com/GRIDAPPSD/gridappsd-dnp3 -b develop \\\n  && cd gridappsd-dnp3 \\\n  && mkdir -p /gridappsd/services/gridappsd-dnp3 \\\n  && rm .git -rf \\ \n  && cp -r dnp3/* /gridappsd/services/gridappsd-dnp3 \\\n  && cp /gridappsd/services/gridappsd-dnp3/dnp3.config /gridappsd/services/ \\\n  && cd \\\n  && rm -rf ${TEMP_DIR}\n\n# Get the gridappsd-alarms from the proper repository\nRUN mkdir ${TEMP_DIR} \\\n  && cd ${TEMP_DIR} \\\n  && git clone https://github.com/GRIDAPPSD/gridappsd-alarms -b develop \\\n  && cd gridappsd-alarms \\\n  && mkdir -p /gridappsd/services/gridappsd-alarms \\\n  && rm .git -rf \\ \n  && cp -r * /gridappsd/services/gridappsd-alarms \\\n  && cp /gridappsd/services/gridappsd-alarms/gridappsd-alarms.config /gridappsd/services/ \\\n  && cd \\\n  && rm -rf ${TEMP_DIR}\n\n# Get the topology-processor from the proper repository\nRUN mkdir ${TEMP_DIR} \\\n  && cd ${TEMP_DIR} \\\n  && git clone https://github.com/GRIDAPPSD/topology-processor -b main \\\n  && cd topology-processor/topology_processor \\\n  && mkdir -p /gridappsd/services/gridappsd-topology-processor \\\n  && rm .git -rf \\ \n  && cp -r * /gridappsd/services/gridappsd-topology-processor \\\n  && cp /gridappsd/services/gridappsd-topology-processor/gridappsd-topology-service.config /gridappsd/services/ \\\n  && cd \\\n  && rm -rf ${TEMP_DIR}\n\n\n# Copy initial applications and services into the container.\n#\n# NOTE: developers should mount a volume over the top of these or\n#       mount other items specifically in the /gridappsd/appplication\n#       and/or /gridappsd/services location in order for gridappsd\n#       to be able to \"see\" and ultimately start them.\nCOPY ./services /gridappsd/services\nCOPY ./gov.pnnl.goss.gridappsd/conf /gridappsd/conf\nCOPY ./entrypoint.sh /gridappsd/entrypoint.sh\nCOPY ./requirements.txt /gridappsd/requirements.txt\nRUN chmod +x /gridappsd/entrypoint.sh\n\n# Add the applications directory which is necessary for gridappsd to operate.\nRUN if [ ! -d /gridappsd/applications ] ; then  mkdir /gridappsd/applications ; fi\n\nCOPY ./run-gridappsd.sh /gridappsd/run-gridappsd.sh\nRUN chmod +x /gridappsd/run-gridappsd.sh\nRUN ln -s run-gridappsd.sh run-docker.sh\n\n# Add the opendss command and library to the container\nCOPY ./opendss/opendsscmd /usr/local/bin\nCOPY ./opendss/liblinenoise.so /usr/local/lib\nCOPY ./opendss/libklusolve.so /usr/local/lib\nRUN chmod +x /usr/local/bin/opendsscmd && \\\n  ldconfig\n\n\n# This is the location that is built using the ./gradlew export command from\n# the command line.  When building this image we must make sure to have run that\n# before executing this script.\nCOPY ./gov.pnnl.goss.gridappsd/generated/distributions/executable/run.bnd.jar /gridappsd/lib/run.bnd.jar\n\nRUN pip install --no-cache-dir -r /gridappsd/requirements.txt && \\\n  pip install --no-cache-dir -r /gridappsd/services/fncsgossbridge/requirements.txt && \\\n  rm -rf /root/.cache/pip/wheels\n\n# Should match what is in conf/pnnl.goss.core.server.cfg and\n# conf/pnnl.goss.core.client.cfg\nEXPOSE 61616 61613 61614 8000-9000\n\nWORKDIR /gridappsd\n\nRUN echo $TIMESTAMP > /gridappsd/dockerbuildversion.txt\n\n# Add gridappsd user , sudoers, mysql configuration, log directory\nRUN useradd -m gridappsd \\\n    && if [ -d /etc/sudoers.d ] ; then echo \"gridappsd    ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/gridappsd ; fi \\\n    && echo \"[client]\\nuser=gridappsd\\npassword=gridappsd1234\\ndatabase=gridappsd\\nhost=mysql\" > /home/gridappsd/.my.cnf \\\n    && chown gridappsd:gridappsd /home/gridappsd/.my.cnf \\\n    && mkdir /gridappsd/log \\\n    && chown gridappsd:gridappsd /gridappsd/log\n\nUSER gridappsd\n\nENTRYPOINT [\"/gridappsd/entrypoint.sh\"]\nCMD [\"gridappsd\"]\n"
}