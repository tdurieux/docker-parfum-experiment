diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/debiki/talkyard/images/web/old/Dockerfile.nginx-old b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/debiki/talkyard/images/web/old/Dockerfile.nginx-old/repaired.Dockerfile
index ce5e7b5..60a9213 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/debiki/talkyard/images/web/old/Dockerfile.nginx-old
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/debiki/talkyard/images/web/old/Dockerfile.nginx-old/repaired.Dockerfile
@@ -156,11 +156,13 @@ RUN \
 		ha.pool.sks-keyservers.net \
 		hkp://keyserver.ubuntu.com:80 \
 		hkp://p80.pool.sks-keyservers.net:80 \
-		pgp.mit.edu \
-	; do \
+		pgp.mit.edu; do \
+			
+	
 		echo "Fetching GPG key $GPG_KEYS from $server"; \
-		gpg --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break; \
-	done; \
+		gpg --batch --keyserver "$server" --keyserver-options timeout=10 --recv-keys "$GPG_KEYS" && found=yes && break; \
+	done \
+	; \
 	test -z "$found" && echo >&2 "error: failed to fetch GPG key $GPG_KEYS" && exit 1; \
 	gpg --batch --verify nginx.tar.gz.asc nginx.tar.gz \
 	&& rm -rf "$GNUPGHOME" nginx.tar.gz.asc \
@@ -168,21 +170,21 @@ RUN \
 	&& tar -zxC /usr/src -f nginx.tar.gz \
 	&& rm nginx.tar.gz \
 	&& cd /usr/src/nginx-$NGINX_VERSION \
-	# generate a debug build, will be at /usr/sbin/nginx-debug
-	&& ./configure $CONFIG \
-	    # Enables debug log messages: (otherwise they won't get logged at all, never?)
-	    --with-debug \
-	    # So can backtrace core dumps: [NGXCORED]
-	    --with-cc-opt='-O0 -ggdb3 -fvar-tracking-assignments' \
+	# generate a debug build, will be at /usr/sbin/nginx-debug \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG \
+					# Enables debug log messages: (otherwise they won't get logged at all, never?)
+					--with-debug \
+					# So can backtrace core dumps: [NGXCORED]
+					--with-cc-opt='-O0 -ggdb3 -fvar-tracking-assignments' \
 	&& make -j$(getconf _NPROCESSORS_ONLN) \
 	&& mv objs/nginx objs/nginx-debug \
 	# && mv objs/ngx_http_xslt_filter_module.so objs/ngx_http_xslt_filter_module-debug.so \
 	# && mv objs/ngx_http_image_filter_module.so objs/ngx_http_image_filter_module-debug.so \
 	# && mv objs/ngx_http_geoip_module.so objs/ngx_http_geoip_module-debug.so \
 	# && mv objs/ngx_stream_geoip_module.so objs/ngx_stream_geoip_module-debug.so \
-	&& ./configure $CONFIG \
-	    # Let's incl debug symbols in prod builds too (but not -O0).  [NGXCORED]
-	    --with-cc-opt='-ggdb' \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $CONFIG \
+					# Let's incl debug symbols in prod builds too (but not -O0).  [NGXCORED]
+					--with-cc-opt='-ggdb' \
 	&& make -j$(getconf _NPROCESSORS_ONLN) \
 	&& make install \
 	&& rm -rf /etc/nginx/html/ \
@@ -205,21 +207,21 @@ RUN \
 	# && install -m755 objs/ngx_http_geoip_module-debug.so /usr/lib/nginx/modules/ngx_http_geoip_module-debug.so \
 	# && install -m755 objs/ngx_stream_geoip_module-debug.so /usr/lib/nginx/modules/ngx_stream_geoip_module-debug.so \
 	# && ln -s ../../usr/lib/nginx/modules /etc/nginx/modules \
-	\
+
 	# Don't, then wouldn't be able to backtrace core dumps.  [NGXCORED]
 	#&& strip /usr/sbin/nginx* \
-	\
+
 	# All modules above commented out. And want to keep debug symbols, anyway.
 	# && strip /usr/lib/nginx/modules/*.so \
 	&& rm -rf /usr/src/nginx-$NGINX_VERSION \
-	\
+
 	# Bring in gettext so we can get `envsubst`, then throw
 	# the rest away. To do this, we need to install `gettext`
 	# then move `envsubst` out of the way so `gettext` can
 	# be deleted completely, then move `envsubst` back.
 	&& apk add --no-cache --virtual .gettext gettext \
 	&& mv /usr/bin/envsubst /tmp/ \
-	\
+
 	&& runDeps="$( \
 		scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/lib/nginx/modules/*.so /tmp/envsubst \
 			| tr ',' '\n' \
@@ -230,11 +232,11 @@ RUN \
 	&& apk del .build-deps \
 	&& apk del .gettext \
 	&& mv /tmp/envsubst /usr/local/bin/ \
-	\
+
 	# Bring in tzdata so users could set the timezones through the environment
 	# variables
 	&& apk add --no-cache tzdata \
-	\
+
 	# forward request and error logs to docker log collector
 	&& ln -sf /dev/stdout /var/log/nginx/access.log \
 	&& ln -sf /dev/stderr /var/log/nginx/error.log