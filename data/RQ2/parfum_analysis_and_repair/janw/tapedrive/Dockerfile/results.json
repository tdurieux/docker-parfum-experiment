{
  "startTime": 1674218205187,
  "endTime": 1674218206337,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts as frontend\nLABEL maintainer=\"Jan Willhaus <mail@janwillhaus.de\"\n\nWORKDIR /frontend\nCOPY package-lock.json package.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY webpack.config.js ./\nCOPY frontend ./frontend\nRUN npm run build\n\nFROM registry.gitlab.com/janw/python-poetry:3.7-alpine as poetry-export\nCOPY pyproject.toml poetry.lock ./\nRUN poetry export -f requirements.txt -o requirements.txt\n\nFROM python:3.7-alpine\nENV PIP_NO_CACHE_DIR off\nENV PYTHONUNBUFFERED 1\n\nCOPY --from=poetry-export /src/requirements.txt ./\nRUN \\\n  set -ex; \\\n  apk --update add tini postgresql-libs jpeg-dev && \\\n  apk add --virtual build-dependencies curl postgresql-dev libstdc++ zlib-dev build-base && \\\n  pip install --no-cache-dir -r requirements.txt && \\\n  pip install --no-cache-dir gunicorn honcho && \\\n  apk del build-dependencies && \\\n  rm -rf /var/cache/apk/* && \\\n  find /usr/local -depth -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) -exec rm -rf '{}' +;\n\n\n# User-accessible environment\nENV ENVIRONMENT=PRODUCTION\nENV DJANGO_ALLOWED_HOSTS=127.0.0.1\n\nWORKDIR /app\nCOPY Procfile ./\nCOPY manage.py ./\nCOPY bin ./bin\nCOPY --from=frontend /frontend/frontend/dist ./frontend/dist\nCOPY tapedrive ./tapedrive\nCOPY listeners ./listeners\nCOPY podcasts ./podcasts\n\nEXPOSE 8273\nVOLUME /app /data\nENTRYPOINT [ \"tini\", \"--\", \"./bin/entrypoint.sh\" ]\nCMD [\"honcho\", \"start\"]\n"
}