{
  "startTime": 1674252765863,
  "endTime": 1674252766728,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7\n\n# Create the required folders\nRUN mkdir -p /webapp/models\n\n# Copy everything\nCOPY . /webapp\n\nENV VOCAB_URL=https://medcat.rosalind.kcl.ac.uk/media/vocab.dat\nENV CDB_URL=https://medcat.rosalind.kcl.ac.uk/media/cdb-medmen-v1.dat\n\nENV CDB_PATH=/webapp/models/cdb.dat\nENV VOCAB_PATH=/webapp/models/vocab.dat\n\n# Create the data directory\nRUN mkdir -p /medcat_data\n\n# Set the pythonpath\nWORKDIR /webapp\n\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Get the spacy model\nRUN python -m spacy download en_core_web_md\n\n# Build the db\nRUN python manage.py makemigrations && \\\n    python manage.py makemigrations demo && \\\n    python manage.py migrate && \\\n    python manage.py migrate demo && \\\n    python manage.py collectstatic --noinput\n\n# Create the db backup cron job\nRUN apt-get update && apt-get install -y --no-install-recommends apt-utils cron sqlite3 libsqlite3-dev && rm -rf /var/lib/apt/lists/*;\nCOPY etc/cron.d/db-backup-cron /etc/cron.d/db-backup-cron\nRUN chmod 0644 /etc/cron.d/db-backup-cron\nRUN crontab /etc/cron.d/db-backup-cron\n"
}