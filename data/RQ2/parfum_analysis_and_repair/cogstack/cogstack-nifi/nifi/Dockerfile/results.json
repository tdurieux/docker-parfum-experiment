{
  "startTime": 1674256023945,
  "endTime": 1674256024961,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 153
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 44,
        "columnEnd": 170
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 44,
        "columnEnd": 170
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 168
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM apache/nifi:1.16.3\nARG UID=1000\nARG GID=1000\n\nARG HTTP_PROXY\nARG HTTPS_PROXY\nARG no_proxy\n\nENV HTTP_PROXY $HTTP_PROXY\nENV HTTPS_PROXY $HTTPS_PROXY\nENV no_proxy $no_proxy\n\nUSER root\n\n# run updates and install some base utility packages along with python support\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y apt-transport-https apt-utils curl software-properties-common wget git build-essential make ca-certificates && \\\n    apt-add-repository contrib && \\\n    apt-add-repository non-free && \\\n    apt-get update && apt-get upgrade -y && \\\n    apt-get install -y postgresql-server-dev-13 postgresql-server-dev-all python3 python3-pip python3-dev python3.9-dev python3-all-dev ssl-cert --no-install-recommends && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir setuptools dvc flask GitPython elasticsearch opensearch-py neo4j --ignore-installed PyYAML && \\\n    pip3 install --no-cache-dir pymssql mysql-connector-python cx-Oracle dataclasses numpy matplotlib pandas dill jsonpickle jsonext psycopg2-binary psycopg2 python-certifi-win32 certifi && rm -rf /var/lib/apt/lists/*;\n\n# ApacheNifi specific packages\nRUN pip3 install --no-cache-dir nipyapi\n\nRUN apt-get clean autoclean && apt-get autoremove --purge -y\n\n# clean up\nRUN pip3 cache purge\nRUN apt-get autoremove -y\n\n# solve groovy grape proxy issues, grape ignores the current environment's proxy settings\nRUN export JAVA_OPTS=\"-Dhttp.proxyHost=$HTTP_PROXY -Dhttps.proxyHost=$HTTPS_PROXY -Dhttp.nonProxyHosts=$no_proxy\"\n\n# USER nifi\n\n# copy drivers\nWORKDIR /opt/nifi/\nCOPY ./drivers ./drivers\n#COPY ../security ./security\n\n# copy user scripts, schemas and templates\nCOPY ./user-scripts ./user-scripts\nCOPY ./user-schemas ./user-schemas\n\n#####\nWORKDIR /opt/nifi/nifi-current/conf/templates/\nCOPY ./user-templates ./   \n\nRUN mkdir -p /opt/nifi/groovy\nWORKDIR /opt/nifi/groovy/\n\nRUN curl -f https://archive.apache.org/dist/groovy/4.0.0/distribution/apache-groovy-binary-4.0.0.zip --output apache-groovy-binary-4.0.0.zip --max-time 3600 && \\\n    unzip apache-groovy-binary-4.0.0.zip && \\\n    rm apache-groovy-binary-4.0.0.zip\n\nENV GROOVY_BIN=/opt/nifi/groovy/groovy-4.0.0/bin\n\nRUN $GROOVY_BIN/grape -V install org.apache.avro avro 1.11.0\n\nWORKDIR  /opt/nifi/nifi-toolkit-current/\n\n# copy configuration files\nWORKDIR /opt/nifi/nifi-current/conf/\n\nCOPY ./conf/bootstrap.conf ./\nCOPY ./conf/nifi.properties ./\nCOPY ./conf/zookeeper.properties ./\n\nCOPY ./conf/login-identity-providers.xml ./\n\n# finalize\nWORKDIR /opt/nifi/nifi-current/\n"
}