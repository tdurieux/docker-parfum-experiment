diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cogstack/cogstack-nifi/nifi/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cogstack/cogstack-nifi/nifi/Dockerfile/repaired.Dockerfile
index a98da96..fdb950e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cogstack/cogstack-nifi/nifi/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cogstack/cogstack-nifi/nifi/Dockerfile/repaired.Dockerfile
@@ -13,17 +13,17 @@ ENV no_proxy $no_proxy
 USER root
 
 # run updates and install some base utility packages along with python support
-RUN apt-get update && apt-get upgrade -y && apt-get install -y apt-transport-https apt-utils curl software-properties-common wget git build-essential make ca-certificates && \
+RUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y apt-transport-https apt-utils curl software-properties-common wget git build-essential make ca-certificates && \
     apt-add-repository contrib && \
     apt-add-repository non-free && \
     apt-get update && apt-get upgrade -y && \
     apt-get install -y postgresql-server-dev-13 postgresql-server-dev-all python3 python3-pip python3-dev python3.9-dev python3-all-dev ssl-cert --no-install-recommends && \
-    pip3 install --upgrade pip && \
-    pip3 install setuptools dvc flask GitPython elasticsearch opensearch-py neo4j --ignore-installed PyYAML && \
-    pip3 install pymssql mysql-connector-python cx-Oracle dataclasses numpy matplotlib pandas dill jsonpickle jsonext psycopg2-binary psycopg2 python-certifi-win32 certifi
+    pip3 install --no-cache-dir --upgrade pip && \
+    pip3 install --no-cache-dir setuptools dvc flask GitPython elasticsearch opensearch-py neo4j --ignore-installed PyYAML && \
+    pip3 install --no-cache-dir pymssql mysql-connector-python cx-Oracle dataclasses numpy matplotlib pandas dill jsonpickle jsonext psycopg2-binary psycopg2 python-certifi-win32 certifi && rm -rf /var/lib/apt/lists/*;
 
 # ApacheNifi specific packages
-RUN pip3 install nipyapi
+RUN pip3 install --no-cache-dir nipyapi
 
 RUN apt-get clean autoclean && apt-get autoremove --purge -y
 
@@ -47,12 +47,12 @@ COPY ./user-schemas ./user-schemas
 
 #####
 WORKDIR /opt/nifi/nifi-current/conf/templates/
-COPY ./user-templates ./    
+COPY ./user-templates ./   
 
 RUN mkdir -p /opt/nifi/groovy
 WORKDIR /opt/nifi/groovy/
 
-RUN curl https://archive.apache.org/dist/groovy/4.0.0/distribution/apache-groovy-binary-4.0.0.zip --output apache-groovy-binary-4.0.0.zip --max-time 3600 && \
+RUN curl -f https://archive.apache.org/dist/groovy/4.0.0/distribution/apache-groovy-binary-4.0.0.zip --output apache-groovy-binary-4.0.0.zip --max-time 3600 && \
     unzip apache-groovy-binary-4.0.0.zip && \
     rm apache-groovy-binary-4.0.0.zip