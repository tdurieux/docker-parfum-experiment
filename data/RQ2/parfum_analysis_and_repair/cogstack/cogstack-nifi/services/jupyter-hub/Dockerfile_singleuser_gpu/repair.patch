diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cogstack/cogstack-nifi/services/jupyter-hub/Dockerfile_singleuser_gpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cogstack/cogstack-nifi/services/jupyter-hub/Dockerfile_singleuser_gpu/repaired.Dockerfile
index 11f01d7..a3e76cd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cogstack/cogstack-nifi/services/jupyter-hub/Dockerfile_singleuser_gpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cogstack/cogstack-nifi/services/jupyter-hub/Dockerfile_singleuser_gpu/repaired.Dockerfile
@@ -26,13 +26,13 @@ ENV NVIDIA_DRIVER_CAPABILITIES compute,utility
 USER root
 
 RUN apt-get update && apt-get upgrade -y && \
-     apt-get install -y software-properties-common
+     apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 # add extra repos
 RUN apt-add-repository multiverse && \
     apt-add-repository universe && \
     add-apt-repository ppa:graphics-drivers/ppa && \
-    apt-get update && apt-get upgrade -y 
+    apt-get update && apt-get upgrade -y
 
 # Add latest ubuntu repos to sources.list
 RUN echo "deb http://archive.ubuntu.com/ubuntu/ jammy main restricted universe multiverse" | tee -a /etc/apt/sources.list
@@ -51,9 +51,9 @@ RUN apt-get purge --auto-remove python3.10
 RUN apt-get update && apt-get upgrade -y && \
     apt-get  --force-yes -o Dpkg::Options::="--force-confold" --force-yes -o Dpkg::Options::="--force-confdef" -fuy  dist-upgrade  && \
     apt-get autoremove -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
     gnupg \
-    ssl-cert \ 
+    ssl-cert \
     libevent-dev \
     python-dev \
     python3-dev \
@@ -88,12 +88,12 @@ RUN apt-get update && apt-get upgrade -y && \
     htop \
     libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 \
     libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6 \
-    r-base
+    r-base && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get update && apt-get upgrade -y 
+RUN apt-get update && apt-get upgrade -y
 
 # GPU requirements
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ocl-icd-dev ocl-icd-opencl-dev ocl-icd-libopencl1 oclgrind opencl-headers libtiff-dev build-essential dkms 
+RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends ocl-icd-dev ocl-icd-opencl-dev ocl-icd-libopencl1 oclgrind opencl-headers libtiff-dev build-essential dkms && rm -rf /var/lib/apt/lists/*;
 
 # Not necessary, will corrupt nvidia-doker on install, use with care
 # RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends apnvidia-driver-$NVIDIA_DRIVER_VERSION pocl-opencl-icd intel-opencl-icd mesa-opencl-icd nvidia-opencl-dev libpocl-dev beignet-opencl-icd libnvidia-egl-wayland-dev nvidia-cuda-dev nvidia-cuda-toolkit nvidia-headless-$NVIDIA_DRIVER_VERSION
@@ -101,24 +101,24 @@ RUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends oc
 # NVIDIA Docker
 RUN export distribution=$(. /etc/os-release;echo $ID$VERSION_ID)
 
-RUN curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
-RUN curl -s -L https://nvidia.github.io/nvidia-docker/$(. /etc/os-release;echo $ID$VERSION_ID)/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
-RUN curl -s -L https://nvidia.github.io/libnvidia-container/experimental/$(. /etc/os-release;echo $ID$VERSION_ID)/libnvidia-container-experimental.list | sudo tee /etc/apt/sources.list.d/libnvidia-container-experimental.list
+RUN curl -f -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
+RUN curl -f -s -L https://nvidia.github.io/nvidia-docker/$(. /etc/os-release;echo $ID$VERSION_ID)/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
+RUN curl -f -s -L https://nvidia.github.io/libnvidia-container/experimental/$(. /etc/os-release;echo $ID$VERSION_ID)/libnvidia-container-experimental.list | sudo tee /etc/apt/sources.list.d/libnvidia-container-experimental.list
 
-RUN apt-get update && apt-get upgrade -y 
+RUN apt-get update && apt-get upgrade -y
 
-RUN apt-get install -y nvidia-docker2 nvidia-container-toolkit
+RUN apt-get install --no-install-recommends -y nvidia-docker2 nvidia-container-toolkit && rm -rf /var/lib/apt/lists/*;
 
 # Microsoft repos
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
-RUN curl https://packages.microsoft.com/config/ubuntu/21.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
-RUN curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list >> /etc/apt/sources.list.d/mssql-release.list
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
+RUN curl -f https://packages.microsoft.com/config/ubuntu/21.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
+RUN curl -f https://packages.microsoft.com/config/ubuntu/22.04/prod.list >> /etc/apt/sources.list.d/mssql-release.list
 
 # install remaining packages
 RUN apt-get update && apt-get upgrade -y
-RUN apt-get -y --no-install-recommends install unixodbc unixodbc-dev odbcinst
-RUN ACCEPT_EULA=Y apt-get install -y msodbcsql18
-RUN ACCEPT_EULA=Y apt-get install -y mssql-tools18
+RUN apt-get -y --no-install-recommends install unixodbc unixodbc-dev odbcinst && rm -rf /var/lib/apt/lists/*;
+RUN ACCEPT_EULA=Y apt-get --no-install-recommends install -y msodbcsql18 && rm -rf /var/lib/apt/lists/*;
+RUN ACCEPT_EULA=Y apt-get --no-install-recommends install -y mssql-tools18 && rm -rf /var/lib/apt/lists/*;
 RUN echo 'export PATH="$PATH:/opt/mssql-tools18/bin"' >> ~/.bashrc
 
 RUN conda update conda
@@ -133,30 +133,30 @@ RUN conda clean --all -f -y
 RUN fix-permissions $CONDA_DIR && fix-permissions /home/$NB_USER
 
 # deps for psycopg2
-RUN apt-get install -y postgresql-server-dev-all --no-install-recommends 
+RUN apt-get install -y postgresql-server-dev-all --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install --upgrade pip
-RUN pip3 install setuptools wheel virtualenv cython
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip3 install --no-cache-dir setuptools wheel virtualenv cython
 
 # jupyterhub stuff
-RUN pip3 install ipywidgets jupyter jupyterhub jupyterlab jupyterlab-git importlib_metadata
-RUN pip3 install jupyterlab_widgets jupyter_contrib_core jupyter_contrib_nbextensions jupyter-server-proxy fastbook
-RUN pip3 install docker docker-compose dockerspawner jupyterhub-firstuseauthenticator jupyterhub-systemdspawner jupyterhub-jwtauthenticator jupyterhub-client jupyterhub-kerberosauthenticator 
-RUN pip3 install jupyterhub-nanowireauthenticator jupyterhub-ldapauthenticator jupyterhub-kubespawner jupyterhub-nativeauthenticator
+RUN pip3 install --no-cache-dir ipywidgets jupyter jupyterhub jupyterlab jupyterlab-git importlib_metadata
+RUN pip3 install --no-cache-dir jupyterlab_widgets jupyter_contrib_core jupyter_contrib_nbextensions jupyter-server-proxy fastbook
+RUN pip3 install --no-cache-dir docker docker-compose dockerspawner jupyterhub-firstuseauthenticator jupyterhub-systemdspawner jupyterhub-jwtauthenticator jupyterhub-client jupyterhub-kerberosauthenticator
+RUN pip3 install --no-cache-dir jupyterhub-nanowireauthenticator jupyterhub-ldapauthenticator jupyterhub-kubespawner jupyterhub-nativeauthenticator
 
 # extra packages for DB connections & utilities (charts, data formats, and other useful tools such as neo4j)
-RUN pip3 install pytesseract ipyparallel py7zr cython isort html2text jsoncsv simplejson detect wheel nltk keras bokeh seaborn matplotlib graphviz plotly tqdm 
-RUN pip3 install pymssql mysql-connector-python cx-Oracle dataclasses numpy matplotlib pandas dill jsonpickle jsonext psycopg2 psycopg2-binary pyodbc
-RUN pip3 install dvc flask GitPython elasticsearch opensearch-py neo4j --ignore-installed PyYAML 
+RUN pip3 install --no-cache-dir pytesseract ipyparallel py7zr cython isort html2text jsoncsv simplejson detect wheel nltk keras bokeh seaborn matplotlib graphviz plotly tqdm
+RUN pip3 install --no-cache-dir pymssql mysql-connector-python cx-Oracle dataclasses numpy matplotlib pandas dill jsonpickle jsonext psycopg2 psycopg2-binary pyodbc
+RUN pip3 install --no-cache-dir dvc flask GitPython elasticsearch opensearch-py neo4j --ignore-installed PyYAML
 
 # XNAT
-RUN pip3 install xnat
+RUN pip3 install --no-cache-dir xnat
 
 # medcat & models
-RUN pip3 install -U spacy click torch thinc
+RUN pip3 install --no-cache-dir -U spacy click torch thinc
 # RUN python3 -m spacy download en_core_web_md
-RUN pip3 install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.4.0/en_core_sci_md-0.4.0.tar.gz && \
-    pip3 install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.4.0/en_core_sci_lg-0.4.0.tar.gz
+RUN pip3 install --no-cache-dir https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.4.0/en_core_sci_md-0.4.0.tar.gz && \
+    pip3 install --no-cache-dir https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.4.0/en_core_sci_lg-0.4.0.tar.gz
 
 # RUN pip3 install medcat