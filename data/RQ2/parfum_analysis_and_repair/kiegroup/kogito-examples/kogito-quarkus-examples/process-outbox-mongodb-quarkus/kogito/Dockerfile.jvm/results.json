{
  "startTime": 1674255268473,
  "endTime": 1674255269037,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 151
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####\n# This Dockerfile is used in order to build a container that runs the Quarkus application in JVM mode\n#\n# Before building the container image run:\n#\n# ./mvnw package\n#\n# Then, build the image with:\n#\n# docker build -f src/main/docker/Dockerfile.jvm -t quarkus/kogito-jvm .\n#\n# Then run the container using:\n#\n# docker run -i --rm -p 8080:8080 quarkus/kogito-jvm\n#\n# If you want to include the debug port into your docker image\n# you will have to expose the debug port (default 5005) like this :  EXPOSE 8080 5050\n#\n# Then run the container using :\n#\n# docker run -i --rm -p 8080:8080 -p 5005:5005 -e JAVA_ENABLE_DEBUG=\"true\" quarkus/kogito-jvm\n#\n###\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.3\n\nARG JAVA_PACKAGE=java-11-openjdk-headless\nARG RUN_JAVA_VERSION=1.3.8\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\n# Install java and the run-java script\n# Also set up permissions for user `1001`\nRUN microdnf install gzip tar ca-certificates ${JAVA_PACKAGE} \\\n    && microdnf update \\\n    && microdnf clean all \\\n    && mkdir /deployments \\\n    && chown 1001 /deployments \\\n    && chmod \"g+rwX\" /deployments \\\n    && chown 1001:root /deployments \\\n    && curl -f https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \\\n    && chown 1001 /deployments/run-java.sh \\\n    && chmod 540 /deployments/run-java.sh \\\n    && echo \"securerandom.source=file:/dev/urandom\" >> /etc/alternatives/jre/lib/security/java.security\n\nRUN curl -f -o mongo.tgz https://fastdl.mongodb.org/linux/mongodb-shell-linux-x86_64-rhel80-4.4.9.tgz\nRUN tar -xvzf mongo.tgz && rm mongo.tgz\nRUN mv mongodb-linux-x86_64-rhel80-4.4.9/bin/mongo /usr/local/bin/\n\nCOPY launch.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/launch.sh\n\n# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.\nENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\n# We make four distinct layers so if there are application changes the library layers can be re-used\nCOPY --chown=1001 target/quarkus-app/lib/ /deployments/lib/\nCOPY --chown=1001 target/quarkus-app/*.jar /deployments/\nCOPY --chown=1001 target/quarkus-app/app/ /deployments/app/\nCOPY --chown=1001 target/quarkus-app/quarkus/ /deployments/quarkus/\n\nEXPOSE 8080\nUSER 1001\n\nENTRYPOINT [ \"/usr/local/bin/launch.sh\" ]\n"
}