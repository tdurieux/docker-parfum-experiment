{
  "startTime": 1674251437238,
  "endTime": 1674251437979,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-----------------------------\n# Docker イメージのベースイメージ\n#-----------------------------\n# CUDA 10.1 for Ubuntu 16.04\nFROM nvidia/cuda:10.1-base-ubuntu16.04\n\n#-----------------------------\n# 基本ライブラリのインストール\n#-----------------------------\n# インストール時のキー入力待ちをなくす環境変数\nENV DEBIAN_FRONTEND noninteractive\n\nRUN set -x && apt-get update && apt-get install -y --no-install-recommends \\\n    sudo \\\n    git \\\n    curl \\\n    wget \\\n    bzip2 \\\n    ca-certificates \\\n    libx11-6 \\\n    python3-pip \\\n    # imageのサイズを小さくするためにキャッシュ削除\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n#-----------------------------\n# 環境変数\n#-----------------------------\nENV LC_ALL=C.UTF-8\nENV export LANG=C.UTF-8\nENV PYTHONIOENCODING utf-8\n\n#-----------------------------\n# 追加ライブラリのインストール\n#-----------------------------\n# miniconda のインストール\nRUN curl -f -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh\nRUN bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b\nRUN rm Miniconda3-latest-Linux-x86_64.sh\nENV PATH=/miniconda/bin:${PATH}\nRUN conda update -y conda\n\n# conda 上で Python 3.6 環境を構築\nENV CONDA_DEFAULT_ENV=py36\nRUN conda create -y --name ${CONDA_DEFAULT_ENV} python=3.6.9 && conda clean -ya\nENV CONDA_PREFIX=/miniconda/envs/${CONDA_DEFAULT_ENV}\nENV PATH=${CONDA_PREFIX}/bin:${PATH}\nRUN conda install conda-build=3.18.9=py36_3 && conda clean -ya\n\n# pytorch 1.4 のインストール（CUDA 10.1-specific steps）\nRUN conda install -y pytorch==1.4.0 torchvision==0.5.0 cudatoolkit=10.1 -c pytorch && conda clean -ya   \n\n# OpenCV3 のインストール\nRUN sudo apt-get update && sudo apt-get install -y --no-install-recommends \\\n    libgtk2.0-0 \\\n    libcanberra-gtk-module \\\n    && sudo rm -rf /var/lib/apt/lists/*\n\nRUN conda install -y -c menpo opencv3=3.1.0 && conda clean -ya\n\n# Apex (AMP) のインストール\nRUN conda install -c conda-forge nvidia-apex && conda clean -ya\n#RUN git clone https://github.com/NVIDIA/apex\n#RUN cd apex\n#RUN pip3 install -v --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" ./\n#RUN cd ..\n\n# Others\nRUN conda install -y tqdm && conda clean -ya\nRUN conda install -y -c anaconda pillow==6.2.1 && conda clean -ya\nRUN conda install -y -c anaconda networkx && conda clean -ya\nRUN conda install -y -c anaconda scipy && conda clean -ya\n\n# Other (for server)\n#RUN conda install -y -c anaconda flask && conda clean -ya\n#RUN conda install -y -c anaconda flask-cors && conda clean -ya\nRUN conda install -y -c conda-forge fastapi && conda clean -ya\nRUN conda install -y -c conda-forge uvicorn && conda clean -ya\nRUN conda install -y -c conda-forge Gunicorn && conda clean -ya\nRUN conda install -y -c conda-forge dataclasses && conda clean -ya\nRUN conda install -y -c anaconda requests && conda clean -ya\n\n#-----------------------------\n# ソースコードの書き込み\n#-----------------------------\nCOPY api /28/api/\nCOPY Graphonomy /28/Graphonomy/\n\n#-----------------------------\n# 学習済みチェックポイントの書き込み\n#-----------------------------\nCOPY checkpoints /28/checkpoints/\n\n#-----------------------------\n# ポート開放\n#-----------------------------\nEXPOSE 5000\nEXPOSE 5001\n\n#-----------------------------\n# コンテナ起動後に自動的に実行するコマンド\n#-----------------------------\n\n#-----------------------------\n# コンテナ起動後の作業ディレクトリ\n#-----------------------------\nWORKDIR /28/api\n"
}