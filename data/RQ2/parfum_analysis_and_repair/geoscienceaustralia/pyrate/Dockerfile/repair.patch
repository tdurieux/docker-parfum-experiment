diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geoscienceaustralia/pyrate/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geoscienceaustralia/pyrate/Dockerfile/repaired.Dockerfile
index ef2b7c8..2fca0ac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/geoscienceaustralia/pyrate/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/geoscienceaustralia/pyrate/Dockerfile/repaired.Dockerfile
@@ -16,27 +16,27 @@ ENV GDAL_DATA=$GDALINST/gdal-$GDALVERSION/share/gdal
 
 
 RUN apt-get update \
-    && apt-get install -y build-essential checkinstall libreadline-gplv2-dev \
+    && apt-get install --no-install-recommends -y build-essential checkinstall libreadline-gplv2-dev \
     libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev \
-    libbz2-dev openssl curl libffi-dev
+    libbz2-dev openssl curl libffi-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir -p $HOME/opt
 
 RUN cd $HOME/opt \
-    && curl -O https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz \
+    && curl -f -O https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz \
     && tar -xzf Python-3.7.7.tgz \
     && cd Python-3.7.7 \
-    && ./configure --enable-shared --enable-optimizations --prefix=/usr/local LDFLAGS="-Wl,--rpath=/usr/local/lib" \
-    && make altinstall
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-shared --enable-optimizations --prefix=/usr/local LDFLAGS="-Wl,--rpath=/usr/local/lib" \
+    && make altinstall && rm Python-3.7.7.tgz
 
-RUN apt-get install -y build-essential python3-pip \
+RUN apt-get install --no-install-recommends -y build-essential python3-pip \
     apt-utils git libgdal-dev libatlas-base-dev openmpi-bin \
-    libopenmpi-dev gfortran wget libhdf5-serial-dev sqlite3 vim
+    libopenmpi-dev gfortran wget libhdf5-serial-dev sqlite3 vim && rm -rf /var/lib/apt/lists/*;
 
 # update pip
 RUN python3.7 -m pip install pip --upgrade
 RUN python3.7 -m pip install wheel
-RUN pip3 install --upgrade setuptools
+RUN pip3 install --no-cache-dir --upgrade setuptools
 
 
 RUN mkdir -p $GDALBUILD $GDALINST $PROJBUILD $PROJINST
@@ -80,22 +80,22 @@ ENV GDALOPTS="  --with-geos \
 RUN cd $PROJBUILD && wget -q https://download.osgeo.org/proj/proj-$PROJVERSION.tar.gz \
     && tar -xzf proj-$PROJVERSION.tar.gz \
     && cd proj-$PROJVERSION \
-    && ./configure --prefix=$PROJINST/gdal-$GDALVERSION \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=$PROJINST/gdal-$GDALVERSION \
     && make -s -j 2 \
-    && make install
+    && make install && rm proj-$PROJVERSION.tar.gz
 
-RUN  cd $GDALBUILD \
-    && wget -q http://download.osgeo.org/gdal/$GDALVERSION/gdal-$GDALVERSION.tar.gz \
-    && tar -xzf gdal-$GDALVERSION.tar.gz
+RUN cd $GDALBUILD \
+    && wget -q https://download.osgeo.org/gdal/$GDALVERSION/gdal-$GDALVERSION.tar.gz \
+    && tar -xzf gdal-$GDALVERSION.tar.gz && rm gdal-$GDALVERSION.tar.gz
 
 RUN cd $GDALBUILD/gdal-$GDALVERSION \
-    && ./configure --prefix=$GDALINST/gdal-$GDALVERSION $GDALOPTS $PROJOPT
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=$GDALINST/gdal-$GDALVERSION $GDALOPTS $PROJOPT
 
 RUN cd $GDALBUILD/gdal-$GDALVERSION && make
 
 RUN cd $GDALBUILD/gdal-$GDALVERSION  && make install
 
-RUN pip install virtualenv virtualenvwrapper
+RUN pip install --no-cache-dir virtualenv virtualenvwrapper
 ENV VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.7
 
 ADD . / PyRate/
@@ -105,6 +105,6 @@ RUN source /usr/local/bin/virtualenvwrapper.sh \
     && cd PyRate \
     && sed -i '/^GDAL/d' requirements.txt \
     && workon pyrate \
-    && pip install -r requirements.txt -r requirements-dev.txt -r requirements-test.txt \
-    && pip install GDAL==$(gdal-config --version) \
+    && pip install --no-cache-dir -r requirements.txt -r -r \
+    && pip install --no-cache-dir GDAL==$(gdal-config --version) \
     && python setup.py install