{
  "startTime": 1674250335437,
  "endTime": 1674250336726,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 7,
        "columnEnd": 55
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nENV LANG C.UTF-8\nENV LANG=en_AU.UTF-8\nENV WORKON_HOME=$HOME/venvs\nENV GDALINST=$HOME/gdalinstall\nENV GDALBUILD=$HOME/gdalbuild\nENV PROJINST=$HOME/gdalinstall\nENV GDALVERSION=\"3.0.2\"\nENV PROJVERSION=\"6.1.1\"\nENV PROJOPT=\"--with-proj=$GDALINST/gdal-$GDALVERSION\"\nENV PATH=$GDALINST/gdal-$GDALVERSION/bin:$PATH\nENV LD_LIBRARY_PATH=$GDALINST/gdal-$GDALVERSION/lib:$LD_LIBRARY_PATH\nENV PROJ_LIB=$GDALINST/gdal-$GDALVERSION/share/proj\nENV GDAL_DATA=$GDALINST/gdal-$GDALVERSION/share/gdal\n\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y build-essential checkinstall libreadline-gplv2-dev \\\n    libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev \\\n    libbz2-dev openssl curl libffi-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p $HOME/opt\n\nRUN cd $HOME/opt \\\n    && curl -f -O https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz \\\n    && tar -xzf Python-3.7.7.tgz \\\n    && cd Python-3.7.7 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared --enable-optimizations --prefix=/usr/local LDFLAGS=\"-Wl,--rpath=/usr/local/lib\" \\\n    && make altinstall && rm Python-3.7.7.tgz\n\nRUN apt-get install --no-install-recommends -y build-essential python3-pip \\\n    apt-utils git libgdal-dev libatlas-base-dev openmpi-bin \\\n    libopenmpi-dev gfortran wget libhdf5-serial-dev sqlite3 vim && rm -rf /var/lib/apt/lists/*;\n\n# update pip\nRUN python3.7 -m pip install pip --upgrade\nRUN python3.7 -m pip install wheel\nRUN pip3 install --no-cache-dir --upgrade setuptools\n\n\nRUN mkdir -p $GDALBUILD $GDALINST $PROJBUILD $PROJINST\n\nENV GDALOPTS=\"  --with-geos \\\n            --with-expat \\\n            --without-libtool \\\n            --with-libz=internal \\\n            --with-libtiff=internal \\\n            --with-geotiff=internal \\\n            --without-gif \\\n            --without-pg \\\n            --without-grass \\\n            --without-libgrass \\\n            --without-cfitsio \\\n            --without-pcraster \\\n            --with-netcdf \\\n            --with-png=internal \\\n            --with-jpeg=internal \\\n            --without-gif \\\n            --without-ogdi \\\n            --without-fme \\\n            --without-hdf4 \\\n            --with-hdf5 \\\n            --without-jasper \\\n            --without-ecw \\\n            --without-kakadu \\\n            --without-mrsid \\\n            --without-jp2mrsid \\\n            --without-mysql \\\n            --without-ingres \\\n            --without-xerces \\\n            --without-odbc \\\n            --with-curl \\\n            --without-sqlite3 \\\n            --without-idb \\\n            --without-sde \\\n            --without-perl \\\n            --without-python\"\n\nRUN cd $PROJBUILD && wget -q https://download.osgeo.org/proj/proj-$PROJVERSION.tar.gz \\\n    && tar -xzf proj-$PROJVERSION.tar.gz \\\n    && cd proj-$PROJVERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$PROJINST/gdal-$GDALVERSION \\\n    && make -s -j 2 \\\n    && make install && rm proj-$PROJVERSION.tar.gz\n\nRUN cd $GDALBUILD \\\n    && wget -q https://download.osgeo.org/gdal/$GDALVERSION/gdal-$GDALVERSION.tar.gz \\\n    && tar -xzf gdal-$GDALVERSION.tar.gz && rm gdal-$GDALVERSION.tar.gz\n\nRUN cd $GDALBUILD/gdal-$GDALVERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$GDALINST/gdal-$GDALVERSION $GDALOPTS $PROJOPT\n\nRUN cd $GDALBUILD/gdal-$GDALVERSION && make\n\nRUN cd $GDALBUILD/gdal-$GDALVERSION  && make install\n\nRUN pip install --no-cache-dir virtualenv virtualenvwrapper\nENV VIRTUALENVWRAPPER_PYTHON=/usr/local/bin/python3.7\n\nADD . / PyRate/\nSHELL [\"/bin/bash\", \"-c\"]\nRUN source /usr/local/bin/virtualenvwrapper.sh \\\n    && mkvirtualenv -p python3.7 pyrate \\\n    && cd PyRate \\\n    && sed -i '/^GDAL/d' requirements.txt \\\n    && workon pyrate \\\n    && pip install --no-cache-dir -r requirements.txt -r -r \\\n    && pip install --no-cache-dir GDAL==$(gdal-config --version) \\\n    && python setup.py install\n"
}