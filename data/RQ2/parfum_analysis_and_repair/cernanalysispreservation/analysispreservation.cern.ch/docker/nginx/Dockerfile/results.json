{
  "startTime": 1674252417570,
  "endTime": 1674252418760,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -*- coding: utf-8 -*-\n#\n# Copyright (C) 2018 CERN.\n#\n# CERN Analysis Preservation is free software; you can redistribute it and/or modify it\n# under the terms of the MIT License; see LICENSE file for more details.\n\nFROM exiasr/alpine-yarn-nginx\n\nCOPY ./docker/nginx/nginx.conf /etc/nginx/nginx.conf\nCOPY ./docker/nginx/conf.d/* /etc/nginx/conf.d/\nCOPY ./docker/nginx/test.key /etc/ssl/private/test.key\nCOPY ./docker/nginx/test.crt /etc/ssl/certs/test.crt\n\nENV WORKING_DIR=/tmp/cap\nENV NGINX_HTML_DIR=/usr/share/nginx/html\nENV NODE_OPTIONS=\"--max-old-space-size=8192\"\n\nRUN mkdir -p $NGINX_HTML_DIR\n\nRUN apk update\nRUN apk add git yarn python g++ make && rm -rf /var/cache/apk/*\nRUN yarn global add gitbook-cli\n\n# We invalidate cache always because there is no easy way for now to detect\n# if something in the whole git repo changed. For docker git clone <url> <dir>\n# is always the same so it caches it.\nARG CACHE_DATE=$(date)\n\nARG PIWIK_ENV=dev\nARG CAP_PIWIK_URL\nARG PIWIK_ENV\nARG CAP_PIWIK_SITEID_DEV\nARG CAP_PIWIK_SITEID_PROD\n\nRUN echo \"\" >> .env\nRUN echo \"\" >> .env\nRUN echo \"PIWIK_URL=$CAP_PIWIK_URL\" >> .env\n\nRUN if [[ $PIWIK_ENV == \"dev\" ]]; then \\\n        echo \"PIWIK_SITEID=$CAP_PIWIK_SITEID_DEV\" >> .env; \\\n    fi\n\nRUN if [[ $PIWIK_ENV == \"prod\" ]]; then \\\n        echo \"PIWIK_SITEID=$CAP_PIWIK_SITEID_PROD\" >> .env; \\\n    fi\n\n\n# build frontend\nCOPY ./ui/cap-react $WORKING_DIR/ui/\nWORKDIR $WORKING_DIR/ui/\n\nRUN yarn config set cache ~/.my-yarn-cache-dir && yarn cache clean;\nRUN yarn install && yarn cache clean;\nRUN yarn upgrade && yarn cache clean;\nRUN yarn build\n\nRUN cp -rfp ./dist/* $NGINX_HTML_DIR\n\n\n# build docs general\nCOPY ./docs $WORKING_DIR/docs/\nWORKDIR $WORKING_DIR/docs\n\nRUN gitbook install\nRUN gitbook build\n\nRUN mkdir -p $NGINX_HTML_DIR/docs/general\nRUN cp -rfp ./_book/* $NGINX_HTML_DIR/docs/general\n\n\n# build docs API\nRUN git clone https://github.com/cernanalysispreservation/cap-api-docs.git $WORKING_DIR/cap-api-docs/\nWORKDIR $WORKING_DIR/cap-api-docs\n\nRUN npm install && npm cache clean --force;\nRUN npm run build\n\nRUN mkdir -p $NGINX_HTML_DIR/docs/api\nRUN cp -rfp ./web_deploy/* $NGINX_HTML_DIR/docs/api\n\n\n# build docs client\nRUN git clone https://github.com/cernanalysispreservation/cap-client.git $WORKING_DIR/cap-client/\nWORKDIR $WORKING_DIR/cap-client/docs\n\nRUN gitbook install\nRUN gitbook build\n\nRUN mkdir -p $NGINX_HTML_DIR/docs/client\nRUN cp -rfp ./_book/* $NGINX_HTML_DIR/docs/client"
}