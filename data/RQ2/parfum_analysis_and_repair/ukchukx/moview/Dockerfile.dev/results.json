{
  "startTime": 1674253835294,
  "endTime": 1674253836326,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "# ----------------------------------------------------------------------------\n# \"THE BEER-WARE LICENSE\" (Revision 42):\n# @trenpixster wrote this file. As long as you retain this notice you\n# can do whatever you want with this stuff. If we meet some day, and you think\n# this stuff is worth it, you can buy me a beer in return\n# ----------------------------------------------------------------------------\n\n# Use phusion/baseimage as base image. To make your builds reproducible, make\n# sure you lock down to a specific version, not to `latest`!\n# See https://github.com/phusion/baseimage-docker/blob/master/Changelog.md for\n# a list of version numbers.\n#\n# Usage Example : Run One-Off commands\n# where <VERSION> is one of the baseimage-docker version numbers.\n# See : https://github.com/phusion/baseimage-docker#oneshot for more examples.\n#\n#  docker run --rm -t -i phusion/baseimage:<VERSION> /sbin/my_init -- bash -l\n#\n# Thanks to @hqmq_ for the heads up\nFROM phusion/baseimage:0.11\nMAINTAINER Nizar Venturini @trenpixster\n\n# Important!  Update this no-op ENV variable when this Dockerfile\n# is updated with the current date. It will force refresh of all\n# of the base images and things like `apt-get update` won't be using\n# old cached versions when the Dockerfile is built.\nENV REFRESHED_AT 2018-12-20\n\n# Set correct environment variables.\n\n# Setting ENV HOME does not seem to work currently. HOME is unset in Docker container.\n# See bug : https://github.com/phusion/baseimage-docker/issues/119\n#ENV HOME /root\n# Workaround:\nRUN echo /root > /etc/container_environment/HOME\n\n# Regenerate SSH host keys. baseimage-docker does not contain any, so you\n# have to do that yourself. You may also comment out this instruction; the\n# init system will auto-generate one during boot.\nRUN /etc/my_init.d/00_regen_ssh_host_keys.sh\n\n# Baseimage-docker enables an SSH server by default, so that you can use SSH\n# to administer your container. In case you do not want to enable SSH, here's\n# how you can disable it. Uncomment the following:\nRUN rm -rf /etc/service/sshd /etc/my_init.d/00_regen_ssh_host_keys.sh\n\n# Use baseimage-docker's init system.\nCMD [\"/sbin/my_init\"]\n\n# ...put your own build instructions here...\n\n# Set the locale\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nWORKDIR /tmp\n\n# See : https://github.com/phusion/baseimage-docker/issues/58\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && \\\n    apt-get -qq update\n\nRUN apt-get install --no-install-recommends -y sudo wget git tzdata curl inotify-tools build-essential zip unzip && \\\n    echo \"deb http://packages.erlang-solutions.com/ubuntu $(lsb_release -sc) contrib\" >> /etc/apt/sources.list && \\\n    wget -qO - https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | sudo apt-key add - && \\\n    curl -f -sL https://deb.nodesource.com/setup_9.x | sudo -E bash - && \\\n    apt-get update && rm -rf /var/lib/apt/lists/*;\n\n# Install Erlang and Nodejs\nRUN apt-get install --no-install-recommends -y esl-erlang=1:21.2-1 nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    mkdir -p /app/logs\n\n# Download and Install Elixir\nWORKDIR /elixir\nRUN wget -q https://github.com/elixir-lang/elixir/releases/download/v1.6.3/Precompiled.zip && \\\n    unzip Precompiled.zip && \\\n    rm -f Precompiled.zip && \\\n    ln -s /elixir/bin/elixirc /usr/local/bin/elixirc && \\\n    ln -s /elixir/bin/elixir /usr/local/bin/elixir && \\\n    ln -s /elixir/bin/mix /usr/local/bin/mix && \\\n    ln -s /elixir/bin/iex /usr/local/bin/iex && \\\n    /usr/local/bin/mix local.hex --force && \\\n    /usr/local/bin/mix local.rebar --force\n\nWORKDIR /\n\n# From https://gist.github.com/brienw/85db445a0c3976d323b859b1cdccef9a\nENV MIX_HOST 1976\nENV TZ Africa/Lagos\n\nWORKDIR /app\nCOPY ./_build/prod/rel/moview/releases/2.0.0/moview.tar.gz .\nRUN tar -zxvf moview.tar.gz && rm -f moview.tar.gz\n\n\nENTRYPOINT [\"bin/moview\"]\nCMD [\"foreground\"]\n# Start up in 'foreground' mode by default so the container stays running\n\n"
}