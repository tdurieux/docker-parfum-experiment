{
  "startTime": 1674252666117,
  "endTime": 1674252667258,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\nARG ADLIK_DIRECTORY\nARG SERVING_SCRIPT\nARG CLIENT_SCRIPT\nARG TEST_MODEL_PATH\nARG SERVING_JSON\nARG CLIENT_INFERENCE_SCRIPT\nARG IMAGE_FILENAME\nARG TENSORRT_VERSION\nARG TENSORRT_TAR\nARG COMPILE_SCRIPT\nARG MODEL_NAME\nENV MODEL_NAME=${MODEL_NAME}\nENV COMPILE_SCRIPT=${COMPILE_SCRIPT}\nENV CLIENT_INFERENCE_SCRIPT=${CLIENT_INFERENCE_SCRIPT}\nENV IMAGE_FILENAME=${IMAGE_FILENAME}\nENV TENSORRT_VERSION=${TENSORRT_VERSION}\nENV SERVING_JSON=${SERVING_JSON}\nCOPY ${ADLIK_DIRECTORY} /home/john/Adlik\nCOPY ${TEST_MODEL_PATH} /home/john/Adlik/model\n\nRUN mkdir /home/john/tensorrt\nCOPY ${TENSORRT_TAR} /home/john/tensorrt\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ca-certificates && \\\n    apt-get clean && \\\n    find /var/lib/apt/lists -delete && rm -rf /var/lib/apt/lists/*;\n\nRUN . /etc/os-release && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y gnupg && \\\n    apt-key adv --fetch-keys \\\n        \"https://developer.download.nvidia.com/compute/cuda/repos/$ID$(echo $VERSION_ID | tr -d .)/x86_64/7fa2af80.pub\" \\\n        https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg && \\\n    apt-get autoremove --purge -y gnupg && \\\n    apt-get clean && \\\n    find /var/lib/apt/lists -delete && rm -rf /var/lib/apt/lists/*;\n\nRUN . /etc/os-release && \\\n    echo \"deb https://developer.download.nvidia.com/compute/cuda/repos/$ID$(echo $VERSION_ID | tr -d .)/x86_64 /\\n\\\ndeb https://developer.download.nvidia.com/compute/machine-learning/repos/$ID$(echo $VERSION_ID | tr -d .)/x86_64 /\\n\\\ndeb https://storage.googleapis.com/bazel-apt stable jdk1.8\" >> /etc/apt/sources.list\n\nRUN . /etc/os-release && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        automake \\\n        bazel \\\n        make \\\n        patch \\\n        cuda-cufft-10-2 \\\n        cuda-cufft-dev-10-2 \\\n        cuda-cupti-dev-10-2 \\\n        cuda-curand-10-2 \\\n        cuda-curand-dev-10-2 \\\n        cuda-cusolver-10-2 \\\n        cuda-cusolver-dev-10-2 \\\n        cuda-cusparse-dev-10-2 \\\n        cuda-cusparse-10-2 \\\n        cuda-nvml-dev-10-2 \\\n        cuda-nvrtc-10-2 \\\n        git \\\n        libtbb2 \\\n        libcublas-dev=10.2.* \\\n        'libcudnn8=*+cuda10.2' \\\n        'libcudnn8-dev=*+cuda10.2' \\\n        'libnvinfer7=*+cuda10.2' \\\n        'libnvinfer-dev=*+cuda10.2' \\\n        'libnvinfer-plugin7=*+cuda10.2' \\\n        'libnvparsers7=*+cuda10.2' \\\n        'libnvonnxparsers7=*+cuda10.2' \\\n        'libnvonnxparsers-dev=*+cuda10.2' \\\n        libtool \\\n        python \\\n        python3-setuptools \\\n        python3-wheel \\\n        python3.6-dev \\\n        python3-six \\\n        python3-pip \\\n        protobuf-compiler && \\\n    apt-get clean && \\\n    find /var/lib/apt/lists -delete && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-mark hold libcudnn8 libcudnn8-dev libnvinfer7 libnvinfer-dev libnvonnxparsers7 libnvonnxparsers-dev\n\nWORKDIR /home/john\n\nRUN bazel version\n\nRUN pip3 install --no-cache-dir numpy\n\nRUN cd /usr/bin &&\\\n    rm python &&\\\n    ln -s python3.6 python\n\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\n\nRUN cd /home/john/tensorrt &&\\\n    tar xzvf ${TENSORRT_TAR} &&\\\n    cd TensorRT-${TENSORRT_VERSION}/python && \\\n    pip3 install --no-cache-dir tensorrt-${TENSORRT_VERSION}-cp36-none-linux_x86_64.whl && \\\n    cd /home/john/tensorrt/TensorRT-${TENSORRT_VERSION}/uff && \\\n    pip3 install --no-cache-dir uff-*.whl && \\\n    cd /home/john/tensorrt/TensorRT-${TENSORRT_VERSION}/graphsurgeon && \\\n    pip3 install --no-cache-dir graphsurgeon-*.whl\n\nENV LD_LIBRARY_PATH=/home/john/tensorrt/TensorRT-${TENSORRT_VERSION}/lib\n\nRUN cd /home/john/Adlik &&\\\n    bazel build //adlik_serving/clients/python:build_pip_package -c opt &&\\\n    mkdir /tmp/pip-packages && bazel-bin/adlik_serving/clients/python/build_pip_package /tmp/pip-packages &&\\\n    env TF_CUDA_VERSION=10.2 \\\n     bazel build //adlik_serving \\\n         --config=tensorrt \\\n         -c opt \\\n         --action_env=LIBRARY_PATH=/usr/local/cuda-10.2/lib64/stubs \\\n         --incompatible_use_specific_tool_files=false && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    pip3 install --no-cache-dir /tmp/pip-packages/adlik_serving_api-0.0.0-py2.py3-none-any.whl && \\\n    cd /home/john/Adlik/model_compiler && \\\n    pip3 install --no-cache-dir . && \\\n    pip3 install --no-cache-dir -U pillow\n\nCOPY ${SERVING_SCRIPT} /home/john/serving_script.sh\nRUN chmod +x /home/john/serving_script.sh\nCOPY ${CLIENT_SCRIPT} /home/john/client_script.sh\nRUN chmod +x /home/john/client_script.sh\nCOPY ${COMPILE_SCRIPT} /home/john/compile_script.sh\nRUN chmod +x /home/john/compile_script.sh\n\nCMD python3 Adlik/benchmark/src/cmd_script.py -s /home/john/serving_script.sh -c /home/john/client_script.sh -cs /home/john/compile_script.sh\n"
}