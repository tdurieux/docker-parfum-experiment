{
  "startTime": 1674255549218,
  "endTime": 1674255550055,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y ca-certificates && \\\n    apt-get clean && \\\n    find /var/lib/apt/lists -delete && rm -rf /var/lib/apt/lists/*;\n\nRUN . /etc/os-release && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y gnupg && \\\n    apt-key adv --fetch-keys \\\n        https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB \\\n        \"https://developer.download.nvidia.com/compute/cuda/repos/$ID$(echo $VERSION_ID | tr -d .)/x86_64/7fa2af80.pub\" \\\n        https://storage.googleapis.com/bazel-apt/doc/apt-key.pub.gpg && \\\n    apt-get autoremove --purge -y gnupg && \\\n    apt-get clean && \\\n    find /var/lib/apt/lists -delete && rm -rf /var/lib/apt/lists/*;\n\nRUN . /etc/os-release && \\\n    echo \"deb https://apt.repos.intel.com/openvino/2022 $VERSION_CODENAME main\\n\\\ndeb https://developer.download.nvidia.com/compute/cuda/repos/$ID$(echo $VERSION_ID | tr -d .)/x86_64 /\\n\\\ndeb https://developer.download.nvidia.com/compute/machine-learning/repos/$ID$(echo $VERSION_ID | tr -d .)/x86_64 /\\n\\\ndeb https://storage.googleapis.com/bazel-apt stable jdk1.8\" >> /etc/apt/sources.list\n\nRUN . /etc/os-release && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        automake \\\n        bazel \\\n        clang-format \\\n        clang-tidy \\\n        cuda-cupti-dev-11-0 \\\n        cuda-nvml-dev-11-0 \\\n        cuda-nvrtc-11-0 \\\n        default-jdk-headless \\\n        flake8 \\\n        git \\\n        \"libopenvino-dev-2022.1.0\" \\\n        iwyu \\\n        libclang-common-5.0-dev \\\n        libclang-common-6.0-dev \\\n        cuda-nvprune-11-0 \\\n        cuda-nvtx-11-0 \\\n        cuda-command-line-tools-11-0 \\\n        cuda-compat-11-0 \\\n        libcublas-dev-11-0 \\\n        'libcudnn8=*+cuda11.0' \\\n        'libcudnn8-dev=*+cuda11.0' \\\n        libcufft-dev-11-0 \\\n        libcurand-dev-11-0 \\\n        libcusolver-dev-11-0 \\\n        libcusparse-dev-11-0 \\\n        'libnvinfer7=7.2.*+cuda11.0' \\\n        'libnvinfer-dev=7.2.*+cuda11.0' \\\n        'libnvinfer-plugin7=7.2.*+cuda11.0' \\\n        'libnvonnxparsers7=7.2.*+cuda11.0' \\\n        'libnvonnxparsers-dev=7.2.*+cuda11.0' \\\n        'libnvparsers7=7.2.*+cuda11.0' \\\n        libtool \\\n        protobuf-compiler \\\n        python3-dev \\\n        python3-pip \\\n        python3-six \\\n        python3-wheel && \\\n    apt-get clean && \\\n    find /var/lib/apt/lists -delete && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-mark hold libcudnn8 libcudnn8-dev libnvinfer7 libnvinfer-dev libnvonnxparsers7 libnvonnxparsers-dev\n\nRUN python3 -m pip install -U pip setuptools wheel\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda-11.0/bin:${PATH}\nENV LD_LIBRARY_PATH=/usr/local/cuda-11.0/targets/x86_64-linux/lib:$LD_LIBRARY_PATH\nENV CPLUS_INCLUDE_PATH=/usr/include/python3.6m:$CPLUS_INCLUDE_PATH\n\nRUN python3 -c 'import shutil, sys, urllib.request; shutil.copyfileobj(urllib.request.urlopen(sys.argv[1]), sys.stdout.buffer)' \\\n        https://github.com/bazelbuild/buildtools/releases/download/3.4.0/buildifier > /usr/local/bin/buildifier && \\\n    chmod +x /usr/local/bin/buildifier\n"
}