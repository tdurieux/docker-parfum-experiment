{
  "startTime": 1674249857182,
  "endTime": 1674249857846,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nLABEL maintainer=\"Bernd Doser <bernd.doser@h-its.org>\"\n\nARG TIMEZONE='Europe/Berlin'\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN echo $TIMEZONE > /etc/timezone \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y tzdata \\\n && rm /etc/localtime \\\n && ln -snf /usr/share/zoneinfo/$TIMEZONE /etc/localtime \\\n && dpkg-reconfigure -f noninteractive tzdata \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    cmake \\\n    cppcheck \\\n    curl \\\n    dirmngr \\\n    git \\\n    git-svn \\\n    gpg-agent \\\n    kwstyle \\\n    make \\\n    ninja-build \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    python3-setuptools \\\n    python3-tk \\\n    software-properties-common \\\n    vim \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n && CODENAME=$(lsb_release -cs) \\\n && echo \"deb http://apt.llvm.org/$CODENAME/ llvm-toolchain-$CODENAME-11 main\" >> /etc/apt/sources.list \\\n && echo \"deb-src http://apt.llvm.org/$CODENAME/ llvm-toolchain-$CODENAME-11 main\" >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    clang-tidy \\\n    clang-11 \\\n    clang-11-doc \\\n    clang-format-11 \\\n    clangd-11 \\\n    libc++-11-dev \\\n    libc++abi-11-dev \\\n    libomp-11-dev \\\n    libllvm-11-ocaml-dev \\\n    libclang-11-dev \\\n    libclang-common-11-dev \\\n    libclang1-11 \\\n    libfuzzer-11-dev \\\n    libllvm11 \\\n    lld-11 \\\n    lldb-11 \\\n    llvm-11 \\\n    llvm-11-dev \\\n    llvm-11-doc \\\n    llvm-11-examples \\\n    llvm-11-runtime \\\n    python3-clang-11 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n && update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 100 \\\n && update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 100\n\nENV CC clang\nENV CXX clang++\n\nRUN pip install --no-cache-dir --upgrade pip \\\n && hash -r pip3 \\\n && pip install --no-cache-dir \\\n    compiledb \\\n    lizard \\\n    numpy \\\n    scipy\n\nRUN git clone https://github.com/adrianzap/softwipe.git \\\n && cd softwipe \\\n && git clone https://github.com/Kitware/KWStyle.git \\\n && cd KWStyle \\\n && mkdir build \\\n && cd build \\\n && cmake .. \\\n && make\n\nRUN /softwipe/softwipe.py -h\nENV PATH=\"/softwipe:${PATH}\"\n"
}