{
  "startTime": 1674250289921,
  "endTime": 1674250291061,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on CKAN 2.8 Dockerfile with minor modifications for deployment on multi-tenant CKAN cluster\nFROM debian:buster\n\nARG EXTRA_PACKAGES\nARG PIP_INDEX_URL\nENV PIP_INDEX_URL=$PIP_INDEX_URL\nARG GITHUB_URL\nENV GITHUB_URL=$GITHUB_URL\n\n# Install required system packages\nRUN apt-get -q -y --force-yes update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get -q -y --force-yes upgrade \\\n    && apt-get -q --no-install-recommends -y --force-yes install \\\n        python-dev \\\n        python-pip \\\n        python-virtualenv \\\n        python-wheel \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxslt-dev \\\n        libgeos-dev \\\n        libssl-dev \\\n        libffi-dev \\\n        postgresql-client \\\n        build-essential \\\n        git-core \\\n        vim \\\n        wget \\\n        redis-tools \\\n        gettext \\\n        ${EXTRA_PACKAGES} \\\n    && apt-get -q clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Define environment variables\nENV CKAN_HOME /usr/lib/ckan\nENV CKAN_VENV $CKAN_HOME/venv\nENV CKAN_CONFIG /etc/ckan\nENV CKAN_STORAGE_PATH=/var/lib/ckan\nENV CKAN_LOGS_PATH=/var/log/ckan\n\n# Create ckan user\nRUN useradd -r -u 900 -m -c \"ckan account\" -d $CKAN_HOME -s /bin/false ckan\n\n# Setup virtual environment for CKAN\nRUN mkdir -p $CKAN_VENV $CKAN_CONFIG $CKAN_STORAGE_PATH $CKAN_LOGS_PATH && \\\n    virtualenv $CKAN_VENV && \\\n    ln -s $CKAN_VENV/bin/pip /usr/local/bin/ckan-pip &&\\\n    ln -s $CKAN_VENV/bin/paster /usr/local/bin/ckan-paster\n\n# Pip dropped support of python 2.7. We need older version\nRUN ckan-pip install --upgrade \"pip < 21.0\"\n\n# Setup CKAN\nRUN ckan-pip install --index-url ${PIP_INDEX_URL:-https://pypi.org/simple/} -U pip &&\\\n    chown -R ckan:ckan $CKAN_HOME $CKAN_VENV $CKAN_CONFIG $CKAN_STORAGE_PATH $CKAN_LOGS_PATH\n\nUSER ckan\n\nARG CKAN_BRANCH\nARG CKAN_REPO\n\nRUN CKAN_BRANCH=\"${CKAN_BRANCH:-ckan-2.8.1}\" && CKAN_REPO=\"${CKAN_REPO:-ckan/ckan}\" &&\\\n    mkdir -p $CKAN_VENV/src &&\\\n    wget --no-verbose -O $CKAN_VENV/src/${CKAN_BRANCH}.tar.gz https://github.com/${CKAN_REPO}/archive/${CKAN_BRANCH}.tar.gz &&\\\n    cd $CKAN_VENV/src && tar -xzf ${CKAN_BRANCH}.tar.gz && mv ckan-${CKAN_BRANCH} ckan &&\\\n    rm $CKAN_VENV/src/${CKAN_BRANCH}.tar.gz\n\nARG PRE_INSTALL\nRUN eval \"${PRE_INSTALL}\"\n\nRUN touch $CKAN_VENV/src/ckan/requirement-setuptools.txt && ckan-pip install --index-url ${PIP_INDEX_URL:-https://pypi.org/simple/} --upgrade --no-cache-dir -r $CKAN_VENV/src/ckan/requirement-setuptools.txt\nRUN touch $CKAN_VENV/src/ckan/requirements.txt && ckan-pip install --index-url ${PIP_INDEX_URL:-https://pypi.org/simple/} --upgrade --no-cache-dir -r $CKAN_VENV/src/ckan/requirements.txt\n\nRUN ckan-pip install --index-url ${PIP_INDEX_URL:-https://pypi.org/simple/} -e $CKAN_VENV/src/ckan/\n\nCOPY requirements.txt /tmp/\nRUN ckan-pip install --index-url ${PIP_INDEX_URL:-https://pypi.org/simple/} -r /tmp/requirements.txt &&\\\n    ckan-pip install --index-url ${PIP_INDEX_URL:-https://pypi.org/simple/} -U requests[security]\n\nCOPY post_install_functions.sh /post_install_functions.sh\n\nARG POST_INSTALL\nRUN . /post_install_functions.sh && eval \"${POST_INSTALL}\"\n\nCOPY entrypoint.sh /ckan-entrypoint.sh\nCOPY templater.sh /templater.sh\n\nARG POST_DOCKER_BUILD\nRUN . /post_install_functions.sh && eval \"${POST_DOCKER_BUILD}\"\n\nARG CKAN_INIT\nRUN echo \"${CKAN_INIT}\" | sed s@CKAN_CONFIG@${CKAN_CONFIG}@g > ${CKAN_CONFIG}/ckan_extra_init.sh\n\nUSER root\n\n# Extra files in the filesystem\nARG EXTRA_FILESYSTEM\nCOPY ${EXTRA_FILESYSTEM} /\n\n# Initialization that should be done as root\nARG ROOT_INIT\nRUN eval \"${ROOT_INIT}\"\nRUN . /post_install_functions.sh && patch_ckan\n\nUSER ckan\n\nENTRYPOINT [\"/ckan-entrypoint.sh\"]\n\nEXPOSE 5000\n\nENV GUNICORN_WORKERS=4\nENV GUNICORN_TIMEOUT=200\n\nWORKDIR /usr/lib/ckan\n"
}