{
  "startTime": 1674250625313,
  "endTime": 1674250626417,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6\n\n# Letsencrpypt root certificate was crossigned by DST Root CA X3 which expired on 2021-09-30, we now need our own cert\n#   - details    : https://letsencrypt.org/docs/dst-root-ca-x3-expiration-september-2021/\n#   - x1 root    : https://letsencrypt.org/certs/isrgrootx1.pem\n#   - x3 expired : Copied from old container\nCOPY isrgrootx1.pem /etc/pki/ca-trust/source/anchors/\nCOPY dst-x3-expired.pem /etc/pki/ca-trust/source/blacklist/\nRUN update-ca-trust && update-ca-trust force-enable\n\nCOPY CentOS-Base.repo /etc/yum.repos.d/\n\nRUN set -eux; \\\n    echo 'ip_resolve = IPv4' >>/etc/yum.conf; \\\n    yum update -y; \\\n    yum install -y \\\n        centos-release-scl \\\n        curl \\\n        environment-modules \\\n        gcc \\\n        gcc-c++ \\\n        git \\\n        libedit-devel \\\n        make \\\n        openssl-devel \\\n        pkg-config \\\n        postgresql-devel \\\n        readline-devel \\\n        scl-utils \\\n        unzip \\\n        vim \\\n        xz \\\n        zlib-devel; rm -rf /var/cache/yum\n\nCOPY CentOS-SCLo-scl.repo /etc/yum.repos.d/\nCOPY CentOS-SCLo-scl-rh.repo /etc/yum.repos.d/\n\nRUN set -eux; \\\n    yum install -y devtoolset-7; rm -rf /var/cache/yum \\\n    yum clean all;\n\nENV SRC_DIR=/usr/local/src\n\nCOPY download-src.sh /root/\nRUN set -eux; \\\n# version 1.0.2 of openssl (default version is 1.0.1) required for letsencrypt certificates to continue working\n    /root/download-src.sh openssl https://www.openssl.org/source/old/1.0.2/openssl-1.0.2u.tar.gz; \\\n    cd \"${SRC_DIR}/openssl\"; \\\n    CFLAGS=-fPIC ./config shared --prefix=/usr --openssldir=/etc/pki/tls && make && make install; \\\n# Latest version of m4 required\n    /root/download-src.sh m4 https://ftp.gnu.org/gnu/m4/m4-1.4.18.tar.gz; \\\n    cd \"${SRC_DIR}/m4\"; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install; \\\n# Latest version of autoconf required\n    /root/download-src.sh autoconf https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz; \\\n    cd \"${SRC_DIR}/autoconf\"; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install; \\\n# Required: libxml >= 2.9.0 (default version is 2.7.6)\n    /root/download-src.sh libxml2 http://xmlsoft.org/sources/libxml2-2.9.10.tar.gz; \\\n    cd \"${SRC_DIR}/libxml2\"; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-python=no; \\\n    make && make install; \\\n# Required: libcurl >= 7.29.0 (default version is 7.19.7)\n    /root/download-src.sh libcurl https://curl.haxx.se/download/curl-7.72.0.tar.gz; \\\n    cd \"${SRC_DIR}/libcurl\"; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install; \\\n# Required: libffi >= 3.0.11 (default version is 3.0.5)\n    /root/download-src.sh libffi https://github.com/libffi/libffi/releases/download/v3.4.2/libffi-3.4.2.tar.gz; \\\n    cd \"${SRC_DIR}/libffi\"; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install; \\\n# Required: oniguruma (not installed by deafult)\n    /root/download-src.sh oniguruma https://github.com/kkos/oniguruma/releases/download/v6.9.5_rev1/onig-6.9.5-rev1.tar.gz; \\\n    cd \"${SRC_DIR}/oniguruma\"; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install; \\\n# Required: bison >= 3.0.0 (not installed by deafult)\n    /root/download-src.sh bison https://ftp.gnu.org/gnu/bison/bison-3.7.3.tar.gz; \\\n    cd \"${SRC_DIR}/bison\"; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install; \\\n# Required: re2c >= 0.13.4 (not installed by deafult)\n    /root/download-src.sh re2c https://github.com/skvadrik/re2c/releases/download/2.0.3/re2c-2.0.3.tar.xz; \\\n    cd \"${SRC_DIR}/re2c\"; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install;\n\n# Required: CMake >= 3.0.2 (default version is 2.8.12.2)\n# Required to build libzip from source (has to be a separate RUN layer)\nRUN source scl_source enable devtoolset-7; \\\n    set -eux; \\\n    /root/download-src.sh cmake https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4.tar.gz; \\\n    cd \"${SRC_DIR}/cmake\"; \\\n    ./bootstrap && make && make install; \\\n# Required: libzip >= 0.11 (default version is 0.9)\n    /root/download-src.sh libzip https://libzip.org/download/libzip-1.7.3.tar.gz; \\\n    cd \"${SRC_DIR}/libzip\"; \\\n    mkdir build && cd build; \\\n    cmake .. && make && make install;\n\nRUN echo '#define SECBIT_NO_SETUID_FIXUP (1 << 2)' > '/usr/include/linux/securebits.h'\n\nENV PKG_CONFIG_PATH=\"${PKG_CONFIG_PATH}:/usr/local/lib/pkgconfig:/usr/local/lib64/pkgconfig\"\n\nENV PHP_SRC_DIR=/usr/local/src/php\nENV PHP_INSTALL_DIR=/opt/php\n\nRUN printf \"source scl_source enable devtoolset-7\" | tee -a /etc/profile.d/zzz-ddtrace.sh /etc/bashrc\nENV BASH_ENV=\"/etc/profile.d/zzz-ddtrace.sh\"\n\nCOPY switch-php /usr/local/bin/\n"
}