diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/datadog/dd-trace-php/dockerfiles/ci/buster/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/datadog/dd-trace-php/dockerfiles/ci/buster/Dockerfile/repaired.Dockerfile
index 29d9664..22173ea 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/datadog/dd-trace-php/dockerfiles/ci/buster/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/datadog/dd-trace-php/dockerfiles/ci/buster/Dockerfile/repaired.Dockerfile
@@ -52,17 +52,17 @@ ENV PHPIZE_DEPS \
 RUN set -eux; \
 # Set timezone to UTC by default
     ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime; \
-    \
+
 # Use unicode
     locale-gen C.UTF-8 || true; \
-    \
+
 # Core Dumps
     ulimit -c unlimited; \
-    \
+
 # Ensure debug symbols are available
     echo "deb http://deb.debian.org/debian-debug/ buster-debug main" | \
         tee -a /etc/apt/sources.list; \
-    \
+
 # prevent Debian's PHP packages from being installed
 # https://github.com/docker-library/php/pull/542
     { \
@@ -70,31 +70,31 @@ RUN set -eux; \
         echo 'Pin: release *'; \
         echo 'Pin-Priority: -1'; \
     } > /etc/apt/preferences.d/no-debian-php; \
-    \
+
 # persistent / runtime deps
     apt-get update; \
     apt-get install -y --no-install-recommends \
         $PHPIZE_DEPS \
-        $RUNTIME_DEPS; \
+        $RUNTIME_DEPS; rm -rf /var/lib/apt/lists/*; \
     apt-get clean; \
-    \
+
 # Disable DST ROOT X3 certificate explicitly to fix conflicts with older openssl versions \
     sed -ri 's/(mozilla\/DST_Root_CA_X3.crt)/!\1/' /etc/ca-certificates.conf; \
     update-ca-certificates; \
-    \
+
 # circleci user + sudo
     groupadd --gid 3434 circleci; \
         useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci; \
         echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci; \
         echo 'Defaults    env_keep += "DEBIAN_FRONTEND"' >> /etc/sudoers.d/env_keep; \
-    \
+
 # Allow nginx to be run as non-root for tests
     chown -R circleci:circleci /var/log/nginx/ /var/lib/nginx/; \
 # Install CMake
     CMAKE_VERSION="3.21.4"; \
     CMAKE_SHA256="eddba9da5b60e0b5ec5cbb1a65e504d776e247573204df14f6d004da9bc611f9"; \
-    cd /tmp && curl -OL https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz; \
-    (echo "${CMAKE_SHA256} cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz" | sha256sum -c -); \
+    cd /tmp && curl -f -OL https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz; \
+    ( echo "${CMAKE_SHA256}  cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz" | sha256sum -c -) \
     mkdir -p /opt/cmake/${CMAKE_VERSION}; \
     tar --strip-components 1 -C /opt/cmake/${CMAKE_VERSION} -xf /tmp/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz; \
 # Currently there's only one version of cmake, make it default
@@ -102,8 +102,8 @@ RUN set -eux; \
 # Install Catch2
     CATCH2_VERSION="2.13.7"; \
     CATCH2_SHA256=""3cdb4138a072e4c0290034fe22d9f0a80d3bcfb8d7a8a5c49ad75d3a5da24fae; \
-    cd /tmp && curl -OL https://github.com/catchorg/Catch2/archive/v${CATCH2_VERSION}.tar.gz; \
-    (echo "${CATCH2_SHA256} v${CATCH2_VERSION}.tar.gz" | sha256sum -c -); \
+    cd /tmp && curl -f -OL https://github.com/catchorg/Catch2/archive/v${CATCH2_VERSION}.tar.gz; \
+    ( echo "${CATCH2_SHA256}  v${CATCH2_VERSION}.tar.gz" | sha256sum -c -) \
     mkdir catch2 && cd catch2; \
     tar -xf ../v${CATCH2_VERSION}.tar.gz --strip 1; \
     /opt/cmake/${CMAKE_VERSION}/bin/cmake -Bbuild -H. -DBUILD_TESTING=OFF -DCMAKE_INSTALL_PREFIX=/opt/catch2 -DCATCH_BUILD_STATIC_LIBRARY=ON; \
@@ -111,19 +111,19 @@ RUN set -eux; \
 # Install lcov
     LCOV_VERSION="1.15"; \
     LCOV_SHA256="c1cda2fa33bec9aa2c2c73c87226cfe97de0831887176b45ee523c5e30f8053a"; \
-    cd /tmp && curl -OL https://github.com/linux-test-project/lcov/releases/download/v${LCOV_VERSION}/lcov-${LCOV_VERSION}.tar.gz; \
-    (echo "${LCOV_SHA256} lcov-${LCOV_VERSION}.tar.gz" | sha256sum -c -); \
+    cd /tmp && curl -f -OL https://github.com/linux-test-project/lcov/releases/download/v${LCOV_VERSION}/lcov-${LCOV_VERSION}.tar.gz; \
+    ( echo "${LCOV_SHA256}  lcov-${LCOV_VERSION}.tar.gz" | sha256sum -c -) \
     mkdir lcov && cd lcov; \
     tar -xf ../lcov-${LCOV_VERSION}.tar.gz --strip 1; \
     make install; \
-    lcov --version;\
+    lcov --version; \
 # Docker
     DOCKERIZE_VERSION="0.6.1"; \
     DOCKERIZE_SHA256="1fa29cd41a5854fd5423e242f3ea9737a50a8c3bcf852c9e62b9eb02c6ccd370"; \
     curl --silent --show-error --location --fail --retry 3 \
         --output /tmp/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz \
         https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz; \
-    (echo "${DOCKERIZE_SHA256} /tmp/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz" | sha256sum -c -); \
+    ( echo "${DOCKERIZE_SHA256}  /tmp/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz" | sha256sum -c -) \
     tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz; \
     rm -rf /tmp/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz; \
     dockerize --version;
@@ -205,16 +205,16 @@ ARG LIBUV_SHA256="371e5419708f6aaeb8656671f89400b92a9bba6443369af1bb70bcd6e4b3c7
 
 RUN set -eux; \
     cd /usr/local/src; \
-    curl -OL https://github.com/libuv/libuv/archive/refs/tags/v${LIBUV_VERSION}.tar.gz; \
-    (echo "${LIBUV_SHA256} v${LIBUV_VERSION}.tar.gz" | sha256sum -c -); \
+    curl -f -OL https://github.com/libuv/libuv/archive/refs/tags/v${LIBUV_VERSION}.tar.gz; \
+    ( echo "${LIBUV_SHA256}  v${LIBUV_VERSION}.tar.gz" | sha256sum -c -) \
     mv "v${LIBUV_VERSION}.tar.gz" "libuv-${LIBUV_VERSION}.tar.gz";
 
 RUN set -eux; \
     cd /usr/local/src; \
-    tar -xvf "libuv-${LIBUV_VERSION}.tar.gz"; \
+    tar -xvf "libuv-${LIBUV_VERSION}.tar.gz"; rm "libuv-${LIBUV_VERSION}.tar.gz" \
     cd "libuv-${LIBUV_VERSION}"; \
     ./autogen.sh; \
-    ./configure --prefix=/opt/libuv \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/libuv \
         --disable-shared \
         --enable-static \
         --with-pic \