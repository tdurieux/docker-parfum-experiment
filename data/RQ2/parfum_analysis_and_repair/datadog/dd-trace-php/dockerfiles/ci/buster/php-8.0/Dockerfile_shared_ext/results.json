{
  "startTime": 1674255445943,
  "endTime": 1674255446908,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 8,
        "columnEnd": 79
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 8,
        "columnEnd": 65
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 16,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 16,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 98,
        "lineEnd": 99,
        "columnStart": 12,
        "columnEnd": 24
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM datadog/dd-trace-ci:buster AS base\n\nARG phpVersion\nENV PHP_INSTALL_DIR_DEBUG_ZTS_ASAN=${PHP_INSTALL_DIR}/debug-zts-asan\nENV PHP_INSTALL_DIR_DEBUG_NTS=${PHP_INSTALL_DIR}/debug\nENV PHP_INSTALL_DIR_NTS=${PHP_INSTALL_DIR}/nts\nENV PHP_VERSION=${phpVersion}\n\nFROM base as build\nARG phpTarGzUrl\nARG phpSha256Hash\nRUN set -eux; \\\n    curl -fsSL -o /tmp/php.tar.gz \"${phpTarGzUrl}\"; \\\n    ( echo \"${phpSha256Hash}  /tmp/php.tar.gz\" | sha256sum -c -) \\\n    tar xf /tmp/php.tar.gz -C \"${PHP_SRC_DIR}\" --strip-components=1; \\\n    rm -f /tmp/php.tar.gz; \\\n    cd ${PHP_SRC_DIR}; \\\n    ./buildconf --force;\nCOPY configure_shared_ext.sh /home/circleci/configure.sh\n\nFROM build as php-debug-zts-asan\nENV CFLAGS='-fsanitize=address -DZEND_TRACK_ARENA_ALLOC'\nENV LDFLAGS='-fsanitize=address'\nRUN set -eux; \\\n    mkdir -p /tmp/build-php && cd /tmp/build-php; \\\n    /home/circleci/configure.sh \\\n        --enable-debug \\\n        --enable-zts \\\n        --prefix=${PHP_INSTALL_DIR_DEBUG_ZTS_ASAN} \\\n        --with-config-file-path=${PHP_INSTALL_DIR_DEBUG_ZTS_ASAN} \\\n        --with-config-file-scan-dir=${PHP_INSTALL_DIR_DEBUG_ZTS_ASAN}/conf.d; \\\n    make -j \"$((`nproc`+1))\"; \\\n    make install; \\\n    mkdir -p ${PHP_INSTALL_DIR_DEBUG_ZTS_ASAN}/conf.d;\n\nFROM build as php-debug\nRUN set -eux; \\\n    mkdir -p /tmp/build-php && cd /tmp/build-php; \\\n    /home/circleci/configure.sh \\\n        --enable-debug \\\n        --prefix=${PHP_INSTALL_DIR_DEBUG_NTS} \\\n        --with-config-file-path=${PHP_INSTALL_DIR_DEBUG_NTS} \\\n        --with-config-file-scan-dir=${PHP_INSTALL_DIR_DEBUG_NTS}/conf.d; \\\n    make -j \"$((`nproc`+1))\"; \\\n    make install; \\\n    mkdir -p ${PHP_INSTALL_DIR_DEBUG_NTS}/conf.d;\n\nFROM build as php-nts\nRUN set -eux; \\\n    mkdir -p /tmp/build-php && cd /tmp/build-php; \\\n    /home/circleci/configure.sh \\\n        --prefix=${PHP_INSTALL_DIR_NTS} \\\n        --with-config-file-path=${PHP_INSTALL_DIR_NTS} \\\n        --with-config-file-scan-dir=${PHP_INSTALL_DIR_NTS}/conf.d; \\\n    make -j \"$((`nproc`+1))\"; \\\n    make install; \\\n    mkdir -p ${PHP_INSTALL_DIR_NTS}/conf.d;\n\nFROM base as final\nCOPY --chown=circleci:circleci --from=build $PHP_SRC_DIR $PHP_SRC_DIR\nCOPY --chown=circleci:circleci --from=php-debug-zts-asan $PHP_INSTALL_DIR_DEBUG_ZTS_ASAN $PHP_INSTALL_DIR_DEBUG_ZTS_ASAN\nCOPY --chown=circleci:circleci --from=php-debug $PHP_INSTALL_DIR_DEBUG_NTS $PHP_INSTALL_DIR_DEBUG_NTS\nCOPY --chown=circleci:circleci --from=php-nts $PHP_INSTALL_DIR_NTS $PHP_INSTALL_DIR_NTS\n\n# Build curl versions\nENV CURL_VERSIONS=\"7.72.0 7.77.0\"\nRUN set -eux; \\\n    for curlVer in ${CURL_VERSIONS}; \\\n    do \\\n        echo \"Build curl ${curlVer}...\"; \\\n        cd /tmp; \\\n        curl -f -L -o curl.tar.gz https://curl.se/download/curl-${curlVer}.tar.gz; \\\n        tar -xf curl.tar.gz && rm curl.tar.gz; \\\n        cd curl-${curlVer}; \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-openssl --prefix=/opt/curl/${curlVer}; \\\n        make; make install; \\\n    done;\n\n# Build core extensions as shared libraries.\n# We intentionally do not run 'make install' here so that we can test the\n# scenario where headers are not installed for the shared library.\nRUN set -eux; \\\n    for phpVer in $(ls ${PHP_INSTALL_DIR}); \\\n    do \\\n        echo \"Build shared extensions for PHP ${phpVer}...\"; \\\n        switch-php ${phpVer}; \\\n        mkdir -p $(php-config --extension-dir); \\\n\n        # ext/curl\n        echo \"Building ext/curl (system version)...\"; \\\n        cd ${PHP_SRC_DIR}/ext/curl; \\\n        phpize; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make; \\\n        mv ./modules/*.so $(php-config --extension-dir); \\\n        make clean; \\\n\n        for curlVer in ${CURL_VERSIONS}; \\\n        do \\\n            echo \"Building ext/curl ${curlVer}...\"; \\\n            PKG_CONFIG_PATH=/opt/curl/${curlVer}/lib/pkgconfig/ \\\n            ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n            ; make; \\\n            mv ./modules/curl.so $(php-config --extension-dir)/curl-${curlVer}.so; \\\n            make clean; \\\n        done; \\\n        phpize --clean; \\\n\n        # ext/pdo\n        echo \"Building ext/pdo...\"; \\\n        cd ${PHP_SRC_DIR}/ext/pdo; \\\n        phpize; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make; \\\n        mv ./modules/*.so $(php-config --extension-dir); \\\n        make clean; phpize --clean; \\\n\n\n    done;\n\nRUN set -eux; \\\n# Set the default PHP version\n    switch-php debug;\n\n# Install Composer\nCOPY --from=composer:2 /usr/bin/composer /usr/local/bin/composer\n\nCOPY welcome /etc/motd\n\nCMD [\"php-fpm\", \"-F\"]\n"
}