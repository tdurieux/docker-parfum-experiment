{
  "startTime": 1674256164073,
  "endTime": 1674256165373,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 2,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 65,
        "columnEnd": 118
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 238,
        "lineEnd": 238,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 2,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 2,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster AS base\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN set -xe; \\\n  apt-get update; \\\n  apt-get install --no-install-recommends -y curl gnupg vim zip git; rm -rf /var/lib/apt/lists/*; \\\n  echo \"deb https://packages.sury.org/php/ buster main\" | tee /etc/apt/sources.list.d/php.list; \\\n  curl -f -L -o - https://packages.sury.org/php/apt.gpg | apt-key add -; \\\n  apt-get update; \\\n  apt-get clean; \\\n  git config --global user.email \"example@example.com\"; \\\n  git config --global user.name \"Patch Maker\";\n\nRUN set -xe; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y $(for V in 5.6 7.0 7.1 7.2 7.3; do \\\n        echo \\\n        php${V}-fpm \\\n        php${V}-apcu \\\n        php${V}-ctype \\\n        php${V}-curl \\\n        php${V}-dom \\\n        php${V}-gd \\\n        php${V}-iconv \\\n        # php${V}-imagick \\\n        php${V}-json \\\n        php${V}-intl \\\n        php${V}-fileinfo\\\n        php${V}-mbstring \\\n        php${V}-opcache \\\n        php${V}-pdo \\\n        php${V}-mysqli \\\n        php${V}-xml \\\n        php${V}-phar \\\n        php${V}-tokenizer \\\n        php${V}-simplexml \\\n        # php${V}-xdebug \\\n        php${V}-zip \\\n        php${V}-xmlwriter \\\n        php${V}-mysql \\\n        php${V}-sqlite3 \\\n        php${V}-memcached \\\n        php${V}-amqp \\\n        php${V}-dev \\\n        # php${V}-pear \\\n        php${V}-bcmath; \\\n    done; \\\n    ); rm -rf /var/lib/apt/lists/*; \\\n    apt-get clean;\n\nRUN set -xe; \\\n    php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"; \\\n    php -r \"if (hash_file('sha384', 'composer-setup.php') === '$( curl -f -L -o - https://composer.github.io/installer.sig)') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"; \\\n    php composer-setup.php --2.2; \\\n    php -r \"unlink('composer-setup.php');\"; \\\n    mv composer.phar /usr/local/bin/composer;\n\nADD switch_php.sh /usr/local/bin/switch_php\n\nRUN set -xe; \\\n    for V in 7.0 7.1 7.2 7.3; do \\\n      switch_php ${V}; \\\n      rm /usr/share/php/.registry/.channel.pecl.php.net/redis.reg || true; \\\n      pecl install redis; \\\n    done\n\nENV COMPOSER_MEMORY_LIMIT -1\nADD entrypoint.sh /usr/local/bin/entrypoint.sh\nADD flow/20-redis.ini /etc/php/7.3/cli/conf.d/20-redis.ini\nADD flow/20-redis.ini /etc/php/7.2/cli/conf.d/20-redis.ini\nADD flow/20-redis.ini /etc/php/7.1/cli/conf.d/20-redis.ini\nADD flow/20-redis.ini /etc/php/7.0/cli/conf.d/20-redis.ini\n\nENTRYPOINT [ \"/usr/local/bin/entrypoint.sh\" ]\nCMD [ \"bash\" ]\n\n# FROM base AS symfony\n# ENV COMPOSER_MEMORY_LIMIT -1\n# ARG SYMFONY_VERSION_TAG=v4.3.4\n\n# RUN set -xe; \\\n#     git clone --depth 1 --branch ${SYMFONY_VERSION_TAG} https://github.com/symfony/symfony /home/symfony; \\\n#     cd /home/symfony; \\\n#     composer update --prefer-dist; \\\n#     php ./phpunit install\n\n# WORKDIR /home/symfony/\n# ADD symfony/${SYMFONY_VERSION_TAG}.patch ./\n# RUN set -xe; \\\n#     # add vendor to git to allow easy patching of vendor files too\n#     git add -f vendor; \\\n#     git commit -m \"vendor\"; \\\n#     git apply *.patch\n\n# ENV SYMFONY_DEPRECATIONS_HELPER=disabled=1\n# ADD symfony/run.sh ./\n# CMD [ \"./run.sh\" ]\n\nFROM base AS laravel\nARG LARAVEL_VERSION_TAG=v5.8.17\nRUN set -xe; \\\n    git clone --depth 1 --branch ${LARAVEL_VERSION_TAG} https://github.com/laravel/framework /home/laravel; \\\n    cd /home/laravel; \\\n    export COMPOSER_MEMORY_LIMIT=-1; \\\n    composer install --prefer-dist\n\nWORKDIR /home/laravel\nADD laravel/patch.patch ./\nENV DD_SERVICE=laravel\nRUN set -xe; \\\n    git apply *.patch\n\nCMD [\"php\", \"./vendor/bin/phpunit\", \"-v\"]\n\nFROM base AS flow\nARG FLOW_VERSION_TAG=5.2.6\nARG FLOW_BUILD_TOOLS_VERISON=5.2\nRUN set -xe; \\\n    git clone https://github.com/neos/flow-development-distribution.git -b ${FLOW_BUILD_TOOLS_VERISON} /home/flow; \\\n    cd /home/flow; \\\n    composer update --no-progress --no-interaction\n\nWORKDIR /home/flow\nRUN set -xe; \\\n    mkdir -p ../../neos/; \\\n    git clone --depth 1 --branch ${FLOW_VERSION_TAG} https://github.com/neos/flow-development-collection ../../neos/flow-development-collection; \\\n    export NEOS_TARGET_REPOSITORY=neos/flow-development-collection; \\\n    export NEOS_TARGET_VERSION=5.2; \\\n    export TRAVIS_REPO_SLUG=neos/flow-development-collection; \\\n    php Build/BuildEssentials/TravisCi/ComposerManifestUpdater.php .\nRUN set -xe; \\\n    sed -e 's/dev-travis as //g' -i composer.json; \\\n    composer update --no-progress --no-interaction; \\\n    rm -f Configuration/Routes.yaml; \\\n    cp Configuration/Settings.yaml.example Configuration/Settings.yaml; \\\n    set -e 's/127.0.0.1/mysql/g' -i Configuration/Settings.yaml; \\\n    Build/BuildEssentials/TravisCi/SetupDatabase.sh; \\\n    cp Configuration/Settings.yaml Configuration/Testing/; \\\n    FLOW_CONTEXT=Testing/Behat ./flow behat:setup;\nRUN set -xe; \\\n  apt-get update; \\\n  apt-get install --no-install-recommends -y default-mysql-client; rm -rf /var/lib/apt/lists/*;\n\nRUN set -xe; \\\n    rm -rf ./Packages/Application/Neos.Behat/.git \\\n    ./Packages/Application/Neos.Welcome/.git \\\n    ./Packages/Framework/.git \\\n    ./Build/BuildEssentials/.git \\\n    ./Build/Behat/vendor/behat/mink-extension/.git \\\n    ./Build/Behat/vendor/behat/behat/.git; \\\n    git add -f Build; \\\n    git add -f Packages; \\\n    git commit -m \"pre patch\"\n\nADD flow/30.tz.ini /etc/php/7.3/cli/conf.d/30-tz.ini\nADD flow/30.tz.ini /etc/php/7.2/cli/conf.d/30-tz.ini\nADD flow/30.tz.ini /etc/php/7.1/cli/conf.d/30-tz.ini\nADD flow/30.tz.ini /etc/php/7.0/cli/conf.d/30-tz.ini\nADD flow/Settings.yaml Configuration/Settings.yaml\nADD flow/Settings.yaml Configuration/Testing/Settings.yaml\nADD flow/run.sh ./\nADD flow/patch.patch ./\n\nRUN set -xe; \\\n    git apply *.patch\n\nCMD [ \"./run.sh\" ]\n\nFROM base AS wordpress\nENV DD_SERVICE=wordpress\nARG WORDPRESS_VERSION_TAG=4.8.10\nRUN set -xe; \\\n  apt-get update; \\\n  apt-get install --no-install-recommends -y default-mysql-client; rm -rf /var/lib/apt/lists/*; \\\n  apt-get clean\n\nRUN set -xe; \\\n    git clone --depth 1 --branch ${WORDPRESS_VERSION_TAG} git://develop.git.wordpress.org/ /home/wordpress; \\\n    cd /home/wordpress; \\\n    switch_php 7.0; \\\n    composer require --dev phpunit/phpunit ^6\n\nWORKDIR /home/wordpress\nADD wordpress/wp-tests-config.php ./\nADD wordpress/run.sh ./\nADD wordpress/${WORDPRESS_VERSION_TAG}.patch ./\n\nRUN set -xe; \\\n    git apply *.patch\n\nCMD [ \"./run.sh\" ]\n\n########################################################################################################################\n## phpredis/phpredis frameworks tests\n########################################################################################################################\nFROM base AS phpredis\nARG PHPREDIS_VERSION_TAG\n\nRUN set -xe; \\\n    git clone --depth 1 --branch ${PHPREDIS_VERSION_TAG} https://github.com/phpredis/phpredis.git \\\n        /home/phpredis-${PHPREDIS_VERSION_TAG};\n\nWORKDIR /home/phpredis-${PHPREDIS_VERSION_TAG}\n\nENV DD_SERVICE=phpredis-${PHPREDIS_VERSION_TAG}\n\n# Installing the correct version of redis\nRUN pecl uninstall redis\nRUN printf 'no' | pecl install -f redis-${PHPREDIS_VERSION_TAG}\n\n# Applying patches\nADD phpredis/${PHPREDIS_VERSION_TAG}/patch.patch /home/phpredis-${PHPREDIS_VERSION_TAG}/patch.patch\nRUN set -xe; \\\n    git apply *.patch\n\nWORKDIR /home/phpredis-${PHPREDIS_VERSION_TAG}\nADD phpredis/${PHPREDIS_VERSION_TAG}/run.sh ./run.sh\nCMD [ \"./run.sh\" ]\n\n########################################################################################################################\n## mongodb-driver frameworks tests\n########################################################################################################################\nFROM base AS mongodb-driver\nARG MONGODB_VERSION_TAG\n\nRUN set -xe; \\\n    git clone --depth 1 --branch ${MONGODB_VERSION_TAG} https://github.com/mongodb/mongo-php-driver.git \\\n        /home/mongodb-driver-${MONGODB_VERSION_TAG};\n\nWORKDIR /home/mongodb-driver-${MONGODB_VERSION_TAG}\n\nENV DD_SERVICE=mongodb-driver-${MONGODB_VERSION_TAG}\n\n# Building mongodb-driver\n#   https://github.com/mongodb/mongo-php-driver/blob/master/CONTRIBUTING.md\nRUN git submodule update --init\nRUN phpize\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-mongodb-developer-flags\nRUN make clean\nRUN make all\nRUN make install\n\nADD mongodb-driver/run.sh ./run.sh\n\nCMD [ \"./run.sh\" ]\n"
}