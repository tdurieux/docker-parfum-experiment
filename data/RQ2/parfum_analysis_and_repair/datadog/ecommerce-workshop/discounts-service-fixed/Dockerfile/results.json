{
  "startTime": 1674255313954,
  "endTime": 1674255314715,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ^ This enables the new BuildKit stable syntax which can be\n# run with the DOCKER_BUILDKIT=1 environment variable in your\n# docker build command (see build.sh)\nFROM python:3.9.6-slim-buster\n\n# Update, upgrade, and cleanup debian packages\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get upgrade --yes && \\\n    apt-get install --no-install-recommends --yes build-essential libpq-dev && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Bring in app\nWORKDIR /app\nCOPY . .\n\n# Install dependencies via pip and avoid caching build artifacts\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Let Flask know what to boot\nENV FLASK_APP=discounts.py\n\n# Pass in Port mapping (default to 8282)\nARG DISCOUNTS_PORT=8282\n# Because CMD is a runtime instruction, we have to create an additional ENV var that reads the ARG val\n# Only ENV vars are accessible via CMD\nENV DISCOUNTS_PORT ${DISCOUNTS_PORT}\n\n# Start the app using ddtrace so we have profiling and tracing\nENTRYPOINT [\"ddtrace-run\"]\nCMD flask run --port=${DISCOUNTS_PORT} --host=0.0.0.0\n"
}