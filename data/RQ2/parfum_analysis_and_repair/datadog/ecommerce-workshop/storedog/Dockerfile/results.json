{
  "startTime": 1674246264365,
  "endTime": 1674246265510,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Defaults\nARG RUBY_VERSION=2.7.1\nARG NODE_MAJOR=12\nARG BUNDLER_VERSION=2.1.4\nARG YARN_VERSION=1.22.4\n\n# Common Ruby Image\nFROM ruby:${RUBY_VERSION}-slim-buster as common\n\n# These need to be re-defined in each stage to be available\nARG NODE_MAJOR\nARG BUNDLER_VERSION\nARG YARN_VERSION\n\n# Common package dependencies\nRUN apt-get update -qq \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    build-essential \\\n    curl \\\n    git \\\n    gnupg2 \\\n  && apt-get clean \\\n  && rm -rf /var/cache/apt/archives/* \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n  && truncate -s 0 /var/log/*log\n\n# App's dependencies\nRUN curl -f -sSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - \\\n  && echo \"deb https://deb.nodesource.com/node_${NODE_MAJOR}.x buster main\" | tee /etc/apt/sources.list.d/nodesource.list \\\n  && echo \"deb-src https://deb.nodesource.com/node_${NODE_MAJOR}.x buster main\" | tee -a /etc/apt/sources.list.d/nodesource.list \\\n  && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo 'deb http://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list \\\n  && apt-get update -qq \\\n  && DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    libpq-dev \\\n    nodejs \\\n    yarn=${YARN_VERSION}-1 \\\n  && apt-get clean \\\n  && rm -rf /var/cache/apt/archives/* \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n  && truncate -s 0 /var/log/*log\n\n# Bundler\nRUN mkdir /app /bundle\nENV LANG=C.UTF-8 \\\n  BUNDLE_PATH=/bundle \\\n  BUNDLE_JOBS=4 \\\n  BUNDLE_RETRY=3\nENV BUNDLE_APP_CONFIG=${BUNDLE_PATH} \\\n  BUNDLE_BIN=${BUNDLE_PATH}/bin\nENV PATH /app/bin:${BUNDLE_BIN}:${PATH}\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system \\\n    && gem install bundler:${BUNDLER_VERSION} && rm -rf /root/.gem;\n\nWORKDIR /app\nEXPOSE 3000\n\n# === Development image ===\nFROM common as development\nENV RAILS_ENV=development\nCMD [\"/usr/bin/bash\"]\n\n# === Production image ===\nFROM common as production\nENV RAILS_ENV=production\n\n# Container user\nRUN groupadd dog \\\n  && useradd --gid dog --shell /bin/bash --create-home dog \\\n  && chown -R dog:dog /app /bundle\n\nUSER dog\n\nCOPY --chown=dog:dog Gemfile* .\nRUN bundle install --without development test\n\nCOPY --chown=dog:dog . .\n\nCMD [\"bundle\", \"exec\", \"rails\", \"server\", \"-b\", \"0.0.0.0\"]\n"
}