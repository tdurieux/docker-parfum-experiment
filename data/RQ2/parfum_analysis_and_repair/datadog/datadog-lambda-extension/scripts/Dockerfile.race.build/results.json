{
  "startTime": 1674249134885,
  "endTime": 1674249135773,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.16.5 as builder\nARG EXTENSION_VERSION\nARG ENABLE_RACE_DETECTION\nARG AGENT_VERSION\nRUN mkdir -p /tmp/dd/datadog-agent\n\n# cache dependsencies\nCOPY ./scripts/.cache/go.mod /tmp/dd/datadog-agent\nCOPY ./scripts/.cache/go.sum /tmp/dd/datadog-agent\nWORKDIR /tmp/dd/datadog-agent\n\n# copy source files (/tgz gets unzip automatically by Docker)\nADD ./scripts/.src/datadog-agent.tgz /tmp/dd\n\n# build the extension\nWORKDIR /tmp/dd/datadog-agent/cmd/serverless\n# add the current version number to the tags package before compilation\n\nRUN --mount=type=cache,target=/go/pkg/mod \\\n    --mount=type=cache,target=/root/.cache/go-build \\\n    if [ -z \"$AGENT_VERSION\" ]; then \\\n        go build -race -ldflags=\"-w \\\n        -X github.com/DataDog/datadog-agent/pkg/serverless/tags.currentExtensionVersion=$EXTENSION_VERSION\" \\\n        -tags serverless -o datadog-agent; \\\n    else \\\n        go build -race -ldflags=\"-w \\\n        -X github.com/DataDog/datadog-agent/pkg/serverless/tags.currentExtensionVersion=$EXTENSION_VERSION \\\n        -X github.com/DataDog/datadog-agent/pkg/version.agentVersionDefault=$AGENT_VERSION\" \\\n        -tags serverless -o datadog-agent; \\\n    fi\n\nRUN go tool nm datadog-agent | grep -w 'github.com/DataDog/datadog-agent/pkg/version.agentVersionDefault' || \\\n    (echo \"agentVersionDefault variable doesn't exist\" && exit 1)\n\n# zip the extension\nFROM ubuntu:latest as compresser\nRUN apt-get update && apt-get install --no-install-recommends -y zip && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /extensions\nWORKDIR /extensions\nCOPY --from=builder /tmp/dd/datadog-agent/cmd/serverless/datadog-agent /extensions/datadog-agent\nRUN  zip -r datadog_extension.zip /extensions\n\n# keep the smallest possible docker image\nFROM scratch\nCOPY --from=compresser /extensions/datadog_extension.zip /\nENTRYPOINT [\"/datadog_extension.zip\"]\n"
}