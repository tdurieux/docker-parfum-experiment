{
  "startTime": 1674251013084,
  "endTime": 1674251014570,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 16,
        "columnEnd": 87
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This image supports multiple platforms, see README for build instructions\n\nFROM ruby:3.1.1-bullseye\n\n# Make apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n  && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install required packages\nRUN set -ex; \\\n        apt-get update; \\\n        mkdir -p /usr/share/man/man1; \\\n        apt-get install -y --no-install-recommends \\\n            git mercurial xvfb \\\n            locales sudo openssh-client ca-certificates tar gzip parallel \\\n            net-tools netcat unzip zip bzip2 gnupg curl wget \\\n            tzdata rsync vim less jq; \\\n        rm -rf /var/lib/apt/lists/*;\n\n# Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Set language\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\n\n# Install Docker\nRUN set -ex \\\n  && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/$(arch)/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1) \\\n  && DOCKER_URL=\"https://download.docker.com/linux/static/stable/$(arch)/${DOCKER_VERSION}\" \\\n  && echo Docker URL: $DOCKER_URL \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n  && ls -lha /tmp/docker.tgz \\\n  && tar -xz -C /tmp -f /tmp/docker.tgz \\\n  && mv /tmp/docker/* /usr/bin \\\n  && rm -rf /tmp/docker /tmp/docker.tgz \\\n  && which docker \\\n  && (docker version || true)\n\n# Install Docker Compose\nRUN COMPOSE_URL=\"https://github.com/linuxserver/docker-docker-compose/releases/download/1.29.2-ls51/docker-compose-$(dpkg --print-architecture)\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n  && chmod +x /usr/bin/docker-compose \\\n  && docker-compose version\n\n# Install Dockerize\nRUN curl -sfL $( curl -f -s https://api.github.com/repos/powerman/dockerize/releases/latest | grep -i /dockerize-$(uname -s)-$(dpkg --print-architecture)\\\" | cut -d\\\" -f4) | install /dev/stdin /usr/local/bin/dockerize\n\n# Install RubyGems\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && rm -rf /root/.gem;\nRUN mkdir -p \"$GEM_HOME\" && chmod -R 777 \"$GEM_HOME\"\n\n# Upgrade RubyGems and Bundler\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && rm -rf /root/.gem;\nRUN gem install bundler\nENV BUNDLE_SILENCE_ROOT_WARNING 1\n\nRUN mkdir /app\nWORKDIR /app\n\nCMD [\"/bin/sh\"]\n"
}