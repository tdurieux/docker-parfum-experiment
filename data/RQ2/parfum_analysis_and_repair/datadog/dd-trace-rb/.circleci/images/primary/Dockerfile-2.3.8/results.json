{
  "startTime": 1674218584127,
  "endTime": 1674218585764,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 24,
        "columnEnd": 101
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Current version: https://github.com/docker-library/ruby/blob/31f66490fdb837ddcc5896e3275f2188f2b7b6dd/2.3/stretch/Dockerfile\nFROM ruby:2.3.8\n\n# Make apt non-interactive\nRUN echo 'APT::Get::Assume-Yes \"true\";' > /etc/apt/apt.conf.d/90circleci \\\n  && echo 'DPkg::Options \"--force-confnew\";' >> /etc/apt/apt.conf.d/90circleci\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install required packages\nRUN set -ex; \\\n        apt-get update; \\\n        mkdir -p /usr/share/man/man1; \\\n        apt-get install -y --no-install-recommends \\\n            git mercurial xvfb \\\n            locales sudo openssh-client ca-certificates tar gzip parallel \\\n            net-tools netcat unzip zip bzip2 gnupg curl wget \\\n            tzdata rsync vim less; \\\n        rm -rf /var/lib/apt/lists/*;\n\n# Set timezone to UTC by default\nRUN ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Set language\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\n\n# Install jq\nRUN JQ_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/jq-latest\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/jq $JQ_URL \\\n  && chmod +x /usr/bin/jq \\\n  && jq --version\n\n# Install Docker\nRUN set -ex \\\n  && export DOCKER_VERSION=$(curl --silent --fail --retry 3 https://download.docker.com/linux/static/stable/x86_64/ | grep -o -e 'docker-[.0-9]*-ce\\.tgz' | sort -r | head -n 1) \\\n  && DOCKER_URL=\"https://download.docker.com/linux/static/stable/x86_64/${DOCKER_VERSION}\" \\\n  && echo Docker URL: $DOCKER_URL \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n  && ls -lha /tmp/docker.tgz \\\n  && tar -xz -C /tmp -f /tmp/docker.tgz \\\n  && mv /tmp/docker/* /usr/bin \\\n  && rm -rf /tmp/docker /tmp/docker.tgz \\\n  && which docker \\\n  && (docker version || true)\n\n# Install Docker Compose\nRUN COMPOSE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/docker-compose-latest\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /usr/bin/docker-compose $COMPOSE_URL \\\n  && chmod +x /usr/bin/docker-compose \\\n  && docker-compose version\n\n# Install Dockerize\nRUN DOCKERIZE_URL=\"https://circle-downloads.s3.amazonaws.com/circleci-images/cache/linux-amd64/dockerize-latest.tar.gz\" \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/dockerize-linux-amd64.tar.gz $DOCKERIZE_URL \\\n  && tar -C /usr/local/bin -xzvf /tmp/dockerize-linux-amd64.tar.gz \\\n  && rm -rf /tmp/dockerize-linux-amd64.tar.gz \\\n  && dockerize --version\n\n# Install Protobuf compiler\nRUN export PROTOC_URL=$( curl -f -s https://api.github.com/repos/protocolbuffers/protobuf/releases/latest | grep browser_download_url | cut -d '\"' -f 4 | grep -e 'protoc-[.0-9]*-linux-x86_64\\.zip' | sort -r | head -n 1) \\\n  && echo Protoc URL: $PROTOC_URL \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/protoc.zip \"${PROTOC_URL}\" \\\n  && ls -lha /tmp/protoc.zip \\\n  && unzip /tmp/protoc.zip -d /tmp/protoc \\\n  && mv /tmp/protoc/bin/* /usr/bin \\\n  && rm -rf /tmp/protoc /tmp/protoc.zip \\\n  && protoc --version\n\n# Install RubyGems\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system && rm -rf /root/.gem;\nRUN mkdir -p \"$GEM_HOME\" && chmod -R 777 \"$GEM_HOME\"\n\n# Install RubyGems\n# NOTE: Rubygems 3.0.6 is the last version that seems to work fine in this image AND not drag bundler 2 along.\n# Later versions are either broken or they force the use of bundler 2, which we can't use because some of our\n# dependencies (e.g. rails 3.0.20) don't like it.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN gem update --system '3.0.6' && rm -rf /root/.gem;\n# Ruby 2.3 can support Bundler 2+\n# But hold back to < 2 for now, because some dependencies require it.\nRUN gem install bundler -v '1.17.3'\nENV BUNDLE_SILENCE_ROOT_WARNING 1\n\nRUN mkdir /app\nWORKDIR /app\n\nCMD [\"/bin/sh\"]\n"
}