{
  "startTime": 1674217825772,
  "endTime": 1674217826968,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 78
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 161
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:21.04\n\n# Install pre-reqs\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt update >/dev/null\nRUN apt install --no-install-recommends -y jq build-essential unzip curl git pkg-config software-properties-common apt-transport-https ca-certificates >/dev/null && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n\n# Install Go\nRUN curl -f -sOL https://go.dev/dl/go1.17.5.linux-amd64.tar.gz\nRUN tar -C /usr/local -xzf go1.17.5.linux-amd64.tar.gz && rm go1.17.5.linux-amd64.tar.gz\nENV PATH=$PATH:/usr/local/go/bin:/go/bin\nENV GOPATH=/go\n\n# Install librdkafka\nRUN curl -f -sL https://packages.confluent.io/deb/6.1/archive.key | apt-key add - 2>/dev/null\nRUN add-apt-repository \"deb [arch=amd64] https://packages.confluent.io/deb/6.1 stable main\"\nRUN apt-get update && apt-get install --no-install-recommends -y librdkafka1 librdkafka-dev >/dev/null && rm -rf /var/lib/apt/lists/*;\n\n# Init repo.\nWORKDIR /go/src/github.com/DataDog/kafka-kit\nCOPY tools.go tools.go\nCOPY go.mod go.mod\nCOPY go.sum go.sum\nRUN go mod download\n\n# Install protoc\nRUN curl -f -sOL https://github.com/protocolbuffers/protobuf/releases/download/v3.19.1/protoc-3.19.1-linux-x86_64.zip\nRUN unzip protoc-3.19.1-linux-x86_64.zip -d protoc\nRUN mv protoc/bin/* /usr/local/bin/\nRUN mv protoc/include/* /usr/local/include/\nRUN rm -rf protoc*\n\n# Install protoc / gRPC deps; these versions are managed in go.mod\nRUN go get -d github.com/googleapis/googleapis\nRUN go install \\\n  google.golang.org/protobuf/cmd/protoc-gen-go \\\n  google.golang.org/grpc/cmd/protoc-gen-go-grpc \\\n  github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway\n\n# Copy source.\nCOPY cmd cmd\nCOPY cluster cluster\nCOPY kafkaadmin kafkaadmin\nCOPY kafkametrics kafkametrics\nCOPY kafkazk kafkazk\nCOPY mapper mapper\nCOPY registry registry\n\n# Codegen\nRUN protoc -I ./registry -I $GOPATH/pkg/mod/$(awk '/googleapis/ {printf \"%s@%s\", $1, $2}' go.mod) \\\n    --go_out ./registry \\\n    --go_opt paths=source_relative \\\n    --go-grpc_out ./registry \\\n    --go-grpc_opt paths=source_relative \\\n    --grpc-gateway_out ./registry \\\n    --grpc-gateway_opt logtostderr=true \\\n    --grpc-gateway_opt paths=source_relative \\\n    --grpc-gateway_opt generate_unbound_methods=true \\\n    registry/registry/registry.proto\n\n# Build\nRUN go install ./cmd/...\n\n# Clean\nRUN apt autoremove\nRUN apt clean\n\nCOPY entrypoint.sh /\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}