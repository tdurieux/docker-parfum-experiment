{
  "startTime": 1674249612136,
  "endTime": 1674249613681,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "from ubuntu:18.04\n\nRUN apt-get update >/dev/null && apt-get install --no-install-recommends -y openjdk-8-jdk openssl >/dev/null && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /etc/kafka/config\nENV CA_ROOT_KEY=kafka-ca-key.pem\nENV CA_ROOT_CERT=kafka-ca-crt.pem\nENV BROKER_CSR=kafka-broker-csr.pem\nENV BROKER_CERT=kafka-broker-cert.pem\nENV KEYSTORE=keystore.jks\nENV TRUSTSTORE=truststore.jks\nENV VALIDITY=365\nENV STOREPASS=\"password\"\n\n# Generate the key pairs for the brokers\nRUN keytool -keystore $KEYSTORE -alias localhost -keyalg RSA -validity $VALIDITY -genkey -storepass $STOREPASS -keypass $STOREPASS -dname \"CN=localhost\" -ext \"SAN=DNS:kafka\"\n\n# Generate the key pairs for the CA\nRUN openssl req -new -x509 -keyout $CA_ROOT_KEY -out $CA_ROOT_CERT -days $VALIDITY -nodes -subj \"/CN=kafka-ca\"\nRUN keytool -keystore $TRUSTSTORE -alias CARoot -import -file $CA_ROOT_CERT -storepass $STOREPASS -noprompt -trustcacerts\n\n# Sign all certificates in the keystore with the CA privatekey\nRUN keytool -keystore $KEYSTORE -alias localhost -certreq -file $BROKER_CSR -storepass $STOREPASS\nRUN openssl x509 -req -CA $CA_ROOT_CERT -CAkey $CA_ROOT_KEY -in $BROKER_CSR -out $BROKER_CERT -days $VALIDITY -CAcreateserial -passin pass:{password}\nRUN keytool -keystore $KEYSTORE -alias CARoot -import -file $CA_ROOT_CERT -storepass $STOREPASS -noprompt -trustcacerts\nRUN keytool -keystore $KEYSTORE -alias localhost -import -file $BROKER_CERT -storepass $STOREPASS -noprompt -trustcacerts"
}