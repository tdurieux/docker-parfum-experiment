{
  "startTime": 1674248580381,
  "endTime": 1674248581706,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=10.15.0\nFROM node:${NODE_VERSION}-alpine as builder\n\nENV PATH /root/.yarn/bin:$PATH\nARG ethereum_network=rinkeby\nENV ETHEREUM_NETWORK=$ethereum_network\nARG build_environment=dev\nENV BUILD_ENVIRONMENT=$build_environment\nRUN apk --no-cache add git\n\n# begin create caching layer\nCOPY package.json yarn.lock /augur/\nWORKDIR /augur\nRUN yarn install --frozen-lockfile && yarn cache clean;\n# end create caching layer\n\nCOPY . /augur\n\nRUN set -ex; \\\n    if [ \"$BUILD_ENVIRONMENT\" = \"dev\" ]; then \\\n        ETHEREUM_NETWORK=$ethereum_network yarn build --dev --augur-hosted --disableMainnet; \\\n    elif [ \"$BUILD_ENVIRONMENT\" = \"dev-optimized\" ]; then \\\n        ETHEREUM_NETWORK=$ethereum_network yarn build --production --augur-hosted --disableMainnet; \\\n    elif [ \"$BUILD_ENVIRONMENT\" = \"latest\" ]; then \\\n        ETHEREUM_NETWORK=$ethereum_network yarn build --production --augur-hosted; \\\n    fi;\n\n# need arg to pass in for augur-ui (production) and augur-dev (dev)\nRUN git rev-parse HEAD > /augur/build/git-hash.txt \\\n  && git log -1 > /augur/build/git-commit.txt\n\nFROM nginx:alpine\n\nCOPY --from=builder /augur/build/ /augur/build\nCOPY support/nginx-default.conf /etc/nginx/conf.d/default.conf\n"
}