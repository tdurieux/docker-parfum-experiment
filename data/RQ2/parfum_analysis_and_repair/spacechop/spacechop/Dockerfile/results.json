{
  "startTime": 1674221211311,
  "endTime": 1674221212439,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10-alpine\n\n#2 Add Edge and bleeding repos\n# add the edge repositories\nRUN echo \"@edge-testing http://dl-cdn.alpinelinux.org/alpine/edge/testing\" >> /etc/apk/repositories && \\\n  echo \"@edge-community http://dl-cdn.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories\n\nRUN mkdir /src\nWORKDIR /src\n\nADD /bin/CMakeLists.txt /bin/CMakeLists.txt\nADD /bin/facedetect.cpp /bin/facedetect.cpp\nADD scripts/install_deps.sh /install_deps.sh\nRUN sh /install_deps.sh\n\nADD package.json /src/package.json\nRUN npm install && npm cache clean --force;\n\nADD tsconfig.json /src/tsconfig.json\nADD nodemon.json /src/nodemon.json\n\nADD src/. /src/app\n\n# If building for production\n# - build babel to dist folder\n# - remove dev dependencies\nARG env=production\nADD scripts/build_production.sh /build_production.sh\nRUN if [ \"${env}\" = \"production\" ] ; then sh /build_production.sh ; fi\n\n# Set default image magick policy\nENV MAGICK_MEMORY_LIMIT=2GiB \\\n  MAGICK_MAP_LIMIT=4GiB \\\n  MAGICK_DISK_LIMIT=16GiB \\\n  MAGICK_AREA_LIMIT=100MP \\\n  MAGICK_HEIGHT_LIMIT=10KP \\\n  MAGICK_WIDTH_LIMIT=10KP \\\n  MAGICK_THREAD_LIMIT=4 \\\n  MAGICK_THROTTLE_LIMIT=0 \\\n  MAGICK_TIME_LIMIT=3600\n\n# Default empty config to prevent docker volumes\n# to create a directory instead of a file\nRUN touch /config.yml\nEXPOSE 80\nCMD npm start\n"
}