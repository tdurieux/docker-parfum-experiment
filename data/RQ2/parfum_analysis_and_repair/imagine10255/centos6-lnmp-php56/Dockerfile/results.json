{
  "startTime": 1674216192245,
  "endTime": 1674216193561,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 172
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos6\nMAINTAINER Imagine Chiu<imagine10255@gmail.com>\n\n\nENV SSH_PASSWORD=P@ssw0rd\n\n\n# Install base tool\nRUN yum -y install vim wget tar && rm -rf /var/cache/yum\n\n\n# Install develop tool\nRUN yum -y groupinstall development\n\n\n# Install php rpm\nRUN rpm --import http://ftp.riken.jp/Linux/fedora/epel/RPM-GPG-KEY-EPEL-6 && \\\n    rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm\n\n\n# Install SSH Service\nRUN yum install -y openssh-server passwd && rm -rf /var/cache/yum\nRUN sed -ri 's/#UsePAM no/UsePAM no/g' /etc/ssh/sshd_config && \\\n    echo \"${SSH_PASSWORD}\" | passwd \"root\" --stdin\n\n\n# Install crontab service\nRUN yum -y install vixie-cron crontabs && rm -rf /var/cache/yum\n\n\n# Install Git need package\nRUN yum -y install curl-devel expat-devel gettext-devel devel zlib-devel perl-devel && rm -rf /var/cache/yum\n\n\n# Install php-fpm (https://webtatic.com/packages/php56/\nRUN yum -y install php56w php56w-fpm php56w-mbstring php56w-xml php56w-mysql php56w-pdo php56w-gd php56w-pecl-imagick php56w-opcache php56w-pecl-memcache php56w-pecl-xdebug && rm -rf /var/cache/yum\n\n\n# Install php-mssql,mcrypt\nRUN rpm -Uvh https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm\nRUN yum -y install php56w-mssql php56w-mcrypt && rm -rf /var/cache/yum\n\n\n# Install nginx\nRUN rpm --import http://ftp.riken.jp/Linux/fedora/epel/RPM-GPG-KEY-EPEL-6 && \\\n    rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm && \\\n    yum -y update nginx-release-centos && \\\n    cp -p /etc/yum.repos.d/nginx.repo /etc/yum.repos.d/nginx.repo.backup && \\\n    sed -i -e \"s/enabled=1/enabled=0/g\" /etc/yum.repos.d/nginx.repo\nRUN yum -y --enablerepo=nginx install nginx install && rm -rf /var/cache/yum\n\n\n# Setting composer\nRUN curl -f -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer\n\n\n# Install laravel-envoy\nRUN composer global require \"laravel/envoy=~1.0\"\n\n\n# Install supervisor\nRUN yum -y install python-setuptools && \\\n    easy_install supervisor && \\\n    echo_supervisord_conf > /etc/supervisord.conf && rm -rf /var/cache/yum\n\n\n# Install MariaDB(Only Client)\nRUN echo -e \"[mariadb]\" >> /etc/yum.repos.d/MariaDB.repo && \\\n    echo -e \"name = MariaDB\" >> /etc/yum.repos.d/MariaDB.repo && \\\n    echo -e \"baseurl = http://yum.mariadb.org/10.0/centos6-amd64\" >> /etc/yum.repos.d/MariaDB.repo && \\\n    echo -e \"gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB\" >> /etc/yum.repos.d/MariaDB.repo && \\\n    echo -e \"gpgcheck=1\" >> /etc/yum.repos.d/MariaDB.repo && \\\n    yum -y install MariaDB-client && rm -rf /var/cache/yum\n\n\n# Install Freetds(MSSQL)\nRUN cd ~/ && \\\n    wget ftp://ftp.freetds.org/pub/freetds/stable/freetds-0.95.87.tar.gz && \\\n    tar zxf ./freetds-0.95.87.tar.gz && \\\n    cd ./freetds-0.95.87 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/freetds && \\\n    gmake && \\\n    gmake install && \\\n    rm -rf ~/freetds-0.95.87* && rm ./freetds-0.95.87.tar.gz\n\n\n# Install Git Laster Version\nRUN cd ~/ && \\\n    wget https://www.kernel.org/pub/software/scm/git/git-2.6.3.tar.gz && \\\n    tar zxf ./git-2.6.3.tar.gz && \\\n    cd ./git-2.6.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    rm -rf ~/git-2.6.3* && rm ./git-2.6.3.tar.gz\n\n\n# Copy files for setting\nADD . /opt/\n\n\n# Create Base Enter Cont Command\nRUN chmod 755 /opt/docker/bash/init-bashrc.sh && echo \"/opt/docker/bash/init-bashrc.sh\" >> /root/.bashrc && \\\n    echo 'export PATH=\"/root/.composer/vendor/bin:$PATH\"' >> /root/.bashrc\n\n\n# Setting lnmp(php,lnmp)\nRUN chmod 755 /opt/docker/bash/setting-lnmp.sh && bash /opt/docker/bash/setting-lnmp.sh\n\n\n# Setting DateTime Zone\nRUN cp -p /usr/share/zoneinfo/Asia/Taipei /etc/localtime\n\n\n# Setup default path\nWORKDIR /home\n\n\n# Private expose\nEXPOSE 22 80 8080\n\n\n# Volume for web server install\nVOLUME [\"/home/website\",\"/home/config\",\"/home/logs\"]\n\n\n# Start run shell\nCMD [\"bash\"]\n"
}