{
  "startTime": 1674221239925,
  "endTime": 1674221240717,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 20,
        "columnStart": 5,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Source Image\n FROM ubuntu:latest\n\n  # Set noninterative mode\n ENV DEBIAN_FRONTEND noninteractive\n\n  # apt update and install global requirements\n RUN apt-get clean all && \\\n     apt-get update && \\\n     apt-get upgrade -y && \\\n     apt-get install --no-install-recommends -y \\\n         autoconf \\\n         build-essential \\\n         cmake \\\n         git \\\n         libbz2-dev \\\n         libcurl4-openssl-dev \\\n         libssl-dev \\\n         zlib1g-dev \\\n         liblzma-dev \\\n         tabix && rm -rf /var/lib/apt/lists/*;\n\n  # apt clean and remove cached source lists\n RUN apt-get clean && \\\n     rm -rf /var/lib/apt/lists/*\n\n RUN git clone https://github.com/samtools/htslib.git\n RUN cd htslib && \\\n     autoheader && \\\n     autoconf -Wno-syntax && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/ && \\\n     make && \\\n     make install\n\n RUN git clone https://github.com/samtools/samtools.git\n RUN cd samtools && \\\n     autoheader && \\\n     autoconf -Wno-syntax && \\\n     ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/ --without-curses && \\\n     make && \\\n     make install\n  # Install FASTQuick\n\n RUN git clone https://github.com/Griffan/FASTQuick.git\n RUN cd FASTQuick && \\\n     mkdir build && \\\n     cd build && \\\n     cmake .. && \\\n     make && \\\n     make test\n RUN cp /FASTQuick/bin/FASTQuick /usr/local/bin\n\n  # Define default command\n CMD [\"cd //FASTQuick/example/ && FASTQuick index --siteVCF hapmap.test.vcf.gz --dbsnpVCF dbsnp.test.vcf.gz --ref test.fa --out_prefix test_ref && FASTQuick align --fq_list test.fq.list --index_prefix test_ref --out_prefix test_out\"]\n"
}