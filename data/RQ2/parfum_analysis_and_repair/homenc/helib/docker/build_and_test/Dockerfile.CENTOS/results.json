{
  "startTime": 1674215645204,
  "endTime": 1674215646203,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedDockerfile": "# Recipe for an HE-ready Centos 8 docker\nFROM centos:8\n\n# Install general HElib pre-requisites\nRUN yum -y update && \\\n    yum -y upgrade && \\\n    yum -y install epel-release && \\\n    yum -y group install \"Development Tools\" && \\\n    yum -y update && \\\n    yum -y install patchelf cmake wget python3 diffutils parallel && rm -rf /var/cache/yum\n\n# Install bats-core (used for testing utils and examples)\nRUN cd && \\\n    wget https://github.com/bats-core/bats-core/archive/v1.2.1.tar.gz && \\\n    tar xf v1.2.1.tar.gz && \\\n    cd bats-core-1.2.1 && \\\n    ./install.sh /usr/local && rm v1.2.1.tar.gz\n\n# Install Google Benchmarks (used for HElib benchmarks)\nRUN cd && \\\n    wget https://github.com/google/benchmark/archive/v1.5.2.tar.gz && \\\n    tar xf v1.5.2.tar.gz && \\\n    cd benchmark-1.5.2 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DBENCHMARK_ENABLE_GTEST_TESTS=OFF -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j4 && \\\n    make install && rm v1.5.2.tar.gz\n\n# Install NTL and GMP\nRUN yum -y install gmp-devel && \\\n    curl -f -O \"https://libntl.org/ntl-11.4.3.tar.gz\" && \\\n    tar xf ntl-11.4.3.tar.gz && \\\n    cd ntl-11.4.3/src && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" PREFIX=/usr/local SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on GMP_PREFIX=/usr && \\\n    make -j4 && \\\n    make install && rm -rf /var/cache/yum\n\n# Script for building and testing HElib\nCOPY build_scripts/build_and_test_helib.sh /root\n\n# Default script - Build and test HElib and all subprojects using package build\nCMD [\"/root/build_and_test_helib.sh\", \"-a\"]\n"
}