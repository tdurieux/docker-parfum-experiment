{
  "startTime": 1674254566586,
  "endTime": 1674254567787,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_UBUNTU_20_04\n# hadolint ignore=DL3006\nFROM ${IMAGE_UBUNTU_20_04}\n\nSHELL [\"/bin/bash\", \"-c\"]\nENV DEBIAN_FRONTEND=noninteractive LC_ALL=C.UTF-8 LANG=C.UTF-8 PATH=\"/opt/bin:${PATH}\"\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    dialog \\\n    gdebi \\\n    git \\\n    graphviz \\\n    libenchant1c2a \\\n    libkrb5-dev \\\n    libldap2-dev \\\n    libmysqlclient-dev \\\n    librrd-dev \\\n    libsasl2-dev \\\n    libssl-dev \\\n    libxml2 \\\n    make \\\n    nullmailer \\\n    php7.4-common \\\n    python-dev \\\n    python-dev \\\n    python3-pip \\\n    rrdtool \\\n    strace \\\n    sudo \\\n    vim \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    apache2 \\\n    apache2-dev \\\n    autoconf \\\n    build-essential \\\n    curl \\\n    default-jdk \\\n    devscripts \\\n    dnsutils \\\n    dpatch \\\n    flex \\\n    gawk \\\n    gettext \\\n    git-buildpackage \\\n    gtk-doc-tools \\\n    iputils-ping \\\n    joe \\\n    libcurl4-openssl-dev \\\n    libevent-dev \\\n    libffi-dev \\\n    libfreeradius-dev \\\n    libgd-dev \\\n    libglib2.0-dev \\\n    libgnutls28-dev \\\n    libgsf-1-dev \\\n    libkrb5-dev \\\n    libldap2-dev \\\n    libltdl-dev \\\n    libmcrypt-dev \\\n    libmysqlclient-dev \\\n    libncurses5-dev \\\n    libpango1.0-dev \\\n    libpcap-dev \\\n    libperl-dev \\\n    libpq-dev \\\n    libreadline-dev \\\n    libsqlite3-dev \\\n    libssl-dev \\\n    libtool \\\n    libxml2-dev \\\n    libxmlsec1-dev \\\n    openssh-client \\\n    patch \\\n    rpcbind \\\n    rsync \\\n    smbclient \\\n    software-properties-common \\\n    texinfo \\\n    tk-dev \\\n    uuid-dev \\\n    vim \\\n    libc6-dbg \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install our standard tool chain for building\n# - gnu-toolchain is needed for compiling all the C++ stuff\n# - cmake is needed for e.g. building re2\n# - openssl is needed by Python 3.7+\n# - python is needed by our build / test chain\nARG NEXUS_ARCHIVES_URL\nARG NEXUS_USERNAME\nARG NEXUS_PASSWORD\nARG DISTRO\nARG BRANCH_VERSION\nENV NEXUS_ARCHIVES_URL=\"$NEXUS_ARCHIVES_URL\" NEXUS_USERNAME=\"$NEXUS_USERNAME\" NEXUS_PASSWORD=\"$NEXUS_PASSWORD\" DISTRO=\"$DISTRO\" BRANCH_VERSION=\"$BRANCH_VERSION\"\n\nCOPY scripts/* /opt/\nRUN /opt/install-gnu-toolchain.sh\nRUN /opt/install-valgrind.sh\nRUN /opt/install-cmake.sh\nRUN /opt/install-protobuf-cpp.sh\nRUN /opt/install-openssl.sh\nRUN /opt/install-python.sh\nRUN /opt/install-pipenv.sh\nRUN /opt/install-freetds.sh\nRUN /opt/install-rust-cargo.sh\nRUN /opt/install-cmk-dependencies.sh\nRUN /opt/install-patchelf.sh\n\n# Exclusively for this distro at the moment, because it is used by several CI\n# jobs for special tasks (checking out git, \"make dist\", orchestrating other\n# containers, ...). Scripts should be usable with other Ubuntu versions.\nRUN /opt/install-docker.sh\nRUN /opt/install-make-dist-deps.sh\nRUN /opt/install-nodejs.sh\nRUN /opt/install-clang.sh\nRUN /opt/install-shellcheck.sh\n\n# Ensure all our build containers have the jenkins user (with same uid/gid). The non privileged\n# jobs will be executed as this user in the container\nRUN groupadd -g 1000 jenkins \\\n    && useradd -m -u 1001 -g 1000 -s /bin/bash jenkins\n\nARG VERS_TAG\nRUN echo $VERS_TAG > /version.txt\n\nLABEL \\\n    com.tribe29.image_type=\"build-image\"\n"
}