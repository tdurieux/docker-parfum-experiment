{
  "startTime": 1674219088378,
  "endTime": 1674219089430,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 7,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_CMK_BASE\n# hadolint ignore=DL3006\nFROM ${IMAGE_CMK_BASE}\nLABEL maintainer=\"feedback@checkmk.com\"\n\n# Pure build time variable declarations (docker build --build-arg KEY=val)\nARG CMK_VERSION=\"2.1.0i1\"\n# Choose one of: raw, enterprise, managed\nARG CMK_EDITION=\"raw\"\n\nARG CMK_DL_URL=\"https://download.checkmk.com/checkmk\"\n\n# The following variables can be set during container init (docker run -e KEY=val)\nARG CMK_SITE_ID\nENV CMK_SITE_ID=\"cmk\"\n# Set this to \"on\" to enable livestatus via network\nARG CMK_LIVESTATUS_TCP\nENV CMK_LIVESTATUS_TCP=\"\"\n# A random password will be generated in case you don't set this\nARG CMK_PASSWORD\nENV CMK_PASSWORD=\"\"\n\n# Specify the FQDN of your relay mail server to sent mails to\nARG MAIL_RELAY_HOST\nENV MAIL_RELAY_HOST=\"\"\n\n# Make the list of required packages available to the following command\nCOPY needed-packages /needed-packages\n\n# First install the tools we need for fetching the package and installation\n# Then fetch the package and install it. This will make sure all Checkmk\n# containers will share all dependencies, including this step.\n# hadolint ignore=SC2046,DL3008\nRUN set -e \\\n    && echo \"exit 101\" > /usr/sbin/policy-rc.d \\\n    && chmod +x /usr/sbin/policy-rc.d \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        postfix \\\n        libsasl2-modules \\\n        inetutils-syslogd \\\n        bsd-mailx \\\n        gnupg2 \\\n        openssh-client \\\n        iputils-ping \\\n        dpkg-sig \\\n        net-tools \\\n        git \\\n        $(cat needed-packages) \\\n    && apt-get clean \\\n    && rm /usr/sbin/policy-rc.d \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm needed-packages\n\n#\n# Optionally copy an existing Checkmk debian package to the container. In case the file is\n# available that is later used by the build procedure the file will not be downloaded.\nCOPY check-mk-${CMK_EDITION}-${CMK_VERSION}_0.buster_*.deb Check_MK-pubkey.gpg /\n\n# Now install the Checkmk version specific things\n# hadolint ignore=DL3003,DL3008,DL4006\nRUN set -e \\\n    && mkdir -p /usr/share/man/man8 \\\n    && echo \"exit 101\" > /usr/sbin/policy-rc.d \\\n    && chmod +x /usr/sbin/policy-rc.d \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    && PKG_NAME=\"check-mk-${CMK_EDITION}-${CMK_VERSION}\" \\\n    && PKG_FILE=\"${PKG_NAME}_0.buster_$(dpkg --print-architecture).deb\" \\\n    && CREDENTIALS_URL=\"http://localhost:8000/secret\" \\\n    && if [ ! -e \"/${PKG_FILE}\" ]; then \\\n        echo \"Receive download credentials from ${CREDENTIALS_URL}...\" && \\\n        CMK_DL_CREDENTIALS=$(curl -fsS \"${CREDENTIALS_URL}\") && \\\n        echo \"Downloading ${PKG_FILE}...\" && \\\n        echo \"--user \\\"${CMK_DL_CREDENTIALS}\\\"\" \\\n            | curl -f -o \"${PKG_FILE}\" -K - \"${CMK_DL_URL}/${CMK_VERSION}/${PKG_FILE}\" ; \\\n       fi \\\n    && gpg --batch -q --import \"/Check_MK-pubkey.gpg\" \\\n    && dpkg-sig --verify \"${PKG_FILE}\" \\\n    && dpkg -i \"${PKG_FILE}\" \\\n    && dpkg -i \"$(ls /omd/versions/default/share/check_mk/agents/check-mk-agent_*-1_all.deb)\" \\\n    && rm -f -- *.deb *.gpg \\\n    && apt-get clean \\\n    && rm /usr/sbin/policy-rc.d \\\n    && rm -rf /var/lib/apt/lists/*\n\nLABEL \\\n    org.opencontainers.image.title=\"Checkmk\" \\\n    org.opencontainers.image.version=\"${CMK_VERSION}\" \\\n    org.opencontainers.image.description=\"Checkmk is a leading tool for Infrastructure & Application Monitoring\" \\\n    org.opencontainers.image.vendor=\"tribe29 GmbH\" \\\n    org.opencontainers.image.source=\"https://github.com/tribe29/checkmk\" \\\n    org.opencontainers.image.url=\"https://checkmk.com/\"\n\n# Ports:\n# 5000 - Serves the Checkmk GUI\n# 6557 - Serves Livestatus (if enabled via \"omd config\")\nEXPOSE 5000 6557\n\n# When all processes of the site are running everything should be fine\nHEALTHCHECK --interval=1m --timeout=5s \\\n    CMD omd status || exit 1\n\nCOPY docker-entrypoint.sh /\n# Starts the entrypoint script and hands over CMD by default\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}