{
  "startTime": 1674217049760,
  "endTime": 1674217050324,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 36,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM elixir:1.8\nMAINTAINER Jonas Thiel <jonas@thiel.io>\n\nENV REQUIRED_PACKAGES=\"nodejs yarn\" \\\n    APP_HOME=\"/app\" \\\n    MIX_ENV=\"prod\" \\\n    NEOBOARD_PORT=\"4000\" \\\n    HEX_HTTP_TIMEOUT=\"240\"\n\nRUN curl -f -sL https://deb.nodesource.com/setup_9.x | bash - \\\n && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get install -y -q --no-install-recommends  \\\n    $REQUIRED_PACKAGES \\\n && apt-get autoremove -y \\\n && apt-get clean \\\n && rm -rf /tmp/* /var/lib/apt/lists/* /var/cache/debconf/*-old /usr/share/doc/* /usr/share/man/* \\\n && cp -r /usr/share/locale/en\\@* /tmp/ && rm -rf /usr/share/locale/* && mv /tmp/en\\@* /usr/share/locale/ \\\n && mkdir $APP_HOME\n\nWORKDIR $APP_HOME\nCOPY [\"package.json\", \"yarn.lock\", \"${APP_HOME}/\"]\nCOPY tools ${APP_HOME}/tools\nRUN yarn install --pure-lockfile && yarn cache clean;\n\nRUN mix local.hex --force \\\n && mix local.rebar --force\nCOPY [\"mix.exs\", \"mix.lock\", \"${APP_HOME}/\"]\nRUN mix deps.get\n\nCOPY config ${APP_HOME}/config\nCOPY lib ${APP_HOME}/lib\nCOPY test ${APP_HOME}/test\nCOPY web ${APP_HOME}/web\nCOPY rel/config.exs ${APP_HOME}/rel/\nRUN mix compile\n\nCOPY [\"webpack.config.js\", \".babelrc\", \"${APP_HOME}/\"]\nRUN mix assets.compile \\\n && mix phx.digest\n\nEXPOSE 4000\n\nCMD [\"mix\", \"phx.server\"]\n"
}