{
  "startTime": 1674251673099,
  "endTime": 1674251674154,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 7,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/ubi8\n\nARG USER_ID=1000\nARG USER_NAME=galaxy\nARG USER_GROUP=galaxy\nARG COMPOSE_PROFILE\nARG LOCK_REQUIREMENTS\nARG DEV_SOURCE_PATH\nARG DEV_IMAGE_SUFFIX\nARG DEV_VOLUME_SUFFIX\n\nENV LANG=en_US.UTF-8 \\\n    PYTHONUNBUFFERED=1 \\\n    PULP_SETTINGS=/etc/pulp/settings.py \\\n    DJANGO_SETTINGS_MODULE=pulpcore.app.settings \\\n    COMPOSE_PROFILE=\"${COMPOSE_PROFILE}\" \\\n    LOCK_REQUIREMENTS=\"${LOCK_REQUIREMENTS}\" \\\n    DEV_SOURCE_PATH=\"${DEV_SOURCE_PATH}\" \\\n    DEV_IMAGE_SUFFIX=\"${DEV_IMAGE_SUFFIX}\" \\\n    DEV_VOLUME_SUFFIX=\"${DEV_VOLUME_SUFFIX}\"\n\nRUN set -ex; \\\n    id --group \"${USER_GROUP}\" &>/dev/null \\\n    || groupadd --gid \"${USER_ID}\" \"${USER_GROUP}\"; \\\n    \\\n    useradd --uid ${USER_ID} --gid \"${USER_GROUP}\" \"${USER_NAME}\"\n\n# Install dependencies:\n#   * glibc-langpack-en: install missing en_US.UTF-8 locale\n# NOTE(cutwater): This is a workaround for https://bugs.centos.org/view.php?id=16934\n#   See also: https://bugzilla.redhat.com/show_bug.cgi?id=1680124#c6\nRUN set -ex; \\\n    touch /var/lib/rpm/* \\\n    && dnf -y install \\\n        git \\\n        gcc \\\n        glibc-langpack-en \\\n        python38-devel \\\n        libpq \\\n        libpq-devel \\\n        pinentry \\\n        make \\\n        openldap-devel \\\n    && dnf clean all \\\n    && rm -rf /var/cache/dnf/ \\\n    && rm -f /var/lib/rpm/__db.* \\\n    && mkdir --mode=2775 /venv \\\n    && chown ${USER_NAME}:${USER_GROUP} /venv \\\n    && mkdir --mode=2775 /app \\\n    && chown ${USER_NAME}:${USER_GROUP} /app\n\n# Install entr so we can have reload on worker processes\nRUN git clone https://github.com/eradman/entr && \\\n    cd entr && \\\n    cp Makefile.linux Makefile && \\\n    make && \\\n    make install\n\nUSER ${USER_NAME}:${USER_GROUP}\nRUN set -ex; \\\n    python3 -m venv /venv\n\nENV PATH=\"/venv/bin:${PATH}\" \\\n    VIRTUAL_ENV=\"/venv\"\n\nCOPY ./requirements/requirements.common.txt /tmp/requirements.txt\nCOPY ./dev/common/ansible-sign.key /tmp/ansible-sign.key\n\nRUN set -ex; \\\n    pip install --no-cache-dir --upgrade pip \\\n    && if [[ \"${LOCK_REQUIREMENTS}\" -eq \"1\" ]]; then \\\n    pip install --no-cache-dir --requirement /tmp/requirements.txt; fi\n\n# Install application\nCOPY --chown=${USER_NAME}:${USER_GROUP} . /app\n\n# When LOCK_REQUIREMENTS is disabled avoid running collectstatic here\n# on that case developer should run collectstatic manually\nRUN set -ex; \\\n    pip install --no-cache-dir --editable /app \\\n    && pip install --no-cache-dir -r /app/requirements/requirements.dev.txt\n\nUSER root:root\nRUN set -ex; \\\n    mkdir --mode=2775 -p /etc/pulp/certs/ && \\\n    if [[ \"${LOCK_REQUIREMENTS}\" -eq \"1\" ]]; then \\\n    PULP_CONTENT_ORIGIN=x django-admin collectstatic; fi\n\n# Finalize installation\nRUN set -ex; \\\n    mkdir -p /entrypoints.d \\\n            /etc/ansible \\\n    && mkdir --mode=2775 -p /var/lib/pulp \\\n    && chown ${USER_NAME}:${USER_GROUP} /var/lib/pulp \\\n    && mkdir --mode=2775 -p \\\n             /var/lib/pulp/artifact \\\n             /var/lib/pulp/tmp \\\n             /var/lib/pulp/scripts \\\n             /etc/pulp/certs \\\n             /tmp/ansible \\\n    && chown ${USER_NAME}:${USER_GROUP} /var/lib/pulp/artifact \\\n    && chown ${USER_NAME}:${USER_GROUP} /var/lib/pulp/tmp \\\n    && chown ${USER_NAME}:${USER_GROUP} /var/lib/pulp/scripts \\\n    && chown ${USER_NAME}:${USER_GROUP} /etc/pulp/certs \\\n    && chown ${USER_NAME}:${USER_GROUP} \\\n        /tmp/ansible \\\n        /etc/ansible \\\n    && chmod -R 0775 /app/docker/entrypoint.sh \\\n                     /app/docker/bin/* \\\n    && mv /app/docker/entrypoint.sh /entrypoint.sh \\\n    && mv /app/ansible.cfg /etc/ansible/ansible.cfg \\\n    && mv /app/docker/bin/* /usr/local/bin \\\n    && touch /var/log/galaxy_api_access.log \\\n    && chmod 0644 /var/log/galaxy_api_access.log \\\n    && chown galaxy:galaxy /var/log/galaxy_api_access.log \\\n    && echo \"DNmNdwgyZugTax9S64J0FITTr9IHPxbuoF1F1CGPr68=\" > /etc/pulp/certs/database_fields.symmetric.key\n\n# This symmetric.key is for dev only and should not be used in production\n# DNmNdwgyZugTax9S64J0FITTr9IHPxbuoF1F1CGPr68=\n\nUSER \"${USER_NAME}\"\nVOLUME [ \"/var/lib/pulp\", \"/tmp/ansible\" ]\nENTRYPOINT [ \"/entrypoint.sh\" ]\n"
}