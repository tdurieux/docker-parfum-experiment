{
  "startTime": 1674248212407,
  "endTime": 1674248213226,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8 as base\n\n# Setup env\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONFAULTHANDLER 1\n\nFROM base AS python-deps\n\n# Install pipenv and compilation dependencies\nRUN pip install --no-cache-dir pipenv\nRUN apt-get update && apt-get install -y --no-install-recommends gcc && rm -rf /var/lib/apt/lists/*;\n\n# Install python dependencies in /.venv directly from the lock file for reproducible builds\nCOPY Pipfile .\nCOPY Pipfile.lock .\nRUN PIPENV_VENV_IN_PROJECT=1 pipenv install --ignore-pipfile --deploy\n\nFROM python:3.8-alpine3.15 AS runtime\n\n# Copy virtual env from python-deps stage\nCOPY --from=python-deps /.venv /.venv\nENV PATH=\"/.venv/bin:$PATH\"\n\n# Create and switch to a new user\n# RUN useradd --create-home appuser\n# WORKDIR /home/appuser\n# USER appuser\n\n# Install application into container\nCOPY app/ .\n\nCOPY ./docker-entrypoint.sh .\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n\n# Use the nobody user's numeric UID/GID to satisfy MustRunAsNonRoot PodSecurityPolicies\n# https://kubernetes.io/docs/concepts/policy/pod-security-policy/#users-and-groups\n# IMPORTANT: This user can be overriden by a k8s SecurityContext!\nUSER 65534:65534\n\nCMD [\"kopf-k8s-sidecar\"]\n"
}