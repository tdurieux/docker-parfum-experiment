diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/triqs/triqs/packaging/Dockerfile.msan b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/triqs/triqs/packaging/Dockerfile.msan/repaired.Dockerfile
index 232eb50..788fb20 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/triqs/triqs/packaging/Dockerfile.msan
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/triqs/triqs/packaging/Dockerfile.msan/repaired.Dockerfile
@@ -2,9 +2,9 @@ FROM ubuntu:focal
 ARG LLVM=13
 ARG NTHREAD=10
 
-RUN apt-get update && apt-get install -y lsb-release wget software-properties-common && \
+RUN apt-get update && apt-get install --no-install-recommends -y lsb-release wget software-properties-common && \
       wget -O /tmp/llvm.sh https://apt.llvm.org/llvm.sh && chmod +x /tmp/llvm.sh && /tmp/llvm.sh ${LLVM} && \
-      DEBIAN_FRONTEND=noninteractive apt-get install -y \
+      DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
       clang-${LLVM} \
       cmake \
       g++ \
@@ -27,7 +27,7 @@ RUN apt-get update && apt-get install -y lsb-release wget software-properties-co
       python3-matplotlib \
       python3-numpy \
       python3-pip \
-      python3-scipy
+      python3-scipy && rm -rf /var/lib/apt/lists/*;
 
 ENV PYTHON_VERSION=3.8 \
     CC=clang-${LLVM} CXX=clang++-${LLVM} LLVM_VERSION=${LLVM}.0.0
@@ -52,8 +52,8 @@ ENV CXXFLAGS="-stdlib=libc++ -fsanitize=memory -fno-omit-frame-pointer -fsanitiz
 # Static zlib using fPIC to be linked into hdf5
 ADD https://cfhcable.dl.sourceforge.net/project/libpng/zlib/1.2.11/zlib-1.2.11.tar.gz /tmp/
 RUN cd /tmp && tar xf /tmp/zlib-1.2.11.tar.gz && cd zlib-1.2.11 && \
-      CFLAGS="-fPIC $CFLAGS" ./configure --prefix=/opt/zlib && make -j${NTHREAD} && make install && \
-      cd /tmp && rm -rf /tmp/zlib*
+      CFLAGS="-fPIC $CFLAGS" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/zlib && make -j${NTHREAD} && make install && \
+      cd /tmp && rm -rf /tmp/zlib* && rm /tmp/zlib-1.2.11.tar.gz
 
 # HDF5
 ADD https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.12/hdf5-1.12.0/src/CMake-hdf5-1.12.0.tar.gz /tmp/
@@ -62,40 +62,40 @@ RUN cd /tmp && tar xf /tmp/CMake-hdf5-1.12.0.tar.gz && chmod 1777 . && \
       cmake /tmp/CMake-hdf5-1.12.0/hdf5-1.12.0 -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/opt/hdf5 \
                                                -DHDF5_ENABLE_Z_LIB_SUPPORT=ON -DZLIB_LIBRARY=/opt/zlib/lib/libz.a -DZLIB_INCLUDE_DIR:PATH=/opt/zlib/include && \
       make -j${NTHREAD} && make install && \
-      cd /tmp && rm -rf /tmp/CMake-hdf5-1.12.0* /tmp/build
+      cd /tmp && rm -rf /tmp/CMake-hdf5-1.12.0* /tmp/build && rm /tmp/CMake-hdf5-1.12.0.tar.gz
 ENV HDF5_ROOT=/opt/hdf5
 
 # libevent
 ADD https://github.com/libevent/libevent/releases/download/release-2.1.12-stable/libevent-2.1.12-stable.tar.gz /tmp/
 RUN cd /tmp && tar xf /tmp/libevent-2.1.12-stable.tar.gz && cd libevent-2.1.12-stable && \
-      ./configure --prefix=/opt/openmpi --enable-shared && make -j${NTHREAD} && make install && \
-      cd /tmp && rm -rf /tmp/libevent*
+      ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/openmpi --enable-shared && make -j${NTHREAD} && make install && \
+      cd /tmp && rm -rf /tmp/libevent* && rm /tmp/libevent-2.1.12-stable.tar.gz
 
 # hwloc
 ADD https://download.open-mpi.org/release/hwloc/v2.2/hwloc-2.2.0.tar.bz2 /tmp/
 COPY packaging/hwloc.patch /tmp/
 RUN cd /tmp && tar xf /tmp/hwloc-2.2.0.tar.bz2 && patch -p0 -i hwloc.patch && cd hwloc-2.2.0 && \
-      ./configure --prefix=/opt/openmpi --enable-shared && make -j${NTHREAD} && make install && \
-      cd /tmp && rm -rf /tmp/hwloc*
+      ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/openmpi --enable-shared && make -j${NTHREAD} && make install && \
+      cd /tmp && rm -rf /tmp/hwloc* && rm /tmp/hwloc-2.2.0.tar.bz2
 
 # OpenMPI
 ADD https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-4.1.1.tar.bz2 /tmp/
 RUN cd /tmp && tar xf /tmp/openmpi-4.1.1.tar.bz2 && cd openmpi-4.1.1 && \
-      ./configure --prefix=/opt/openmpi --enable-shared --disable-mpi-fortran --disable-pty-support --with-hwloc=/opt/openmpi --with-libevent=/opt/openmpi && make -j${NTHREAD} && make install && \
-      cd /tmp && rm -rf /tmp/openmpi-4.1.1*
+      ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/openmpi --enable-shared --disable-mpi-fortran --disable-pty-support --with-hwloc=/opt/openmpi --with-libevent=/opt/openmpi && make -j${NTHREAD} && make install && \
+      cd /tmp && rm -rf /tmp/openmpi-4.1.1* && rm /tmp/openmpi-4.1.1.tar.bz2
 ENV MPI_ROOT=/opt/openmpi \
     MPICC=/opt/openmpi/bin/mpicc
 
 # Use libflame to provide blas / lapack
 RUN git clone https://github.com/Wentzell/libflame /tmp/libflame && cd /tmp/libflame && \
-      ./configure --prefix=/opt/libflame --enable-lapack2flame --enable-builtin-blas && make -j${NTHREAD} && make install && \
+      ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/libflame --enable-lapack2flame --enable-builtin-blas && make -j${NTHREAD} && make install && \
       cd /tmp && rm -rf /tmp/libflame
 
 # Dockerfile.build with sanitization enabled
 COPY requirements.txt /src/triqs/requirements.txt
 # Install numpy first to prevent h5py from pulling in a newer version first
-RUN pip3 install `grep numpy /src/triqs/requirements.txt` && \
-    pip3 install -r /src/triqs/requirements.txt
+RUN pip3 install --no-cache-dir `grep numpy /src/triqs/requirements.txt` && \
+    pip3 install --no-cache-dir -r /src/triqs/requirements.txt
 
 RUN useradd -m build