{
  "startTime": 1674248145914,
  "endTime": 1674248146830,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 156,
        "columnEnd": 236
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 239,
        "columnEnd": 286
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 15,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Fluentd watcher agent\nFROM golang:1.17-alpine3.13 as buildergo\nRUN mkdir -p /fluentd\nRUN mkdir -p /code\nCOPY . /code/\nWORKDIR /code\nRUN echo $(ls -al /code)\nRUN CGO_ENABLED=0 go build -i -ldflags '-w -s' -o /fluentd/fluentd-watcher /code/cmd/fluent-watcher/fluentd/main.go\n\n# To set multiarch build for Docker hub automated build.\nFROM golang:alpine AS builderqemu\nWORKDIR /go\nENV QEMU_DOWNLOAD_SHA256 5db25cccb40ac7b1ca857653b883376b931d91b06ff34ffe70dcf6180bd07bb8\nRUN apk add curl --no-cache\nRUN curl -f -sL -o qemu-6.0.0.balena1-aarch64.tar.gz https://github.com/balena-io/qemu/releases/download/v6.0.0%2Bbalena1/qemu-6.0.0.balena1-aarch64.tar.gz && echo \"$QEMU_DOWNLOAD_SHA256  *qemu-6.0.0.balena1-aarch64.tar.gz\" | sha256sum -c - | tar zxvf qemu-6.0.0.balena1-aarch64.tar.gz -C . && mv qemu-6.0.0+balena1-aarch64/qemu-aarch64-static . && rm qemu-6.0.0.balena1-aarch64.tar.gz\n\n# Fluentd main image\nFROM arm64v8/ruby:2.7-slim-bullseye\nCOPY --from=builderqemu /go/qemu-aarch64-static /usr/bin/\nLABEL Description=\"Fluentd docker image\" Vendor=\"Fluent Organization\" Version=\"1.14.6\"\nENV TINI_VERSION=0.18.0\n\n# Do not split this into multiple RUN!\n# Docker creates a layer for every RUN-Statement\n# therefore an 'apt-get purge' has no effect\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n            ca-certificates \\\n && buildDeps=\" \\\n      make gcc g++ libc-dev \\\n      wget bzip2 gnupg dirmngr \\\n    \" \\\n && apt-get install -y --no-install-recommends $buildDeps \\\n && echo 'gem: --no-document' >> /etc/gemrc \\\n && gem install oj -v 3.10.18 \\\n && gem install json -v 2.4.1 \\\n && gem install async-http -v 0.54.0 \\\n && gem install ext_monitor -v 0.1.2 \\\n && gem install fluentd -v 1.14.6 \\\n && gem install bigdecimal -v 1.4.4 \\\n && gem install resolv -v 0.2.1 \\\n && gem install elasticsearch -v 7.13.3 \\\n && gem install elasticsearch-xpack -v 7.13.3 \\\n && gem install fluent-plugin-detect-exceptions -v 0.0.14 \\\n && gem install \\\n         fluent-plugin-s3 \\\n         fluent-plugin-rewrite-tag-filter \\\n         fluent-plugin-oss \\\n         fluent-plugin-dedot_filter \\\n         fluent-plugin-sumologic_output \\\n         fluent-plugin-kafka \\\n         fluent-plugin-label-router \\\n         fluent-plugin-record-modifier \\\n         fluent-plugin-multi-format-parser \\\n         fluent-plugin-aws-elasticsearch-service \\\n         fluent-plugin-opensearch \\\n && echo \"plugin installed.\" \\\n && wget -O /tmp/jemalloc-4.5.0.tar.bz2 https://github.com/jemalloc/jemalloc/releases/download/4.5.0/jemalloc-4.5.0.tar.bz2 \\\n && cd /tmp && tar -xjf jemalloc-4.5.0.tar.bz2 && cd jemalloc-4.5.0/ \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make \\\n && mv lib/libjemalloc.so.2 /usr/lib \\\n && apt-get purge -y --auto-remove \\\n                  -o APT::AutoRemove::RecommendsImportant=false \\\n                  $buildDeps \\\n && rm -rf /var/lib/apt/lists/* \\\n && rm -rf /tmp/* /var/tmp/* /usr/lib/ruby/gems/*/cache/*.gem /usr/lib/ruby/gems/2.*/gems/fluentd-*/test && rm jemalloc-4.5.0.tar.bz2\n\nRUN groupadd -r fluent && useradd -r -g fluent fluent \\\n    # for log storage (maybe shared with host)\n    && mkdir -p /fluentd/log \\\n    # configuration/plugins path (default: copied from .)\n    && mkdir -p /fluentd/etc /fluentd/plugins \\\n    && chown -R fluent /fluentd && chgrp -R fluent /fluentd\n\nENV FLUENTD_CONF=\"fluent.conf\"\n\nENV LD_PRELOAD=\"/usr/lib/libjemalloc.so.2\"\nEXPOSE 24224 5140\n\nUSER fluent\n\nCOPY ./cmd/fluent-watcher/fluentd/base/fluent.conf /fluentd/etc/\nCOPY ./cmd/fluent-watcher/fluentd/app/app.conf /fluentd/etc/\n\n# copy the output in buildergo\nCOPY --from=buildergo /fluentd/fluentd-watcher /fluentd/bin/fluentd-watcher\n# Entry point\nENTRYPOINT [\"/fluentd/bin/fluentd-watcher\"]\n"
}