{
  "startTime": 1674219269097,
  "endTime": 1674219270082,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 64,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 87,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Special Dockerfile to build all CentOS targets, the only difference is\n# the packages in the base image.\n# Set this to the base image to use in each case, so if we want to build for centos/7\n# we would set BASE_BUILDER=centos-7-base.\nARG BASE_BUILDER\n# Lookup the name to use below but should follow the '<distro>-base' convention with slashes replaced.\n# Use buildkit to skip unused base images: DOCKER_BUILDKIT=1\n\n# Multiarch support\nFROM multiarch/qemu-user-static:x86_64-aarch64 as multiarch-aarch64\n\n# centos/7 base image\nFROM centos:7 as centos-7-base\n\n# hadolint ignore=DL3033\nRUN yum -y update && \\\n    yum install -y rpm-build curl ca-certificates gcc gcc-c++ cmake make bash \\\n                   wget unzip systemd-devel wget flex bison \\\n                   cyrus-sasl-lib cyrus-sasl-devel openssl openss-libs openssl-devel \\\n                   postgresql-libs postgresql-devel postgresql-server postgresql libyaml-devel && \\\n    wget -q https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    rpm -ivh epel-release-latest-7.noarch.rpm && \\\n    yum install -y cmake3 && \\\n    yum clean all && rm -rf /var/cache/yum\n\nARG FLB_OUT_PGSQL=On\nENV FLB_OUT_PGSQL=$FLB_OUT_PGSQL\n\n# centos/7.arm64v8 base image\nFROM arm64v8/centos:7 as centos-7.arm64v8-base\n\nCOPY --from=multiarch-aarch64 /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static\n\n# hadolint ignore=DL3033\nRUN yum -y update && \\\n    yum install -y rpm-build curl ca-certificates gcc gcc-c++ cmake make bash \\\n                   wget unzip systemd-devel wget flex bison \\\n                   cyrus-sasl-lib openssl openss-libs openssl-devel \\\n                   postgresql-libs postgresql-devel postgresql-server postgresql libyaml-devel && \\\n    wget -q https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    rpm -ivh epel-release-latest-7.noarch.rpm && \\\n    yum install -y cmake3 && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# There are no postgresql libraries available for this target\nARG FLB_OUT_PGSQL=Off\nENV FLB_OUT_PGSQL=$FLB_OUT_PGSQL\n\n# Need larger page size\nARG FLB_JEMALLOC_OPTIONS=\"--with-lg-page=16 --with-lg-quantum=3\"\nENV FLB_JEMALLOC_OPTIONS=$FLB_JEMALLOC_OPTIONS\n\n# centos/8 base image\nFROM centos:8 as centos-8-base\n\n# CentOS is now EOL so have to use the vault repos\nRUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && \\\n    sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*\n\n# Add for the YAML development libraries\nRUN sed -i 's/enabled=0/enabled=1/g' /etc/yum.repos.d/CentOS-Linux-PowerTools.repo\n\n# hadolint ignore=DL3033\nRUN yum -y update && \\\n    yum install -y rpm-build curl ca-certificates gcc gcc-c++ cmake make bash \\\n                   wget unzip systemd-devel wget flex bison \\\n                   postgresql-libs postgresql-devel postgresql-server postgresql \\\n                   cyrus-sasl-lib openssl openssl-libs openssl-devel libyaml-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\nARG FLB_OUT_PGSQL=On\nENV FLB_OUT_PGSQL=$FLB_OUT_PGSQL\n\n# centos/8.arm64v8 base image\nFROM arm64v8/centos:8 as centos-8.arm64v8-base\n\nCOPY --from=multiarch-aarch64 /usr/bin/qemu-aarch64-static /usr/bin/qemu-aarch64-static\n\n# CentOS is now EOL so have to use the vault repos\nRUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* && \\\n    sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*\n\n# Add for the YAML development libraries\nRUN sed -i 's/enabled=0/enabled=1/g' /etc/yum.repos.d/CentOS-Linux-PowerTools.repo\n\n# hadolint ignore=DL3033\nRUN yum -y update && \\\n    yum install -y rpm-build curl ca-certificates gcc gcc-c++ cmake make bash \\\n                   wget unzip systemd-devel wget flex bison \\\n                   postgresql-libs postgresql-devel postgresql-server postgresql \\\n                   cyrus-sasl-lib openssl openssl-libs openssl-devel libyaml-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\nARG FLB_OUT_PGSQL=On\nENV FLB_OUT_PGSQL=$FLB_OUT_PGSQL\n\n# Need larger page size\nARG FLB_JEMALLOC_OPTIONS=\"--with-lg-page=16 --with-lg-quantum=3\"\nENV FLB_JEMALLOC_OPTIONS=$FLB_JEMALLOC_OPTIONS\n\n# Common build for all distributions now\n# hadolint ignore=DL3006\nFROM $BASE_BUILDER as builder\n\nARG FLB_NIGHTLY_BUILD\nENV FLB_NIGHTLY_BUILD=$FLB_NIGHTLY_BUILD\n\n# Docker context must be the base of the repo\nWORKDIR /tmp/fluent-bit/\nCOPY . ./\n\nWORKDIR /tmp/fluent-bit/build/\n# CMake configuration variables\n# Unused\nARG CFLAGS\nARG CMAKE_INSTALL_PREFIX=/opt/td-agent-bit/\nARG CMAKE_INSTALL_SYSCONFDIR=/etc/\nARG FLB_TD=On\nARG FLB_RELEASE=On\nARG FLB_TRACE=On\nARG FLB_SQLDB=On\nARG FLB_HTTP_SERVER=On\nARG FLB_OUT_KAFKA=On\nARG FLB_JEMALLOC=On\n\n# cmake3 exists in every image - cmake references the older cmake2 in centos 7\nRUN cmake3 -DCMAKE_INSTALL_PREFIX=\"$CMAKE_INSTALL_PREFIX\" \\\n           -DCMAKE_INSTALL_SYSCONFDIR=\"$CMAKE_INSTALL_SYSCONFDIR\" \\\n           -DFLB_RELEASE=\"$FLB_RELEASE\" \\\n           -DFLB_TRACE=\"$FLB_TRACE\" \\\n           -DFLB_TD=\"$FLB_TD\" \\\n           -DFLB_SQLDB=\"$FLB_SQLDB\" \\\n           -DFLB_HTTP_SERVER=\"$FLB_HTTP_SERVER\" \\\n           -DFLB_OUT_KAFKA=\"$FLB_OUT_KAFKA\" \\\n           -DFLB_OUT_PGSQL=\"$FLB_OUT_PGSQL\" \\\n           -DFLB_NIGHTLY_BUILD=\"$FLB_NIGHTLY_BUILD\" \\\n           -DFLB_JEMALLOC_OPTIONS=\"$FLB_JEMALLOC_OPTIONS\" \\\n           -DFLB_JEMALLOC=\"${FLB_JEMALLOC}\" \\\n           ../\n\nVOLUME [ \"/output\" ]\nCMD [ \"/bin/bash\", \"-c\", \"make -j 4 && cpack3 -G RPM && cp *.rpm /output/\" ]\n"
}