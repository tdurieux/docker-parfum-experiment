{
  "startTime": 1674251942669,
  "endTime": 1674251943968,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG SGX_MODE=HW\nARG NETWORK_ID=AB\n\nFROM ubuntu:18.04 AS RUNTIME_BASE\nLABEL maintainer=\"blockchain@crypto.com\"\n\nRUN set -e; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y wget libssl-dev libcurl4-openssl-dev libprotobuf-dev gnupg; \\\n    echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | tee /etc/apt/sources.list.d/intel-sgx.list; \\\n    wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add -; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y libudev-dev libssl1.1 libprotobuf10 libsgx-launch libsgx-urts libsgx-epid libsgx-quote-ex; \\\n    rm -rf /var/lib/apt/lists/*\n\nCOPY --from=tendermint/tendermint:v0.33.7 /usr/bin/tendermint /usr/bin/tendermint\n\nFROM baiduxlab/sgx-rust:1804-1.1.2 AS BUILDER_BASE\nLABEL maintainer=\"blockchain@crypto.com\"\n\nARG SGX_MODE\nARG NETWORK_ID\n\nENV SGX_SDK=/opt/sgxsdk\nENV PATH=/root/.cargo/bin:/root/.local/bin:$PATH\nENV RUST_BACKTRACE=1\nENV RUSTFLAGS \"-Ctarget-feature=+aes,+sse2,+sse4.1,+ssse3\"\nENV SGX_MODE=$SGX_MODE\nENV NETWORK_ID=$NETWORK_ID\n\nRUN set -e; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n      cmake \\\n      libgflags-dev \\\n      libudev-dev \\\n      pkg-config xz-utils; \\\n    wget -q https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0-rc1/clang+llvm-11.0.0-rc1-x86_64-linux-gnu-ubuntu-16.04.tar.xz; \\\n    tar -xf clang+llvm-11.0.0-rc1-x86_64-linux-gnu-ubuntu-16.04.tar.xz --strip-components=1 -C /usr/; rm clang+llvm-11.0.0-rc1-x86_64-linux-gnu-ubuntu-16.04.tar.xz \\\n    update-alternatives --install /usr/bin/cc cc /usr/bin/clang 30; \\\n    ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so; \\\n    rm -rf /var/lib/apt/lists/*\n\n# fortanix environment\nRUN set -e; \\\n    rustup update; \\\n    rustup target add x86_64-fortanix-unknown-sgx; \\\n    cargo install fortanix-sgx-tools sgxs-tools cargo-crate-type\n\nCOPY --from=tendermint/tendermint:v0.33.7 /usr/bin/tendermint /usr/bin/tendermint\n\nFROM BUILDER_BASE AS TEST\nLABEL maintainer=\"blockchain@crypto.com\"\n\nARG SGX_MODE\nARG NETWORK_ID\n\nENV SGX_MODE=$SGX_MODE\nENV NETWORK_ID=$NETWORK_ID\nENV TEST_HW_WALLET=true\n\n# install python3.8, nodejs\nRUN set -e; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y software-properties-common git \\\n        qemu-user-static python3-pyqt5 python3-construct python3-jsonschema python3-mnemonic python3-pyelftools \\\n        gcc-arm-linux-gnueabihf libc6-dev-armhf-cross gdb-multiarch libvncserver-dev; \\\n    cd /root && git clone  https://github.com/LedgerHQ/speculos.git && cd speculos && git checkout ac7ba2246500a \\\n    && cmake -Bbuild -H. -DWITH_VNC=1 && make -C build/; \\\n    echo \"deb http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic main\" | tee -a /etc/apt/sources.list; \\\n    echo \"deb-src http://ppa.launchpad.net/deadsnakes/ppa/ubuntu bionic main\" | tee -a /etc/apt/sources.list; \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys F23C5A6CF475977595C89F51BA6932366A755776; \\\n    # add-apt-repository -y ppa:deadsnakes/ppa; \\\n    apt-get install --no-install-recommends -y python3.8 python3-distutils; \\\n    curl -f -sL https://deb.nodesource.com/setup_10.x | bash; \\\n    apt-get install --no-install-recommends -y nodejs; \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1; \\\n    apt-get purge --auto-remove -y software-properties-common; \\\n    rm -r /var/lib/apt/lists/*\n\nFROM BUILDER_BASE AS BUILDER\nLABEL maintainer=\"blockchain@crypto.com\"\n\nARG SGX_MODE\nARG NETWORK_ID\nARG BUILD_PROFILE=release\nARG BUILD_MODE=sgx\n\nENV SGX_MODE=$SGX_MODE\nENV NETWORK_ID=$NETWORK_ID\nENV BUILD_PROFILE=$BUILD_PROFILE\nENV BUILD_MODE=$BUILD_MODE\n\nCOPY . /src\nWORKDIR /src\nRUN set -e; \\\n    ./docker/build.sh; \\\n    mkdir /output; \\\n    for bin in \\\n      chain-abci \\\n      client-cli \\\n      client-rpc \\\n      dev-utils \\\n    do mv \"./target/${BUILD_PROFILE}/${bin}\" /output; done; \\\n    cargo clean;\n\nFROM RUNTIME_BASE\n\nCOPY --from=BUILDER /output/. /crypto-chain\nENV PATH=/crypto-chain:$PATH\nWORKDIR /crypto-chain\n"
}