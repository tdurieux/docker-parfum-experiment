{
  "startTime": 1674256141108,
  "endTime": 1674256141772,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build . -t cosmwasm/wasmd:latest\n# docker run --rm -it cosmwasm/wasmd:latest /bin/sh\nFROM golang:1.18-alpine3.14 AS go-builder\n\n# this comes from standard alpine nightly file\n#  https://github.com/rust-lang/docker-rust-nightly/blob/master/alpine3.12/Dockerfile\n# with some changes to support our toolchain, etc\nRUN set -eux; apk add --no-cache ca-certificates build-base;\n\nRUN apk add --no-cache git build-base cmake linux-headers\n# NOTE: add these to run with LEDGER_ENABLED=true\n# RUN apk add libusb-dev linux-headers\n\nWORKDIR /code\nCOPY . /code/\n\n# See https://github.com/CosmWasm/wasmvm/releases\nADD https://github.com/CosmWasm/wasmvm/releases/download/v1.0.0/libwasmvm_muslc.x86_64.a /lib/libwasmvm_muslc.a\n\n# use mimalloc for musl\nRUN git clone --depth 1 https://github.com/microsoft/mimalloc; cd mimalloc; mkdir build; cd build; cmake ..; make -j$(nproc); make install\n\n# force it to use static lib (from above) not standard libgo_cosmwasm.so file\nRUN LEDGER_ENABLED=false go build -work -tags muslc,linux -mod=readonly -ldflags=\"-extldflags '-L/code/mimalloc/build -lmimalloc -static'\" -o build/mantlemint ./sync.go\n\nFROM alpine:3.12\n\nWORKDIR /root\n\nCOPY --from=go-builder /code/build/mantlemint /usr/local/bin/mantlemint\n\n# rest server\nEXPOSE 1317\n# grpc\nEXPOSE 9090\n\nCMD [\"/usr/local/bin/mantlemint\"]"
}