{
  "startTime": 1674256081583,
  "endTime": 1674256082524,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# HEADS UP!\n# This Dockerfile is for DEVELOPMENT use only;\n# it's in no way optimized for production and is largely maintained by\n# the open source community for convenience. Installing the full stack\n# manually is the preferred setup for Notebook.ai instances.\n\n# The image to build from.\nFROM ruby:2.7.4\n\n# Properties/labels for the image.\nLABEL maintainer=\"Notebook.ai Contributors\"\n\n# Copy the current folder into the notebookai user's home directory.\nCOPY . /home/notebookai\n\n# Set the notebookai user's home directory as the working directory.\nWORKDIR /home/notebookai\n\n# Prep the image for runtime, this should all be done in one command\n# to minimize image layers.\n# See: https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#minimize-the-number-of-layers\nRUN groupadd --system --gid 1000 notebookai && \\\n    useradd --system --home-dir /home/notebookai --gid notebookai --uid 1000 --shell /bin/bash notebookai && \\\n    apt-get update -qq && \\\n    apt-get install --no-install-recommends -y build-essential libpq-dev nodejs imagemagick libmagickwand-dev && \\\n    rm --recursive --force /var/lib/apt/lists/* && \\\n    bundle install && \\\n    rails db:setup\n\n# This image should expose the port 3000.\n# This does not actually expose the port, you'll have to expose it yourself by\n# using `-p 3000:3000/tcp` in Docker's CLI or `- \"3000:3000\"` in the in docker-compose.yml service's ports[].\n# https://docs.docker.com/engine/reference/builder/#expose\nEXPOSE 3000/tcp\n"
}