diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tokern/data-lineage/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tokern/data-lineage/docker/Dockerfile/repaired.Dockerfile
index 115fba6..81a7c67 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tokern/data-lineage/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tokern/data-lineage/docker/Dockerfile/repaired.Dockerfile
@@ -23,23 +23,23 @@ FROM python-base as builder-base
 RUN apt-get update \
     && apt-get install --no-install-recommends -y \
         curl gcc python3-dev default-libmysqlclient-dev \
-        build-essential libpq-dev musl-dev
+        build-essential libpq-dev musl-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Poetry - respects $POETRY_VERSION & $POETRY_HOME
 ENV POETRY_VERSION=1.1.6
-RUN curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
+RUN curl -f -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
 
 # We copy our Python requirements here to cache them
 # and install only runtime deps using poetry
 WORKDIR $PYSETUP_PATH
 COPY ./poetry.lock ./pyproject.toml ./
-RUN poetry install --no-dev  # respects 
+RUN poetry install --no-dev  # respects
 
 WORKDIR /src
 COPY . .
 RUN poetry build
 ENV PATH="${VENV_PATH}/bin:$PATH"
-RUN pip install dist/data_lineage-*.whl
+RUN pip install --no-cache-dir dist/data_lineage-*.whl
 
 # 'production' stage uses the clean 'python-base' stage and copyies
 # in only our runtime deps that were installed in the 'builder-base'
@@ -47,7 +47,7 @@ FROM python-base as production
 
 RUN apt-get update \
     && apt-get install --no-install-recommends -y \
-        libpq5
+        libpq5 && rm -rf /var/lib/apt/lists/*;
 
 COPY --from=builder-base $VENV_PATH $VENV_PATH
 COPY ./docker/docker-entrypoint.sh /docker-entrypoint.sh