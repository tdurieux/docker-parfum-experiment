diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/triton-inference-server/dali_backend/docker/Dockerfile.release b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/triton-inference-server/dali_backend/docker/Dockerfile.release/repaired.Dockerfile
index 46813d0..094aa2c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/triton-inference-server/dali_backend/docker/Dockerfile.release
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/triton-inference-server/dali_backend/docker/Dockerfile.release/repaired.Dockerfile
@@ -33,25 +33,25 @@ FROM ${BASE_IMAGE} as builder
 RUN apt-key adv --fetch-keys \
     # Manually update the keys to NVIDIA repository because they are outdated in the base image
     https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub && \
-    apt-get update                                && \
-    apt-get install -y software-properties-common && \
-    add-apt-repository ppa:deadsnakes/ppa         && \
-    apt-get update                                && \
-    apt-get install -y         \
-              zip              \
-              wget             \
-              build-essential  \
-              autoconf         \
-              autogen          \
-              unzip            \
-              python3.8        \
-              python3-pip      \
+    apt-get update && \
+    apt-get install --no-install-recommends -y software-properties-common && \
+    add-apt-repository ppa:deadsnakes/ppa && \
+    apt-get update && \
+    apt-get install --no-install-recommends -y \
+              zip \
+              wget \
+              build-essential \
+              autoconf \
+              autogen \
+              unzip \
+              python3.8 \
+              python3-pip \
               libboost-all-dev \
               rapidjson-dev && \
     rm -rf /var/lib/apt/lists/*
 
 # pip version in apt packages is ancient - we need to update it
-RUN pip3 install -U pip
+RUN pip3 install --no-cache-dir -U pip
 
 WORKDIR /opt
 
@@ -63,14 +63,14 @@ RUN CMAKE_VERSION=3.18 && \
     cd cmake-${CMAKE_BUILD} && \
     ./bootstrap --parallel=$(grep ^processor /proc/cpuinfo | wc -l) -- -DCMAKE_USE_OPENSSL=OFF && \
     make -j"$(grep ^processor /proc/cpuinfo | wc -l)" install && \
-    rm -rf /cmake-${CMAKE_BUILD}
+    rm -rf /cmake-${CMAKE_BUILD} && rm cmake-${CMAKE_BUILD}.tar.gz
 
 # Miniconda
 ENV PATH="/opt/conda/bin:${PATH}"
 RUN MINICONDA_URL="https://repo.anaconda.com/miniconda/Miniconda3-py38_4.12.0-Linux-x86_64.sh"; \
     SHA256SUM="3190da6626f86eee8abf1b2fd7a5af492994eb2667357ee4243975cdbb175d7a"; \
     wget "${MINICONDA_URL}" -O miniconda.sh -q && \
-    echo "${SHA256SUM} miniconda.sh" > shasum && \
+    echo "${SHA256SUM}  miniconda.sh" > shasum && \
     sha256sum -c ./shasum && \
     sh miniconda.sh -b -p /opt/conda && \
     rm miniconda.sh shasum && \