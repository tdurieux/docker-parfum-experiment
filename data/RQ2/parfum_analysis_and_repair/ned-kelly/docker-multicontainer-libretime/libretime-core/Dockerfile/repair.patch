diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ned-kelly/docker-multicontainer-libretime/libretime-core/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ned-kelly/docker-multicontainer-libretime/libretime-core/Dockerfile/repaired.Dockerfile
index 8537187..84ea7be 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ned-kelly/docker-multicontainer-libretime/libretime-core/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ned-kelly/docker-multicontainer-libretime/libretime-core/Dockerfile/repaired.Dockerfile
@@ -8,7 +8,7 @@ RUN export DEBIAN_FRONTEND=noninteractive && \
     apt-get clean && \
     apt-get update && \
     apt-get install -y --no-install-recommends apt-utils && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         locales \
         sudo \
         htop \
@@ -17,17 +17,17 @@ RUN export DEBIAN_FRONTEND=noninteractive && \
         curl \
         wget \
         crudini \
-        git
+        git && rm -rf /var/lib/apt/lists/*;
 
 # Multiverse requried for some pkgs...
 ## libretime also use python, and the latest ubuntu build is breaking a few things... Here's a quick fix:
 RUN sed -i "/^# deb.*multiverse/ s/^# //" /etc/apt/sources.list && \
     apt-get update -y && \
-    apt-get --fix-missing --reinstall install \
+    apt-get --fix-missing --no-install-recommends --reinstall install \
         python \
         python-minimal \
         dh-python -y && \
-    apt-get -f install
+    apt-get -f -y install && rm -rf /var/lib/apt/lists/*;
 
 ## Locals need to be configured or the media monitor dies in the ass...
 RUN locale-gen "en_US.UTF-8" && \
@@ -39,7 +39,7 @@ ENV LANG=en_US.UTF-8
 ENV LANGUAGE=en_US.UTF-8
 
 # Libretime's "--install" flag will also add any missing packages...
-RUN apt-get install -y \
+RUN apt-get install --no-install-recommends -y \
         php7.0-curl \
         php7.0-pgsql \
         apache2 \
@@ -48,7 +48,7 @@ RUN apt-get install -y \
         php-pear \
         php7.0-gd \
         php-bcmath \
-        php-mbstring
+        php-mbstring && rm -rf /var/lib/apt/lists/*;
 
 # Pull down libretime sources
 RUN export DEBIAN_FRONTEND=noninteractive && \
@@ -58,7 +58,7 @@ RUN export DEBIAN_FRONTEND=noninteractive && \
     echo "SYSTEM_INIT_METHOD: [$SYSTEM_INIT_METHOD]" && \
     #
     # We need to patch Liquidsoap for 1.3.x support (the current libretime builds only has 1.1.1 support)... 
-    cd /opt/libretime && curl -L https://github.com/LibreTime/libretime/compare/master...radiorabe:feature/liquidsoap-1.3.0.patch | patch -p1 && \
+    cd /opt/libretime && curl -f -L https://github.com/LibreTime/libretime/compare/master...radiorabe:feature/liquidsoap-1.3.0.patch | patch -p1 && \
     bash -c 'cd /opt/libretime; ./install --distribution=ubuntu --release=xenial_docker_minimal --force --apache --no-postgres --no-rabbitmq; exit 0'; exit 0
 
 # This will be mapped in with all the media...
@@ -66,9 +66,9 @@ RUN mkdir -p /external-media/ && \
     chmod 777 /external-media/
 
 # There seems to be a bug somewhere in the code and it's not respecting the DB being on another host (even though it's configured in the config files!)
-# We'll use a lightweight golang TCP proxy to proxy any PGSQL request to the postgres docker container on TCP:5432. 
+# We'll use a lightweight golang TCP proxy to proxy any PGSQL request to the postgres docker container on TCP:5432.
 
-RUN cd /opt && curl -s -O -L https://dl.google.com/go/go1.10.1.linux-amd64.tar.gz && tar -xzf go* && \
+RUN cd /opt && curl -f -s -O -L https://dl.google.com/go/go1.10.1.linux-amd64.tar.gz && tar -xzf go* && \
     mv go /usr/local/ && \
     export GOPATH=/opt/ && \
     export GOROOT=/usr/local/go && \
@@ -81,13 +81,13 @@ RUN apt-get remove -y postgresql-9.5 rabbitmq-server icecast2 silan
 
 # We need to install ffmpeg BEFORE we've built and statically linked silan (it will link some files that ffmpeg will remove if ffmpeg installed after)...
 # See: https://github.com/LibreTime/libretime/commit/796a2a3ddd94dc671ab206b0e8ec1e20fbc4fb2a
-RUN apt-get install ffmpeg -y
+RUN apt-get install --no-install-recommends ffmpeg -y && rm -rf /var/lib/apt/lists/*;
 
 # Build us a copy of Silan 0.4.0 which fixes many of the various problems listed throughout the libretime forums.
 RUN git clone https://github.com/x42/silan.git /opt/silan && \
     cd /opt/silan && git fetch && git fetch --tags && git checkout "v0.4.0" && \
     /opt/silan/x-pbuildstatic.sh && \
-    cd /usr/src/silan && ./configure && make && make install && \
+    cd /usr/src/silan && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && \
     ln -s /usr/local/bin/silan /usr/bin/silan
 
 
@@ -97,7 +97,7 @@ RUN git clone https://github.com/x42/silan.git /opt/silan && \
 RUN apt-get remove liquidsoap -y && \
 
     # install system packages like opam (the make tools are for the 1.3.x+scm install below)
-    apt-get install ocaml ocaml-native-compilers camlp4-extra opam autotools-dev automake -y && \
+    apt-get install --no-install-recommends ocaml ocaml-native-compilers camlp4-extra opam autotools-dev automake -y && \
     #
     mkdir /usr/local/opam && \
     chown liquidsoap:liquidsoap /usr/local/opam /usr/share/liquidsoap/ && \
@@ -118,10 +118,10 @@ RUN apt-get remove liquidsoap -y && \
     su - liquidsoap -c "eval `opam config env --root=/usr/local/opam` \
         export OPAMYES=yes && opam depext alsa cry fdkaac lame liquidsoap mad opus taglib vorbis --yes ; \
         export OPAMYES=yes && opam install alsa cry fdkaac lame liquidsoap mad opus taglib vorbis --yes" && \
-    
+
     # run this as root to make liquidsoap your default on the whole system (extremely hacky)
     echo "eval \`opam config env --root=/usr/local/opam\`" > /etc/profile.d/liquidsoap-opam.sh && \
-    ln -s /usr/local/opam/system/bin/liquidsoap /usr/bin/liquidsoap
+    ln -s /usr/local/opam/system/bin/liquidsoap /usr/bin/liquidsoap && rm -rf /var/lib/apt/lists/*;
 
 COPY bootstrap/entrypoint.sh bootstrap/add-to-cron.txt bootstrap/firstrun.sh /opt/libretime/
 COPY config/supervisor-minimal.conf /etc/supervisor/conf.d/supervisord.conf