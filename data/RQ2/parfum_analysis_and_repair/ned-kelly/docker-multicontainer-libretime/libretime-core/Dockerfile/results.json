{
  "startTime": 1674255544896,
  "endTime": 1674255545860,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 25,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 15,
        "columnEnd": 81
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 25,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nLABEL maintainer=\"david@nedved.com.au\"\nLABEL description=\"A multi-container deployment of the Libretime Radio Broadcast Server, PostgreSQL, Icecast2 & RabbitMQ, based on Ubuntu Xenial & Alpine Linux!\"\n\n## General components we need in this container...\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get clean && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends apt-utils && \\\n    apt-get install --no-install-recommends -y \\\n        locales \\\n        sudo \\\n        htop \\\n        nano \\\n        supervisor \\\n        curl \\\n        wget \\\n        crudini \\\n        git && rm -rf /var/lib/apt/lists/*;\n\n# Multiverse requried for some pkgs...\n## libretime also use python, and the latest ubuntu build is breaking a few things... Here's a quick fix:\nRUN sed -i \"/^# deb.*multiverse/ s/^# //\" /etc/apt/sources.list && \\\n    apt-get update -y && \\\n    apt-get --fix-missing --no-install-recommends --reinstall install \\\n        python \\\n        python-minimal \\\n        dh-python -y && \\\n    apt-get -f -y install && rm -rf /var/lib/apt/lists/*;\n\n## Locals need to be configured or the media monitor dies in the ass...\nRUN locale-gen \"en_US.UTF-8\" && \\\n    echo -e \"LC_ALL=en_US.UTF-8\\nLANG=en_US.UTF-8\" >> /etc/default/locale\n\nENV PYTHONIOENCODING UTF-8\nENV LC_ALL=en_US.UTF-8\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\n\n# Libretime's \"--install\" flag will also add any missing packages...\nRUN apt-get install --no-install-recommends -y \\\n        php7.0-curl \\\n        php7.0-pgsql \\\n        apache2 \\\n        libapache2-mod-php7.0 \\\n        php7.0 \\\n        php-pear \\\n        php7.0-gd \\\n        php-bcmath \\\n        php-mbstring && rm -rf /var/lib/apt/lists/*;\n\n# Pull down libretime sources\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    git clone --depth=1 https://github.com/ned-kelly/libretime.git /opt/libretime && \\\n    SYSTEM_INIT_METHOD=`readlink --canonicalize -n /proc/1/exe | rev | cut -d'/' -f 1 | rev` && \\\n    sed -i -e 's/\\*systemd\\*)/\\*'\"$SYSTEM_INIT_METHOD\"'\\*)/g' /opt/libretime/install && \\\n    echo \"SYSTEM_INIT_METHOD: [$SYSTEM_INIT_METHOD]\" && \\\n    #\n    # We need to patch Liquidsoap for 1.3.x support (the current libretime builds only has 1.1.1 support)... \n    cd /opt/libretime && curl -f -L https://github.com/LibreTime/libretime/compare/master...radiorabe:feature/liquidsoap-1.3.0.patch | patch -p1 && \\\n    bash -c 'cd /opt/libretime; ./install --distribution=ubuntu --release=xenial_docker_minimal --force --apache --no-postgres --no-rabbitmq; exit 0'; exit 0\n\n# This will be mapped in with all the media...\nRUN mkdir -p /external-media/ && \\\n    chmod 777 /external-media/\n\n# There seems to be a bug somewhere in the code and it's not respecting the DB being on another host (even though it's configured in the config files!)\n# We'll use a lightweight golang TCP proxy to proxy any PGSQL request to the postgres docker container on TCP:5432.\n\nRUN cd /opt && curl -f -s -O -L https://dl.google.com/go/go1.10.1.linux-amd64.tar.gz && tar -xzf go* && \\\n    mv go /usr/local/ && \\\n    export GOPATH=/opt/ && \\\n    export GOROOT=/usr/local/go && \\\n    export PATH=$GOPATH/bin:$GOROOT/bin:$PATH && \\\n    go get github.com/jpillora/go-tcp-proxy/cmd/tcp-proxy && \\\n    rm -rf /opt/go1.*.tar.gz\n\n# Remove PostgreSQL and RMQ other packages that were installed by the \"Libretime Setup Script\" -- before building Silian ...\nRUN apt-get remove -y postgresql-9.5 rabbitmq-server icecast2 silan\n\n# We need to install ffmpeg BEFORE we've built and statically linked silan (it will link some files that ffmpeg will remove if ffmpeg installed after)...\n# See: https://github.com/LibreTime/libretime/commit/796a2a3ddd94dc671ab206b0e8ec1e20fbc4fb2a\nRUN apt-get install --no-install-recommends ffmpeg -y && rm -rf /var/lib/apt/lists/*;\n\n# Build us a copy of Silan 0.4.0 which fixes many of the various problems listed throughout the libretime forums.\nRUN git clone https://github.com/x42/silan.git /opt/silan && \\\n    cd /opt/silan && git fetch && git fetch --tags && git checkout \"v0.4.0\" && \\\n    /opt/silan/x-pbuildstatic.sh && \\\n    cd /usr/src/silan && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    ln -s /usr/local/bin/silan /usr/bin/silan\n\n\n# We're going to install Liquidsoap 1.3.x directly from github (apt currently only has 1.1.1) -- this seems to have better stability overall with media stream.\n# SEE: https://github.com/LibreTime/libretime/issues/192 - For further details around this.\n\nRUN apt-get remove liquidsoap -y && \\\n\n    # install system packages like opam (the make tools are for the 1.3.x+scm install below)\n    apt-get install --no-install-recommends ocaml ocaml-native-compilers camlp4-extra opam autotools-dev automake -y && \\\n    #\n    mkdir /usr/local/opam && \\\n    chown liquidsoap:liquidsoap /usr/local/opam /usr/share/liquidsoap/ && \\\n    #\n    # we need to switch to the liquidsoap, some things do not like being installed as root\n    usermod -s /bin/bash liquidsoap && \\\n    usermod -aG sudo liquidsoap && \\\n    echo \"liquidsoap ALL = NOPASSWD : ALL\" >> /etc/sudoers && \\\n    #\n    # Opam must be >= \"4.03\" to install the newer Liquidsoap...\n    su - liquidsoap -c \"OPAMYES=yes && opam init --root=/usr/local/opam --yes && opam init --yes && opam switch 4.06.0\" && \\\n    #\n    # run the following commands as the liquidsoap user...\n    #\n    # I installed the deps as root before re-installing as user liquidsoap\n    # run this as root after running an additional eval `opam config env --root=/usr/local/opam`\n    #\n    su - liquidsoap -c \"eval `opam config env --root=/usr/local/opam` \\\n        export OPAMYES=yes && opam depext alsa cry fdkaac lame liquidsoap mad opus taglib vorbis --yes ; \\\n        export OPAMYES=yes && opam install alsa cry fdkaac lame liquidsoap mad opus taglib vorbis --yes\" && \\\n\n    # run this as root to make liquidsoap your default on the whole system (extremely hacky)\n    echo \"eval \\`opam config env --root=/usr/local/opam\\`\" > /etc/profile.d/liquidsoap-opam.sh && \\\n    ln -s /usr/local/opam/system/bin/liquidsoap /usr/bin/liquidsoap && rm -rf /var/lib/apt/lists/*;\n\nCOPY bootstrap/entrypoint.sh bootstrap/add-to-cron.txt bootstrap/firstrun.sh /opt/libretime/\nCOPY config/supervisor-minimal.conf /etc/supervisor/conf.d/supervisord.conf\n\nRUN chmod +x /opt/libretime/firstrun.sh && \\\n    chmod +x /opt/libretime/entrypoint.sh && \\\n    #\n    # Setup cron (the podcast script leaves a bit of a mess in /tmp - there's a few cleanup tasks that run via crontab)... \n    crontab /opt/libretime/add-to-cron.txt\n\n# Cleanup excess fat...\nRUN apt-get clean\n\nVOLUME [\"/etc/airtime\", \"/var/tmp/airtime/\", \"/var/log/airtime\", \"/usr/share/airtime\", \"/usr/lib/airtime\"]\nVOLUME [\"/var/tmp/airtime\"]\n\nEXPOSE 80 8000\n\nCMD [\"/opt/libretime/entrypoint.sh\"]\n"
}