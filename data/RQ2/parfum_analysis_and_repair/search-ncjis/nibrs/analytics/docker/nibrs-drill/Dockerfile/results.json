{
  "startTime": 1674217864244,
  "endTime": 1674217865125,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 84
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 38
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-alpine\n\n# to run standalone/embedded:\n#\n#    docker run -it --rm searchncjis/nibrs-drill drill-embedded\n#\n# to run as a detached service, you have to run it as a zookeeper node.  use the nibrs-analytics-drill-compose.yaml docker-compose file.\n#\n# If you are running the detached service, you can run an interactive container like this to get a sqlline query prompt (note: the network name here is the one resulting from upping the docker-compose file):\n#\n#    docker run -it --rm --network docker_nibrs_analytics_nw searchncjis/nibrs-drill drill-conf\n\nRUN mkdir -p /opt && cd /opt && \\\n  apk --update --no-cache add curl bash && \\\n  curl -f -O https://downloads.apache.org/drill/drill-1.18.0/apache-drill-1.18.0.tar.gz && \\\n  tar -xvf  apache-drill-1.18.0.tar.gz && rm apache-drill-1.18.0.tar.gz\n\nRUN sed -i s/localhost/zoo/g /opt/apache-drill-1.18.0/conf/drill-override.conf && \\\n  sed -i \"s/ref=\\\"FILE\\\"/ref=\\\"STDOUT\\\"/g\" /opt/apache-drill-1.18.0/conf/logback.xml\n\nENV PATH=\"$PATH:/opt/apache-drill-1.18.0/bin\"\n\nCOPY files/storage-plugins-override.conf /opt/apache-drill-1.18.0/conf/\n\nCMD drillbit.sh run\n"
}