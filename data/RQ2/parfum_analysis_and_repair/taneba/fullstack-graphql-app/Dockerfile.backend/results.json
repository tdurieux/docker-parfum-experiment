{
  "startTime": 1674255351754,
  "endTime": 1674255352317,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16 as pruner\nRUN apt update && \\\n    apt install -y --no-install-recommends git && rm -rf /var/lib/apt/lists/*;\n\nRUN yarn global add turbo\nWORKDIR \"/app\"\nRUN pwd\n\n# Prune the workspace for the backend aapp\nCOPY .git ./.git\nCOPY . .\nRUN pwd\nRUN turbo prune --scope=backend --docker\n\n# Add pruned lockfile and package.json's of the pruned subworkspace\nFROM pruner as builder\nWORKDIR \"/app\"\nCOPY --from=pruner /app/out/json/ .\nCOPY --from=pruner /app/out/yarn.lock ./yarn.lock\n\n# Install only the deps needed to build the target\nRUN yarn install && yarn cache clean;\nCOPY --from=pruner /app/.git ./.git\nCOPY --from=pruner /app/out/full/ .\nRUN turbo run build --scope=backend\nRUN pwd\nRUN ls\n\n# Copy source code of pruned subworkspace and build\nFROM node:16-alpine\nWORKDIR \"/app\"\nEXPOSE 4000\nCOPY --from=builder /app/apps/backend/dist/ .\nCOPY --from=pruner /app/out/json/ .\nCOPY --from=pruner /app/out/yarn.lock ./yarn.lock\nRUN yarn install --production && yarn cache clean;\nCMD node ./apps/backend/dist/index.js"
}