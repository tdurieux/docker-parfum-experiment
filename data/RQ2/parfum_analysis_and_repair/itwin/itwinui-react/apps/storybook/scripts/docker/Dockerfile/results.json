{
  "startTime": 1674249145963,
  "endTime": 1674249146659,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.13.0-bullseye as builder\n\nARG VERSION=9.6.0\nENV CY_VERSION=$VERSION\n\n# Install build dependencies\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  libgtk2.0-0 \\\n  libgtk-3-0 \\\n  libnotify-dev \\\n  libgconf-2-4 \\\n  libgbm-dev \\\n  libnss3 \\\n  libxss1 \\\n  libasound2 \\\n  libxtst6 \\\n  xauth \\\n  xvfb \\\n  # clean up\n  && rm -rf /var/lib/apt/lists/* \\\n  && apt-get clean\n\nRUN npm --version \\\n  && npm install -g yarn@latest --force \\\n  && yarn --version && npm cache clean --force;\n\n# build cypress binary\nRUN git clone https://github.com/cypress-io/cypress.git --depth 1 --branch v${CY_VERSION}\nWORKDIR /cypress\nRUN yarn\nRUN yarn binary-build --version ${CY_VERSION} myvalue=3\nWORKDIR /\n\nFROM node:16.13.0-bullseye\n\nARG VERSION=9.6.0\nARG BINARY_PATH=/tmp/cypress-build/linux/build/linux-unpacked\n\nENV TERM=xterm \\\n    NPM_CONFIG_LOGLEVEL=warn \\\n    QT_X11_NO_MITSHM=1 \\\n    _X11_NO_MITSHM=1 \\\n    _MITSHM=0 \\\n    CYPRESS_INSTALL_BINARY=0 \\\n    CYPRESS_CACHE_FOLDER=/root/.cache/Cypress \\\n    CY_VERSION=$VERSION\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    libgtk2.0-0 \\\n    libgtk-3-0 \\\n    libnotify-dev \\\n    libgconf-2-4 \\\n    libgbm-dev \\\n    libnss3 \\\n    libxss1 \\\n    libasound2 \\\n    libxtst6 \\\n    xauth \\\n    xvfb \\\n    # clean up\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get clean \\\n    # https://github.com/cypress-io/cypress/issues/4351#issuecomment-559489091\n    echo 'pcm.!default {\\n type hw\\n card 0\\n}\\n\\nctl.!default {\\n type hw\\n card 0\\n}' > /root/.asoundrc\n\n# Copy cypress binary from intermediate container\nCOPY --from=builder ${BINARY_PATH} /root/.cache/Cypress/${CY_VERSION}/Cypress\n\nRUN npm install -g cypress@${CY_VERSION} && \\\n    cypress verify && npm cache clean --force;\n\nENTRYPOINT [\"cypress\", \"run\"]\n"
}