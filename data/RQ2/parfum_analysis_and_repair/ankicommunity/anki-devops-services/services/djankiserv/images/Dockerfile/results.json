{
  "startTime": 1674256239394,
  "endTime": 1674256241262,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8.6-alpine3.12\n\nLABEL maintainer=\"istvan@codekuklin.com\"\n\n# To override some packages while installling their dependencies from PyPI,\n# you can use pypiserver with the --fallback option.\nARG INDEX_URL='https://pypi.org/simple'\nARG TRUSTED_HOST='127.0.0.1'\n\nRUN apk add --no-cache mariadb-connector-c-dev postgresql-dev gcc musl-dev\n\nRUN pip3 install --no-cache-dir --index-url \"${INDEX_URL}\" --trusted-host \"${TRUSTED_HOST}\" djankiserv\n\nRUN mkdir -p /home/app\nRUN addgroup -S app && adduser -S app -G app -s /bin/sh\n\nENV HOME=/home/app\nENV APP_HOME=/home/app/\n\nWORKDIR $APP_HOME\n\nRUN apk add --no-cache coreutils sudo\n\nRUN django-admin startproject mysite\nENV PATH \"$PATH:/home/app/mysite\"\n\nCOPY views.py mysite/mysite/views.py\n\nCMD cp /persistence/settings.py mysite/mysite/settings.py && \\\n    cp /persistence/mysecrets.py mysite/mysite/mysecrets.py && \\\n    cp /persistence/urls.py mysite/mysite/urls.py && \\\n    cd \"$HOME\" && yes yes | manage.py collectstatic && chmod 755 -R /home/app/static && \\\n        sudo -u app -H manage.py migrate && \\\n        sudo -u app -H manage.py runserver 0.0.0.0:8080\n\nEXPOSE 8080"
}