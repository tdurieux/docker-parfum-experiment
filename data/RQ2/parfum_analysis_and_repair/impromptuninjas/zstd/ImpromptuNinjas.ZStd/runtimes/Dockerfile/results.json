{
  "startTime": 1674250743574,
  "endTime": 1674250745047,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine/git AS git\n\nRUN apk add --no-cache build-base \\\n\t&& git clone -b v1.4.5 --depth 1 https://github.com/facebook/zstd.git /src\n\n# amd64-linux-musl\nFROM amd64/alpine AS amd64-linux-musl\nCOPY --from=git /src /src\nRUN apk add --no-cache build-base\nWORKDIR /src/lib\nRUN CC=\"x86_64-alpine-linux-musl-gcc\" CXX=\"x86_64-alpine-linux-musl-g++\" \\\n\tCFLAGS=\"-g0 -O3 -flto -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/libzstd.so && cp -L /src/lib/libzstd.so /app/\n\n# i386-linux-musl\nFROM i386/alpine AS i386-linux-musl\nCOPY --from=git /src /src\nRUN apk add --no-cache build-base\nWORKDIR /src/lib\nRUN CC=\"i586-alpine-linux-musl-gcc\" CXX=\"i586-alpine-linux-musl-g++\" \\\n\tCFLAGS=\"-g0 -O3 -flto -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/libzstd.so && cp -L /src/lib/libzstd.so /app/\n\n# arm64-linux-musl\nFROM arm64v8/alpine AS arm64-linux-musl\nCOPY --from=git /src /src\nRUN apk add --no-cache build-base \\\n\t&& mkdir -p /app/\nWORKDIR /src/lib\nRUN CC=\"aarch64-alpine-linux-musl-gcc\" CXX=\"aarch64-alpine-linux-musl-g++\" \\\n\tCFLAGS=\"-g0 -O3 -flto -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/libzstd.so && cp -L /src/lib/libzstd.so /app/\n\n# arm32-linux-musl\nFROM arm32v7/alpine AS arm32-linux-musl\nCOPY --from=git /src /src\nRUN apk add --no-cache build-base\nWORKDIR /src/lib\nRUN CC=\"armv7-alpine-linux-musleabihf-gcc\" CXX=\"armv7-alpine-linux-musleabihf-g++\" \\\n\tCFLAGS=\"-g0 -O3 -flto -mfloat-abi=hard -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -mfloat-abi=hard -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/libzstd.so && cp -L /src/lib/libzstd.so /app/\n\n# amd64-linux-glibc\nFROM amd64/debian:stable-slim AS amd64-linux-glibc\nCOPY --from=git /src /src\nRUN apt-get update && apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*;\nWORKDIR /src/lib\nRUN CC=\"x86_64-linux-gnu-gcc\" CXX=\"x86_64-linux-gnu-g++\" \\\n\tCFLAGS=\"-g0 -O3 -flto -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/libzstd.so && cp -L /src/lib/libzstd.so /app/\n\n# i386-linux-glibc\nFROM i386/debian:stable-slim AS i386-linux-glibc\nCOPY --from=git /src /src\nRUN apt-get update && apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*;\nWORKDIR /src/lib\nRUN CC=\"i686-linux-gnu-gcc\" CXX=\"i686-linux-gnu-g++\" \\\n\tCFLAGS=\"-g0 -O3 -flto -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/libzstd.so && cp -L /src/lib/libzstd.so /app/\n\n# arm64-linux-glibc\nFROM arm64v8/debian:stable-slim AS arm64-linux-glibc\nCOPY --from=git /src /src\nRUN apt-get update && apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*;\nWORKDIR /src/lib\nRUN CC=\"aarch64-linux-gnu-gcc\" CXX=\"aarch64-linux-gnu-g++\" \\\n\tCFLAGS=\"-g0 -O3 -flto -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/libzstd.so && cp -L /src/lib/libzstd.so /app/\n\n# arm32-linux-glibc\nFROM arm32v7/debian:stable-slim AS arm32-linux-glibc\nRUN apt-get update && apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*;\nCOPY --from=git /src /src\nWORKDIR /src/lib\nRUN CC=\"arm-linux-gnueabihf-gcc\" CXX=\"arm-linux-gnueabihf-g++\" \\\n\tCC=\"aarch64-linux-gnu-gcc\" \\\n\tCFLAGS=\"-g0 -O3 -flto -mfloat-abi=hard -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -mfloat-abi=hard -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\t&& make -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/libzstd.so && cp -L /src/lib/libzstd.so /app/\n\n# osx64\nFROM liushuyu/osxcross AS osx64\nCOPY --from=git /src /src\nWORKDIR /src/lib\nRUN echo '#!/bin/sh\\necho Darwin' > /bin/uname\nRUN CC=\"/opt/osxcross/bin/o64-clang\" CXX=\"/opt/osxcross/bin/o64-clang++\" \\\n\tCFLAGS=\"-g0 -O3 -flto -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tmake -j`nproc` libzstd-mt && mkdir -p /app/ && /opt/osxcross/bin/x86_64-apple-darwin18-strip -S /src/lib/libzstd.dylib \\\n\t&& cp -L /src/lib/libzstd.dylib /app/\n\n# win64 NOTE: makefile has wrong slash for in output causing a erroneous 'dll' file name prefix\nFROM softwareperonista/archlinux-mingw-w64 AS win64\nCOPY --from=git /src /src\nWORKDIR /src/lib\nRUN CC=\"x86_64-w64-mingw32-gcc\" CXX=\"x86_64-w64-mingw32-g++\" OS=\"Windows_NT\" \\\n\tCFLAGS=\"-g0 -O3 -flto -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/dlllibzstd.dll && cp -L /src/lib/dlllibzstd.dll /app/libzstd.dll\n\n# win32\nFROM softwareperonista/archlinux-mingw-w64 AS win32\nCOPY --from=git /src /src\nWORKDIR /src/lib\nRUN CC=\"i686-w64-mingw32-gcc\" CXX=\"i686-w64-mingw32-gg++\" OS=\"Windows_NT\" \\\n\tCFLAGS=\"-g0 -O3 -flto -static-libgcc -fvisibility=hidden\" \\\n\tCXXFLAGS=\"-g0 -O3 -flto -static-libgcc -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden\" \\\n\tLDFLAGS=\"-static-libgcc\" \\\n\tmake -j`nproc` libzstd-mt && make -C ../tests zbufftest-dll && mkdir -p /app/ && strip --strip-unneeded /src/lib/dlllibzstd.dll && cp -L /src/lib/dlllibzstd.dll /app/libzstd.dll\n\nFROM git as finale\n\nCOPY --from=amd64-linux-musl /app/ /app/linux-musl-x64/native/\nCOPY --from=i386-linux-musl /app/ /app/linux-musl-x86/native/\nCOPY --from=arm64-linux-musl /app/ /app/linux-musl-arm64/native/\nCOPY --from=arm32-linux-musl /app/ /app/linux-musl-arm/native/\n\nCOPY --from=amd64-linux-glibc /app/ /app/linux-x64/native/\nCOPY --from=i386-linux-glibc /app/ /app/linux-x86/native/\nCOPY --from=arm64-linux-glibc /app/ /app/linux-arm64/native/\nCOPY --from=arm32-linux-glibc /app/ /app/linux-arm/native/\n\nCOPY --from=osx64 /app/ /app/osx-x64/native/\n\nCOPY --from=win64 /app/ /app/win-x64/native/\nCOPY --from=win32 /app/ /app/win-x86/native/\n\n# now we just extract the app dir as an artifact\nENTRYPOINT [\"/bin/sh\"]"
}