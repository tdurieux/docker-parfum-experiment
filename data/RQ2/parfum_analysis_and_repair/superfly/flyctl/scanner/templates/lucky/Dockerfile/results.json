{
  "startTime": 1674251419057,
  "endTime": 1674251419675,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM crystallang/crystal:1.3.2-alpine as crystal_dependencies\nENV LUCKY_ENV=production\nENV SKIP_LUCKY_TASK_PRECOMPILATION=1\nWORKDIR /shards\nCOPY shard.* ./\nRUN  shards install --production\n\nFROM node:alpine as asset_build\nWORKDIR /assets\nCOPY . .\nRUN yarn install && yarn cache clean;\nRUN yarn prod\n\nFROM crystallang/crystal:1.3.2-alpine as lucky_tasks_build\nENV LUCKY_ENV=production\nRUN apk --no-cache add yaml-static\nCOPY . .\nCOPY --from=crystal_dependencies /shards/lib lib\nCOPY --from=asset_build /assets/public public\nRUN crystal build --static --release tasks.cr -o /usr/local/bin/lucky\n\nFROM crystallang/crystal:1.3.2-alpine as lucky_webserver_build\nWORKDIR /webserver_build\nRUN apk --no-cache add yaml-static coreutils\nENV LUCKY_ENV=production\nCOPY . .\nCOPY --from=crystal_dependencies /shards/lib lib\nCOPY --from=asset_build /assets/public public\nRUN shards build --production --static --release\nRUN mv ./bin/`ls ./bin/ | head -1` /usr/local/bin/webserver\n\nFROM alpine as webserver\nWORKDIR /app\nRUN apk --no-cache add postgresql-client tzdata\nCOPY --from=lucky_tasks_build /usr/local/bin/lucky /usr/local/bin/lucky\nCOPY --from=lucky_webserver_build /usr/local/bin/webserver webserver\nCOPY --from=asset_build /assets/public public\n\nENV PORT 8080\nCMD [\"./webserver\"]\n"
}