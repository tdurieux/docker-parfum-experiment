{
  "startTime": 1674249240434,
  "endTime": 1674249242804,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14\n\n# Pass args from docker-compose since ENV variables are required in build step.\nARG API_PORT\nARG UI_DASHBOARD_PORT\nENV API_PORT=$API_PORT\nENV UI_DASHBOARD_PORT=$UI_DASHBOARD_PORT\n\n# This should be set to false for development on non-ARM systems\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true\n\n# Create app directory\nWORKDIR /opt/panic\n\n# Change directory, and copy all installer contents from the host to the container.\nWORKDIR ./ui\nCOPY ./ui ./\n\n# Clean any old build directories\nRUN rm -rf www\n\n# Install dependencies\nRUN npm ci\nRUN npm install -g serve && npm cache clean --force;\n\n# Build project\nRUN npm run build\n\n# Expose port\nEXPOSE 3333\n\n# Tool which waits for dependent containers\nADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.2.1/wait /wait\nRUN chmod +x /wait\n\n# Serve production build output (/www)\nCMD /wait && serve -s www -l 3333 --ssl-cert ../certificates/cert.pem --ssl-key ../certificates/key.pem\n"
}