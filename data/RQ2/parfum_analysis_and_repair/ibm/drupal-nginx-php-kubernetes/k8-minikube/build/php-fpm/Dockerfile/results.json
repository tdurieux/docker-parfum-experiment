{
  "startTime": 1674253273488,
  "endTime": 1674253274646,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile provides a base level of OS packages with PHP-FPM and extensions\n\nFROM php:7.1-fpm\n\nARG PHP_FPM_VERSION=7.1-fpm\n\n# Set consistent timezone\nENV CONTAINER_TIMEZONE=\"UTC\"\nRUN rm -f /etc/localtime \\\n && ln -s /usr/share/zoneinfo/${CONTAINER_TIMEZONE} /etc/localtime\n\n# Install prerequisite OS packages\nRUN apt-get update && apt-get install --no-install-recommends -y curl git vim libfcgi0ldbl && rm -rf /var/lib/apt/lists/*;\n\n# Install the PHP extensions we need\nRUN set -ex \\\n\t&& buildDeps=' \\\n\t\tlibjpeg62-turbo-dev \\\n\t\tlibpng12-dev \\\n\t\tlibpq-dev \\\n    zlib1g-dev \\\n    libicu-dev \\\n    libmemcached-dev \\\n\t' \\\n\t&& apt-get install -y --no-install-recommends $buildDeps \\\n  && pecl install -o -f redis \\\n  && docker-php-ext-enable redis \\\n  && ls -la /usr/local/etc/php/conf.d/ \\\n\t&& docker-php-ext-configure gd \\\n\t\t--with-jpeg-dir=/usr \\\n\t\t--with-png-dir=/usr \\\n\t&& docker-php-ext-install -j \"$(nproc)\" gd mbstring opcache pdo pdo_mysql zip && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /tmp \\\n\t&& git clone -b php7 https://github.com/php-memcached-dev/php-memcached \\\n\t&& cd php-memcached \\\n\t&& phpize \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make \\\n\t&& cp /tmp/php-memcached/modules/memcached.so /usr/local/lib/php/extensions/no-debug-non-zts-20160303/memcached.so \\\n\t&& docker-php-ext-enable memcached \\\n  && ls -la /usr/local/etc/php/conf.d/\n\n# See https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=60'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t\techo 'opcache.enable_cli=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\n# Copy customized community configuration back into the image.\nCOPY config/etc /usr/local/etc\n\nWORKDIR /www\n\n"
}