{
  "startTime": 1674249283971,
  "endTime": 1674249285447,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 18,
        "columnEnd": 50
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 18,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker.io/alpine:3.15.4 as builder\n\nARG ARCH\n\nRUN apk update && apk add --no-cache curl binutils build-base\n\nRUN if [ $ARCH == \"amd64\" ]; then curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable-x86_64-unknown-linux-musl -y; fi\n\nRUN if [ $ARCH == \"arm64\" ]; then curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain 1.61.0-aarch64-unknown-linux-musl -y; fi\n\nRUN ls -a /root/.cargo/bin\n\nCOPY . /app-build\n\nWORKDIR \"/app-build\"\n\nENV PATH=/root/.cargo/bin:${PATH}\nRUN cargo build --verbose --release\n\nRUN curl -f -L https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.22.0/crictl-v1.22.0-linux-$ARCH.tar.gz --output crictl-v1.22.0-linux-$ARCH.tar.gz\nRUN tar zxvf crictl-v1.22.0-linux-$ARCH.tar.gz && rm crictl-v1.22.0-linux-$ARCH.tar.gz\n\nFROM docker.io/alpine:3.15.4\n\nRUN apk update && apk add --no-cache procps\n\nWORKDIR \"/app\"\nCOPY --from=builder /app-build/target/release/core-dump-agent ./\nWORKDIR \"/app/vendor/default\"\nCOPY --from=builder /app-build/target/release/core-dump-composer ./\nRUN mv core-dump-composer cdc\n\nWORKDIR \"/app\"\nCOPY --from=builder /app-build/crictl ./\nCMD [\"./core-dump-agent\"]"
}