{
  "startTime": 1674249806888,
  "endTime": 1674249807825,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM python\n\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get -y --no-install-recommends install nodejs && rm -rf /var/lib/apt/lists/*;\nRUN npm install --global yarn && npm cache clean --force;\n\nRUN python -m pip install --upgrade pip\nRUN pip install --no-cache-dir \"poetry==1.1.12\"\n\nWORKDIR /app\n\nCOPY pyproject.toml poetry.lock ./\nRUN poetry export --dev --without-hashes -f requirements.txt > requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY package.json .\nRUN yarn\n\nCOPY . .\nRUN pip install --no-cache-dir .\n\nRUN jupyter serverextension enable --py jupyterlab_s3_browser\n"
}