{
  "startTime": 1674246262523,
  "endTime": 1674246264206,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 56,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright 2019 The Kubernetes Authors\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM node:12-bullseye-slim\n\n## preesed tzdata, update package index, upgrade packages and install needed software\nENV DEBIAN_FRONTEND=noninteractive\nENV DEBCONF_NONINTERACTIVE_SEEN=true\nCOPY preseed.txt /tmp/preseed.txt\n\n# proxy ports (keep in sync with conf.d/proxy.conf)\nENV KUI_PROXY_PORT 3000\nENV KUI_PROXY_EXTERNAL_PORT 9080\nENV HOME /home/kui\n\n# for development, we inject the developer's kubeconfig into the container\nARG KUBECONFIG\nENV KUBECONFIG=$KUBECONFIG\n\n# build-time injection of ContentSecurityPolicy\nARG CSP\nENV CSP=$CSP\n\n# build-time injection of OpenGraph headers\nARG OPENGRAPH\nENV OPENGRAPH=$OPENGRAPH\n\n###########\n# Note: Latest version of kubectl may be found at:\n# https://aur.archlinux.org/packages/kubectl-bin/\nARG KUBE_VERSION\nENV KUBE_VERSION=$KUBE_VERSION\nARG HELM_VERSION\nENV HELM_VERSION=$HELM_VERSION\nARG OC_VERSION\nENV OC_VERSION=$OC_VERSION\nENV KUI_HELM_CLIENTS_DIR=/usr/local/bin\n# Note: Latest version of helm may be found at:\n# https://github.com/kubernetes/helm/releases\n\nARG NODE_PTY_VERSION\nENV NODE_PTY_VERSION=$NODE_PTY_VERSION\n\n# nginx port\nEXPOSE 80/tcp\n\nRUN mkdir /kui-proxy\n\nRUN mkdir -p /usr/share/nginx\nCOPY . /usr/share/nginx/html\n\n# copy in our nginx configs\nCOPY conf.d/default.conf /tmp/default-template.conf\n\n# build-essential and python are needed by the \"npty\" line, to rebuild\n# the node-pty binaries\n\nRUN debconf-set-selections /tmp/preseed.txt && \\\n    rm -f /etc/timezone /etc/localtime && \\\n    apt update && apt install -y --no-install-recommends build-essential python sed git tzdata nginx ca-certificates bash git python build-essential curl upx gettext-base unzip && \\\n    cd /usr/share/nginx/html/kui && npm link ./app --no-package-lock && \\\n    (cd /tmp && mkdir npty && cd npty && npm init -y && npm install node-pty@$NODE_PTY_VERSION && cd /usr/share/nginx/html/kui/dist/headless && cp /tmp/npty/node_modules/node-pty/build/Release/pty.node . && cp pty.node pty-proxy.node && mkdir -p ../build/Release && cp /tmp/npty/node_modules/node-pty/build/Release/spawn-helper ../build/Release) && \\\n    curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBE_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && mv kubectl /usr/local/bin/kubectl && upx /usr/local/bin/kubectl && \\\n    curl -f -L https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz | tar zxf - && mv linux-amd64/helm /usr/local/bin/helm && chmod +x /usr/local/bin/helm && upx /usr/local/bin/helm && rm -rf linux-amd64 && \\\n    curl -f -L https://mirror.openshift.com/pub/openshift-v4/clients/ocp/${OC_VERSION}/openshift-client-linux.tar.gz | tar zxf - && \\\n      mv oc /usr/local/bin && \\\n      chmod +x /usr/local/bin/oc && upx /usr/local/bin/oc && \\\n    curl -f -LO https://mirror.openshift.com/pub/openshift-v4/clients/odo/latest/odo-linux-amd64 \\\n      && mv odo-linux-amd64 /usr/local/bin/odo && chmod +x /usr/local/bin/odo && upx /usr/local/bin/odo && \\\n    curl -f -L https://download.clis.cloud.ibm.com/ibm-cloud-cli/1.6.0/IBM_Cloud_CLI_1.6.0_amd64.tar.gz | tar zxf - \\\n        && mv Bluemix_CLI/bin/ibmcloud /usr/local/bin \\\n        && chmod a+rX /usr/local/bin/ibmcloud && upx /usr/local/bin/ibmcloud && rm -rf Bluemix_CLI && \\\n    curl -f -LO https://github.com/kalantar/etc3/raw/linux-x64/linux-x64/iter8ctl \\\n        && chmod +x iter8ctl && upx iter8ctl && mv iter8ctl /usr/local/bin && \\\n    envsubst '${CSP},${OPENGRAPH}' < /tmp/default-template.conf > /etc/nginx/conf.d/default.conf && \\\n    apt remove -y perl python make g++ upx gettext-base && apt -y auto-remove && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /home/kui/.cache/node-gyp && \\\n    rm -f /usr/share/nginx/html/kui/kubectl && \\\n    rm /etc/nginx/sites-enabled/default \\\n        && ln -sf /dev/stdout /var/log/nginx/access.log \\\n        && ln -sf /dev/stderr /var/log/nginx/error.log && npm cache clean --force;\n\n# resmash in our index.html\nCOPY index.html /usr/share/nginx/html/index.html\n\n# profile.d\n# COPY profile.d /tmp/profile.d\n# RUN for i in /tmp/profile.d/*; do cat $i >> /etc/profile; done\n\n# kubeconfig\nCOPY .kube /root/.kube\nCOPY .bluemix /root/.bluemix\n\n# krew\n#RUN set -x; cd \"$(mktemp -d)\" && \\\n#  curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/krew.{tar.gz,yaml}\" && \\\n#  tar zxvf krew.tar.gz && \\\n#  KREW=./krew-\"$(uname | tr '[:upper:]' '[:lower:]')_amd64\" && \\\n#  \"$KREW\" install --manifest=krew.yaml --archive=krew.tar.gz && \\\n#  \"$KREW\" update\n#ENV PATH=/root/.krew/bin:$PATH\n\n# issues with running in e.g. knative\nRUN mkdir -p /home/kui \\\n        && chown -R www-data:www-data /home/kui \\\n        && chown -R www-data:www-data /var/lib/nginx \\\n        && touch /run/nginx.pid \\\n        && chown -R www-data:www-data /run/nginx.pid\n\nCMD [ \"/usr/share/nginx/html/start-proxy-and-nginx.sh\" ]\n"
}