{
  "startTime": 1674256058538,
  "endTime": 1674256059677,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 5,
        "columnEnd": 21
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 5,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Base image\nFROM ubuntu:latest\nLABEL maintainer = \"Juan.Pinzon@ibm.com\"\n\nENV GO_VERSION 1.17.2\nENV PACKER_VERSION 1.7.6\n\nARG GO_VERSION\nARG PACKER_VERSION\nENV GO_VERSION ${GO_VERSION}\nENV PACKER_VERSION ${PACKER_VERSION}\n\nENV HOME /root\n\nRUN set -ex \\ \n  && apt-get -y update \\\n  && apt-get -y --no-install-recommends install apt-utils curl git unzip vim \\\n  && mkdir -p /packer-plugin-ibmcloud && rm -rf /var/lib/apt/lists/*;\n\n# Set the working directory\nWORKDIR /packer-plugin-ibmcloud\n\n###########################################################\nRUN echo \"[Step 1]: Install go and set go Environment variables\"\n###########################################################\nENV GO_TAR go${GO_VERSION}.linux-amd64.tar.gz\nENV GO_URL https://golang.org/dl/$GO_TAR \nRUN set -ex \\\n  && curl -f -OL $GO_URL \\\n  && tar -C /usr/local -xzf $GO_TAR \\\n  && mkdir -p $HOME/go/src/github.com \\\n  && rm -rf $GO_TAR\n\nRUN echo \"Setting go Environment variables...\"\nENV GOPATH $HOME/go\nENV GOROOT /usr/local/go\nENV PATH $PATH:$GOPATH/bin:$GOROOT/bin\nRUN set -ex \\\n  && cd $HOME \\\n  && echo export GOPATH=$GOPATH >> .profile \\\n  && echo export GOROOT=$GOROOT >> .profile \\\n  && echo export PATH=$PATH >> .profile\nRUN echo \"go Installation Successfully Completed.\"\n\n###########################################################\nRUN echo \"[Step 2]: Setup Ansible\"\n###########################################################\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y --no-install-recommends install ansible && rm -rf /var/lib/apt/lists/*;\n\n# Fix \"winrm or requests is not installed: No module named winrm\"\nRUN apt -y --no-install-recommends install python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --ignore-installed \"pywinrm>=0.2.2\"\nRUN echo \"Ansible Installation Successfully Completed.\"\n\n###########################################################\nRUN echo \"[Step 3]: Install Packer and set Packer's Environment variables\"\n###########################################################\nENV PACKER_ZIP packer_${PACKER_VERSION}_linux_amd64.zip\nENV PACKER_URL https://releases.hashicorp.com/packer/$PACKER_VERSION/$PACKER_ZIP\nRUN set -ex \\\n  && curl -f -OL $PACKER_URL \\\n  && mkdir -p /usr/local/packer \\\n  && unzip $PACKER_ZIP -d /usr/local/packer \\\n  && rm -rf $PACKER_ZIP\n\nRUN echo \"Setting Packer Environment variables...\"\nENV PACKERPATH /usr/local/packer\nENV PATH $PATH:$PACKERPATH\nRUN set -ex \\\n  && cd $HOME \\\n  && echo export PATH=$PATH >> .profile\nRUN echo \"Packer Installation Successfully Completed.\"\n\n\n###########################################################\nRUN echo \"[Step 4]: Build IBM Cloud Packer Plugin binary\"\n###########################################################\nCOPY . ./\nRUN set -ex \\\n  && cd ./ \\\n  && go install github.com/hashicorp/packer-plugin-sdk/cmd/packer-sdc@latest \\\n  && go mod tidy \\\n  && go mod vendor \\  \n  && go generate ./builder/ibmcloud/... \\\n  && go mod vendor \\\n  && go build .\nRUN echo \"IBM Cloud Packer Plugin binary Successfully Created.\"\n\n# Comment below line to make container interactive\nENTRYPOINT [\"/usr/local/packer/packer\"]\n"
}