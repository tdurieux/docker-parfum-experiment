{
  "startTime": 1674254552281,
  "endTime": 1674254552807,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "#--------------------------------------------------------\n# Docker Image file to create BlueXolo\n# CentOS Version.\n#--------------------------------------------------------\nFROM ubuntu:18.04\nMAINTAINER F. Quintero <fquinteroa@gmail.com>\nENV REFRESHED_AT=2020-07-31_12:17\nENV container docker\n\n# --------------------------------\n# First step:\n# Configure systemd\n# --------------------------------\nRUN apt-get update\nRUN apt-get -y --no-install-recommends -qq install apt-utils; rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends -qq install systemd python3.6 rabbitmq-server postgresql unzip nvi; rm -rf /var/lib/apt/lists/*;\nRUN apt-get -y --no-install-recommends -qq install python3-pip; rm -rf /var/lib/apt/lists/*;\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in ; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\r\nrm -f /lib/systemd/system/multi-user.target.wants/;\\\r\nrm -f /etc/systemd/system/.wants/;\\\r\nrm -f /lib/systemd/system/local-fs.target.wants/; \\\r\nrm -f /lib/systemd/system/sockets.target.wants/udev;\\ \r\nrm -f /lib/systemd/system/sockets.target.wants/initctl;\\ \r\nrm -f /lib/systemd/system/basic.target.wants/;\\\r\nrm -f /lib/systemd/system/anaconda.target.wants/*;\nVOLUME [ “/sys/fs/cgroup” ]\nVOLUME [ \"/opt/BlueXolo-src\" ]\nVOLUME [ \"/var/lib/pgsql\" ]\nVOLUME [ \"/opt/bluexolo-custom\" ]\n\n# ----------------------------------\n# Copy important files to filesystem\n# ----------------------------------\nADD scripts/update_pg_pwd.sql /\nADD scripts/users.sql /\nADD scripts/create_bluexolo_db.sql /\nCOPY scripts/rc.local /etc\nADD scripts/FIRST_SETUP /\nADD scripts/install-robot.sh /\nRUN \\\r\nchmod 0755 /etc/rc.local\n\n# ------------------------\n# Set workdir to tmp\n# ------------------------\nWORKDIR /tmp \n\nRUN \\\r\n  systemctl enable rabbitmq-server  ;\\\r\n  systemctl enable postgresql;\n\n# ---------------------------------------------\n# Install bluexolo sources and install pre-reqs\n# ---------------------------------------------\n\n# ------------------\n# Install virtualenv\n# ------------------\n\nCOPY sources/bluexolo_src.zip /tmp\n\nRUN \\\r\n  mkdir -p /opt/BlueXolo &&\\\r\n  cd /opt/BlueXolo &&\\\r\n  unzip /tmp/bluexolo_src.zip \n\n# Set password for root 'bluexolo'\n\nADD sources/secrets.json /opt/BlueXolo/\n\n# -------------------\n# Clean tmp directory\n# -------------------\nRUN rm -rf  /tmp/*\n\n# ---------------------------\n# Install robot and libraries\n# ---------------------------\n#RUN /install-robot.sh\n\n# --------------------------\n# Tweak logind.conf to avoid\n# terminals\n# -------------------------\nRUN echo 'NAutoVTs=0' >> /etc/systemd/logind.conf\nRUN echo 'ReserveVT=0' >> /etc/systemd/logind.conf\nRUN rm -f /lib/systemd/system/console-getty.service\n# --------------------------\n# Set ports to be accesible\n# --------------------------\nEXPOSE 8000\n\n# ------------------------------\n# Set initial command for image\n# ------------------------------\nCMD [\"/sbin/init\"]\n\n# ------------------------------\n# End of Dockerfile\n# ------------------------------\n\n"
}