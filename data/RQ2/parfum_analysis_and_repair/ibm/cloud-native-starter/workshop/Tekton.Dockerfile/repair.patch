diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibm/cloud-native-starter/workshop/Tekton.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibm/cloud-native-starter/workshop/Tekton.Dockerfile/repaired.Dockerfile
index 746d33e..ec044a8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibm/cloud-native-starter/workshop/Tekton.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibm/cloud-native-starter/workshop/Tekton.Dockerfile/repaired.Dockerfile
@@ -1,8 +1,8 @@
-# You can use following commands 
+# You can use following commands
 # to build and run the image on your local PC:
 # =====================================
-# $ docker build -t cns-tools-image:v1 . 
-# $ docker run -it cns-tools-image:v1 
+# $ docker build -t cns-tools-image:v1 .
+# $ docker run -it cns-tools-image:v1
 
 # *************************************
 #   DOESN'T WORK
@@ -13,19 +13,19 @@ FROM ubuntu:latest
 
 RUN echo "*********** Init *************** "
 RUN apt-get update \
-    && apt-get --assume-yes install curl \
-    && apt-get --assume-yes install git-core \
-    && apt-get --assume-yes install wget \
+    && apt-get --assume-yes -y --no-install-recommends install curl \
+    && apt-get --assume-yes -y --no-install-recommends install git-core \
+    && apt-get --assume-yes -y --no-install-recommends install wget \
 # editor
-    && apt-get --assume-yes install nano \
+    && apt-get --assume-yes -y --no-install-recommends install nano \
 # setup network tools
-    && apt-get --assume-yes install apt-utils \
-    && apt-get --assume-yes install net-tools \
+    && apt-get --assume-yes -y --no-install-recommends install apt-utils \
+    && apt-get --assume-yes -y --no-install-recommends install net-tools \
 # zip
-    && apt-get --assume-yes install unzip \
-    && apt-get --assume-yes install zip \
-# Needed for Podman installlation    
-    && DEBIAN_FRONTEND="noninteractive" apt-get --assume-yes install tzdata
+    && apt-get --assume-yes -y --no-install-recommends install unzip \
+    && apt-get --assume-yes -y --no-install-recommends install zip \
+# Needed for Podman installlation   
+    && DEBIAN_FRONTEND="noninteractive" apt-get -y --no-install-recommends --assume-yes install tzdata && rm -rf /var/lib/apt/lists/*;
 
 
 # Cloud-Native-Starter -project
@@ -47,15 +47,15 @@ RUN apt-get update \
 # -----------
 
 WORKDIR /
-RUN apt install -y gnupg
-RUN apt install -y docker.io 
+RUN apt install --no-install-recommends -y gnupg && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y docker.io && rm -rf /var/lib/apt/lists/*;
 RUN docker --version
 
 # -----------
 # Tekton CLI
 # -----------
     # Get the tar.xz
-RUN curl -LO https://github.com/tektoncd/cli/releases/download/v0.13.1/tkn_0.13.1_Darwin_x86_64.tar.gz \
+RUN curl -f -LO https://github.com/tektoncd/cli/releases/download/v0.13.1/tkn_0.13.1_Darwin_x86_64.tar.gz \
     # Extract tkn to your PATH (e.g. /usr/local/bin)
     && tar xvzf tkn_0.13.1_Darwin_x86_64.tar.gz -C /usr/local/bin tkn
 
@@ -64,11 +64,11 @@ RUN curl -LO https://github.com/tektoncd/cli/releases/download/v0.13.1/tkn_0.13.
 # -----------
 
 #RUN echo "*********** Kubernetes *************** "
-RUN apt-get update && apt-get install -y apt-transport-https \
-    && curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \
+RUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https \
+    && curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \
     && echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list \
     && apt-get update \
-    && apt-get install -y kubectl 
+    && apt-get install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;
 
 # -----------
 # IBM Cloud CLI
@@ -87,7 +87,7 @@ RUN  curl -fsSL https://clis.cloud.ibm.com/install/linux | sh \
 #WORKDIR /tmp
 RUN wget https://mirror.openshift.com/pub/openshift-v4/clients/oc/4.5/linux/oc.tar.gz \
     && tar -zxvf oc.tar.gz \
-    && mv oc /usr/local/bin/oc 
+    && mv oc /usr/local/bin/oc && rm oc.tar.gz
 
 # ------------
 # Expose Ports