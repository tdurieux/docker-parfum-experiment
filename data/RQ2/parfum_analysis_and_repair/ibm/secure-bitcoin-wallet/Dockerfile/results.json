{
  "startTime": 1674248793644,
  "endTime": 1674248795197,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##############################################################################\n# Copyright 2020 IBM Corp. All Rights Reserved.\n#\n#  Licensed under the Apache License, Version 2.0 (the \"License\");\n#  you may not use this file except in compliance with the License.\n#  You may obtain a copy of the License at\n#\n#       http://www.apache.org/licenses/LICENSE-2.0\n#\n#   Unless required by applicable law or agreed to in writing, software\n#   distributed under the License is distributed on an \"AS IS\" BASIS,\n#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#   See the License for the specific language governing permissions and\n#   limitations under the License.\n##############################################################################\nFROM node:16-buster-slim AS node\n\nFROM python:3.9.7-slim-buster\n\nCOPY --from=node /usr/local /usr/local\n\nARG GRPC_PYTHON_BUILD_SYSTEM_OPENSSL=1\n\nARG NO_GRPC_BUILD\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n# install python and other additional packages\n    apt-get install -y --no-install-recommends ca-certificates curl && \\\n    apt-get install -y --no-install-recommends git python3-pip python3-dev build-essential python3-setuptools python3-wheel protobuf-compiler libssl-dev libffi-dev autoconf automake libtool && \\\n    apt-get install -y --no-install-recommends php php-curl apache2 xz-utils libedit2 vim && \\\n    apt-get install -y --no-install-recommends sqlite3 libsqlite3-dev libpng-dev libzip-dev python php-zip && \\\n    apt-get install -y --no-install-recommends php-mbstring php-xml php-sqlite3 unzip && \\\n    apt-get install -y --no-install-recommends supervisor && \\\n# clean up\n    apt-get -y autoremove && apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /var/tmp/* /git/grpc\n\n###################################################################################\n\nARG ELECTRUM_TAG=\"local-3.3.6-hpcs\"\nARG ELECTRUM_COMMIT=\"9529b418e26430d577151e460435de0cd445fb7e\"\n\nENV NETWORK \"--testnet\"\n# ENV ELECTRUM_USER electrum\n# ENV ELECTRUM_HOME /home/$ELECTRUM_USER\nENV ELECTRUM_USER root\nENV ELECTRUM_HOME /$ELECTRUM_USER\nENV ELECTRUM_PASSWORD passw0rd\nENV ELECTRUM_DIR /git/electrum\n\n# Add user electrum\n# RUN adduser --home $ELECTRUM_HOME --uid 2000 --disabled-password --disabled-login $ELECTRUM_USER\n\nARG GHE_ACCESS_TOKEN\nWORKDIR /git\nADD pyep11 /git/pyep11\nADD electrum/${ELECTRUM_TAG}.patch .\nRUN git clone https://github.com/spesmilo/electrum.git && \\\n    cd /git/electrum && \\\n    git checkout ${ELECTRUM_COMMIT} && \\\n    git apply ../${ELECTRUM_TAG}.patch && \\\n    pip3 uninstall -y enum34 && \\\n    pip3 install --no-cache-dir . && \\\n    protoc --proto_path=electrum --python_out=electrum electrum/paymentrequest.proto && \\\n    cd /git/pyep11 && \\\n    if [ -z \"$NO_GRPC_BUILD\" ]; then \\\n       pip3 install --no-cache-dir grpclib grpcio-tools; \\\n       python3 -m grpc_tools.protoc common/protos/*.proto generated/protos/*.proto \\\n              vendor/github.com/gogo/protobuf/gogoproto/*.proto \\\n              vendor/github.com/gogo/googleapis/google/api/*.proto \\\n              -Icommon/protos -Igenerated/protos \\\n\t      -Ivendor/github.com/gogo/protobuf/gogoproto \\\n\t      -Ivendor/github.com/gogo/googleapis \\\n              --python_out=/git/pyep11/generated/python_grpc --grpc_python_out=/git/pyep11/generated/python_grpc; \\\n       mv /git/pyep11/generated/python_grpc/* /git/electrum; \\\n       mv /git/pyep11/pyep11.py /git/electrum; \\\n       mv /git/pyep11/grep11consts.py /git/electrum; \\\n    fi && \\\n    mkdir -p /data && chown ${ELECTRUM_USER} /data\n\n# Run Electrum as non privileged user\n# USER $ELECTRUM_USER\n\nWORKDIR ${ELECTRUM_DIR}\n\nENV ZHSM ${ZHSM}\nENV PYTHONPATH ${ELECTRUM_DIR}\n\n###################################################################################\n# Install Laravel\n\nENV DEBIAN_FRONTEND noninteractive\n\nWORKDIR /root\nENV APP_ROOT /var/www/html/electrum\nRUN curl -f -sS https://getcomposer.org/installer -o composer-setup.php && \\\n    php composer-setup.php --install-dir=/usr/local/bin --filename=composer && \\\n    cd $APP_ROOT/.. && \\\n    git clone https://github.com/laravel/laravel.git && \\\n    mv laravel electrum && \\\n    cd $APP_ROOT && \\\n    git checkout 8.x\n\n###################################################################################\n# Install Laravel-Electrum, a web frontend for Electrum\nENV APP_ROOT /var/www/html/electrum\n\nWORKDIR $APP_ROOT\n\nADD laravel-electrum/composer.json .\nADD laravel-electrum/env.sh .\nADD laravel-electrum/api.php laravel-electrum/web.php /var/www/html/electrum/routes/\n\nARG LARAVEL_ELECTRUM_BRANCH=\"local-e\"\n\n# Use ACCESS_TOKEN to access github with credential when necessary\nARG ACCESS_TOKEN\nRUN sed --in-place \"s|dev-local|dev-${LARAVEL_ELECTRUM_BRANCH}|\" composer.json && \\\n    composer config --global github-oauth.github.com ${ACCESS_TOKEN} && \\\n    composer -vv install && \\\n    php artisan ui vue --auth && \\\n    npm install && \\\n    mv .env.example .env && \\\n    php artisan key:generate && \\\n    ./env.sh && \\\n    php artisan make:migration create_user && \\\n    sed --in-place \"s|App\\\\\\Providers\\\\\\RouteServiceProvider::class,|App\\\\\\Providers\\\\\\RouteServiceProvider::class,\\n        AraneaDev\\\\\\Electrum\\\\\\ElectrumServiceProvider::class,|\" config/app.php && \\\n    sed --in-place \"s|Vue.component('example-component', require('./components/ExampleComponent.vue').default);|Vue.component('electrum-wallet', require('$APP_ROOT/vendor/araneadev/laravel-electrum/src/resources/assets/js/Electrum.vue').default);|\" $APP_ROOT/resources/js/app.js && \\\n    sed --in-place \"s|'Your wallet created! Please load your wallet after recording your seed.'|response.data.msg|\" vendor/araneadev/laravel-electrum/src/resources/assets/js/Electrum.vue && \\\n    sed --in-place \"s|/home|/electrum|\" app/Providers/RouteServiceProvider.php && \\\n    npm install ajv && \\\n    npm install clipboard --save-dev && \\\n    npm install moment --save-dev && \\\n    npm install vue2-bootstrap-modal --save-dev && \\\n    npm install vue-qrcode-component --save-dev && \\\n    npm install --save-dev prettier@1.12.0 && \\\n    npm install bootstrap-vue --save-dev && \\\n    npm install vue-loader@^15.9.5 --save-dev --legacy-peer-deps && \\\n    npm run dev && \\\n    composer -vv clearcache && \\\n    npm cache clear --force && \\\n    php artisan optimize\n\nARG ELECTRUM_DAEMON_HOST=localhost\nARG ELECTRUM_DAEMON_USER=electrum\nARG ELECTRUM_DAEMON_PASSWORD=passw0rd\nRUN echo ELECTRUM_DAEMON_HOST=${ELECTRUM_DAEMON_HOST} >> .env && \\\n    echo ELECTRUM_DAEMON_USER=${ELECTRUM_DAEMON_USER} >> .env && \\\n    echo ELECTRUM_DAEMON_PASSWORD=${ELECTRUM_DAEMON_PASSWORD} >> .env\n\nRUN chown -R www-data /var/www\n\n# set up apache\nWORKDIR /etc/apache2/sites-available\nADD laravel-electrum/electrum.conf /etc/apache2/sites-available\nADD laravel-electrum/electrum-ssl.conf /etc/apache2/sites-available\nADD laravel-electrum/apache/apache2.conf /etc/apache2\n\nWORKDIR $APP_ROOT\nADD laravel-electrum/entrypoint-frontend.sh .\nADD electrum/entrypoint-electrum.sh ${ELECTRUM_DIR}\nADD entrypoint.sh .\n\nVOLUME /data\n\nEXPOSE 443\n\n# Setup Supervisord\nADD supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nENV PYTHONUNBUFFERED=1\n\nCMD [\"/usr/bin/supervisord\"]\n"
}