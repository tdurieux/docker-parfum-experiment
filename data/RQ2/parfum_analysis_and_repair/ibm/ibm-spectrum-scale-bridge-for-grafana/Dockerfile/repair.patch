diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibm/ibm-spectrum-scale-bridge-for-grafana/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibm/ibm-spectrum-scale-bridge-for-grafana/Dockerfile/repaired.Dockerfile
index 80f461b..f05a3c3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibm/ibm-spectrum-scale-bridge-for-grafana/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibm/ibm-spectrum-scale-bridge-for-grafana/Dockerfile/repaired.Dockerfile
@@ -2,14 +2,14 @@ ARG BASE=registry.access.redhat.com/ubi8/ubi:8.5
 FROM $BASE
 
 LABEL com.ibm.name="IBM Spectrum Scale bridge for Grafana"
-LABEL com.ibm.vendor="IBM" 
+LABEL com.ibm.vendor="IBM"
 LABEL com.ibm.description="This tool translates the IBM Spectrum Scale performance data collected internally \
 to the query requests acceptable by the Grafana integrated openTSDB plugin"
 LABEL com.ibm.summary="It allows the IBM Spectrum Scale users to perform performance monitoring for IBM Spectrum Scale devices using Grafana"
 
 COPY ./requirements/requirements_ubi8.txt  /root/requirements_ubi8.txt
 
-RUN yum install -y python36 python36-devel
+RUN yum install -y python36 python36-devel && rm -rf /var/cache/yum
 RUN /usr/bin/pip3 install --upgrade pip
 
 RUN /usr/bin/pip3 install -r /root/requirements_ubi8.txt
@@ -36,11 +36,11 @@ RUN echo "the HTTP/S protocol is set to $PROTOCOL"
 
 ARG HTTPPORT=4242
 ENV PORT=$HTTPPORT
-RUN echo "the HTTP/S port is set to $PORT" 
+RUN echo "the HTTP/S port is set to $PORT"
 
 ARG PERFMONPORT=9980
 ENV SERVERPORT=$PERFMONPORT
-RUN echo "the PERFMONPORT port is set to $SERVERPORT" 
+RUN echo "the PERFMONPORT port is set to $SERVERPORT"
 
 ARG CERTPATH='/etc/bridge_ssl/certs'
 ENV TLSKEYPATH=$CERTPATH
@@ -60,7 +60,7 @@ ENV APIKEYVALUE=$KEYVALUE
 RUN if [ "${APIKEYVALUE:0:1}" = "/" ]; then ln -s $APIKEYVALUE /etc/perfmon-api-keys; echo "APIKEYVALUE is a PATH"; else echo "APIKEYVALUE not a PATH"; fi
 
 RUN if [ -z "$TLSKEYPATH" ] || [ -z "$TLSCERTFILE" ] || [ -z "$TLSKEYFILE" ] && [ "$PROTOCOL" = "https" ]; then echo "TLSKEYPATH FOR SSL CONNECTION NOT SET - ERROR"; exit 1; else echo "PASS"; fi
-RUN echo "the ssl certificates path is set to $TLSKEYPATH" 
+RUN echo "the ssl certificates path is set to $TLSKEYPATH"
 
 ARG PMCOLLECTORIP=0.0.0.0
 ENV SERVER=$PMCOLLECTORIP