{
  "startTime": 1674253216356,
  "endTime": 1674253217533,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedDockerfile": "ARG PlatformRelease\nFROM $PlatformRelease\nENV container docker\nLABEL maintainer=\"Flavio Bergamaschi <flavio@uk.ibm.com>\"\n\nARG USER_ID\n# Docker Container for Ubuntu HElib Base\n\nUSER root\n\n# Setup the toolchain\nRUN apt update\n\n# set noninteractive installation\nRUN export DEBIAN_FRONTEND=noninteractive\n\n# Update the base OS\nRUN DEBIAN_FRONTEND=noninteractive apt update\nRUN DEBIAN_FRONTEND=noninteractive apt dist-upgrade -y\n\n# Install Doxygen so we can build the docs inside the container\nRUN apt-get update \\\n && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    doxygen && rm -rf /var/lib/apt/lists/*;\n\n# Install tzdata package\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y tzdata && rm -rf /var/lib/apt/lists/*;\n# Set UTC timezone\nRUN ln -fs /usr/share/zoneinfo/UTC /etc/localtime\nRUN dpkg-reconfigure --frontend noninteractive tzdata\n\n# Install the compilation toolchain we need...\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y \\\n    xz-utils \\\n    curl \\\n    wget \\\n    build-essential \\\n    git \\\n    cmake \\\n    m4 \\\n    file \\\n    patchelf \\\n    vim && rm -rf /var/lib/apt/lists/*;\n\n# Install bats-core\nRUN git clone https://github.com/bats-core/bats-core.git && \\\n    cd bats-core && \\\n    ./install.sh /usr/local\n\n# Install GMP dependency for NTL\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y libgmp-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install HDF5 dependency for FHE ML library\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y libhdf5-dev libhdf5-103 && rm -rf /var/lib/apt/lists/*;\n\n# Cleanup unnecessary and downloaded packages (.deb) during installation\nRUN DEBIAN_FRONTEND=noninteractive apt autoremove -y\nRUN DEBIAN_FRONTEND=noninteractive apt autoclean -y\n\n# Create dependencies build environment.\nRUN mkdir -p /opt/IBM/FHE-distro\n\n# Download, build and install NTL as system library in /usr/local\nCOPY ./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL\nWORKDIR /opt/IBM/FHE-distro/NTL\nRUN cd ./src && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on && \\\n    make -j4 && \\\n    make install && \\\n    ldconfig && \\\n    cd ../.. && \\\n    rm -rf NTL\n\n# Download, build and install HElib as system library in /usr/local\nCOPY ./DEPENDENCIES/HElib              /opt/IBM/FHE-distro/HElib\nWORKDIR /opt/IBM/FHE-distro/HElib\nRUN  mkdir ./build && \\\n    cd ./build && \\\n    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED=ON -DENABLE_THREADS=ON .. && \\\n    make -j4 && \\\n    make install && \\\n    ldconfig\n\n#Generate the docs of HElib from their source\nWORKDIR /opt/IBM/FHE-distro/HElib/documentation\nRUN doxygen Doxyfile\n\n# Download, build and install Boost as system library in /usr/local\nCOPY ./DEPENDENCIES/boost              /opt/IBM/FHE-distro/boost\nWORKDIR /opt/IBM/FHE-distro/boost\nRUN ./bootstrap.sh --with-libraries=filesystem,system,thread && \\\n    ./b2 -d0 -j4 install && \\\n    ldconfig && \\\n    cd .. && \\\n    rm -rf boost\n\n\n# Build and install ML-HElib as system library in /usr/local\nCOPY ./DEPENDENCIES/ML-HElib    /opt/IBM/FHE-distro/ML-HElib\nWORKDIR /opt/IBM/FHE-distro/ML-HElib\nRUN /bin/bash ./install_system_wide.sh && \\\n    ldconfig\n\n#Generate the docs of ML-HElib from their source\nWORKDIR /opt/IBM/FHE-distro/ML-HElib/documentation\nRUN doxygen Doxyfile\n\n# Create user fhe:fhe with no login,\nRUN adduser --uid ${USER_ID}  --gecos \"FHE Toolkit User\" --disabled-login fhe\n\nWORKDIR /home/fhe\nUSER fhe\nRUN mkdir -p /home/fhe/FHE_Examples\nRUN cp -pr /opt/IBM/FHE-distro/HElib/examples/. /home/fhe/FHE_Examples\n\n\nCMD [\"/usr/bin/bash\"]\n"
}