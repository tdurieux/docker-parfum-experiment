{
  "startTime": 1674218093323,
  "endTime": 1674218094479,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PlatformRelease\nFROM $PlatformRelease\nENV container docker\nLABEL maintainer=\"Gregory Boland <boland@us.ibm.com>\"\n\nARG USER_ID\n# Docker Container for Alpine HElib Base\n\nUSER root\n\n# Update the base OS\nRUN apk update && apk upgrade\n\n# Install the compilation toolchain and additional packages we need..\nRUN apk add --no-cache autoconf bash xz curl wget tar git gcc g++ cmake make diffutils file patchelf vim\n\nRUN apk add --no-cache coreutils ncurses\nRUN curl -f -#L https://github.com/bats-core/bats-core/archive/master.zip | unzip -\nRUN bash bats-core-master/install.sh /usr/local\nRUN rm -rf ./bats-core-master\n\n# Install Doxygen so we can build the docs inside the container\nRUN apk add --no-cache doxygen\n\n# Install GMP dependency\nRUN apk add --no-cache gmp-dev\n\n# Install IBM Fully Homomorphic Encryption Library for ML Dependency\nRUN apk add --no-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/community hdf5-dev\n\n# Create dependencies build environment.\nRUN mkdir -p /opt/IBM/FHE-distro\n\n# Download, build and install NTL as system library in /usr/local\nCOPY ./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL\nWORKDIR /opt/IBM/FHE-distro/NTL\nRUN cd ./src && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on && \\\n    make -j4 && \\\n    make install && \\\n    ldconfig / && \\\n    cd ../.. && \\\n    rm -rf NTL\n\n# Download, build and install HElib as system library in /usr/local\nCOPY ./DEPENDENCIES/HElib              /opt/IBM/FHE-distro/HElib\nWORKDIR /opt/IBM/FHE-distro/HElib\nRUN  mkdir ./build && \\\n    cd ./build && \\\n    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED=ON -DENABLE_THREADS=ON .. && \\\n    make -j4 && \\\n    make install && \\\n    ldconfig /\n\n#Generate the docs of HElib from their source\nWORKDIR /opt/IBM/FHE-distro/HElib/documentation\nRUN doxygen Doxyfile\n\n# Download, build and install Boost as system library in /usr/local\nCOPY ./DEPENDENCIES/boost              /opt/IBM/FHE-distro/boost\nWORKDIR /opt/IBM/FHE-distro/boost\nRUN ./bootstrap.sh --with-libraries=filesystem,system,thread && \\\n    ./b2 -d0 -j4 install && \\\n    ldconfig / && \\\n    cd .. && \\\n    rm -rf boost\n\n# Build and install ML-HElib as system library in /usr/local\nCOPY ./DEPENDENCIES/ML-HElib    /opt/IBM/FHE-distro/ML-HElib\nWORKDIR /opt/IBM/FHE-distro/ML-HElib\nRUN /bin/bash ./install_system_wide.sh && \\\n    ldconfig /\n\n#Generate the docs of ML-HElib from their source\nWORKDIR /opt/IBM/FHE-distro/ML-HElib/documentation\nRUN doxygen Doxyfile\n\n\n# Create user fhe:fhe with no login\nRUN adduser --uid ${USER_ID} --disabled-password fhe\nWORKDIR /home/fhe\nRUN mkdir -p /home/fhe/FHE_Examples\nRUN cp -pr /opt/IBM/FHE-distro/HElib/examples /home/fhe/FHE_Examples\nRUN chown -R fhe:fhe /opt/IBM\n\nCMD [\"bash\"]\n"
}