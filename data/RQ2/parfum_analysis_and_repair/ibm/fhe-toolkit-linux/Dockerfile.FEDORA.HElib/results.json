{
  "startTime": 1674216855486,
  "endTime": 1674216857100,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PlatformRelease\nFROM $PlatformRelease\nENV container docker\nLABEL maintainer=\"Flavio Bergamaschi <flavio@uk.ibm.com>\"\n\nARG USER_ID\n# Docker Container for FEDORA HElib Base\n\nUSER root\n\n# Update the base OS\nRUN yum -y update\nRUN yum clean packages\n\n#Install the Doxygen Dependency so we can make docs\nRUN yum -y install doxygen && rm -rf /var/cache/yum\n\n# Install the compilation toolchain and additional packages we need..\nRUN yum -y install autoconf xz curl wget tar cmake git gcc gcc-c++ make diffutils file patchelf vim && rm -rf /var/cache/yum\nRUN yum clean packages\n\n# Install GMP dependency\nRUN yum -y install gmp-devel && rm -rf /var/cache/yum\nRUN yum clean packages\n\n# Install IBM Fully Homomorphic Encryption Library for ML Dependency\nRUN yum -y install hdf5-devel && rm -rf /var/cache/yum\nRUN yum clean packages\n\n# Install bats-core\nRUN git clone https://github.com/bats-core/bats-core.git && \\\n    cd bats-core && \\\n    ./install.sh /usr/local\n\n# Create dependencies build environment.\nRUN mkdir -p /opt/IBM/FHE-distro\n\n# Download, build and install NTL as system library in /usr/local\nCOPY ./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL\nWORKDIR /opt/IBM/FHE-distro/NTL\nRUN cd ./src && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on && \\\n    make -j4 && \\\n    make install && \\\n    ldconfig && \\\n    cd ../.. && \\\n    rm -rf NTL\n\n# Download, build and install HElib as system library in /usr/local\nCOPY ./DEPENDENCIES/HElib              /opt/IBM/FHE-distro/HElib\nWORKDIR /opt/IBM/FHE-distro/HElib\nRUN  mkdir ./build && \\\n    cd ./build && \\\n    cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -DBUILD_SHARED=ON -DENABLE_THREADS=ON .. && \\\n    make -j4 && \\\n    make install && \\\n    ldconfig\n\n# Download, build and install Boost as system library in /usr/local\nCOPY ./DEPENDENCIES/boost              /opt/IBM/FHE-distro/boost\nWORKDIR /opt/IBM/FHE-distro/boost\nRUN ./bootstrap.sh --with-libraries=filesystem,system,thread && \\\n    ./b2 -d0 -j4 install && \\\n    ldconfig && \\\n    cd .. && \\\n    rm -rf boost\n\n#Generate the docs of HElib from their source\nWORKDIR /opt/IBM/FHE-distro/HElib/documentation\nRUN doxygen Doxyfile\n\n# Build and install ML-HElib as system library in /usr/local\nCOPY ./DEPENDENCIES/ML-HElib    /opt/IBM/FHE-distro/ML-HElib\nWORKDIR /opt/IBM/FHE-distro/ML-HElib\nRUN /bin/bash ./install_system_wide.sh && \\\n    ldconfig\n\n#Generate the docs of ML-HElib from their source\nWORKDIR /opt/IBM/FHE-distro/ML-HElib/documentation\nRUN doxygen Doxyfile\n\n\n# Create user fhe:fhe with no login,\nRUN adduser --uid ${USER_ID}  --comment \"FHE Toolkit User\" fhe\nRUN usermod -L fhe\n\nWORKDIR /home/fhe\nUSER fhe\nRUN mkdir -p /home/fhe/FHE_Examples\nRUN cp -pr /opt/IBM/FHE-distro/HElib/examples/. /home/fhe/FHE_Examples\n\nCMD [\"/usr/bin/bash\"]\n\n"
}