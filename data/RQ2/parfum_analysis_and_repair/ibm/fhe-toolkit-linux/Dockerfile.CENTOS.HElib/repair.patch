diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibm/fhe-toolkit-linux/Dockerfile.CENTOS.HElib b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibm/fhe-toolkit-linux/Dockerfile.CENTOS.HElib/repaired.Dockerfile
index 62dfe76..2bad855 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibm/fhe-toolkit-linux/Dockerfile.CENTOS.HElib
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibm/fhe-toolkit-linux/Dockerfile.CENTOS.HElib/repaired.Dockerfile
@@ -13,17 +13,17 @@ RUN yum -y update
 RUN yum clean packages
 
 # Setup the toolchain
-RUN yum -y install epel-release
+RUN yum -y install epel-release && rm -rf /var/cache/yum
 RUN yum repolist
-RUN yum -y install autoconf xz curl wget tar git gcc gcc-c++ make diffutils file patchelf vim python3 python2 openssl-devel
+RUN yum -y install autoconf xz curl wget tar git gcc gcc-c++ make diffutils file patchelf vim python3 python2 openssl-devel && rm -rf /var/cache/yum
 RUN yum clean packages
 
 # Install GMP dependency
-RUN yum -y install gmp-devel
+RUN yum -y install gmp-devel && rm -rf /var/cache/yum
 RUN yum clean packages
 
 # Install IBM Fully Homomorphic Encryption Library for ML Dependency
-RUN yum -y install curl boost-devel
+RUN yum -y install curl boost-devel && rm -rf /var/cache/yum
 # These commands are needed for HDF5 which the Encryption ML Demo relies on...
 RUN dnf install -y 'dnf-command(config-manager)'
 RUN dnf config-manager -y --set-enabled powertools
@@ -39,7 +39,7 @@ RUN wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3
      cd cmake-3.17.3 && \
      ./bootstrap && \
      make && \
-     make install
+     make install && rm cmake-3.17.3.tar.gz
 
 # Create dependencies build environment and copy NTL and HElib distros into it.
 RUN mkdir -p /opt/IBM/FHE-distro
@@ -51,7 +51,7 @@ RUN mkdir -p /opt/IBM/FHE-distro
 COPY ./DEPENDENCIES/NTL                /opt/IBM/FHE-distro/NTL
 WORKDIR /opt/IBM/FHE-distro/NTL
 RUN cd ./src && \
-    ./configure SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" SHARED=on NTL_GMP_LIP=on NTL_THREADS=on NTL_THREAD_BOOST=on NTL_RANDOM_AES256CTR=on && \
     make -j4 && \
     make install && \
     ldconfig && \