{
  "startTime": 1674218641655,
  "endTime": 1674218642331,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile builds topographer image based on Alpine Linux.\n# This is minimal image as possible\n#\n# Please visit https://github.com/9seconds/topographer for the details.\n\n###############################################################################\n# BUILD STAGE\n\nFROM golang:1.16-alpine AS build-env\n\nENV CGO_ENABLED=0\n\nRUN set -x \\\n  && apk --update --no-cache add \\\n    bash \\\n    ca-certificates \\\n    git \\\n    make\n\nADD . /app\nWORKDIR /app\n\nRUN set -x \\\n  && make clean \\\n  && git submodule update --init \\\n  && make -j 4 static-build\n\n\n###############################################################################\n# PACKAGE STAGE\n\nFROM scratch\n\nENTRYPOINT [\"/topographer\"]\nCMD [\"-config\", \"/config.hjson\"]\nEXPOSE 80\n\nCOPY --from=build-env \\\n    /etc/ssl/certs/ca-certificates.crt \\\n    /etc/ssl/certs/ca-certificates.crt\nCOPY --from=build-env \\\n    /app/topographer \\\n    /topographer\nCOPY --from=build-env \\\n    /app/example.config.hjson \\\n    /config.hjson\n"
}