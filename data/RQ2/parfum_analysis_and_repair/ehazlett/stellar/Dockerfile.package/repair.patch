diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ehazlett/stellar/Dockerfile.package b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ehazlett/stellar/Dockerfile.package/repaired.Dockerfile
index 857c68b..ed178da 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ehazlett/stellar/Dockerfile.package
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ehazlett/stellar/Dockerfile.package/repaired.Dockerfile
@@ -2,11 +2,11 @@ FROM golang:1.11 AS build
 
 ARG GOOS
 ARG GOARCH
-RUN apt-get update && apt-get install -y git make curl build-essential git autoconf automake libtool unzip file bzr
+RUN apt-get update && apt-get install --no-install-recommends -y git make curl build-essential git autoconf automake libtool unzip file bzr && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://github.com/google/protobuf /tmp/protobuf && \
     cd /tmp/protobuf && \
     ./autogen.sh && \
-    ./configure && make install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make install
 RUN go get -v github.com/LK4D4/vndr
 RUN go get -v github.com/golang/protobuf/protoc-gen-go
 RUN go get -v github.com/gogo/protobuf/protoc-gen-gofast
@@ -29,14 +29,14 @@ RUN date > /release.txt
 RUN git rev-parse HEAD >> /release.txt
 
 FROM build as runc
-RUN apt-get update && apt-get install -y libseccomp-dev
+RUN apt-get update && apt-get install --no-install-recommends -y libseccomp-dev && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://github.com/opencontainers/runc /go/src/github.com/opencontainers/runc
 WORKDIR /go/src/github.com/opencontainers/runc
 RUN git reset --hard 20aff4f0488c6d4b8df4d85b4f63f1f704c11abd
 RUN make
 
 FROM build as containerd
-RUN apt-get update && apt-get install -y libseccomp-dev btrfs-tools
+RUN apt-get update && apt-get install --no-install-recommends -y libseccomp-dev btrfs-tools && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://github.com/containerd/containerd /go/src/github.com/containerd/containerd
 WORKDIR /go/src/github.com/containerd/containerd
 RUN make
@@ -58,7 +58,7 @@ RUN go build -installsuffix netgo -ldflags "$(cat .tmp/ldflags) -w -extldflags -
 
 
 FROM build as cni
-RUN apt-get update && apt-get install -y build-essential
+RUN apt-get update && apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;
 RUN git clone https://github.com/containernetworking/plugins /go/src/github.com/containernetworking/plugins
 WORKDIR /go/src/github.com/containernetworking/plugins
 RUN ./build_linux.sh