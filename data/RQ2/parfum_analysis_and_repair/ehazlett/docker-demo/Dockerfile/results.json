{
  "startTime": 1674220708758,
  "endTime": 1674220709512,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:latest as ui\nRUN npm install -g gulp browserify babelify && npm cache clean --force;\nCOPY ui/package.json /tmp/\nCOPY ui/semantic.json /tmp/\nRUN cd /tmp && npm install && \\\n    mkdir -p /usr/src/app/ui && \\\n    cp -rf /tmp/node_modules /usr/src/app/ui/ && npm cache clean --force; && rm -rf /usr/src/app/ui\nWORKDIR /usr/src/app\nCOPY . /usr/src/app\nRUN cd ui/node_modules/semantic-ui && gulp install\nRUN cp -f ui/semantic.theme.config ui/semantic/src/theme.config && \\\n    mkdir -p ui/semantic/src/themes/app && \\\n    cp -rf ui/semantic.theme/* ui/semantic/src/themes/app\nRUN cd ui/semantic && gulp build\n\nFROM golang:1.11-alpine as app\nRUN apk add --no-cache -U build-base git\nCOPY . /go/src/app\nWORKDIR /go/src/app\nENV GO111MODULE=on\nRUN go build -a -v -tags 'netgo' -ldflags '-w -linkmode external -extldflags -static' -o docker-demo .\n\nFROM alpine:latest\nMAINTAINER \"Evan Hazlett <ejhazlett@gmail.com>\"\nRUN apk add -U --no-cache curl\nCOPY static /static\nCOPY --from=ui /usr/src/app/ui/semantic/dist/semantic.min.css static/dist/semantic.min.css\nCOPY --from=ui /usr/src/app/ui/semantic/dist/semantic.min.js static/dist/semantic.min.js\nCOPY --from=ui /usr/src/app/ui/semantic/dist/themes/default/assets static/dist/themes/default/\nCOPY --from=app /go/src/app/docker-demo /bin/docker-demo\nCOPY templates /templates\nEXPOSE 8080\nENTRYPOINT [\"/bin/docker-demo\"]\n"
}