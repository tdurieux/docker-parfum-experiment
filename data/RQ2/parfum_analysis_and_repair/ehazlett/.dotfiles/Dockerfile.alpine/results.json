{
  "startTime": 1674219210813,
  "endTime": 1674219212519,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 151
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nMAINTAINER evan hazlett <ejhazlett@gmail.com>\n\nRUN apk add --no-cache -U \\\n    gcc \\\n    git \\\n    make \\\n    jq \\\n    tmux \\\n    htop \\\n    sudo \\\n    curl \\\n    bash \\\n    vim \\\n    go \\\n    perl \\\n    socat\n\n# base config\nENV CONTAINER_USER ehazlett\nRUN adduser -D $CONTAINER_USER\nRUN echo \"ALL            ALL = (ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\n## vim\n#RUN git clone https://github.com/vim/vim /tmp/vim\n#RUN (cd /tmp/vim && ./configure --prefix=/usr/local --enable-gui=no --without-x --disable-nls --enable-multibyte --with-tlib=ncurses --enable-pythoninterp --with-features=huge && make install)\n\n## go\n#RUN curl -sSL https://storage.googleapis.com/golang/go1.6.linux-amd64.tar.gz -o /tmp/go.tar.gz && \\\n#    cd /usr/local && \\\n#    tar zxf /tmp/go.tar.gz && \\\n#    rm /tmp/go.tar.gz\n\nWORKDIR /home/$CONTAINER_USER\nENV HOME /home/$CONTAINER_USER\nENV SHELL /bin/bash\nCOPY . $HOME/.dotfiles\nRUN (cd $HOME/.dotfiles && git submodule init && git submodule update --recursive)\n\n# env config\nRUN mkdir -p $HOME/.ssh && \\\n    ln -sf $HOME/.dotfiles/vim $HOME/.vim && \\\n    ln -sf $HOME/.dotfiles/bashrc $HOME/.bashrc && \\\n    ln -sf $HOME/.dotfiles/vimrc $HOME/.vimrc && \\\n    sed -i 's/^colorscheme.*//g' $HOME/.dotfiles/vimrc && \\\n    vim +PluginInstall +qall > /dev/null 2>&1\n\nRUN (cd $HOME/.dotfiles && git checkout vimrc && \\\n    ln -sf $HOME/.dotfiles/gitconfig $HOME/.gitconfig && \\\n    ln -sf $HOME/.dotfiles/ssh_config $HOME/.ssh/config && \\\n    chown $CONTAINER_USER:$CONTAINER_USER $HOME/.ssh/config && \\\n    chmod 600 $HOME/.ssh/config && \\\n    ln -sf $HOME/.dotfiles/known_hosts $HOME/.ssh/known_hosts && \\\n    ln -sf $HOME/.dotfiles/tmux.conf $HOME/.tmux.conf)\n\n# go config\nENV GOROOT /usr/lib/go\nENV GOPATH $HOME/dev/gocode\nENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH\n\n# go tools\nRUN go get github.com/tools/godep && \\\n    go get golang.org/x/tools/present && \\\n    go get github.com/google/git-appraise/git-appraise\n\n# nvm\nRUN cd $HOME && git clone https://github.com/creationix/nvm .nvm\n\n# latest docker binary\nRUN curl -f -sSL https://get.docker.com/builds/Linux/x86_64/docker-1.10.2 -o /usr/local/bin/docker && \\\n    chmod +x /usr/local/bin/docker\n\n# perms\nRUN chown -R $CONTAINER_USER:$CONTAINER_USER $HOME && \\\n    addgroup docker && \\\n    addgroup staff\n\nENV DOCKER_VERSION 1.10.2\nENV MACHINE_VERSION v0.6.0\nENV COMPOSE_VERSION 1.6.0\n\nRUN curl -f -sL https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION} > /usr/local/bin/docker && \\\n    chmod +x /usr/local/bin/docker && \\\n    curl -f -sSL https://github.com/docker/machine/releases/download/${MACHINE_VERSION}/docker-machine-`uname -s`-`uname -m` -o /usr/local/bin/docker-machine && \\\n    chmod +x /usr/local/bin/docker-machine && \\\n    ln -sf /usr/local/bin/docker-machine /usr/local/bin/machine && \\\n    curl -f -L https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && \\\n    chmod +x /usr/local/bin/docker-compose\n\n# user\nUSER $CONTAINER_USER\nCMD [\"bash\"]\n"
}