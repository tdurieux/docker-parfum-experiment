{
  "startTime": 1674246917990,
  "endTime": 1674246924522,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 19,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_NAMESPACE=rainbond\nARG VERSION=V5.4-dev\n\nFROM golang:1.14-stretch as builder\nARG VERSION=v5.7.1-release\n# ENV GOPROXY=https://goproxy.io\nENV CGO_ENABLED=1\nENV GOPATH=/go\nARG DOMESTIC_NAMESPACE=goodrain\nENV DOMESTIC_NAMESPACE=${DOMESTIC_NAMESPACE}\nRUN git clone -b ${VERSION} --depth=1 https://github.com/goodrain/cloud-adaptor /go/src/goodrain.com/cloud-adaptor\nWORKDIR /go/src/goodrain.com/cloud-adaptor/\nARG LDFLAGS\nRUN go build -ldflags \"$LDFLAGS\" -o /cloud-adaptor $PWD/cmd/cloud-adaptor\n\nARG IMAGE_NAMESPACE=rainbond\nARG VERSION=V5.4-dev\n\nFROM ${IMAGE_NAMESPACE}/rainbond-ui:${VERSION}\nARG RELEASE_DESC=\nARG ARCH=amd64\nARG BRANCH=v2.3.0\n\nLABEL author=\"zengqg@goodrain.com\"\nRUN mkdir -p /app/ui /usr/share/zoneinfo/Asia/ && \\\n    mkdir -p /opt/rainbond/ && \\\n    mkdir -p /var/lib/k3s/server/manifests/metrics-server/rainbond && \\\n\tmkdir -p ~/.kube/ && \\\n    mkdir -p /app/logs/ && \\\n    touch /app/logs/init_rainbond_node.log && \\\n    touch /app/logs/init_rainbond_api.log && \\\n\tapt-get update && apt-get install --no-install-recommends -y supervisor nfs-common iptables && rm -rf /var/lib/apt/lists/* && \\\n    set -eux; \\\n    if [ \"${ARCH}\" = \"arm64\" ]; then \\\n        wget \"https://pkg.goodrain.com/pkg/helm-arm64\" && chmod +x helm-arm64 && mv helm-arm64 /usr/local/bin/helm; \\\n    else \\\n        wget \"https://pkg.goodrain.com/pkg/helm\" && chmod +x helm && mv helm /usr/local/bin/; \\\n    fi && \\\n    mkdir -p /var/log/supervisor\n# Distinguish download addresses according to the CPU architecture of the build environment\nRUN set -eux; \\\n\tcase \"${ARCH}\" in \\\n\t\t'amd64') \\\n\t\t\tdocker_url='https://download.docker.com/linux/static/stable/x86_64/docker-20.10.11.tgz'; \\\n            k3s_url=\"https://github.com/rancher/k3s/releases/download/v1.22.3+k3s1/k3s\" \\\n            kubectl_url=\"https://storage.googleapis.com/kubernetes-release/release/v1.22.3/bin/linux/amd64/kubectl\" \\\n\t\t\t;; \\\n\t\t'arm64') \\\n\t\t\tdocker_url='https://pkg.goodrain.com/pkg/docker-20.10.11.tgz'; \\\n            k3s_url=\"https://pkg.goodrain.com/pkg/k3s-arm64\" \\\n            kubectl_url=\"https://pkg.goodrain.com/pkg/kubectl\" \\\n\t\t\t;; \\\n\tesac \\\n    && wget -O docker.tgz \"$docker_url\" \\\n\t&& tar xzf docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\n\t&& rm docker.tgz \\\n    && mkdir -p /etc/docker \\\n    && wget -O /usr/local/bin/k3s \"$k3s_url\" \\\n    && wget -O /usr/local/bin/kubectl \"$kubectl_url\" \\\n\t&& chmod +x /usr/local/bin/kubectl /usr/local/bin/k3s \\\n\t&& ln -s /etc/rancher/k3s/k3s.yaml ~/.kube/config\n\n\nCOPY --from=builder /go/src/goodrain.com/cloud-adaptor/chart /app/chart\nCOPY --from=builder /cloud-adaptor /app/cloudadaptor\nADD . /app/ui\nWORKDIR /app/ui\nARG VERSION=V5.4-dev\nARG DOMESTIC_NAMESPACE=goodrain\nARG CLONE_URL=https://github.com/goodrain\nRUN set -eux; \\\n    if [ \"${ARCH}\" = \"arm64\" ]; then \\\n        wget \"https://pkg.rainbond.com/images-pkg/arm64/rainbond-v5.6.0.tar\"; \\\n        wget \"https://pkg.rainbond.com/images-pkg/arm64/log\"; \\\n    else \\\n        wget \"https://rainbond-pkg.oss-cn-shanghai.aliyuncs.com/images-pkg/rainbond-${VERSION}.tar\"; \\\n        wget \"https://pkg.rainbond.com/images-pkg/log\"; \\\n    fi && \\\n    git clone -b ${BRANCH} --depth=1 ${CLONE_URL}/rainbond-operator.git /app/ui/rainbond-operator && \\\n    chmod +x /app/ui/entrypoint.sh /app/ui/start.sh /app/ui/k3s.sh  /app/ui/init_rainbond.sh && \\\n    mv /app/ui/supervisord.conf /etc/supervisor/supervisord.conf && \\\n    mv /app/ui/rainbond.conf /etc/supervisor/conf.d/rainbond.conf && \\\n    mv /app/ui/dind.conf /etc/supervisor/conf.d/dind.conf.bak && \\\n\tmv /app/ui/daemon.json /etc/docker/daemon.json && \\\n\tchmod +x /app/cloudadaptor && \\\n    mv /dist/index.html /app/ui/www/templates/index.html && \\\n    chmod +x /app/ui/log && mv /app/ui/log /usr/bin/log && \\\n    rm -rf /app/ui/www/static/dists && \\\n    mkdir /app/ui/www/static/dists && \\\n    cp -a /dist/* /app/ui/www/static/dists/ && \\\n    rm -rf /dist \\\n    && mkdir /app/data \\\n    && mkdir /root/.ssh \\\n    && python -m pip install --upgrade pip \\\n    && pip install --no-cache-dir -r requirements.txt \\\n    && python manage.py collectstatic --noinput --ignore weavescope-src --ignore drf-yasg  --ignore rest_framework \\\n    && rm -rf /root/.cache \\\n    && rm -rf /tmp/* \\\n    && rm -rf /app/ui/www/static/www/weavescope\n\nENV PORT 7070\nENV IS_OPEN_API=true\nENV RELEASE_DESC=${RELEASE_DESC}\nENV HOME_DIR=/app\n# cloud adaptor\nENV DB_PATH=/app/data/cloudadaptor\nENV CHART_PATH=/app/chart\nENV CONFIG_DIR=/app/data/cloudadaptor\nENV HELM_PATH=/usr/local/bin/helm\nENV MYSQL_DB=console\nENV VERSION=${VERSION}\nENV RAINBOND_VERSION=${VERSION}\nENV OPERATOR_VERSION=${VERSION}\nENV DOMESTIC_NAMESPACE=${DOMESTIC_NAMESPACE}\n\nVOLUME /app/data\nVOLUME /app/logs\nVOLUME /root/.ssh\nVOLUME /opt/rainbond\nVOLUME /var/lib/docker\n\nENTRYPOINT [ \"/app/ui/start.sh\" ]\nCMD [\"/usr/bin/supervisord\",\"-c\",\"/etc/supervisor/supervisord.conf\"]\n"
}