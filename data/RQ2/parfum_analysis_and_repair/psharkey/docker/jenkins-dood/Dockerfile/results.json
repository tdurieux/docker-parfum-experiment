{
  "startTime": 1674253535321,
  "endTime": 1674253536790,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 158
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 26,
        "columnEnd": 4
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 26,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# Let's start with some basic stuff.\nRUN apt-get update -qq && apt-get install --no-install-recommends -qqy \\\n\tapt-transport-https \\\n\tca-certificates \\\n\tcurl \\\n\tgit \\\n\tiptables \\\n\tlibxext-dev libxrender-dev libxtst-dev \\\n\tssh-askpass \\\n\tunzip \\\n\twget \\\n\tzip && rm -rf /var/lib/apt/lists/*;\n\n# Install Docker from Docker Inc. repositories.\nARG DOCKER_VERSION=1.10.3\nRUN curl -f -L -O https://get.docker.com/builds/Linux/x86_64/docker-${DOCKER_VERSION}.tgz \\\n\t&& tar zxf docker-${DOCKER_VERSION}.tgz -C / && rm docker-${DOCKER_VERSION}.tgz\n\n# Install Docker Compose\nENV DOCKER_COMPOSE_VERSION 1.3.3\nRUN curl -f -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose \\\n\t&& chmod +x /usr/local/bin/docker-compose\n\n# Install Jenkins\nENV JENKINS_HOME=/var/lib/jenkins JENKINS_UC=https://updates.jenkins-ci.org HOME=\"/var/lib/jenkins\"\nRUN wget --progress=bar:force -O - https://jenkins-ci.org/debian/jenkins-ci.org.key | apt-key add - \\\n\t&& sh -c 'echo deb http://pkg.jenkins-ci.org/debian binary/ > /etc/apt/sources.list.d/jenkins.list' \\\n\t&& apt-get update && apt-get install --no-install-recommends -y jenkins \\\n\t&& apt-get clean \\\n\t&& apt-get purge \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Make the jenkins user a sudoer\n# Replace the docker binary with a sudo script\nRUN echo \"jenkins ALL=NOPASSWD: ALL\" >> /etc/sudoers \\\n\t&& mv /usr/local/bin/docker /usr/local/bin/docker.bin \\ \n\t&& printf '#!/bin/bash\\nsudo docker.bin \"$@\"\\n' > /usr/local/bin/docker \\\n\t&& chmod +x /usr/local/bin/docker\n\n# Copy basic configuration into jenkins\nCOPY config.xml credentials.xml hudson.tasks.Ant.xml hudson.tasks.Maven.xml plugins.txt $JENKINS_HOME/\n\n# Install Jenkins plugins from the specified list\n# Install jobs & setup ownership & links\nCOPY plugins.sh /usr/local/bin/plugins.sh\nCOPY jobs/. $JENKINS_HOME/jobs\nRUN chmod +x /usr/local/bin/plugins.sh; sleep 1 \\\n\t&& /usr/local/bin/plugins.sh $JENKINS_HOME/plugins.txt \\\n\t&& chown -R jenkins:jenkins /var/lib/jenkins\n\n# Define the workspace - assuming the path does not contain #\nARG WORKSPACE='${ITEM_ROOTDIR}\\/workspace'\nRUN sed -i -- \"s#\\${ITEM_ROOTDIR}/workspace#${WORKSPACE}#\" $JENKINS_HOME/config.xml\n\n# Expose Jenkins default port\nEXPOSE 8080\n\n# Become the jenkins user (who thinks sudo is not needed for docker commands)\nUSER jenkins\nWORKDIR /var/lib/jenkins\n\n# Start the war\nCMD [\"java\", \"-jar\", \"/usr/share/jenkins/jenkins.war\"]\n"
}