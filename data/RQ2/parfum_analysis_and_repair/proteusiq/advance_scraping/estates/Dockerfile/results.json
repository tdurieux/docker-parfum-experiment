{
  "startTime": 1674248384313,
  "endTime": 1674248384837,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.10-slim\n\n# Checkout and install dagster libraries needed to run the gRPC server\n# exposing your repository to dagit and dagster-daemon, and to load\n# the DagsterInstance\n\nRUN pip install --no-cache-dir \\\n    dagster==0.14.17 \\\n    dagit==0.14.17 \\\n    dagster-pandera==0.14.17 \\\n    dagster-postgres==0.14.17 \\\n    dagstermill==0.14.17 \\\n    requests \\\n    pandas \\\n    sqlalchemy \\\n    psycopg2-binary\n\n# Set $DAGSTER_HOME and copy dagster instance there\n\nENV DAGSTER_HOME=/opt/dagster/dagster_home\n\nRUN mkdir -p $DAGSTER_HOME\n\nCOPY dagster.yaml  $DAGSTER_HOME\nCOPY estates/repository.py workspace.yaml  /opt/dagster/app/\n\n# Add repository code\n\nWORKDIR /opt/dagster/app\n\n\n# Run dagster gRPC server on port 4000\n\nEXPOSE 4000\n\n# Using CMD rather than ENTRYPOINT allows the command to be overridden in\n# run launchers or executors to run other commands using this image\nCMD [\"dagster\", \"api\", \"grpc\", \"-h\", \"0.0.0.0\", \"-p\", \"4000\", \"-f\", \"repository.py\"]"
}