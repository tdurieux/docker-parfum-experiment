diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/phyks/flatisfy/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/phyks/flatisfy/docker/Dockerfile/repaired.Dockerfile
index 22f2280..1bdbfb3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/phyks/flatisfy/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/phyks/flatisfy/docker/Dockerfile/repaired.Dockerfile
@@ -6,17 +6,17 @@ RUN useradd -d /home/user -m -s /bin/bash -U user
 
 # Install OS dependencies.
 RUN apt-get update && \
-    apt-get install -y git libffi-dev \
+    apt-get install --no-install-recommends -y git libffi-dev \
     libxml2-dev libxslt-dev libyaml-dev libtiff-dev libjpeg-dev zlib1g-dev \
-    libfreetype6-dev libwebp-dev build-essential gcc g++ wget;
+    libfreetype6-dev libwebp-dev build-essential gcc g++ wget; rm -rf /var/lib/apt/lists/*;
 
 # Install latest pip and python dependencies.
-RUN pip install -U setuptools && \
-    pip install html2text simplejson beautifulsoup4
+RUN pip install --no-cache-dir -U setuptools && \
+    pip install --no-cache-dir html2text simplejson beautifulsoup4
 
 # Install node.js.
-RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \
-    && apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \
+    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir -p /flatisfy/data
 VOLUME /flatisfy
@@ -27,12 +27,12 @@ COPY ./*.sh /home/user/
 RUN cd /home/user \
     && git clone https://framagit.org/phyks/Flatisfy.git/ ./app \
     && cd ./app \
-    && pip install -r requirements.txt \
+    && pip install --no-cache-dir -r requirements.txt \
     && npm install \
     && npm run build:dev \
     && mkdir -p /home/user/.local/share/flatisfy \
     && chown user:user -R /home/user \
-    && chmod +x /home/user/*.sh
+    && chmod +x /home/user/*.sh && npm cache clean --force;
 
 # Run server.
 EXPOSE 8080