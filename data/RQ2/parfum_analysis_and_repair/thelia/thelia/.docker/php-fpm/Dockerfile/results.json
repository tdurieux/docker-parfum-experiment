{
  "startTime": 1674249752678,
  "endTime": 1674249753325,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ------ PHP 7 DOCKER (uncomment to use it)  ------- #\n\n#FROM phpdockerio/php74-fpm:latest\n#WORKDIR \"/application\"\n#\n## Fix debconf warnings upon build\n#ARG DEBIAN_FRONTEND=noninteractive\n#\n## Install selected extensions and other stuff\n#RUN apt-get update \\\n#    && apt-get -y --no-install-recommends install php7.4-mysql php7.4-mysql php7.4-gd php7.4-imagick php7.4-intl php7.4-yaml php7.4-xdebug \\\n#    && apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*\n#\n## Install git\n#RUN apt-get update \\\n#    && apt-get -y install git \\\n#    && apt-get clean; rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*\n#\n#RUN apt-get update \\\n#    &&  apt-get -y install vim \\\n#    && apt-get clean;\n#\n## Copy script used at docker-start\n#COPY docker-init.sh /usr/local/bin/docker-init\n\n\n# ------ PHP 8 DOCKER (uncomment to use it) ------- #\n\nFROM php:8.0.2-fpm-alpine\nWORKDIR \"/application\"\n\nRUN apk --update --no-cache add git\nRUN apk add --no-cache bash\n\n# Zip extension\nRUN apk add --no-cache zip libzip-dev\nRUN docker-php-ext-install zip\n\n# Calendar extension\nRUN docker-php-ext-install calendar\n\n# GD extension\nRUN apk add --no-cache freetype libpng libjpeg-turbo freetype-dev libpng-dev libjpeg-turbo-dev && \\\n  docker-php-ext-configure gd \\\n    --with-freetype \\\n    --with-jpeg \\\n  NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \\\n  docker-php-ext-install -j$(nproc) gd && \\\n  apk del --no-cache freetype-dev libpng-dev libjpeg-turbo-dev\n\n# XDebug extension\n#RUN apk add --no-cache --virtual .build-deps $PHPIZE_DEPS \\\n#  && pecl install xdebug-3.0.0 \\\n#  && docker-php-ext-enable xdebug \\\n#  && apk del -f .build-deps\n\n# Intl extension\nRUN apk add --no-cache icu-dev\nRUN docker-php-ext-configure intl && docker-php-ext-install intl\n\n# Mysql extension\nRUN docker-php-ext-install pdo_mysql\n\n# Composer copy and run\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\nCMD composer install ;  php-fpm\n\n# Copy script used at docker-start\nCOPY docker-init.sh /usr/local/bin/docker-init\n"
}