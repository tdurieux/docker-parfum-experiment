{
  "startTime": 1674253415785,
  "endTime": 1674253417044,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 0,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 193
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 73,
        "columnEnd": 141
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 0,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 0,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 18,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file is a template, and might need editing before it works on your project.\n# This Dockerfile installs a compiled binary into a bare system.\n# You must either commit your compiled binary into source control (not recommended)\n# or build the binary first as part of a CI/CD pipeline.\n\nFROM ubuntu:20.04\nARG IBM_Api_Key\nARG IBM_Api_Region='us-south'\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https curl gnupg wget git && \\\n curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\necho \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" > /etc/apt/sources.list && \\\n# \"install\" helm\nwget https://get.helm.sh/helm-v3.5.4-linux-amd64.tar.gz && \\\ntar xfvz helm-v3.5.4-linux-amd64.tar.gz && \\\nmv linux-amd64/helm /usr/local/bin/ && \\\napt-get update && apt-get install --no-install-recommends -y kubectl && rm helm-v3.5.4-linux-amd64.tar.gz && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -Lo kops https://github.com/kubernetes/kops/releases/download/$( curl -f -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '\"' -f 4)/kops-linux-amd64 && \\\nchmod +x ./kops && \\\nmv ./kops /usr/local/bin/\n\n##check with\n#kubectl config current-context\n##should return main-net\n\nRUN wget https://download.clis.cloud.ibm.com/ibm-cloud-cli/1.5.1/IBM_Cloud_CLI_1.5.1_amd64.tar.gz && \\\ntar xfvz IBM_Cloud_CLI_1.5.1_amd64.tar.gz && \\\ncd Bluemix_CLI && chmod +x install && ./install && rm IBM_Cloud_CLI_1.5.1_amd64.tar.gz\n\nRUN ibmcloud login --apikey $IBM_Api_Key -r eu-de && \\\nibmcloud plugin install container-service && \\\nibmcloud plugin install container-registry && \\\nibmcloud plugin install observe-service\n\n\n# check if it worked\n# RUN helm init\n\n##should return: Happy Helming!\n\n## CMD [ \"kubectl\" ]"
}