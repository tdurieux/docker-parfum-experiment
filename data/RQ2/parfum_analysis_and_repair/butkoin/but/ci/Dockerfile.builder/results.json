{
  "startTime": 1674246824018,
  "endTime": 1674246826219,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 96
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 96
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 48,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# Build and base stuff\n# (zlib1g-dev and libssl-dev are needed for the Qt host binary builds, but should not be used by target binaries)\n# We split this up into multiple RUN lines as we might need to retry multiple times on Travis. This way we allow better\n# cache usage.\nRUN apt-get update\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y g++ && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y autotools-dev libtool m4 automake autoconf pkg-config && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y zlib1g-dev libssl1.0-dev curl ccache bsdmainutils cmake && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y python3 python3-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Python stuff\nRUN pip3 install --no-cache-dir pyzmq# really needed?\nRUN pip3 install --no-cache-dir jinja2\n\n# but_hash\nRUN git clone https://github.com/but/but_hash\nRUN cd but_hash && python3 setup.py install\n\nARG USER_ID=1000\nARG GROUP_ID=1000\n\n# add user with specified (or default) user/group ids\nENV USER_ID ${USER_ID}\nENV GROUP_ID ${GROUP_ID}\nRUN groupadd -g ${GROUP_ID} but\nRUN useradd -u ${USER_ID} -g but -s /bin/bash -m -d /but but\n\n# Extra packages\nARG BUILD_TARGET=linux64\nADD matrix.sh /tmp/matrix.sh\nRUN . /tmp/matrix.sh && \\\n  if [ -n \"$DPKG_ADD_ARCH\" ]; then dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi && \\\n  if [ -n \"$PACKAGES\" ]; then \\\n  apt-get update && apt-get install -y --no-install-recommends --no-upgrade $PACKAGES; rm -rf /var/lib/apt/lists/*; fi\n\n# Make sure std::thread and friends is available\n# Will fail on non-win builds, but we ignore this\nRUN \\\n  update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix; \\\n  update-alternatives --set i686-w64-mingw32-g++  /usr/bin/i686-w64-mingw32-g++-posix; \\\n  update-alternatives --set x86_64-w64-mingw32-gcc  /usr/bin/x86_64-w64-mingw32-gcc-posix; \\\n  update-alternatives --set x86_64-w64-mingw32-g++  /usr/bin/x86_64-w64-mingw32-g++-posix; \\\n  exit 0\n\nRUN mkdir /but-src && \\\n  mkdir -p /cache/ccache && \\\n  mkdir /cache/depends && \\\n  mkdir /cache/sdk-sources && \\\n  chown $USER_ID:$GROUP_ID /but-src && \\\n  chown $USER_ID:$GROUP_ID /cache && \\\n  chown $USER_ID:$GROUP_ID /cache -R\nWORKDIR /but-src\n\nUSER but\n"
}