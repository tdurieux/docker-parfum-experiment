{
  "startTime": 1674255222168,
  "endTime": 1674255222887,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8 as gunicorn-build\nENV PYTHONUNBUFFERED 1\n\nRUN mkdir -p /app /tmp/django/src/django\nWORKDIR /app\nCOPY demo/django/requirements.txt .\nCOPY setup.* *.in LICENSE /tmp/django/\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY compose/gunicorn/entrypoint.sh /\nRUN chmod +x \"/entrypoint.sh\"\nCOPY src/django/ /tmp/django/src/django\nRUN cd /tmp/django && python setup.py install\nCOPY demo/django ./\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/usr/local/bin/gunicorn\", \"-b\", \"0.0.0.0:8000\", \"demo.wsgi:application\"]\n\n\nFROM python:3.8 as docs\nENV OUTPUT_DOCS_DIRECTORY _build/docs\nWORKDIR /docs\nCOPY docs/ .\nRUN pip install --no-cache-dir -r requirements.txt\nRUN make docs\n\n\nFROM node:14.12 as angular-src-build\nENV PATH /angular-django/node_modules/.bin:$PATH\nRUN mkdir /angular-django\nWORKDIR /angular-django\nCOPY src/angular/package.json src/angular/package-lock.json ./\nRUN npm i && ngcc && npm cache clean --force;\nCOPY src/angular ./\nRUN ng build --prod\nRUN ln -s /angular-django/dist/angular-django /angular-django/node_modules/angular-django\n\n\nFROM node:14.12 as angular-demo-build\nENV PATH /app/node_modules/.bin:$PATH\nRUN mkdir /app\nWORKDIR /app\nCOPY demo/angular/package.json demo/angular/package-lock.json ./\nRUN npm ci && ngcc\nCOPY --from=angular-src-build /angular-django/dist/ /app/node_modules/\nCOPY demo/angular ./\nCOPY --from=docs /docs/_build/ /app/src/assets/\nRUN ng build --prod\n\n\nFROM nginx:1.19 as nginx-build\n\nCOPY --from=angular-demo-build /app/dist/angular-demo/ /angular/\nENTRYPOINT [\"nginx\", \"-g\", \"daemon off;\"]\n"
}