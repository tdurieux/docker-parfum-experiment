{
  "startTime": 1674248721951,
  "endTime": 1674248723076,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 9,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 9,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 9,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 9,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 9,
        "columnEnd": 126
      }
    }
  ],
  "repairedDockerfile": "# This requires cuda & cudnn packages pre-installed in the base image.\n# Other available cuda images are listed at https://hub.docker.com/r/nvidia/cuda\nARG base_image=\"nvidia/cuda:11.2.0-cudnn8-devel-ubuntu18.04\"\nFROM \"${base_image}\"\n\nARG python_version=\"3.7\"\nARG cuda=\"1\"\nARG cuda_compute=\"5.2,7.5\"\nARG cc=\"clang-8\"\nARG cxx=\"clang++-8\"\nARG cxx_abi=\"1\"\nARG tpuvm=\"\"\n\n# Disable CUDA for PyTorch\nENV USE_CUDA \"0\"\n\n# Enable CUDA for XLA\nENV XLA_CUDA \"${cuda}\"\nENV TF_CUDA_COMPUTE_CAPABILITIES \"${cuda_compute}\"\nENV TF_CUDA_PATHS \"/usr/local/cuda,/usr/include,/usr\"\n\n# CUDA build guidance\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\nENV PATH /usr/local/cuda:$PATH\nENV LD_LIBRARY_PATH /usr/local/cuda/lib64:$LD_LIBRARY_PATH\n\n# AWS specific CUDA build guidance\nENV TORCH_CUDA_ARCH_LIST Maxwell\nENV TORCH_NVCC_FLAGS \"-Xfatbin -compress-all\"\nENV CUDA_PATH /usr/local/cuda\n\n# Set C/C++ compilers\nENV CC \"${cc}\"\nENV CXX \"${cxx}\"\n\n# Whether to build torch and torch_xla libraries with CXX ABI\nENV _GLIBCXX_USE_CXX11_ABI \"${cxx_abi}\"\nENV CFLAGS \"${CFLAGS} -D_GLIBCXX_USE_CXX11_ABI=${cxx_abi}\"\nENV CXXFLAGS \"${CXXFLAGS} -D_GLIBCXX_USE_CXX11_ABI=${cxx_abi}\"\n\n# Whether to build for TPUVM mode\nENV TPUVM_MODE \"${tpuvm}\"\n\n# Remove deprecated deb repo:\n# https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64\nRUN rm /etc/apt/sources.list.d/nvidia-ml.list\n\n# Rotate nvidia repo public key (last updated: 04/27/2022)\n# Unfortunately, nvidia/cuda image is shipped with invalid public key\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub\n\n# Install base system packages\nRUN apt-get clean && apt-get update\nRUN apt-get upgrade -y\nRUN apt-get install --no-install-recommends --fix-missing -y python-pip python3-pip git curl libopenblas-dev vim jq \\\n  apt-transport-https ca-certificates procps openssl sudo wget libssl-dev libc6-dbg && rm -rf /var/lib/apt/lists/*;\n\n# Install clang & llvm\nADD ./install_llvm_clang.sh install_llvm_clang.sh\nRUN bash ./install_llvm_clang.sh\n\n# Install valgrind\nADD ./install_valgrind.sh install_valgrind.sh\nRUN bash ./install_valgrind.sh\n\n# Sets up jenkins user.\nRUN useradd jenkins && \\\n    mkdir /home/jenkins && \\\n    chown jenkins /home/jenkins\nRUN echo 'jenkins ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nRUN mkdir -p /opt/conda /opt/cargo /opt/rustup /workspace /var/lib/jenkins && \\\n    chown jenkins /opt/conda /opt/cargo /opt/rustup /workspace /var/lib/jenkins\nUSER jenkins\nWORKDIR /workspace\n\n# Install openmpi for CUDA\nrun sudo apt-get install --no-install-recommends -y ssh && rm -rf /var/lib/apt/lists/*;\nrun sudo apt-get install --no-install-recommends -y --allow-downgrades --allow-change-held-packages openmpi-bin libopenmpi-dev && rm -rf /var/lib/apt/lists/*;\n\n# Builds and configure sccache\nENV OPENSSL_INCLUDE_DIR /usr/include/openssl\nENV OPENSSL_LIB_DIR /usr/lib/x86_64-linux-gnu\n\nENV CARGO_HOME /opt/cargo\nENV RUSTUP_HOME /opt/rustup\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nRUN . $CARGO_HOME/env && \\\n    git clone --recursive https://github.com/mozilla/sccache.git && \\\n    cd sccache && \\\n    cargo install sccache && \\\n    cd .. && \\\n    rm -rf sccache\n\nENV PATH $CARGO_HOME/bin:$PATH\n\n# Installs and configures Conda.\nADD ./install_conda.sh install_conda.sh\nRUN sudo chown jenkins ./install_conda.sh\nRUN bash ./install_conda.sh \"${python_version}\" /opt/conda\n\nRUN echo \"conda activate base\" >> ~/.bashrc\nRUN echo \"export TF_CPP_LOG_THREAD_ID=1\" >> ~/.bashrc\nENV PATH /opt/conda/bin:$PATH\n\nRUN bash -c \"source ~/.bashrc\"\nCMD [\"bash\"]\n"
}