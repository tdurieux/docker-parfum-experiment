diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pytorch/serve/docker/Dockerfile.dev b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pytorch/serve/docker/Dockerfile.dev/repaired.Dockerfile
index a972af9..7972fa2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pytorch/serve/docker/Dockerfile.dev
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pytorch/serve/docker/Dockerfile.dev/repaired.Dockerfile
@@ -1,13 +1,12 @@
-# syntax = docker/dockerfile:experimental
 #
 # Following comments have been shamelessly copied from https://github.com/pytorch/pytorch/blob/master/Dockerfile
-# 
+#
 # NOTE: To build this you will need a docker version > 18.06 with
 #       experimental enabled and DOCKER_BUILDKIT=1
 #
 #       If you do not use buildkit you are not going to have a good time
 #
-#       For reference: 
+#       For reference:
 #           https://docs.docker.com/develop/develop-images/build_enhancements/
 
 ARG BASE_IMAGE=ubuntu:18.04
@@ -43,11 +42,12 @@ RUN --mount=type=cache,id=apt-dev,target=/var/cache/apt \
     openjdk-11-jdk \
     curl \
     vim \
-    numactl \ 
-    && if [ "$BUILD_WITH_IPEX" = "true" ]; then apt-get update && apt-get install -y libjemalloc-dev libgoogle-perftools-dev libomp-dev && ln -s /usr/lib/x86_64-linux-gnu/libjemalloc.so /usr/lib/libjemalloc.so && ln -s /usr/lib/x86_64-linux-gnu/libtcmalloc.so /usr/lib/libtcmalloc.so && ln -s /usr/lib/x86_64-linux-gnu/libiomp5.so /usr/lib/libiomp5.so; fi \
+    numactl \
+    && if [ "$BUILD_WITH_IPEX" = "true" ]; then \
+    apt-get update && apt-get install --no-install-recommends -y libjemalloc-dev libgoogle-perftools-dev libomp-dev && ln -s /usr/lib/x86_64-linux-gnu/libjemalloc.so /usr/lib/libjemalloc.so && ln -s /usr/lib/x86_64-linux-gnu/libtcmalloc.so /usr/lib/libtcmalloc.so && ln -s /usr/lib/x86_64-linux-gnu/libiomp5.so /usr/lib/libiomp5.so; fi \
     && rm -rf /var/lib/apt/lists/* \
     && cd /tmp \
-    && curl -O https://bootstrap.pypa.io/get-pip.py \
+    && curl -f -O https://bootstrap.pypa.io/get-pip.py \
     && python3.8 get-pip.py
 
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 \
@@ -97,11 +97,11 @@ ENV JAVA_VERSION=11 \
 # Install Maven
 RUN set -ex \
   && mkdir -p $MAVEN_HOME \
-  && curl -LSso /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz https://apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \
+  && curl -f -LSso /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz https://apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \
   && echo "$MAVEN_DOWNLOAD_SHA1 /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz" | sha1sum -c - \
   && tar xzvf /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz -C $MAVEN_HOME --strip-components=1 \
   && update-alternatives --install /usr/bin/mvn mvn /opt/maven/bin/mvn 10000 \
-  && mkdir -p $MAVEN_CONFIG
+  && mkdir -p $MAVEN_CONFIG && rm /var/tmp/apache-maven-$MAVEN_VERSION-bin.tar.gz
 
 FROM ${BUILD_TYPE}-image AS final-image
 ARG BUILD_TYPE