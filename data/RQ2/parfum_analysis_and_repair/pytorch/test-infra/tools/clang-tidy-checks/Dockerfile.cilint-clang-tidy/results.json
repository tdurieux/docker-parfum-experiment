{
  "startTime": 1674216316207,
  "endTime": 1674216317029,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 40,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 44,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 44,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ubuntu20.04-cuda11.2-py3.8-tidy11\nFROM nvidia/cuda:11.2.0-devel-ubuntu20.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Copy diffs\nCOPY . clang-tidy-checks\n\n# Install dependencies\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y software-properties-common wget && rm -rf /var/lib/apt/lists/*;\nRUN apt-add-repository ppa:git-core/ppa\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add -\nRUN apt-add-repository \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal-11 main\"\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    git python3-dev python3-pip python3-setuptools python3-wheel build-essential time \\\n    cmake clang-11 lld ninja-build libomp-11-dev && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 1000\nRUN update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 1000\n\n# Run setup script (See ./clang-tidy-checks/README.md for more details)\n# Build clang-tidy, copy out the binary, and remove the llvm checkout\nRUN cd ./clang-tidy-checks && \\\n    ./setup.sh && \\\n    cp -r llvm-project/build . && \\\n    rm -rf llvm-project\n\n# Copy binary to /usr/bin\n#\n# We are copying the binary (instead of symlinking it) to avoid header file\n# conflicts between the installed version of clang and our custom build\nRUN cp /clang-tidy-checks/build/bin/clang-tidy /usr/bin/clang-tidy\n\n# Verify that clang-tidy has custom checks\nRUN cd ./clang-tidy-checks && ./verify.sh\n\n# Install python deps\nRUN wget https://raw.githubusercontent.com/pytorch/pytorch/master/requirements.txt && \\\n    pip3 install --no-cache-dir -r requirements.txt && pip3 install --no-cache-dir unidiff==0.6.0\n"
}