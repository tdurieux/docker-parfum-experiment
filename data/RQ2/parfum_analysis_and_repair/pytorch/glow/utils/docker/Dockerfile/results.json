{
  "startTime": 1674247078589,
  "endTime": 1674247081936,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG WORKDIR=/root/dev\n\n# Create working folder\nRUN mkdir -p $WORKDIR\nWORKDIR $WORKDIR\n\n# Update and install tools\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y clang clang-8 cmake graphviz libpng-dev \\\n        libprotobuf-dev llvm-8 llvm-8-dev ninja-build protobuf-compiler wget \\\n        opencl-headers libgoogle-glog-dev libboost-all-dev \\\n        libdouble-conversion-dev libevent-dev libssl-dev libgflags-dev \\\n        libjemalloc-dev libpthread-stubs0-dev \\\n        # Additional dependencies\n        git python-numpy && \\\n    # Delete outdated llvm to avoid conflicts\n    apt-get autoremove -y llvm-6.0 && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Point clang to llvm-8 version\nRUN update-alternatives --install /usr/bin/clang clang \\\n        /usr/lib/llvm-8/bin/clang 50 && \\\n    update-alternatives --install /usr/bin/clang++ clang++ \\\n        /usr/lib/llvm-8/bin/clang++ 50\n\n# Point default C/C++ compiler to clang\nRUN update-alternatives --set cc /usr/bin/clang && \\\n    update-alternatives --set c++ /usr/bin/clang++\n\n# Install fmt\nRUN git clone https://github.com/fmtlib/fmt && \\\n    mkdir fmt/build && \\\n    cd fmt/build && \\\n    cmake .. && make && \\\n    make install\n\n# Clean up\nRUN rm -rf fmt\n"
}