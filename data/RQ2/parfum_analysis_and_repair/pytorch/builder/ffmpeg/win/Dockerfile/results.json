{
  "startTime": 1674253856047,
  "endTime": 1674253856790,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 31,
        "columnEnd": 42
      }
    },
    {
      "rule": "yumInstallForceYes",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base docker image for cross-compilling FFmpeg (LGPL) for Windows\nFROM pytorch/manylinux-cuda101\nCOPY . /ffmpeg-build-src\nWORKDIR /ffmpeg-build-src\n\n# Install required system libraries\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y \\\n    autoconf \\\n    automake \\\n    bash \\\n    bison \\\n    bzip2 \\\n    flex \\\n    gcc-c++ \\\n    gdk-pixbuf2-devel \\\n    gettext \\\n    git \\\n    gperf \\\n    intltool \\\n    libtool \\\n    lzip \\\n    make \\\n    openssl \\\n    openssl-devel \\\n    p7zip \\\n    patch \\\n    perl \\\n    python \\\n    ruby \\\n    sed \\\n    unzip \\\n    wget \\\n    xz \\\n    nano && rm -rf /var/cache/yum\n\n# Update automake to 1.15\nRUN wget https://ftp.gnu.org/gnu/automake/automake-1.15.tar.gz\nRUN tar -xzvf automake-1.15.tar.gz && rm automake-1.15.tar.gz\nRUN cd automake-1.15.tar.gz && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n# Create MXE environment and install packages\nRUN bash build_mxe.sh\n\n# Compile and install OpenH264\nRUN bash build_openh264.sh\n"
}