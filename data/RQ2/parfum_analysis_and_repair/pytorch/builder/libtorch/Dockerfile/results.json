{
  "startTime": 1674254345530,
  "endTime": 1674254346181,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 107
      }
    }
  ],
  "repairedDockerfile": "ARG BASE_TARGET=base\nARG GPU_IMAGE=nvidia/cuda:10.2-devel-ubuntu18.04\nFROM ${GPU_IMAGE} as base\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get clean && apt-get update\nRUN apt-get install --no-install-recommends -y curl locales git-all autoconf automake make cmake wget unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US.UTF-8\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Install openssl\nFROM base as openssl\nADD ./common/install_openssl.sh install_openssl.sh\nRUN bash ./install_openssl.sh && rm install_openssl.sh\n\n# Install python\nFROM base as python\nADD common/install_cpython.sh install_cpython.sh\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends build-essential gdb lcov libbz2-dev libffi-dev \\\n        libgdbm-dev liblzma-dev libncurses5-dev libreadline6-dev \\\n        libsqlite3-dev libssl-dev lzma lzma-dev tk-dev uuid-dev zlib1g-dev -y && \\\n    bash ./install_cpython.sh && \\\n    rm install_cpython.sh && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nFROM base as cpu\n# Install MKL\nADD ./common/install_mkl.sh install_mkl.sh\nRUN bash ./install_mkl.sh && rm install_mkl.sh\n\nFROM cpu as cuda\nADD ./common/install_cuda.sh install_cuda.sh\nADD ./common/install_magma.sh install_magma.sh\nENV CUDA_HOME /usr/local/cuda\n\nFROM base as conda\nADD ./common/install_conda.sh install_conda.sh\nRUN bash ./install_conda.sh && rm install_conda.sh\nRUN /opt/conda/bin/conda install -y cmake=3.14\n\nFROM cuda as cuda10.2\nRUN bash ./install_cuda.sh 10.2\nRUN bash ./install_magma.sh 10.2\n\nFROM cuda as cuda11.3\nRUN bash ./install_cuda.sh 11.3\nRUN bash ./install_magma.sh 11.3\n\nFROM cuda as cuda11.5\nRUN bash ./install_cuda.sh 11.5\nRUN bash ./install_magma.sh 11.5\n\nFROM cuda as cuda11.6\nRUN bash ./install_cuda.sh 11.6\nRUN bash ./install_magma.sh 11.6\n\nFROM cuda as cuda11.7\nRUN bash ./install_cuda.sh 11.7\nRUN bash ./install_magma.sh 11.7\n\nFROM cpu as rocm\nARG PYTORCH_ROCM_ARCH\nENV PYTORCH_ROCM_ARCH ${PYTORCH_ROCM_ARCH}\nENV MKLROOT /opt/intel\nADD ./common/install_rocm.sh install_rocm.sh\nADD ./common/install_rocm_drm.sh install_rocm_drm.sh\nADD ./common/install_rocm_magma.sh install_rocm_magma.sh\n# gfortran needed for building magma from source for ROCm\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends gfortran -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nFROM rocm as rocm5.0\nRUN ROCM_VERSION=5.0 bash ./install_rocm.sh && rm install_rocm.sh\nRUN bash ./install_rocm_drm.sh && rm install_rocm_drm.sh\nRUN bash ./install_rocm_magma.sh && rm install_rocm_magma.sh\n\nFROM rocm as rocm5.1.1\nRUN ROCM_VERSION=5.1.1 bash ./install_rocm.sh && rm install_rocm.sh\nRUN bash ./install_rocm_drm.sh && rm install_rocm_drm.sh\nRUN bash ./install_rocm_magma.sh && rm install_rocm_magma.sh\n\nFROM ${BASE_TARGET} as final\n# Install LLVM\nCOPY --from=pytorch/llvm:9.0.1 /opt/llvm              /opt/llvm\nCOPY --from=pytorch/llvm:9.0.1 /opt/llvm_no_cxx11_abi /opt/llvm_no_cxx11_abi\nCOPY --from=openssl            /opt/openssl           /opt/openssl\n# Install patchelf\nADD ./common/install_patchelf.sh install_patchelf.sh\nRUN bash ./install_patchelf.sh && rm install_patchelf.sh\n# Install Anaconda\nCOPY --from=conda /opt/conda /opt/conda\n# Install python\nCOPY --from=python /opt/python    /opt/python\nCOPY --from=python /opt/_internal /opt/_internal\nENV PATH /opt/conda/bin:$PATH\n"
}