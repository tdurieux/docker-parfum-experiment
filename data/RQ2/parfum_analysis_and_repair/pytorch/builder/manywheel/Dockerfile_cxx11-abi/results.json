{
  "startTime": 1674252763273,
  "endTime": 1674252763902,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 153
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:8 as base\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# change to a valid repo\nRUN sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-Linux-*.repo\n# enable to install ninja-build\nRUN sed -i 's|enabled=0|enabled=1|g' /etc/yum.repos.d/CentOS-Linux-PowerTools.repo\n\nRUN yum -y update\nRUN yum install -y wget curl perl util-linux xz bzip2 git patch which zlib-devel && rm -rf /var/cache/yum\nRUN yum install -y autoconf automake make cmake gdb gcc gcc-c++ && rm -rf /var/cache/yum\n\n\nFROM base as openssl\nADD ./common/install_openssl.sh install_openssl.sh\nRUN bash ./install_openssl.sh && rm install_openssl.sh\n\n# Install python\nFROM base as python\nRUN yum install -y openssl-devel zlib-devel bzip2-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel libpcap-devel xz-devel libffi-devel && rm -rf /var/cache/yum\nADD common/install_cpython.sh install_cpython.sh\nRUN bash ./install_cpython.sh && rm install_cpython.sh\n\nFROM base as intel\n# Install MKL\nADD ./common/install_mkl.sh install_mkl.sh\nRUN bash ./install_mkl.sh && rm install_mkl.sh\n\nFROM base as conda\nADD ./common/install_conda.sh install_conda.sh\nRUN bash ./install_conda.sh && rm install_conda.sh\nRUN /opt/conda/bin/conda install -y cmake\n\nFROM base as patchelf\nADD ./common/install_patchelf.sh install_patchelf.sh\nRUN bash ./install_patchelf.sh && rm install_patchelf.sh\nRUN cp $(which patchelf) /patchelf\n\nFROM base as jni\nADD ./common/install_jni.sh install_jni.sh\nADD ./java/jni.h jni.h\nRUN bash ./install_jni.sh && rm install_jni.sh\n\nFROM base as libpng\nADD ./common/install_libpng.sh install_libpng.sh\nRUN bash ./install_libpng.sh && rm install_libpng.sh\n\nFROM base as final\nCOPY --from=pytorch/llvm:9.0.1 /opt/llvm                             /opt/llvm\nCOPY --from=pytorch/llvm:9.0.1 /opt/llvm_no_cxx11_abi                /opt/llvm_no_cxx11_abi\nCOPY --from=openssl            /opt/openssl                          /opt/openssl\nCOPY --from=python             /opt/python                           /opt/python\nCOPY --from=python             /opt/_internal                        /opt/_internal\nCOPY --from=intel              /opt/intel                            /opt/intel\nCOPY --from=conda              /opt/conda                            /opt/conda\nCOPY --from=patchelf           /usr/local/bin/patchelf               /usr/local/bin/patchelf\nCOPY --from=jni                /usr/local/include/jni.h              /usr/local/include/jni.h\nCOPY --from=libpng             /usr/local/bin/png*                   /usr/local/bin/\nCOPY --from=libpng             /usr/local/bin/libpng*                /usr/local/bin/\nCOPY --from=libpng             /usr/local/include/png*               /usr/local/include/\nCOPY --from=libpng             /usr/local/include/libpng*            /usr/local/include/\nCOPY --from=libpng             /usr/local/lib/libpng*                /usr/local/lib/\nCOPY --from=libpng             /usr/local/lib/pkgconfig              /usr/local/lib/pkgconfig\n\nRUN yum install -y ninja-build && rm -rf /var/cache/yum\n"
}