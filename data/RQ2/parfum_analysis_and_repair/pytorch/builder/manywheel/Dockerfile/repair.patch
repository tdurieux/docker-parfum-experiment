diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pytorch/builder/manywheel/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pytorch/builder/manywheel/Dockerfile/repaired.Dockerfile
index 8ddee1d..e61f7b3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pytorch/builder/manywheel/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pytorch/builder/manywheel/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# syntax = docker/dockerfile:experimental
 ARG ROCM_VERSION=3.7
 ARG BASE_CUDA_VERSION=10.1
 
@@ -10,22 +9,22 @@ ENV LANG en_US.UTF-8
 ENV LANGUAGE en_US.UTF-8
 
 ARG DEVTOOLSET_VERSION=9
-RUN yum install -y wget curl perl util-linux xz bzip2 git patch which perl zlib-devel
-RUN yum install -y yum-utils centos-release-scl
+RUN yum install -y wget curl perl util-linux xz bzip2 git patch which perl zlib-devel && rm -rf /var/cache/yum
+RUN yum install -y yum-utils centos-release-scl && rm -rf /var/cache/yum
 RUN yum-config-manager --enable rhel-server-rhscl-7-rpms
-RUN yum install -y devtoolset-${DEVTOOLSET_VERSION}-gcc devtoolset-${DEVTOOLSET_VERSION}-gcc-c++ devtoolset-${DEVTOOLSET_VERSION}-gcc-gfortran devtoolset-${DEVTOOLSET_VERSION}-binutils
+RUN yum install -y devtoolset-${DEVTOOLSET_VERSION}-gcc devtoolset-${DEVTOOLSET_VERSION}-gcc-c++ devtoolset-${DEVTOOLSET_VERSION}-gcc-gfortran devtoolset-${DEVTOOLSET_VERSION}-binutils && rm -rf /var/cache/yum
 ENV PATH=/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/bin:$PATH
 ENV LD_LIBRARY_PATH=/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/lib64:/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/lib:$LD_LIBRARY_PATH
 
-RUN wget http://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \
+RUN wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \
     rpm -ivh epel-release-latest-7.noarch.rpm && \
     rm -f epel-release-latest-7.noarch.rpm
 
 # cmake
 RUN yum install -y cmake3 && \
-    ln -s /usr/bin/cmake3 /usr/bin/cmake
+    ln -s /usr/bin/cmake3 /usr/bin/cmake && rm -rf /var/cache/yum
 
-RUN yum install -y autoconf aclocal automake make
+RUN yum install -y autoconf aclocal automake make && rm -rf /var/cache/yum
 
 FROM base as openssl
 # Install openssl (this must precede `build python` step)
@@ -104,10 +103,10 @@ RUN yum install -y \
         wget \
         which \
         xz \
-        yasm
+        yasm && rm -rf /var/cache/yum
 RUN yum install -y \
     https://repo.ius.io/ius-release-el7.rpm \
-    https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
+    https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && rm -rf /var/cache/yum
 RUN yum swap -y git git236-core
 # git236+ would refuse to run git commands in repos owned by other users
 # Which causes version check to fail, as pytorch repo is bind-mounted into the image
@@ -136,19 +135,19 @@ COPY --from=libpng             /usr/local/lib/pkgconfig              /usr/local/
 FROM common as cpu_final
 ARG BASE_CUDA_VERSION=10.1
 ARG DEVTOOLSET_VERSION=9
-RUN yum install -y yum-utils centos-release-scl
+RUN yum install -y yum-utils centos-release-scl && rm -rf /var/cache/yum
 RUN yum-config-manager --enable rhel-server-rhscl-7-rpms
-RUN yum install -y devtoolset-${DEVTOOLSET_VERSION}-gcc devtoolset-${DEVTOOLSET_VERSION}-gcc-c++ devtoolset-${DEVTOOLSET_VERSION}-gcc-gfortran devtoolset-${DEVTOOLSET_VERSION}-binutils
+RUN yum install -y devtoolset-${DEVTOOLSET_VERSION}-gcc devtoolset-${DEVTOOLSET_VERSION}-gcc-c++ devtoolset-${DEVTOOLSET_VERSION}-gcc-gfortran devtoolset-${DEVTOOLSET_VERSION}-binutils && rm -rf /var/cache/yum
 ENV PATH=/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/bin:$PATH
 ENV LD_LIBRARY_PATH=/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/lib64:/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/lib:$LD_LIBRARY_PATH
 
 # cmake
 RUN yum install -y cmake3 && \
-    ln -s /usr/bin/cmake3 /usr/bin/cmake
+    ln -s /usr/bin/cmake3 /usr/bin/cmake && rm -rf /var/cache/yum
 
 # ninja
-RUN yum install -y http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-5.el7.noarch.rpm
-RUN yum install -y ninja-build
+RUN yum install -y http://repo.okay.com.mx/centos/7/x86_64/release/okay-release-1-5.el7.noarch.rpm && rm -rf /var/cache/yum
+RUN yum install -y ninja-build && rm -rf /var/cache/yum
 
 FROM cpu_final as cuda_final
 RUN rm -rf /usr/local/cuda-${BASE_CUDA_VERSION}
@@ -170,6 +169,6 @@ RUN bash ./install_rocm_magma.sh && rm install_rocm_magma.sh
 # cmake3 is needed for the later MIOpen custom build, so that step is last.
 RUN yum install -y cmake3 && \
     rm -f /usr/bin/cmake && \
-    ln -s /usr/bin/cmake3 /usr/bin/cmake
+    ln -s /usr/bin/cmake3 /usr/bin/cmake && rm -rf /var/cache/yum
 ADD ./common/install_miopen.sh install_miopen.sh
 RUN bash ./install_miopen.sh ${ROCM_VERSION} && rm install_miopen.sh