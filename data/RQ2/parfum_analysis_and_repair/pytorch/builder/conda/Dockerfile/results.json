{
  "startTime": 1674250709489,
  "endTime": 1674250710563,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 184
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA_VERSION=10.2\nARG BASE_TARGET=cuda${CUDA_VERSION}\nFROM nvidia/cuda:9.2-devel-centos7 as base\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\nARG DEVTOOLSET_VERSION=9\nRUN yum install -y wget curl perl util-linux xz bzip2 git patch which unzip && rm -rf /var/cache/yum\nRUN yum install -y yum-utils centos-release-scl && rm -rf /var/cache/yum\nRUN yum-config-manager --enable rhel-server-rhscl-7-rpms\nRUN yum install -y devtoolset-${DEVTOOLSET_VERSION}-gcc devtoolset-${DEVTOOLSET_VERSION}-gcc-c++ devtoolset-${DEVTOOLSET_VERSION}-gcc-gfortran devtoolset-${DEVTOOLSET_VERSION}-binutils && rm -rf /var/cache/yum\n# EPEL for cmake\nRUN wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    rpm -ivh epel-release-latest-7.noarch.rpm && \\\n    rm -f epel-release-latest-7.noarch.rpm\n# cmake\nRUN yum install -y cmake3 && \\\n    ln -s /usr/bin/cmake3 /usr/bin/cmake && rm -rf /var/cache/yum\nENV PATH=/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/lib64:/opt/rh/devtoolset-${DEVTOOLSET_VERSION}/root/usr/lib:$LD_LIBRARY_PATH\n\nRUN yum install -y autoconf aclocal automake make sudo && rm -rf /var/cache/yum\nRUN rm -rf /usr/local/cuda-*\n\nFROM base as patchelf\n# Install patchelf\nADD ./common/install_patchelf.sh install_patchelf.sh\nRUN bash ./install_patchelf.sh && rm install_patchelf.sh && cp $(which patchelf) /patchelf\n\nFROM base as openssl\n# Install openssl\nADD ./common/install_openssl.sh install_openssl.sh\nRUN bash ./install_openssl.sh && rm install_openssl.sh\n\nFROM base as conda\n# Install Anaconda\nADD ./common/install_conda.sh install_conda.sh\nRUN bash ./install_conda.sh && rm install_conda.sh\n\n# Install CUDA\nFROM base as cuda\nRUN rm -rf /usr/local/cuda-*\nADD ./common/install_cuda.sh install_cuda.sh\n\nFROM cuda as cuda10.2\nRUN bash ./install_cuda.sh 10.2\nENV DESIRED_CUDA=10.2\n\nFROM cuda as cuda11.3\nRUN bash ./install_cuda.sh 11.3\nENV DESIRED_CUDA=11.3\n\nFROM cuda as cuda11.5\nRUN bash ./install_cuda.sh 11.5\nENV DESIRED_CUDA=11.5\n\nFROM cuda as cuda11.6\nRUN bash ./install_cuda.sh 11.6\nENV DESIRED_CUDA=11.6\n\nFROM cuda as cuda11.7\nRUN bash ./install_cuda.sh 11.7\nENV DESIRED_CUDA=11.7\n\n# Install MNIST test data\nFROM base as mnist\nADD ./common/install_mnist.sh install_mnist.sh\nRUN bash ./install_mnist.sh\n\nFROM base as all_cuda\nCOPY --from=cuda10.2  /usr/local/cuda-10.2 /usr/local/cuda-10.2\nCOPY --from=cuda11.3  /usr/local/cuda-11.3 /usr/local/cuda-11.3\nCOPY --from=cuda11.5  /usr/local/cuda-11.5 /usr/local/cuda-11.5\nCOPY --from=cuda11.6  /usr/local/cuda-11.6 /usr/local/cuda-11.6\nCOPY --from=cuda11.7  /usr/local/cuda-11.7 /usr/local/cuda-11.7\n\nFROM ${BASE_TARGET} as final\n# Install LLVM\nCOPY --from=pytorch/llvm:9.0.1 /opt/llvm              /opt/llvm\nCOPY --from=pytorch/llvm:9.0.1 /opt/llvm_no_cxx11_abi /opt/llvm_no_cxx11_abi\nCOPY --from=openssl            /opt/openssl           /opt/openssl\nCOPY --from=patchelf           /patchelf              /usr/local/bin/patchelf\nCOPY --from=conda              /opt/conda             /opt/conda\nADD  ./java/jni.h /usr/local/include/jni.h\nENV  PATH /opt/conda/bin:$PATH\nCOPY --from=mnist  /usr/local/mnist /usr/local/mnist\nRUN rm -rf /usr/local/cuda\nRUN chmod o+rw /usr/local\nRUN touch /.condarc && \\\n    chmod o+rw /.condarc && \\\n    chmod -R o+rw /opt/conda\n"
}