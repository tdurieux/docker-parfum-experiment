{
  "startTime": 1674251418971,
  "endTime": 1674251420039,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable\n\nRUN dpkg --add-architecture i386 && \\\n    dpkg --add-architecture s390x && \\\n    dpkg --add-architecture armhf && \\\n    dpkg --add-architecture arm64 && \\\n    dpkg --add-architecture ppc64el\n\n# dkpg-dev: to make pkg-config work in cross-builds\n# llvm: for llvm-symbolizer, which is used by clang's UBSan for symbolized stack traces\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        git ca-certificates \\\n        make automake libtool pkg-config dpkg-dev valgrind qemu-user \\\n        gcc clang llvm libc6-dbg \\\n        g++ \\\n        gcc-i686-linux-gnu libc6-dev-i386-cross libc6-dbg:i386 libubsan1:i386 libasan6:i386 \\\n        gcc-s390x-linux-gnu libc6-dev-s390x-cross libc6-dbg:s390x \\\n        gcc-arm-linux-gnueabihf libc6-dev-armhf-cross libc6-dbg:armhf \\\n        gcc-aarch64-linux-gnu libc6-dev-arm64-cross libc6-dbg:arm64 \\\n        gcc-powerpc64le-linux-gnu libc6-dev-ppc64el-cross libc6-dbg:ppc64el \\\n        gcc-mingw-w64-x86-64-win32 wine64 wine \\\n        gcc-mingw-w64-i686-win32 wine32 \\\n        sagemath && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n# The \"wine\" package provides a convience wrapper that we need\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        git ca-certificates wine64 wine python3-simplejson python3-six msitools winbind procps && \\\n    git clone https://github.com/mstorsjo/msvc-wine && \\\n    mkdir /opt/msvc && \\\n    python3 msvc-wine/vsdownload.py --accept-license --dest /opt/msvc Microsoft.VisualStudio.Workload.VCTools && \\\n    msvc-wine/install.sh /opt/msvc && rm -rf /var/lib/apt/lists/*;\n\n# Initialize the wine environment. Wait until the wineserver process has\n# exited before closing the session, to avoid corrupting the wine prefix.\nRUN wine64 wineboot --init && \\\n    while (ps -A | grep wineserver) > /dev/null; do sleep 1; done\n"
}