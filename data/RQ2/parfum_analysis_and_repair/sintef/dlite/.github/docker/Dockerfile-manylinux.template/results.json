{
  "startTime": 1674246305289,
  "endTime": 1674246305984,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 17
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 52,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 50,
        "columnEnd": 84
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "# -*- Mode: Dockerfile -*-\n# Dockerfile for building Python pypi package\n#\n# Usage:\n#\n# Copy this template file and replace:\n# - `{{ TYPE }}` with a valid manylinux type, e.g., 2010 or 2014.\n# - `{{ ARCH }}` with a valid arch, e.g., x86_64 or i686.\n# Remove the `.template` suffix from the copy.\n#\n# Build:\n#\n#     docker build -t dlite-manylinux -f .github/docker/Dockerfile-manylinux .\n#\n# Run (for debugging):\n#\n#     docker run --rm -it \\\n#        --volume $PWD:/io \\\n#        --user $(id -u):$(id -g) \\\n#        dlite-manylinux \\\n#        /bin/bash\n#\n\n# Reference: https://github.com/pypa/manylinux#manylinux2014-centos-7-based\nFROM quay.io/pypa/manylinux{{ TYPE }}_{{ ARCH }}:latest\n\nARG PY_MINORS=\"7 8 9 10\"\n\nCOPY requirements.txt /tmp/requirements.txt\n\n{{ EXTRA_PRE }}\n\n# Enable rpmfusion for additional packages\nRUN yum update -y && \\\n  yum localinstall -y --skip-broken \\\n    https://mirrors.rpmfusion.org/free/el/rpmfusion-free-release-$(rpm --eval %{centos_ver}).noarch.rpm \\\n    https://mirrors.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-$(rpm --eval %{centos_ver}).noarch.rpm && \\\n  yum install -y \\\n    redland-devel \\\n    rasqal-devel \\\n    swig \\\n    libcurl-devel \\\n    libxslt-devel \\\n    libxml2-devel && \\\n  if [ \"{{ TYPE }}{{ ARCH }}\" != \"2014i686\" ]; then yum install -y hdf5-devel; fi && \\\n  if [ -f \"/etc/yum.repos.d/pgdg-91.repo\" ]; then yum install -y postgresql91-devel; fi && \\\n# Unpack static libraries\n# It's necessary to be in /opt/_internal because the internal libraries\n# exist here.\n  cd /opt/_internal && \\\n  tar -Jxvf static-libs-for-embedding-only.tar.xz && \\\n  mkdir -p /ci/pip_cache && \\\n  if [ -f \"/etc/yum.repos.d/pgdg-91.repo\" ]; then export PATH=\"$PATH:/usr/pgsql-9.1/bin\"; fi && \\\n  for minor in ${PY_MINORS}; do \\\n    python3.${minor} -m pip install -U pip && \\\n    python3.${minor} -m pip install -U setuptools wheel && \\\n    python3.${minor} -m pip install -U --cache-dir /ci/pip_cache cmake oldest-supported-numpy && \\\n    python3.${minor} -m pip install --cache-dir /ci/pip_cache --prefer-binary -r /tmp/requirements.txt; \\\n  done && rm -rf /var/cache/yum\n\n{{ EXTRA_POST }}\n"
}