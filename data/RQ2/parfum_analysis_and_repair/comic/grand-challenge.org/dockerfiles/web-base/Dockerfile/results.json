{
  "startTime": 1674253729108,
  "endTime": 1674253730514,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###################\n#  Base Container #\n###################\nARG PYTHON_VERSION\n\nFROM python:${PYTHON_VERSION}-slim-bullseye as base\n\n# Install system dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        libpng-dev \\\n        libjpeg-dev \\\n        libjpeg62-turbo-dev \\\n        libfreetype6-dev \\\n        libxft-dev \\\n        libffi-dev \\\n        wget \\\n        gettext \\\n        # postgres packages for psycopg2\n        libpq-dev \\\n        # curl and ssl for pycurl\n        libcurl4-openssl-dev \\\n        libssl-dev \\\n        # for python-magic\n        libmagic1 \\\n        # openslide and vips for image imports with panimg\n        # gcc is required to compile the extensions\n        libopenslide-dev \\\n        libvips-dev \\\n        gcc \\\n        # ruby2.7 and rugged for licensee\n        ruby2.7 \\\n        ruby-rugged \\\n        # git for CodeBuild integration\n        git \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Fetch and install licensee for checking licenses\nRUN gem install licensee -v 9.15.1\n\n# Fetch and install crane for pushing containers\nRUN mkdir -p /opt/crane \\\n    && wget https://github.com/google/go-containerregistry/releases/download/v0.9.0/go-containerregistry_Linux_x86_64.tar.gz -O /opt/crane/src.tar.gz \\\n    && echo \"1d2cf3fac0830dd8e5fb6e2829fdfc304a3d4a0f48f7e1df9ebb7e2921f28803  /opt/crane/src.tar.gz\" | shasum -c - || exit 1 \\\n    && tar -C /opt/crane/ -xzvf /opt/crane/src.tar.gz crane \\\n    && chmod a+x /opt/crane/crane \\\n    && mv /opt/crane/crane /usr/local/bin/ \\\n    && rm -r /opt/crane && rm /opt/crane/src.tar.gz\n\n# Fetch and install git lfs for github integration\nRUN mkdir -p /opt/git-lfs \\\n    && wget https://github.com/git-lfs/git-lfs/releases/download/v3.0.1/git-lfs-linux-amd64-v3.0.1.tar.gz -O /opt/git-lfs/src.tar.gz \\\n    && echo \"29706bf26d26a4e3ddd0cad02a1d05ff4f332a2fab4ecab3bbffbb000d6a5797  /opt/git-lfs/src.tar.gz\" | shasum --algorithm 256 -c - || exit 1 \\\n    && tar -C /opt/git-lfs/ -xzvf /opt/git-lfs/src.tar.gz \\\n    && bash /opt/git-lfs/install.sh \\\n    && rm -r /opt/git-lfs && rm /opt/git-lfs/src.tar.gz\n\n# Get the minio client for development\nRUN mkdir -p /opt/mc \\\n    && wget https://dl.min.io/client/mc/release/linux-amd64/archive/mc.RELEASE.2022-06-11T21-10-36Z -O /opt/mc/mc \\\n    && echo \"77a784948c3bce2c169bf3f4d998ae1485c060193689268627ff896ddcf9f617  /opt/mc/mc\" | shasum -c - || exit 1 \\\n    && chmod a+x /opt/mc/mc \\\n    && mv /opt/mc/mc /usr/local/bin/ \\\n    && rm -r /opt/mc\n\n# Get the docker cli\nRUN mkdir -p /opt/docker \\\n    && wget https://download.docker.com/linux/static/stable/x86_64/docker-20.10.17.tgz -O /opt/docker/docker.tgz \\\n    && echo \"969210917b5548621a2b541caf00f86cc6963c6cf0fb13265b9731c3b98974d9  /opt/docker/docker.tgz\" | shasum -c - || exit 1 \\\n    && tar -C /opt/docker/ -xzvf /opt/docker/docker.tgz \\\n    && chmod a+x /opt/docker/docker/docker \\\n    && mv /opt/docker/docker/docker /usr/local/bin/ \\\n    && rm -r /opt/docker && rm /opt/docker/docker.tgz\n\nENV PYTHONUNBUFFERED=1\\\n    AWS_XRAY_SDK_ENABLED=false\\\n    GRAND_CHALLENGE_SAGEMAKER_SHIM_VERSION=0.1.0\\\n    PATH=\"/opt/poetry/.venv/bin:/home/django/.local/bin:${PATH}\"\n\nRUN mkdir -p /opt/poetry /app /static /opt/static /opt/sagemaker-shim \\\n    && groupadd -r django && useradd -m -r -g django django \\\n    && chown django:django /opt/poetry /app /static /opt/static /opt/sagemaker-shim\n\nUSER django:django\n\n# Fetch and install sagemaker shim for shimming containers\nRUN mkdir -p /opt/sagemaker-shim \\\n    && wget \"https://github.com/DIAGNijmegen/rse-sagemaker-shim/releases/download/v${GRAND_CHALLENGE_SAGEMAKER_SHIM_VERSION}/sagemaker-shim-${GRAND_CHALLENGE_SAGEMAKER_SHIM_VERSION}-Linux-x86_64.tar.gz\" -P /opt/sagemaker-shim/ \\\n    && echo \"352ec794b5f166ea53bc2d0628959c2fc19a53a7d61c02f1dbe3311995028177  /opt/sagemaker-shim/sagemaker-shim-${GRAND_CHALLENGE_SAGEMAKER_SHIM_VERSION}-Linux-x86_64.tar.gz\" | shasum -c - || exit 1 \\\n    && tar -C /opt/sagemaker-shim/ -xzvf \"/opt/sagemaker-shim/sagemaker-shim-${GRAND_CHALLENGE_SAGEMAKER_SHIM_VERSION}-Linux-x86_64.tar.gz\" \\\n    && rm \"/opt/sagemaker-shim/sagemaker-shim-${GRAND_CHALLENGE_SAGEMAKER_SHIM_VERSION}-Linux-x86_64.tar.gz\"\n\nWORKDIR /opt/poetry\n\n# Install base python packages\nCOPY --chown=django:django pyproject.toml /opt/poetry\nCOPY --chown=django:django poetry.lock /opt/poetry\n\nRUN python -m pip install -U pip \\\n    && python -m pip install -U poetry \\\n    && poetry config virtualenvs.in-project true \\\n    && poetry install --no-interaction --no-ansi --no-root --no-dev\n\n##################\n# TEST CONTAINER #\n##################\nFROM base as test-base\n\nUSER root\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        # Add java and graphviz for plantuml documentation\n        default-jre \\\n        graphviz \\\n        # make for sphinx docs\n        make \\\n    && rm -rf /var/lib/apt/lists/*\nUSER django:django\n\nRUN poetry install --no-interaction --no-ansi --no-root\n"
}