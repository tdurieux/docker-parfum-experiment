{
  "startTime": 1674250767863,
  "endTime": 1674250768725,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 - Compile needed python dependencies\nFROM alpine:3.7 AS build\nRUN apk --no-cache add \\\n    gcc \\\n    musl-dev \\\n    pcre-dev \\\n    linux-headers \\\n    postgresql-dev \\\n    python3 \\\n    python3-dev \\\n    # lxml\n    libxslt-dev \\\n    # Pillow dependencies\n    jpeg-dev \\\n    openjpeg-dev \\\n    zlib-dev \\\n    # Remote deps\n    git\nRUN pip3 install --no-cache-dir virtualenv\nRUN virtualenv /app/env\n\nWORKDIR /app\n\nCOPY ./requirements /app/requirements\nRUN /app/env/bin/python -m pip install --upgrade pip\nRUN /app/env/bin/pip install -r requirements/dev.txt\nRUN /app/env/bin/pip install uwsgi\n\n# Stage 2 - Build docker image suitable for execution and deployment\nFROM alpine:3.7\nRUN apk --no-cache add \\\n      ca-certificates \\\n      mailcap \\\n      musl \\\n      pcre \\\n      postgresql \\\n      python3 \\\n      zlib \\\n      libxslt\n\nCOPY ./src /app/src\nCOPY ./zds /app/zds\nCOPY ./docker/start.sh /start.sh\nRUN mkdir /app/log\n\nCOPY --from=build /app/env /app/env\n\nENV PATH=\"/app/env/bin:${PATH}\"\nWORKDIR /app\nEXPOSE 8000\nCMD [\"/start.sh\"]"
}