{
  "startTime": 1674252056930,
  "endTime": 1674252058245,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM walg-func-test-base\n\nARG WALG_REPO=${GOPATH}/src/github.com/wal-g/wal-g\nARG REDIS_VERSION=6.0.8\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-$REDIS_VERSION.tar.gz\n\nENV TMP_DIR /var/tmp/wal-g\nENV WALG_CONF_DIR /etc/wal-g/\n\nENV USER redis\nENV GROUP redis\nENV USERGROUP $USER:$GROUP\nENV HOME /home/$USER\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r -g 999 $USER && useradd -r -g $GROUP -u 999 $USER\n\nRUN set -eux; \\\n\t\\\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\twget \\\n\t\t\\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\t\\\n\twget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \\\n\tmkdir -p /usr/src/redis; \\\n\ttar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \\\n\trm redis.tar.gz; \\\n\t\\\n## disable Redis protected mode [1] as it is unnecessary in context of Docker\n## (ports are not automatically exposed when running inside Docker, but rather explicitly by specifying -p / -P)\n## [1]: https://github.com/antirez/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da\n#\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h; \\\n#\tsed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h; \\\n#\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h; \\\n## for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently \"if you specify any argument to redis-server, [it assumes] you are going to specify everything\"\n## see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840\n## (more exactly, this makes sure the default behavior of \"save on SIGTERM\" stays functional by default)\n\t\\\n\tmake -C /usr/src/redis -j \"$(nproc)\"; \\\n\tmake -C /usr/src/redis install; \\\n\t\\\n# TODO https://github.com/antirez/redis/pull/3494 (deduplicate \"redis-server\" copies)\n\tserverMd5=\"$(md5sum /usr/local/bin/redis-server | cut -d' ' -f1)\"; export serverMd5; \\\n\tfind /usr/local/bin/redis* -maxdepth 0 \\\n\t\t-type f -not -name redis-server \\\n\t\t-exec sh -eux -c ' \\\n\t\t\tmd5=\"$(md5sum \"$1\" | cut -d\" \" -f1)\"; \\\n\t\t\ttest \"$md5\" = \"$serverMd5\"; \\\n\t\t' -- '{}' ';' \\\n\t\t-exec ln -svfT 'redis-server' '{}' ';' \\\n\t; \\\n\t\\\n\trm -r /usr/src/redis; \\\n\t\\\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark > /dev/null; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\t\\\n\tredis-cli --version; \\\n\tredis-server --version\n\nRUN mkdir -p /data && chown $USERGROUP /data\nVOLUME /data\nWORKDIR /data\n\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -y apt-transport-https && \\\n    mkdir -p /etc/apt/sources.list.d && \\\n    apt-get update -qq && \\\n    apt-key update && \\\n    rm -rf /var/lib/apt/lists/* /var/cache/debconf && \\\n    apt-get clean\n\nRUN mkdir -p /var/log/wal-g/ ${TMP_DIR} && \\\n    ln --force -s /config/supervisor/conf.d/redis.conf /etc/supervisor/conf.d/redis.conf && \\\n    mkdir -p ${WALG_REPO} ${WALG_CONF_DIR} && \\\n    mkdir -p $HOME/.gnupg && touch $HOME/.gnupg/gpg.conf && \\\n    chmod -R 700 $HOME/.gnupg && chown $USERGROUP -R $HOME/.gnupg && \\\n    ln --force -s /config/wal-g-${REDIS_VERSION}.json ${WALG_CONF_DIR}/wal-g.json && \\\n    ln --force -s /config/gpg-key.armor ${WALG_CONF_DIR}/gpg-key.armor\n\nCOPY staging/wal-g ${WALG_REPO}/\nCOPY staging/wal-g/redis_cli.sh /usr/bin/redis_cli.sh\n\nWORKDIR ${WALG_REPO}\n\nRUN make link_external_deps\nRUN make BUILD_ARGS=-race redis_build && \\\n    cp main/redis/wal-g /usr/bin/wal-g\n"
}