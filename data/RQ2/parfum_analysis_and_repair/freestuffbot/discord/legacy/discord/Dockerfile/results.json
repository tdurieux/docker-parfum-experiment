{
  "startTime": 1674249178164,
  "endTime": 1674249179382,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##### Base #####\n\nFROM node:16-alpine as base\n\n# Install Git because it's needed by the bot to determine it's own version\nRUN apk add --no-cache git\n\nWORKDIR /app\n\n# Copy the package meta files\nCOPY package*.json ./\n\n# Setup stuff to be able to use private packages\nARG NODE_AUTH_TOKEN\nENV NODE_AUTH_TOKEN=$NODE_AUTH_TOKEN\nCOPY gh.npmrc .npmrc\n\n# Install production dependencies\nRUN npm install --production && npm cache clean --force;\n\n##### BUILD #####\n\nFROM base as builder\n\nWORKDIR /app\n\n# Install all the dependencies\nRUN npm install && npm cache clean --force;\n\n# Copy the source-code\nCOPY src ./src\nCOPY tsconfig.json ./\n\n# Build the project\nRUN npm run build\n\n##### PRODUCTION IMAGE #####\n\nFROM base\n\nWORKDIR /app\n\n# Copy the configuration file\nCOPY config.docker.js config.js\n\n# Copy the transpiled source-code\nCOPY --from=builder /app/build ./build\n\n# Copy the .git directory\nCOPY .git ./.git\n\n# Launch the bot\nCMD [ \"npm\", \"start\" ]\n"
}