{
  "startTime": 1674255920903,
  "endTime": 1674255922237,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Usage:\n#   docker build -t crypto-index-fund-bot .\n#   docker run --env-file .env -it crypto-index-fund-bo#   docker run --env-file .env -it crypto-index-fund-bot bash\n\n# Reference example Dockerfiles:\n#   https://medium.com/@harpalsahota/dockerizing-python-poetry-applications-1aa3acb76287\n#   https://github.com/monicahq/monica/blob/master/scripts/docker/Dockerfile\n#   https://github.com/schickling/dockerfiles/blob/master/mysql-backup-s3/Dockerfile\n\nFROM python:3.9.6\n\nLABEL maintainer=\"Michael Bianco <mike@mikebian.co>\"\n\n# clean eliminates the need to manually `rm -rf` the cache\nRUN set -eux; \\\n\n  apt-get update; \\\n  apt-get install -y --no-install-recommends \\\n    bash \\\n    nano \\\n    locales \\\n    # TODO figure out how to build a recent version of rust that's supported on the pi\n    #      build-essential libssl-dev libffi-dev libpython3.9-dev cargo \\\n    cron; rm -rf /var/lib/apt/lists/*; \\\n  # this is required for the `locale` settings for the CLI to work\n  # https://stackoverflow.com/questions/14547631/python-locale-error-unsupported-locale-setting\n  # https://stackoverflow.com/questions/59633558/python-based-dockerfile-throws-locale-error-unsupported-locale-setting\n  sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen; \\\n  locale-gen; \\\n  apt-get clean;\n\n# TODO this will not work once the cryptography package is updated\n#      we must install python3-dev when it's package version is updated to 3.9.6\n# https://stackoverflow.com/questions/66118337/how-to-get-rid-of-cryptography-build-error\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\n\nRUN set -eux; \\\n  # lock to specific version to avoid rust compilation\n  pip3 install --no-cache-dir cryptography==3.4.8; \\\n  pip3 install --no-cache-dir poetry==1.1.11; \\\n  poetry config virtualenvs.create false;\n\n# TODO consider using a non-sudo user to run under\n\nENV DJANGO_SETTINGS_MODULE \"botweb.settings.production\"\n\n# run every hour by default, use `SCHEDULE=NONE` to run directly\nENV SCHEDULE \"0 * * * *\"\n\nWORKDIR /app\nCOPY . ./\n\n# this is the cleanest way to conditionally copy a file\n# https://stackoverflow.com/a/46801962/129415\nCOPY *external_portfolio.json LICENSE ./\n\n# run after copying source to chache the earlier steps\nRUN poetry install --no-dev\n\nCMD [\"bash\", \"scripts/cron.sh\"]\n"
}