{
  "startTime": 1674215762011,
  "endTime": 1674215763510,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on hapi pal boilerplate's Dockerfile\nFROM node:12-alpine AS base\n\n# install any packages we need from apt here\nRUN apk add --no-cache --update dumb-init\n\n# set entrypoint to `dumb-init` as it handles being pid 1 and forwarding signals\n# so that you dont need to bake that logic into your node app\nENTRYPOINT [\"dumb-init\", \"--\"]\n\n# all of our code will live in `/app`\nWORKDIR /app\n\nRUN npm i lerna -g && npm cache clean --force;\n\n# using the base image, create an image containing all of our files\n# and dependencies installed, devDeps and test directory included\nFROM base AS dependencies\n\nCOPY ./packages/frontend/package*.json ./packages/frontend/\nCOPY ./packages/api/package*.json ./packages/api/\nCOPY ./packages/deployment/package*.json ./packages/deployment/\nCOPY ./package*.json ./\nCOPY lerna.json .\n\nRUN lerna bootstrap\n\nCOPY ./packages/frontend ./packages/frontend\nRUN API_URL=/api lerna run build --scope fishbowl-frontend\nCOPY ./packages/api ./packages/api\nCOPY ./packages/deployment ./packages/deployment\n\n# prune non-prod dependencies, remove test files\nRUN npm prune --production \\\n    && rm -rf ./packages/*/test\n\nENV PORT=3000\nENV NODE_ENV=production\nENV SQLITE_DB_FILE=/data/app.db\n\nRUN mkdir /data && touch /data/app.db && chown -R node:node /data\nVOLUME /data\n\n# `node` user is created in base node image\n# we want to use this non-root user for running the server in case of attack\n# https://github.com/nodejs/docker-node/blob/master/docs/BestPractices.md#non-root-user\nUSER node\n\nEXPOSE 3000\nCMD [\"lerna\", \"run\", \"start\", \"--stream\", \"--scope\", \"fishbowl-deployment\"]\n"
}