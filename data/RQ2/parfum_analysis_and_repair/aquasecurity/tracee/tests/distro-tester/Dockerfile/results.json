{
  "startTime": 1674250379545,
  "endTime": 1674250381440,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:jammy\n\nARG IMAGE\n\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get dist-upgrade -y && \\\n    apt-get install -y --no-install-recommends coreutils findutils && \\\n    apt-get install -y --no-install-recommends bash vim curl rsync git && \\\n    apt-get install -y --no-install-recommends iproute2 openssh-client && \\\n    apt-get install -y --no-install-recommends ssl-cert ca-certificates && \\\n    apt-get install -y --no-install-recommends qemu-system-x86 qemu-utils && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /tester/\n\nRUN mkdir -p /tracee && \\\n    mkdir -p /tester && \\\n    rm -f /root/.profile && \\\n    rm -f /root/.bashrc && \\\n    echo \"export PS1=\\\"\\u@\\h \\w $ \\\"\" > /root/.bashrc && \\\n    echo \"alias ls=\\\"ls --color\\\"\" >> /root/.bashrc && \\\n    ln -s /root/.bashrc /root/.profile && \\\n    git config --global --add safe.directory /tracee\n\nENV IMAGE=$IMAGE\n\nENTRYPOINT /tester/files/docker-entrypoint.sh $IMAGE\n\nUSER root\nENV HOME /root\nWORKDIR /tracee\n"
}