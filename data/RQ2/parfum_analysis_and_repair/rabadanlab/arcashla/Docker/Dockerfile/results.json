{
  "startTime": 1674217425864,
  "endTime": 1674217427258,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 31,
        "columnStart": 25,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 31,
        "columnStart": 25,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# work from latest LTS ubuntu release\nFROM ubuntu:18.04\n\n# set the environment variables\nENV kallisto_version 0.44.0\nENV samtools_version 1.9\nENV bedtools_version 2.29.2\nENV biopython_version 1.77\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# run update and install necessary tools from package manager\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    zlib1g-dev \\\n    libhdf5-dev \\\n    libnss-sss \\\n    curl \\\n    autoconf \\\n    bzip2 \\\n    python3-dev \\\n    python3-pip \\\n    python \\\n    pigz \\\n    git \\\n    libncurses5-dev \\\n    libncursesw5-dev \\\n    libbz2-dev \\\n    liblzma-dev \\\n    bzip2 \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\n# install python libraries\nRUN pip3 install --no-cache-dir numpy\nRUN pip3 install --no-cache-dir scipy\nRUN pip3 install --no-cache-dir pandas\nRUN pip3 install --no-cache-dir biopython==${biopython_version}\n\n# install kallisto\nRUN mkdir -p /usr/bin/kallisto \\\n    && curl -f -SL https://github.com/pachterlab/kallisto/archive/v${kallisto_version}.tar.gz \\\n    | tar -zxvC /usr/bin/kallisto\n\nRUN mkdir -p /usr/bin/kallisto/kallisto-${kallisto_version}/build\nRUN cd /usr/bin/kallisto/kallisto-${kallisto_version}/build && cmake ..\nRUN cd /usr/bin/kallisto/kallisto-${kallisto_version}/ext/htslib && autoreconf\nRUN cd /usr/bin/kallisto/kallisto-${kallisto_version}/build && make\nRUN cd /usr/bin/kallisto/kallisto-${kallisto_version}/build && make install\n\n# install samtools\nWORKDIR /usr/bin/\nRUN curl -f -SL https://github.com/samtools/samtools/releases/download/${samtools_version}/samtools-${samtools_version}.tar.bz2 \\\n    > samtools-${samtools_version}.tar.bz2\nRUN tar -xjvf samtools-${samtools_version}.tar.bz2 && rm samtools-${samtools_version}.tar.bz2\nWORKDIR /usr/bin/samtools-${samtools_version}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\n# install bedtools\nWORKDIR /usr/bin\nRUN curl -f -SL https://github.com/arq5x/bedtools2/releases/download/v${bedtools_version}/bedtools-${bedtools_version}.tar.gz \\\n    > bedtools-${bedtools_version}.tar.gz\nRUN tar -xzvf bedtools-${bedtools_version}.tar.gz && rm bedtools-${bedtools_version}.tar.gz\nWORKDIR /usr/bin/bedtools2\nRUN make\nRUN ln -s /usr/bin/bedtools2/bin/bedtools /usr/bin/bedtools\n\n# git lfs\nRUN curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash\nRUN apt-get install --no-install-recommends -y git-lfs && rm -rf /var/lib/apt/lists/*;\nRUN git lfs install --system --skip-repo\n\n# install arcasHLA\nWORKDIR /home/\nRUN git clone https://github.com/RabadanLab/arcasHLA.git arcasHLA-master\n\nENV PATH=\"${PATH}:/home/arcasHLA-master/\"\n"
}