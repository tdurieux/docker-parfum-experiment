diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/luxas/kubernetes-on-arm/addons/images/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/luxas/kubernetes-on-arm/addons/images/Dockerfile/repaired.Dockerfile
index eb550b3..b4d0ae0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/luxas/kubernetes-on-arm/addons/images/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/luxas/kubernetes-on-arm/addons/images/Dockerfile/repaired.Dockerfile
@@ -32,18 +32,18 @@ RUN mkdir -p \
 	${CONTRIB_DIR} \
 	${HELM_DIR}
 
-RUN curl -sSL https://github.com/docker/distribution/archive/${REGISTRY_VERSION}.tar.gz | tar -xz -C ${REGISTRY_DIR} --strip-components=1 \
+RUN curl -f -sSL https://github.com/docker/distribution/archive/${REGISTRY_VERSION}.tar.gz | tar -xz -C ${REGISTRY_DIR} --strip-components=1 \
 	&& cd ${REGISTRY_DIR} \
 	&& go build -a --installsuffix cgo --ldflags "-X `go list ./version`.Version=${REGISTRY_VERSION}" -o bin/registry ./cmd/registry \
 	&& cp bin/registry ${OUTPUT_DIR}
 
-RUN curl -sSL https://github.com/kubernetes/heapster/archive/${HEAPSTER_VERSION}.tar.gz | tar -C ${HEAPSTER_DIR} -xz --strip-components=1 \
+RUN curl -f -sSL https://github.com/kubernetes/heapster/archive/${HEAPSTER_VERSION}.tar.gz | tar -C ${HEAPSTER_DIR} -xz --strip-components=1 \
 	&& cd ${HEAPSTER_DIR} \
 	&& go build -a --installsuffix cgo -o heapster k8s.io/heapster/metrics \
 	&& go build -a --installsuffix cgo -o eventer k8s.io/heapster/events \
 	&& cp heapster eventer ${OUTPUT_DIR}
 
-RUN curl -sSL https://github.com/influxdata/influxdb/archive/${INFLUXDB_VERSION}.tar.gz | tar -C ${INFLUXDB_DIR} -xz --strip-components=1 \
+RUN curl -f -sSL https://github.com/influxdata/influxdb/archive/${INFLUXDB_VERSION}.tar.gz | tar -C ${INFLUXDB_DIR} -xz --strip-components=1 \
 	&& cd ${INFLUXDB_DIR} \
 	&& GOARCH=amd64 go get github.com/sparrc/gdm \
 	&& gdm restore \
@@ -54,7 +54,7 @@ RUN curl -sSL https://github.com/influxdata/influxdb/archive/${INFLUXDB_VERSION}
 	&& ./influxd config > ${OUTPUT_DIR}/influxdb.toml \
 	&& sed -i 's/dir = "\/.*influxdb/dir = "\/data/' ${OUTPUT_DIR}/influxdb.toml
 
-RUN curl -sSL https://github.com/grafana/grafana/archive/${GRAFANA_VERSION}.tar.gz | tar -C ${GRAFANA_DIR} -xz --strip-components=1 \
+RUN curl -f -sSL https://github.com/grafana/grafana/archive/${GRAFANA_VERSION}.tar.gz | tar -C ${GRAFANA_DIR} -xz --strip-components=1 \
 	&& cd ${GRAFANA_DIR} \
 	&& GOARCH=amd64 CGO_ENABLED=1 CC=gcc go run build.go setup \
 	&& godep restore \
@@ -62,12 +62,12 @@ RUN curl -sSL https://github.com/grafana/grafana/archive/${GRAFANA_VERSION}.tar.
 	&& CGO_ENABLED=1 go build --ldflags="-w -X main.version=${GRAFANA_VERSION} -X main.commit=unknown-dev -X main.timestamp=0 -extldflags '-static'" -o grafana-cli ./pkg/cmd/grafana-cli \
 	&& cp grafana-server grafana-cli ${OUTPUT_DIR}
 
-RUN curl -sSL https://grafanarel.s3.amazonaws.com/builds/grafana_${GRAFANA_DL_VERSION}_amd64.deb > /tmp/grafana.deb \
+RUN curl -f -sSL https://grafanarel.s3.amazonaws.com/builds/grafana_${GRAFANA_DL_VERSION}_amd64.deb > /tmp/grafana.deb \
 	&& dpkg -x /tmp/grafana.deb ${GRAFANA_ROOTFS_DIR} \
 	&& cp -f ${GRAFANA_DIR}/grafana-server ${GRAFANA_DIR}/grafana-cli ${GRAFANA_ROOTFS_DIR}/usr/sbin/ \
-	&& curl -sSL https://raw.githubusercontent.com/kubernetes/heapster/${HEAPSTER_VERSION}/grafana/dashboards/pods.json > ${OUTPUT_DIR}/pods.json \
-	&& curl -sSL https://raw.githubusercontent.com/kubernetes/heapster/${HEAPSTER_VERSION}/grafana/dashboards/cluster.json > ${OUTPUT_DIR}/cluster.json \
-	&& cd ${GRAFANA_ROOTFS_DIR} && tar -cf ${OUTPUT_DIR}/grafana.tar .
+	&& curl -f -sSL https://raw.githubusercontent.com/kubernetes/heapster/${HEAPSTER_VERSION}/grafana/dashboards/pods.json > ${OUTPUT_DIR}/pods.json \
+	&& curl -f -sSL https://raw.githubusercontent.com/kubernetes/heapster/${HEAPSTER_VERSION}/grafana/dashboards/cluster.json > ${OUTPUT_DIR}/cluster.json \
+	&& cd ${GRAFANA_ROOTFS_DIR} && tar -cf ${OUTPUT_DIR}/grafana.tar . && rm ${OUTPUT_DIR}/grafana.tar
 
 RUN git clone https://github.com/kubernetes/contrib ${CONTRIB_DIR} \
 	&& cd ${CONTRIB_DIR} && git checkout ${CONTRIB_COMMIT} \
@@ -84,7 +84,7 @@ RUN git clone https://github.com/kubernetes/contrib ${CONTRIB_DIR} \
     && CGO_ENABLED=0 GOOS=linux godep go build -a -installsuffix cgo -ldflags "-w -X main.version=${INGRESS_CONTROLLER_VERSION} -X main.gitRepo=git@github.com:kubernetes/contrib" -o nginx-ingress-controller \
     && cp nginx-ingress-controller ${OUTPUT_DIR}
 
-RUN curl -sSL https://github.com/kubernetes/helm/archive/${HELM_VERSION}.tar.gz | tar -xz -C ${HELM_DIR} --strip-components=1 \
+RUN curl -f -sSL https://github.com/kubernetes/helm/archive/${HELM_VERSION}.tar.gz | tar -xz -C ${HELM_DIR} --strip-components=1 \
 	&& cd ${HELM_DIR} \
 	&& GOARCH=amd64 make bootstrap \
 	&& go build -a -installsuffix cgo -ldflags '-w' -o helm ./cmd/helm \