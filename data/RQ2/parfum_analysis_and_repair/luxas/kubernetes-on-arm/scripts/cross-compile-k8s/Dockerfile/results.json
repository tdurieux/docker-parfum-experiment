{
  "startTime": 1674249936611,
  "endTime": 1674249937466,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gcr.io/google_containers/kube-cross:v1.6.2-1\n\nARG GOARCH=arm\nARG CC=arm-linux-gnueabi-gcc\n\nENV GOARM=6 \\\n    ETCD_DIR=${GOPATH}/src/github.com/coreos/etcd \\\n    FLANNEL_DIR=${GOPATH}/src/github.com/coreos/flannel \\\n    K8S_DIR=${GOPATH}/src/k8s.io/kubernetes \\\n    OUT_DIR=/output \\\n    ETCD_VERSION=v2.2.5 \\\n    FLANNEL_VERSION=v0.5.5 \\\n    K8S_VERSION=v1.3.0 \\\n    KUBE_BUILD_PLATFORMS=\"linux/arm\"\n\n\n# Make directories\nRUN mkdir -p \\\n    ${OUT_DIR} \\\n    ${ETCD_DIR} \\\n    ${FLANNEL_DIR} \\\n    ${K8S_DIR}\n\nRUN GOARCH=amd64 go get github.com/tools/godep\n\nRUN curl -f -sSL https://github.com/coreos/etcd/archive/${ETCD_VERSION}.tar.gz | tar -C ${ETCD_DIR} -xz --strip-components=1 \\\n    && cd ${ETCD_DIR} \\\n    && ./build \\\n    && cp bin/* ${OUT_DIR}\n\nRUN curl -f -sSL https://github.com/coreos/flannel/archive/${FLANNEL_VERSION}.tar.gz | tar -C ${FLANNEL_DIR} -xz --strip-components=1 \\\n    && cd ${FLANNEL_DIR} \\\n    && CGO_ENABLED=1 ./build \\\n    && cp bin/* ${OUT_DIR}\n\nRUN curl -f -sSL https://github.com/kubernetes/kubernetes/archive/${K8S_VERSION}.tar.gz | tar -C ${K8S_DIR} -xz --strip-components=1 \\\n    && cd ${K8S_DIR} \\\n    && CGO_ENABLED=1 ./hack/build-go.sh cmd/hyperkube cmd/kubectl test/e2e/e2e.test test/e2e_node/e2e_node.test \\\n    && cp _output/local/go/bin/linux_${GOARCH}/* ${OUT_DIR} \\\n    && rm ${OUT_DIR}/teststale\n"
}