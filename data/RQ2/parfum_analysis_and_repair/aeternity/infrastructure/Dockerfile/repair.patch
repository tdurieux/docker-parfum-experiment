diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aeternity/infrastructure/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aeternity/infrastructure/Dockerfile/repaired.Dockerfile
index d5f7f14..6c81c73 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aeternity/infrastructure/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aeternity/infrastructure/Dockerfile/repaired.Dockerfile
@@ -8,32 +8,32 @@ RUN apk add --no-cache bash curl unzip make python3 py-cryptography openssh-clie
     && ln -s /usr/bin/python3 /usr/bin/python
 
 ENV PACKER_VERSION=1.3.2
-RUN curl -sSO https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip \
+RUN curl -f -sSO https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip \
     && unzip packer_${PACKER_VERSION}_linux_amd64.zip -d /bin \
     && rm -f packer_${PACKER_VERSION}_linux_amd64.zip
 
 ENV VAULT_VERSION=0.11.2
-RUN curl -sSO https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip \
+RUN curl -f -sSO https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip \
     && unzip vault_${VAULT_VERSION}_linux_amd64.zip -d /bin \
     && rm -f vault_${VAULT_VERSION}_linux_amd64.zip
 
 ENV DOCKER_CLIENT_VERSION=20.10.11
-RUN curl -L -o /tmp/docker-${DOCKER_CLIENT_VERSION}.tgz \
+RUN curl -f -L -o /tmp/docker-${DOCKER_CLIENT_VERSION}.tgz \
     https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_CLIENT_VERSION}.tgz \
     && tar -xz -C /tmp -f /tmp/docker-${DOCKER_CLIENT_VERSION}.tgz \
-    && mv /tmp/docker/docker /bin
+    && mv /tmp/docker/docker /bin && rm /tmp/docker-${DOCKER_CLIENT_VERSION}.tgz
 
 COPY --from=docker/buildx-bin:0.7.1 /buildx /usr/libexec/docker/cli-plugins/docker-buildx
 
 ENV GOSS_VER=v0.3.6
-RUN curl -L https://github.com/aelsabbahy/goss/releases/download/${GOSS_VER}/goss-linux-amd64 \
+RUN curl -f -L https://github.com/aelsabbahy/goss/releases/download/${GOSS_VER}/goss-linux-amd64 \
     -o /usr/bin/goss \
     && chmod +rx /usr/bin/goss
 
 ADD requirements.txt /infrastructure/
 RUN apk add --no-cache --virtual build-deps \
         gcc python3-dev musl-dev openssl-dev libffi-dev linux-headers \
-    && pip3 install --upgrade pip==18.1 \
+    && pip3 install --no-cache-dir --upgrade pip==18.1 \
     && pip3 install --no-cache-dir -r /infrastructure/requirements.txt \
     && apk del build-deps
 
@@ -43,9 +43,9 @@ RUN cd /infrastructure/ansible && ansible-galaxy install -r requirements.yml
 ADD docker/ssh_config /etc/ssh/ssh_config
 
 ENV TFENV_VERSION=2.2.2
-RUN curl -L -o /tmp/tfenv-${TFENV_VERSION}.tar.gz \
+RUN curl -f -L -o /tmp/tfenv-${TFENV_VERSION}.tar.gz \
     https://github.com/tfutils/tfenv/archive/refs/tags/v${TFENV_VERSION}.tar.gz \
-    && tar -xz -C /usr/local -f /tmp/tfenv-${TFENV_VERSION}.tar.gz
+    && tar -xz -C /usr/local -f /tmp/tfenv-${TFENV_VERSION}.tar.gz && rm /tmp/tfenv-${TFENV_VERSION}.tar.gz
 
 RUN ln -s /usr/local/tfenv-${TFENV_VERSION}/bin/tfenv /usr/local/bin/
 RUN ln -s /usr/local/tfenv-${TFENV_VERSION}/bin/terraform /usr/local/bin/