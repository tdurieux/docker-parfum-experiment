{
  "startTime": 1674246672249,
  "endTime": 1674246673312,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.8\n\n# Symlink python to python3 to workaround ansible_python_interpreter issue that need to be set per host.\n# Some of the playbooks run on multiple hosts: local + remote.\n# If it's set in the inventory it will not work when a specific inventory is used.\n# OpenSSL required for a packer workaround: https://github.com/hashicorp/packer/issues/2526\nRUN apk add --no-cache bash curl unzip make python3 py-cryptography openssh-client openssl sshpass jq bc git\\\n    && ln -s /usr/bin/python3 /usr/bin/python\n\nENV PACKER_VERSION=1.3.2\nRUN curl -f -sSO https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip \\\n    && unzip packer_${PACKER_VERSION}_linux_amd64.zip -d /bin \\\n    && rm -f packer_${PACKER_VERSION}_linux_amd64.zip\n\nENV VAULT_VERSION=0.11.2\nRUN curl -f -sSO https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip \\\n    && unzip vault_${VAULT_VERSION}_linux_amd64.zip -d /bin \\\n    && rm -f vault_${VAULT_VERSION}_linux_amd64.zip\n\nENV DOCKER_CLIENT_VERSION=20.10.11\nRUN curl -f -L -o /tmp/docker-${DOCKER_CLIENT_VERSION}.tgz \\\n    https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_CLIENT_VERSION}.tgz \\\n    && tar -xz -C /tmp -f /tmp/docker-${DOCKER_CLIENT_VERSION}.tgz \\\n    && mv /tmp/docker/docker /bin && rm /tmp/docker-${DOCKER_CLIENT_VERSION}.tgz\n\nCOPY --from=docker/buildx-bin:0.7.1 /buildx /usr/libexec/docker/cli-plugins/docker-buildx\n\nENV GOSS_VER=v0.3.6\nRUN curl -f -L https://github.com/aelsabbahy/goss/releases/download/${GOSS_VER}/goss-linux-amd64 \\\n    -o /usr/bin/goss \\\n    && chmod +rx /usr/bin/goss\n\nADD requirements.txt /infrastructure/\nRUN apk add --no-cache --virtual build-deps \\\n        gcc python3-dev musl-dev openssl-dev libffi-dev linux-headers \\\n    && pip3 install --no-cache-dir --upgrade pip==18.1 \\\n    && pip3 install --no-cache-dir -r /infrastructure/requirements.txt \\\n    && apk del build-deps\n\nADD ansible/requirements.yml /infrastructure/ansible/\nRUN cd /infrastructure/ansible && ansible-galaxy install -r requirements.yml\n\nADD docker/ssh_config /etc/ssh/ssh_config\n\nENV TFENV_VERSION=2.2.2\nRUN curl -f -L -o /tmp/tfenv-${TFENV_VERSION}.tar.gz \\\n    https://github.com/tfutils/tfenv/archive/refs/tags/v${TFENV_VERSION}.tar.gz \\\n    && tar -xz -C /usr/local -f /tmp/tfenv-${TFENV_VERSION}.tar.gz && rm /tmp/tfenv-${TFENV_VERSION}.tar.gz\n\nRUN ln -s /usr/local/tfenv-${TFENV_VERSION}/bin/tfenv /usr/local/bin/\nRUN ln -s /usr/local/tfenv-${TFENV_VERSION}/bin/terraform /usr/local/bin/\n\n#Install last release for \"old\" versions of TF for purpose of migrations\n#this will be removed after migration process finished\n\nRUN tfenv install 0.12.21\nRUN tfenv install 0.13.7\nRUN tfenv install 0.14.11\nRUN tfenv install 0.15.5\nRUN tfenv install 1.1.4\n\nENV TERRAFORM_DEFAULT_VERSION 0.12.30\nRUN tfenv install ${TERRAFORM_DEFAULT_VERSION}\nRUN tfenv use ${TERRAFORM_DEFAULT_VERSION}\n\nADD . /infrastructure\nWORKDIR /infrastructure\n\nENV SHELL /bin/bash\nCMD [\"/bin/bash\", \"--login\"]\n"
}