{
  "startTime": 1674220758882,
  "endTime": 1674220760259,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 48,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 26,
        "columnEnd": 120
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM elixir:1.10.4\n# Add required files to download and compile only the dependencies\n\n# Install other required dependencies\nRUN apt-get -qq update && apt-get -qq --no-install-recommends -y install curl libncurses5 libsodium-dev jq build-essential gcc g++ make libgmp10 \\\n    && ldconfig \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Prepare working folder\nRUN mkdir -p /home/aeternity/node\nCOPY ./docker/aeternity.yaml /home/aeternity/aeternity.yaml\n\n# Set build git revision\nRUN mkdir /home/aeternity/node/ae_mdw\nCOPY .git .git\nRUN BUILD_REV=\"$(git log -1 --format=%h)\" && echo $BUILD_REV > /home/aeternity/node/ae_mdw/AEMDW_REVISION\nRUN rm -r .git\n\nWORKDIR /home/aeternity/node\n\n# Download, and unzip latest aeternity release archive\nENV NODEDIR=/home/aeternity/node/local/rel/aeternity\nRUN mkdir -p ./local/rel/aeternity/data/mnesia\nRUN curl -f -s https://api.github.com/repos/aeternity/aeternity/releases/latest | \\\n    jq '.assets[] | .browser_download_url | select(contains(\"ubuntu-x86_64.tar.gz\")) | select(contains(\"aeternity-v\"))' | \\\n    xargs curl -L --output aeternity.tar.gz && tar -C ./local/rel/aeternity -xf aeternity.tar.gz && rm aeternity.tar.gz\n\nRUN chmod +x ${NODEDIR}/bin/aeternity\nRUN cp -r ./local/rel/aeternity/lib local/\n\n# Check if the config file is OK\nRUN ${NODEDIR}/bin/aeternity check_config /home/aeternity/aeternity.yaml\n\n# Copy all files, needed to build the project\nCOPY config ./ae_mdw/config\nCOPY lib ./ae_mdw/lib\nCOPY priv ./ae_mdw/priv\nCOPY mix.exs ae_mdw\nCOPY mix.lock ae_mdw\nCOPY Makefile ae_mdw\nCOPY docker/entrypoint.sh ae_mdw/entrypoint.sh\n\n# Start building the mdw\nWORKDIR /home/aeternity/node/ae_mdw\nRUN  mix local.hex --force && mix local.rebar --force\n\n# Fetch the application dependencies and build it\nARG NETWORK_ID\nENV NETWORK_ID=${NETWORK_ID}\nRUN mix deps.get\nRUN mix deps.compile\nENV NODEROOT=/home/aeternity/node/local\nRUN make compile\n\nRUN chmod +x entrypoint.sh\nENTRYPOINT [ \"./entrypoint.sh\" ]\n"
}