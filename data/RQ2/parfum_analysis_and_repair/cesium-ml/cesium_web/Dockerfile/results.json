{
  "startTime": 1674250128760,
  "endTime": 1674250129241,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl build-essential software-properties-common && \\\n    curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    apt-get update && \\\n    apt-get -y upgrade && \\\n    apt-get install --no-install-recommends -y python3 python3-venv python3-dev \\\n                       libpq-dev supervisor \\\n                       git nginx nodejs postgresql-client && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    useradd --create-home --shell /bin/bash cesium\n\nRUN python3.6 -m venv /cesium_env && \\\n    \\\n    bash -c \"source /cesium_env/bin/activate && \\\n    pip install --upgrade pip\"\n\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nADD . /cesium\nWORKDIR /cesium\n\nRUN bash -c \"\\\n    source /cesium_env/bin/activate && \\\n    \\\n    make -C baselayer paths && \\\n    (make -f baselayer/Makefile baselayer dependencies || make -C baselayer dependencies)\"\n\nRUN bash -c \"\\\n    \\\n    (make -f baselayer/Makefile bundle || make -c baselayer bundle) && \\\n    rm -rf node_modules && \\\n    \\\n    chown -R cesium.cesium /cesium_env && \\\n    chown -R cesium.cesium /cesium && \\\n    \\\n    cp docker.yaml config.yaml\"\n\nUSER cesium\n\nEXPOSE 5000\n\nCMD bash -c \"source /cesium_env/bin/activate && \\\n             (make log &) && \\\n             make run_production\"\n"
}