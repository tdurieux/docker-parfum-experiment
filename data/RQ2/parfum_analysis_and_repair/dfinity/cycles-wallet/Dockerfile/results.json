{
  "startTime": 1674216830785,
  "endTime": 1674216831546,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal\n\nENV DEBIAN_FRONTEND noninteractive\n\n### Install baseline packages.\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y build-essential cmake git sudo wget && rm -rf /var/lib/apt/lists/*;\n\n# Create development user.\nRUN groupadd developer\nRUN useradd -d /home/developer -g developer -m developer\n\n# Enable passwordless sudo privileges.\nRUN echo developer ALL=NOPASSWD:ALL > /etc/sudoers.d/developer\nRUN chmod 440 /etc/sudoers.d/developer\nRUN echo Set disable_coredump false > /etc/sudo.conf\n\n# Become development user.\nUSER developer\n\n### Install Rust toolchain.\nARG RUSTUP_VERSION=1.22.1\nARG RUSTUP_DIR=rustup-${RUSTUP_VERSION}\nARG RUSTUP_TARBALL=${RUSTUP_VERSION}.tar.gz\nWORKDIR /tmp\nRUN wget https://github.com/rust-lang/rustup/archive/${RUSTUP_TARBALL}\nRUN tar -f ${RUSTUP_TARBALL} -x\nRUN sh ${RUSTUP_DIR}/rustup-init.sh -y\nENV PATH \"/home/developer/.cargo/bin:${PATH}\"\nRUN rustup target add wasm32-unknown-unknown\nRUN rm -r ${RUSTUP_DIR} ${RUSTUP_TARBALL}\n\n# Install DFINITY SDK.\nRUN wget -O install-dfx.sh -q https://sdk.dfinity.org/install.sh\nRUN yes Y | DFX_VERSION=0.9.2 bash install-dfx.sh\nRUN rm install-dfx.sh\nENV PATH \"/home/developer/bin:${PATH}\"\n\n# Install Node.\nRUN wget -O install-node.sh -q https://deb.nodesource.com/setup_12.x\nRUN sudo bash install-node.sh\nRUN sudo apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nRUN npm install && npm cache clean --force;\n\n# Create development workspace.\nWORKDIR /workspace\nRUN sudo chown -R developer:developer .\n"
}