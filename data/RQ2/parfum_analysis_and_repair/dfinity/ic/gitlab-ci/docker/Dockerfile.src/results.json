{
  "startTime": 1674253761460,
  "endTime": 1674253762600,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 9,
        "columnEnd": 18
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 21,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 21,
        "columnEnd": 107
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 117
      }
    }
  ],
  "repairedDockerfile": "# There are a lot of third-party tools we download from somewhere and use in CI builds.\n# This Dockerfile is the place to collect all of those.\n\n# Anything placed in the /opt directory will be copied to the corresponding location in the /usr directory.\n# If you need to build something from source, this is the place to do it (but you probably don't)\n\nFROM ubuntu@sha256:9d42d0e3e57bc067d10a75ee33bdd1a5298e95e5fc3c5d1fce98b455cb879249\n\nRUN apt -y update && DEBIAN_FRONTEND=noninteractive apt --no-install-recommends -y install curl unzip gpg build-essential cmake git && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /opt/bin\n\nARG protoc_version=3.18.1\nRUN cd $(mktemp -d) && curl -fLO https://github.com/protocolbuffers/protobuf/releases/download/v${protoc_version}/protoc-${protoc_version}-linux-x86_64.zip && unzip * -d /opt/protoc && chmod -R 755 /opt/protoc/bin && chmod -R u+rwX,go+rX,go-w /opt/protoc/include && rm -rf -d\n\nARG sccache_version=0.2.19-alpha+dfinity\nRUN curl -fsSL https://gitlab.com/api/v4/projects/30166821/packages/generic/sccache/v${sccache_version}/sccache -o /opt/bin/sccache && \\\n    chmod +x /opt/bin/sccache && \\\n    # has to match the path in the new dockerfile, not this one\n    ln -s /usr/bin/sccache /opt/bin/sccache-run\n\nARG buildevents_version=0.6.0\nRUN curl -fsSL https://github.com/honeycombio/buildevents/releases/download/v${buildevents_version}/buildevents-linux-amd64 -o /opt/bin/buildevents && \\\n    chmod +x /opt/bin/buildevents\n\nARG motoko_version=0.5.10\nRUN curl -fsSL https://download.dfinity.systems/motoko/${motoko_version}/x86_64-linux/motoko-${motoko_version}.tar.gz | tar -xz -C /opt/bin && chmod +x /opt/bin/moc\n\nARG sdk_version=0.8.0\nRUN curl -fsSL https://download.dfinity.systems/sdk/dfx/${sdk_version}/x86_64-linux/dfx-${sdk_version}.tar.gz | tar -xz -C /opt/bin && chmod +x /opt/bin/dfx\n\nARG idl2json_sha=bcb27ac567eba7a7c14c9d70aedd3fb777af281b\nRUN curl -fsSL https://download.dfinity.systems/idl2json/bcb27ac567eba7a7c14c9d70aedd3fb777af281b/idl2json-linux-amd64.gz | gunzip > /opt/bin/idl2json && chmod +x /opt/bin/idl2json\n\nARG cdk_opt_sha=5807d2f7b523f630eddd69acd4b245a8b129eff9\nRUN curl --fail -sL https://download.dfinity.systems/cdk-rs/${cdk_opt_sha}/ic-cdk-optimizer-linux-amd64.gz | gunzip > /opt/bin/ic-cdk-optimizer && \\\n    chmod 0755 /opt/bin/ic-cdk-optimizer\n\nARG capsule_version=0.2.24\nRUN curl -fsSL https://gitlab.com/api/v4/projects/29782482/packages/generic/capsule/${capsule_version}/capsule-linux-amd64 -o /opt/bin/capsule && \\\n    chmod +x /opt/bin/capsule && ln -s /usr/bin/capsule /opt/bin/placebo\nRUN curl -fsSL https://gitlab.com/api/v4/projects/29782482/packages/generic/capsule/${capsule_version}/cargo-capsule-test-linux-amd64 -o /opt/bin/cargo-capsule-test && chmod +x /opt/bin/cargo-capsule-test\n\nARG rocksdb_sha=0a9a05ae12943b1529ef1eabbca5ce5a71c986bf\nRUN mkdir /tmp/rocksdb && curl -fsSL https://github.com/facebook/rocksdb/archive/${rocksdb_sha}.tar.gz | tar -xz -C /tmp/rocksdb --strip-components 1\nWORKDIR /tmp/rocksdb\n\nRUN apt -y --no-install-recommends install libjemalloc-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev && rm -rf /var/lib/apt/lists/*;\n\nARG bazelisk_sha=231ec5ca8115e94c75a1f4fbada1a062b48822ca04f21f26e4cb1cd8973cd458 \nRUN curl -fsSL https://github.com/bazelbuild/bazelisk/releases/download/v1.11.0/bazelisk-linux-amd64 -o /opt/bin/bazel && \\\n    echo \"$bazelisk_sha  /opt/bin/bazel\" | sha256sum --check && \\\n    chmod 777 /opt/bin/bazel\n\nRUN cmake . -DPORTABLE=1 \\\n  -DWITH_JEMALLOC=1 \\\n  -DWITH_JNI=0 \\\n  -DWITH_BENCHMARK_TOOLS=0 \\\n  -DWITH_TESTS=1 \\\n  -DWITH_TOOLS=0 \\\n  -DWITH_BZ2=1 \\\n  -DWITH_LZ4=1 \\\n  -DWITH_SNAPPY=1 \\\n  -DWITH_ZLIB=1 \\\n  -DWITH_ZSTD=1 \\\n  -DWITH_GFLAGS=0 \\\n  -DUSE_RTTI=1 \\\n  -DFORCE_SSE42=1 \\\n  -DFAIL_ON_WARNINGS=YES \\\n  -DROCKSDB_BUILD_SHARED=0 \\\n  -DCMAKE_BUILD_TYPE=Release \\\n  -DCMAKE_INSTALL_PREFIX=/opt\nRUN make install -j$(nproc)\n\nWORKDIR /\n"
}