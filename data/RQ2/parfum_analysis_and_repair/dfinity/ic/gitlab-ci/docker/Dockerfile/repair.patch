diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dfinity/ic/gitlab-ci/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dfinity/ic/gitlab-ci/docker/Dockerfile/repaired.Dockerfile
index 91808d9..3d5832c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dfinity/ic/gitlab-ci/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dfinity/ic/gitlab-ci/docker/Dockerfile/repaired.Dockerfile
@@ -14,7 +14,7 @@ RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone &
     apt -yq update && \
     apt -yqq install --no-install-recommends git openssh-client curl xz-utils time parallel net-tools \
         apt-transport-https ca-certificates curl gnupg lsb-release && \
-    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
+    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
     echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
     apt -yq update && \
     apt -yqq install --no-install-recommends \
@@ -26,7 +26,7 @@ RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone &
         policycoreutils python3 python3-requests python3-pip python3-gflags python3-cbor pipenv shellcheck \
         sudo docker-ce-cli ripgrep patchelf asciidoctor plantuml graphviz cpio nodejs npm gosu pigz zsh hub less \
         ca-certificates curl git isolinux p7zip-full syslinux xorriso cryptsetup-bin && \
-    gem install asciidoctor-diagram rouge
+    gem install asciidoctor-diagram rouge && rm -rf /var/lib/apt/lists/*;
 
 # Add the `${USER}` user, and the required folders
 ARG USER=ubuntu
@@ -78,7 +78,7 @@ RUN curl -fsSL https://github.com/krallin/tini/releases/download/v${tini_version
     curl -fsSL https://github.com/krallin/tini/releases/download/v${tini_version}/tini.asc -o /tini.asc && \
     chmod +x /tini
 RUN gpg --batch --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7 && \
-    gpg --batch --verify /tini.asc /tini && chmod +x /tini
+    gpg --batch --verify /tini.asc /tini && chmod +x /tini && rm /tini.asc
 
 # To replace nix-shell loading the python packages required for python-tests and dependencies job
 RUN /usr/bin/pip3 install ansible==2.10.7 gitpython pre-commit honeycomb-beeline junit-xml paramiko \
@@ -90,7 +90,7 @@ RUN curl --fail \
          --location https://github.com/dfinity/candid/releases/download/${didc_release_date}/didc-linux64 \
          --output /usr/bin/didc-linux64 && chmod +x /usr/bin/didc-linux64
 
-RUN . /opt/nvm/nvm.sh && nvm install ${node_version} && npm install -g @vscode/dev-container-cli
+RUN . /opt/nvm/nvm.sh && nvm install ${node_version} && npm install -g @vscode/dev-container-cli && npm cache clean --force;
 
 USER ${UID}