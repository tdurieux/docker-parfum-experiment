{
  "startTime": 1674253406903,
  "endTime": 1674253407924,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 6,
        "columnEnd": 51
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# similar to Dockerfile, but uses Apache HTTPd and does not use multi-stage build\nFROM httpd:2.4\n\nARG CONTROLLER_SERVICE=http://lw-controller:8080\nENV CONTROLLER_SERVICE=\"${CONTROLLER_SERVICE}\"\nRUN echo \"Using ${CONTROLLER_SERVICE}\"\n\nWORKDIR /app\nCOPY . .\n\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y curl gnupg \\\n  && ( curl -f -sL https://deb.nodesource.com/setup_8.x | bash -) \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y python build-essential nodejs \\\n  && npm install \\\n  && npm run deploy:prod \\\n  && rm -rf node_modules \\\n  && mv -f /app/dist/* /usr/local/apache2/htdocs/ \\\n  && apt-get remove -y python build-essential nodejs curl && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Listen on 8080\nRUN sed -i \"s/Listen 80/Listen 8080/g\" /usr/local/apache2/conf/httpd.conf\nEXPOSE 8080\n"
}