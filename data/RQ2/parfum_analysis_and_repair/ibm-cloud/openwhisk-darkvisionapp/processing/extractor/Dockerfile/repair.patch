diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibm-cloud/openwhisk-darkvisionapp/processing/extractor/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibm-cloud/openwhisk-darkvisionapp/processing/extractor/Dockerfile/repaired.Dockerfile
index 7a7719b..c741d3f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibm-cloud/openwhisk-darkvisionapp/processing/extractor/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibm-cloud/openwhisk-darkvisionapp/processing/extractor/Dockerfile/repaired.Dockerfile
@@ -5,22 +5,22 @@ ENV DEBIAN_FRONTEND noninteractive
 # Initial update and some basics.
 # This odd double update seems necessary to get curl to download without 404 errors.
 RUN apt-get update --fix-missing && \
-apt-get install -y wget && \
+ apt-get install --no-install-recommends -y wget && \
 apt-get update && \
-apt-get install -y curl && \
-apt-get update
+ apt-get install --no-install-recommends -y curl && \
+apt-get update && rm -rf /var/lib/apt/lists/*;
 
 # Get ffmpeg
 RUN apt-get update --fix-missing && \
-apt-get install -y software-properties-common && \
+ apt-get install --no-install-recommends -y software-properties-common && \
 add-apt-repository -y ppa:mc3man/trusty-media && \
 apt-get update --fix-missing && \
-apt-get install -y ffmpeg
+ apt-get install --no-install-recommends -y ffmpeg && rm -rf /var/lib/apt/lists/*;
 
 # install nodejs and npm
 # based on https://github.com/nodejs/docker-node
 ENV NODE_VERSION 8.11.1
-RUN curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz" \
+RUN curl -f -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.gz" \
   && tar -xzf "node-v$NODE_VERSION-linux-x64.tar.gz" -C /usr/local --strip-components=1 \
   && rm "node-v$NODE_VERSION-linux-x64.tar.gz"
 
@@ -30,8 +30,8 @@ ADD client /blackbox/client
 ADD server /blackbox/server
 
 RUN echo '{ "date": "'`date -u +"%Y-%m-%dT%H:%M:%SZ"`'" }' > /blackbox/client/build.json
-RUN cd /blackbox/server; npm install
-RUN cd /blackbox/client; npm install
+RUN cd /blackbox/server; npm install && npm cache clean --force;
+RUN cd /blackbox/client; npm install && npm cache clean --force;
 
 # Final steps
 EXPOSE 8080