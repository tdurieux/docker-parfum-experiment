{
  "startTime": 1674255809172,
  "endTime": 1674255809723,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghcr.io/diced/prisma-binaries:3.15.x as prisma\n\nFROM alpine:3.16 AS deps\nRUN mkdir -p /prisma-engines\nWORKDIR /build\n\nCOPY .yarn .yarn\nCOPY package.json yarn.lock .yarnrc.yml ./\n\nRUN apk add --no-cache nodejs yarn\nRUN yarn install --immutable && yarn cache clean;\n\nFROM alpine:3.16 AS builder\nWORKDIR /build\n\nCOPY --from=prisma /prisma-engines /prisma-engines\nENV PRISMA_QUERY_ENGINE_BINARY=/prisma-engines/query-engine \\\n  PRISMA_MIGRATION_ENGINE_BINARY=/prisma-engines/migration-engine \\\n  PRISMA_INTROSPECTION_ENGINE_BINARY=/prisma-engines/introspection-engine \\\n  PRISMA_FMT_BINARY=/prisma-engines/prisma-fmt \\\n  PRISMA_CLI_QUERY_ENGINE_TYPE=binary \\\n  PRISMA_CLIENT_ENGINE_TYPE=binary\n\nRUN apk add --no-cache nodejs yarn openssl openssl-dev\n\nCOPY --from=deps /build/node_modules ./node_modules\nCOPY src ./src\nCOPY prisma ./prisma\nCOPY .yarn .yarn\nCOPY package.json yarn.lock .yarnrc.yml esbuild.config.js next.config.js next-env.d.ts zip-env.d.ts tsconfig.json ./\n\nENV ZIPLINE_DOCKER_BUILD 1\nENV NEXT_TELEMETRY_DISABLED 1\n\nRUN yarn build\n\nFROM alpine:3.16 AS runner\nWORKDIR /zipline\n\nCOPY --from=prisma /prisma-engines /prisma-engines\nENV PRISMA_QUERY_ENGINE_BINARY=/prisma-engines/query-engine \\\n  PRISMA_MIGRATION_ENGINE_BINARY=/prisma-engines/migration-engine \\\n  PRISMA_INTROSPECTION_ENGINE_BINARY=/prisma-engines/introspection-engine \\\n  PRISMA_FMT_BINARY=/prisma-engines/prisma-fmt \\\n  PRISMA_CLI_QUERY_ENGINE_TYPE=binary \\\n  PRISMA_CLIENT_ENGINE_TYPE=binary\n\nRUN apk add --no-cache nodejs yarn openssl openssl-dev\n\nENV NODE_ENV production\nENV NEXT_TELEMETRY_DISABLED 1\n\nCOPY --from=builder /build/.next ./.next\nCOPY --from=builder /build/dist ./dist\nCOPY --from=builder /build/node_modules ./node_modules\n\nCOPY --from=builder /build/next.config.js ./next.config.js\nCOPY --from=builder /build/src ./src\nCOPY --from=builder /build/prisma ./prisma\nCOPY --from=builder /build/tsconfig.json ./tsconfig.json\nCOPY --from=builder /build/package.json ./package.json\n\nCMD [\"node\", \"dist/server\"]"
}