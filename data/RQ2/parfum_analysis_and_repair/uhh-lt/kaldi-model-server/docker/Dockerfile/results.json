{
  "startTime": 1674253914149,
  "endTime": 1674253915125,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 292
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 292
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t uhhlt/kamose:latest .\n\n# docker run -p 5000:5000 --name kamose --rm --device /dev/snd:/dev/snd -ti -v ${PWD}/models:/projects/kaldi-model-server/models --entrypoint bash uhhlt/kamose:latest\n# sh entrypoint_event_server.sh\n\n# docker exec -ti kamose bash\n# asr -m 11 -c 1 -t -mf 5 -r 16000 -cs 8192 -bs 2 -a linear\n\nFROM ubuntu:18.04\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y portaudio19-dev redis-server autoconf automake cmake curl g++ git graphviz libatlas3-base libtool make pkg-config subversion unzip wget zlib1g-dev virtualenv python3-dev libsamplerate0 sox python3.8 python2.7 python3.8-dev software-properties-common gfortran alsa-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir projects\n\nWORKDIR /projects\n\nRUN git clone https://github.com/uhh-lt/kaldi-model-server.git\n\nWORKDIR /projects/kaldi-model-server\n\nRUN wget https://ltdata1.informatik.uni-hamburg.de/pykaldi/pykaldi-0.2.0-cp38-cp38-linux_x86_64.whl \\\n && wget https://ltdata1.informatik.uni-hamburg.de/pykaldi/install_kaldi_for_pykaldi_0.2.0.sh \\\n && wget https://ltdata1.informatik.uni-hamburg.de/pykaldi/install_kaldi_intel.sh \\\n && wget https://ltdata1.informatik.uni-hamburg.de/pykaldi/path.sh \\\n && wget https://ltdata1.informatik.uni-hamburg.de/pykaldi/install_mkl.sh \\\n && chmod guo+x *.sh\n\nRUN virtualenv -p /usr/bin/python3.8 pykaldi_env \\\n && . pykaldi_env/bin/activate \\\n && pip3 install --no-cache-dir pykaldi-0.2.0-cp38-cp38-linux_x86_64.whl pyparsing ninja redis pyyaml pyaudio flask flask_cors bs4 samplerate scipy soundfile\n\nRUN ./install_mkl.sh \\\n && ./install_kaldi_for_pykaldi_0.2.0.sh\n\nRUN rm pykaldi-0.2.0-cp38-cp38-linux_x86_64.whl \\\n && find . -name \"*.o\" -type f -delete\n\nVOLUME [\"/projects/kaldi-model-server/models\"]\n\nRUN echo \"#!/bin/bash \\n\\\n  set -e \\n\\\n  cd /projects/kaldi-model-server \\n\\\n  # download example model if it doesn't exist\n  [ ! -d /projects/kaldi-model-server/models/en_160k_nnet3chain_tdnn1f_2048_sp_bi ] && ( \\\n    echo 'Example model does not exist!' \\\n      && sh download_example_models.sh \\\n    ) || echo 'Example model already exists.' \\n\\\n  cd /projects/kaldi-model-server/ \\n\\\n  # start redis \\n\\\n  redis-server --daemonize yes \\n\\\n  # run event server in background \\n\\\n  . pykaldi_env/bin/activate \\n\\\n  python event_server.py \\n\\\n\" > entrypoint_event_server.sh\n\nRUN echo \"#!/bin/bash \\n\\\n  set -e \\n\\\n  cd /projects/kaldi-model-server \\n\\\n  . pykaldi_env/bin/activate \\n\\\n  . path.sh \\n\\\n  python nnet3_model.py \\$* \\n\\\n\" > /usr/local/bin/asr && chmod a+rx /usr/local/bin/asr\n\nEXPOSE 5000\n\nCMD [\"sh\", \"/projects/kaldi-model-server/entrypoint_event_server.sh\"]\n"
}