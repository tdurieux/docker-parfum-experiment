{
  "startTime": 1674253085716,
  "endTime": 1674253087139,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 84,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.2-cudnn7-devel-ubuntu16.04\n\n# install packages\nRUN apt-get update && apt-get install -q -y --no-install-recommends \\\n    apt-transport-https \\\n    ca-certificates \\\n    dirmngr \\\n    git \\\n    gnupg \\\n    gnupg2 \\\n    libboost-all-dev \\\n    libeigen3-dev \\\n    libflann-dev \\\n    libpcap-dev \\\n    libproj-dev \\\n    libssl-dev \\\n    libusb-1.0-0-dev \\\n    libvtk6-qt-dev \\\n    software-properties-common \\\n    wget \\\n    && rm -rf /var/lib/apt/lists/*\n\n# setup keys\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n\n# setup sources.list\nRUN echo \"deb http://packages.ros.org/ros/ubuntu xenial main\" > /etc/apt/sources.list.d/ros1-latest.list\n\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nENV ROS_DISTRO kinetic\n\n# install ros packages\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    ros-$ROS_DISTRO-ros-core \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install a newer version of CMake from Kitware's third-party apt repository\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null\nRUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ xenial main' \\\n    && apt-get update \\\n    && apt-get install -q -y --no-install-recommends cmake \\\n    && rm -rf /var/lib/apt/lists/*\n\n# build and install PCL 1.8.1 from source\nWORKDIR /tmp\nRUN \\\n    git clone --branch pcl-1.8.1 --depth 1 https://github.com/PointCloudLibrary/pcl.git pcl-trunk && \\\n    cd pcl-trunk && \\\n    mkdir build && cd build && \\\n    cmake -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j 4 && make install && \\\n    make clean && cd /tmp && rm -rf pcl-trunk\n\nRUN ldconfig\n\n# workaround for yak looking for libcuda.so.1 instead of libcuda.so\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1\n\n# setup entrypoint\nCOPY ./docker_entrypoint.sh /\nENTRYPOINT [\"/docker_entrypoint.sh\"]\nCMD [\"bash\"]\n"
}