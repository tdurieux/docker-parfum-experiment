{
  "startTime": 1674249494142,
  "endTime": 1674249494999,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 11,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 11,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 11,
        "columnEnd": 106
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 29,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 29,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts-buster\nMAINTAINER Wxy\n\n# Change the repo registiry of debian and node & Install app dependencies\nRUN mv /etc/apt/sources.list /etc/apt/sources.list.bak  \\\n        && echo \"deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster main non-free contrib \" > /etc/apt/sources.list \\\n        && echo \"deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-updates main non-free contrib\" >> /etc/apt/sources.list \\\n        && echo \"deb https://mirrors.tuna.tsinghua.edu.cn/debian/ buster-backports main non-free contrib\" >> /etc/apt/sources.list \\\n        && echo \"deb https://mirrors.tuna.tsinghua.edu.cn/debian-security/ buster/updates main non-free contrib\" >> /etc/apt/sources.list \\\n        && apt-get update && apt-get install --no-install-recommends -y python3-pip pdftk \\\n        && npm install cnpm -g --registry=https://registry.npm.taobao.org \\\n        && mkdir -p /usr/src/app && cnpm install pm2 -g && npm cache clean --force; && rm -rf /usr/src/app && rm -rf /var/lib/apt/lists/*;\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# grab gosu for easy step-down from root\nENV GOSU_VERSION 1.10\nRUN set -x \\\n        && apt-get update && apt-get install -y --no-install-recommends ca-certificates wget && rm -rf /var/lib/apt/lists/* \\\n        && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n        && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n        && export GNUPGHOME=\"$(mktemp -d)\" \\\n        && gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n        && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n        && rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n        && chmod +x /usr/local/bin/gosu \\\n        && gosu nobody true\n\n# Bundle app source\nCOPY . /usr/src/app\nCOPY ./docker-entrypoint.sh /\nENV NICP_UPLOAD_PATH '/var/upload/'\nRUN useradd -ms /bin/bash nicp_node \\\n    && chown nicp_node:nicp_node -R /usr/src/app \\\n    && pip3 install --no-cache-dir -r requirement.txt \\\n    && mkdir -p \"$NICP_UPLOAD_PATH\" \\\n    && chown -R nicp_node:nicp_node \"$NICP_UPLOAD_PATH\" \\\n    && chmod 777 \"$NICP_UPLOAD_PATH\" \\\n    && chmod +x \"/docker-entrypoint.sh\"\n\nVOLUME '/var/upload/'\n\nRUN cnpm install\n\n\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 3000\nCMD [ \"pm2-docker\", \"start\" , \"index.js\" ]\n"
}