{
  "startTime": 1674250670688,
  "endTime": 1674250671893,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 68,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 7,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 98,
        "columnStart": 7,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.\n#-------------------------------------------------------------------------------------------------------------\n\nFROM golang:1.17 as base\n\n# Avoid warnings by switching to noninteractive\nENV DEBIAN_FRONTEND=noninteractive\n\n# This Dockerfile adds a non-root user with sudo access. Use the \"remoteUser\"\n# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs\n# will be updated to match your local UID/GID (when using the dockerFile property).\n# See https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Configure apt, install packages and tools\nRUN apt-get update \\\r\n    && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \\\n    && apt-get -y --no-install-recommends install git openssh-client iproute2 procps lsb-release -y \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends ca-certificates curl apt-transport-https lsb-release gnupg -y \\\n    && curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor | \\\n    tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null \\\n    && AZ_REPO=$(lsb_release -cs) \\\n    && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $AZ_REPO main\" | \\ \r\n    tee /etc/apt/sources.list.d/azure-cli.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends azure-cli -y \\\n    # Install Go tools w/module support\r\n    && mkdir -p /tmp/gotools \\\n    && cd /tmp/gotools \\\n    && GO111MODULE=on go get -v golang.org/x/tools/gopls@latest 2>&1 \\\n    && GO111MODULE=on go get -v \\\r\n    honnef.co/go/tools/...@latest \\\r\n    golang.org/x/tools/cmd/gorename@latest \\\r\n    golang.org/x/tools/cmd/goimports@latest \\\r\n    golang.org/x/tools/cmd/guru@latest \\\r\n    golang.org/x/lint/golint@latest \\\r\n    github.com/mdempsky/gocode@latest \\\r\n    github.com/cweill/gotests/...@latest \\\r\n    github.com/haya14busa/goplay/cmd/goplay@latest \\\r\n    github.com/sqs/goreturns@latest \\\r\n    github.com/josharian/impl@latest \\\r\n    github.com/davidrjenni/reftools/cmd/fillstruct@latest \\\r\n    github.com/uudashr/gopkgs/v2/cmd/gopkgs  \\\r\n    github.com/ramya-rao-a/go-outline@latest  \\\r\n    github.com/acroca/go-symbols@latest  \\\r\n    github.com/godoctor/godoctor@latest  \\\r\n    github.com/rogpeppe/godef@latest  \\\r\n    github.com/zmb3/gogetdoc@latest \\\r\n    github.com/fatih/gomodifytags@latest  \\\r\n    github.com/mgechev/revive@latest  \\\r\n    github.com/go-delve/delve/cmd/dlv@latest 2>&1 \\\n    #\r\n    # Install Go tools w/o module support\r\n    # && go get -v github.com/alecthomas/gometalinter 2>&1 \\\r\n    #\r\n    # Install gocode-gomod\r\n    #&& go get -x -d github.com/stamblerre/gocode 2>&1 \\\r\n    #&& go build -o gocode-gomod github.com/stamblerre/gocode \\\r\n    #&& mv gocode-gomod $GOPATH/bin/ \\\r\n    #\r\n    # Install golangci-lint\r\n    && curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin 2>&1 \\\n    #\r\n    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.\r\n    && groupadd --gid $USER_GID $USERNAME \\\n    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    # [Optional] Add sudo support\r\n    && apt-get install --no-install-recommends -y sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME \\\n    # Add write permission for /go/pkg\r\n    && chmod -R a+w /go/pkg \\\n    #\r\n    # Clean up\r\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/* /go/src /tmp/gotools\n\n\n# Update this to \"on\" or \"off\" as appropriate\nENV GO111MODULE=auto\n\n# Switch back to dialog for any ad-hoc use of apt-get\nENV DEBIAN_FRONTEND=dialog\n\n\n# Add terraform\nFROM base\n\nENV versionTerraform=0.14.5\n\nRUN apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n    unzip \\\n    # Install Terraform\r\n    && echo \"Installing terraform ${versionTerraform}...\" && \\\n    curl -f -sSL -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/${versionTerraform}/terraform_${versionTerraform}_linux_amd64.zip 2>&1 && \\\n    unzip -d /usr/local/bin /tmp/terraform.zip \\\n    && mkdir -p /root/.terraform.d/plugins && rm -rf /var/lib/apt/lists/*;\n\nRUN go get github.com/bflad/tfproviderlint/cmd/tfproviderlint\n"
}