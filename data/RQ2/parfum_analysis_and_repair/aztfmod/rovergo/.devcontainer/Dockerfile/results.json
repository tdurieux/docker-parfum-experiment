{
  "startTime": 1674254065717,
  "endTime": 1674254066492,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 39,
        "columnEnd": 109
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 69,
        "columnEnd": 121
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 26,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 143
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 26,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17.0-buster\n\nARG TERRAFORM_VERSION=1.0.0\nARG TFLINT_VERSION=0.29.1\nARG INSTALL_GO=false\nARG INSTALL_DOCKER=true\nARG DOCKER_VERSION=20.10.7\nARG ROVER_VERSION=latest\nARG BIN_INSTALL_PATH=/usr/bin\n\nARG USERNAME=rover\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# We have to run apt-get update twice thanks to azure-cli >_<\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -qq curl gnupg2 lsb-release \\\n    && curl -f -sSL https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > /etc/apt/trusted.gpg.d/microsoft.gpg \\\n    && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ $(lsb_release -cs) main\" > /etc/apt/sources.list.d/azure-cli.list && rm -rf /var/lib/apt/lists/*;\n\n# Install Azure CLI and other base packages\nRUN apt-get update -qq && export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get install --no-install-recommends -y -qq azure-cli zsh git make sudo jq curl wget net-tools unzip zip nano lsb-release apt-transport-https ca-certificates \\\n    && apt-get clean -y && rm -rf /var/lib/apt/lists/*\n\n# Install other tools directly as binaries, using tools-install repo scripts\nWORKDIR /tmp\nRUN git clone https://github.com/benc-uk/tools-install.git\n\n# Manditory installs\nRUN ./tools-install/terraform.sh $TERRAFORM_VERSION $BIN_INSTALL_PATH \\\n && ./tools-install/tflint.sh $TFLINT_VERSION $BIN_INSTALL_PATH\n\n# Optionally install Go\nENV PATH /usr/local/go/bin:$PATH\nRUN if [ \"$INSTALL_GO\" = \"true\" ]; then ./tools-install/golang.sh; fi\n\n# Other optional installs, like docker client\nRUN if [ \"$INSTALL_DOCKER\" = \"true\" ]; then ./tools-install/docker-client.sh $DOCKER_VERSION $BIN_INSTALL_PATH; fi\n\n# Set ROVER_VERSION to latest or a version tag, when blank Rover will not be installed\nRUN if [ ! -z \"$ROVER_VERSION\" ]; then \\\n curl -f https://raw.githubusercontent.com/aztfmod/rovergo/main/install.sh | bash -s -- -b $BIN_INSTALL_PATH $ROVER_VERSION; fi\n\n# Add non root user and switch to it\nRUN groupadd --gid $USER_GID $USERNAME && useradd -s /bin/bash --gid $USERNAME -m $USERNAME\nENV HOME /home/$USERNAME\nENV PATH $HOME/.local/bin:$PATH\nUSER $USERNAME\n\nWORKDIR /home/$USERNAME\n"
}