{
  "startTime": 1674219297647,
  "endTime": 1674219298608,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base image\nFROM alpine:latest AS build\n\nARG THREADS=1\n\n# install SimulationCraft\nRUN apk --no-cache add --virtual build_dependencies \\\n    git \\\n    g++ \\\n    make && \\\n    git clone --depth 1 https://github.com/simulationcraft/simc.git /app/SimulationCraft && \\\n    make -C /app/SimulationCraft/engine optimized -j $THREADS SC_NO_NETWORKING=1 LTO_THIN=1 OPTS+=\"-Os -mtune=native\" && \\\n    apk del build_dependencies\n\n# disable ptr to reduce build size\n# sed -i '' -e 's/#define SC_USE_PTR 1/#define SC_USE_PTR 0/g' engine/dbc.hpp\n\n# fresh container\nFROM alpine:latest\n\n# get compiled simc and profiles\nCOPY --from=build /app/SimulationCraft/engine/simc /app/SimulationCraft/engine/\nCOPY --from=build /app/SimulationCraft/profiles/ /app/SimulationCraft/profiles/\n\n# install bloodytools\nCOPY ./requirements.txt /app/bloodytools/\nWORKDIR /app\nRUN apk --no-cache add --virtual build_dependencies \\\n    git \\\n    libgcc \\\n    libstdc++ && \\\n    apk --no-cache add python3 && \\\n    if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi && \\\n    python3 -m ensurepip && \\\n    python3 -m pip install --upgrade pip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --no-cache --upgrade pip setuptools wheel && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    pip3 install --no-cache-dir -r bloodytools/requirements.txt\n\n## set bloodytools entrypoint, this container will be usable like a command line tool\nCOPY . /app/bloodytools\nWORKDIR /app/bloodytools\nENTRYPOINT [\"python3\", \"-m\", \"bloodytools\", \"--executable\", \"../SimulationCraft/engine/simc\"]\nCMD [\"--help\"]\n"
}