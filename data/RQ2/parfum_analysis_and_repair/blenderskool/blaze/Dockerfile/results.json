{
  "startTime": 1674250378566,
  "endTime": 1674250379428,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.16.1-alpine as base\n\nWORKDIR /app\n\nCOPY ./client/package*.json ./client/\n\nWORKDIR /app/client\nRUN npm install && npm cache clean --force;\n\nARG WS_HOST\nARG SERVER_HOST\nARG WS_SIZE_LIMIT\nARG TORRENT_SIZE_LIMIT\n\nENV WS_HOST $WS_HOST\nENV SERVER_HOST $SERVER_HOST\nENV WS_SIZE_LIMIT $WS_SIZE_LIMIT\nENV TORRENT_SIZE_LIMIT $TORRENT_SIZE_LIMIT\n\nCOPY ./client .\nCOPY ./common ../common\nRUN npm run build\n\nFROM node:14.16.1-alpine\n\n# Installing nginx and gettext alpine packages\n# gettext is for envsubst command\nRUN apk add --no-cache --update nginx gettext\nRUN mkdir -p /run/nginx\n\nCOPY ./nginx/image-nginx.template /etc/nginx/nginx.template\nCOPY --from=base /app/client/build /etc/nginx/html\n\nWORKDIR /app\n\nCOPY ./server/package*.json ./server/\n\nWORKDIR /app/server\n\nENV NODE_ENV \"production\"\nRUN npm install && npm cache clean --force;\n\nCOPY ./server .\nCOPY ./common ../common\nCOPY ./package*.json ../\n\nEXPOSE 3030\n\nCMD [\"sh\", \"-c\", \"envsubst '$PORT' < /etc/nginx/nginx.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;' & PORT=3030 npm run start\"]"
}