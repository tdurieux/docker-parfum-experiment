{
  "startTime": 1674217470996,
  "endTime": 1674217471907,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Pull base image\nFROM python:3.8.1-slim\n\n# Install system dependencies\nRUN apt-get update && apt-get install --no-install-recommends git -y && rm -rf /var/lib/apt/lists/*;\n\n# Set environment varibles\nENV DJANGO_ENV=dev\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\nENV POETRY_VERSION=1.0.0\n\n# Install Poetry\nRUN pip install --no-cache-dir \"poetry==$POETRY_VERSION\"\n\n# Create dynamic directories\nRUN mkdir /code /logs /uploads /code/apps /code/conf\n\n# Set work directory\nWORKDIR /code\n\n# Install project dependencies\nCOPY poetry.lock pyproject.toml ./\n\nRUN poetry config virtualenvs.create false \\\n  && poetry install $(test \"$DJANGO_ENV\" == prod && echo \"--no-dev\") --no-interaction --no-ansi --no-root\n"
}