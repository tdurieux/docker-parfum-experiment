{
  "startTime": 1674216972947,
  "endTime": 1674216973608,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# Reference: https://www.lpalmieri.com/posts/fast-rust-docker-builds/\n\nFROM rust:1.56 as cargo-chef-rust\nRUN apt-get install -y --no-install-recommends bash && rm -rf /var/lib/apt/lists/*;\nRUN cargo install cargo-chef\n\nFROM cargo-chef-rust as planner\nWORKDIR app\n# We only pay the installation cost once,\n# it will be cached from the second build onwards\n# To ensure a reproducible build consider pinning\n# the cargo-chef version with `--version X.X.X`\nCOPY . .\nRUN cargo chef prepare --recipe-path recipe.json\n\nFROM cargo-chef-rust as cacher\nWORKDIR app\nCOPY --from=planner /app/recipe.json recipe.json\nRUN cargo chef cook --release --recipe-path recipe.json\n\nFROM cargo-chef-rust as builder\nWORKDIR app\nCOPY . .\n# Copy over the cached dependencies\nCOPY --from=cacher /app/target target\nCOPY --from=cacher /usr/local/cargo /usr/local/cargo\nRUN cargo build --manifest-path=test_runner/Cargo.toml --release --bin test_runner\n\nFROM cargo-chef-rust as runtime\nWORKDIR app\nCOPY test_runner/startup.sh startup.sh\nCOPY --from=builder /app/target/release/test_runner /usr/local/bin\nCMD sh startup.sh"
}