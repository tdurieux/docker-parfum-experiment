{
  "startTime": 1674250497093,
  "endTime": 1674250497826,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 172
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 145
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 172
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 172
      }
    }
  ],
  "repairedDockerfile": "# see https://hub.docker.com/_/ubuntu/ for versions, should be the same as on Travis for NodeMCU CI\n# 16.04 == xenial\nFROM ubuntu:16.04\nLABEL maintainer=\"marcelstoer\"\n\n# If you want to tinker with this Dockerfile on your machine do as follows:\n# - git clone https://github.com/marcelstoer/docker-nodemcu-build\n# - cd docker-nodemcu-build\n# - vim Dockerfile\n# - docker build -t docker-nodemcu-build .\n# - cd <nodemcu-firmware>\n# - docker run --rm -ti -v `pwd`:/opt/nodemcu-firmware docker-nodemcu-build build\n\n# Lint the final file with https://hadolint.github.io/hadolint/\n\n# Deleting apt-get lists is done at the very end\n# hadolint ignore=DL3009\nRUN apt-get update && apt-get install -y --no-install-recommends wget unzip git make python-serial srecord bc xz-utils gcc ccache tzdata vim-tiny && rm -rf /var/lib/apt/lists/*;\n\n# additionally required for ESP32 builds as per https://nodemcu.readthedocs.io/en/dev-esp32/build/#ubuntu\nRUN apt-get install -y --no-install-recommends gperf python-pip python-dev flex bison build-essential libssl-dev libffi-dev libncurses5-dev libncursesw5-dev libreadline-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\n\nRUN mkdir /opt/nodemcu-firmware\nWORKDIR /opt/nodemcu-firmware\n\nRUN rm -rf /root\nRUN ln -s /tmp /root\nENV PATH=\"/opt:${PATH}\"\n\nCOPY cmd.sh /opt/\nCOPY read.me /opt/\nCOPY build /opt/\nCOPY build-esp32 /opt/\nCOPY build-esp8266 /opt/\nCOPY configure-esp32 /opt/\nCOPY lfs-image /opt/\n\n# Release some space...\nRUN apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nCMD [\"/opt/cmd.sh\"]\n"
}