{
  "startTime": 1674255774779,
  "endTime": 1674255775700,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 139
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gliderlabs/alpine:3.6\n\nEXPOSE 5432\n\nENV LANG en_US.utf8\nENV PGDATA /var/lib/postgresql/data\nENV DB_LOGIN postgres\n\nWORKDIR /usr/src/\n\nRUN mkdir ./docker-entrypoint-initdb.d && \\\n    mkdir -p \"$PGDATA\"\n\nCOPY ./docker-entrypoint.sh .\nCOPY ./create.sql ./docker-entrypoint-initdb.d\n\nRUN echo \"http://nl.alpinelinux.org/alpine/v3.6/main\" > /etc/apk/repositories && \\\n    apk update && apk add --no-cache vim bash nano curl git ca-certificates make \"postgresql-dev>9.5\" tzdata \"postgresql>9.5\" \"postgresql-contrib>9.5\" && \\\n    curl -f -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/1.10/gosu-amd64\" && \\\n    chmod +x /usr/local/bin/gosu && \\\n    chmod +s /usr/local/bin/gosu && \\\n    # time zone\n    cp /usr/share/zoneinfo/UTC /etc/localtime && \\\n    echo \"UTC\" > /etc/timezone && \\\n    mkdir -p \"$PGDATA\" && \\\n    chmod -R 700 $PGDATA && \\\n    chown -R postgres $PGDATA && \\\n    mkdir /run/postgresql && \\\n    chown -R postgres /run/postgresql && \\\n    chmod +x ./docker-entrypoint.sh && \\\n    git clone https://github.com/michelp/pgjwt.git && \\\n    cd pgjwt && \\\n    make install && \\\n    cd .. && \\\n    rm -Rf pgjwt\n\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"postgres\"]\n"
}