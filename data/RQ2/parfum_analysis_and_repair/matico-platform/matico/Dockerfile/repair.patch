diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/matico-platform/matico/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/matico-platform/matico/Dockerfile/repaired.Dockerfile
index 1472b6c..412867b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/matico-platform/matico/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/matico-platform/matico/Dockerfile/repaired.Dockerfile
@@ -1,8 +1,7 @@
-
 # For building the server and the spec
 #----------------------------------------------------------------------------------
 FROM osgeo/gdal:ubuntu-small-3.4.1 as rust-builder
-RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o install_rust.sh 
+RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o install_rust.sh
 RUN sh install_rust.sh -y
 ENV PATH="/root/.cargo/bin/:${PATH}"
 
@@ -10,7 +9,7 @@ RUN rustup default nightly
 RUN apt-get update
 # RUN apt-get -y install software-properties-common
 # RUN add-apt-repository ppa:nextgis/ppa && apt-get update
-RUN apt-get -y install libpq-dev build-essential pkg-config openssl libssl-dev libclang-dev 
+RUN apt-get -y --no-install-recommends install libpq-dev build-essential pkg-config openssl libssl-dev libclang-dev && rm -rf /var/lib/apt/lists/*;
 # RUN apk --no-cache add g++ make libressl-dev pkgconfig
 
 RUN curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
@@ -27,7 +26,7 @@ ADD ./matico_types/index.d.ts /app/matico_types/index.d.ts
 ADD ./scripts /app/scripts
 
 RUN ls /app/scripts
-WORKDIR /app 
+WORKDIR /app
 RUN cargo build --release
 
 WORKDIR /app/matico_spec
@@ -41,7 +40,7 @@ WORKDIR /app/matico_compute/matico_dot_density_analysis
 RUN ./build.sh
 
 WORKDIR /app
-RUN ls 
+RUN ls
 RUN pwd
 RUN ./scripts/build_types.sh
 
@@ -88,7 +87,7 @@ FROM node:16.6.1-alpine3.13 as frontend-builder
 
 COPY --from=javascript_deps /app /app
 WORKDIR /app/
-# # COPY --from=javascript_deps /app/.yarn ./.yarn 
+# # COPY --from=javascript_deps /app/.yarn ./.yarn
 # # COPY --from=javascript_deps /app/yarn.lock ./yarn.lock
 # # COPY --from=javascript_deps /app/.yarnrc.yml ./.yarnrc.yml
 # # COPY --from=javascript_deps /app/.pnp.cjs ./.pnp.cjs
@@ -102,16 +101,16 @@ ADD matico_charts /app/matico_charts
 # # ADD .yarnrc.yml /app/.yarnrc.lock
 # # ADD .yarn /app/.yarn
 
-# ADD matico_components ./matico_components 
+# ADD matico_components ./matico_components
 # ADD matico_admin ./matico_admin
 # RUN yarn
-RUN yarn workspace @maticoapp/matico_charts run build
-RUN yarn workspace @maticoapp/matico_components run build-prod
-ENV NEXT_PUBLIC_SERVER_URL="/api" 
-RUN yarn workspace matico_admin run build
+RUN yarn workspace @maticoapp/matico_charts run build && yarn cache clean;
+RUN yarn workspace @maticoapp/matico_components run build-prod && yarn cache clean;
+ENV NEXT_PUBLIC_SERVER_URL="/api"
+RUN yarn workspace matico_admin run build && yarn cache clean;
 RUN ls -alh /app/matico_admin/.next
 
-# For running everything 
+# For running everything
 #--------------------------------------------------------------------------------
 
 FROM osgeo/gdal:ubuntu-small-3.4.1
@@ -120,13 +119,13 @@ ENV NODE_ENV production
 
 ARG APP=/usr/src/app
 RUN apt-get update \
-    && apt-get install -y ca-certificates tzdata nginx systemd \
+    && apt-get install --no-install-recommends -y ca-certificates tzdata nginx systemd \
     && rm -rf /var/lib/apt/lists/*
 
-RUN curl -sL https://deb.nodesource.com/setup_16.x | bash - \
-    && apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash - \
+    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
-RUN npm install pm2 yarn --global
+RUN npm install pm2 yarn --global && npm cache clean --force;
 # RUN addgroup -g 1001 -S nodejs
 # RUN adduser -S nextjs -u 1001
 
@@ -149,14 +148,14 @@ COPY --from=rust-builder /app/target/release/matico_server ${APP}/matico_server
 
 WORKDIR ${APP}/matico_admin
 # RUN rm package.json
-# RUN npm init -y 
-# RUN npm install next 
+# RUN npm init -y
+# RUN npm install next
 
 WORKDIR ${APP}
 
 # USER nextjs
 
-EXPOSE 8888 
+EXPOSE 8888
 
 ADD scripts/run_docker_prod.sh ./
 ADD scripts/nginx.conf /etc/nginx/nginx.conf