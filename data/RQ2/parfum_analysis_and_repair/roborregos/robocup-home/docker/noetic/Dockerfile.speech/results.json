{
  "startTime": 1674250788414,
  "endTime": 1674250790101,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 20,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the existing ROS-NOETIC image\nFROM osrf/ros:noetic-desktop-full\n\nLABEL maintainer=\"Jose Cisneros <A01283070@itesm.mx>\"\n\n# Install dependencies\nRUN apt-get update -qq && \\\n    apt-get install -y \\\n    build-essential \\\n    nano \\\n    git \\\n    autoconf \\\n    libtool \\\n    python3-pip \\\n    mesa-utils \\\n    --no-install-recommends terminator \\\n    ros-noetic-audio-common \\\n    ros-noetic-moveit-ros-planning \\\n    ros-noetic-moveit-ros-planning-interface \\\n    ros-noetic-moveit-core \\\n    ros-noetic-moveit-msgs \\\n    ros-noetic-move-base && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Init catkin_home directoy\nRUN mkdir /catkin_home\nCOPY catkin_home/ catkin_home/\n\n# Speech Dependencies\n# PyAudio\nRUN apt-get update && apt-get install --no-install-recommends libasound2-dev ffmpeg -y && \\\n    rm -rf /var/lib/apt/lists/*\n# PortAudio\nRUN git clone -b alsapatch https://github.com/gglockner/portaudio && \\\n    cd portaudio && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && sudo make install && \\\n    sudo ldconfig\n# Microphone\nRUN apt-get update && apt-get install --no-install-recommends alsa-base alsa-utils -y && \\\n    rm -rf /var/lib/apt/lists/*\n# Deepspeech\nRUN apt-get update && apt-get install --no-install-recommends -y pkg-config libflac-dev libogg-dev libvorbis-dev libboost-dev swig python3-dev && \\\n    rm -rf /var/lib/apt/lists/*\nRUN apt-get update && apt-get install --no-install-recommends -y wget && \\\n    cd /catkin_home/src/action_selectors/scripts/DeepSpeech/decoders/swig && ./setup.sh && \\\n    rm -rf /var/lib/apt/lists/*\n# Say\nRUN apt-get update && apt-get install --no-install-recommends -y espeak mpg321 pulseaudio && \\\n    rm -rf /var/lib/apt/lists/*\n# SomeoneToTalk\nRUN apt-get update && apt-get install --no-install-recommends libopencv-dev python3-opencv -y && rm -rf /var/lib/apt/lists/*;\n\n# Python Dependencies\nCOPY docker/noetic/speechDependencies.txt /speechDependencies.txt\nCOPY docker/noetic/speechDependenciesGpu.txt /speechDependenciesGpu.txt\n\n# Deepspeech Pre-Run\nRUN cd /catkin_home/src/action_selectors/scripts/DeepSpeech && python3 -m data.librispeech.librispeech --full_download False --manifest_prefix \"data/librispeech/manifest\"\n\n# Change Workdir\nWORKDIR /catkin_home\n\n# catkin_make\nRUN /bin/bash -c '. /opt/ros/noetic/setup.bash;catkin_make'\n\n# Add ROS environment variables automatically\nRUN echo \"source /opt/ros/noetic/setup.bash\" >> ~/.bashrc\nRUN echo \"[ -f /catkin_home/devel/setup.bash ] && source /catkin_home/devel/setup.bash\" >> ~/.bashrc\nRUN echo \"export GAZEBO_MODEL_PATH=/catkin_home/src/simulation/models:$GAZEBO_MODEL_PATH\" >> ~/.bashrc\nRUN echo \"export GAZEBO_RESOURCE_PATH=/catkin_home/src/simulation:$GAZEBO_RESOURCE_PATH\" >> ~/.bashrc\n\nENTRYPOINT [ \"/bin/bash\", \"-l\", \"-c\" ]\n"
}