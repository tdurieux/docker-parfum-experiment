{
  "startTime": 1674216459392,
  "endTime": 1674216460462,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 20,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The MIT License (MIT)\n#\n# Copyright (c) 2021 Keenan Johnson\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n# THE SOFTWARE.\n\nFROM balenalib/%%BALENA_MACHINE_NAME%%-python:buster-build AS build\n\nRUN install_packages -y --no-install-recommends \\\n    gpsd-clients \\\n    dbus\n\n# Set up and activate the virtualenv\nRUN python -m venv /usr/venv\nENV PATH=\"/usr/venv/bin:$PATH\" VIRTUAL_ENV=/usr/venv\n\n# Prepare our Python toolchain\nRUN pip install --no-cache-dir wheel\nRUN pip install --no-cache-dir pip --upgrade\n\n# Packages used only for talking to the hardware.\n# Adafruit_BBIO fails to build on a local dev machine; until that's fixed, it lives here instead of pyproject.toml\nRUN pip install --no-cache-dir RPi.GPIO==0.7.1a4 Adafruit_BBIO\n\n# Set our working directory\nWORKDIR /usr/src/\n# Copy in just enough to install dependencies\nCOPY pyproject.toml poetry.lock ./\n# Install Python packages; dependencies from pyproject.toml via poetry-core / PEP 517\n# Create an empty co2.py so that pip is not confused\nRUN touch co2.py && pip install --no-cache-dir .\n# Save a tiny amount of space: we don't need `wheel` at runtime\n# We also don't need our own package in the virtualenv, we'll run from source\nRUN pip uninstall -y wheel co2\n# Shipping .pyc files doesn't gain us anything, and it costs space\nRUN find /usr/venv -name '*.pyc' -delete\n\n########################\n# END OF `build` STAGE #\n########################\n\nFROM balenalib/%%BALENA_MACHINE_NAME%%-python:buster-run\n\nRUN install_packages -y --no-install-recommends \\\n    # Runtime dependencies\n    gpsd-clients \\\n    dbus \\\n    # Convenience tools\n    vim-tiny\n\n# Grab the virtualenv and activate it\nCOPY --from=build /usr/venv /usr/venv\nENV PATH=\"/usr/venv/bin:$PATH\" VIRTUAL_ENV=/usr/venv\n\n# Get the source\nWORKDIR /usr/src/\nCOPY . ./\n\nCMD python co2.py\n"
}