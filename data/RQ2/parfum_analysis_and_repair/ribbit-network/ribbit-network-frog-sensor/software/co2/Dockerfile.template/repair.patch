diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ribbit-network/ribbit-network-frog-sensor/software/co2/Dockerfile.template b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ribbit-network/ribbit-network-frog-sensor/software/co2/Dockerfile.template/repaired.Dockerfile
index c3a0983..19657ba 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ribbit-network/ribbit-network-frog-sensor/software/co2/Dockerfile.template
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ribbit-network/ribbit-network-frog-sensor/software/co2/Dockerfile.template/repaired.Dockerfile
@@ -24,19 +24,19 @@ FROM balenalib/%%BALENA_MACHINE_NAME%%-python:buster-build AS build
 
 RUN install_packages -y --no-install-recommends \
     gpsd-clients \
-    dbus 
+    dbus
 
 # Set up and activate the virtualenv
-RUN python -m venv /usr/venv 
+RUN python -m venv /usr/venv
 ENV PATH="/usr/venv/bin:$PATH" VIRTUAL_ENV=/usr/venv
 
 # Prepare our Python toolchain
-RUN pip install wheel
-RUN pip install pip --upgrade
+RUN pip install --no-cache-dir wheel
+RUN pip install --no-cache-dir pip --upgrade
 
 # Packages used only for talking to the hardware.
 # Adafruit_BBIO fails to build on a local dev machine; until that's fixed, it lives here instead of pyproject.toml
-RUN pip install RPi.GPIO==0.7.1a4 Adafruit_BBIO
+RUN pip install --no-cache-dir RPi.GPIO==0.7.1a4 Adafruit_BBIO
 
 # Set our working directory
 WORKDIR /usr/src/
@@ -44,7 +44,7 @@ WORKDIR /usr/src/
 COPY pyproject.toml poetry.lock ./
 # Install Python packages; dependencies from pyproject.toml via poetry-core / PEP 517
 # Create an empty co2.py so that pip is not confused
-RUN touch co2.py && pip install .
+RUN touch co2.py && pip install --no-cache-dir .
 # Save a tiny amount of space: we don't need `wheel` at runtime
 # We also don't need our own package in the virtualenv, we'll run from source
 RUN pip uninstall -y wheel co2