diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/litnimax/odoo_asterisk/odoo/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/litnimax/odoo_asterisk/odoo/Dockerfile/repaired.Dockerfile
index 88c96f7..3aa089e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/litnimax/odoo_asterisk/odoo/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/litnimax/odoo_asterisk/odoo/Dockerfile/repaired.Dockerfile
@@ -16,20 +16,20 @@ RUN mkdir -p /opt/odoo /var/log/odoo
 WORKDIR /opt/odoo
 
 # grab gosu for easy step-down from root
-RUN gpg --keyserver pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
-        && curl -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture)" \
-        && curl -o /usr/local/bin/gosu.asc -SL "https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture).asc" \
-        && gpg --verify /usr/local/bin/gosu.asc \
+RUN gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \
+        && curl -f -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture)" \
+        && curl -f -o /usr/local/bin/gosu.asc -SL "https://github.com/tianon/gosu/releases/download/1.2/gosu-$(dpkg --print-architecture).asc" \
+        && gpg --batch --verify /usr/local/bin/gosu.asc \
         && rm /usr/local/bin/gosu.asc \
         && chmod +x /usr/local/bin/gosu
 
 # grab dockerize for generation of the configuration file and wait on postgres
-RUN curl https://github.com/jwilder/dockerize/releases/download/v0.4.0/dockerize-linux-amd64-v0.4.0.tar.gz -L | tar xz -C /usr/local/bin
+RUN curl -f https://github.com/jwilder/dockerize/releases/download/v0.4.0/dockerize-linux-amd64-v0.4.0.tar.gz -L | tar xz -C /usr/local/bin
 
 COPY ./base_requirements.txt ./
 COPY ./requirements.txt ./
 
-RUN cd /opt/odoo && pip install -r base_requirements.txt && pip install -r requirements.txt
+RUN cd /opt/odoo && pip install --no-cache-dir -r base_requirements.txt && pip install --no-cache-dir -r requirements.txt
 
 ENV ODOO_VERSION=10.0 \
     PATH=/opt/odoo/bin:$PATH \
@@ -59,7 +59,7 @@ COPY ./VERSION /opt/odoo/
 COPY ./migration.yml /opt/odoo/
 
 # Install songs from setup.py
-RUN pip install -e .
+RUN pip install --no-cache-dir -e .
 
 VOLUME ["/data/odoo", "/var/log/odoo"]