{
  "startTime": 1674249394261,
  "endTime": 1674249395043,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\n\nRUN apk update && apk upgrade && \\\n    apk add --no-cache supervisor git python psqlodbc \\\n    py2-pip py2-tornado py2-setproctitle py2-gevent py2-requests py2-paho-mqtt \\\n    asterisk asterisk-odbc asterisk-sample-config asterisk-sounds-en asterisk-sounds-moh asterisk-srtp\n\n#Install optional tools\nRUN apk add --no-cache tcpdump ethtool vlan iftop ngrep bash vim screen tmux mosquitto-clients curl\n\n# grab dockerize for generation of the configuration file and wait on postgres\nRUN curl -f https://github.com/jwilder/dockerize/releases/download/v0.6.0/dockerize-alpine-linux-amd64-v0.6.0.tar.gz -L | tar xz -C /usr/local/bin\n\nRUN mkdir /var/log/supervisor\n\n# Asterisk conf templates\nCOPY ./etc/ /etc/\nCOPY ./services /services/\n\nRUN pip install --no-cache-dir -r /services/requirements.txt\n\nCOPY ./docker-entrypoint.sh /\n\nEXPOSE 5060/udp 5038 8088 8010\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n"
}