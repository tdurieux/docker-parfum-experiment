{
  "startTime": 1674220071451,
  "endTime": 1674220072945,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu\nMAINTAINER syu_cream\nWORKDIR /opt\n\n#\n# Prepare build environment\n#\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y \\\n            git \\\n            build-essential \\\n            autoconf \\\n            automake \\\n            autotools-dev \\\n            libtool \\\n            pkg-config && rm -rf /var/lib/apt/lists/*;\n\n#\n# Prepare build environment for mruby and ts_mruby\n#\nRUN apt-get install --no-install-recommends -y \\\n            bison \\\n            libreadline6 \\\n            libreadline6-dev \\\n            ncurses-dev \\\n            ruby \\\n            unzip && rm -rf /var/lib/apt/lists/*;\n\n#\n# Prepare develop environment\n#\nRUN apt-get install --no-install-recommends -y \\\n            curl \\\n            vim \\\n            valgrind \\\n            wget && rm -rf /var/lib/apt/lists/*;\n\n#\n# Install nginx to test trafficserver's proxy features\n#\nRUN apt-get install --no-install-recommends -y nginx && rm -rf /var/lib/apt/lists/*;\n\n#\n# Install packages required by trafficserver\n#\nRUN apt-get install --no-install-recommends -y \\\n            g++ \\\n            libssl-dev \\\n            tcl-dev \\\n            libpcre3-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN ldconfig\n\n\n#\n# Prepare HTTP server as origin server of trafficserver\n#\nRUN mkdir /opt/htdocs\nRUN echo \"TEST\" > /opt/htdocs/index.html\n\n#\n# Build and install latest opnessl\n#\nRUN git clone https://github.com/openssl/openssl.git\nRUN cd openssl &&                                              \\\n    git checkout -b OpenSSL_1_0_2h refs/tags/OpenSSL_1_0_2h && \\\n    ./config &&                                                \\\n    make &&                                                    \\\n    make install\n\n#\n# Build and install trafficserver\n#\nRUN wget -O trafficserver-7.0.0.tar.bz2 https://ftp.meisei-u.ac.jp/mirror/apache/dist/trafficserver/trafficserver-7.0.0.tar.bz2\nRUN tar xf trafficserver-7.0.0.tar.bz2 && \\\n    cd trafficserver-7.0.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-debug && \\\n    make && \\\n    make install && rm trafficserver-7.0.0.tar.bz2\n\nRUN ldconfig\n\n#\n# Configure trafficserver to listen http and https\n#\nRUN openssl genrsa 2048 > server.key &&                                           \\\n    yes \"\" | openssl req -new -key server.key > server.csr &&                     \\\n    openssl x509 -days 3650 -req -signkey server.key < server.csr > server.crt && \\\n    cp server.crt /usr/local/etc/trafficserver/ &&                                \\\n    cp server.key /usr/local/etc/trafficserver/\nRUN echo \"CONFIG proxy.config.http.server_ports STRING 8080 443:ssl\" >> /usr/local/etc/trafficserver/records.config\nRUN echo \"dest_ip=* ssl_cert_name=server.crt ssl_key_name=server.key\" >> /usr/local/etc/trafficserver/ssl_multicert.config\n\n#\n# Build and install ts_mruby\n#\nRUN git clone https://github.com/syucream/ts_mruby.git\nRUN cd ts_mruby &&                                                                       \\\n    git submodule init &&                                                                \\\n    git submodule update &&                                                              \\\n    autoreconf -if && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ts-prefix-root=/usr/local/ && \\\n    make build_mruby && \\\n    make && \\\n    make install\n\n#\n# Configure ts_mruby test script\n#\nRUN echo \"ATS::echo 'ts_mruby test'\" >> /usr/local/etc/trafficserver/echo.rb\nRUN echo \"map / http://127.0.0.1/ @plugin=ts_mruby.so @pparam=/usr/local/etc/trafficserver/echo.rb\" >> /usr/local/etc/trafficserver/remap.config\n\n#\n# Finish preparing!\n#\n# You can access to '/' then you'll get ts_mruby's response after '$ trafficserver start'\n# RUN trafficserver start\n# RUN curl -v http://localhost:8080/ #=> 'ts_mruby test'\n#\n"
}