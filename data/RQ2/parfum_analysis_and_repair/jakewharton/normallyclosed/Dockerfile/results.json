{
  "startTime": 1674255700476,
  "endTime": 1674255700941,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Cross-compile the app for musl to create a statically-linked binary for alpine.\nFROM --platform=$BUILDPLATFORM rust:1.57.0 AS rust\nARG TARGETPLATFORM\nRUN case \"$TARGETPLATFORM\" in \\\n      \"linux/arm/v7\") echo armv7-unknown-linux-musleabihf > /rust_target.txt ;; \\\n      \"linux/arm/v6\") echo arm-unknown-linux-musleabi > /rust_target.txt ;; \\\n      *) exit 1 ;; \\\n    esac\nRUN rustup target add $(cat /rust_target.txt)\nRUN apt-get update && apt-get -y --no-install-recommends install binutils-arm-linux-gnueabihf && rm -rf /var/lib/apt/lists/*;\nWORKDIR /app\nCOPY .cargo ./.cargo\nCOPY Cargo.toml Cargo.lock .rustfmt.toml ./\nCOPY src ./src\nRUN cargo build --release --target $(cat /rust_target.txt)\n# Move the binary to a location free of the target since that is not available in the next stage.\nRUN cp target/$(cat /rust_target.txt)/release/normally-closed .\n\n\nFROM alpine:3.12\nENV \\\n    # Show full backtraces for crashes.\n    RUST_BACKTRACE=full\nRUN apk add --no-cache \\\n      tini \\\n    && rm -rf /var/cache/* \\\n    && mkdir /var/cache/apk\nWORKDIR /app\nCOPY --from=rust /app/normally-closed ./\n\nENTRYPOINT [\"/sbin/tini\", \"--\"]\nCMD [\"/app/normally-closed\", \"--http-port\", \"80\", \"/config/config.toml\"]\n\nEXPOSE 80\nHEALTHCHECK --interval=1m --timeout=3s \\\n  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1\n"
}