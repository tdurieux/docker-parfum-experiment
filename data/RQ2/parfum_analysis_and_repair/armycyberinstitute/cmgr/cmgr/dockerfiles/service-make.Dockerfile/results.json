{
  "startTime": 1674255132504,
  "endTime": 1674255133524,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS base\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential && rm -rf /var/lib/apt/lists/*;\n\nRUN groupadd -r app && useradd -r -d /app -g app app\nRUN install -d -m 0700 /challenge\n\nENV PORT=5000\n# End of shared layers for all flask challenges\n\nCOPY Dockerfile packages.txt* ./\nRUN if [ -f packages.txt ]; then apt-get update && xargs -a packages.txt apt-get install -y; fi\n\nCOPY . /app\nWORKDIR /app\n\n# End of share layers for all builds of the same flask challenge\nFROM base AS challenge\n\nARG FLAG_FORMAT\nARG FLAG\nARG SEED\n\nRUN make main\nRUN make artifacts.tar.gz && mv artifacts.tar.gz /challenge || true\nRUN make metadata.json && mv metadata.json /challenge\nRUN make sanitize || true\n\nRUN chown -R app:app /app\n\nUSER app:app\nCMD make run\n\nEXPOSE 5000\n# PUBLISH 5000 AS service\n"
}