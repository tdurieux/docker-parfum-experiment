{
  "startTime": 1674254739823,
  "endTime": 1674254740995,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 37,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS base\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir flask\nRUN groupadd -r flask && useradd -r -d /app -g flask flask\n\nENV FLASK_RUN_HOST=0.0.0.0\nENV FLASK_RUN_PORT=5000\n\n# End of shared layers for all flask challenges\n\nCOPY Dockerfile packages.txt* ./\nRUN if [ -f packages.txt ]; then apt-get update && xargs -a packages.txt apt-get install -y; fi\n\nCOPY Dockerfile requirements.txt* ./\nRUN if [ -f requirements.txt ]; then \\\n pip3 install --no-cache-dir -r requirements.txt; fi\n\nCOPY --chown=flask:flask . /app\n\n# End of share layers for all builds of the same flask challenge\nFROM base AS challenge\n\nARG FLAG\nARG SEED\n\nRUN install -d -m 0700 /challenge && \\\n    echo \"{\\\"flag\\\":\\\"$FLAG\\\"}\" > /challenge/metadata.json\n\nUSER flask:flask\n\nRUN sed -i -e \"s|{{flag}}|$FLAG|g\"                                           \\\n           -e \"s|{{secret_key}}|$(echo $FLAG | sha256sum | cut -d' ' -f1)|g\" \\\n           -e \"s|{{seed}}|$SEED|g\"                                           \\\n        /app/app.py\n\nWORKDIR /app\nCMD flask run\n\nEXPOSE 5000\n# PUBLISH 5000 AS http\n"
}