{
  "startTime": 1674221043738,
  "endTime": 1674221044645,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 151
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 164
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###\n# Customizable Dockefile.\n#\n# Since Amphoreas requires a JDBC driver for each database and we can't ship them\n# on the distribution, it's required that you create your own amphoreas images.\n#\n# You can also set the environment variables to configure your images.\n#\n# When deploying the image to Kubernetes/OpenShift, you can then use secrets or config maps.\n#\n# To build the image:\n#\n# podman build -f extras/docker/Dockerfile -t amforeas/amforeas-openjdk-11 .\n#\n# Then run the container using:\n#\n# podman run -i --rm -p 8080:8080 -p 8443:8443 amforeas/amforeas-openjdk-11\n#\n###\n\nFROM openjdk:11-jre-slim-buster\n\nARG AMFOREAS_VERSION=1.0.0\nARG RUN_JAVA_VERSION=1.3.7\n\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends curl unzip \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && mkdir /deployments \\\n    && chown 1001 /deployments \\\n    && chmod \"g+rwX\" /deployments \\\n    && chown 1001:root /deployments \\\n    && curl -f https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \\\n    && chown 1001 /deployments/run-java.sh \\\n    && chmod 540 /deployments/run-java.sh \\\n    && curl -f https://github.com/Eldelshell/amforeas/releases/download/v${AMFOREAS_VERSION}/amforeas-${AMFOREAS_VERSION}-distribution.zip -o /deployments/amforeas.zip \\\n    && unzip /deployments/amforeas.zip -d /deployments/ \\\n    && rm /deployments/amforeas.zip\n\n###\n#\n# JDBC Driver (it has to be the .jar file)\n#\n# ADD ./postgresql-42.2.12.jar /deployments/amforeas/lib/\n#\n###\n\nENV JAVA_MAIN_CLASS=\"amforeas.AmforeasJetty\"\nENV JAVA_CLASSPATH=\"./amforeas/lib/*:./amforeas/etc\"\nENV JAVA_OPTIONS=\"\"\n\n###\n#\n# Override default configuration here\n#\n# ENV AMFOREAS_SERVER_ROOT=/myApp/*\n# ENV AMFOREAS_SERVER_HOST=0.0.0.0\n# ENV AMFOREAS_SERVER_HTTP_PORT=8080\n# ENV AMFOREAS_SERVER_THREADS_MIN=10\n# ENV AMFOREAS_SERVER_THREADS_MAX=100\n#\n# Setup SSL (optional)\n# ENV AMFOREAS_SERVER_HTTPS_PORT=8443\n# ENV AMFOREAS_SERVER_HTTPS_JKS=/deployment/etc/mycerts.jks\n# ENV AMFOREAS_SERVER_HTTPS_JKS_PASSWORD=123456 (can be a secret)\n# ADD /local/source/mycerts.jks ${AMFOREAS_SERVER_HTTPS_JKS}\n#\n# For example for PostgreSQL:\n#\n# ENV AMFOREAS_ALIAS_LIST=alias5\n# ENV AMFOREAS_ALIAS5_JDBC_DRIVER=POSTGRESQL\n# ENV AMFOREAS_ALIAS5_JDBC_USERNAME=sa2 (can be a secret)\n# ENV AMFOREAS_ALIAS5_JDBC_PASSWORD=sa2 (can be a secret)\n# ENV AMFOREAS_ALIAS5_JDBC_DATABASE=foo_database\n# ENV AMFOREAS_ALIAS5_JDBC_HOST=my_postgresql_service\n# ENV AMFOREAS_ALIAS5_JDBC_PORT=5432\n#\n###\n\nEXPOSE 8080 8443\nUSER 1001\n\nENTRYPOINT [ \"/deployments/run-java.sh\" ]"
}