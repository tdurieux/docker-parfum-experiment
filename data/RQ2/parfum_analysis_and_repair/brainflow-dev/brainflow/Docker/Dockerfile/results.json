{
  "startTime": 1674249873730,
  "endTime": 1674249874536,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 0,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 0,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 0,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 0,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Prerequisites\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get -qq update && \\\n apt-get install --no-install-recommends -yqq dirmngr gnupg apt-transport-https ca-certificates software-properties-common && \\\napt-add-repository ppa:apt-fast/stable -y && \\\napt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 && \\\napt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && \\\necho \"deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/\" | tee /etc/apt/sources.list.d/r-base.list && \\\necho \"deb https://download.mono-project.com/repo/ubuntu vs-bionic main\" | tee /etc/apt/sources.list.d/mono-official-vs.list && \\\napt-get -qq update && \\\n apt-get -yqq --no-install-recommends install apt-fast && \\\necho debconf apt-fast/maxdownloads string 16 | debconf-set-selections && \\\necho debconf apt-fast/dlflag boolean true | debconf-set-selections && \\\necho debconf apt-fast/aptmanager string apt-get | debconf-set-selections && \\\napt-fast -yqq upgrade && rm -rf /var/lib/apt/lists/*;\n# Installing Dependencies\nRUN apt-fast -yqq install python3 python3-pip python3-venv openjdk-13-jdk git curl wget build-essential cmake python3-jira r-base rustc cargo nuget nuget mono-devel mono-complete monodevelop libxml2-dev libbluetooth-dev libdbus-1-dev\nRUN mkdir -p /root/local/bin\n\nWORKDIR /root/local/bin\n# Installing Maven and Julia\nRUN curl -f \"https://miroir.univ-lorraine.fr/apache/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz\" -o maven.tar.gz\nRUN mkdir -p maven\nRUN tar xzf maven.tar.gz -C ./maven && rm maven.tar.gz\nRUN export PATH=$PATH:/root/local/bin/maven/apache-maven-3.6.3/bin\nRUN wget \"https://julialang-s3.julialang.org/bin/linux/x64/1.5/julia-1.5.3-linux-x86_64.tar.gz\"\nRUN mkdir -p julia\nRUN tar xf julia-1.5.3-linux-x86_64.tar.gz -C ./julia && rm julia-1.5.3-linux-x86_64.tar.gz\nRUN export PATH=$PATH:/root/local/bin/julia/julia-1.5.3/bin\n\n# Install useful python packages not required by BrainFlow\nRUN python3 -m pip install scipy pandas matplotlib mne jupyterlab notebook opencv-python pyriemann\n\nWORKDIR /root\nARG checkout_id\n# Compile\nRUN git clone \"https://github.com/brainflow-dev/brainflow.git\"\nWORKDIR /root/brainflow\nRUN if [ -z \"${checkout_id}\" ]; then git checkout \"${checkout_id}\"; fi\nRUN python3 ./tools/build.py --use-openmp --bluetooth --ble\nENV LD_LIBRARY_PATH=/root/brainflow/installed_linux/lib/\n\n# Python Binding\nWORKDIR /root/brainflow\nRUN python3 -m pip install --user virtualenv\nWORKDIR /root/brainflow/python_package\nRUN python3 -m pip install -U .\n\nWORKDIR /root/brainflow/\n# C# Binding\nRUN nuget restore csharp_package/brainflow/brainflow.sln\nRUN xbuild csharp_package/brainflow/brainflow.sln\n\n# Java Binding\nWORKDIR /root/brainflow/java_package/brainflow\nRUN /root/local/bin/maven/apache-maven-3.6.3/bin/mvn package\n\n# Julia Bindings\nWORKDIR /root/brainflow/julia_package/brainflow\nRUN /root/local/bin/julia/julia-1.5.3/bin/julia -e \"import Pkg; Pkg.instantiate()\"\nRUN /root/local/bin/julia/julia-1.5.3/bin/julia -e \"import Pkg; Pkg.activate()\"\n\n# R Binding\nWORKDIR /root/brainflow/r_package/brainflow\nRUN R --vanilla -e 'install.packages(\"knitr\", repos=\"http://cran.us.r-project.org\")'\nRUN R --vanilla -e 'install.packages(\"reticulate\", repos=\"http://cran.us.r-project.org\")'\nRUN R CMD build .\n\n# Rust Binding\nWORKDIR /root/brainflow/rust_package/brainflow\nRUN cargo build\n\nWORKDIR /root/brainflow\n"
}