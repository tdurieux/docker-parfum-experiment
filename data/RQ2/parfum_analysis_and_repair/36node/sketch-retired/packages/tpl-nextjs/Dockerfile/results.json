{
  "startTime": 1674218606921,
  "endTime": 1674218608077,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 39,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM zzswang/docker-nginx-react:v0.10.7\n\n# ENV DEBUG=off \\\n#   NODE_ENV=production \\\n#   APP_PORT=80\n\n# COPY . /app\n\n# FROM mhart/alpine-node:base\n# WORKDIR /app\n# EXPOSE 80\n# CMD [\"node_modules/.bin/next\", \"start\"]\n\n# Do the npm install or yarn install in the full image\nFROM mhart/alpine-node AS builder\nWORKDIR /app\nCOPY package.json .\nRUN yarn install && yarn cache clean;\nCOPY . .\nRUN yarn build && yarn --production && yarn cache clean;\n\n# # And then copy over node_modules, etc from that stage to the smaller base image\nFROM mhart/alpine-node:base\nWORKDIR /app\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/build ./build\nCOPY --from=builder /app/next.config.js ./next.config.js\nCOPY --from=builder /app/public ./public\nEXPOSE 80\nCMD [\"node_modules/.bin/next\", \"start\", \"-p\", \"80\"]\n"
}