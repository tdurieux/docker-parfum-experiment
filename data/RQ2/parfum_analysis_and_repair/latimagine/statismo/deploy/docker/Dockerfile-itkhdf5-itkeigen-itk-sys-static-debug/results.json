{
  "startTime": 1674252672937,
  "endTime": 1674252674087,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 114
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 106
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nARG git_branch=develop\n\nRUN apt-get update && apt-get install --no-install-recommends -y apt-transport-https ca-certificates gnupg software-properties-common wget && rm -rf /var/lib/apt/lists/*;\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | apt-key add -\n\nRUN apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main' && apt-get update\n\nRUN apt-get install --no-install-recommends -y git cmake tar mesa-common-dev freeglut3-dev build-essential && rm -rf /var/lib/apt/lists/*;\n\n# ITK system\nWORKDIR \"/usr/src/\"\nRUN git clone https://github.com/InsightSoftwareConsortium/ITK.git --branch v5.0.0 /usr/src/itk\nWORKDIR \"/usr/src/itk\"\nRUN mkdir build\nWORKDIR \"/usr/src/itk/build/\"\nRUN cmake .. -DCMAKE_INSTALL_PREFIX=/usr/src/itk/dist -DCMAKE_BUILD_TYPE=Debug -DBUILD_SHARED_LIBS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_TESTING=OFF -DITK_BUILD_DEFAULT_MODULES=ON \\\n  -DModule_ITKReview=ON -DITK_LEGACY_REMOVE=ON -DITK_USE_SYSTEM_HDF5=OFF -DITK_USE_SYSTEM_EIGEN=OFF\nRUN make -j4\nRUN make install\n\n# Statismo\nRUN git clone https://github.com/kenavolic/statismo --branch $git_branch /usr/src/statismo\n\nWORKDIR \"/usr/src/statismo\"\nRUN mkdir build\nWORKDIR \"/usr/src/statismo/build\"\n\nRUN cmake ../superbuild -DCMAKE_INSTALL_PREFIX=/usr/src/statismo/dist -DBUILD_TYPE=Debug -DBUILD_SHARED_LIBS=OFF -DBUILD_WRAPPING=OFF -DBUILD_DOCUMENTATION=OFF -DBUILD_CLI_TOOLS=OFF -DBUILD_CLI_TOOLS_DOC=OFF \\\n  -DVTK_SUPPORT=OFF -DUSE_SYSTEM_ITK=ON -DUSE_ITK_EIGEN=ON -DUSE_ITK_HDF5=ON -DITK_DIR=/usr/src/itk/dist/lib/cmake/ITK-5.0/\n\nRUN make -j4\n\nWORKDIR \"/usr/src/statismo/build/Statismo-build\"\n\nRUN make install\n\n# Tests\nRUN ctest\n\n# Test app\nWORKDIR \"/usr/src\"\nRUN mkdir statismo-demo\nWORKDIR \"/usr/src/statismo-demo\"\nRUN echo 'cmake_minimum_required(VERSION 3.15)\\nproject(demo LANGUAGES CXX VERSION 0.1.0)\\nfind_package(statismo REQUIRED)\\ninclude(${STATISMO_USE_FILE})\\nadd_executable(demo main.cpp)\\ntarget_link_libraries(demo ${STATISMO_LIBRARIES} ${ITK_LIBRARIES})\\n' > CMakeLists.txt\nRUN echo \"#include \\\"statismo/ITK/itkStandardMeshRepresenter.h\\\"\\n#include <iostream>\\nint main() {\\nauto itkrep = itk::StandardMeshRepresenter<float, 3>::New();\\nstd::cout << \\\"itk rep: \\\" << itkrep << std::endl;\\nreturn 0;}\\n\" > main.cpp\nRUN mkdir build\nWORKDIR \"/usr/src/statismo-demo/build\"\nRUN cmake .. -Dstatismo_DIR=/usr/src/statismo/dist/lib/cmake/statismo\nRUN make\nRUN ./demo\n"
}