{
  "startTime": 1674250434675,
  "endTime": 1674250435525,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nRUN apt-get update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \\\n  DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n    build-essential \\\n    curl \\\n    git-core \\\n    libcurl4-openssl-dev \\\n    libreadline-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    libyaml-dev \\\n    redis-server \\\n    maven \\\n    mininet \\\n    lsof \\\n    openjdk-7-jdk \\\n    python2.7-dev \\\n    python-setuptools \\\n    libsqlite3-dev \\\n    libpcap-dev \\\n    zlib1g-dev && \\\n    curl -f -O http://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p645.tar.gz && \\\n    tar -zxvf ruby-2.0.0-p645.tar.gz && \\\n    cd ruby-2.0.0-p645 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-install-doc && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -r ruby-2.0.0-p645 ruby-2.0.0-p645.tar.gz && \\\n    echo 'gem: --no-document' > /usr/local/etc/gemrc && rm -rf /var/lib/apt/lists/*;\n\n#Install Bundler for each version of ruby\nRUN \\\n  echo 'gem: --no-rdoc --no-ri' >> /.gemrc && \\\n  gem install bundler\n\n\nENV JAVA_HOME /usr/lib/jvm/java-7-openjdk-amd64\nENV HOME /root\nWORKDIR /root\n\nRUN easy_install pip\nRUN pip install --no-cache-dir msgpack-python==0.4.6 redis==2.10.3 futures==2.2.0 mock==1.0.1 coverage==4.0a5 kazoo==2.2.1\n\nRUN git clone https://github.com/o3project/odenos.git\nRUN cd odenos && mvn install && bundle install && \\\n    cd etc && echo \"PROCESS romgr2,python,apps/python/sample_components\" >> odenos.conf\n\nRUN git clone http://github.com/trema/trema-edge.git\nRUN cd trema-edge && git checkout -b 148acb9cd7f654020098a5e769bfedad273a687b && bundle install && rake\n\nRUN curl -f -O http://neo4j.com/artifact.php?name=neo4j-community-2.2.3-unix.tar.gz && \\\n    tar -zxvf artifact.php?name=neo4j-community-2.2.3-unix.tar.gz && \\\n    rm -r artifact.php?name=neo4j-community-2.2.3-unix.tar.gz\n\nRUN echo \"service redis-server restart\" >> ~/.bashrc\nRUN echo \"service openvswitch-switch restart\" >> ~/.bashrc\nRUN echo \"org.neo4j.server.webserver.address=0.0.0.0\" >> ./neo4j-community-2.2.3/conf/neo4j-server.properties\nRUN sed -i -e \"s/dbms.security.auth_enabled=true/dbms.security.auth_enabled=false/g\" ~/neo4j-community-2.2.3/conf/neo4j-server.properties\nRUN echo \"neo4j-community-2.2.3/bin/neo4j start\" >> ~/.bashrc\n"
}