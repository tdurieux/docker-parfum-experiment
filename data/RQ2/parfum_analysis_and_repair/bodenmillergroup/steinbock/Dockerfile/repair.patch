diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bodenmillergroup/steinbock/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bodenmillergroup/steinbock/Dockerfile/repaired.Dockerfile
index fe3ab87..794d5f1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bodenmillergroup/steinbock/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bodenmillergroup/steinbock/Dockerfile/repaired.Dockerfile
@@ -16,7 +16,7 @@ ENV DEBIAN_FRONTEND=noninteractive PYTHONDONTWRITEBYTECODE="1" PYTHONUNBUFFERED=
 
 RUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub && \
     apt-get update && \
-    apt-get install -y build-essential git locales python3.8 python3.8-dev python3.8-venv
+    apt-get install --no-install-recommends -y build-essential git locales python3.8 python3.8-dev python3.8-venv && rm -rf /var/lib/apt/lists/*;
 
 RUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen
 ENV LANG="en_US.UTF-8" LANGUAGE="en_US:en" LC_ALL="en_US.UTF-8"
@@ -38,7 +38,7 @@ RUN mkdir /data && \
 
 RUN USER=steinbock && \
     GROUP=steinbock && \
-    curl -SsL "https://github.com/boxboat/fixuid/releases/download/v${FIXUID_VERSION}/fixuid-${FIXUID_VERSION}-linux-amd64.tar.gz" | tar -C /usr/local/bin -xzf - && \
+    curl -f -SsL "https://github.com/boxboat/fixuid/releases/download/v${FIXUID_VERSION}/fixuid-${FIXUID_VERSION}-linux-amd64.tar.gz" | tar -C /usr/local/bin -xzf - && \
     chmod 4755 /usr/local/bin/fixuid && \
     mkdir -p /etc/fixuid
 COPY fixuid.yml /etc/fixuid/config.yml
@@ -46,14 +46,14 @@ COPY fixuid.yml /etc/fixuid/config.yml
 # ilastik
 
 RUN mkdir /opt/ilastik && \
-    curl -SsL "https://files.ilastik.org/${ILASTIK_BINARY}" | tar -C /opt/ilastik -xjf - --strip-components=1
+    curl -f -SsL "https://files.ilastik.org/${ILASTIK_BINARY}" | tar -C /opt/ilastik -xjf - --strip-components=1
 
 # cellprofiler
 
-RUN apt-get install -y libmysqlclient-dev libnotify-dev libsdl2-dev libwebkitgtk-3.0 openjdk-11-jdk-headless
+RUN apt-get install --no-install-recommends -y libmysqlclient-dev libnotify-dev libsdl2-dev libwebkitgtk-3.0 openjdk-11-jdk-headless && rm -rf /var/lib/apt/lists/*;
 ENV JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64"
 
-RUN curl -SsO https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04/wxPython-4.1.0-cp38-cp38-linux_x86_64.whl && \
+RUN curl -f -SsO https://extras.wxpython.org/wxPython4/extras/linux/gtk3/ubuntu-20.04/wxPython-4.1.0-cp38-cp38-linux_x86_64.whl && \
     python -m pip install --upgrade numpy wheel wxPython-4.1.0-cp38-cp38-linux_x86_64.whl && \
     rm wxPython-4.1.0-cp38-cp38-linux_x86_64.whl
 
@@ -62,7 +62,7 @@ RUN python -m pip install --upgrade "cellprofiler==${CELLPROFILER_VERSION}"
 # cellprofiler plugins
 
 RUN mkdir /opt/cellprofiler_plugins && \
-    curl -SsL "https://github.com/BodenmillerGroup/ImcPluginsCP/archive/refs/tags/v${CELLPROFILER_PLUGINS_VERSION}.tar.gz" | tar -C /opt/cellprofiler_plugins -xzf - "ImcPluginsCP-${CELLPROFILER_PLUGINS_VERSION}/plugins/" --strip-components=2
+    curl -f -SsL "https://github.com/BodenmillerGroup/ImcPluginsCP/archive/refs/tags/v${CELLPROFILER_PLUGINS_VERSION}.tar.gz" | tar -C /opt/cellprofiler_plugins -xzf - "ImcPluginsCP-${CELLPROFILER_PLUGINS_VERSION}/plugins/" --strip-components=2
 
 # steinbock
 
@@ -74,11 +74,11 @@ RUN python -m pip install --upgrade -r /app/steinbock/requirements_deepcell${TEN
 ENV TF_CPP_MIN_LOG_LEVEL="2" NO_AT_BRIDGE="1"
 
 RUN mkdir -p /opt/keras/models && \
-    curl -SsL https://deepcell-data.s3-us-west-1.amazonaws.com/saved-models/MultiplexSegmentation-9.tar.gz | tar -C /opt/keras/models -xzf -
+    curl -f -SsL https://deepcell-data.s3-us-west-1.amazonaws.com/saved-models/MultiplexSegmentation-9.tar.gz | tar -C /opt/keras/models -xzf -
 
 COPY conftest.py MANIFEST.in pyproject.toml setup.cfg setup.py /app/steinbock/
 COPY steinbock /app/steinbock/steinbock/
-RUN --mount=source=.git,target=/app/steinbock/.git SETUPTOOLS_SCM_PRETEND_VERSION="${STEINBOCK_VERSION#v}" pip install --no-deps -e "/app/steinbock[all]"
+RUN --mount=source=.git,target=/app/steinbock/.git SETUPTOOLS_SCM_PRETEND_VERSION="${STEINBOCK_VERSION#v}" pip --no-cache-dir install --no-deps -e "/app/steinbock[all]"
 
 COPY entrypoint.sh /app/entrypoint.sh
 RUN chmod +x /app/entrypoint.sh