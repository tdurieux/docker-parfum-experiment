{
  "startTime": 1674246398542,
  "endTime": 1674246399234,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build:\n#  docker build --rm -t dpdk-app-centos ./dpdk-app-centos\n#\n\n\n# -------- Builder stage.\nFROM centos:8\nMAINTAINER Billy McFall <bmcfall@redhat.com>\n\n#\n# Install required packages\n#\n#RUN rpm --import https://mirror.go-repo.io/centos/RPM-GPG-KEY-GO-REPO && curl -s https://mirror.go-repo.io/centos/go-repo.repo | tee /etc/yum.repos.d/go-repo.repo\nRUN dnf groupinstall -y \"Development Tools\"\nRUN dnf module -y install go-toolset\nRUN dnf install -y dnf-plugins-core; dnf -y config-manager --set-enabled powertools\nRUN dnf install -y wget numactl-devel git golang meson ninja-build make\n# Needed by latest DPDK\nRUN pip3 install --no-cache-dir pyelftools\n\n# Debug Tools (if needed):\n#RUN dnf install -y pciutils iproute; yum clean all\n# Uncomment to build DPDK with debug symbols\n#ENV MESONOPTS=\"--buildtype=debug\"\n\n#\n# Download and Build APP-NetUtil\n#\nWORKDIR /root/go/src/\nRUN go get github.com/openshift/app-netutil 2>&1 > /tmp/UserspaceDockerBuild.log || echo \"Can ignore no GO files.\"\n#RUN go get github.com/openshift/app-netutil\nWORKDIR /root/go/src/github.com/openshift/app-netutil\nRUN make c_sample\nRUN cp bin/libnetutil_api.so /lib64/libnetutil_api.so; cp bin/libnetutil_api.h /usr/include/libnetutil_api.h\n\n#\n# Download and Build DPDK\n# Uncomment to select stable branch\n#ENV DPDK_VER 20.11\n#ENV DPDK_DIR /usr/src/dpdk-${DPDK_VER}\n#WORKDIR /usr/src/\n#RUN wget http://fast.dpdk.org/rel/dpdk-${DPDK_VER}.tar.xz\n#RUN tar -xpvf dpdk-${DPDK_VER}.tar.xz\n\n# Uncomment to select upstream branch\nENV DPDK_BRANCH=main\nENV DPDK_DIR /usr/src/dpdk\nRUN git clone --branch ${DPDK_BRANCH} https://github.com/dpdk/dpdk.git ${DPDK_DIR}\n\nWORKDIR ${DPDK_DIR}\n\n#\n# Substitute Testpmd\n#\nWORKDIR ${DPDK_DIR}/app/test-pmd\nCOPY ./dpdk-args.c ./dpdk-args.c\nCOPY ./dpdk-args.h ./dpdk-args.h\nCOPY ./testpmd_eal_init.txt ./testpmd_eal_init.txt\nCOPY ./testpmd_launch_args_parse.txt ./testpmd_launch_args_parse.txt\nCOPY ./testpmd_substitute.sh ./testpmd_substitute.sh\nRUN ./testpmd_substitute.sh\n\n#\n# Substitute l2fwd\n#\nWORKDIR ${DPDK_DIR}/examples/l2fwd\nCOPY ./dpdk-args.c ./dpdk-args.c\nCOPY ./dpdk-args.h ./dpdk-args.h\nCOPY ./l2fwd_eal_init.txt ./l2fwd_eal_init.txt\nCOPY ./l2fwd_parse_args.txt ./l2fwd_parse_args.txt\nCOPY ./l2fwd_substitute.sh ./l2fwd_substitute.sh\nRUN ./l2fwd_substitute.sh\n\n#\n# Substitute l3fwd\n#\nWORKDIR ${DPDK_DIR}/examples/l3fwd\nCOPY ./dpdk-args.c ./dpdk-args.c\nCOPY ./dpdk-args.h ./dpdk-args.h\nCOPY ./l3fwd_eal_init.txt ./l3fwd_eal_init.txt\nCOPY ./l3fwd_parse_args.txt ./l3fwd_parse_args.txt\nCOPY ./l3fwd_substitute.sh ./l3fwd_substitute.sh\nRUN ./l3fwd_substitute.sh\n\n\n#\n# Build\n#\nWORKDIR ${DPDK_DIR}\nRUN meson -Dexamples=l3fwd,l2fwd ${MESONOPTS} build && cd build && ninja\n\nRUN cp build/examples/dpdk-l3fwd /usr/bin/l3fwd\nRUN cp build/examples/dpdk-l2fwd /usr/bin/l2fwd\nRUN cp build/app/dpdk-testpmd /usr/bin/testpmd\n\n# -------- Import stage.\n# Docker 17.05 or higher\n# BEGIN\nFROM centos:8\nCOPY --from=0 /usr/bin/l2fwd /usr/bin/l2fwd\nCOPY --from=0 /usr/bin/l3fwd /usr/bin/l3fwd\nCOPY --from=0 /usr/bin/testpmd /usr/bin/testpmd\nCOPY --from=0 /lib64/libnetutil_api.so /lib64/libnetutil_api.so\nCOPY --from=0 /usr/lib64/libnuma.so.1 /usr/lib64/libnuma.so.1\n# Set default app\nRUN ln -s /usr/bin/l3fwd /usr/bin/dpdk-app\n# END\n\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"dpdk-app\"]\n"
}