{
  "startTime": 1674218581227,
  "endTime": 1674218582194,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Inspirational references\n# https://medium.com/swlh/dockerizing-a-react-application-with-docker-and-nginx-19e88ef8e99a\n# https://medium.com/thepeaklab/how-to-deploy-a-react-application-to-production-with-docker-multi-stage-builds-4da347f2d681\n\nFROM node:alpine as build\n\n# build application\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\nENV PATH /usr/src/app/node_modules/.bin:$PATH\nCOPY package.json /usr/src/app/package.json\nRUN npm install --silent && npm cache clean --force;\nRUN npm install react-scripts -g --silent && npm cache clean --force;\nCOPY . /usr/src/app\nRUN npm run build\n\n# set up production environment\nFROM nginx:alpine\n\nARG nginx_port=8080\nARG backend_url=http://backend-server:5000\n\nENV NGINX_PORT $nginx_port\nENV BACKEND_URL $backend_url\n\nEXPOSE $NGINX_PORT\n\nCOPY --from=build /usr/src/app/build /usr/share/nginx/html\n\nRUN rm /etc/nginx/conf.d/default.conf && \\\n    rm /etc/nginx/nginx.conf\nCOPY nginx/nginx.conf /etc/nginx/nginx.conf\nRUN mkdir /etc/nginx/templates/\nCOPY nginx/default.conf.template /etc/nginx/templates/default.conf.template\n\nRUN chown -R nginx:nginx /usr/share/nginx/html && chmod -R 755 /usr/share/nginx/html && \\\n        chown -R nginx:nginx /etc/nginx/conf.d\n\n\nUSER nginx\n\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}