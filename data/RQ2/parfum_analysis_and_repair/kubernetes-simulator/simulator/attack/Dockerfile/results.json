{
  "startTime": 1674215235903,
  "endTime": 1674215236687,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\n\n# We're using sh not bash at this point\n# hadolint ignore=DL4006\nRUN apt-get update                                                                \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install  -y --no-install-recommends \\\n    curl                                                                          \\\n    software-properties-common \\\n    && curl -f -sL https://deb.nodesource.com/setup_13.x | bash - \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends  \\\n    bash                                                                          \\\n    bash-completion                                                               \\\n    ca-certificates                                                               \\\n    gettext-base                                                                  \\\n    hping3                                                                        \\\n    iproute2                                                                      \\\n    jq                                                                            \\\n    man-db                                                                        \\\n    nmap                                                                          \\\n    nodejs                                                                        \\\n    openssh-client \\\n && rm -rf /var/lib/apt/lists/*\n\n## Install Goss\nENV GOSS_VERSION v0.3.7\nRUN curl -f -sL https://github.com/aelsabbahy/goss/releases/download/${GOSS_VERSION}/goss-linux-amd64 \\\n         -o /usr/local/bin/goss \\\n    && chmod +rx /usr/local/bin/goss\n\n# Install YQ\nRUN curl -f -sL https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 \\\n      -o /usr/local/bin/yq \\\n    && chmod +x /usr/local/bin/yq\n\nENV NODE_ENV production\nRUN mkdir /scenario-tools\nWORKDIR /scenario-tools\nCOPY ./tools/scenario-tools .\nRUN npm install --production \\\n    && npm prune \\\n    && npm link && npm cache clean --force;\n\nRUN mkdir /attack\nWORKDIR /attack\nCOPY ./attack/ .\n\n# Add login message\nCOPY ./attack/scripts/motd /usr/local/bin/motd\nCOPY ./attack/scripts/bashrc /etc/bash.bashrc\n\nCOPY --chown=1000 ./launch-files/bash_aliases /root/.bash_aliases\nCOPY --chown=1000 ./launch-files/inputrc /root/.inputrc\n\nRUN printf \"                    \\n\\\nif [ -f ~/.bash_aliases ]; then \\n\\\n    . ~/.bash_aliases           \\n\\\nfi                              \\n\\\n\" >> /root/.bashrc\n\n# This container is root intentionally\n\nCMD [\"./scripts/entrypoint.sh\"]\n"
}