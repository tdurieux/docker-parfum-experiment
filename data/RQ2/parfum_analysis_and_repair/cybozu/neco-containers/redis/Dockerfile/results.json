{
  "startTime": 1674217340703,
  "endTime": 1674217341378,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 67
      }
    }
  ],
  "repairedDockerfile": "# Redis container\n# Refer to this Dockerfile: https://github.com/docker-library/redis/blob/master/6.0/Dockerfile\n\n# Stage1: build from source\nFROM quay.io/cybozu/ubuntu-dev:20.04 as build\n\nARG GOSU_VERSION=1.12\nARG REDIS_VERSION=6.2.6\nARG REDIS_DOWNLOAD_URL=http://download.redis.io/releases/redis-${REDIS_VERSION}.tar.gz\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends wget pkg-config \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64\" \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true\n\nRUN wget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\" \\\n    && mkdir -p /usr/src/redis \\\n    && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \\\n# disable Redis protected mode [1] as it is unnecessary in context of Docker\n# (ports are not automatically exposed when running inside Docker, but rather explicitly by specifying -p / -P)\n# [1]: https://github.com/redis/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da\n    && sed -ri 's!^( *createBoolConfig[(]\"protected-mode\",.*, *)1( *,.*[)],)$!\\10\\2!' /usr/src/redis/src/config.c \\\n# for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently \"if you specify any argument to redis-server, [it assumes] you are going to specify everything\"\n# see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840\n# (more exactly, this makes sure the default behavior of \"save on SIGTERM\" stays functional by default)\n    \\\n# https://github.com/jemalloc/jemalloc/issues/467 -- we need to patch the \"./configure\" for the bundled jemalloc to match how Debian compiles, for compatibility\n# (also, we do cross-builds, so we need to embed the appropriate \"--build=xxx\" values to that \"./configure\" invocation)\n# https://salsa.debian.org/debian/jemalloc/-/blob/c0a88c37a551be7d12e4863435365c9a6a51525f/debian/rules#L8-23\n    && sed -ri 's!cd jemalloc && ./configure !&'\"--build=x86_64-linux-gnu --with-lg-page=12 --with-lg-hugepage=21\"' !' /usr/src/redis/deps/Makefile \\\n    \\\n    && BUILD_TLS=yes make -C /usr/src/redis PREFIX=/usr/local/redis -j \"$(nproc)\" all \\\n    && BUILD_TLS=yes make -C /usr/src/redis PREFIX=/usr/local/redis install && rm -rf /usr/src/redis\n\n# Stage2: setup runtime container\nFROM quay.io/cybozu/ubuntu:20.04\n\nRUN groupadd -g 10000 -r redis && \\\n    useradd -r -u 10000 -g redis redis && \\\n    mkdir /data && chown redis:redis /data\n\nVOLUME /data\nWORKDIR /data\n\nCOPY --from=build /usr/local/redis /usr/local/redis\nCOPY --from=build /usr/src/redis/COPYING /usr/local/redis/COPYING\n\nENV PATH=/usr/local/redis/bin:\"$PATH\"\n\nEXPOSE 6379\nUSER 10000:10000\n\nENTRYPOINT [\"redis-server\"]\n"
}