{
  "startTime": 1674248739400,
  "endTime": 1674248740126,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# chrony container\n\n# Stage1: build from source\nFROM quay.io/cybozu/ubuntu-dev:20.04 AS build\nARG CHRONY_VERSION=4.2\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN mkdir /work \\\n    && curl -sSLf https://download.tuxfamily.org/chrony/chrony-${CHRONY_VERSION}.tar.gz | \\\n        tar zxf - -C /work/ \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends libedit-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /work/chrony-${CHRONY_VERSION}\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --exec-prefix=/usr/local/chrony --with-pidfile=/run/chrony/chrony.pid \\\n    && make \\\n    && make install \\\n    && cp ./COPYING /usr/local/chrony/copyright\n\n\n# Stage2: setup runtime container\nFROM quay.io/cybozu/ubuntu:20.04\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends libedit2 \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build /usr/local/chrony /usr/local/chrony\nCOPY chrony.conf.example /etc/chrony.conf\n\nVOLUME /var/lib/chrony/\n\nEXPOSE 123/udp\n\nENV PATH=/usr/local/chrony/bin:\"$PATH\"\n\nENTRYPOINT [ \"/usr/local/chrony/sbin/chronyd\", \"-d\"]\n"
}