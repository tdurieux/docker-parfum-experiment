{
  "startTime": 1674251200312,
  "endTime": 1674251201110,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build on an old Fedora version on purpose, to maximize compatibility:\nFROM fmanbuildsystem/fedora:25\n\nARG requirements\n\nARG python_version=3.6.12\n# List from https://github.com/pyenv/pyenv/wiki#suggested-build-environment:\nARG python_build_deps=\"make gcc zlib-devel bzip2 bzip2-devel readline-devel sqlite sqlite-devel openssl-devel tk-devel libffi-devel xz-devel\"\n\nRUN dnf -y update && dnf clean all\n\n# Install pyenv:\nRUN dnf install -y curl git\nENV PYENV_ROOT /root/.pyenv\nENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\nRUN curl -f https://pyenv.run | bash\nRUN pyenv update\n\n# Install Python:\n# findutils contains xargs, which is needed for the next step:\nRUN dnf install -y findutils\nRUN echo $python_build_deps | xargs dnf install -y\nRUN CONFIGURE_OPTS=--enable-shared pyenv install $python_version && \\\n    pyenv global $python_version && \\\n    pyenv rehash\n\n# Install fpm:\nRUN dnf install -y ruby-devel gcc make rpm-build libffi-devel && \\\n    gem install --no-document fpm\n\nWORKDIR /root/${app_name}\n\n# Install Python requirements:\nADD *.txt /tmp/requirements/\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r \"/tmp/requirements/${requirements}\"\nRUN rm -rf /tmp/requirements/\n\n# Welcome message, displayed by ~/.bashrc:\nADD motd /etc/motd\n\nADD .bashrc /root/.bashrc\n\nADD gpg-agent.conf /root/.gnupg/gpg-agent.conf\n# Avoid GPG warning \"unsafe permissions\":\nRUN chmod -R 600 /root/.gnupg\nADD private-key.gpg public-key.gpg /tmp/\nRUN dnf install -y gpg rpm-sign && \\\n    gpg -q --batch --yes --passphrase ${gpg_pass} --import /tmp/private-key.gpg /tmp/public-key.gpg && \\\n    rpm --import /tmp/public-key.gpg && \\\n    rm /tmp/private-key.gpg /tmp/public-key.gpg\n\nADD .rpmmacros /root\n\nRUN dnf install -y createrepo_c\n\nENTRYPOINT [\"/bin/bash\"]"
}