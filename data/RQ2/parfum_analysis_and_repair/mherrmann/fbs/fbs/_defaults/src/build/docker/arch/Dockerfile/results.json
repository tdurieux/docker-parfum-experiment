{
  "startTime": 1674253720066,
  "endTime": 1674253721081,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build on :latest because Arch is a rolling release distribution:\nFROM archlinux:latest\n\nARG requirements\n\n# Python 3.7 is the earliest version that won't crash in Arch as of July 2021.\nARG python_version=3.7.11\n# List from https://github.com/pyenv/pyenv/wiki#suggested-build-environment:\nARG python_build_deps=\"base-devel openssl zlib xz git\"\n\nRUN echo 'Server=https://mirror.rackspace.com/archlinux/$repo/os/$arch' > /etc/pacman.d/mirrorlist && \\\n    pacman -Syy\n\n# Install pyenv:\nRUN pacman -S --noconfirm curl git\nENV PYENV_ROOT /root/.pyenv\nENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\nRUN curl -f https://pyenv.run | bash\nRUN pyenv update\n\n# Install Python:\nRUN echo $python_build_deps | xargs pacman -S --noconfirm\nRUN CONFIGURE_OPTS=--enable-shared pyenv install $python_version && \\\n    pyenv global $python_version && \\\n    pyenv rehash\n\n# Install fpm:\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN pacman -S --noconfirm ruby ruby-rdoc && \\\n    export PATH=$PATH:$(ruby -e \"puts Gem.user_dir\")/bin && \\\n    gem update && \\\n    gem install --no-document fpm && rm -rf /root/.gem;\n\nWORKDIR /root/${app_name}\n\n# Install Python dependencies:\nADD *.txt /tmp/requirements/\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r \"/tmp/requirements/${requirements}\"\nRUN rm -rf /tmp/requirements/\n\n# Welcome message, displayed by ~/.bashrc:\nADD motd /etc/motd\n\nADD .bashrc /root/.bashrc\n\n# Import GPG key for code signing the installer:\nADD private-key.gpg public-key.gpg /tmp/\nRUN gpg -q --batch --yes --passphrase ${gpg_pass} --import /tmp/private-key.gpg /tmp/public-key.gpg && \\\n    rm /tmp/private-key.gpg /tmp/public-key.gpg\n\nADD gpg-agent.conf /root/.gnupg/gpg-agent.conf\nRUN gpgconf --kill gpg-agent"
}