diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mherrmann/fbs/fbs/_defaults/src/build/docker/ubuntu/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mherrmann/fbs/fbs/_defaults/src/build/docker/ubuntu/Dockerfile/repaired.Dockerfile
index 3ba9fd2..3057cd5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mherrmann/fbs/fbs/_defaults/src/build/docker/ubuntu/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mherrmann/fbs/fbs/_defaults/src/build/docker/ubuntu/Dockerfile/repaired.Dockerfile
@@ -11,10 +11,10 @@ RUN apt-get update && \
     apt-get upgrade -y
 
 # Install pyenv:
-RUN apt-get install -y curl git
+RUN apt-get install --no-install-recommends -y curl git && rm -rf /var/lib/apt/lists/*;
 ENV PYENV_ROOT /root/.pyenv
 ENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH
-RUN curl https://pyenv.run | bash
+RUN curl -f https://pyenv.run | bash
 RUN pyenv update
 
 # Install Python:
@@ -24,18 +24,18 @@ RUN CONFIGURE_OPTS=--enable-shared pyenv install $python_version && \
     pyenv rehash
 
 # Add missing file libGL.so.1 for PyQt5.QtGui:
-RUN apt-get install libgl1-mesa-glx -y
+RUN apt-get install --no-install-recommends libgl1-mesa-glx -y && rm -rf /var/lib/apt/lists/*;
 
 # fpm:
-RUN apt-get install ruby ruby-dev build-essential -y && \
-    gem install --no-document fpm
+RUN apt-get install --no-install-recommends ruby ruby-dev build-essential -y && \
+    gem install --no-document fpm && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /root/${app_name}
 
 # Install Python requirements:
 ADD *.txt /tmp/requirements/
-RUN pip install --upgrade pip && \
-    pip install -r "/tmp/requirements/${requirements}"
+RUN pip install --no-cache-dir --upgrade pip && \
+    pip install --no-cache-dir -r "/tmp/requirements/${requirements}"
 RUN rm -rf /tmp/requirements/
 
 # Welcome message, displayed by ~/.bashrc:
@@ -47,7 +47,7 @@ ADD .bashrc /root/.bashrc
 ADD gpg-agent.conf gpg.conf /root/.gnupg/
 # Avoid GPG warning "unsafe permissions":
 RUN chmod -R 600 /root/.gnupg/
-RUN apt-get install reprepro gnupg-agent gnupg2 -y
+RUN apt-get install --no-install-recommends reprepro gnupg-agent gnupg2 -y && rm -rf /var/lib/apt/lists/*;
 ADD private-key.gpg public-key.gpg /tmp/
 RUN gpg -q --batch --yes --passphrase ${gpg_pass} --import /tmp/private-key.gpg /tmp/public-key.gpg && \
     rm /tmp/private-key.gpg /tmp/public-key.gpg
\ No newline at end of file