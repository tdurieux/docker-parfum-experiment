{
  "startTime": 1674249276153,
  "endTime": 1674249276641,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "import os\n\nfrom bears.configfiles.DockerfileLintBear import DockerfileLintBear\nfrom coalib.testing.LocalBearTestHelper import verify_local_bear\n\ngood_file = \"\"\"\nFROM ubuntu:14.04\nLABEL MAINTAINER coala\nLABEL Name coala-docker\nLABEL Version 0.1\n\n# Install basic tools\nRUN apt-get -y -qq update\nRUN apt-get -y -qq upgrade\nEXPOSE 5432\nCMD [\"/bin/bash\", \"coala\"]\n\"\"\"\n\n\nbad_file = \"\"\"\nFROM ubuntu:14.04\n\n# Install basic tools\napt-get -y -qq update\napt-get -y -qq upgrade\n\"\"\"\n\n\ngood_file2 = \"\"\"\nFROM ubuntu\nLABEL MAINTAINER coala\nLABEL Name coala-docker\nLABEL Version 0.1\n\nRUN apt-get -y -qq update\nRUN apt-get -y -qq upgrade\nRUN curl -f -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\nEXPOSE 5432\nCMD [\"/usr/bin/node\", \"/var/www/app.js\"]\n\"\"\"\n\n\nbad_file2 = \"\"\"\nFROM ubuntu\n\napt-get -y -qq update\napt-get -y -qq upgrade\ncurl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -\n\"\"\"\n\n\ngood_file3 = \"\"\"\nFROM kali\nLABEL MAINTAINER coala\nLABEL Name coala-docker\nLABEL Version 0.1\nEXPOSE 5432\n\"\"\"\n\n\nbad_file3 = \"\"\"\nFROM kali\nLABEL Name\nLABEL Version\n\"\"\"\n\n\ndef get_testfile_path(filename):\n    return os.path.join(os.path.dirname(__file__),\n                        'dockerfile_lint_test_files',\n                        filename)\n\n\ndefault_rule = get_testfile_path('default_rule.yaml')\n\nsample_rule = get_testfile_path('sample_rule.yaml')\n\n\nDockerfileLintBearTest = verify_local_bear(DockerfileLintBear,\n                                           valid_files=(good_file,),\n                                           invalid_files=(bad_file,))\n\nDockerfileLintBearDefaultRuleTest = verify_local_bear(\n    DockerfileLintBear,\n    valid_files=(good_file2,),\n    invalid_files=(bad_file2,),\n    settings={'dockerfile_lint_rule_file':\n              default_rule})\n\nDockerfileLintBearCustomRuleTest = verify_local_bear(\n    DockerfileLintBear,\n    valid_files=(good_file3,),\n    invalid_files=(bad_file3,),\n    settings={'dockerfile_lint_rule_file':\n              sample_rule})\n"
}