{
  "startTime": 1674216513126,
  "endTime": 1674216514674,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12.0\n\nRUN apk --update-cache upgrade && \\\n    apk add \\\n      bash \\\n      bind-tools \\\n      coreutils \\\n      'curl>=7.58.0-r0' \\\n      'ncurses>=6.0_p20170930-r0' \\\n      procps \\\n      tzdata \\\n      && \\\n    rm -f /var/cache/apk/*\n\n# This variable is set in ci/build.\nARG TARBALL\n\n# Use the statically-compiled version of openssl from\n# https://testssl.sh/\nRUN cd /tmp/ && \\\n    curl -f -L -O https://testssl.sh/${TARBALL} && \\\n    tar xvzf ${TARBALL} && \\\n    mv bin/openssl.Linux.x86_64.static bin/openssl.Linux.x86_64 && \\\n    cp -f bin/openssl.Linux.x86_64 /usr/bin/openssl && \\\n    rm -f ${TARBALL} && \\\n    rm -fr bin/\n\n# Install RFC mapping file.\nRUN curl -f -L -o /etc/mapping-rfc.txt https://testssl.sh/mapping-rfc.txt\n\nENTRYPOINT [\"/testssl.sh\"]\nCMD [\"--help\"]\n\n# testssl.sh creates files here, so use a volume to\n# allow to run container with read-only root filesystem.\nVOLUME /tmp\n"
}