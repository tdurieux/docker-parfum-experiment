diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pypa/warehouse/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pypa/warehouse/Dockerfile/repaired.Dockerfile
index 9626254..ee58245 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pypa/warehouse/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pypa/warehouse/Dockerfile/repaired.Dockerfile
@@ -12,7 +12,7 @@ WORKDIR /opt/warehouse/src/
 RUN set -x \
     && apt-get update \
     && apt-get install --no-install-recommends -y \
-        libjpeg-dev nasm
+        libjpeg-dev nasm && rm -rf /var/lib/apt/lists/*;
 
 # However, we do want to trigger a reinstall of our node.js dependencies anytime
 # our package.json changes, so we'll ensure that we're copying that into our
@@ -24,7 +24,7 @@ COPY package.json package-lock.json .babelrc /opt/warehouse/src/
 # of installed dependencies just because files have been modified.
 RUN set -x \
     && npm install -g gulp-cli \
-    && export CFLAGS="-DPNG_ARM_NEON_OPT=0" && npm ci
+    && export CFLAGS="-DPNG_ARM_NEON_OPT=0" && npm ci && npm cache clean --force;
 
 # Actually copy over our static files, we only copy over the static files to
 # save a small amount of space in our image and because we don't need them. We
@@ -62,7 +62,7 @@ RUN set -x \
     && apt-get update \
     && apt-get install --no-install-recommends -y \
         build-essential libffi-dev libxml2-dev libxslt-dev libpq-dev libcurl4-openssl-dev libssl-dev \
-        $(if [ "$DEVEL" = "yes" ]; then echo 'libjpeg-dev'; fi)
+        $(if [ "$DEVEL" = "yes" ]; then echo 'libjpeg-dev'; fi) && rm -rf /var/lib/apt/lists/*;
 
 # We create an /opt directory with a virtual environment in it to store our
 # application in.