diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opendevstack/ods-project-quickstarters/boilerplates/ds-ml-service/files/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opendevstack/ods-project-quickstarters/boilerplates/ds-ml-service/files/docker/Dockerfile/repaired.Dockerfile
index 7d36126..c99c03a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opendevstack/ods-project-quickstarters/boilerplates/ds-ml-service/files/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opendevstack/ods-project-quickstarters/boilerplates/ds-ml-service/files/docker/Dockerfile/repaired.Dockerfile
@@ -29,17 +29,21 @@ COPY dist/requirements.txt /app
 USER root
 #  In the case of building the docker image from behind a proxy and encountering certificate issues, adding a -k to the curl command can mitigate that, consider however the implications of disabling certificate
 RUN if [[ ${serviceType} == "training" ]]; \
-        then curl -Lv --fail https://repo.anaconda.com/miniconda/Miniconda3-${DSI_MINICONDA_PACKAGE_VERSION}-Linux-x86_64.sh --output ${DSI_MINICONDA_PACKAGE_PATH}; \
+        then \
+        curl -Lv --fail https://repo.anaconda.com/miniconda/Miniconda3-${DSI_MINICONDA_PACKAGE_VERSION}-Linux-x86_64.sh --output ${DSI_MINICONDA_PACKAGE_PATH}; \
             if [[ ! -z ${nexusHostWithBasicAuth} ]]; \
-                then  pip install -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} --upgrade pip && pip install -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} coverage nose; \
-                else pip install --upgrade pip && pip install coverage nose; \
+                then \
+                pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} --upgrade pip && pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} coverage nose; \
+                else pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir coverage nose; \
+            fielse pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir coverage nose; \
             fi \
     fi
 
 USER 1001
 RUN if [[ ! -z ${nexusHostWithBasicAuth} ]]; \
-    then  pip install -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} --upgrade pip && pip install -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} -r requirements.txt; \
-    else pip install --upgrade pip && pip install -r requirements.txt; \
+    then \
+    pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} --upgrade pip && pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} -r requirements.txt; \
+    else pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r requirements.txt; \
     fi
 
 # Copying all the code