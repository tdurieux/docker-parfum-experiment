{
  "startTime": 1674248568115,
  "endTime": 1674248568865,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 144
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 148,
        "columnEnd": 270
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 21,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 50,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 10,
        "columnEnd": 132
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 136,
        "columnEnd": 264
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 38,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos/python-36-centos7:latest\n# If you want to enable the redhat supported version, uncomment the following line\n# and remove the line above\n#\n#FROM registry.access.redhat.com/rhscl/python-36-rhel7\n\nARG nexusHostWithBasicAuth\nARG nexusHostWithoutScheme\nARG serviceType\n\nARG httpProxy\nARG httpsProxy\n\nWORKDIR /app\n\nENV HTTP_PROXY \"${httpProxy}\"\nENV HTTPS_PROXY \"${httpsProxy}\"\n\nENV DSI_MINICONDA_PACKAGE_VERSION=\"3.6.9\"\nENV DSI_MINICONDA_PACKAGE_PATH=/app/miniconda3.sh\nENV PYTHONPATH=$PYTHONPATH:/app\nENV DSI_PACKAGE=/app/app.tar.gz\nENV SERVICE_TYPE=\"${serviceType}\"\n\nRUN echo \"Building ${serviceType} image\"\n\n# Front load pip install, miniconda download for caching docker build layers\nCOPY dist/requirements.txt /app\nUSER root\n#  In the case of building the docker image from behind a proxy and encountering certificate issues, adding a -k to the curl command can mitigate that, consider however the implications of disabling certificate\nRUN if [[ ${serviceType} == \"training\" ]]; \\\n        then \\\n        curl -Lv --fail https://repo.anaconda.com/miniconda/Miniconda3-${DSI_MINICONDA_PACKAGE_VERSION}-Linux-x86_64.sh --output ${DSI_MINICONDA_PACKAGE_PATH}; \\\n            if [[ ! -z ${nexusHostWithBasicAuth} ]]; \\\n                then \\\n                pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} --upgrade pip && pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} coverage nose; \\\n                else pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir coverage nose; \\\n            fielse pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir coverage nose; \\\n            fi \\\n    fi\n\nUSER 1001\nRUN if [[ ! -z ${nexusHostWithBasicAuth} ]]; \\\n    then \\\n    pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} --upgrade pip && pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} -r requirements.txt; \\\n    else pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r requirements.txt; \\\n    fi\n\n# Copying all the code\nCOPY dist /app\n\nUSER root\n\n# Is needed that the special user (1001) has the permissions for starting python servers\nRUN chgrp -R 0 /app && \\\n    chmod -R g=u /app && \\\n    chmod +x /app/run.sh && \\\n    chmod g+w /etc/passwd\n\nRUN if [[ ${serviceType} == \"training\" ]]; \\\n    then touch /app/app.tar.gz && tar zcf /app/app.tar.gz ./ --exclude=./app.tar.gz; \\\n    fi\n\nUSER 1001\n\nEXPOSE 8080\n\nENTRYPOINT [ \"/app/run.sh\" ]\n"
}