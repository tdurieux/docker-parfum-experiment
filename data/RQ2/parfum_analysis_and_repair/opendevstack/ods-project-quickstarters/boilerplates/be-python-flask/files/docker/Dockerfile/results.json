{
  "startTime": 1674248232111,
  "endTime": 1674248232957,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 9,
        "columnEnd": 131
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 135,
        "columnEnd": 267
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 9,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 38,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7.0-slim\n\nLABEL maintainer=\"Andras Gyacsok <andras.gyacsok@boehringer-ingelheim.com>\"\n\n# Never prompts the user for choices on installation/configuration of packages\nENV DEBIAN_FRONTEND noninteractive\nENV TERM linux\n\nARG projectHome=/opt/app-root/src\nARG home=${projectHome}\nARG nexusHostWithBasicAuth\nARG nexusHostWithoutScheme\n\n# Define en_US.\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nENV LC_CTYPE en_US.UTF-8\nENV LC_MESSAGES en_US.UTF-8\n\nRUN set -ex  && \\\n    # DEPENDENCIES\n    buildDeps=' \\\n        build-essential \\\n        python3-dev \\\n        python3-pip \\\n        zlib1g-dev \\\n        automake \\\n        make \\\n        libtool \\\n        m4 \\\n        automake \\\n        gettext \\\n    ' && \\\n    apt-get update -yqq && \\\n    apt-get upgrade -yqq && \\\n    apt-get install -yqq --no-install-recommends \\\n        $buildDeps \\\n        apt-utils \\\n        locales \\\n        pkg-config && \\\n    sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen && \\\n    locale-gen && \\\n    update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 && \\\n    # PROJECT\n    mkdir /opt/app-root && \\\n    useradd -ms /bin/bash -d ${projectHome} -u 1001 prophet && \\\n    # CLEAN UP\n    apt-get autoremove -yqq --purge && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY run.sh ${projectHome}\nCOPY dist ${projectHome}\n\nRUN chown -R prophet: ${projectHome} && \\\n    chgrp -R 0 ${projectHome} && \\\n    chmod -R g=u ${projectHome} && \\\n    chmod g=u /etc/passwd && \\\n    chmod +x ${projectHome}/run.sh\n\nEXPOSE 8080\n\nENV HOME=${projectHome}\nWORKDIR ${projectHome}\n\nRUN if [ ! -z ${nexusHostWithBasicAuth} ]; \\\n    then \\\n    pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} --upgrade pip && pip install --no-cache-dir -i ${nexusHostWithBasicAuth}/repository/pypi-all/simple --trusted-host ${nexusHostWithoutScheme} -r src/requirements.txt; \\\n    else pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir -r src/requirements.txt; \\\n    fi\n\nUSER 1001\n\nCMD [\"./run.sh\"]\n"
}