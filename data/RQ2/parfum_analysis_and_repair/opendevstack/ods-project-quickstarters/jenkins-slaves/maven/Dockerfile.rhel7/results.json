{
  "startTime": 1674249401211,
  "endTime": 1674249402322,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cd/jenkins-slave-base\n\nMAINTAINER Michael Sauter <michael.sauter@boehringer-ingelheim.com>\n\n# Labels consumed by Red Hat build service\nLABEL com.redhat.component=\"jenkins-slave-maven-rhel7-docker\" \\\n      name=\"openshift3/jenkins-slave-maven-rhel7\" \\\n      version=\"3.6\" \\\n      architecture=\"x86_64\" \\\n      release=\"4\" \\\n      io.k8s.display-name=\"Jenkins Slave Maven\" \\\n      io.k8s.description=\"The jenkins slave maven image has the maven tools on top of the jenkins slave base image.\" \\\n      io.openshift.tags=\"openshift,jenkins,slave,maven\"\n\nENV MAVEN_VERSION=3.3 \\\n    BASH_ENV=/usr/local/bin/scl_enable \\\n    ENV=/usr/local/bin/scl_enable \\\n    PROMPT_COMMAND=\". /usr/local/bin/scl_enable\" \\\n    HOME=/home/jenkins \\\n    GRADLE_USER_HOME=/home/jenkins/.gradle\n\n#set JAVA_HOME\nENV JAVA_HOME=/usr/lib/jvm/jre\n\n# Install Maven\nRUN yum install -y wget && \\\n    wget https://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo && \\\n    sed -i s/\\$releasever/6/g /etc/yum.repos.d/epel-apache-maven.repo && \\\n    INSTALL_PKGS=\"java-11-openjdk-devel apache-maven*\" && \\\n    yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n    yum clean all -y && \\\n    mkdir -p $HOME/.m2 && \\\n    exactVersion=$(ls -lah /usr/lib/jvm | grep java-11-openjdk-11 | awk '{print $NF}' | head -1) && \\\n    alternatives --set java /usr/lib/jvm/${exactVersion}/bin/java && \\\n    alternatives --set javac /usr/lib/jvm/${exactVersion}/bin/javac && \\\n    java -version && \\\n    javac -version && rm -rf /var/cache/yum\n\n# Container support is now integrated in Java 11, the +UseCGroupMemoryLimitForHeap option has been pruned\nENV JAVA_TOOL_OPTIONS=\"-XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true\"\n\n# When bash is started non-interactively, to run a shell script, for example it\n# looks for this variable and source the content of this file. This will enable\n# the SCL for all scripts without need to do 'scl enable'.\nADD contrib/bin/scl_enable /usr/local/bin/scl_enable\nADD contrib/bin/configure-slave /usr/local/bin/configure-slave\n\n# set java proxy var\nCOPY set_maven_proxy.sh /tmp/set_maven_proxy.sh\nRUN chmod 777 /tmp/set_maven_proxy.sh\n\nADD ./contrib/settings.xml $HOME/.m2/\nRUN mv $HOME/.m2/settings.xml $HOME/.m2/settings.xml.orig && \\\n /tmp/set_maven_proxy.sh && \\\n xpr=$(cat /tmp/mvn_proxy) && \\\n xpr=\"${xpr//\\//\\\\/}\" && \\\n xpr=\"${xpr//|/\\\\|}\" && \\\n cat $HOME/.m2/settings.xml.orig | sed -e \"s|<proxies>|<proxies>$xpr|g\" > $HOME/.m2/settings.xml && \\\n sed -i \"s/__NEXUS_USER/$NEXUS_USERNAME/gi\" $HOME/.m2/settings.xml && \\\n sed -i \"s/__NEXUS_PW/$NEXUS_PASSWORD/gi\" $HOME/.m2/settings.xml && \\\n sed -i \"s|__NEXUS_HOST|$NEXUS_HOST|gi\" $HOME/.m2/settings.xml && \\\n cat $HOME/.m2/settings.xml\n\n# install gradle ..\nADD gradlew /tmp/gradlew\nRUN mkdir -p /tmp/gradle/wrapper\nADD gradle/* /tmp/gradle/wrapper\nRUN ls /tmp/gradle/wrapper\n\n# set java proxy var\nCOPY set_gradle_proxy.sh /tmp/set_gradle_proxy.sh\nRUN chmod 777 /tmp/set_gradle_proxy.sh\n\nRUN mkdir $GRADLE_USER_HOME\nRUN /tmp/set_gradle_proxy.sh\n\nRUN /tmp/gradlew -version\n\n#set java proxy via JAVA_OPTS as src\nRUN bash -l -c 'echo export JAVA_OPTS=\"$(/tmp/set_java_proxy.sh && echo $JAVA_OPTS)\" >> /etc/bash.bashrc'\n\nRUN chown -R 1001:0 $HOME && \\\n    chmod -R g+rw $HOME\nUSER 1001\n\n"
}