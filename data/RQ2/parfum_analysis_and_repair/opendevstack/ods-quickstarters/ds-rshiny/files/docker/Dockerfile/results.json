{
  "startTime": 1674255927824,
  "endTime": 1674255928812,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV INITRD No\nENV LANGUAGE en\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# Dockerize container and setup required OS dependencies\nRUN echo 'force-unsafe-io' > /etc/dpkg/dpkg.cfg.d/02apt-speedup && \\\n    echo 'DPkg::Post-Invoke {\"/bin/rm -f /var/cache/apt/archives/*.deb || true\";};' > /etc/apt/apt.conf.d/00no-cache && \\\n    /usr/bin/dpkg-divert --local --rename --add /usr/bin/ischroot && \\\n    rm -f /usr/bin/ischroot && \\\n    ln -s /bin/true /usr/bin/ischroot && \\\n    /usr/bin/dpkg-divert --local --rename --add /sbin/initctl && \\\n    rm -f /sbin/initctl && \\\n    ln -s /bin/true /sbin/initctl && \\\n    # Setup locales\n    apt-get update && \\\n    apt-get install --no-install-recommends -yqq locales apt-transport-https ca-certificates gnupg && \\\n    /usr/sbin/locale-gen en_US.UTF-8 && \\\n    /usr/sbin/update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 && \\\n    # Add CRAN apt repo / focal (Ubuntu 20.04) R/4.0\n    if [ -n \"$HTTP_PROXY\" ]; then \\\n        apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --keyserver-options http-proxy=$HTTP_PROXY --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; \\\n    else \\\n        apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9; \\\n    fi && \\\n    echo 'deb https://cloud.r-project.org/bin/linux/ubuntu focal-cran40/' > /etc/apt/sources.list.d/cran.list && \\\n    # Install dependencies\n    apt-get update && \\\n    apt-get install --no-install-recommends -yqq \\\n        gdebi-core \\\n        libcairo2-dev \\\n        libcurl4-gnutls-dev \\\n        libxt-dev \\\n        pandoc \\\n        pandoc-citeproc \\\n        libssl-dev && \\\n    apt-get install --no-install-recommends -yqq \\\n        r-base \\\n        r-base-core \\\n        r-recommended \\\n        r-base-dev && \\\n    # Cleanup apt\n    apt-get autoremove --purge && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /var/cache/apt/archives\n\n# Install Shiny\nRUN R -e 'install.packages(c(\"shiny\", \"rmarkdown\"), repos=\"https://cloud.r-project.org/\")'\n\n# Install app dependencies and fail if any missing\nRUN R -e 'packages = c(\"shinythemes\", \"ggplot2\", \"reshape2\"); \\\n    install.packages(packages, repos=\"https://cloud.r-project.org/\"); \\\n    package.check <- lapply(packages, FUN = function(p) { if(!require(p, character.only = TRUE)) { stop(\"package not found!\") } })'\n\n# Setup app\nRUN mkdir /app\nWORKDIR /app\nADD app.R /app\nEXPOSE 8080\n\n# Run app\nCMD [\"R\", \"--quiet\", \"--no-save\", \"--no-restore\", \"-e\", \"setwd('/app'); shiny::runApp(appDir='.', port=8080, host='0.0.0.0', quiet=F, display.mode='normal')\"]\n"
}