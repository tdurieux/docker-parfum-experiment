{
  "startTime": 1674254031656,
  "endTime": 1674254033696,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM opendevstackorg/ods-jenkins-agent-base-centos7:latest\n\nLABEL maintainer=\"Erhard Wais <erhard.wais@boehringer-ingelheim.com>, Frank Joas <frank.joas@boehringer-ingelheim.com>, Josef Hartmann <josef.hartmann@boehringer-ingelheim.com>, Steve Taylor <steve.taylor@boehringer-ingelheim.com>\"\n\n# Labels consumed by Red Hat build service\nLABEL com.redhat.component=\"jenkins-agent-terraform-rhel7-docker\" \\\n      name=\"openshift3/jenkins-agent-terraform-rhel7\" \\\n      version=\"0.1\" \\\n      architecture=\"x86_64\" \\\n      release=\"1\" \\\n      io.k8s.display-name=\"Jenkins Agent AWS Terraform\" \\\n      io.k8s.description=\"The jenkins Agent image has terraform and other tools on top of the jenkins agent base image.\" \\\n      io.openshift.tags=\"openshift,jenkins,agent,terraform,aws\"\n\nENV TERRAFORM_VERSION 1.0.11\nENV TERRAFORM_CONFIG_INSPECT_VERSION 0.2.0\nENV TERRAFORM_DOCS_VERSION v0.16.0\nENV PYTHON_VERSION 3.9.11\nENV RUBY_VERSION 2.7.5\nENV PACKER_VERSION 1.7.10\nENV CONSUL_VERSION 1.11.2\nENV TFENV_VERSION 2.2.0\nENV NODEJS_VERSION 16.13.2\nENV BUNDLER_VERSION 2.2.23\nENV SOPS_VERSION=3.7.1\nENV AGE_VERSION=1.0.0\nENV GEM_HOME /opt/bundle\nENV RBENV_ROOT /opt/rbenv\nENV RBENV_SHELL bash\n\nENV INSTALL_PKGS=\"yum-utils gcc make git-core zlib zlib-devel gcc-c++ patch readline readline-devel \\\n    libffi-devel openssl-devel make bzip2 autoconf automake libtool bison curl sqlite-devel xz\"\nENV PATH=/opt/tfenv/bin:/opt/rbenv/shims:/opt/rbenv/bin:/opt/node/bin:$PATH\nENV HOME=/home/jenkins\n\nCOPY python_requirements /tmp/requirements.txt\n\nRUN set -x \\\n    && yum update -y \\\n    && yum upgrade -y \\\n    && yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS \\\n    && yum clean all \\\n    && rm -rf /var/cache/yum/* \\\n    && ls -lisa /home/jenkins\n\n# Install PYTHON3\nRUN cd /tmp \\\n    && curl -f -O https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \\\n    && tar xzf Python-${PYTHON_VERSION}.tgz -C / \\\n    && rm -rf Python-${PYTHON_VERSION}.tgz\n\nRUN cd /Python-${PYTHON_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make altinstall \\\n    && ln -s /Python-${PYTHON_VERSION}/python /usr/local/sbin/python3 \\\n    && python3 -V \\\n    && chmod a+rx /Python-${PYTHON_VERSION} \\\n    && chmod a+rx /Python-${PYTHON_VERSION}/python\n\nRUN curl -f \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\" \\\n    && python3 get-pip.py\n\n# Upgrade PIP\nRUN pip3 install --no-cache-dir --upgrade pip \\\n    && pip3 -V \\\n    && pip3 install --no-cache-dir virtualenv pycodestyle wheel\n\n# Configure PIP SSL validation\nRUN pip config set global.cert /etc/ssl/certs/ca-bundle.crt \\\n    && pip config list\n\n# Install python requirements\nRUN python3 -m pip install -r /tmp/requirements.txt\n\n# Install awscli2\nRUN curl -f -sS \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" \\\n    && unzip -qq awscliv2.zip \\\n    && ./aws/install \\\n    && /usr/local/bin/aws --version \\\n    && rm -f awscliv2.zip \\\n    && rm -Rf ./aws\n\n# Install awssamcli\nRUN curl -f -L -sS \"https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip\" -o \"awssam.zip\" \\\n    && unzip -qq -d awssam awssam.zip \\\n    && ./awssam/install && /usr/local/bin/sam --version && rm -f awssam.zip && rm -Rf ./awssam\n\n# Install aws cdk\nRUN wget -q \"https://nodejs.org/dist/v${NODEJS_VERSION}/node-v${NODEJS_VERSION}-linux-x64.tar.xz\" \\\n    && xzcat node-v${NODEJS_VERSION}-linux-x64.tar.xz | tar xpf - -C /opt/ \\\n    && mv /opt/node-v${NODEJS_VERSION}-linux-x64 /opt/node \\\n    && /opt/node/bin/npm install -g aws-cdk \\\n    && chown -R 1001:0 /opt/node && chmod +x /opt/node/bin/* \\\n    && node --version \\\n    && cdk --version\n\n# Install Terraform\nRUN wget -q -O /tmp/terraform.zip \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" \\\n    && unzip /tmp/terraform.zip -d /usr/local/bin \\\n    && rm -rf /tmp/terraform.zip \\\n    && terraform -h\n\n# Install tfenv\nRUN umask 0002 && cd /opt && git clone --branch v${TFENV_VERSION} https://github.com/tfutils/tfenv.git \\\n    && TFENV_CURL_OUTPUT=0 /opt/tfenv/bin/tfenv install ${TERRAFORM_VERSION} \\\n    && /opt/tfenv/bin/tfenv use ${TERRAFORM_VERSION} \\\n    && chown -R 1001:0 /opt/tfenv && chmod +x /opt/tfenv/bin/* \\\n    && terraform -version \\\n    && tfenv list\n\n# Install Packer\nRUN wget -q -O /tmp/packer.zip \"https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip\" \\\n    && unzip /tmp/packer.zip -d /usr/local/bin \\\n    && rm -rf /tmp/packer.zip \\\n    && packer --version\n\n# Install terraform-config-inspect\nRUN wget -q -O /tmp/terraform-config-inspect.tar.gz https://github.com/nichtraunzer/terraform-config-inspect/releases/download/v${TERRAFORM_CONFIG_INSPECT_VERSION}/terraform-config-inspect_${TERRAFORM_CONFIG_INSPECT_VERSION}_linux_amd64.tar.gz \\\n    && tar zxpf /tmp/terraform-config-inspect.tar.gz -C /usr/local/bin/ \\\n    && rm -f /tmp/terraform-config-inspect.tar.gz \\\n    && chmod 755 /usr/local/bin/terraform-config-inspect\n\n# Install Terraform Docs\nRUN wget -q -O /tmp/terraform-docs.tar.gz https://github.com/terraform-docs/terraform-docs/releases/download/${TERRAFORM_DOCS_VERSION}/terraform-docs-${TERRAFORM_DOCS_VERSION}-linux-amd64.tar.gz \\\n    && tar zxpf /tmp/terraform-docs.tar.gz -C /usr/local/bin/ terraform-docs \\\n    && chmod +x /usr/local/bin/terraform-docs\n\n# Install parallel\nRUN wget -q -O /tmp/parallel-20160222-1.el7.noarch.rpm   https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/p/parallel-20160222-1.el7.noarch.rpm \\\n    && rpm -Uvh /tmp/parallel-20160222-1.el7.noarch.rpm \\\n    && yum install -y parallel \\\n    && yum clean all && rm -rf /var/cache/yum\n\n#Install jq\nRUN yum -y install https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-14.noarch.rpm \\\n    && yum install -y jq \\\n    && jq -Version \\\n    && yum clean all && rm -rf /var/cache/yum\n\n#Install consul-cli\nRUN wget -q \"https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip\" \\\n    && unzip consul_${CONSUL_VERSION}_linux_amd64.zip -d /usr/local/bin \\\n    && rm -f consul_${CONSUL_VERSION}_linux_amd64.zip \\\n    && chmod +x /usr/local/bin/consul && /usr/local/bin/consul -version\n\n# Install mozilla/sops and AGE\nRUN yum install -y https://github.com/mozilla/sops/releases/download/v${SOPS_VERSION}/sops-${SOPS_VERSION}-1.x86_64.rpm \\\n    && wget -q -O /tmp/age.tar.gz https://github.com/FiloSottile/age/releases/download/v${AGE_VERSION}/age-v${AGE_VERSION}-linux-amd64.tar.gz \\\n    && tar xzf /tmp/age.tar.gz -C /usr/local/bin \\\n    && rm -f /tmp/age.tar.gz && rm -rf /var/cache/yum\n\nRUN chown -R 1001:0 $HOME \\\n    && chmod -R g+rw $HOME \\\n    && mkdir -p $GEM_HOME \\\n    && chmod 2770 $GEM_HOME\n\nCOPY Gemfile Gemfile.lock $GEM_HOME/\n\nRUN chown -R 1001:0 $GEM_HOME \\\n    && chmod -R g+rw $GEM_HOME \\\n    && ls -lisa /home/jenkins $GEM_HOME\n\nRUN ls $JAVA_HOME/lib/security/cacerts \\\n    && chown 1001:0 $JAVA_HOME/lib/security/cacerts \\\n    && chmod g+w $JAVA_HOME/lib/security/cacerts\n\n# setup ruby env and bundler gems\n# RUBY https://syslint.com/blog/tutorial/how-to-install-ruby-on-rails-with-rbenv-on-centos-7-or-rhel-7/\nRUN cd /opt \\\n    && umask 0002 \\ \n    && git clone https://github.com/rbenv/rbenv.git /opt/rbenv \\\n    && echo 'export PATH=\"/opt/rbenv/shims:/opt/rbenv/bin:$PATH\"' >> ~/.bash_profile \\\n    && echo 'eval \"$(rbenv init -)\"' >> ~/.bash_profile \\\n    && source ~/.bash_profile \\\n    && git clone https://github.com/rbenv/ruby-build.git /opt/rbenv/plugins/ruby-build \\\n    && echo 'export PATH=\"/opt/rbenv/plugins/ruby-build/bin:$PATH\"' >> ~/.bash_profile \\\n    && source ~/.bash_profile \\\n    && rbenv install $RUBY_VERSION \\\n    && rbenv global $RUBY_VERSION \\\n    && gem install bundler -v $BUNDLER_VERSION \\\n    && RBENV_VERSION=$RUBY_VERSION gem install bundler -v $BUNDLER_VERSION \\\n    && bundle config default $BUNDLER_VERSION \\\n    && RBENV_VERSION=$RUBY_VERSION bundle config default $BUNDLER_VERSION \\\n    && bundle config set --global path $GEM_HOME \\\n    && RBENV_VERSION=$RUBY_VERSION bundle config set --global path $GEM_HOME \\\n    && cd $GEM_HOME \\\n    && BUNDLE_SILENCE_ROOT_WARNING=true bundle install --full-index --jobs=8 \\\n    && rm -Rf /home/jenkins/.bundle/cache\n\nUSER 1001\n\n"
}