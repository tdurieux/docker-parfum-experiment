diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opendevstack/ods-quickstarters/common/jenkins-agents/nodejs16/docker/Dockerfile.centos7 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opendevstack/ods-quickstarters/common/jenkins-agents/nodejs16/docker/Dockerfile.centos7/repaired.Dockerfile
index 568d7f1..7e64348 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/opendevstack/ods-quickstarters/common/jenkins-agents/nodejs16/docker/Dockerfile.centos7
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/opendevstack/ods-quickstarters/common/jenkins-agents/nodejs16/docker/Dockerfile.centos7/repaired.Dockerfile
@@ -27,12 +27,12 @@ RUN yum-config-manager --enable rhel-7-server-extras-rpms && \
     yum-config-manager --enable rhel-7-server-optional-rpms
 
 ADD https://dl.google.com/linux/chrome/rpm/stable/x86_64/google-chrome-stable-${CHROME_VERSION}-1.x86_64.rpm /root/google-chrome.rpm
-RUN yum -y install redhat-lsb libXScrnSaver
+RUN yum -y install redhat-lsb libXScrnSaver && rm -rf /var/cache/yum
 RUN yum -y install /root/google-chrome.rpm && \
     ln -s /usr/lib64/libOSMesa.so.8 /opt/google/chrome/libosmesa.so && \
     yum clean all && \
     dbus-uuidgen > /etc/machine-id && \
-    rm /root/google-chrome.rpm
+    rm /root/google-chrome.rpm && rm -rf /var/cache/yum
 
 # Install cypress dependencies
 # Please note: xorg-x11-server-Xvfb is not available on RHEL via yum anymore, so "RUN yum install -y xorg-x11-server-Xvfb" won't work.
@@ -45,7 +45,7 @@ RUN yum install -y /root/xorg-x11-server-Xvfb.x86_64.rpm && \
     yum install -y GConf2* && \
     yum install -y alsa-lib* && \
     yum install -y nss-devel libnotify-devel gnu-free-sans-fonts && \
-    yum clean all -y
+    yum clean all -y && rm -rf /var/cache/yum
 # libXScrnSaver* provides libXss
 # GConf2* provides libgconf-2
 # alsa-lib* provides libasound
@@ -58,20 +58,20 @@ COPY contrib/bin/scl_enable /usr/local/bin/scl_enable
 
 # Install NodeJS
 # https://github.com/nodesource/distributions#installation-instructions-1
-RUN curl --silent --location https://rpm.nodesource.com/setup_${NODEJS_VERSION}.x | bash - && \
+RUN curl -f --silent --location https://rpm.nodesource.com/setup_${NODEJS_VERSION}.x | bash - && \
     yum install -y nodejs && \
-    yum install -y gcc-c++ make
+    yum install -y gcc-c++ make && rm -rf /var/cache/yum
 
 # Install Yarn
 # https://classic.yarnpkg.com/en/docs/install/#centos-stable
-RUN curl --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo && \
+RUN curl -f --silent --location https://dl.yarnpkg.com/rpm/yarn.repo | tee /etc/yum.repos.d/yarn.repo && \
     yum install -y yarn && \
-    yum clean all -y
+    yum clean all -y && rm -rf /var/cache/yum
 
 # Install Python 3 (because node-gyp, an ionic dependency, uses it) and set it as default
 RUN yum install -y python3 py3-pip && \
     update-alternatives --install /usr/bin/python python /usr/bin/python3 1 && \
-    python -V
+    python -V && rm -rf /var/cache/yum
 
 RUN npm config set registry=$nexusUrl/repository/npmjs/ && \
     npm config set always-auth=true && \
@@ -80,7 +80,7 @@ RUN npm config set registry=$nexusUrl/repository/npmjs/ && \
     npm config set ca=null && \
     npm config set strict-ssl=false && \
     yarn config set registry $nexusUrl/repository/npmjs/ -g && \
-    npm --version
+    npm --version && yarn cache clean;
 
 RUN chgrp -R 0 $HOME && \
     chmod -R g=u $HOME