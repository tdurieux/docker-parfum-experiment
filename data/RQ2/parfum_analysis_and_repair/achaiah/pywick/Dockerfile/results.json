{
  "startTime": 1674249110803,
  "endTime": 1674249111600,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 136
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 51,
        "columnEnd": 85
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 35,
        "columnEnd": 66
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 21,
        "columnEnd": 239
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.3.1-cudnn8-devel-centos8\n\nENV HOME /home/pywick\n\nRUN yum install -y epel-release && yum install -y dnf-plugins-core && yum config-manager --set-enabled powertools && rm -rf /var/cache/yum\nRUN yum update -y && yum -y install atop bzip2-devel ca-certificates cmake curl git grep htop less libffi-devel hdf5-devel libjpeg-devel xz-devel libuuid-devel libXext libSM libXrender make nano openssl-devel sed screen tini vim wget unzip && rm -rf /var/cache/yum\n\nRUN yum groupinstall -y \"Development Tools\"\n\nRUN wget https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tgz\nRUN tar xvf Python-3.9.5.tgz && cd Python-3.9*/ && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && make altinstall && cd .. && rm -rf Python* && rm Python-3.9.5.tgz\n\nRUN cd /usr/bin && rm python3 pip3 && ln -s /usr/local/bin/python3.9 python && ln -s /usr/local/bin/python3.9 python3 && ln -s /usr/local/bin/pip3.9 pip3 && ln -s /usr/local/bin/pip3.9 pip\nRUN pip install --no-cache-dir --upgrade pip setuptools wheel\n\n### Pytorch V1.8.2 + CUDA (py3.9_cuda11.1_cudnn7.6.3_0)\nRUN pip install --no-cache-dir torch==1.8.2+cu111 torchvision==0.9.2+cu111 torchaudio==0.8.2 -f https://download.pytorch.org/whl/lts/1.8/torch_lts.html\n\n## MacOS currently not supported for CUDA or LTS\n#RUN pip install torch torchvision torchaudio\n\nRUN mkdir -p /home && rm -rf $HOME\nRUN cd /home && git clone https://github.com/achaiah/pywick\n# To build from a different branch or tag specify per example below\n#RUN cd $HOME && git checkout WIP2\n\n# install requirements\nRUN pip install --no-cache-dir versioned-hdf5\nRUN pip install --no-cache-dir --upgrade -r $HOME/requirements.txt\n\nENV PYTHONPATH=/home:$HOME:$HOME/configs\nWORKDIR $HOME\n\nRUN chmod -R +x $HOME/*.sh\n\nCMD [\"/bin/bash\", \"/home/pywick/entrypoint.sh\"]\n\n###########\n# Build with:\n#   git clone https://github.com/achaiah/pywick\n#   cd pywick\n#   docker build -t \"achaiah/pywick:latest\" .\n#\n# Run 17flowers demo with:\n#   docker run --rm -it --ipc=host --init -e demo=true achaiah/pywick:latest\n# Optionally specify local dir where you want to save output: docker run --rm -it --ipc=host -v your_local_out_dir:/jobs/17flowers --init -e demo=true achaiah/pywick:latest\n# Run container that just stays up (for your own processes):\n#   docker run --rm -it --ipc=host -v <your_local_data_dir>:<container_data_dir> -v <your_local_out_dir>:<container_out_dir> --init achaiah/pywick:latest\n###########"
}