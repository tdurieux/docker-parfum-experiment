{
  "startTime": 1674250631334,
  "endTime": 1674250631924,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pytorch/pytorch:1.4-cuda10.1-cudnn7-runtime\nLABEL maintainer=\"Yizhi Li <yizhi.li@hotmail.com>\"\nUSER root\n\n# installing full CUDA toolkit\nRUN apt update && apt install --no-install-recommends -y build-essential g++ git cmake wget && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\n#RUN apt install -y build-essential g++ llvm-9-dev git cmake wget\n\nRUN conda install -y -c conda-forge cudatoolkit-dev\n# setting environment variables\nENV CUDA_HOME \"/opt/conda/pkgs/cuda-toolkit\"\nENV CUDA_TOOLKIT_ROOT_DIR $CUDA_HOME\nENV LIBRARY_PATH \"$CUDA_HOME/lib64:$LIBRARY_PATH\"\nENV LD_LIBRARY_PATH \"$CUDA_HOME/lib64:$CUDA_HOME/extras/CUPTI/lib64:$LD_LIBRARY_PATH\"\nENV CFLAGS \"-I$CUDA_HOME/include $CFLAGS\"\n\n# warning: no torch and torchvision in the requirements, need to install in advance\nRUN wget https://raw.githubusercontent.com/thunlp/OpenMatch/master/retrievers/venv_ANCE.requirements\nRUN pip install --no-cache-dir -r venv_ANCE.requirements\nRUN pip install --no-cache-dir tensorflow\n\nWORKDIR /workspace\nRUN git clone https://github.com/NVIDIA/apex.git\nWORKDIR /workspace/apex\nRUN python setup.py install --cpp_ext --cuda_ext\nWORKDIR /workspace\n\nRUN git clone https://github.com/microsoft/ANCE.git\nWORKDIR /workspace/ANCE\nRUN python setup.py install\nWORKDIR /workspace\n\nRUN git clone https://github.com/thunlp/OpenMatch.git\nWORKDIR /workspace/OpenMatch\nRUN python setup.py install\nWORKDIR /workspace\n\nENTRYPOINT [\"/bin/bash\"]\n"
}