{
  "startTime": 1674221008457,
  "endTime": 1674221009746,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 4,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 132
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster\n\nRUN groupadd -r mysql && useradd -r -g mysql mysql\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install --assume-yes apt-utils \\\n  autoconf gcc g++ make procps \\\n  coreutils ctags curl gawk gdb git jq lynx netcat ngrep sed sip-tester vim wget \\\n  bison \\\n  debhelper \\\n  default-libmysqlclient-dev \\\n  dh-systemd \\\n  docbook-xml \\\n  docbook2x \\\n  dpkg-dev \\\n  erlang-dev \\\n  flex \\\n  libbson-dev \\\n  libconfuse-dev \\\n  libcurl4-openssl-dev \\\n  libdb-dev \\\n  libev-dev \\\n  libevent-dev \\\n  libexpat1-dev \\\n  libgeoip-dev \\\n  libhiredis-dev \\\n  libjansson-dev \\\n  libjson-c-dev \\\n  libldap2-dev \\\n  liblua5.1-0-dev \\\n  libmaxminddb-dev \\\n  libmemcached-dev \\\n  libmnl-dev \\\n  libmongoc-dev \\\n  libmono-2.0-dev \\\n  libmosquitto-dev \\\n  libncurses5-dev \\\n  libpcre3-dev \\\n  libperl-dev \\\n  libphonenumber-dev \\\n  libpq-dev \\\n  librabbitmq-dev \\\n  libradcli-dev \\\n  libreadline-dev \\\n  librdkafka-dev \\\n  libsasl2-dev \\\n  libsctp-dev \\\n  libsnmp-dev \\\n  libsqlite3-dev \\\n  libssl-dev \\\n  libsystemd-dev \\\n  libunistring-dev \\\n  libxml2-dev \\\n  libwebsockets-dev \\\n  lua-cjson \\\n  openssl \\\n  pkg-config \\\n  python \\\n  python-dev \\\n  python3-dev \\\n  ruby-dev \\\n  unixodbc-dev \\\n  uuid-dev \\\n  xsltproc \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nENV MYSQL_ROOT_PASSWORD=ktestsrootpw\nRUN DEBIAN_FRONTEND=noninteractive apt-get -y --no-install-recommends install --assume-yes default-mysql-client default-mysql-server && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/mysql && mkdir -p /var/lib/mysql /var/run/mysqld \\\n  && chown -R mysql:mysql /var/lib/mysql /var/run/mysqld \\\n  && chmod 777 /var/run/mysqld \\\n  && find /etc/mysql/ -name '*.cnf' -print0 \\\n    | xargs -0 grep -lZE '^(bind-address|log)' \\\n    | xargs -rt -0 sed -Ei 's/^(bind-address|log)/#&/' \\\n  && echo '[mysqld]\\nskip-host-cache\\nskip-name-resolve' > /etc/mysql/conf.d/docker.cnf\nRUN mysql_install_db --user=mysql\n\nWORKDIR /usr/local/src\nRUN git clone -b 0.9.7 https://github.com/nils-ohlmeier/sipsak\nWORKDIR /usr/local/src/sipsak\nRUN autoreconf --install\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\n\n# RUN mkdir -p /usr/local/src/data/GeoLite2\n# RUN mkdir -p /usr/local/src/tmp\n# COPY GeoLite2-City.tar.gz  /usr/local/src/tmp/GeoLite2-City.tar.gz\n# WORKDIR /usr/local/src/tmp\n# RUN tar xvfz GeoLite2-City.tar.gz\n# RUN mv GeoLite2-City_*/*.* ../data/GeoLite2/\n# WORKDIR /usr/local/src\n# RUN rm -rf tmp\n\nCOPY kamailio /usr/local/src/kamailio\nWORKDIR /usr/local/src/kamailio\nRUN make RADCLI=1 exclude_modules=\"db_cassandra db_oracle dnssec ndb_cassandra nsq osp app_java rtp_media_server secsipid secsipid_proc stirshaken jwt nats ruxc\" cfg\nRUN make RADCLI=1 Q=0 CC_EXTRA_OPTS=\"-Wall\" all\nRUN make RADCLI=1 install\nWORKDIR src/modules/tls\nRUN make install-tls-cert\n\nENV DBENGINE=MYSQL\nENV DBRWPW=kamailiorw\nENV DBROOTPW=ktestsrootpw\n\nRUN pwd\nRUN ls -la /usr/local/src\n\nCOPY kamailio-tests /usr/local/src/kamailio-tests\nCOPY kamailio-tests/etc/excludeunits.txt.debian10 /usr/local/src/kamailio-tests/excludeunits.txt\nRUN ls -la /usr/local/src/kamailio-tests\nRUN ls -la /usr/local/src/kamailio-tests/units\nWORKDIR /usr/local/src/kamailio-tests\n\nENTRYPOINT [\"/usr/local/src/kamailio-tests/ktestsctl\"]\nCMD [\"-m\", \"run\"]\n"
}