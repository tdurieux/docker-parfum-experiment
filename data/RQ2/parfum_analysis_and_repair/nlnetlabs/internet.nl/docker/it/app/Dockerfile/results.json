{
  "startTime": 1674254353292,
  "endTime": 1674254353880,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 39,
        "columnStart": 12,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=internetnl/internetnl:devel\nFROM ${BASE_IMAGE}\n\n# Capture the name of the base image we are extending in an environment\n# variable that will be available at runtime to the integration test suite and\n# can be included in the integration test report. ARG BASE_IMAGE has to be\n# specified twice due to the following Dockerfile technical detail:\n#\n#   \"An ARG declared before a FROM is outside of a build stage, so it canâ€™t be\n#   used in any instruction after a FROM. To use the default value of an ARG\n#   declared before the first FROM use an ARG instruction without a value\n#   inside of a build stage:\"\n#\n# From: https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact\nARG BASE_IMAGE\nENV INTERNETNL_BASE_IMAGE=${BASE_IMAGE}\nRUN echo \"Base image: ${INTERNETNL_BASE_IMAGE}\"\n\n# Install the Gecko driver required by Selenium\nWORKDIR /tmp\nRUN curl -fsSLo- 'https://github.com/mozilla/geckodriver/releases/download/v0.24.0/geckodriver-v0.24.0-linux64.tar.gz' | tar zx\nRUN sudo mv /tmp/geckodriver /usr/local/bin\n\n# Install test suite dependencies\n# TODO: use Docker BuildKit local cache mount. See: https://stackoverflow.com/a/57282479\n# Blocked by: https://github.com/docker/docker-py/issues/2230\n# See also: https://github.com/docker/compose/pull/6584\n# Works partly with https://github.com/docker/compose/pull/6865 but changes to the base image\n# do not seem to cause this image to change (all steps are announced as cached=true).\n#RUN --mount=type=cache,target=/home/ximon/.cache/pip sudo -H pip install --upgrade pip && \\\nRUN sudo -H pip install --upgrade pip && \\\n    sudo -H pip install --no-cache-dir \\\n        coverage \\\n        coverage-enable-subprocess \\\n        flower \\\n        git+https://github.com/ximon18/pytest-html.git@dynamic-result-table-header#egg=pytest-html \\\n        gitpython \\\n        pytest-progress \\\n        pytest-selenium \\\n        pytest-xdist\n\nCOPY docker/it/app/entrypoint.sh.it ${APP_PATH}/docker/it/app/entrypoint.sh.it\nCOPY docker/it/app/coverage/coverage-finalize.sh /opt/\nCOPY docker/it/app/coverage/.coveragerc /app/\n\nCOPY tests/it ${APP_PATH}/tests/it/\n\n# Run as root. Many if not most Docker containers run as root, and the Visual\n# Studio Code support for developing in a container requires that the container\n# user be root.\nUSER root\n\n# Stop Celery complaining about running as root.\nENV C_FORCE_ROOT=\"true\"\n\n# Install our custom certificate authority certificate in the operating system\n# store. The Internet.NL SSL connection code will use it automatically to verify\n# the certificates used by the target servers, as these are signed by our test CA.\nCOPY docker/it/targetbase/ca-ocsp/ca/rootCA.crt /usr/local/share/ca-certificates/internetnl-test/\nRUN chmod 755 /usr/local/share/ca-certificates/internetnl-test/ && \\\n    chmod 644 /usr/local/share/ca-certificates/internetnl-test/rootCA.crt\nRUN update-ca-certificates\n\nWORKDIR ${APP_PATH}\nENTRYPOINT [\"/app/docker/it/app/entrypoint.sh.it\"]"
}