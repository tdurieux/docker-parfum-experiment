{
  "startTime": 1674248107826,
  "endTime": 1674248109060,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 44,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.13-alpine\n\nWORKDIR /data/engine\n\n# confirm installation\nRUN node -v\nRUN npm -v\n\nARG CONFIG_URL\nARG PM2_PUBLIC_KEY\nARG PM2_SECRET_KEY\nARG ENV\n\n#install pm2 to production (monitoring)\nRUN npm install pm2 -g && npm cache clean --force;\n#install nodemon to dev (support hot realoading) (need specific command in compose)\nRUN npm install nodemon -g && npm cache clean --force;\n\nENV CONFIG_URL=$CONFIG_URL\nENV PM2_PUBLIC_KEY=$PM2_PUBLIC_KEY\nENV PM2_SECRET_KEY=$PM2_SECRET_KEY\nENV BROADCAST_LOGS 1\nENV FORCE_INSPECTOR 1\n\n# install tool for npm lib compile in C\nRUN apk add --update --no-cache autoconf libtool automake python alpine-sdk\n\n# Install app dependencies\nCOPY ./engine/package.json /data/\n\nRUN cd /data/ && npm cache clean --force && npm install --loglevel verbose && npm cache clean --force;\n\n# add src & build configuraiton\nCOPY ./core /data/core/\nCOPY ./engine /data/engine/\n\nCOPY ./wait-for-it.sh /data/scripts/\n\n# Expose ports (for orchestrators and dynamic reverse proxies)\nEXPOSE 8080\n\nCMD [ \"pm2-runtime\", \"app.js\", \"--name\" ,\"engine\"]\n"
}