{
  "startTime": 1674217395698,
  "endTime": 1674217396778,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Choose the base image from to take.\n# Using slim images is best practice\nFROM ubuntu:latest\n\nARG PYTHON_VERSION=3.6\n\nENV TZ=Asia/Kolkata\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# This is one of the best practice.\n# This technique is known as “cache busting”.\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n         ca-certificates \\\n         apt-utils \\\n         build-essential \\\n         cmake \\\n         git \\\n         curl && rm -rf /var/lib/apt/lists/*;\n\n# add non-root user\nRUN useradd --create-home --shell /bin/bash containeruser\nUSER containeruser\nWORKDIR /home/containeruser\n\n# install miniconda and python\nRUN curl -f -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    chmod +x ~/miniconda.sh && \\\n    ~/miniconda.sh -b -p /home/containeruser/conda && \\\n    rm ~/miniconda.sh && \\\n    /home/containeruser/conda/bin/conda clean -ya && \\\n    /home/containeruser/conda/bin/conda install -y python=$PYTHON_VERSION\n\n# add conda to path\nENV PATH /home/containeruser/conda/bin:$PATH\n\n# Now install this repo\n# We need only the master branch not all branches\n\nCOPY requirements.txt  requirements.txt\nCOPY requirements-test.txt requirements-test.txt\nRUN pip install --no-cache-dir -r requirements.txt && \\\n    pip install --no-cache-dir -r requirements-test.txt\n"
}