{
  "startTime": 1674251694589,
  "endTime": 1674251695681,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.4.1-cudnn8-devel-ubuntu18.04\n\n# Update default packages\nRUN apt-get update\n\n# Get Ubuntu packages\nRUN apt-get install --no-install-recommends -y \\\n    build-essential \\\n    curl xz-utils pkg-config libssl-dev zlib1g-dev libtinfo-dev libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\n# Update new packages\nRUN apt-get update\n\n# Get Rust\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y\n\n\n# get prebuilt llvm\nRUN curl -f -O https://releases.llvm.org/7.0.1/clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz && \\\n    xz -d /clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar.xz && \\\n    tar xf /clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar && \\\n    rm /clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04.tar && \\\n    mv /clang+llvm-7.0.1-x86_64-linux-gnu-ubuntu-18.04 /root/llvm\n\n# set env\nENV LLVM_CONFIG=/root/llvm/bin/llvm-config\nENV CUDA_ROOT=/usr/local/cuda\nENV CUDA_PATH=$CUDA_ROOT\nENV LLVM_LINK_STATIC=1\nENV RUST_LOG=info\nENV PATH=$CUDA_ROOT/nvvm/lib64:/root/.cargo/bin:$PATH\n\n# make ld aware of necessary *.so libraries\nRUN echo $CUDA_ROOT/lib64 >> /etc/ld.so.conf &&\\\n    echo $CUDA_ROOT/compat >> /etc/ld.so.conf &&\\\n    echo $CUDA_ROOT/nvvm/lib64 >> /etc/ld.so.conf &&\\\n    ldconfig\n"
}