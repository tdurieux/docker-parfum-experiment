{
  "startTime": 1674214954691,
  "endTime": 1674214956136,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This will generate a squid container image which can be used either over http on port 3128\n# or over https over port 3129. No MITM/reencryption/... is done.\n#\n# The resulting container image needs to be run with -p 3128:3128 -p 3129:3129\n#\n# If you use the default image, the root CA used to sign the certificate used by squid\n# is located in the image in /etc/pki/squid/rootCA.crt\n#\n# You can override the certificates used by the image by running it with -v ./pki/:/etc/pki/squid:z\n# These certificates can be generated by the generate-certs.sh script.\n#\n# Once the container is running, the https proxy can be tested with\n# https_proxy=https://localhost:3129 curl --proxy-cacert ./pki/rootCA.crt -L https://gandi.net\n#\n# The generated TLS certificate is currently only valid for 192.168.122.1, you'll need to modify\n# generate-certs.sh if you want to use it on a different host\n#\n# https Traffic in the VM can be blocked by running this in a VM:\n# sudo firewall-cmd  --direct --add-rule ipv4 filter OUTPUT 0 -p tcp -m tcp --dport=443 -j REJECT\n# sudo firewall-cmd  --direct --add-rule ipv4 filter OUTPUT 1 -j ACCEPT\n#\n# To allow traffic on port 3128/3129 from the VM to the host, run this on the host:\n# sudo firewall-cmd --zone=libvirt --add-port=3128/tcp\n# sudo firewall-cmd --zone=libvirt --add-port=3129/tcp\n#\n# After this, running this command in a VM hangs:\n# curl -L -I https://gandi.net\n# and this command succeds:\n# https_proxy=https://192.168.122.1:3129 curl  --proxy-cacert ./rootCA.crt  -L  https://gandi.net\n# (commonName must be set to 192.168.122.1 before running generate-certs.sh and building the container image)\n\n# Intermediate build image to generate the CA and certificate used for https\nFROM quay.io/centos/centos:stream8 AS gencerts\nMAINTAINER CRC <devtools-cdk@redhat.com>\n\nRUN yum -y install openssl && rm -rf /var/cache/yum\n\nWORKDIR /root\nCOPY generate-certs.sh .\nRUN bash ./generate-certs.sh\n\n\n# Final squid container\nFROM quay.io/centos/centos:stream8\n\nMAINTAINER CRC <devtools-cdk@redhat.com>\n\nRUN yum -y install squid && \\\n    yum clean all && rm -rf /var/cache/yum\nRUN systemctl enable squid.service\n\n# Workaround for https://github.com/moby/moby/issues/31243\nRUN usermod -a -G tty squid\n\n# Allow localnet to access proxy and enable access to squid over https\nRUN sed -i \"s/^#\\+\\(.*[acl|allow] localnet\\)/\\1/\" /etc/squid/squid.conf && \\\n    sed -i \"s!http_port 3128!http_port 3128\\nhttps_port 3129 tls-cert=/etc/pki/squid/squid.pem!\" /etc/squid/squid.conf\n\nCOPY --from=gencerts /root/pki/squid.pem /etc/pki/squid/\nCOPY --from=gencerts /root/pki/rootCA.crt /etc/pki/squid/\n\nEXPOSE 3128/tcp\nEXPOSE 3129/tcp\n\nCMD [ \"/sbin/init\" ]\n"
}