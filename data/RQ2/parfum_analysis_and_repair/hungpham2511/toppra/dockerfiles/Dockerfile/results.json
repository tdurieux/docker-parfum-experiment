{
  "startTime": 1674218659270,
  "endTime": 1674218660177,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 31,
        "columnEnd": 90
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 1,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:xenial-20191108\nMAINTAINER Hung Pham <hungpham2511@gmail.com>\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies\nRUN rm -rf /var/lib/apt/lists/* && apt-get update \\\n    && apt-get install -y --no-install-recommends apt-utils lsb-release sudo unzip wget && rm -rf /var/lib/apt/lists/*;\n\n# Install everything as root\nRUN mkdir -p ~/git && cd ~/git    \\\n    && wget --no-check-certificate https://github.com/crigroup/openrave-installation/archive/0.9.0.zip -O openrave-installation.zip  \\\n    && unzip openrave-installation.zip -d ~/git    \\\n    && cd openrave-installation-0.9.0 && sudo ./install-dependencies.sh\n\n# OpenSceneGraph\nENV OSG_COMMIT 1f89e6eb1087add6cd9c743ab07a5bce53b2f480\nRUN mkdir -p /usr/src && cd /usr/src \\\n    && wget -q https://github.com/openscenegraph/OpenSceneGraph/archive/${OSG_COMMIT}.zip -O OpenSceneGraph.zip \\\n    && unzip -q OpenSceneGraph.zip -d /usr/src \\\n    && cd /usr/src/OpenSceneGraph-${OSG_COMMIT} && mkdir build && cd build \\\n    && cmake .. -DDESIRED_QT_VERSION=4 && make -j `nproc` && make install   \\\n    && rm -rf /usr/src/OpenSceneGraph-${OSG_COMMIT}/build\n\n# FCL\nRUN cd /usr/src \\\n    && wget -q https://github.com/flexible-collision-library/fcl/archive/0.5.0.zip -O fcl.zip \\\n    && unzip -q fcl.zip -d /usr/src \\\n    && cd /usr/src/fcl-0.5.0 && mkdir build && cd build \\\n    && cmake .. && make -j `nproc` && make install  \\\n    && rm -rf /usr/src/fcl-0.5.0/build\n\n# OpenRAVE\nENV RAVE_COMMIT 7c5f5e27eec2b2ef10aa63fbc519a998c276f908\nRUN pip install --no-cache-dir --upgrade sympy==0.7.1\n\nRUN cd /usr/src \\\n    && wget -q https://github.com/rdiankov/openrave/archive/${RAVE_COMMIT}.zip -O openrave.zip \\\n    && unzip -q openrave.zip -d /usr/src \\\n    && cd /usr/src/openrave-${RAVE_COMMIT} && mkdir build && cd build \\\n    && cmake -DODE_USE_MULTITHREAD=ON -DOSG_DIR=/usr/local/lib64/ .. \\\n    && make -j `nproc` && make install  \\\n    && rm -rf /usr/src/openrave-${RAVE_COMMIT}/build\n\nRUN apt-get install --no-install-recommends -y curl && curl -f \"https://bootstrap.pypa.io/get-pip.py\" -o \"get-pip.py\" \\\n\t&& python get-pip.py && python3 get-pip.py && rm -rf /var/lib/apt/lists/*;\n\n# Other deps\n\nRUN apt-get install --no-install-recommends -y software-properties-common && add-apt-repository -y ppa:deadsnakes/ppa && \\\n\tapt-get update && \\\n\tapt-get install -y --no-install-recommends python-dev python3-dev python3-venv python-tk \\\n\tpython3.6 python3.6-dev python3.7 python3.7-dev && \\\n\tpython3 -m pip install virtualenv invoke tox && rm -rf /var/lib/apt/lists/*;\n\n# RUN sudo apt-get install -y --no-install-recommends python-dev python3-dev python3-venv\n\n# User\nARG user=hung\nARG group=toppra\nARG uid=1000\nARG gid=1000\nARG home=/home/${user}\nRUN mkdir -p /etc/sudoers.d \\\n\t&& groupadd -g ${gid} ${group} \\\n\t&& useradd -d ${home} -u ${uid} -g ${gid} -m -s /bin/bash ${user} \\\n\t&& echo \"${user} ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/sudoers_${user}\nUSER ${user}\nWORKDIR ${home}\n\n"
}