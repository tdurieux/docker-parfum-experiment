{
  "startTime": 1674252398651,
  "endTime": 1674252399186,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM texlive/texlive:latest\n\n# labels\nLABEL AUTHOR='Luc Laurent'\nLABEL MAINTAINER='Luc Laurent & Benoit Nennig'\nLABEL org.opencontainers.image.source = \"https://github.com/nennigb/amc2moodle/\"\n\n# declare useful directories using environement\nENV MONITOR_DIR=/tmp/work\nENV LOG_DIR=/tmp/daemon\nENV INSTALL_DIR_A2M=/tmp/amc2moodle\n\n# install debian packages\nRUN apt update && \\\n    apt install --no-install-recommends -yy wget ghostscript imagemagick libtext-unidecode-perl latexml xmlindent python3-pip git && \\\n    apt clean && rm -rf /var/lib/apt/lists/*;\n\n# move policy file\nRUN mv /etc/ImageMagick-6/policy.xml /etc/ImageMagick-6/policy.xml.off\n\n# install pip and Python pkg\n# RUN pip3 install -U pip && \\\n#     pip install amc2moodle\nWORKDIR /tmp\nRUN git clone https://github.com/nennigb/amc2moodle.git -b master ${INSTALL_DIR_A2M}\nWORKDIR ${INSTALL_DIR_A2M}\nRUN pip3 install --no-cache-dir -U pip && \\\n    pip3 install --no-cache-dir .\n\n# check if amc2moodle and moodle2amc work\nWORKDIR /\nENV TEXINPUTS=.:${INSTALL_DIR_A2M}/amc2moodle/moodle2amc/test:$TEXINPUTS\nRUN echo ${TEXINPUTS}\nRUN python -m amc2moodle.amc2moodle.test && \\\n    python -m amc2moodle.utils.test && \\\n    python -m amc2moodle.moodle2amc.test\n\n\n\n# create dir\nRUN mkdir ${MONITOR_DIR} && \\\n    mkdir ${LOG_DIR}\nVOLUME ${MONITOR_DIR}\nVOLUME ${LOG_DIR}\n\n# create new user\nRUN groupadd -r user && \\\n    useradd -r -g user user && \\\n    chown user:user ${MONITOR_DIR} && \\\n    chown user:user ${LOG_DIR}\n\n# switch to \"user\"\nUSER user\n\n# working dir\nWORKDIR ${MONITOR_DIR}\n\n# copy autorun script for amc2moodle/moodle2amc\nCOPY autorun-amc2moodle.sh /tmp/.\n#RUN [\"/tmp/autorun-amc2moodle.sh\",\">\",\"/dev/null\",\"2>&1&\"]\n\n# execute script\nENTRYPOINT [\"/tmp/autorun-amc2moodle.sh\",\">\",\"/dev/null\",\"2>&1&\"]\n# ENTRYPOINT [\"tail\",\"-f\",\"/dev/null\"]\n"
}