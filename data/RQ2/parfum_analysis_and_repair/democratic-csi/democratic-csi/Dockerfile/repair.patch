diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/democratic-csi/democratic-csi/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/democratic-csi/democratic-csi/Dockerfile/repaired.Dockerfile
index f5abf73..441a66d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/democratic-csi/democratic-csi/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/democratic-csi/democratic-csi/Dockerfile/repaired.Dockerfile
@@ -8,7 +8,7 @@ ARG BUILDPLATFORM
 
 RUN echo "I am running build on $BUILDPLATFORM, building for $TARGETPLATFORM"
 
-RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \
+RUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* \
         && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
 
 ENV LANG=en_US.utf8
@@ -16,10 +16,10 @@ ENV NODE_VERSION=v16.15.1
 ENV NODE_ENV=production
 
 # install build deps
-RUN apt-get update && apt-get install -y python make cmake gcc g++
+RUN apt-get update && apt-get install --no-install-recommends -y python make cmake gcc g++ && rm -rf /var/lib/apt/lists/*;
 
 # install node
-RUN apt-get update && apt-get install -y wget xz-utils
+RUN apt-get update && apt-get install --no-install-recommends -y wget xz-utils && rm -rf /var/lib/apt/lists/*;
 ADD docker/node-installer.sh /usr/local/sbin
 RUN chmod +x /usr/local/sbin/node-installer.sh && node-installer.sh
 ENV PATH=/usr/local/lib/nodejs/bin:$PATH
@@ -32,7 +32,7 @@ WORKDIR /home/csi/app
 USER csi
 
 COPY --chown=csi:csi package*.json ./
-RUN npm install --only=production --grpc_node_binary_host_mirror=https://grpc-uds-binaries.s3-us-west-2.amazonaws.com/debian-buster
+RUN npm install --only=production --grpc_node_binary_host_mirror=https://grpc-uds-binaries.s3-us-west-2.amazonaws.com/debian-buster && npm cache clean --force;
 COPY --chown=csi:csi . .
 RUN rm -rf docker
 
@@ -53,18 +53,16 @@ ARG BUILDPLATFORM
 
 RUN echo "I am running on final $BUILDPLATFORM, building for $TARGETPLATFORM"
 
-RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* \
+RUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* \
         && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
 
 ENV LANG=en_US.utf8
 ENV NODE_ENV=production
 
 # Workaround for https://github.com/nodejs/node/issues/37219
-RUN test $(uname -m) != armv7l || ( \
-                apt-get update \
-                && apt-get install -y libatomic1 \
-                && rm -rf /var/lib/apt/lists/* \
-        )
+RUN test $(uname -m) != armv7l || ( apt-get update \
+                && apt-get install --no-install-recommends -y libatomic1 \
+                && rm -rf /var/lib/apt/lists/*)
 
 # install node
 #ENV PATH=/usr/local/lib/nodejs/bin:$PATH
@@ -75,7 +73,7 @@ COPY --from=build /usr/local/lib/nodejs/bin/node /usr/local/bin/node
 # netbase is required by rpcbind/rpcinfo to work properly
 # /etc/{services,rpc} are required
 RUN apt-get update && \
-        apt-get install -y netbase socat e2fsprogs exfatprogs xfsprogs btrfs-progs fatresize dosfstools ntfs-3g nfs-common cifs-utils fdisk gdisk cloud-guest-utils sudo rsync && \
+        apt-get install --no-install-recommends -y netbase socat e2fsprogs exfatprogs xfsprogs btrfs-progs fatresize dosfstools ntfs-3g nfs-common cifs-utils fdisk gdisk cloud-guest-utils sudo rsync && \
         rm -rf /var/lib/apt/lists/*
 
 # controller requirements