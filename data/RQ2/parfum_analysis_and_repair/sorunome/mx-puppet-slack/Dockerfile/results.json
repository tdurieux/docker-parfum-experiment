{
  "startTime": 1674254212285,
  "endTime": 1674254212807,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:15.0-alpine3.12 AS builder\n\nWORKDIR /opt/mx-puppet-slack\n\nRUN apk --no-cache add git python2 make g++ pkgconfig \\\n    build-base \\\n    cairo-dev \\\n    jpeg-dev \\\n    pango-dev \\\n    musl-dev \\\n    giflib-dev \\\n    pixman-dev \\\n    pangomm-dev \\\n    libjpeg-turbo-dev \\\n    freetype-dev\n\n# run build process as user in case of npm pre hooks\n# pre hooks are not executed while running as root\nRUN chown -R node:node /opt/mx-puppet-slack\nUSER node\n\nCOPY --chown=node:node package.json package-lock.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY --chown=node:node tsconfig.json ./\nCOPY --chown=node:node src/ ./src/\nRUN npm run build\n\n\nFROM node:15.0-alpine3.12\n\nVOLUME /data\n\nENV CONFIG_PATH=/data/config.yaml \\\n    REGISTRATION_PATH=/data/slack-registration.yaml\n\nRUN apk add --no-cache su-exec \\\n    cairo \\\n    jpeg \\\n    pango \\\n    musl \\\n    giflib \\\n    pixman \\\n    pangomm \\\n    libjpeg-turbo \\\n    freetype\n\nWORKDIR /opt/mx-puppet-slack\nCOPY docker-run.sh ./\nCOPY --from=builder /opt/mx-puppet-slack/node_modules/ ./node_modules/\nCOPY --from=builder /opt/mx-puppet-slack/build/ ./build/\n\n# change workdir to /data so relative paths in the config.yaml\n# point to the persisten volume\nWORKDIR /data\nENTRYPOINT [\"/opt/mx-puppet-slack/docker-run.sh\"]\n"
}