{
  "startTime": 1674250798210,
  "endTime": 1674250798976,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 10,
        "columnStart": 1,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG KERNEL_VERSION=4.15.0-101-generic\nENV KERNEL_VERSION=$KERNEL_VERSION\nRUN apt update -y && \\\n\tapt install --no-install-recommends -y \\\n\t# for the new clang\n\twget lsb-release gpg software-properties-common \\\n\t# for preparing dependencies\n\tgit libelf-dev libboost-program-options-dev \\\n\tmake gcc-8 g++-8 linux-headers-$KERNEL_VERSION cmake && \\\n\t# update links to use version 8.x of gcc/g++\n\tupdate-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8 && \\\n\tupdate-alternatives --install /usr/bin/cc cc /usr/bin/gcc 100 --slave /usr/bin/c++ c++ /usr/bin/g++ && rm -rf /var/lib/apt/lists/*;\nRUN wget --timeout=10 --tries=3 -O - https://apt.llvm.org/llvm.sh | bash -s - 10\n\nARG FMT_VERSION=8.0.1\nENV FMT_VERSION=$FMT_VERSION\nRUN git clone --depth 1 --branch $FMT_VERSION https://github.com/fmtlib/fmt.git && \\\n\tcd fmt && mkdir build && cd build && \\\n\tcmake -DFMT_TEST=OFF .. && make -j && make install\nARG SPDLOG_VERSION=1.9.2\nENV SPDLOG_VERSION=$SPDLOG_VERSION\nRUN git clone --depth 1 --branch v$SPDLOG_VERSION https://github.com/gabime/spdlog.git && \\\n\tcd spdlog && mkdir build && cd build && \\\n\tcmake -DSPDLOG_BUILD_EXAMPLE=OFF -DSPDLOG_FMT_EXTERNAL=ON .. && make -j && make install\n\nWORKDIR /nettracer\nCOPY . .\n\nARG BUILD_TYPE=Release\n\nRUN export PATH=$(dirname `find / -iname clang -type f`):$PATH && \\\n\tmkdir -p build && \\\n\tcd build && \\\n\tcmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE .. \\\n\t\t-DCMAKE_INSTALL_PREFIX=./install \\\n\t\t-DKERNEL_VERSION=$KERNEL_VERSION  &&\\\n\tmake -j `nproc`\n"
}