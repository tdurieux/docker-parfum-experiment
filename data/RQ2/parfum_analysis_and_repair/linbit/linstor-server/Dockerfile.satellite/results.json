{
  "startTime": 1674248585243,
  "endTime": 1674248586505,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 35,
        "columnEnd": 57
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 2,
        "columnEnd": 62
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILDER=registry.access.redhat.com/ubi8/ubi\nFROM $BUILDER as builder\n\nENV LINSTOR_VERSION 1.19.0-rc.1\nARG ARCH=amd64\n\nENV LINSTOR_TGZNAME linstor-server\nENV LINSTOR_TGZ ${LINSTOR_TGZNAME}-${LINSTOR_VERSION}.tar.gz\n\nUSER root\nRUN echo \"skip_missing_names_on_install=no\" >> /etc/yum.conf\n\nRUN yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical # !lbbuild\n\nRUN groupadd makepkg # !lbbuild\nRUN useradd -m -g makepkg makepkg # !lbbuild\n\nRUN yum install -y sudo && rm -rf /var/cache/yum# !lbbuild\nRUN usermod -a -G wheel makepkg # !lbbuild\n\nRUN yum install -y rpm-build wget unzip which make git java-1.8.0-openjdk-devel python2 && yum clean all -y && rm -rf /var/cache/yum\nRUN rpm -e --nodeps fakesystemd && yum install -y systemd && yum clean all -y || true && rm -rf /var/cache/yum\n\n# one can not comment COPY\nRUN cd /tmp && wget https://pkg.linbit.com/downloads/linstor/$LINSTOR_TGZ # !lbbuild\n# =lbbuild COPY /${LINSTOR_TGZ} /tmp/\n\n# =lbbuild COPY /pkgcache/* /tmp/pkgcache/\n\n# link gradle to gradle-wrapper\nRUN ln -s /home/makepkg/${LINSTOR_TGZNAME}-${LINSTOR_VERSION}/gradlew /usr/local/bin/gradle # !lbbuild\n\nUSER makepkg\n\nRUN cd ${HOME} && \\\n  cp /tmp/${LINSTOR_TGZ} ${HOME} && \\\n  mkdir -p ${HOME}/rpmbuild/SOURCES && \\\n  mkdir -p ${HOME}/rpmbuild/RPMS/noarch && \\\n  cp /tmp/${LINSTOR_TGZ} ${HOME}/rpmbuild/SOURCES && \\\n  tar xvf ${LINSTOR_TGZ}\n\nRUN cd ${HOME}/${LINSTOR_TGZNAME}-${LINSTOR_VERSION} && ./gradlew wrapper -PversionOverride= # !lbbuild\n\nRUN cd ${HOME}/${LINSTOR_TGZNAME}-${LINSTOR_VERSION} && \\\n  ( cp /tmp/pkgcache/linstor-common*.rpm    ${HOME}/rpmbuild/RPMS/noarch/ && \\\n    cp /tmp/pkgcache/linstor-satellite*.rpm ${HOME}/rpmbuild/RPMS/noarch/    \\\n  ) || rpmbuild -bb --define \"debug_package %{nil}\"  linstor.spec\n\n\nFROM quay.io/linbit/drbd-utils\n# this is/needs to be based on registry.access.redhat.com/ubi7/ubi\n\nENV LINSTOR_VERSION 1.19.0-rc.1\nARG release=1\nARG ARCH=amd64\n\nLABEL name=\"linstor-satellite\" \\\n      vendor=\"LINBIT\" \\\n      version=\"$LINSTOR_VERSION\" \\\n      release=\"$release\" \\\n      summary=\"LINSTOR's satellite component\" \\\n      description=\"LINSTOR's satellite component\"\n\nCOPY COPYING /licenses/gpl-3.0.txt\n\nRUN echo \"skip_missing_names_on_install=no\" >> /etc/yum.conf\n\n# packages\nCOPY --from=builder /home/makepkg/rpmbuild/RPMS/noarch/*.rpm /tmp/linstorpkgs/\n# PACKAGES:\n# which: the autogenerated start script uses it\n# openssl: the start script uses it to generate LINSTOR compatible keys and certificates.\n# lvm2: obvious as most of our pools are LVM based\n# util-linux: we had a use-case where having nsenter was nice (keep it, does not hurt)\n# socat: used with thin-send-recv to send snapshots to another LINSTOR cluster\n# procps-ng: used to find orphaned thin-send-recv processes\nRUN yum -y update-minimal --security --sec-severity=Important --sec-severity=Critical && \\\n  yum install -y which openssl lvm2 util-linux socat procps-ng && \\\n  yum install -y /tmp/linstorpkgs/linstor-common*.rpm /tmp/linstorpkgs/linstor-satellite*.rpm && \\\n  yum clean all -y && rm -rf /var/cache/yum\n\n# PACKAGES:\n# thin-send-recv: snapshot shipping. like 'zfs send' but for LVM\nENV PSK=https://packages.linbit.com/package-signing-pubkey.asc\nRUN curl -f \"$PSK\" >/tmp/psk.asc && rpm --import /tmp/psk.asc && rm /tmp/psk.asc\nENV INTERNAL_REPO=/etc/yum.repos.d/linbit-internal.repo\n# =lbbuild RUN printf '[linbit-internal]\\nname=LINBIT Internal - $basearch\\nbaseurl=https://nexus.at.linbit.com/repository/packages-linbit-com/yum/rhel8/drbd-9/$basearch\\nenabled=1\\ngpgcheck=1\\ngpgkey=%s\\n' \"$PSK\" | tee \"$INTERNAL_REPO\"\n# =lbbuild RUN yum install -y thin-send-recv && yum clean all -y && rm \"$INTERNAL_REPO\"\n\n# extra tools not in UBI images\n# PACKAGES:\n# cryptsetup: luks layer\n# nvme-cli: nvme layer\n# zstd: used with thin-send-recv to send snapshots to another LINSTOR cluster\n# xfsprogs: LINSTOR can create file systems; xfs deps\n# e2fsprogs e2fsprogs-libs: LINSTOR can create file systems; ext4 deps\n# device-mapper-multipath device-mapper-multipath-libs: exos layer\n# lsscsi: exos layer\n# =lbbuild RUN curl -fsSL https://nexus.at.linbit.com/repository/lbbuild/from_rhel_repos.sh | bash -s -- cryptsetup nvme-cli zstd xfsprogs e2fsprogs device-mapper-multipath lsscsi\n\n# package post inst config\nRUN lvmconfig --type current --mergedconfig --config 'activation { udev_rules = 0 } devices { global_filter = [ \"r|^/dev/drbd|\" ] }' > /etc/lvm/lvm.conf.new && mv /etc/lvm/lvm.conf.new /etc/lvm/lvm.conf\n# Ensure we log to files in containers, otherwise SOS reports won't show any logs at all\nRUN sed -i 's#<!-- <appender-ref ref=\"FILE\" /> -->#<appender-ref ref=\"FILE\" />#' /usr/share/linstor-server/lib/conf/logback.xml\n\n# PORTS:\n# 3366: controller <-> satellite\n# 3367: controller <-SSL-> satellite\nEXPOSE 3366/tcp 3367/tcp\n\nCOPY scripts/entry.sh /\n\nCMD [\"startSatellite\"]\nENTRYPOINT [\"/entry.sh\"]\n"
}