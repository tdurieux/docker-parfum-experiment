diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/audo-ai/magic-mic/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/audo-ai/magic-mic/Dockerfile/repaired.Dockerfile
index 34bff2e..558654e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/audo-ai/magic-mic/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/audo-ai/magic-mic/Dockerfile/repaired.Dockerfile
@@ -1,21 +1,19 @@
-# Must be run with DOCKER_BUILDKIT=1
-# syntax=docker/dockerfile:experimental
 ARG TARGET=rnnoise
 ARG BASE_IMAGE=ubuntu:18.04
 FROM $BASE_IMAGE as common
 
 SHELL ["/bin/bash", "-c"]
 # For some reason, things fail to install later without this command
-RUN apt-get update && apt-get install -y --no-install-recommends apt-utils
+RUN apt-get update && apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;
 
 # General softare build deps
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
-    git bash curl snapd wget software-properties-common
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
+    git bash curl snapd wget software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 # Get newer version of g++ (this may no longer be necessary)
 RUN add-apt-repository ppa:ubuntu-toolchain-r/test && \
     apt-get update && \
-    DEBIAN_FRONTEND=noninteractive apt-get install -y gcc-10 g++-10
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y gcc-10 g++-10 && rm -rf /var/lib/apt/lists/*;
 
 # Need a newer cmake than ubuntu provides (for FetchContent)
 RUN wget https://github.com/Kitware/CMake/releases/download/v3.19.5/cmake-3.19.5-Linux-x86_64.sh && \
@@ -23,7 +21,7 @@ RUN wget https://github.com/Kitware/CMake/releases/download/v3.19.5/cmake-3.19.5
     rm cmake-3.19.5-Linux-x86_64.sh
 
 # Tauri deps
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
     build-essential \
     curl \
     wget \
@@ -32,12 +30,12 @@ RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
     libgtk-3-dev \
     squashfs-tools \
     libdbus-1-dev \
-    libwebkit2gtk-4.0-dev
+    libwebkit2gtk-4.0-dev && rm -rf /var/lib/apt/lists/*;
 
 # We need a newer version of node than ubuntu has
 RUN wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh | bash
 RUN \. ~/.nvm/nvm.sh && nvm install 12.13
-RUN \. ~/.nvm/nvm.sh && nvm use 12.13 && npm install --global yarn
+RUN \. ~/.nvm/nvm.sh && nvm use 12.13 && npm install --global yarn && npm cache clean --force;
 
 # Install cargo and rust through rustup
 RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
@@ -46,17 +44,17 @@ RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y && \
     cargo install tauri-bundler --force
 
 # magic-mic deps
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
-    libpulse-dev libappindicator3-dev libnotify-dev glib2.0 libgtkmm-3.0 libboost-dev
-RUN wget http://ftp.gnome.org/pub/gnome/sources/libnotifymm/0.7/libnotifymm-0.7.0.tar.xz && \
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \
+    libpulse-dev libappindicator3-dev libnotify-dev glib2.0 libgtkmm-3.0 libboost-dev && rm -rf /var/lib/apt/lists/*;
+RUN wget https://ftp.gnome.org/pub/gnome/sources/libnotifymm/0.7/libnotifymm-0.7.0.tar.xz && \
     tar xf libnotifymm-0.7.0.tar.xz && \
     cd libnotifymm-0.7.0 && \
-    ./configure && \
-    make -j 4 install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
+    make -j 4 install && rm libnotifymm-0.7.0.tar.xz
 RUN git clone --depth=1 https://github.com/xiph/rnnoise.git && \
     cd /rnnoise && \
     ./autogen.sh && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make install -j 4
 
 # Rust caching ideas from https://blog.mgattozzi.dev/caching-rust-docker-builds/