{
  "startTime": 1674218915064,
  "endTime": 1674218915989,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 38,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###########\n# BUILDER #\n###########\n\n# pull official base image\nFROM python:3.8.0-buster as builder\n\n# set work directory\nWORKDIR /usr/src/app\n\n# set environment variables\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# install dependencies\nRUN apt update \\\n    && apt install --no-install-recommends -y netcat python3-gdal && rm -rf /var/lib/apt/lists/*;\n\n# install dependencies\nCOPY ./requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\n# install debug dependencies\nARG DEBUG_BUILD\nRUN if [ \"$DEBUG_BUILD\" = \"1\" ]; then \\\n pip install --no-cache-dir debugpy; fi\n\n# copy project\nCOPY . .\n\n# create the appropriate directories\nRUN mkdir staticfiles\nRUN mkdir mediafiles\n\n# chown all the files to the app user\nRUN addgroup --system app && adduser --system app --ingroup app\nRUN chown -R app:app .\n# RUN groupmod -g 1000 app\n# RUN usermod -u 1000 app\n\n# change to the app user\nUSER app\n\nEXPOSE 8000\n\n# create an empty JSON fixture for the sole purpose of Django's testserver\nRUN echo '{}' > fixture.json\n\n# run entrypoint.prod.sh\nCOPY ./entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}