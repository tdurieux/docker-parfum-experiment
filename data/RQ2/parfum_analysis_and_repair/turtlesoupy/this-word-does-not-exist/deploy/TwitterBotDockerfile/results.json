{
  "startTime": 1674250054857,
  "endTime": 1674250055918,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 2,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y vim && \\\n  apt-get install --no-install-recommends -y software-properties-common && \\\n  apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\n\nRUN \\\n  curl -f -LO http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n  bash Miniconda3-latest-Linux-x86_64.sh -p /miniconda -b && \\\n  rm Miniconda3-latest-Linux-x86_64.sh\n\nENV PATH=/miniconda/bin:${PATH}\n\nRUN conda update -y conda\n\nCOPY ./build build\nWORKDIR /app/build\nRUN curl -f https://storage.googleapis.com/title-maker-pro-staging/forward-dictionary-model-v1.tar.gz | tar -xz\nRUN curl -f https://storage.googleapis.com/title-maker-pro-staging/inverse-dictionary-model-v1.tar.gz | tar -xz\nWORKDIR /app\n\nCOPY ./cpu_deploy_environment.yml .\nRUN conda env create -f cpu_deploy_environment.yml\n\n# Stanza implicitly downloads models\nRUN [ \"/bin/bash\", \"-c\", \"source activate title_maker_pro && python -c 'import stanza; stanza.download(\\\"en\\\")'\" ]\nRUN [ \"/bin/bash\", \"-c\", \"source activate title_maker_pro && python -c 'from transformers import AutoTokenizer; AutoTokenizer.from_pretrained(\\\"gpt2\\\")'\"]\n\nCOPY ./title_maker_pro title_maker_pro\nCOPY ./build build\n\nENTRYPOINT [\"/bin/bash\", \"-c\", \"source activate title_maker_pro && source build/env_vars.sh && python title_maker_pro/twitter_bot.py --forward-model-path build/forward-dictionary-model-v1 --inverse-model-path build/inverse-dictionary-model-v1 --blacklist-path build/blacklist.pickle\"]\n"
}