{
  "startTime": 1674220576360,
  "endTime": 1674220577025,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################ Build ################\nFROM node:12.6-alpine AS builder\n\nWORKDIR /app\n\n# Copy project files to the docker image  (except .dockerignore)\nCOPY . .\n\n# Install Angular cli\nRUN npm install @angular/cli@8.1.2 -g && npm cache clean --force;\n\n# Install packages\nRUN npm install && npm cache clean --force;\n\n# Build Angular\nRUN ng build --configuration=docker\n################ Build ################\n\n\n################ Serve ################\n\nFROM nginx:alpine\n\n############### Set Defualt Value ################\nENV TRACER_ENV_TracingProviderName=NotExists\nENV TRACER_ENV_TracingProviderUrl=NotExists\n############### Set Defualt Value ################\n\n# Dist artifacts to default nginx public folder\nCOPY --from=builder /app/dist /usr/share/nginx/html\n\n\n\n\n############### EntryPoint ###############\n# This entrypoint is setting the env into the main.js before the nginx start on docker run\n\n# Install bash\nRUN apk add --no-cache --update bash\n\n# COPY the entrypoint\nCOPY --from=builder /app/docker-entrypoint.sh /entrypoint.sh\n\n#Add permissin to entrypoint\nRUN chmod +x ./entrypoint.sh\n\n# Set entrypoint format to linux\nRUN dos2unix entrypoint.sh\n\n# set entry point--> ENTRYPOINT ./entrypoint.sh has less clear errors\nENTRYPOINT [\"bin/bash\", \"./entrypoint.sh\"]\n\n############### entry point ###############\n\n# Start nginx\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\nEXPOSE 80\n\n################ Serve ################\n\n\n#### Debug Container Output\n# docker run -it --rm tracer \"/bin/ash\"\n### Extract ENV Form Container Shell\n# cat \"$( ls /usr/share/nginx/html/main.*js)\"| grep \"tracingProvider[ \\t]*:[^}]*\" -o\n\n\n"
}