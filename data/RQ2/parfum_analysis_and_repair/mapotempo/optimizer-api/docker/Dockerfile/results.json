{
  "startTime": 1674253165779,
  "endTime": 1674253166737,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 18,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 18,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 2,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BRANCH\nARG BUNDLE_WITHOUT=\"development test\"\nARG OPTIMIZER_ORTOOLS_VERSION\nARG REGISTRY\nARG VROOM_VERSION\n\n# Install Vroom\nFROM vroomvrp/vroom-docker:${VROOM_VERSION:-v1.8.0} as vroom\n\n# optimizer-ortools\n# Set OPTIMIZER_ORTOOLS_VERSION to a tag from mapotempo/optimizer-ortools repo as a secret on your\n# optimizer-api repo to force the CI to use a specific mapotempo/optimizer-ortools image.\n# Mapotempo devs can also set this variable to their github username on their own optimizer-api repo\n# to force the CI to use the last succesful username/optimizer-ortools image.\nFROM ${REGISTRY:-registry.mapotempo.com/}mapotempo-${BRANCH:-ce}/optimizer-ortools:${OPTIMIZER_ORTOOLS_VERSION:-v1.16.0}\nARG BUNDLE_WITHOUT\n\nENV LANG C.UTF-8\n\n# Set correct environment variables.\nENV HOME /root\n\n# Trick to install passenger-docker on Ruby 2.5. Othwerwise `apt-get update` fails with a\n# certificate error. See following links for explanantion:\n# https://issueexplorer.com/issue/phusion/passenger-docker/325\n# and\n# https://issueexplorer.com/issue/phusion/passenger-docker/322\n# Basically, DST Root CA X3 certificates are expired on Setember 2021 and apt-get cannot validate\n# with the old certificates and the certification correction is only done for Ruby 2.6+ on the\n# passenger-docker repo because Ruby 2.5 is EOL.\nRUN mv /etc/apt/sources.list.d /etc/apt/sources.list.d.bak\nRUN apt update && apt install --no-install-recommends -y ca-certificates && rm -rf /var/lib/apt/lists/*;\nRUN mv /etc/apt/sources.list.d.bak /etc/apt/sources.list.d\n# The above trick can be removed after Ruby version is increased.\n\nRUN apt-get update > /dev/null && \\\n  libgeos=$(apt-cache search 'libgeos-' | grep -P 'libgeos-\\d.*' | awk '{print $1}') && \\\n  apt-get install --no-install-recommends -y git libgeos-dev ${libgeos} libicu-dev nano > /dev/null && rm -rf /var/lib/apt/lists/*;\n\nCOPY --chown=app . /srv/app/\nRUN install -d --owner app /srv/app/archives\n\nUSER app\nWORKDIR /srv/app\n\nRUN gem install bundler --version 2.2.24 && \\\n  bundle --version && \\\n  bundle install --path vendor/bundle --full-index --without ${BUNDLE_WITHOUT} -j $(nproc)\n\nLABEL maintainer=\"Mapotempo <tech@mapotempo.com>\"\n\nENV REDIS_HOST redis-cache\nENV LANG C.UTF-8\n\nUSER root\nCOPY --from=vroom /usr/local/bin /srv/vroom/bin\n\nUSER root\n# Enable Nginx and Passenger\nRUN rm -f /etc/service/nginx/down && \\\n  rm /etc/nginx/sites-enabled/default\n\n# Enable app\nADD docker/env.d/* /etc/nginx/main.d/\nADD docker/snippets/* /etc/nginx/snippets/\nADD docker/webapp.conf /etc/nginx/sites-enabled/webapp.conf\n\nRUN apt-get remove -y git build-essential && \\\n  apt-get autoremove -y && \\\n  apt-get clean && \\\n  echo -n > /var/lib/apt/extended_states && \\\n  rm -rf /tmp/* /var/lib/apt/lists/* /var/tmp/*\n"
}