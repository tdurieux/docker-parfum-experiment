{
  "startTime": 1674255711436,
  "endTime": 1674255712156,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "# initialize from the image defined by BASE_IMAGE\nARG BASE_IMAGE\nFROM $BASE_IMAGE\nARG DEBIAN_FRONTEND=noninteractive\nARG PORTABLE_ROCKSDB\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y build-essential git wget pkg-config lxc-dev libzmq3-dev \\\n                       libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev \\\n                       liblz4-dev graphviz && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENV GOLANG_VERSION=go1.17.1.linux-amd64\nENV ROCKSDB_VERSION=v6.22.1\nENV GOPATH=/go\nENV PATH=$PATH:$GOPATH/bin\nENV CGO_CFLAGS=\"-I/opt/rocksdb/include\"\nENV CGO_LDFLAGS=\"-L/opt/rocksdb -ldl -lrocksdb -lstdc++ -lm -lz -lbz2 -lsnappy -llz4\"\nARG TCMALLOC\n\nRUN mkdir /build\n\nRUN if [ -n \"${TCMALLOC}\" ]; then \\\n    echo \"Using TCMALLOC\"; \\\n    apt-get install --no-install-recommends -y google-perftools; rm -rf /var/lib/apt/lists/*; \\\n    ln -s /usr/lib/libtcmalloc.so.4 /usr/lib/libtcmalloc.so; \\\nfi\n\n# install and configure go\nRUN cd /opt && wget https://dl.google.com/go/$GOLANG_VERSION.tar.gz && \\\n    tar xf $GOLANG_VERSION.tar.gz && rm $GOLANG_VERSION.tar.gz\nRUN ln -s /opt/go/bin/go /usr/bin/go\nRUN mkdir -p $GOPATH\nRUN echo -n \"GO version: \" && go version\nRUN echo -n \"GOPATH: \" && echo $GOPATH\n\n# install rocksdb\nRUN cd /opt && git clone -b $ROCKSDB_VERSION --depth 1 https://github.com/facebook/rocksdb.git\nRUN cd /opt/rocksdb && CFLAGS=-fPIC CXXFLAGS=-fPIC PORTABLE=$PORTABLE_ROCKSDB make -j 4 release\nRUN strip /opt/rocksdb/ldb /opt/rocksdb/sst_dump && \\\n    cp /opt/rocksdb/ldb /opt/rocksdb/sst_dump /build\n\n# pre-load depencencies\nRUN \\\n    cleanup() { rm -rf $GOPATH/src/github.com/trezor ; } && \\\n    trap cleanup EXIT && \\\n    mkdir -p $GOPATH/src/github.com/trezor && \\\n    cd $GOPATH/src/github.com/trezor && \\\n    git clone https://github.com/trezor/blockbook.git && \\\n    cd blockbook && \\\n    go mod download\n\nADD Makefile /build/Makefile\n\nVOLUME /out\n\nWORKDIR /build\n"
}