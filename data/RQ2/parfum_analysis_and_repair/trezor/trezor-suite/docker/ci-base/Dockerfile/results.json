{
  "startTime": 1674254751548,
  "endTime": 1674254752771,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "# Base\n## Use a proxy or fallback to no proxy at all (direct access to Docker Hub).\nARG CI_DOCKER_PROXY=\"\"\nFROM ${CI_DOCKER_PROXY}debian:bullseye-slim as base\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    zip unzip \\\n    curl && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    update-ca-certificates\n\n\n# Docker\nFROM base as docker\nENV DOCKER_VERSION=20.10.16\nRUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n    && mv docker-${DOCKER_VERSION}.tgz docker.tgz \\\n    && tar xzvf docker.tgz \\\n    && mv docker/docker /usr/local/bin \\\n    && rm -r docker docker.tgz\n\n# Docker Compose\nFROM base as docker_compose\nENV DOCKER_COMPOSE_VERSION=1.29.2\nRUN curl -f -L \"https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose\n\n# Final image\n# bullseye is for debian 11. the same version as firmware team has in its Dockerfile.\nFROM ${CI_DOCKER_PROXY}node:lts-bullseye\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n\n    xvfb \\\n    libgtk2.0-0 \\\n    libnotify-dev \\\n    libgconf-2-4 \\\n    libnss3 \\\n    libxss1 \\\n    libasound2 \\\n    libcairo2-dev \\\n    libpango1.0-dev \\\n    libjpeg-dev \\\n    libgif-dev \\\n    librsvg2-dev \\\n\n    scons \\\n    libsdl2-dev \\\n    libsdl2-image-dev \\\n\n    zip \\\n    jq \\\n    rsync \\\n    curl && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y \\\n    python3-dev \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir attrs\nRUN pip3 install --no-cache-dir --upgrade setuptools\n# trezor ctl is not working with newer version of click\nRUN pip3 install --no-cache-dir \"click<8.1\"\nRUN pip3 install --no-cache-dir trezor\nRUN pip3 install --no-cache-dir termcolor\n\nUSER root\n\n# install Chromebrowser\nRUN \\\n    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" > /etc/apt/sources.list.d/google.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y dbus-x11 google-chrome-stable google-chrome-beta && \\\n    rm -rf /var/lib/apt/lists/*\n\n# \"fake\" dbus address to prevent errors\n# https://github.com/SeleniumHQ/docker-selenium/issues/87\nENV DBUS_SESSION_BUS_ADDRESS=/dev/null\n\n# a few environment variables to make NPM installs easier\n# good colors for most applications\nENV TERM xterm\n# avoid million NPM install messages\nENV npm_config_loglevel warn\n# allow installing when the main user is root\nENV npm_config_unsafe_perm true\n\n# trezor emu\nENV SDL_VIDEODRIVER \"dummy\"\nENV XDG_RUNTIME_DIR \"/var/tmp\"\n\n# trezorctl https://click.palletsprojects.com/en/7.x/python3/\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n\n# Install and use correct version of node - should match witch Nix and .nvmrc\nENV NODE_VERSION 16.15.0\n\n# Out of the blue, we started to run into CI failures. All of them had one thing in common.\n# Some of our dependencies postinstall scripts tried to execute a binary in ./node_modules/.bin/\n# that was not available at the moment. This happens probably because of the async manner in which\n# base packages are downloaded and installed in concurrence with the fact that the troublesome\n# package relies on existence of another package already installed.\n# as a quick fix, create a project and install needed packages to provide yarn cache on image level.\nRUN yarn global add opencollective node-pre-gyp lerna\n\n# versions of local tools\nRUN node -v\nRUN npm -v\nRUN yarn -v\nRUN google-chrome --version\nRUN google-chrome-beta --version\nRUN zip --version\nRUN git --version\nRUN python3 --version\n# RUN pipenv --version\nRUN python3 -m pip --version\nRUN trezorctl version\n\nCOPY --from=docker /usr/local/bin/docker /usr/local/bin\nCOPY --from=docker_compose /usr/local/bin/docker-compose /usr/local/bin\n"
}