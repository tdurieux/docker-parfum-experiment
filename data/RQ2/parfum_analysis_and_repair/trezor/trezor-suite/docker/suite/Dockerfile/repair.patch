diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/trezor/trezor-suite/docker/suite/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/trezor/trezor-suite/docker/suite/Dockerfile/repaired.Dockerfile
index c83801f..9da780d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/trezor/trezor-suite/docker/suite/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/trezor/trezor-suite/docker/suite/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,5 @@
 # For suite-dev, the idea behind docker is that we install, build and run dev server for user without any
-# dependencies on host (yarn, node). But all source files remain on host. We must ensure that permissions 
+# dependencies on host (yarn, node). But all source files remain on host. We must ensure that permissions
 # of newly created files in docker (entire monorepo is mounted volume) match users default.
 # Otherwise user would run into permission denied problem when trying to rebuild project outside docker.
 ## Use a proxy or fallback to no proxy at all (direct access to Docker Hub).
@@ -8,11 +8,11 @@ FROM ${CI_DOCKER_PROXY}node:16
 
 RUN apt-get update && apt-get -y --no-install-recommends install \
     ca-certificates \
-    curl
+    curl && rm -rf /var/lib/apt/lists/*;
 
 # TODO: for M1 doesn't work
-RUN curl -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.12/gosu-$(dpkg --print-architecture)" \
-    && curl -o /usr/local/bin/gosu.asc -SL "https://github.com/tianon/gosu/releases/download/1.12/gosu-$(dpkg --print-architecture).asc" \
+RUN curl -f -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.12/gosu-$(dpkg --print-architecture)" \
+    && curl -f -o /usr/local/bin/gosu.asc -SL "https://github.com/tianon/gosu/releases/download/1.12/gosu-$(dpkg --print-architecture).asc" \
     && chmod +x /usr/local/bin/gosu
 
 COPY ./suite/entrypoint.sh /usr/local/bin/entrypoint.sh