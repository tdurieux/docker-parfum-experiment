{
  "startTime": 1674251233095,
  "endTime": 1674251233828,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 156,
        "columnEnd": 184
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 124,
        "columnEnd": 199
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.cern.ch/cmsweb/cmsweb:20220601-stable as web-builder\nMAINTAINER Valentin Kuznetsov vkuznet@gmail.com\n\nENV WDIR=/data\nENV USER=_frontend\n\n# create bashs link to bash\n# RUN ln -s /bin/bash /usr/bin/bashs\n# add new user\nRUN useradd ${USER} && install -o ${USER} -d ${WDIR} && echo \"%$USER ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n# switch to user\nUSER ${USER}\n\n# add fake host certs since we'll manage them at run time\nRUN mkdir -p /data/certs && echo \"bla\" > /data/certs/hostcert.pem && echo \"bla\" > /data/certs/hostkey.pem && chmod 0600 /data/certs/hostkey.pem && mkdir -p $WDIR\nWORKDIR ${WDIR}\n\n# pass env variable to the build\nARG CMSK8S\nENV CMSK8S=$CMSK8S\nARG CMSWEB_ENV\nENV CMSWEB_ENV=$CMSWEB_ENV\n\n# install\nADD install.sh $WDIR/install.sh\nRUN $WDIR/install.sh &&  crontab -l > /data/crontab.txt\n\n# build apache exporter\nRUN mkdir -p /data/gopath/bin\nENV GOPATH /data/gopath\n# RUN go get github.com/Lusitaniae/apache_exporter && crontab -l > /data/crontab.txt\n\nRUN wget https://github.com/Lusitaniae/apache_exporter/releases/download/v0.9.0/apache_exporter-0.9.0.linux-amd64.tar.gz && tar -xvzf apache_exporter-0.9.0.linux-amd64.tar.gz --directory /data/gopath && cp /data/gopath/apache_exporter-0.9.0.linux-amd64/apache_exporter /data/gopath/bin && crontab -l > /data/crontab.txt && rm apache_exporter-0.9.0.linux-amd64.tar.gz\n\n\n# extract relevant pieces from web-builder\nFROM registry.cern.ch/cmsweb/cmsweb-base:20220601-stable\nENV WDIR=/data\nENV USER=_frontend\nADD logstash.repo /etc/yum.repos.d/logstash.repo\nRUN rpm --import https://artifacts.elastic.co/GPG-KEY-elasticsearch && yum install -y perl filebeat python-pip && yum clean all && rm -rf /var/cache/yum && pip install --no-cache-dir requests==2.27.1 && useradd ${USER} && install -o ${USER} -d ${WDIR} && echo \"%$USER ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n\n#Get alert manager\nRUN curl -f -ksLO https://github.com/prometheus/alertmanager/releases/download/v0.24.0/alertmanager-0.24.0.linux-amd64.tar.gz\nRUN tar xfz alertmanager-0.24.0.linux-amd64.tar.gz && mv alertmanager-0.24.0.linux-amd64/amtool $WDIR/ && rm -rf alertmanager-0.24.0.linux-amd64* && rm alertmanager-0.24.0.linux-amd64.tar.gz\n\nUSER ${USER}\nCOPY --chown=_frontend:_frontend --from=web-builder /data /data\nRUN crontab /data/crontab.txt\n\n\n# run the service\nADD run.sh $WDIR/run.sh\nADD monitor.sh $WDIR/monitor.sh\nADD alerts.sh $WDIR/alerts.sh\n\nENV PATH=\"${WDIR}/cmsweb/bin:${WDIR}:${WDIR}/gopath/bin:${PATH}\"\n\nWORKDIR $WDIR\nCMD [\"./run.sh\"]\n"
}