{
  "startTime": 1674251330965,
  "endTime": 1674251331616,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:latest as go-builder\n\n# tag to use\nENV CMSMON_TAG=sqoop-0.0.0\n\nENV WDIR=/data\nWORKDIR $WDIR\n\nRUN git clone https://github.com/dmwm/CMSMonitoring.git\nWORKDIR $WDIR/CMSMonitoring\nRUN git checkout tags/$CMSMON_TAG -b build\n\n# cms-monitoring es-sizes\nWORKDIR $WDIR\nENV GOPATH=$WDIR/gopath\nRUN mkdir -p $GOPATH\nENV PATH=\"${PATH}:${GOROOT}/bin:${WDIR}\"\nWORKDIR $WDIR/CMSMonitoring/src/go/MONIT\nRUN go get github.com/go-stomp/stomp\nRUN go get github.com/prometheus/client_golang/prometheus\nRUN go get github.com/prometheus/client_golang/prometheus/promhttp\nRUN go build monit.go && go build hdfs_exporter.go && cp monit hdfs_exporter $WDIR\nWORKDIR $WDIR\n\n# get amtool\nRUN curl -f -ksLO https://github.com/prometheus/alertmanager/releases/download/v0.24.0/alertmanager-0.24.0.linux-amd64.tar.gz\nRUN tar xfz alertmanager-0.24.0.linux-amd64.tar.gz && mv alertmanager-0.24.0.linux-amd64/amtool $WDIR/ && rm -rf alertmanager-0.24.0.linux-amd64* && rm alertmanager-0.24.0.linux-amd64.tar.gz\n\n\nFROM registry.cern.ch/cmsmonitoring/cmsmon-hadoop-base:spark2-20220606\n# Do not use spark3, it requires additional settings\nMAINTAINER Ceyhun Uzunoglu ceyhunuzngl@gmail.com\n\nENV WDIR=/data\nWORKDIR $WDIR\n\nCOPY --from=go-builder /data/amtool /data\nCOPY --from=go-builder /data/hdfs_exporter /data\nCOPY --from=go-builder /data/monit /data\nCOPY --from=go-builder /data/CMSMonitoring/sqoop /data/sqoop\n\nWORKDIR $WDIR/sqoop\nRUN mkdir -p $WDIR/sqoop/log && \\\n# Create symbolic link of below files in $WDIR/sqoop directory\n    ln -s /etc/cmsdb/cmsr_cstring && ln -s /etc/cmsdb/lcgr_cstring && \\\n    crontab cronjobs.txt\n\nWORKDIR $WDIR\n"
}