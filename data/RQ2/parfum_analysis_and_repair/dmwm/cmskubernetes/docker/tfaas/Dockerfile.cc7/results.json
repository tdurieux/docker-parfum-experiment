{
  "startTime": 1674250775327,
  "endTime": 1674250776894,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM cmssw/cmsweb:20200504 as builder\nMAINTAINER Valentin Kuznetsov vkuznet@gmail.com\n\n# add environment\nENV WDIR=/data\nENV USER=_tfaas\n\n#RUN yum update -y && yum clean all\nRUN yum install -y git-core krb5-devel readline-devel openssl autoconf automake libtool make gcc gcc-c++ unzip && rm -rf /var/cache/yum\nRUN yum clean all\n\n# Create new user account\nRUN useradd ${USER} && install -o ${USER} -d ${WDIR}\n# add user to sudoers file\nRUN echo \"%$USER ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n# switch to user\nUSER ${USER}\n\n# start the setup\nRUN mkdir -p $WDIR\nWORKDIR ${WDIR}\n\n# download golang and install it\nENV GOPATH=$WDIR/gopath\nRUN mkdir $WDIR/gopath\nENV PATH=\"${GOROOT}/bin:${WDIR}:${PATH}\"\n\n# install Go dependencies\nRUN go get github.com/dmwm/cmsauth\nRUN go get github.com/vkuznet/x509proxy\nRUN go get github.com/sirupsen/logrus\nRUN go get github.com/shirou/gopsutil\n\n# download and insta TensorFlow libraries\n# https://www.tensorflow.org/versions/master/install/install_go\nENV TF_LIB=\"libtensorflow-cpu-linux-x86_64-1.15.0.tar.gz\"\nRUN curl -f -k -L -O \"https://storage.googleapis.com/tensorflow/libtensorflow/${TF_LIB}\"\nRUN tar xfz $TF_LIB\nENV LIBRARY_PATH=\"${LIBRARY_PATH}:${WDIR}/lib\"\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:${WDIR}/lib\"\n# until TF is fixed: https://github.com/tensorflow/tensorflow/issues/39744\nRUN git clone https://github.com/tensorflow/tensorflow.git\nRUN cd tensorflow && git checkout r1.11\nRUN mkdir -p $GOPATH/src/github.com/tensorflow\nRUN mv tensorflow $GOPATH/src/github.com/tensorflow\n\n#RUN go get github.com/tensorflow/tensorflow/tensorflow/go/core/core_protos_go_proto\nRUN go get github.com/tensorflow/tensorflow/tensorflow/go\nRUN go get github.com/tensorflow/tensorflow/tensorflow/go/op\n\n# install protobuf\nWORKDIR ${WDIR}\nRUN git clone https://github.com/google/protobuf.git\nWORKDIR ${WDIR}/protobuf\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${WDIR}\nRUN make\nRUN make install\nRUN go get -u github.com/golang/protobuf/protoc-gen-go\n\n# build tfaas\nWORKDIR ${WDIR}\nRUN git clone https://github.com/vkuznet/TFaaS.git\nWORKDIR $WDIR/TFaaS/src/Go\nRUN make\nENV PATH=\"${WDIR}/TFaaS/src/Go:${PATH}\"\n\n# final image\nFROM cern/cc7-base:20200504-1.x86_64\nRUN mkdir -p /data/lib\nCOPY --from=builder /data/TFaaS/src/Go /data/\nCOPY --from=builder /data/lib /data/lib\nRUN mkdir /data/models\nENV WDIR=/data\nENV LIBRARY_PATH=\"${WDIR}/lib\"\nENV LD_LIBRARY_PATH=\"${WDIR}/lib\"\nENV PATH=\"${WDIR}:${PATH}\"\nWORKDIR $WDIR\nADD config.json /data/config.json\nADD run.sh /data/run.sh\nCMD [\"run.sh\"]\n"
}