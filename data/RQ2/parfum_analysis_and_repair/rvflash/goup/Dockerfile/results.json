{
  "startTime": 1674248856952,
  "endTime": 1674248858270,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Download the dependencies (mod)\nFROM golang:1.13 as modules\n\n## Linux dependencies.\nRUN apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\nADD go.mod go.sum /mod/\nRUN cd /mod && go mod download\n\n\n# Build the application (app)\nFROM golang:1.13 as builder\nCOPY --from=modules /go/pkg /go/pkg\n\n## Add a non-privileged user\nRUN useradd -u 10001 goup\n\n## Copy sources\nRUN mkdir -p /app\nADD . /app\nWORKDIR /app\n\n## Build the binary\nARG APP_VERSION=v0.0.1-noop\nRUN GOOS=linux GOARCH=amd64 GO111MODULE=on CGO_ENABLED=0 go build \\\n    -ldflags \"-X main.buildVersion=${APP_VERSION}\" \\\n    -o bin/goup .\n\n\n# Run the binary\nFROM scratch\n\n## Certificates and privileges\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\nCOPY --from=builder /etc/passwd /etc/passwd\nUSER goup\n\n## Finally exposes the command line tool\nCOPY --from=builder /app/bin/goup /bin/goup\nWORKDIR /pkg\nCMD [\"/bin/goup\"]"
}