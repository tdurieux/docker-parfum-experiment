{
  "startTime": 1674248000711,
  "endTime": 1674248001658,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 21
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG HELM_VERSION\n\nFROM arm64v8/golang:1.12-buster as setup\nARG HELM_VERSION\nRUN echo \"HELM_VERSION is set to: ${HELM_VERSION}\" && mkdir /temp\nRUN curl -f -L \"https://get.helm.sh/helm-v${HELM_VERSION}-linux-arm64.tar.gz\" -o helm.tar.gz \\\n    && tar -zxvf helm.tar.gz \\\n    && mv ./linux-arm64/helm /usr/local/bin/helm \\\n    && bash -c 'if [[ \"${HELM_VERSION}\" == 2* ]]; then helm init --client-only; echo \"using helm3, no need to initialize helm\"; fi' \\\n    && helm plugin install https://github.com/hypnoglow/helm-s3.git \\\n    && helm plugin install https://github.com/nouney/helm-gcs.git \\\n    && helm plugin install https://github.com/chartmuseum/helm-push.git && rm helm.tar.gz\n\n# Run acceptance tests\nCOPY Makefile Makefile\nCOPY bin/ bin/\nCOPY lib/ lib/\nCOPY acceptance_tests/ acceptance_tests/\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y python3-venv \\\n    && make acceptance && rm -rf /var/lib/apt/lists/*;\n\n\nFROM arm64v8/alpine:3.6\n\nARG KUBE_VERSION=\"v1.14.3\"\n\nARG HELM_VERSION\n\nRUN echo \"HELM_VERSION is set to: ${HELM_VERSION}\"\n\nENV FILENAME=\"helm-v${HELM_VERSION}-linux-arm64.tar.gz\"\n\nRUN apk add --update ca-certificates && update-ca-certificates \\\n    && apk add --update curl \\\n    && apk add bash \\\n    && apk add jq \\\n    && apk add python \\\n    && apk add make \\\n    && apk add git \\\n    && apk add openssl \\\n    && apk add py-pip \\\n    && pip install --no-cache-dir yq \\\n    && curl -f -L https://storage.googleapis.com/kubernetes-release/release/${KUBE_VERSION}/bin/linux/arm64/kubectl -o /usr/local/bin/kubectl \\\n    && chmod +x /usr/local/bin/kubectl \\\n    && curl -f -L https://get.helm.sh/${FILENAME} -o /tmp/${FILENAME} \\\n    && tar -zxvf /tmp/${FILENAME} -C /tmp \\\n    && mv /tmp/linux-arm64/helm /bin/helm \\\n    # Cleanup uncessary files\n    && rm /var/cache/apk/* \\\n    && rm -rf /tmp/*\n\nRUN if [[ \"${HELM_VERSION}\" == 2* ]]; then helm init --client-only; echo \"using helm3, no need to initialize helm\"; fi\n\nARG HELM_VERSION\nCOPY --from=setup /temp /root/.helm/* /root/.helm/\nCOPY bin/* /opt/bin/\nRUN chmod +x /opt/bin/*\nCOPY lib/* /opt/lib/\n\n# Install Python3\nRUN apk add --no-cache python3 \\\n    && rm -rf /root/.cache\n\nENV HELM_VERSION ${HELM_VERSION}\n\nENTRYPOINT [\"/opt/bin/release_chart\"]\n"
}