{
  "startTime": 1674255516711,
  "endTime": 1674255517580,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG HELM_VERSION\nARG S3_PLUGIN_VERSION\nARG GCS_PLUGIN_VERSION\nARG PUSH_PLUGIN_VERSION\n\nFROM golang:latest as setup\nARG HELM_VERSION\nARG S3_PLUGIN_VERSION\nARG GCS_PLUGIN_VERSION\nARG PUSH_PLUGIN_VERSION\nRUN echo \"HELM_VERSION is set to: ${HELM_VERSION}\" && mkdir /temp\nRUN curl -f -L \"https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz\" -o helm.tar.gz \\\n    && tar -zxvf helm.tar.gz \\\n    && mv ./linux-amd64/helm /usr/local/bin/helm \\\n    && bash -c 'if [[ \"${HELM_VERSION}\" == 2* ]]; then helm init --client-only; else echo \"using helm3, no need to initialize helm\"; fi' \\\n    && helm plugin install https://github.com/hypnoglow/helm-s3.git --version=${S3_PLUGIN_VERSION} \\\n    && helm plugin install https://github.com/nouney/helm-gcs.git --version=${GCS_PLUGIN_VERSION} \\\n    && helm plugin install https://github.com/chartmuseum/helm-push.git --version=${PUSH_PLUGIN_VERSION} && rm helm.tar.gz\n\n# Run acceptance tests\nCOPY Makefile Makefile\nCOPY bin/ bin/\nCOPY lib/ lib/\nCOPY build_entrypoint_script build_entrypoint_script\nCOPY acceptance_tests/ acceptance_tests/\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y python3-venv \\\n    && make acceptance && rm -rf /var/lib/apt/lists/*;\n\nFROM codefresh/kube-helm:${HELM_VERSION}\nARG HELM_VERSION\nCOPY --from=setup /temp /root/.helm/* /root/.helm/\nCOPY bin/* /opt/bin/\nRUN chmod +x /opt/bin/*\nCOPY lib/* /opt/lib/\nCOPY build_entrypoint_script /opt/build_entrypoint_script\n\n# Install Python3\nRUN apk add --no-cache python3 \\\n    && rm -rf /root/.cache\n\nENV HELM_VERSION ${HELM_VERSION}\n\nENTRYPOINT [\"/opt/bin/release_chart\"]"
}