{
  "startTime": 1674248881222,
  "endTime": 1674248881745,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal-20210217 AS build\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update\n\nRUN apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    git \\\n    build-essential \\\n    wget \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /source\n# RUN git clone https://github.com/wg/wrk.git app/wrk\nRUN wget https://github.com/wg/wrk/archive/master.zip\n# RUN wget https://github.com/jmrnilsson/wrk/archive/master.zip\nRUN unzip master.zip\nCOPY ARM64v8-atomic-op-fix.diff /source/wrk-master/\nRUN (cd wrk-master; patch -p1 < ./ARM64v8-atomic-op-fix.diff; make)\n\nFROM ubuntu:focal-20210217 AS mmq-benchmark\n\nRUN apt-get update\n\nRUN apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    curl && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=build /source/wrk-master/ /app/wrk/\nCOPY install.sh /opt/install.sh\nCOPY *.lua /app/wrk/scripts/\nRUN chmod +x /opt/install.sh\n\nWORKDIR /app/wrk\n\nRUN rm -rf /var/lib/apt/lists/*\nRUN rm -rf /src/*.deb\nRUN apt-get clean\n\nRUN sh /opt/install.sh 2>&1 | tee -a \"install_sh.log\"\n\nENTRYPOINT [ \"bash\" ]\n"
}