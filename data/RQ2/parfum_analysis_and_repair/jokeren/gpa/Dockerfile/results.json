{
  "startTime": 1674252069928,
  "endTime": 1674252071095,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.0-devel-ubuntu20.04\n\n# CMD nvidia-smi\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install curl wget git python python3 python3-pip gfortran && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir numpy\n\nWORKDIR /staging\nRUN git clone https://github.com/Jokeren/spack.git && cd spack && git pull origin && git checkout 58a919d1677e0b172ec250b8dd84a1eb32efa366\nENV SPACK_ROOT=/staging/spack\nRUN ln -s $SPACK_ROOT/share/spack/docker/entrypoint.bash \\\n          /usr/local/bin/docker-shell \\\n && ln -s $SPACK_ROOT/share/spack/docker/entrypoint.bash \\\n          /usr/local/bin/interactive-shell \\\n && ln -s $SPACK_ROOT/share/spack/docker/entrypoint.bash \\\n          /usr/local/bin/spack-env\nSHELL [\"docker-shell\"]\nENTRYPOINT [\"/bin/bash\", \"/staging/spack/share/spack/docker/entrypoint.bash\"]\n\nRUN spack spec dyninst@cgo\nRUN spack install --only dependencies hpctoolkit ^dyninst@cgo ^elfutils\nRUN spack install gcc@7.3.0\nRUN spack load gcc@7.3.0\nRUN which gcc\n\nRUN git clone --recursive https://github.com/Jokeren/GPA.git\nWORKDIR GPA\nRUN mkdir build\nRUN ./bin/install.sh $(pwd)/build $(spack find --path boost | tail -n 1 | cut -d ' ' -f 3 | sed 's,/*[^/]\\+/*$,,')\n\nENTRYPOINT []\n\nENV CUDA_VISIBLE_DEVICES=0\nENV PATH=$(pwd)/build/bin:${PATH}\nENV PATH=$(pwd)/build/hpctoolkit/bin:${PATH}\nCMD git pull origin master && ./bin/bench.sh -m bench && ./bin/bench.sh -m advise\n"
}