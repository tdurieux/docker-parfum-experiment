{
  "startTime": 1674253077484,
  "endTime": 1674253078348,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM noobaa-base as server_builder\n\nRUN mkdir -p /noobaa_init_files && \\\n    cp -p ./build/Release/kube_pv_chown /noobaa_init_files\n\nCOPY . ./\nARG GIT_COMMIT\nRUN if [ \"${GIT_COMMIT}\" != \"\" ]; then sed -i 's/^  \"version\": \"\\(.*\\)\",$/  \"version\": \"\\1-'${GIT_COMMIT:0:7}'\",/' package.json; fi\n\n##############################################################\n# Layers:\n#   Title: Creating the noobaa tar\n#   Size: ~ 153 MB\n#   Cache: Rebuild when one of the files are changing\n#\n# In order to build this we should run\n# docker build from the local repo\n##############################################################\nRUN tar \\\n    --transform='s:^:noobaa-core/:' \\\n    --exclude='src/native/aws-cpp-sdk' \\\n    --exclude='src/native/third_party' \\\n    -czf noobaa-NVA.tar.gz \\\n    LICENSE \\\n    package.json \\\n    platform_restrictions.json \\\n    config.js \\\n    .nvmrc \\\n    src/ \\\n    build/Release/ \\\n    node_modules/ && rm noobaa-NVA.tar.gz\n\n#####################################################################################################################################\n\n##############################################################\n#   Title: Start of the Server Image\n#   Size: ~ 841 MB\n#   Cache: Rebuild when any layer is changing\n##############################################################\n\nFROM quay.io/centos/centos:stream8\n\nENV container docker\nENV PORT 8080\nENV SSL_PORT 8443\nENV ENDPOINT_PORT 6001\nENV ENDPOINT_SSL_PORT 6443\nENV WEB_NODE_OPTIONS ''\nENV BG_NODE_OPTIONS ''\nENV HOSTED_AGENTS_NODE_OPTIONS ''\nENV ENDPOINT_NODE_OPTIONS ''\n\n##############################################################\n# Layers:\n#   Title: Installing dependencies\n#   Size: ~ 379 MB\n#   Cache: Rebuild when we adding/removing requirments\n##############################################################\n\nRUN dnf install -y epel-release\nRUN dnf install -y -q bash \\\n    lsof \\\n    procps \\\n    openssl \\\n    rsyslog \\\n    strace \\\n    wget \\\n    curl \\\n    nc \\\n    less \\\n    bash-completion \\\n    python3-setuptools \\\n    jemalloc \\\n    xz && \\\n    dnf clean all\n\nRUN mkdir -p /usr/local/lib/python3.6/site-packages\n\n##############################################################\n# Layers:\n#   Title: Getting the node\n#   Size: ~ 110 MB\n#   Cache: Rebuild the .nvmrc is changing\n##############################################################\nCOPY ./.nvmrc ./.nvmrc\nCOPY ./src/deploy/NVA_build/install_nodejs.sh ./\nRUN chmod +x ./install_nodejs.sh && \\\n    ./install_nodejs.sh $(cat .nvmrc)\n\n##############################################################\n# Layers:\n#   Title: Copying and giving premissions\n#   Size: ~ 1 MB\n#   Cache: Rebuild when we need to add another copy\n#\n# In order to build this we should run\n# docker build from the local repo\n##############################################################\nRUN mkdir -p /data/ && \\\n    mkdir -p /log\n\nCOPY ./src/deploy/NVA_build/supervisord.orig ./src/deploy/NVA_build/\nCOPY ./src/deploy/NVA_build/supervisord.orig /tmp/supervisord\nCOPY ./src/deploy/NVA_build/supervisorctl.bash_completion /etc/bash_completion.d/supervisorctl\nCOPY ./src/deploy/NVA_build/rsyslog.conf /etc/rsyslog.conf\nCOPY ./src/deploy/NVA_build/noobaa_syslog.conf /etc/rsyslog.d/\nCOPY ./src/deploy/NVA_build/logrotate_noobaa.conf /etc/logrotate.d/noobaa/\nCOPY ./src/deploy/NVA_build/noobaa_init.sh /noobaa_init_files/\n\nCOPY ./src/deploy/NVA_build/setup_platform.sh /usr/bin/setup_platform.sh\nRUN /usr/bin/setup_platform.sh\n\nRUN chmod 775 /noobaa_init_files && \\\n    chgrp -R 0 /noobaa_init_files/ && \\\n    chmod -R g=u /noobaa_init_files/\n\nCOPY --from=server_builder /kubectl /usr/local/bin/kubectl\nCOPY --from=server_builder ./noobaa_init_files/kube_pv_chown /noobaa_init_files\nRUN mkdir -m 777 /root/node_modules && \\\n    chown root:root /noobaa_init_files/kube_pv_chown && \\\n    chmod 750 /noobaa_init_files/kube_pv_chown && \\\n    chmod u+s /noobaa_init_files/kube_pv_chown\n\n##############################################################\n# Layers:\n#   Title: Copying the tar file from the server_builder\n#   Size: ~ 153 MB\n#   Cache: Rebuild when there is a new tar file.\n##############################################################\nCOPY --from=server_builder /noobaa/noobaa-NVA.tar.gz /tmp/\nRUN cd /root/node_modules && \\\n    tar -xzf /tmp/noobaa-NVA.tar.gz && \\\n    chgrp -R 0 /root/node_modules && \\\n    chmod -R 775 /root/node_modules && rm /tmp/noobaa-NVA.tar.gz\n\n###############\n# PORTS SETUP #\n###############\nEXPOSE 60100\nEXPOSE 80\nEXPOSE 443\nEXPOSE 8080\nEXPOSE 8443\nEXPOSE 8444\nEXPOSE 27000\nEXPOSE 26050\n\n# Needs to be added only after installing jemalloc in dependencies section (our env section is before) - otherwise it will fail\nENV LD_PRELOAD /usr/lib64/libjemalloc.so.2\n\n###############\n# EXEC SETUP #\n###############\n# Run as non root user that belongs to root\nUSER 10001:0\n\n# We are using CMD and not ENDPOINT so\n# we can override it when we use this image as agent.\nCMD [\"/usr/bin/supervisord\", \"start\"]\n"
}