{
  "startTime": 1674252606386,
  "endTime": 1674252607013,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 15,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 12,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 15,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 12,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 36,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 34,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 33,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE\nFROM ${BASE_IMAGE}\n\nCOPY dockerfile_scripts /tmp/det_dockerfile_scripts\n\nRUN /tmp/det_dockerfile_scripts/install_google_cloud_sdk.sh\n\nARG TARGETPLATFORM\nARG TENSORFLOW_PIP\nARG TORCH_PIP\nARG TORCHVISION_PIP\nARG LIGHTNING_PIP\nARG TORCH_PROFILER_GIT\nARG PIN_PROTOBUF\nRUN if [ \"$TENSORFLOW_PIP\" ]; then \\\n        if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \\\n            TENSORFLOW_AARCH64_PIP=$(printf '%s' \"$TENSORFLOW_PIP\" | sed 's/cpu/aarch64/') \\\n            && pip install --no-cache-dir $TENSORFLOW_AARCH64_PIP; \\\n        else \\\n            pip install --no-cache-dir $TENSORFLOW_PIP; \\\n        fi; else \\\n            pip install --no-cache-dir $TENSORFLOW_PIP; \\\n        fi \\\n    fi\nRUN if [ \"$TORCH_PIP\" ]; then \\\n        if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \\\n            TORCH_AARCH64_PIP=$(printf '%s' \"$TORCH_PIP\" | sed 's/+cpu//g') \\\n            && pip install --no-cache-dir $TORCH_AARCH64_PIP; \\\n        else \\\n            pip install --no-cache-dir $TORCH_PIP; \\\n        fi; else \\\n            pip install --no-cache-dir $TORCH_PIP; \\\n        fi \\\n    fi\nRUN if [ \"$TORCHVISION_PIP\" ]; then \\\n pip install --no-cache-dir $TORCHVISION_PIP; fi\nRUN if [ \"$LIGHTNING_PIP\" ]; then \\\n pip install --no-cache-dir $LIGHTNING_PIP; fi\nRUN if [ \"$PIN_PROTOBUF\" ]; then \\\n pip install --no-cache-dir $PIN_PROTOBUF; fi\n\nRUN if [ \"$TORCH_PROFILER_GIT\" ]; then /tmp/det_dockerfile_scripts/torch-tb-profiler-patch.sh; fi\nARG HOROVOD_PIP=horovod\nARG HOROVOD_WITH_TENSORFLOW=1\nARG HOROVOD_WITH_PYTORCH=1\nARG HOROVOD_WITHOUT_MXNET=1\nARG HOROVOD_WITHOUT_MPI=1\nARG HOROVOD_CPU_OPERATIONS=GLOO\nRUN pip install --no-cache-dir cmake==3.22.4\nRUN pip install --no-cache-dir \"$HOROVOD_PIP\"\n\nRUN pip install --no-cache-dir -r /tmp/det_dockerfile_scripts/additional-requirements.txt\n\nRUN rm -r /tmp/*\n"
}