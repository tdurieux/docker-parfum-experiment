{
  "startTime": 1674255009842,
  "endTime": 1674255010423,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 122
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE\n# This will be an image from determinedai/environments\nFROM ${BASE_IMAGE}\n\nENV CMAKE_PREFIX_PATH=\"$(dirname $(which conda))/../\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 libgl1-mesa-glx unzip \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install MMCV\nARG MMCV_VERSION\nARG MMCV_CUDA_VERSION\nARG TORCH_VERSION\nRUN pip install --no-cache-dir mmcv-full==${MMCV_VERSION} -f https://download.openmmlab.com/mmcv/dist/${MMCV_CUDA_VERSION}/torch${TORCH_VERSION}/index.html\n\n# Install MMDetection\nRUN conda clean --all\nRUN git clone https://github.com/open-mmlab/mmdetection.git /mmdetection\nWORKDIR /mmdetection\nARG MMDETECTION_VERSION\nRUN git checkout tags/v${MMDETECTION_VERSION}\nENV FORCE_CUDA=\"1\"\nRUN pip install --no-cache-dir -r requirements/build.txt\nRUN pip install --no-cache-dir git+https://github.com/cocodataset/panopticapi.git\nRUN pip install --no-cache-dir -e .\nENV MMDETECTION_CONFIG_DIR=/mmdetection/configs\n\n# Wheel must be built before building the docker image\nRUN mkdir -p /tmp/model-hub-wheel\nADD dist /tmp/model-hub-wheel\nARG MODEL_HUB_VERSION\nRUN python -m pip install --find-links=/tmp/model-hub-wheel model-hub==${MODEL_HUB_VERSION}\n"
}