diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cisco/senml/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cisco/senml/Dockerfile/repaired.Dockerfile
index cfd3220..63ac254 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cisco/senml/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cisco/senml/Dockerfile/repaired.Dockerfile
@@ -1,23 +1,23 @@
 FROM ubuntu:latest as builder
-#FROM ubuntu:latest 
+#FROM ubuntu:latest
 LABEL description="Run SenML HTTP to influx server"
 
 #ENV TZ=America/Vancouver
 #RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 
 RUN apt-get update
-# RUN apt-get install -y tzdata build-essential cmake 
-RUN apt-get install -y git make gcc
-RUN apt-get install -y curl 
+# RUN apt-get install -y tzdata build-essential cmake
+RUN apt-get install --no-install-recommends -y git make gcc && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /tmp/go
-RUN curl -O https://dl.google.com/go/go1.15.2.linux-amd64.tar.gz
-RUN tar xvf go*linux-amd64.tar.gz
+RUN curl -f -O https://dl.google.com/go/go1.15.2.linux-amd64.tar.gz
+RUN tar xvf go*linux-amd64.tar.gz && rm go*linux-amd64.tar.gz
 RUN chown -R root:root ./go
 RUN mv go /usr/local
 
 WORKDIR /usr/src/senml
-COPY . . 
+COPY . .
 
 ENV GOPATH /root/work
 ENV PATH /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/go/bin:/root/work/bin
@@ -25,11 +25,11 @@ ENV CGO_ENABLED 0
 ENV GOOS linux
 
 RUN go get github.com/ugorji/go/codec
-RUN go build -a -installsuffix cgo -ldflags '-extldflags "-static"'  . 
+RUN go build -a -installsuffix cgo -ldflags '-extldflags "-static"'  .
 RUN go build -a -installsuffix cgo -ldflags '-extldflags "-static"'  ./cmd/senmlCat/.
 RUN go build -a -installsuffix cgo -ldflags '-extldflags "-static"'  ./cmd/senmlServer/.
-RUN cp ./senmlCat /usr/local/bin 
-RUN cp ./senmlServer /usr/local/bin 
+RUN cp ./senmlCat /usr/local/bin
+RUN cp ./senmlServer /usr/local/bin
 
 
 FROM alpine