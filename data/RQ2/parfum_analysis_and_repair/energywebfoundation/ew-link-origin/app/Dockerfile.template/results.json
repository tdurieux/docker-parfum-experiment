{
  "startTime": 1674251101791,
  "endTime": 1674251103015,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base-image for python on any machine using a template variable,\n# see more about dockerfile templates here:http://docs.resin.io/pages/deployment/docker-templates\nFROM balenalib/%%RESIN_MACHINE_NAME%%-python:3.7\n\n# use apt-get if you need to install dependencies,\n# for instance if you need ALSA sound utils, just uncomment the lines below.\n# RUN apt-get update && apt-get install -yq \\\n#    alsa-utils libasound2-dev && \\\n#    apt-get clean && rm -rf /var/lib/apt/lists/*\n\nVOLUME [\"/sys/fs/cgroup\", \"/sys/fs/cgroup/systemd\", \"/tmp\", \"/run\", \"/run/lock\"]\n\n# Set our working directory\nWORKDIR /usr/src/app\n\n# Copy requirements.txt first for better cache on later pushes\nCOPY Pipfile Pipfile.lock ./\n\n# pip install python deps from requirements.txt on the resin.io build server\nRUN pip3 install --no-cache-dir --upgrade pip setuptools pipenv\nRUN apt-get update && apt-get install --no-install-recommends -yq gcc libc-dev && apt-get clean && rm -rf /var/lib/apt/lists/*\nRUN pipenv install --system --deploy\n\n# This will copy all files in our root to the working  directory in the container\nCOPY . ./\n\n# Remove warnings\nENV PYTHONWARNINGS=\"ignore\"\n\n# bond.py will run when container starts up on the device\nCMD [\"python\", \"prodconsume.py\"]\n#CMD [\"/bin/sh\"]\n"
}