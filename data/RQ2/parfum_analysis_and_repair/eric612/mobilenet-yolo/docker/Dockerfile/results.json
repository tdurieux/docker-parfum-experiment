{
  "startTime": 1674252885988,
  "endTime": 1674252887329,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://www.learnopencv.com/install-opencv3-on-ubuntu\n# https://docs.opencv.org/3.4/d6/d15/tutorial_building_tegra_cuda.html\n\nARG CUDA_VERSION=10.1\nARG CUDNN_VERSION=7\n\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu18.04\n\nARG PYTHON_VERSION=2.7\nARG OPENCV_VERSION=4.1.1\n\n# Needed for string substitution\nSHELL [\"/bin/bash\", \"-c\"]\n\n# ENV LD_LIBRARY_PATH /usr/local/${CUDA}/compat:$LD_LIBRARY_PATH\n\n# COPY ./*.tar.gz /home/\n# COPY caffe.zip /home\n# RUN cd /home && \\\n#         tar -xvf cmake-3.14.7-Linux-x86_64.tar.gz && \\\n#         mv cmake-3.14.7-Linux-x86_64 /opt && \\\n#         echo \"export PATH=/opt/cmake-3.14.7-Linux-x86_64/bin:$PATH\" >> /etc/profile && \\\n#         . /etc/profile && \\\n#         cd ..\n\n# Add CUDA libs paths\n#RUN sed -i s@/archive.ubuntu.com/@/mirrors.tuna.tsinghua.edu.cn/@g /etc/apt/sources.list \\\nRUN export DEBIAN_FRONTEND=noninteractive \\\n#         && apt-get clean && apt-get update && \\\n        && apt-get update && \\\n        CUDA_PATH=(/usr/local/cuda-*) && \\\n    CUDA=`basename $CUDA_PATH` && \\\n    echo \"$CUDA_PATH/compat\" >> /etc/ld.so.conf.d/${CUDA/./-}.conf && \\\n    ldconfig && \\\n\n\n# Install all dependencies for OpenCV and Caffe\n    apt-get -y update --fix-missing && \\\n    apt-get -y install --no-install-recommends \\\n        python${PYTHON_VERSION} \\\n        python${PYTHON_VERSION}-dev \\\n        $( [ ${PYTHON_VERSION%%.*} -ge 3 ] && echo \"python${PYTHON_VERSION%%.*}-distutils\" ) \\\n        build-essential \\\n        wget \\\n        unzip \\\n        # cmake \\\n        git \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-scipy \\\n        python-skimage \\\n        libopencv-dev \\\n        libtbb2 \\\n        apt-utils \\\n        pkg-config \\\n        checkinstall \\\n        qt5-default \\\n        libglew-dev \\\n\t\tpython-opencv \\\n    && \\\n#     rm -rf /var/lib/apt/lists/* && \\\n\n# install python dependencies\n    sysctl -w net.ipv4.ip_forward=1 && \\\n    wget https://bootstrap.pypa.io/get-pip.py --progress=bar:force:noscroll && \\\n    python${PYTHON_VERSION} get-pip.py && \\\n    rm get-pip.py && \\\n#     pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple && \\\n    pip${PYTHON_VERSION} install --no-cache-dir numpy && \\\n\n# install CMake\n    cd /home && \\\n    wget https://github.com/Kitware/CMake/releases/download/v3.14.7/cmake-3.14.7-Linux-x86_64.tar.gz && \\\n    tar -xvf cmake-3.14.7-Linux-x86_64.tar.gz && \\\n    mv cmake-3.14.7-Linux-x86_64 /opt && \\\n    echo \"export PATH=/opt/cmake-3.14.7-Linux-x86_64/bin:$PATH\" >> /etc/profile && \\\n    . /etc/profile && \\\n\n# # install nccl\n#     tar -xvf nccl.tar.gz && \\\n#     cd /home/nccl && make -j install && cd .. && rm -rf nccl && \\\n#     rm nccl.tar.gz && \\\n    rm cmake-3.14.7-Linux-x86_64.tar.gz && \\\n    cd .. && \\\n\n\n# Set the default python and install PIP packages\n    update-alternatives --install /usr/bin/python${PYTHON_VERSION%%.*} python${PYTHON_VERSION%%.*} /usr/bin/python${PYTHON_VERSION} 1 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 1 && \\\n\n# Call default command.\n    python --version && \\\n    python -c \"import cv2 ; print(cv2.__version__)\" && rm -rf /var/lib/apt/lists/*;\n\n\n# install Caffe\n\nENV PATH=/opt/cmake-3.14.7-Linux-x86_64/bin:$PATH\n\n\n\nENV MobileNetYOLO_ROOT=/workspace/MobileNet-YOLO\nWORKDIR $MobileNetYOLO_ROOT\n\nRUN cd /workspace && \\\n\tgit clone --depth 1 https://github.com/eric612/MobileNet-YOLO.git  && \\\n\t#unzip caffe.zip && \\\n\tcd $MobileNetYOLO_ROOT && \\\n    \n    sed -i 's/set(Caffe_known_gpu_archs \"20 21(20) 30 35 50 60 61\")/set(Caffe_known_gpu_archs \"30 35 50 60 61 75\")/g' cmake/Cuda.cmake && \\\n    sed -i 's/set(__cuda_arch_bin \"60 61\")/set(__cuda_arch_bin \"75\")/g' cmake/Cuda.cmake && \\\n    sed -i 's/SET(CMAKE_C_COMPILER gcc-5)/# SET(CMAKE_C_COMPILER gcc-5)/g' CMakeLists.txt && \\\n    sed -i 's/SET(CMAKE_CXX_COMPILER g++-5)/# SET(CMAKE_CXX_COMPILER g++-5)/g' CMakeLists.txt && \\\n    mkdir build && cd build && \\\n    cmake -DUSE_CUDNN=1 .. && \\\n    make -j\"$(nproc)\"  \n\nENV PYCAFFE_ROOT $MobileNetYOLO_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $MobileNetYOLO_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$MobileNetYOLO_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\n# WORKDIR /workspace\n\n"
}