{
  "startTime": 1674246221956,
  "endTime": 1674246223138,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://www.learnopencv.com/install-opencv3-on-ubuntu\n# https://docs.opencv.org/3.4/d6/d15/tutorial_building_tegra_cuda.html\n\nARG CUDA_VERSION=10.1\nARG CUDNN_VERSION=7\n\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu18.04\n\nARG PYTHON_VERSION=3.6\nARG OPENCV_VERSION=4.1.1\n\n# Needed for string substitution\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Add CUDA libs paths\nRUN export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get update && \\\n    CUDA_PATH=(/usr/local/cuda-*) && \\\n    CUDA=`basename $CUDA_PATH` && \\\n    echo \"$CUDA_PATH/compat\" >> /etc/ld.so.conf.d/${CUDA/./-}.conf && \\\n    ldconfig && \\        \n    # Install all dependencies for OpenCV and Caffe\n    apt-get -y update --fix-missing && \\\n    apt-get -y install --no-install-recommends \\\n    python${PYTHON_VERSION} \\\n    python${PYTHON_VERSION}-dev \\\n    $( [ ${PYTHON_VERSION%%.*} -ge 3 ] && echo \"python${PYTHON_VERSION%%.*}-distutils\" ) \\\n    build-essential \\\n    wget \\\n    unzip \\\n    git \\   \n    python-scipy \\\n    python-skimage \\\n    libopencv-dev \\    \n    && \\\n# install python dependencies\n    sysctl -w net.ipv4.ip_forward=1 && \\\n    wget https://bootstrap.pypa.io/get-pip.py --progress=bar:force:noscroll && \\\n    python${PYTHON_VERSION} get-pip.py && \\\n    rm get-pip.py && \\\n    pip${PYTHON_VERSION} install --no-cache-dir numpy && \\\n    pip${PYTHON_VERSION} install --no-cache-dir torch && \\\n    pip${PYTHON_VERSION} install --no-cache-dir torchvision && \\\n    pip${PYTHON_VERSION} install --no-cache-dir lmdb && \\\n    pip${PYTHON_VERSION} install --no-cache-dir six && \\\n    pip${PYTHON_VERSION} install --no-cache-dir matplotlib && \\\n    pip${PYTHON_VERSION} install --no-cache-dir tqdm && \\\n    pip${PYTHON_VERSION} install --no-cache-dir nni && \\\n    pip${PYTHON_VERSION} install --no-cache-dir progress && \\\n    pip${PYTHON_VERSION} install --no-cache-dir filetype && \\\n    pip${PYTHON_VERSION} install --no-cache-dir msgpack_python && \\\n    pip${PYTHON_VERSION} install --no-cache-dir Pillow && \\\n    pip${PYTHON_VERSION} install --no-cache-dir PyYAML && \\\n    pip${PYTHON_VERSION} install --no-cache-dir imgaug && \\\n    pip${PYTHON_VERSION} install --no-cache-dir tensorboard && \\\n# Set the default python and install PIP packages\n    update-alternatives --install /usr/bin/python${PYTHON_VERSION%%.*} python${PYTHON_VERSION%%.*} /usr/bin/python${PYTHON_VERSION} 1 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python${PYTHON_VERSION} 1 && rm -rf /var/lib/apt/lists/*;\n\n# connect 8080 for nni\nEXPOSE 8080\n\nENV MobileNetYOLO_ROOT=/workspace/Mobilenet-YOLO-Pytorch\nWORKDIR $MobileNetYOLO_ROOT\n\nRUN cd /workspace && \\\n\tgit clone --depth 1 https://github.com/eric612/Mobilenet-YOLO-Pytorch.git  && \\\n\t#unzip caffe.zip && \\\n\tcd $MobileNetYOLO_ROOT"
}