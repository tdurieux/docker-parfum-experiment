{
  "startTime": 1674250014705,
  "endTime": 1674250015544,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.19.3-buster AS builder\nWORKDIR /data/\nRUN chmod -R a+rw /data/\nRUN addgroup --gid 1024 nodegroup\n## add user node to the group with GID 1024\nRUN adduser node nodegroup\nRUN chown -R node:nodegroup /data\nUSER node\nCOPY --chown=node:nodegroup package.json /data/\n\nRUN npm install && npm cache clean --force;\nENV PATH=/data/node_modules/.bin:$PATH\n\nRUN next telemetry disable\n\n# COPY . .\nCOPY --chown=node:nodegroup . .\nCOPY ./docker/entrypoint.sh /entrypoint/\nUSER root\nRUN [\"chmod\", \"+x\", \"/entrypoint/entrypoint.sh\"]\nUSER node\n\nARG SERVER_URL\nRUN next telemetry status\nRUN npm run build\nENTRYPOINT [\"/entrypoint/entrypoint.sh\"]\n\n\nFROM nginx:stable-alpine as production\n\nARG NGINX_PORT\nARG API_URL\nARG SERVER_URL\n\n# Change gid for the nginx user\n# To have usermod and groupmod, I have to install the shadow package.\nRUN apk --no-cache add shadow && \\\n   groupmod -g 1024 -o nginx\n# COPY --from=builder /data/dist /usr/share/nginx/html\nCOPY --from=builder /data/out /usr/share/nginx/html\nRUN ls -al /usr/share/nginx/html\nCOPY docker/nginx.conf.template /etc/nginx/conf.d/nginx.conf.template\nRUN export\nRUN sh -c \"envsubst \\\"`env | awk -F = '{printf \\\" \\\\\\\\$%s\\\", $1}'`\\\" < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/conf.d/custom.conf\"\n\n# RUN ps fax\n# CMD [\"cat\", \"/etc/nginx/conf.d/custom.conf\"]\n# CMD [\"/usr/sbin/nginx\", \"-s\", \"reload\", \"-c\", \"/etc/nginx/conf.d/custom.conf\"]\n# ENTRYPOINT [\"nginx\" , \"-g\", \"daemon off;\"]\n# RUN cat /docker-entrypoint.sh\n# ENTRYPOINT [ \"/docker-entrypoint.sh\", $@ ]\n\n# FROM node:lts-alpine as app\n# USER node\n# WORKDIR /data/\n# ## Copy built node modules and binaries without including the toolchain\n# COPY --from=builder /data/node_modules .\n\n# ENV PATH=/data/node_modules/.bin:$PATH\n\n# COPY . .\n\n# EXPOSE 8080\n# ENTRYPOINT [\"/entrypoint/entrypoint.sh\"]"
}