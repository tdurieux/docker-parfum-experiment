{
  "startTime": 1674217404309,
  "endTime": 1674217405116,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.13.0-alpine3.11 AS builder\n\nRUN apk add --no-cache python make g++\nRUN addgroup -S nodegroup && adduser -S -G node nodegroup\n\nUSER node\nWORKDIR /home/node\n\n# Copy or mount node app here\nCOPY --chown=node:nodegroup package.json /home/node/\n\nRUN npm install && npm cache clean --force;\n\n\nFROM node:16.13.0-alpine3.11 as production\n\nRUN addgroup -S nodegroup && adduser -S -G node nodegroup\n\nRUN chown -R node:nodegroup /home/node/\nRUN rm -rf /home/node/dist\n\nUSER node\nCOPY --chown=node:nodegroup ./docker/entrypoint.sh /tmp/\nRUN [\"chmod\", \"+x\", \"/tmp/entrypoint.sh\"]\n\nWORKDIR /home/node/\nRUN [\"chown\", \"-R\", \"node:nodegroup\", \"/home/node/\"]\n\n## Copy built node modules and binaries without including the toolchain\nCOPY --from=builder --chown=node:nodegroup /home/node/node_modules node_modules\n\nENV PATH=/home/node/node_modules/.bin:$PATH\n\nCOPY --chown=node:nodegroup . .\n\nRUN [\"ls\", \"-al\",  \"/home/node/\"]\n# RUN [\"chmod\", \"-R\", \"oug+rx\", \"/home/node/src/\"]\n\nEXPOSE 8081\nENTRYPOINT [\"/tmp/entrypoint.sh\"]"
}