{
  "startTime": 1674249168760,
  "endTime": 1674249169845,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nRUN apt update && apt dist-upgrade -y\nRUN apt-get install --no-install-recommends -y build-essential \\\n      libpcre3-dev libssl-dev git autoconf \\\n      automake autoconf-archive && rm -rf /var/lib/apt/lists/*;\nCOPY . fuzzball/\nRUN cd fuzzball && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl --prefix /root/scratch && make clean && \\\n    make && make install && cd docs && \\\n    ../src/prochelp ../src/mpihelp.raw mpihelp.txt mpihelp.html && \\\n    ../src/prochelp ../src/mufman.raw mufman.txt mufman.html && \\\n    ../src/prochelp ../src/muckhelp.raw muckhelp.txt muckhelp.html\n\nFROM ubuntu:20.04\nRUN apt update && apt dist-upgrade -y \\\n    && apt-get install --no-install-recommends -y libssl1.1 openssl \\\n    && mkdir -p /opt/fbmuck-base \\\n    && mkdir -p /opt/fbmuck-ssl && rm -rf /var/lib/apt/lists/*;\nCOPY --from=0 /root/scratch /usr\n\n# Copy docker-entrypoint.sh into /usr/bin\nCOPY scripts/docker-entrypoint.sh /usr/bin/\n\nRUN chmod a+rx /usr/bin/docker-entrypoint.sh\n\n# Copy FB base into /opt/fbmuck-base in case we need to start a blank DB\nCOPY game/ dbs/starterdb/ /opt/fbmuck-base/\n# Additionally, copy files in docs into the fbmuck-base/data directory\n# so users have helpful things like help.txt\nCOPY docs/ /opt/fbmuck-base/data\n\n# Rename the base db to the right db file name\nRUN mv /opt/fbmuck-base/data/starterdb.db /opt/fbmuck-base/data/std-db.db\n\n# Uncomment this before building if you want the database saved upon\n# process termination\n#STOPSIGNAL SIGUSR2\n\nENTRYPOINT [\"bash\", \"/usr/bin/docker-entrypoint.sh\"]\n"
}