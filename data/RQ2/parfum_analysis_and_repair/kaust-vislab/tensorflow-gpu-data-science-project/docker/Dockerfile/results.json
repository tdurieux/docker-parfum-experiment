{
  "startTime": 1674251701291,
  "endTime": 1674251702028,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-devel-ubuntu16.04\n\nLABEL maintainer=\"pughdr <david.pugh@kaust.edu.sa>\"\n\nSHELL [ \"/bin/bash\", \"--login\", \"-c\" ]\n\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y wget bzip2 curl git && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Create a non-root user\nARG username=al-khawarizmi\nARG uid=1000\nARG gid=100\nENV USER $username\nENV UID $uid\nENV GID $gid\nENV HOME /home/$USER\n\nRUN adduser --disabled-password \\\n    --gecos \"Non-root user\" \\\n    --uid $UID \\\n    --gid $GID \\\n    --home $HOME \\\n    $USER\n\nCOPY environment.yml requirements.txt /tmp/\nRUN chown $UID:$GID /tmp/environment.yml /tmp/requirements.txt\n\nCOPY postBuild docker/entrypoint.sh /usr/local/bin/\nRUN chown $UID:$GID /usr/local/bin/postBuild /usr/local/bin/entrypoint.sh && \\\n    chmod u+x /usr/local/bin/postBuild /usr/local/bin/entrypoint.sh\n\nUSER $USER\n\n# install miniconda\nENV MINICONDA_VERSION 4.7.12\nENV CONDA_DIR $HOME/miniconda3\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-$MINICONDA_VERSION-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    chmod +x ~/miniconda.sh && \\\n    ~/miniconda.sh -b -p $CONDA_DIR && \\\n    rm ~/miniconda.sh\n\n# make non-activate conda commands available\nENV PATH=$CONDA_DIR/bin:$PATH\n\n# make conda activate command available from /bin/bash --login shells\nRUN echo \". $CONDA_DIR/etc/profile.d/conda.sh\" >> ~/.profile\n\n# make conda activate command available from /bin/bash --interative shells\nRUN conda init bash\n\n# create a project directory inside user home\nENV PROJECT_DIR $HOME/app\nRUN mkdir $PROJECT_DIR\nWORKDIR $PROJECT_DIR\n\n# build the conda environment\nENV ENV_PREFIX $PROJECT_DIR/env\nENV HOROVOD_CUDA_HOME $CUDA_HOME\nENV HOROVOD_NCCL_HOME $ENV_PREFIX\nENV HOROVOD_GPU_ALLREDUCE NCCL\nENV HOROVOD_GPU_BROADCAST NCCL\nRUN conda update --name base --channel defaults conda && \\\n    conda env create --prefix $ENV_PREFIX --file /tmp/environment.yml --force && \\\n    conda activate $ENV_PREFIX && \\\n    . /usr/local/bin/postBuild && \\\n    conda clean --all --yes\n\n# use an entrypoint script to insure conda environment is properly activated at runtime\nENTRYPOINT [ \"/usr/local/bin/entrypoint.sh\" ]\n\n# default command will be to launch JupyterLab server for development\nCMD [ \"jupyter\", \"lab\", \"--no-browser\", \"--ip\", \"0.0.0.0\" ]\n"
}