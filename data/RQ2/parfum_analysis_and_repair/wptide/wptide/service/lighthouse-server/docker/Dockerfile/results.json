{
  "startTime": 1674254859027,
  "endTime": 1674254860074,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine\n\nMAINTAINER XWP <engage@xwp.co>\n\n# Disable Lighthouse error reporting.\nENV CI true\n\n# Copy the shell script.\nCOPY bin/lh /usr/bin/lh\n\n# Install software.\nRUN echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories \\\n    && apk add --no-cache --upgrade --virtual .build-deps \\\n        apk-tools \\\n        nodejs-npm \\\n    && apk add --no-cache --update --virtual .persistent-deps \\\n        chromium \\\n        grep \\\n        nodejs \\\n        ttf-freefont \\\n        udev \\\n    && npm i -g npm \\\n    && npm i -g lighthouse \\\n    && runDeps=\"$( \\\n        scanelf --needed --nobanner --recursive /usr/local \\\n            | awk '{ gsub(/,/, \"\\nso:\", $2); print \"so:\" $2 }' \\\n            | sort -u \\\n            | xargs -r apk info --installed \\\n            | sort -u \\\n    )\" \\\n    && apk add --virtual .run-deps $runDeps \\\n    && apk del .build-deps \\\n    && rm -rf /var/lib/apk/lists/* /usr/share/doc/* /usr/share/man/* /usr/share/info/* /var/cache/apk/* \\\n    && chmod +x /usr/bin/lh \\\n    && mkdir -p /srv/data && npm cache clean --force;\n\n# Add the executable.\nADD bin/lighthouse-server /\n\n# Set the working directory.\nWORKDIR /srv/data\n\n# Run the executable.\nCMD [\"/lighthouse-server\"]"
}