{
  "startTime": 1674255069735,
  "endTime": 1674255070578,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.7.5\n\n# The Docker environment is based on Debian buster, which used to be called stable Debian, but is now called oldstable.\nRUN apt-get update --allow-releaseinfo-change\n\n# System prerequisites\nRUN apt-get update \\\n && apt-get -y --no-install-recommends install ca-certificates libgnutls30 build-essential libpq-dev pdftk-java ghostscript poppler-utils curl \\\n && curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n && apt-get update && apt-get install --no-install-recommends -y nodejs yarn \\\n && rm -rf /var/lib/apt/lists/*\n\n# If you require additional OS dependencies, install them here:\n# RUN apt-get update \\\n#  && apt-get -y install imagemagick nodejs \\\n#  && rm -rf /var/lib/apt/lists/*\n\nENV SUPERCRONIC_URL=https://github.com/aptible/supercronic/releases/download/v0.1.9/supercronic-linux-amd64 \\\n    SUPERCRONIC=supercronic-linux-amd64 \\\n    SUPERCRONIC_SHA1SUM=5ddf8ea26b56d4a7ff6faecdd8966610d5cb9d85\n\nRUN curl -fsSLO \"$SUPERCRONIC_URL\" \\\n && echo \"${SUPERCRONIC_SHA1SUM}  ${SUPERCRONIC}\" | sha1sum -c - \\\n && chmod +x \"$SUPERCRONIC\" \\\n && mv \"$SUPERCRONIC\" \"/usr/local/bin/${SUPERCRONIC}\" \\\n && ln -s \"/usr/local/bin/${SUPERCRONIC}\" /usr/local/bin/supercronic\n\n# pdftk requires Debian's Java 11, but gyr-efiler requires Java 8. Download Java 8 and provide a variable for the Ruby app.\nENV OPENJDK8_URL=https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u292-b10/OpenJDK8U-jre_x64_linux_hotspot_8u292b10.tar.gz \\\n    OPENJDK_SHA1SUM=55848001c21214d30ca1362bace8613ce9733516\nRUN wget -O /tmp/openjdk.tar.gz \"$OPENJDK8_URL\" \\\n && echo \"${OPENJDK_SHA1SUM}  /tmp/openjdk.tar.gz\" | sha1sum -c - \\\n && cd /opt && tar xf /tmp/openjdk.tar.gz \\\n && rm -f /tmp/openjdk.tar.gz\nENV VITA_MIN_JAVA_HOME=/opt/jdk8u292-b10-jre\n\nADD . /app\nWORKDIR /app\nADD package.json yarn.lock /app/\nRUN NODE_ENV=production yarn install --frozen-lockfile && yarn cache clean;\nADD .ruby-version Gemfile Gemfile.lock /app/\n\nRUN set -a \\\n    && . ./.aptible.env \\\n    && gem install bundler:$(cat Gemfile.lock | tail -1 | tr -d \" \") --no-document \\\n    && bundle install --without test development\n\n# Add IRS e-file schemas, which are not in the git repo\nRUN set -a \\\n && . ./.aptible.env \\\n && bundle exec rails setup:download_efile_schemas setup:unzip_efile_schemas setup:download_gyr_efiler\n\n# Collect assets. This approach is not fully production-ready, but\n# will help you experiment with Aptible Deploy before bothering with assets.\n# Review http://go.aptible.com/assets for production-ready advice.\nRUN set -a \\\n && . ./.aptible.env \\\n && bundle exec rake assets:precompile\n\nEXPOSE 3000\n\nCMD [\"bundle\", \"exec\", \"rails\", \"s\", \"-b\", \"0.0.0.0\", \"-p\", \"3000\"]\n"
}