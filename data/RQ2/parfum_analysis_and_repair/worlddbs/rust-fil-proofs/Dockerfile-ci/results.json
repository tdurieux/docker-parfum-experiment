{
  "startTime": 1674251024187,
  "endTime": 1674251024786,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for CircleCI\n# build with\n# `docker build -t filecoin/rust:latest -f ./Dockerfile-ci .`\n# rebuild: `docker build --pull --no-cache -t filecoin/rust:latest -f ./Dockerfile-ci .`\n\nFROM debian:stretch\n\n# Some of the dependencies I need to build a few libraries,\n# personalize to your needs. You can use multi-stage builds\n# to produce a lightweight image.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl file gcc g++ git make openssh-client \\\n    autoconf automake cmake libtool libcurl4-openssl-dev libssl-dev \\\n    libelf-dev libdw-dev binutils-dev zlib1g-dev libiberty-dev wget \\\n    xz-utils pkg-config python clang ocl-icd-opencl-dev libhwloc-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n\nENV PATH \"$PATH:/root/.cargo/bin\"\nENV RUSTFLAGS \"-C link-dead-code\"\nENV CFG_RELEASE_CHANNEL \"nightly\"\n\nRUN bash -l -c 'echo $(rustc --print sysroot)/lib >> /etc/ld.so.conf'\nRUN bash -l -c 'echo /usr/local/lib >> /etc/ld.so.conf'\nRUN ldconfig\n"
}