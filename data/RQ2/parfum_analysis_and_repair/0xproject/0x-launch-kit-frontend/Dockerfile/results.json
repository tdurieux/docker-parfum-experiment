{
  "startTime": 1674216507225,
  "endTime": 1674216507949,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 24,
        "columnEnd": 40
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM  node:12-alpine as yarn-install\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN apk update && \\\n    apk upgrade && \\\n    apk add --no-cache --virtual build-dependencies bash git openssh python make g++ && \\\n    yarn --no-cache || \\\n    apk del build-dependencies && \\\n    yarn cache clean && yarn cache clean;\n\n# Stage 1\nFROM  node:12-alpine as react-build\nWORKDIR /app\nCOPY --from=yarn-install /app/node_modules /app/node_modules\nCOPY . .\nRUN yarn build && yarn cache clean;\n\n# Stage 2 - the production environment\nFROM nginx:alpine\nCOPY --from=react-build /app/build /usr/share/nginx/html\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}