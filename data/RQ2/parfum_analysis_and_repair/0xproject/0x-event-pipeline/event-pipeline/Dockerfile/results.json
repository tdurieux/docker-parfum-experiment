{
  "startTime": 1674253205016,
  "endTime": 1674253205738,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage 1 - Build\nFROM node:12-alpine as build\nWORKDIR /usr/src/app\n\n# Install app dependencies\nCOPY event-pipeline event-pipeline\nCOPY pipeline-utils pipeline-utils\nCOPY package.json yarn.lock tsconfig.json lerna.json ./\nRUN apk update && \\\n    apk upgrade && \\\n    apk add --no-cache --virtual build-dependencies bash git openssh python3 make g++ && \\\n    yarn --frozen-lockfile --no-cache\n\nRUN yarn build\n\n# Stage 2\nFROM node:12-alpine\nWORKDIR /usr/src/app\n\n# Setup monorepo\nCOPY package.json yarn.lock tsconfig.json lerna.json ./\n\n# Setup pipeline-utils\nCOPY pipeline-utils/package.json pipeline-utils/\nCOPY --from=build /usr/src/app/pipeline-utils/lib pipeline-utils/lib\n\n# Install event-pipeline runtime dependencies\nCOPY event-pipeline/package.json event-pipeline/\nRUN apk add --no-cache git python3 make g++ && \\\n    yarn install --frozen-lockfile --no-cache --production && \\\n    apk del git python3 make g++ && yarn cache clean;\n\n# Copy built files\nCOPY --from=build /usr/src/app/event-pipeline/lib event-pipeline/lib/\n\n#Start\nWORKDIR /usr/src/app/event-pipeline\nCMD [ \"yarn\", \"migrate_and_start\" ]\n"
}