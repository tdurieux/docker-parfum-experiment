{
  "startTime": 1674246177212,
  "endTime": 1674246177678,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 5,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 26,
        "columnStart": 5,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV LC_ALL=C\n\nRUN apt-get update \\\n  && apt-get dist-upgrade -y \\\n  && apt-get install --no-install-recommends -y software-properties-common \\\n  && add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    ccache \\\n    g++ \\\n    gcc \\\n    g++-8 \\\n    gcc-8 \\\n    git \\\n    openjdk-8-jre-headless \\\n    curl \\\n    python-pip \\\n    python3-pip \\\n    python-all \\\n    libfontconfig1 \\\n    make \\\n    gcc-6-multilib \\\n    g++-6-multilib \\\n    gcc-8-multilib \\\n    g++-8-multilib && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir tap2junit \\\n  && pip3 install --no-cache-dir tap2junit\n\nRUN git clone https://github.com/rvagg/rpi-newer-crosstools.git /opt/raspberrypi/rpi-newer-crosstools\n\nCOPY cc-selector.sh /opt/raspberrypi/cc-selector.sh\n\nRUN chmod 755 /opt/raspberrypi/cc-selector.sh\n\nRUN addgroup --gid {{ server_user_gid.stdout_lines[0] }} {{ server_user }} \\\n && adduser --gid {{ server_user_gid.stdout_lines[0] }} --uid {{ server_user_uid.stdout_lines[0] }} --disabled-password --gecos {{ server_user }} {{ server_user }}\n\nVOLUME /home/{{ server_user }}/ /home/{{ server_user }}/.ccache\n\nUSER {{ server_user }}:{{ server_user }}\n\nENV USER={{ server_user }} \\\n  JOBS={{ server_jobs | default(ansible_processor_vcpus) }} \\\n  SHELL=/bin/bash \\\n  HOME=/home/{{ server_user }} \\\n  PATH=/usr/lib/ccache/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n  NODE_COMMON_PIPE=/home/{{ server_user }}/test.pipe \\\n  NODE_TEST_DIR=/home/{{ server_user }}/tmp \\\n  OSTYPE=linux-gnu \\\n  OSVARIANT=docker \\\n  DESTCPU={{ arch }} \\\n  ARCH={{ arch }} \\\n  CCACHE_TEMPDIR=/home/{{ server_user }}/.ccache/{{ item.name }}\n\nCMD cd /home/{{ server_user }} \\\n  && curl https://ci.nodejs.org/jnlpJars/slave.jar -O \\\n  && java -Xmx{{ server_ram|default('128m') }} \\\n          -jar /home/{{ server_user }}/slave.jar \\\n          -jnlpUrl {{ jenkins_url }}/computer/{{ item.name }}/slave-agent.jnlp \\\n          -secret {{ item.secret }}\n"
}