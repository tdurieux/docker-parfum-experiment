{
  "startTime": 1674253918380,
  "endTime": 1674253918967,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for Yandex Transport Monitor Tests\n# Architectures: armhf (Orange PI, Raspberry PI)\n#                x86-64\n\n# Use Ubuntu 18.04 as basis\nFROM ubuntu:18.04\n\n# ----- CHANGE THESE ARGUMENTS TO YOUR DESIRES ----- #\n# -- ИЗМЕНИТЕ ДАННЫЕ АРГУМЕНТЫ ДЛЯ ВАШЕЙ СИТУАЦИИ -- #\n# TimeZone / Часовой Пояс\nARG timezone=Europe/Moscow\n\n# -------------------------------------------------- #\n\n# Setting frontend to non-interactive, no questions asked, ESPECIALLY for locales.\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install all required software, right way.\n# We're using all latest package versions here. Risky.\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    locales \\\n    tzdata \\\n    python3 \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Install pytest\nRUN pip3 install --no-cache-dir pytest \\\n                 pytest-progress \\\n                 pytest-rerunfailures \\\n                 pytest-timeout\n\n\n# Dealing with goddamn locales\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Setting the goddamn TimeZone\nENV TZ=${timezone}\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# Cleaning\nRUN apt-get clean\n\n# Creating the user\nRUN mkdir -p /home/transport_api\nRUN mkdir -p /home/transport_api/testdata/output\nRUN useradd transport_api --home /home/transport_api --shell /bin/bash\n\n# Copying project\nADD yandex_transport_webdriver_api/* /home/transport_api/yandex_transport_webdriver_api/\n\n# Copying tests\nADD tests/* /home/transport_api/tests/\nADD tests/testdata/* /home/transport_api/tests/testdata/\nADD execute_tests.sh /home/transport_api\nADD continuous_tests.sh /home/transport_api\nADD function_monitoring.sh /home/transport_api\nRUN mkdir -p /home/transport_api/tests/testdata/output\n\nRUN chown -R transport_api:transport_api /home/transport_api\nWORKDIR /home/transport_api\n\nUSER transport_api:transport_api\nCMD /home/transport_api/execute_tests.sh\n"
}