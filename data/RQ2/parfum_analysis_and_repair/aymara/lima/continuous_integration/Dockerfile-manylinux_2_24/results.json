{
  "startTime": 1674214985607,
  "endTime": 1674214988619,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 252,
        "lineEnd": 252,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 363,
        "lineEnd": 363,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 353,
        "lineEnd": 353,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 203,
        "lineEnd": 203,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 253,
        "lineEnd": 253,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 351,
        "lineEnd": 351,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 357,
        "lineEnd": 357,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 365,
        "lineEnd": 365,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 411,
        "lineEnd": 411,
        "columnStart": 115,
        "columnEnd": 157
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 29,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 195,
        "lineEnd": 195,
        "columnStart": 29,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 240,
        "lineEnd": 241,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 274,
        "lineEnd": 274,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 285,
        "lineEnd": 285,
        "columnStart": 29,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 308,
        "lineEnd": 308,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 334,
        "lineEnd": 343,
        "columnStart": 29,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 29,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 177,
        "lineEnd": 177,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 195,
        "lineEnd": 195,
        "columnStart": 29,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 228,
        "lineEnd": 228,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 240,
        "lineEnd": 241,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 274,
        "lineEnd": 274,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 285,
        "lineEnd": 285,
        "columnStart": 29,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 308,
        "lineEnd": 308,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 334,
        "lineEnd": 343,
        "columnStart": 29,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux_2_24_x86_64 AS manylinux_2_24_with_qt_and_pyside\n\nENV DEBIAN_FRONTEND=noninteractive\nENV PATH=\"/opt/python/cp38-cp38/bin:${PATH}\"\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nRUN locale\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        wget build-essential pkg-config automake gawk gettext \\\n        firebird-dev \\\n        freetds-dev \\\n        gstreamer1.0-plugins-base \\\n        gstreamer1.0-plugins-good \\\n        gstreamer1.0-plugins-ugly \\\n        gstreamer1.0-x \\\n        libasound2-dev \\\n        libavcodec-dev \\\n        libavformat-dev \\\n        libavutil-dev \\\n        libbz2-dev \\\n        libcap-dev \\\n        libdbus-1-dev \\\n        libdbus-glib-1-dev \\\n        libdrm-dev \\\n        libegl1-mesa-dev \\\n        libevent-dev \\\n        libfontconfig1-dev \\\n        libfreetype6-dev \\\n        libgbm-dev \\\n        libgcrypt20-dev \\\n        libgles2-mesa-dev \\\n        libglib2.0-dev \\\n        libgst-dev \\\n        libgstreamer-plugins-base1.0-dev \\\n        libgstreamer1.0-dev \\\n        libicu-dev \\\n        libinput-dev \\\n        libiodbc2-dev \\\n        libjpeg62-turbo-dev \\\n        libjsoncpp-dev \\\n        libminizip-dev \\\n        libnss3-dev \\\n        libopus-dev \\\n        libpci-dev \\\n        libpng-dev \\\n        libpng16-16 \\\n        libpq-dev \\\n        libpulse-dev \\\n        librsvg2-common \\\n        libsnappy-dev \\\n        libsqlite0-dev \\\n        libsqlite3-dev \\\n        libsrtp0-dev \\\n        libsrtp2-dev \\\n        libssl-dev \\\n        libssl1.1 \\\n        libswscale-dev \\\n        libsystemd-dev \\\n        libudev-dev \\\n        libvpx-dev \\\n        libwayland-dev \\\n        libwebp-dev \\\n        libx11-dev \\\n        libx11-xcb-dev \\\n        libx11-xcb1 \\\n        libxcb-glx0-dev \\\n        libxcb-icccm4 \\\n        libxcb-icccm4-dev \\\n        libxcb-image0 \\\n        libxcb-image0-dev \\\n        libxcb-keysyms1 \\\n        libxcb-keysyms1-dev \\\n        libxcb-randr0-dev \\\n        libxcb-render-util0 \\\n        libxcb-render-util0-dev \\\n        libxcb-shape0-dev \\\n        libxcb-shm0 \\\n        libxcb-shm0-dev \\\n        libxcb-sync-dev \\\n        libxcb-sync1 \\\n        libxcb-xfixes0-dev \\\n        libxcb-xinerama0 \\\n        libxcb-xinerama0-dev \\\n        libxcb1 \\\n        libxcb1-dev \\\n        libxext-dev \\\n        libxi-dev \\\n        libxkbcommon-dev \\\n        libxrender-dev \\\n        libxslt1-dev \\\n        libxss-dev \\\n        libxtst-dev \\\n        nodejs \\\n        ruby \\\n        va-driver-all \\\n        lsb-release \\\n        libssl-dev \\\n        gperf \\\n        dos2unix && rm -rf /var/lib/apt/lists/*;\nRUN apt remove -y libpython3.5-stdlib libpython3.5-minimal\nRUN install -d /src\nWORKDIR /src\nRUN wget -q https://download.qt.io/archive/qt/5.15/5.15.2/single/qt-everywhere-src-5.15.2.tar.xz\nRUN tar xf qt-everywhere-src-5.15.2.tar.xz && rm qt-everywhere-src-5.15.2.tar.xz\n\nWORKDIR /\nCOPY build_qt5.sh /\n#RUN apt install -y lsb-release\nRUN bash /build_qt5.sh\n\n\nRUN echo \"LC_ALL=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANG=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\nRUN cp  /etc/default/locale /etc/environment\nRUN locale-gen\nRUN dpkg-reconfigure locales\n\nRUN python3.8 -m pip install scikit-build ninja\nENV PATH=\"/opt/python/cp38-cp38/bin:${PATH}\"\nRUN cmake --version\n\nENV PATH=/opt/qt5/5.15.2/gcc_64/bin:$PATH\n\nWORKDIR /\nRUN wget -q https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-13.0.0.tar.gz\nRUN tar xf llvmorg-13.0.0.tar.gz && rm llvmorg-13.0.0.tar.gz\nWORKDIR /llvm-project-llvmorg-13.0.0\nRUN cmake -S llvm -B build -G Ninja -DLLVM_PARALLEL_LINK_JOBS=1 -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_LLVM_DYLIB=ON -DLLVM_ENABLE_PROJECTS=\"clang\"\n# -DLLVM_USE_LINKER=gold -DLLVM_USE_SPLIT_DWARF=ON\nRUN cmake --build build\nRUN cmake --install build\n\n\n\n# Install PySide2 and shiboken2 from source as binary installs are broken\n# Done in /home/gael/Logiciels/\nWORKDIR /\nRUN git clone https://code.qt.io/cgit/pyside/pyside-setup.git\nWORKDIR /pyside-setup\nRUN git checkout 5.15.2\nRUN install -d /opt/_internal/cpython-3.8.12/lib/x86_64-linux-gnu/\nRUN touch /opt/_internal/cpython-3.8.12/lib/x86_64-linux-gnu/libpython3.8.a\n\nRUN apt-get update -y -qq && apt-get install --no-install-recommends -y libpulse-mainloop-glib0 && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /pyside-setup\nRUN python3.8 -m pip install cmake\n\nENV QTDIR=/opt/qt5\nENV PATH=/opt/qt5/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/qt5/lib:$LD_LIBRARY_PATH\n\nRUN python3.8 setup.py install --cmake=/opt/python/cp38-cp38/bin/cmake --build-type=all\n\nWORKDIR /\n\n\n\n################################################################################\n################################################################################\n################################################################################\n\n\n\n\n\nFROM quay.io/pypa/manylinux_2_24_x86_64 AS manylinux_2_24_with_tensorflow_for_lima_1_9\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN echo \"LC_ALL=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANG=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\nRUN cp  /etc/default/locale /etc/environment\nRUN locale-gen\nRUN dpkg-reconfigure locales\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nARG BRANCH=master\nARG USE_TENSORFLOW=\"true\"\nARG GITHUB_TOKEN\nARG LIMA_DISABLE_FSW_TESTING\nARG LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS\nARG NLTK_PTB_DP_FILE\n\nRUN apt-get update -y -qq && apt-get install --no-install-recommends -y git build-essential pkg-config automake wget && rm -rf /var/lib/apt/lists/*;\n\n\nRUN python3.8 -m pip install cmake ninja\nENV PATH=\"/opt/python/cp38-cp38/bin:${PATH}\"\n\nWORKDIR /\nRUN wget -q https://launchpad.net/~limapublisher/+archive/ubuntu/ppa/+sourcefiles/tensorflow-for-lima/1.9-ubuntu7~20.10/tensorflow-for-lima_1.9.orig.tar.xz\nRUN tar xf tensorflow-for-lima_1.9.orig.tar.xz && rm tensorflow-for-lima_1.9.orig.tar.xz\nRUN git clone -b r1.9 https://github.com/aymara/tensorflow.git\nRUN cp -r /tensorflow-for-lima-1.9/external /tensorflow\nWORKDIR /tensorflow\n#RUN bash ./download_dependencies.sh\nRUN install -d /tensorflow/tensorflow-build\nWORKDIR /tensorflow/tensorflow-build\nRUN cmake -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_INSTALL_PREFIX=/tensorflow_for_lima ../tensorflow/contrib/cmake\nRUN make -C /tensorflow/tensorflow-build -j 1\nRUN make -C /tensorflow/tensorflow-build -j 1 install\n\n\n\n\n################################################################################\n################################################################################\n################################################################################\n\n\n\n\nFROM quay.io/pypa/manylinux_2_24_x86_64 AS manylinux_2_24_with_icu\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN echo \"LC_ALL=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANG=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\nRUN cp  /etc/default/locale /etc/environment\nRUN locale-gen\nRUN dpkg-reconfigure locales\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        wget build-essential pkg-config automake gawk gettext && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\n# Cloning icu ASAP to avoid\nRUN git clone https://github.com/unicode-org/icu.git --depth=1 --branch=release-70-1\nWORKDIR /icu/icu4c/source\nRUN ./runConfigureICU Linux --prefix=/usr/local --enable-static && make -j && make test && make install\n\nWORKDIR /\n# Download boost, untar, setup install with bootstrap and only do the Program Options library,\n# and then install\nRUN wget -q https://downloads.sourceforge.net/project/boost/boost/1.78.0/boost_1_78_0.tar.gz\nRUN tar xfz boost_1_78_0.tar.gz && rm boost_1_78_0.tar.gz\nRUN rm boost_1_78_0.tar.gz\nWORKDIR /boost_1_78_0\nRUN ./bootstrap.sh --prefix=/usr/local --with-libraries=program_options,regex,filesystem,system,thread,test\nRUN ./b2 install\nRUN rm -rf boost_1_78_0\n\n\n\n\n################################################################################\n################################################################################\n################################################################################\n\n\n\n\nFROM quay.io/pypa/manylinux_2_24_x86_64 AS manylinux_2_24_with_nltk_data\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN echo \"LC_ALL=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANG=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\nRUN cp  /etc/default/locale /etc/environment\nRUN locale-gen\nRUN dpkg-reconfigure locales\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN apt-get update -y -qq && apt-get install --no-install-recommends -y python3-nltk libtre-dev gnupg libssl-dev nodejs && rm -rf /var/lib/apt/lists/*;\n# Not available in manylinux: libenchant-2-dev npm\n\nWORKDIR /\n\nRUN sed -ie \"s|DEFAULT_URL = 'http://nltk.googlecode.com/svn/trunk/nltk_data/index.xml'|DEFAULT_URL = 'http://nltk.github.com/nltk_data/'|\" /usr/lib/python*/*/nltk/downloader.py\nRUN python3.5 -m nltk.downloader -d nltk_data dependency_treebank\nRUN cat nltk_data/corpora/dependency_treebank/wsj_*.dp | grep -v \"^$\" > nltk_data/corpora/dependency_treebank/nltk-ptb.dp\n\n\n\n\n################################################################################\n################################################################################\n################################################################################\n\n\n\n\nFROM quay.io/pypa/manylinux_2_24_x86_64 AS lima-manylinux\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN echo \"LC_ALL=en_US.UTF-8\" > /etc/default/locale\nRUN echo \"LANG=en_US.UTF-8\" >> /etc/default/locale\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen\nRUN cp  /etc/default/locale /etc/environment\nRUN locale-gen\nRUN dpkg-reconfigure locales\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US:en\nENV LC_ALL=en_US.UTF-8\n\nCOPY --from=manylinux_2_24_with_qt_and_pyside /opt /opt\nCOPY --from=manylinux_2_24_with_qt_and_pyside /usr/local /usr/local\nCOPY --from=manylinux_2_24_with_icu /usr/local /usr/local\nCOPY --from=manylinux_2_24_with_nltk_data /nltk_data /nltk_data\nCOPY --from=manylinux_2_24_with_tensorflow_for_lima_1_9 /tensorflow_for_lima /usr/local\n\nARG BRANCH=master\nARG USE_TENSORFLOW=\"true\"\nARG GITHUB_TOKEN\nARG LIMA_DISABLE_FSW_TESTING\nARG LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS\nARG NLTK_PTB_DP_FILE\n\n# Setup\nRUN apt --fix-broken install\nRUN apt-get update -y -qq && apt-get install --no-install-recommends -y \\\n        wget build-essential pkg-config automake \\\n        gawk \\\n        ninja-build \\\n        gettext \\\n        libpulse0 \\\n        libasound2 \\\n        libgstreamer1.0 \\\n        libpulse-mainloop-glib0 \\\n        gstreamer1.0-x && rm -rf /var/lib/apt/lists/*;\n\nENV QTDIR=/opt/qt5\nENV PATH=/opt/qt5/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/qt5/lib:$LD_LIBRARY_PATH\n\nWORKDIR /\nRUN wget -q https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.9.5.tar.xz\nRUN tar xf git-2.9.5.tar.xz && rm git-2.9.5.tar.xz\nWORKDIR /git-2.9.5\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make -j && make install\n\nWORKDIR /git-lfs\nRUN wget -q https://github.com/git-lfs/git-lfs/releases/download/v3.0.2/git-lfs-linux-amd64-v3.0.2.tar.gz\nRUN tar xf git-lfs-linux-amd64-v3.0.2.tar.gz && rm git-lfs-linux-amd64-v3.0.2.tar.gz\nRUN bash install.sh\n\nRUN git lfs install --skip-repo\n\nWORKDIR /\nRUN wget --no-check-certificate https://osmot.cs.cornell.edu/svm_light/current/svm_light.tar.gz -q\nWORKDIR /svm_light\nRUN tar xzf ../svm_light.tar.gz && rm ../svm_light.tar.gz\nRUN make\nRUN cp svm_classify svm_learn /usr/bin\nRUN rm -Rf /svm_light\n\nWORKDIR /\nCOPY svmtool.sh  svmtool-cpp.sh qhttpserver.sh /\nRUN /svmtool.sh $GITHUB_TOKEN\nRUN /svmtool-cpp.sh $GITHUB_TOKEN\nRUN /qhttpserver.sh $GITHUB_TOKEN\n\nRUN apt remove -y libpython3.5-stdlib libpython3.5-minimal\n\nRUN mkdir -p /src/\nRUN git clone -v --branch=$BRANCH --recurse-submodules https://${GITHUB_TOKEN}@github.com/aymara/lima /src/lima\nWORKDIR /src/lima\nARG CACHEBUST=1\nRUN git pull\nRUN echo \"$(git show -s --format=%cI HEAD | sed -e 's/[^0-9]//g')-$(git rev-parse --short HEAD)\" > release\n\nRUN mkdir -p /src/lima/build\nWORKDIR /src/lima/build\n\n#ENV PERL5LIB /SVMTool-1.3.1/lib:$PERL5LIB\n#ENV PATH /SVMTool-1.3.1/bin:/usr/share/apps/lima/scripts:/usr/bin:$PATH\nENV NLTK_PTB_DP_FILE /nltk_data/corpora/dependency_treebank/nltk-ptb.dp\nENV LIMA_DISABLE_FSW_TESTING true\nENV LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS true\nENV LIMA_DIST /usr\nENV LIMA_CONF /usr/share/config/lima\nENV LIMA_RESOURCES /usr/share/apps/lima/resources\nENV PATH=\"/opt/python/cp38-cp38/bin:${PATH}\"\n\n# Build\n#\nRUN cmake -G Ninja  -DQt5_DIR:PATH=/opt/qt5/5.15.2/gcc_64/lib/cmake/Qt5 -DLIMA_RESOURCES:STRING=build -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE:STRING=Release -DLIMA_VERSION_RELEASE:STRING=\"$(cat /src/lima/release)\" -DSHORTEN_POR_CORPUS_FOR_SVMLEARN:BOOL=ON -DTF_SOURCES_PATH:PATH=\"/tensorflow-for-lima-1.9/\" -DWITH_DEBUG_MESSAGES=ON -DWITH_ARCH=OFF -DWITH_ASAN=OFF -DWITH_GUI=ON  ..\nRUN ninja && ninja install && ninja package\nRUN install -D -t /usr/share/apps/lima/packages /src/lima/build/*.deb\n\nWORKDIR /usr/share/apps/lima/tests\nRUN /bin/bash -c \"set -o pipefail && tva --language=eng test-eng.*.xml 2>&1 | tee tva-eng.log\"\nRUN /bin/bash -c \"set -o pipefail && tva --language=fre test-fre.default.xml test-fre.disambiguated.xml test-fre.hyphen.xml test-fre.idiom.xml test-fre.sa.xml test-fre.se.xml test-fre.simpleword.xml test-fre.tokenizer.xml 2>&1 | tee tva-fre.log\"\nWORKDIR /usr/share/apps/lima/tests/xmlreader\nRUN /bin/bash -c \"set -o pipefail && tvx --language=eng --language=fre test-fre.xmlreader.xml 2>&1 | tee tvx-fre.log\"\n\n# install github-release to be able to deploy packages\nRUN wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 -q && tar xjf linux-amd64-github-release.tar.bz2 && cp bin/linux/amd64/github-release /usr/bin && rm linux-amd64-github-release.tar.bz2\n\n# install python packages necessary to use the language resources install script\nRUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then pip3.8 install arpy requests tqdm ; fi\"\n\n## install English and French UD models\n#RUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then lima_models.py -l english ; fi\"\n#RUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then lima_models.py -l french ; fi\"\n\nWORKDIR /\n"
}