{
  "startTime": 1674249984212,
  "endTime": 1674249985258,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 115,
        "columnEnd": 157
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 39,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 29,
        "columnEnd": 424
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 39,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 29,
        "columnEnd": 424
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedDockerfile": "FROM debian:11\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales locales-all && rm -rf /var/lib/apt/lists/*;\n\nARG USE_TENSORFLOW=\"true\"\nARG GITHUB_TOKEN\nARG LIMA_DISABLE_FSW_TESTING\nARG LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS\nARG NLTK_PTB_DP_FILE\n\n# Setup\nRUN apt-get update -y -qq && apt-get install --no-install-recommends -y apt-utils lsb-release git gcc g++ make curl python3-nltk gawk wget python3 ninja-build qtbase5-dev-tools libqt5xmlpatterns5-dev libqt5qml5 qtdeclarative5-dev qml-module-qtquick-extras qml-module-qtquick-controls qml-module-qtquick-layouts qml-module-qtquick2 libenchant-2-dev libtre-dev libboost-all-dev gnupg build-essential libssl-dev nodejs npm dos2unix unzip libeigen3-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://launchpad.net/~limapublisher/+archive/ubuntu/ppa/+files/libtensorflow-for-lima-generic_1.9-ubuntu7~20.04_amd64.deb -q \\\n    && dpkg -i libtensorflow-for-lima-generic_1.9-ubuntu7~20.04_amd64.deb \\\n    && rm -f libtensorflow-for-lima-generic_1.9-ubuntu7~20.04_amd64.deb\n\nRUN wget https://launchpad.net/~limapublisher/+archive/ubuntu/ppa/+files/libtensorflow-for-lima-dev_1.9-ubuntu7~20.04_amd64.deb -q \\\n    && dpkg -i libtensorflow-for-lima-dev_1.9-ubuntu7~20.04_amd64.deb \\\n    && rm -f libtensorflow-for-lima-dev_1.9-ubuntu7~20.04_amd64.deb\n\n# Install recent cmake\nWORKDIR /cmake_build\nRUN wget --no-check-certificate https://cmake.org/files/v3.23/cmake-3.23.0-linux-x86_64.sh -q\nRUN sh cmake-3.23.0-linux-x86_64.sh --prefix=/usr --exclude-subdir --skip-license\nRUN cmake --version\nWORKDIR /\n\nRUN npm install -g json && npm cache clean --force;\n\nRUN sed -ie \"s|DEFAULT_URL = 'http://nltk.googlecode.com/svn/trunk/nltk_data/index.xml'|DEFAULT_URL = 'http://nltk.github.com/nltk_data/'|\" /usr/lib/python*/*/nltk/downloader.py\nRUN python3 -m nltk.downloader -d nltk_data dependency_treebank\nRUN cat nltk_data/corpora/dependency_treebank/wsj_*.dp | grep -v \"^$\" > nltk_data/corpora/dependency_treebank/nltk-ptb.dp\n\nWORKDIR /\nCOPY continuous_integration/svmtool.sh  continuous_integration/svmtool-cpp.sh continuous_integration/qhttpserver.sh /\nRUN /svmtool.sh $GITHUB_TOKEN\nRUN /svmtool-cpp.sh $GITHUB_TOKEN\nRUN /qhttpserver.sh $GITHUB_TOKEN\n\nRUN mkdir -p /src/\nCOPY . /src/lima\nWORKDIR /src/lima/extern\nRUN bash download_libtorch.sh\nWORKDIR /src/lima\nARG CACHEBUST=1\nRUN git submodule init && git submodule update\nRUN echo \"$(git show -s --format=%cI HEAD | sed -e 's/[^0-9]//g')-$(git rev-parse --short HEAD)\" > release\n\nRUN mkdir -p /src/lima/build\nWORKDIR /src/lima/build\n\n#ENV PERL5LIB /SVMTool-1.3.1/lib:$PERL5LIB\n#ENV PATH /SVMTool-1.3.1/bin:/usr/share/apps/lima/scripts:/usr/bin:$PATH\nENV NLTK_PTB_DP_FILE /nltk_data/corpora/dependency_treebank/nltk-ptb.dp\nENV LIMA_DISABLE_FSW_TESTING true\nENV LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS true\nENV LIMA_DIST /usr\nENV LIMA_CONF /usr/share/config/lima\nENV LIMA_RESOURCES /usr/share/apps/lima/resources\nENV LIBTORCH_PATH=/src/lima/extern/libtorch/\n\n# Build\n#\nRUN cmake -G Ninja -DLIMA_RESOURCES:STRING=build -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE:STRING=Release -DLIMA_VERSION_RELEASE:STRING=\"$(cat /src/lima/release)\" -DSHORTEN_POR_CORPUS_FOR_SVMLEARN:BOOL=ON -DTF_SOURCES_PATH:PATH=\"/usr/include/tensorflow-for-lima/\" -DWITH_DEBUG_MESSAGES=ON -DWITH_ARCH=OFF -DWITH_ASAN=OFF -DWITH_GUI=ON -DCMAKE_PREFIX_PATH=$LIBTORCH_PATH ..\nRUN ninja\nRUN ninja test\nRUN ninja install\nRUN ninja package\nRUN install -D -t /usr/share/apps/lima/packages /src/lima/build/*.deb\n\n# WORKDIR /usr/share/apps/lima/tests\n# RUN /bin/bash -c \"set -o pipefail && tva --language=eng test-eng.*.xml 2>&1 | tee tva-eng.log\"\n# RUN /bin/bash -c \"set -o pipefail && tva --language=fre test-fre.default.xml test-fre.disambiguated.xml test-fre.hyphen.xml test-fre.idiom.xml test-fre.sa.xml test-fre.se.xml test-fre.simpleword.xml test-fre.tokenizer.xml 2>&1 | tee tva-fre.log\"\n# WORKDIR /usr/share/apps/lima/tests/xmlreader\n# RUN /bin/bash -c \"set -o pipefail && tvx --language=eng --language=fre test-fre.xmlreader.xml 2>&1 | tee tvx-fre.log\"\n\n# install github-release to be able to deploy packages\nRUN wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 -q && tar xjf linux-amd64-github-release.tar.bz2 && cp bin/linux/amd64/github-release /usr/bin && rm linux-amd64-github-release.tar.bz2\n\n# install python packages necessary to use the language resources install script\nRUN apt-get install --no-install-recommends -y python3-pip -qq && rm -rf /var/lib/apt/lists/*;\nRUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then pip3 install arpy requests tqdm ; fi\"\n\n# install English and French UD models\nRUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then lima_models.py -l english ; fi\"\nRUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then lima_models.py -l french ; fi\"\n\n"
}