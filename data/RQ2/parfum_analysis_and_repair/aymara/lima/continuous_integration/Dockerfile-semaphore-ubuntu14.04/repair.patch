diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aymara/lima/continuous_integration/Dockerfile-semaphore-ubuntu14.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aymara/lima/continuous_integration/Dockerfile-semaphore-ubuntu14.04/repaired.Dockerfile
index e798eb3..de885d8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aymara/lima/continuous_integration/Dockerfile-semaphore-ubuntu14.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aymara/lima/continuous_integration/Dockerfile-semaphore-ubuntu14.04/repaired.Dockerfile
@@ -1,6 +1,6 @@
 FROM ubuntu:14.04
 
-RUN apt-get clean && apt-get update && apt-get install -y locales
+RUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN locale-gen en_US.UTF-8
 ENV LANG en_US.UTF-8
 ENV LANGUAGE en_US:en
@@ -12,36 +12,36 @@ ARG JOB_NUMBER
 
 # Setup
 RUN apt-get update -y -qq
-RUN apt-get install -y lsb-release apt-utils software-properties-common python-software-properties python3-software-properties ninja-build git gcc g++ autotools-dev dh-autoreconf curl python-nltk gawk wget qt5-default qtbase5-dev-tools libqt5xmlpatterns5-dev libqt5qml5 qtdeclarative5-dev libboost-all-dev libenchant-dev libtre-dev -qq
+RUN apt-get install --no-install-recommends -y lsb-release apt-utils software-properties-common python-software-properties python3-software-properties ninja-build git gcc g++ autotools-dev dh-autoreconf curl python-nltk gawk wget qt5-default qtbase5-dev-tools libqt5xmlpatterns5-dev libqt5qml5 qtdeclarative5-dev libboost-all-dev libenchant-dev libtre-dev -qq && rm -rf /var/lib/apt/lists/*;
 
 # Install cmake 3.4 needed by LIMA for ExternalProject_Add_Step options to be
 # used with Ninja
-RUN wget http://www.cmake.org/files/v3.4/cmake-3.4.1.tar.gz && tar xzf cmake-3.4.1.tar.gz && cd cmake-3.4.1/ && ./configure && make && make install && update-alternatives --install /usr/bin/cmake cmake /usr/local/bin/cmake 1 --force
+RUN wget https://www.cmake.org/files/v3.4/cmake-3.4.1.tar.gz && tar xzf cmake-3.4.1.tar.gz && cd cmake-3.4.1/ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && update-alternatives --install /usr/bin/cmake cmake /usr/local/bin/cmake 1 --force && rm cmake-3.4.1.tar.gz
 
-RUN curl -sL https://deb.nodesource.com/setup | bash -
-RUN apt-get install -y nodejs
-RUN npm install -g json
+RUN curl -f -sL https://deb.nodesource.com/setup | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
+RUN npm install -g json && npm cache clean --force;
 
 
 RUN sed -ie "s|DEFAULT_URL = 'http://nltk.googlecode.com/svn/trunk/nltk_data/index.xml'|DEFAULT_URL = 'http://nltk.github.com/nltk_data/'|" /usr/lib/python2.7/*/nltk/downloader.py
 RUN python -m nltk.downloader -d nltk_data dependency_treebank
 RUN cat nltk_data/corpora/dependency_treebank/wsj_*.dp | grep -v "^$" > nltk_data/corpora/dependency_treebank/nltk-ptb.dp
 
-RUN wget http://osmot.cs.cornell.edu/svm_light/current/svm_light.tar.gz
+RUN wget https://osmot.cs.cornell.edu/svm_light/current/svm_light.tar.gz
 WORKDIR /svm_light
-RUN tar xzf ../svm_light.tar.gz
+RUN tar xzf ../svm_light.tar.gz && rm ../svm_light.tar.gz
 RUN make
 RUN cp svm_classify svm_learn /usr/bin
 
 WORKDIR /
-RUN TEMP_DEB="$(mktemp)" && wget -O "$TEMP_DEB" $(curl -s https://api.github.com/repos/aymara/SVMTool/releases/latest | grep browser_download_url | cut -d '"' -f 4) && tar xzf "$TEMP_DEB"
+RUN TEMP_DEB="$(mktemp)" && wget -O "$TEMP_DEB" $( curl -f -s https://api.github.com/repos/aymara/SVMTool/releases/latest | grep browser_download_url | cut -d '"' -f 4) && tar xzf "$TEMP_DEB"
 WORKDIR /SVMTool-1.3.1
 RUN perl Makefile.PL && make && make install
 
-RUN TEMP_DEB="$(mktemp)" && wget -O "$TEMP_DEB" $(curl -s https://api.github.com/repos/aymara/qhttpserver/releases/latest | grep browser_download_url | grep ubuntu16 | cut -d '"' -f 4) && dpkg -i "$TEMP_DEB"
+RUN TEMP_DEB="$(mktemp)" && wget -O "$TEMP_DEB" $( curl -f -s https://api.github.com/repos/aymara/qhttpserver/releases/latest | grep browser_download_url | grep ubuntu16 | cut -d '"' -f 4) && dpkg -i "$TEMP_DEB"
 
 
-RUN TEMP_DEB="$(mktemp)" && wget -O "$TEMP_DEB" $(curl -s https://api.github.com/repos/aymara/svmtool-cpp/releases/latest | grep browser_download_url | grep ubuntu16 | cut -d '"' -f 4) && dpkg -i "$TEMP_DEB"
+RUN TEMP_DEB="$(mktemp)" && wget -O "$TEMP_DEB" $( curl -f -s https://api.github.com/repos/aymara/svmtool-cpp/releases/latest | grep browser_download_url | grep ubuntu16 | cut -d '"' -f 4) && dpkg -i "$TEMP_DEB"
 
 RUN mkdir -p /src/
 RUN git clone --recurse-submodules https://github.com/aymara/lima /src/lima
@@ -74,4 +74,4 @@ WORKDIR /usr/share/apps/lima/tests/xmlreader
 RUN /bin/bash -c "set -o pipefail && tvx --language=eng --language=fre test-fre.xmlreader.xml 2>&1 | tee tvx-fre.log"
 
 # install github-release to be able to deploy packages
-RUN wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 && tar xjf linux-amd64-github-release.tar.bz2 && cp bin/linux/amd64/github-release /usr/bin
+RUN wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 && tar xjf linux-amd64-github-release.tar.bz2 && cp bin/linux/amd64/github-release /usr/bin && rm linux-amd64-github-release.tar.bz2