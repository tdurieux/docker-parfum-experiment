{
  "startTime": 1674215073301,
  "endTime": 1674215074283,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 29,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 29,
        "columnEnd": 284
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 29,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 29,
        "columnEnd": 284
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM aymara/tensorflow_for_lima_1_9-manylinux_2_24\n\nENV DEBIAN_FRONTEND=noninteractive\n\nARG BRANCH=master\nARG USE_TENSORFLOW=\"true\"\nARG GITHUB_TOKEN\nARG LIMA_DISABLE_FSW_TESTING\nARG LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS\nARG NLTK_PTB_DP_FILE\n\n# Setup\nRUN apt --fix-broken install\nRUN apt-get update -y -qq && apt-get install --no-install-recommends -y gawk ninja-build gettext && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\nRUN wget -q https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.9.5.tar.xz\nRUN tar xf git-2.9.5.tar.xz && rm git-2.9.5.tar.xz\nWORKDIR /git-2.9.5\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make -j && make install\n\nWORKDIR /git-lfs\nRUN wget -q https://github.com/git-lfs/git-lfs/releases/download/v3.0.2/git-lfs-linux-amd64-v3.0.2.tar.gz\nRUN tar xf git-lfs-linux-amd64-v3.0.2.tar.gz && rm git-lfs-linux-amd64-v3.0.2.tar.gz\nRUN bash install.sh\n\nRUN git lfs install --skip-repo\n\nRUN apt-get update -y -qq && apt-get install --no-install-recommends -y python3-nltk qtbase5-dev-tools libqt5xmlpatterns5-dev libqt5qml5 qtdeclarative5-dev qml-module-qtquick-extras qml-module-qtquick-controls qml-module-qtquick-layouts qml-module-qtquick2 libtre-dev libboost-all-dev gnupg libssl-dev nodejs && rm -rf /var/lib/apt/lists/*;\n# Not available in manylinux: libenchant-2-dev npm\n\nWORKDIR /\n# Cloning icu ASAP to avoid\nRUN git clone https://github.com/unicode-org/icu.git --depth=1 --branch=release-70-1\nWORKDIR /icu/icu4c/source\nRUN ./runConfigureICU Linux --prefix=/usr --enable-static && make -j && make test && make install\n\nWORKDIR /\n\n# Install recent cmake\nWORKDIR /cmake_build\nRUN wget --no-check-certificate https://cmake.org/files/v3.16/cmake-3.16.4-Linux-x86_64.sh -q\nRUN sh cmake-3.16.4-Linux-x86_64.sh --prefix=/usr --exclude-subdir --skip-license\nRUN cmake --version\nWORKDIR /\n\n# RUN npm install -g json\n\nRUN sed -ie \"s|DEFAULT_URL = 'http://nltk.googlecode.com/svn/trunk/nltk_data/index.xml'|DEFAULT_URL = 'http://nltk.github.com/nltk_data/'|\" /usr/lib/python*/*/nltk/downloader.py\nRUN python3 -m nltk.downloader -d nltk_data dependency_treebank\nRUN cat nltk_data/corpora/dependency_treebank/wsj_*.dp | grep -v \"^$\" > nltk_data/corpora/dependency_treebank/nltk-ptb.dp\n\n#RUN wget -q http://osmot.cs.cornell.edu/svm_light/current/svm_light.tar.gz -q\n#WORKDIR /svm_light\n#RUN tar xzf ../svm_light.tar.gz\n#RUN make\n#RUN cp svm_classify svm_learn /usr/bin\n#RUN rm -Rf /svm_light\n\nWORKDIR /\nCOPY continuous_integration/svmtool.sh  continuous_integration/svmtool-cpp.sh continuous_integration/qhttpserver.sh /\n#RUN /svmtool.sh $GITHUB_TOKEN\n#RUN /svmtool-cpp.sh $GITHUB_TOKEN\nRUN /qhttpserver.sh $GITHUB_TOKEN\n\n\nWORKDIR /\nRUN rm -Rf /icu /git-2.9.5 /git-lfs /cmake_build /svmtool.sh  /svmtool-cpp.sh /qhttpserver.sh\n"
}