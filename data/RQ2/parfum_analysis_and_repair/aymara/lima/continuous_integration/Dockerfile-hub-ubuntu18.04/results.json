{
  "startTime": 1674252270535,
  "endTime": 1674252271692,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 249
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 55,
        "columnEnd": 149
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 28,
        "columnEnd": 309
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 79,
        "columnEnd": 177
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 28,
        "columnEnd": 309
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 79,
        "columnEnd": 177
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 70,
        "columnEnd": 810
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 116,
        "columnEnd": 161
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 70,
        "columnEnd": 810
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 116,
        "columnEnd": 161
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 169,
        "columnEnd": 238
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN rm -rf /var/lib/apt/lists/* && apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales bash coreutils apt-utils lsb-release git gcc g++ make cmake cmake-data curl python-nltk gawk wget python3 python3-pip ninja-build qt5-default qtbase5-dev-tools libqt5xmlpatterns5-dev libqt5qml5 qtdeclarative5-dev qtdeclarative5-models-plugin qml-module-qtquick-extras qml-module-qtquick-controls qml-module-qtquick-layouts qml-module-qtquick2 libenchant-dev libtre-dev libboost-all-dev nodejs npm libxext6 libxrender1 libxtst6 qml-module-qtquick-controls2 qml-module-qtquick-dialogs qml-module-qtquick-privatewidgets qml-module-qtquick-scene3d qml-module-qtquick-templates2 qml-module-qtquick-virtualkeyboard qml-module-qtquick-window2 qml-module-qtquick-xmllistmodel qtdeclarative5-qtquick2-plugin dos2unix -qq && rm -rf /var/lib/apt/lists/*;\n\n\nRUN locale-gen en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nRUN locale\n\nARG GITHUB_TOKEN\nARG LIMA_DISABLE_FSW_TESTING\nARG LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS\nARG NLTK_PTB_DP_FILE\nARG USE_TENSORFLOW=\"true\"\n\nRUN apt-get install --no-install-recommends -y software-properties-common; rm -rf /var/lib/apt/lists/*; add-apt-repository -y ppa:limapublisher/ppa && apt-get update && apt-get install --no-install-recommends -y libtensorflow-for-lima-dev\n\n\n# Setup\nRUN npm install -g json && npm cache clean --force;\n\nRUN sed -ie \"s|DEFAULT_URL = 'http://nltk.googlecode.com/svn/trunk/nltk_data/index.xml'|DEFAULT_URL = 'http://nltk.github.com/nltk_data/'|\" /usr/lib/python2.7/*/nltk/downloader.py\nRUN python -m nltk.downloader -d nltk_data dependency_treebank\nRUN cat nltk_data/corpora/dependency_treebank/wsj_*.dp | grep -v \"^$\" > nltk_data/corpora/dependency_treebank/nltk-ptb.dp\n\nRUN wget https://osmot.cs.cornell.edu/svm_light/current/svm_light.tar.gz\nWORKDIR /svm_light\nRUN tar xzf ../svm_light.tar.gz && rm ../svm_light.tar.gz\nRUN make\nRUN cp svm_classify svm_learn /usr/bin\nRUN rm -Rf /svm_light\n\nWORKDIR /\nRUN curl -f -vLJ -H 'Accept: application/octet-stream' $( curl -f -s https://api.github.com/repos/aymara/SVMTool/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | grep '.tgz\"' | head -n 1 | cut -d '\"' -f 4)?access_token=$GITHUB_TOKEN | tar xvz\nWORKDIR /SVMTool-1.3.1\nRUN perl Makefile.PL && make && make install\n\nWORKDIR /\nRUN TEMP_DEB=\"$(mktemp)\" && curl -f -vLJ -H 'Accept: application/octet-stream' $( curl -f -s https://api.github.com/repos/aymara/qhttpserver/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | grep ubuntu18 | grep '.deb\"' | head -n 1 | cut -d '\"' -f 4)?access_token=$GITHUB_TOKEN -o \"$TEMP_DEB\" && dpkg -i \"$TEMP_DEB\"\n\n\nRUN TEMP_DEB=\"$(mktemp)\" && curl -f -vLJ -H 'Accept: application/octet-stream' $( curl -f -s https://api.github.com/repos/aymara/svmtool-cpp/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | grep ubuntu18 | grep '.deb\"' | head -n 1 | cut -d '\"' -f 4)?access_token=$GITHUB_TOKEN -o \"$TEMP_DEB\" && dpkg -i \"$TEMP_DEB\"\n\nRUN mkdir -p /src/\nRUN git clone --branch=$BRANCH --recurse-submodules https://github.com/aymara/lima /src/lima\nWORKDIR /src/lima\nARG CACHEBUST=1\nRUN git pull\nRUN echo \"$(git show -s --format=%cI HEAD | sed -e 's/[^0-9]//g')-$(git rev-parse --short HEAD)\" > release\n\nRUN mkdir -p /src/lima/build\nWORKDIR /src/lima/build\n\nENV PERL5LIB /SVMTool-1.3.1/lib:$PERL5LIB\nENV PATH /SVMTool-1.3.1/bin:/usr/share/apps/lima/scripts:/usr/bin:$PATH\nENV NLTK_PTB_DP_FILE /nltk_data/corpora/dependency_treebank/nltk-ptb.dp\nENV LIMA_DISABLE_FSW_TESTING true\nENV LIMA_DISABLE_CPACK_DEBIAN_PACKAGE_SHLIBDEPS true\nENV LIMA_DIST /usr\nENV LIMA_CONF /usr/share/config/lima\nENV LIMA_RESOURCES /root/.lima/resources/:/usr/share/apps/lima/resources\n\n# install python packages necessary to use the language resources install script\nRUN pip3 install --no-cache-dir arpy requests tqdm\n\n# install English and French UD models\nRUN /src/lima/lima_linguisticprocessing/src/linguisticProcessing/core/TensorFlowUnits/scripts/lima_models.py -l english\nRUN /src/lima/lima_linguisticprocessing/src/linguisticProcessing/core/TensorFlowUnits/scripts/lima_models.py -l french\n\n# Build\n#\nRUN cmake -G Ninja -DLIMA_RESOURCES:STRING=build -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_BUILD_TYPE:STRING=Release -DLIMA_VERSION_RELEASE:STRING=\"$(cat /src/lima/release)\" -DSHORTEN_POR_CORPUS_FOR_SVMLEARN:BOOL=ON -DTF_SOURCES_PATH=\"/usr/include/tensorflow-for-lima/\" ..\nRUN ninja && ninja install && ninja package\nRUN install -D -t /usr/share/apps/lima/packages /src/lima/build/*.deb\n\nWORKDIR /usr/share/apps/lima/tests\nRUN /bin/bash -c \"set -o pipefail && tva --language=eng test-eng.*.xml 2>&1 | tee tva-eng.log\"\nRUN /bin/bash -c \"set -o pipefail && tva --language=fre test-fre.default.xml test-fre.disambiguated.xml test-fre.hyphen.xml test-fre.idiom.xml test-fre.sa.xml test-fre.se.xml test-fre.simpleword.xml test-fre.tokenizer.xml 2>&1 | tee tva-fre.log\"\nWORKDIR /usr/share/apps/lima/tests/xmlreader\nRUN /bin/bash -c \"set -o pipefail && tvx --language=eng --language=fre test-fre.xmlreader.xml 2>&1 | tee tvx-fre.log\"\n\n# install python packages necessary to use the language resources install script\nRUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then pip3 install arpy requests tqdm ; fi\"\n\n# install English and French UD models\nRUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then lima_models.py -l english ; fi\"\nRUN /bin/bash -c \"if [ \\\"$USE_TENSORFLOW\\\" = true ] ; then lima_models.py -l french ; fi\"\n\nRUN echo $LIMA_RESOURCES\nENTRYPOINT [\"limaserver\"]\n"
}