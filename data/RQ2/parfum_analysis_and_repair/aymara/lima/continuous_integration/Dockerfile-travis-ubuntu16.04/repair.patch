diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aymara/lima/continuous_integration/Dockerfile-travis-ubuntu16.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aymara/lima/continuous_integration/Dockerfile-travis-ubuntu16.04/repaired.Dockerfile
index b8c2f91..5f3714b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/aymara/lima/continuous_integration/Dockerfile-travis-ubuntu16.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/aymara/lima/continuous_integration/Dockerfile-travis-ubuntu16.04/repaired.Dockerfile
@@ -2,7 +2,7 @@ FROM ubuntu:16.04
 
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN rm -rf /var/lib/apt/lists/* && apt-get clean && apt-get update && apt-get install -y locales apt-utils lsb-release git gcc g++ make curl python-nltk gawk wget python3 ninja-build qt5-default qtbase5-dev-tools libqt5xmlpatterns5-dev libqt5qml5 qtdeclarative5-dev qtdeclarative5-models-plugin qml-module-qtquick-extras qml-module-qtquick-controls qml-module-qtquick-layouts qml-module-qtquick2 libenchant-dev libtre-dev libboost-all-dev nodejs npm dos2unix -qq
+RUN rm -rf /var/lib/apt/lists/* && apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales apt-utils lsb-release git gcc g++ make curl python-nltk gawk wget python3 ninja-build qt5-default qtbase5-dev-tools libqt5xmlpatterns5-dev libqt5qml5 qtdeclarative5-dev qtdeclarative5-models-plugin qml-module-qtquick-extras qml-module-qtquick-controls qml-module-qtquick-layouts qml-module-qtquick2 libenchant-dev libtre-dev libboost-all-dev nodejs npm dos2unix -qq && rm -rf /var/lib/apt/lists/*;
 
 RUN locale-gen en_US.UTF-8
 ENV LANG en_US.UTF-8
@@ -26,30 +26,30 @@ RUN cmake --version
 WORKDIR /
 
 # Setup
-RUN npm install -g json
+RUN npm install -g json && npm cache clean --force;
 RUN ln -s /usr/bin/nodejs /usr/bin/node
 
 RUN sed -ie "s|DEFAULT_URL = 'http://nltk.googlecode.com/svn/trunk/nltk_data/index.xml'|DEFAULT_URL = 'http://nltk.github.com/nltk_data/'|" /usr/lib/python2.7/*/nltk/downloader.py
 RUN python -m nltk.downloader -d nltk_data dependency_treebank
 RUN cat nltk_data/corpora/dependency_treebank/wsj_*.dp | grep -v "^$" > nltk_data/corpora/dependency_treebank/nltk-ptb.dp
 
-RUN wget http://osmot.cs.cornell.edu/svm_light/current/svm_light.tar.gz
+RUN wget https://osmot.cs.cornell.edu/svm_light/current/svm_light.tar.gz
 WORKDIR /svm_light
-RUN tar xzf ../svm_light.tar.gz
+RUN tar xzf ../svm_light.tar.gz && rm ../svm_light.tar.gz
 RUN make
 RUN cp svm_classify svm_learn /usr/bin
 RUN rm -Rf /svm_light
 
 WORKDIR /
-RUN curl  -vLJ -H 'Accept: application/octet-stream' $(curl -s https://api.github.com/repos/aymara/SVMTool/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url |grep '.tgz"' | head -n 1 | cut -d '"' -f 4)?access_token=$GITHUB_TOKEN | tar xvz
+RUN curl -f -vLJ -H 'Accept: application/octet-stream' $( curl -f -s https://api.github.com/repos/aymara/SVMTool/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | grep '.tgz"' | head -n 1 | cut -d '"' -f 4)?access_token=$GITHUB_TOKEN | tar xvz
 WORKDIR /SVMTool-1.3.1
 RUN perl Makefile.PL && make && make install
 
 WORKDIR /
-RUN TEMP_DEB="$(mktemp)" && curl  -vLJ -H 'Accept: application/octet-stream' $(curl -s https://api.github.com/repos/aymara/qhttpserver/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | grep ubuntu16 | grep '.deb"' | head -n 1 | cut -d '"' -f 4)?access_token=$GITHUB_TOKEN -o "$TEMP_DEB" && dpkg -i "$TEMP_DEB"
+RUN TEMP_DEB="$(mktemp)" && curl -f -vLJ -H 'Accept: application/octet-stream' $( curl -f -s https://api.github.com/repos/aymara/qhttpserver/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | grep ubuntu16 | grep '.deb"' | head -n 1 | cut -d '"' -f 4)?access_token=$GITHUB_TOKEN -o "$TEMP_DEB" && dpkg -i "$TEMP_DEB"
 
 
-RUN TEMP_DEB="$(mktemp)" && curl  -vLJ -H 'Accept: application/octet-stream' $(curl -s https://api.github.com/repos/aymara/svmtool-cpp/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | grep ubuntu16 | grep '.deb"' | head -n 1 | cut -d '"' -f 4)?access_token=$GITHUB_TOKEN -o "$TEMP_DEB" && dpkg -i "$TEMP_DEB"
+RUN TEMP_DEB="$(mktemp)" && curl -f -vLJ -H 'Accept: application/octet-stream' $( curl -f -s https://api.github.com/repos/aymara/svmtool-cpp/releases/latest?access_token=$GITHUB_TOKEN | grep browser_download_url | grep ubuntu16 | grep '.deb"' | head -n 1 | cut -d '"' -f 4)?access_token=$GITHUB_TOKEN -o "$TEMP_DEB" && dpkg -i "$TEMP_DEB"
 
 RUN mkdir -p /src/
 RUN git clone --branch=$BRANCH --recurse-submodules https://${GITHUB_TOKEN}@github.com/aymara/lima /src/lima
@@ -83,5 +83,5 @@ WORKDIR /usr/share/apps/lima/tests/xmlreader
 RUN /bin/bash -c "set -o pipefail && tvx --language=eng --language=fre test-fre.xmlreader.xml 2>&1 | tee tvx-fre.log"
 
 # install github-release to be able to deploy packages
-RUN wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 && tar xjf linux-amd64-github-release.tar.bz2 && cp bin/linux/amd64/github-release /usr/bin
+RUN wget https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 && tar xjf linux-amd64-github-release.tar.bz2 && cp bin/linux/amd64/github-release /usr/bin && rm linux-amd64-github-release.tar.bz2