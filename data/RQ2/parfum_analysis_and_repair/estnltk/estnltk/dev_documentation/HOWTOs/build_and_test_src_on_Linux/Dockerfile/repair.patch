diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/estnltk/estnltk/dev_documentation/HOWTOs/build_and_test_src_on_Linux/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/estnltk/estnltk/dev_documentation/HOWTOs/build_and_test_src_on_Linux/Dockerfile/repaired.Dockerfile
index 6c994f7..8d4cbd6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/estnltk/estnltk/dev_documentation/HOWTOs/build_and_test_src_on_Linux/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/estnltk/estnltk/dev_documentation/HOWTOs/build_and_test_src_on_Linux/Dockerfile/repaired.Dockerfile
@@ -6,14 +6,14 @@
 # ================================
 FROM ubuntu:18.04
 
-RUN apt-get update && apt-get upgrade -y && apt-get install -y wget && \
-    apt-get install -y g++ libpcre3 libpcre3-dev swig && \
-    apt-get install -y default-jre && \
-    apt-get install -y git && apt-get install -y unzip
-RUN apt-get install -y cg3
+RUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y wget && \
+    apt-get install --no-install-recommends -y g++ libpcre3 libpcre3-dev swig && \
+    apt-get install --no-install-recommends -y default-jre && \
+    apt-get install --no-install-recommends -y git && apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y cg3 && rm -rf /var/lib/apt/lists/*;
 
 # Install figlet for ascii graphix messages (purely optional)
-RUN apt-get install -y figlet 
+RUN apt-get install --no-install-recommends -y figlet && rm -rf /var/lib/apt/lists/*;
 
 # Check Ubuntu version (optional)
 RUN cat /etc/os-release
@@ -26,7 +26,7 @@ RUN unzip udpipe-1.2.0-bin
 ENV PATH=/udpipe-1.2.0-bin/bin-linux64:${PATH}
 
 # ================================
-#   Get HFST command line tool    
+#   Get HFST command line tool   
 # ================================
 #
 # https://github.com/hfst/hfst/wiki/Download-And-Install#download-and-install-hfst
@@ -34,13 +34,13 @@ ENV PATH=/udpipe-1.2.0-bin/bin-linux64:${PATH}
 #
 # Get & install dependency: libhfst
 #
-RUN wget -nv http://apertium.projectjj.com/apt/release/pool/main/h/hfst/libhfst53_3.15.4-1~bionic1_amd64.deb
-RUN apt install -y ./libhfst53_3.15.4-1~bionic1_amd64.deb
+RUN wget -nv https://apertium.projectjj.com/apt/release/pool/main/h/hfst/libhfst53_3.15.4-1~bionic1_amd64.deb
+RUN apt install --no-install-recommends -y ./libhfst53_3.15.4-1~bionic1_amd64.deb && rm -rf /var/lib/apt/lists/*;
 #
 # Get & install hfst command line tools
 #
-RUN wget -nv http://apertium.projectjj.com/apt/release/pool/main/h/hfst/hfst_3.15.4-1~bionic1_amd64.deb
-RUN apt install -y ./hfst_3.15.4-1~bionic1_amd64.deb
+RUN wget -nv https://apertium.projectjj.com/apt/release/pool/main/h/hfst/hfst_3.15.4-1~bionic1_amd64.deb
+RUN apt install --no-install-recommends -y ./hfst_3.15.4-1~bionic1_amd64.deb && rm -rf /var/lib/apt/lists/*;
 #
 # Check that command line tool is available
 #
@@ -66,7 +66,7 @@ RUN conda config --set always_yes yes && \
 RUN git clone --depth=25 --branch=devel_1.6 https://github.com/estnltk/estnltk.git estnltk_devel
 
 # ================================
-#   Set paths to syntax models 
+#   Set paths to syntax models
 # ================================
 ENV UDPIPE_SYNTAX_MODELS_PATH=/estnltk_devel/estnltk/taggers/syntax/udpipe_tagger/resources
 ENV MALTPARSER_SYNTAX_MODELS_PATH=/estnltk_devel/estnltk/taggers/syntax/maltparser_tagger/java-res/maltparser
@@ -74,7 +74,7 @@ ENV MALTPARSER_SYNTAX_MODELS_PATH=/estnltk_devel/estnltk/taggers/syntax/maltpars
 # ================================
 #   Python 3.7
 # ================================
-RUN echo " Python 3.7 " | figlet 
+RUN echo " Python 3.7 " | figlet
 RUN conda create -n py37 python=3.7
 #
 # Make RUN commands use the new environment (https://pythonspeed.com/articles/activate-conda-dockerfile/)