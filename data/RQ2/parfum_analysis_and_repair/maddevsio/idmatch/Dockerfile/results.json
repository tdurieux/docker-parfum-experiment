{
  "startTime": 1674249959135,
  "endTime": 1674249959931,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 27
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 5,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 70,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nMAINTAINER MadDevs <rock@maddevs.io>\n\nENV OPENCV_VER 3.2.0\nENV SOURCE_URL https://github.com/opencv/opencv/archive/${OPENCV_VER}.tar.gz\nENV CONTRIB_URL https://github.com/opencv/opencv_contrib/archive/${OPENCV_VER}.tar.gz\n\nRUN set -ex \\\n  && apt-get update \\\n\t&& apt-get install --no-install-recommends -y \\\n          build-essential \\\n          libtool \\\n          autoconf \\\n          automake \\\n          pkg-config \\\n          cmake \\\n          curl \\\n          libatlas-base-dev \\\n          libboost-all-dev \\\n          libgflags-dev \\\n          libgoogle-glog-dev \\\n          libhdf5-serial-dev \\\n          libleveldb-dev \\\n          liblmdb-dev \\\n          libopencv-dev \\\n          libprotobuf-dev \\\n          libsnappy-dev \\\n          protobuf-compiler \\\n          libtbb2 \\\n          libdc1394-22-dev \\\n          libdc1394-22-dev \\\n          libleptonica-dev \\\n          libgtk2.0-dev \\\n          libavcodec-dev \\\n          libavformat-dev \\\n          libswscale-dev \\\n          libtbb-dev \\\n          libjpeg-dev \\\n          libpng-dev \\\n          libtiff-dev \\\n          libjasper-dev \\\n          libtesseract-dev \\\n          tesseract-ocr \\\n          tesseract-ocr-eng \\\n          tesseract-ocr-rus \\\n          tesseract-ocr-kir \\\n          python2.7-dev \\\n          python-pip \\\n          python-numpy \\\n          python-setuptools \\\n          python-scipy \\\n  && pip install --no-cache-dir --upgrade pip \\\n  && pip install --no-cache-dir Cython==0.25.2 \\\n  && rm -rf /var/lib/apt/lists/*\n\n# install opencv\nRUN mkdir -p /tmp/opencv/build /tmp/opencv_contrib \\\n  && curl -f -Ls ${SOURCE_URL} | tar -xz --strip=1 -C /tmp/opencv \\\n  && curl -f -Ls ${CONTRIB_URL} | tar -xz --strip=1 -C /tmp/opencv_contrib \\\n  && cd /tmp/opencv/build \\\n  && cmake \\\n      -D CMAKE_BUILD_TYPE=Release \\\n      -D CMAKE_INSTALL_PREFIX=/usr/local \\\n      -D BUILD_PYTHON_SUPPORT=ON \\\n      -D OPENCV_EXTRA_MODULES_PATH=/tmp/opencv_contrib/modules/ .. \\\n  && make -j \"$(nproc)\" && make install && ldconfig \\\n  && cd / && rm -rf /tmp/*\n\n# install caffe\nENV CAFFE_VER 1.0\nENV CAFFE_SRC /tmp/caffe\nRUN set -ex \\\n  && mkdir -p ${CAFFE_SRC}/build \\\n  && curl -f -Ls https://github.com/BVLC/caffe/archive/${CAFFE_VER}.tar.gz | tar -xz --strip=1 -C ${CAFFE_SRC} \\\n  && for req in $(cat ${CAFFE_SRC}/python/requirements.txt) pydot; do pip install --no-cache-dir $req; done \\\n  && cd ${CAFFE_SRC}/build \\\n  && cmake \\\n      -DCPU_ONLY=1 \\\n      -DOPENCV_VERSION=3 \\\n      -D CMAKE_INSTALL_PREFIX=/usr/local .. \\\n  && make -j\"$(nproc)\" && make install && ldconfig \\\n  && cd / && rm -rf /tmp/*\n\nENV PYCAFFE_ROOT /usr/local/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\n\nENV UWSGI_CPU_AFFINITY 2\nENV UWSGI_PROCESSES 4\nENV UWSGI_HARAKIRI 60\n\nWORKDIR /webapp\nCOPY requirements.txt /webapp\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY . /webapp\nRUN mkdir -p /webapp/web/uploads\n\nWORKDIR /webapp/web\nEXPOSE 8080\n\nCMD [\"uwsgi\", \"--ini\", \"uwsgi.ini\"]\n"
}