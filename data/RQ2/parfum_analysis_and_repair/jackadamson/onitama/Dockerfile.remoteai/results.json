{
  "startTime": 1674219730235,
  "endTime": 1674219731436,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.53 as client-builder\n\n# Until feature(array_map) makes it to stable, requires nightly toolchain\nRUN rustup default nightly\n\nWORKDIR /src\n\n# Install Node and Yarn from fnm\nRUN cargo install fnm\nCOPY .nvmrc ./\nRUN fnm install\nRUN fnm exec npm install --global yarn\n\n# Install node package dependencies\nCOPY yarn.lock package.json ./\nRUN fnm exec yarn install --frozen-lockfile\n\nCOPY ./ /src/\n\n# Build react app including wasm library\nENV GENERATE_SOURCEMAP=false\nRUN fnm exec yarn run build --production\n\nFROM rust:1.53 as server-builder\n\n# Until feature(array_map) makes it to stable, requires nightly toolchain\nRUN rustup default nightly\n\nRUN apt-get update && apt-get install --no-install-recommends -y musl-dev musl-tools && rm -rf /var/lib/apt/lists/*;\n# Install musl target for statically linked binaries\nRUN rustup target add x86_64-unknown-linux-musl\n\n# Install node package dependencies\nWORKDIR /src\nCOPY Cargo.toml Cargo.lock /src/\nCOPY onitamalib /src/onitamalib\nCOPY onitamaserver /src/onitamaserver\n\n# Build onitamaserver binary\nRUN cargo build --target x86_64-unknown-linux-musl --release --bin onitamaserver --features agent\n\nFROM scratch\n\nCOPY --from=server-builder /src/target/x86_64-unknown-linux-musl/release/onitamaserver /\nCOPY --from=client-builder /src/build /build\nUSER 1000\nENV RUST_LOG=info\nEXPOSE 8080\nCMD [\"/onitamaserver\"]\n"
}