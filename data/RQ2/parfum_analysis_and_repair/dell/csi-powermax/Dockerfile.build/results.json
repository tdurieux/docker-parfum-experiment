{
  "startTime": 1674249458096,
  "endTime": 1674249459242,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 0,
        "lineEnd": 0,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG SOURCE_IMAGE_TAG\nARG GO_VERSION\nARG SOURCE_REPO\nARG SOURCE_IMAGE_TAG\nARG IMAGE_TYPE\n\nFROM golang:$GO_VERSION as builder\nARG BUILD_NUMBER=0\nARG BUILD_TYPE=R\nENV BUILD_NUMBER=$BUILD_NUMBER\nENV BUILD_TYPE=$BUILD_TYPE\nRUN mkdir -p /go/src\nCOPY csi-powermax/go.mod /go/src/csi-powermax/go.mod\nCOPY csi-powermax/ /go/src/csi-powermax\nCOPY goiscsi/ /go/src/goiscsi\nCOPY gofsutil/ /go/src/gofsutil\nCOPY gopowermax /go/src/gopowermax\nCOPY gobrick /go/src/gobrick\nCOPY gocsi /go/src/gocsi\nCOPY dell-csi-extensions /go/src/dell-csi-extensions\n\nWORKDIR /go/src/csi-powermax\nRUN go mod download\n# Run check.sh to make sure there are no linting errors\nRUN ./check.sh\nRUN go generate\nRUN CGO_ENABLED=0 go build\n# Print the version\nRUN go run core/semver/semver.go -f mk\n\nFROM ${SOURCE_REPO}:${SOURCE_IMAGE_TAG} as driver-others\n \\\nRUN yum install -y e2fsprogs which xfsprogs device-mapper-multipath \\\n    && \\\n    yum clean all \\\n    && \\\n    rm -rf /var/cache/run && rm -rf /var/cache/yumONBUILD\n\n\n\n\n\nFROM ${SOURCE_REPO}:${SOURCE_IMAGE_TAG} as driver-ubim\nONBUILD RUN microdnf update -y \\\n    && \\\n    microdnf install -y e2fsprogs which xfsprogs device-mapper-multipath \\\n    && \\\n    microdnf clean all\n\nFROM driver-${IMAGE_TYPE} as verify\nRUN which mkfs.ext4\nRUN which mkfs.xfs\n\nFROM driver-${IMAGE_TYPE} as driver\nCOPY --from=builder /go/src/csi-powermax/csi-powermax .\nCOPY \"csi-powermax/csi-powermax.sh\" .\nENTRYPOINT [\"/csi-powermax.sh\"]\n\n# Stage to check for critical and high CVE issues via Trivy (https://github.com/aquasecurity/trivy)\n# will break image build if CRITICAL issues found\n# will print out all HIGH issues found\n\nFROM driver as trivy-ubim\nONBUILD RUN microdnf install -y tar\n\nFROM driver as trivy-others\nONBUILD RUN echo \"Not a UBI minimal image\"\n\n# final stage\nFROM driver as final\n\nLABEL vendor=\"Dell Inc.\" \\\n      name=\"csi-powermax\" \\\n      summary=\"CSI Driver for Dell PowerMax\" \\\n      description=\"CSI Driver for provisioning persistent storage from Dell PowerMax\" \\\n      version=\"2.3.0\" \\\n      license=\"Apache-2.0\"\nCOPY csi-powermax/licenses /licenses\n"
}