diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dell/csi-baremetal/devkit/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dell/csi-baremetal/devkit/Dockerfile/repaired.Dockerfile
index c30b40f..36cb042 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dell/csi-baremetal/devkit/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dell/csi-baremetal/devkit/Dockerfile/repaired.Dockerfile
@@ -4,10 +4,10 @@ FROM $KIND_BUILDER as builder
 
 COPY          kind/ /kind/
 
-RUN           apt update \
-&&            apt install patch \
-&&            chmod +x /kind/kind-build.sh \
-&&            /kind/kind-build.sh /kind
+RUN apt update \
+&& apt install -y --no-install-recommends patch \
+&& chmod +x /kind/kind-build.sh \
+&& /kind/kind-build.sh /kind && rm -rf /var/lib/apt/lists/*;
 
 
 FROM opensuse/leap:latest
@@ -59,25 +59,25 @@ RUN           wget https://go.dev/dl/go${arg_go_ver}.linux-amd64.tar.gz \
 # install bin golangci
 RUN           curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin v${arg_golandci_ver}
 # install proto
-RUN 	      curl -L -O https://github.com/protocolbuffers/protobuf/releases/download/v${arg_protobuf_ver}/protoc-${arg_protobuf_ver}-linux-x86_64.zip \
-&&    	      unzip protoc-${arg_protobuf_ver}-linux-x86_64.zip -d $PROTOPATH \
-&&            rm protoc-${arg_protobuf_ver}-linux-x86_64.zip \
+RUN curl -f -L -O https://github.com/protocolbuffers/protobuf/releases/download/v${arg_protobuf_ver}/protoc-${arg_protobuf_ver}-linux-x86_64.zip \
+&& unzip protoc-${arg_protobuf_ver}-linux-x86_64.zip -d $PROTOPATH \
+&& rm protoc-${arg_protobuf_ver}-linux-x86_64.zip \
 # TODO update to google.golang.org/protobuf - https://github.com/dell/csi-baremetal/issues/613
-&&        	  go install github.com/golang/protobuf/protoc-gen-go@${arg_protoc_gen_go_ver}
+&& go install github.com/golang/protobuf/protoc-gen-go@${arg_protoc_gen_go_ver}
 # bind start_ide.sh
 RUN           ln --symbolic /usr/bin/start_ide.sh    /usr/bin/idea \
 &&            ln --symbolic /usr/bin/start_ide.sh    /usr/bin/goland
 # install kubectl
-RUN           curl -LO https://dl.k8s.io/release/v${arg_kubectl_ver}/bin/linux/amd64/kubectl \
-&&            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl \
-&&            rm kubectl
+RUN curl -f -LO https://dl.k8s.io/release/v${arg_kubectl_ver}/bin/linux/amd64/kubectl \
+&& install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl \
+&& rm kubectl
 # install helm3
-RUN           curl -LO https://get.helm.sh/helm-v${arg_helm_ver}-linux-amd64.tar.gz \
-&&            tar -xzf helm-v${arg_helm_ver}-linux-amd64.tar.gz \
-&&            chmod +x linux-amd64/helm \
-&&            mv linux-amd64/helm /usr/local/bin/helm \
-&&            rm helm-v${arg_helm_ver}-linux-amd64.tar.gz \
-&&            rm -rf linux-amd64
+RUN curl -f -LO https://get.helm.sh/helm-v${arg_helm_ver}-linux-amd64.tar.gz \
+&& tar -xzf helm-v${arg_helm_ver}-linux-amd64.tar.gz \
+&& chmod +x linux-amd64/helm \
+&& mv linux-amd64/helm /usr/local/bin/helm \
+&& rm helm-v${arg_helm_ver}-linux-amd64.tar.gz \
+&& rm -rf linux-amd64
 
 # copy kind from builder
 COPY          --from=builder /kind/kind /usr/local/bin