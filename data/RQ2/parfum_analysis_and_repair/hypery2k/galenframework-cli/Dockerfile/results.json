{
  "startTime": 1674248193634,
  "endTime": 1674248195248,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 32,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 30,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 32,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 32,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 32,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 30,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 32,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 32,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nENV SUMMARY=\"galne-runtime\"\nENV DESCRIPTION=\"Application runtime for Galenframework\"\nENV AUTHOR=\"Martin Reinhardt <contact@martinreinhardt-online.de\"\nENV TZ=\"Europe/Berlin\"\n\nENV NVM_DIR /home/galen\nENV NODE_VERSION 8.12.0\nENV TEST_HOME /var/jenkins_home\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/v$NODE_VERSION/bin:$PATH\n\nLABEL summary=\"$SUMMARY\" \\\n      description=\"$DESCRIPTION\" \\\n      version=\"$VERSION\" \\\n      author=\"$AUTHOR\" \\\n      io.k8s.description=\"$DESCRIPTION\" \\\n      io.k8s.display-name=\"galen-runtime\" \\\n      io.k8s.tags=\"galen,galenframework,layout-testing,testing\" \\\n      com.redhat.component=\"galen-runtime-container\"\\\n      org.label-schema.license=MIT\n\n#================================================\n# Customize sources for apt-get\n#================================================\nRUN echo \"deb http://archive.ubuntu.com/ubuntu xenial main universe\\n\" > /etc/apt/sources.list && \\\n  echo \"deb http://archive.ubuntu.com/ubuntu xenial-updates main universe\\n\" >> /etc/apt/sources.list && \\\n  echo \"deb http://security.ubuntu.com/ubuntu xenial-security main universe\\n\" >> /etc/apt/sources.list\n\n# No interactive frontend during docker build\nENV DEBIAN_FRONTEND=noninteractive \\\n    DEBCONF_NONINTERACTIVE_SEEN=true\n\n#========================\n# Miscellaneous packages\n# Includes minimal runtime used for executing non GUI Java programs\n#========================\nRUN apt-get -qqy update \\\n  && apt-get -qqy --no-install-recommends install \\\n    bzip2 \\\n    ca-certificates \\\n    openjdk-8-jre-headless \\\n    tzdata \\\n    sudo \\\n    unzip \\\n    curl \\\n    wget \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/* \\\n  && sed -i 's/securerandom\\.source=file:\\/dev\\/random/securerandom\\.source=file:\\/dev\\/urandom/' ./usr/lib/jvm/java-8-openjdk-amd64/jre/lib/security/java.security\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\n\n#===================\n# Timezone settings\n# Possible alternative: https://github.com/docker/docker/issues/3359#issuecomment-32150214\n#===================\nENV TZ \"UTC\"\nRUN echo \"${TZ}\" > /etc/timezone \\\n  && dpkg-reconfigure --frontend noninteractive tzdata\n\n#========================================\n# Add normal user with passwordless sudo\n#========================================\nRUN useradd galen \\\n         --shell /bin/bash  \\\n         --create-home \\\n  && usermod -a -G sudo galen \\\n  && echo 'ALL ALL = (ALL) NOPASSWD: ALL' >> /etc/sudoers \\\n  && echo 'galen:secret' | chpasswd\n\n#===================================================\n# Install xvfb\n#===================================================\nRUN set -x && apt-get update && apt-get install --no-install-recommends -y xvfb && rm -rf /var/lib/apt/lists/*;\n\n#===================================================\n# Install Chrome\n#===================================================\n\nRUN echo 'deb http://dl.google.com/linux/chrome/deb/ stable main' > /etc/apt/sources.list.d/chrome.list && \\\n  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n  set -x && apt-get update && apt-get install --no-install-recommends -y google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\nADD scripts/xvfb-chrome /usr/bin/xvfb-chrome\nRUN ln -sf /usr/bin/xvfb-chrome /usr/bin/google-chrome\n\n#===================================================\n# Install firefox\n#===================================================\n\nRUN set -x && apt-get update && apt-get install --no-install-recommends -y firefox && rm -rf /var/lib/apt/lists/*;\n\nADD scripts/xvfb-firefox /usr/bin/xvfb-firefox\nRUN ln -sf /usr/bin/xvfb-firefox /usr/bin/firefox\n\n#===================================================\n# This is needed for PhantomJS\n#===================================================\n\nRUN set -x && apt-get update && apt-get install --no-install-recommends -y bzip2 zip && rm -rf /var/lib/apt/lists/*;\n\n# clean up\nRUN apt-get autoremove -y && rm -rf /var/lib/apt/lists/\n\n#===================================================\n# Run the following commands as non-privileged user\n#===================================================\nUSER galen\n\n#===================================================\n# Install nvm with node and npm\n#===================================================\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash && \\\n    . $NVM_DIR/nvm.sh && \\\n    nvm install $NODE_VERSION && nvm alias default $NODE_VERSION && nvm use default && \\\n    npm install -g galenframework-cli@$GALEN_VERSION && npm cache clean --force;\n\nVOLUME /var/test_scripts\n\nADD ./etc/entrypoint.sh /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}