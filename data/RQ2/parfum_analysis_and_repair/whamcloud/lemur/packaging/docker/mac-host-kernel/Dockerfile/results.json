{
  "startTime": 1674220960647,
  "endTime": 1674220961636,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 11,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM go-el7:latest\nMAINTAINER Michael MacDonald <michael.macdonald@intel.com>\n\n# Grab host kernel source and prepare symlinks.\nRUN export KERNEL_VERSION=$(uname -r | cut -d '-' -f 1) \\\n\t&& mkdir -p /usr/src/kernels \\\n\t&& curl -f -L https://www.kernel.org/pub/linux/kernel/v${KERNEL_VERSION%%.*}.x/linux-$KERNEL_VERSION.tar.xz | tar -C /usr/src/kernels -xJ \\\n\t&& mv /usr/src/kernels/linux-$KERNEL_VERSION /usr/src/kernels/$KERNEL_VERSION \\\n\t&& mkdir -p /lib/modules/$(uname -r) \\\n\t&& ln -sf /usr/src/kernels/$KERNEL_VERSION /lib/modules/$(uname -r)/build \\\n\t&& ln -sf build /lib/modules/$(uname -r)/source && rm -rf /usr/src/kernels\n\nRUN yum install -y bc && rm -rf /var/cache/yum\n\n# Set up host kernel source for building DKMS client.\n# Notes:\n# 1) We have to pretend that it's a RHEL kernel in order to make DKMS happy\nRUN export KERNEL_VERSION=$(uname -r | cut -d '-' -f 1) \\\n        && yum install -y bc \\\n\t&& RHEL_RELEASE=($(awk '{gsub(/\\./, \" \", $4); print $4}' /etc/redhat-release)) \\\n\t&& cd /usr/src/kernels/$KERNEL_VERSION \\\n\t&& zcat /proc/1/root/proc/config.gz > .config \\\n\t&& make modules_prepare \\\n\t&& echo -e \"#define RHEL_MAJOR ${RHEL_RELEASE[0]}\\n#define RHEL_MINOR ${RHEL_RELEASE[1]}\\n#define RHEL_RELEASE \\\"${RHEL_RELEASE[0]}.${RHEL_RELEASE[1]}.${RHEL_RELEASE[2]}\\\"\\n\" >> include/generated/uapi/linux/version.h && rm -rf /var/cache/yum\n"
}