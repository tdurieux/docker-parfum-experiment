diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/quantaxis/quantaxis/docker/qavscode/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/quantaxis/quantaxis/docker/qavscode/Dockerfile/repaired.Dockerfile
index 1693295..b7b8fa3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/quantaxis/quantaxis/docker/qavscode/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/quantaxis/quantaxis/docker/qavscode/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@ FROM ubuntu:18.04
 ENV DEBIAN_FRONTEND noninteractive
 
 #Common deps
-RUN apt-get update && apt-get -y install curl xz-utils wget gpg
+RUN apt-get update && apt-get -y --no-install-recommends install curl xz-utils wget gpg && rm -rf /var/lib/apt/lists/*;
 
 #Install node and yarn
 #From: https://github.com/nodejs/docker-node/blob/6b8d86d6ad59e0d1e7a94cec2e909cad137a028f/8/Dockerfile
@@ -21,14 +21,15 @@ RUN set -ex \
     8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
     C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
     DD8F2338BAE7501E3DD5AC78C273792F7D83545D \
-    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \
-    ; do \
-    gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
-    gpg --batch --keyserver pool.sks-keyservers.net --recv-keys "$key" || \
+    A48C2BEE680E841632CD4E44F07496B3EB3C1762; do \
+    
+
+    gpg --batch --keyserver ipv4.ha.pool.sks-keyservers.net --recv-keys "$key" || \
+    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" || \
     gpg --batch --keyserver pgp.mit.edu --recv-keys "$key" || \
     gpg --batch --keyserver keyserver.pgp.com --recv-keys "$key" || \
-    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ; \
-    done
+    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
+   done
 
 ARG NODE_VERSION=10.15.3
 ENV NODE_VERSION $NODE_VERSION
@@ -41,10 +42,10 @@ RUN ARCH= && dpkgArch="$(dpkg --print-architecture)" \
     arm64) ARCH='arm64';; \
     armhf) ARCH='armv7l';; \
     i386) ARCH='x86';; \
-    *) echo "unsupported architecture"; exit 1 ;; \
-    esac \
-    && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
-    && curl -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
+    * echo "unsupported  architecture"; exit 1;; \
+  esac \
+    && curl -f -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz" \
+    && curl -f -SLO --compressed "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \
     && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \
     && grep " node-v$NODE_VERSION-linux-$ARCH.tar.xz\$" SHASUMS256.txt | sha256sum -c - \
     && tar -xJf "node-v$NODE_VERSION-linux-$ARCH.tar.xz" -C /usr/local --strip-components=1 --no-same-owner \
@@ -55,14 +56,16 @@ ENV YARN_VERSION 1.13.0
 
 RUN set -ex \
     && for key in \
-    6A010C5166006599AA17F08146C2130DFD2497F5 \
-    ; do \
-    gpg --batch --keyserver ipv4.pool.sks-keyservers.net --recv-keys "$key" || \
-    gpg --batch --keyserver pool.sks-keyservers.net --recv-keys "$key" || \
+    6A010C5166006599AA17F08146C2130DFD2497F5; do \
+    
+
+    gpg --batch --keyserver ipv4.ha.pool.sks-keyservers.net --recv-keys "$key" || \
+    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" || \
     gpg --batch --keyserver pgp.mit.edu --recv-keys "$key" || \
     gpg --batch --keyserver keyserver.pgp.com --recv-keys "$key" || \
-    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key" ; \
-    done \
+    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
+   done \
+
     && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz" \
     && curl -fSLO --compressed "https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc" \
     && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \
@@ -75,7 +78,7 @@ RUN set -ex \
 #Developer tools
 
 ## Git and sudo (sudo needed for user override)
-RUN apt-get -y install git sudo
+RUN apt-get -y --no-install-recommends install git sudo && rm -rf /var/lib/apt/lists/*;
 
 #LSPs
 
@@ -86,7 +89,7 @@ ENV GO_ROOT=/usr/local/go
 ENV PATH $PATH:/usr/local/go/bin
 ENV PATH $PATH:${GOPATH}/bin
 
-RUN curl -sS https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz | tar -C /usr/local -xzf - && \
+RUN curl -f -sS https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz | tar -C /usr/local -xzf - && \
     go get -u -v github.com/nsf/gocode && \
     go get -u -v github.com/uudashr/gopkgs/cmd/gopkgs && \
     go get -u -v github.com/ramya-rao-a/go-outline && \
@@ -112,23 +115,23 @@ RUN curl -sS https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar
     go get -u -v github.com/davidrjenni/reftools/cmd/fillstruct
 
 #Java
-RUN apt-get update && apt-get -y install openjdk-8-jdk maven gradle
+RUN apt-get update && apt-get -y --no-install-recommends install openjdk-8-jdk maven gradle && rm -rf /var/lib/apt/lists/*;
 
 
 #C/C++
 # public LLVM PPA, development version of LLVM
 RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
     echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main" > /etc/apt/sources.list.d/llvm.list && \
-    apt-get update && apt-get install -y clang-tools-10 clangd-10 clang-tidy-10 && \
+    apt-get update && apt-get install --no-install-recommends -y clang-tools-10 clangd-10 clang-tidy-10 && \
     ln -s /usr/bin/clangd-10 /usr/bin/clangd && \
-    ln -s /usr/bin/clang-tidy-10 /usr/bin/clang-tidy
+    ln -s /usr/bin/clang-tidy-10 /usr/bin/clang-tidy && rm -rf /var/lib/apt/lists/*;
 
 #Python 3
-RUN apt-get update && apt-get install -y python3 python3-dev python3-pip && \
+RUN apt-get update && apt-get install --no-install-recommends -y python3 python3-dev python3-pip && \
     update-alternatives --install /usr/bin/python python /usr/bin/python3 1 && \
-    pip3 install python-language-server
+    pip3 install --no-cache-dir python-language-server && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install QUANTAXIS \
+RUN pip3 install --no-cache-dir QUANTAXIS \
     flake8 \
     autopep8 \
     futures \
@@ -136,38 +139,38 @@ RUN pip3 install QUANTAXIS \
     rope \
     pydocstyle \
     yapf && \
-    pip3 install quantaxis_webserver && \
-    pip3 install quantaxis_pubsub && \
-    pip3 install quantaxis-randomprice && \
-    pip3 install qarealtime-collector && \
-    pip3 install QATRADER && \
-    pip3 install QAStrategy;
+    pip3 install --no-cache-dir quantaxis_webserver && \
+    pip3 install --no-cache-dir quantaxis_pubsub && \
+    pip3 install --no-cache-dir quantaxis-randomprice && \
+    pip3 install --no-cache-dir qarealtime-collector && \
+    pip3 install --no-cache-dir QATRADER && \
+    pip3 install --no-cache-dir QAStrategy;
 
 #PHP
-RUN apt-get -y install php curl php-cli php-mbstring unzip
+RUN apt-get -y --no-install-recommends install php curl php-cli php-mbstring unzip && rm -rf /var/lib/apt/lists/*;
 
 # https://getcomposer.org/doc/faqs/how-to-install-composer-programmatically.md
 # https://linuxconfig.org/how-to-install-php-composer-on-debian-linux
-RUN curl -s -o composer-setup.php https://getcomposer.org/installer \
+RUN curl -f -s -o composer-setup.php https://getcomposer.org/installer \
     && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \
     && rm composer-setup.php
 
 #Ruby
-RUN apt-get -y install ruby ruby-dev zlib1g-dev && \
-    gem install solargraph
+RUN apt-get -y --no-install-recommends install ruby ruby-dev zlib1g-dev && \
+    gem install solargraph && rm -rf /var/lib/apt/lists/*;
 
 
 # Rust
 ENV RUSTUP_HOME=/usr/local/rustup \
     CARGO_HOME=/usr/local/cargo \
-    PATH=/usr/local/cargo/bin:$PATH 
+    PATH=/usr/local/cargo/bin:$PATH
 
 ENV USER root
 
 RUN curl -fsSL https://sh.rustup.rs | sh -s -- -y \
     && rustup update \
     && rustup component add rls rust-src rust-analysis
-    
+
 
 
 RUN chmod g+rw /home && \
@@ -180,7 +183,7 @@ RUN chmod g+rw /home && \
 
 #Theia
 ##Needed for node-gyp, nsfw build
-RUN apt-get update && apt-get install -y python build-essential
+RUN apt-get update && apt-get install --no-install-recommends -y python build-essential && rm -rf /var/lib/apt/lists/*;
 
 # USER theia
 ARG version=latest
@@ -189,7 +192,7 @@ ADD $version.package.json ./package.json
 ARG GITHUB_TOKEN
 # using "NODE_OPTIONS=..." to avoid out-of-memory problem in CI
 RUN yarn --cache-folder ./ycache && rm -rf ./ycache && \
-    NODE_OPTIONS="--max_old_space_size=4096" yarn theia build
+    NODE_OPTIONS="--max_old_space_size=4096" yarn theia build && yarn cache clean;
 EXPOSE 3000
 ENV SHELL=/bin/bash \
     THEIA_DEFAULT_PLUGINS=local-dir:/home/theia/plugins