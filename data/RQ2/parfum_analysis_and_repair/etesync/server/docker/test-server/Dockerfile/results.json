{
  "startTime": 1674251177262,
  "endTime": 1674251178149,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9.0-alpine\n\nARG ETESYNC_VERSION\n\nENV PIP_DISABLE_PIP_VERSION_CHECK=1\nENV PIP_NO_CACHE_DIR=1\n\n# install packages and pip requirements first, in a single step,\nCOPY /requirements.txt /requirements.txt\nRUN set -ex ; \\\n    apk add --no-cache libpq postgresql-dev --virtual .build-deps coreutils gcc libc-dev libffi-dev make; \\\n    pip install --no-cache-dir -U pip; \\\n    pip install --no-cache-dir --progress-bar off -r /requirements.txt ; \\\n    apk del .build-deps make gcc coreutils ; \\\n    rm -rf /root/.cache\n\nCOPY . /app\n\nRUN set -ex ;\\\n    mkdir -p /data/static /data/media ;\\\n    cd /app ;\\\n    mkdir -p /etc/etebase-server ;\\\n    cp docker/test-server/etebase-server.ini /etc/etebase-server ;\\\n    sed -e '/ETEBASE_CREATE_USER_FUNC/ s/^#*/#/' -i /app/etebase_server/settings.py ;\\\n    chmod +x docker/test-server/entrypoint.sh\n\n# this is a test image and should start up quickly, so it starts with the DB\n# and static data already fully set up.\nRUN set -ex ;\\\n    cd /app ;\\\n    python manage.py migrate ;\\\n    python manage.py collectstatic --noinput\n\nENV ETESYNC_VERSION=${ETESYNC_VERSION}\nVOLUME /data\nEXPOSE 3735\n\nENTRYPOINT [\"/app/docker/test-server/entrypoint.sh\"]\n"
}