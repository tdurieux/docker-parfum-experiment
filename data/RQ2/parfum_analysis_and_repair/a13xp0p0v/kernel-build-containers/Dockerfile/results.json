{
  "startTime": 1674249977451,
  "endTime": 1674249978625,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 6,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 6,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 6,
        "columnEnd": 125
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 8,
        "columnEnd": 126
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 6,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 6,
        "columnEnd": 135
      }
    }
  ],
  "repairedDockerfile": "ARG UBUNTU_VERSION\nFROM ubuntu:${UBUNTU_VERSION} as base\n\nARG GCC_VERSION\nARG CLANG_VERSION\nRUN set -x && echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y -q apt-utils dialog && \\\n    apt-get install --no-install-recommends -y -q sudo aptitude flex bison libncurses5-dev make git exuberant-ctags bc libssl-dev libelf-dev && \\\n    if [ \"$GCC_VERSION\" ]; then \\\n      apt-get install --no-install-recommends -y -q gcc-${GCC_VERSION} g++-${GCC_VERSION} gcc-${GCC_VERSION}-plugin-dev gcc g++ \\\n        gcc-${GCC_VERSION}-aarch64-linux-gnu g++-${GCC_VERSION}-aarch64-linux-gnu gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \\\n        gcc-${GCC_VERSION}-arm-linux-gnueabi g++-${GCC_VERSION}-arm-linux-gnueabi gcc-arm-linux-gnueabi g++-arm-linux-gnueabi && \\\n      if [ \"$GCC_VERSION\" != \"4.9\" ]; then \\\n        apt-get install --no-install-recommends -y -q gcc-${GCC_VERSION}-plugin-dev-aarch64-linux-gnu gcc-${GCC_VERSION}-plugin-dev-arm-linux-gnueabi; \\\n      fi \\\n    fi; rm -rf /var/lib/apt/lists/*; \\\n    if [ \"$CLANG_VERSION\" ]; then \\\n      apt-get install --no-install-recommends -y -q clang-${CLANG_VERSION} lld-${CLANG_VERSION} clang-tools-${CLANG_VERSION} clang lld; \\\n    fi\n\nARG UNAME\nARG UID\nARG GID\nRUN set -x && groupadd -g ${GID} -o ${UNAME} && \\\n    useradd -u $UID -g $GID -G sudo -ms /bin/bash ${UNAME} && \\\n    echo \"${UNAME} ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n    echo \"Set disable_coredump false\" >> /etc/sudo.conf && \\\n    if [ \"$GCC_VERSION\" ]; then \\\n      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 100 && \\\n      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} 100 && \\\n      sudo update-alternatives --install /usr/bin/aarch64-linux-gnu-gcc aarch64-linux-gnu-gcc /usr/bin/aarch64-linux-gnu-gcc-${GCC_VERSION} 100 && \\\n      sudo update-alternatives --install /usr/bin/aarch64-linux-gnu-g++ aarch64-linux-gnu-g++ /usr/bin/aarch64-linux-gnu-g++-${GCC_VERSION} 100 && \\\n      sudo update-alternatives --install /usr/bin/arm-linux-gnueabi-gcc arm-linux-gnueabi-gcc /usr/bin/arm-linux-gnueabi-gcc-${GCC_VERSION} 100 && \\\n      sudo update-alternatives --install /usr/bin/arm-linux-gnueabi-g++ arm-linux-gnueabi-g++ /usr/bin/arm-linux-gnueabi-g++-${GCC_VERSION} 100; \\\n    fi; \\\n    if [ \"$CLANG_VERSION\" ]; then \\\n      sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-${CLANG_VERSION} 100 && \\\n      sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-${CLANG_VERSION} 100; \\\n    fi\n\nUSER ${UNAME}\nWORKDIR /home/${UNAME}/src\n\nCMD [\"bash\"]\n"
}