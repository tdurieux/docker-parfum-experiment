diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ml-tooling/opyrator/playground/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ml-tooling/opyrator/playground/Dockerfile/repaired.Dockerfile
index 974f248..c70e0e7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ml-tooling/opyrator/playground/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ml-tooling/opyrator/playground/Dockerfile/repaired.Dockerfile
@@ -27,14 +27,14 @@ COPY resources/scripts/fix-permissions.sh  /usr/bin/fix-permissions.sh
 # https://stackoverflow.com/questions/28405902/how-to-set-the-locale-inside-a-debian-ubuntu-docker-container#38553499
 RUN \
     apt-get update && \
-    apt-get install -y locales && \
+    apt-get install --no-install-recommends -y locales && \
     # install locales-all?
     sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \
     locale-gen && \
     dpkg-reconfigure --frontend=noninteractive locales && \
     update-locale LANG=en_US.UTF-8 && \
     # Cleanup
-    clean-layer.sh
+    clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 ENV LC_ALL="en_US.UTF-8" \
     LANG="en_US.UTF-8" \
@@ -42,10 +42,10 @@ ENV LC_ALL="en_US.UTF-8" \
 
 # Install basics
 RUN \
-    # add-apt-repository ppa:apt-fast/stable
-    # add-apt-repository 'deb http://security.ubuntu.com/ubuntu xenial-security main'
+
+
     apt-get update --fix-missing && \
-    apt-get install -y sudo apt-utils && \
+    apt-get install --no-install-recommends -y sudo apt-utils && \
     apt-get upgrade -y && \
     apt-get update && \
     apt-get install -y --no-install-recommends \
@@ -71,7 +71,7 @@ RUN \
     # Fix permissions
     fix-permissions.sh $HOME && \
     # Cleanup
-    clean-layer.sh
+    clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 # Add tini
 RUN wget --no-verbose https://github.com/krallin/tini/releases/download/v0.19.0/tini -O /tini && \
@@ -86,13 +86,13 @@ RUN \
     apt-get purge -y nginx nginx-common && \
     # libpcre required, otherwise you get a 'the HTTP rewrite module requires the PCRE library' error
     # Install apache2-utils to generate user:password file for nginx.
-    apt-get install -y libssl-dev libpcre3 libpcre3-dev apache2-utils zlib1g-dev && \
+    apt-get install --no-install-recommends -y libssl-dev libpcre3 libpcre3-dev apache2-utils zlib1g-dev && \
     wget --no-verbose https://openresty.org/download/openresty-$OPEN_RESTY_VERSION.tar.gz  -O ./openresty.tar.gz && \
     tar xfz ./openresty.tar.gz && \
     rm ./openresty.tar.gz && \
     cd ./openresty-$OPEN_RESTY_VERSION/ && \
     # Surpress output - if there is a problem remove  > /dev/null
-    ./configure --with-http_stub_status_module --with-http_sub_module > /dev/null && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-http_stub_status_module --with-http_sub_module > /dev/null && \
     make -j2 > /dev/null && \
     make install > /dev/null && \
     # create log dir and file - otherwise openresty will throw an error
@@ -103,7 +103,7 @@ RUN \
     # Fix permissions
     chmod -R a+rwx $RESOURCES_PATH && \
     # Cleanup
-    clean-layer.sh
+    clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 ENV PATH=/usr/local/openresty/nginx/sbin:$PATH
 
@@ -145,13 +145,13 @@ RUN wget --no-verbose https://repo.anaconda.com/miniconda/Miniconda3-py38_${COND
     ln -s $CONDA_ROOT/bin/conda /usr/bin/conda && \
     # Update
     $CONDA_ROOT/bin/conda install -y pip && \
-    $CONDA_ROOT/bin/pip install --upgrade pip && \
+    $CONDA_ROOT/bin/pip install --no-cache-dir --upgrade pip && \
     chmod -R a+rwx /usr/local/bin/ && \
     # Cleanup - Remove all here since conda is not in path as of now
     # find /opt/conda/ -follow -type f -name '*.a' -delete && \
     # find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
     $CONDA_ROOT/bin/conda clean -y --packages && \
-    $CONDA_ROOT/bin/conda clean -y -a -f  && \
+    $CONDA_ROOT/bin/conda clean -y -a -f && \
     $CONDA_ROOT/bin/conda build purge-all && \
     # Fix permissions
     fix-permissions.sh $CONDA_ROOT && \
@@ -164,7 +164,7 @@ ENV PATH=$CONDA_ROOT/bin:$PATH
 ENV LD_LIBRARY_PATH=$CONDA_ROOT/lib
 
 # Install pipx
-RUN pip install pipx && \
+RUN pip install --no-cache-dir pipx && \
     # Configure pipx
     python -m pipx ensurepath && \
     # Cleanup
@@ -183,7 +183,7 @@ RUN \
     # supervisor needs this logging path
     mkdir -p /var/log/supervisor/ && \
     # Cleanup
-    clean-layer.sh
+    clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 ### Install python libs
 RUN \
@@ -196,7 +196,7 @@ RUN \
     # Intsall bokeh, needed for streamlit open link hack
     pip install --no-cache-dir bokeh && \
     # Install PyTorch: Required by transformer demos
-    pip install torch==1.8.1+cpu -f https://download.pytorch.org/whl/torch_stable.html && \
+    pip install --no-cache-dir torch==1.8.1+cpu -f https://download.pytorch.org/whl/torch_stable.html && \
     # Cleanup
     clean-layer.sh
 
@@ -204,7 +204,7 @@ RUN \
 # hadolint ignore=DL3010
 COPY ./resources/opyrator.tar.gz $RESOURCES_PATH/opyrator.tar.gz
 # hadolint ignore=DL3013
-RUN pip install $RESOURCES_PATH/opyrator.tar.gz
+RUN pip install --no-cache-dir $RESOURCES_PATH/opyrator.tar.gz
 
 # Copy playground app to demos folder
 COPY resources/playground_app.py  $RESOURCES_PATH/demos/
@@ -216,7 +216,7 @@ RUN \
     apt-get update && \
     apt-get -y --no-install-recommends install ffmpeg && \
     # Cleanup
-    clean-layer.sh
+    clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 COPY ./resources/scripts/install-demos.py $RESOURCES_PATH/scripts/install-demos.py
 RUN python $RESOURCES_PATH/scripts/install-demos.py