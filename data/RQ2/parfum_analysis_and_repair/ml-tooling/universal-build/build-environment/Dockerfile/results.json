{
  "startTime": 1674215516713,
  "endTime": 1674215517869,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Fix for pipe operations: https://github.com/hadolint/hadolint/wiki/DL4006\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Generate and Set locals\n# https://stackoverflow.com/a/38553499/4575433\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends locales \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && locale-gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=en_US.UTF-8 \\\n    # Clean up\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV LC_ALL=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US:en\" \\\n    TZ=\"Europe/Berlin\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    RESOURCES_PATH=\"/resources\"\n\n# Create resources folder\nRUN mkdir $RESOURCES_PATH && chmod a+rwx $RESOURCES_PATH\n\n# Install basics\n# hadolint ignore=DL3005\nRUN apt-get update --fix-missing \\\n    && apt-get install -y --no-install-recommends apt-utils \\\n    && apt-get -y upgrade \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        wget \\\n        gnupg2 \\\n        git \\\n        jq \\\n        software-properties-common \\\n        # Required by Pyenv\n        make \\\n        build-essential \\\n        libbz2-dev \\\n        libssl-dev \\\n        libreadline-dev \\\n        libsqlite3-dev \\\n        libffi-dev \\\n    # Clean up\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Add tini\nRUN curl -fsSL https://github.com/krallin/tini/releases/download/v0.19.0/tini -o /tini && \\\n    chmod +x /tini\n\n# Install Docker in Container\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n    && add-apt-repository \\\n        \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n        $(lsb_release -cs) \\\n        stable\" \\\n    && apt-get update -y \\\n    && apt-get install -y --no-install-recommends docker-ce=5:19.03.13~3-0~ubuntu-focal \\\n    # Clean up\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install Python\n# hadolint ignore=DL3013\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        python3 \\\n        python3-pip \\\n        gcc \\\n        python3-dev \\\n    && ln -s /usr/bin/python3 /usr/bin/python \\\n    # && ln -s /usr/bin/pip3 /usr/bin/pip \\\n    && pip install --no-cache-dir \\\n        setuptools==58.* \\\n        wheel==0.* \\\n        flake8==3.* \\\n        pytest==6.* \\\n        twine==3.* \\\n        mypy==0.* \\\n        pytest-cov==3.* \\\n        black==21.10b0 \\\n        pydocstyle==6.* \\\n        isort==5.* \\\n        docker==5.* \\\n        nox==2021.10.* \\\n        pipenv==2021.11.* \\\n        better-exceptions==0.* \\\n        # Fix safety problems\n        cryptography>=3.2.1\\\n        lxml>=4.6.2 \\\n    # Clean up\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install pyenv to allow dynamic creation of python versions\nRUN git clone https://github.com/pyenv/pyenv.git $RESOURCES_PATH/.pyenv\n# Add pyenv to path\nENV PATH=$RESOURCES_PATH/.pyenv/shims:$RESOURCES_PATH/.pyenv/bin:$PATH \\\n    PYENV_ROOT=$RESOURCES_PATH/.pyenv\n\n# Install web development tools\nRUN apt-get update \\\n    && curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n    && apt-get install -y --no-install-recommends nodejs \\\n    && npm install -g yarn@1 \\\n    # Clean up\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n\n# Install markdown lint tool\nRUN npm install -g markdownlint@^0.24.0 markdownlint-cli@^0.29.0 && npm cache clean --force;\n\n# Workaround to get ssh working in act and github actions\nRUN mkdir -p /github/home/.ssh/ \\\n    # create empty config file if not exists\n    && touch /github/home/.ssh/config \\\n    && chown -R root:root /github/home/.ssh \\\n    && chmod 700 /github/home/.ssh \\\n    && ln -s /github/home/.ssh /root/.ssh\n\n# Settings and configurations\nENV \\\n    # Use local folder as pipenv virtualenv\n    PIPENV_VENV_IN_PROJECT=true \\\n    # Flush log message immediately to stdout\n    PYTHONUNBUFFERED=true \\\n    # Activate better exceptions (for python)\n    BETTER_EXCEPTIONS=1\n\n# Install universal build from distribution\n# hadolint ignore=DL3010\nCOPY ./resources/universal-build.tar.gz $RESOURCES_PATH/universal-build.tar.gz\n# hadolint ignore=DL3013\nRUN pip install --no-cache-dir $RESOURCES_PATH/universal-build.tar.gz\n\n# Install hadolint - Dockerfile linter\nRUN curl -fsSL https://github.com/hadolint/hadolint/releases/download/v2.8.0/hadolint-Linux-x86_64 -o /bin/hadolint \\\n    && chmod +x /bin/hadolint\n\n# Install trivy - Vulnerability Scanner for Containers\n# https://github.com/aquasecurity/trivy\nRUN curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b /usr/local/bin\n\nCOPY ./resources/entrypoint.sh /entrypoint.sh\n\nRUN chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/tini\", \"-g\", \"--\", \"/entrypoint.sh\"]\n"
}