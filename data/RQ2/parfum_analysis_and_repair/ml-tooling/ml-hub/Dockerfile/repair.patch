diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ml-tooling/ml-hub/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ml-tooling/ml-hub/Dockerfile/repaired.Dockerfile
index c1ee51b..9b900a3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ml-tooling/ml-hub/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ml-tooling/ml-hub/Dockerfile/repaired.Dockerfile
@@ -31,7 +31,7 @@ RUN \
       fi') \
       && \
    # Cleanup
-   clean-layer.sh
+   clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 # Add tini
 RUN wget --quiet https://github.com/krallin/tini/releases/download/v0.18.0/tini -O /tini && \
@@ -44,7 +44,7 @@ RUN \
     apt-get purge -y nginx nginx-common && \
     # libpcre required, otherwise you get a 'the HTTP rewrite module requires the PCRE library' error
     # Install apache2-utils to generate user:password file for nginx.
-    apt-get install -y libssl-dev libpcre3 libpcre3-dev apache2-utils && \
+    apt-get install --no-install-recommends -y libssl-dev libpcre3 libpcre3-dev apache2-utils && \
     mkdir $_RESOURCES_PATH"/openresty" && \
     cd $_RESOURCES_PATH"/openresty" && \
     wget --quiet https://openresty.org/download/openresty-1.15.8.1.tar.gz  -O ./openresty.tar.gz && \
@@ -52,7 +52,7 @@ RUN \
     rm ./openresty.tar.gz && \
     cd ./openresty-1.15.8.1/ && \
     # Surpress output - if there is a problem remove  > /dev/null
-    ./configure --with-http_stub_status_module --with-http_sub_module > /dev/null && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-http_stub_status_module --with-http_sub_module > /dev/null && \
     make -j2 > /dev/null && \
     make install > /dev/null && \
     # create log dir and file - otherwise openresty will throw an error
@@ -63,7 +63,7 @@ RUN \
     # Fix permissions
     chmod -R a+rwx $_RESOURCES_PATH && \
     # Cleanup
-    clean-layer.sh
+    clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 ENV \
    PATH=/usr/local/openresty/nginx/sbin:$PATH
@@ -72,17 +72,17 @@ ENV \
 RUN \
    apt-get update && \
    #apt-get install -y curl && \
-   curl -sL https://deb.nodesource.com/setup_10.x | bash - && \
-   apt-get install -y nodejs && \
+   curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && \
+   apt-get install --no-install-recommends -y nodejs && \
    # Cleanup
-   clean-layer.sh
+   clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 # Install JupyterHub
 RUN \
    npm install -g configurable-http-proxy && \
    python3 -m pip install --no-cache jupyterhub && \
    # Cleanup
-   clean-layer.sh
+   clean-layer.sh && npm cache clean --force;
 
 ### END BASICS ###
 
@@ -92,13 +92,13 @@ RUN \
 COPY resources/mlhubspawner /mlhubspawner
 
 RUN \
-   pip install --no-cache git+https://github.com/jupyterhub/dockerspawner@d1f27e2855d2cefbdb25b29cc069b9ca69d564e3 && \
-   pip install --no-cache git+https://github.com/ml-tooling/nativeauthenticator@9859a69dcc9d2ae8d827f192a1580d86f897e9f1 && \
-   pip install --no-cache git+https://github.com/jupyterhub/ldapauthenticator@b32a5ea23449edc0519ba4cd86dd0cc0c36896d5 && \
-   pip install --no-cache git+https://github.com/ryanlovett/imagespawner && \
-   pip install --no-cache /mlhubspawner && \
+   pip install --no-cache-dir --no-cache git+https://github.com/jupyterhub/dockerspawner@d1f27e2855d2cefbdb25b29cc069b9ca69d564e3 && \
+   pip install --no-cache-dir --no-cache git+https://github.com/ml-tooling/nativeauthenticator@9859a69dcc9d2ae8d827f192a1580d86f897e9f1 && \
+   pip install --no-cache-dir --no-cache git+https://github.com/jupyterhub/ldapauthenticator@b32a5ea23449edc0519ba4cd86dd0cc0c36896d5 && \
+   pip install --no-cache-dir --no-cache git+https://github.com/ryanlovett/imagespawner && \
+   pip install --no-cache-dir --no-cache /mlhubspawner && \
    rm -r /mlhubspawner && \
-   pip install tornado==5.1.1 && \
+   pip install --no-cache-dir tornado==5.1.1 && \
    # Cleanup
    clean-layer.sh
 
@@ -111,18 +111,18 @@ ADD https://raw.githubusercontent.com/ml-tooling/zero-to-mlhub-k8s/master/images
 ADD resources/kubernetes/jupyterhub_chart_config.py $_RESOURCES_PATH/jupyterhub_chart_config.py
 # Copy the jupyterhub config that has a lot of options to be configured
 
-RUN chmod u+rx /usr/local/bin/cull_idle_servers.py 
+RUN chmod u+rx /usr/local/bin/cull_idle_servers.py
+
+RUN pip3 install --no-cache-dir oauthenticator psutil yamlreader pyjwt \
+
 
-RUN pip3 install oauthenticator psutil yamlreader pyjwt \
-         # https://github.com/jupyterhub/kubespawner
-         # https://pypi.org/project/jupyterhub-kubespawner
          jupyterhub-kubespawner==0.11.* \
-         # https://github.com/kubernetes-client/python
-         # https://pypi.org/project/kubernetes
+
+
          kubernetes==10.0.* \
-         # https://pypi.org/project/pycurl/
+
          pycurl==7.43.0.*
-RUN apt-get update && apt-get install -y pcregrep && clean-layer.sh
+RUN apt-get update && apt-get install --no-install-recommends -y pcregrep && clean-layer.sh && rm -rf /var/lib/apt/lists/*;
 
 ### END INCUBATION ZONE ###
 
@@ -214,7 +214,7 @@ LABEL \
     "org.label-schema.schema-version"="1.0" \
     "org.label-schema.vcs-ref"=$ARG_VCS_REF \
     "org.label-schema.build-date"=$ARG_BUILD_DATE
-    
+
 ### END LABELS ###
 
 # use global option with tini to kill full process groups: https://github.com/krallin/tini#process-group-killing
@@ -225,4 +225,4 @@ CMD ["/bin/bash", "/resources/docker-entrypoint.sh"]
 
 # The port on which nginx listens and checks whether it's http(s) or ssh traffic
 EXPOSE 8080
- 
+