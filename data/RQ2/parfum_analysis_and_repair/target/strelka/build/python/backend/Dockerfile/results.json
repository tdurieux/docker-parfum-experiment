{
  "startTime": 1674219651128,
  "endTime": 1674219652498,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 5,
        "columnEnd": 164
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.10\nARG DEBIAN_FRONTEND=noninteractive\nLABEL maintainer=\"Target Brands, Inc. TTS-CFC-OpenSource@target.com\"\n\nARG YARA_VERSION=4.1.3\nARG YARA_PYTHON_VERSION=4.1.3\nARG CAPA_VERSION=3.0.3\nARG EXIFTOOL_VERSION=12.38\n\n# Update packages\nRUN apt-get -qq update && \\\n# Install build packages\n    apt-get install -y --no-install-recommends -qq \\\n    automake \\\n    build-essential \\\n    curl \\\n    gcc \\\n    git \\\n    libglu1-mesa \\\n    libtool \\\n    make \\\n    swig \\\n    python3-dev \\\n    python3-pip \\\n    python3-wheel \\\n    pkg-config \\\n# Install runtime packages\n    antiword \\\n    libarchive-dev \\\n    libfuzzy-dev \\\n    libmagic-dev \\\n    libssl-dev \\\n    libzbar0 \\\n    python3-setuptools \\\n    redis-server \\\n    tesseract-ocr \\\n    unrar \\\n    upx \\\n    jq && \\\n# Download and compile Archive library, needed for exiftool to work best\n    cd /tmp/ && \\\n    curl -f -OL https://cpan.metacpan.org/authors/id/P/PH/PHRED/Archive-Zip-1.68.tar.gz && \\\n    tar -xzf Archive-Zip-1.68.tar.gz && \\\n    cd Archive-Zip-1.68/ && \\\n    perl Makefile.PL && \\\n    make && \\\n    make install && \\\n# Download and compile exiftool\n    cd /tmp/ && \\\n    curl -f -OL https://github.com/exiftool/exiftool/archive/refs/tags/$EXIFTOOL_VERSION.tar.gz && \\\n    tar -zxvf $EXIFTOOL_VERSION.tar.gz && \\\n    cd exiftool-$EXIFTOOL_VERSION/ && \\\n    perl Makefile.PL && \\\n    make && \\\n    make install && \\\n# Install FireEye CAPA\n#   - Binary installation, not supported as Python 3 plugin\n#   - Requires binary to be executable\n#   - Vivisect dependency requires available /.viv/ folder.\n    cd /tmp/ && \\\n    curl -f -OL https://github.com/fireeye/capa/releases/download/v$CAPA_VERSION/capa-linux && \\\n    chmod +x /tmp/capa-linux && \\\n    mkdir /.viv/ && \\\n    chmod -R a+rw /.viv && \\\n# Install FireEye FLOSS\n#   - Binary installation, not supported as Python 3 plugin\n#   - Requires binary to be executable\n    cd /tmp/ && \\\n    curl -f -OL https://s3.amazonaws.com/build-artifacts.floss.flare.fireeye.com/travis/linux/dist/floss && \\\n    chmod +x /tmp/floss && \\\n# Install YARA\n    cd /tmp/ && \\\n    curl -f -OL https://github.com/VirusTotal/yara/archive/v$YARA_VERSION.tar.gz && \\\n    tar -zxvf v$YARA_VERSION.tar.gz && \\\n    cd yara-$YARA_VERSION/ && \\\n    ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-crypto --enable-dotnet --enable-magic && \\\n    make && make install && make check && \\\n# Install yara-python\n    cd /tmp/ && \\\n    curl -f -OL https://github.com/VirusTotal/yara-python/archive/v$YARA_PYTHON_VERSION.tar.gz && \\\n    tar -zxvf v$YARA_PYTHON_VERSION.tar.gz && \\\n    cd yara-python-$YARA_PYTHON_VERSION/ && \\\n    python3 setup.py build --dynamic-linking && \\\n    python3 setup.py install && rm Archive-Zip-1.68.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n\n# Install JTR\nRUN apt-get -qq update \\\n  && apt-get install -qq --no-install-recommends -y git python build-essential ca-certificates libssl-dev zlib1g-dev yasm libgmp-dev libpcap-dev libbz2-dev libgomp1 && rm -rf /var/lib/apt/lists/*;\n# The maintainer isn't big on releases or tags so grab an arbitrary, but consistent, commit.\n# Additionally jump through some extra hoops to get the single commit to save some download time.\nRUN mkdir jtr && cd jtr && git init && git remote add origin https://github.com/openwall/john.git && git fetch --depth 1 origin b5c10480f56ff1b5d76c6cbdaf9c817582ee2228 && git reset --hard FETCH_HEAD \\\n  && rm -rf /jtr/.git \\\n  && cd /jtr/src \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make -s clean \\\n  && make -sj4 \\\n  && make install \\\n  && cp -Tr /jtr/run/ /jtr && rm -rf /jtr/run \\\n  && chmod -R 777 /jtr\n\n# Install Python packages\nCOPY ./build/python/backend/requirements.txt /strelka/requirements.txt\nRUN pip3 install --no-cache-dir -r /strelka/requirements.txt && \\\n    pip3 install --no-cache-dir --index-url https://lief-project.github.io/packages --trusted-host lief.quarkslab.com lief\n\n# Copy Strelka files\nCOPY ./src/python/ /strelka/\nCOPY ./build/python/backend/setup.py /strelka/setup.py\n\n# Install Strelka\nRUN cd /strelka/ && \\\n    python3 setup.py -q build && \\\n    python3 setup.py -q install && \\\n# Remove build packages\n    python3 setup.py -q clean --all && \\\n    rm -rf dist/ strelka.egg-info && \\\n    pip3 uninstall -y grpcio-tools && \\\n    apt-get autoremove -qq --purge \\\n    automake \\\n    build-essential \\\n    curl \\\n    gcc \\\n    git \\\n    libtool \\\n    make \\\n    python3-dev \\\n    python3-pip \\\n    python3-wheel && \\\n    apt-get purge -qq python3-setuptools  && \\\n    apt-get clean -qq && \\\n    rm -rf /var/lib/apt/lists/* /strelka/ /tmp/yara* && \\\n# Assign permissions to Strelka scan result logging directory\n    mkdir /var/log/strelka/ && \\\n    chgrp -R 0 /var/log/strelka/ && \\\n    chmod -R g=u /var/log/strelka/\n\n\nUSER 1001\n"
}