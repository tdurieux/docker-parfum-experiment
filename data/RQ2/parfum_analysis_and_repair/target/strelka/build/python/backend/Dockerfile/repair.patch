diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/target/strelka/build/python/backend/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/target/strelka/build/python/backend/Dockerfile/repaired.Dockerfile
index 657fd71..af29f4e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/target/strelka/build/python/backend/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/target/strelka/build/python/backend/Dockerfile/repaired.Dockerfile
@@ -10,7 +10,7 @@ ARG EXIFTOOL_VERSION=12.38
 # Update packages
 RUN apt-get -qq update && \
 # Install build packages
-    apt-get install --no-install-recommends -qq \
+    apt-get install -y --no-install-recommends -qq \
     automake \
     build-essential \
     curl \
@@ -39,7 +39,7 @@ RUN apt-get -qq update && \
     jq && \
 # Download and compile Archive library, needed for exiftool to work best
     cd /tmp/ && \
-    curl -OL https://cpan.metacpan.org/authors/id/P/PH/PHRED/Archive-Zip-1.68.tar.gz && \
+    curl -f -OL https://cpan.metacpan.org/authors/id/P/PH/PHRED/Archive-Zip-1.68.tar.gz && \
     tar -xzf Archive-Zip-1.68.tar.gz && \
     cd Archive-Zip-1.68/ && \
     perl Makefile.PL && \
@@ -47,7 +47,7 @@ RUN apt-get -qq update && \
     make install && \
 # Download and compile exiftool
     cd /tmp/ && \
-    curl -OL https://github.com/exiftool/exiftool/archive/refs/tags/$EXIFTOOL_VERSION.tar.gz && \
+    curl -f -OL https://github.com/exiftool/exiftool/archive/refs/tags/$EXIFTOOL_VERSION.tar.gz && \
     tar -zxvf $EXIFTOOL_VERSION.tar.gz && \
     cd exiftool-$EXIFTOOL_VERSION/ && \
     perl Makefile.PL && \
@@ -58,7 +58,7 @@ RUN apt-get -qq update && \
 #   - Requires binary to be executable
 #   - Vivisect dependency requires available /.viv/ folder.
     cd /tmp/ && \
-    curl -OL https://github.com/fireeye/capa/releases/download/v$CAPA_VERSION/capa-linux && \
+    curl -f -OL https://github.com/fireeye/capa/releases/download/v$CAPA_VERSION/capa-linux && \
     chmod +x /tmp/capa-linux && \
     mkdir /.viv/ && \
     chmod -R a+rw /.viv && \
@@ -66,34 +66,34 @@ RUN apt-get -qq update && \
 #   - Binary installation, not supported as Python 3 plugin
 #   - Requires binary to be executable
     cd /tmp/ && \
-    curl -OL https://s3.amazonaws.com/build-artifacts.floss.flare.fireeye.com/travis/linux/dist/floss && \
+    curl -f -OL https://s3.amazonaws.com/build-artifacts.floss.flare.fireeye.com/travis/linux/dist/floss && \
     chmod +x /tmp/floss && \
 # Install YARA
     cd /tmp/ && \
-    curl -OL https://github.com/VirusTotal/yara/archive/v$YARA_VERSION.tar.gz && \
+    curl -f -OL https://github.com/VirusTotal/yara/archive/v$YARA_VERSION.tar.gz && \
     tar -zxvf v$YARA_VERSION.tar.gz && \
     cd yara-$YARA_VERSION/ && \
     ./bootstrap.sh && \
-    ./configure --with-crypto --enable-dotnet --enable-magic && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-crypto --enable-dotnet --enable-magic && \
     make && make install && make check && \
 # Install yara-python
     cd /tmp/ && \
-    curl -OL https://github.com/VirusTotal/yara-python/archive/v$YARA_PYTHON_VERSION.tar.gz && \
+    curl -f -OL https://github.com/VirusTotal/yara-python/archive/v$YARA_PYTHON_VERSION.tar.gz && \
     tar -zxvf v$YARA_PYTHON_VERSION.tar.gz && \
     cd yara-python-$YARA_PYTHON_VERSION/ && \
     python3 setup.py build --dynamic-linking && \
-    python3 setup.py install
+    python3 setup.py install && rm Archive-Zip-1.68.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 
 # Install JTR
 RUN apt-get -qq update \
-  && apt-get install -qq --no-install-recommends -y git python build-essential ca-certificates libssl-dev zlib1g-dev yasm libgmp-dev libpcap-dev libbz2-dev libgomp1
+  && apt-get install -qq --no-install-recommends -y git python build-essential ca-certificates libssl-dev zlib1g-dev yasm libgmp-dev libpcap-dev libbz2-dev libgomp1 && rm -rf /var/lib/apt/lists/*;
 # The maintainer isn't big on releases or tags so grab an arbitrary, but consistent, commit.
 # Additionally jump through some extra hoops to get the single commit to save some download time.
 RUN mkdir jtr && cd jtr && git init && git remote add origin https://github.com/openwall/john.git && git fetch --depth 1 origin b5c10480f56ff1b5d76c6cbdaf9c817582ee2228 && git reset --hard FETCH_HEAD \
   && rm -rf /jtr/.git \
   && cd /jtr/src \
-  && ./configure \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
   && make -s clean \
   && make -sj4 \
   && make install \
@@ -103,7 +103,7 @@ RUN mkdir jtr && cd jtr && git init && git remote add origin https://github.com/
 # Install Python packages
 COPY ./build/python/backend/requirements.txt /strelka/requirements.txt
 RUN pip3 install --no-cache-dir -r /strelka/requirements.txt && \
-    pip3 install --index-url https://lief-project.github.io/packages --trusted-host lief.quarkslab.com lief
+    pip3 install --no-cache-dir --index-url https://lief-project.github.io/packages --trusted-host lief.quarkslab.com lief
 
 # Copy Strelka files
 COPY ./src/python/ /strelka/