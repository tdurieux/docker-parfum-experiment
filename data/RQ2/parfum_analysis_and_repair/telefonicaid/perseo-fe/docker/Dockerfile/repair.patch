diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/telefonicaid/perseo-fe/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/telefonicaid/perseo-fe/docker/Dockerfile/repaired.Dockerfile
index 51d6bf3..9a1728d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/telefonicaid/perseo-fe/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/telefonicaid/perseo-fe/docker/Dockerfile/repaired.Dockerfile
@@ -29,7 +29,7 @@ ARG SOURCE_BRANCH=master
 
 ########################################################################################
 #
-# This build stage retrieves the source code from GitHub. The default download is the 
+# This build stage retrieves the source code from GitHub. The default download is the
 # latest tip of the master of the named repository on GitHub.
 #
 # To obtain the latest stable release run this Docker file with the parameters:
@@ -38,12 +38,12 @@ ARG SOURCE_BRANCH=master
 # To obtain any specific version of a release run this Docker file with the parameters:
 # --no-cache --build-arg DOWNLOAD=1.7.0
 #
-# For development purposes, to create a development image including a running Distro, 
+# For development purposes, to create a development image including a running Distro,
 # run this Docker file with the parameter:
 #
 # --target=builder
 #
-######################################################################################## 
+########################################################################################
 FROM node:${NODE_VERSION} AS builder
 ARG GITHUB_ACCOUNT
 ARG GITHUB_REPOSITORY
@@ -52,8 +52,8 @@ ARG SOURCE_BRANCH
 
 SHELL ["/bin/bash", "-o", "pipefail", "-c"]
 
-# As an Alternative for local development, just copy this Dockerfile into file the root of 
-# the repository and replace the whole RUN statement below by the following COPY statement 
+# As an Alternative for local development, just copy this Dockerfile into file the root of
+# the repository and replace the whole RUN statement below by the following COPY statement
 # in your local source using :
 #
 # COPY . /opt/perseo-fe/
@@ -79,14 +79,14 @@ RUN \
 		echo "INFO: Building Latest Development from ${SOURCE_BRANCH} branch."; \
 	elif [ "${DOWNLOAD}" = "stable" ]; \
 	then \
-		RELEASE=$(curl -s https://api.github.com/repos/"${GITHUB_ACCOUNT}"/"${GITHUB_REPOSITORY}"/releases/latest | grep 'tag_name' | cut -d\" -f4); \
+		RELEASE=$( curl -f -s https://api.github.com/repos/"${GITHUB_ACCOUNT}"/"${GITHUB_REPOSITORY}"/releases/latest | grep 'tag_name' | cut -d\" -f4) ; \
 		echo "INFO: Building Latest Stable Release: ${RELEASE}"; \
 	else \
 	 	RELEASE="${DOWNLOAD}"; \
 	 	echo "INFO: Building Release: ${RELEASE}"; \
 	fi && \
 	RELEASE_CONCAT=$(echo "${RELEASE}" | tr / -); \
-	curl -s -L https://github.com/"${GITHUB_ACCOUNT}"/"${GITHUB_REPOSITORY}"/archive/"${RELEASE}".zip > source.zip && \
+	curl -f -s -L https://github.com/"${GITHUB_ACCOUNT}"/"${GITHUB_REPOSITORY}"/archive/"${RELEASE}".zip > source.zip && \
 	unzip source.zip -x "*/test/**" "*/rpm/**" "*/docker/**" "*/documentation/**" "*/.*" && \
 	rm source.zip && \
 	mv "${GITHUB_REPOSITORY}-${RELEASE_CONCAT}" /opt/perseo-fe && \
@@ -94,25 +94,25 @@ RUN \
 	apt-get clean && \
 	apt-get remove -y unzip && \
 	apt-get -y autoremove && \
-	rm -rf /var/lib/apt/lists/* 
+	rm -rf /var/lib/apt/lists/*
 
 WORKDIR /opt/perseo-fe
 
 # hadolint ignore=DL3008
 RUN \
-	# Ensure that Git is installed prior to running npm install
+
 	apt-get install -y --no-install-recommends git && \
 	echo "INFO: npm install --production..." && \
 	npm install --only=prod --no-package-lock --no-optional && \
 	# Remove Git and clean apt cache
 	apt-get clean && \
 	apt-get remove -y git && \
-	apt-get -y autoremove 
+	apt-get -y autoremove && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;
 
 ########################################################################################
 #
 # This build stage installs PM2 if required.
-# 
+#
 # To create an image using PM2 run this Docker file with the parameter:
 #
 # --target=pm2-install
@@ -134,7 +134,7 @@ LABEL "org.opencontainers.image.source"="https://github.com/${GITHUB_ACCOUNT}/${
 LABEL "org.nodejs.version"="${NODE_VERSION}"
 
 COPY --from=builder /opt/perseo-fe /opt/perseo-fe
-RUN npm install pm2@4.4.0 -g --no-package-lock --no-optional
+RUN npm install pm2@4.4.0 -g --no-package-lock --no-optional && npm cache clean --force;
 
 USER node
 ENV PERSEO_MONGO_HOST=mongodb
@@ -142,7 +142,7 @@ ENV PERSEO_CORE_URL=http://corehost:8080
 ENV NODE_ENV=production
 
 # Expose 9090 for HTTP PORT
-EXPOSE ${PERSEO_ENDPOINT_PORT:-9090} 
+EXPOSE ${PERSEO_ENDPOINT_PORT:-9090}
 
 CMD ["pm2-runtime", "/opt/perseo-fe/bin/perseo", "-- ", "config.js"]
 
@@ -186,7 +186,7 @@ ENV PERSEO_CORE_URL=http://corehost:8080
 ENV NODE_ENV=production
 
 # Expose 9090 for HTTP PORT
-EXPOSE ${PERSEO_ENDPOINT_PORT:-9090} 
+EXPOSE ${PERSEO_ENDPOINT_PORT:-9090}
 CMD ["/opt/perseo-fe/bin/perseo", "-- ", "config.js"]
 HEALTHCHECK  --interval=30s --timeout=3s --start-period=10s \
   CMD ["/nodejs/bin/node", "./bin/healthcheck"]
@@ -220,7 +220,7 @@ RUN \
 	apt-get update && \
 	# Ensure that Curl is installed prior to running old entrypoints
 	apt-get install -y --no-install-recommends curl && \
-	rm -rf /var/lib/apt/lists/* 
+	rm -rf /var/lib/apt/lists/*
 
 USER node
 ENV PERSEO_MONGO_HOST=mongodb
@@ -228,7 +228,7 @@ ENV PERSEO_CORE_URL=http://corehost:8080
 ENV NODE_ENV=production
 
 # Expose 9090 for HTTP PORT
-EXPOSE ${PERSEO_ENDPOINT_PORT:-9090} 
+EXPOSE ${PERSEO_ENDPOINT_PORT:-9090}
 
 CMD ["node", "/opt/perseo-fe/bin/perseo", "-- ", "config.js"]
 HEALTHCHECK --interval=30s --timeout=3s --start-period=10s \