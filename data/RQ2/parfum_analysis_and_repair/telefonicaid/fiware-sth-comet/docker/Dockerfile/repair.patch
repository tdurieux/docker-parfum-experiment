diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/telefonicaid/fiware-sth-comet/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/telefonicaid/fiware-sth-comet/docker/Dockerfile/repaired.Dockerfile
index 9c3f017..8d5d375 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/telefonicaid/fiware-sth-comet/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/telefonicaid/fiware-sth-comet/docker/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-
 # Copyright 2015 Telef贸nica Investigaci贸n y Desarrollo, S.A.U
 #
 # This file is part of the STH component
@@ -28,7 +27,7 @@ ARG DOWNLOAD=latest
 ARG SOURCE_BRANCH=master
 ARG STH_PORT=8666
 
-# Copying Build time arguments to environment variables so they are persisted at run time and can be 
+# Copying Build time arguments to environment variables so they are persisted at run time and can be
 # inspected within a running container.
 # see: https://vsupalov.com/docker-build-time-env-values/  for a deeper explanation.
 
@@ -41,7 +40,7 @@ MAINTAINER FIWARE STH . Telef贸nica I+D
 
 #
 # The following RUN command retrieves the source code from GitHub.
-# 
+#
 # To obtain the latest stable release run this Docker file with the parameters
 # --no-cache --build-arg DOWNLOAD=stable
 # To obtain any speciifc version of a release run this Docker file with the parameters
@@ -49,7 +48,7 @@ MAINTAINER FIWARE STH . Telef贸nica I+D
 #
 # The default download is the latest tip of the master of the named repository on GitHub
 #
-# Alternatively for local development, just copy this Dockerfile into file the root of the repository and 
+# Alternatively for local development, just copy this Dockerfile into file the root of the repository and
 # replace the whole RUN statement by the following COPY statement in your local source using :
 #
 # COPY . /opt/sth/
@@ -65,7 +64,7 @@ RUN apt-get update && \
 		echo "INFO: Building Latest Development from ${SOURCE_BRANCH} branch."; \
 	elif [ "${DOWNLOAD}" = "stable" ]; \
 	then \
-		RELEASE=$(curl -s https://api.github.com/repos/"${GITHUB_ACCOUNT}"/"${GITHUB_REPOSITORY}"/releases/latest | grep 'tag_name' | cut -d\" -f4); \
+		RELEASE=$( curl -f -s https://api.github.com/repos/"${GITHUB_ACCOUNT}"/"${GITHUB_REPOSITORY}"/releases/latest | grep 'tag_name' | cut -d\" -f4) ; \
 		echo "INFO: Building Latest Stable Release: ${RELEASE}"; \
 	else \
 	 	RELEASE="${DOWNLOAD}"; \
@@ -80,14 +79,14 @@ RUN apt-get update && \
 	apt-get clean && \
 	apt-get remove -y unzip && \
 	apt-get -y autoremove && \
-	rm -rf /var/lib/apt/lists/* 
+	rm -rf /var/lib/apt/lists/*
 
 WORKDIR /opt/sth
 
 RUN \
-	# Ensure that Git is installed prior to running npm install
+
 	apt-get update && \
-	apt-get install -y git && \
+	apt-get install --no-install-recommends -y git && \
 	echo "INFO: npm install --production..." && \
 	npm install --production && \
 	# Ensure permissions over default directory used by STH to generate csv files
@@ -97,7 +96,7 @@ RUN \
 	apt-get clean && \
 	apt-get remove -y git && \
 	apt-get -y autoremove && \
-	chmod +x docker/entrypoint.sh
+	chmod +x docker/entrypoint.sh && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;
 
 USER node
 ENV NODE_ENV=production