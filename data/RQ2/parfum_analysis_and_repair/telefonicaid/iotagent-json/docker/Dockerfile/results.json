{
  "startTime": 1674217782841,
  "endTime": 1674217784508,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 12,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 1,
        "columnEnd": 111
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 1,
        "columnEnd": 56
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 1,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 1,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2015 Telefónica Investigación y Desarrollo, S.A.U\n#\n# This file is part of the IoT Agent for the JSON protocol (iotagent-json) component\n#\n# iotagent-json is free software: you can redistribute it and/or\n# modify it under the terms of the GNU Affero General Public License as\n# published by the Free Software Foundation, either version 3 of the License,\n# or (at your option) any later version.\n#\n# iotagent-json is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\n# See the GNU Affero General Public License for more details.\n#\n# You should have received a copy of the GNU Affero General Public\n# License along with iotagent-json.\n# If not, see http://www.gnu.org/licenses/.\n#\n# For those usages not covered by the GNU Affero General Public License\n# please contact with: [daniel.moranjimenez@telefonica.com]\n\nARG NODE_VERSION=16\nARG GITHUB_ACCOUNT=telefonicaid\nARG GITHUB_REPOSITORY=iotagent-json\nARG DOWNLOAD=latest\nARG SOURCE_BRANCH=master\n\n########################################################################################\n#\n# This build stage retrieves the source code from GitHub. The default download is the\n# latest tip of the master of the named repository on GitHub.\n#\n# To obtain the latest stable release run this Docker file with the parameters:\n# --no-cache --build-arg DOWNLOAD=stable\n#\n# To obtain any specific version of a release run this Docker file with the parameters:\n# --no-cache --build-arg DOWNLOAD=1.7.0\n#\n# For development purposes, to create a development image including a running Distro,\n# run this Docker file with the parameter:\n#\n# --target=builder\n#\n########################################################################################\nFROM node:${NODE_VERSION} AS builder\nARG GITHUB_ACCOUNT\nARG GITHUB_REPOSITORY\nARG DOWNLOAD\nARG SOURCE_BRANCH\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# As an Alternative for local development, just copy this Dockerfile into file the root of\n# the repository and replace the whole RUN statement below by the following COPY statement\n# in your local source using :\n#\n# COPY . /opt/iotagent-json/\n#\n\n# hadolint ignore=DL3008,DL3005\nRUN \\\n\n\tapt-get update -y && \\\n\tapt-get upgrade -y && \\\n\t# Ensure that unzip is installed prior to downloading\n\tapt-get install -y --no-install-recommends unzip && \\\n\tif [ \"${DOWNLOAD}\" = \"latest\" ] ; \\\n\tthen \\\n\t\tRELEASE=\"${SOURCE_BRANCH}\"; \\\n\t\techo \"INFO: Building Latest Development from ${SOURCE_BRANCH} branch.\"; \\\n\telif [ \"${DOWNLOAD}\" = \"stable\" ]; \\\n\tthen \\\n\t\tRELEASE=$( curl -f -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest | grep 'tag_name' | cut -d\\\" -f4) ; \\\n\t\techo \"INFO: Building Latest Stable Release: ${RELEASE}\"; \\\n\telse \\\n\t \tRELEASE=\"${DOWNLOAD}\"; \\\n\t \techo \"INFO: Building Release: ${RELEASE}\"; \\\n\tfi && \\\n\tRELEASE_CONCAT=$(echo \"${RELEASE}\" | tr / -); \\\n\tcurl -f -s -L https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip > source.zip && \\\n\tunzip source.zip -x \"*/test/**\" \"*/rpm/**\" \"*/ghpages/**\" \"*/docs/**\" \"*/.*\" && \\\n\trm source.zip && \\\n\tmv \"${GITHUB_REPOSITORY}-${RELEASE_CONCAT}\" /opt/iotagent-json && \\\n\t# Remove unzip and clean apt cache\n\tapt-get clean && \\\n\tapt-get remove -y unzip && \\\n\tapt-get -y autoremove && \\\n\trm -rf /var/lib/apt/lists/*\n\nWORKDIR /opt/iotagent-json\n\n# hadolint ignore=DL3008\nRUN \\\n\n\tapt-get install -y --no-install-recommends git && \\\n\techo \"INFO: npm install --production...\" && \\\n\tnpm install --only=prod --no-package-lock --no-optional && \\\n\t# Remove Git and clean apt cache\n\tapt-get clean && \\\n\tapt-get remove -y git && \\\n\tapt-get -y autoremove && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n########################################################################################\n#\n# This build stage installs PM2 if required.\n#\n# To create an image using PM2 run this Docker file with the parameter:\n#\n# --target=pm2-install\n#\n########################################################################################\nFROM node:${NODE_VERSION}-slim AS pm2\nARG GITHUB_ACCOUNT\nARG GITHUB_REPOSITORY\nARG NODE_VERSION\n\nLABEL \"maintainer\"=\"FIWARE IoTAgent Team. Telefónica I+D\"\nLABEL \"org.opencontainers.image.authors\"=\"iot_support@tid.es\"\nLABEL \"org.opencontainers.image.documentation\"=\"https://fiware-iotagent-json.rtfd.io/\"\nLABEL \"org.opencontainers.image.vendor\"=\"Telefónica Investigación y Desarrollo, S.A.U\"\nLABEL \"org.opencontainers.image.licenses\"=\"AGPL-3.0-only\"\nLABEL \"org.opencontainers.image.title\"=\"IoT Agent for the JSON protocol with PM2\"\nLABEL \"org.opencontainers.image.description\"=\"An Internet of Things Agent for the JSON protocol (with AMQP, HTTP and MQTT transports). This IoT Agent is designed to be a bridge between Ultralight and the NGSI interface of a context broker.\"\nLABEL \"org.opencontainers.image.source\"=\"https://github.com/${GITHUB_ACCOUNT}/${GITHUB_REPOSITORY}\"\nLABEL \"org.nodejs.version\"=\"${NODE_VERSION}\"\n\nCOPY --from=builder /opt/iotagent-json /opt/iotagent-json\nRUN npm install pm2@4.4.0 -g --no-package-lock --no-optional && npm cache clean --force;\n\nUSER node\nENV NODE_ENV=production\n# Expose 4041 for NORTH PORT, 7896 for HTTP PORT\nEXPOSE ${IOTA_NORTH_PORT:-4041} ${IOTA_HTTP_PORT:-7896}\nCMD [\"pm2-runtime\", \"/opt/iotagent-json/bin/iotagent-json\", \"-- \", \"config.js\"]\n\n########################################################################################\n#\n# This build stage creates an anonymous user to be used with the distroless build\n# as defined below.\n#\n########################################################################################\nFROM node:${NODE_VERSION} AS anon-user\nRUN sed -i -r \"/^(root|nobody)/!d\" /etc/passwd /etc/shadow /etc/group \\\n    && sed -i -r 's#^(.*):[^:]*$#\\1:/sbin/nologin#' /etc/passwd\n\n########################################################################################\n#\n# This build stage creates a distroless image for production.\n#\n# IMPORTANT: For production environments use Docker Secrets to protect values of the\n# sensitive ENV variables defined below, by adding _FILE to the name of the relevant\n# variable.\n#\n# - IOTA_AUTH_USER, IOTA_AUTH_PASSWORD - when using Keystone Security\n# - IOTA_AUTH_CLIENT_ID, IOTA_AUTH_CLIENT_SECRET - when using OAuth2 Security\n#\n########################################################################################\nFROM gcr.io/distroless/nodejs:${NODE_VERSION} AS distroless\nARG GITHUB_ACCOUNT\nARG GITHUB_REPOSITORY\nARG NODE_VERSION\n\nLABEL \"maintainer\"=\"FIWARE IoTAgent Team. Telefónica I+D\"\nLABEL \"org.opencontainers.image.authors\"=\"iot_support@tid.es\"\nLABEL \"org.opencontainers.image.documentation\"=\"https://fiware-iotagent-json.rtfd.io/\"\nLABEL \"org.opencontainers.image.vendor\"=\"Telefónica Investigación y Desarrollo, S.A.U\"\nLABEL \"org.opencontainers.image.licenses\"=\"AGPL-3.0-only\"\nLABEL \"org.opencontainers.image.title\"=\"IoT Agent for the JSON protocol (Distroless)\"\nLABEL \"org.opencontainers.image.description\"=\"An Internet of Things Agent for the JSON protocol (with AMQP, HTTP and MQTT transports). This IoT Agent is designed to be a bridge between Ultralight and the NGSI interface of a context broker.\"\nLABEL \"org.opencontainers.image.source\"=\"https://github.com/${GITHUB_ACCOUNT}/${GITHUB_REPOSITORY}\"\nLABEL \"org.nodejs.version\"=\"${NODE_VERSION}\"\n\nCOPY --from=builder /opt/iotagent-json /opt/iotagent-json\nCOPY --from=anon-user /etc/passwd /etc/shadow /etc/group /etc/\nWORKDIR /opt/iotagent-json\n\nUSER nobody\nENV NODE_ENV=production\n# Expose 4041 for NORTH PORT, 7896 for HTTP PORT\nEXPOSE ${IOTA_NORTH_PORT:-4041} ${IOTA_HTTP_PORT:-7896}\nCMD [\"./bin/iotagent-json\", \"-- \", \"config.js\"]\nHEALTHCHECK  --interval=30s --timeout=3s --start-period=10s \\\n  CMD [\"/nodejs/bin/node\", \"./bin/healthcheck\"]\n\n\n########################################################################################\n#\n# This build stage creates a node-slim image for production.\n#\n# IMPORTANT: For production environments use Docker Secrets to protect values of the\n# sensitive ENV variables defined below, by adding _FILE to the name of the relevant\n# variable.\n#\n# - IOTA_AUTH_USER, IOTA_AUTH_PASSWORD - when using Keystone Security\n# - IOTA_AUTH_CLIENT_ID, IOTA_AUTH_CLIENT_SECRET - when using OAuth2 Security\n#\n########################################################################################\nFROM node:${NODE_VERSION}-slim AS slim\nARG GITHUB_ACCOUNT\nARG GITHUB_REPOSITORY\nARG NODE_VERSION\n\nLABEL \"maintainer\"=\"FIWARE IoTAgent Team. Telefónica I+D\"\nLABEL \"org.opencontainers.image.authors\"=\"iot_support@tid.es\"\nLABEL \"org.opencontainers.image.documentation\"=\"https://fiware-iotagent-json.rtfd.io/\"\nLABEL \"org.opencontainers.image.vendor\"=\"Telefónica Investigación y Desarrollo, S.A.U\"\nLABEL \"org.opencontainers.image.licenses\"=\"AGPL-3.0-only\"\nLABEL \"org.opencontainers.image.title\"=\"IoT Agent for the JSON protocol\"\nLABEL \"org.opencontainers.image.description\"=\"An Internet of Things Agent for the JSON protocol (with AMQP, HTTP and MQTT transports). This IoT Agent is designed to be a bridge between Ultralight and the NGSI interface of a context broker.\"\nLABEL \"org.opencontainers.image.source\"=\"https://github.com/${GITHUB_ACCOUNT}/${GITHUB_REPOSITORY}\"\nLABEL \"org.nodejs.version\"=\"${NODE_VERSION}\"\n\nCOPY --from=builder /opt/iotagent-json /opt/iotagent-json\nWORKDIR /opt/iotagent-json\n\nUSER node\nENV NODE_ENV=production\n# Expose 4041 for NORTH PORT, 7896 for HTTP PORT\nEXPOSE ${IOTA_NORTH_PORT:-4041} ${IOTA_HTTP_PORT:-7896}\nCMD [\"node\", \"/opt/iotagent-json/bin/iotagent-json\", \"-- \", \"config.js\"]\nHEALTHCHECK --interval=30s --timeout=3s --start-period=10s \\\n   CMD [\"npm\", \"run\", \"healthcheck\"]\n\n"
}