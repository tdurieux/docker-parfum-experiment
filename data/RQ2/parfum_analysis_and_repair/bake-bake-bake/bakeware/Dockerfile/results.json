{
  "startTime": 1674247890784,
  "endTime": 1674247892059,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 28,
        "columnEnd": 103
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 103
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 119
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nENV DEBIAN_FRONTEND noninteractive\n\nENV SSL_VERSION=1.1.1j\nENV OTP_VERSION=OTP-23.1.4\nENV ELIXIR_VERSION=v1.11.3\n\nRUN apt-get update && apt-get install --no-install-recommends -y vim git curl locate wget apt-transport-https apt-utils locales && rm -rf /var/lib/apt/lists/*;\nENV LANGUAGE en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\nRUN echo \"en_US UTF-8\" >> /etc/locale.gen && locale-gen\n\nWORKDIR \"/root\"\n\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential autoconf libncurses-dev m4 xsltproc libxml2-utils unixodbc-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get install -y --no-install-recommends libwxgtk3.0-gtk3-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y zstd && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f https://www.openssl.org/source/openssl-$SSL_VERSION.tar.gz -O && \\\n    tar -xzf openssl-$SSL_VERSION.tar.gz && \\\n    cd openssl-$SSL_VERSION && ./config && make depend && make && \\\n    mkdir -p /root/openssl-$SSL_VERSION/lib && \\\n    cp -r /root/openssl-$SSL_VERSION/libc* /root/openssl-$SSL_VERSION/lib/ && \\\n    cp -r /root/openssl-$SSL_VERSION/libs* /root/openssl-$SSL_VERSION/lib/ && rm openssl-$SSL_VERSION.tar.gz\n\nRUN mkdir -p /root/source && \\\n    git clone https://github.com/erlang/otp /root/source/otp && \\\n    cd /root/source/otp && \\\n    git checkout $OTP_VERSION\nRUN cd /root/source/otp && \\\n    ./otp_build autoconf && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl=/root/openssl-$SSL_VERSION --disable-dynamic-ssl-lib && make -j4 && make install\n\nRUN mkdir -p /root/source && \\\n    git clone https://github.com/elixir-lang/elixir.git /root/source/elixir && \\\n    cd /root/source/elixir && \\\n    git checkout $ELIXIR_VERSION && \\\n    make clean && make install && \\\n    mix local.hex --force && mix local.rebar --force\n\nCMD [\"/bin/bash\"]\n"
}