{
  "startTime": 1674253459528,
  "endTime": 1674253460283,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 8,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### This is a full chipyard setup\n\n# BUILD BASE FOR CI\n\nFROM ubuntu:18.04 as base\nARG CHIPYARD_HASH\n\nMAINTAINER https://groups.google.com/forum/#!forum/chipyard\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Install dependencies for ubuntu-req.sh\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n               curl \\\n               git \\\n               sudo \\\n               ca-certificates \\\n               keyboard-configuration \\\n               console-setup \\\n               bc \\\n               unzip && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n\n# Install Chipyard and run ubuntu-req.sh to install necessary dependencies\nRUN git clone https://github.com/ucb-bar/chipyard.git && \\\n        cd chipyard && \\\n        git checkout $CHIPYARD_HASH && \\\n        ./scripts/ubuntu-req.sh 1>/dev/null && \\\n        sudo rm -rf /var/lib/apt/lists/*\n\n# Update PATH for RISCV toolchain (note: hardcoded for CircleCI)\nENV RISCV=\"/root/riscv-tools-install\"\nENV LD_LIBRARY_PATH=\"$RISCV/lib\"\nENV PATH=\"$RISCV/bin:$PATH\"\n\n# BUILD IMAGE WITH TOOLCHAINS\n\n# Use above build as base\nFROM base as base-with-tools\n\n# Init submodules\nRUN cd chipyard && \\\n        export MAKEFLAGS=-\"j $(nproc)\" && \\\n        ./scripts/init-submodules-no-riscv-tools.sh 1>/dev/null\n\n# Install riscv-tools\nRUN cd chipyard && \\\n        export MAKEFLAGS=-\"j $(nproc)\" && \\\n        ./scripts/build-toolchains.sh riscv-tools 1>/dev/null\n\n# Install esp-tools\nRUN cd chipyard && \\\n        export MAKEFLAGS=-\"j $(nproc)\" && \\\n        ./scripts/build-toolchains.sh esp-tools 1>/dev/null\n\n\n# Set up FireMarshal. Building and cleaning br-base.json builds the underlying\n# buildroot image (which takes a long time) but doesn't keep all the br-base\n# stuff around (since that's faster to rebuild).\nRUN cd chipyard && \\\n        source env.sh && \\\n        cd software/firemarshal && \\\n        ./init-submodules.sh && \\\n        pip3 install --no-cache-dir -r python-requirements.txt && \\\n        marshal build br-base.json && \\\n        marshal clean br-base.json\n\n\n# Run script to set environment variables on entry\nENTRYPOINT [\"chipyard/scripts/entrypoint.sh\"]\n\n# END IMAGE CUSTOMIZATIONS\n\nCMD [\"/bin/sh\"]\n"
}