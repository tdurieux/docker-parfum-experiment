{
  "startTime": 1674250236098,
  "endTime": 1674250236731,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:17-alpine\n\n# Installs latest Chromium package.\nRUN apk add --no-cache \\\n    chromium \\\n    nss \\\n    ca-certificates\n\n# Tell Puppeteer to skip installing Chrome. We'll be using the installed package.\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \\\n    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser\n\n# Add weak user.\nRUN addgroup -S docker && adduser -S -g docker docker \\\n    && mkdir -p /home/docker/Downloads /app \\\n    && chown -R docker:docker /home/docker \\\n    && chown -R docker:docker /app\n\n# Run everything after as non-privileged user.\nUSER docker\n\n# Go to app directory\nWORKDIR /app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY --chown=docker package*.json ./\n\nRUN npm install && npm cache clean --force;\n\n# Bundle app source\nCOPY . .\n\nCMD [ \"npm\", \"run\", \"docker-start\" ]\n"
}