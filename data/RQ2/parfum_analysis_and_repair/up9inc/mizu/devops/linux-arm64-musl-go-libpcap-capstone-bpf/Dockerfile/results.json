{
  "startTime": 1674250369122,
  "endTime": 1674250370043,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 28,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 42,
        "columnEnd": 106
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 36,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "FROM dockcross/linux-arm64-musl:latest AS builder-from-amd64-to-arm64v8\n\n# Install Go\nRUN curl -f https://go.dev/dl/go1.17.6.linux-amd64.tar.gz -Lo ./go.linux-amd64.tar.gz \\\n && curl -f https://go.dev/dl/go1.17.6.linux-amd64.tar.gz.asc -Lo ./go.linux-amd64.tar.gz.asc \\\n && curl -f https://dl.google.com/dl/linux/linux_signing_key.pub -Lo linux_signing_key.pub \\\n && gpg --batch --import linux_signing_key.pub && gpg --batch --verify ./go.linux-amd64.tar.gz.asc ./go.linux-amd64.tar.gz \\\n && rm -rf /usr/local/go && tar -C /usr/local -xzf go.linux-amd64.tar.gz && rm go.linux-amd64.tar.gz\nENV PATH \"$PATH:/usr/local/go/bin\"\n\n# Compile libpcap from source\nRUN curl -f https://www.tcpdump.org/release/libpcap-1.10.1.tar.gz -Lo ./libpcap.tar.gz \\\n && curl -f https://www.tcpdump.org/release/libpcap-1.10.1.tar.gz.sig -Lo ./libpcap.tar.gz.sig \\\n && curl -f https://www.tcpdump.org/release/signing-key.asc -Lo ./signing-key.asc \\\n && gpg --batch --import signing-key.asc && gpg --batch --verify libpcap.tar.gz.sig libpcap.tar.gz \\\n && tar -xzf libpcap.tar.gz && mv ./libpcap-* ./libpcap && rm libpcap.tar.gz\nWORKDIR /work/libpcap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=arm && make \\\n && cp /work/libpcap/libpcap.a /usr/xcc/aarch64-linux-musl-cross/lib/gcc/aarch64-linux-musl/*/\nWORKDIR /work\n\n# Build and install Capstone from source\nRUN curl -f https://github.com/capstone-engine/capstone/releases/download/5.0-rc2/capstone-5.0-rc2.tar.xz -Lo ./capstone.tar.xz \\\n && tar -xf capstone.tar.xz && mv ./capstone-* ./capstone && rm capstone.tar.xz\nWORKDIR /work/capstone\nRUN CAPSTONE_ARCHS=\"aarch64\" CAPSTONE_STATIC=yes ./make.sh \\\n&& cp /work/capstone/libcapstone.a /usr/xcc/aarch64-linux-musl-cross/lib/gcc/aarch64-linux-musl/*/\n\n# Install eBPF related dependencies\nRUN apt-get -y --no-install-recommends install clang llvm libbpf-dev && rm -rf /var/lib/apt/lists/*;\n"
}