{
  "startTime": 1674218629706,
  "endTime": 1674218630829,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 28,
        "columnEnd": 72
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 42,
        "columnEnd": 106
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 36,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM messense/rust-musl-cross:x86_64-musl AS builder-from-arm64v8-to-amd64\n\nWORKDIR /\n\n# Install eBPF related dependencies\nRUN apt-get update && apt-get -y --no-install-recommends install clang llvm libelf-dev pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Build and install libbpf from source\nRUN curl -f https://github.com/libbpf/libbpf/archive/refs/tags/v0.8.0.tar.gz -Lo ./libbpf.tar.gz \\\n && tar -xzf libbpf.tar.gz && mv ./libbpf-* ./libbpf && rm libbpf.tar.gz\nWORKDIR /libbpf/src\nRUN make && make install\nWORKDIR /\n\nENV CROSS_TRIPLE x86_64-unknown-linux-musl\nENV CROSS_ROOT /usr/local/musl\n\nENV AS=${CROSS_ROOT}/bin/${CROSS_TRIPLE}-as \\\n    AR=${CROSS_ROOT}/bin/${CROSS_TRIPLE}-ar \\\n    CC=${CROSS_ROOT}/bin/${CROSS_TRIPLE}-gcc \\\n    CPP=${CROSS_ROOT}/bin/${CROSS_TRIPLE}-cpp \\\n    CXX=${CROSS_ROOT}/bin/${CROSS_TRIPLE}-g++ \\\n    LD=${CROSS_ROOT}/bin/${CROSS_TRIPLE}-ld \\\n    FC=${CROSS_ROOT}/bin/${CROSS_TRIPLE}-gfortran\n\n# Install Go\nRUN curl -f https://go.dev/dl/go1.17.6.linux-arm64.tar.gz -Lo ./go.linux-arm64.tar.gz \\\n && curl -f https://go.dev/dl/go1.17.6.linux-arm64.tar.gz.asc -Lo ./go.linux-arm64.tar.gz.asc \\\n && curl -f https://dl.google.com/dl/linux/linux_signing_key.pub -Lo linux_signing_key.pub \\\n && gpg --batch --import linux_signing_key.pub && gpg --batch --verify ./go.linux-arm64.tar.gz.asc ./go.linux-arm64.tar.gz \\\n && rm -rf /usr/local/go && tar -C /usr/local -xzf go.linux-arm64.tar.gz && rm go.linux-arm64.tar.gz\nENV PATH \"$PATH:/usr/local/go/bin\"\n\n# Compile libpcap from source\nRUN curl -f https://www.tcpdump.org/release/libpcap-1.10.1.tar.gz -Lo ./libpcap.tar.gz \\\n && curl -f https://www.tcpdump.org/release/libpcap-1.10.1.tar.gz.sig -Lo ./libpcap.tar.gz.sig \\\n && curl -f https://www.tcpdump.org/release/signing-key.asc -Lo ./signing-key.asc \\\n && gpg --batch --import signing-key.asc && gpg --batch --verify libpcap.tar.gz.sig libpcap.tar.gz \\\n && tar -xzf libpcap.tar.gz && mv ./libpcap-* ./libpcap && rm libpcap.tar.gz\nWORKDIR /libpcap\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=x86_64 && make \\\n && cp /libpcap/libpcap.a /usr/local/musl/lib/gcc/x86_64-unknown-linux-musl/*/\nWORKDIR /\n\n# Build and install Capstone from source\nRUN curl -f https://github.com/capstone-engine/capstone/releases/download/5.0-rc2/capstone-5.0-rc2.tar.xz -Lo ./capstone.tar.xz \\\n && tar -xf capstone.tar.xz && mv ./capstone-* ./capstone && rm capstone.tar.xz\nWORKDIR /capstone\nRUN CAPSTONE_ARCHS=\"x86\" CAPSTONE_STATIC=yes ./make.sh \\\n && cp /capstone/libcapstone.a /usr/local/musl/lib/gcc/x86_64-unknown-linux-musl/*/\n"
}