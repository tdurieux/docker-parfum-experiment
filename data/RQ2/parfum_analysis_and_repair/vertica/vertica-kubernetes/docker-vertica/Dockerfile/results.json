{
  "startTime": 1674255921374,
  "endTime": 1674255922108,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Apache 2.0 license\n#\n# Copyright (c) 2021 Vertica\n#\n\nARG BASE_OS_VERSION=\"focal-20220316\"\nARG BUILDER_OS_VERSION=\"7.9.2009\"\nFROM centos:centos${BUILDER_OS_VERSION} as builder\n\nARG VERTICA_RPM=\"vertica-x86_64.RHEL6.latest.rpm\"\nARG MINIMAL=\"\"\nARG DBADMIN_GID=5000\nARG DBADMIN_UID=5000\n\nCOPY ./packages/${VERTICA_RPM} /tmp/\n# this is a script which removes unnecessary stuff from the\n# container image\nCOPY ./packages/cleanup.sh /tmp/\nCOPY ./packages/package-checksum-patcher.py /tmp/\n\nRUN set -x \\\n  # Update is needed to be confident that we're picking up\n  # fixed libraries.\n  && yum -q -y update \\\n  && yum install -y \\\n  cronie \\\n  dialog \\\n  iproute \\\n  mcelog \\\n  openssh-server \\\n  openssh-clients \\\n  openssl \\\n  which \\\n  zlib-devel \\\n  && /usr/sbin/groupadd -r verticadba --gid ${DBADMIN_GID} \\\n  && /usr/sbin/useradd -r -m -s /bin/bash -g verticadba --uid ${DBADMIN_UID} dbadmin \\\n  && yum localinstall -q -y /tmp/${VERTICA_RPM} \\\n  # Run install_vertica script to prepare environment\n  && /opt/vertica/sbin/install_vertica \\\n  --accept-eula \\\n  --debug \\\n  --dba-user-password-disabled \\\n  --failure-threshold NONE \\\n  --license CE \\\n  --hosts 127.0.0.1 \\\n  --no-system-configuration \\\n  -U \\\n  --data-dir /home/dbadmin \\\n  && mkdir -p /home/dbadmin/licensing/ce \\\n  && cp -r /opt/vertica/config/licensing/* /home/dbadmin/licensing/ce/ \\\n  && mkdir -p /home/dbadmin/logrotate \\\n  && cp -r /opt/vertica/config/logrotate /home/dbadmin/logrotate/  \\\n  && cp /opt/vertica/config/logrotate_base.conf /home/dbadmin/logrotate/ \\\n  && chown -R dbadmin:verticadba /opt/vertica \\\n  # reduce the size of the final image\n  && rm -rf /opt/vertica/lib64  \\\n  && yum clean all \\\n  && sh /tmp/cleanup.sh && rm -rf /var/cache/yum\n\nCOPY dbadmin/.bash_profile /home/dbadmin/\n# Copy in a stable ssh key.  This is done so that Vertica pods can communicate\n# with pods running an older image.  This is necessary when doing an online\n# image change as the Vertica cluster will be running with two container\n# versions at once.\nCOPY dbadmin/.ssh /home/dbadmin/.ssh\n# prepare (put inside) entrypoint script and make right permissions\nCOPY ./docker-entrypoint.sh /usr/local/bin\n\nRUN set -x \\\n  && chmod a+x /usr/local/bin/docker-entrypoint.sh \\\n  && chown dbadmin:verticadba /home/dbadmin/.bash_profile \\\n  && chmod 600 /home/dbadmin/.bash_profile \\\n  && mkdir -p /root/.ssh \\\n  && cp -r /home/dbadmin/.ssh /root \\\n  && chmod 700 /root/.ssh \\\n  && chmod 600 /root/.ssh/* \\\n  && chmod 700 /home/dbadmin/.ssh \\\n  && chmod 600 /home/dbadmin/.ssh/* \\\n  && chown -R dbadmin:verticadba /home/dbadmin/ \\\n  # On older docker versions, the ownership of /opt/vertica is not preserved in\n  # the COPY.  Working around this by changing it so that all files and\n  # directories are world writeable.\n  && chmod 777 -R /opt/vertica\n\n##############################################################################################\nFROM ubuntu:${BASE_OS_VERSION}\n\nARG DBADMIN_GID=5000\nARG DBADMIN_UID=5000\n\nCOPY --from=builder /opt/vertica /opt/vertica\nCOPY --from=builder /home/dbadmin /home/dbadmin\nCOPY --from=builder /root/.ssh /root/.ssh\nCOPY --from=builder /var/spool/cron/ /var/spool/cron/crontabs\nCOPY --from=builder /usr/local/bin/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh\n\nENV LANG en_US.UTF-8\nENV TZ UTC\nENV PATH \"$PATH:/opt/vertica/bin:/opt/vertica/sbin\"\nENV DEBIAN_FRONTEND noninteractive\n\nCOPY ./packages/init.d.functions /etc/rc.d/init.d/functions\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN set -x \\\n  # COPY may not preserve file permissions on older docker versions.  This is a\n  # workaround for that.  This will cause the image to increase a bit, but there\n  # isn't much we copy over for this directory.\n  && chown -R $DBADMIN_UID:$DBADMIN_GID /home/dbadmin \\\n  # Update is needed to be confident that we're picking up\n  # fixed libraries. \n  && apt-get -y update \\\n  && apt-get install -y --no-install-recommends \\\n  ca-certificates \\\n  cron \\\n  dialog \\\n  gdb \\\n  iproute2 \\\n  krb5-user \\\n  libkeyutils1\\\n  libz-dev \\\n  locales \\\n  logrotate \\\n  ntp \\\n  openssh-client \\\n  openssh-server \\\n  openssl \\\n  procps \\\n  sysstat \\\n  sudo \\\n  && rm -rf /var/lib/apt/lists/* \\\n  # Make the \"en_US.UTF-8\" locale so vertica will be utf-8 enabled by default\n  && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n  && mkdir -p /run/sshd \\\n  && ssh-keygen -q -A \\\n  && /usr/sbin/groupadd -r verticadba --gid ${DBADMIN_GID} \\\n  && /usr/sbin/useradd -r -m -s /bin/bash -g verticadba --uid ${DBADMIN_UID} dbadmin \\\n  # Allow passwordless sudo access from dbadmin\n  && echo \"dbadmin ALL=(ALL) NOPASSWD: ALL\" | tee -a /etc/sudoers \\\n  && echo \"dbadmin -       nofile  65536\" >> /etc/security/limits.conf\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n\n# vertica port\nEXPOSE 5433\n# agent port\nEXPOSE 5444\nUSER dbadmin\nLABEL os-family=\"ubuntu\"\nLABEL image-name=\"vertica_k8s\"\nLABEL maintainer=\"K8s Team\"\n"
}