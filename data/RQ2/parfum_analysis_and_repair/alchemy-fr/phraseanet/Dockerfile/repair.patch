diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alchemy-fr/phraseanet/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alchemy-fr/phraseanet/Dockerfile/repaired.Dockerfile
index 427a820..cddaef8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alchemy-fr/phraseanet/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alchemy-fr/phraseanet/Dockerfile/repaired.Dockerfile
@@ -9,12 +9,12 @@ ENV FFMPEG_VERSION=4.2.2
 
 RUN echo "deb http://deb.debian.org/debian stretch main non-free" > /etc/apt/sources.list \
     && apt-get update \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
         apt-transport-https \
         ca-certificates \
         gnupg2 \
         wget \
-    && wget -O certs.deb http://ftp.fr.debian.org/debian/pool/main/c/ca-certificates/ca-certificates_20210119_all.deb \
+    && wget -O certs.deb https://ftp.fr.debian.org/debian/pool/main/c/ca-certificates/ca-certificates_20210119_all.deb \
     && dpkg --fsys-tarfile certs.deb | tar -xOf - ./usr/share/ca-certificates/mozilla/ISRG_Root_X1.crt > /usr/local/share/ca-certificates/ISRG_Root_X1.crt \
     && rm -rf /usr/share/ca-certificates/mozilla/DST_Root_CA_X3.crt \
     && update-ca-certificates --fresh \
@@ -90,13 +90,13 @@ RUN echo "deb http://deb.debian.org/debian stretch main non-free" > /etc/apt/sou
     && git clone https://github.com/strukturag/libheif.git /tmp/libheif \
     && cd /tmp/libheif \
     && ./autogen.sh \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     && mkdir /tmp/ImageMagick \
-    && curl https://imagemagick.org/archive/ImageMagick.tar.gz| tar zx -C /tmp/ImageMagick --strip-components 1 \
+    && curl -f https://imagemagick.org/archive/ImageMagick.tar.gz | tar zx -C /tmp/ImageMagick --strip-components 1 \
     && cd /tmp/ImageMagick \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     && ldconfig \
@@ -115,10 +115,9 @@ RUN echo "deb http://deb.debian.org/debian stretch main non-free" > /etc/apt/sou
     && pecl clear-cache \
     && docker-php-source delete \
     && mkdir /tmp/ffmpeg \
-    && curl -s https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 | tar jxf - -C /tmp/ffmpeg \
-    && ( \
-        cd /tmp/ffmpeg/ffmpeg-${FFMPEG_VERSION} \
-        && ./configure \
+    && curl -f -s https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 | tar jxf - -C /tmp/ffmpeg \
+    && ( cd /tmp/ffmpeg/ffmpeg-${FFMPEG_VERSION} \
+        && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
             --enable-gpl \
             --enable-nonfree \
             --enable-libfdk-aac \
@@ -142,26 +141,26 @@ RUN echo "deb http://deb.debian.org/debian stretch main non-free" > /etc/apt/sou
             --enable-libopencore-amrwb \
         && make \
         && make install \
-        && make distclean \
-    ) \
+        && make distclean) \
+
     #&& rm -rf /tmp/ffmpeg \
     && echo 'deb http://apt.newrelic.com/debian/ newrelic non-free' | tee /etc/apt/sources.list.d/newrelic.list \
-    && curl -o- https://download.newrelic.com/548C16BF.gpg | apt-key add - \
-    && apt-get update \ 
-    && apt-get install -y newrelic-php5 \ 
+    && curl -f -o- https://download.newrelic.com/548C16BF.gpg | apt-key add - \
+    && apt-get update \
+    && apt-get install --no-install-recommends -y newrelic-php5 \
     && NR_INSTALL_SILENT=1 newrelic-install install \
     && touch /etc/newrelic/newrelic.cfg \
-    && curl -o- https://packages.blackfire.io/gpg.key |apt-key add - \
+    && curl -f -o- https://packages.blackfire.io/gpg.key | apt-key add - \
     && echo "deb http://packages.blackfire.io/debian any main" |tee /etc/apt/sources.list.d/blackfire.list \
     && apt update \
-    && apt install blackfire-agent \
-    && apt install blackfire-php \
+    && apt install -y --no-install-recommends blackfire-agent \
+    && apt install -y --no-install-recommends blackfire-php \
     && apt-get clean \
     && rm -rf /var/lib/apt/lists \
     && mkdir /entrypoint /var/alchemy \
     && useradd -u 1000 app \
     && mkdir -p /home/app/.composer \
-    && chown -R app: /home/app /var/alchemy
+    && chown -R app: /home/app /var/alchemy && rm -rf /var/lib/apt/lists/*;
 
 ENV XDEBUG_ENABLED=0
 
@@ -177,8 +176,8 @@ COPY --from=composer:2.1.6 /usr/bin/composer /usr/bin/composer
 # Reference :
 # https://linuxize.com/post/how-to-install-node-js-on-ubuntu-18.04/
 # https://yarnpkg.com/lang/en/docs/install/#debian-stable
-RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \
-    && curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
+RUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \
+    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
     && echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list \
     && apt-get update \
     && apt-get install -y --no-install-recommends \
@@ -198,7 +197,7 @@ RUN curl -sL https://deb.nodesource.com/setup_10.x | bash - \
     && rm -rf /var/lib/apt/lists \
     && git clone https://github.com/robbyrussell/oh-my-zsh.git /bootstrap/.oh-my-zsh \
     && mkdir -p /var/alchemy/Phraseanet \
-    && chown -R app:app /var/alchemy
+    && chown -R app:app /var/alchemy && rm -rf /var/lib/apt/lists/*;
 
 # Set the php memory_limit
 RUN echo 'memory_limit = 2048M' >> /usr/local/etc/php/conf.d/docker-php-ram-limit.ini
@@ -261,7 +260,7 @@ RUN apt-get update \
     && mkdir -p /var/log/supervisor \
     && chown -R app: /var/log/supervisor \
     && apt-get clean \
-    && rm -rf /var/lib/apt/lists 
+    && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;
 
 COPY ./docker/phraseanet/worker/supervisor.conf /etc/supervisor/
 ENTRYPOINT ["docker/phraseanet/worker/entrypoint.sh"]