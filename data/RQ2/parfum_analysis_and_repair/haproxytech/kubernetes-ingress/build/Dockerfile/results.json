{
  "startTime": 1674255579284,
  "endTime": 1674255580503,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 165
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 HAProxy Technologies LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM golang:1.17-alpine AS builder\n\nRUN apk --no-cache add git openssh\n\nCOPY /go.mod /src/go.mod\nCOPY /go.sum /src/go.sum\nRUN cd /src && go mod download\n\nCOPY / /src\n\nRUN mkdir -p /var/run/vars && \\\n    cd /src && \\\n    git config --get remote.origin.url > /var/run/vars/GIT_REPO && \\\n    git rev-parse --short HEAD > /var/run/vars/GIT_HEAD_COMMIT && \\\n    git describe --abbrev=0 --tags > /var/run/vars/GIT_LAST_TAG && \\\n    git rev-parse --short $(cat /var/run/vars/GIT_LAST_TAG) > /var/run/vars/GIT_TAG_COMMIT && \\\n    git diff $(cat /var/run/vars/GIT_HEAD_COMMIT) $(cat /var/run/vars/GIT_TAG_COMMIT) --quiet > /var/run/vars/GIT_MODIFIED1 || echo '.dev' > /var/run/vars/GIT_MODIFIED1 && \\\n    git diff --quiet > /var/run/vars/GIT_MODIFIED2 || echo '.dirty' > /var/run/vars/GIT_MODIFIED2 && \\\n    cat /var/run/vars/GIT_MODIFIED1 /var/run/vars/GIT_MODIFIED2 | tr -d '\\n' > /var/run/vars/GIT_MODIFIED && \\\n    date '+%Y-%m-%dT%H:%M:%S' > /var/run/vars/BUILD_DATE && \\\n    CGO_ENABLED=0 go build \\\n        -ldflags \"-X main.GitRepo=$(cat /var/run/vars/GIT_REPO) -X main.GitTag=$(cat /var/run/vars/GIT_LAST_TAG) -X main.GitCommit=$(cat /var/run/vars/GIT_HEAD_COMMIT) -X main.GitDirty=$(cat /var/run/vars/GIT_MODIFIED) -X main.BuildTime=$(cat /var/run/vars/BUILD_DATE)\" \\\n        -o fs/haproxy-ingress-controller .\n\nFROM haproxytech/haproxy-alpine:2.5\n\nARG TARGETPLATFORM\n\nARG S6_OVERLAY_VERSION=2.2.0.3\nENV S6_OVERLAY_VERSION $S6_OVERLAY_VERSION\nENV S6_READ_ONLY_ROOT=1\n\nCOPY /fs /\n\nRUN apk --no-cache add socat openssl util-linux htop tzdata curl libcap && \\\n    rm -f /usr/local/bin/dataplaneapi /usr/bin/dataplaneapi && \\\n    chgrp -R haproxy /usr/local/etc/haproxy /run /var && \\\n    chmod -R ug+rwx /usr/local/etc/haproxy /run /var && \\\n    setcap 'cap_net_bind_service=+ep' /usr/local/sbin/haproxy && \\\n    case \"${TARGETPLATFORM}\" in \\\n        \"linux/arm64\")      S6_ARCH=aarch64     ;; \\\n        \"linux/amd64\")      S6_ARCH=amd64       ;; \\\n        \"linux/arm/v6\")     S6_ARCH=arm         ;; \\\n        \"linux/arm/v7\")     S6_ARCH=armhf       ;; \\\n        \"linux/ppc64le\")    S6_ARCH=ppc64le     ;; \\\n        \"linux/386\")        S6_ARCH=x86         ;; \\\n        *) echo \"ARG TARGETPLATFORM undeclared\" >&2 && exit 1 ;; \\\n    esac && \\\n    curl -f -sS -L -o /tmp/s6-overlay-installer \"https://github.com/just-containers/s6-overlay/releases/download/v${S6_OVERLAY_VERSION}/s6-overlay-${S6_ARCH}-installer\" && \\\n    chmod +x /tmp/s6-overlay-installer && \\\n    /tmp/s6-overlay-installer / && \\\n    rm -f /tmp/s6-overlay-installer && \\\n    mkdir /var/run/s6 && \\\n    chown haproxy:haproxy /var/run/s6 && \\\n    chmod ug+rwx /var/run/s6 && \\\n    sed -i 's/ root / haproxy /g' /etc/s6/init/init-stage2-fixattrs.txt && \\\n    chmod ugo+x /etc/services.d/*/run /etc/cont-init.d/*\n\nCOPY --from=builder /src/fs/haproxy-ingress-controller .\n\nENTRYPOINT [\"/start.sh\"]\n"
}