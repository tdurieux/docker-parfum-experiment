{
  "startTime": 1674215226946,
  "endTime": 1674215227205,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.15-alpine as builder\n\nWORKDIR /go/src/app/\n\n# We require Bash for executing the build script\nRUN apk add --no-cache --update bash\n\n# Fill cache with source code of dependencies\nCOPY go.mod go.sum ./\nRUN go mod download -x\n\nCOPY . .\nRUN scripts/build.sh linux\n\nFROM gcr.io/distroless/static\n\nCOPY --from=builder /go/src/app/deflix-stremio /\nCOPY --from=builder /go/src/app/web/configure /web/configure\n\n# Default bind addr is localhost, which wouldn't allow connections from outside the container.\n# Should be overwritten when using `--network host` and not wanting to expose the service to other hosts.\nENV BIND_ADDR 0.0.0.0\n\n# distroless/static `os.UserCacheDir()` leads to \"/root/.cache\", so the persisted cache will be in \"/root/.cache/deflix-stremio/\"\n# Using a proper volume makes the data accessible outside the container and is apparently faster.\nVOLUME [ \"/root/.cache/deflix-stremio/\" ]\nVOLUME [ \"/web/configure/\" ]\nEXPOSE 8080\n\n# Using ENTRYPOINT instead of CMD allows the user to easily just *add* command line arguments when using `docker run`\nENTRYPOINT [\"/deflix-stremio\"]\n"
}