{
  "startTime": 1674248151537,
  "endTime": 1674248152590,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n####################################################\n########               GCC   and tools          ###########\n####################################################\n# The GNU Compiler Collection 5.3.0-r0\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n        openjdk-8-jdk \\\n        bash \\\n\t\twget \\\n        gcc \\\n        tar \\\n        perl \\\n        make \\\n        mingw-w64 \\\n        gcc-arm-linux-gnueabihf \\\n        gcc-aarch64-linux-gnu \\\n    && rm -rf /var/lib/apt/lists/*\n\n###############################################################################\n#                                INSTALLATION\n###############################################################################\n\n### Some env variables\nENV OPENSSL_VERSION=\"1.1.1k\"\nENV KOTLIN_VERSION2=\"1.5.0\"\nENV KOTLIN_VERSION=\"1.5.0\"\n\nRUN set -x \\\n && wget --no-check-certificate -O /tmp/kotlin-native-linux-${KOTLIN_VERSION}.tar.gz \"https://github.com/JetBrains/kotlin/releases/download/v${KOTLIN_VERSION2}/kotlin-native-linux-${KOTLIN_VERSION}.tar.gz\" \\\n && cd /tmp \\\n && tar -xzvf kotlin-native-linux-${KOTLIN_VERSION}.tar.gz && rm kotlin-native-linux-${KOTLIN_VERSION}.tar.gz\n\nRUN set -x \\\n && /tmp/kotlin-native-linux-${KOTLIN_VERSION}/bin/cinterop -def openssl.def; exit 0\n\nRUN set -x \\\n ### BUILD OpenSSL\n && wget --no-check-certificate -O /tmp/openssl-${OPENSSL_VERSION}.tar.gz \"https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz\" \\\n && mkdir /tmp/linuxX64 \\\n && mkdir /tmp/mingwX64 \\\n && mkdir /tmp/linuxArm32Hfp \\\n && mkdir /tmp/linuxArm64 \\\n && tar -xvf /tmp/openssl-${OPENSSL_VERSION}.tar.gz -C /tmp/linuxX64/ \\\n && tar -xvf /tmp/openssl-${OPENSSL_VERSION}.tar.gz -C /tmp/mingwX64/ \\\n && tar -xvf /tmp/openssl-${OPENSSL_VERSION}.tar.gz -C /tmp/linuxArm32Hfp/ \\\n && tar -xvf /tmp/openssl-${OPENSSL_VERSION}.tar.gz -C /tmp/linuxArm64/ \\\n && rm -rf /tmp/openssl-${OPENSSL_VERSION}.tar.gz\n\nRUN set -x \\\n && cd /tmp/linuxX64/openssl-${OPENSSL_VERSION} \\\n && ./Configure --prefix=$PWD/dist no-idea no-mdc2 no-rc5 no-shared linux-x86_64 \\\n && make \\\n && ar -x libssl.a \\\n && ar -x libcrypto.a \\\n && ar -qc libopenssl.a *.o\n\n#RUN set -x \\\n# && cd /tmp/mingwX64/openssl-${OPENSSL_VERSION} \\\n# && ./Configure --cross-compile-prefix=x86_64-w64-mingw32- no-idea no-mdc2 no-rc5 no-shared mingw64 \\\n# && make\n\nRUN set -x \\\n && cd /tmp/linuxArm32Hfp/openssl-${OPENSSL_VERSION} \\\n && ./Configure no-idea no-mdc2 no-rc5 no-shared no-asm --cross-compile-prefix=arm-linux-gnueabihf- linux-armv4 \\\n && make \\\n && ar -x libssl.a \\\n && ar -x libcrypto.a \\\n && ar -qc libopenssl.a *.o\n\nRUN set -x \\\n && cd /tmp/linuxArm64/openssl-${OPENSSL_VERSION} \\\n && ./Configure no-shared no-asm --cross-compile-prefix=aarch64-linux-gnu- linux-aarch64 \\\n && make \\\n && ar -x libssl.a \\\n && ar -x libcrypto.a \\\n && ar -qc libopenssl.a *.o\n\nCOPY openssl.def /tmp/\n\nRUN set -x \\\n && cd /tmp \\\n && mkdir klib_linux_x64 \\\n && cd /tmp/klib_linux_x64 \\\n && ../kotlin-native-linux-${KOTLIN_VERSION}/bin/cinterop -def ../openssl.def -target \"linux_x64\" -o openssl\n\n#RUN set -x \\\n# && cd /tmp \\\n# && mkdir klib_mingw_x64 \\\n# && cd /tmp/klib_mingw_x64 \\\n# && ../kotlin-native-linux-${KOTLIN_VERSION}/bin/cinterop -def ../openssl.def -target \"mingw_x64\" -o openssl\n\nRUN set -x \\\n && cd /tmp \\\n && mkdir klib_linux_arm32_hfp \\\n && cd /tmp/klib_linux_arm32_hfp \\\n && ../kotlin-native-linux-${KOTLIN_VERSION}/bin/cinterop -def ../openssl.def -target \"linux_arm32_hfp\" -o openssl\n\nRUN set -x \\\n && cd /tmp \\\n && mkdir klib_linux_arm64 \\\n && cd /tmp/klib_linux_arm64 \\\n && ../kotlin-native-linux-${KOTLIN_VERSION}/bin/cinterop -def ../openssl.def -target \"linux_arm64\" -o openssl\n"
}