{
  "startTime": 1674255316591,
  "endTime": 1674255317592,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install node\nFROM node:16 as build\n\n# Install FFMPEG library\nRUN apt update -y && apt install --no-install-recommends ffmpeg -y && rm -rf /var/lib/apt/lists/*;\n\n# Set the workdir /app\nWORKDIR /app\n\n# Frontend\n# Copy the package.json to workdir\nCOPY package.json ./\nCOPY server/package.json ./server/\n\n# Install dependncies\nRUN npm install --legacy-peer-deps && npm cache clean --force;\n\n# Copy application source\nCOPY . .\n\nEXPOSE 80 4000\n\n# run express server\n# RUN node server/index.js\nCMD [\"npm\", \"run\", \"prd\"]\n\n# Build\nRUN npm run build\n\n# Run ngnix server\nFROM nginx:1.21.4 as server\nCOPY --from=build /app/build /usr/share/nginx/html\n"
}