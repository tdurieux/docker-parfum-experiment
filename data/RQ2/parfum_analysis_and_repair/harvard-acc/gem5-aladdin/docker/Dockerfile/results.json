{
  "startTime": 1674253434014,
  "endTime": 1674253435112,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 66,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nLABEL maintainer=\"Sam Xi, Yuan Yao\"\n\n###################################################\n####      Install tools for development.       ####\n###################################################\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  python \\\n  python-pip \\\n  git \\\n  tmux \\\n  vim \\\n  cmake \\\n  wget \\\n  ack-grep && rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\n\n###########################################\n####      Environment variables        ####\n###########################################\n\nRUN mkdir -p /workspace\nENV ALADDIN_HOME /workspace/gem5-aladdin/src/aladdin\nENV TRACER_HOME /workspace/LLVM-Tracer\nENV LLVM_HOME /usr/local\nENV BOOST_ROOT /usr/include\n\nENV SHELL /bin/bash\n\n# So we can link gem5 against libprotobuf when installed from apt.\nENV FORCE_CXX11_ABI 1\n\n#######################################################\n####      Install gem5-Aladdin dependencies.       ####\n#######################################################\n\n# Install gem5 dependencies.\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y m4 \\\n      libprotobuf-dev \\\n      protobuf-compiler \\\n      libsqlite3-dev \\\n      libtcmalloc-minimal4 \\\n      scons \\\n      zlib1g \\\n      zlib1g-dev \\\n      python3 \\\n      python3-pip \\\n      libgoogle-perftools-dev && rm -rf /var/lib/apt/lists/*;\n# Change the default Python version to 3.6.\nRUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip2 1\nRUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 2\nRUN pip3 install --no-cache-dir --user --upgrade pip\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2\n\nRUN pip install --no-cache-dir numpy \\\n      six \\\n      configparser \\\n      pyparsing \\\n      pytest \\\n      pytest-xdist\n\n# Install Aladdin dependencies.\nRUN apt-get install --no-install-recommends -y \\\n      libboost-graph-dev \\\n      libpthread-stubs0-dev \\\n      libreadline-dev \\\n      libncurses5-dev && rm -rf /var/lib/apt/lists/*;\n\n# Build LLVM and Clang 6.0 from source.\nWORKDIR /tmp\nRUN wget -q https://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz && \\\n    tar -xf llvm-6.0.0.src.tar.xz && \\\n    wget -q https://releases.llvm.org/6.0.0/cfe-6.0.0.src.tar.xz && \\\n    tar -xf cfe-6.0.0.src.tar.xz && \\\n    mkdir -p llvm-6.0.0.src/tools/clang && \\\n    mv cfe-6.0.0.src/* llvm-6.0.0.src/tools/clang && \\\n    cd llvm-6.0.0.src && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j24 && \\\n    make install && \\\n    rm -rf /tmp/llvm-6.0.0* && \\\n    rm -rf /tmp/cfe-6.0.0* && rm llvm-6.0.0.src.tar.xz\n\n# Build and install LLVM-Tracer\nWORKDIR /workspace\nRUN git clone https://github.com/ysshao/LLVM-Tracer && \\\n    cd LLVM-Tracer && \\\n    git fetch --all && \\\n    mkdir bin && \\\n    mkdir lib && \\\n    mkdir build && cd build && \\\n    cmake .. && make && make install\n\n# Clone gem5-aladdin, but don't build. We'll assume the developer will build.\nRUN git clone https://github.com/harvard-acc/gem5-aladdin && \\\n    cd gem5-aladdin && \\\n    git submodule init && \\\n    git submodule update\n"
}