{
  "startTime": 1674255835084,
  "endTime": 1674255836151,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 106,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 106,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nLABEL maintainer=\"Sam Xi, Yuan Yao\"\n\n###################################################\n####      Install tools for development.       ####\n###################################################\n\n# By default, Ubuntun 18.04 installs Python 2.7.\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      python \\\n      python-pip \\\n      git \\\n      tmux \\\n      vim \\\n      cmake \\\n      wget \\\n      curl && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir --upgrade pip\n\n###########################################\n####      Environment variables        ####\n###########################################\n\nRUN mkdir -p /workspace\nENV ALADDIN_HOME /workspace/gem5-aladdin/src/aladdin\nENV TRACER_HOME /workspace/LLVM-Tracer\nENV LLVM_HOME /usr/local\nENV BOOST_ROOT /usr/include\nENV SMAUG_HOME /workspace/smaug\nENV PROTOC /usr/local/bin/protoc\nENV PYTHONPATH \"${SMAUG_HOME}/build:${PYTHONPATH}\"\nENV SHELL /bin/bash\n\n#######################################################\n####      Install gem5-Aladdin dependencies.       ####\n#######################################################\n\n# Install gem5 dependencies.\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y m4 \\\n      libsqlite3-dev \\\n      libtcmalloc-minimal4 \\\n      scons \\\n      zlib1g \\\n      zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir six numpy\n\n# Install Aladdin dependencies.\nRUN apt-get install --no-install-recommends -y \\\n      libboost-graph-dev \\\n      libpthread-stubs0-dev \\\n      libreadline-dev \\\n      libncurses5-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install a supported version of pyparsing for Xenon.\nRUN pip install --no-cache-dir pyparsing==2.3.0\n\n# Build LLVM and Clang 6.0 from source.\nWORKDIR /tmp\nRUN wget -q https://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz && \\\n    tar -xf llvm-6.0.0.src.tar.xz && \\\n    wget -q https://releases.llvm.org/6.0.0/cfe-6.0.0.src.tar.xz && \\\n    tar -xf cfe-6.0.0.src.tar.xz && \\\n    mkdir -p llvm-6.0.0.src/tools/clang && \\\n    mv cfe-6.0.0.src/* llvm-6.0.0.src/tools/clang && \\\n    cd llvm-6.0.0.src && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j24 && \\\n    make install && \\\n    rm -rf /tmp/llvm-6.0.0* && \\\n    rm -rf /tmp/cfe-6.0.0* && rm llvm-6.0.0.src.tar.xz\n\n# Install a newer version of protobuf (3.11.4).\nRUN wget -q https://github.com/protocolbuffers/protobuf/releases/download/v3.11.4/protobuf-all-3.11.4.tar.gz && \\\n    tar -xzf protobuf-all-3.11.4.tar.gz && \\\n    cd protobuf-3.11.4 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    ldconfig && \\\n    rm -rf /tmp/protobuf-3.11.4 /tmp/protobuf-all-3.11.4.tar.gz\n\nWORKDIR /workspace\n\n# Build and install LLVM-Tracer\nRUN git clone https://github.com/ysshao/LLVM-Tracer && \\\n    cd LLVM-Tracer && \\\n    git fetch --all && \\\n    mkdir bin && \\\n    mkdir lib && \\\n    mkdir build && cd build && \\\n    cmake .. && make && make install\n\n# Clone gem5-aladdin, but don't build. We'll assume the developer will build.\nRUN git clone https://github.com/harvard-acc/gem5-aladdin && \\\n    cd gem5-aladdin && \\\n    git submodule init && \\\n    git submodule update\n\n################################################\n####      Install SMAUG dependencies.       ####\n################################################\n\n# Install SMAUG dependencies. We need Python 3.5+ to run the TensorFlow tests.\nRUN apt-get install --no-install-recommends -y \\\n      python3 \\\n      python3-pip \\\n      libboost-program-options-dev && rm -rf /var/lib/apt/lists/*;\n# Change the default Python version to 3.6.\nRUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip2 1\nRUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 2\nRUN pip3 install --no-cache-dir --user --upgrade pip\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.6 2\n\n# Download the binary of Doxygen 1.8.18.\nWORKDIR /tmp\nRUN wget https://sourceforge.net/projects/doxygen/files/rel-1.8.18/doxygen-1.8.18.linux.bin.tar.gz && \\\n    tar -xzf doxygen-1.8.18.linux.bin.tar.gz && \\\n    cp doxygen-1.8.18/bin/* /usr/local/bin && \\\n    rm -rf /tmp/doxygen-1.8.18 /tmp/doxygen-1.8.18.linux.bin.tar.gz\n\n# Install Sphinx/Breathe/Exhale.\nRUN pip install --no-cache-dir sphinx==3.1.2 breathe==4.19.2 exhale==0.2.3 sphinx-rtd-theme==0.5.0\n\n# Install TensorFlow and addons.\nRUN pip install --no-cache-dir tensorflow tensorflow-addons\n\n# Clone SMAUG, but don't build. We'll assume the developer will build.\nWORKDIR /workspace\nRUN git clone https://github.com/harvard-acc/smaug.git && \\\n    cd smaug && \\\n    git submodule init && \\\n    git submodule update\n\n# More dependencies\nRUN apt-get install --no-install-recommends -y libgoogle-perftools-dev && rm -rf /var/lib/apt/lists/*;\n"
}