{
  "startTime": 1674246798631,
  "endTime": 1674246799680,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts-alpine AS builder\n\nRUN npm install -g pnpm@^7.2.1 && npm cache clean --force;\n\nWORKDIR /opt/app\n\n# Should consider using pnpm fetch\nCOPY ./package.json ./\nCOPY ./pnpm-lock.yaml ./\nCOPY ./tsconfig.base.json ./\nCOPY ./satellitesConfig.js ./\nCOPY ./pnpm-workspace.yaml ./\nCOPY ./.npmrc ./\n\nCOPY ./web ./web\nCOPY ./legacy ./legacy\n\n# Replace workspace:* with the actual versions | Load css from public folder atm\n# RUN version=$(jq --raw-output .version ./legacy/css/package.json); \\\n#  jq --arg legacy_css \"$version\" '.dependencies[\"@equinor/energyvision-legacy-css\"] = $legacy_css' \\\n#  ./web/package.json | sponge ./web/package.json\n\nRUN rm -rf ./legacy\n\nARG ARG_SANITY_PROJECT_ID\nARG ARG_SANITY_DATASET\nARG ARG_ALGOLIA_APP_ID\nARG ARG_ALGOLIA_SEARCH_API_KEY\n\nENV NEXT_PUBLIC_SANITY_PROJECT_ID ${ARG_SANITY_PROJECT_ID}\nENV NEXT_PUBLIC_SANITY_DATASET ${ARG_SANITY_DATASET}\nENV NEXT_PUBLIC_ALGOLIA_APP_ID ${ARG_ALGOLIA_APP_ID}\nENV NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY ${ARG_ALGOLIA_SEARCH_API_KEY}\n\n#RUN pnpm install --recursive --frozen-lockfile\nRUN pnpm web install --frozen-lockfile\nRUN pnpm web build\n\nFROM node:lts-alpine\n\nRUN npm install -g pnpm@^7.2.1 && npm cache clean --force;\n\nWORKDIR /opt/app\n\nENV NODE_ENV production\nENV PORT 3000\nENV USER nextjs\nENV UID 12345\nENV GID 23456\n\nRUN addgroup -S \"$USER\" && \\\n  adduser -S \\\n  --disabled-password \\\n  --gecos \"\" \\\n  --home \"/opt/app\" \\\n  --ingroup \"$USER\" \\\n  --no-create-home \\\n  --uid \"$UID\" \\\n  \"$USER\"\n\nCOPY --from=builder /opt/app/web/.next ./web/.next\nCOPY --from=builder /opt/app/web/next.config.mjs ./web\nCOPY --from=builder /opt/app/web/securityHeaders.mjs ./web\nCOPY --from=builder /opt/app/web/package.json ./web\nCOPY --from=builder /opt/app/web/pnpm-lock.yaml ./web\nCOPY --from=builder /opt/app/web/languages.js ./web\nCOPY --from=builder /opt/app/pnpm-lock.yaml ./\nCOPY --from=builder /opt/app/web/public ./web/public\nCOPY --from=builder /opt/app/package.json ./\nCOPY --from=builder /opt/app/satellitesConfig.js ./\nCOPY --from=builder /opt/app/pnpm-workspace.yaml ./\nCOPY --from=builder /opt/app/.npmrc ./\n\nRUN chown -R \"$USER\":\"$USER\" .\nUSER \"$UID\"\n\nARG ARG_SANITY_PROJECT_ID\nARG ARG_SANITY_DATASET\nENV NEXT_PUBLIC_SANITY_PROJECT_ID ${ARG_SANITY_PROJECT_ID}\nENV NEXT_PUBLIC_SANITY_DATASET ${ARG_SANITY_DATASET}\n\nARG ARG_SANITY_API_TOKEN\nARG ARG_SANITY_PREVIEW_SECRET\n\nENV SANITY_API_TOKEN ${ARG_SANITY_API_TOKEN}\nENV SANITY_PREVIEW_SECRET ${ARG_SANITY_PREVIEW_SECRET}\n\nARG ARG_ALGOLIA_APP_ID\nARG ARG_ALGOLIA_SEARCH_API_KEY\nARG ARG_ALGOLIA_SEARCH_API_SERVER_KEY\nENV NEXT_PUBLIC_ALGOLIA_APP_ID ${ARG_ALGOLIA_APP_ID}\nENV NEXT_PUBLIC_ALGOLIA_SEARCH_API_KEY ${ARG_ALGOLIA_SEARCH_API_KEY}\nENV ALGOLIA_SEARCH_API_SERVER_KEY ${ARG_ALGOLIA_SEARCH_API_SERVER_KEY}\n\nARG ARG_ENV\nENV ENV ${ARG_ENV}\n\n# RUN pnpm install --frozen-lockfile\nRUN pnpm web install --frozen-lockfile\n\nRUN rm ./pnpm-lock.yaml\nRUN rm -rf .pnpm-store\n\nEXPOSE \"$PORT\"\nCMD [\"pnpm\", \"web\", \"start\"]\n"
}