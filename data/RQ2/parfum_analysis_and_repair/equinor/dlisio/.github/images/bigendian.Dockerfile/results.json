{
  "startTime": 1674250473967,
  "endTime": 1674250474744,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM s390x/debian\nRUN apt-get update && apt-get install --no-install-recommends -y cmake g++ python3 python3-pip git && rm -rf /var/lib/apt/lists/*;\n\n#mpark variant\nWORKDIR /home/ci\nRUN git clone https://github.com/mpark/variant.git\nWORKDIR /home/ci/variant/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release ..\nRUN make -j4\nRUN make install\n\n#fmt\nWORKDIR /home/ci\nRUN git clone https://github.com/fmtlib/fmt.git\nWORKDIR /home/ci/fmt/build\nRUN git checkout 7.1.3\nRUN cmake -DFMT_TEST=OFF -DFMT_DOC=OFF ..\nRUN make -j4\nRUN make install\n\n#dlisio_requirements\nWORKDIR /home/ci\nCOPY . /home/ci/dlisio_requirements\nWORKDIR /home/ci/dlisio_requirements\nRUN python3 -m pip install --upgrade pip\nRUN python3 -m pip install --user -r python/requirements-dev.txt\n\n#lfp\nWORKDIR /home/ci\nRUN git clone https://github.com/equinor/layered-file-protocols.git\nWORKDIR /home/ci/layered-file-protocols/build\nRUN cmake -DBUILD_SHARED_LIBS=ON -DLFP_FMT_HEADER_ONLY=ON -DCMAKE_INSTALL_NAME_DIR=/usr/local/lib -DBUILD_TESTING=OFF -DCMAKE_BUILD_TYPE=Release ..\nRUN make -j4\nRUN make install\n\n#dlisio\nWORKDIR /home/ci\nCOPY . /home/ci/dlisio\nWORKDIR /home/ci/dlisio/build\nRUN cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_NAME_DIR=/usr/local/lib -DPYTHON_EXECUTABLE=`which python3` ..\nRUN make -j4\nRUN ctest --verbose\n"
}