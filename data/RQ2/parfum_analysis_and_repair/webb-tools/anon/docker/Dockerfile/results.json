{
  "startTime": 1674253508469,
  "endTime": 1674253509221,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim as builder\nLABEL AUTHOR=\"Webb Developers <dev@webb.tools>\"\nENV RUST_BACKTRACE=full\n\nARG RUST_VERSION=nightly-2021-06-01\nARG PROFILE=release\nARG GIT_REPO=https://github.com/webb-tools/anon\nARG BINARY_NAME=webb\nARG PACKAGE_NAME=webb-node\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    clang \\\n    cmake \\\n    curl \\\n    git \\\n    libssl-dev \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\n# Get Rust\nRUN curl https://raw.githubusercontent.com/rust-lang/rustup/master/rustup-init.sh -sSf | sh -s -- -y\nRUN echo 'source $HOME/.cargo/env' >> $HOME/.bashrc\nRUN $HOME/.cargo/bin/rustup default stable\nRUN $HOME/.cargo/bin/rustup uninstall nightly\nRUN $HOME/.cargo/bin/rustup toolchain install ${RUST_VERSION}\nRUN $HOME/.cargo/bin/rustup target add wasm32-unknown-unknown --toolchain ${RUST_VERSION}\n\nRUN git clone ${GIT_REPO} source\nRUN cd source && $HOME/.cargo/bin/cargo build -p ${PACKAGE_NAME} --${PROFILE}\n\n# ===== SECOND STAGE ======\n\nFROM debian:buster-slim\nLABEL description=\"This is the 2nd stage: a very small image where we copy the edgeware binary.\"\nARG PROFILE=release\n\nRUN useradd -m -u 1000 -U -s /bin/sh -d /webb webb\n\nCOPY --from=builder /source/target/$PROFILE/webb-node /usr/local/bin\n\nUSER webb\nEXPOSE 30333 9933 9944 9615\nVOLUME [\"/data\"]\n\nCMD [\"/usr/local/bin/webb-node\"]"
}