{
  "startTime": 1674250964100,
  "endTime": 1674250965730,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "# dockerfile\nFROM php:7.4-fpm\n\n# Copy composer.lock and composer.json\nCOPY composer.lock composer.json /var/www/\n\n# Set working directory\nWORKDIR /var/www\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    libpng-dev \\\n    libjpeg62-turbo-dev \\\n    libfreetype6-dev \\\n    locales \\\n    zip \\\n    jpegoptim optipng pngquant gifsicle \\\n    unzip \\\n    curl \\\n    libonig-dev \\\n    libzip-dev \\\n    libwebp-dev && rm -rf /var/lib/apt/lists/*;\n\n# Clear cache\nRUN apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Install extensions\nRUN docker-php-ext-install pdo pdo_mysql mbstring zip exif pcntl\nRUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/ --with-webp=/usr/include/ \\\n    && docker-php-ext-install gd\nRUN pecl install -o -f redis \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable redis\n\n# Install composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# NPM for frontend builds\nRUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Add user for laravel application\nRUN groupadd -g 1000 www \\\n    && useradd -u 1000 -ms /bin/bash -g www www\n\n# Copy existing application directory contents\nCOPY ./ /var/www\n\n# Copy existing application directory permissions\nCOPY --chown=www:www . /var/www\n\n# Change current user to www\nUSER www\n\n# Expose port 9000 and start php-fpm server\nEXPOSE 9000\nCMD [\"php-fpm\"]\n"
}