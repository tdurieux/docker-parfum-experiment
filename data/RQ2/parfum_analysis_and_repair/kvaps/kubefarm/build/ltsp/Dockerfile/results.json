{
  "startTime": 1674255453466,
  "endTime": 1674255454636,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 179,
        "lineEnd": 181,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 199,
        "lineEnd": 203,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 147,
        "lineEnd": 147,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------------\n# Base part used for ltsp-server and ltsp-client\n#-------------------------------------------------------------------------------\n\nFROM ubuntu:20.04 as ltsp\n\nENV VERSION=v0.13.4\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install updates and LTSP package\nRUN apt-get -y update \\\n && apt-get -y upgrade \\\n && apt-get -y --no-install-recommends install \\\n      curl \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN printf '%s\\n' \\\n      'deb http://ppa.launchpad.net/ltsp/ppa/ubuntu focal main' \\\n      'deb http://ppa.launchpad.net/ltsp/proposed/ubuntu focal main' \\\n      > /etc/apt/sources.list.d/ltsp.list \\\n && curl -f -L https://ltsp.org/misc/ltsp_ubuntu_ppa.gpg \\\n      -o /etc/apt/trusted.gpg.d/ltsp_ubuntu_ppa.gpg\n\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      ltsp-cloud \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#-------------------------------------------------------------------------------\n# Installing Kernel and basic software\n#-------------------------------------------------------------------------------\n\nFROM ltsp as rootfs-pre\n\n# Install packages\nRUN echo 'APT::Install-Recommends \"0\";\\nAPT::Install-Suggests \"0\";' \\\n      >> /etc/apt/apt.conf.d/01norecommend \\\n && mkdir -p /var/lib/resolvconf \\\n && touch /var/lib/resolvconf/linkified \\\n && apt-get update \\\n && apt-get -y --no-install-recommends install \\\n      adduser \\\n      apparmor-utils \\\n      apt-transport-https \\\n      arping \\\n      bash-completion \\\n      bridge-utils \\\n      ca-certificates \\\n      curl \\\n      dbus-user-session \\\n      gnupg \\\n      gpg-agent \\\n      htop \\\n      ifenslave \\\n      initramfs-tools \\\n      ipset \\\n      ipvsadm \\\n      jnettop \\\n      jq \\\n      linux-image-generic \\\n      lm-sensors \\\n      lvm2 \\\n      openssh-server \\\n      nano \\\n      net-tools \\\n      nfs-common \\\n      pciutils \\\n      resolvconf \\\n      rsync \\\n      screen \\\n      squashfs-tools \\\n      ssh \\\n      sysstat \\\n      systemd \\\n      sudo \\\n      tcpdump \\\n      telnet \\\n      thin-provisioning-tools \\\n      ubuntu-minimal \\\n      vim \\\n      vlan \\\n      wget \\\n      zfsutils-linux \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Disable systemd-resolved\nRUN systemctl disable systemd-resolved.service \\\n && systemctl mask systemd-resolved.service\n\n# Install docker\nARG DOCKER_VERSION=20.10\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n && echo \"deb https://download.docker.com/linux/ubuntu focal stable\" \\\n      > /etc/apt/sources.list.d/docker.list \\\n && apt-get update \\\n && DOCKER_VERSION=$(apt-cache madison docker-ce | awk '{print $3}' | grep -m1 \"$DOCKER_VERSION\") \\\n && apt-get -y --no-install-recommends install docker-ce=\"$DOCKER_VERSION\" \\\n && apt-mark hold docker-ce && rm -rf /var/lib/apt/lists/*;\n\n# Install kubeadm, kubelet and kubectl\n# https://kubernetes.io/docs/setup/independent/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl\nARG KUBE_VERSION=1.22\nRUN curl -f -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n && echo \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" \\\n      > /etc/apt/sources.list.d/kubernetes.list \\\n && apt-get update \\\n && KUBE_VERSION=$(apt-cache madison kubelet | awk '{print $3}' | grep -m1 \"$KUBE_VERSION\") \\\n && apt-get -y --no-install-recommends install kubelet=$KUBE_VERSION kubeadm=$KUBE_VERSION kubectl=$KUBE_VERSION cri-tools \\\n && apt-mark hold kubelet kubeadm kubectl && rm -rf /var/lib/apt/lists/*;\n\n# Disable automatic updates\nRUN rm -f /etc/apt/apt.conf.d/20auto-upgrades\n\n# Disable apparmor profiles\nRUN find /etc/apparmor.d \\\n      -maxdepth 1 \\\n      -type f \\\n      -name \"sbin.*\" \\\n      -o -name \"usr.*\" \\\n      -exec ln -sf \"{}\" /etc/apparmor.d/disable/ \\;\n\n# Setup locales\nRUN printf '%s\\n' \\\n      'LANG=en_US.UTF-8' \\\n      'LC_TIME=en_DK.UTF-8' \\\n      'LC_CTYPE=en_US.UTF-8' \\\n      > /etc/locale.conf \\\n && locale-gen en_US.UTF-8 en_DK.UTF-8\n\n#-------------------------------------------------------------------------------\n# Build kernel modules\n#-------------------------------------------------------------------------------\n\nFROM rootfs-pre as modules\n\n# Install kernel-headers and dkms\nRUN apt-get update \\\n && KERNEL_VERSION=\"$(ls -1 /lib/modules/ | tail -n1)\" \\\n && apt-get -y --no-install-recommends install \"linux-headers-${KERNEL_VERSION}\" dkms \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install DRBD modules\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CC1B5A793C04BB3905AD837734893610CEAA9512 \\\n && echo \"deb http://ppa.launchpad.net/linbit/linbit-drbd9-stack/ubuntu focal main\" \\\n      > /etc/apt/sources.list.d/linbit.list \\\n && apt-get update \\\n && apt-get -y --no-install-recommends install drbd-dkms && rm -rf /var/lib/apt/lists/*;\n\n#-------------------------------------------------------------------------------\n# Build rootfs image\n#-------------------------------------------------------------------------------\n\nFROM rootfs-pre as rootfs\n\n# Copy kernel modules\nCOPY --from=modules /lib/modules/ /lib/modules/\n\n# Generate initramfs with new modules\nRUN update-initramfs -u\n\n# Generate motd\nCOPY motd /etc/motd\nRUN sed -i \"s/\\${VERSION}/${VERSION}/\" /etc/motd\n\n# Generate image\nENV OMIT_FUNCTIONS=\"remove_users\"\nENV ADD_IMAGE_EXCLUDES=\"/tmp/image.excludes\"\nRUN printf \"%s\\n\" kaniko image.excludes.tmp > /tmp/image.excludes\nRUN ltsp image -I /\n\n#-------------------------------------------------------------------------------\n# Build dnsmasq with tftp single port support\n#-------------------------------------------------------------------------------\n\nFROM ltsp as builder\n\n# Common build-dependencies\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      git \\\n      build-essential \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/* \\\n\n# Build dnsmasq\nARG DNSMAQ_VERSION=2.81-12-g619000a\nRUN git clone git://thekelleys.org.uk/dnsmasq.git \\\n && cd dnsmasq/ \\\n && git checkout ${DNSMAQ_VERSION} \\\n && make\n\n#-------------------------------------------------------------------------------\n# LTSP-Server\n#-------------------------------------------------------------------------------\n\nFROM ltsp\n\nRUN apt-get -y update \\\n && apt-get -y --no-install-recommends install \\\n      grub-pc-bin \\\n      grub-efi-amd64-bin \\\n      inotify-tools \\\n      nginx \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Generate nginx config\nRUN ltsp http -I\n\nCOPY --from=builder /dnsmasq/src/dnsmasq /usr/sbin/dnsmasq\nCOPY --from=rootfs /srv/ltsp/images /srv/ltsp/images\nCOPY --from=rootfs /srv/tftp/ltsp /srv/tftp/ltsp\n"
}