diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kvaps/kube-opennebula/dockerfiles/opennebula-packages/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kvaps/kube-opennebula/dockerfiles/opennebula-packages/Dockerfile/repaired.Dockerfile
index 6d36dad..6afe56d 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kvaps/kube-opennebula/dockerfiles/opennebula-packages/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kvaps/kube-opennebula/dockerfiles/opennebula-packages/Dockerfile/repaired.Dockerfile
@@ -11,7 +11,7 @@ ENV VERSION=5.12.0.4 \
 
 # Install build dependencies (https://docs.opennebula.io/5.12/integration/references/build_deps.html)
 RUN apt-get update \
- && apt-get install -y \
+ && apt-get install --no-install-recommends -y \
       ubuntu-dev-tools \
       bash-completion \
       bison \
@@ -36,7 +36,7 @@ RUN apt-get update \
       npm \
       ronn \
       rename \
-      jq
+      jq && rm -rf /var/lib/apt/lists/*;
 
 # Download sources
 RUN wget -q -O - https://github.com/OpenNebula/one/archive/release-$VERSION.tar.gz | tar xzf - \
@@ -77,7 +77,7 @@ RUN tar -czf /opennebula_$VERSION.orig.tar.gz . \
  && wget -q https://downloads.opennebula.io/extra/xmlrpc-c.tar.gz \
  && wget -q https://downloads.opennebula.io/packages/opennebula-$VERSION/java-oca-$VERSION.tar.gz \
  && sed -i '/new_xmlrpc=yes/a\    context=yes \\' /packages-$VERSION/sources/build_opennebula.sh \
- && tar -czf build_opennebula.tar.gz -C /packages-$VERSION/sources build_opennebula.sh xml_parse_huge.patch
+ && tar -czf build_opennebula.tar.gz -C /packages-$VERSION/sources build_opennebula.sh xml_parse_huge.patch && rm /opennebula_$VERSION.orig.tar.gz
 
 # Download Ruby gems
 RUN bash -x /packages-$VERSION/rubygems/download.sh /opennebula_$VERSION.orig.tar.gz Ubuntu2004 opennebula-rubygems-$VERSION.tar
@@ -118,7 +118,7 @@ RUN echo "${GIT_VERSION}" > debian/gitversion
 RUN dpkg-source --include-binaries -b .
 
 # Install dependencies
-RUN apt-get install -y $(dpkg-checkbuilddeps 2>&1 | sed -e 's/.*Unmet build dependencies: //' -e 's/[\(][^)]*[\)]//g')
+RUN apt-get install --no-install-recommends -y $(dpkg-checkbuilddeps 2>&1 | sed -e 's/.*Unmet build dependencies: //' -e 's/[\(][^)]*[\)]//g') && rm -rf /var/lib/apt/lists/*;
 
 # Build binary package
 RUN dpkg-buildpackage -us -uc