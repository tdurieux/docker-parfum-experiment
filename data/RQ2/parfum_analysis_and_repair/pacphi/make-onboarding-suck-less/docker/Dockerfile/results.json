{
  "startTime": 1674251947213,
  "endTime": 1674251949899,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 182
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 204
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 125
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 131,
        "lineEnd": 131,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 62,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 201
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 25,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 21,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:21.04\nLABEL author=cphillipson@vmware.com\n\nARG DEBIAN_FRONTEND=noninteractive\n\nENV TZ=America/Los_Angeles \\\n    ARGO_VERSION=3.2.4 \\\n    ARGOCD_VERSION=2.1.7 \\\n    BOSH_VERSION=6.4.9 \\\n    CF_VERSION=7.4.0 \\\n    CREDHUB_VERSION=2.9.0 \\\n    GH_VERSION=2.3.0 \\\n    GO_VERSION=1.17.4 \\\n    HELM_VERSION=3.7.1 \\\n    HELMFILE_VERSION=0.142.0 \\\n    AWS_IAM_AUTHENTICATOR_VERSION=\"1.21.2/2021-07-05\" \\\n    IMGPKG_VERSION=0.23.1 \\\n    KAPP_VERSION=0.43.0 \\\n    KBLD_VERSION=0.32.0 \\\n    KWT_VERSION=0.0.6 \\\n    KUBECTL_VERSION=1.22.1 \\\n    KNATIVE_VERSION=1.0.0 \\\n    MKPCLI_VERSION=0.5.3 \\\n    OCI_VERSION=3.4.1 \\\n    OM_VERSION=7.4.1 \\\n    PACK_VERSION=0.23.0 \\\n    PIVNET_VERSION=3.0.1 \\\n    TERRAFORM_VERSION=1.1.3 \\\n    TERRAFORM_DOCS_VERSION=0.16.0 \\\n    LEFTOVERS_VERSION=0.62.0 \\\n    TMC_VERSION=0.4.0-089ff971 \\\n    VELERO_VERSION=1.7.1 \\\n    VENDIR_VERSION=0.23.0 \\\n    YTT_VERSION=0.38.0\n\nRUN cd /tmp && \\\n    ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \\\n    apt update -y && \\\n    apt install --no-install-recommends buildah build-essential curl default-jre git gpg graphviz gzip httpie libnss3-tools jq openssl podman pv python3-pip python3.9-dev python3.9-venv ruby-dev sudo tmux tzdata unzip wget -y && \\\n    apt install --no-install-recommends apt-transport-https ca-certificates gnupg lsb-release software-properties-common dirmngr vim -y && \\\n    curl -fsSL https://deb.nodesource.com/setup_17.x | sudo -E bash - && \\\n    apt install --no-install-recommends nodejs -y && \\\n    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \\\n    echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \\\n    apt-get update -y && apt install --no-install-recommends -y docker-ce-cli && \\\n    useradd -m docker && echo \"docker:docker\" | chpasswd && \\\n    adduser docker sudo && \\\n    ( curl -f -sSL \"https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz\" | sudo tar -C /usr/local/bin/ --no-same-owner -xzv pack) && \\\n    python3 -m pip install --user --upgrade pip && \\\n    python3 -m pip install --user virtualenv && \\\n    curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && \\\n    unzip awscliv2.zip && \\\n    sudo ./aws/install && \\\n    curl -f -o aws-iam-authenticator curl -o \"https://amazon-eks.s3.us-west-2.amazonaws.com/${AWS_IAM_AUTHENTICATOR_VERSION}/bin/linux/amd64/aws-iam-authenticator\" && \\\n    chmod +x aws-iam-authenticator && \\\n    sudo mv aws-iam-authenticator /usr/local/bin && \\\n    curl -f -sL https://aka.ms/InstallAzureCLIDeb | sudo bash && \\\n    echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \\\n    apt update -y && apt install --no-install-recommends google-cloud-sdk -y && \\\n    gem install cf-uaac && \\\n    curl -f -LO \"https://github.com/cloudfoundry/bosh-cli/releases/download/v${BOSH_VERSION}/bosh-cli-${BOSH_VERSION}-linux-amd64\" && \\\n    mv bosh-cli-${BOSH_VERSION}-linux-amd64 bosh && \\\n    chmod +x bosh && \\\n    sudo mv bosh /usr/local/bin && \\\n    curl -f -L -o cf.tgz \"https://packages.cloudfoundry.org/stable?release=linux64-binary&version=${CF_VERSION}&source=github-rel\" && \\\n    tar -xvf cf.tgz && \\\n    sudo mv cf7 cf && \\\n    sudo mv cf /usr/local/bin && \\\n    curl -f -LO \"https://github.com/cloudfoundry-incubator/credhub-cli/releases/download/${CREDHUB_VERSION}/credhub-linux-${CREDHUB_VERSION}.tgz\" && \\\n    tar -xvzf credhub-linux-${CREDHUB_VERSION}.tgz && \\\n    sudo mv credhub /usr/local/bin && \\\n    curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \\\n    chmod +x kubectl && \\\n    sudo mv kubectl /usr/local/bin && \\\n    curl -f -L -o kn https://github.com/knative/client/releases/download/knative-v${KNATIVE_VERSION}/kn-linux-amd64 && \\\n    chmod +x kn && \\\n    sudo mv kn /usr/local/bin && \\\n    curl -fsSLO \"https://github.com/kubernetes-sigs/krew/releases/latest/download/krew-linux_amd64.tar.gz\" && \\\n    tar zxvf krew-linux_amd64.tar.gz && \\\n    KREW=./krew-\"$(uname | tr '[:upper:]' '[:lower:]')_$(uname -m | sed -e 's/x86_64/amd64/' -e 's/arm.*$/arm/')\" && \\\n    \"$KREW\" install krew && \\\n    echo 'export PATH=\"${KREW_ROOT:-$HOME/.krew}/bin:$PATH\"' >> $HOME/.bashrc && \\\n    curl -f -LO \"https://github.com/pivotal-cf/om/releases/download/${OM_VERSION}/om-linux-${OM_VERSION}\" && \\\n    mv om-linux-${OM_VERSION} om && \\\n    chmod +x om && \\\n    sudo mv om /usr/local/bin && \\\n    curl -f -LO \"https://github.com/pivotal-cf/pivnet-cli/releases/download/v${PIVNET_VERSION}/pivnet-linux-amd64-${PIVNET_VERSION}\" && \\\n    mv pivnet-linux-amd64-${PIVNET_VERSION} pivnet && \\\n    chmod +x pivnet && \\\n    sudo mv pivnet /usr/local/bin && \\\n    curl -f -LO \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" && \\\n    unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n    sudo mv terraform /usr/local/bin && \\\n    curl -f -Lo ./terraform-docs https://github.com/segmentio/terraform-docs/releases/download/v${TERRAFORM_DOCS_VERSION}/terraform-docs-v${TERRAFORM_DOCS_VERSION}-$(uname | tr '[:upper:]' '[:lower:]')-amd64 && \\\n    chmod +x ./terraform-docs && \\\n    sudo mv terraform-docs /usr/local/bin && \\\n    curl -f -LO \"https://github.com/genevieve/leftovers/releases/download/v${LEFTOVERS_VERSION}/leftovers-v${LEFTOVERS_VERSION}-linux-amd64\" && \\\n    mv leftovers-v${LEFTOVERS_VERSION}-linux-amd64 leftovers && \\\n    chmod +x leftovers && \\\n    sudo mv leftovers /usr/local/bin && \\\n    curl -f -LO https://tmc-cli.s3-us-west-2.amazonaws.com/tmc/${TMC_VERSION}/linux/x64/tmc && \\\n    chmod +x tmc && \\\n    mv tmc /usr/local/bin && \\\n    curl -f -LO \"https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz\" && \\\n    tar -xvf helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n    sudo mv linux-amd64/helm /usr/local/bin && \\\n    curl -f -Lo ./helmfile https://github.com/roboll/helmfile/releases/download/v${HELMFILE_VERSION}/helmfile_linux_amd64 && \\\n    chmod +x helmfile && \\\n    sudo mv helmfile /usr/local/bin && \\\n    curl -f -L -o imgpkg \"https://github.com/vmware-tanzu/carvel-imgpkg/releases/download/v${IMGPKG_VERSION}/imgpkg-linux-amd64\" && \\\n    chmod +x imgpkg && \\\n    sudo mv imgpkg /usr/local/bin && \\\n    curl -f -L -o ytt \"https://github.com/vmware-tanzu/carvel-ytt/releases/download/v${YTT_VERSION}/ytt-linux-amd64\" && \\\n    chmod +x ytt && \\\n    sudo mv ytt /usr/local/bin && \\\n    curl -f -L -o vendir \"https://github.com/vmware-tanzu/carvel-vendir/releases/download/v${VENDIR_VERSION}/vendir-linux-amd64\" && \\\n    chmod +x vendir && \\\n    sudo mv vendir /usr/local/bin && \\\n    curl -f -L -o kapp \"https://github.com/vmware-tanzu/carvel-kapp/releases/download/v${KAPP_VERSION}/kapp-linux-amd64\" && \\\n    chmod +x kapp && \\\n    sudo mv kapp /usr/local/bin && \\\n    curl -f -L -o kbld \"https://github.com/vmware-tanzu/carvel-kbld/releases/download/v${KBLD_VERSION}/kbld-linux-amd64\" && \\\n    chmod +x kbld && \\\n    sudo mv kbld /usr/local/bin && \\\n    curl -f -L -o kwt \"https://github.com/vmware-tanzu/carvel-kwt/releases/download/v${KWT_VERSION}/kwt-linux-amd64\" && \\\n    chmod +x kwt && \\\n    sudo mv kwt /usr/local/bin && \\\n    curl -f -LO \"https://dl.min.io/client/mc/release/linux-amd64/mc\" && \\\n    chmod +x mc && \\\n    sudo mv mc /usr/local/bin && \\\n    curl -f -LO \"https://github.com/argoproj/argo-cd/releases/download/v${ARGOCD_VERSION}/argocd-linux-amd64\" && \\\n    mv argocd-linux-amd64 argocd && \\\n    chmod +x argocd && \\\n    sudo mv argocd /usr/local/bin && \\\n    curl -f -LO \"https://github.com/argoproj/argo-workflows/releases/download/v${ARGO_VERSION}/argo-linux-amd64.gz\" && \\\n    gunzip argo-linux-amd64.gz && \\\n    chmod +x argo-linux-amd64 && \\\n    sudo mv argo-linux-amd64 /usr/local/bin/argo && \\\n    curl -f -LO \"https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_amd64.tar.gz\" && \\\n    tar -xvf gh_${GH_VERSION}_linux_amd64.tar.gz && \\\n    chmod +x gh_${GH_VERSION}_linux_amd64/bin/gh && \\\n    sudo mv gh_${GH_VERSION}_linux_amd64/bin/gh /usr/local/bin && \\\n    wget -c https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz -O - | sudo tar -xz -C /usr/local && \\\n    sudo ln -s /usr/local/go/bin/go /usr/local/bin/go && \\\n    sudo ln -s /usr/local/go/bin/gofmt /usr/local/bin/gofmt && \\\n    git clone https://github.com/FiloSottile/mkcert && cd mkcert && \\\n    go build -ldflags \"-X main.Version=$(git describe --tags)\" && \\\n    sudo mv mkcert /usr/local/bin && \\\n    curl -f -LO \"https://github.com/vmware-tanzu/velero/releases/download/v${VELERO_VERSION}/velero-v${VELERO_VERSION}-linux-amd64.tar.gz\" && \\\n    tar -xvf velero-v${VELERO_VERSION}-linux-amd64.tar.gz && \\\n    chmod +x velero-v${VELERO_VERSION}-linux-amd64/velero && \\\n    sudo mv velero-v${VELERO_VERSION}-linux-amd64/velero /usr/local/bin && \\\n    curl -f -LO https://github.com/vmware-labs/marketplace-cli/releases/download/v${MKPCLI_VERSION}/mkpcli-linux-amd64 && \\\n    chmod +x mkpcli-linux-amd64 && \\\n    mv mkpcli-linux-amd64 /usr/local/bin/mkpcli && \\\n    apt clean && \\\n    rm -Rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && rm cf.tgz\n\nWORKDIR /root\nCOPY dist/ /root/\n\nRUN if [ -e \"/root/tanzu-cli-bundle-linux-amd64.tar\" ]; then echo \"docker\" | sudo -S mv /root/tanzu /usr/local/bin && tar xvf tanzu-cli-bundle-linux-amd64.tar -C . && tanzu plugin clean && tanzu plugin install --local cli all && rm -Rf cli tanzu-cli-bundle-linux-amd64.tar; fi\n\nCMD [ \"/bin/bash\" ]\n"
}