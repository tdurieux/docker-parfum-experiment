{
  "startTime": 1674251053576,
  "endTime": 1674251054847,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nLABEL maintainer=\"David Shriver\"\n\nRUN useradd -ms /bin/bash dnnv\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV TZ=America/New_York\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime \\\n    && echo $TZ > /etc/timezone \\\n    && apt-get -qq update \\\n    && apt-get -qq install --no-install-recommends -y \\\n    build-essential \\\n    software-properties-common \\\n    && add-apt-repository -y ppa:deadsnakes/ppa \\\n    && apt-get -qq update \\\n    && apt-get -qq install --no-install-recommends -y \\\n    cmake \\\n    git \\\n    python3.8 \\\n    python3.8-dev \\\n    python3.8-venv \\\n    valgrind \\\n    curl \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nUSER dnnv\nWORKDIR /home/dnnv/\n\n# create venv\nRUN python3.8 -m venv .venv \\\n    && . .venv/bin/activate \\\n    # upgrade pip and flit \\\n    && pip install --no-cache-dir --upgrade pip flit \\\n    # load venv on interactive shell\n    && echo \". .venv/bin/activate\" >>.bashrc\n\n# install DNNV base\nCOPY --chown=dnnv pyproject.toml README.md ./\nCOPY --chown=dnnv dnnv/__init__.py dnnv/__version__.py dnnv/\nRUN . .venv/bin/activate && flit install -s\n\n# build test artifacts\nCOPY --chown=dnnv tests/system_tests/artifacts/build_artifacts.py tests/system_tests/artifacts/build_artifacts.py\nRUN . .venv/bin/activate && python tests/system_tests/artifacts/build_artifacts.py\n\n# copy project files to container\nCOPY --chown=dnnv . .\n\nRUN . .venv/bin/activate \\\n    # # install verifiers\n    # # verifiers that do not require gurobi\n    # && dnnv_manage install eran \\\n    # && dnnv_manage install marabou \\\n    # && dnnv_manage install neurify \\\n    # && dnnv_manage install nnenum \\\n    # && dnnv_manage install planet \\\n    # && dnnv_manage install reluplex \\\n    # # verifiers that require gurobi license\n    # && dnnv_manage install bab \\\n    # && dnnv_manage install mipverify \\\n    # && dnnv_manage install verinet \\\n    # clean up cache\n    && rm -rf .cache\n"
}