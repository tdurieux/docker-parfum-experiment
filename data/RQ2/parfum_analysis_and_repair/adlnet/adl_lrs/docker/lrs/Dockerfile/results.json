{
  "startTime": 1674220844773,
  "endTime": 1674220845326,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9\n\nENV UWSGI_PIP_VERSION 2.0.20\n\nRUN mkdir /opt/lrs /opt/lrs/logs\n\n# Install our reqs\nRUN apt-get update && \\\n\tapt-get install -y && \\\n\tpip3 install --no-cache-dir fabric3 virtualenv\n\nRUN echo \"Cloning LRS Branch\" && \\\n\tgit clone https://github.com/adlnet/ADL_LRS /opt/lrs/ADL_LRS\t\t\n\nWORKDIR /opt/lrs/ADL_LRS\n\nENV DJANGO_ENV=prod\nENV DOCKER_CONTAINER=1\n\n# Prepare the configuration\nCOPY uwsgi/lrs_uwsgi.ini /etc/uwsgi/vassals/lrs_uwsgi.ini\nCOPY uwsgi/lrs.service /lib/systemd/system/lrs.service\n\nCOPY settings.ini /opt/lrs/ADL_LRS/adl_lrs/settings.ini\nCOPY modified-fabfile.py /opt/lrs/ADL_LRS/fabfile.py\n\n# We'll need to run the setup\nCOPY scripts/django-shell.sh /bin/django-shell.sh\nCOPY scripts/setup-lrs.sh /bin/setup-lrs.sh\nCOPY scripts/test-lrs.sh /bin/test-lrs.sh\nCOPY scripts/setup-admin.sh /bin/setup-admin.sh\n\nCMD [\"/bin/setup-lrs.sh\"]\n"
}