{
  "startTime": 1674254989973,
  "endTime": 1674254991215,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 26,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 21,
        "columnStart": 26,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "FROM jupyter/scipy-notebook\nMAINTAINER Hisanari Otsu <hi2p.perim@gmail.com>\n\nENV BUILD_CORES -j\nENV BUILD_CORES_BOOST -j8\n\nUSER root\n\n# --------------------------------------------------------------------------------\n\n# Install some packages\nRUN apt-get update -qq && apt-get install --no-install-recommends -qq -y \\\n    git \\\n    software-properties-common \\\n    build-essential \\\n    freeglut3-dev \\\n    libxmu-dev \\\n    libxi-dev \\\n    libeigen3-dev \\\n    wget \\\n    unzip \\\n    curl && rm -rf /var/lib/apt/lists/*;\n\n# --------------------------------------------------------------------------------\n\n# cmake-3\n#RUN add-apt-repository -y ppa:george-edison55/cmake-3.x\n#RUN apt-get update -qq && apt-get install -qq -y cmake\n\nWORKDIR /\nRUN wget https://www.cmake.org/files/v3.7/cmake-3.7.1.tar.gz\nRUN tar xf cmake-3.7.1.tar.gz && rm cmake-3.7.1.tar.gz\nWORKDIR /cmake-3.7.1\nRUN ./bootstrap\nRUN make $BUILD_CORES && make install\n\n# --------------------------------------------------------------------------------\n\n# Update to gcc-4.9\n#RUN add-apt-repository ppa:ubuntu-toolchain-r/test\n#RUN apt-get update -qq && apt-get install -y gcc-4.9 g++-4.9\n#RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.9 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.9\n\n# --------------------------------------------------------------------------------\n\n# Boost\nWORKDIR /\nRUN curl -f -sL \"https://sourceforge.net/projects/boost/files/boost/1.63.0/boost_1_63_0.tar.bz2/download\" | tar xj\nWORKDIR /boost_1_63_0\nRUN ./bootstrap.sh --with-libraries=program_options,filesystem,system,regex,coroutine,context\nRUN ./b2 cxxflags=-fPIC cflags=-fPIC link=static $BUILD_CORES_BOOST\n\n# --------------------------------------------------------------------------------\n\n\n# FreeImage\nWORKDIR /\nRUN wget https://downloads.sourceforge.net/freeimage/FreeImage3170.zip\nRUN unzip FreeImage3170.zip\nWORKDIR /FreeImage\nRUN make $BUILD_CORES && make install\n\n# --------------------------------------------------------------------------------\n\n# Assimp\nWORKDIR /\nRUN git clone --depth=1 --branch v3.1.1 https://github.com/assimp/assimp.git assimp\nWORKDIR /assimp/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release .. && make $BUILD_CORES && make install\n\n# --------------------------------------------------------------------------------\n\n# Embree\nWORKDIR /\nRUN git clone --depth=1 --branch v2.8.0 https://github.com/embree/embree.git embree\nWORKDIR /embree/build\nRUN cmake -D CMAKE_BUILD_TYPE=Release -D ENABLE_ISPC_SUPPORT=OFF -D RTCORE_TASKING_SYSTEM=INTERNAL -D ENABLE_TUTORIALS=OFF .. && make $BUILD_CORES && make install && cp libembree.so /usr/local/lib\n\n# --------------------------------------------------------------------------------\n\n# yaml-cpp\nWORKDIR /\nRUN git clone --depth=1 https://github.com/jbeder/yaml-cpp.git yaml-cpp\nWORKDIR /yaml-cpp/build\nRUN cmake -DCMAKE_BUILD_TYPE=Release -D BUILD_SHARED_LIBS=ON .. && make $BUILD_CORES && make install\n\n# --------------------------------------------------------------------------------\n\n# tbb\nWORKDIR /\nRUN git clone --depth=1 --branch 2017_U5 https://github.com/01org/tbb.git tbb\nWORKDIR /tbb\nRUN make $BUILD_CORES\nRUN cp -rf build/linux_*_release/lib* /usr/local/lib/\nRUN cp -rf include/tbb /usr/local/include/\n\n# --------------------------------------------------------------------------------\n\nUSER $NB_USER\n\nRUN pip install --no-cache-dir imageio\nRUN conda install -c menpo -y opencv3=3.1.0\n\n# --------------------------------------------------------------------------------\n\nUSER root\nRUN apt-get install --no-install-recommends -qq -y openssh-client && rm -rf /var/lib/apt/lists/*;\n\n# --------------------------------------------------------------------------------\n\n#USER root\n\n# Add a project file to the container\n#WORKDIR /home/$NB_USER/\n#COPY . /home/$NB_USER/lightmetrica/\n\n# Avois clock skew detected warning\n#RUN find /home/$NB_USER/lightmetrica -print0 | xargs -0 touch\n\n# Build lightmetrica\n#WORKDIR /home/$NB_USER/lightmetrica/build\n#RUN BOOST_ROOT=\"\" BOOST_INCLUDEDIR=\"/boost_1_63_0\" BOOST_LIBRARYDIR=\"/boost_1_63_0/stage/lib\" cmake -DCMAKE_BUILD_TYPE=Release -D LM_USE_SINGLE_PRECISION=OFF -D LM_USE_DOUBLE_PRECISION=ON .. && make $BUILD_CORES\n\n#ENV PATH /lightmetrica/dist/bin/Release:$PATH\n#ENTRYPOINT [\"lightmetrica\"]\n\n# --------------------------------------------------------------------------------\n\nUSER root\n#COPY id_rsa /home/$NB_USER/.ssh/id_rsa\n#RUN chown -R $NB_USER:users /home/$NB_USER/.ssh\n\nWORKDIR /home/$NB_USER/work\nUSER $NB_USER\n"
}