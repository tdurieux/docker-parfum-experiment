{
  "startTime": 1674219643170,
  "endTime": 1674219644486,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base stage\nFROM golang:1.18.2-alpine3.14 AS base\n\nARG GOPROXY\n\nRUN apk add --no-cache --update git ca-certificates build-base bash util-linux setpriv perl xz\n\n# We are using libxcrypt to support yescrypt password hashing method\n# Since libxcrypt package is not available in Alpine, so we need to build libxcrypt from source code\nRUN wget -q https://github.com/besser82/libxcrypt/releases/download/v4.4.27/libxcrypt-4.4.27.tar.xz && \\\n    tar xvf libxcrypt-4.4.27.tar.xz && cd libxcrypt-4.4.27 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /usr && make -j$(nproc) && make install && \\\n    cd .. && rm -rf libxcrypt-4.4.27* && rm libxcrypt-4.4.27.tar.xz\n\nRUN ln -sf /bin/bash /bin/sh\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub\n\nCOPY ./go.mod ./\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub/agent\n\nCOPY ./agent/go.mod ./agent/go.sum ./\n\nRUN go mod download\n\n# builder stage\nFROM base AS builder\n\nARG SHELLHUB_VERSION=latest\nARG GOPROXY\n\nCOPY ./pkg $GOPATH/src/github.com/shellhub-io/shellhub/pkg\nCOPY ./agent .\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub\n\nRUN go mod download\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub/agent\n\nRUN go build -tags docker -ldflags \"-X main.AgentVersion=${SHELLHUB_VERSION}\"\n\n# development stage\nFROM base AS development\n\nARG GOPROXY\nENV GOPROXY ${GOPROXY}\n\nRUN apk add --no-cache --update openssl openssh-client\nRUN go install github.com/markbates/refresh@v1.11.1 && \\\n    go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.42.1\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub\n\nRUN go mod download\n\n#RUN cp -a $GOPATH/src/github.com/shellhub-io/shellhub/vendor /vendor\n\nCOPY ./agent/entrypoint-dev.sh /entrypoint.sh\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub/agent\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\n# production stage\nFROM alpine:3.16.0 AS production\n\nWORKDIR /app\nCOPY --from=builder /agent /app/\n\nENTRYPOINT ./agent\n"
}