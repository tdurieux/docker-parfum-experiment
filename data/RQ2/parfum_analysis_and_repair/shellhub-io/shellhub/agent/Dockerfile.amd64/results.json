{
  "startTime": 1674252691639,
  "endTime": 1674252692329,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18.2-alpine3.14\n\nARG SHELLHUB_VERSION=latest\n\nRUN apk add --no-cache --update git ca-certificates util-linux build-base bash setpriv perl xz\n\n# We are using libxcrypt to support yescrypt password hashing method\n# Since libxcrypt package is not available in Alpine, so we need to build libxcrypt from source code\nRUN wget -q https://github.com/besser82/libxcrypt/releases/download/v4.4.27/libxcrypt-4.4.27.tar.xz && \\\n    tar xvf libxcrypt-4.4.27.tar.xz && cd libxcrypt-4.4.27 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix /usr && make -j$(nproc) && make install && \\\n    cd .. && rm -rf libxcrypt-4.4.27* && rm libxcrypt-4.4.27.tar.xz\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub\n\nCOPY ./go.mod ./\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub/agent\n\nCOPY ./agent/go.mod ./agent/go.sum ./\n\nRUN go mod download\n\nCOPY ./pkg $GOPATH/src/github.com/shellhub-io/shellhub/pkg\nCOPY ./agent .\n\nRUN go mod download\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub/agent\n\nRUN GOOS=linux GOARCH=amd64 go build -tags docker -ldflags \"-X main.AgentVersion=${SHELLHUB_VERSION}\"\n\nFROM scratch\n\nCOPY --from=0 /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=0 /usr/bin/nsenter /usr/bin/\nCOPY --from=0 /usr/bin/setpriv /usr/bin/\nCOPY --from=0 /usr/lib/libcap-ng.so.* /usr/lib/\nCOPY --from=0 /lib/ld-musl-x86_64.so.1 /lib/\nCOPY --from=0 /usr/lib/libcrypt.so* /usr/lib/\nCOPY --from=0 /go/src/github.com/shellhub-io/shellhub/agent/agent /bin/agent\n\nENTRYPOINT [\"/bin/agent\"]\n"
}