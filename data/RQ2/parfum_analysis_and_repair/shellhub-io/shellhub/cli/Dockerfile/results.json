{
  "startTime": 1674252972247,
  "endTime": 1674252972782,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base stage\nFROM golang:1.18.2-alpine3.14 AS base\n\nRUN apk add --no-cache git ca-certificates\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub\n\nCOPY ./go.mod ./\nCOPY ./api/go.mod ./api/go.mod\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub/cli\n\nCOPY ./cli/go.mod ./cli/go.sum ./\n\nRUN go mod download\n\n# builder stage\nFROM base AS builder\n\nCOPY ./api $GOPATH/src/github.com/shellhub-io/shellhub/api\nCOPY ./pkg $GOPATH/src/github.com/shellhub-io/shellhub/pkg\nCOPY ./cli .\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub\n\nRUN go mod download\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub/cli\n\nRUN go build\n\n# development stage\nFROM base AS development\n\nRUN apk add --no-cache --update openssl build-base docker-cli\nRUN go install github.com/markbates/refresh@v1.11.1 && \\\n    go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.42.1\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub\n\nRUN go mod download\n\nCOPY ./cli/entrypoint-dev.sh /entrypoint.sh\n\nWORKDIR $GOPATH/src/github.com/shellhub-io/shellhub/cli\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\n# production stage\nFROM alpine:3.16.0 AS production\n\nCOPY --from=builder /go/src/github.com/shellhub-io/shellhub/cli/cli /cli\n\nENTRYPOINT /cli\n"
}