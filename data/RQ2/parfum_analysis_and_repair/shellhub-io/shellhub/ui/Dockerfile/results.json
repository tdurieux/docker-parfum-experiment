{
  "startTime": 1674250139274,
  "endTime": 1674250140342,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.13.1-alpine3.13 as base\n\nARG NPM_CONFIG_REGISTRY\n\nRUN apk add --no-cache --update build-base python3\n\nWORKDIR /app\n\nCOPY ui/package*.json ./\n\nRUN npm install && npm cache clean --force;\n\nFROM base as development\n\nARG NPM_CONFIG_REGISTRY\nENV NPM_CONFIG_REGISTRY ${NPM_CONFIG_REGISTRY}\n\nWORKDIR /src\n\nCOPY --from=base /app/node_modules /node_modules\n\nCOPY ui/scripts /scripts\n\nCMD [\"/scripts/entrypoint-dev.sh\"]\n\nFROM base as builder\n\nARG NPM_CONFIG_REGISTRY\n\nWORKDIR /app\n\nCOPY ui/. .\n\nCOPY --from=base /app/node_modules ./node_modules\n\nRUN npm run build\n\nFROM nginx:1.23.0-alpine as production\n\nRUN rm /etc/nginx/conf.d/default.conf\nCOPY ui/nginx.conf /etc/nginx/conf.d\n\nCOPY --from=builder /app/dist /usr/share/nginx/html\n\nCOPY ui/scripts /scripts\n\nCMD [\"/scripts/entrypoint.sh\"]\n"
}