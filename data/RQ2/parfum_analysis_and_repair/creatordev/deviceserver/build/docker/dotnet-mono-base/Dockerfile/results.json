{
  "startTime": 1674246208026,
  "endTime": 1674246209334,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 175
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:jessie\n\n# Install mono\nRUN apt-get update \\\n\t&& apt-get install --no-install-recommends -y curl wget \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n\n# This can hang on some systems ...\n#RUN apt-key adv --keyserver pgp.mit.edu --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\n\n# ... so we do this instead:\nADD key.txt /tmp\nRUN cat /tmp/key.txt | apt-key add -\n\nRUN echo \"deb http://download.mono-project.com/repo/debian wheezy main\" > /etc/apt/sources.list.d/mono-xamarin.list \\\n        && echo \"deb http://download.mono-project.com/repo/debian wheezy-libjpeg62-compat main\" | tee -a /etc/apt/sources.list.d/mono-xamarin.list \\\n        && apt-get update --fix-missing \\\n\t&& apt-get install --no-install-recommends -y mono-devel ca-certificates-mono fsharp mono-vbnc nuget \\\n        && rm -rf /var/lib/apt/lists/*\n\n# Install .NET Core dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        libc6 \\\n        libcurl3 \\\n        libgcc1 \\\n        libicu52 \\\n        liblttng-ust0 \\\n        libssl1.0.0 \\\n        libstdc++6 \\\n        libtinfo5 \\\n        libunwind8 \\\n        libuuid1 \\\n        zlib1g \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n# .NET runtime\n\n#RUN apt-get update \\\n#    && apt-get install -y --no-install-recommends \\\n#        ca-certificates \\\n#        curl \\\n#    && rm -rf /var/lib/apt/lists/*\n\n# Install .NET Core\n#ENV DOTNET_CORE_VERSION 1.0.0-rc2-3002702\n#RUN curl -SL https://dotnetcli.blob.core.windows.net/dotnet/beta/Binaries/$DOTNET_CORE_VERSION/dotnet-debian-x64.$DOTNET_CORE_VERSION.tar.gz --output dotnet.tar.gz \\\n#    && mkdir -p /usr/share/dotnet \\\n#    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n#    && rm dotnet.tar.gz \\\n#    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n\n# .NET Development\n\n# Work around https://github.com/dotnet/cli/issues/1582 until Docker releases a\n# fix (https://github.com/docker/docker/issues/20818). This workaround allows\n# the container to be run with the default seccomp Docker settings by avoiding\n# the restart_syscall made by LTTng which causes a failed assertion.\nENV LTTNG_UST_REGISTER_TIMEOUT 0\n\n\n# Install .NET CLI dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        clang-3.5 \\\n        libc6 \\\n        libcurl3 \\\n        libgcc1 \\\n        libicu52 \\\n        liblttng-ust0 \\\n        libssl1.0.0 \\\n        libstdc++6 \\\n        libtinfo5 \\\n        libunwind8 \\\n        libuuid1 \\\n        zlib1g \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install .NET Core SDK\nENV DOTNET_CORE_SDK_VERSION 1.0.0-preview1-002702\nRUN curl -f -SL https://dotnetcli.blob.core.windows.net/dotnet/beta/Binaries/$DOTNET_CORE_SDK_VERSION/dotnet-dev-debian-x64.$DOTNET_CORE_SDK_VERSION.tar.gz --output dotnet.tar.gz \\\n    && mkdir -p /usr/share/dotnet \\\n    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n    && rm dotnet.tar.gz \\\n    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n\n\nENV DOTNET_REFERENCE_ASSEMBLIES_PATH=/usr/lib/mono/xbuild-frameworks\n\n"
}