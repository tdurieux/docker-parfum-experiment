// Copyright 2018-2022 Polyaxon, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*
 * Polyaxon SDKs and REST API specification.
 * Polyaxon SDKs and REST API specification.
 *
 * The version of the OpenAPI document: 1.18.2
 * Contact: contact@polyaxon.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for V1DockerfileType
 */
public class V1DockerfileTypeTest {
    private final V1DockerfileType model = new V1DockerfileType();

    /**
     * Model tests for V1DockerfileType
     */
    @Test
    public void testV1DockerfileType() {
        // TODO: test V1DockerfileType
    }

    /**
     * Test the property 'image'
     */
    @Test
    public void imageTest() {
        // TODO: test image
    }

    /**
     * Test the property 'env'
     */
    @Test
    public void envTest() {
        // TODO: test env
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'copy'
     */
    @Test
    public void copyTest() {
        // TODO: test copy
    }

    /**
     * Test the property 'postRunCopy'
     */
    @Test
    public void postRunCopyTest() {
        // TODO: test postRunCopy
    }

    /**
     * Test the property 'run'
     */
    @Test
    public void runTest() {
        // TODO: test run
    }

    /**
     * Test the property 'langEnv'
     */
    @Test
    public void langEnvTest() {
        // TODO: test langEnv
    }

    /**
     * Test the property 'uid'
     */
    @Test
    public void uidTest() {
        // TODO: test uid
    }

    /**
     * Test the property 'gid'
     */
    @Test
    public void gidTest() {
        // TODO: test gid
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'filename'
     */
    @Test
    public void filenameTest() {
        // TODO: test filename
    }

    /**
     * Test the property 'workdir'
     */
    @Test
    public void workdirTest() {
        // TODO: test workdir
    }

    /**
     * Test the property 'workdirPath'
     */
    @Test
    public void workdirPathTest() {
        // TODO: test workdirPath
    }

    /**
     * Test the property 'shell'
     */
    @Test
    public void shellTest() {
        // TODO: test shell
    }

}