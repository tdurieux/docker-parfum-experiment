{
  "startTime": 1674253989749,
  "endTime": 1674253990336,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile attempts to install dependencies, run the tests and build the pocket-core binary\n# The result of this Dockerfile will put the pocket-core executable in the $GOBIN/bin, which in turn\n# is part of the $PATH\n\n# Dynamically pull Go-lang version for the image\nARG GOLANG_IMAGE_VERSION=golang:1.13-alpine\n\n# First build step to build the app binary\nFROM ${GOLANG_IMAGE_VERSION} AS builder\n\n# Install dependencies\nRUN apk -v --update --no-cache add \\\n\tcurl \\\n\tgit \\\n\tpython \\\n\tpy-pip \\\n\tgroff \\\n\tless \\\n\tmailcap \\\n\tgcc \\\n\tlibc-dev \\\n\tbash  \\\n\tleveldb-dev && \\\n\tpip install --no-cache-dir --upgrade --no-cache awscli s3cmd python-magic && \\\n\tapk -v --purge del py-pip && \\\n\trm /var/cache/apk/* || true\n\n# Environment and system dependencies setup\nENV POCKET_PATH=/go/src/github.com/pokt-network/pocket-core/\nENV GO111MODULE=\"on\"\n\n# Create node root directory\nRUN mkdir -p ${POCKET_PATH}\nWORKDIR $POCKET_PATH\n\n# Creating the BRANCH_NAME variable\nARG BRANCH_NAME=\"RC-0.3.0\"\n\n# Clone the repository\nRUN git clone --branch ${BRANCH_NAME} https://github.com/pokt-network/pocket-core.git ${POCKET_PATH}\n\n# Install rest of source code\nCOPY . .\n\n# Install project dependencies and builds the binary\nRUN go build -tags cleveldb -o ${GOBIN}/bin/pocket ./app/cmd/pocket_core/main.go\n\n# Second build step: reduce image size to only use app binary\nFROM alpine:3.10\n\nCOPY --from=builder /bin/pocket /bin/pocket\nRUN apk add --update --no-cache expect bash leveldb-dev\n\n# Create app user and add permissions\nRUN addgroup -S app \\\n\t&& adduser -S -G app app\nRUN chown -R app /bin/pocket  && mkdir -p /home/app/.pocket/config\nRUN chown -R app /home/app/.pocket\nUSER app\n\n\n"
}