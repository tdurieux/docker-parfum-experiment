diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blockchain-certificates/cert-issuer/Dockerfile.web.tls b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blockchain-certificates/cert-issuer/Dockerfile.web.tls/repaired.Dockerfile
index 1f5bb81..ff31b1e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blockchain-certificates/cert-issuer/Dockerfile.web.tls
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blockchain-certificates/cert-issuer/Dockerfile.web.tls/repaired.Dockerfile
@@ -3,7 +3,7 @@ maintainer yancy ribbens "yribbens@credly.com"
 
 VOLUME /home/.bitcoin
 
-RUN apt-get update -qq && apt-get install -y git \
+RUN apt-get update -qq && apt-get install --no-install-recommends -y git \
 	wget \
 	build-essential \
 	libtool \
@@ -30,7 +30,7 @@ RUN apt-get update -qq && apt-get install -y git \
 	python-pip \
 	python-dev \
 	nginx \
-	apache2-utils
+	apache2-utils && rm -rf /var/lib/apt/lists/*;
 
 # Checkout bitcoin source
 RUN mkdir /bitcoin-source
@@ -38,8 +38,8 @@ WORKDIR /bitcoin-source
 RUN git clone https://github.com/bitcoin/bitcoin.git
 
 # Install Berkley Database
-RUN wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz
-RUN tar -xvf db-4.8.30.NC.tar.gz
+RUN wget https://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz
+RUN tar -xvf db-4.8.30.NC.tar.gz && rm db-4.8.30.NC.tar.gz
 WORKDIR /bitcoin-source/db-4.8.30.NC/build_unix
 RUN mkdir -p build
 RUN BDB_PREFIX=$(pwd)/build
@@ -50,7 +50,7 @@ RUN make install
 WORKDIR /bitcoin-source/bitcoin
 RUN git checkout tags/v0.16.3
 RUN ./autogen.sh
-RUN ./configure CPPFLAGS="-I${BDB_PREFIX}/include/ -O2" LDFLAGS="-L${BDB_PREFIX}/lib/" --without-gui
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CPPFLAGS="-I${BDB_PREFIX}/include/ -O2" LDFLAGS="-L${BDB_PREFIX}/lib/" --without-gui
 RUN make
 RUN make install
 
@@ -78,8 +78,8 @@ COPY $CRT /etc/ssl/certs/$CRT
 COPY $KEY /etc/ssl/private/$KEY
 RUN mkdir -p /etc/cert-issuer/
 WORKDIR /cert-issuer
-RUN pip3 install cert-issuer
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir cert-issuer
+RUN pip3 install --no-cache-dir -r requirements.txt
 RUN sed -i.bak "s/<issuing-address>/$ISSUER/g" /etc/cert-issuer/conf.ini
 
 # configure wsgi
@@ -89,7 +89,7 @@ RUN uwsgi --build-plugin "/usr/src/uwsgi/plugins/python python36"
 RUN cp /root/python36_plugin.so /cert-issuer
 RUN chmod 644 /cert-issuer/python36_plugin.so
 RUN virtualenv -p python3 venv
-RUN pip3 install uwsgi flask
+RUN pip3 install --no-cache-dir uwsgi flask
 
 # configure nginx
 ARG SERVER=<server-name>