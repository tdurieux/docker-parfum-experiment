diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blockchain-certificates/cert-issuer/Dockerfile.web b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blockchain-certificates/cert-issuer/Dockerfile.web/repaired.Dockerfile
index 9d7fc0e..2083002 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/blockchain-certificates/cert-issuer/Dockerfile.web
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/blockchain-certificates/cert-issuer/Dockerfile.web/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM ubuntu:18.04
 maintainer yancy ribbens "yribbens@credly.com"
 
-RUN apt-get update -qq && apt-get install -y git wget build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 libboost-all-dev libminiupnpc-dev libzmq3-dev python3-pip locales vim python3.6 python3.6-dev uwsgi uwsgi-src uuid-dev libcap-dev libpcre3-dev python-pip python-dev nginx netcat
+RUN apt-get update -qq && apt-get install --no-install-recommends -y git wget build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3 libboost-all-dev libminiupnpc-dev libzmq3-dev python3-pip locales vim python3.6 python3.6-dev uwsgi uwsgi-src uuid-dev libcap-dev libpcre3-dev python-pip python-dev nginx netcat && rm -rf /var/lib/apt/lists/*;
 
 # Checkout bitcoin source
 RUN mkdir /bitcoin-source
@@ -9,8 +9,8 @@ WORKDIR /bitcoin-source
 RUN git clone https://github.com/bitcoin/bitcoin.git
 
 # Install Berkley Database
-RUN wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz
-RUN tar -xvf db-4.8.30.NC.tar.gz
+RUN wget https://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz
+RUN tar -xvf db-4.8.30.NC.tar.gz && rm db-4.8.30.NC.tar.gz
 WORKDIR /bitcoin-source/db-4.8.30.NC/build_unix
 RUN mkdir -p build
 RUN BDB_PREFIX=$(pwd)/build
@@ -21,7 +21,7 @@ RUN make install
 WORKDIR /bitcoin-source/bitcoin
 RUN git checkout tags/v0.16.3
 RUN ./autogen.sh
-RUN ./configure CPPFLAGS="-I${BDB_PREFIX}/include/ -O2" LDFLAGS="-L${BDB_PREFIX}/lib/" --without-gui
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CPPFLAGS="-I${BDB_PREFIX}/include/ -O2" LDFLAGS="-L${BDB_PREFIX}/lib/" --without-gui
 RUN make
 RUN make install
 
@@ -45,8 +45,8 @@ COPY . /cert-issuer
 COPY conf_regtest.ini /etc/cert-issuer/conf.ini
 RUN mkdir -p /etc/cert-issuer/
 WORKDIR /cert-issuer
-RUN pip3 install cert-issuer
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir cert-issuer
+RUN pip3 install --no-cache-dir -r requirements.txt
 RUN sed -i.bak "s/<issuing-address>/$ISSUER/g" /etc/cert-issuer/conf.ini
 
 # configure wsgi
@@ -56,7 +56,7 @@ RUN uwsgi --build-plugin "/usr/src/uwsgi/plugins/python python36"
 RUN cp /root/python36_plugin.so /cert-issuer
 RUN chmod 644 /cert-issuer/python36_plugin.so
 RUN virtualenv -p python3 venv
-RUN pip3 install uwsgi flask
+RUN pip3 install --no-cache-dir uwsgi flask
 
 # configure nginx
 ARG SERVER=<server-name>