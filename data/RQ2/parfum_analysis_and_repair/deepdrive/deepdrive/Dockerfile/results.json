{
  "startTime": 1674256167366,
  "endTime": 1674256168387,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 9,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 34,
        "columnStart": 20,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Requires NVIDIA drivers 390+\n#\n# Build (automated on dockerhub, so just use for local testing, don't push):\n#\n# Local usage: See Makefile\n#\n# VERSION=`cat VERSION | sed 's/ //g'`\n# docker build --build-arg version=$VERSION -t deepdriveio/deepdrive:$VERSION -f Dockerfile .\n#\n# Usage:\n# VERSION=`cat VERSION | sed 's/ //g\n# docker run -it --net=host --runtime=nvidia deepdriveio/deepdrive:$VERSION\n\n# Ubuntu 18\nFROM adamrehn/ue4-runtime:tensorflow-virtualgl\n\n#FROM nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04\n# For Ubuntu 16 also install\n# python-software-properties\n\nARG update_sim=True\nUSER root\n\n# OS dependencies\nRUN apt-get update; apt-get install --no-install-recommends -y \\\n        libsdl2-2.0 \\\n        software-properties-common \\\n        sudo \\\n#        python3-venv \\\n        python3-pip \\\n        python3-dev \\\n        ffmpeg \\\n        git \\\n        vim \\\n        wget \\\n      && cd /usr/local/bin \\\n      && ln -s /usr/bin/python3 python \\\n      && pip3 install --no-cache-dir --upgrade pip \\\n      && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Give the ue4 user the ability to install pip packages\nARG user=ue4\nENV DEEPDRIVE_USER=$user\n#RUN chown -R $user:$user /home/$user\nRUN adduser $user sudo\nRUN echo \"$user ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n\n# Ensure ue4 owns directories needed to run Deepdrive\n#RUN sudo chown -R $user:$user /home/$user\nENV DEEPDRIVE_SRC_DIR=/home/$user/src/deepdrive\nWORKDIR $DEEPDRIVE_SRC_DIR\n#RUN sudo chown -R $user:$user .\n#RUN sudo chmod -R 775 /home/$user\n\n# Create our virtual environment\n#ARG venv=deepdrive_venv\n#RUN python -m venv /home/$user/$venv\n#ENV VIRTUAL_ENV /home/$user/$venv\n#ENV PATH /home/$user/$venv/bin:$PATH\nRUN which pip\n\n# Get the latest pip within the virtual environment\nRUN pip install --no-cache-dir --upgrade pip\nRUN which pip\n\n# Install tensorflow\nRUN pip install --no-cache-dir tensorflow-gpu\n\n# Install OpenCV for web renderer\nRUN pip install --no-cache-dir opencv-python\n\n# Nice to have ipython in the container for bashing in\nRUN pip install --no-cache-dir ipython\n\n# Set Deepdrive directory so that we are not prompted to enter it interactively\nENV DEEPDRIVE_DIR=/home/$user/Deepdrive\n\n# Cache pip requirements\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir -r requirements.txt\n\nUSER $user\n\n# Copy minimum files needed for sim download\nCOPY config/ ./config/\nCOPY util/anonymize.py ./util/anonymize.py\nCOPY util/run_command.py ./util/run_command.py\nCOPY util/download.py ./util/download.py\nCOPY util/ensure_sim.py ./util/ensure_sim.py\nCOPY util/get_directories.py ./util/get_directories.py\nCOPY VERSION logs.py ./\n\n# Download sim\nRUN python -c \"from util.ensure_sim import ensure_sim; ensure_sim(update=$update_sim);\"\n\n# Install\nCOPY install.py ./\nUSER root\nRUN python -u install.py\nUSER $user\n\n# Commands useful for debugging\n#ENV PYTHONPATH=/home/$user/src/deepdrive:$PYTHONPATH\n#RUN which pip\n#RUN pip install wheel\n#RUN pip install \"deepdrive > $version.*dev0\" # TODO: Remove dev0 after 3.0 stable release\n#RUN pip install sarge\n#RUN pip install -r requirements.txt\n#COPY logs.py utils.py install.py ./\n\n\n# LibSDL2 offscreen opengl mode\nENV SDL_VIDEODRIVER=offscreen\n\n# API\nEXPOSE 5557/tcp\n\nCOPY . .\n\n#ENTRYPOINT [\"/bin/bash\", \"docker/entrypoint.bash\"]\nCMD python main.py --server\n\n\n# TODO: Support\n# 1) Eval\n# 2) Experiement\n# 3) CI"
}