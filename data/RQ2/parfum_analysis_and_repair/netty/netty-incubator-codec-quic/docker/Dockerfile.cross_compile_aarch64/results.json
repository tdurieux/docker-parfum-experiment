{
  "startTime": 1674255368031,
  "endTime": 1674255369211,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 2,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.6.1810\n\nARG GCC_VERSION=10.2-2020.11\nENV SOURCE_DIR /root/source\nENV WORKSPACE_DIR /root/workspace\nENV PROJECT_DIR /root/workspace/project\n\n# We want to have git 2.x for the maven scm plugin and also for boringssl\nRUN yum install -y http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm && rm -rf /var/cache/yum\n\nRUN yum -y install epel-release && rm -rf /var/cache/yum\n\n# Install requirements\nRUN yum install -y \\\n apr-devel \\\n autoconf \\\n automake \\\n bzip2 \\\n git \\\n glibc-devel \\\n golang \\\n gnupg \\\n libtool \\\n lsb-core \\\n ninja-build \\\n make \\\n perl \\\n tar \\\n unzip \\\n wget && rm -rf /var/cache/yum\n\n\nRUN mkdir $SOURCE_DIR\nWORKDIR $SOURCE_DIR\n\n# Install Java\nRUN yum install -y java-1.8.0-openjdk-devel golang && rm -rf /var/cache/yum\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk/\"\n\n# Install aarch64 gcc 10.2 toolchain\nRUN wget https://developer.arm.com/-/media/Files/downloads/gnu-a/$GCC_VERSION/binrel/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && \\\n  tar xvf gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && mv gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu /opt/ && rm gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz\nENV PATH=\"/opt/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu/bin:${PATH}\"\n\n# Install CMake\nRUN yum install -y cmake3 && ln -s /usr/bin/cmake3 /usr/bin/cmake && rm -rf /var/cache/yum\n\n# install rust and setup PATH and install correct toolchain\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\nENV PATH=\"$HOME/.cargo/bin:${PATH}\"\nRUN /root/.cargo/bin/rustup target add aarch64-unknown-linux-gnu\n\n# Setup the correct linker\nRUN echo '[target.aarch64-unknown-linux-gnu]' >> /root/.cargo/config\nRUN echo 'linker = \"aarch64-none-linux-gnu-gcc\"' >> /root/.cargo/config\n\nWORKDIR /opt\nRUN curl -f https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | tar -xz\nRUN echo 'PATH=/opt/apache-maven-3.6.3/bin/:$PATH' >> ~/.bashrc\n\n# Prepare our own build\nENV PATH /opt/apache-maven-3.6.3/bin/:$PATH"
}