{
  "startTime": 1674253718567,
  "endTime": 1674253719404,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 285
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 267
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 94
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 2,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7.6.1810\n\nARG gcc_version=10.2-2020.11\nARG openssl_version=1_1_1d\nARG apr_version=1.6.5\nENV SOURCE_DIR /root/source\nENV GCC_VERSION $gcc_version\nENV OPENSSL_VERSION $openssl_version\nENV APR_VERSION $apr_version\n\n# We want to have git 2.x for the maven scm plugin and also for boringssl\nRUN yum install -y http://opensource.wandisco.com/centos/6/git/x86_64/wandisco-git-release-6-1.noarch.rpm && rm -rf /var/cache/yum\n\n# Install requirements\nRUN set -x && \\\n  yum -y install epel-release && \\\n  yum -y install wget tar git make autoconf automake libtool openssl-devel ninja-build gcc-c++ && rm -rf /var/cache/yum\n\n# Install Java\nRUN yum install -y java-1.8.0-openjdk-devel golang && rm -rf /var/cache/yum\nENV JAVA_HOME=\"/usr/lib/jvm/java-1.8.0-openjdk/\"\n\n# Install aarch64 gcc 10.2 toolchain\nRUN set -x && \\\n  wget https://developer.arm.com/-/media/Files/downloads/gnu-a/$GCC_VERSION/binrel/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && \\\n  tar xvf gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz && rm gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu.tar.xz\nENV PATH=\"/gcc-arm-$GCC_VERSION-x86_64-aarch64-none-linux-gnu/bin:${PATH}\"\n\n# Install CMake\nRUN yum install -y cmake3 && ln -s /usr/bin/cmake3 /usr/bin/cmake && rm -rf /var/cache/yum\n\n# Cross compile Apache Apr for aarch64 - static\nRUN set -x && \\\n  wget https://downloads.apache.org//apr/apr-$APR_VERSION.tar.gz && \\\n  tar xvf apr-$APR_VERSION.tar.gz && \\\n  pushd apr-$APR_VERSION && \\\n  CC=aarch64-none-linux-gnu-gcc CFLAGS='-O3 -fno-omit-frame-pointer -fPIC' ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-shared --prefix=/opt/apr-$APR_VERSION-static --host=aarch64-none-linux-gnu ac_cv_file__dev_zero=yes ac_cv_func_setpgrp_void=yes apr_cv_tcp_nodelay_with_cork=yes ac_cv_sizeof_struct_iovec=8 && \\\n  make || true && \\\n  pushd tools && \\\n  gcc -Wall -O2 -DCROSS_COMPILE gen_test_char.c -s -o gen_test_char && \\\n  popd && \\\n  make && make install && \\\n  popd && rm apr-$APR_VERSION.tar.gz\n\n# Cross compile Apache Apr for aarch64 - share\nRUN set -x && \\\n  wget https://downloads.apache.org//apr/apr-$APR_VERSION.tar.gz && \\\n  tar xvf apr-$APR_VERSION.tar.gz && \\\n  pushd apr-$APR_VERSION && \\\n  CC=aarch64-none-linux-gnu-gcc CFLAGS='-O3 -fno-omit-frame-pointer -fPIC' ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/apr-$APR_VERSION-share --host=aarch64-none-linux-gnu ac_cv_file__dev_zero=yes ac_cv_func_setpgrp_void=yes apr_cv_tcp_nodelay_with_cork=yes ac_cv_sizeof_struct_iovec=8 && \\\n  make || true && \\\n  pushd tools && \\\n  gcc -Wall -O2 -DCROSS_COMPILE gen_test_char.c -s -o gen_test_char && \\\n  popd && \\\n  make && make install && \\\n  popd && rm apr-$APR_VERSION.tar.gz\n\n# Cross compile OpenSSL for aarch64 - share\nRUN set -x && \\\n  wget https://github.com/openssl/openssl/archive/OpenSSL_$OPENSSL_VERSION.tar.gz && \\\n  tar xvf OpenSSL_$OPENSSL_VERSION.tar.gz && \\\n  pushd openssl-OpenSSL_$OPENSSL_VERSION && \\\n  ./Configure linux-aarch64 --cross-compile-prefix=aarch64-none-linux-gnu- --prefix=/opt/openssl-$OPENSSL_VERSION-share shared && \\\n  make && make install && \\\n  popd && rm OpenSSL_$OPENSSL_VERSION.tar.gz\n\nWORKDIR /opt\nRUN curl -f https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | tar -xz\nRUN echo 'PATH=/opt/apache-maven-3.6.3/bin/:$PATH' >> ~/.bashrc\n\n# Prepare our own build\nENV PATH /opt/apache-maven-3.6.3/bin/:$PATH"
}