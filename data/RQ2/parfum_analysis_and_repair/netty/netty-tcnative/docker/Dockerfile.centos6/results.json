{
  "startTime": 1674250618187,
  "endTime": 1674250619320,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 4
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 86,
        "columnEnd": 126
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 151,
        "columnEnd": 200
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6.10\n\nENV SOURCE_DIR /root/source\nENV CMAKE_VERSION_BASE 3.8\nENV CMAKE_VERSION $CMAKE_VERSION_BASE.2\nENV NINJA_VERSION 1.7.2\nENV GO_VERSION 1.9.3\n\n# Update as we need to use the vault now.\nRUN sed -i -e 's/^mirrorlist/#mirrorlist/g' -e 's/^#baseurl=http:\\/\\/mirror.centos.org\\/centos\\/$releasever\\//baseurl=https:\\/\\/linuxsoft.cern.ch\\/centos-vault\\/\\/6.10\\//g' /etc/yum.repos.d/CentOS-Base.repo\n\n# install dependencies\nRUN yum install -y \\\n apr-devel \\\n autoconf \\\n automake \\\n bzip2 \\\n git \\\n glibc-devel \\\n gnupg \\\n libapr1-dev \\\n libtool \\\n lsb-core \\\n make \\\n openssl-devel \\\n perl \\\n tar \\\n unzip \\\n wget \\\n zip && rm -rf /var/cache/yum\n\nRUN mkdir $SOURCE_DIR\nWORKDIR $SOURCE_DIR\n\nRUN wget -q https://github.com/ninja-build/ninja/releases/download/v$NINJA_VERSION/ninja-linux.zip && unzip ninja-linux.zip && mkdir -p /opt/ninja-$NINJA_VERSION/bin && mv ninja /opt/ninja-$NINJA_VERSION/bin && echo 'PATH=/opt/ninja-$NINJA_VERSION/bin:$PATH' >> ~/.bashrc\nRUN wget -q https://storage.googleapis.com/golang/go$GO_VERSION.linux-amd64.tar.gz && tar zxf go$GO_VERSION.linux-amd64.tar.gz && mv go /opt/ && echo 'PATH=/opt/go/bin:$PATH' >> ~/.bashrc && echo 'export GOROOT=/opt/go/' >> ~/.bashrc && rm go$GO_VERSION.linux-amd64.tar.gz\nRUN curl -f -s https://cmake.org/files/v$CMAKE_VERSION_BASE/cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz --output cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz && tar zvxf cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz && mv cmake-$CMAKE_VERSION-Linux-x86_64 /opt/ && echo 'PATH=/opt/cmake-$CMAKE_VERSION-Linux-x86_64/bin:$PATH' >> ~/.bashrc && rm cmake-$CMAKE_VERSION-Linux-x86_64.tar.gz\n\nRUN yum install -y centos-release-scl && rm -rf /var/cache/yum\n# Update repository urls as we need to use the vault now.\nRUN sed -i -e 's/^mirrorlist/#mirrorlist/g' -e 's/^# baseurl=http:\\/\\/mirror.centos.org\\/centos\\/6\\//baseurl=https:\\/\\/vault.centos.org\\/centos\\/6\\//g' /etc/yum.repos.d/CentOS-SCLo-scl.repo\nRUN sed -i -e 's/^mirrorlist/#mirrorlist/g' -e 's/^#baseurl=http:\\/\\/mirror.centos.org\\/centos\\/6\\//baseurl=https:\\/\\/vault.centos.org\\/centos\\/6\\//g' /etc/yum.repos.d/CentOS-SCLo-scl-rh.repo\n\nRUN yum -y install devtoolset-7-gcc devtoolset-7-gcc-c++ && rm -rf /var/cache/yum\nRUN echo 'source /opt/rh/devtoolset-7/enable' >> ~/.bashrc\n\nRUN rm -rf $SOURCE_DIR\n\n# Downloading and installing SDKMAN!\nRUN curl -f -s \"https://get.sdkman.io\" | bash\n\nARG java_version=\"8.0.302-zulu\"\nENV JAVA_VERSION $java_version\n\n# Installing Java removing some unnecessary SDKMAN files\nRUN bash -c \"source $HOME/.sdkman/bin/sdkman-init.sh && \\\n    yes | sdk install java $JAVA_VERSION && \\\n    rm -rf $HOME/.sdkman/archives/* && \\\n    rm -rf $HOME/.sdkman/tmp/*\"\n\nRUN echo 'export JAVA_HOME=\"/root/.sdkman/candidates/java/current\"' >> ~/.bashrc\nRUN echo 'PATH=$JAVA_HOME/bin:$PATH' >> ~/.bashrc\n\nWORKDIR /opt\nRUN curl -f https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz | tar -xz\nRUN echo 'PATH=/opt/apache-maven-3.6.3/bin/:$PATH' >> ~/.bashrc\n\n# Prepare our own build\nENV PATH /opt/apache-maven-3.6.3/bin/:$PATH\nENV JAVA_HOME /jdk/\n\n# This is workaround to be able to compile boringssl with -DOPENSSL_C11_ATOMIC as while we use a recent gcc installation it still needs some\n# help to define static_assert(...) as otherwise the compilation will fail due the system installed assert.h which missed this definition.\nRUN mkdir ~/.include\nRUN echo '#include \"/usr/include/assert.h\"' >>  ~/.include/assert.h\nRUN echo '#define static_assert _Static_assert'  >>  ~/.include/assert.h\nRUN echo 'export C_INCLUDE_PATH=\"$HOME/.include/\"' >>  ~/.bashrc\n"
}