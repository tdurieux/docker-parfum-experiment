{
  "startTime": 1674252953410,
  "endTime": 1674252954195,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 32,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 51,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 32,
        "columnEnd": 57
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 61,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:18\n\n# Pre-requisite distro deps, and build env setup\nRUN apt-get --yes update && apt-get --yes install findutils bash vim build-essential curl python3-venv python3-dev --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /src\n\n# Install Cloud Custodian\nRUN python3 -m venv custodian\nRUN . custodian/bin/activate && pip install --no-cache-dir c7n && pip install --no-cache-dir c7n-org\nRUN . custodian/bin/activate && pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir c7n_gcp\n\n# SET CUSTODIAN envirnomet variables\nENV C8R_CUSTODIAN=\"/src/custodian/bin/custodian\"\nENV C8R_CUSTODIAN_ORG=\"/src/custodian/bin/c7n-org\"\nENV PATH=\"$PATH:/src/custodian/bin\"\n\n# Create app directory\nWORKDIR /src/c8r-cli\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install && npm cache clean --force;\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nRUN npm run build\nRUN npm link\n"
}