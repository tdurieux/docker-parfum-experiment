{
  "startTime": 1674217112422,
  "endTime": 1674217113451,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8.12-alpine3.13\n\nCOPY [\"rss\", \"rss\"]\nCOPY [\"cert\", \"cert\"]\n\n# Install required packages\nRUN apk add --no-cache \\\n        boost-system \\\n        boost-thread \\\n        ca-certificates \\\n        dumb-init \\\n        libressl \\\n        qt5-qtbase\n\n# Compiling qBitTorrent following instructions on\n# https://github.com/qbittorrent/qBittorrent/wiki/Compiling-qBittorrent-on-Debian-and-Ubuntu#Libtorrent\nRUN set -x \\\n    # Install build dependencies\n && apk add --no-cache -t .build-deps \\\n        boost-dev \\\n        curl \\\n        cmake \\\n        g++ \\\n        make \\\n        libressl-dev \\\n    # Build lib rasterbar from source code (required by qBittorrent)\n    # Until https://github.com/qbittorrent/qBittorrent/issues/6132 is fixed, need to use version 1.0.*\n && LIBTORRENT_RASTERBAR_URL=\"https://github.com/arvidn/libtorrent/releases/download/v2.0.5/libtorrent-rasterbar-2.0.5.tar.gz\" \\\n && mkdir /tmp/libtorrent-rasterbar \\\n && curl -f -sSL $LIBTORRENT_RASTERBAR_URL | tar xzC /tmp/libtorrent-rasterbar \\\n && cd /tmp/libtorrent-rasterbar/* \\\n && mkdir build \\\n && cd build \\\n && cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_STANDARD=17 -UCMAKE_INSTALL_LIBDIR -DCMAKE_INSTALL_LIBDIR=lib .. \\\n && make install \\\n    # Clean-up\n && cd / \\\n && apk del --purge .build-deps \\\n && rm -rf /tmp/*\n\nRUN set -x \\\n    # Install build dependencies\n && apk add --no-cache -t .build-deps \\\n        boost-dev \\\n        g++ \\\n        git \\\n        make \\\n        libressl-dev \\\n        qt5-qttools-dev \\\n    # Build qBittorrent from source code\n && git clone https://github.com/qbittorrent/qBittorrent.git /tmp/qbittorrent \\\n && cd /tmp/qbittorrent \\\n && git checkout release-4.4.0 \\\n    # Compile \\\n && PKG_CONFIG_PATH=/usr/local/lib/pkgconfig ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-gui --disable-stacktrace CXXFLAGS=\"-std=c++17\" \\\n && make install \\\n    # Clean-up\n && cd / \\\n && apk del --purge .build-deps \\\n && rm -rf /tmp/* \\\n    # Add non-root user\n && adduser -S -D -u 520 -g 520 -s /sbin/nologin qbittorrent \\\n    # Create symbolic links to simplify mounting\n && mkdir -p /home/qbittorrent/.config/qBittorrent \\\n && mkdir -p /home/qbittorrent/.local/share/data/qBittorrent \\\n && mkdir /downloads \\\n && chmod go+rw -R /home/qbittorrent /downloads \\\n && ln -s /home/qbittorrent/.config/qBittorrent /config \\\n && ln -s /home/qbittorrent/.local/share/data/qBittorrent /torrents \\\n && mkdir /scan && mkdir /scan/1 && mkdir /scan/2 && mkdir /scan/3 \\\n    # Check it works\n && su qbittorrent -s /bin/sh -c 'qbittorrent-nox -v'\n\n# Default configuration file.\nCOPY qBittorrent.conf /default/qBittorrent.conf\nCOPY entrypoint.sh /\n\nENV HOME=/home/qbittorrent\n\nUSER qbittorrent\n\nEXPOSE 8080 6881\n\nVOLUME /data\n\nENTRYPOINT [\"dumb-init\", \"/entrypoint.sh\"]\nCMD [\"qbittorrent-nox\"]\n"
}