{
  "startTime": 1674249691889,
  "endTime": 1674249692675,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedDockerfile": "# XXX: build-arg\nARG DEVBASE\nARG BASE\nFROM ${DEVBASE} as build-stage\n\nARG BUILD_TYPE\n\nADD . /src\n\nRUN BUILD_TYPE=${BUILD_TYPE} /src/hack/build-internal.sh package\n\nFROM ${DEVBASE} as dev-stage\n\nRUN --mount=target=/var/lib/apt/lists,type=cache,sharing=private \\\n    --mount=target=/var/cache/apt,type=cache,sharing=private \\\n    --mount=target=/build-root,source=/src/build-root,from=build-stage,type=bind \\\n    apt-get install --no-install-recommends -yy \\\n    /build-root/upf-plugin_*.deb \\\n    /build-root/upf-plugin-dev_*.deb && \\\n    apt-get clean && \\\n    mkdir -p /install && \\\n    cp -av /build-root/*.deb /install && \\\n    git config --global --add safe.directory /src && rm -rf /var/lib/apt/lists/*;\n\n# this stage is used to copy out the debs\nFROM scratch as artifacts\n\nCOPY --from=build-stage /src/build-root/*.deb .\n\n# final image starts here\nFROM ${BASE} as final-stage\n\nRUN --mount=target=/var/lib/apt/lists,type=cache,sharing=private \\\n    --mount=target=/var/cache/apt,type=cache,sharing=private \\\n    --mount=target=/debs,source=/src/build-root,from=build-stage,type=bind \\\n    apt-get install --no-install-recommends -yy \\\n    /debs/upf-plugin_*.deb && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n"
}