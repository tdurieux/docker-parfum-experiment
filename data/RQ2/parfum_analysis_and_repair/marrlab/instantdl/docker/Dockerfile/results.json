{
  "startTime": 1674254472546,
  "endTime": 1674254473365,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for the Face Detection Service\n\n# Use an official Python runtime as a parent image\nFROM tensorflow/tensorflow:1.14.0-gpu-py3\n\n# Set the working directory to /app\nWORKDIR /app\n\n# Update Linux package lists\nRUN apt-get update\n\n# Install build tools (gcc etc.)\nRUN apt-get install --no-install-recommends -y build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Install ops tools\nRUN apt-get install --no-install-recommends -y procps vim && rm -rf /var/lib/apt/lists/*;\n\n# Install any needed packages specified in requirements.txt\nRUN pip install --no-cache-dir h5py==2.9.0\n#RUN pip install hdf5==1.10.4\nRUN pip install --no-cache-dir imageio==2.6.1\nRUN pip install --no-cache-dir keras==2.2.4\nRUN pip install --no-cache-dir matplotlib==3.1.1\nRUN pip install --no-cache-dir numpy==1.16.4\nRUN pip install --no-cache-dir pandas==1.0.3\nRUN pip install --no-cache-dir scikit-image==0.15.0\nRUN pip install --no-cache-dir scikit-learn==0.21.3\nRUN pip install --no-cache-dir scipy==1.3.0\n\n# Copy the current directory contents into the container at /app\nCOPY . /app\nRUN pwd\n\nRUN python setup.py install\n\n# compile in a version label so we always can find the source in git\nARG VERSION=unspecified\nLABEL instantdl.version=$VERSION\n\n# Make port 80 available to the world outside this container\nEXPOSE 80\n\n# Define environment variable\n# @TODO: add GPU and cudatoolkit\nENV PYTHONUNBUFFERED TRUE\nENV INSTANT_DL_CONFIG /data/config.json\nENV NUM_WORKER 4\n\n# Run InstantDL code\nCMD [\"python\", \"instantdl/main.py\", \"--config\", \"/data/config.json\"]"
}