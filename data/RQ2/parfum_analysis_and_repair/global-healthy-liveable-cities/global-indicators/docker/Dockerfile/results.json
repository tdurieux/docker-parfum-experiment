{
  "startTime": 1674248369145,
  "endTime": 1674248370178,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##############################################################################\n# Build an image from the dockerfile:\n# >>> docker build -t globalhealthyliveablecities/global-indicators:latest .\n#\n# Run bash in this container and export final conda environment to a yml file:\n# >>> docker run --rm -it -v \"%cd%\":/home/jovyan/work globalhealthyliveablecities/global-indicators /bin/bash\n# >>> conda env export -n base > /home/jovyan/work/environment.yml\n#\n# Push to docker hub\n# docker login\n# docker tag globalhealthyliveablecities/global-indicators globalhealthyliveablecities/global-indicators:latest\n# docker push globalhealthyliveablecities/global-indicators\n#\n# Run jupyter lab in this container:\n# >>> docker run --rm -it -p 8888:8888 -v \"%cd%\":/home/jovyan/work globalhealthyliveablecities/global-indicators\n#\n# Stop/delete all local docker containers/images:\n# >>> docker stop $(docker ps -aq)\n# >>> docker rm $(docker ps -aq)\n# >>> docker rmi $(docker images -q) --force\n##############################################################################\n\nFROM continuumio/miniconda3\nLABEL maintainer=\"Global Healthy Liveable City Indicator Study Collaboration Group\"\nLABEL url=\"https://github.com/global-healthy-liveable-cities/global-indicators\"\n\nCOPY requirements.txt /tmp/\n\n# add root/bin to path so that tex commands can be run from container\nENV PATH=$PATH:/root/bin\n\n# configure conda and install packages in one RUN to keep image tidy\nRUN conda config --set show_channel_urls true && \\\n\tconda config --set channel_priority strict && \\\n    conda config --prepend channels conda-forge && \\\n    conda update --yes -n base conda && \\\n    conda install --update-all --force-reinstall --yes --file /tmp/requirements.txt && \\\n    conda clean --all --yes && \\\n    conda info --all && \\\n    conda list && \\\n    # install tools for using OpenStreetMap\n    apt-get update && apt-get install --no-install-recommends -y osm2pgsql osmctools && \\\n    # Install tinytex, a minimal TeX distribution for making pdf documentation\n    apt-get update && apt-get install --no-install-recommends -y perl wget libfontconfig1 && \\\n    wget -qO- \"https://yihui.org/tinytex/install-bin-unix.sh\" | sh && \\\n    apt-get clean && \\\n    tlmgr install xetex xcolor pgf fancyhdr parskip babel-english  \\\n    units lastpage mdwtools comment   fontawesome times     \\\n    fncychap titlesec tabulary varwidth wrapfig capt-of needspace  \\\n    polyglossia fontspec cmap gnu-freefont upquote oberdiek latexmk \\\n    caption makecell multirow changepage \\\n    --repository=http://mirror.ctan.org/systems/texlive/tlnet \\\n    && fmtutil-sys --all && \\\n    # Install additional LaTeX packages\n    # installing seperately to avoid error associated with multirow && \\\n    # install the make build tools, for compiling sphinx documentation\n    apt-get update && apt-get install --no-install-recommends -y make && \\\n    # install the contextily package using pip, required for validation report basemaps\n    pip install --no-cache-dir contextily pillow==9.* && rm -rf /var/lib/apt/lists/*;\n\n# launch jupyter in the local working directory that we mount\nWORKDIR /home/jovyan/work\n\nRUN python -m ipykernel install --name GlobalInd --display-name \"Python (GlobalInd)\"\n\n# set default command to launch when container is run\nCMD [\"jupyter\", \"lab\", \"--ip='0.0.0.0'\", \"--port=8888\", \"--no-browser\", \"--allow-root\", \"--NotebookApp.token=''\", \"--NotebookApp.password=''\"]\n\n# to test, import OSMnx and print its version\nRUN ipython -c \"import osmnx; print(osmnx.__version__)\"\n"
}