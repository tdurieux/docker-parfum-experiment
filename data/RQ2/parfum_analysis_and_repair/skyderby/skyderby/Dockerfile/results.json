{
  "startTime": 1674254580453,
  "endTime": 1674254580962,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 26,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:3.0.0\n\nMAINTAINER Aleksandr Kunin <skyksandr@gmail.com>\nLABEL org.opencontainers.image.source=https://github.com/skyderby/skyderby\n\nRUN apt-get update -qq && apt-get install --no-install-recommends -y -qq apt-transport-https ca-certificates \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n    && apt-get install -y -qq --no-install-recommends postgresql-client nodejs yarn \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN echo \"gem: --no-rdoc --no-ri\" >> ~/.gemrc\n\nENV RAILS_ENV=production NODE_ENV=production\n\nWORKDIR /tmp\nCOPY ./Gemfile Gemfile\nCOPY ./Gemfile.lock Gemfile.lock\nRUN bundle config set --local without 'development test' && bundle install --jobs 20 --retry 5\n\nWORKDIR /opt/app\nCOPY ./package.json package.json\nCOPY ./yarn.lock yarn.lock\nRUN yarn install --production && yarn cache clean;\n\nRUN mkdir -p /opt/app \\\n  && mkdir -p /tmp/pids \\\n  && mkdir -p /tmp/sockets\nCOPY ./ /opt/app\n\nRUN SECRET_KEY_BASE=just-for-precompilation \\\n  /bin/sh -c 'bundle exec rails assets:precompile' && \\\n  rm -rf node_modules\n\nVOLUME /opt/app/public/assets\nVOLUME /opt/app/public/packs\nVOLUME /opt/app/public\n\nCMD rails db:migrate && bundle exec puma -C config/puma.rb\n"
}