diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/schollz/find3/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/schollz/find3/Dockerfile/repaired.Dockerfile
index 570b911..241f4c4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/schollz/find3/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/schollz/find3/Dockerfile/repaired.Dockerfile
@@ -9,13 +9,13 @@ ENV PATH="/usr/local/go/bin:/usr/local/work/bin:${PATH}"
 ENV GOPATH /usr/local/work
 ENV GO111MODULE=on
 # RUN apt-get update && apt-get -y upgrade && \
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y wget git libc6-dev make pkg-config g++ gcc mosquitto-clients mosquitto python3 python3-dev python3-pip python3-setuptools python3-wheel supervisor libfreetype6-dev python3-matplotlib libopenblas-dev libblas-dev liblapack-dev gfortran
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y wget git libc6-dev make pkg-config g++ gcc mosquitto-clients mosquitto python3 python3-dev python3-pip python3-setuptools python3-wheel supervisor libfreetype6-dev python3-matplotlib libopenblas-dev libblas-dev liblapack-dev gfortran && rm -rf /var/lib/apt/lists/*;
 RUN python3 -m pip install Cython --install-option="--no-cython-compile" && \
 	apt-get install --no-install-recommends -y python3-scipy python3-numpy && \
 	mkdir /usr/local/work && \
 	rm -rf /var/lib/apt/lists/* && \
 	set -eux; \
-	\
+
 # this "case" statement is generated via "update.sh"
 	dpkgArch="$(dpkg --print-architecture)"; \
 	case "${dpkgArch##*-}" in \
@@ -28,13 +28,13 @@ RUN python3 -m pip install Cython --install-option="--no-cython-compile" && \
 		*) goRelArch='src'; goRelSha256='afc1e12f5fe49a471e3aae7d906c73e9d5b1fdd36d52d72652dde8f6250152fb'; \
 			echo >&2; echo >&2 "warning: current architecture ($dpkgArch) does not have a corresponding Go binary release; will be building from source"; echo >&2 ;; \
 	esac; \
-	\
+
 	url="https://golang.org/dl/go${GOLANG_VERSION}.${goRelArch}.tar.gz"; \
 	wget -O go.tgz "$url"; \
-	echo "${goRelSha256} *go.tgz" | sha256sum -c -; \
+	echo "${goRelSha256}  *go.tgz" | sha256sum -c -; \
 	tar -C /usr/local -xzf go.tgz; \
 	rm go.tgz; \
-	\
+
 	if [ "$goRelArch" = 'src' ]; then \
 		echo >&2; \
 		echo >&2 'error: UNIMPLEMENTED'; \
@@ -42,7 +42,7 @@ RUN python3 -m pip install Cython --install-option="--no-cython-compile" && \
 		echo >&2; \
 		exit 1; \
 	fi; \
-	\
+
 	export PATH="/usr/local/go/bin:$PATH"; \
 	go version && \
 	mkdir /build && cd /build && \
@@ -95,7 +95,7 @@ pid_file /data/mosquitto_config/pid\n'\
 	echo "rm go" && rm -rf /usr/local/go* && \
 	echo "rm perl" && rm -rf /usr/share/perl* && \
 	echo "rm build" && rm -rf /build* && \
-	echo "rm doc" && rm -rf /usr/share/doc* 
+	echo "rm doc" && rm -rf /usr/share/doc*
 
 WORKDIR /app
 CMD ["/app/startup.sh"]