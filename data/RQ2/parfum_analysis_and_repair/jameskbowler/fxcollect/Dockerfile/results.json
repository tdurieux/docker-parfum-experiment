{
  "startTime": 1674220438705,
  "endTime": 1674220439753,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n# Based on instructions in readme.md\n#\tand https://github.com/JamesKBowler/python-forexconnect/tree/python3-forexconnect\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install python3 python3-pip \\\n    python3-numpy python3-pymysql mariadb-server mariadb-client git \\\n    build-essential python3-dev libboost-log-dev libboost-date-time-dev \\\n    libboost-python-dev libtool m4 automake autogen checkinstall wget \\\n    python3-termcolor sudo libcurl4-gnutls-dev libarchive-dev cmake gosu && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir cprint pytz ipython\n\nRUN adduser --disabled-password --gecos \"\" nonroot\n\n\n\nARG WITH_PHPMYADMIN=0\nENV WITH_PHPMYADMIN=$WITH_PHPMYADMIN\n\nRUN if [ \"$WITH_PHPMYADMIN\" -gt \"0\" ] ; then \\\n\t\texport DEBIAN_FRONTEND=noninteractive; \\\n\t\techo \"phpmyadmin phpmyadmin/dbconfig-install boolean false\" | debconf-set-selections; \\\n\t\techo \"phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2\" | debconf-set-selections; \\\n\t\tapt-get -q --no-install-recommends -y install phpmyadmin; rm -rf /var/lib/apt/lists/*; \\\n\tfi\n\n\n# --- Install libuv\n\nRUN wget https://github.com/libuv/libuv/archive/v1.19.1/libuv-1.19.1.tar.gz && \\\n\ttar -xvzf libuv-1.19.1.tar.gz && \\\n\tcd libuv-1.19.1/ && \\\n\tsh autogen.sh && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --disable-static && \\\n\tmake && \\\n\tsudo checkinstall && rm libuv-1.19.1.tar.gz\n\n# --- Install libarchive\n\n#  -> Using distribution packages\n#RUN wget http://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz && \\\n#\ttar -xvzf libarchive-3.3.2.tar.gz && \\\n#\tcd libarchive-3.3.2/ && \\\n#\t./configure --prefix=/usr --disable-static && \\\n#\tmake && \\\n#\tsudo checkinstall\n\n# --- Install curl\n\n#  -> Using distribution packages\n\n# --- Installing boost\n\n#  -> Using distribution packages, Bionic is already at 1.65.\nRUN apt-get -y --no-install-recommends install libboost-all-dev && rm -rf /var/lib/apt/lists/*;\n\n# --- Install python3-forexconnect\n\nRUN cd /home/nonroot; \\\n\techo \"export BOOST_ROOT=/usr\" >> .profile; \\\n\techo \"export BOOST_INCLUDEDIR=/usr/include/\" >> .profile; \\\n\techo \"export BOOST_LIBRARYDIR=/usr/lib/\" >> .profile; \\\n\techo \"export INCLUDE=/usr/include/boost/:\\$INCLUDE\" >> .profile; \\\n\techo \"export LIBRARY_PATH=/usr/local/:\\$LIBRARY_PATH\" >> .profile; \\\n\techo \"export FOREXCONNECT_ROOT=\\$(pwd)/ForexConnectAPI\" >> .profile; \\\n\techo \"export LD_LIBRARY_PATH=\\$LD_LIBRARY_PATH:\\$(pwd)/ForexConnectAPI/lib\" >> .profile; \\\n\t. ./.profile; \\\n\tldconfig\n\nRUN cd /home/nonroot; \\\n\tsu - nonroot -c \"wget http://fxcodebase.com/bin/forexconnect/1.4.1/ForexConnectAPI-1.4.1-Linux-x86_64.tar.gz && \\\n\t\ttar xvf ForexConnectAPI-1.4.1-Linux-x86_64.tar.gz && \\  \n\t\tmv ForexConnectAPI-1.4.1-Linux-x86_64 ForexConnectAPI && \\\n\t\tgit clone -b python3-forexconnect https://github.com/JamesKBowler/python-forexconnect.git && \\\n\t\tcd python-forexconnect && mkdir build && cd build && \\  \n\t\tcmake .. -DDEFAULT_FOREX_URL='http://www.fxcorporate.com/Hosts.jsp' \" && \\\n\tcd python-forexconnect/build && \\\n\tmake install \n\n# --- Database setup\n\nRUN service mysql start && \\\n\techo \t\"CREATE USER 'sec_master'@'localhost' IDENTIFIED BY 'password';  \\\n\t\t\tGRANT ALL PRIVILEGES ON *.* TO 'sec_master'@'localhost';  \\\n\t\t\tFLUSH PRIVILEGES; \\\n\t\t\tset global max_connections = 1000; \" | mysql -uroot\n\nRUN echo \"127.0.0.1:sec_master:password\" > /home/nonroot/.database_sec_master_credentials; \\\n\tchown nonroot:nonroot /home/nonroot/.database_sec_master_credentials\n\n\nCOPY . /home/nonroot/fxcollect/\n\nRUN chown -R nonroot:nonroot /home/nonroot; chmod +x /home/nonroot/fxcollect/runMainDocker.sh;\n\nENTRYPOINT [\"/home/nonroot/fxcollect/runMainDocker.sh\"]\n"
}