diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/huawei/containerops/component/images/php/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/huawei/containerops/component/images/php/Dockerfile/repaired.Dockerfile
index 0510d98..73f85ae 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/huawei/containerops/component/images/php/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/huawei/containerops/component/images/php/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@
 # Licensed under the Apache License, Version 2.0 (the "License");
 # you may not use this file except in compliance with the License.
 # You may obtain a copy of the License at
-# 
+#
 #     http://www.apache.org/licenses/LICENSE-2.0
 #
 # Unless required by applicable law or agreed to in writing, software
@@ -22,7 +22,7 @@ ENV PHPIZE_DEPS \
 		libc-dev \
 		make \
 		pkg-config \
-		re2c 
+		re2c
 RUN apt-get update && apt-get install -y \
 		$PHPIZE_DEPS \
 		ca-certificates \
@@ -45,28 +45,28 @@ ENV PHP_LDFLAGS="-Wl,-O1 -Wl,--hash-style=both -pie"
 ARG php_version
 ENV PHP_VERSION ${php_version}
 RUN echo "PHP version found: $PHP_VERSION"
-ENV PHP_URL="https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror" 
+ENV PHP_URL="https://secure.php.net/get/php-${PHP_VERSION}.tar.xz/from/this/mirror"
 
 COPY php-${PHP_VERSION}.sha256 /tmp/
 
 RUN set -xe; \
-	\
+
 	fetchDeps=' \
 		wget \
 	'; \
 	apt-get update; \
 	apt-get install -y --no-install-recommends $fetchDeps; \
 	rm -rf /var/lib/apt/lists/*; \
-	\
-	mkdir -p /usr/src; \
+
+	mkdir -p /usr/src; rm -rf /usr/src \
 	cd /usr/src; \
-	\
+
 	wget -O php.tar.xz "$PHP_URL"; \
-	\
-	\ 	
+
+
 	PHP_SHA256=$(cat /tmp/php-$PHP_VERSION.sha256); \
 	if [ -n "$PHP_SHA256" ]; then \
-		echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -; \
+		echo "$PHP_SHA256  *php.tar.xz" | sha256sum -c -; \
 	fi; \
 	#if [ -n "$PHP_MD5" ]; then \
 	#	echo "$PHP_MD5 *php.tar.xz" | md5sum -c -; \
@@ -81,7 +81,7 @@ RUN set -xe; \
 	#	gpg --batch --verify php.tar.xz.asc php.tar.xz; \
 	#	rm -r "$GNUPGHOME"; \
 	#fi; \
-	\
+
 	apt-get purge -y --auto-remove $fetchDeps
 
 COPY docker-php-source /usr/local/bin/
@@ -102,19 +102,19 @@ RUN set -xe \
 		LDFLAGS="$PHP_LDFLAGS" \
 	&& docker-php-source extract \
 	&& cd /usr/src/php \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 		--with-config-file-path="$PHP_INI_DIR" \
 		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
-		\
+
 		--disable-cgi \
-		\
+
 # --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)
 		--enable-ftp \
 # --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)
 		--enable-mbstring \
 # --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)
 		--enable-mysqlnd \
-		\
+
 		--with-curl \
 		--with-libedit \
 		--with-openssl \
@@ -126,20 +126,20 @@ RUN set -xe \
 	&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \
 	&& make clean \
 	&& docker-php-source delete \
-	\
+
 	&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $buildDeps
 
 COPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/
 
 USER root
 
-RUN apt-get update && apt-get install -y git php-mongodb
+RUN apt-get update && apt-get install --no-install-recommends -y git php-mongodb && rm -rf /var/lib/apt/lists/*;
 
 RUN php -r "copy('https://install.phpcomposer.com/installer', 'composer-setup.php');"; \
     php composer-setup.php; \
     php -r "unlink('composer-setup.php');"; \
     mv composer.phar /usr/local/bin/composer; \
-    apt-get install -y --no-install-recommends unzip;
+    apt-get install -y --no-install-recommends unzip; rm -rf /var/lib/apt/lists/*;
 
 ENTRYPOINT ["docker-php-entrypoint"]
 ##<autogenerated>##