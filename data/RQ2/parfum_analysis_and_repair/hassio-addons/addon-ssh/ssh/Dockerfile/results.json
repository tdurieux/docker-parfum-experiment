{
  "startTime": 1674220211877,
  "endTime": 1674220213137,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 77,
        "columnStart": 7,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 89
      }
    }
  ],
  "repairedDockerfile": "ARG BUILD_FROM=ghcr.io/hassio-addons/base/amd64:12.0.0\n# hadolint ignore=DL3006\nFROM ${BUILD_FROM}\n\n# Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Add env\nENV TERM=\"xterm-256color\"\n\n# Copy Python requirements file\nCOPY requirements.txt /tmp/\n\n# Setup base\nARG BUILD_ARCH=amd64\n# hadolint ignore=DL3003\nRUN \\\n    apk add --no-cache --virtual .build-dependencies \\\n        bsd-compat-headers=0.7.2-r3 \\\n        build-base=0.5-r2 \\\n        cmake=3.23.1-r0 \\\n        docker=20.10.16-r0 \\\n        json-c-dev=0.16-r0 \\\n        libffi-dev=3.4.2-r1 \\\n        libuv-dev=1.44.1-r0 \\\n        openssl-dev=1.1.1o-r0 \\\n        python3-dev=3.10.4-r0 \\\n        zlib-dev=1.2.12-r1 \\\n    \\\n    && apk add --no-cache \\\n        ack=3.5.0-r1 \\\n        alsa-plugins-pulse=1.2.6-r1 \\\n        alsa-utils=1.2.6-r0 \\\n        awake=1.0-r7 \\\n        bash-completion=2.11-r4 \\\n        bind-tools=9.16.29-r0 \\\n        bluez=5.64-r0 \\\n        colordiff=1.0.20-r0 \\\n        device-mapper-libs=2.02.187-r2 \\\n        docker-bash-completion=20.10.16-r0 \\\n        docker-zsh-completion=20.10.16-r0 \\\n        git=2.36.1-r0 \\\n        htop=3.2.0-r1 \\\n        json-c=0.16-r0 \\\n        libltdl=2.4.7-r0 \\\n        libuv=1.44.1-r0 \\\n        libxml2-utils=2.9.14-r0 \\\n        mariadb-client=10.6.8-r0 \\\n        mosh=1.3.2-r22 \\\n        mosquitto-clients=2.0.14-r0 \\\n        nano-syntax=6.3-r0 \\\n        nano=6.3-r0 \\\n        ncurses=6.3_p20220521-r0 \\\n        net-tools=2.10-r0 \\\n        networkmanager-cli=1.38.0-r0 \\\n        nmap=7.92-r2 \\\n        openssh=9.0_p1-r1 \\\n        openssl=1.1.1o-r0 \\\n        pwgen=2.08-r1 \\\n        pulseaudio-utils=15.0-r2 \\\n        py3-pip=22.1.1-r0 \\\n        python3=3.10.4-r0 \\\n        rsync=3.2.4-r0 \\\n        sqlite=3.38.5-r0 \\\n        sudo=1.9.10-r0 \\\n        tmux=3.2a-r0 \\\n        vim=8.2.5000-r0 \\\n        wget=1.21.3-r0 \\\n        zip=3.0-r9 \\\n        zsh-autosuggestions=0.7.0-r0 \\\n        zsh-syntax-highlighting=0.7.1-r2 \\\n        zsh=5.8.1-r4 \\\n    \\\n    && git clone --depth 1 \\\n        https://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh \\\n\n    && curl -f -L -s -o /usr/bin/ha \\\n        \"https://github.com/home-assistant/cli/releases/download/4.18.0/ha_${BUILD_ARCH}\" \\\n\n    && chmod a+x /usr/bin/ha \\\n    && ha completion > /usr/share/bash-completion/completions/ha \\\n\n    && sed -i -e \"s#bin/ash#bin/zsh#\" /etc/passwd \\\n\n    && git clone --branch \"v4.2.1\" --depth=1 \\\n        https://github.com/warmcat/libwebsockets.git /tmp/libwebsockets \\\n\n    && mkdir -p /tmp/libwebsockets/build \\\n    && cd /tmp/libwebsockets/build \\\n    && cmake .. \\\n        -DCMAKE_BUILD_TYPE=MinSizeRel \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n        -DCMAKE_VERBOSE_MAKEFILE=TRUE \\\n        -DLWS_IPV6=ON \\\n        -DLWS_STATIC_PIC=ON \\\n        -DLWS_UNIX_SOCK=OFF \\\n        -DLWS_WITH_LIBUV=ON \\\n        -DLWS_WITH_SHARED=ON \\\n        -DLWS_WITHOUT_TESTAPPS=ON \\\n    && make \\\n    && make install \\\n\n    && git clone --branch main --single-branch \\\n        https://github.com/tsl0922/ttyd.git /tmp/ttyd \\\n    && git -C /tmp/ttyd checkout \"2b4dbacc10f0db7fceb092ea42ea12cd9301f4aa\" \\\n\n    && mkdir -p /tmp/ttyd/build \\\n    && cd /tmp/ttyd/build \\\n    && cmake .. \\\n        -DCMAKE_BUILD_TYPE=MinSizeRel \\\n        -DCMAKE_INSTALL_PREFIX=/usr \\\n        -DCMAKE_VERBOSE_MAKEFILE=TRUE \\\n    && make \\\n    && make install \\\n\n    && cp /usr/bin/docker /usr/local/bin/.undocked \\\n\n    && pip3 install \\\n        --no-cache-dir \\\n        --find-links \"https://wheels.home-assistant.io/alpine-3.16/${BUILD_ARCH}/\" \\\n        -r /tmp/requirements.txt \\\n\n    && apk del --no-cache --purge .build-dependencies \\\n\n    && find /usr/local \\\n        \\( -type d -a -name test -o -name tests -o -name '__pycache__' \\) \\\n        -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n        -exec rm -rf '{}' + \\\n\n    && rm -f -r \\\n        /root/.cache \\\n        /root/.cmake \\\n        /tmp/*\n\n# Copy root filesystem\nCOPY rootfs /\n\n# Ensure right permissions\nRUN \\\n    chmod 0750 /etc/sudo.conf \\\n    && chmod 0750 -R /etc/sudoers.d \\\n    && chmod 0640 /etc/sudoers.d\n\n# Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_DESCRIPTION\nARG BUILD_NAME\nARG BUILD_REF\nARG BUILD_REPOSITORY\nARG BUILD_VERSION\n\n# Labels\nLABEL \\\n    io.hass.name=\"${BUILD_NAME}\" \\\n    io.hass.description=\"${BUILD_DESCRIPTION}\" \\\n    io.hass.arch=\"${BUILD_ARCH}\" \\\n    io.hass.type=\"addon\" \\\n    io.hass.version=${BUILD_VERSION} \\\n    maintainer=\"Franck Nijhof <frenck@addons.community>\" \\\n    org.opencontainers.image.title=\"${BUILD_NAME}\" \\\n    org.opencontainers.image.description=\"${BUILD_DESCRIPTION}\" \\\n    org.opencontainers.image.vendor=\"Home Assistant Community Add-ons\" \\\n    org.opencontainers.image.authors=\"Franck Nijhof <frenck@addons.community>\" \\\n    org.opencontainers.image.licenses=\"MIT\" \\\n    org.opencontainers.image.url=\"https://addons.community\" \\\n    org.opencontainers.image.source=\"https://github.com/${BUILD_REPOSITORY}\" \\\n    org.opencontainers.image.documentation=\"https://github.com/${BUILD_REPOSITORY}/blob/main/README.md\" \\\n    org.opencontainers.image.created=${BUILD_DATE} \\\n    org.opencontainers.image.revision=${BUILD_REF} \\\n    org.opencontainers.image.version=${BUILD_VERSION}\n"
}