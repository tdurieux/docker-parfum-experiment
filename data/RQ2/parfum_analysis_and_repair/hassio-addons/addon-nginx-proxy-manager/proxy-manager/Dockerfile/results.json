{
  "startTime": 1674253016377,
  "endTime": 1674253017695,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 76
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_FROM=ghcr.io/hassio-addons/base/amd64:12.0.0\n# hadolint ignore=DL3006\nFROM ${BUILD_FROM}\n\n# Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Copy Python requirements file\nCOPY requirements.txt /tmp/\n\n# Setup base\n# hadolint ignore=DL3003\nRUN \\\n    apk add --no-cache --virtual .build-dependencies \\\n        build-base=0.5-r2 \\\n        git=2.36.1-r0 \\\n        libffi-dev=3.4.2-r1 \\\n        npm=8.10.0-r0 \\\n        openssl-dev=1.1.1o-r0 \\\n        patch=2.7.6-r7 \\\n        python3-dev=3.10.4-r0 \\\n        yarn=1.22.19-r0 \\\n    \\\n    && apk add --no-cache \\\n        apache2-utils=2.4.54-r0 \\\n        certbot=1.27.0-r0 \\\n        libcap=2.64-r0 \\\n        logrotate=3.19.0-r1 \\\n        mariadb-client=10.6.8-r0 \\\n        nginx-mod-stream=1.22.0-r0 \\\n        nginx=1.22.0-r0 \\\n        nodejs=16.15.0-r1 \\\n        openssl=1.1.1o-r0 \\\n        py3-pip=22.1.1-r0 \\\n        python3=3.10.4-r0 \\\n    \\\n    && ln -s /usr/bin/python3 /usr/bin/python\\\n    \\\n    && pip3 install --no-cache-dir -r /tmp/requirements.txt \\\n    \\\n    && yarn global add modclean \\\n\n    && curl -f -J -L -o /tmp/nginxproxymanager.tar.gz \\\n        \"https://github.com/jc21/nginx-proxy-manager/archive/v2.9.18.tar.gz\" \\\n    && mkdir /app \\\n    && tar zxvf \\\n        /tmp/nginxproxymanager.tar.gz \\\n        --strip 1 -C /app \\\n\n    && sed -i \"s#canShow('streams')#false#g\" \\\n        /app/frontend/js/app/ui/menu/main.ejs \\\n    && sed -i \"s#canShow('streams')#false#g\" \\\n        /app/frontend/js/app/dashboard/main.ejs \\\n    && sed -i \"s#, 'streams',#,#g\" \\\n        /app/frontend/js/app/user/permissions.ejs \\\n\n    && cd /app/frontend \\\n    && yarn install \\\n    && yarn build \\\n    && rm -rf node_modules \\\n\n    && mkdir -p /opt/nginx-proxy-manager/frontend \\\n    && cp -r /app/frontend/dist/. /opt/nginx-proxy-manager/frontend/ \\\n\n    && cd /app/backend \\\n    && yarn install \\\n    && rm -rf node_modules \\\n    && cp -r /app/backend/. /opt/nginx-proxy-manager/ \\\n\n    && cp -R /app/global/. /opt/nginx-proxy-manager/global/ \\\n\n    && cd /opt/nginx-proxy-manager \\\n    && yarn install \\\n    && rm -rf /etc/services.d/frontend \\\n    && rm -rf /opt/nginx-proxy-manager/config \\\n\n    && rm -f -r /etc/nginx \\\n    && cp -r /app/docker/rootfs/etc/nginx /etc/nginx \\\n    && rm -f /etc/nginx/conf.d/dev.conf \\\n\n    && cp /app/docker/rootfs/etc/letsencrypt.ini /etc \\\n    && cp /app/docker/rootfs/etc/logrotate.d/nginx-proxy-manager /etc/logrotate.d \\\n\n    && sed -i \"s#root /app/frontend;#root /opt/nginx-proxy-manager/frontend;#\" \\\n        /etc/nginx/conf.d/production.conf \\\n    && sed -i \"s#table.string('id').notNull().primary();#table.string('id', 32).notNull().primary();#\" \\\n        /opt/nginx-proxy-manager/migrations/20190227065017_settings.js \\\n\n    && mkdir -p \\\n        /run/mysqld \\\n        /run/nginx \\\n\n    && modclean \\\n        --path /opt/nginx-proxy-manager \\\n        --no-progress \\\n        --keep-empty \\\n        --run \\\n\n    && yarn global remove modclean \\\n    && yarn cache clean \\\n\n    && apk del --purge .build-dependencies \\\n\n    && rm -f -r \\\n        /app \\\n        /etc/init.d/nginx \\\n        /etc/logrotate.d/nginx \\\n        /opt/nginx-proxy-manager/node_modules/bcrypt/build \\\n        /root/.node-gyp \\\n        /tmp/.[!.]* \\\n        /tmp/* \\\n        /usr/lib/node_modules \\\n        /usr/local/share/.cache \\\n        /var/lib/mysql \\\n        /var/lib/nginx \\\n        /var/log/nginx \\\n        /var/tmp/nginx \\\n        /var/www && rm /tmp/nginxproxymanager.tar.gz\n\n# Copy root filesystem\nCOPY rootfs /\n\n# Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_DESCRIPTION\nARG BUILD_NAME\nARG BUILD_REF\nARG BUILD_REPOSITORY\nARG BUILD_VERSION\n\n# Labels\nLABEL \\\n    io.hass.name=\"${BUILD_NAME}\" \\\n    io.hass.description=\"${BUILD_DESCRIPTION}\" \\\n    io.hass.arch=\"${BUILD_ARCH}\" \\\n    io.hass.type=\"addon\" \\\n    io.hass.version=${BUILD_VERSION} \\\n    maintainer=\"Franck Nijhof <frenck@addons.community>\" \\\n    org.opencontainers.image.title=\"${BUILD_NAME}\" \\\n    org.opencontainers.image.description=\"${BUILD_DESCRIPTION}\" \\\n    org.opencontainers.image.vendor=\"Home Assistant Community Add-ons\" \\\n    org.opencontainers.image.authors=\"Franck Nijhof <frenck@addons.community>\" \\\n    org.opencontainers.image.licenses=\"MIT\" \\\n    org.opencontainers.image.url=\"https://addons.community\" \\\n    org.opencontainers.image.source=\"https://github.com/${BUILD_REPOSITORY}\" \\\n    org.opencontainers.image.documentation=\"https://github.com/${BUILD_REPOSITORY}/blob/main/README.md\" \\\n    org.opencontainers.image.created=${BUILD_DATE} \\\n    org.opencontainers.image.revision=${BUILD_REF} \\\n    org.opencontainers.image.version=${BUILD_VERSION}\n"
}