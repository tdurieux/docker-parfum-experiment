{
  "startTime": 1674251381003,
  "endTime": 1674251381670,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 66,
        "columnStart": 8,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_FROM=ghcr.io/hassio-addons/debian-base/amd64:4.2.0\n# hadolint ignore=DL3006\nFROM ${BUILD_FROM}\n\n# Confiure locale\nENV \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8\n\n# Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Copy Python requirements file\nCOPY requirements.txt /tmp/requirements.txt\n\n# Copy in extensions list\nCOPY vscode.extensions /root/vscode.extensions\n\n# Setup base system\nARG BUILD_ARCH=amd64\n# hadolint ignore=SC2181\nRUN \\\n    apt-get update \\\n    \\\n    && apt-get install -y --no-install-recommends \\\n        ack=2.24-1 \\\n        bsdtar=3.3.3-4+deb10u1 \\\n        build-essential=12.6 \\\n        colordiff=1.0.18-1 \\\n        git=1:2.20.1-2+deb10u3 \\\n        iputils-ping=3:20180629-2+deb10u2 \\\n        locales=2.28-10 \\\n        mariadb-client=1:10.3.27-0+deb10u1 \\\n        mosquitto-clients=1.5.7-1+deb10u1 \\\n        net-tools=1.60+git20180626.aebd88e-1 \\\n        nmap=7.70+dfsg1-6+deb10u1 \\\n        openssh-client=1:7.9p1-10+deb10u2 \\\n        openssh-server=1:7.9p1-10+deb10u2 \\\n        openssl=1.1.1d-0+deb10u6 \\\n        pwgen=2.08-1 \\\n        python3-dev=3.7.3-1 \\\n        python3=3.7.3-1 \\\n        wget=1.20.1-1.1 \\\n        uuid-runtime=2.33.1-0.1 \\\n        zsh=5.7.1-1 \\\n    \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && locale-gen \\\n\n    && curl -f https://bootstrap.pypa.io/get-pip.py | python3 \\\n\n    && mkdir -p /root/.vscode-server/extensions \\\n    && uuid=$(uuidgen) \\\n    && while while read -; do \\\n        extention=\"${ext%%#*}\" \\\n        vendor=\"${extention%%.*}\"; \\\n        slug=\"${extention#*.}\"; \\\n        version=\"${ext##*#}\"; \\\n\n        echo \"Installing vscode extension: ${slug} by ${vendor} @ ${version} \"; \\\n\n        echo \"https://marketplace.visualstudio.com/_apis/public/gallery/publishers/${vendor}/vsextensions/${slug}/${version}/vspackage\"; \\\n        curl -f -JL --retry 5 -o \"/tmp/${extention}-${version}.vsix\" \\\n            -H \"User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36\" \\\n            -H \"x-market-user-id: ${uuid}\" \\\n            \"https://marketplace.visualstudio.com/_apis/public/gallery/publishers/${vendor}/vsextensions/${slug}/${version}/vspackage\"; \\\n        mkdir -p \"//root/.vscode-server/extensions/${extention}-${version}\"; \\\n        bsdtar --strip-components=1 -xf \"/tmp/${extention}-${version}.vsix\" \\\n                    -C \"/root/.vscode-server/extensions/${extention}-${version}\" extension; \\\n        [ $? -ne 0 ] && exit 1; \\\n        sleep 1; \\\n    done \\\n    && ls -la /root/.vscode-server/extensions/ \\\n\n    && curl -f -L -s -o /usr/bin/ha \\\n        \"https://github.com/home-assistant/cli/releases/download/4.3.0/ha_${BUILD_ARCH}\" \\\n    && chmod a+x /usr/bin/ha \\\n\n    && git clone --branch master --single-branch --depth 1 \\\n        \"git://github.com/robbyrussell/oh-my-zsh.git\" ~/.oh-my-zsh \\\n\n    && git clone --branch master --single-branch --depth 1 \\\n        \"git://github.com/zsh-users/zsh-autosuggestions\" \\\n        ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions \\\n    && git clone --branch master --single-branch --depth 1 \\\n        \"git://github.com/zsh-users/zsh-syntax-highlighting.git\" \\\n        ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting \\\n\n    && sed -i -e \"s#bin/bash#bin/zsh#\" /etc/passwd \\\n\n    && update-alternatives \\\n        --install /usr/bin/python python /usr/bin/python3 10 \\\n\n    && pip3 install --no-cache-dir -r /tmp/requirements.txt \\\n\n    && apt-get purge -y --auto-remove \\\n        bsdtar \\\n        build-essential \\\n        python3-dev \\\n        uuid-runtime \\\n\n    && find /usr/local/lib/python3.7/ -type d -name tests -depth -exec rm -rf {} \\; \\\n    && find /usr/local/lib/python3.7/ -type d -name test -depth -exec rm -rf {} \\; \\\n    && find /usr/local/lib/python3.7/ -name __pycache__ -depth -exec rm -rf {} \\; \\\n    && find /usr/local/lib/python3.7/ -name \"*.pyc\" -depth -exec rm -f {} \\; \\\n\n    && rm -fr \\\n        /tmp/* \\\n        /var/{cache,log}/* \\\n        /var/lib/apt/lists/*\n\n# Copy root filesystem\nCOPY rootfs /\n\n# Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_DESCRIPTION\nARG BUILD_NAME\nARG BUILD_REF\nARG BUILD_REPOSITORY\nARG BUILD_VERSION\n\n# Labels\nLABEL \\\n    io.hass.name=\"${BUILD_NAME}\" \\\n    io.hass.description=\"${BUILD_DESCRIPTION}\" \\\n    io.hass.arch=\"${BUILD_ARCH}\" \\\n    io.hass.type=\"addon\" \\\n    io.hass.version=${BUILD_VERSION} \\\n    maintainer=\"Franck Nijhof <frenck@addons.community>\" \\\n    org.opencontainers.image.title=\"${BUILD_NAME}\" \\\n    org.opencontainers.image.description=\"${BUILD_DESCRIPTION}\" \\\n    org.opencontainers.image.vendor=\"Home Assistant Community Add-ons\" \\\n    org.opencontainers.image.authors=\"Franck Nijhof <frenck@addons.community>\" \\\n    org.opencontainers.image.licenses=\"MIT\" \\\n    org.opencontainers.image.url=\"https://addons.community\" \\\n    org.opencontainers.image.source=\"https://github.com/${BUILD_REPOSITORY}\" \\\n    org.opencontainers.image.documentation=\"https://github.com/${BUILD_REPOSITORY}/blob/main/README.md\" \\\n    org.opencontainers.image.created=${BUILD_DATE} \\\n    org.opencontainers.image.revision=${BUILD_REF} \\\n    org.opencontainers.image.version=${BUILD_VERSION}\n"
}