{
  "startTime": 1674249829458,
  "endTime": 1674249830593,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 79,
        "columnStart": 8,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 89,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_FROM=ghcr.io/hassio-addons/debian-base/amd64:6.0.0\n# hadolint ignore=DL3006\nFROM ${BUILD_FROM}\n\n# Confiure locale\nENV \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8\n\n# Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Copy Python requirements file\nCOPY requirements.txt /tmp/requirements.txt\n\n# Copy in extensions list\nCOPY vscode.extensions /root/vscode.extensions\n\n# Setup base system\nARG BUILD_ARCH=amd64\n# hadolint ignore=SC2181, DL3008\nRUN \\\n    apt-get update \\\n    \\\n    && apt-get install -y --no-install-recommends \\\n        ack=3.4.0-1 \\\n        libarchive-tools=3.4.3-2+deb11u1 \\\n        build-essential=12.9 \\\n        colordiff=1.0.18-1.1 \\\n        git=1:2.30.2-1 \\\n        iputils-ping=3:20210202-1 \\\n        locales=2.31-13+deb11u3 \\\n        mariadb-client=1:10.5.15-0+deb11u1 \\\n        mosquitto-clients=2.0.11-1 \\\n        net-tools=1.60+git20181103.0eebece-1 \\\n        nmap=7.91+dfsg1+really7.80+dfsg1-2 \\\n        openssh-client=1:8.4p1-5 \\\n        openssl=1.1.1n-0+deb11u2 \\\n        python3-dev=3.9.2-3 \\\n        python3=3.9.2-3 \\\n        unzip=6.0-26 \\\n        uuid-runtime=2.36.1-8+deb11u1 \\\n        wget=1.21-1+deb11u1 \\\n        zip=3.0-12 \\\n        zsh=5.8-6+deb11u1 \\\n        less=551-2 \\\n    \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && locale-gen \\\n\n    && curl -f https://bootstrap.pypa.io/get-pip.py | python3 \\\n\n    && if [[ \"${BUILD_ARCH}\" = \"aarch64\" ]]; then ARCH=\"arm64\"; fi \\\n    && if [[ \"${BUILD_ARCH}\" = \"amd64\" ]]; then ARCH=\"amd64\"; fi \\\n    && curl -f -J -L -o /tmp/code.tar.gz \\\n        \"https://github.com/cdr/code-server/releases/download/v4.4.0/code-server-4.4.0-linux-${ARCH}.tar.gz\" \\\n    && mkdir -p /usr/local/lib/code-server \\\n    && tar zxvf \\\n        /tmp/code.tar.gz \\\n        --strip 1 -C /usr/local/lib/code-server \\\n\n    && ln -s /usr/local/lib/code-server/bin/code-server /usr/local/bin/code-server \\\n    && ln -s /usr/local/lib/code-server/bin/code-server /usr/local/bin/code \\\n\n    && mkdir -p /root/.code-server/extensions \\\n    && uuid=$(uuidgen) \\\n    && while while read -; do \\\n        extention=\"${ext%%#*}\" \\\n        vendor=\"${extention%%.*}\"; \\\n        slug=\"${extention#*.}\"; \\\n        version=\"${ext##*#}\"; \\\n\n        echo \"Installing vscode extension: ${slug} by ${vendor} @ ${version} \"; \\\n\n        echo \"https://marketplace.visualstudio.com/_apis/public/gallery/publishers/${vendor}/vsextensions/${slug}/${version}/vspackage\"; \\\n        curl -f -JL --retry 5 -o \"/tmp/${extention}-${version}.vsix\" \\\n            -H \"User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36\" \\\n            -H \"x-market-user-id: ${uuid}\" \\\n            \"https://marketplace.visualstudio.com/_apis/public/gallery/publishers/${vendor}/vsextensions/${slug}/${version}/vspackage\"; \\\n        mkdir -p \"/usr/local/lib/code-server/lib/vscode/extensions/${extention}-${version}\"; \\\n        bsdtar --strip-components=1 -xf \"/tmp/${extention}-${version}.vsix\" \\\n                    -C \"/usr/local/lib/code-server/lib/vscode/extensions/${extention}-${version}\" extension; \\\n        [ $? -ne 0 ] && exit 1; \\\n        sleep 1; \\\n    done \\\n    && ls -la /usr/local/lib/code-server/lib/vscode/extensions/ \\\n\n    && curl -f -L -s -o /usr/bin/ha \\\n        \"https://github.com/home-assistant/cli/releases/download/4.18.0/ha_${BUILD_ARCH}\" \\\n    && chmod a+x /usr/bin/ha \\\n\n    && git clone --branch master --single-branch --depth 1 \\\n        \"https://github.com/robbyrussell/oh-my-zsh.git\" ~/.oh-my-zsh \\\n\n    && git clone --branch master --single-branch --depth 1 \\\n        \"https://github.com/zsh-users/zsh-autosuggestions\" \\\n        ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions \\\n    && git clone --branch master --single-branch --depth 1 \\\n        \"https://github.com/zsh-users/zsh-syntax-highlighting.git\" \\\n        ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting \\\n\n    && sed -i -e \"s#bin/bash#bin/zsh#\" /etc/passwd \\\n\n    && update-alternatives \\\n        --install /usr/bin/python python /usr/bin/python3 10 \\\n\n    && pip3 install --no-cache-dir -r /tmp/requirements.txt \\\n\n    && apt-get purge -y --auto-remove \\\n        bsdtar \\\n        build-essential \\\n        python3-dev \\\n        uuid-runtime \\\n\n    && find /usr/local \\\n        \\( -type d -a -name test -o -name tests -o -name '__pycache__' \\) \\\n        -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n        -exec rm -rf '{}' + \\\n\n    && rm -fr \\\n        /root/.cache \\\n        /tmp/* \\\n        /var/{cache,log}/* \\\n        /var/lib/apt/lists/* && rm /tmp/code.tar.gz\n\n# Copy root filesystem\nCOPY rootfs /\n\n# Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_DESCRIPTION\nARG BUILD_NAME\nARG BUILD_REF\nARG BUILD_REPOSITORY\nARG BUILD_VERSION\n\n# Labels\nLABEL \\\n    io.hass.name=\"${BUILD_NAME}\" \\\n    io.hass.description=\"${BUILD_DESCRIPTION}\" \\\n    io.hass.arch=\"${BUILD_ARCH}\" \\\n    io.hass.type=\"addon\" \\\n    io.hass.version=${BUILD_VERSION} \\\n    maintainer=\"Franck Nijhof <frenck@addons.community>\" \\\n    org.opencontainers.image.title=\"${BUILD_NAME}\" \\\n    org.opencontainers.image.description=\"${BUILD_DESCRIPTION}\" \\\n    org.opencontainers.image.vendor=\"Home Assistant Community Add-ons\" \\\n    org.opencontainers.image.authors=\"Franck Nijhof <frenck@addons.community>\" \\\n    org.opencontainers.image.licenses=\"MIT\" \\\n    org.opencontainers.image.url=\"https://addons.community\" \\\n    org.opencontainers.image.source=\"https://github.com/${BUILD_REPOSITORY}\" \\\n    org.opencontainers.image.documentation=\"https://github.com/${BUILD_REPOSITORY}/blob/main/README.md\" \\\n    org.opencontainers.image.created=${BUILD_DATE} \\\n    org.opencontainers.image.revision=${BUILD_REF} \\\n    org.opencontainers.image.version=${BUILD_VERSION}\n"
}