{
  "startTime": 1674248596655,
  "endTime": 1674248597341,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILD_FROM=ghcr.io/hassio-addons/base-python/amd64:6.0.0\n# hadolint ignore=DL3006\nFROM ${BUILD_FROM}\n\n# Set shell\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Copy yq\nARG BUILD_ARCH=amd64\nCOPY bin/yq_${BUILD_ARCH} /usr/bin/yq\n\n# Copy Python requirements file\nCOPY requirements.txt /tmp/\n\n# Setup Matrix Synapse\nRUN \\\n    apk add --no-cache --virtual .build-dependencies \\\n        build-base=0.5-r2 \\\n        libffi-dev=3.3-r2 \\\n        libjpeg-turbo-dev=2.0.6-r0\t \\\n        libressl-dev=3.1.5-r0 \\\n        libxslt-dev=1.1.34-r0 \\\n        linux-headers=5.7.8-r0 \\\n        musl-dev=1.2.2-r0 \\\n        postgresql-dev=13.1-r2 \\\n        zlib-dev=1.2.11-r3 \\\n    \\\n    && apk add --no-cache \\\n        libffi=3.3-r2 \\\n        libjpeg-turbo=2.0.6-r0 \\\n        libpq=13.1-r2 \\\n        libressl=3.1.5-r0 \\\n        libxslt=1.1.34-r0 \\\n        lua-resty-http=0.15-r0 \\\n        nginx-mod-http-lua=1.18.0-r13 \\\n        nginx=1.18.0-r13 \\\n        su-exec=0.2-r1 \\\n        tiff=4.1.0-r2 \\\n        zlib=1.2.11-r3 \\\n    \\\n    && pip3 install \\\n        --no-cache-dir \\\n        --find-links \"https://wheels.home-assistant.io/alpine-3.11/${BUILD_ARCH}/\" \\\n        -r /tmp/requirements.txt \\\n    \\\n    && mkdir -p /opt/riot \\\n    && curl -f -J -L -o /tmp/riot.tar.gz \\\n        \"https://github.com/vector-im/riot-web/releases/download/v1.6.4/riot-v1.6.4.tar.gz\" \\\n    && tar xzf /tmp/riot.tar.gz -C /opt/riot --strip 1 \\\n\n    && find /usr/local \\\n        \\( -type d -a -name test -o -name tests -o -name '__pycache__' \\) \\\n        -o \\( -type f -a -name '*.pyc' -o -name '*.pyo' \\) \\\n        -exec rm -rf '{}' + \\\n\n    && apk del --purge .build-dependencies \\\n    && rm -fr \\\n        /etc/nginx \\\n        /tmp/* && rm /tmp/riot.tar.gz\n\n# Copy root filesystem\nCOPY rootfs /\n\n# Build arguments\nARG BUILD_ARCH\nARG BUILD_DATE\nARG BUILD_DESCRIPTION\nARG BUILD_NAME\nARG BUILD_REF\nARG BUILD_REPOSITORY\nARG BUILD_VERSION\n\n# Labels\nLABEL \\\n    io.hass.name=\"${BUILD_NAME}\" \\\n    io.hass.description=\"${BUILD_DESCRIPTION}\" \\\n    io.hass.arch=\"${BUILD_ARCH}\" \\\n    io.hass.type=\"addon\" \\\n    io.hass.version=${BUILD_VERSION} \\\n    maintainer=\"Timmo <contact@timmo.xyz>\" \\\n    org.opencontainers.image.title=\"${BUILD_NAME}\" \\\n    org.opencontainers.image.description=\"${BUILD_DESCRIPTION}\" \\\n    org.opencontainers.image.vendor=\"Home Assistant Community Add-ons\" \\\n    org.opencontainers.image.authors=\"Timmo <contact@timmo.xyz>\" \\\n    org.opencontainers.image.licenses=\"MIT\" \\\n    org.opencontainers.image.url=\"https://addons.community\" \\\n    org.opencontainers.image.source=\"https://github.com/${BUILD_REPOSITORY}\" \\\n    org.opencontainers.image.documentation=\"https://github.com/${BUILD_REPOSITORY}/blob/main/README.md\" \\\n    org.opencontainers.image.created=${BUILD_DATE} \\\n    org.opencontainers.image.revision=${BUILD_REF} \\\n    org.opencontainers.image.version=${BUILD_VERSION}\n"
}