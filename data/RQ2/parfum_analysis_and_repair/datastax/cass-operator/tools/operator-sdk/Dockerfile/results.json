{
  "startTime": 1674217821976,
  "endTime": 1674217822495,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 148
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##############################################\n#\n# Stage 1: Installing the operator-sdk\n#\n##############################################\n\nFROM golang:1.14-stretch as install-operator-sdk\n\n# This Dockerfile sets up a clean go 1.14 environment with operator-sdk installed and tested.\n#\n# It is not part of any operator build system, but rather exists to serve as reference clean\n# install of operator-sdk (pinned to a released version), their example project, and the kubernetes\n# CLI tools, including the client-gen code generator.\n#\n# A good way for a developer to use it would be to mount the cass-operator git repo into the GOPATH\n# inside the container. Something like...\n# docker run -v /Users/jim/datastax/cass-operator:/go/src/github.com/datastax/cass-operator ...\n\nENV OP_SDK_VERSION=v0.17.0\nENV GOPROXY=https://proxy.golang.org,https://gocenter.io,direct\n\nWORKDIR /usr/bin\n\n# Download the specific operator-sdk we are pinned to\n# and assign permissions\nRUN curl -f -OJL https://github.com/operator-framework/operator-sdk/releases/download/${OP_SDK_VERSION}/operator-sdk-${OP_SDK_VERSION}-x86_64-linux-gnu\nRUN mv operator-sdk-${OP_SDK_VERSION}-x86_64-linux-gnu operator-sdk\nRUN chmod 700 operator-sdk\n\n\n##############################################\n#\n# Stage 2: Testing the operator-sdk\n#\n##############################################\n\nFROM install-operator-sdk as test-operator-sdk\n\n# This stage exists to test the operator-sdk itself using their example project,\n# and the kubernetes CLI tools, including the client-go code generator.\n\n# This git configuration is required to run \"operator-sdk new\"\nRUN git config --global user.email \"you@example.com\"\nRUN git config --global user.name \"Your Name\"\n\n# The next steps follow the operator-sdk getting started tutorial\n# located at: https://github.com/operator-framework/operator-sdk#create-and-deploy-an-app-operator\nWORKDIR $GOPATH/src/github.com/example-inc/\nRUN GO111MODULE=on operator-sdk new memcached-operator\n\nWORKDIR $GOPATH/src/github.com/example-inc/memcached-operator\nRUN GO111MODULE=on operator-sdk add api --api-version=memcached.com/v1alpha1 --kind=Memcached\n\n# We now have to pull the code generator down as a separate step\n# Add a tools.go to the example project that requires the code-generator\n# see: https://github.com/docker-library/openjdk/blob/8a23a228bda7d2edeb4132fffd2d08c1e1fcf4ac/8-jdk/Dockerfile#L28-L36\nRUN { \\\n    echo 'package tools'; \\\n    echo ''; \\\n    echo 'import ('; \\\n    echo '        _ \"k8s.io/code-generator/cmd/client-gen\"'; \\\n    echo '        _ \"k8s.io/code-generator/cmd/conversion-gen\"'; \\\n    echo '        _ \"k8s.io/code-generator/cmd/deepcopy-gen\"'; \\\n    echo '        _ \"k8s.io/code-generator/cmd/informer-gen\"'; \\\n    echo '        _ \"k8s.io/code-generator/cmd/lister-gen\"'; \\\n    echo '        _ \"k8s.io/gengo/args\"'; \\\n    echo '        _ \"k8s.io/kube-openapi/cmd/openapi-gen\"'; \\\n    echo '        _ \"sigs.k8s.io/controller-tools/pkg/crd\"'; \\\n    echo ')'; \\\n    } > $GOPATH/src/github.com/example-inc/memcached-operator/tools.go\n\nRUN GO111MODULE=on go mod tidy\nRUN GO111MODULE=on go mod download\nRUN GO111MODULE=on operator-sdk generate k8s --verbose\nRUN GO111MODULE=on operator-sdk generate crds --verbose\nRUN GO111MODULE=on operator-sdk generate csv --verbose\n\n# The next steps use the kubernetes code-generator to make a client\n# The code-generator currently needs to exist in the\n# pre-module style path of $GOPATH/src/...\n# So we copy the specific version that this operator-sdk pulled down and move it\n# into the required path.\nWORKDIR $GOPATH/src/k8s.io\nRUN cp -r \"/go/pkg/mod/k8s.io/code-generator@v0.17.4\" \"code-generator\"\n\nWORKDIR $GOPATH/src/k8s.io/code-generator\nRUN chmod 700 generate-groups.sh\n\nWORKDIR $GOPATH/src/github.com/example-inc/memcached-operator\n\nRUN sed -i 's|.*type Memcached struct.*|// +genclient\\n&|' pkg/apis/memcached/v1alpha1/memcached_types.go\n\nRUN cd $GOPATH/src/k8s.io/code-generator\n\nRUN GO111MODULE=on $GOPATH/src/k8s.io/code-generator/generate-groups.sh \\\n    client,lister,informer \\\n    github.com/example-inc/memcached-operator/pkg/generated \\\n    github.com/example-inc/memcached-operator/pkg/apis \\\n    memcached:v1alpha1\n\n# This fails right now :(\n# RUN GO111MODULE=on go build ./...\n\nRUN GO111MODULE=on go build ./cmd/manager\n"
}