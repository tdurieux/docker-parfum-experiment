{
  "startTime": 1674254749307,
  "endTime": 1674254749991,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# set environment variables\nENV DEBIAN_FRONTEND=noninteractive\nENV LD_LIBRARY_PATH=/usr/local/lib\nENV PYTHONPATH=/usr/local/lib\nENV ARROW_HOME=/usr/local\nENV PYARROW_CMAKE_GENERATOR=Ninja\n\n# install packages\nRUN apt-get update -yq && \\\n    apt-get install -yq --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        curl \\\n        git \\\n        libcurl4-openssl-dev \\\n        libssl-dev \\\n        ninja-build \\\n        openjdk-8-jre-headless \\\n        python3-dev \\\n        python3-pip && \\\n    apt-get clean && rm -rf /var/lib/apt/lists*\n\n# download required resources into /tmp\nWORKDIR /tmp\nRUN curl -f -LO https://github.com/kaitai-io/kaitai_struct_compiler/releases/download/0.9/kaitai-struct-compiler_0.9_all.deb && \\\n    curl -f -LO https://boostorg.jfrog.io/artifactory/main/release/1.76.0/source/boost_1_76_0.tar.bz2 && \\\n    git clone https://github.com/kaitai-io/kaitai_struct_cpp_stl_runtime.git && \\\n    git clone https://github.com/apache/arrow.git && \\\n    git clone https://github.com/lz4/lz4 && \\\n    tar --bzip2 -xf ./boost_1_76_0.tar.bz2 && rm ./boost_1_76_0.tar.bz2\n\n# install boost\nWORKDIR /tmp/boost_1_76_0\nRUN ./bootstrap.sh \\\n        --with-python=\"$(which python3)\" \\\n        --with-libraries=filesystem,log,python,iostreams,program_options && \\\n    ./b2 install\n\n# install kaitai-struct-compiler and the kaitai struct C++ stl runtime\nWORKDIR /tmp/kaitai_struct_cpp_stl_runtime/build\nRUN apt-get install -yq --no-install-recommends /tmp/kaitai-struct-compiler_0.9_all.deb && \\\n    cmake -GNinja .. && \\\n    cmake --build . && \\\n    cmake --install . && rm -rf /var/lib/apt/lists/*;\n\n# install arrow python requirements\nRUN python3 -m pip install --upgrade pip && \\\n    python3 -m pip install -U setuptools wheel && \\\n    python3 -m pip install -r /tmp/arrow/python/requirements-build.txt\n\n# install arrow\nWORKDIR /tmp/arrow/cpp/release\nRUN cmake -GNinja \\\n        -DARROW_PARQUET=ON \\\n        -DARROW_S3=ON \\\n        -DARROW_WITH_LZ4=ON \\\n        -DARROW_PYTHON=ON \\\n        .. && \\\n    cmake --build . && \\\n    cmake --install .\n\n# install pyarrow\nWORKDIR /tmp/arrow/python\nRUN rm -rf build && \\\n    python3 setup.py install\n\n# install lz4\nWORKDIR /tmp/lz4\nRUN make && make install\n\n# copy and build project\nWORKDIR /home\nCOPY . .\nWORKDIR /home/build\nRUN cmake -GNinja -DCMAKE_BUILD_TYPE=Release .. && \\\n    cmake --build . && \\\n    cmake --install .\n\nEXPOSE 9143\n\nENTRYPOINT [ \"sstable-to-arrow\" ]\nCMD [ \"-h\" ]\n"
}