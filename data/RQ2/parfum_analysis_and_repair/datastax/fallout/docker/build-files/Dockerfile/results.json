{
  "startTime": 1674215015441,
  "endTime": 1674215016246,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedDockerfile": "# To build a docker image for fallout, use './gradlew dockerBuild` in the\n# project root directory.  This Dockerfile won't do anything useful with a\n# direct `docker build` invocation.\n\nFROM openjdk:17-buster\n\n# Make apt and debconf be quiet\nRUN --mount=type=bind,source=build-files,target=build-files \\\n    build-files/configure-apt.sh\n\nRUN apt-get update\n# install apt-utils to make debian be quiet about it not being there in later\n# installs\nRUN apt-get install -y --no-install-recommends apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade\n\n# Tools to support ENTRYPOINT and CMD\nRUN apt-get install -y --no-install-recommends wait-for-it gosu && rm -rf /var/lib/apt/lists/*;\n\n# Additional packages needed to run python-based tools\nRUN apt-get install -y --no-install-recommends \\\n    virtualenv \\\n    python3.7 python3-pip python3.7-venv && rm -rf /var/lib/apt/lists/*;\n\n# Add the github key to known_hosts so we can clone repos as root\nRUN mkdir -m=0700 ~/.ssh\nRUN touch ~/.ssh/known_hosts\nRUN chmod 0600 ~/.ssh/known_hosts\n\n# Taken from https://help.github.com/en/github/authenticating-to-github/testing-your-ssh-connection\nARG github_host_key_fingerprint=\"SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8\"\n\n# Mostly copied from https://serverfault.com/a/971922/41102\nRUN if [ \"$(ssh-keyscan -H -t rsa github.com 2>/dev/null | \\\n            tee -a ~/.ssh/known_hosts | \\\n            ssh-keygen -lf - | \\\n            cut -d' ' -f 2)\" != \"${github_host_key_fingerprint}\" ]; then \\\n        echo \"Bad github host key\" 1>&2; \\\n        exit 1; \\\n    fi\n\nARG uid=1000\nARG gid=1000\nARG user_home=\"/home/fallout\"\nRUN groupadd --gid ${gid} fallout && \\\n    useradd --create-home fallout --uid ${uid} --gid ${gid}\n\n# Make sure the fallout user also has the github key\nRUN cp -a ~/.ssh ~fallout/.ssh && \\\n    chown fallout:fallout ~fallout/.ssh\n\nENV FALLOUT_HOME=\"${user_home}\"\n\nWORKDIR ${FALLOUT_HOME}\n\nUSER fallout\n\n# Ensure ~/.local/bin is in the path; some OS's don't do this\nENV PATH=\"${user_home}/.local/bin:${PATH}\"\n\n# Install python support\nRUN --mount=type=cache,target=${user_home}/.cache/pip,uid=${uid},gid=${gid} \\\n    --mount=type=bind,source=pip-conf,target=${user_home}/.config/pip \\\n    --mount=type=bind,source=build-files,target=build-files \\\n    python3 -m pip install --user --upgrade pip && \\\n    python3 -m pip install --user poetry\n\nCOPY --chown=fallout:fallout image-files .\n\nRUN mkdir -p tests run\n\nRUN --mount=type=cache,target=${user_home}/.cache/pip,uid=${uid},gid=${gid} \\\n    --mount=type=cache,target=${user_home}/.cache/pypoetry,uid=${uid},gid=${gid} \\\n    --mount=type=bind,source=pip-conf,target=${user_home}/.config/pip \\\n    \"${FALLOUT_HOME}/lib/tools/support/install-python-tools\" run\n\n# Switch to root so that gosu-with-access-to-ssh-auth-sock can do the\n# things it needs to do; it will switch back to fallout to run commands\nUSER root\n\n# Cassandra\nENV FALLOUT_CASSANDRA_HOST=\"cassandra\"\nENV FALLOUT_CASSANDRA_PORT=\"9042\"\nENV PATH=\"${FALLOUT_HOME}/bin:${PATH}\"\n\nENTRYPOINT [\"./gosu-with-access-to-ssh-auth-sock.sh\", \"fallout\"]\n\nCMD wait-for-it \\\n  --host=${FALLOUT_CASSANDRA_HOST} \\\n  --port=${FALLOUT_CASSANDRA_PORT} \\\n  --strict --timeout=600 -- \\\n  bin/fallout standalone\n"
}