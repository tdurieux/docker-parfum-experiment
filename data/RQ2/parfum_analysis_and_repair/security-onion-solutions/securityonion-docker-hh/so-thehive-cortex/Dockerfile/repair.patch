diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/security-onion-solutions/securityonion-docker-hh/so-thehive-cortex/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/security-onion-solutions/securityonion-docker-hh/so-thehive-cortex/Dockerfile/repaired.Dockerfile
index 300bad5..48f99b7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/security-onion-solutions/securityonion-docker-hh/so-thehive-cortex/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/security-onion-solutions/securityonion-docker-hh/so-thehive-cortex/Dockerfile/repaired.Dockerfile
@@ -3,8 +3,8 @@ FROM centos:7
 LABEL maintainer "Security Onion Solutions, LLC"
 LABEL description="Cortex Docker container for use with Security Onion"
 RUN yum update -y
-RUN yum install -y https://dl.bintray.com/thehive-project/rpm-stable/cortex-3.0.1-1.noarch.rpm 
-RUN yum -y install cortex wget git
+RUN yum install -y https://dl.bintray.com/thehive-project/rpm-stable/cortex-3.0.1-1.noarch.rpm && rm -rf /var/cache/yum
+RUN yum -y install cortex wget git && rm -rf /var/cache/yum
 RUN groupmod -g 939 cortex \
   && usermod -u 939 -g 939 cortex \
   && ls -la /opt \
@@ -12,16 +12,18 @@ RUN groupmod -g 939 cortex \
 RUN mkdir -p /opt/cortex/conf
 RUN chown -R cortex /opt/cortex \
      /var/log/cortex
-     
-     
-RUN yum update -y && yum -y install epel-release
-RUN yum -y install https://centos7.iuscommunity.org/ius-release-el7.rpm
-RUN yum -y makecache && yum -y install python36u python36u-pip && pip3.6 install --upgrade pip && yum clean all
+
+
+RUN yum update -y && yum -y install epel-release && rm -rf /var/cache/yum
+RUN yum -y install https://centos7.iuscommunity.org/ius-release-el7.rpm && rm -rf /var/cache/yum
+RUN yum -y makecache && yum -y install python36u python36u-pip && pip3.6 install --upgrade pip && yum clean all && rm -rf /var/cache/yum
 
 RUN git clone https://github.com/TheHive-Project/Cortex-Analyzers
 
-RUN for I in $(find Cortex-Analyzers -name 'requirements.txt'); do pip3 install -r $I || true; done
-     
+RUN for I in $(find Cortex-Analyzers -name 'requirements.txt'); do \
+     pip3 install --no-cache-dir -r $I || true; \
+done
+
 USER cortex
 
 ENTRYPOINT ["/opt/cortex/bin/cortex"]