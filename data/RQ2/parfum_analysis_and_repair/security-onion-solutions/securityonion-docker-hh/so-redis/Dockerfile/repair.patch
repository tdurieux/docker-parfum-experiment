diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/security-onion-solutions/securityonion-docker-hh/so-redis/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/security-onion-solutions/securityonion-docker-hh/so-redis/Dockerfile/repaired.Dockerfile
index d373007..ee73ef7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/security-onion-solutions/securityonion-docker-hh/so-redis/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/security-onion-solutions/securityonion-docker-hh/so-redis/Dockerfile/repaired.Dockerfile
@@ -11,22 +11,22 @@ RUN groupadd -r socore --gid 939 && useradd -r --uid 939 -g socore socore
 # https://github.com/tianon/gosu/releases
 ENV GOSU_VERSION 1.10
 RUN set -ex; \
-	\
+
 	fetchDeps='ca-certificates wget'; \
 	apt-get update; \
 	apt-get install -y --no-install-recommends $fetchDeps; \
 	rm -rf /var/lib/apt/lists/*; \
-	\
+
 	dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"; \
 	wget -O /usr/local/bin/gosu "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch"; \
 	wget -O /usr/local/bin/gosu.asc "https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc"; \
-	export GNUPGHOME="$(mktemp -d)"; \
-	gpg --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
+	export GNUPGHOME="$(mktemp -d)"; rm -rf -d \
+	gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \
 	gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \
 	rm -r "$GNUPGHOME" /usr/local/bin/gosu.asc; \
 	chmod +x /usr/local/bin/gosu; \
 	gosu nobody true; \
-	\
+
 	apt-get purge -y --auto-remove $fetchDeps
 
 ENV REDIS_VERSION 4.0.11
@@ -35,7 +35,7 @@ ENV REDIS_DOWNLOAD_SHA fc53e73ae7586bcdacb4b63875d1ff04f68c5474c1ddeda78f00e5ae2
 
 # for redis-sentinel see: http://redis.io/topics/sentinel
 RUN set -ex; \
-	\
+
 	buildDeps=' \
 		wget \
 		\
@@ -46,13 +46,13 @@ RUN set -ex; \
 	apt-get update; \
 	apt-get install -y $buildDeps --no-install-recommends; \
 	rm -rf /var/lib/apt/lists/*; \
-	\
+
 	wget -O redis.tar.gz "$REDIS_DOWNLOAD_URL"; \
-	echo "$REDIS_DOWNLOAD_SHA *redis.tar.gz" | sha256sum -c -; \
+	echo "$REDIS_DOWNLOAD_SHA  *redis.tar.gz" | sha256sum -c -; \
 	mkdir -p /usr/src/redis; \
 	tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \
 	rm redis.tar.gz; \
-	\
+
 # disable Redis protected mode [1] as it is unnecessary in context of Docker
 # (ports are not automatically exposed when running inside Docker, but rather explicitly by specifying -p / -P)
 # [1]: https://github.com/antirez/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da
@@ -62,12 +62,12 @@ RUN set -ex; \
 # for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently "if you specify any argument to redis-server, [it assumes] you are going to specify everything"
 # see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840
 # (more exactly, this makes sure the default behavior of "save on SIGTERM" stays functional by default)
-	\
+
 	make -C /usr/src/redis -j "$(nproc)"; \
 	make -C /usr/src/redis install; \
-	\
+
 	rm -r /usr/src/redis; \
-	\
+
 	apt-get purge -y --auto-remove $buildDeps
 
 RUN mkdir /data && chown 939:939 /data