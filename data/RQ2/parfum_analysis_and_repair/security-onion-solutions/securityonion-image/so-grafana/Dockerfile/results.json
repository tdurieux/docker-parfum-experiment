{
  "startTime": 1674249150368,
  "endTime": 1674249151004,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM ghcr.io/security-onion-solutions/ubuntu:18.04\nLABEL maintainer \"Security Onion Solutions, LLC\"\nLABEL description=\"Grafana running in Docker container for use with Security Onion\"\n\nARG GRAFANA_URL=\"https://dl.grafana.com/oss/release/grafana-8.4.1.linux-amd64.tar.gz\"\nARG GF_UID=\"939\"\nARG GF_GID=\"939\"\n\n# Common Ubuntu layer\nRUN apt-get update && \\\n    apt-get --no-install-recommends --no-install-suggests -y install \\\n        curl \\\n        ca-certificates \\\n        build-essential && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=/usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    GF_PATHS_CONFIG=\"/etc/grafana/grafana.ini\" \\\n    GF_PATHS_DATA=\"/var/lib/grafana\" \\\n    GF_PATHS_HOME=\"/usr/share/grafana\" \\\n    GF_PATHS_LOGS=\"/var/log/grafana\" \\\n    GF_PATHS_PLUGINS=\"/var/lib/grafana/plugins\" \\\n    GF_PATHS_PROVISIONING=\"/etc/grafana/provisioning\"\n\nRUN apt-get install --no-install-recommends -y tar libfontconfig && \\\n    mkdir -p \"$GF_PATHS_HOME/.aws\" && \\\n    curl -f \"$GRAFANA_URL\" | tar xfvz - --strip-components=1 -C \"$GF_PATHS_HOME\" && \\\n    apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    groupadd -r -g $GF_GID socore && \\\n    useradd -r -u $GF_UID -g $GF_GID socore && \\\n    mkdir -p \"$GF_PATHS_PROVISIONING/datasources\" \\\n             \"$GF_PATHS_PROVISIONING/dashboards\" \\\n             \"$GF_PATHS_LOGS\" \\\n             \"$GF_PATHS_PLUGINS\" \\\n             \"$GF_PATHS_DATA\" && \\\n    cp \"$GF_PATHS_HOME/conf/sample.ini\" \"$GF_PATHS_CONFIG\" && \\\n    cp \"$GF_PATHS_HOME/conf/ldap.toml\" /etc/grafana/ldap.toml\n\nRUN grafana-cli --pluginsDir \"$GF_PATHS_PLUGINS\" plugins install mtanda-histogram-panel \\\n    && grafana-cli --pluginsDir \"$GF_PATHS_PLUGINS\" plugins install grafana-piechart-panel \\\n    && grafana-cli --pluginsDir \"$GF_PATHS_PLUGINS\" plugins install grafana-clock-panel \\\n    && grafana-cli --pluginsDir \"$GF_PATHS_PLUGINS\" plugins install grafana-simple-json-datasource \\\n    && grafana-cli --pluginsDir \"$GF_PATHS_PLUGINS\" plugins install ryantxu-ajax-panel \\\n    && grafana-cli --pluginsDir \"$GF_PATHS_PLUGINS\" plugins install michaeldmoore-multistat-panel\n\nRUN chown -R socore:socore \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" && \\\n    chmod 777 \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\"\n\nEXPOSE 3000\n\nCOPY ./run.sh /run.sh\nRUN chmod +x /run.sh\n\nUSER socore\nWORKDIR /\nENTRYPOINT [ \"/run.sh\" ]\n"
}