{
  "startTime": 1674220747962,
  "endTime": 1674220748630,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################################\n# This Dockerfile can be used to build an image where the HTML version of the\n# docs for SymPy can be built.\n#\n# BASIC USAGE\n# ===========\n#\n# If SYMPY_ROOT is the directory where the sympy repository lives, then you can\n# build the image with\n#\n#   $ cd SYMPY_ROOT/doc\n#   $ docker build -f Dockerfile.htmldoc -t sympy_htmldoc .\n#\n# Once the image is built, you can build the docs at any time (and from any\n# directory) using\n#\n#   $ docker run --rm -v /absolute/path/to/SYMPY_ROOT:/sympy sympy_htmldoc\n#\n# (substitute the actual absolute filesystem path to SYMPY_ROOT).\n#\n# The documentation will be built in SYMPY_ROOT's doc/_build/html directory.\n#\n# LIVEHTML SERVER\n# ===============\n#\n# Alternatively, you can use the image to run the \"livehtml\" server. For\n# example, use\n#\n#   $ docker run --rm -it \\\n#       -v /absolute/path/to/SYMPY_ROOT:/sympy \\\n#       -p 8000:80 \\\n#       sympy_htmldoc live\n#\n# and then navigate your browser to localhost:8000. You can use a different\n# port by changing the 8000 in the command.\n#\n# This will automatically detect changes in the doc sources, rebuild, and\n# update the page in the browser.\n#\n# When finished, you can stop the server with ctrl-c in the terminal.\n#\n# If you want to instead run the server in detached mode, you can use\n#\n#   $ docker run --rm -d --name=sympy-livehtml \\\n#       -v /absolute/path/to/SYMPY_ROOT:/sympy \\\n#       -p 8000:80 \\\n#       sympy_htmldoc live\n#\n# and then\n#\n#   $ docker stop sympy-livehtml\n#\n# when you are finished.\n#\n###############################################################################\n\nFROM python:3.8.12-slim-buster\n\nRUN apt-get update && apt-get install --no-install-recommends -y make librsvg2-bin imagemagick graphviz git && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements.txt /tmp\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r /tmp/requirements.txt\n\nRUN echo '#!/bin/bash \\n\\\ncase $1 in \\n\\\n  live) \\n\\\n    cd /sympy/doc; make livehtml LIVEHOST=0.0.0.0 LIVEPORT=80 \\n\\\n    ;; \\n\\\n  *) \\n\\\n    cd /sympy/doc; make html \\n\\\n    ;; \\n\\\nesac \\n\\\n' > /usr/local/bin/makehtml.sh\nRUN chmod +x /usr/local/bin/makehtml.sh\n\nENTRYPOINT [\"makehtml.sh\"]\n"
}