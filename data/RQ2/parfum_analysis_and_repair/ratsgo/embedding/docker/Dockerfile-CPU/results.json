{
  "startTime": 1674252685570,
  "endTime": 1674252686700,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.12.0-py3\nMAINTAINER ratsgo <ratsgo@naver.com>\n\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends -y wget language-pack-ko openjdk-8-jdk curl git-core locales && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y locales language-pack-ko && rm -rf /var/lib/apt/lists/*;\nENV LANG ko_KR.UTF-8\nENV LANGUAGE ko_KR:en\nENV LC_ALL ko_KR.UTF-8\nRUN locale-gen ko_KR.UTF-8 \\\n && update-locale LANG=ko_KR.UTF-8 \\\n && dpkg-reconfigure locales\n\nRUN wget https://github.com/protocolbuffers/protobuf/releases/download/v3.7.1/protobuf-all-3.7.1.tar.gz \\\n && mkdir /notebooks/protobuf-3.7.1 \\\n && tar -zxf protobuf-all-3.7.1.tar.gz \\\n && cd /notebooks/protobuf-3.7.1 \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && ldconfig && rm protobuf-all-3.7.1.tar.gz\n\nRUN wget https://cmake.org/files/v3.14/cmake-3.14.3-Linux-x86_64.sh \\\n && mkdir /opt/cmake \\\n && sh cmake-3.14.3-Linux-x86_64.sh --prefix=/opt/cmake --skip-license \\\n && ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir konlpy cmake\n\nWORKDIR /notebooks\nRUN wget https://raw.githubusercontent.com/konlpy/konlpy/master/scripts/mecab.sh \\\n && bash mecab.sh\nRUN rm -rf /notebooks/*\n\nRUN git clone https://github.com/kakao/khaiii.git \\\n && mkdir /notebooks/khaiii/build \\\n && cd /notebooks/khaiii/build \\\n && cmake .. && make all && make resource && make install && make package_python \\\n && cd /notebooks/khaiii/build/package_python \\\n && pip install --no-cache-dir . \\\n && PATH=$PATH:/notebooks/khaiii/build/lib\n\nRUN pip install --no-cache-dir gensim soynlp soyspacing bokeh networkx selenium lxml pyldavis sentencepiece\n\nWORKDIR /notebooks\nRUN git clone http://github.com/stanfordnlp/glove \\\n && cd /notebooks/glove && make\n\nWORKDIR /notebooks\nRUN git clone https://github.com/facebookresearch/fastText.git \\\n && cd /notebooks/fastText && make \\\n && pip install --no-cache-dir .\n\nWORKDIR /notebooks\nRUN git clone https://github.com/ratsgo/embedding.git \\\n && cd /notebooks/embedding/models/swivel \\\n && make -f fastprep.mk\n\nRUN mv /notebooks/fastText /notebooks/embedding/models \\\n && mv /notebooks/glove /notebooks/embedding/models\n\nWORKDIR /notebooks\nRUN apt-get install -y --no-install-recommends fonts-nanum* \\\n && rm -rf /usr/share/fonts/truetype/dejavu \\\n && fc-cache -fv \\\n && wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 \\\n && tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 \\\n && mv phantomjs-2.1.1-linux-x86_64 /usr/local/share \\\n && rm phantomjs-2.1.1-linux-x86_64.tar.bz2 \\\n && ln -sf /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"en_US.UTF-8 UTF-8\" > /etc/locale.gen \\\n && locale-gen\n\nWORKDIR /notebooks/embedding"
}