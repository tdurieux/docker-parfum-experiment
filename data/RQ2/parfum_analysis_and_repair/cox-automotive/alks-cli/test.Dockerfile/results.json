{
  "startTime": 1674254531224,
  "endTime": 1674254532545,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:latest\n\nRUN DEBIAN_FRONTEND=noninteractive apt update\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y libsecret-1-dev curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -L https://raw.githubusercontent.com/tj/n/master/bin/n -o /usr/local/bin/n && chmod +x /usr/local/bin/n\nRUN n v14\nRUN apt install --no-install-recommends -y gnome-keyring dbus-x11 && rm -rf /var/lib/apt/lists/*;\n\n# Start the gnome keyring daemon when a bash session is initialized (requires passing --privileged when calling `docker run`)\nRUN echo '[ -z \"$GNOME_KEYRING_CONTROL\" ] && eval $(echo letmein | gnome-keyring-daemon --unlock | sed -e \"s/^/export /g\")' > /root/.bashrc\n\nCOPY . /root/alks-cli\n\nWORKDIR /root/alks-cli\n\n# keytar has a postinstall script that builds a binary and that build process needs some basic permissions to run.\n# When running `npm install` as root, npm switches to the `nobody` user (which has zero permissions) before executing\n# npm install scripts for security reasons to prevent install scripts from basically being able to run with root access.\n# This doesn't happen when running as any other user, so when running `npm install` as root you need to pass the\n# --unsafe-perm=true option to prevent npm from switching user to `nobody`.\n#\n# For the record, the permission that keytar needs is the ability to scan for a folder that it's supposed to create, so I\n# really hate that we have to do this for something so small but I could find no other way, aside from manually running\n# `npm run build` inside the `node_modules/keytar` folder - Ben W.\nRUN npm install --unsafe-perm=true . -g && npm cache clean --force;\n\n# Start a dbus session and then run /bash/bash as the callback\nENTRYPOINT [ \"dbus-run-session\", \"--\", \"/bin/bash\" ]"
}