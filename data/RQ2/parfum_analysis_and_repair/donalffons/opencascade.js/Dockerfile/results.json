{
  "startTime": 1674253401520,
  "endTime": 1674253402340,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 119
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 10
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM emscripten/emsdk:3.1.14 AS baseImage\n\nRUN \\\n  apt update -y && \\\n  apt install --no-install-recommends -y \\\n  bash \\\n  build-essential \\\n  cmake \\\n  curl \\\n  git \\\n  libffi-dev \\\n  libgdbm-dev \\\n  libncurses5-dev \\\n  libnss3-dev \\\n  libreadline-dev \\\n  libsqlite3-dev \\\n  libssl-dev \\\n  libbz2-dev \\\n  npm \\\n  python3 \\\n  python3-pip \\\n  python3-setuptools \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  pip install --no-cache-dir \\\n  libclang \\\n  pyyaml \\\n  cerberus \\\n  argparse\n\nWORKDIR /rapidjson/\nRUN \\\n  git clone https://github.com/Tencent/rapidjson.git .\n\nWORKDIR /freetype/\nRUN \\\n  git clone https://git.savannah.nongnu.org/git/freetype/freetype2.git .\n\nENV OCCT_COMMIT_HASH_FULL bb368e271e24f63078129283148ce83db6b9670a\nWORKDIR /occt/\nRUN \\\n  curl -f \"https://git.dev.opencascade.org/gitweb/?p=occt.git;a=snapshot;h=${OCCT_COMMIT_HASH_FULL};sf=tgz\" -o occt.tar.gz && \\\n  tar -xvf occt.tar.gz && \\\n  export OCCT_COMMIT_HASH=$(echo ${OCCT_COMMIT_HASH_FULL} | cut -c 1-7) && \\\n  mv occt-$OCCT_COMMIT_HASH/* . && \\\n  mv occt-$OCCT_COMMIT_HASH/.* . || true && \\\n  rm occt-$OCCT_COMMIT_HASH -r && rm occt.tar.gz\n\nWORKDIR /opencascade.js/\nCOPY src ./src\nWORKDIR /src/\n\nARG threading=single-threaded\nENV threading=$threading\n\nFROM baseImage AS testImage\n\nRUN \\\n  mkdir /opencascade.js/build/ && \\\n  mkdir /opencascade.js/dist/ && \\\n  /opencascade.js/src/applyPatches.py\n\nENTRYPOINT [\"/opencascade.js/src/buildFromYaml.py\"]\n\nFROM testImage AS customBuildImage\n\nRUN \\\n  /opencascade.js/src/generateBindings.py && \\\n  /opencascade.js/src/compileBindings.py ${threading} && \\\n  /opencascade.js/src/compileSources.py ${threading} && \\\n  chmod -R 777 /opencascade.js/ && \\\n  chmod -R 777 /occt\n\nENTRYPOINT [\"/opencascade.js/src/buildFromYaml.py\"]\n"
}