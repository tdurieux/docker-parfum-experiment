{
  "startTime": 1674252952189,
  "endTime": 1674252952941,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- builder stage ----\n\nFROM node:16-alpine AS builder\n\nCOPY pnpm-lock.yaml /opt/pnpm-lock.yaml\nCOPY api /opt/api\n\nRUN apk add --no-cache curl \\\n    && npm i -g pnpm \\\n    && mkdir /opt/api/certs \\\n    && curl -f -o /opt/api/certs/cert.pem https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem \\\n    && pnpm --dir=/opt/api install --no-strict-peer-dependencies \\\n    && pnpm --dir=/opt/api run build \\\n    && pnpm --dir=/opt/api run lint \\\n    && pnpm --dir=/opt/api run test \\\n    && rm -rf /opt/api/node_modules \\\n    && pnpm --dir=/opt/api install --frozen-lockfile --production && npm cache clean --force;\n\n# ---- production image ----\n\nFROM node:16-alpine\n\nCOPY --from=builder /opt/api/certs         /opt/touca/certs\nCOPY --from=builder /opt/api/dist          /opt/touca/dist\nCOPY --from=builder /opt/api/env           /opt/touca/env\nCOPY --from=builder /opt/api/samples       /opt/touca/samples\nCOPY --from=builder /opt/api/node_modules  /opt/touca/node_modules\n\nEXPOSE 8081\n\nCMD [\"node\", \"/opt/touca/dist/server.js\"]\n"
}