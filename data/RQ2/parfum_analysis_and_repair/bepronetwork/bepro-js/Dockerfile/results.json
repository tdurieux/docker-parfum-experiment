{
  "startTime": 1674249553729,
  "endTime": 1674249554539,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-buster\n\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Set debconf to run non-interactively\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# Install base dependencies\nRUN apt-get update && apt-get install -y -q --no-install-recommends \\\n        apt-transport-https \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        git \\\n        libssl-dev \\\n        wget \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION lts/fermium\n\n# Ensure NVM_DIR exists\nRUN mkdir -p $NVM_DIR;\n\n# Install nvm with node and npm\nRUN curl -f https://raw.githubusercontent.com/creationix/nvm/v0.38.0/install.sh | bash \\\n    && . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/v$NODE_VERSION/bin:$PATH\n\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y g++ make python2 && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python2 1\nRUN update-alternatives --config python\nRUN npm config set python python\n\nWORKDIR /app\n\nCOPY package*.json ./\nRUN npm i && npm cache clean --force;\n\nCOPY . .\n\nRUN npm run-script build\n\nEXPOSE  9012\nCMD npm run watch\n"
}