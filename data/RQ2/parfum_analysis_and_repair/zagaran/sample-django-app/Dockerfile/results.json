{
  "startTime": 1674256170567,
  "endTime": 1674256171424,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# START_FEATURE docker\nFROM python:3.8.8-slim-buster\n\nWORKDIR /app\n\nADD requirements.txt /app/requirements.txt\n\nRUN set -ex \\\n    && buildDeps=\" \\\n      build-essential \\\n      libpq-dev \\\n    \" \\\n    && deps=\" \\\n      postgresql-client-11 \\\n    \" \\\n    && apt-get update && apt-get install -y $buildDeps $deps --no-install-recommends \\\n    && pip install --no-cache-dir -r /app/requirements.txt \\\n    && apt-get purge -y --auto-remove $buildDeps \\\n       $(! command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV VIRTUAL_ENV /env\nENV PATH /env/bin:$PATH\n\n# START_FEATURE django_react\nCOPY ./nwb.config.js /app/nwb.config.js\nCOPY ./package.json /app/package.json\nCOPY ./package-lock.json /app/package-lock.json\nRUN npm install && npm cache clean --force;\n# END_FEATURE django_react\n\nCOPY . /app/\nCOPY ./config/.env.example /app/config/.env\n\n# START_FEATURE django_react\nRUN ./node_modules/.bin/nwb build --no-vendor\n# END_FEATURE django_react\n\n# START_FEATURE sass_bootstrap\nRUN python manage.py compilescss\n# END_FEATURE sass_bootstrap\n\nRUN python manage.py collectstatic --noinput\n\nRUN rm /app/config/.env\n\nEXPOSE 8000\n\nCMD [\"gunicorn\", \"--bind\", \":8000\", \"--workers\", \"3\", \"config.wsgi:application\"]\n# END_FEATURE docker\n"
}