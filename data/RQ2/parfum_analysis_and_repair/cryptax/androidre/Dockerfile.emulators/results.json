{
  "startTime": 1674220577695,
  "endTime": 1674220579519,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 26,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "# ------------------------- Android RE environment image\nFROM ubuntu:20.04\n\nMAINTAINER Axelle Apvrille\nENV REFRESHED_AT 2021-02-22\n\nARG DEBIAN_FRONTEND=noninteractive\nARG SSH_PASSWORD\nARG VNC_PASSWORD\nARG JDK_VERSION=8\nENV ANDROID_SDK_VERSION \"6858069\"\n\n# docker run --name latest-ubuntu --network=host -e DISPLAY=$DISPLAY --rm -it ubuntu:20.04\nRUN apt-get update && apt-get install --no-install-recommends -yqq openjdk-${JDK_VERSION}-jdk libpulse0 libxcursor1 adb \\\n    git build-essential supervisor wget unzip zip \\\n    iptables iputils-ping \\\n    libxml2-dev libxslt-dev \\\n    openssh-server ssh \\\n    xvfb x11vnc xfce4 && rm -rf /var/lib/apt/lists/*;\n\n# --------------------- Android SDK and emulators\nENV ANDROID_SDK_ROOT /opt/android-sdk\nRUN mkdir -p ${ANDROID_SDK_ROOT} && wget -q -O \"/opt/android-sdk/tools-linux.zip\" https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip && unzip /opt/android-sdk/tools-linux.zip -d $ANDROID_SDK_ROOT && rm -f  /opt/android-sdk/tools-linux.zip && cd ${ANDROID_SDK_ROOT}/cmdline-tools && mkdir -p tools/latest && mv bin/* ./tools/latest && mv lib/ tools && rmdir bin\nENV PATH $PATH:${ANDROID_SDK_ROOT}/cmdline-tools/tools/latest\nRUN echo y | sdkmanager --update\nRUN yes |  sdkmanager --licenses\nRUN echo \"yes\" | sdkmanager \"emulator\" \\\n    \"tools\" \\\n    \"platform-tools\" \\\n    \"build-tools;31.0.0-rc1\" \\\n    \"platforms;android-22\" \\\n    \"platforms;android-30\" \\\n    \"system-images;android-22;google_apis;armeabi-v7a\" \\\n    \"system-images;android-30;google_apis;x86_64\"\n\nRUN echo \"no\" | avdmanager create avd -n \"Android51\" -k \"system-images;android-22;google_apis;armeabi-v7a\"\nRUN echo \"no\" | avdmanager create avd -n \"Android11_x86_64\" -k \"system-images;android-30;google_apis;x86_64\"\nENV LD_LIBRARY_PATH $LD_LIBRARY_PATH:${ANDROID_SDK_ROOT}/emulator/lib64:${ANDROID_SDK_ROOT}/emulator/lib64/qt/lib\n\n# for the \"root without --no-sandbox\" bug\nENV QTWEBENGINE_DISABLE_SANDBOX 1\n\n# ------------------------ Dexcalibur -----------------------------------------------------\nENV FRIDA_SERVER frida-server-14.2.13-android-x86_64.xz\nRUN apt install --no-install-recommends -yqq curl dirmngr apt-transport-https lsb-release ca-certificates \\\n        python3-pip python && rm -rf /var/lib/apt/lists/*;\nRUN curl -fsSL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt install -y --no-install-recommends nodejs && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir frida-tools\nRUN npm install -g npm && npm install -g dexcalibur && npm cache clean --force;\nRUN mkdir -p /workshop && wget -q -O /workshop/${FRIDA_SERVER} https://github.com/frida/frida/releases/download/14.2.13/${FRIDA_SERVER} && cd /workshop && unxz ${FRIDA_SERVER}\n\n# ------------------------ Install SSH access ---------------------------------------------\nRUN mkdir /var/run/sshd \\\n    && echo \"root:${SSH_PASSWORD}\" | chpasswd \\\n    && echo \"PermitRootLogin yes\" >> /etc/ssh/sshd_config \\\n    && echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config \\\n    && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n# SSH login fix. Otherwise user is kicked off after login\n\n# ------------------------- Install VNC server - we need GLX support for Android emulator\nCOPY ./setup/startXvfb.sh /root/startXvfb.sh\nRUN mkdir ~/.vnc \\\n    && x11vnc -storepasswd ${VNC_PASSWORD} ~/.vnc/passwd \\\n    && chmod u+x /root/startXvfb.sh\n\n# We need supervisor to launch SSH and VNC\nRUN mkdir -p /var/log/supervisor\nCOPY ./setup/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\nRUN echo \"export PATH=$PATH\" >> /etc/profile \\\n     && echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH\" >> /etc/profile \\\n     && echo \"export QTWEBENGINE_DISABLE_SANDBOX=1\" >> /etc/profile\nRUN echo \"alias emulator5='/opt/android-sdk/emulator/emulator -avd Android51 -no-audio -partition-size 512 -no-boot-anim'\" >> /root/.bashrc \\\n    && echo \"alias emulator='/opt/android-sdk/tools/emulator -avd Android11_x86_64 -no-audio -no-boot-anim'\" >> /root/.bashrc \\\n    && echo \"export LC_ALL=C\" >> /root/.bashrc\n\n# ------------------------- Clean up\n\nRUN apt-get clean && apt-get autoclean && apt-get autoremove -y && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /usr/share/doc/* > /dev/null 2>&1\n\n# ------------------------- Final matter\n\nWORKDIR /workshop\nVOLUME [\"/data\"] # to be used for instance to pass along samples\nCMD [ \"/usr/bin/supervisord\", \"-c\",  \"/etc/supervisor/conf.d/supervisord.conf\" ]\n\nEXPOSE 5554\nEXPOSE 5555\nEXPOSE 5900\nEXPOSE 5037\nEXPOSE 8000\nEXPOSE 22\n"
}