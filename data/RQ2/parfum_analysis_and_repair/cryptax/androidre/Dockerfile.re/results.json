{
  "startTime": 1674249255456,
  "endTime": 1674249256986,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 44,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 48,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 77,
        "columnEnd": 113
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 106,
        "lineEnd": 106,
        "columnStart": 88,
        "columnEnd": 127
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 37,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 74,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 170,
        "lineEnd": 170,
        "columnStart": 107,
        "columnEnd": 139
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "# ------------------------- A few multi stage builds to save MB (but not that much compared to the rest... :( )\nFROM alpine/git as clone\nWORKDIR /opt\nRUN git clone https://github.com/rednaga/axmlprinter\nRUN git clone --recursive https://github.com/CalebFenton/simplify\nRUN git clone https://github.com/skylot/jadx.git\n\nFROM gradle:6.8 as build\nWORKDIR /opt\nCOPY --from=clone /opt/axmlprinter /opt/axmlprinter\nRUN cd /opt/axmlprinter && ./gradlew jar\nCOPY --from=clone /opt/simplify /opt/simplify\nRUN cd /opt/simplify && ./gradlew fatjar\nCOPY --from=clone /opt/jadx /opt/jadx\nRUN cd /opt/jadx && ./gradlew dist\n\n# ------------------------- Android Reverse Engineering environment image\nFROM ubuntu:20.04\n\nMAINTAINER Axelle Apvrille\nENV REFRESHED_AT 2022-03-01\n\nARG DEBIAN_FRONTEND=noninteractive\nARG SSH_PASSWORD\nARG VNC_PASSWORD\nENV ANDROGUARD_VERSION \"3.4.0a1\"\nENV APKTOOL_VERSION \"2.6.1\"\nENV BYTECODEVIEWER_VERSION \"2.9.22\"\nENV CFR_VERSION \"0.150\"\nENV CLASSYSHARK_VERSION \"8.2\"\nENV DEX2JAR_VERSION \"2.1-SNAPSHOT\"\nENV FRIDA_VERSION \"15.1.17\"\nENV JD_VERSION \"1.6.6\"\nENV PROCYON_VERSION \"0.5.30\"\nENV SMALI_VERSION \"2.5.2\"\nENV UBERAPK_VERSION \"1.2.1\"\n\n# For DroidLysis: libxml2-dev libxslt-dev libmagic-dev\n# For SSH: openssh-server ssh\n# For VNC: xvfb x11vnc xfce4 xfce4-terminal\n# For Quark engine: graphviz\n\n#RUN apt-get update && apt-get install -yqq default-jdk libpulse0 libxcursor1 adb python3-pip python3-dev python3-venv pkgconf pandoc curl \\\nRUN apt-get update && apt-get install --no-install-recommends -yqq openjdk-8-jre openjdk-11-jre python3-pip python3-dev python3-venv pkgconf pandoc curl locate \\\n    git build-essential tree wget unzip zip emacs vim supervisor \\\n    libxml2-dev libxslt-dev libmagic-dev \\\n    openssh-server ssh \\\n    xvfb x11vnc xfce4 xfce4-terminal \\\n    libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg8-dev zlib1g-dev wkhtmltopdf \\\n    graphviz adb && rm -rf /var/lib/apt/lists/*;\n\nRUN python3 -m pip install --upgrade pip && pip3 install --no-cache-dir wheel\n\n# ----------------------------- RE Tools\n\n# APKdiff\nRUN wget -q -O \"/opt/apkdiffy.py\" https://raw.githubusercontent.com/daniellockyer/apkdiff/master/apkdiff.py\n\n# Androguard\nRUN wget -q -O \"/opt/andro.zip\" https://github.com/androguard/androguard/archive/v${ANDROGUARD_VERSION}.zip && unzip /opt/andro.zip -d /opt && rm -f /opt/andro.zip\nRUN cd /opt/androguard-${ANDROGUARD_VERSION} && pip3 install --no-cache-dir .[magic,GUI] && pip3 install --no-cache-dir --upgrade 'jedi<0.18.0' && rm -r ./docs ./examples ./tests ./lib*\n\n# Apkfile library\n#RUN cd /opt && git clone https://github.com/CalebFenton/apkfile\n\n# APKiD\nRUN pip3 install --no-cache-dir apkid\n#RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel && \\\n#    pip3 wheel --quiet --no-cache-dir --wheel-dir=/tmp/yara-python --build-option=\"build\" #--build-option=\"--enable-dex\" git+https://github.com/VirusTotal/yara-python.git@v3.11.0 && \\\n#    pip3 install --quiet --no-cache-dir --no-index --find-links=/tmp/yara-python yara-python && \\\n#    rm -rf /tmp/yara-python && \\\n#    cd /opt && git clone https://github.com/rednaga/APKiD/ && \\\n#    cd /opt/APKiD && python3 prep-release.py && pip3 install -e . && \\\n#    rm -rf tests docker Dockerfile\n\n\n# Apktool\nRUN mkdir -p /opt/apktool\nRUN wget -q -O \"/opt/apktool/apktool\" https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool\nRUN wget -q -O \"/opt/apktool/apktool.jar\" https://bitbucket.org/iBotPeaches/apktool/downloads/apktool_$APKTOOL_VERSION.jar \\\n    && chmod u+x /opt/apktool/apktool /opt/apktool/apktool.jar\nENV PATH $PATH:/opt/apktool\n\n# AXMLPrinter\nCOPY --from=build /opt/axmlprinter/build/libs/*.jar /opt/axmlprinter/\n\n# ByteCode Viewer\n#RUN wget -q -O \"/opt/bytecode-viewer.jar\" \"https://github.com/Konloch/bytecode-viewer/releases/download/v2.9.22/Bytecode-Viewer-${BYTECODEVIEWER_VERSION}.jar\"\n\n# CFR\n#RUN wget -q -O \"/opt/cfr_${CFR_VERSION}.jar\" http://www.benf.org/other/cfr/cfr-${CFR_VERSION}.jar\n\n# ClassyShark\n#RUN wget -q -O \"/opt/ClassyShark.jar\" https://github.com/google/android-classyshark/releases/download/${CLASSYSHARK_VERSION}/ClassyShark.jar\n\n# Dex2Jar\nRUN wget -q -O \"/opt/dex2jar.zip\" https://github.com/pxb1988/dex2jar/files/1867564/dex-tools-${DEX2JAR_VERSION}.zip \\\n    && cd /opt \\\n    && unzip /opt/dex2jar.zip -d . \\\n    && chmod u+x /opt/dex-tools-${DEX2JAR_VERSION}/*.sh \\\n    && rm -f /opt/dex2jar.zip\nENV PATH $PATH:/opt/dex-tools-${DEX2JAR_VERSION}:/opt/dex-tools-${DEX2JAR_VERSION}/bin\n\n# Droidlysis\nENV PATH $PATH:/root/.local/bin\nENV PYTHONPATH $PYTHONPATH:/opt/droidlysis\nRUN cd /opt && git clone https://github.com/cryptax/droidlysis && cd /opt/droidlysis && pip3 install --no-cache-dir --user -r requirements.txt && ln -s /usr/bin/androaxml /usr/bin/androaxml.py\nCOPY ./setup/droidconfig.py /opt/droidlysis/droidconfig.py\n\n# Enjarify\nRUN cd /opt && git clone https://github.com/Storyyeller/enjarify && ln -s /opt/enjarify/enjarify.sh /usr/bin/enjarify\n\n# Frida, Frida Server and Frida-DEXDump\nRUN pip3 install --no-cache-dir frida frida-tools frida-dexdump\nCOPY ./setup/install-frida-server.sh /opt\nRUN cd /opt \\\n    && wget -q -O \"/opt/frida-server.xz\" https://github.com/frida/frida/releases/download/${FRIDA_VERSION}/frida-server-${FRIDA_VERSION}-android-arm.xz && unxz /opt/frida-server.xz && mv /opt/frida-server /opt/frida-server-android-arm && chmod u+x /opt/install-frida-server.sh\n\n# Fridump\nRUN cd /opt && git clone https://github.com/Nightbringer21/fridump.git\n\n# JADX\n#RUN wget -q -O \"/opt/jadx.zip\" https://github.com/skylot/jadx/releases/download/v${JADX_VERSION}/jadx-${JADX_VERSION}.zip \\\n#    && mkdir -p /opt/jadx \\\n#   && unzip /opt/jadx.zip -d /opt/jadx \\\n#    && rm -f /opt/jadx.zip\nCOPY --from=build /opt/jadx/build /opt/jadx/\n\n# JD-GUI\nCOPY ./setup/extract.sh /opt/extract.sh\nRUN wget -q -O \"/opt/jd-gui.jar\" \"https://github.com/java-decompiler/jd-gui/releases/download/v${JD_VERSION}/jd-gui-${JD_VERSION}.jar\" && chmod +x /opt/extract.sh\n\n# JEB Demo - requires JDK 11\nRUN wget -q -O \"/opt/jeb.zip\" https://www.pnfsoftware.com/dl?jebdemo && mkdir -p /opt/jeb && unzip /opt/jeb.zip -d ./opt/jeb && rm /opt/jeb.zip\n\n# Mobsf - requires JDK 8\n#RUN cd /opt && git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF.git && cd ./Mobile-Security-Framework-MobSF && ./setup.sh\n\n# Oat2Dex\nRUN wget -q -O \"/opt/oat2dex.py\" https://github.com/jakev/oat2dex-python/blob/master/oat2dex.py\n\n# Objection\nRUN pip3 install --no-cache-dir objection\n\n# Procyon (link broken, currently using an archive) - Does not work with Java 11. Works with Java 8\nRUN wget -q -O \"/opt/procyon-decompiler.jar\" \"https://github.com/cryptax/droidlysis/raw/master/external/procyon-decompiler-${PROCYON_VERSION}.jar\"\n\n# Quark engine\nRUN pip3 install --no-cache-dir -U quark-engine && pip3 install --no-cache-dir --upgrade 'jedi<0.18.0'\n\n# Radare2\nRUN cd /opt && git clone https://github.com/radare/radare2\nRUN /opt/radare2/sys/user.sh\n\n# NodeJS is required for r2frida\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash -\nRUN apt-get install --no-install-recommends -yqq nodejs && rm -rf /var/lib/apt/lists/*;\nRUN ~/bin/r2pm init && ~/bin/r2pm update && ~/bin/r2pm install r2frida && pip3 install --no-cache-dir r2pipe\n\n# Simplify\n#COPY --from=build /opt/simplify/simplify/build/libs/*.jar /opt/simplify/\n\n# Install Smali / Baksmali\nRUN wget -q -O \"/opt/smali.jar\" \"https://bitbucket.org/JesusFreke/smali/downloads/smali-${SMALI_VERSION}.jar\"\nRUN wget -q -O \"/opt/baksmali.jar\" \"https://bitbucket.org/JesusFreke/smali/downloads/baksmali-${SMALI_VERSION}.jar\"\nRUN wget -q -O \"/opt/smali\" \"https://bitbucket.org/JesusFreke/smali/downloads/smali\"\nRUN wget -q -O \"/opt/baksmali\" \"https://bitbucket.org/JesusFreke/smali/downloads/baksmali\"\nENV PATH $PATH:/opt\n\n# Smalisca\nRUN pip3 install --no-cache-dir flask && cd /opt && git clone https://github.com/dorneanu/smalisca && cd /opt/smalisca && pip3 install --no-cache-dir -r requirements.txt && sed -i 's/PYTHON.*=.*/PYTHON=python3/g' Makefile && make install\n\n# uber-apk-signer\nRUN wget -q -O \"/opt/uber-apk-signer.jar\" https://github.com/patrickfav/uber-apk-signer/releases/download/v1.2.1/uber-apk-signer-${UBERAPK_VERSION}.jar\n\n# apkleaks\nRUN pip3 install --no-cache-dir apkleaks\n# apkleaks requires jadx to be on the path\nENV PATH $PATH:/opt/jadx/jadx/bin\n\n# pyaxml parser which will install a commandline apkinfo to quickly display info about APK\nRUN pip3 install --no-cache-dir pyaxmlparser\n\n\n# ------------------------ Install SSH access ---------------------------------------------\n RUN mkdir /var/run/sshd \\\n     && echo \"root:${SSH_PASSWORD}\" | chpasswd \\\n     && echo \"PermitRootLogin yes\" >> /etc/ssh/sshd_config \\\n     && echo \"X11UseLocalhost no\" >> /etc/ssh/sshd_config \\\n     && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\n# SSH login fix. Otherwise user is kicked off after login\n\n# ------------------------- Setup VNC server - we need GLX support for Android emulator\nCOPY ./setup/startXvfb.sh /root/startXvfb.sh    \nRUN mkdir ~/.vnc \\\n     && x11vnc -storepasswd ${VNC_PASSWORD} ~/.vnc/passwd \\\n     && chmod u+x /root/startXvfb.sh\n\n\n# # We need supervisor to launch SSH and VNC\nRUN mkdir -p /var/log/supervisor\nCOPY ./setup/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\nRUN echo \"export PATH=$PATH:/root/bin\" >> /etc/profile \\\n     && echo \"export LD_LIBRARY_PATH=$LD_LIBRARY_PATH\" >> /etc/profile \\\n     && echo \"export LC_ALL=C\" >> /root/.bashrc\t      \n\n# ------------------------- Clean up\n\nRUN apt remove --purge -y pandoc && \\\n    apt clean && apt autoclean && apt autoremove -y && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /usr/share/doc/* > /dev/null 2>&1\n\n# ------------------------- Final matter\nVOLUME [\"/data\"] # to be used for instance to pass along samples\nCMD [ \"/usr/bin/supervisord\", \"-c\",  \"/etc/supervisor/conf.d/supervisord.conf\" ]\nWORKDIR /workshop\n\nEXPOSE 22\nEXPOSE 5900\nEXPOSE 5037\nEXPOSE 8000\n"
}