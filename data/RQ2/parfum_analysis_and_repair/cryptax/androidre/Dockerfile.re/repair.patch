diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cryptax/androidre/Dockerfile.re b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cryptax/androidre/Dockerfile.re/repaired.Dockerfile
index b9ba5d0..5feb8ff 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cryptax/androidre/Dockerfile.re
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cryptax/androidre/Dockerfile.re/repaired.Dockerfile
@@ -21,7 +21,7 @@ MAINTAINER Axelle Apvrille
 ENV REFRESHED_AT 2022-03-01
 
 ARG DEBIAN_FRONTEND=noninteractive
-ARG SSH_PASSWORD 
+ARG SSH_PASSWORD
 ARG VNC_PASSWORD
 ENV ANDROGUARD_VERSION "3.4.0a1"
 ENV APKTOOL_VERSION "2.6.1"
@@ -41,15 +41,15 @@ ENV UBERAPK_VERSION "1.2.1"
 # For Quark engine: graphviz
 
 #RUN apt-get update && apt-get install -yqq default-jdk libpulse0 libxcursor1 adb python3-pip python3-dev python3-venv pkgconf pandoc curl \
-RUN apt-get update && apt-get install -yqq openjdk-8-jre openjdk-11-jre python3-pip python3-dev python3-venv pkgconf pandoc curl  locate \
+RUN apt-get update && apt-get install --no-install-recommends -yqq openjdk-8-jre openjdk-11-jre python3-pip python3-dev python3-venv pkgconf pandoc curl locate \
     git build-essential tree wget unzip zip emacs vim supervisor \
     libxml2-dev libxslt-dev libmagic-dev \
     openssh-server ssh \
-    xvfb x11vnc xfce4 xfce4-terminal\
-    libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg8-dev zlib1g-dev wkhtmltopdf  \
-    graphviz adb
+    xvfb x11vnc xfce4 xfce4-terminal \
+    libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg8-dev zlib1g-dev wkhtmltopdf \
+    graphviz adb && rm -rf /var/lib/apt/lists/*;
 
-RUN python3 -m pip install --upgrade pip && pip3 install wheel
+RUN python3 -m pip install --upgrade pip && pip3 install --no-cache-dir wheel
 
 # ----------------------------- RE Tools
 
@@ -58,13 +58,13 @@ RUN wget -q -O "/opt/apkdiffy.py" https://raw.githubusercontent.com/daniellockye
 
 # Androguard
 RUN wget -q -O "/opt/andro.zip" https://github.com/androguard/androguard/archive/v${ANDROGUARD_VERSION}.zip && unzip /opt/andro.zip -d /opt && rm -f /opt/andro.zip
-RUN cd /opt/androguard-${ANDROGUARD_VERSION} && pip3 install .[magic,GUI] && pip3 install --upgrade 'jedi<0.18.0' && rm -r ./docs ./examples ./tests ./lib*
+RUN cd /opt/androguard-${ANDROGUARD_VERSION} && pip3 install --no-cache-dir .[magic,GUI] && pip3 install --no-cache-dir --upgrade 'jedi<0.18.0' && rm -r ./docs ./examples ./tests ./lib*
 
 # Apkfile library
 #RUN cd /opt && git clone https://github.com/CalebFenton/apkfile
 
 # APKiD
-RUN pip3 install apkid
+RUN pip3 install --no-cache-dir apkid
 #RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel && \
 #    pip3 wheel --quiet --no-cache-dir --wheel-dir=/tmp/yara-python --build-option="build" #--build-option="--enable-dex" git+https://github.com/VirusTotal/yara-python.git@v3.11.0 && \
 #    pip3 install --quiet --no-cache-dir --no-index --find-links=/tmp/yara-python yara-python && \
@@ -98,20 +98,20 @@ RUN wget -q -O "/opt/dex2jar.zip" https://github.com/pxb1988/dex2jar/files/18675
     && cd /opt \
     && unzip /opt/dex2jar.zip -d . \
     && chmod u+x /opt/dex-tools-${DEX2JAR_VERSION}/*.sh \
-    && rm -f /opt/dex2jar.zip 
+    && rm -f /opt/dex2jar.zip
 ENV PATH $PATH:/opt/dex-tools-${DEX2JAR_VERSION}:/opt/dex-tools-${DEX2JAR_VERSION}/bin
 
 # Droidlysis
 ENV PATH $PATH:/root/.local/bin
 ENV PYTHONPATH $PYTHONPATH:/opt/droidlysis
-RUN cd /opt && git clone https://github.com/cryptax/droidlysis && cd /opt/droidlysis && pip3 install --user -r requirements.txt && ln -s /usr/bin/androaxml /usr/bin/androaxml.py
+RUN cd /opt && git clone https://github.com/cryptax/droidlysis && cd /opt/droidlysis && pip3 install --no-cache-dir --user -r requirements.txt && ln -s /usr/bin/androaxml /usr/bin/androaxml.py
 COPY ./setup/droidconfig.py /opt/droidlysis/droidconfig.py
 
 # Enjarify
 RUN cd /opt && git clone https://github.com/Storyyeller/enjarify && ln -s /opt/enjarify/enjarify.sh /usr/bin/enjarify
 
 # Frida, Frida Server and Frida-DEXDump
-RUN pip3 install frida frida-tools frida-dexdump
+RUN pip3 install --no-cache-dir frida frida-tools frida-dexdump
 COPY ./setup/install-frida-server.sh /opt
 RUN cd /opt \
     && wget -q -O "/opt/frida-server.xz" https://github.com/frida/frida/releases/download/${FRIDA_VERSION}/frida-server-${FRIDA_VERSION}-android-arm.xz && unxz /opt/frida-server.xz && mv /opt/frida-server /opt/frida-server-android-arm && chmod u+x /opt/install-frida-server.sh
@@ -140,22 +140,22 @@ RUN wget -q -O "/opt/jeb.zip" https://www.pnfsoftware.com/dl?jebdemo && mkdir -p
 RUN wget -q -O "/opt/oat2dex.py" https://github.com/jakev/oat2dex-python/blob/master/oat2dex.py
 
 # Objection
-RUN pip3 install objection
+RUN pip3 install --no-cache-dir objection
 
 # Procyon (link broken, currently using an archive) - Does not work with Java 11. Works with Java 8
 RUN wget -q -O "/opt/procyon-decompiler.jar" "https://github.com/cryptax/droidlysis/raw/master/external/procyon-decompiler-${PROCYON_VERSION}.jar"
 
 # Quark engine
-RUN pip3 install  -U quark-engine && pip3 install --upgrade 'jedi<0.18.0'
+RUN pip3 install --no-cache-dir -U quark-engine && pip3 install --no-cache-dir --upgrade 'jedi<0.18.0'
 
 # Radare2
-RUN cd /opt && git clone https://github.com/radare/radare2 
+RUN cd /opt && git clone https://github.com/radare/radare2
 RUN /opt/radare2/sys/user.sh
 
 # NodeJS is required for r2frida
-RUN curl -sL https://deb.nodesource.com/setup_16.x | bash -
-RUN apt-get install -yqq nodejs
-RUN ~/bin/r2pm init && ~/bin/r2pm update && ~/bin/r2pm install r2frida && pip3 install r2pipe
+RUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash -
+RUN apt-get install --no-install-recommends -yqq nodejs && rm -rf /var/lib/apt/lists/*;
+RUN ~/bin/r2pm init && ~/bin/r2pm update && ~/bin/r2pm install r2frida && pip3 install --no-cache-dir r2pipe
 
 # Simplify
 #COPY --from=build /opt/simplify/simplify/build/libs/*.jar /opt/simplify/
@@ -168,18 +168,18 @@ RUN wget -q -O "/opt/baksmali" "https://bitbucket.org/JesusFreke/smali/downloads
 ENV PATH $PATH:/opt
 
 # Smalisca
-RUN pip3 install flask && cd /opt && git clone https://github.com/dorneanu/smalisca && cd /opt/smalisca && pip3 install -r requirements.txt && sed -i 's/PYTHON.*=.*/PYTHON=python3/g' Makefile && make install
+RUN pip3 install --no-cache-dir flask && cd /opt && git clone https://github.com/dorneanu/smalisca && cd /opt/smalisca && pip3 install --no-cache-dir -r requirements.txt && sed -i 's/PYTHON.*=.*/PYTHON=python3/g' Makefile && make install
 
 # uber-apk-signer
 RUN wget -q -O "/opt/uber-apk-signer.jar" https://github.com/patrickfav/uber-apk-signer/releases/download/v1.2.1/uber-apk-signer-${UBERAPK_VERSION}.jar
 
 # apkleaks
-RUN pip3 install apkleaks
+RUN pip3 install --no-cache-dir apkleaks
 # apkleaks requires jadx to be on the path
 ENV PATH $PATH:/opt/jadx/jadx/bin
 
 # pyaxml parser which will install a commandline apkinfo to quickly display info about APK
-RUN pip3 install pyaxmlparser
+RUN pip3 install --no-cache-dir pyaxmlparser
 
 
 # ------------------------ Install SSH access ---------------------------------------------
@@ -191,7 +191,7 @@ RUN pip3 install pyaxmlparser
 # SSH login fix. Otherwise user is kicked off after login
 
 # ------------------------- Setup VNC server - we need GLX support for Android emulator
-COPY ./setup/startXvfb.sh /root/startXvfb.sh     
+COPY ./setup/startXvfb.sh /root/startXvfb.sh    
 RUN mkdir ~/.vnc \
      && x11vnc -storepasswd ${VNC_PASSWORD} ~/.vnc/passwd \
      && chmod u+x /root/startXvfb.sh
@@ -203,7 +203,7 @@ COPY ./setup/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
 
 RUN echo "export PATH=$PATH:/root/bin" >> /etc/profile \
      && echo "export LD_LIBRARY_PATH=$LD_LIBRARY_PATH" >> /etc/profile \
-     && echo "export LC_ALL=C" >> /root/.bashrc	       
+     && echo "export LC_ALL=C" >> /root/.bashrc	      
 
 # ------------------------- Clean up
 
@@ -219,4 +219,4 @@ WORKDIR /workshop
 EXPOSE 22
 EXPOSE 5900
 EXPOSE 5037
-EXPOSE 8000 
+EXPOSE 8000