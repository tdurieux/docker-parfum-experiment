diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mc2-project/mc2/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mc2-project/mc2/Dockerfile/repaired.Dockerfile
index c80301c..79a3e2a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mc2-project/mc2/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mc2-project/mc2/Dockerfile/repaired.Dockerfile
@@ -15,13 +15,13 @@ COPY . /mc2/client
 
 # Install wget
 RUN apt-get update
-RUN apt-get install -y wget sudo gnupg2 git vim
+RUN apt-get install --no-install-recommends -y wget sudo gnupg2 git vim && rm -rf /var/lib/apt/lists/*;
 RUN useradd -m docker && echo "docker:docker" | chpasswd && adduser docker sudo
 
 # Install CMake
 RUN cd /mc2 && \
     wget https://github.com/Kitware/CMake/releases/download/v3.15.6/cmake-3.15.6-Linux-x86_64.sh && \
-    sudo bash cmake-3.15.6-Linux-x86_64.sh --skip-license --prefix=/usr/local 
+    sudo bash cmake-3.15.6-Linux-x86_64.sh --skip-license --prefix=/usr/local
 
 # Configure Intel and Microsoft APT repos
 RUN echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list && \
@@ -33,19 +33,19 @@ RUN echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bio
     sudo apt update
 
 # Install Intel and Open Enclave packages and dependencies
-RUN sudo apt -y install clang-8 libssl-dev gdb libsgx-enclave-common libsgx-quote-ex libprotobuf10 libsgx-dcap-ql libsgx-dcap-ql-dev az-dcap-client open-enclave=0.17.1
+RUN sudo apt -y --no-install-recommends install clang-8 libssl-dev gdb libsgx-enclave-common libsgx-quote-ex libprotobuf10 libsgx-dcap-ql libsgx-dcap-ql-dev az-dcap-client open-enclave=0.17.1 && rm -rf /var/lib/apt/lists/*;
 
 # Install Azure CLI
-RUN curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
+RUN curl -f -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
 
 # Mbed TLS and pip
-RUN sudo apt-get install -y libmbedtls-dev python3-pip
+RUN sudo apt-get install --no-install-recommends -y libmbedtls-dev python3-pip && rm -rf /var/lib/apt/lists/*;
 
 # Upgrade pip
-RUN pip3 install --upgrade pip
+RUN pip3 install --no-cache-dir --upgrade pip
 
 # Install Python dependencies
-RUN cd /mc2/client && pip3 install -r requirements.txt
+RUN cd /mc2/client && pip3 install --no-cache-dir -r requirements.txt
 
 # Install Opaque Systems' sequencefile
 RUN cd /mc2 && \
@@ -73,7 +73,7 @@ RUN echo "alias mc2=\"python3 /mc2/client/mc2.py\"" >> ~/.bashrc
 RUN cd /mc2/ && git clone https://github.com/mc2-project/opaque-sql.git
 
 # Install SBT dependencies
-RUN sudo apt -y install build-essential openjdk-8-jdk python libssl-dev
+RUN sudo apt -y --no-install-recommends install build-essential openjdk-8-jdk python libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Spark 3.1.1
 RUN wget https://archive.apache.org/dist/spark/spark-3.1.1/spark-3.1.1-bin-hadoop2.7.tgz && \