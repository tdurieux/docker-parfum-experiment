{
  "startTime": 1674249788197,
  "endTime": 1674249788899,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 43,
        "columnEnd": 105
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 18,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# deps to build a ChordAtlas jar - we have a bunch of deps that have a bunch of deps... No-cache build:\n# docker image build --no-cache=true --tag chordatlas --file Dockerfile .\n\n\nFROM ubuntu:16.04\nMAINTAINER twakelly@gmail.com\n\nRUN apt update && apt install --no-install-recommends -y software-properties-common git curl maven openssh-client wget && rm -rf /var/lib/apt/lists/*;\n\n# sun java\n#RUN add-apt-repository ppa:webupd8team/java && apt update\n#RUN echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections\n#RUN apt install -y oracle-java8-installer # your soul and the good 3/4 of your grandmother now belong to Oracle\n\n# openjdk java\nRUN apt update && apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;\n\n#gurobi\n\nRUN mkdir /opt/gurobi && cd /opt/gurobi && wget https://packages.gurobi.com/9.0/gurobi9.0.2_linux64.tar.gz\nRUN cd /opt/gurobi && tar -xvzf gurobi9.0.2_linux64.tar.gz && rm gurobi9.0.2_linux64.tar.gz\n\nENV PATH /opt/gurobi/gurobi902/linux64/bin:$PATH\nENV GUROBI_HOME /opt/gurobi/gurobi902/linux64/bin:$PATH\n\nRUN mvn install:install-file -Dfile=/opt/gurobi/gurobi902/linux64/lib/gurobi.jar -DgroupId=local_gurobi -DartifactId=local_gurobi -Dversion=local_gurobi -Dpackaging=jar\n\nWORKDIR /tmp\n\n# clone, build and install each of the projects. if we are using stable, shouldn't be required?\n#RUN for r in jutils campskeleton  siteplan; \\\n#    do \\\n#\t\tgit clone --branch stable \"https://github.com/twak/$r.git\"; \\\n#    \tcd $r; \\\n#\t\tmvn install; \\\n#\t\tcd ..; \\\n#    done\n\nWORKDIR /tmp\n\n#https://stackoverflow.com/questions/36996046/how-to-prevent-dockerfile-caching-git-clone\n#ADD https://api.github.com/repos/twak/chordatlas/git/refs/heads/stable /tmp/version.json\nRUN git clone --branch stable \"https://github.com/twak/chordatlas.git\"\nWORKDIR /tmp/chordatlas\nRUN mvn -Dmaven.artifact.threads=64 package -T 64\nWORKDIR /tmp\n\nENV PATH /tmp/chordatlas/build/:$PATH\nRUN chmod +x /tmp/chordatlas/build/*.sh"
}