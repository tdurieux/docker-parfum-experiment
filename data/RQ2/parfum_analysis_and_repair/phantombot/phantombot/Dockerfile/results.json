{
  "startTime": 1674219042414,
  "endTime": 1674219043424,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 6,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# \n# Copyright (C) 2016-2022 phantombot.github.io/PhantomBot\n# \n# This program is free software: you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n# the Free Software Foundation, either version 3 of the License, or\n# (at your option) any later version.\n#\n# This program is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n# GNU General Public License for more details.\n# \n# You should have received a copy of the GNU General Public License\n# along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n\n# Build container\nFROM eclipse-temurin:11-jdk-focal as builder\n\nARG PROJECT_NAME=PhantomBot\nARG PROJECT_VERSION\nARG BASEDIR=/opt/${PROJECT_NAME}\nARG BUILDDIR=${BASEDIR}_build\nARG DATADIR=${BASEDIR}_data\nARG ANT_ARGS=\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN set -eux; \\\n    mkdir -p \"${BUILDDIR}\" \"${DATADIR}\"; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends ant; \\\n    apt-get clean; \\\n    rm -rf \\\n        /var/lib/apt/lists/* \\\n        /tmp/* \\\n        /var/tmp/*\n\nCOPY . \"${BUILDDIR}\"\n\nRUN set -eux; \\\n    cd \"${BUILDDIR}\"; \\\n    ant -noinput -buildfile build.xml -Disdocker=true ${ANT_ARGS} jar\n\nRUN set -eux; \\\n    cd \"${BUILDDIR}/dist/${PROJECT_NAME}-${PROJECT_VERSION}/\"; \\\n    ls | grep java-runtime | xargs --no-run-if-empty rm -rf; \\\n    ls | grep launch | grep -v launch-docker.sh | xargs --no-run-if-empty rm -rf; \\\n    ls | grep restartbot | grep -v restartbot-docker.sh | xargs --no-run-if-empty rm -rf; \\\n    cd \"${BUILDDIR}/dist/${PROJECT_NAME}-${PROJECT_VERSION}/config/healthcheck/failurehooks\"; \\\n    ls | grep restart | grep -v restart-docker-internal.py | xargs --no-run-if-empty rm -rf\n\nRUN set -eux; \\\n    cd \"${BUILDDIR}/dist/${PROJECT_NAME}-${PROJECT_VERSION}/\"; \\\n    mkdir \"${DATADIR}/scripts\"; \\\n    mkdir \"${DATADIR}/scripts/custom\"; \\\n    mkdir \"${DATADIR}/scripts/discord\"; \\\n    mkdir \"${DATADIR}/scripts/lang\"; \\\n    mv \"./addons\" \"${DATADIR}/\"; \\\n    mv \"./config\" \"${DATADIR}/\"; \\\n    mv \"./logs\" \"${DATADIR}/\"; \\\n    mv \"./scripts/custom\" \"${DATADIR}/scripts/custom/\"; \\\n    mv \"./scripts/discord/custom\" \"${DATADIR}/scripts/discord/\"; \\\n    mv \"./scripts/lang/custom\" \"${DATADIR}/scripts/lang/\"\n\n# Application container\nFROM eclipse-temurin:11-jre-focal as publish\n\nARG PROJECT_NAME=PhantomBot\nARG PROJECT_VERSION\nARG BASEDIR=/opt/${PROJECT_NAME}\nARG BUILDDIR=${BASEDIR}_build\nARG DATADIR=${BASEDIR}_data\n\nUSER root\n\nRUN set -eux; \\\n    groupadd -r phantombot -g 900; \\\n    useradd -u 901 -r -g phantombot -s /sbin/nologin -c \"PhantomBot Daemon User\" phantombot\n\nRUN set -eux; \\\n    mkdir -p \"${BASEDIR}\" \"${DATADIR}\"; \\\n    chown phantombot:phantombot \"${BASEDIR}\"; \\\n    chown phantombot:phantombot \"${DATADIR}\"\n\nENV PATH=\"${BASEDIR}:$PATH\"\n\nENV GOSU_VERSION 1.14\n\nRUN set -eux; \\\n# save list of currently installed packages for later so we can clean up\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends ca-certificates wget; \\\n\tif ! command -v gpg;then \\\n\t\tapt-get install -y --no-install-recommends gnupg2 dirmngr; \\\n\telif gpg --batch --version | grep -q '^gpg (GnuPG) 1\\.'; ;then \\\n# \"This package provides support for HKPS keyservers.\" (GnuPG 1.x only)\n\t\tapt-get install -y --no-install-recommends gnupg-curl; \\\n\tfi; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\twget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch.asc\"; \\\n\n# verify the signature\n\texport GNUPGHOME=\"$(mktemp -d)\"; \\\n\tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n\tgpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n\tcommand -v gpgconf && gpgconf --kill all || :; \\\n\trm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n\n# clean up fetch dependencies\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\n\tchmod +x /usr/local/bin/gosu; \\\n# verify that the binary works\n\tgosu --version; \\\n\tgosu nobody true\n\nCOPY --from=builder --chown=phantombot:phantombot \"${DATADIR}/.\" \"${DATADIR}/\"\n\nCOPY --from=builder --chown=phantombot:phantombot \"${BUILDDIR}/dist/${PROJECT_NAME}-${PROJECT_VERSION}/.\" \"${BASEDIR}/\"\n\nRUN set -eux; \\\n    cd \"${BASEDIR}\"; \\\n    mkdir \"${DATADIR}/dbbackup\"; \\\n    mkdir \"${DATADIR}/gameslist\"; \\\n    ln -s \"${DATADIR}/addons\"; \\\n    ln -s \"${DATADIR}/config\"; \\\n    ln -s \"${DATADIR}/dbbackup\"; \\\n    ln -s \"${DATADIR}/logs\"; \\\n    ln -s \"${DATADIR}/scripts/custom\" \"${BASEDIR}/scripts/custom\"; \\\n    ln -s \"${DATADIR}/scripts/discord\" \"${BASEDIR}/scripts/discord/custom\"; \\\n    ln -s \"${DATADIR}/scripts/lang\" \"${BASEDIR}/scripts/lang/custom\"; \\\n    touch \"${DATADIR}/gameslist/gamesList.txt\"; \\\n    ln -s \"${DATADIR}/gameslist/gamesList.txt\" \"${BASEDIR}/web/panel/js/utils/gamesList.txt\"; \\\n    chmod u+x \"${BASEDIR}/restartbot-docker.sh\"; \\\n    chmod u+x \"${BASEDIR}/launch-docker.sh\"; \\\n    chmod u+x \"${BASEDIR}/docker-entrypoint.sh\"\n\nRUN set -eux;  \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends python3 python3-pip; \\\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/*; \\\n    pip3 install --no-cache-dir -r \"${BASEDIR}/config/healthcheck/requirements.txt\"; \\\n    apt-get remove -y python3-pip; \\\n    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false\n\nVOLUME \"${DATADIR}\"\n\nWORKDIR \"${BASEDIR}\"\n\nHEALTHCHECK --interval=5m --timeout=1m --start-period=2m CMD python3 /opt/PhantomBot/config/healthcheck/healthcheck.py --show-success --config-dir /opt/PhantomBot_data/config/\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 25000\n\nCMD [\"launch-docker.sh\"]\n"
}