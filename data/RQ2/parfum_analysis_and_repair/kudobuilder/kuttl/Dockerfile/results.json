{
  "startTime": 1674249909715,
  "endTime": 1674249910129,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# used to run kuttl tests from docker\n# it is expected that a mount pt is provided where /opt/project is the root of the testsuite\n# the root of the mount point needs a `kuttl-test.yaml` and a proper `kubeconfig` file which\n# a process running in docker can reach.  If using kind, then `kind get kubeconfig --internal > kubeconfig`\n# will provide the proper configuration for 0.7.0.  0.8.0 breaks this ability and is being worked on in the\n# kind community.\n# Assuming a test folders at mount root named \"e2e\" then:\n# docker run -v $PWD:/opt/project kuttl e2e\n# will run tests against the e2e folders.\n#\n# IF you want run tests from within a cluster, then specify `-e KUBECONFIG=`.  An empty KUBECONFIG will\n# result in kuttl using the in-cluster-config.\n# ex. docker run -e KUBECONFIG= -v $PWD:/opt/project kuttl e2e\n# artifacts by default will land in the root of the mount point.\n\n# kuttl builder\nFROM golang:1.18 as builder\n\nWORKDIR /go/src/kuttl\nCOPY . .\n\nRUN go get -d -v ./...\nRUN make cli\n\n# release image with kubectl + kuttl\nFROM registry.access.redhat.com/ubi8/ubi-minimal:latest\n\nRUN microdnf install vim tar gzip\nRUN echo 'alias vi=vim' >> ~/.bashrc\n\n#  kube 1.18\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl\nRUN chmod +x ./kubectl\nRUN mv ./kubectl /usr/local/bin/kubectl\n\nCOPY --from=builder /go/src/kuttl/bin/kubectl-kuttl /usr/bin/kubectl-kuttl\n\nWORKDIR /opt/project\n\n# default configuration\nENV KUBECONFIG=kubeconfig\n\n# standard kuttl test in entry point, flags and test folder can be provided as CMD\nENTRYPOINT [\"kubectl\", \"kuttl\", \"test\"]\n"
}