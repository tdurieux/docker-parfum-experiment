diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/asimmon/bomberjam-contest/worker.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/asimmon/bomberjam-contest/worker.Dockerfile/repaired.Dockerfile
index 4f662f6..9dd6f6e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/asimmon/bomberjam-contest/worker.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/asimmon/bomberjam-contest/worker.Dockerfile/repaired.Dockerfile
@@ -8,18 +8,18 @@ RUN echo iptables-persistent iptables-persistent/autosave_v4 boolean true | debc
     echo iptables-persistent iptables-persistent/autosave_v6 boolean true | debconf-set-selections && \
     apt-get update && \
     apt-get -y upgrade && \
-    DEBIAN_FRONTEND=noninteractive apt-get -y install wget curl sudo systemd iptables-persistent cgroup-tools apt-transport-https dos2unix software-properties-common
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install wget curl sudo systemd iptables-persistent cgroup-tools apt-transport-https dos2unix software-properties-common && rm -rf /var/lib/apt/lists/*;
 
 ## Python 3.8 with pip, Java 8, .NET Core 3.1, .NET 5.0 & 6.0, Node.js, Go 1.16.3 and PHP 8.0
 RUN wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \
     dpkg -i packages-microsoft-prod.deb && \
-    curl -sL https://deb.nodesource.com/setup_12.x | bash - && \
+    curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \
     add-apt-repository ppa:ondrej/php
 
-RUN apt-get update && apt-get install -y python3 python3-pip openjdk-8-jdk dotnet-sdk-3.1 dotnet-sdk-5.0 dotnet-sdk-6.0 nodejs php8.0 && \
+RUN apt-get update && apt-get install --no-install-recommends -y python3 python3-pip openjdk-8-jdk dotnet-sdk-3.1 dotnet-sdk-5.0 dotnet-sdk-6.0 nodejs php8.0 && \
     wget -c https://golang.org/dl/go1.16.3.linux-amd64.tar.gz -O - | sudo tar -xz -C /usr/local && \
     echo 'export PATH=$PATH:/usr/local/go/bin' >> /etc/skel/.profile && \
-    echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.profile
+    echo 'export PATH=$PATH:/usr/local/go/bin' >> ~/.profile && rm -rf /var/lib/apt/lists/*;
 
 ## 1. Create four users to isolate bots execution, all network will be disabled for them: bot_0, bot_1, bot_2 and bot_3
 ## 2. Create a user to be used compilation tasks: bot_compilation
@@ -54,7 +54,7 @@ RUN dotnet publish --nologo -c Release -r linux-x64 engine/Bomberjam/Bomberjam.c
     rm -rf engine/ common/
 
 COPY --chown=worker:worker ["worker/*.py", "worker/requirements.txt", "./"]
-RUN pip3 install -r requirements.txt && \
+RUN pip3 install --no-cache-dir -r requirements.txt && \
     chmod 0400 *.py requirements.txt
 
 WORKDIR /root