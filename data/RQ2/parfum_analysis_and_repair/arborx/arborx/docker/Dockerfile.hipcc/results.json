{
  "startTime": 1674254903301,
  "endTime": 1674254904280,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE=rocm/dev-ubuntu-20.04:5.0-complete\nFROM $BASE\n\nARG NPROCS=4\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq \\\n        build-essential \\\n        bc \\\n        curl \\\n        git \\\n        kmod \\\n        wget \\\n        jq \\\n        vim \\\n        gdb \\\n        ccache \\\n        libbz2-dev \\\n        libicu-dev \\\n        python-dev \\\n        autotools-dev \\\n        libopenmpi-dev \\\n        rocthrust \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV PATH=/opt/rocm/bin:$PATH\n\nRUN KEYDUMP_URL=https://cloud.cees.ornl.gov/download && \\\n    KEYDUMP_FILE=keydump && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE} && \\\n    wget --quiet ${KEYDUMP_URL}/${KEYDUMP_FILE}.sig && \\\n    gpg --batch --import ${KEYDUMP_FILE} && \\\n    gpg --batch --verify ${KEYDUMP_FILE}.sig ${KEYDUMP_FILE} && \\\n    rm ${KEYDUMP_FILE}*\n\n# Install CMake\nENV CMAKE_DIR=/opt/cmake\nRUN CMAKE_VERSION=3.22.4 && \\\n    CMAKE_KEY=2D2CEF1034921684 && \\\n    CMAKE_URL=https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION} && \\\n    CMAKE_SCRIPT=cmake-${CMAKE_VERSION}-Linux-x86_64.sh && \\\n    CMAKE_SHA256=cmake-${CMAKE_VERSION}-SHA-256.txt && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256} && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SHA256}.asc && \\\n    wget --quiet ${CMAKE_URL}/${CMAKE_SCRIPT} && \\\n    gpg --batch --verify ${CMAKE_SHA256}.asc ${CMAKE_SHA256} && \\\n    grep -i ${CMAKE_SCRIPT} ${CMAKE_SHA256} | sed -e s/linux/Linux/ | sha256sum --check && \\\n    mkdir -p ${CMAKE_DIR} && \\\n    sh ${CMAKE_SCRIPT} --skip-license --prefix=${CMAKE_DIR} && \\\n    rm cmake*\nENV PATH=${CMAKE_DIR}/bin:$PATH\n\n# Install Boost\nENV BOOST_DIR=/opt/boost\nRUN BOOST_VERSION=1.79.0 && \\\n    BOOST_VERSION_UNDERSCORE=$(echo \"$BOOST_VERSION\" | sed -e \"s/\\./_/g\") && \\\n    BOOST_KEY=379CE192D401AB61 && \\\n    BOOST_URL=https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source && \\\n    BOOST_ARCHIVE=boost_${BOOST_VERSION_UNDERSCORE}.tar.bz2 && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${BOOST_URL}/${BOOST_ARCHIVE} && \\\n    wget --quiet ${BOOST_URL}/${BOOST_ARCHIVE}.json && \\\n    cat ${BOOST_ARCHIVE}.json | jq -r '. | .sha256 + \"  \" + .file' | sha256sum --check && \\\n    mkdir -p boost && \\\n    tar -xf ${BOOST_ARCHIVE} -C boost --strip-components=1 && \\\n    cd boost && \\\n    CXXFLAGS=\"-w\" ./bootstrap.sh \\\n        --prefix=${BOOST_DIR} \\\n        && \\\n    ./b2 -j${NPROCS} \\\n        hardcode-dll-paths=true dll-path=${BOOST_DIR}/lib \\\n        link=shared \\\n        variant=release \\\n        cxxflags=-w \\\n        install \\\n        && \\\n    rm -rf ${SCRATCH_DIR}\n\n# Install Google Benchmark support library\nENV BENCHMARK_DIR=/opt/benchmark\nRUN SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    git clone https://github.com/google/benchmark.git -b v1.6.1 && \\\n    cd benchmark && \\\n    mkdir build && cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=${BENCHMARK_DIR} -D BENCHMARK_ENABLE_TESTING=OFF .. && \\\n    make -j${NPROCS} && make install && \\\n    rm -rf ${SCRATCH_DIR}\n\n# Install Kokkos\nARG KOKKOS_VERSION=3.5.00\nARG KOKKOS_ARCH=Kokkos_ARCH_VEGA906\nARG KOKKOS_OPTIONS=\"-DKokkos_ENABLE_HIP=ON -D${KOKKOS_ARCH}=ON\"\nENV KOKKOS_DIR=/opt/kokkos\nRUN KOKKOS_URL=https://github.com/kokkos/kokkos/archive/${KOKKOS_VERSION}.tar.gz && \\\n    KOKKOS_ARCHIVE=kokkos-${KOKKOS_HASH}.tar.gz && \\\n    SCRATCH_DIR=/scratch && mkdir -p ${SCRATCH_DIR} && cd ${SCRATCH_DIR} && \\\n    wget --quiet ${KOKKOS_URL} --output-document=${KOKKOS_ARCHIVE} && \\\n    mkdir -p kokkos && \\\n    tar -xf ${KOKKOS_ARCHIVE} -C kokkos --strip-components=1 && \\\n    cd kokkos && \\\n    mkdir -p build && cd build && \\\n    cmake -D CMAKE_BUILD_TYPE=Release -D CMAKE_INSTALL_PREFIX=${KOKKOS_DIR} -D CMAKE_CXX_COMPILER=hipcc ${KOKKOS_OPTIONS} .. && \\\n    make -j${NPROCS} install && \\\n    rm -rf ${SCRATCH_DIR}\n"
}