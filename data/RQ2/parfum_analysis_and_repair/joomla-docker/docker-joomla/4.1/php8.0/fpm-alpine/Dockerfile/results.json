{
  "startTime": 1674219292158,
  "endTime": 1674219293467,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 1,
        "columnEnd": 130
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 1,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 1,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS GENERATED VIA \"apply-templates.sh\"\n#\n# PLEASE DO NOT EDIT IT DIRECTLY.\n#\n\n# from https://downloads.joomla.org/technical-requirements\nFROM php:8.0-fpm-alpine\nLABEL maintainer=\"Llewellyn van der Merwe <llewellyn.van-der-merwe@community.joomla.org> (@Llewellynvdm), Harald Leithner <harald.leithner@community.joomla.org> (@HLeithner)\"\n\n# Disable remote database security requirements.\nENV JOOMLA_INSTALLATION_DISABLE_LOCALHOST_CHECK=1\nRUN set -eux; \\\n\tapk add --no-cache \\\n# in theory, docker-entrypoint.sh is POSIX-compliant, but priority is a working, consistent image\n\t\tbash \\\n# Ghostscript is required for rendering PDF previews\n\t\tghostscript \\\n# Alpine package for \"imagemagick\" contains ~120 .so files\n\t\timagemagick \\\n\t;\n\n# install the PHP extensions we need.\nRUN set -ex; \\\n\n\tapk add --no-cache --virtual .build-deps \\\n\t\t$PHPIZE_DEPS \\\n\t\tautoconf \\\n\t\tbzip2-dev \\\n\t\tgmp-dev \\\n\t\ticu-dev \\\n\t\tfreetype-dev \\\n\t\timagemagick-dev \\\n\t\tlibjpeg-turbo-dev \\\n\t\tlibmemcached-dev \\\n\t\tlibpng-dev \\\n\t\tlibwebp-dev \\\n\t\tlibzip-dev \\\n\t\topenldap-dev \\\n\t\tpcre-dev \\\n\t\tpostgresql-dev \\\n\t; \\\n\n\tdocker-php-ext-configure gd \\\n\t\t--with-freetype \\\n\t\t--with-jpeg \\\n\t\t--with-webp \\\n\t; \\\n\tdocker-php-ext-configure ldap; \\\n\tdocker-php-ext-install -j \"$(nproc)\" \\\n\t\tbz2 \\\n\t\tbcmath \\\n\t\texif \\\n\t\tgd \\\n\t\tgmp \\\n\t\tintl \\\n\t\tldap \\\n\t\tmysqli \\\n\t\tpdo_mysql \\\n\t\tpdo_pgsql \\\n\t\tpgsql \\\n\t\tzip \\\n\t; \\\n# WARNING: imagick is likely not supported on Alpine: https://github.com/Imagick/imagick/issues/328\n# https://pecl.php.net/package/imagick\n\tpecl install imagick-3.6.0; \\\n\tdocker-php-ext-enable imagick; \\\n\trm -r /tmp/pear; \\\n\n# some misbehaving extensions end up outputting to stdout\n\tout=\"$(php -r 'exit(0);')\"; \\\n\t[ -z \"$out\" ]; \\\n\terr=\"$(php -r 'exit(0);' 3>&1 1>&2 2>&3)\"; \\\n\t[ -z \"$err\" ]; \\\n\n\textDir=\"$(php -r 'echo ini_get(\"extension_dir\");')\"; \\\n\t[ -d \"$extDir\" ]; \\\n\n# pecl will claim success even if one install fails, so we need to perform each install separately\n\tpecl install APCu-5.1.21; \\\n\tpecl install memcached-3.2.0; \\\n\tpecl install redis-5.3.7; \\\n\n\tdocker-php-ext-enable \\\n\t\tapcu \\\n\t\tmemcached \\\n\t\tredis \\\n\t; \\\n\trm -r /tmp/pear; \\\n\n\trunDeps=\"$( \\\n\t\tscanelf --needed --nobanner --format '%n#p' --recursive \"$extDir\" \\\n\t\t\t| tr ',' '\\n' \\\n\t\t\t| sort -u \\\n\t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --no-network --virtual .joomla-phpexts-rundeps $runDeps; \\\n\tapk del --no-network .build-deps; \\\n\n\t! { ldd \"$extDir\"/*.so | grep 'not found'; }; \\\n# check for output like \"PHP Warning:  PHP Startup: Unable to load dynamic library 'foo' (tried: ...)\n\terr=\"$(php --version 3>&1 1>&2 2>&3)\"; \\\n\t[ -z \"$err\" ]\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN set -eux; \\\n\tdocker-php-ext-enable opcache; \\\n\t{ \\\n\t\techo 'opcache.memory_consumption=128'; \\\n\t\techo 'opcache.interned_strings_buffer=8'; \\\n\t\techo 'opcache.max_accelerated_files=4000'; \\\n\t\techo 'opcache.revalidate_freq=2'; \\\n\t\techo 'opcache.fast_shutdown=1'; \\\n\t} > /usr/local/etc/php/conf.d/opcache-recommended.ini\n# set recommended error logging\nRUN { \\\n# https://www.php.net/manual/en/errorfunc.constants.php\n\t\techo 'error_reporting = E_ERROR | E_WARNING | E_PARSE | E_CORE_ERROR | E_CORE_WARNING | E_COMPILE_ERROR | E_COMPILE_WARNING | E_RECOVERABLE_ERROR'; \\\n\t\techo 'display_errors = Off'; \\\n\t\techo 'display_startup_errors = Off'; \\\n\t\techo 'log_errors = On'; \\\n\t\techo 'error_log = /dev/stderr'; \\\n\t\techo 'log_errors_max_len = 1024'; \\\n\t\techo 'ignore_repeated_errors = On'; \\\n\t\techo 'ignore_repeated_source = Off'; \\\n\t\techo 'html_errors = Off'; \\\n\t} > /usr/local/etc/php/conf.d/error-logging.ini\n\nVOLUME /var/www/html\n\n# Define Joomla version and expected SHA512 signature\nENV JOOMLA_VERSION 4.1.5\nENV JOOMLA_SHA512 81edf13386640f358aec8d4facc4bda53bca401632d796a0b2137e5cdcb6635dc91d6abeb10e06545881a7a011dbe55ab8e07d670044cf563927467149f2cd2e\n\n# Download package and extract to web volume\nRUN set -ex; \\\n\tcurl -f -o joomla.tar.bz2 -SL https://github.com/joomla/joomla-cms/releases/download/4.1.5/Joomla_4.1.5-Stable-Full_Package.tar.bz2; \\\n\techo \"$JOOMLA_SHA512 *joomla.tar.bz2\" | sha512sum -c -; \\\n\tmkdir /usr/src/joomla; rm -rf /usr/src/joomla \\\n\ttar -xf joomla.tar.bz2 -C /usr/src/joomla; \\\n\trm joomla.tar.bz2; \\\n\tchown -R www-data:www-data /usr/src/joomla\n\n# Copy init scripts\nCOPY docker-entrypoint.sh /entrypoint.sh\nCOPY makedb.php /makedb.php\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"php-fpm\"]\n\n\n"
}