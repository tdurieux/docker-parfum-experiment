{
  "startTime": 1674249245241,
  "endTime": 1674249246379,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########\n# BASE\n########\nFROM node:16-bullseye-slim as base\n\nWORKDIR /usr/app\n\n########\n# DEPS\n########\nFROM base as deps\n\nRUN echo \"deb http://deb.debian.org/debian bullseye main contrib non-free\" > /etc/apt/sources.list \\\n    && echo \"deb http://deb.debian.org/debian-security/ bullseye-security main contrib non-free\" >> /etc/apt/sources.list \\\n    && echo \"deb http://deb.debian.org/debian bullseye-updates main contrib non-free\" >> /etc/apt/sources.list \\\n    && echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n    # fonts\n    fonts-arphic-ukai \\\n    fonts-arphic-uming \\\n    fonts-ipafont-mincho \\\n    fonts-thai-tlwg \\\n    fonts-kacst \\\n    fonts-ipafont-gothic \\\n    fonts-unfonts-core \\\n    ttf-wqy-zenhei \\\n    ttf-mscorefonts-installer \\\n    fonts-freefont-ttf \\\n    # app\n    tini \\\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Copy package.json for version number\nCOPY package*.json ./\n\nRUN npm ci --only=production && $(npx install-browser-deps) \\\n    # Heavy inspiration from: https://github.com/ulixee/hero/blob/main/Dockerfile\n    && groupadd -r csgosus \\\n    && useradd -r -g csgosus -G audio,video csgosus \\\n    && mkdir -p /home/csgosus/Downloads \\\n    && mkdir -p /home/csgosus/.cache \\\n    && chown -R csgosus:csgosus /home/csgosus \\\n    && mv ~/.cache/ulixee /home/csgosus/.cache/ \\\n    && chmod 777 /tmp\n# && chmod -R 777 /home/csgosus/.cache/ulixee\n\n########\n# BUILD\n########\nFROM base as build\n\n# Copy all source files\nCOPY package*.json tsconfig.json ./\n\n# Add dev deps\nRUN npm ci\n\n# Copy source code\nCOPY src src\n\nRUN npm run build\n\n\n########\n# DEPLOY\n########\nFROM deps as deploy\n\n# Add below to run as unprivileged user.\nUSER csgosus\n\n# Steal compiled code from build image\nCOPY --from=build /usr/app/dist ./dist\n\nLABEL org.opencontainers.image.title=\"csgo-sus\" \\ \n    org.opencontainers.image.url=\"https://github.com/claabs/csgo-sus\" \\\n    org.opencontainers.image.description=\"Lookup in-depth public data on CSGO players' accounts to see if they're suspicious\" \\\n    org.opencontainers.image.name=\"csgo-sus\" \\\n    org.opencontainers.image.base.name=\"node:16-bullseye-slim\"\n\nARG COMMIT_SHA=\"\"\n\nENV NODE_ENV=production \\\n    CACHE_DIR=/csgo-sus \\\n    COMMIT_SHA=${COMMIT_SHA}\n\nVOLUME [ \"/csgo-sus\" ]\n\nENTRYPOINT [\"tini\", \"--\"]\n\nCMD [\"node\", \"dist/index.js\"]"
}