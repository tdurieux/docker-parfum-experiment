{
  "startTime": 1674252323177,
  "endTime": 1674252324348,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest AS builder\n\nENV PATH=/usr/local/bin:$PATH\nRUN apk add --no-cache git build-base linux-headers cmake wget\n\nCMD [ \"/bin/sh\" ]\n\nFROM builder AS dev\n\n# Input arguments\nARG BENCHMARK_TESTS\nARG\tBUILD_DOCS\nARG\tBUILD_CLEAN\n\n# Define environment variables (may differ from arguments)\nENV BENCHMARK_TESTS ${BENCHMARK_TESTS:-false}\nENV BUILD_DOCS ${BUILD_DOCS:-false}\nENV BUILD_CLEAN ${BUILD_CLEAN:-false}\nENV BUILD_RELEASE ${BUILD_RELEASE:-false}\nENV BUILD_PYTHON ${BUILD_PYTHON:-false}\nENV BUILD_DOTNET ${BUILD_DOTNET:-false}\n\nWORKDIR /root/\nCOPY . .\nRUN mv tools/docker/scripts/run_tests . \\\n&& chmod +x run_tests\n\nFROM builder AS boost\n\n# Input arguments\nARG BENCHMARK_TESTS\nARG\tBUILD_DOCS\nARG\tBUILD_CLEAN\n\n# Define environment variables (may differ from arguments)\nENV BENCHMARK_TESTS ${BENCHMARK_TESTS:-false}\nENV BUILD_DOCS ${BUILD_DOCS:-false}\nENV BUILD_CLEAN ${BUILD_CLEAN:-false}\nENV BUILD_RELEASE ${BUILD_RELEASE:-false}\nENV BUILD_PYTHON ${BUILD_PYTHON:-false}\n# Boost vars (1.78 doesn't work)\nENV BOOST_VERSION 1.75.0\nENV BOOST_VERSION_UNDERSCORE 1_75_0\n\n# Install boost\nRUN wget -O boost_${BOOST_VERSION_UNDERSCORE}.tar.gz \\\n https://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION_UNDERSCORE}.tar.gz/download \\\n&& tar xzvf boost_${BOOST_VERSION_UNDERSCORE}.tar.gz \\\n&& cd boost_${BOOST_VERSION_UNDERSCORE} \\\n&& ./bootstrap.sh --exec-prefix=/usr/local --without-libraries=python \\\n&& ./b2 threading=multi \\\n&& ./b2 install threading=multi \\\n&& cd .. \\\n&& rm boost_${BOOST_VERSION_UNDERSCORE}.tar.gz \\\n&& rm -r boost_${BOOST_VERSION_UNDERSCORE}\n\nWORKDIR /root/\nCOPY . .\nRUN mv tools/docker/scripts/run_tests . \\\n&& chmod +x run_tests\n"
}