diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/heronsystems/openmace/Docker/Dockerfile_SITL b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/heronsystems/openmace/Docker/Dockerfile_SITL/repaired.Dockerfile
index 624d55f..3d45ff5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/heronsystems/openmace/Docker/Dockerfile_SITL
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/heronsystems/openmace/Docker/Dockerfile_SITL/repaired.Dockerfile
@@ -24,33 +24,33 @@ FROM ubuntu:16.04
 
 # Update Ubuntu Software repository
 RUN apt-get update
-RUN apt-get install -y screen
+RUN apt-get install --no-install-recommends -y screen && rm -rf /var/lib/apt/lists/*;
 # Some config to get screen working nicely
 RUN echo "termcapinfo xterm* ti@:te@" >> ~/.screenrc
 RUN echo "defshell -bash" >> ~/.screenrc
 ## START CHANGING STUFF
 
 # Install tools here, (recommended to use multiple lines so they don't have to all reinstall if you change one)
-RUN apt-get install -y nano
-RUN apt-get install -y git 
-RUN apt-get install -y libtool-bin 
-RUN apt-get install -y automake 
-RUN apt-get install -y autoconf 
-RUN apt-get install -y libexpat1-dev 
-RUN apt-get install -y python-matplotlib 
-RUN apt-get install -y python-serial 
-RUN apt-get install -y python-wxgtk3.0 
-RUN apt-get install -y python-wxtools 
-RUN apt-get install -y python-lxml 
-RUN apt-get install -y python-scipy 
-RUN apt-get install -y python-opencv 
-RUN apt-get install -y ccache 
-RUN apt-get install -y gawk 
-RUN apt-get install -y git 
-RUN apt-get install -y python-pip 
-RUN apt-get install -y python-pexpect
-RUN apt-get install -y tmux
-RUN pip install future pymavlink MAVProxy
+RUN apt-get install --no-install-recommends -y nano && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libtool-bin && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y automake && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y autoconf && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libexpat1-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-matplotlib && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-serial && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-wxgtk3.0 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-wxtools && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-lxml && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-scipy && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-opencv && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y ccache && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y gawk && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-pip && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y python-pexpect && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y tmux && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir future pymavlink MAVProxy
 
 ## May need to add DEBIAN_FRONTEND=noninteractive after RUN commands
 ## apt-get install -y python-software-properties
@@ -61,7 +61,7 @@ RUN pip install future pymavlink MAVProxy
 # RUN apt-get install -y python3.6
 
 
-RUN git clone https://github.com/heronsystems/ardupilot.git && cd ardupilot && git submodule update --init --recursive && cd / 
+RUN git clone https://github.com/heronsystems/ardupilot.git && cd ardupilot && git submodule update --init --recursive && cd /
 RUN git clone https://github.com/tridge/jsbsim.git && cd jsbsim && ./autogen.sh --enable-libraries && make
 
 ENV PATH=$PATH:/ardupilot/Tools/autotest:/jsbsim/src:/usr/lib/ccache