{
  "startTime": 1674254213367,
  "endTime": 1674254214766,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedDockerfile": "# README\n#####\n# Build & Rebuild with the following command\n# sudo docker build -t ubuntu1604:mace .\n#####\n###\n# Now is a good time to learn how to use screen, otherwise the following commands will help you attach/detach and open new terminals\n###\n### Run and attach with a terminal with:\n# sudo docker run -it ubuntu1604:mace\n###\n# To detach use: Ctrl+p + Ctrl+q\n###\n# To reattach: sudo docker attach [CONTAINER-ID] (you may have to press enter again to get the command line back)\n###\n# To start a new bash shell (so you don't interrupt something else you were running)\n#     sudo docker exec -ti [CONTAINER-ID] bash\n# With a new bash shell run \"exit\" instead of Ctrl+p + Ctrl+q\n#####\n\n## DON'T CHANGE THIS STUFF\n#Download base image ubuntu 16.04\nFROM ubuntu:18.04\n\n# Update Ubuntu Software repository\nRUN apt update\n## START CHANGING STUFF\n\n# # Install tools here, (recommended to use multiple lines so they don't have to all reinstall if you change one)\n# RUN apt install -y cmake\nRUN apt install --no-install-recommends -y nano && rm -rf /var/lib/apt/lists/*;\n# RUN apt install -y tmux\nRUN apt install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;\n# RUN apt update\n# # RUN apt install -y qt5-default\n# RUN apt install -y libqt5serialport5-dev\n# RUN apt install -y build-essential\n# RUN apt install -y libboost-system-dev\n# # RUN apt install -y python-pip\n# # RUN apt install -y python-dev\n# # RUN pip install --upgrade pip\n# # RUN pip install --upgrade virtualenv\n# # RUN apt update\n# RUN apt install -y pkg-config\n# # RUN apt install -y liblz4-dev\n\n\n# # Set non-interactive flag for configuring tzdata:\n# ENV DEBIAN_FRONTEND=noninteractive\n\n# # Install ROS Melodic (i.e. ROS 1)\n# RUN apt update\n# RUN apt install -y lsb-release\n# RUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\n# RUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\n# RUN apt update\n# RUN apt install -y ros-melodic-desktop-full\n# RUN apt install -y python-rosdep python-rosinstall python-rosinstall-generator python-wstool build-essential\n# RUN rosdep init\n# RUN rosdep update\n# RUN echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc\n# RUN /bin/bash -c \"source ~/.bashrc\"\n\n\n# # Install ROS Dashing (i.e. ROS 2)\n# RUN apt update && apt -y install locales\n# RUN locale-gen en_US en_US.UTF-8\n# RUN update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8\n# RUN export LANG=en_US.UTF-8\n# RUN apt update\n# RUN sudo apt install -y curl\n# RUN sudo apt install -y gnupg2\n# RUN sudo apt install -y lsb-release\n# RUN curl -s https://raw.githubusercontent.com/ros/rosdistro/master/ros.asc | apt-key add -\n# RUN sh -c 'echo \"deb [arch=amd64,arm64] http://packages.ros.org/ros2/ubuntu `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros2-latest.list'\n# RUN apt update\n# RUN apt install -y ros-dashing-desktop\n# RUN apt install -y python3-argcomplete\n# RUN apt update\n# RUN apt install -y ros-dashing-ros1-bridge\n# RUN apt install -y python3-colcon-common-extensions\n\n\n## TMUX Configuration\n#COPY tmux/.tmux.conf /root/\n#COPY tmux/.tmux.conf.local /root/\n\n# Copy MACE:\n# COPY MACE_RELEASE_QT_LITE.tar.xz /root/\n\n\nWORKDIR /\n"
}