{
  "startTime": 1674252796439,
  "endTime": 1674252797298,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.19.3 as build\n\nWORKDIR /app\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y build-essential git && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./package.json .\nCOPY ./yarn.lock .\nCOPY ./.yarnrc.yml .\nCOPY ./.yarn/plugins .yarn/plugins\nCOPY ./.yarn/releases .yarn/releases\n\nCOPY ./packages/core-typings packages/core-typings\nCOPY ./packages/eslint-config packages/eslint-config\nCOPY ./packages/rest-typings packages/rest-typings\nCOPY ./packages/model-typings packages/model-typings\nCOPY ./packages/models packages/models\n\nCOPY ./apps/meteor/ee/server/services apps/meteor/ee/server/services\n\nRUN yarn install && yarn cache clean;\n\nCOPY ./tsconfig.base.json .\n\nRUN yarn workspace @rocket.chat/core-typings run build \\\n    && yarn workspace @rocket.chat/rest-typings run build && yarn cache clean;\n\nFROM node:14.19.3-alpine\n\nARG SERVICE\n\nWORKDIR /app\n\nCOPY --from=build /app/packages/core-typings/package.json /app/packages/core-typings/package.json\nCOPY --from=build /app/packages/core-typings/dist /app/packages/core-typings/dist\n\nCOPY --from=build /app/packages/rest-typings/package.json /app/packages/rest-typings/package.json\nCOPY --from=build /app/packages/rest-typings/dist /app/packages/rest-typings/dist\n\nCOPY --from=build /app/packages/model-typings/package.json /app/packages/model-typings/package.json\nCOPY --from=build /app/packages/model-typings/dist /app/packages/model-typings/dist\n\nCOPY --from=build /app/packages/models/package.json /app/packages/models/package.json\nCOPY --from=build /app/packages/models/dist /app/packages/models/dist\n\n# add dist/ folder from tsc so we don't need to add all rocket.chat repo\nCOPY ./apps/meteor/ee/server/services/dist ./apps/meteor/\n\nCOPY ./package.json .\nCOPY ./yarn.lock .\nCOPY ./.yarnrc.yml .\nCOPY ./.yarn/plugins .yarn/plugins\nCOPY ./.yarn/releases .yarn/releases\nCOPY ./apps/meteor/ee/server/services/package.json ./apps/meteor/ee/server/services/package.json\n\nENV NODE_ENV=production \\\n    PORT=3000\n\nWORKDIR /app/apps/meteor/ee/server/services\nRUN yarn workspaces focus --production && yarn cache clean;\n\nWORKDIR /app/apps/meteor/ee/server/services/${SERVICE}\n\nEXPOSE 3000 9458\n\nCMD [\"node\", \"service.js\"]\n"
}