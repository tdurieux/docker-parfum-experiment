{
  "startTime": 1674220612119,
  "endTime": 1674220613371,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:21.04\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get -y --no-install-recommends install joe software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -y --no-install-recommends \\\n       gnupg \\\n       gnupg1 \\\n       gpgv1 \\\n    && rm -rf /var/lib/apt/lists/*\nRUN sh -c  \"if [ x\"\" != x$http_proxy ]; then \\\n\t\t\t    apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --keyserver-options http-proxy=$http_proxy --recv-keys ED75B5A4483DA07C >/dev/null 2>&1; \\\n\t\t    else \\\n\t\t\t    apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys ED75B5A4483DA07C >/dev/null 2>&1; \\\n\t\t    fi\"\nRUN echo \"deb http://repo.aptly.info/ nightly main\" > /etc/apt/sources.list.d/aptly.list\nRUN dpkg --add-architecture i386\nRUN apt-get update \\\n    && apt-get -y upgrade \\\n    && apt-get install -y --no-install-recommends \\\n       acl \\\n       aptly \\\n       aria2 \\\n       bc \\\n       binfmt-support \\\n       binutils \\\n       bison \\\n       btrfs-progs \\\n       build-essential \\\n       ca-certificates \\\n       ccache \\\n       cpio \\\n       cryptsetup \\\n       cryptsetup-bin \\\n       curl \\\n       debian-archive-keyring \\\n       debian-keyring \\\n       debootstrap \\\n       device-tree-compiler \\\n       dialog \\\n       dosfstools \\\n       f2fs-tools \\\n       fakeroot \\\n       flex \\\n       g++-8-arm-linux-gnueabihf \\\n       gawk \\\n       gcc-arm-linux-gnueabihf \\\n       git \\\n       imagemagick \\\n       jq \\\n       kmod \\\n       lib32ncurses6 \\\n       lib32stdc++6 \\\n       lib32tinfo6 \\\n       libbison-dev \\\n       libc6-dev-armhf-cross \\\n       libc6-i386 \\\n       libfile-fcntllock-perl \\\n       libfl-dev \\\n       liblz4-tool \\\n       libncurses5-dev \\\n       libpython2.7-dev \\\n       libpython3-dev \\\n       libssl-dev \\\n       libusb-1.0-0-dev \\\n       linux-base \\\n       locales \\\n       lsb-release \\\n       lzop \\\n       ncurses-base \\\n       ncurses-term \\\n       nfs-kernel-server \\\n       ntpdate \\\n       openssh-client \\\n       p7zip-full \\\n       parted \\\n       patchutils \\\n       pigz \\\n       pixz \\\n       pkg-config \\\n       psmisc \\\n       pv \\\n       python2 \\\n       python3 \\\n       python3-dev \\\n       python3-distutils \\\n       python3-pkg-resources \\\n       python3-setuptools \\\n       qemu-user-static \\\n       rsync \\\n       swig \\\n       systemd-container \\\n       tzdata \\\n       u-boot-tools \\\n       udev \\\n       unzip \\\n       uuid-dev \\\n       uuid-runtime \\\n       wget \\\n       whiptail \\\n       xxd \\\n       zip \\\n       zlib1g-dev \\\n       zlib1g:i386 \\\n    && rm -rf /var/lib/apt/lists/*\nRUN locale-gen en_US.UTF-8\n\n# Static port for NFSv3 server used for USB FEL boot\nRUN sed -i 's/\\(^STATDOPTS=\\).*/\\1\"--port 32765 --outgoing-port 32766\"/' /etc/default/nfs-common \\\n    && sed -i 's/\\(^RPCMOUNTDOPTS=\\).*/\\1\"--port 32767\"/' /etc/default/nfs-kernel-server\n\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8' TERM=screen\nWORKDIR /root/armbian\nENTRYPOINT [ \"/bin/bash\", \"/root/armbian/compile.sh\" ]\n"
}