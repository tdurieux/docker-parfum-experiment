{
  "startTime": 1674255592585,
  "endTime": 1674255593515,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################################\n###  DOckerfile for the source Docker image used to demonstrate the migration\n###\n#Copyright (c) 2018, 2019 Oracle and/or its affiliates. All rights reserved.\n#\n#Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.\n#\n# ORACLE DOCKERFILES PROJECT\n# --------------------------\n# This Dockerfile extends the Oracle WebLogic image by creating a sample domain.\n#\n# Util scripts are copied into the image enabling users to plug NodeManager\n# automatically into the AdminServer running on another container.\n#\n# PREREQUISITES:\n# --------------\n# This sample requires that a Java JDK 1.8 or greater version must be installed on the machine\n# running the docker build command, and that the JAVA_HOME environment variable is set to the java home\n# location. The sample unzips the weblogic-deploy.zip into the image using the java jar command.\n#\n# HOW TO BUILD THIS IMAGE\n# -----------------------\n# Build the deployment archive file using the build-archive.sh script.\n#      $ ./build-archive.sh\n#\n# Run:\n#      $ sudo docker build \\\n#            --build-arg CUSTOM_ADMIN_HOST=wlsadmin \\\n#            --build-arg CUSTOM_ADMIN_PORT=7001 \\\n#            --build-arg CUSTOM_ADMIN_NAME=7001 \\\n#            --build-arg CUSTOM_MANAGED_SERVER_PORT=8001 \\\n#            --build-arg CUSTOM_DOMAIN_NAME=base_domain \\\n#            --build-arg CUSTOM_DEBUG_PORT=8453 \\\n#            --build-arg WDT_MODEL=simple-topology.yaml \\\n#            --build-arg WDT_ARCHIVE=archive.zip \\\n#            --build-arg WDT_VARIABLE=properties/docker-build/domain.properties \\\n#            --force-rm=true \\\n#            --no-cache=true \\\n#            -t 12213-domain-home-in-image-wdt .\n#\n# If the ADMIN_HOST, ADMIN_PORT, MS_PORT, DOMAIN_NAME are not provided, the variables\n# are set to default values. (The values shown in the build statement).\n#\n# You must insure that the build arguments align with the values in the model.\n# The sample model replaces the attributes with tokens that are resolved from values in the\n# corresponding property file domain.properties. The container-scripts/setEnv.sh script\n# demonstrates parsing the variable file to build a string of --build-args that can\n# be passed on the docker build command.\n#\n# Pull base image\n# ---------------\n# FROM store/oracle/weblogic:12.2.1.3\nFROM store/oracle/weblogic:12.2.1.3\n######FROM store/oracle/weblogic:12.2.1.3-dev\n\n# Maintainer\n# ----------\nMAINTAINER Eugene Simos  <eugene.simos@oracle.com>\n\nARG WDT_ARCHIVE\nARG WDT_VARIABLE\nARG WDT_MODEL\nARG CUSTOM_ADMIN_NAME=admin-server\nARG CUSTOM_ADMIN_HOST=wlsadmin\nARG CUSTOM_ADMIN_PORT=7001\nARG CUSTOM_MANAGED_SERVER_PORT=8001\nARG CUSTOM_DOMAIN_NAME=base_domain\nARG CUSTOM_DEBUG_PORT=8453\n\n# Persist arguments - for ports to expose and container to use\n# Create a placeholder for the manager server name. This will be provided when run the container\n# Weblogic and Domain locations\n# The boot.properties will be created under the DOMAIN_HOME when the admin server container is run\n# WDT installation\n# ---------------------------\nENV ADMIN_NAME=${CUSTOM_ADMIN_NAME} \\\n    ADMIN_HOST=${CUSTOM_ADMIN_HOST} \\\n    ADMIN_PORT=${CUSTOM_ADMIN_PORT} \\\n    MANAGED_SERVER_NAME=${MANAGED_SERVER_NAME} \\\n    MANAGED_SERVER_PORT=${CUSTOM_MANAGED_SERVER_PORT} \\\n    DEBUG_PORT=${CUSTOM_DEBUG_PORT} \\\n    ORACLE_HOME=/u01/oracle \\\n    DOMAIN_NAME=${CUSTOM_DOMAIN_NAME} \\\n    DOMAIN_PARENT=${ORACLE_HOME}/user_projects/domains\n\nENV DOMAIN_HOME=${DOMAIN_PARENT}/${DOMAIN_NAME} \\\n    PROPERTIES_FILE_DIR=$ORACLE_HOME/properties \\\n    WDT_HOME=\"/u01\" \\\n    SCRIPT_HOME=\"${ORACLE_HOME}\" \\\n    PATH=$PATH:${ORACLE_HOME}/oracle_common/common/bin:${ORACLE_HOME}/wlserver/common/bin:${DOMAIN_HOME}:${DOMAIN_HOME}/bin:${ORACLE_HOME}\n\nCOPY weblogic-deploy.zip ${WDT_HOME}\nCOPY container-scripts/* ${SCRIPT_HOME}/\n\n# Create the properties file directory and the domain home parent with the correct permissions / owner.\n# Unzip and install the WDT image and change the permissions / owner.\n## https://docs.docker.com/engine/examples/running_ssh_service/\n## https://bbs.archlinux.org/viewtopic.php?id=165382\nUSER root\nRUN yum install -y openssh-server openssh-clients vi sudo shadow-utils sed zip git &&     yum clean all && \\\n    echo \"oracle ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers && \\\n\techo 'root:Welcome1412#' | chpasswd && \\\n\techo 'oracle:Welcome1412#' | chpasswd && \\\n\tsed -i 's/#*PermitRootLogin prohibit-password/PermitRootLogin yes/g' /etc/ssh/sshd_config && \\\n\tsed -i 's/#Banner none/Banner \\/home\\/oracle\\/WLS_deploy_scripts\\/welcome_source.txt/g' /etc/ssh/sshd_config && \\\n\tsed -i 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' /etc/pam.d/sshd && \\\n\t/usr/bin/ssh-keygen -A && rm -rf /var/cache/yum\n\n##&& \\\n##sed s/SELINUX=enforcing/SELINUX=disabled/g -i /etc/selinux/config\n\n##&& systemctl  start sshd && systemctl  enable sshd\n\nUSER root\nRUN chmod +xw ${SCRIPT_HOME}/*.sh && \\ \n    chown -R oracle:root ${SCRIPT_HOME} && \\\n    mkdir -p +xwr $PROPERTIES_FILE_DIR && \\\n    chown -R oracle:root $PROPERTIES_FILE_DIR && \\\n    mkdir -p $DOMAIN_PARENT && \\\n    chown -R oracle:root $DOMAIN_PARENT && \\\n    chmod -R a+xwr $DOMAIN_PARENT && \\\n    cd ${WDT_HOME} && \\\n    $JAVA_HOME/bin/jar xf weblogic-deploy.zip && \\\n    rm weblogic-deploy.zip && \\\n    chmod +xw weblogic-deploy/bin/*.sh && \\\n    chmod -R +xw weblogic-deploy/lib/python   && \\\n    chown -R oracle:root weblogic-deploy\n\n# Persist the WDT tool home location\nENV WDT_HOME=$WDT_HOME/weblogic-deploy\n\n# Copy the WDT model, archive file, variable file and credential secrets to the property file directory.\n# These files will be removed after the image is built.\n# Be sure to build with --force-rm to eliminate this container layer\n\nCOPY ${WDT_MODEL} ${WDT_ARCHIVE} ${WDT_VARIABLE} properties/docker-build/*.properties ${PROPERTIES_FILE_DIR}/\n# --chown for COPY is available in docker version 18 'COPY --chown oracle:root'\nRUN chown -R oracle:root ${PROPERTIES_FILE_DIR}\nCOPY keys/* /home/oracle/.ssh/\nRUN  chown -R oracle:root /home/oracle/.ssh && \\\n     chmod go-rw /home/oracle/.ssh/*\n\n# Create the domain home in the docker image.\n#\n# The create domain tool creates a domain at the DOMAIN_HOME location\n# The domain name is set using the value in the model / variable files\n# The domain name can be different from the DOMAIN_HOME domain folder name.\n#\n# Set WORKDIR for @@PWD@@ global token in model file\nWORKDIR $ORACLE_HOME\nUSER oracle\n##COPY ./scripts/discover_domain.sh /home/oracle/migratioh_scripts/discover_domain.sh\n##RUN chown -R oracle:root  /home/oracle/migratioh_scripts && \\\n##    chmod ugo+w /home/oracle/migratioh_scripts/discover_domain.sh\nRUN cd /home/oracle && \\\n    git clone https://github.com/eugsim1/WLS_deploy_scripts.git && \\\n\tchmod u+x /home/oracle/WLS_deploy_scripts/*.sh && \\\n\trm -rf WLS_deploy_scripts/source-12213-domain && \\\n\trm -rf WLS_deploy_scripts/target-12214-domain && \\\n\trm -rf WLS_deploy_scripts/js && rm -rf WLS_deploy_scripts/images && rm -rf WLS_deploy_scripts/index.html && rm -rf WLS_deploy_scripts/manifest.json && rm -rf WLS_deploy_scripts/welcome_target.txt && rm -rf WLS_deploy_scripts/.gi* && rm -rf WLS_deploy_scripts/READ* && \\\n    if [ -n \"$WDT_MODEL\" ]; then MODEL_OPT=\"-model_file $PROPERTIES_FILE_DIR/${WDT_MODEL##*/}\"; fi && \\\n    if [ -n \"$WDT_ARCHIVE\" ]; then ARCHIVE_OPT=\"-archive_file $PROPERTIES_FILE_DIR/${WDT_ARCHIVE##*/}\"; fi && \\\n    if [ -n \"$WDT_VARIABLE\" ]; then VARIABLE_OPT=\"-variable_file $PROPERTIES_FILE_DIR/${WDT_VARIABLE##*/}\"; fi && \\ \n    ${WDT_HOME}/bin/createDomain.sh \\\n        -oracle_home $ORACLE_HOME \\\n        -java_home $JAVA_HOME \\\n        -domain_home $DOMAIN_HOME \\\n        -domain_type WLS \\\n        $VARIABLE_OPT  \\\n        $MODEL_OPT \\\n        $ARCHIVE_OPT && \\\n\t\techo \". $DOMAIN_HOME/bin/setDomainEnv.sh\" >> /u01/oracle/.bashrc && \\\n\t\techo \"export PATH=$WDT_HOME/bin:$PATH\" >> /home/oracle/.bashrc && \\\n\t\techo \"export ORACLE_HOME=/u01/oracle\" >> /home//oracle/.bashrc  && \\\n\t\techo \"export MW_HOME=$ORACLE_HOME\" >> /home/oracle/.bashrc && \\\n\t\techo \"export DOMAIN_HOME=/u01/oracle/user_projects/domains/base_domain\" >> /home/oracle/.bashrc && \\\n\t\techo \"export JAVA_HOME=/u01/jdk\" >> /home/oracle/.bashrc  && \\\n\t\techo \"this is the source server\" >> /home/oracle/server.txt\n##\t\t&&         rm -rf $PROPERTIES_FILE_DIR\n\n# Expose admin server, managed server port and domain debug port\nEXPOSE $ADMIN_PORT $MANAGED_SERVER_PORT $DEBUG_PORT  22\n\nWORKDIR $DOMAIN_HOME\n\n### start sshd for this server\nUSER  root\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n# Define default command to start Admin Server in a container.\n##CMD [\"/u01/oracle/startAdminServer.sh\"]\n\n### ### docker run -d -P --name test_sshd 12213-domain-home-in-image-wdt:latest\n####### export DOCKER_PORT=`docker port test_sshd 22`\n####### export DOCKER_PORT=`echo $DOCKER_PORT | sed 's/0.0.0.0://g' `\n####### echo $DOCKER_PORT\n####### ssh -i ~/.ssh/priv.txt  -o \"UserKnownHostsFile=/dev/null\" -o \"StrictHostKeyChecking=no\"  oracle@localhost -p $DOCKER_PORT\n#docker container stop test_sshd\n#docker container rm test_sshd\n"
}