{
  "startTime": 1674249125238,
  "endTime": 1674249126384,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedDockerfile": "# LICENSE UPL 1.0\n#\n# Copyright (c) 2021 Oracle and/or its affiliates. All rights reserved.\n#\n# ORACLE DOCKERFILES PROJECT\n# --------------------------\n# This is the Dockerfile for Oracle Database with Fast Fail Over support\n#\n# REQUIREMETNS FOR THIS IMAGE\n# ----------------------------------\n# Any release of prebuilt oracle/database base docker image\n#\n# HOW TO BUILD THIS IMAGE\n# -----------------------\n#\n# Run:\n#      $ docker build -t <extended_image_name> . --build-arg BASE_IMAGE=oracle/database:19.3.0-ee\n#\n\nARG BASE_IMAGE_VERSION=19.3.0\nARG BASE_IMAGE=oracle/database:${BASE_IMAGE_VERSION}-ee\nARG BASE_REPO=https://github.com/oracle/db-sharding\n\n# Creating stage for downloading necessary script files\nFROM oraclelinux:7-slim as downloader\nARG BASE_REPO\nENV BASE_REPO=$BASE_REPO\nWORKDIR /tmp\n\nRUN yum -y install gzip tar && \\\n    curl -f -L -o master.tar.gz ${BASE_REPO}/archive/master.tar.gz && \\\n    tar -xvf master.tar.gz && rm -rf /var/cache/yum\n\n# Creating another stage for sharding extension creation\nFROM ${BASE_IMAGE}\n# Extn name\nARG EXTENSION_NAME=sharding\nARG BASE_IMAGE_VERSION\n\n# Environment variables required for this build (do NOT change)\n# -------------------------------------------------------------\nENV CMD_EXEC=\"cmdExec\" \\\n   DEMO_APP=\"demoapp.sql\" \\\n   MAIN_PY=\"main.py\" \\\n   COMMON_PY=\"oracommon.py\" \\\n   ENV_PY=\"oraenv.py\" \\\n   FACTORY_PY=\"orafactory.py\" \\\n   GSM_PY=\"oragsm.py\" \\\n   LOGGER_PY=\"oralogger.py\" \\\n   MACHINE_PY=\"oramachine.py\" \\\n   PCATALOG_PY=\"orapcatalog.py\" \\\n   SHARD_PY=\"orapshard.py\" \\\n   SCATALOG_PY=\"orascatalog.py\" \\\n   SSHARD_PY=\"orasshard.py\" \\\n   RUN_SHARD_FILE=\"runOraShardSetup.sh\" \\\n   RUN_FILE=\"runOracle.sh\" \\\n   SHARD_SETUP=\"false\"\n\n# backup original runOracle\nRUN if test -e \"$ORACLE_BASE/$RUN_FILE.orig\"; then EXTN='extended'; else EXTN='orig'; fi ; \\\n    mv \"$ORACLE_BASE/$RUN_FILE\" \"$ORACLE_BASE/$RUN_FILE.$EXTN\"\n\n# Copy updated scripts for sharding support\nCOPY  --chown=oracle:dba --from=downloader /tmp/db-sharding-master/docker-based-sharding-deployment/dockerfiles/${BASE_IMAGE_VERSION}/scripts/* $ORACLE_BASE/scripts/sharding/\nRUN mv \"$ORACLE_BASE/scripts/sharding/$RUN_FILE\" \"$ORACLE_BASE/$RUN_FILE.$EXTENSION_NAME\"\n\n# Set perms and append a call to main runOracle\nRUN if test -e \"$ORACLE_BASE/$RUN_FILE.extended\"; then \\\n        mv \"$ORACLE_BASE/$RUN_FILE.extended\" \"$ORACLE_BASE/$RUN_FILE\" ; \\\n    else echo \". $ORACLE_BASE/$RUN_FILE.orig\" > \"$ORACLE_BASE/$RUN_FILE\" ; fi ; \\\n    if ! grep \"$RUN_FILE.$EXTENSION_NAME\" \"$ORACLE_BASE/$RUN_FILE\"; then \\\n       sed  -i \"\\$a . $ORACLE_BASE/$RUN_FILE.$EXTENSION_NAME\" \"$ORACLE_BASE/$RUN_FILE\"; \\\n    fi && \\\n    sed -i '/alert.log/,$ s/wait \\$childPID//' \"$ORACLE_BASE\"/runOracle.sh.orig && \\\n    chmod ug+x $ORACLE_BASE/$RUN_FILE $ORACLE_BASE/$RUN_FILE.$EXTENSION_NAME $ORACLE_BASE/scripts/sharding/*.sh $ORACLE_BASE/scripts/sharding/*.py && sync\n"
}