diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oracle/content-and-experience-toolkit/sites/docker-images/compilation-server/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oracle/content-and-experience-toolkit/sites/docker-images/compilation-server/Dockerfile/repaired.Dockerfile
index 2887a11..41d214c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oracle/content-and-experience-toolkit/sites/docker-images/compilation-server/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oracle/content-and-experience-toolkit/sites/docker-images/compilation-server/Dockerfile/repaired.Dockerfile
@@ -18,16 +18,16 @@
 #
 # HOW TO RUN THE BUILT DOCKER IMAGE
 # ---------------------------------
-# Run: 
+# Run:
 #       $ docker run -p 8087:8087 -d oce-compilation:latest
 #    or $ docker run --network host <imageId>
-#    or $ docker run -p 8087:8087 <imageId> 
+#    or $ docker run -p 8087:8087 <imageId>
 #
 # HOW TO TEST THE RUNNING DOCKER IMAGE
 # ------------------------------------
-# In a browser, enter:  
+# In a browser, enter: 
 #       http://<server>:8087/compiler/rest/api
-# The page will show the supported api versions: 
+# The page will show the supported api versions:
 #   [ "v1" ]
 #
 #
@@ -48,7 +48,7 @@ ENV CEC_COMPILATION_BASE_DIR=/u02/d01 \
     CEC_TOOLKIT_DIR_NAME=sites-toolkit \
     CEC_DIR_NAME=cec-src \
     CEC_COMPILATION_GROUP=compilegroup \
-    CEC_COMPILATION_USER=compileagent 
+    CEC_COMPILATION_USER=compileagent
 
 ENV CEC_COMPILATION_HOME=${CEC_COMPILATION_BASE_DIR}/${CEC_COMPILATION_DIR_NAME}
 
@@ -76,14 +76,14 @@ RUN echo "auth            [success=ignore default=1] pam_succeed_if.so user = $C
 # -------------------------------
 RUN yum install -y unzip \
   && yum install -y curl \
-  && yum install -y dos2unix
+  && yum install -y dos2unix && rm -rf /var/cache/yum
 
 # install node
 # ------------
-RUN curl -L -o node-v12.21.0-linux-x64.tar.gz  https://nodejs.org/dist/v12.21.0/node-v12.21.0-linux-x64.tar.gz
-RUN tar xvf node-v12.21.0-linux-x64.tar.gz 
-RUN cp -rp node-v12.21.0-linux-x64 /opt/node 
-RUN ln -s /opt/node/bin/node /usr/local/bin/node 
+RUN curl -f -L -o node-v12.21.0-linux-x64.tar.gz https://nodejs.org/dist/v12.21.0/node-v12.21.0-linux-x64.tar.gz
+RUN tar xvf node-v12.21.0-linux-x64.tar.gz && rm node-v12.21.0-linux-x64.tar.gz
+RUN cp -rp node-v12.21.0-linux-x64 /opt/node
+RUN ln -s /opt/node/bin/node /usr/local/bin/node
 RUN ln -s /opt/node/bin/npm /usr/local/bin/npm
 
 RUN node --version \
@@ -97,8 +97,8 @@ USER compileagent
 # Download the Content Toolkit
 # ------------------------
 WORKDIR ${CEC_COMPILATION_HOME}
-RUN curl -L -o ${CEC_TOOLKIT_ZIP} ${CEC_TOOLKIT_DOWNLOAD}
-RUN unzip -oq ${CEC_TOOLKIT_ZIP} 
+RUN curl -f -L -o ${CEC_TOOLKIT_ZIP} ${CEC_TOOLKIT_DOWNLOAD}
+RUN unzip -oq ${CEC_TOOLKIT_ZIP}
 RUN mv content-and-experience-toolkit-master/sites  ${CEC_TOOLKIT_DIR_NAME} \
   && chmod +x ${CEC_TOOLKIT_DIR_NAME}/test/job-manager/compileExec.sh
 
@@ -111,7 +111,7 @@ RUN cd ${CEC_TOOLKIT_DIR_NAME} \
   && npm install \
   && export PATH=${PATH}:${CEC_TOOLKIT_BIN_DIR_NAME} \
   && echo $PATH \
-  && npm install bin/cec --no-save
+  && npm install bin/cec --no-save && npm cache clean --force;
 
 # add cec command to /usr/local/bin
 USER root
@@ -136,7 +136,7 @@ RUN pwd \
   && npm install marked \
   && cd .. \
   && cd ${CEC_DIR_NAME} \
-  && cec --version
+  && cec --version && npm cache clean --force;
 
 
 # Copy and run the compilation server
@@ -144,6 +144,6 @@ RUN pwd \
 COPY ./run.sh ${CEC_COMPILATION_HOME}
 RUN dos2unix -n ${CEC_COMPILATION_HOME}/run.sh ${CEC_COMPILATION_HOME}/run.sh
 
-EXPOSE 8087 
+EXPOSE 8087
 
 CMD exec ${CEC_COMPILATION_HOME}/run.sh