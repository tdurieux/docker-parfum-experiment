{
  "startTime": 1674253838418,
  "endTime": 1674253839521,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 5,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# LICENSE UPL 1.0\n#\n# Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n#\n# ORACLE DOCKERFILES PROJECT\n# --------------------------\n# This is the Dockerfile for Oracle OCM Compilation Server\n#\n# REQUIRED FILES TO BUILD THIS IMAGE\n# ----------------------------------\n#   ./run.sh\n#\n# HOW TO BUILD THIS IMAGE\n# -----------------------\n# Put all downloaded files in the same directory as this Dockerfile\n# Run:\n#      $ docker build --no-cache --tag oce-compilation:latest `pwd`\n#\n# HOW TO RUN THE BUILT DOCKER IMAGE\n# ---------------------------------\n# Run:\n#       $ docker run -p 8087:8087 -d oce-compilation:latest\n#    or $ docker run --network host <imageId>\n#    or $ docker run -p 8087:8087 <imageId>\n#\n# HOW TO TEST THE RUNNING DOCKER IMAGE\n# ------------------------------------\n# In a browser, enter: \n#       http://<server>:8087/compiler/rest/api\n# The page will show the supported api versions:\n#   [ \"v1\" ]\n#\n#\n\n# Pull base image\n# ---------------\nFROM container-registry.oracle.com/os/oraclelinux:7.8 as base\n\nMAINTAINER  Oracle Corporation\n\n\n# OCM Directories and resources\n# -----------------------------\nENV CEC_COMPILATION_BASE_DIR=/u02/d01 \\\n    CEC_COMPILATION_DIR_NAME=compilation \\\n    CEC_TOOLKIT_ZIP=master.zip \\\n    CEC_TOOLKIT_DOWNLOAD=https://github.com/oracle/content-and-experience-toolkit/archive/master.zip \\\n    CEC_TOOLKIT_DIR_NAME=sites-toolkit \\\n    CEC_DIR_NAME=cec-src \\\n    CEC_COMPILATION_GROUP=compilegroup \\\n    CEC_COMPILATION_USER=compileagent\n\nENV CEC_COMPILATION_HOME=${CEC_COMPILATION_BASE_DIR}/${CEC_COMPILATION_DIR_NAME}\n\nENV CEC_TOOLKIT_BIN_DIR_NAME=${CEC_COMPILATION_HOME}/${CEC_TOOLKIT_DIR_NAME}/node_modules/.bin\n\nENV CEC_COMPILATION_USER_DIR=/home/${CEC_COMPILATION_USER}\n\n# Create compilation user and directories\n# ---------------------------------------\nRUN groupadd -r ${CEC_COMPILATION_GROUP} \\\n  && useradd -r -g ${CEC_COMPILATION_GROUP} ${CEC_COMPILATION_USER} \\\n  && mkdir -p ${CEC_COMPILATION_HOME} \\\n  && chown ${CEC_COMPILATION_USER}:${CEC_COMPILATION_GROUP} -R ${CEC_COMPILATION_HOME} \\\n  && mkdir -p ${CEC_COMPILATION_USER_DIR} \\\n  && chown ${CEC_COMPILATION_USER}:${CEC_COMPILATION_GROUP} -R ${CEC_COMPILATION_USER_DIR}\n\n# Allow $CEC_COMPILATION_USER to su to $CEC_COMPILATION_USER - still needed for single user use-case\nRUN echo \"auth            [success=ignore default=1] pam_succeed_if.so user = $CEC_COMPILATION_USER\" >> /etc/pam.d/su && \\\n    echo \"auth            sufficient      pam_succeed_if.so use_uid user = $CEC_COMPILATION_USER\" >> /etc/pam.d/su && \\\n    printf \"15,16m2\\nwq\\n\" | vi -e /etc/pam.d/su && \\\n    cat /etc/pam.d/su\n\n\n# install curl, unzip && dos2unix\n# -------------------------------\nRUN yum install -y unzip \\\n  && yum install -y curl \\\n  && yum install -y dos2unix && rm -rf /var/cache/yum\n\n# install node\n# ------------\nRUN curl -f -L -o node-v12.21.0-linux-x64.tar.gz https://nodejs.org/dist/v12.21.0/node-v12.21.0-linux-x64.tar.gz\nRUN tar xvf node-v12.21.0-linux-x64.tar.gz && rm node-v12.21.0-linux-x64.tar.gz\nRUN cp -rp node-v12.21.0-linux-x64 /opt/node\nRUN ln -s /opt/node/bin/node /usr/local/bin/node\nRUN ln -s /opt/node/bin/npm /usr/local/bin/npm\n\nRUN node --version \\\n  && npm --version\n\n\n# Switch to the compileagent user\n# -------------------------------\nUSER compileagent\n\n# Download the Content Toolkit\n# ------------------------\nWORKDIR ${CEC_COMPILATION_HOME}\nRUN curl -f -L -o ${CEC_TOOLKIT_ZIP} ${CEC_TOOLKIT_DOWNLOAD}\nRUN unzip -oq ${CEC_TOOLKIT_ZIP}\nRUN mv content-and-experience-toolkit-master/sites  ${CEC_TOOLKIT_DIR_NAME} \\\n  && chmod +x ${CEC_TOOLKIT_DIR_NAME}/test/job-manager/compileExec.sh\n\n# Build Content Toolkit\n# -----------------\nRUN cd ${CEC_TOOLKIT_DIR_NAME} \\\n  && pwd \\\n  && export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \\\n  && node --version \\\n  && npm install \\\n  && export PATH=${PATH}:${CEC_TOOLKIT_BIN_DIR_NAME} \\\n  && echo $PATH \\\n  && npm install bin/cec --no-save && npm cache clean --force;\n\n# add cec command to /usr/local/bin\nUSER root\nRUN ln -s ${CEC_TOOLKIT_BIN_DIR_NAME}/cec /usr/local/bin/cec\nUSER compileagent\n\nRUN cec --version\n\n# cleanup\nRUN rm ${CEC_COMPILATION_HOME}/${CEC_TOOLKIT_ZIP}\n\n# Build the OCM source folder for compilations\n# ----------------------------------------------\nRUN pwd \\\n  && export PATH=${PATH}:${CEC_TOOLKIT_BIN_DIR_NAME} \\\n  && export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \\\n  && cd ${CEC_COMPILATION_USER_DIR} \\\n  && mkdir ${CEC_DIR_NAME} \\\n  && cd ${CEC_DIR_NAME} \\\n  && cec install \\\n  && npm install mustache \\\n  && npm install marked \\\n  && cd .. \\\n  && cd ${CEC_DIR_NAME} \\\n  && cec --version && npm cache clean --force;\n\n\n# Copy and run the compilation server\n# -----------------------------------\nCOPY ./run.sh ${CEC_COMPILATION_HOME}\nRUN dos2unix -n ${CEC_COMPILATION_HOME}/run.sh ${CEC_COMPILATION_HOME}/run.sh\n\nEXPOSE 8087\n\nCMD exec ${CEC_COMPILATION_HOME}/run.sh\n"
}