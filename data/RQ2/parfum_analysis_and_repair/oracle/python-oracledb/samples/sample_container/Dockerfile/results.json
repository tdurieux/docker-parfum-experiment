{
  "startTime": 1674220114737,
  "endTime": 1674220115841,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 5,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NAME\n#\n#   Dockerfile\n#\n# PURPOSE\n#\n#   Creates a container with the Python python-oracledb samples and a running\n#   Oracle Database so python-oracledb can be evaluated.\n#\n#   Python-oracledb is the Python database driver for Oracle Database.  See\n#   https://oracle.github.io/python-oracledb/\n#\n# USAGE\n#\n#   Get an Oracle Database container (see\n#   https://hub.docker.com/r/gvenzl/oracle-xe):\n#\n#     podman pull docker.io/gvenzl/oracle-xe:21-slim\n#\n#   Create a container with the database, Python, python-oracledb and the\n#   samples. Choose a password for the sample schemas and pass it as an\n#   argument:\n#\n#     podman build -t pyo --build-arg PYO_PASSWORD=a_secret .\n#\n#   Start the container, which creates the database. Choose a password for the\n#   privileged database users and pass it as a variable:\n#\n#     podman run -d --name pyo -p 1521:1521 -it -e ORACLE_PASSWORD=a_secret pyo\n#\n#   Log into the container:\n#\n#     podman exec -it pyo bash\n#\n#   At the first login, create the sample schema:\n#\n#     python setup.py\n#\n#   Run samples like:\n#\n#     python bind_insert.py\n#\n#   The database will persist across container shutdowns, but will be deleted\n#   when the container is deleted.\n\nFROM docker.io/gvenzl/oracle-xe:21-slim\n\nUSER root\n\nRUN microdnf module disable python36 && \\\n    microdnf module enable python39 && \\\n    microdnf install python39 python39-pip python39-setuptools python39-wheel vim vi httpd-tools && \\\n    microdnf clean all\n\nWORKDIR /samples/\n\nCOPY setup.py setup.py\n\nRUN curl -f -LO https://github.com/oracle/python-oracledb/archive/refs/heads/main.zip && \\\n     unzip main.zip && mv python-oracledb-main/samples/* . && \\\n     /bin/rm -rf python-oracledb-main samples main.zip && \\\n     cat create_schema.py >> /samples/setup.py && chown -R oracle.oinstall /samples/\n\nUSER oracle\n\nRUN  python3 -m pip install oracledb Flask --user --no-warn-script-location\n\nARG PYO_PASSWORD\n\nENV PYO_SAMPLES_MAIN_USER=pythondemo\nENV PYO_SAMPLES_MAIN_PASSWORD=${PYO_PASSWORD}\nENV PYO_SAMPLES_EDITION_USER=pythoneditions\nENV PYO_SAMPLES_EDITION_PASSWORD=${PYO_PASSWORD}\nENV PYO_SAMPLES_EDITION_NAME=python_e1\nENV PYO_SAMPLES_CONNECT_STRING=\"localhost/xepdb1\"\nENV PYO_SAMPLES_DRCP_CONNECT_STRING=\"localhost/xepdb1:pooled\"\nENV PYO_SAMPLES_ADMIN_USER=system\n\n# Run the samples using the default python-oracledb 'Thin' mode, if possible\nENV PYO_SAMPLES_DRIVER_MODE=\"thin\"\n\n# The privileged user password is set in setup.py from the \"podman run\"\n# environment variable ORACLE_PASSWORD\n#ENV PYO_SAMPLES_ADMIN_PASSWORD=\n"
}