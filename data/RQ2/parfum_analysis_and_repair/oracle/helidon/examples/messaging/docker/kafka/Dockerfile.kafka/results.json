{
  "startTime": 1674219828720,
  "endTime": 1674219829400,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 12,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 21,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 26,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 26,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright (c) 2019, 2021 Oracle and/or its affiliates.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM openjdk:17-jdk-slim-buster\n\nENV VERSION=2.7.0\nENV SCALA_VERSION=2.13\n\nRUN apt-get -qq update && apt-get -qq --no-install-recommends -y install bash curl wget netcat jq && rm -rf /var/lib/apt/lists/*;\n\nRUN REL_PATH=kafka/${VERSION}/kafka_${SCALA_VERSION}-${VERSION}.tgz \\\n&& BACKUP_ARCHIVE=https://archive.apache.org/dist/ \\\n&& echo \"Looking for closest mirror ...\" \\\n&& MIRROR=$( curl -f -s 'https://www.apache.org/dyn/closer.cgi?as_json=1' | jq -r '.http[0]') \\\n&& echo \"Checking if version ${VERSION} is available on the mirror: ${MIRROR} ...\" \\\n&& MIRROR_RESPONSE=$( curl -f -L --write-out '%{http_code}' --silent --output /dev/null ${MIRROR}kafka/${VERSION}) \\\n&& if [ $MIRROR_RESPONSE -eq 200 ]; then BIN_URL=${MIRROR}${REL_PATH}; else BIN_URL=${BACKUP_ARCHIVE}${REL_PATH}; fi \\\n&& if [ $MIRROR_RESPONSE -ne 200 ]; then echo \"Version ${VERSION} not found on the mirror ${MIRROR}, defaulting to archive ${BACKUP_ARCHIVE}.\"; fi \\\n&& wget -q -O kafka.tar.gz ${BIN_URL} \\\n&& tar -xzf kafka.tar.gz -C /opt && rm kafka.tar.gz \\\n&& mv /opt/kafka* /opt/kafka\n\nWORKDIR /opt/kafka\n\nCOPY start_kafka.sh start_kafka.sh\nCOPY init_topics.sh init_topics.sh\n\nRUN chmod a+x ./*.sh\n\nRUN echo listener.security.protocol.map=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT >> config/server.properties \\\n&& echo advertised.listeners=INSIDE://localhost:9092,OUTSIDE://localhost:29092 >> config/server.properties \\\n&& echo listeners=INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:29092 >> config/server.properties \\\n&& echo inter.broker.listener.name=INSIDE >> config/server.properties\n\n# Expose Zookeeper and Kafka ports\nEXPOSE 2181 9092 29092\n\nCMD bash start_kafka.sh\n"
}