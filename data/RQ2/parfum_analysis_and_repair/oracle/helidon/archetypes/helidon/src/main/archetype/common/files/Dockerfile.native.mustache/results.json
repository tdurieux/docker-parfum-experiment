{
  "startTime": 1674220646036,
  "endTime": 1674220646654,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 1st stage, build the app\nFROM ghcr.io/graalvm/graalvm-ce:java17-21.3.0 as build\n\n# Install native-image\nRUN gu install native-image\n\nWORKDIR /usr/share\n\n# Install maven\nRUN set -x && \\\n    curl -f -O https://archive.apache.org/dist/maven/maven-3/3.8.4/binaries/apache-maven-3.8.4-bin.tar.gz && \\\n    tar -xvf apache-maven-*-bin.tar.gz && \\\n    rm apache-maven-*-bin.tar.gz && \\\n    mv apache-maven-* maven && \\\n    ln -s /usr/share/maven/bin/mvn /bin/\n\nWORKDIR /helidon\n\n# Create a first layer to cache the \"Maven World\" in the local repository.\n# Incremental docker builds will always resume after that, unless you update\n# the pom\nADD pom.xml .\nRUN mvn package -Pnative-image -Dnative.image.skip -Dmaven.test.skip -Declipselink.weave.skip\n\n# Do the Maven build!\n# Incremental docker builds will resume here when you change sources\nADD src src\nRUN mvn package -Pnative-image -Dnative.image.buildStatic -DskipTests\n\nRUN echo \"done!\"\n\n# 2nd stage, build the runtime image\nFROM scratch\nWORKDIR /helidon\n\n# Copy the binary built in the 1st stage\nCOPY --from=build /helidon/target/{{artifactId}} .\n\nENTRYPOINT [\"./{{artifactId}}\"]\n\nEXPOSE 8080\n"
}