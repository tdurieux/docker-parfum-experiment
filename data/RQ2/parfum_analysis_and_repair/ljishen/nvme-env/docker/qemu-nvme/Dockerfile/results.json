{
  "startTime": 1674217588848,
  "endTime": 1674217589576,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedDockerfile": "# VERSION 1.0\n\nFROM phusion/baseimage:0.9.22\nMAINTAINER Jianshen Liu <jliu120@ucsc.edu>\n\n# Install all necessary packages for building QEMU\n# See http://wiki.qemu.org/Hosts/Linux#Recommended_additional_packages\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        git-email \\\n        libaio-dev libbluetooth-dev libbrlapi-dev libbz2-dev \\\n        libcap-dev libcap-ng-dev libcurl4-gnutls-dev libgtk-3-dev \\\n        libibverbs-dev libjpeg8-dev libncurses5-dev libnuma-dev \\\n        librbd-dev librdmacm-dev \\\n        libsasl2-dev libsdl1.2-dev libseccomp-dev libsnappy-dev libssh2-1-dev \\\n        libvde-dev libvdeplug-dev libvte-dev libxen-dev liblzo2-dev \\\n        valgrind xfslibs-dev \\\n        libnfs-dev libiscsi-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y bc && rm -rf /var/lib/apt/lists/*;\n\n# Build the NVMe device emulation\nWORKDIR /root\nRUN git clone https://github.com/OpenChannelSSD/qemu-nvme.git\nWORKDIR /root/qemu-nvme\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --python=/usr/bin/python2 --enable-kvm --target-list=x86_64-softmmu --enable-debug --enable-linux-aio --prefix=$HOME/qemu-nvme\nRUN make -j`nproc` && make install\n\nWORKDIR /root\n\n# Build the kernel with the LightNVM support.\n# Currently the kernel release is 4.11.0-rc4+\nRUN git clone https://github.com/OpenChannelSSD/linux.git\nENV LINUX_SRC /root/linux\nRUN git -C $LINUX_SRC checkout for-next\n\n## Add AUFS support to the kernel (for Docker)\n## See http://aufs.sourceforge.net/\n##     https://github.com/sfjro/aufs4-standalone/tree/aufs4.11.0-untested\n##     http://fxlv.github.io/aufs-kernel-howto/\nRUN git clone git://github.com/sfjro/aufs4-standalone.git\nENV AUFS_SRC /root/aufs4-standalone\n###! CHECK if the kernel release changed\nRUN git -C $AUFS_SRC checkout origin/aufs4.11.0-untested\nWORKDIR $LINUX_SRC\nRUN patch -p1 < $AUFS_SRC/aufs4-kbuild.patch\nRUN patch -p1 < $AUFS_SRC/aufs4-base.patch\nRUN patch -p1 < $AUFS_SRC/aufs4-mmap.patch\nRUN cp -a $AUFS_SRC/Documentation/* Documentation/\nRUN cp -a $AUFS_SRC/fs/* fs/\nRUN cp -a $AUFS_SRC/include/uapi/linux/aufs_type.h include/uapi/linux/\n\n## Build the kernel\n### Generate kernel config\n### See http://mgalgs.github.io/2015/05/16/how-to-build-a-custom-linux-kernel-for-qemu-2015-edition.html\n###     https://github.com/moby/moby/blob/master/contrib/check-config.sh (Check docker-compatible kernel config)\nCOPY configs/.config .\nRUN make -j`nproc`\n\n## Build the perf program\nRUN apt-get install --no-install-recommends -y \\\n        flex \\\n        bison \\\n        libelf-dev \\\n        libaudit-dev \\\n        libperl-dev \\\n        python-dev \\\n        libdw-dev \\\n        libunwind-dev \\\n        systemtap-sdt-dev \\\n        libssl-dev \\\n        liblzma-dev \\\n        libiberty-dev \\\n        binutils-dev && rm -rf /var/lib/apt/lists/*;\nRUN make -C tools/perf/ -j`nproc`\n\n# Clean Up\nRUN apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR /root\nCOPY up .\nRUN chmod +x up\nENTRYPOINT [\"./up\"]\n"
}