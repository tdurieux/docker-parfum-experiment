{
  "startTime": 1674246097556,
  "endTime": 1674246098681,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# We use OpenJDK 17 since that is what our Heroku instance uses.\n# Download Gradle wrapper and install dependencies.\nFROM openjdk:17-jdk-slim AS deps\n\nWORKDIR /opt/build\n\nCOPY *.kts gradle.properties gradlew* /opt/build/\nCOPY gradle gradle\n\n# Add or remove '--info' as needed.\nRUN ./gradlew installDist --build-cache --no-daemon\n\n\n# Build project with downloaded Gradle wrapper and cached dependencies.\nFROM openjdk:17-jdk-slim AS build\n\nWORKDIR /opt/build\n\n# Copy Gradle wrapper and dependencies.\nCOPY --from=deps /root/.gradle /root/.gradle/\n\n# Copy config, and all code except tests.\nCOPY *.kts gradle.properties gradlew* /opt/build/\nCOPY gradle gradle\nCOPY src/main src/main\n\n# Build with Shadow.\n# Add or remove '--info' as needed.\nRUN ./gradlew shadowJar --build-cache --no-rebuild --no-daemon\n\n# Copy tests after build, so Docker does not rebuild when tests change.\nCOPY src/test src/test\n\n\n# Run the server\nFROM openjdk:17-jdk-slim\n\nWORKDIR /opt/app\n\nRUN apt update \\\n && apt install -yq --no-install-recommends curl && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=build /opt/build/build/libs/*-all.jar /opt/app/build/libs/\nCOPY Procfile /opt/app\nCOPY scripts scripts\n\n# Use Procfile as single source of truth.\nCMD cat Procfile | sed -e 's/web: //g' | bash\n"
}