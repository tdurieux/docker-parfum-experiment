{
  "startTime": 1674254273521,
  "endTime": 1674254274471,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 27,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 23,
        "columnEnd": 68
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 21,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 24,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=ubuntu:bionic\nFROM ${BASE_IMAGE}\nLABEL maintainer=\"perl@immunant.com\"\n\nARG USER=docker\nARG UID=1000\nARG GID=1000\nENV HOME=/home/$USER\nENV DEBIAN_FRONTEND=noninteractive\n\nUSER root\nRUN groupadd -f -g $GID $USER\nRUN useradd --create-home -u $UID -g $GID --create-home --shell /bin/bash $USER\n\n# /home/docker needs to be accessible by other users because we always run the\n# cargo binary from /home/docker.cargo/bin\nRUN chmod 755 /home/docker\n\n# required to install package dependencies.\n# NOTE: Ubuntu 18.04 ships with Python3.6 by defa ultwhich triggers a UnicodeException\n# in the W3C testsuite so we update the default python3 to Python3.7.\n# NOTE: we reduce the size of the image by deleting\nRUN sed -Ei 's/^# deb-src /deb-src /' /etc/apt/sources.list\nRUN apt-get update -qq && \\\n    apt-get install -y --no-install-recommends -qq \\\n    bear \\\n    build-essential \\\n    curl \\\n    ed \\\n\tgdb \\\n    git \\\n    python3.7-minimal \\\n    libcap-dev \\\n    libtool-bin \\\n    libsqlite3-dev && \\\n    apt-get build-dep -qq squid php && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.7 100 && \\\n    rm -rf /var/lib/apt/lists/*\n\nARG RUST_VER=nightly-2020-07-27\nUSER docker\nWORKDIR ${HOME}\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs |  \\\n    sh -s -- -y --default-toolchain $RUST_VER\nRUN echo \"source ~/.cargo/env\" >> .bashrc\n\nENV TMP=/tmp\nENV XML_TEST_TMP=${TMP}/libexpat\nENV XML_TEST_URL=http://www.w3.org/XML/Test/xmlts20020606.tar\nENV XML_ARCHIVE=${XML_TEST_TMP}/xmlts20020606.tar\nRUN mkdir -p \"${XML_TEST_TMP}\" && \\\n    curl -f \"${XML_TEST_URL}\" --silent --output \"${XML_ARCHIVE}\" && \\\n    tar -C \"${XML_TEST_TMP}\"  -xf \"${XML_ARCHIVE}\" && \\\n    rm \"${XML_ARCHIVE}\"\n\nENV XML_TEST_TMP=${TMP}/libexpat/xml-test-suite-2013\nENV XML_TEST_URL=https://www.w3.org/XML/Test/xmlts20130923.tar.gz\nENV XML_ARCHIVE=${XML_TEST_TMP}/xmlts20130923.tar.gz\nRUN mkdir -p \"${XML_TEST_TMP}\" && \\\n    curl -f \"${XML_TEST_URL}\" --silent --output \"${XML_ARCHIVE}\" && \\\n    tar -C \"${XML_TEST_TMP}\"  -xf \"${XML_ARCHIVE}\" && \\\n    rm \"${XML_ARCHIVE}\"\n\nENV PYTHON381_TMP=${TMP}/Python-3.8.1\nENV PYTHON381_URL=https://www.python.org/ftp/python/3.8.1/Python-3.8.1.tgz\nENV PYTHON381_ARCHIVE=${TMP}/Python-3.8.1.tgz\nRUN curl -f -L ${PYTHON381_URL} --silent --output \"${PYTHON381_ARCHIVE}\" && \\\n    tar -C /tmp -xf \"${PYTHON381_ARCHIVE}\" && \\\n    rm \"${PYTHON381_ARCHIVE}\"\nRUN cd ${PYTHON381_TMP} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --quiet --with-system-expat && \\\n    make -j`nproc --all` 1> build.stdout.log 2> build.stderr.log\n\nENV SQUID_TMP=${TMP}/squid-4.10\nENV SQUID_URL=http://www.squid-cache.org/Versions/v4/squid-4.10.tar.gz\nENV SQUID_ARCHIVE=${TMP}/squid-4.10.tar.gz\nRUN curl -f -L ${SQUID_URL} --silent --output \"${SQUID_ARCHIVE}\" && \\\n    tar -C /tmp -xf \"${SQUID_ARCHIVE}\" && \\\n    rm \"${SQUID_ARCHIVE}\"\nRUN cd ${SQUID_TMP} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --quiet --enable-esi --with-expat\n# &&   make -j`nproc --all` check 1> build.stdout.log 2> build.stderr.log\n\n# only one binary seems to actually use libexpat, so we skip git\n# ENV GIT_TMP=${TMP}/git-2.25.0 \n# ENV GIT_URL=https://github.com/git/git/archive/v2.25.0.tar.gz\n# ENV GIT_ARCHIVE=${TMP}/git-2.25.0.tar.gz\n# RUN curl -L ${GIT_URL} --silent --output \"${GIT_ARCHIVE}\" && \\\n#     tar -C /tmp -xf \"${GIT_ARCHIVE}\" && \\\n#     rm \"${GIT_ARCHIVE}\"\n# RUN cd ${GIT_TMP} && autoconf && ./configure --quiet && \\\n#    make -j`nproc --all` 1> build.stdout.log 2> build.stderr.log\n\nENV PHP_TMP=${TMP}/php-7.4.2\nENV PHP_URL=https://www.php.net/distributions/php-7.4.2.tar.bz2\nENV PHP_ARCHIVE=${TMP}/php-7.4.2.tar.bz2\nRUN curl -f -L ${PHP_URL} --silent --output \"${PHP_ARCHIVE}\" && \\\n    tar -C /tmp -xf \"${PHP_ARCHIVE}\" && \\\n    rm \"${PHP_ARCHIVE}\"\nRUN cd ${PHP_TMP} && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --quiet --with-expat && \\\n    make -j`nproc --all` 1> build.stdout.log 2> build.stderr.log\n\nENV PATH=\"/home/${USER}/.cargo/bin:${PATH}\"\nENV CARGO_HOME=\"/tmp/.cargo\"\nENV RUSTUP_HOME=\"/home/${USER}/.rustup\"\n\n# Need to switch back to root for Teamcity and Azure DevOps compatibility\nUSER root\n\nRUN chmod -R 777 /tmp\n"
}