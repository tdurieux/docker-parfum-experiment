{
  "startTime": 1674250213545,
  "endTime": 1674250214714,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine AS base_stage\nWORKDIR /app\n\nFROM base_stage as build_stage\nRUN apk --update --no-cache add git python3 make g++\nCOPY package.json yarn.lock ./\nRUN yarn install --frozen-lockfile && yarn cache clean;\nCOPY . .\nRUN yarn build\n\nFROM build_stage as install_stage\nRUN apk --update --no-cache add curl\nRUN curl -sf https://gobinaries.com/tj/node-prune | sh\nRUN rm -rf node_modules\nRUN yarn install --frozen-lockfile --production && yarn cache clean;\nRUN node-prune node_modules\n\nFROM base_stage as production_stage\nENV NODE_ENV=production\nCOPY package.json yarn.lock ./\nCOPY --from=build_stage /app/built ./built\nCOPY --from=install_stage /app/node_modules ./node_modules\n\nENTRYPOINT [ \"yarn\", \"run\", \"start\" ]\n"
}