{
  "startTime": 1674216768443,
  "endTime": 1674216769055,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 30,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:12-alpine AS BUILD_IMAGE\n\n# install next-optimized-images requirements\nRUN apk --no-cache update \\ \n    && apk --no-cache add curl bash git \\\n    &&  rm -fr /var/cache/apk/*\n\n# install node-prune (https://github.com/tj/node-prune)\nRUN curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash -s -- -b /usr/local/bin\n\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn --frozen-lockfile && yarn cache clean;\nCOPY . .\n\nRUN yarn build && yarn cache clean;\n\nRUN npm prune --production\n\n# run node prune\nRUN /usr/local/bin/node-prune\n\nFROM node:12-alpine\n\nWORKDIR /app\n\nCOPY . .\n\n# copy from build image\nCOPY --from=BUILD_IMAGE /app/build ./build\nCOPY --from=BUILD_IMAGE /app/node_modules ./node_modules\n\nENV NODE_ENV=production\n\nENTRYPOINT [ \"yarn\", \"start\" ]"
}