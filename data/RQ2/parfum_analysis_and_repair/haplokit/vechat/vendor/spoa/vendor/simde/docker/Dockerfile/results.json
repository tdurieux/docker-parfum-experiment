{
  "startTime": 1674249571737,
  "endTime": 1674249572557,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 2,
        "columnEnd": 93
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 96,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 32,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 2,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for SIMDe development\n\nARG release=testing\n\nFROM debian:${release}-slim\n\nARG DEBIAN_FRONTEND=noninteractive\n\nCOPY docker/bin /tmp/simde-bin\nRUN \\\n  for script in simde-reset-build.sh; do \\\n    ln -s /usr/local/src/simde/docker/bin/\"${script}\" /usr/bin/\"${script}\"; \\\n  done\n\n# Multiarch\nRUN \\\n  apt-get update -y && \\\n  apt-get upgrade -y && \\\n  for arch in armhf arm64 ppc64el s390x i386 mips64el; do \\\n    dpkg --add-architecture \"$arch\"; \\\n  done; \\\n  apt-get update -y\n\n# Common packages\nRUN \\\n  apt-get install --no-install-recommends -yq \\\n    git build-essential \\\n    meson cmake \\\n    '^clang-[0-9\\.]+$' \\\n    '^g(cc|\\+\\+)-[0-9\\.]+$' \\\n    qemu binfmt-support qemu-user-static \\\n    creduce screen htop parallel nano rsync strace \\\n    npm libsleef-dev && rm -rf /var/lib/apt/lists/*;\n\n# GCC cross-compilers\nRUN \\\n  apt-get install --no-install-recommends -y apt-file && \\\n  apt-file update && \\\n  PACKAGES_TO_INSTALL=\"\"; \\\n  for ARCH in $(dpkg --print-foreign-architectures); do \\\n    PACKAGES_TO_INSTALL=\"${PACKAGES_TO_INSTALL} libc6:${ARCH} ^libstdc\\+\\+\\-[0-9]+\\-dev:${ARCH}\"; \\\n    for pkg in $(apt-file search -x \"/usr/bin/$(/tmp/simde-bin/arch2gcc.sh ${ARCH})-g(cc|\\+\\+)-[0-9\\.]+\" | grep -Po '^([^ ]+)(?<!:)'); do \\\n      PACKAGES_TO_INSTALL=\"${PACKAGES_TO_INSTALL} ${pkg}\"; \\\n    done; \\\n  done; \\\n  apt-get install --no-install-recommends -yq ${PACKAGES_TO_INSTALL} && rm -rf /var/lib/apt/lists/*;\n\n# ICC\nRUN \\\n  apt-get install --no-install-recommends -yq curl gpg && \\\n  curl -f -s \"https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB\" | gpg --batch --dearmor > /etc/apt/trusted.gpg.d/intel.gpg && \\\n  echo \"deb [arch=amd64] https://apt.repos.intel.com/oneapi all main\" > /etc/apt/sources.list.d/oneAPI.list && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -yq intel-oneapi-compiler-dpcpp-cpp-and-cpp-classic && \\\n  for exe in icc icpc; do \\\n    printf '#!/bin/bash\\nARGS=\"$@\"\\nsource /opt/intel/oneapi/compiler/latest/env/vars.sh >/dev/null\\n%s ${ARGS}\\n' \"${exe}\" > /usr/bin/\"${exe}\" && \\\n    chmod 0755 /usr/bin/\"${exe}\" ; \\\n  done && rm -rf /var/lib/apt/lists/*;\n\n# # xlc -- Install fails.\n# # Once IBM releases a version for Ubuntu Focal (20.04) I hope I can\n# # get this working.\n# RUN \\\n#   curl -s 'https://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/public.gpg' | apt-key add - && \\\n#   echo \"deb [arch=ppc64el] https://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/ bionic main\" > /etc/apt/sources.list.d/xlc.list && \\\n#   apt-get update && \\\n#   XLC_VERSION=\"$(apt-cache search '^xlc\\.[0-9]+\\.[0-9]+\\.[0-9]+$' | awk '{ print substr($1, 5) }')\" && \\\n#   apt-get install \"xlc.${XLC_VERSION}:ppc64el\" \"xlc-license-community.${XLC_VERSION}:ppc64el\" && \\\n#   /opt/ibm/xlC/${XLC_VERSION}/bin/xlc_configure <<< 1 >/dev/null\n\n# Intel SDE\nCOPY test/download-sde.sh /tmp/simde-bin/download-sde.sh\nRUN \\\n  \"/tmp/simde-bin/download-sde.sh\" \"/opt/intel/sde\" && \\\n  for executable in sde sde64; do \\\n    ln -s \"/opt/intel/sde/${executable}\" \"/usr/bin/${executable}\"; \\\n  done\n\n# Emscripten\nRUN \\\n  git clone https://github.com/emscripten-core/emsdk.git /opt/emsdk && \\\n  cd /opt/emsdk && ./emsdk update-tags && ./emsdk install tot && ./emsdk activate tot && \\\n  ln -s /opt/emsdk/upstream/bin/wasm-ld /usr/bin/wasm-ld && \\\n  npm install jsvu -g && jsvu --os=linux64 --engines=v8 && ln -s \"/root/.jsvu/v8\" \"/usr/bin/v8\" && npm cache clean --force;\n\n# Meson cross files\nRUN \\\n  mkdir -p \"/usr/local/share/meson/cross\" && ln -s /usr/local/src/simde/docker/cross-files /usr/local/share/meson/cross/simde\n\nRUN mkdir -p /opt/simde\nWORKDIR /opt/simde\n"
}