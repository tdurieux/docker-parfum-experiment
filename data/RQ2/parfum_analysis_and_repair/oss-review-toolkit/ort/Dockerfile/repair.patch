diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oss-review-toolkit/ort/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oss-review-toolkit/ort/Dockerfile/repaired.Dockerfile
index 178addf..0f4f0d0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oss-review-toolkit/ort/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oss-review-toolkit/ort/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax=docker/dockerfile:1.3
-
 # Copyright (C) 2020 Bosch Software Innovations GmbH
 # Copyright (C) 2021-2022 Bosch.IO GmbH
 # Copyright (C) 2021 Alliander N.V.
@@ -72,12 +70,12 @@ ENV DEBIAN_FRONTEND=noninteractive \
     PATH="$PATH:$GOPATH/bin:/opt/go/bin:/opt/ort/bin"
 
 # Apt install commands.
-RUN --mount=type=cache,target=/var/cache/apt --mount=type=cache,target=/var/lib/apt \
+RUN --mount=type=cache,target=/var/cache/apt--mount=type=cache,target=/var/lib/apt \
     apt-get update && \
     apt-get install -y --no-install-recommends ca-certificates gnupg software-properties-common && \
     echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | tee -a /etc/apt/sources.list.d/sbt.list && \
-    curl -ksS "https://keyserver.ubuntu.com/pks/lookup?op=get&options=mr&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | apt-key adv --import - && \
-    curl -sL https://deb.nodesource.com/setup_16.x | bash - && \
+    curl -f -ksS "https://keyserver.ubuntu.com/pks/lookup?op=get&options=mr&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | apt-key adv --import - && \
+    curl -f -sL https://deb.nodesource.com/setup_16.x | bash - && \
     add-apt-repository -y ppa:git-core/ppa && \
     apt-get update && \
     apt-get install -y --no-install-recommends \
@@ -125,21 +123,21 @@ RUN /opt/ort/bin/import_proxy_certs.sh && \
       /opt/ort/bin/import_certificates.sh /tmp/certificates/; \
     fi && \
     # Install VCS tools (no specific versions required here).
-    curl -ksS https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo && \
+    curl -f -ksS https://storage.googleapis.com/git-repo-downloads/repo > /usr/local/bin/repo && \
     chmod a+x /usr/local/bin/repo && \
     # Install package managers (in versions known to work).
     npm install --global npm@$NPM_VERSION bower@$BOWER_VERSION yarn@$YARN_VERSION && \
     pip install --no-cache-dir wheel && \
     pip install --no-cache-dir conan==$CONAN_VERSION poetry==$PYTHON_POETRY_VERSION pipenv==$PYTHON_PIPENV_VERSION virtualenv==$PYTHON_VIRTUALENV_VERSION && \
     # Install golang in order to have `go mod` as package manager.
-    curl -ksSO https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz && \
+    curl -f -ksSO https://dl.google.com/go/go$GO_VERSION.linux-amd64.tar.gz && \
     tar -C /opt -xzf go$GO_VERSION.linux-amd64.tar.gz && \
     rm go$GO_VERSION.linux-amd64.tar.gz && \
     export GOBIN=/opt/go/bin && \
-    curl -ksS https://raw.githubusercontent.com/golang/dep/v$GO_DEP_VERSION/install.sh | sh && \
-    curl -ksS https://raw.githubusercontent.com/commercialhaskell/stack/v$HASKELL_STACK_VERSION/etc/scripts/get-stack.sh | sh && \
+    curl -f -ksS https://raw.githubusercontent.com/golang/dep/v$GO_DEP_VERSION/install.sh | sh && \
+    curl -f -ksS https://raw.githubusercontent.com/commercialhaskell/stack/v$HASKELL_STACK_VERSION/etc/scripts/get-stack.sh | sh && \
     # Install SDKs required for analysis.
-    curl -Os https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip && \
+    curl -f -Os https://dl.google.com/android/repository/commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip && \
     unzip -q commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip -d $ANDROID_HOME && \
     rm commandlinetools-linux-${ANDROID_SDK_VERSION}_latest.zip && \
     PROXY_HOST_AND_PORT=${https_proxy#*://} && \
@@ -150,7 +148,7 @@ RUN /opt/ort/bin/import_proxy_certs.sh && \
     yes | $ANDROID_HOME/cmdline-tools/bin/sdkmanager $SDK_MANAGER_PROXY_OPTIONS --sdk_root=$ANDROID_HOME "platform-tools" && \
     chmod -R o+w $ANDROID_HOME && \
     # Install 'CocoaPods'.
-    gem install cocoapods -v $COCOAPODS_VERSION
+    gem install cocoapods -v $COCOAPODS_VERSION && npm cache clean --force;
 
 # Add scanners (in versions known to work).
 ARG SCANCODE_VERSION
@@ -161,7 +159,7 @@ FROM run AS dist
 ARG ORT_VERSION
 RUN --mount=type=bind,from=build,source=/usr/local/src/ort/cli/build/distributions/ort-$ORT_VERSION.tar,target=/opt/ort.tar \
     tar xf /opt/ort.tar -C /opt/ort --exclude="*.bat" --strip-components 1 && \
-    /opt/ort/bin/ort requirements
+    /opt/ort/bin/ort requirements && rm /opt/ort.tar
 
 COPY --from=build /usr/local/src/ort/helper-cli/build/scripts/orth /opt/ort/bin/
 COPY --from=build /usr/local/src/ort/helper-cli/build/libs/helper-cli-$ORT_VERSION.jar /opt/ort/lib/