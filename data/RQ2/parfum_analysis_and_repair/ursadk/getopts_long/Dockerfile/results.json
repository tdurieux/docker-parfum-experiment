{
  "startTime": 1674218843030,
  "endTime": 1674218844384,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable-slim AS base\nLABEL org.opencontainers.image.vendor=\"Dmytro Konstantinov\" \\\n    org.opencontainers.image.source=\"https://github.com/UrsaDK/getopts_long\" \\\n    org.opencontainers.image.revision=\"${BUILD_SHA}\" \\\n    org.opencontainers.image.created=\"${BUILD_DATE}\"\nCOPY ./dockerfs /\nRUN cp -a /etc/skel/.??* /root \\\n    && adduser --quiet --uid 1000 --disabled-password --disabled-login \\\n        --no-create-home --home /home --shell /bin/bash --gecos \"\" guest \\\n    && cp /etc/skel/.??* /home \\\n    && chown -R guest:guest /home /mnt\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install \\\n        bash \\\n        bc \\\n        binutils \\\n        curl \\\n        git \\\n        jq \\\n        libssl-dev \\\n        libdw1 \\\n        libiberty-dev \\\n        python3 \\\n        zlib1g \\\n    && apt-get --purge autoremove \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\nVOLUME [\"/mnt\"]\nENV ENV=\"/etc/init.d/login_shell\"\nENTRYPOINT [\"/etc/init.d/login_shell\"]\n\nFROM base AS tools\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install \\\n        apt-utils \\\n        binutils-dev \\\n        cmake \\\n        gcc \\\n        g++ \\\n        libcurl4-openssl-dev \\\n        libdw-dev \\\n        libiberty-dev \\\n        xz-utils \\\n        zlib1g-dev \\\n    && apt-get --purge autoremove \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\nWORKDIR /home\nRUN ln -sf /mnt getopts_long\nVOLUME [\"/mnt\"]\nENTRYPOINT [\"/etc/init.d/login_shell\"]\n\nFROM tools AS shellcheck\nWORKDIR /home\nADD https://api.github.com/repos/koalaman/shellcheck/releases/latest \\\n    shellcheck-latest.json\nRUN JQ_FILTER='.assets[]|select( \\\n                   .name|endswith(\".linux.x86_64.tar.xz\") \\\n               ).browser_download_url' \\\n    TXZ_URL=\"$(jq -r \"${JQ_FILTER}\" shellcheck-latest.json)\" \\\n    SRC_DIR=\"shellcheck-$(jq -r '.tag_name' shellcheck-latest.json)\" \\\n    && mkdir -p \"${SRC_DIR}\" \\\n    && curl -f -L \"${TXZ_URL}\" | tar -C \"${SRC_DIR}\" --strip-components=1 -xJ \\\n    && install -m 0755 -o root -g root \"${SRC_DIR}/shellcheck\" /usr/local/bin\nVOLUME [\"/mnt\"]\nENTRYPOINT [\"/etc/init.d/login_shell\"]\n\nFROM tools AS bats-core\nWORKDIR /home\nADD https://api.github.com/repos/bats-core/bats-core/releases/latest \\\n    bats-core-latest.json\nRUN TGZ_URL=\"$(jq -r '.tarball_url' bats-core-latest.json)\" \\\n    SRC_DIR=\"bats-core-$(jq -r '.tag_name' bats-core-latest.json)\" \\\n    && mkdir -p \"${SRC_DIR}\" \\\n    && curl -f -L \"${TGZ_URL}\" | tar -C \"${SRC_DIR}\" --strip-components=1 -xz \\\n    && cd \"${SRC_DIR}\" \\\n    && ./install.sh /usr/local\nVOLUME [\"/mnt\"]\nENTRYPOINT [\"/etc/init.d/login_shell\"]\n\nFROM tools AS kcov\nWORKDIR /home\nADD https://api.github.com/repos/SimonKagstrom/kcov/releases/latest \\\n    kcov-latest.json\nRUN TGZ_URL=\"$(jq -r '.tarball_url' kcov-latest.json)\" \\\n    SRC_DIR=\"kcov-$(jq -r '.tag_name' kcov-latest.json)\" \\\n    && mkdir -p \"${SRC_DIR}/build\" \\\n    && curl -f -L \"${TGZ_URL}\" | tar -C \"${SRC_DIR}\" --strip-components=1 -xz \\\n    && cd \"${SRC_DIR}/build\" \\\n    && cmake .. \\\n    && make \\\n    && make install\nVOLUME [\"/mnt\"]\nENTRYPOINT [\"/etc/init.d/login_shell\"]\n\nFROM base AS latest\nWORKDIR /home\nCOPY --from=shellcheck --chown=root /usr/local /usr/local\nCOPY --from=bats-core --chown=root /usr/local /usr/local\nCOPY --from=kcov --chown=root /usr/local /usr/local\nCOPY --chown=guest . .\nRUN ln -sf /home/bin /root/bin\nUSER guest\nRUN TZ=UTC git show --pretty=\"%H%+ad\" | head -2 > ./VERSION \\\n    && rm -Rf \\\n        ./.git \\\n        ./dockerfs \\\n    && ./bin/kcov\nWORKDIR /mnt\nVOLUME [\"/mnt\"]\nENTRYPOINT [\"/etc/init.d/login_shell\"]\n"
}