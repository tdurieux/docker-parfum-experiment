{
  "startTime": 1674251480369,
  "endTime": 1674251481266,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nENV KAFKA_HOME /kafka\n# Controls the hostname advertised within the Docker network, should generally match the container\n# name in a docker-compose file.\nENV KAFKA_ADVERTISED_HOST kafka\n\nENV KAFKA_LOGS_DIR=\"/kafka-logs\"\nENV KAFKA_VERSION 2.2.2\nENV _JAVA_OPTIONS \"-Djava.net.preferIPv4Stack=true\"\nENV TERM=linux\n\nRUN apt-get update && apt-get install --no-install-recommends -y curl openjdk-8-jre-headless netcat && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p ${KAFKA_LOGS_DIR} && mkdir -p ${KAFKA_HOME} && \\\n    curl -J -L -s -f -o - https://github.com/kadwanev/retry/releases/download/1.0.1/retry-1.0.1.tar.gz | tar xfz - -C /usr/local/bin && \\\n    retry --min 1 --max 180 -- curl -J -L -s -f --show-error -o $INSTALL_DIR/kafka.tgz \\\n        \"https://archive.apache.org/dist/kafka/${KAFKA_VERSION}/kafka_2.11-${KAFKA_VERSION}.tgz\" && \\\n    tar xzf ${INSTALL_DIR}/kafka.tgz -C ${KAFKA_HOME} --strip-components 1 && rm ${INSTALL_DIR}/kafka.tgz\n\nADD run.sh /run.sh\nADD healthcheck.sh /healthcheck.sh\nADD certs/broker.keystore.jks /broker.keystore.jks\nADD certs/client.truststore.jks /broker.truststore.jks\n\nEXPOSE 9092\nEXPOSE 9093\nEXPOSE 2181\n\n# healthcheck.sh tries to create and delete an empty kafka topic (the topic\n# string is  based on the timestamp), and reports healthy if topic creation\n# was successful.\n# With these parameters, Docker will consider the container unhealthy if the\n# Kafka server is unresponsive for 3 minutes.\nHEALTHCHECK --start-period=10s --interval=5s --timeout=5s --retries=36 CMD /healthcheck.sh\n\nENTRYPOINT [\"/run.sh\"]\n"
}