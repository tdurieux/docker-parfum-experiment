diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elastic/curator/unix_packages/builder_image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elastic/curator/unix_packages/builder_image/Dockerfile/repaired.Dockerfile
index 70519f9..fad86b8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elastic/curator/unix_packages/builder_image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elastic/curator/unix_packages/builder_image/Dockerfile/repaired.Dockerfile
@@ -35,19 +35,19 @@ ENV C_POST_UPGRADE=${WORKDIR}/es_curator_after_upgrade.sh
 # It won't work without it
 COPY CentOS-Base.repo /etc/yum.repos.d
 RUN yum -y groupinstall "Development Tools"
-RUN yum -y install zlib-devel bzip2-devel curl-devel expat-devel gettext-devel sqlite-devel openssl-devel curl wget ncurses-devel readline-devel gdbm-devel xz-devel libffi-devel libuuid-devel which
+RUN yum -y install zlib-devel bzip2-devel curl-devel expat-devel gettext-devel sqlite-devel openssl-devel curl wget ncurses-devel readline-devel gdbm-devel xz-devel libffi-devel libuuid-devel which && rm -rf /var/cache/yum
 
 # Build patchelf
 COPY patchelf_build.sh /
 RUN /patchelf_build.sh
 
-# Build newer Git 
+# Build newer Git
 COPY git_build.sh /
 RUN /git_build.sh
 
 # Build OpenSSL
-RUN curl -O https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz
-RUN tar zxf openssl-${OPENSSL_VER}.tar.gz
+RUN curl -f -O https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz
+RUN tar zxf openssl-${OPENSSL_VER}.tar.gz && rm openssl-${OPENSSL_VER}.tar.gz
 RUN cd openssl-${OPENSSL_VER}; ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl shared zlib; make; make install
 RUN echo "# /etc/profile.d/openssl.sh" > /etc/profile.d/openssl.sh
 RUN echo "pathmunge /usr/local/openssl/bin" >> /etc/profile.d/openssl.sh
@@ -57,9 +57,9 @@ RUN ldconfig
 RUN rm -rf openssl-${OPENSSL_VER} openssl-${OPENSSL_VER}.tar.gz
 
 # Build Python
-RUN curl -O https://www.python.org/ftp/python/${PYVER}.${PYPATCH}/Python-${PYVER}.${PYPATCH}.tgz
-RUN tar zxf Python-${PYVER}.${PYPATCH}.tgz
-RUN cd Python-${PYVER}.${PYPATCH}; ./configure --prefix=/usr/local --with-openssl=/usr/local/openssl --enable-optimizations --enable-shared; make -j3 altinstall
+RUN curl -f -O https://www.python.org/ftp/python/${PYVER}.${PYPATCH}/Python-${PYVER}.${PYPATCH}.tgz
+RUN tar zxf Python-${PYVER}.${PYPATCH}.tgz && rm Python-${PYVER}.${PYPATCH}.tgz
+RUN cd Python-${PYVER}.${PYPATCH}; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --with-openssl=/usr/local/openssl --enable-optimizations --enable-shared; make -j3 altinstall
 RUN echo "# /etc/ld.so.conf.d/python${PYVER}.${PYPATCH}.conf" > /etc/ld.so.conf.d/python${PYVER}.${PYPATCH}.conf
 RUN echo "/usr/local/lib" >> /etc/ld.so.conf.d/python${PYVER}.${PYPATCH}.conf
 RUN echo "/usr/local/lib/python${PYVER}" >> /etc/ld.so.conf.d/python${PYVER}.${PYPATCH}.conf