{
  "startTime": 1674255834465,
  "endTime": 1674255835210,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 35,
        "columnEnd": 140
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 197
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## If needing Debian style, uncomment this, and comment the CentOS ones\n#FROM ubuntu:latest as builder\n\nFROM centos:6 as builder\n\n# Can change these\nENV PYVER=3.9\nENV PYPATCH=4\nENV OPENSSL_VER=1.1.1k\n\n# Don't change these\nENV PKG_TARGET=/curator_packages\nENV WORKDIR=/tmp/curator\nENV VENVDIR=/opt/python\nENV SRCDIR=/opt/src\nENV INPUT_TYPE=python\nENV CATEGORY=python\nENV VENDOR=Elastic\nENV MAINTAINER=\"'Elastic Developers <info@elastic.co>'\"\nENV C_POST_INSTALL=${WORKDIR}/es_curator_after_install.sh\nENV C_PRE_REMOVE=${WORKDIR}/es_curator_before_removal.sh\nENV C_POST_REMOVE=${WORKDIR}/es_curator_after_removal.sh\nENV C_PRE_UPGRADE=${WORKDIR}/es_curator_before_upgrade.sh\nENV C_POST_UPGRADE=${WORKDIR}/es_curator_after_upgrade.sh\n\n## If running Debian-style, uncomment these and comment the CentOS ones\n#RUN apt update\n#RUN apt dist-upgrade -y\n#RUN ln -fs /usr/share/zoneinfo/America/Denver /etc/localtime\n#RUN DEBIAN_FRONTEND=noninteractive apt install -y tzdata\n#RUN apt install -y build-essential git ca-certificates zlib1g zlib1g-dev libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev libgdbm-dev libc6-dev libbz2-dev dirmngr curl liblzma-dev libffi-dev gnupg2 rpm\n\n## CentOS 6 covers all bases with its ANCIENT libc\n# This replaces the base yum repo definition since v6 is EOL now\n# It won't work without it\nCOPY CentOS-Base.repo /etc/yum.repos.d\nRUN yum -y groupinstall \"Development Tools\"\nRUN yum -y install zlib-devel bzip2-devel curl-devel expat-devel gettext-devel sqlite-devel openssl-devel curl wget ncurses-devel readline-devel gdbm-devel xz-devel libffi-devel libuuid-devel which && rm -rf /var/cache/yum\n\n# Build patchelf\nCOPY patchelf_build.sh /\nRUN /patchelf_build.sh\n\n# Build newer Git\nCOPY git_build.sh /\nRUN /git_build.sh\n\n# Build OpenSSL\nRUN curl -f -O https://www.openssl.org/source/openssl-${OPENSSL_VER}.tar.gz\nRUN tar zxf openssl-${OPENSSL_VER}.tar.gz && rm openssl-${OPENSSL_VER}.tar.gz\nRUN cd openssl-${OPENSSL_VER}; ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl shared zlib; make; make install\nRUN echo \"# /etc/profile.d/openssl.sh\" > /etc/profile.d/openssl.sh\nRUN echo \"pathmunge /usr/local/openssl/bin\" >> /etc/profile.d/openssl.sh\nRUN echo \"# /etc/ld.so/conf.d/openssl-${OPENSSL_VER}.conf\" > /etc/ld.so.conf.d/openssl-${OPENSSL_VER}.conf\nRUN echo \"/usr/local/openssl/lib\" >> /etc/ld.so.conf.d/openssl-${OPENSSL_VER}.conf\nRUN ldconfig\nRUN rm -rf openssl-${OPENSSL_VER} openssl-${OPENSSL_VER}.tar.gz\n\n# Build Python\nRUN curl -f -O https://www.python.org/ftp/python/${PYVER}.${PYPATCH}/Python-${PYVER}.${PYPATCH}.tgz\nRUN tar zxf Python-${PYVER}.${PYPATCH}.tgz && rm Python-${PYVER}.${PYPATCH}.tgz\nRUN cd Python-${PYVER}.${PYPATCH}; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --with-openssl=/usr/local/openssl --enable-optimizations --enable-shared; make -j3 altinstall\nRUN echo \"# /etc/ld.so.conf.d/python${PYVER}.${PYPATCH}.conf\" > /etc/ld.so.conf.d/python${PYVER}.${PYPATCH}.conf\nRUN echo \"/usr/local/lib\" >> /etc/ld.so.conf.d/python${PYVER}.${PYPATCH}.conf\nRUN echo \"/usr/local/lib/python${PYVER}\" >> /etc/ld.so.conf.d/python${PYVER}.${PYPATCH}.conf\nRUN ldconfig\nRUN /usr/local/bin/pip${PYVER} install virtualenv\nRUN rm -rf Python-${PYVER}.${PYPATCH}.tgz Python-${PYVER}.${PYPATCH}\n\n# Install RVM\nCOPY ruby_build.sh /\nCOPY rpm.erb.patched /\nRUN /ruby_build.sh\n\n# Cleanup after all this installation\nRUN yum clean all\n\nCOPY package_maker.sh /\nRUN mkdir /curator_packages\n"
}