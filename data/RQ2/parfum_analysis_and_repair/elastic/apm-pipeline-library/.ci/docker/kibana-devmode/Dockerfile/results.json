{
  "startTime": 1674249126162,
  "endTime": 1674249127058,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM kibana-yarn:latest AS src\n\nARG GID=1001\nARG UID=1001\nARG REFSPEC=main\n\nRUN git fetch --quiet --jobs 5 origin \"${REFSPEC}\" \\\n  && git checkout \"origin/${REFSPEC}\" -b \"branch_run\"\n\nENV HOME=/usr/share/kibana\nENV NODE_OPTIONS= --max-old-space-size=4096\nENV FORCE_COLOR=1\nENV BABEL_DISABLE_CACHE=true\nENV NVM_DIR=${HOME}/.nvm\nRUN . \"${NVM_DIR}/nvm.sh\" \\\n  && nvm install $(cat .node-version) \\\n  && nvm alias default $(cat .node-version) \\\n  && yarn config set cache-folder ${HOME}/.yarn_cache \\\n  && npm install -g yarn-deduplicate \\\n  && yarn-deduplicate yarn.lock \\\n  && npm set progress=false \\\n  && yarn kbn bootstrap --prefer-offline --no-audit --link-duplicates && npm cache clean --force; && yarn cache clean;\n\nEXPOSE 5601\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"yarn start -c /usr/share/kibana/config/kibana.yml --no-dev-config --no-optimizer\"]\n\n\nHEALTHCHECK --interval=10s --timeout=5s --start-period=1m --retries=300 CMD curl -sSL http://127.0.0.1:5601/login|grep -v 'Kibana server is not ready yet'\n"
}