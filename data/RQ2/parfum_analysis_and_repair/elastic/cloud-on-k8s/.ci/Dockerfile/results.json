{
  "startTime": 1674219428096,
  "endTime": 1674219429100,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Docker image used for continuous integration\nFROM golang:1.18.4\n\nENV GOLANGCILINT_VERSION=1.45.2\nENV SHELLCHECK_VERSION=0.8.0\nENV KUBEBUILDER_VERSION=2.3.1\nENV GCLOUD_VERSION=381.0.0\nENV KUBECTL_VERSION=1.19.16\nENV DOCKER_VERSION=19.03.14\nENV DOCKER_BUILDX_VERSION=0.8.2\nENV GOTESTSUM_VERSION=1.8.0\nENV EKSCTL_VERSION=0.74.0\nENV ECK_DIAG_VERSION=1.1.0\n\n# golangci-lint\nRUN curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \\\n    | sh -s -- -b $(go env GOPATH)/bin v${GOLANGCILINT_VERSION}\n\n# kubebuilder to get required tools (etcd, apiserver, etc.)\nENV PATH=${PATH}:/usr/local/kubebuilder/bin\nRUN curl -fsSLO https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${KUBEBUILDER_VERSION}/kubebuilder_${KUBEBUILDER_VERSION}_linux_amd64.tar.gz && \\\n    tar -zxf kubebuilder_${KUBEBUILDER_VERSION}_linux_amd64.tar.gz && \\\n    mv kubebuilder_${KUBEBUILDER_VERSION}_linux_amd64 /usr/local/kubebuilder && \\\n    rm kubebuilder_${KUBEBUILDER_VERSION}_linux_amd64.tar.gz\n\n# gcloud to provision GKE clusters\nENV PATH=${PATH}:/usr/local/google-cloud-sdk/bin\nRUN curl -fsSLO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz && \\\n    mkdir -p /usr/local/gcloud && \\\n    tar -zxf google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz -C /usr/local && \\\n    /usr/local/google-cloud-sdk/install.sh --quiet && \\\n    gcloud config set core/disable_usage_reporting true && \\\n    gcloud config set component_manager/disable_update_check true && \\\n    gcloud components install beta --quiet && \\\n    rm google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz\n\n# kubectl for deploying the operator and running e2e tests\nRUN curl -fsSLO https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \\\n    mv kubectl /usr/local/bin/kubectl && chmod +x /usr/local/bin/kubectl\n\n# Docker client to build and push images\nRUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz && \\\n    tar xzf docker-${DOCKER_VERSION}.tgz --strip 1 -C /usr/local/bin docker/docker && \\\n    rm docker-${DOCKER_VERSION}.tgz\n\n# Docker buildx extension for building multi-arch images\nRUN mkdir -p ~/.docker/cli-plugins && \\\n    curl -fsSLo ~/.docker/cli-plugins/docker-buildx https://github.com/docker/buildx/releases/download/v${DOCKER_BUILDX_VERSION}/buildx-v${DOCKER_BUILDX_VERSION}.linux-amd64 && \\\n    chmod a+x ~/.docker/cli-plugins/docker-buildx\n\n# xz-utils to decompress shellcheck, unzip for aws-cli, qemu-system-arm and qemu-user-static for multi-arch\nRUN apt-get update && apt-get --no-install-recommends -y install \\\n    unzip xz-utils qemu-system-arm qemu-user-static && \\\n    apt-get clean && apt-get autoclean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# AWS CLI v2 to upload YAML on S3 and run eksctl\nRUN curl -f -sSL \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && \\\n    unzip -q awscliv2.zip && \\\n    ./aws/install && \\\n    rm awscliv2.zip\n\n# shellcheck\nENV PATH=${PATH}:/usr/local/shellcheck\nRUN curl -fsSLO https://github.com/koalaman/shellcheck/releases/download/v${SHELLCHECK_VERSION}/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz && \\\n    tar -xf shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz && \\\n    mv shellcheck-v${SHELLCHECK_VERSION} /usr/local/shellcheck && \\\n    rm shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\n\n# gotestsum to generate xUnit compatible XML for tests\nRUN curl -fsSLO https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz && \\\n    tar xzf gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz && \\\n    mv gotestsum /usr/local/bin/gotestsum && chmod +x /usr/local/bin/gotestsum && \\\n    rm gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz\n\nRUN curl -fsSLO https://github.com/elastic/eck-diagnostics/releases/download/${ECK_DIAG_VERSION}/eck-diagnostics_${ECK_DIAG_VERSION}_Linux_x86_64.tar.gz && \\\n    tar xzf eck-diagnostics_${ECK_DIAG_VERSION}_Linux_x86_64.tar.gz && \\\n    mv eck-diagnostics /usr/local/bin/eck-diagnostics && rm eck-diagnostics_${ECK_DIAG_VERSION}_Linux_x86_64.tar.gz\n\nRUN curl -fsSLO \"https://github.com/weaveworks/eksctl/releases/download/v${EKSCTL_VERSION}/eksctl_Linux_amd64.tar.gz\" && \\\n    tar xzf eksctl_Linux_amd64.tar.gz && \\\n    mv eksctl /usr/local/bin/eksctl && \\\n    rm eksctl_Linux_amd64.tar.gz\n\n# Cache ECK Go dependencies in this Docker image\nWORKDIR /go/src/github.com/elastic/cloud-on-k8s\nCOPY [\"go.mod\", \"go.sum\", \"./\"]\nRUN go mod download && \\\n    rm /go/src/github.com/elastic/cloud-on-k8s/go.mod && \\\n    rm /go/src/github.com/elastic/cloud-on-k8s/go.sum\nWORKDIR /\n"
}