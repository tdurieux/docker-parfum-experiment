{
  "startTime": 1674250753595,
  "endTime": 1674250754766,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 137
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 55,
        "columnEnd": 103
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 46,
        "columnEnd": 133
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_IMAGE\nFROM ${PYTHON_IMAGE}\n\nRUN apt-get -qq update && apt-get -qq -y --no-install-recommends install \\\n    ca-certificates \\\n    curl \\\n    netcat \\\n    odbc-postgresql \\\n    unixodbc-dev \\\n    freetds-dev \\\n    libmemcached-dev &&\\\n    rm -rf /var/lib/apt/lists/*\n\n# connection to ha.pool.sks-keyservers.net fails sometimes, so let's retry with couple different servers\nRUN for server in $(shuf -e ha.pool.sks-keyservers.net \\\n                            hkp://p80.pool.sks-keyservers.net:80 \\\n                            keyserver.ubuntu.com \\\n                            hkp://keyserver.ubuntu.com:80 \\\n                            pgp.mit.edu); do gpg --batch --no-tty --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && s=0 && break || s=$?; done; (exit $s)\n\nRUN curl -f -o /usr/local/bin/gosu -sSL \"https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture)\" \\\n    && curl -f -o /usr/local/bin/gosu.asc -sSL \"https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture).asc\" \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc \\\n    && rm /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu\n\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\nCOPY requirements/reqs-base.txt /\n\n# if we're in a pypy image, link pypy/pypy3 to /usr/local/bin/python\nRUN if command -v pypy3; then ln -s $(command -v pypy3) /usr/local/bin/python; elif command -v pypy; then ln -s $(command -v pypy) /usr/local/bin/python; fi\n\n# pre-install base requirements\nRUN python -m pip install --progress-bar off -U pip && pip install --no-cache-dir --progress-bar off -r /reqs-base.txt\n\nRUN chmod +x /usr/local/bin/entrypoint.sh\n\nWORKDIR /app\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n"
}