diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elastic/apm-agent-python/tests/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elastic/apm-agent-python/tests/Dockerfile/repaired.Dockerfile
index fdc207d..1d23920 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elastic/apm-agent-python/tests/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elastic/apm-agent-python/tests/Dockerfile/repaired.Dockerfile
@@ -16,11 +16,11 @@ RUN for server in $(shuf -e ha.pool.sks-keyservers.net \
                             hkp://p80.pool.sks-keyservers.net:80 \
                             keyserver.ubuntu.com \
                             hkp://keyserver.ubuntu.com:80 \
-                            pgp.mit.edu) ; do gpg --no-tty --keyserver "$server" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && s=0 && break || s=$?; done; (exit $s)
+                            pgp.mit.edu); do gpg --batch --no-tty --keyserver "$server" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && s=0 && break || s=$?; done; (exit $s)
 
-RUN curl -o /usr/local/bin/gosu -sSL "https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture)" \
-    && curl -o /usr/local/bin/gosu.asc -sSL "https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture).asc" \
-    && gpg --verify /usr/local/bin/gosu.asc \
+RUN curl -f -o /usr/local/bin/gosu -sSL "https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture)" \
+    && curl -f -o /usr/local/bin/gosu.asc -sSL "https://github.com/tianon/gosu/releases/download/1.10/gosu-$(dpkg --print-architecture).asc" \
+    && gpg --batch --verify /usr/local/bin/gosu.asc \
     && rm /usr/local/bin/gosu.asc \
     && chmod +x /usr/local/bin/gosu
 
@@ -32,7 +32,7 @@ COPY requirements/reqs-base.txt /
 RUN if command -v pypy3; then ln -s $(command -v pypy3) /usr/local/bin/python; elif command -v pypy; then ln -s $(command -v pypy) /usr/local/bin/python; fi
 
 # pre-install base requirements
-RUN python -m pip install --progress-bar off -U pip && pip install --progress-bar off -r /reqs-base.txt
+RUN python -m pip install --progress-bar off -U pip && pip install --no-cache-dir --progress-bar off -r /reqs-base.txt
 
 RUN chmod +x /usr/local/bin/entrypoint.sh