{
  "startTime": 1674249900159,
  "endTime": 1674249901034,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 21,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile was generated from templates/Dockerfile.j2\n{% if artifacts_dir -%}\n{%   set url_root = 'http://localhost:8000/logstash/build/' -%}\n{% elif staging_build_num -%}\n{%   set url_root = 'https://staging.elastic.co/%s/downloads/logstash' % version_tag -%}\n{% else -%}\n{%   set url_root = 'https://artifacts.elastic.co/downloads/logstash' -%}\n{% endif -%}\n\n{% if image_flavor == 'oss' -%}\n  {% set tarball = 'logstash-oss-%s.tar.gz' % elastic_version -%}\n{% else -%}\n  {% set tarball = 'logstash-%s.tar.gz' % elastic_version -%}\n{% endif -%}\n\n\nFROM centos:7\n\n# Install Java and the \"which\" command, which is needed by Logstash's shell\n# scripts.\nRUN yum update -y && yum install -y java-1.8.0-openjdk-devel which && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Provide a non-root user to run the process.\nRUN groupadd --gid 1000 logstash && \\\n    adduser --uid 1000 --gid 1000 \\\n      --home-dir /usr/share/logstash --no-create-home \\\n      logstash\n\n# Add Logstash itself.\nRUN curl -f -Lo - {{ url_root }}/{{ tarball }} | \\\n    tar zxf - -C /usr/share && \\\n    mv /usr/share/logstash-{{ elastic_version }} /usr/share/logstash && \\\n    chown --recursive logstash:logstash /usr/share/logstash/ && \\\n    chown -R logstash:root /usr/share/logstash && \\\n    chmod -R g=u /usr/share/logstash && \\\n    find /usr/share/logstash -type d -exec chmod g+s {} \\; && \\\n    ln -s /usr/share/logstash /opt/logstash\n\nWORKDIR /usr/share/logstash\n\nENV ELASTIC_CONTAINER true\nENV PATH=/usr/share/logstash/bin:$PATH\n\n# Provide a minimal configuration, so that simple invocations will provide\n# a good experience.\nADD config/pipelines.yml config/pipelines.yml\nADD config/logstash-{{ image_flavor }}.yml config/logstash.yml\nADD config/log4j2.properties config/\nADD pipeline/default.conf pipeline/logstash.conf\nRUN chown --recursive logstash:root config/ pipeline/\n\n# Ensure Logstash gets a UTF-8 locale by default.\nENV LANG='en_US.UTF-8' LC_ALL='en_US.UTF-8'\n\n# Place the startup wrapper script.\nADD bin/docker-entrypoint /usr/local/bin/\nRUN chmod 0755 /usr/local/bin/docker-entrypoint\n\nUSER 1000\n\nADD env2yaml/env2yaml /usr/local/bin/\n\nEXPOSE 9600 5044\n\n\nLABEL org.label-schema.schema-version=\"1.0\" \\\n  org.label-schema.vendor=\"Elastic\" \\\n  org.label-schema.name=\"logstash\" \\\n  org.label-schema.version=\"{{ elastic_version }}\" \\\n  org.label-schema.url=\"https://www.elastic.co/products/logstash\" \\\n  org.label-schema.vcs-url=\"https://github.com/elastic/logstash-docker\" \\\n{% if image_flavor == 'oss' -%}\n  license=\"Apache-2.0\"\n{% else -%}\n  license=\"Elastic License\"\n{% endif -%}\n\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint\"]\n"
}