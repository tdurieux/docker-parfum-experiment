{
  "startTime": 1674254345550,
  "endTime": 1674254346646,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Setting bash as the default shell\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# Get desired XVFB display\nARG DISPLAY\n\n# Install dependencies before we actually\n# switch into the unprivileged jenkins user.\nRUN apt-get -qq update\nRUN apt-get -y --no-install-recommends -qq install curl git && rm -rf /var/lib/apt/lists/*;\n\n# Installing XVFB and other GUI-related deps for E2E tests\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y -qq install xvfb \\\n    libgtk-3-0 \\\n    libxtst6 \\\n    libnotify-dev \\\n    libgconf-2-4 \\\n    libnss3 \\\n    libxss1 \\\n    libasound2 \\\n    libgbm-dev \\\n    --no-install-recommends \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Make relevant environment variables available for tests\nENV DISPLAY $DISPLAY\nENV NPM_COMMAND ci\n\nWORKDIR /synthetics-recorder\n\n# Copy .nvmrc as long as you run the script in .ci/scripts/docker-build.sh\nADD .nvmrc /synthetics-recorder/.nvmrc\n\n# Installing NVM\nENV NVM_DIR /root\nRUN curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\nRUN source \"${NVM_DIR}/nvm.sh\" --install \\\n  && nvm use\n"
}