{
  "startTime": 1674248359406,
  "endTime": 1674248362031,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 77
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 2,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 2,
        "columnEnd": 132
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 2,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 2,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 2,
        "columnEnd": 113
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 2,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one\n# or more contributor license agreements. Licensed under the Elastic License\n# 2.0 and the following additional limitation. Functionality enabled by the\n# files subject to the Elastic License 2.0 may only be used in production when\n# invoked by an Elasticsearch process with a license key installed that permits\n# use of machine learning features. You may not use this file except in\n# compliance with the Elastic License 2.0 and the foregoing additional\n# limitation.\n#\n\nFROM centos:7 AS builder\n\n# This is basically automating the setup instructions in build-setup/linux.md\n\nMAINTAINER David Roberts <dave.roberts@elastic.co>\n\n# Make sure OS packages are up to date and required packages are installed\nRUN \\\n  rm /var/lib/rpm/__db.* && \\\n  yum install -y bzip2 gcc gcc-c++ git libffi-devel make openssl-devel texinfo unzip wget which xz zip zlib-devel && rm -rf /var/cache/yum\n\n# For compiling with hardening and optimisation\nENV CFLAGS \"-g -O3 -fstack-protector -D_FORTIFY_SOURCE=2 -march=armv8-a+crc+crypto\"\nENV CXXFLAGS \"-g -O3 -fstack-protector -D_FORTIFY_SOURCE=2 -march=armv8-a+crc+crypto\"\nENV LDFLAGS \"-Wl,-z,relro -Wl,-z,now\"\nENV LDFLAGS_FOR_TARGET \"-Wl,-z,relro -Wl,-z,now\"\n\nARG build_dir=/usr/src\n\n# Build gcc 10.3\nRUN \\\n  cd ${build_dir} && \\\n  wget --quiet -O - https://ftpmirror.gnu.org/gcc/gcc-10.3.0/gcc-10.3.0.tar.gz | tar zxf - && \\\n  cd gcc-10.3.0 && \\\n  contrib/download_prerequisites && \\\n  sed -i -e 's/$(SHLIB_LDFLAGS)/-Wl,-z,relro -Wl,-z,now $(SHLIB_LDFLAGS)/' libgcc/config/t-slibgcc && \\\n  cd .. && \\\n  mkdir gcc-10.3.0-build && \\\n  cd gcc-10.3.0-build && \\\n  ../gcc-10.3.0/configure --prefix=/usr/local/gcc103 --enable-languages=c,c++ --enable-vtable-verify --with-system-zlib --disable-multilib && \\\n  make -j`nproc` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf gcc-10.3.0 gcc-10.3.0-build\n\n# Update paths to use the newly built compiler in C++17 mode\nENV LD_LIBRARY_PATH /usr/local/gcc103/lib64:/usr/local/gcc103/lib:/usr/lib:/lib\nENV PATH /usr/local/gcc103/bin:/usr/bin:/bin:/usr/sbin:/sbin\nENV CXX \"g++ -std=gnu++17\"\n\n# Build binutils\nRUN \\\n  cd ${build_dir} && \\\n  wget --quiet -O - https://ftpmirror.gnu.org/binutils/binutils-2.37.tar.bz2 | tar jxf - && \\\n  cd binutils-2.37 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc103 --enable-vtable-verify --with-system-zlib --disable-libstdcxx --with-gcc-major-version-only && \\\n  make -j`nproc` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf binutils-2.37\n\n# Build libxml2\nRUN \\\n  cd ${build_dir} && \\\n  wget --quiet --no-check-certificate -O - https://download.gnome.org/sources/libxml2/2.9/libxml2-2.9.14.tar.xz | tar Jxf - && \\\n  cd libxml2-2.9.14 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc103 --without-python --without-readline && \\\n  make -j`nproc` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf libxml2-2.9.14\n\n# Build Boost\nRUN \\\n  cd ${build_dir} && \\\n  wget --quiet -O - https://boostorg.jfrog.io/artifactory/main/release/1.77.0/source/boost_1_77_0.tar.bz2 | tar jxf - && \\\n  cd boost_1_77_0 && \\\n  ./bootstrap.sh --without-libraries=context --without-libraries=coroutine --without-libraries=graph_parallel --without-libraries=mpi --without-libraries=python --without-icu && \\\n  sed -i -e 's/(17ul)(29ul)(37ul)(53ul)(67ul)(79ul) \\\\/(3ul)(17ul)(29ul)(37ul)(53ul)(67ul)(79ul) \\\\/' boost/unordered/detail/implementation.hpp && \\\n  ./b2 -j`nproc` --layout=versioned --disable-icu pch=off optimization=speed inlining=full define=BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS define=BOOST_LOG_WITHOUT_DEBUG_OUTPUT define=BOOST_LOG_WITHOUT_EVENT_LOG define=BOOST_LOG_WITHOUT_SYSLOG define=BOOST_LOG_WITHOUT_IPC define=_FORTIFY_SOURCE=2 cxxflags='-std=gnu++17 -fstack-protector -march=armv8-a+crc+crypto' linkflags='-std=gnu++17 -Wl,-z,relro -Wl,-z,now' && \\\n  ./b2 install --prefix=/usr/local/gcc103 --layout=versioned --disable-icu pch=off optimization=speed inlining=full define=BOOST_MATH_NO_LONG_DOUBLE_MATH_FUNCTIONS define=BOOST_LOG_WITHOUT_DEBUG_OUTPUT define=BOOST_LOG_WITHOUT_EVENT_LOG define=BOOST_LOG_WITHOUT_SYSLOG define=BOOST_LOG_WITHOUT_IPC define=_FORTIFY_SOURCE=2 cxxflags='-std=gnu++17 -fstack-protector -march=armv8-a+crc+crypto' linkflags='-std=gnu++17 -Wl,-z,relro -Wl,-z,now' && \\\n  cd .. && \\\n  rm -rf boost_1_77_0\n\n# Build patchelf\nRUN \\\n  cd ${build_dir} && \\\n  wget --quiet -O - https://github.com/NixOS/patchelf/releases/download/0.13/patchelf-0.13.tar.bz2 | tar jxf - && \\\n  cd patchelf-0.13.20210805.a949ff2 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/gcc103 && \\\n  make -j`nproc` && \\\n  make install && \\\n  cd .. && \\\n  rm -rf patchelf-0.13.20210805.a949ff2\n\n# Build Python 3.7\n# --enable-optimizations for a stable/release build\n# Not using --prefix=/usr/local/gcc103 so that this can be excluded from the final image\nRUN \\\n  cd ${build_dir} && \\\n  wget --quiet -O - https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz | tar xzf - && \\\n  cd Python-3.7.9 && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations && \\\n  make altinstall && \\\n  cd .. && \\\n  rm -rf Python-3.7.9\n\n# Install Python dependencies\nRUN \\\n  /usr/local/bin/pip3.7 install numpy pyyaml setuptools cffi typing_extensions future six requests dataclasses\n\n# Install CMake\n# v3.19.2 minimum is required\nRUN \\\n  cd ${build_dir} && \\\n  wget --quiet https://github.com/Kitware/CMake/releases/download/v3.23.2/cmake-3.23.2-Linux-aarch64.sh && \\\n  chmod +x cmake-3.23.2-Linux-aarch64.sh && \\\n  ./cmake-3.23.2-Linux-aarch64.sh --skip-license --prefix=/usr/local/gcc103 && \\\n  rm -f cmake-3.23.2-Linux-aarch64.sh\n\n# Clone PyTorch and build LibTorch\n# If the PyTorch branch is changed also update PYTORCH_BUILD_VERSION\nRUN \\\n  cd ${build_dir} && \\\n  git -c advice.detachedHead=false clone --depth=1 --branch=v1.11.0 https://github.com/pytorch/pytorch.git && \\\n  cd pytorch && \\\n  git submodule sync && \\\n  git submodule update --init --recursive && \\\n  sed -i -e 's/system(/strlen(/' torch/csrc/jit/codegen/fuser/cpu/fused_kernel.cpp && \\\n  export BLAS=Eigen && \\\n  export BUILD_TEST=OFF && \\\n  export USE_FBGEMM=OFF && \\\n  export USE_KINETO=OFF && \\\n  export USE_DISTRIBUTED=OFF && \\\n  export USE_MKLDNN=ON && \\\n  export USE_QNNPACK=OFF && \\\n  export USE_PYTORCH_QNNPACK=OFF && \\\n  export USE_BREAKPAD=OFF && \\\n  export PYTORCH_BUILD_VERSION=1.11.0 && \\\n  export PYTORCH_BUILD_NUMBER=1 && \\\n  /usr/local/bin/python3.7 setup.py install && \\\n  mkdir /usr/local/gcc103/include/pytorch && \\\n  cp -r torch/include/* /usr/local/gcc103/include/pytorch/ && \\\n  cp torch/lib/libtorch_cpu.so /usr/local/gcc103/lib && \\\n  cp torch/lib/libc10.so /usr/local/gcc103/lib && \\\n  cd .. && \\\n  rm -rf pytorch\n\nFROM centos:7\nCOPY --from=builder /usr/local/gcc103 /usr/local/gcc103\nRUN \\\n  rm /var/lib/rpm/__db.* && \\\n  yum install -y bzip2 gcc git make unzip which zip zlib-devel && rm -rf /var/cache/yum\n"
}