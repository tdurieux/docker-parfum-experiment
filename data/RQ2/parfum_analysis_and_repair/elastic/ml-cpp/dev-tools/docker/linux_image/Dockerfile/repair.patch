diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elastic/ml-cpp/dev-tools/docker/linux_image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elastic/ml-cpp/dev-tools/docker/linux_image/Dockerfile/repaired.Dockerfile
index 37b1207..8b08482 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elastic/ml-cpp/dev-tools/docker/linux_image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elastic/ml-cpp/dev-tools/docker/linux_image/Dockerfile/repaired.Dockerfile
@@ -19,7 +19,7 @@ MAINTAINER David Roberts <dave.roberts@elastic.co>
 # libffi and openssl are required for building Python
 RUN \
   rm /var/lib/rpm/__db.* && \
-  yum install -y bzip2 gcc gcc-c++ git libffi-devel make openssl-devel texinfo unzip wget which xz zip zlib-devel
+  yum install -y bzip2 gcc gcc-c++ git libffi-devel make openssl-devel texinfo unzip wget which xz zip zlib-devel && rm -rf /var/cache/yum
 
 # For compiling with hardening and optimisation
 ENV CFLAGS "-g -O3 -fstack-protector -D_FORTIFY_SOURCE=2 -msse4.2 -mfpmath=sse"
@@ -32,7 +32,7 @@ ARG build_dir=/usr/src
 # Build gcc 10.3
 RUN \
   cd ${build_dir} && \
-  wget --quiet -O - http://ftpmirror.gnu.org/gcc/gcc-10.3.0/gcc-10.3.0.tar.gz | tar zxf - && \
+  wget --quiet -O - https://ftpmirror.gnu.org/gcc/gcc-10.3.0/gcc-10.3.0.tar.gz | tar zxf - && \
   cd gcc-10.3.0 && \
   contrib/download_prerequisites && \
   sed -i -e 's/$(SHLIB_LDFLAGS)/-Wl,-z,relro -Wl,-z,now $(SHLIB_LDFLAGS)/' libgcc/config/t-slibgcc && \
@@ -53,9 +53,9 @@ ENV CXX "g++ -std=gnu++17"
 # Build binutils
 RUN \
   cd ${build_dir} && \
-  wget --quiet -O - http://ftpmirror.gnu.org/binutils/binutils-2.37.tar.bz2 | tar jxf - && \
+  wget --quiet -O - https://ftpmirror.gnu.org/binutils/binutils-2.37.tar.bz2 | tar jxf - && \
   cd binutils-2.37 && \
-  ./configure --prefix=/usr/local/gcc103 --enable-vtable-verify --with-system-zlib --disable-libstdcxx --with-gcc-major-version-only && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/gcc103 --enable-vtable-verify --with-system-zlib --disable-libstdcxx --with-gcc-major-version-only && \
   make -j`nproc` && \
   make install && \
   cd .. && \
@@ -66,7 +66,7 @@ RUN \
   cd ${build_dir} && \
   wget --quiet --no-check-certificate -O - https://download.gnome.org/sources/libxml2/2.9/libxml2-2.9.14.tar.xz | tar Jxf - && \
   cd libxml2-2.9.14 && \
-  ./configure --prefix=/usr/local/gcc103 --without-python --without-readline && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/gcc103 --without-python --without-readline && \
   make -j`nproc` && \
   make install && \
   cd .. && \
@@ -89,7 +89,7 @@ RUN \
   cd ${build_dir} && \
   wget --quiet -O - https://github.com/NixOS/patchelf/releases/download/0.13/patchelf-0.13.tar.bz2 | tar jxf - && \
   cd patchelf-0.13.20210805.a949ff2 && \
-  ./configure --prefix=/usr/local/gcc103 && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/gcc103 && \
   make -j`nproc` && \
   make install && \
   cd .. && \
@@ -102,7 +102,7 @@ RUN \
   cd ${build_dir} && \
   wget --quiet -O - https://www.python.org/ftp/python/3.7.9/Python-3.7.9.tgz | tar xzf - && \
   cd Python-3.7.9 && \
-  ./configure --enable-optimizations && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations && \
   make altinstall && \
   cd .. && \
   rm -rf Python-3.7.9
@@ -124,7 +124,7 @@ RUN \
 RUN \
   yum-config-manager --add-repo https://yum.repos.intel.com/mkl/setup/intel-mkl.repo && \
   yum -y install intel-mkl-2020.4-912 && \
-  cp /opt/intel/mkl/lib/intel64/libmkl*.so /usr/local/gcc103/lib
+  cp /opt/intel/mkl/lib/intel64/libmkl*.so /usr/local/gcc103/lib && rm -rf /var/cache/yum
 
 # Clone PyTorch and build LibTorch
 # If the PyTorch branch is changed also update PYTORCH_BUILD_VERSION
@@ -159,4 +159,4 @@ FROM centos:7
 COPY --from=builder /usr/local/gcc103 /usr/local/gcc103
 RUN \
   rm /var/lib/rpm/__db.* && \
-  yum install -y bzip2 gcc git make unzip which zip zlib-devel
+  yum install -y bzip2 gcc git make unzip which zip zlib-devel && rm -rf /var/cache/yum