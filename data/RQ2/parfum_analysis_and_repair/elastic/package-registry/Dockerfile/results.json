{
  "startTime": 1674255482687,
  "endTime": 1674255483168,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This image contains the package-registry binary.\n# It expects packages to be mounted under /packages/package-registry or have a config file loaded into /package-registry/config.yml\n\n# Build binary\nARG GO_VERSION=1.18.3\nFROM golang:${GO_VERSION} AS builder\n\nCOPY ./ /package-registry\nWORKDIR /package-registry\nRUN go build .\n\n\n# Run binary\nFROM ubuntu:22.04\n\n# Get dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y mime-support zip rsync curl && \\\n    apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\n# Move binary from the builder image\nCOPY --from=builder /package-registry/package-registry /package-registry/package-registry\n\n# Change to new working directory\nWORKDIR /package-registry\n\n# Get in config which expects packages in /packages\nCOPY config.docker.yml /package-registry/config.yml\n\n# Start registry when container is run an expose it on port 8080\nEXPOSE 8080\nENTRYPOINT [\"./package-registry\"]\n\n# Make sure it's accessible from outside the container\nENV EPR_ADDRESS=0.0.0.0:8080\n\nHEALTHCHECK --interval=1s --retries=30 CMD curl --silent --fail localhost:8080/health || exit 1\n\n"
}