{
  "startTime": 1674254967840,
  "endTime": 1674254968551,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12-slim\n\nARG RUM_AGENT_BRANCH=main\nARG RUM_AGENT_REPO=elastic/apm-agent-rum-js\nARG APM_SERVER_URL\n\nRUN apt update -qq \\\n    && apt install -qq -y \\\n      curl \\\n      git \\\n      gnupg \\\n      libgconf-2-4 \\\n      libxss1 \\\n      libxtst6 \\\n      python \\\n      g++ \\\n      build-essential \\\n      fonts-ipafont-gothic \\\n      fonts-wqy-zenhei \\\n      fonts-thai-tlwg \\\n      fonts-kacst \\\n      ttf-freefont \\\n      ca-certificates \\\n      chromium \\\n      --no-install-recommends && rm -rf /var/lib/apt/lists/*;\n\n# It's a good idea to use dumb-init to help prevent zombie chrome processes.\nADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\nRUN chmod +x /usr/local/bin/dumb-init\n\nRUN git clone https://github.com/${RUM_AGENT_REPO}.git /rumjs-integration-test\nRUN (cd /rumjs-integration-test \\\n  && git fetch -q origin '+refs/pull/*:refs/remotes/origin/pr/*' \\\n  && git checkout ${RUM_AGENT_BRANCH})\n\nWORKDIR /rumjs-integration-test\n\nENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true\nENV PUPPETEER_EXECUTABLE_PATH=//usr/bin/chromium\nENV PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1\n# the install is retry threee times with a pause of 10 seconds\nRUN for i in 1 2 3; \\\n    do \\\n      npm install --no-optional --no-audit; \\\n      sleep 10; \\\n      ([ $i -eq 3 ] && exit 1) || true; \\\n    done; npm cache clean --force;\n\n# Run the build on all the packages/* to make sure the files referenced in both\n# main and module fields are available when they are required by successive dependencies\nRUN npx lerna run build && npx lerna run build:e2e --scope=@elastic/apm-rum\n\n# Add user so we don't need --no-sandbox.\nRUN groupadd -r pptruser && useradd -r -g pptruser -G audio,video pptruser \\\n    && mkdir -p /home/pptruser/Downloads \\\n    && chown -R pptruser:pptruser /home/pptruser \\\n    && chown -R pptruser:pptruser /rumjs-integration-test/node_modules\n\n# Run everything after as non-privileged user.\nUSER pptruser\n\nENTRYPOINT [\"dumb-init\", \"--\"]\n\nCOPY run.sh /run.sh\n\nEXPOSE 8000 9222\n\nCMD [ \"/bin/bash\", \"/run.sh\" ]\n"
}