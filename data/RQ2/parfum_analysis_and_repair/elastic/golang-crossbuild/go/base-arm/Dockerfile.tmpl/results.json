{
  "startTime": 1674247009291,
  "endTime": 1674247028594,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 5,
        "columnEnd": 122
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DEBIAN_VERSION\nFROM arm64v8/debian:${DEBIAN_VERSION}\n\nARG DEBIAN_VERSION\n# Replace sources.list in order to use archive.debian.org.\nCOPY sources-debian${DEBIAN_VERSION}.list /etc/apt/sources.list\n\nRUN \\\n    apt-get -o Acquire::Check-Valid-Until=false update \\\n        && apt-get dist-upgrade -y \\\n        && apt-get install -qq -y --no-install-recommends --allow-unauthenticated \\\n            build-essential \\\n            ca-certificates \\\n            curl \\\n            git \\\n            gnupg \\\n            make \\\n            file \\\n            flex \\\n            bison \\\n            librpm-dev \\\n            libc-dev \\\n            libpopt-dev \\\n            linux-libc-dev \\\n            libxml2-dev \\\n            libxml2 \\\n            libicu-dev \\\n            libicu57 \\\n            icu-devtools \\\n            libsystemd-dev \\\n            librpm3  \\\n            librpmio3 \\\n            librpmbuild3 \\\n            librpmsign3 \\\n            libsqlite3-dev \\\n            libnss3 \\\n            libsqlite3-0 \\\n        && rm -rf /var/lib/apt/lists/*\n\nARG GOLANG_VERSION=1.18.3\nARG GOLANG_DOWNLOAD_URL=https://golang.org/dl/go$GOLANG_VERSION.linux-arm64.tar.gz\nARG GOLANG_DOWNLOAD_SHA256=beacbe1441bee4d7978b900136d1d6a71d150f0a9bb77e9d50c822065623a35a\n\nRUN curl -fsSL \"$GOLANG_DOWNLOAD_URL\" -o golang.tar.gz \\\n\t&& echo \"$GOLANG_DOWNLOAD_SHA256  golang.tar.gz\" | sha256sum -c - \\\n\t&& tar -C /usr/local -xzf golang.tar.gz \\\n\t&& rm golang.tar.gz\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n\nCOPY rootfs /\n\n# show the GLIBC version\nRUN ldd --version\n\nWORKDIR /\nRUN go mod init github.com/elastic/golang-crossbuild-$GOLANG_VERSION-arm \\\n    && go get -d . \\\n    && go build -o /crossbuild /entrypoint.go \\\n    && rm -rf /go/* /root/.cache/* /entrypoint.go\n\nRUN curl -f -sSLO https://storage.googleapis.com/obs-ci-cache/beats/libpcap-1.8.1.tar.gz \\\n  && mkdir /libpcap \\\n\t&& tar -xzf libpcap-1.8.1.tar.gz -C /libpcap \\\n  && cd /libpcap/libpcap-1.8.1 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-usb=no --enable-bluetooth=no --enable-dbus=no --host=aarch64-unknown-linux-gnu --with-pcap=linux \\\n  && make && rm libpcap-1.8.1.tar.gz\n\nENV GOLANG_CROSSBUILD=1\nVOLUME      /app\nWORKDIR     /app\nENTRYPOINT  [\"/crossbuild\"]\n"
}