{
  "startTime": 1674249945641,
  "endTime": 1674249946519,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 0,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 0,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 0,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 0,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 0,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile was generated from templates/Dockerfile.j2\nFROM ubuntu:20.04\n\nRUN for iter in {1..10}; do \\\n export DEBIAN_FRONTEND=noninteractive && \\\napt-get update -y && \\\napt-get upgrade -y && \\\n apt-get install --no-install-recommends -y procps findutils tar gzip curl && \\\n apt-get install --no-install-recommends -y locales && \\\napt-get clean all && \\\nlocale-gen 'en_US.UTF-8' && \\\n    apt-get clean metadata && \\\nexit_code=0 && break || exit_code=$? && \\\n    echo \"packaging error: retry $iter in 10s\" && \\\n    apt-get clean all && \\\napt-get clean metadata && \\\nsleep 10; done; rm -rf /var/lib/apt/lists/*; \\\n    (exit $exit_code)\n\n# Provide a non-root user to run the process.\nRUN groupadd --gid 1000 logstash && \\\n    adduser --uid 1000 --gid 1000 \\\n       --home /usr/share/logstash --no-create-home \\\n      logstash\n\n# Add Logstash itself.\nRUN \\\n curl -f -Lo - https://artifacts.elastic.co/downloads/logstash/logstash-8.3.2-linux-$(arch).tar.gz | \\\n    tar zxf - -C /usr/share && \\\n    mv /usr/share/logstash-8.3.2 /usr/share/logstash && \\\nchown --recursive logstash:logstash /usr/share/logstash/ && \\\n    chown -R logstash:root /usr/share/logstash && \\\n    chmod -R g=u /usr/share/logstash && \\\n    mkdir /licenses/ && \\\n    mv /usr/share/logstash/NOTICE.TXT /licenses/NOTICE.TXT && \\\n    mv /usr/share/logstash/LICENSE.txt /licenses/LICENSE.txt && \\\n    find /usr/share/logstash -type d -exec chmod g+s {} \\; && \\\n    ln -s /usr/share/logstash /opt/logstash\n\nWORKDIR /usr/share/logstash\nENV ELASTIC_CONTAINER true\nENV PATH=/usr/share/logstash/bin:$PATH\n\n# Provide a minimal configuration, so that simple invocations will provide\n# a good experience.\nADD config/pipelines.yml config/pipelines.yml\nADD config/logstash-full.yml config/logstash.yml\nADD config/log4j2.properties config/\nADD pipeline/default.conf pipeline/logstash.conf\nRUN chown --recursive logstash:root config/ pipeline/\n# Ensure Logstash gets the correct locale by default.\nENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8\nADD env2yaml/env2yaml /usr/local/bin/\n# Place the startup wrapper script.\nADD bin/docker-entrypoint /usr/local/bin/\nRUN chmod 0755 /usr/local/bin/docker-entrypoint\n\nUSER 1000\n\nEXPOSE 9600 5044\n\nLABEL  org.label-schema.schema-version=\"1.0\" \\\n  org.label-schema.vendor=\"Elastic\" \\\n  org.opencontainers.image.vendor=\"Elastic\" \\\n  org.label-schema.name=\"logstash\" \\\n  org.opencontainers.image.title=\"logstash\" \\\n  org.label-schema.version=\"8.3.2\" \\\n  org.opencontainers.image.version=\"8.3.2\" \\\n  org.label-schema.url=\"https://www.elastic.co/products/logstash\" \\\n  org.label-schema.vcs-url=\"https://github.com/elastic/logstash\" \\\n  org.label-schema.license=\"Elastic License\" \\\n  org.opencontainers.image.licenses=\"Elastic License\" \\\n  org.opencontainers.image.description=\"Logstash is a free and open server-side data processing pipeline that ingests data from a multitude of sources, transforms it, and then sends it to your favorite 'stash.'\" \\\n  org.label-schema.build-date=2022-07-06T15:17:46Z \\\norg.opencontainers.image.created=2022-07-06T15:17:46Z\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint\"]\n"
}