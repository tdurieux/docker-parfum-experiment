diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elastic/dockerfiles/kibana/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elastic/dockerfiles/kibana/Dockerfile/repaired.Dockerfile
index 6f8308f..2a835c4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elastic/dockerfiles/kibana/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elastic/dockerfiles/kibana/Dockerfile/repaired.Dockerfile
@@ -11,10 +11,10 @@
 ################################################################################
 FROM ubuntu:20.04 AS builder
 
-RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y curl
+RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y curl && rm -rf /var/lib/apt/lists/*;
 
 RUN cd /tmp && \
-  curl --retry 8 -s -L \
+  curl -f --retry 8 -s -L \
     --output kibana.tar.gz \
      https://artifacts.elastic.co/downloads/kibana/kibana-8.3.2-linux-$(arch).tar.gz && \
   cd -
@@ -22,7 +22,7 @@ RUN cd /tmp && \
 
 RUN mkdir /usr/share/kibana
 WORKDIR /usr/share/kibana
-RUN tar --strip-components=1 -zxf /tmp/kibana.tar.gz
+RUN tar --strip-components=1 -zxf /tmp/kibana.tar.gz && rm /tmp/kibana.tar.gz
 # Ensure that group permissions are the same as user permissions.
 # This will help when relying on GID-0 to run Kibana, rather than UID-1000.
 # OpenShift does this, for example.
@@ -64,15 +64,15 @@ RUN set -e ; \
         *) echo >&2 "Unsupported architecture $(arch)" ; exit 1 ;; \
     esac ; \
   TINI_VERSION='v0.19.0' ; \
-  curl --retry 8 -S -L -O "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/${TINI_BIN}" ; \
-  curl --retry 8 -S -L -O "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/${TINI_BIN}.sha256sum" ; \
+  curl -f --retry 8 -S -L -O "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/${TINI_BIN}"; \
+  curl -f --retry 8 -S -L -O "https://github.com/krallin/tini/releases/download/${TINI_VERSION}/${TINI_BIN}.sha256sum"; \
   sha256sum -c "${TINI_BIN}.sha256sum" ; \
   rm "${TINI_BIN}.sha256sum" ; \
   mv "${TINI_BIN}" /bin/tini ; \
   chmod +x /bin/tini
 
 RUN mkdir /usr/share/fonts/local
-RUN curl --retry 8 -S -L -o /usr/share/fonts/local/NotoSansCJK-Regular.ttc https://github.com/googlefonts/noto-cjk/raw/NotoSansV2.001/NotoSansCJK-Regular.ttc
+RUN curl -f --retry 8 -S -L -o /usr/share/fonts/local/NotoSansCJK-Regular.ttc https://github.com/googlefonts/noto-cjk/raw/NotoSansV2.001/NotoSansCJK-Regular.ttc
 RUN echo "5dcd1c336cc9344cb77c03a0cd8982ca8a7dc97d620fd6c9c434e02dcb1ceeb3  /usr/share/fonts/local/NotoSansCJK-Regular.ttc" | sha256sum -c -
 RUN fc-cache -v