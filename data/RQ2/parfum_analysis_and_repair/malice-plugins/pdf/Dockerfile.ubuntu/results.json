{
  "startTime": 1674218374437,
  "endTime": 1674218375373,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 5,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:xenial\n\nLABEL maintainer \"https://github.com/blacktop\"\n\nLABEL malice.plugin.repository = \"https://github.com/malice-plugins/pdf.git\"\nLABEL malice.plugin.category=\"pdf\"\nLABEL malice.plugin.mime=\"application/pdf\"\nLABEL malice.plugin.docker.engine=\"*\"\n\nENV PDFID 0_2_4\nENV PDF_PARSER 0_6_8\n\nCOPY . /usr/sbin\nRUN buildDeps='ca-certificates \\\n  libboost-system-dev \\\n  libboost-python-dev \\\n  libboost-thread-dev \\\n  build-essential \\\n  python-pyrex \\\n  libnspr4-dev \\\n  libemu-dev \\\n  python-pip \\\n  python-dev \\\n  subversion \\\n  unzip \\\n  swig \\\n  wget \\\n  git' \\\n  && set -x \\\n  && apt-get update -qq \\\n  && apt-get install -y $buildDeps python python-setuptools pkg-config python-libemu python-lxml python-pil --no-install-recommends \\\n  && echo \"===> Install malice/pdf plugin...\" \\\n  && cd /usr/sbin \\\n  && export PIP_NO_CACHE_DIR=off \\\n  && export PIP_DISABLE_PIP_VERSION_CHECK=on \\\n  # && pip install --upgrade pip wheel \\\n  && echo \"\\t[*] install requirements...\" \\\n  && pip install --no-cache-dir -U -r requirements.txt \\\n  && echo \"\\t[*] install pyv8...\" \\\n  && pip install --no-cache-dir git+https://github.com/flier/pyv8.git \\\n  && echo \"\\t[*] install peepdf...\" \\\n  && git clone https://github.com/jbremer/peepdf.git peepdf \\\n  && echo \"\\t[*] install pdfscan.py...\" \\\n  && chmod +x pdfscan.py \\\n  && ln -s /usr/sbin/pdfscan.py /usr/sbin/pdfscan \\\n  && echo \"\\t[*] clean up...\" \\\n  && apt-get purge -y --auto-remove $buildDeps $(apt-mark showauto) \\\n  && apt-get clean \\\n  && rm requirements.txt Dockerfile VERSION \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives /tmp/* /var/tmp/*\n\n# RUN apk --update add --no-cache python py-setuptools\n# RUN apk --update add --no-cache -t .build-deps \\\n#   openssl-dev \\\n#   build-base \\\n#   python-dev \\\n#   libffi-dev \\\n#   musl-dev \\\n#   libc-dev \\\n#   py-pip \\\n#   gcc \\\n#   git \\\n#   && set -ex \\\n#   && echo \"===> Install malice/pdf plugin...\" \\\n#   && cd /usr/sbin \\\n#   && export PIP_NO_CACHE_DIR=off \\\n#   && export PIP_DISABLE_PIP_VERSION_CHECK=on \\\n#   && pip install --upgrade pip wheel \\\n#   && echo \"\\t[*] install requirements...\" \\\n#   && pip install -U -r requirements.txt \\\n#   && echo \"\\t[*] install peepdf...\" \\\n#   && pip install svn+http://pyv8.googlecode.com/svn/trunk/ \\\n#   && pip install git+https://github.com/jbremer/peepdf.git \\\n#   && echo \"\\t[*] install pdfscan.py...\" \\\n#   && chmod +x pdfscan.py \\\n#   && ln -s /usr/sbin/pdfscan.py /usr/sbin/pdfscan \\\n#   && echo \"\\t[*] clean up...\" \\\n#   && rm requirements.txt Dockerfile VERSION \\\n#   && apk del --purge .build-deps\n\nWORKDIR /malware\n\nENTRYPOINT [\"pdfscan\"]\nCMD [\"--help\"]\n"
}