{
  "startTime": 1674255608244,
  "endTime": 1674255609139,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 124
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################################\n# GOLANG BUILDER\n####################################################\nFROM --platform=linux/amd64 golang:1 as go_builder\n\nCOPY . /go/src/github.com/malice-plugins/windows-defender\nWORKDIR /go/src/github.com/malice-plugins/windows-defender\nRUN go build -ldflags \"-s -w -X main.Version=v$(cat VERSION) -X main.BuildTime=$(date -u +%Y%m%d)\" -o /bin/avscan\n\n####################################################\n# PLUGIN BUILDER\n####################################################\nFROM --platform=linux/amd64 ubuntu:focal\n\nLABEL maintainer \"https://github.com/blacktop\"\n\nLABEL malice.plugin.repository = \"https://github.com/malice-plugins/windows-defender.git\"\nLABEL malice.plugin.category=\"av\"\nLABEL malice.plugin.mime=\"*\"\nLABEL malice.plugin.docker.engine=\"*\"\n\n# Create a malice user and group first so the IDs get set the same way, even as\n# the rest of this may change over time.\nRUN groupadd -r malice \\\n  && useradd --no-log-init -r -g malice malice \\\n  && mkdir /malware \\\n  && chown -R malice:malice /malware\n\nRUN buildDeps='libreadline-dev:i386 \\\n  ca-certificates \\\n  libc6-dev:i386 \\\n  build-essential \\\n  gcc-multilib \\\n  cabextract \\\n  mercurial \\\n  git-core \\\n  unzip \\\n  curl' \\\n  && set -x \\\n  && dpkg --add-architecture i386 && apt-get update -qq \\\n  && apt-get install -o APT::Immediate-Configure=false -y $buildDeps libc6-i386 --no-install-recommends \\\n  && echo \"===> Install taviso/loadlibrary...\" \\\n  && git clone https://github.com/taviso/loadlibrary.git /loadlibrary \\\n  && echo \"===> Download 32-bit antimalware update file..\" \\\n  && curl -f -L --output /loadlibrary/engine/mpam-fe.exe \"https://download.microsoft.com/download/DefinitionUpdates/mpam-fe.exe\" \\\n  # && curl -L --output /loadlibrary/engine/mpam-fe.exe \"https://www.microsoft.com/security/encyclopedia/adlpackages.aspx?arch=x86\" \\\n  && cd /loadlibrary/engine \\\n  && cabextract mpam-fe.exe \\\n  && rm mpam-fe.exe \\\n  && cd /loadlibrary \\\n  && make -j2 \\\n  && echo \"===> Clean up unnecessary files...\" \\\n  && apt-get purge -y --auto-remove $buildDeps $(apt-mark showauto) \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives /tmp/* /var/tmp/*\n\n# Ensure ca-certificates is installed for elasticsearch to use https\nRUN apt-get update -qq && apt-get install -yq --no-install-recommends ca-certificates \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install exiftool for engine version extraction\nRUN apt-get update -qq && apt-get install -yq --no-install-recommends exiftool \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN  mkdir -p /opt/malice\nCOPY update.sh /opt/malice/update\n\nCOPY --from=go_builder /bin/avscan /bin/avscan\n\nWORKDIR /malware\n\nENTRYPOINT [\"/bin/avscan\"]\nCMD [\"--help\"]\n\n####################################################\n####################################################"
}