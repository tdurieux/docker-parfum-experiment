{
  "startTime": 1674246836576,
  "endTime": 1674246839706,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 62,
        "columnStart": 5,
        "columnEnd": 22
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 72
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####################################################\n# GOLANG BUILDER\n####################################################\nFROM golang:1 as go_builder\nRUN apt-get update && apt-get install --no-install-recommends -y libmagic-dev libc6 && rm -rf /var/lib/apt/lists/*;\nCOPY . /go/src/github.com/maliceio/malice-fileinfo\nWORKDIR /go/src/github.com/maliceio/malice-fileinfo\nRUN go get -u github.com/golang/dep/cmd/dep\nRUN dep ensure\nRUN go build -ldflags \"-s -w -X main.Version=v$(cat VERSION) -X main.BuildTime=$(date -u +%Y%m%d)\" -o /bin/info\n\n####################################################\n# FILEINFO BUILDER\n####################################################\nFROM ubuntu:bionic\n\nLABEL maintainer \"https://github.com/blacktop\"\n\nLABEL malice.plugin.repository = \"https://github.com/malice-plugins/fileinfo.git\"\nLABEL malice.plugin.category=\"metadata\"\nLABEL malice.plugin.mime=\"*\"\nLABEL malice.plugin.docker.engine=\"*\"\n\n# Create a malice user and group first so the IDs get set the same way, even as\n# the rest of this may change over time.\nRUN groupadd -r malice \\\n  && useradd --no-log-init -r -g malice malice \\\n  && mkdir /malware \\\n  && chown -R malice:malice /malware\n\nENV SSDEEP 2.14.1\nENV EXIFTOOL 12.25\n\nRUN buildDeps='ca-certificates \\\n  build-essential \\\n  openssl \\\n  unzip \\\n  curl' \\\n  && set -x \\\n  && apt-get update -qq \\\n  && apt-get install -yq --no-install-recommends $buildDeps libmagic-dev libc6 cpanminus \\\n  && echo \"Downloading TRiD and Database...\" \\\n  && curl -f -Ls https://mark0.net/download/trid_linux_64.zip > /tmp/trid_linux_64.zip \\\n  && curl -f -Ls https://mark0.net/download/triddefs.zip > /tmp/triddefs.zip \\\n  && cd /tmp \\\n  && unzip trid_linux_64.zip \\\n  && unzip triddefs.zip \\\n  && chmod +x trid \\\n  && mv trid /usr/bin/ \\\n  && mv triddefs.trd /usr/bin/ \\\n  && echo \"Installing ssdeep...\" \\\n  && curl -f -Ls https://github.com/ssdeep-project/ssdeep/releases/download/release-$SSDEEP/ssdeep-$SSDEEP.tar.gz > \\\n  /tmp/ssdeep-$SSDEEP.tar.gz \\\n  && cd /tmp \\\n  && tar xzf ssdeep-$SSDEEP.tar.gz \\\n  && cd ssdeep-$SSDEEP \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  && echo \"Installing exiftool...\" \\\n  && cpanm --notest File::Find Archive::Zip Compress::Raw::Zlib \\\n  && curl -f -Ls https://exiftool.org/Image-ExifTool-$EXIFTOOL.tar.gz > \\\n  /tmp/exiftool.tar.gz \\\n  && cd /tmp \\\n  && tar xzf exiftool.tar.gz \\\n  && cd Image-ExifTool-$EXIFTOOL \\\n  && perl Makefile.PL \\\n  && make test \\\n  && make install \\\n  && echo \"Clean up unnecessary files...\" \\\n  && apt-get purge -y --auto-remove $buildDeps \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /root/.gnupg && rm ssdeep-$SSDEEP.tar.gz\n\nRUN apt-get update -qq && apt-get install -yq --no-install-recommends ca-certificates gosu \\\n  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nCOPY --from=go_builder /bin/info /bin/info\n\nWORKDIR /malware\n\nENTRYPOINT [\"gosu\",\"malice\",\"info\"]\nCMD [\"--help\"]\n\n####################################################\n####################################################\n"
}