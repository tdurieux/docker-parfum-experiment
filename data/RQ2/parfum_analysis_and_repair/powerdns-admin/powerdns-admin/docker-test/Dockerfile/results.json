{
  "startTime": 1674220444968,
  "endTime": 1674220445544,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 29,
        "columnEnd": 45
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch-slim\nLABEL maintainer=\"k@ndk.name\"\n\nENV LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8\n\nRUN apt-get update -y \\\n    && apt-get install -y --no-install-recommends apt-transport-https locales locales-all python3-pip python3-setuptools python3-dev curl libsasl2-dev libldap2-dev libssl-dev libxml2-dev libxslt1-dev libxmlsec1-dev libffi-dev build-essential libmariadb-dev-compat \\\n    && curl -f -sL https://deb.nodesource.com/setup_10.x | bash - \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" > /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update -y \\\n    && apt-get install --no-install-recommends -y nodejs yarn \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# We copy just the requirements.txt first to leverage Docker cache\nCOPY ./requirements.txt /app/requirements.txt\n\nWORKDIR /app\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY . /app\nCOPY ./docker/entrypoint.sh /usr/local/bin/\nRUN chmod +x /usr/local/bin/entrypoint.sh\n\nENV FLASK_APP=powerdnsadmin/__init__.py\nRUN yarn install --pure-lockfile --production \\\n    && yarn cache clean \\\n    && flask assets build && yarn cache clean;\n\nCOPY ./docker-test/wait-for-pdns.sh /opt\nRUN chmod u+x /opt/wait-for-pdns.sh\nCMD [\"/opt/wait-for-pdns.sh\", \"/usr/local/bin/pytest\",\"--capture=no\",\"-vv\"]\n"
}