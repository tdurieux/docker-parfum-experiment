{
  "startTime": 1674250872870,
  "endTime": 1674250873908,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This file describes a docker image for running nipap-www in docker\n#\n# Build the docker image:\n#     docker build -t nipap-www -f Dockerfile.www .\n#\n# Run by linking to the container running nipapd. -i -t is for interactive,\n# use -d if you wish to run the container in the background:\n#     docker run -i -t --link nipapd --name nipap-www nipap-www\n#\n# Most configuration variables are provided via environment variables.\n#   NIPAPD_USERNAME     username to authenticate to nipapd\n#   NIPAPD_PASSWORD     password to authenticate to nipapd\n#   NIPAPD_HOST         host where nipapd is running [nipapd]\n#   NIPAPD_PORT         port of nipapd [1337]\n#   WWW_USERNAME        web UI username [guest]\n#   WWW_PASSWORD        web UI password [guest]\n#\n# Some variables have a default, indicated in square brackets, the rest you need\n# to fill in. If you are linking to a container running nipapd, just enter the\n# name of the container as NIPAPD_HOST.\n#\n# WWW_USERNAME & WWW_PASSWORD is used to create a new account in the local auth\n# database so that you can later login to the web interface.\n#\n\nFROM ubuntu:xenial\n\nMAINTAINER Lukas Garberg <lukas@spritelink.net>\n\nENV NIPAPD_HOST=nipapd NIPAPD_PORT=1337 WWW_USERNAME=guest WWW_PASSWORD=guest\n\n# apt update, upgrade & install packages\nRUN apt-get update -qy && apt-get upgrade -qy \\\n && apt-get install --no-install-recommends -qy apache2 \\\n    libapache2-mod-wsgi \\\n    devscripts \\\n    make \\\n    libpq-dev \\\n    libsqlite3-dev \\\n    postgresql-client \\\n    python \\\n    python-all \\\n    python-docutils \\\n    python-pip \\\n    python-dev \\\n && pip --no-input install envtpl \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install pynipap, nipap and nipap-www\nCOPY pynipap /pynipap\nCOPY nipap /nipap\nCOPY nipap-www /nipap-www\nRUN cd /pynipap && python setup.py install && \\\n    cd /nipap && pip --no-input install -r requirements.txt && python setup.py install && \\\n    cd /nipap-www && pip --no-input install -r requirements.txt && python setup.py install && \\\n    cd ..\n\nEXPOSE 80\nVOLUME [ \"/var/log/apache2\" ]\n\nENTRYPOINT [ \"/nipap-www/entrypoint.sh\" ]\n"
}