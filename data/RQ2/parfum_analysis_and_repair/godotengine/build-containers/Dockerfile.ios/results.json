{
  "startTime": 1674216718208,
  "endTime": 1674216719792,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG img_version\nFROM godot-osx:${img_version}\n\nARG mono_version\n\nENV IOS_SDK=15.4\n\nRUN dnf -y install --setopt=install_weak_deps=False \\\n      automake autoconf gcc gcc-c++ gcc-objc gcc-objc++ cmake libicu-devel libtool libxml2-devel openssl-devel perl python yasm && \\\n    git clone --progress https://github.com/tpoechtrager/cctools-port.git && \\\n    cd /root/cctools-port && \\\n    git checkout 04663295d0425abfac90a42440a7ec02d7155fea && \\\n    # arm64 device\n    usage_examples/ios_toolchain/build.sh /root/files/iPhoneOS${IOS_SDK}.sdk.tar.xz arm64 && \\\n    mkdir -p /root/ioscross/arm64 && \\\n    mv usage_examples/ios_toolchain/target/* /root/ioscross/arm64 && \\\n    mkdir /root/ioscross/arm64/usr && \\\n    ln -s /root/ioscross/arm64/bin /root/ioscross/arm64/usr/bin && \\\n    # arm64 simulator\n    # Disabled for now as it doesn't work with cctools-port and current LLVM:\n    # Cf. https://github.com/tpoechtrager/cctools-port/issues/102\n    #sed -i 's/miphoneos-version-min/mios-simulator-version-min/g' usage_examples/ios_toolchain/wrapper.c && \\\n    #usage_examples/ios_toolchain/build.sh /root/files/iPhoneSimulator${IOS_SDK}.sdk.tar.xz arm64 && \\\n    #mkdir -p /root/ioscross/arm64_sim && \\\n    #mv usage_examples/ios_toolchain/target/* /root/ioscross/arm64_sim && \\\n    #mkdir /root/ioscross/arm64_sim/usr && \\\n    #ln -s /root/ioscross/arm64_sim/bin /root/ioscross/arm64_sim/usr/bin && \\\n    # x86_64 simulator\n    sed -i 's#^TRIPLE=.*#TRIPLE=\"x86_64-apple-darwin11\"#' usage_examples/ios_toolchain/build.sh && \\\n    usage_examples/ios_toolchain/build.sh /root/files/iPhoneSimulator${IOS_SDK}.sdk.tar.xz x86_64 && \\\n    mkdir -p /root/ioscross/x86_64_sim && \\\n    mv usage_examples/ios_toolchain/target/* /root/ioscross/x86_64_sim && \\\n    mkdir /root/ioscross/x86_64_sim/usr && \\\n    ln -s /root/ioscross/x86_64_sim/bin /root/ioscross/x86_64_sim/usr/bin && \\\n    cd /root && \\\n    rm -rf /root/cctools-port\n\nENV OSXCROSS_IOS=not_nothing\nENV IOSCROSS_ROOT=/root/ioscross\nENV PATH=\"/root/ioscross/arm64/bin:/root/ioscross/arm64_sim/bin:/root/ioscross/x86_64_sim/bin:${PATH}\"\n\nRUN if [ -z \"${mono_version}\" ]; then echo -e \"\\n\\nargument mono-version is mandatory!\\n\\n\"; exit 1; fi && \\\n    cp -a /root/files/${mono_version} /root && \\\n    cd /root/${mono_version} && \\\n    cd godot-mono-builds && \\\n    export MONO_SOURCE_ROOT=/root/${mono_version} && \\\n    python3 ios.py configure -j --target=arm64 --ios-version-min 10.0 --osx-toolchain ${OSXCROSS_ROOT} \\\n      --ios-toolchain ${IOSCROSS_ROOT}/arm64 --ios-sdk ${IOSCROSS_ROOT}/arm64/SDK/iPhoneOS${IOS_SDK}.sdk && \\\n    python3 ios.py make -j --target=arm64 && \\\n    #python3 ios.py configure -j --target=arm64-sim --ios-version-min 10.0 --osx-toolchain ${OSXCROSS_ROOT} \\\n    #  --ios-toolchain ${IOSCROSS_ROOT}/arm64_sim --ios-sdk ${IOSCROSS_ROOT}/arm64_sim/SDK/iPhoneOS${IOS_SDK}.sdk && \\\n    #python3 ios.py make -j --target=arm64-sim && \\\n    python3 ios.py configure -j --target=x86_64 --ios-version-min 10.0 --osx-toolchain ${OSXCROSS_ROOT} \\\n      --ios-toolchain ${IOSCROSS_ROOT}/x86_64_sim --ios-sdk ${IOSCROSS_ROOT}/x86_64_sim/SDK/iPhoneOS${IOS_SDK}.sdk && \\\n    python3 ios.py make -j --target=x86_64 && \\\n    python3 bcl.py make -j --product=ios && \\\n    # TODO: Enable once godot-mono-builds supports osxcross for the cross-compiler.\n    # It requires having a build of libclang with support for iOS arm64 + changes to the build scripts.\n    #python3 ios.py configure -j --target=cross-arm64 --ios-toolchain ${IOSCROSS_ROOT}/arm64 --ios-sdk ${IOSCROSS_ROOT}/arm64/SDK/iPhoneOS${IOS_SDK}.sdk --osx-toolchain ${OSXCROSS_ROOT} && \\\n    #python3 ios.py make -j --target=cross-arm64 && \\\n    cd /root && \\\n    rm -rf /root/${mono_version}\n\n# Until we can build the cross-compiler, we include a pre-made build in the container.\nRUN mkdir -p /root/aot-compilers/iphone-arm64 && \\\n    curl -f -LO https://github.com/godotengine/godot-mono-builds/releases/download/release-fcf205c/ios-cross-arm64.zip && \\\n    dnf -y install --setopt=install_weak_deps=False p7zip && \\\n    7za e ios-cross-arm64.zip ios-cross-arm64-release/bin/aarch64-apple-darwin-mono-sgen -o/root/aot-compilers/iphone-arm64 && \\\n    rm ios-cross-arm64.zip\n\nCMD /bin/bash\n"
}