{
  "startTime": 1674246559956,
  "endTime": 1674246560997,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Building documentation\nFROM sphinxdoc/sphinx as sphinx-doc\n\nRUN apt-get update && apt-get install --no-install-recommends -y doxygen && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /doc\nCOPY ./doc/sphinx/ /doc/sphinx/\nRUN cd /doc/sphinx && pip install --no-cache-dir -r requirements.txt && make html\n\nFROM node:16-buster as remote-terminal\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y build-essential flex bison && rm -rf /var/lib/apt/lists/*;\n\n# Building ric-script\nWORKDIR /src/ric-script\n\n# Install meson\nCOPY . /src/ric-script\n\nENV DOCKER_MODE 1\nRUN make && make install\n\nCOPY node/ /usr/src/app/\n\n# App directory\nWORKDIR /usr/src/app\n\nCOPY --from=sphinx-doc /doc/sphinx/build/html /usr/src/app/public/doc\nRUN cp -r /src/ric-script/ric /usr/bin && \\\n    cp -r /src/ric-script/images /usr/src/app/public/images && \\\n    cp -r /src/ric-script/images /usr/src/app/public/doc/images\n\nRUN npm install && npm cache clean --force;\n# If you are building your code for production\n# RUN npm ci --only=production\n\nEXPOSE 3000\n\nRUN mkdir /explore\n\nRUN mv /src/ric-script/samples /explore/samples && mv files/* /explore\n\n# Some extra precautions\nRUN chmod og-w /tmp && chmod og-w -R /tmp && mkdir /tmp/secrets && mkdir /tmp/secrets/super_secrets/ && \\\n  echo \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\" > /tmp/secrets/super_secrets/war_plans.txt && \\\n  rm /usr/bin/apt /usr/bin/apt-get /bin/kill /usr/bin/curl /usr/bin/ssh /usr/bin/scp\n\nRUN groupadd noobz && useradd -rm -d /explore -g noobz -u 1001 noob\nUSER noob\n\nCMD [ \"node\", \"app.js\", \"/explore\"]\n"
}