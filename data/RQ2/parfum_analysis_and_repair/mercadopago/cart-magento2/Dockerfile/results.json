{
  "startTime": 1674253995164,
  "endTime": 1674253996108,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 13,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.3-apache\n\n# Download script to install PHP extensions and dependencies\nADD https://raw.githubusercontent.com/mlocati/docker-php-extension-installer/master/install-php-extensions /usr/local/bin/\nRUN chmod uga+x /usr/local/bin/install-php-extensions && sync\n\n# Install dependencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y nano unzip git && rm -rf /var/lib/apt/lists/*;\nRUN install-php-extensions intl gd soap bcmath pdo_mysql xsl zip\n\n# Install and configure xdebug\nRUN yes | pecl install xdebug \\\n    && echo \"zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)\" > /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_enable=on\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.remote_autostart=off\" >> /usr/local/etc/php/conf.d/xdebug.ini \\\n    && echo \"xdebug.mode=coverage\" >> /usr/local/etc/php/php.ini\n\n# Install composer and downgrade to version 1\nRUN curl -f -sS https://getcomposer.org/installer -o composer-setup.php \\\n    && HASH=$( curl -f -sS https://composer.github.io/installer.sig) \\\n    && php -r \"if (hash_file('SHA384', 'composer-setup.php') === '$HASH') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\" \\\n    && php composer-setup.php --install-dir=/usr/local/bin --filename=composer \\\n    && rm -rf composer-setup.php \\\n    && composer self-update --1\n\n# Install phpmd\nRUN git clone git://github.com/phpmd/phpmd.git \\\n    && cd phpmd \\\n    && git submodule update --init \\\n    && composer install\n\n# Install Magento 2\nCOPY bin/install-mg2.sh bin/install-mg2.sh\nRUN sh bin/install-mg2.sh\n\n# Install plugin\nCOPY src magento2/app/code\n\n# phpunit config file\nCOPY phpunit.xml phpunit.xml\n\n# Fix permissions\nRUN cd magento2 && find var vendor generated pub/static pub/media app/etc -type f -print0 | xargs -0 chmod u+w\nRUN cd magento2 && find var vendor generated pub/static pub/media app/etc -type d -print0 | xargs -0 chmod u+w\nRUN chmod u+x magento2/bin/magento\n"
}