{
  "startTime": 1674249106495,
  "endTime": 1674249107224,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 41,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM nginx:1.13.3-alpine\n### Remove default nginx website\n#RUN rm -rf /usr/share/nginx/html/*\n### From 'builder' stage copy over the artifacts in dist folder to default nginx public folder\n#COPY ./dist/cafe-frontend /usr/share/nginx/html\n#CMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n\n\n# STEP 1 build static website\nFROM node:alpine as builder\nRUN apk update && apk add --no-cache make git\n# Create app directory\nWORKDIR /app\n# Install app dependencies\n#COPY package.json package-lock.json Makefile  /app/\nCOPY package.json /app/\nRUN cd /app && npm set progress=false && npm install && npm cache clean --force;\n# Copy project files into the docker image\nCOPY .  /app\nRUN cd /app && npm run build\n\n# STEP 2 build a small nginx image with static website\nFROM nginx:alpine\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n## From 'builder' copy website to default nginx public folder\nCOPY --from=builder /app/dist/ApplicationOne /usr/share/nginx/html\nCOPY ./nginx-default-cfg/default.conf /etc/nginx/conf.d/\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}