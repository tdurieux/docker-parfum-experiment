{
  "startTime": 1674214917188,
  "endTime": 1674214918438,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 27,
        "columnEnd": 48
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 52,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.\n#-------------------------------------------------------------------------------------------------------------\n\nFROM node:12\n\n# The node image includes a non-root user with sudo access. Use the \"remoteUser\"\n# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs\n# will be updated to match your local UID/GID (when using the dockerFile property).\n# See https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=node\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\nARG NPM_GLOBAL=/usr/local/share/npm-global\nENV PATH=${PATH}:${NPM_GLOBAL}/bin\nENV NVM_DIR=/usr/local/share/nvm\n\n# Options for common package install script\nARG INSTALL_ZSH=\"true\"\nARG UPGRADE_PACKAGES=\"true\"\nARG COMMON_SCRIPT_SOURCE=\"https://raw.githubusercontent.com/microsoft/vscode-dev-containers/master/script-library/common-debian.sh\"\nARG COMMON_SCRIPT_SHA=\"dev-mode\"\n\n# Configure apt and install packages\nRUN apt-get update \\\n    && export DEBIAN_FRONTEND=noninteractive \\\n    #\n    # Verify git, common tools / libs installed, add/modify non-root user, optionally install zsh\n    && apt-get -y install --no-install-recommends curl ca-certificates 2>&1 \\\n    && curl -f -sSL ${COMMON_SCRIPT_SOURCE} -o /tmp/common-setup.sh \\\n    && ( [ \"${COMMON_SCRIPT_SHA}\" = \"dev-mode\" ] || ( echo \"${COMMON_SCRIPT_SHA}  */tmp/common-setup.sh\" | sha256sum -c -)) \\\n    && /bin/bash /tmp/common-setup.sh \"${INSTALL_ZSH}\" \"${USERNAME}\" \"${USER_UID}\" \"${USER_GID}\" \"${UPGRADE_PACKAGES}\" \\\n    && rm /tmp/common-setup.sh \\\n    #\n    # Remove outdated yarn from /opt and install via package\n    # so it can be easily updated via apt-get upgrade yarn\n    && rm -rf /opt/yarn-* \\\n    && rm -f /usr/local/bin/yarn \\\n    && rm -f /usr/local/bin/yarnpkg \\\n    && apt-get install --no-install-recommends -y curl apt-transport-https lsb-release \\\n    && curl -f -sS https://dl.yarnpkg.com/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/pubkey.gpg | apt-key add - 2>/dev/null \\\n    && echo \"deb https://dl.yarnpkg.com/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && apt-get update \\\n    && apt-get -y install --no-install-recommends yarn \\\n    #\n    # Set alternate global install location that both users have rights to access\n    && mkdir -p ${NPM_GLOBAL} \\\n    && chown ${USERNAME}:root ${NPM_GLOBAL} \\\n    && npm config -g set prefix ${NPM_GLOBAL} \\\n    && sudo -u ${USERNAME} npm config -g set prefix ${NPM_GLOBAL} \\\n    #\n    # Install NVM to allow installing alternate versions of Node.js as needed\n    && mkdir -p ${NVM_DIR} \\\n    && export NODE_VERSION= \\\n    && curl -f -so- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash 2>&1 \\\n    && /bin/bash -c \"source $NVM_DIR/nvm.sh \\\n        && nvm alias default system\" 2>&1 \\\n    && echo '[ -s \"$NVM_DIR/nvm.sh\" ] && \\\\. \"$NVM_DIR/nvm.sh\"  && [ -s \"$NVM_DIR/bash_completion\" ] && \\\\. \"$NVM_DIR/bash_completion\"' \\ \n    | tee -a /home/${USERNAME}/.bashrc /home/${USERNAME}/.zshrc >> /root/.zshrc \\\n    && chown ${USER_UID}:${USER_GID} /home/${USERNAME}/.bashrc /home/${USERNAME}/.zshrc \\\n    && chown -R ${USER_UID}:root ${NVM_DIR} \\\n    #\n    # Handle scenarios where GID/UID is changed\n    && echo \"if [ \\\"\\$(stat -c '%U' ${NPM_GLOBAL})\\\" != \\\"${USERNAME}\\\" ]; then sudo chown -R ${USER_UID}:root ${NPM_GLOBAL} ${NVM_DIR}; fi\" \\\n    | tee -a /root/.bashrc /root/.zshrc /home/${USERNAME}/.bashrc >> /home/${USERNAME}/.zshrc \\\n    #\n    # Tactically remove imagemagick due to https://security-tracker.debian.org/tracker/CVE-2019-10131\n    # Can leave in Dockerfile once upstream base image moves to > 7.0.7-28.\n    && apt-get purge -y imagemagick imagemagick-6-common \\\n    #\n    # Install eslint globally\n    && sudo -u ${USERNAME} npm install -g eslint \\\n    #\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/* && npm cache clean --force;\n"
}