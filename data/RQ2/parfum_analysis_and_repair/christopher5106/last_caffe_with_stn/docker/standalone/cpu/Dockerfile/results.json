{
  "startTime": 1674252675276,
  "endTime": 1674252676565,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 56,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 112
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER caffe-maint@googlegroups.com\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cmake \\\n        git \\\n        wget \\\n        libatlas-base-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        libprotobuf-dev \\\n        libsnappy-dev \\\n        protobuf-compiler \\\n        python-dev \\\n        python-numpy \\\n        python-pip \\\n        python-scipy && \\\n    rm -rf /var/lib/apt/lists/*\n\n\nENV OPENCV_ROOT=/opt/opencv\nRUN mkdir -p $OPENCV_ROOT\nWORKDIR $OPENCV_ROOT\nRUN git clone https://github.com/Itseez/opencv.git .\nRUN apt-get install --no-install-recommends -y libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev && rm -rf /var/lib/apt/lists/*;\n#libtbb2 libtbb-dev\nRUN mkdir -p $OPENCV_ROOT/release\nWORKDIR $OPENCV_ROOT/release\nRUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local ..\nRUN make -j\"$(nproc)\"\nRUN sudo make install\n\nENV CAFFE_ROOT=/opt/caffe\nWORKDIR $CAFFE_ROOT\n\n# FIXME: clone a specific git tag and use ARG instead of ENV once DockerHub supports this.\nENV CLONE_TAG=master\n\nRUN git clone -b ${CLONE_TAG} --depth 1 https://github.com/christopher5106/last_caffe_with_stn.git . && \\\n    for req in $(cat python/requirements.txt) pydot; do pip install --no-cache-dir $req; done && \\\n    mkdir build && cd build && \\\n    cmake -DCPU_ONLY=1 .. && \\\n    make -j\"$(nproc)\"\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\nWORKDIR /workspace\n"
}