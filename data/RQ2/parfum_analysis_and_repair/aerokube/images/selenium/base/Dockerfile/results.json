{
  "startTime": 1674215698197,
  "endTime": 1674215699383,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 38,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG UBUNTU_VERSION=20.04\n\nFROM golang:1.17 as go\n\nCOPY xseld /xseld\n\nCOPY fileserver /fileserver\n\nRUN \\\n    if [ `uname -m` = \"aarch64\" ]; then ARCH=\"arm64\"; else ARCH=\"amd64\"; fi && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y upx-ucl libx11-dev && \\\n    cd /xseld && \\\n    GOOS=linux GOARCH=$ARCH go build -ldflags=\"-s -w\" && \\\n    upx /xseld/xseld && \\\n    cd /fileserver && \\\n    go test -race && \\\n    GOOS=linux GOARCH=$ARCH go build -ldflags=\"-s -w\" && \\\n    upx /fileserver/fileserver && rm -rf /var/lib/apt/lists/*;\n\n# For M1 Chromium images it's required to override a version to 18.04 as latest Ubuntu distributions don't ship updates\nFROM ubuntu:$UBUNTU_VERSION\n\nRUN \\\n    apt update && \\\n    apt remove -y libcurl4 && \\\n    apt install --no-install-recommends -y apt-transport-https ca-certificates tzdata locales libcurl4 curl gnupg && \\\n    DEBIAN_FRONTEND=noninteractive apt -y upgrade && \\\n    echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections && \\\n    echo 'UTC' | tee /etc/timezone && \\\n    dpkg-reconfigure -f noninteractive tzdata && \\\n    echo \"gtk-cursor-blink=0\" > /root/.gtkrc-2.0 && \\\n    apt update && \\\n    apt install --no-install-recommends -y ttf-mscorefonts-installer \\\n    ttf-dejavu-core \\\n    fontconfig \\\n    fontconfig-config \\\n    fonts-dejavu-core \\\n    fonts-liberation \\\n    fonts-ubuntu-font-family-console \\\n    fonts-wqy-zenhei \\\n    fonts-thai-tlwg-ttf \\\n    fonts-ipafont-mincho \\\n    fonts-sahadeva \\\n    fonts-noto-unhinted \\\n    fonts-noto-color-emoji \\\n    libfontconfig1 \\\n    libfontenc1 \\\n    libfreetype6 \\\n    libxfont2 \\\n    libxft2 \\\n    libnss3-tools \\\n    xfonts-base \\\n    xfonts-encodings \\\n    xfonts-utils \\\n    xvfb \\\n    pulseaudio \\\n    fluxbox \\\n    x11vnc \\\n    feh \\\n    wmctrl \\\n    libnss-wrapper \\\n    xsel && \\\n    if [ `uname -m` = \"amd64\" ]; then \\\n    apt install --no-install-recommends -y flashplugin-installer; fi && \\\n    mkdir -p /var/lib/locales/supported.d/ && grep UTF-8 /usr/share/i18n/SUPPORTED > /var/lib/locales/supported.d/all && \\\n    locale-gen && update-locale && \\\n    fc-cache -f -v && \\\n    adduser --system --home /home/selenium --uid 4096 \\\n    --ingroup root --disabled-password --shell /bin/bash selenium && \\\n    mkdir -p /home/selenium/Downloads && \\\n    mkdir -p /home/selenium/.fluxbox && \\\n    chgrp -R 0 /home/selenium && \\\n    chmod -R g=u /home/selenium && \\\n    ln -sf /bin/true /usr/bin/xdg-open && \\\n    apt-get clean && \\\n    rm -Rf /tmp/* && rm -Rf /var/lib/apt/lists/*\n\nCOPY fluxbox /usr/share/fluxbox/styles/\nCOPY --chown=selenium:root fluxbox /home/selenium/.fluxbox/\nCOPY aerokube.png /usr/share/images/fluxbox/\n\nCOPY --from=go /fileserver/fileserver /usr/bin/\nCOPY --from=go /xseld/xseld /usr/bin/\n"
}