{
  "startTime": 1674247902875,
  "endTime": 1674247903964,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=gcr.io/data-gpdb-public-images/gpdb6-centos7-test:latest\n\nFROM ${BASE_IMAGE}\n\nARG GO_VERSION\nARG GINKGO_VERSION\n\n# install Go utilities\nRUN mkdir -p /tmp/pxf_src/ && cd /tmp \\\n    && wget -O go.tgz -q https://go.dev/dl/go${GO_VERSION}.linux-amd64.tar.gz \\\n    && tar -C /usr/local -xzf go.tgz && rm go.tgz \\\n    && GOPATH=/opt/go /usr/local/go/bin/go install github.com/onsi/ginkgo/ginkgo@v${GINKGO_VERSION}\n\n# add Java 11\nRUN wget -q https://download.java.net/openjdk/jdk11/ri/openjdk-11+28_linux-x64_bin.tar.gz \\\n    && mkdir -p /usr/lib/jvm \\\n    && tar -C /usr/lib/jvm -xzf openjdk-11+28_linux-x64_bin.tar.gz \\\n    && rm -f openjdk-11+28_linux-x64_bin.tar.gz\n\n# add minio software\nRUN useradd -s /sbin/nologin -d /opt/minio minio \\\n    && mkdir -p /opt/minio/bin \\\n    && chmod a+rx /opt/minio \\\n    && mkdir /opt/minio/data \\\n    && wget -q https://dl.minio.io/server/minio/release/linux-amd64/minio -O /opt/minio/bin/minio \\\n    && chmod +x /opt/minio/bin/minio \\\n    && chown -R minio:minio /opt/minio\n\nARG MAVEN_VERSION=3.6.3\nARG USER_HOME_DIR=\"/root\"\nARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\n\n# install dependencies that are missing on the base images\nRUN curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n    && mkdir -p /usr/share/maven \\\n    && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n    && rm -f /tmp/apache-maven.tar.gz \\\n    && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn \\\n    && yum install -y rpm-build python-devel jq sudo && yum clean all \\\n    && cd /tmp && /usr/bin/pip install --upgrade pip==20.3.3 \\\n    && /usr/bin/pip install psi paramiko --no-cache-dir && rm -rf /var/cache/yum\n\n# create user gpadmin since GPDB cannot run under root\nRUN ssh-keygen -t rsa -N \"\" -f /root/.ssh/id_rsa \\\n    && cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys \\\n    && chmod 0600 /root/.ssh/authorized_keys \\\n    && echo -e \"password\\npassword\" | passwd 2> /dev/null \\\n    && { ssh-keyscan localhost; ssh-keyscan 0.0.0.0; } >> /root/.ssh/known_hosts \\\n    && ssh-keygen -f /etc/ssh/ssh_host_key -N '' -t rsa1 \\\n    && ssh-keygen -f /etc/ssh/ssh_host_rsa_key -N '' -t rsa \\\n    && ssh-keygen -f /etc/ssh/ssh_host_dsa_key -N '' -t dsa \\\n    && sed -i -e 's|Defaults    requiretty|#Defaults    requiretty|' /etc/sudoers \\\n    && sed -ri 's/UsePAM yes/UsePAM no/g;s/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config \\\n    && sed -ri 's@^HostKey /etc/ssh/ssh_host_ecdsa_key$@#&@;s@^HostKey /etc/ssh/ssh_host_ed25519_key$@#&@' /etc/ssh/sshd_config \\\n    && groupadd -g 6000 gpadmin && useradd -u 6000 -g 6000 gpadmin \\\n    && echo \"gpadmin  ALL=(ALL)       NOPASSWD: ALL\" > /etc/sudoers.d/gpadmin \\\n    && groupadd supergroup && usermod -a -G supergroup gpadmin \\\n    && mkdir /home/gpadmin/.ssh \\\n    && ssh-keygen -t rsa -N \"\" -f /home/gpadmin/.ssh/id_rsa \\\n    && cat /home/gpadmin/.ssh/id_rsa.pub >> /home/gpadmin/.ssh/authorized_keys \\\n    && chmod 0600 /home/gpadmin/.ssh/authorized_keys \\\n    && echo -e \"password\\npassword\" | passwd gpadmin 2> /dev/null \\\n    && { ssh-keyscan localhost; ssh-keyscan 0.0.0.0; } >> /home/gpadmin/.ssh/known_hosts \\\n    && chown -R gpadmin:gpadmin /home/gpadmin/.ssh \\\n    # configure gpadmin limits\n    && echo >> /etc/security/limits.d/gpadmin-limits.conf 'gpadmin soft core unlimited' \\\n    && echo >> /etc/security/limits.d/gpadmin-limits.conf 'gpadmin soft nproc 131072' \\\n    && echo >> /etc/security/limits.d/gpadmin-limits.conf 'gpadmin soft nofile 65536' \\\n    # add locale for testing\n    && localedef -c -i ru_RU -f CP1251 ru_RU.CP1251 \\\n    # create .pxfrc\n    && echo >> ~gpadmin/.pxfrc 'export LANG=en_US.UTF-8' \\\n    && echo >> ~gpadmin/.pxfrc 'export PGPORT=5432' \\\n    && echo >> ~gpadmin/.pxfrc 'export GOPATH=/opt/go' \\\n    && echo >> ~gpadmin/.pxfrc 'export GPHOME=$(find /usr/local/ -name greenplum-db* -type d | head -n1)' \\\n    && echo >> ~gpadmin/.pxfrc 'export LD_LIBRARY_PATH=${GPHOME}/lib:${LD_LIBRARY_PATH-}' \\\n    && echo >> ~gpadmin/.pxfrc 'export GPHD_ROOT=/singlecluster' \\\n    && echo >> ~gpadmin/.pxfrc 'export PXF_HOME=/usr/local/pxf-gp6' \\\n    && echo >> ~gpadmin/.pxfrc 'export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk' \\\n    && echo >> ~gpadmin/.pxfrc 'export PATH=${GPHOME}/bin:${PXF_HOME}/bin:${GOPATH}/bin:/usr/local/go/bin:$PATH' \\\n    && ln -s ~gpadmin/.pxfrc ~root \\\n    && echo >> ~gpadmin/.bashrc 'source ~/.pxfrc' \\\n    && chown -R gpadmin:gpadmin ~gpadmin\n"
}