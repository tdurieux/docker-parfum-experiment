{
  "startTime": 1674220686788,
  "endTime": 1674220687413,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:11.9.0 as pnpm\nENV PNPM_VERSION 4.11.6 # Control pnpm version dependency explicitly\nRUN curl -f -sL https://unpkg.com/@pnpm/self-installer | node\n\n######################\n####### BUILD ########\n######################\nFROM pnpm as dev\nWORKDIR /usr/pisa\n\n# copy the package files\nCOPY package.json ./\nCOPY ./pnpm-lock.yaml ./\nCOPY ./pnpm-workspace.yaml ./\nCOPY ./.npmrc ./\n\n# copy the src and the configs\nCOPY ./packages ./packages\nCOPY ./tsconfig*.json ./\n\n# install packages\nRUN [\"pnpm\", \"i\", \"--frozen-lockfile\"]\n\n# build\nRUN [\"pnpm\", \"-r\", \"run\", \"build\"]\n\n# create a lib directory and symlink to the one in the server packages\n# we do this to remain consistent with the file structure of the production docker image\nRUN [\"ln\", \"-s\", \"./packages/server/lib\", \"./dist\"]\n\n# expose the startup port\nEXPOSE 3000\n# start the application\n# we cant use npm run start since it causes problems with graceful exit within docker\n# see https://medium.com/@becintec/building-graceful-node-applications-in-docker-4d2cd4d5d392 for more details\nCMD [\"node\", \"./dist/index.js\"]"
}