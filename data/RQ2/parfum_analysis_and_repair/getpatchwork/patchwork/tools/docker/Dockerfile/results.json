{
  "startTime": 1674249824698,
  "endTime": 1674249825771,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghcr.io/getpatchwork/pyenv:latest\n\nARG UID\nARG GID\n\n# make sure the user has configured the '.env' file and quick fail if not\n\nRUN echo $UID; echo $GID; \\\n    [ -n \"$UID\" ] || { echo \"You must define UID in .env\" 1>&2; exit 1; }; \\\n    [ -n \"$GID\" ] || { echo \"You must define GID in .env\" 1>&2; exit 1; }\n\nARG TZ=\"Australia/Canberra\"\nENV DEBIAN_FRONTEND noninteractive\nENV PYTHONUNBUFFERED 1\nENV PROJECT_HOME /home/patchwork/patchwork\nENV DJANGO_SETTINGS_MODULE patchwork.settings.dev\n\nRUN groupadd --gid=$GID patchwork && \\\n    useradd --uid=$UID --gid=$GID --create-home patchwork\nRUN rm -f /etc/localtime; ln -s /usr/share/zoneinfo/$TZ /etc/localtime\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    libmysqlclient-dev \\\n    libpq-dev \\\n    libsqlite3-dev \\\n    mysql-client \\\n    postgresql-client \\\n    sqlite3 \\\n    tzdata \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN pip install --no-cache-dir wheel tox tox-pyenv\n\n# we deliberately leave the requirements files in /opt so we can ping the user\n# in entrypoint.sh if they change\nCOPY requirements-dev.txt requirements-test.txt /opt/\nRUN pip install --no-cache-dir -r /opt/requirements-dev.txt\n\nCOPY tools/docker/entrypoint.sh /usr/local/bin/entrypoint.sh\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nCMD [\"python3\", \"manage.py\", \"runserver\", \"0.0.0.0:8000\"]\nUSER patchwork\nWORKDIR /home/patchwork/patchwork\n"
}