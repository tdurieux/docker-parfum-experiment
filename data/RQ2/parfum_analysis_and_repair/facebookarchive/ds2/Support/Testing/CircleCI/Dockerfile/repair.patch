diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/facebookarchive/ds2/Support/Testing/CircleCI/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/facebookarchive/ds2/Support/Testing/CircleCI/Dockerfile/repaired.Dockerfile
index c8c4c03..61dda75 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/facebookarchive/ds2/Support/Testing/CircleCI/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/facebookarchive/ds2/Support/Testing/CircleCI/Dockerfile/repaired.Dockerfile
@@ -41,61 +41,61 @@ MAINTAINER Stephane Sezer <sas@fb.com>
 
 # Install apt tools
 RUN apt-get update
-RUN apt-get install -y software-properties-common python-software-properties wget
+RUN apt-get install --no-install-recommends -y software-properties-common python-software-properties wget && rm -rf /var/lib/apt/lists/*;
 
 # In case lldb needs built
-RUN apt-get install -y libz-dev swig ncurses-dev
+RUN apt-get install --no-install-recommends -y libz-dev swig ncurses-dev && rm -rf /var/lib/apt/lists/*;
 
 # Make the developer's life not suck
 RUN apt-add-repository -y ppa:neovim-ppa/stable
 RUN apt-get update -y
-RUN apt-get -y install sudo zsh tmux curl vim neovim
+RUN apt-get -y --no-install-recommends install sudo zsh tmux curl vim neovim && rm -rf /var/lib/apt/lists/*;
 
 # Debugging tools
-RUN apt-get install -y strace htop psmisc
+RUN apt-get install --no-install-recommends -y strace htop psmisc && rm -rf /var/lib/apt/lists/*;
 
 # Python 3.7 and misc
 RUN add-apt-repository -y ppa:deadsnakes/ppa
 RUN apt-get update -y
-RUN apt-get install -y python3.7
-RUN curl https://bootstrap.pypa.io/get-pip.py | python3.7
+RUN apt-get install --no-install-recommends -y python3.7 && rm -rf /var/lib/apt/lists/*;
+RUN curl -f https://bootstrap.pypa.io/get-pip.py | python3.7
 RUN python3.7 -m pip install --upgrade pip
-RUN apt-get install -y python-pip
+RUN apt-get install --no-install-recommends -y python-pip && rm -rf /var/lib/apt/lists/*;
 RUN python -m pip install --upgrade pip
 
 # Add LLVM apt repos
-RUN wget -O - "http://llvm.org/apt/llvm-snapshot.gpg.key" | apt-key add -
+RUN wget -O - "https://llvm.org/apt/llvm-snapshot.gpg.key" | apt-key add -
 RUN add-apt-repository -y "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main"
 RUN apt-get update
 
 # Install build dependencies
-RUN apt-get install -y ninja-build
-RUN apt-get install -y flex bison
+RUN apt-get install --no-install-recommends -y ninja-build && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y flex bison && rm -rf /var/lib/apt/lists/*;
 
 # Install x86 compilers
-RUN apt-get install -y g++-multilib
-RUN apt-get install -y clang-7
+RUN apt-get install --no-install-recommends -y g++-multilib && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y clang-7 && rm -rf /var/lib/apt/lists/*;
 RUN ln -s /usr/bin/clang-7 /usr/local/bin/clang
 RUN ln -s /usr/bin/clang++-7 /usr/local/bin/clang++
 
 # Install arm compilers
-RUN apt-get install -y g++-multilib-arm-linux-gnueabi
+RUN apt-get install --no-install-recommends -y g++-multilib-arm-linux-gnueabi && rm -rf /var/lib/apt/lists/*;
 
 # Install mingw compilers
-RUN apt-get install -y g++-mingw-w64-x86-64
-RUN apt-get install -y g++-mingw-w64-i686
+RUN apt-get install --no-install-recommends -y g++-mingw-w64-x86-64 && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y g++-mingw-w64-i686 && rm -rf /var/lib/apt/lists/*;
 RUN update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix
 RUN update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix
 RUN update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
 RUN update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
 
 # Install test dependencies
-RUN apt-get install -y git lldb-7 python-lldb-7 gdb clang-format-7 make dejagnu
+RUN apt-get install --no-install-recommends -y git lldb-7 python-lldb-7 gdb clang-format-7 make dejagnu && rm -rf /var/lib/apt/lists/*;
 RUN ln -s /usr/bin/lldb-7 /usr/local/bin/lldb
 RUN ln -s /usr/bin/clang-format-7 /usr/local/bin/clang-format
 
 # Install documentation dependencies
-RUN apt-get install -y doxygen graphviz
+RUN apt-get install --no-install-recommends -y doxygen graphviz && rm -rf /var/lib/apt/lists/*;
 
 # Create multilib symlink for gcc 4.9
 RUN ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/asm
@@ -103,7 +103,7 @@ RUN ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/asm
 # Install Android toolchains with our local script
 COPY Support/Scripts/common.sh /tmp
 COPY Support/Scripts/prepare-android-ndk.py /tmp
-RUN apt-get install -y unzip
+RUN apt-get install --no-install-recommends -y unzip && rm -rf /var/lib/apt/lists/*;
 RUN /tmp/prepare-android-ndk.py
 RUN ln -s /tmp/android-sdk-linux/platform-tools/adb /usr/local/bin/adb
 
@@ -112,7 +112,7 @@ COPY Support/Testing/CircleCI/install-cmake.sh /tmp
 RUN /tmp/install-cmake.sh
 
 # Install Android emulators
-RUN apt-get install -y default-jdk
+RUN apt-get install --no-install-recommends -y default-jdk && rm -rf /var/lib/apt/lists/*;
 COPY Support/Scripts/install-android-emulator.sh /tmp
 RUN /tmp/install-android-emulator.sh arm
 RUN /tmp/install-android-emulator.sh arm64