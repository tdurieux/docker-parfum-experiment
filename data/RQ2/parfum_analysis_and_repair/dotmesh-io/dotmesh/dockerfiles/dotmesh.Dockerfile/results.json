{
  "startTime": 1674252675595,
  "endTime": 1674252676924,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 15,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 25,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 25,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.12.5 AS build-env\nARG VERSION\nARG STABLE_DOCKER_TAG\nWORKDIR /usr/local/go/src/github.com/dotmesh-io/dotmesh\nCOPY ./cmd /usr/local/go/src/github.com/dotmesh-io/dotmesh/cmd\nCOPY ./pkg /usr/local/go/src/github.com/dotmesh-io/dotmesh/pkg\nCOPY ./vendor /usr/local/go/src/github.com/dotmesh-io/dotmesh/vendor\nRUN cd cmd/dotmesh-server && go install -ldflags=\"-X main.serverVersion=${VERSION}\"\nRUN cd cmd/dm && go install -ldflags=\"-s -X main.clientVersion=${VERSION} -X main.stableDockerTag=${STABLE_DOCKER_TAG}\"\nRUN cd cmd/flexvolume && go install\n\nFROM ubuntu:eoan\nENV SECURITY_UPDATES 2019-11-24a\n# (echo 'search ...') Merge kernel module search paths from CentOS and Ubuntu :-O\nRUN apt-get -y update && apt-get -y --no-install-recommends install iproute2 kmod curl && \\\n    echo 'search updates extra ubuntu built-in weak-updates' > /etc/depmod.d/ubuntu.conf && \\\n    mkdir /tmp/d && \\\n    curl -f -o /tmp/d/docker.tgz \\\n        https://download.docker.com/linux/static/stable/x86_64/docker-19.03.5.tgz && \\\n    cd /tmp/d && \\\n    tar zxfv /tmp/d/docker.tgz && \\\n    cp /tmp/d/docker/docker /usr/local/bin && \\\n    chmod +x /usr/local/bin/docker && \\\n    rm -rf /tmp/d && \\\n    cd /opt && curl -f https://get.dotmesh.io/zfs-userland/zfs-0.6.tar.gz | tar xzf - && \\\n    curl -f https://get.dotmesh.io/zfs-userland/zfs-0.7.tar.gz | tar xzf - && \\\n    curl -f https://get.dotmesh.io/zfs-userland/zfs-0.8.tar.gz | tar xzf - && rm /tmp/d/docker.tgz && rm -rf /var/lib/apt/lists/*;\nCOPY ./cmd/dotmesh-server/require_zfs.sh /require_zfs.sh\nCOPY --from=build-env /usr/local/go/bin/flexvolume /usr/local/bin/\nCOPY --from=build-env /usr/local/go/bin/dotmesh-server /usr/local/bin/\nCOPY --from=build-env /usr/local/go/bin/dm /usr/local/bin/\nCOPY ./scripts/dm-remote-add /usr/local/bin/\n"
}