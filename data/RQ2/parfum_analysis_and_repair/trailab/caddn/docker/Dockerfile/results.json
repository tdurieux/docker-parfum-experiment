{
  "startTime": 1674254166204,
  "endTime": 1674254166857,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedDockerfile": "# ==================================================================\n# module list\n# ------------------------------------------------------------------\n# python        3.8    (apt)\n# pytorch       1.4.0  (pip)\n# ==================================================================\nFROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\n\nRUN rm -rf /var/lib/apt/lists/* \\\n           /etc/apt/sources.list.d/cuda.list \\\n           /etc/apt/sources.list.d/nvidia-ml.list && \\\n    apt-get update\n# ==================================================================\n# tools\n# ------------------------------------------------------------------\nRUN apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        wget \\\n        git \\\n        vim \\\n\t\t\t\t\tnano \\\n        libx11-dev \\\n        fish \\\n        libsparsehash-dev \\\n        software-properties-common \\\n        libsm6 \\\n        libxext6 \\\n        libxrender-dev && rm -rf /var/lib/apt/lists/*;\n\n# ==================================================================\n# python\n# ------------------------------------------------------------------\nWORKDIR /CaDDN\nRUN add-apt-repository ppa:deadsnakes/ppa\nRUN apt-get update\nRUN apt-get install -y --no-install-recommends \\\n        python3.8 \\\n        python3.8-dev \\\n        python3-pip \\\n        python3-setuptools && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/python3.8 /usr/local/bin/python3\nRUN ln -s /usr/bin/python3.8 /usr/local/bin/python\nCOPY requirements.txt requirements.txt\nRUN python -m pip install --upgrade pip\nRUN python -m pip --no-cache-dir install --upgrade -r requirements.txt\n\n# ==================================================================\n# Environment\n# ------------------------------------------------------------------\n# setup environment\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\n# nvidia runtime\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu18.04 \\\n /usr/lib/x86_64-linux-gnu \\\n /usr/lib/x86_64-linux-gnu\n\nCOPY --from=nvidia/opengl:1.0-glvnd-runtime-ubuntu18.04 \\\n /usr/share/glvnd/egl_vendor.d/10_nvidia.json \\\n /usr/share/glvnd/egl_vendor.d/10_nvidia.json\n\nRUN echo '/usr/local/lib/x86_64-linux-gnu' >> /etc/ld.so.conf.d/glvnd.conf && \\\n ldconfig && \\\n echo '/usr/$LIB/libGL.so.1' >> /etc/ld.so.preload && \\\n echo '/usr/$LIB/libEGL.so.1' >> /etc/ld.so.preload\n\n# nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES ${NVIDIA_VISIBLE_DEVICES:-all}\nENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics\n\n# ==================================================================\n# File Structure\n# ------------------------------------------------------------------\nWORKDIR /CaDDN\nCOPY pcdet pcdet\nCOPY setup.py setup.py\nRUN python setup.py develop\nRUN mkdir checkpoints && mkdir data && mkdir output && mkdir tools"
}