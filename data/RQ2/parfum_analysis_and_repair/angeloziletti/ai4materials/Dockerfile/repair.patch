diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/angeloziletti/ai4materials/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/angeloziletti/ai4materials/Dockerfile/repaired.Dockerfile
index 17413a2..38a6e49 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/angeloziletti/ai4materials/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/angeloziletti/ai4materials/Dockerfile/repaired.Dockerfile
@@ -10,12 +10,12 @@ LABEL description="First image docker."
 MAINTAINER Angelo Ziletti
 
 RUN apt-get update -qq --fix-missing
-RUN apt-get install -y -qq cmake
-RUN apt-get install -y -qq libtiff5-dev
-RUN apt-get install -y -qq libfftw3-dev
-RUN apt-get install -y -qq gsl-bin
-RUN apt-get install -y -qq libgsl0-dev
-RUN apt-get install -y -qq swig
+RUN apt-get install --no-install-recommends -y -qq cmake && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y -qq libtiff5-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y -qq libfftw3-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y -qq gsl-bin && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y -qq libgsl0-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y -qq swig && rm -rf /var/lib/apt/lists/*;
 
 #ENV PY_SITE=$(python -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())")
 #ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/local/lib:${HOME}/local/lib64:${PY27_PREFIX}/lib
@@ -27,7 +27,8 @@ RUN cd $HOME
     # - export HDF5_DIR=${HOME}/hdf5-1.8.19-linux-centos7-x86_64-gcc485-shared/
     # - if [ ! -d "${HDF5_DIR}/include" ]; then wget https://support.hdfgroup.org/ftp/HDF5/current18/bin/linux-centos7-x86_64-gcc485/hdf5-1.8.19-linux-centos7-x86_64-gcc485-shared.tar.gz && tar xvzf hdf5-1.8.19-linux-centos7-x86_64-gcc485-shared.tar.gz; else echo 'Using hdf5 from cached directory'; fi
 ENV HDF5_DIR=${HOME}/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared/
-RUN if [ ! -d "${HDF5_DIR}/include" ]; then wget https://support.hdfgroup.org/ftp/HDF5/current18/bin/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gz && tar xvzf hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gz; else echo 'Using hdf5 from cached directory'; fi
+RUN if [ ! -d "${HDF5_DIR}/include" ]; then \
+ wget https://support.hdfgroup.org/ftp/HDF5/current18/bin/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gz && tar xvzf hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gz; rm hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gzelse echo 'Using hdf5 from cached directory'; fi
 
     #  - export LD_LIBRARY_PATH=${HOME}/hdf5-1.10.0-patch1-linux-centos7-x86_64-gcc485-shared/lib:${LD_LIBRARY_PATH}
 ENV LD_LIBRARY_PATH=${HDF5_DIR}/lib:${LD_LIBRARY_PATH}
@@ -37,17 +38,17 @@ RUN ls ${HDF5_DIR}/include
 RUN ls ${HDF5_DIR}/lib
 
 # install numpy and scipy
-RUN pip install numpy
-RUN pip install scipy
+RUN pip install --no-cache-dir numpy
+RUN pip install --no-cache-dir scipy
 
 # install configparser with pip (this is to make condor compatible with Python 3, which no longer has the ConfigParser module)
-RUN pip install configparser
+RUN pip install --no-cache-dir configparser
 
     # install h5py (we want an h5py that is built with the new hdf5 version, that is why)
     #  - export HDF5_DIR=${HOME}/hdf5-1.10.0-patch1-linux-centos7-x86_64-gcc485-shared/
     #  - export HDF5_DIR=${HOME}/hdf5-1.8.19-linux-centos7-x86_64-gcc485-shared/
 ENV HDF5_DIR=${HOME}/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared/
-RUN pip install h5py
+RUN pip install --no-cache-dir h5py
 
     # testing imports
 RUN python -c "import numpy; print(numpy.__file__)"
@@ -66,7 +67,8 @@ RUN cd $HOME \
 
 # install NFFT
 RUN cd $HOME
-RUN if [ ! -d "$HOME/nfft-3.2.3/include" ]; then wget https://www-user.tu-chemnitz.de/~potts/nfft/download/nfft-3.2.3.tar.gz && tar xvzf nfft-3.2.3.tar.gz; cd nfft-3.2.3 && ./configure --prefix=${HOME}/local && make && make install; else echo 'Using NFFT from cached directory'; fi
+RUN if [ ! -d "$HOME/nfft-3.2.3/include" ]; then \
+ wget https://www-user.tu-chemnitz.de/~potts/nfft/download/nfft-3.2.3.tar.gz && tar xvzf nfft-3.2.3.tar.gz; rm nfft-3.2.3.tar.gz cd nfft-3.2.3 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=${HOME}/local && make && make install; else echo 'Using NFFT from cached directory'; fi
 
     # install spsim
 RUN cd $HOME