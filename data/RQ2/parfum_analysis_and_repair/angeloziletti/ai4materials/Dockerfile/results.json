{
  "startTime": 1674249385180,
  "endTime": 1674249386242,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 173,
        "columnEnd": 207
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 158,
        "columnEnd": 220
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 128,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "#FROM jupyter/datascience-notebook\n#FROM jupyter/minimal-notebook\nFROM python:2.7\n\n# extra metadata\nLABEL version=\"0.9.0\"\nLABEL description=\"First image docker.\"\n\n#USER root\nMAINTAINER Angelo Ziletti\n\nRUN apt-get update -qq --fix-missing\nRUN apt-get install --no-install-recommends -y -qq cmake && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y -qq libtiff5-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y -qq libfftw3-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y -qq gsl-bin && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y -qq libgsl0-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y -qq swig && rm -rf /var/lib/apt/lists/*;\n\n#ENV PY_SITE=$(python -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\")\n#ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${HOME}/local/lib:${HOME}/local/lib64:${PY27_PREFIX}/lib\nENV PYTHONPATH=${HOME}/localpy:${PYTHONPATH}\n\n# install hdf5\nRUN cd $HOME\n    #  - if [ ! -d \"$HOME/hdf5-1.10.0-patch1-linux-centos7-x86_64-gcc485-shared/include\" ]; then wget https://support.hdfgroup.org/ftp/HDF5/current/bin/linux-centos7-x86_64-gcc485/hdf5-1.10.0-patch1-linux-centos7-x86_64-gcc485-shared.tar.gz && tar xvzf hdf5-1.10.0-patch1-linux-centos7-x86_64-gcc485-shared.tar.gz; else echo 'Using hdf5 from cached directory'; fi\n    # - export HDF5_DIR=${HOME}/hdf5-1.8.19-linux-centos7-x86_64-gcc485-shared/\n    # - if [ ! -d \"${HDF5_DIR}/include\" ]; then wget https://support.hdfgroup.org/ftp/HDF5/current18/bin/linux-centos7-x86_64-gcc485/hdf5-1.8.19-linux-centos7-x86_64-gcc485-shared.tar.gz && tar xvzf hdf5-1.8.19-linux-centos7-x86_64-gcc485-shared.tar.gz; else echo 'Using hdf5 from cached directory'; fi\nENV HDF5_DIR=${HOME}/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared/\nRUN if [ ! -d \"${HDF5_DIR}/include\" ]; then \\\n wget https://support.hdfgroup.org/ftp/HDF5/current18/bin/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gz && tar xvzf hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gz; rm hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared.tar.gzelse echo 'Using hdf5 from cached directory'; fi\n\n    #  - export LD_LIBRARY_PATH=${HOME}/hdf5-1.10.0-patch1-linux-centos7-x86_64-gcc485-shared/lib:${LD_LIBRARY_PATH}\nENV LD_LIBRARY_PATH=${HDF5_DIR}/lib:${LD_LIBRARY_PATH}\nRUN ls ${HOME}/\nRUN ls ${HDF5_DIR}\nRUN ls ${HDF5_DIR}/include\nRUN ls ${HDF5_DIR}/lib\n\n# install numpy and scipy\nRUN pip install --no-cache-dir numpy\nRUN pip install --no-cache-dir scipy\n\n# install configparser with pip (this is to make condor compatible with Python 3, which no longer has the ConfigParser module)\nRUN pip install --no-cache-dir configparser\n\n    # install h5py (we want an h5py that is built with the new hdf5 version, that is why)\n    #  - export HDF5_DIR=${HOME}/hdf5-1.10.0-patch1-linux-centos7-x86_64-gcc485-shared/\n    #  - export HDF5_DIR=${HOME}/hdf5-1.8.19-linux-centos7-x86_64-gcc485-shared/\nENV HDF5_DIR=${HOME}/hdf5-1.8.20-linux-centos7-x86_64-gcc485-shared/\nRUN pip install --no-cache-dir h5py\n\n    # testing imports\nRUN python -c \"import numpy; print(numpy.__file__)\"\nRUN python -c \"import scipy; print(scipy.__file__)\"\nRUN python -c \"import h5py; print(h5py.__file__)\"\n\n    # install libspimage\nRUN cd $HOME \\\n&& git clone https://github.com/FXIhub/libspimage \\\n&& mkdir -p libspimage/build && cd libspimage/build \\\n&& git pull \\\n&& cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_CUDA=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=${HDF5_DIR}/include -DHDF5_LIBRARY=${HDF5_DIR}/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/virtualenv/python${TRAVIS_PYTHON_VERSION} -DPYTHON_INSTDIR=${PY_SITE} .. \\\n&& make \\\n    #; -j 2 VERBOSE=1\n&& make install\n\n# install NFFT\nRUN cd $HOME\nRUN if [ ! -d \"$HOME/nfft-3.2.3/include\" ]; then \\\n wget https://www-user.tu-chemnitz.de/~potts/nfft/download/nfft-3.2.3.tar.gz && tar xvzf nfft-3.2.3.tar.gz; rm nfft-3.2.3.tar.gz cd nfft-3.2.3 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${HOME}/local && make && make install; else echo 'Using NFFT from cached directory'; fi\n\n    # install spsim\nRUN cd $HOME\nRUN git clone https://github.com/FXIhub/spsim\nRUN mkdir -p spsim/build && cd spsim/build\n#RUN git pull\nRUN cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DBUILD_LIBRARY=ON -DUSE_CUDA=OFF -DUSE_NFFT=OFF -DPYTHON_WRAPPERS=ON -DHDF5_INCLUDE_DIR=${HDF5_DIR}/include -DHDF5_LIBRARY=${HDF5_DIR}/lib/libhdf5.so -DCMAKE_INSTALL_PREFIX=${HOME}/virtualenv/python${TRAVIS_PYTHON_VERSION} -DPYTHON_INSTDIR=${PY_SITE}  ..\nRUN make VERBOSE=1\nRUN make install\nRUN ls -alh $HOME/local/lib\n\n    # install condor\nRUN cd $HOME\nRUN git clone https://github.com/FXIhub/condor.git\nRUN cd condor\nRUN python setup.py install --nfft-include-dir=$HOME/local/include --nfft-library-dir=$HOME/local/lib\n\n    # --------- end condor and condor installation dependencies --------------------#\n\n#    - cd $CI_PROJECT_DIR\n#    - pip install -e .\n#    - mkdir $HOME/dependencies\n#    - cd $HOME/dependencies\n#    - git clone https://gitlab.mpcdf.mpg.de/nomad-lab/python-common.git\n#    - cd python-common\n#    - pip install -r requirements.txt\n#    - pip install -e .\n#    - cd ../\n#    #- git clone https://gitlab.mpcdf.mpg.de/nomad-lab/atomic-data.git\n#    #- cd atomic-data\n#    #- pip install -e .\n#    #- cd $HOME\n#\n#  script:\n#    # manually install ai4materials deps\n#    #- pip install numpy scipy matplotlib flask psycopg2-binary\n#    # extra packages for testing\n#    # using \"install from source\" instructions\n#    #- export PATH=$PATH:$CI_PROJECT_DIR/bin\n#    #- echo $PATH\n#    #- export PYTHONPATH=$CI_PROJECT_DIR\n#    #- echo $PYTHONPATH\n#    # tests\n#    #- pip install -e .\n#    - python --version\n#    - pip freeze\n#    - pip install pyflakes\n#    - cd $CI_PROJECT_DIR\n#    - nosetests -v --nocapture --logging-level=INFO --cover-package=ai4materials --with-coverage\n#    - pyflakes ai4materials\n\n\n#RUN apt-get update --fix-missing \\\n#&& apt-get install -y libpng-dev \\\n##&& apt-get install -y libtiff5-dev \\\n#&& apt-get install -y libfftw3-dev \\\n#&& apt-get install -y libhdf5-serial-dev \\\n#&& apt-get install -y cmake \\\n#&& apt-get install -y gsl-bin \\\n#&& apt-get install -y libgsl0-dev \\\n#&& apt-get install -y swig\n#\n#\n#RUN export PY_SITE=$(python -c \"from distutils.sysconfig import get_python_lib; print(get_python_lib())\")\n#\n#ENV PATH=\"/opt/conda/bin:${PATH}\"\n#ENV PYTHONPATH=\"/opt/conda/:${PYTHONPATH}\"\n#\n#ENV HDF5_LIBRARY=\"/opt/conda/lib/libhdf5.so\"\n#ENV HDF5_INCLUDE_DIR=\"/opt/conda/include\"\n#\n#\n#RUN pip install numpy\n#RUN pip install scipy\n#RUN pip install h5py\n#\n##RUN mkdir -p /root/Sources\n##RUN cd /root/Sources\n##RUN git clone https://github.com/FilipeMaia/libspimage.git && cd libspimage\n##RUN mkdir build && cd build && cmake -DCMAKE_VERBOSE_MAKEFILE=ON -DUSE_CUDA=OFF -DPYTHON_WRAPPERS=ON ..\n#\n#\n#RUN mkdir -p /root/Sources && cd /root/Sources \\\n#&& git clone https://github.com/FilipeMaia/libspimage.git && cd libspimage && mkdir build && cd build \\\n#&& cmake -DHDF5_LIBRARY=HDF5_LIBRARY -DHDF5_INCLUDE_DIR=HDF5_INCLUDE_DIR .. \\\n#&& make && make install && cd .. && rm -rf libspimage \\\n"
}