{
  "startTime": 1674216279607,
  "endTime": 1674216279961,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 34,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "# https://docs.docker.com/engine/userguide/eng-image/multistage-build/\nFROM gobuffalo/buffalo:v0.14.8 as builder\n\nRUN mkdir -p $GOPATH/src/episode29\nWORKDIR $GOPATH/src/episode29\n\n# this will cache the npm install step, unless package.json changes\nADD package.json .\nADD yarn.lock .\nRUN yarn install --no-progress && yarn cache clean;\nADD . .\nENV GO111MODULES=on\nRUN go get ./...\nRUN buffalo build --static -o /bin/app\n\nFROM alpine\nRUN apk add --no-cache bash\nRUN apk add --no-cache ca-certificates\n\nWORKDIR /bin/\n\nCOPY --from=builder /bin/app .\n\n# Uncomment to run the binary in \"production\" mode:\n# ENV GO_ENV=production\n\n# Bind the app to 0.0.0.0 so it can be seen from outside the container\nENV ADDR=0.0.0.0\n\nEXPOSE 3000\n\n# Uncomment to run the migrations before running the binary:\n# CMD /bin/app migrate; /bin/app\nCMD exec /bin/app\n"
}