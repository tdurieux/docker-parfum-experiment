{
  "startTime": 1674251157710,
  "endTime": 1674251158463,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for making Algernon serve HTTP on port 80 and HTTPS+HTTP/2 on port 443\nFROM golang:alpine as gobuilder\nMAINTAINER Alexander F. RÃ¸dseth <xyproto@archlinux.org>\n\n# Prepare the needed files\nCOPY . /algernon\nWORKDIR /algernon\n\n# Build Algernon\nRUN GOOS=linux \\\n    GOARCH=amd64 \\\n    CGO_ENABLED=0 \\\n    go build \\\n      -mod=vendor \\\n      -a \\\n      -trimpath \\\n      -installsuffix cgo \\\n      -ldflags=\"-w -s\" \\\n      -o /bin/algernon\n\nRUN apk add --no-cache upx && upx /bin/algernon\n\n# Start from scratch, only copy in the Algernon executable\nFROM scratch\nCOPY --from=gobuilder /bin/algernon /bin/algernon\n\n# Prepare directories\nCOPY --from=gobuilder /tmp /tmp\nVOLUME /srv/algernon\nVOLUME /etc/algernon\nWORKDIR /srv/algernon\n\n# Expose ports for HTTP and HTTPS\nEXPOSE 80 443\n\n# -c assumes no files will be added or removed, for a slight increase in speed\n# --domain makes Algernon look for a folder named the same as the domain it serves\n# --server turns off interactive and debug mode\n# --cachesize sets a file cache size, in bytes\n# --prod makes Algernon serve HTTP on port 80 and HTTPS+HTTP/2 on port 443\n# --cert and --key is for setting the HTTPS certificate\n#\n# Other parameters that might be of interest is \"--addr\", \":3000\" together with\n# \"--server\" but without \"--prod\" for serving only HTTP on port 3000\n#\n# \"--log\", \"/var/log/algernon.log\" can be used for logging errors\n#\n# The final parameter is the directory to serve, for instance /srv/algernon\n#\nENTRYPOINT [\"/bin/algernon\", \"-c\", \"--domain\", \"--server\", \"--cachesize\", \"67108864\", \"--prod\", \"--cert\", \"/etc/algernon/cert.pem\", \"--key\", \"/etc/algernon/key.pem\", \"/srv/algernon\"]\nCMD [\"/bin/algernon\"]\n"
}