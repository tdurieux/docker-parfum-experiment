{
  "startTime": 1674255310983,
  "endTime": 1674255311998,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 141,
        "lineEnd": 162,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 141,
        "lineEnd": 162,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 141,
        "lineEnd": 162,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 174,
        "lineEnd": 174,
        "columnStart": 7,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -*- coding: utf-8 -*-\n#\n#    LinOTP - the open source solution for two factor authentication\n#    Copyright (C) 2016 - 2019 KeyIdentity GmbH\n#\n#    This file is part of LinOTP server.\n#\n#    This program is free software: you can redistribute it and/or\n#    modify it under the terms of the GNU Affero General Public\n#    License, version 3, as published by the Free Software Foundation.\n#\n#    This program is distributed in the hope that it will be useful,\n#    but WITHOUT ANY WARRANTY; without even the implied warranty of\n#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n#    GNU Affero General Public License for more details.\n#\n#    You should have received a copy of the\n#               GNU Affero General Public License\n#    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n#\n#\n#    E-mail: linotp@keyidentity.com\n#    Contact: www.linotp.org\n#    Support: www.keyidentity.com\n#\n#\n# LinOTP Docker build script\n\nARG BASE_IMAGE=debian:buster\nFROM $BASE_IMAGE\n\nARG DEBIAN_MIRROR=deb.debian.org\nARG DEPENDENCY_DEB_REPO\nARG DEPENDENCY_GPG_KEYID\nARG DEPENDENCY_GPG_KEY_URL\n\n# The following environment variables can be set to\n# configure the runtime behaviour of the container.\n# Most of these should be self explanitory.\n#\n# To disable HTTP authentication for the manage UI,\n# set LINOTP_APACHE_AUTH=false.\n#\n# LINOTP_SESSION_COOKIE_SECURE governs whether LinOTP's\n# session cookies should be marked \"secure\" at the HTTP\n# level, in which case they will not be transmitted over\n# plain HTTP (rather than HTTPS) connections. The default\n# value is \"true\", which applies if you're accessing LinOTP\n# via HTTPS (as you should) or via HTTP behind a reverse\n# proxy which does HTTPS termination (such as Traefik).\n# Set the parameter to \"false\" ONLY if you're running LinOTP\n# over HTTP (which you most emphatically should NOT do\n# except for experiments; consider yourself warned).\n#\n# To use a database server:\n#  LINOTP_DATABASE_URI=<sqlalchemy url>\n#\n# In order to wait for a database service to start,\n# set LINOTP_DB_HOST and LINOTP_DB_PORT to point\n# to the port that should be waited for. The default\n# wait time is 30s, and can be overriden using\n# LINOTP_DB_WAITTIME.\n#\n# Unencrypted healthchecks can be performed by\n# checking http://HOSTNAME:81/validate/ok\n#\n# To send LinOTP logs directly to\n# Logstash, set LOGSTASH_HOST and\n# LOGSTASH_PORT to point to your\n# Logstash collector. You can optionally\n# add additional tags with the\n# LOGSTASH_TAGS setting. This is a Python\n# list. For example:\n#   LOGSTASH_HOST=logstash1\n#   LOGSTASH_PORT=5000\n#   LOGSTASH_TAGS=('instance1', 'server1')\n#\n# To change the location of the database\n# encryption key file, set\n#   SECRET_FILE_LOCATION=/path/to/encKey\n#\n# To add ssl certificates that LDAP should\n# trust, set SSL_TRUSTED_CERT to the\n# contents of the certificate\n\nENV TZ=\"Europe/Berlin\" \\\n    LINOTP_USER=linotp \\\n    LINOTP_DATABASE_URI=sqlite:////var/lib/linotp/linotp.db \\\n    LINOTP_DB_HOST= \\\n    LINOTP_DB_PORT=3306 \\\n    LINOTP_DB_WAITTIME=30s \\\n    LINOTP_ADMIN_USER=admin \\\n    LINOTP_ADMIN_PASSWORD=admin \\\n    LINOTP_APACHE_AUTH=true \\\n    LINOTP_APACHE_SSL=true \\\n    LINOTP_APACHE_HSTS=true \\\n    LINOTP_SESSION_COOKIE_SECURE=true \\\n    LINOTP_LOGGING_LEVEL=INFO \\\n    LINOTP_LOGGING_FILE_LEVEL=INFO \\\n    LINOTP_LOGGING_CONSOLE_LEVEL=INFO \\\n    SQLALCHEMY_LOGGING_LEVEL=ERROR \\\n    APACHE_LOGLEVEL=info \\\n    LOGSTASH_HOST= \\\n    LOGSTASH_PORT= \\\n    LOGSTASH_TAGS=() \\\n    SECRET_FILE_LOCATION= \\\n    SSL_TRUSTED_CERT=\n\n# Internal environment variables used by the docker images\nENV LINOTP_CFG_TEMPLATE=/etc/linotp/linotp-docker.cfg.tmpl \\\n    LINOTP_HOME=/opt/linotp \\\n    DEBIAN_FRONTEND=noninteractive \\\n    FLASK_APP=linotp.app \\\n    FLASK_ENV=production\n\nRUN echo 'APT::Install-Recommends \"0\"; \\n\\\n            APT::Get::Assume-Yes \"true\"; \\n\\\n            APT::Install-Suggests \"0\";' \\\n            > /etc/apt/apt.conf.d/01buildconfig \\\n    && sed -i \"s#http://deb\\.debian\\.org/#http://${DEBIAN_MIRROR}/#\" \\\n        /etc/apt/sources.list\n\n# Use eatmydata to speed up apt-get and pip operations\nRUN apt-get update && apt-get install -y --no-install-recommends eatmydata \\\n    && for F in apt-get pip3; do ln -s /usr/bin/eatmydata /usr/local/bin/$F; done \\\n    && apt-get install -y --no-install-recommends curl gnupg && rm -rf /var/lib/apt/lists/*;\n# Add LinOTP packaging key to keyring in order to install\n# dependencies\nRUN test -z \"$DEPENDENCY_DEB_REPO\" \\\n    || (echo \"deb $DEPENDENCY_DEB_REPO\" > /etc/apt/sources.list.d/linotp-deps.list \\\n    && cat /etc/apt/sources.list.d/linotp-deps.list)\nRUN test -z \"$DEPENDENCY_GPG_KEYID\" \\\n    || apt-key adv --keyserver hkp://hkps.pool.sks-keyservers.net --recv-keys $DEPENDENCY_GPG_KEYID\nRUN test -z \"$DEPENDENCY_GPG_KEY_URL\" \\\n    || curl -f $DEPENDENCY_GPG_KEY_URL | apt-key adv --import\n\n# Install package dependencies\n# - Those needed for building / administration of a Docker based linotp (first line)\n# - linotp dependencies, for caching purposes. This does not\n#   need to be an exhaustive list because apt will install any\n#   missing packages when the linotp deb is installed further on.\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        make mariadb-client locales \\\n        adduser debconf openssl pwgen python3-configobj \\\n        python3-beaker python3-passlib python3-cryptography python3-bcrypt python3-pygments \\\n        python3-decorator python3-docutils \\\n        python3-flask-babel python3-formencode python3-httplib2 \\\n        python3-jsonschema \\\n        python3-ldap python3-mako python3-mysqldb python3-netaddr \\\n        python3-pycryptodome \\\n        python3-pyrad python3-qrcode python3-routes \\\n        python3-sqlalchemy python3-flask-sqlalchemy \\\n\tpython3-smpplib \\\n        apache2 libapache2-mod-wsgi-py3 \\\n        python3-pysodium python3-requests \\\n        python3-setuptools python3-usb \\\n        distro-info-data \\\n        libjs-jquery \\\n        lsb-release \\\n        dh-python \\\n        python3-flask \\\n        python3-psycopg2 python3-pymysql \\\n        python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Install linotp packages from local files.\nCOPY apt /opt/linotp/apt\n\nRUN echo \"linotp linotp/apache/activate boolean true\" > /opt/linotp/apt/debconf-selections \\\n    && echo \"linotp linotp/apache/ssl_create boolean true\" >> /opt/linotp/apt/debconf-selections \\\n    && echo \"linotp linotp/dbconfig-install boolean false\" >> /opt/linotp/apt/debconf-selections \\\n    && debconf-set-selections /opt/linotp/apt/debconf-selections \\\n    && echo \"deb [trusted=yes] file:/opt/linotp/apt ./\" > /etc/apt/sources.list.d/linotp-local.list \\\n    && (echo \"Package: *\"; echo \"Pin: origin \\\"\\\"\"; echo \"Pin-Priority: 900\") > /etc/apt/preferences.d/linotp \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends linotp linotp-selfservice \\\n    && rm /etc/apt/sources.list.d/linotp-local.list \\\n    && rm -r /opt/linotp/apt /etc/apache2/sites-enabled/000-default.conf \\\n    && rm /etc/linotp/encKey /etc/linotp/*.pem \\\n    && mkdir -p /etc/ssl/private /etc/ssl/certs \\\n    && chown linotp /var/log/linotp && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR $LINOTP_HOME\n\n# Get dockerfy and configuration template files from build context\nCOPY *.tmpl /etc/linotp/\nCOPY dockerfy /usr/local/bin/\n# Initialisation scripts directory\nCOPY docker-initscripts.d /etc/linotp/docker-init.d/\nRUN chmod 755 /etc/linotp/docker-init.d/*\n\nENTRYPOINT [ \"/usr/local/bin/dockerfy\", \\\n    \"--run\", \"/bin/run-parts\", \"--verbose\", \"--exit-on-error\", \"/etc/linotp/docker-init.d\", \"--\" \\\n]\n\nCMD [ \\\n    \"/usr/sbin/apache2ctl\", \"-DFOREGROUND\" \\\n]\n\nCOPY ./se_mypasswd /etc/se_mypasswd\n\n# Listen on apache port (https 443 by default - see LINOTP_APACHE_SSL and APACHE_PORT)\nEXPOSE 80 81 443\n"
}