{
  "startTime": 1674215587023,
  "endTime": 1674215588191,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 186
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 30,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Debian Jessie.\nFROM debian@sha256:32ad5050caffb2c7e969dac873bce2c370015c2256ff984b70c1c08b3a2816a0\nMAINTAINER Gregory Szorc <gregory.szorc@gmail.com>\n\nRUN groupadd -g 1000 build && \\\n    useradd -u 1000 -g 1000 -d /build -s /bin/bash -m build && \\\n    mkdir /tools && \\\n    chown -R build:build /build /tools\n\nENV HOME=/build \\\n    SHELL=/bin/bash \\\n    USER=build \\\n    LOGNAME=build \\\n    HOSTNAME=builder \\\n    DEBIAN_FRONTEND=noninteractive\n\nCMD [\"/bin/bash\", \"--login\"]\nWORKDIR '/build'\n\nRUN for s in debian_jessie debian_jessie-updates debian-security_jessie/updates; do \\\n      echo \"deb http://snapshot.debian.org/archive/${s%_*}/20220429T205342Z/ ${s#*_} main\"; \\\n    done > /etc/apt/sources.list && \\\n    ( echo 'quiet \"true\";'; \\\n      echo 'APT::Get::Assume-Yes \"true\";'; \\\n      echo 'APT::Install-Recommends \"false\";'; \\\n      echo 'Acquire::Check-Valid-Until \"false\";'; \\\n      echo 'Acquire::Retries \"5\";'; \\\n    ) > /etc/apt/apt.conf.d/99builder\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  ca-certificates \\\n  curl \\\n  file \\\n  gcc \\\n  gcc-multilib \\\n  make \\\n  musl-tools \\\n  xz-utils && rm -rf /var/lib/apt/lists/*;\n\n# We use `curl --insecure` throughout this file. This is reasonably safe since\n# we validate the SHA-256 of all downloaded files to prevent tampering.\n\n# The binutils is Jessie is too old to link the python-build-standalone distributions\n# due to a R_X86_64_REX_GOTPCRELX relocation. So install a newer binutils.\nRUN curl -f --insecure https://ftp.gnu.org/gnu/binutils/binutils-2.36.1.tar.xz > binutils.tar.xz && \\\n  echo 'e81d9edf373f193af428a0f256674aea62a9d74dfe93f65192d4eae030b0f3b0  binutils.tar.xz' | sha256sum -c - && \\\n  tar -xf binutils.tar.xz && \\\n  rm binutils.tar.xz && \\\n  mkdir binutils-objdir && \\\n  cd binutils-objdir && \\\n  ../binutils-2.36.1/configure \\\n    --build=x86_64-unknown-linux-gnu \\\n    --prefix=/usr/local \\\n    --enable-plugins \\\n    --disable-nls \\\n    --with-sysroot=/ && \\\n  make -j `nproc` && \\\n  make install -j `nproc` && \\\n  cd .. && \\\n  rm -rf binutils-objdir\n\nUSER build\n\nRUN curl -f --insecure https://raw.githubusercontent.com/rust-lang/rustup/ce5817a94ac372804babe32626ba7fd2d5e1b6ac/rustup-init.sh > rustup-init.sh && \\\n  echo 'a3cb081f88a6789d104518b30d4aa410009cd08c3822a1226991d6cf0442a0f8  rustup-init.sh' | sha256sum -c - && \\\n  chmod +x rustup-init.sh && \\\n  ./rustup-init.sh -y --default-toolchain 1.61.0 --profile minimal && \\\n  ~/.cargo/bin/rustup target add x86_64-unknown-linux-musl\n\nRUN curl -f --insecure -L https://github.com/indygreg/python-build-standalone/releases/download/20220502/cpython-3.9.12+20220502-x86_64-unknown-linux-gnu-install_only.tar.gz > python.tar.gz && \\\n  echo 'ccca12f698b3b810d79c52f007078f520d588232a36bc12ede944ec3ea417816  python.tar.gz' | sha256sum -c - && \\\n  tar -xf python.tar.gz && \\\n  rm python.tar.gz && \\\n  echo 'export PATH=\"$HOME/python/bin:$PATH\"' >> ~/.bashrc\n\n# Force a snapshot of the Cargo index into the image. This should hopefully\n# speed up subsequent operations needing to fetch the index.\nRUN ~/.cargo/bin/cargo init cargo-fetch && \\\n  cd cargo-fetch && \\\n  echo 'pyembed = \"0\"' >> Cargo.toml && \\\n  ~/.cargo/bin/cargo update && \\\n  cd && \\\n  rm -rf cargo-fetch\n"
}