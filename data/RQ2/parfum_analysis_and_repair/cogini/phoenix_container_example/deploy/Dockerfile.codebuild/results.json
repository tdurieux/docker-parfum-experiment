{
  "startTime": 1674250081878,
  "endTime": 1674250082980,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 166
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 134,
        "lineEnd": 134,
        "columnStart": 7,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 7,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 106,
        "lineEnd": 123,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 143,
        "lineEnd": 155,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 106,
        "lineEnd": 123,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 143,
        "lineEnd": 155,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 106,
        "lineEnd": 123,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 143,
        "lineEnd": 155,
        "columnStart": 7,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Create custom build image for CodeBuild with latest Docker\n# so we can use BuildKit\n#\n# It takes advantage of caching and parallel build support in BuildKit.\n#\n# The \"syntax\" line must be the first thing in the file, as it enables the\n# new syntax for caching, etc. see\n# https://docs.docker.com/develop/develop-images/build_enhancements/\n# https://github.com/moby/buildkit/blob/master/frontend/dockerfile/docs/experimental.md\n\nARG DOCKER_COMPOSE_VERSION=1.27.4\nARG EARTHLY_VERSION=v0.5.5\nARG AWS_CLI_VERSION=2.0.61\n\nARG BASE_IMAGE=ubuntu\nARG BASE_IMAGE_TAG=focal\n\n# Docker registry for base images, default is docker.io\n# If specified, should have a trailing slash\nARG REGISTRY=\"\"\n\n# Make apt-get be quiet\nARG DEBIAN_FRONTEND=noninteractive\nARG APT_OPTS=\"-y -qq -o=Dpkg::Use-Pty=0 --no-install-recommends\"\nARG APT_OPTS_UPDATE=\"-qq\"\n\n##########################################################################\n# Stage binary installer files\n\nFROM ${REGISTRY}${BASE_IMAGE}:${BASE_IMAGE_TAG} AS installer\n\nARG DEBIAN_FRONTEND\nARG APT_OPTS\nARG APT_OPTS_UPDATE\nARG AWS_CLI_VERSION\nARG DOCKER_COMPOSE_VERSION\nARG EARTHLY_VERSION\n\n# Install AWS CLI v2 from binary package\n# https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux.html\n\n# Configure apt caching for use with BuildKit\nRUN set -exu \\\n    && rm -f /etc/apt/apt.conf.d/docker-clean \\\n    && echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache \\\n    && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression\n\nRUN --mount=type=cache,id=apt-cache,target=/var/cache/apt,sharing=locked \\\n    --mount=type=cache,id=apt-lib,target=/var/lib/apt,sharing=locked \\\n    --mount=type=cache,id=debconf,target=/var/cache/debconf,sharing=locked \\\n    set -exu \\\n    && apt-get update $APT_OPTS_UPDATE \\\n    # Avoid warnings\n    # && apt-get install $APT_OPTS dialog apt-utils \\\n    # Enable installation of packages over https\n    && apt-get install $APT_OPTS \\\n        # apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        # gnupg-agent \\\n        # software-properties-common \\\n        # gnupg \\\n        unzip \\\n  && rm -rf /var/lib/dpkg \\\n  && curl https://awscli.amazonaws.com/awscli-exe-linux-$(uname -m)-${AWS_CLI_VERSION}.zip -o awscliv2.zip \\\n  && unzip awscliv2.zip && \\\n  # Specify --bin-dir so we can copy the entire bin directory into\n  # /usr/local/bin of the final stage without accidentally copying over any\n  # other executables that may be present in /usr/local/bin of the installer stage.\n  && ./aws/install --bin-dir /aws-cli-bin/\n\n# Add docker-compose\nRUN set -exu \\\n    && curl -f -L \"https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \\\n    && chmod +x /usr/local/bin/docker-compose\n\nRUN set -exu \\\n    && curl -f -L \"https://github.com/earthly/earthly/releases/download/${EARTHLY_VERSION}/earthly-linux-amd64\" -o /usr/local/bin/earthly \\\n    && chmod +x /usr/local/bin/earthly\n\n##########################################################################\n# Create build image\n\nFROM ${REGISTRY}${BASE_IMAGE}:${BASE_IMAGE_TAG}\n\nARG DEBIAN_FRONTEND\nARG APT_OPTS\nARG APT_OPTS_UPDATE\n\n# Configure apt caching for use with BuildKit\nRUN set -exu \\\n    && echo 'Acquire::CompressionTypes::Order:: \"gz\";' > /etc/apt/apt.conf.d/99use-gzip-compression \\\n    && rm -f /etc/apt/apt.conf.d/docker-clean \\\n    && echo 'Binary::apt::APT::Keep-Downloaded-Packages \"true\";' > /etc/apt/apt.conf.d/keep-cache\n\n# Basic APT stuff\nRUN --mount=type=cache,id=apt-cache,target=/var/cache/apt,sharing=locked \\\n    --mount=type=cache,id=apt-lib,target=/var/lib/apt,sharing=locked \\\n    --mount=type=cache,id=debconf,target=/var/cache/debconf,sharing=locked \\\n    set -exu \\\n    && apt-get update $APT_OPTS_UPDATE \\\n    # Avoid warnings \\\n    && apt-get install -y --no-install-recommends $APT_OPTS dialog apt-utils \\\n    # Enable installation of packages over https\n    && apt-get install -y --no-install-recommends $APT_OPTS \\\n        apt-transport-https \\\n        ca-certificates \\\n        curl \\\n        gnupg \\\n        gnupg-agent \\\n\n        lsb-release \\\n\n\n        binfmt-support \\\n        qemu-user-static \\\n\n\n        python3-dev \\\n        python3-minimal \\\n        python3-pip \\\n        python3-setuptools && rm -rf /var/lib/apt/lists/*;\n\n# Install Docker\n# https://docs.docker.com/engine/install/ubuntu/\n\nRUN --mount=type=cache,id=apt-cache,target=/var/cache/apt,sharing=locked \\\n    --mount=type=cache,id=apt-lib,target=/var/lib/apt,sharing=locked \\\n    --mount=type=cache,id=debconf,target=/var/cache/debconf,sharing=locked \\\n    set -exu \\\n    # Add Docker repo\n    # && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -qq - \\\n    && curl -f -sL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/trusted.gpg.d/docker.asc \\\n    && echo \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \\\n\n    # Add Trivy security scanner repo\n    # https://github.com/aquasecurity/trivy\n    && curl -f -sL https://aquasecurity.github.io/trivy-repo/deb/public.key -o /etc/apt/trusted.gpg.d/trivy.asc \\\n    && echo \"deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main\" | tee -a /etc/apt/sources.list.d/trivy.list \\\n\n    && apt-get update $APT_OPTS_UPDATE \\\n    && apt-get install -y --no-install-recommends $APT_OPTS \\\n        # Docker\n        docker-ce \\\n        docker-ce-cli \\\n        containerd.io \\\n\n        # Use ecr-credential-helper to access ECR repos\n        # https://github.com/awslabs/amazon-ecr-credential-helper\n        # This package is not in Ubuntu 18.04, it requires a newer release\n        amazon-ecr-credential-helper \\\n\n        # Trivy\n        trivy \\\n\n    # Grype\n    # https://github.com/anchore/grype\n    && curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin && rm -rf /var/lib/apt/lists/*;\n\n# Install latest AWS CLI using pip\n# RUN --mount=type=cache,id=pip,target=/root/.cache/pip \\\n#     set -exu \\\n#     && python3 -m pip install wheel \\\n#     && python3 -m pip install awscli\n\n# Install AWS CLI 2.0 from binary package\nCOPY --from=installer /usr/local/aws-cli/ /usr/local/aws-cli/\nCOPY --from=installer /aws-cli-bin/ /usr/local/bin/\n\nCOPY --from=installer /usr/local/bin/docker-compose /usr/local/bin/docker-compose\nCOPY --from=installer /usr/local/bin/earthly /usr/local/bin/earthly\n\n# RUN set -ex \\\n#     && mkdir -p /root/.docker \\\n#     && echo '{\"credsStore\": \"ecr-login\"}'> /root/.docker/config.json\n"
}