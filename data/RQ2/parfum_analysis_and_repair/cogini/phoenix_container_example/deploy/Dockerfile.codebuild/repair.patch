diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cogini/phoenix_container_example/deploy/Dockerfile.codebuild b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cogini/phoenix_container_example/deploy/Dockerfile.codebuild/repaired.Dockerfile
index 0f8295a..7e78796 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cogini/phoenix_container_example/deploy/Dockerfile.codebuild
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cogini/phoenix_container_example/deploy/Dockerfile.codebuild/repaired.Dockerfile
@@ -1,4 +1,3 @@
-# syntax=docker/dockerfile:experimental
 #
 # Create custom build image for CodeBuild with latest Docker
 # so we can use BuildKit
@@ -73,11 +72,11 @@ RUN --mount=type=cache,id=apt-cache,target=/var/cache/apt,sharing=locked \
 
 # Add docker-compose
 RUN set -exu \
-    && curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
+    && curl -f -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
     && chmod +x /usr/local/bin/docker-compose
 
 RUN set -exu \
-    && curl -L "https://github.com/earthly/earthly/releases/download/${EARTHLY_VERSION}/earthly-linux-amd64" -o /usr/local/bin/earthly \
+    && curl -f -L "https://github.com/earthly/earthly/releases/download/${EARTHLY_VERSION}/earthly-linux-amd64" -o /usr/local/bin/earthly \
     && chmod +x /usr/local/bin/earthly
 
 ##########################################################################
@@ -101,27 +100,27 @@ RUN --mount=type=cache,id=apt-cache,target=/var/cache/apt,sharing=locked \
     --mount=type=cache,id=debconf,target=/var/cache/debconf,sharing=locked \
     set -exu \
     && apt-get update $APT_OPTS_UPDATE \
-    # Avoid warnings
-    && apt-get install $APT_OPTS dialog apt-utils \
+    # Avoid warnings \
+    && apt-get install -y --no-install-recommends $APT_OPTS dialog apt-utils \
     # Enable installation of packages over https
-    && apt-get install $APT_OPTS \
+    && apt-get install -y --no-install-recommends $APT_OPTS \
         apt-transport-https \
         ca-certificates \
         curl \
         gnupg \
         gnupg-agent \
-        # software-properties-common \
+
         lsb-release \
 
-        # Arm emulation
+
         binfmt-support \
         qemu-user-static \
 
-        # Needed to install aws cli from pip
+
         python3-dev \
         python3-minimal \
         python3-pip \
-        python3-setuptools
+        python3-setuptools && rm -rf /var/lib/apt/lists/*;
 
 # Install Docker
 # https://docs.docker.com/engine/install/ubuntu/
@@ -132,16 +131,16 @@ RUN --mount=type=cache,id=apt-cache,target=/var/cache/apt,sharing=locked \
     set -exu \
     # Add Docker repo
     # && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -qq - \
-    && curl -sL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/trusted.gpg.d/docker.asc \
+    && curl -f -sL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/trusted.gpg.d/docker.asc \
     && echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list \
 
     # Add Trivy security scanner repo
     # https://github.com/aquasecurity/trivy
-    && curl -sL https://aquasecurity.github.io/trivy-repo/deb/public.key -o /etc/apt/trusted.gpg.d/trivy.asc \
+    && curl -f -sL https://aquasecurity.github.io/trivy-repo/deb/public.key -o /etc/apt/trusted.gpg.d/trivy.asc \
     && echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | tee -a /etc/apt/sources.list.d/trivy.list \
 
     && apt-get update $APT_OPTS_UPDATE \
-    && apt-get install $APT_OPTS \
+    && apt-get install -y --no-install-recommends $APT_OPTS \
         # Docker
         docker-ce \
         docker-ce-cli \
@@ -157,7 +156,7 @@ RUN --mount=type=cache,id=apt-cache,target=/var/cache/apt,sharing=locked \
 
     # Grype
     # https://github.com/anchore/grype
-    && curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
+    && curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin && rm -rf /var/lib/apt/lists/*;
 
 # Install latest AWS CLI using pip
 # RUN --mount=type=cache,id=pip,target=/root/.cache/pip \