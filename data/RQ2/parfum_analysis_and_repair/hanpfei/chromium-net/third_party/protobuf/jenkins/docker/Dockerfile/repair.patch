diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hanpfei/chromium-net/third_party/protobuf/jenkins/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hanpfei/chromium-net/third_party/protobuf/jenkins/docker/Dockerfile/repaired.Dockerfile
index 8467aef..f3a7c97 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hanpfei/chromium-net/third_party/protobuf/jenkins/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hanpfei/chromium-net/third_party/protobuf/jenkins/docker/Dockerfile/repaired.Dockerfile
@@ -25,7 +25,7 @@ run echo "deb http://download.mono-project.com/repo/debian wheezy main" | tee /e
 
 # Install dependencies.  We start with the basic ones require to build protoc
 # and the C++ build
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   autoconf \
   autotools-dev \
   build-essential \
@@ -64,7 +64,7 @@ RUN apt-get update && apt-get install -y \
   python3.4-dev \
   # -- For Ruby --
   ruby \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 ##################
 # C# dependencies
@@ -77,15 +77,15 @@ RUN wget www.nuget.org/NuGet.exe -O /usr/local/bin/nuget.exe
 # These packages exist in apt-get, but their versions are too old, so we have
 # to get updates from pip.
 
-RUN pip install pip --upgrade
-RUN pip install virtualenv tox yattag
+RUN pip install --no-cache-dir pip --upgrade
+RUN pip install --no-cache-dir virtualenv tox yattag
 
 
 ##################
 # Ruby dependencies
 
 # Install rvm
-RUN gpg --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
+RUN gpg --batch --keyserver hkp://keys.gnupg.net --recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3
 RUN \curl -sSL https://get.rvm.io | bash -s stable
 
 # Install Ruby 2.1
@@ -108,7 +108,7 @@ RUN cd /tmp && \
   git clone https://github.com/google/protobuf.git && \
   cd protobuf && \
   ./autogen.sh && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make -j6 && \
   cd java && \
   $MVN install dependency:go-offline -Dmaven.repo.local=$MAVEN_REPO -P lite && \