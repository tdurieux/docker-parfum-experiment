{
  "startTime": 1674256313843,
  "endTime": 1674256314461,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Build phase\n#\nFROM golang:1.18-alpine AS build\n\nRUN apk add --no-cache \\\n    git\n\nWORKDIR /build\n\nRUN git clone https://gitlab.com/isard/isardvdi-cli\n\nWORKDIR /build/isardvdi-cli\n\nRUN go mod download\n\nRUN CGO_ENABLED=0 go build -o isardvdi-cli main.go\n\n#\n# Testing\n#\nFROM jlesage/baseimage-gui:ubuntu-20.04\n\n# Install dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    xterm \\\n    jq \\\n    curl \\\n    wireguard-tools \\\n    virt-viewer \\\n    remmina \\\n    inetutils-ping \\\n    cowsay && rm -rf /var/lib/apt/lists/*;\n\nCOPY testing/check-isardvdi/isard.cow /isard.cow\nCOPY --from=build /build/isardvdi-cli/isardvdi-cli /usr/local/bin\n\nRUN echo \"#!/bin/sh\\nsleep infinity\" > /startapp.sh && chmod +x /startapp.sh\nCOPY testing/check-isardvdi/check_isardvdi_works.sh /check_isardvdi_works.sh\n\n# Set the name of the application.\nENV APP_NAME=\"IsardVDI Testing\"\nENV S6_LOGGING=\"1\"\nENV USER_ID=0\nENV GROUP_ID=0\n\n\nENTRYPOINT [ \"/init\" ]\nCMD [ \"/check_isardvdi_works.sh\" ]\n"
}