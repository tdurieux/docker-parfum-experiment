{
  "startTime": 1674218126399,
  "endTime": 1674218128850,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.15 as production\nMAINTAINER isard <info@isardvdi.com>\n\nRUN apk add --no-cache \\\n    libvirt \\\n    libvirt-daemon \\\n    dbus \\\n    polkit \\\n    openssh \\\n    curl \\\n    rsync \\\n    ovmf \\\n    iproute2 \\\n    bridge-utils \\\n    shadow \\\n    tshark \\\n    openssl \\\n    qemu \\\n    qemu-img \\\n    qemu-modules \\\n    qemu-system-x86_64\n\n\nRUN apk add --no-cache \\\n    libcap \\\n    mesa \\\n    libpciaccess \\\n    libdrm \\\n    wayland-libs-server \\\n    mesa-gbm \\\n    pixman \\\n    libxau \\\n    libxdmcp \\\n    libxcb \\\n    libx11 \\\n    libepoxy \\\n    virglrenderer \\\n    libxkbcommon \\\n    augeas-libs \\\n    libgpg-error \\\n    libgcrypt \\\n    libxslt \\\n    netcf-libs \\\n    libpcap \\\n    eudev-libs \\\n    libvirt-common-drivers \\\n    libvirt-qemu \\\n    libjpeg-turbo \\\n    lzo \\\n    libpng \\\n    libseccomp \\\n    snappy \\\n    mesa-glapi \\\n    wayland-libs-client \\\n    libxshmfence \\\n    mesa-egl \\\n    libxdamage \\\n    libxext \\\n    libxfixes \\\n    libxxf86vm \\\n    mesa-gl \\\n    libxv \\\n    alsa-lib \\\n    libxrender \\\n    libbz2 \\\n    freetype \\\n    fontconfig \\\n    cairo \\\n    cdparanoia-libs \\\n    gstreamer \\\n    libogg \\\n    opus \\\n    orc \\\n    libxft \\\n    fribidi \\\n    graphite2 \\\n    harfbuzz \\\n    pango \\\n    libtheora \\\n    libvorbis \\\n    wayland-libs-egl \\\n    gst-plugins-base \\\n    lz4-libs \\\n    spice-server \\\n    libusb \\\n    usbredir \\\n    coreutils\n    #vde2-libs\n    #libpulse\n\nCOPY docker/hypervisor/kvm/qemu-kvm /usr/libexec/qemu-kvm\nCOPY docker/hypervisor/kvm/qemu-kvm /usr/bin/qemu-kvm\nRUN chmod a+x /usr/bin/qemu-kvm\nRUN chmod a+x /usr/libexec/qemu-kvm\nRUN ln -s /usr/bin/qemu-system-x86_64 /usr/local/bin/qemu-system-x86_64\n\n# SSH configuration\nRUN echo \"root:isard\" |chpasswd\nRUN sed -i \\\n    -e 's|[#]*PermitRootLogin prohibit-password|PermitRootLogin yes|g' \\\n    -e 's|[#]*PasswordAuthentication yes|PasswordAuthentication yes|g' \\\n    -e 's|[#]*ChallengeResponseAuthentication yes|ChallengeResponseAuthentication yes|g' \\\n    -e 's|[#]*UsePAM yes|UsePAM yes|g' \\\n    -e 's|[#]*Port 22|Port 2022|g' \\\n    /etc/ssh/sshd_config\n\n# Libvirt configuration and certs\nCOPY docker/hypervisor/kvm/50-libvirt.rules /etc/polkit-1/rules.d/50-libvirt.rules\nRUN sed -i \"/^wheel:x:10:root/c\\wheel:x:10:root,qemu\" /etc/group\nRUN sed -i \"/^kvm:x:34:kvm/c\\kvm:x:34:kvm,qemu\" /etc/group\nRUN echo -e 'listen_tls = 0\\n \\\n    listen_tcp = 1\\n \\\n    unix_sock_group = \"kvm\"' >> /etc/libvirt/libvirtd.conf\nRUN echo -e 'spice_listen = \"0.0.0.0\"\\n \\\n    spice_listen = \"0.0.0.0\"\\n \\\n    spice_tls = 1\\n \\\n    spice_tls_x509_cert_dir = \"/etc/pki/libvirt-spice\"' >> /etc/libvirt/qemu.conf\n\n# Create the required directories\nRUN mkdir -p /etc/pki/libvirt-spice\nRUN mkdir /root/.ssh\n\n# Add needed sources\nCOPY docker/hypervisor/networks/ /etc/libvirt/qemu/networks/\n\n# Api\nRUN apk add  --no-cache bash python3 py3-pip py3-requests\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN apk add --no-cache --virtual .build_deps \\\n    build-base \\\n    python3-dev \\\n    libffi-dev\nRUN pip3 install --no-cache-dir python-jose==3.3.0 python-iptables==1.0.0 pythonping==1.0.15\nRUN apk del .build_deps\n\n# Openvswitch\nRUN apk add --no-cache openvswitch\nRUN /usr/bin/ovsdb-tool create /etc/openvswitch/conf.db\nRUN mkdir -pv /var/run/openvswitch/\n\nRUN apk add --no-cache wireguard-tools\n\n# FILESYSTEMS\n## NFS client\nRUN apk add --no-cache nfs-utils\n\n## SEAWEEDFS\n#RUN wget https://github.com/chrislusf/seaweedfs/releases/download/2.64/linux_amd64_large_disk.tar.gz\n#RUN tar xvf linux_amd64_large_disk.tar.gz\n#RUN rm linux_amd64_large_disk.tar.gz\n#RUN mv weed /usr/local/bin/\n\n## CIFS\nRUN apk add --no-cache cifs-utils\n\n## MDEVCTL\nRUN apk add --no-cache cargo uuidgen py3-docutils make git\nRUN cd /opt && git clone https://github.com/mdevctl/mdevctl\nRUN cd /opt/mdevctl && cargo build\nRUN cd /opt/mdevctl && make install || true\nRUN mkdir -p /etc/mdevctl.d/scripts.d/callouts\nRUN mkdir -p /etc/mdevctl.d/scripts.d/notifiers\nRUN apk del cargo py3-docutils make git\n\n# RUNTIME\nCOPY docker/hypervisor/src /src\nWORKDIR /src\nCMD [ \"/src/start.sh\"]\n\n"
}