diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apiology/quality/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apiology/quality/Dockerfile/repaired.Dockerfile
index 8a3e448..3dbeae3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apiology/quality/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apiology/quality/Dockerfile/repaired.Dockerfile
@@ -4,6 +4,11 @@ FROM alpine:3.16 AS base
 # while we still have the build tools installed but still be able to
 # install the very latest quality gem later on without having the disk
 # space impact of two versions.
+RUN mkdir -p /usr/local/etc \
+  && { \
+    echo 'install: --no-document'; \
+    echo 'update: --no-document'; \
+  } >> /usr/local/etc/gemrc;
 
 RUN apk update && \
     apk add --no-cache ruby ruby-irb ruby-dev make gcc libc-dev git icu-dev zlib-dev g++ cmake openssl-dev coreutils && \
@@ -28,7 +33,7 @@ RUN apk update && \
            /usr/lib/ruby/gems/*/gems/reek-*/spec \
            /usr/lib/ruby/gems/*/gems/kwalify-*/doc-api \
       && \
-      echo "Done"
+      echo "Done" && rm -rf /root/.gem;
 
 RUN mkdir /usr/quality
 ADD sample-project/.pronto.yml /usr/quality/.pronto.yml
@@ -52,7 +57,7 @@ FROM base AS python-base
 #
 
 RUN apk add --no-cache python3 py3-pip && \
-    pip3 install flake8 && \
+    pip3 install --no-cache-dir flake8 && \
     apk del py3-pip
 
 # RUN gem install --no-doc pronto-flake8  # does not yet support pronto 0.11
@@ -85,7 +90,7 @@ RUN echo "https://s3-us-west-2.amazonaws.com/alpine-ghc/8.0" >> /etc/apk/reposit
 # https://github.com/NLKNguyen/alpine-shellcheck/blob/master/builder/Dockerfile
 RUN apk add --no-cache build-base git wget libffi-dev
 
-RUN mkdir -p /usr/src/shellcheck
+RUN mkdir -p /usr/src/shellcheck && rm -rf /usr/src/shellcheck
 WORKDIR /usr/src/shellcheck
 
 RUN git clone https://github.com/koalaman/shellcheck .
@@ -125,7 +130,7 @@ FROM shellcheck-base AS jumbo-base
 RUN apk --no-cache add ca-certificates wget && \
     wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \
     wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.28-r0/glibc-2.28-r0.apk && \
-    apk add glibc-2.28-r0.apk
+    apk add --no-cache glibc-2.28-r0.apk
 
 ENV LANG=C.UTF-8
 
@@ -146,7 +151,7 @@ ENV JAVA_VERSION 19-ea+5
 # "For Alpine Linux, builds are produced on a reduced schedule and may not be in sync with the other platforms."
 
 RUN set -eux; \
-	\
+
 	arch="$(apk --print-arch)"; \
 	case "$arch" in \
 		'x86_64') \
@@ -155,10 +160,10 @@ RUN set -eux; \
 			;; \
 		*) echo >&2 "error: unsupported architecture: '$arch'"; exit 1 ;; \
 	esac; \
-	\
+
 	wget -O openjdk.tgz "$downloadUrl"; \
-	echo "$downloadSha256 *openjdk.tgz" | sha256sum -c -; \
-	\
+	echo "$downloadSha256  *openjdk.tgz" | sha256sum -c -; \
+
 	mkdir -p "$JAVA_HOME"; \
 	tar --extract \
 		--file openjdk.tgz \
@@ -167,15 +172,15 @@ RUN set -eux; \
 		--no-same-owner \
 	; \
 	rm openjdk.tgz*; \
-	\
+
 	rm -rf "$JAVA_HOME/lib/security/cacerts"; \
 # see "java-cacerts" package installed above (which maintains "/etc/ssl/certs/java/cacerts" for us)
 	ln -sT /etc/ssl/certs/java/cacerts "$JAVA_HOME/lib/security/cacerts"; \
-	\
+
 # https://github.com/docker-library/openjdk/issues/212#issuecomment-420979840
 # https://openjdk.java.net/jeps/341
 	java -Xshare:dump; \
-	\
+
 # basic smoke test
 	fileEncoding="$(echo 'System.out.println(System.getProperty("file.encoding"))' | jshell -s -)"; [ "$fileEncoding" = 'UTF-8' ]; rm -rf ~/.java; \
 	javac --version; \
@@ -197,7 +202,7 @@ RUN apk add --no-cache --virtual=.build-dependencies wget ca-certificates && \
     mv "/tmp/scala-${SCALA_VERSION}/bin" "/tmp/scala-${SCALA_VERSION}/lib" "${SCALA_HOME}" && \
     ln -s "${SCALA_HOME}/bin/"* "/usr/bin/" && \
     apk del .build-dependencies && \
-    rm -rf "/tmp/"*
+    rm -rf "/tmp/"* && rm "scala-${SCALA_VERSION}.tgz"
 
 
 #https://oss.sonatype.org/content/repositories/releases/org/scalastyle/scalastyle-batch_2.10/0.5.0/scalastyle_2.10-0.5.0.jar" && \