{
  "startTime": 1674254600704,
  "endTime": 1674254601446,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 126
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base on the cuda101\nFROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04\n\n# Build the miniconda3\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\n\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository -r ppa:kirillshkrogalev/ffmpeg-next && \\\n    apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion ffmpeg vim && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \\\r\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\r\n    rm ~/miniconda.sh && \\\r\n    /opt/conda/bin/conda clean -tipsy && \\\r\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\r\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\r\n    echo \"conda activate base\" >> ~/.bashrc && \\\r\n    find /opt/conda/ -follow -type f -name '*.a' -delete && \\\r\n    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \\\r\n    /opt/conda/bin/conda clean -afy\n\n# Create a user\nARG USER_ID=1000\nRUN useradd -m --no-log-init --system  --uid ${USER_ID} appuser -g sudo \\\r\n    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \\\r\n    && groupadd -g ${USER_ID} appuser \\\r\n    && chown -R appuser:appuser /opt/conda\n\nUSER appuser\nWORKDIR /home/appuser\nCOPY .condarc /home/appuser\n# Create the environment\nRUN conda create -n pyanomaly python=3.6 \\\r\n    && /bin/bash -c \"source activate pyanomaly\" \\\n    && pip install --no-cache-dir pqi \\\n    && pqi use tuna \\\n    && conda install pytorch==1.4 torchvision cudatoolkit=10.1 -c pytorch \\\n    && pip install --no-cache-dir cupy-cuda101 \\\n    && pip install --no-cache-dir 'git+https://github.com/facebookresearch/detectron2.git'\n\n# Install the requirements\nRUN pip install --no-cache-dir yacs \\\n    && pip install --no-cache-dir torchsnooper \\\n    && pip install --no-cache-dir sklearn \\\n    && pip install --no-cache-dir opencv-python \\\n    && pip install --no-cache-dir pillow \\\n    && pip install --no-cache-dir tsnecuda \\\n    && pip install --no-cache-dir ipdb \\\n    && pip install --no-cache-dir tsnecuda \\\n    && pip install --no-cache-dir scikit-image \\\n    && pip install --no-cache-dir mmcv \\\n    && pip install --no-cache-dir imgaug\n\n# Get the Pyanomaly\nRUN git clone https://github.com/YuhaoCheng/PyAnomaly.git pyanomaly_docker\\\r\n    && cd pyanomaly_docker \\\r\n    && cd ./script \\\r\n    && sh ./install.sh \\\r\n    && cd ..\n\nWORKDIR /home/appuser/pyanomaly_docker\n# Inital\n# CMD conda run -n pyanomaly\n# ENTRYPOINT conda run -n pyanomaly\n"
}