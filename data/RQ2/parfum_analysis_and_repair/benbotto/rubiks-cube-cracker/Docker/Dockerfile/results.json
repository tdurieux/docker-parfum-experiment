{
  "startTime": 1674249401782,
  "endTime": 1674249403028,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# Env vars for the nvidia-container-runtime.\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute\n\n# tzdata.\nENV DEBIAN_FRONTEND=noninteractive\n\nARG UID=1000\n\nWORKDIR /var/src/\n\n# Note that only the dependencies up to and including libglu1-mesa-dev are\n# required for building the application.  The others are for running the OpenGL\n# component from inside the docker container.  For more detail, see:\n# https://medium.com/@benjamin.botto/opengl-and-cuda-applications-in-docker-af0eece000f1\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -qq -y \\\n    g++ \\\n    cmake \\\n    pkg-config \\\n    wget \\\n    unzip \\\n    xorg-dev \\\n    libglu1-mesa-dev \\\n    libglvnd0 \\\n    libgl1 \\\n    libglx0 \\\n    libegl1 \\\n    libxext6 \\\n    libx11-6 \\\n  && rm -rf /var/lib/apt/lists/*\n\n# GLFW.\nRUN wget https://github.com/glfw/glfw/releases/download/3.3.3/glfw-3.3.3.zip \\\n  && unzip glfw-3.3.3.zip \\\n  && cd glfw-3.3.3 \\\n  && mkdir build \\\n  && cd build \\\n  && cmake -DBUILD_SHARED_LIBS=ON .. \\\n  && make -j4 \\\n  && make install \\\n  && cd ../../ \\\n  && rm -rf glfw*\n\n# GLM.\nRUN wget https://github.com/g-truc/glm/releases/download/0.9.8.5/glm-0.9.8.5.zip \\\n  && unzip glm-0.9.8.5.zip \\\n  && cp -R glm/glm /usr/local/include/ \\\n  && rm -rf glm*\n\n# GLEW.\nRUN wget https://github.com/nigels-com/glew/releases/download/glew-2.2.0/glew-2.2.0.zip \\\n  && unzip glew-2.2.0.zip \\\n  && cd glew-2.2.0 \\\n  && make -j4 \\\n  && make install GLEW_DEST=/usr/local \\\n  && cd .. \\\n  && rm -rf glew*\n\n# Local user with supplied UID (default 1000).\nRUN adduser \\\n    --disabled-password \\\n    --gecos '' \\\n    --uid $UID \\\n    rubik\n\nUSER rubik\n"
}