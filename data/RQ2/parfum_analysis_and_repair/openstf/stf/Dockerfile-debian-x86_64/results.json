{
  "startTime": 1674217311677,
  "endTime": 1674217312428,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Copyright Â© 2020 code initially contributed by Orange SA, authors: Denis Barbaron - Licensed under the Apache license 2.0\n#\n\nFROM debian:stretch-slim\n\nLABEL Maintainer=\"Denis Barbaron <denis.barbaron@orange.com>\"\nLABEL Name=\"STF\"\nLABEL Url=\"https://github.com/openstf/stf/\"\nLABEL Description=\"STF docker image for x86_64 architecture\"\n\n# Sneak the stf executable into $PATH.\nENV PATH /app/bin:$PATH\n\n# Work in app dir by default.\nWORKDIR /app\n\n# Copy app source.\nCOPY . /tmp/build/\n\n# Install app requirements\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    echo '--- Updating repositories' && \\\n    apt-get update && \\\n    echo '--- Building node' && \\\n    apt-get -y --no-install-recommends install wget python build-essential && \\\n    cd /tmp && \\\n    wget --progress=dot:mega \\\n      https://nodejs.org/dist/v8.9.3/node-v8.9.3-linux-x64.tar.xz && \\\n    tar -xJf node-v*.tar.xz --strip-components 1 -C /usr/local && \\\n    rm node-v*.tar.xz && \\\n    useradd --system \\\n      --create-home \\\n      --shell /usr/sbin/nologin \\\n      stf && \\\n    su stf -s /bin/bash -c '/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js install' && \\\n    apt-get -y install --no-install-recommends libzmq3-dev libprotobuf-dev git graphicsmagick yasm && \\\n    echo '--- Building app' && \\\n    mkdir -p /app && \\\n    chown -R stf:stf /tmp/build && \\\n    set -x && \\\n    cd /tmp/build && \\\n    export PATH=$PWD/node_modules/.bin:$PATH && \\\n    sed -i'' -e '/phantomjs/d' package.json && \\\n    npm install -g npm && \\\n    echo 'npm install --no-optional --loglevel http' | su stf -s /bin/bash && \\\n    echo '--- Assembling app' && \\\n    echo 'npm pack' | su stf -s /bin/bash && \\\n    tar xzf stf-*.tgz --strip-components 1 -C /app && \\\n    echo '/tmp/build/node_modules/.bin/bower cache clean' | su stf -s /bin/bash && \\\n    echo 'npm prune --production' | su stf -s /bin/bash && \\\n    mv node_modules /app && \\\n    chown -R root:root /app && \\\n    echo '--- Cleaning up' && \\\n    echo 'npm cache clean --force' | su stf -s /bin/bash && \\\n    rm -rf ~/.node-gyp && \\\n    apt-get -y purge wget python build-essential && \\\n    apt-get -y clean && \\\n    apt-get -y autoremove && \\\n    rm -rf /var/cache/apt/* /var/lib/apt/lists/* && \\\n    cd /app && \\\n    rm -rf /tmp/* && npm cache clean --force; && rm stf-*.tgz\n\n# Switch to the app user.\nUSER stf\n\n# Show help by default.\nCMD stf --help\n"
}