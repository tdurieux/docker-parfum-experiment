{
  "startTime": 1674251786056,
  "endTime": 1674251787258,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 62,
        "columnEnd": 156
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM mapcentia/gc2core:gdal\nMAINTAINER Martin HÃ¸gh<mh@mapcentia.com>\n\nRUN export DEBIAN_FRONTEND=noninteractive\nENV DEBIAN_FRONTEND noninteractive\n\n# Set php session timeout to one day\nRUN sed -i \"s/session.gc_maxlifetime = 1440/session.gc_maxlifetime = 86400/g\" /etc/php/7.3/fpm/php.ini\n# Set max upload file size\nRUN sed -i \"s/upload_max_filesize = 2M/upload_max_filesize = 1000M/g\" /etc/php/7.3/fpm/php.ini\nRUN sed -i \"s/post_max_size = 8M/post_max_size = 1000M/g\" /etc/php/7.3/fpm/php.ini\n\n# Install MapServer 7.6 from source\nRUN git clone https://github.com/mapserver/mapserver.git --branch branch-7-6 &&\\\n    cd mapserver &&\\\n    mkdir build &&\\\n    cd build &&\\\n    cmake -DCMAKE_INSTALL_PREFIX=/opt \\\n    -DCMAKE_PREFIX_PATH=/usr/local/pgsql/94:/usr/local:/opt:/usr/include \\\n    -DWITH_CLIENT_WFS=ON \\\n    -DWITH_CLIENT_WMS=ON \\\n    -DWITH_CURL=ON \\\n    -DWITH_SOS=ON \\\n    -DWITH_PHP=ON \\\n    -DWITH_PYTHON=ON \\\n    -DWITH_ORACLESPATIAL=0 \\\n    -DWITH_RSVG=ON \\\n    -DWITH_POINT_Z_M=ON \\\n    -DWITH_KML=ON \\\n    -DWITH_LIBKML=ON \\\n    -DWITH_KMZ=ON \\\n    -DWITH_SVGCAIRO=0 .. &&\\\n    make && make install &&\\\n    cp /mapserver/build/mapserv /usr/lib/cgi-bin/mapserv.fcgi\n\nRUN echo \"extension=php_mapscript.so\" >> /etc/php/7.3/fpm/php.ini\n\n# Instal MapCache from source\nRUN apt-get -y --no-install-recommends install libapr-memcache-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN cd ~ && \\\n    git clone http://github.com/mapserver/mapcache.git --branch branch-1-12 && \\\n    cd mapcache &&\\\n    mkdir build &&\\\n    cd build &&\\\n    cmake .. -DWITH_MEMCACHE=1 &&\\\n    make &&\\\n    make install &&\\\n    ldconfig\n\n# Install QGIS-server\nRUN wget -qO - https://qgis.org/downloads/qgis-2021.gpg.key | gpg --batch --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/qgis-archive.gpg --import && \\\n    chmod a+r /etc/apt/trusted.gpg.d/qgis-archive.gpg && \\\n    add-apt-repository \"deb https://qgis.org/debian $(lsb_release -c -s) main\" && \\\n    apt-get update --allow-releaseinfo-change && \\\n    apt-get -y --no-install-recommends install qgis-server && rm -rf /var/lib/apt/lists/*;\n\n# Symlink font for QGIS Server\nRUN ln -s /usr/share/fonts directory /usr/lib/x86_64-linux-gnu\n\n# Add some projections to Proj4\nRUN echo \"<900913> +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs <>\" >> /usr/share/proj/epsg && \\\n\techo \"<34004> +proj=omerc +lonc=11.81 +lat_0=55.3333332 +x_0=-118947.024 +y_0=101112.545 +k=0.9999855 +alpha=1.190005 +gamma=0.0 +datum=WGS84\" >> /usr/share/proj/epsg && \\\n\techo \"<34005> +proj=omerc +lonc=11.81 +lat_0=55.3333332 +x_0=-118947.024 +y_0=101112.545 +k=0.9999855 +alpha=1.190005 +gamma=0.0 +datum=WGS84\" >> /usr/share/proj/epsg\n\n# Add the watch_mapcache_changes.sh\nCOPY watch_mapcache_changes.sh /watch_mapcache_changes.sh\nRUN chmod +x /watch_mapcache_changes.sh\n\n# Add the reload.js\nCOPY reload.js /reload.js\n\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x -o nodesource_setup.sh && \\\n    bash nodesource_setup.sh && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir /mapcache\nRUN cp /root/mapcache/mapcache.xml /mapcache/\n\n# Add apache config file from Docker repo\nADD conf/apache/000-default.conf /etc/apache2/sites-enabled/\nADD conf/apache/mapcache.conf /etc/apache2/sites-enabled/\n\n# Add supervisord config file from Docker repo\nADD conf/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n\n# Add php-fpm config file from Docker repo\nADD conf/fpm/www.conf /etc/php/7.3/fpm/pool.d/www.conf\n\n# Add the check-if-fpm-is-alive script\nCOPY check-fpm.sh /check-fpm.sh\nRUN chmod +x /check-fpm.sh\n\nADD conf/apache/run-apache.sh /\nRUN chmod +x /run-apache.sh\n\nADD conf/fpm/run-fpm.sh /\nRUN chmod +x /run-fpm.sh\n\nRUN a2disconf other-vhosts-access-log\n\n# Clean up job for app/tmp\nRUN crontab -l 2>/dev/null| { cat; echo \"0 0 * * * php -f /var/www/geocloud2/app/scripts/clean_tmp_dir.php 1>> /dev/null 2>&1\";} | crontab\n# Purge locks from scheduler\nRUN crontab -l 2>/dev/null| { cat; echo \"* * * * * php -f /var/www/geocloud2/app/scripts/purge_locks.php > /var/www/geocloud2/public/logs/purge_locks.log\";} | crontab\n# Create scheduler report once a day\nRUN crontab -l 2>/dev/null| { cat; echo \"0 6 * * * php -f /var/www/geocloud2/app/scripts/job_report.php 1>> /dev/null 2>&1\";} | crontab\n# Run scheduler\nRUN crontab -l 2>/dev/null| { cat; echo \"* * * * * sudo -u www-data php -f /var/www/geocloud2/app/scripts/scheduler.php 1>> /dev/null 2>&1\";} | crontab\n\nRUN crontab -l 2>/dev/null| { cat; echo \"\";} | crontab\n\n# Install gc2-cli\nARG version=2021.11.0\nRUN wget https://gc2-cli.s3.eu-west-1.amazonaws.com/apt/gc2_${version}-1_amd64.deb &&\\\n    dpkg -i gc2_${version}-1_amd64.deb\n\n# Expose standard ports for HTTP and HTTPS\nEXPOSE 80\nEXPOSE 443\n\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\n"
}