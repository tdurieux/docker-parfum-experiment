{
  "startTime": 1674254965450,
  "endTime": 1674254966338,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\nMAINTAINER Martin HÃ¸gh<mh@mapcentia.com>\n\nRUN  export DEBIAN_FRONTEND=noninteractive\nENV  DEBIAN_FRONTEND noninteractive\n\n# Install packages\nRUN apt-get -y update && apt-get -y --no-install-recommends install vim git php-pgsql php-cli wget curl \\\n    postgis postgresql-11-postgis-2.5 postgresql-11-pgrouting postgresql-11-ogr-fdw pgagent postgresql-server-dev-11 libsybdb5 freetds-dev freetds-common gnupg gcc make \\\n    pgbouncer locales-all osm2pgsql supervisor \\\n    osm2pgsql unixodbc && rm -rf /var/lib/apt/lists/*;\n\n# Install msodbcsql17\nRUN wget https://packages.microsoft.com/debian/10/prod/pool/main/m/msodbcsql17/msodbcsql17_17.4.2.1-1_amd64.deb && \\\n    export ACCEPT_EULA=Y && \\\n    dpkg -i msodbcsql17_17.4.2.1-1_amd64.deb\n\n# Set MinProtocol to TLSv1.0 because some SQL Server doesn't support 1.2\nRUN sed -i \"s#MinProtocol = TLSv1.2#MinProtocol = TLSv1.0#g\" /etc/ssl/openssl.cnf\n\n# Install tds_fdw\n#RUN export TDS_FDW_VERSION=\"2.0.2\" &&\\\n#    wget https://github.com/tds-fdw/tds_fdw/archive/v${TDS_FDW_VERSION}.tar.gz &&\\\n#    tar -xvzf v${TDS_FDW_VERSION}.tar.gz &&\\\n#    cd tds_fdw-${TDS_FDW_VERSION}/ &&\\\n#    make USE_PGXS=1 &&\\\n#    make USE_PGXS=1 &&\\\n#    install\n\n# Clone GC2 from GitHub\nRUN mkdir /var/www &&\\\n\tcd /var/www/ &&\\\n\tgit clone https://github.com/mapcentia/geocloud2.git\n\n# Add config files from Docker repo\nCOPY conf/postgresql/pg_hba.conf /etc/postgresql/11/main/\nCOPY conf/gc2/geometry_columns_join.sql /var/www/geocloud2/public/install/\n\n# Copy GC2 config files from GIT repo, so we can create the template database and run migrations\nCOPY conf/gc2/App.php /var/www/geocloud2/app/conf/App.php\nCOPY conf/gc2/Connection.php /var/www/geocloud2/app/conf/Connection.php\n\n# Make config in PostGreSQL\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/11/main/postgresql.conf\n\n# Expose standard for PostGreSQL and pgboucer\nEXPOSE 5432 6432\n\n# Share volumes\nVOLUME  [\"/var/www/geocloud2\", \"/etc/postgresql\", \"/var/log\", \"/var/lib/postgresql\", \"/etc/pgbouncer\"]\n\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCOPY conf/pgbouncer/pgbouncer.ini /etc/pgbouncer/pgbouncer.ini\nCOPY conf/pgbouncer/userlist.txt /etc/pgbouncer/userlist.txt\n\nRUN chown postgres:postgres /etc/pgbouncer/pgbouncer.ini\nRUN chown postgres:postgres /etc/pgbouncer/userlist.txt\n\n# Add Supervisor config and run the deamon\nADD conf/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/conf.d/supervisord.conf\"]"
}