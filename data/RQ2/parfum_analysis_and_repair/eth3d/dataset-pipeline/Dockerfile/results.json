{
  "startTime": 1674253455679,
  "endTime": 1674253457012,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 192
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 192
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nWORKDIR /\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt update && apt install --no-install-recommends -y git libflann-dev libeigen3-dev libboost-all-dev cmake libgmp-dev libglew-dev libgoogle-glog-dev qt5-default libproj-dev libqwt-qt5-dev libpcl-dev libopengl-dev && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/laurentkneip/opengv.git\nRUN cd opengv \\\n  && mkdir build \\\n  && cd build \\\n  && cmake .. \\\n  && make -j8 install \\\n  && cd ../../\n\nRUN git clone https://github.com/opencv/opencv.git\nRUN cd opencv \\\n  && git checkout 4.1.2 \\\n  && mkdir build \\\n  && cd build \\\n  && cmake -D WITH_CUDA=OFF .. \\\n  && make -j8 install \\\n  && cd ../../\n\nWORKDIR /dataset-pipeline\nCOPY . /dataset-pipeline\nRUN rm -rf build \\\n  && mkdir -p build \\\n  && cd build \\\n  && cmake .. \\\n  && make -j8 \\\n  && cd ../../\n\nENV PIPELINE_PATH=/dataset-pipeline/build\n\n# Tests\n\nRUN cd ${PIPELINE_PATH} && ./Test_Alignment\nRUN ${PIPELINE_PATH}/Test_Camera\nRUN ${PIPELINE_PATH}/Test_ICP\nRUN ${PIPELINE_PATH}/Test_Interpolation\nRUN ${PIPELINE_PATH}/Test_IntrinsicsAndPoseOptimizer\nRUN ${PIPELINE_PATH}/Test_MultiScalePointCloud\nRUN ${PIPELINE_PATH}/Test_Problem\nRUN ${PIPELINE_PATH}/Test_Renderer\n\n"
}