{
  "startTime": 1674253272533,
  "endTime": 1674253273652,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 176
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM php:7.4-apache\n\nRUN apt update\nRUN apt install --no-install-recommends -y zip git libicu-dev libmariadb-dev libsqlite3-dev build-essential libzip-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev libpq-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Use either of those for sensible default options\n# RUN mv \"$PHP_INI_DIR/php.ini-production\" \"$PHP_INI_DIR/php.ini\"\n# RUN mv \"$PHP_INI_DIR/php.ini-development\" \"$PHP_INI_DIR/php.ini\"\n\n# Most of these are needed / nice to have\nRUN docker-php-ext-configure intl\nRUN docker-php-ext-install -j$(nproc) intl\nRUN docker-php-ext-enable intl\nRUN docker-php-ext-configure pdo_mysql\nRUN docker-php-ext-install -j$(nproc) pdo_mysql\nRUN docker-php-ext-enable pdo_mysql\nRUN docker-php-ext-configure pdo_sqlite\nRUN docker-php-ext-install -j$(nproc) pdo_sqlite\nRUN docker-php-ext-enable pdo_sqlite\nRUN docker-php-ext-configure zip\nRUN docker-php-ext-install -j$(nproc) zip\nRUN docker-php-ext-enable zip\nRUN docker-php-ext-configure gd --with-freetype --with-jpeg\nRUN docker-php-ext-install -j$(nproc) gd\nRUN docker-php-ext-enable gd\nRUN pecl install apcu\nRUN docker-php-ext-enable apcu\nRUN docker-php-ext-configure pdo_pgsql\nRUN docker-php-ext-install -j$(nproc) pdo_pgsql\nRUN docker-php-ext-enable pdo_pgsql\n\n# run the dependancy installation\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer\n\n# Pachno setup\nCOPY --chown=www-data:www-data ./ /var/www/html/\nRUN chown www-data:www-data /var/www /var/www/html\n\nUSER www-data\n\n# Hack for setups where npm uses git+ssh instead of git+https\nRUN git config --global url.\"https://github.com/\".insteadOf ssh://git@github.com/\n\nWORKDIR /var/www/html/\nRUN composer install\nRUN npm ci\nRUN node_modules/.bin/grunt\n\n# Setup\n# TODO: Make it customizable through environment variables?\nCOPY --chown=www-data:www-data docker/b2db.yml /var/www/html/core/config/b2db.yml\nCOPY --chown=www-data:www-data docker/htaccess /var/www/html/public/.htaccess\n\n# Apache setup stuff\nUSER root\nRUN a2enmod rewrite\nCOPY docker/000-default.conf /etc/apache2/sites-available/000-default.conf"
}