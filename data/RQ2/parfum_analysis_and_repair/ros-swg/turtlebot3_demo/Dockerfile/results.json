{
  "startTime": 1674253927727,
  "endTime": 1674253928371,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FROM_IMAGE=ros:galactic\nARG OVERLAY_WS=/opt/ros/overlay_ws\n\n# multi-stage for caching\nFROM $FROM_IMAGE AS cacher\n\n# copy overlay source\nARG OVERLAY_WS\nWORKDIR $OVERLAY_WS\nCOPY ./overlay ./\nRUN vcs import src < overlay.repos && \\\n    find src -name \".git\" | xargs rm -rf || true\n\n# copy manifests for caching\nWORKDIR /opt\nRUN mkdir -p /tmp/opt && \\\n    find ./ -name \"package.xml\" | \\\n      xargs cp --parents -t /tmp/opt && \\\n    find ./ -name \"COLCON_IGNORE\" | \\\n      xargs cp --parents -t /tmp/opt || true\n\n# multi-stage for building\nFROM $FROM_IMAGE AS builder\nARG DEBIAN_FRONTEND=noninteractive\n\n# install helpful developer tools\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n      bash-completion \\\n      byobu \\\n      ccache \\\n      fish \\\n      glances \\\n      micro \\\n      nano \\\n      python3-argcomplete \\\n      tree \\\n      vim \\\n    && rm -rf /var/lib/apt/lists/*\n\n# # install RTI Connext DDS\n# # set up environment\n# ENV NDDSHOME /opt/rti.com/rti_connext_dds-6.0.1\n# WORKDIR $NDDSHOME\n# COPY ./rti ./\n# RUN yes | ./rti_connext_dds-6.0.1-eval-x64Linux3gcc5.4.0.run && \\\n#     mv y/*/* ./ && rm -rf y\n# # set RTI DDS environment\n# ENV CONNEXTDDS_DIR $NDDSHOME\n# ENV PATH \"$NDDSHOME/bin\":$PATH\n# ENV LD_LIBRARY_PATH \"$NDDSHOME/lib/x64Linux3gcc5.4.0\":$LD_LIBRARY_PATH\n# # set RTI openssl environment\n# ENV PATH \"$NDDSHOME/third_party/openssl-1.1.1d/x64Linux4gcc7.3.0/release/bin\":$PATH\n# ENV LD_LIBRARY_PATH \"$NDDSHOME/third_party/openssl-1.1.1d/x64Linux4gcc7.3.0/release/lib\":$LD_LIBRARY_PATH\n\n# install overlay dependencies\nARG OVERLAY_WS\nWORKDIR $OVERLAY_WS\nCOPY --from=cacher /tmp/$OVERLAY_WS/src ./src\nRUN . /opt/ros/$ROS_DISTRO/setup.sh && \\\n    apt-get update && rosdep update \\\n      --rosdistro $ROS_DISTRO && \\\n    apt-get upgrade -y && \\\n    rosdep install -q -y \\\n      --from-paths src \\\n      --ignore-src \\\n    && rm -rf /var/lib/apt/lists/*\n\n# build overlay source\nCOPY --from=cacher $OVERLAY_WS/src ./src\nARG OVERLAY_MIXINS=\"release ccache\"\nRUN . /opt/ros/$ROS_DISTRO/setup.sh && \\\n    colcon build \\\n      --symlink-install \\\n      --mixin $OVERLAY_MIXINS\n\n# # install RTI Connext\n# ENV RTI_NC_LICENSE_ACCEPTED yes\n# RUN apt-get update && apt-get install -y \\\n#       ros-$ROS_DISTRO-rmw-connext-cpp \\\n#     && rm -rf /var/lib/apt/lists/*\n# # set up environment\n# ENV NDDSHOME /opt/rti.com/rti_connext_dds-5.3.1\n# ENV PATH \"$NDDSHOME/bin\":$PATH\n# ENV LD_LIBRARY_PATH \"$NDDSHOME/lib/x64Linux3gcc5.4.0\":$LD_LIBRARY_PATH\n# # install RTI Security\n# WORKDIR $NDDSHOME\n# # ADD https://s3.amazonaws.com/RTI/Bundles/5.3.1/Evaluation/rti_connext_dds_secure-5.3.1-eval-x64Linux3gcc5.4.0.tar.gz ./\n# # RUN tar -xvf rti_connext_dds_secure-5.3.1-eval-x64Linux3gcc5.4.0.tar.gz -C ./\n# COPY ./rti ./\n# RUN rtipkginstall rti_security_plugins-5.3.1-eval-x64Linux3gcc5.4.0.rtipkg && \\\n#     rtipkginstall openssl-1.0.2n-5.3.1-host-x64Linux.rtipkg && \\\n#     tar -xvf openssl-1.0.2n-target-x64Linux3gcc5.4.0.tar.gz\n# ENV PATH \"$NDDSHOME/openssl-1.0.2n/x64Linux3gcc5.4.0/release/bin\":$PATH\n# ENV LD_LIBRARY_PATH \"$NDDSHOME/openssl-1.0.2n/x64Linux3gcc5.4.0/release/lib\":$LD_LIBRARY_PATH\n# # install RTI QoS\n# ENV NDDS_QOS_PROFILES \"$NDDSHOME/NDDS_QOS_PROFILES.xml\"\n\n# generate artifacts for keystore\nENV TB3_DEMO_DIR $OVERLAY_WS/..\nWORKDIR $TB3_DEMO_DIR\nCOPY policies policies\nRUN . $OVERLAY_WS/install/setup.sh && \\\n    ros2 security generate_artifacts -k keystore \\\n      -p policies/tb3_gazebo_policy.xml\n\n# copy demo files\nCOPY configs configs\nCOPY .gazebo /root/.gazebo\n\n# source overlay workspace from entrypoint\nENV OVERLAY_WS $OVERLAY_WS\nRUN sed --in-place \\\n      's|^source .*|source \"$OVERLAY_WS/install/setup.bash\"|' \\\n      /ros_entrypoint.sh && \\\n    cp /etc/skel/.bashrc ~/ && \\\n    echo 'source \"$OVERLAY_WS/install/setup.bash\"' >> ~/.bashrc\n\nENV TURTLEBOT3_MODEL='burger' \\\n    GAZEBO_MODEL_PATH=$OVERLAY_WS/install/turtlebot3_gazebo/share/turtlebot3_gazebo/models:$GAZEBO_MODEL_PATH\n"
}