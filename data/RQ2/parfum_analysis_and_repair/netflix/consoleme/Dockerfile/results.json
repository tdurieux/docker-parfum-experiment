{
  "startTime": 1674249520054,
  "endTime": 1674249520824,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile should instantiate AWS Project with configurable plugins\nFROM python:3.8\nMAINTAINER Netflix Security\nWORKDIR /apps/consoleme\n# NODE_OPTIONS meeded to increase memory size of Node for the `yarn build` step. The Monaco Editor\n# appears to be the culprit requiring this.\nENV NODE_OPTIONS=\"--max-old-space-size=20000\"\nENV SETUPTOOLS_USE_DISTUTILS=stdlib\n\n# Install OS dependencies\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash\nRUN apt clean\nRUN apt update && apt install --no-install-recommends -y \\\n    build-essential \\\n    libxml2-dev \\\n    libxmlsec1-dev \\\n    libxmlsec1-openssl \\\n    musl-dev \\\n    libcurl4-nss-dev \\\n    python3-dev \\\n    nodejs && rm -rf /var/lib/apt/lists/*;\nRUN npm install yarn -g && npm cache clean --force;\n# Install watchdog. Used to automatically restart ConsoleMe in Docker, for development.\nRUN pip install --no-cache-dir watchdog argh\n\n# Run ConsoleMe tornado server using configuration\nCOPY . /apps/consoleme\nRUN pip install --no-cache-dir -U setuptools pip\nRUN pip install --no-cache-dir -r requirements.txt -r requirements-test.txt\nRUN pip install --no-cache-dir -e .\n\n# Install SPA frontend\nRUN yarn --cwd ui\nRUN yarn --cwd ui build:prod\n\nCMD python scripts/retrieve_or_decode_configuration.py; consoleme\nEXPOSE 8081\n"
}