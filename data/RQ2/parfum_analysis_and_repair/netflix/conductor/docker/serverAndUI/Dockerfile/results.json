{
  "startTime": 1674219692888,
  "endTime": 1674219693600,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 5,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 20,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 8
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 34,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "#\n# conductor:serverAndUI - Combined Netflix conductor server & UI\n#\n# ===========================================================================================================\n# 0. Builder stage\n# ===========================================================================================================\nFROM openjdk:11-jdk AS builder\nLABEL maintainer=\"Netflix OSS <conductor@netflix.com>\"\n\n# Install Node\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n  && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n  && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n  && apt-get update -qq \\\n  && apt-get install -y -qq --no-install-recommends \\\n    build-essential \\\n    nodejs \\\n    yarn \\\n  && apt-get upgrade -qq \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Copy the project onto the builder image\nCOPY . /conductor\n\n# Build the server\nWORKDIR /conductor\nRUN ./gradlew build -x test\n\n# Build the client\nWORKDIR /conductor/ui\nRUN yarn install && yarn build && yarn cache clean;\n\n# ===========================================================================================================\n# 1. Bin stage\n# ===========================================================================================================\n\nFROM nginx:alpine\nRUN apk add --no-cache openjdk11-jre\n\nLABEL maintainer=\"Netflix OSS <conductor@netflix.com>\"\n\n# Make app folders\nRUN mkdir -p /app/config /app/logs /app/libs\n\n# Copy the compiled output to new image\nCOPY --from=builder /conductor/docker/server/bin /app\nCOPY --from=builder /conductor/docker/server/config /app/config\nCOPY --from=builder /conductor/server/build/libs/conductor-server-*-boot.jar /app/libs\n\n# Copy compiled UI assets to nginx www directory\nWORKDIR /usr/share/nginx/html\nRUN rm -rf ./*\nCOPY --from=builder /conductor/ui/build .\nCOPY --from=builder /conductor/docker/serverAndUI/nginx/nginx.conf /etc/nginx/conf.d/default.conf\n\n# Copy the files for the server into the app folders\nRUN chmod +x /app/startup.sh\n\nHEALTHCHECK --interval=60s --timeout=30s --retries=10 CMD curl -I -XGET http://localhost:8080/health || exit 1\n\nCMD [ \"/app/startup.sh\" ]\nENTRYPOINT [ \"/bin/sh\"]\n"
}