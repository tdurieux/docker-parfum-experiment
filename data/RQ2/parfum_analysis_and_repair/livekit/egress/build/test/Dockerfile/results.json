{
  "startTime": 1674246612916,
  "endTime": 1674246613787,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM livekit/gstreamer:1.18.5-dev\n\nWORKDIR /workspace\n\nARG TARGETPLATFORM\n\n# install deps\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    curl \\\n    ffmpeg \\\n    gnupg \\\n    golang \\\n    gstreamer1.0-pulseaudio \\\n    pulseaudio \\\n    unzip \\\n    wget \\\n    xvfb && rm -rf /var/lib/apt/lists/*;\n\n# install rtsp server\nRUN if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then ARCH=arm64v8; else ARCH=amd64; fi && \\\n    wget https://github.com/aler9/rtsp-simple-server/releases/download/v0.17.6/rtsp-simple-server_v0.17.6_linux_${ARCH}.tar.gz && \\\n    tar -zxvf rtsp-simple-server_v0.17.6_linux_${ARCH}.tar.gz && \\\n    rm rtsp-simple-server_v0.17.6_linux_${ARCH}.tar.gz\n\n# install chrome\nRUN if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then \\\n    apt remove chromium-browser chromium-browser-l10n chromium-codecs-ffmpeg-extra && \\\n    echo \"deb http://deb.debian.org/debian buster main \\\n          deb http://deb.debian.org/debian buster-updates main \\\n          deb http://deb.debian.org/debian-security buster/updates main\" >> /etc/apt/sources.list.d/debian.list && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys DCC9EFBF77E11517 && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138 && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys AA8E81B4331F7F50 && \\\n    apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 112695A0E562B32A && \\\n    echo 'Package: * \\\n          Pin: release a=eoan \\\n          Pin-Priority: 500 \\\n          \\\n          \\\n          Package: * \\\n          Pin: origin \"deb.debian.org\" \\\n          Pin-Priority: 300 \\\n          \\\n          \\\n          Package: chromium* \\\n          Pin: origin \"deb.debian.org\" \\\n          Pin-Priority: 700' >> /etc/apt/preferences.d/chromium.pref && \\\n    apt update && \\\n    apt install --no-install-recommends -y chromium \\\n    ; rm -rf /var/lib/apt/lists/*; else \\\n    wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb && \\\n    apt-get install --no-install-recommends -y ./google-chrome-stable_current_amd64.deb && \\\n    rm google-chrome-stable_current_amd64.deb \\\n    ; rm -rf /var/lib/apt/lists/*; fi\n\n# install chromedriver\nRUN wget -N https://chromedriver.storage.googleapis.com/2.46/chromedriver_linux64.zip && \\\n    unzip chromedriver_linux64.zip && \\\n    chmod +x chromedriver && \\\n    mv -f chromedriver /usr/local/bin/chromedriver && \\\n    rm chromedriver_linux64.zip\n\n# add root user to group for pulseaudio access\nRUN adduser root pulse-access\n\n# clean up\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    rm -rf /var/run/pulse /var/lib/pulse /root/.config/pulse && \\\n    mkdir -pv ~/.cache/xdgr\n\n# set env vars\nENV XDG_RUNTIME_DIR=$PATH:~/.cache/xdgr\nENV RTSP_LOGDESTINATIONS=file\n\n# download go modules\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\n# copy source\nCOPY cmd/ cmd/\nCOPY pkg/ pkg/\nCOPY test/ test/\nCOPY version/ version/\n\n# build (service tests will need to launch the handler)\nRUN if [ \"$TARGETPLATFORM\" = \"linux/arm64\" ]; then GOARCH=arm64; else GOARCH=amd64; fi && \\\n    CGO_ENABLED=1 GOOS=linux GOARCH=${GOARCH} GO111MODULE=on go build -a -o /bin/egress ./cmd/server\n\n# run\nCOPY build/test/entrypoint.sh .\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}