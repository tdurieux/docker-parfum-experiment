{
  "startTime": 1674248807959,
  "endTime": 1674248809269,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 21,
        "columnEnd": 67
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 18,
        "columnStart": 0,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nMAINTAINER \"Andreas Stallinger\" <astallinger@coati.io>\n\nWORKDIR /opt\n\nRUN rpm --rebuilddb; yum install -y yum-plugin-ovl ca-certificates; rm -rf /var/cache/yum\n\nRUN yum -y install centos-release-scl epel-release && \\\nyum -y install make wget file devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-binutils \\\n\twget tar bzip2 git libtool which fuse fuse-devel libpng-devel automake \\\n\tglibc-headers libstdc++-devel gcc-c++ freetype-devel fontconfig-devel\\\n\tlibxml2-devel libstdc++-devel libXrender libXrender-devel patch xcb-util-keysyms xcb-util-keysyms-devel \\\n\tlibxcb libxcb-devel xcb-util xcb-util-devel xcb-util-wm xcb-util-wm-devel xcb-util xcb-util-devel \\\n\tlibxkbcommon libxkbcommon-devel libXi-devel libudev-devel.x86_64 openssl-devel sqlite-devel.x86_64 \\\n\tgperftools.x86_64 gperf.x86_64 libicu-devel.x86_64 boost-devel.x86_64 \\\n\tlibxslt-devel.x86_64 python27.x86_64 \\\n\txz mesa-libEGL-devel mesa-libGL-devel glib-devel \\\n\tjava-1.8.0-openjdk-devel re2c ccache ImageMagick vim lftp unzip && \\\nyum clean all && rm -rf /var/cache/yum\n\n# CMake\nRUN wget https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.tar.gz && \\\ntar xf cmake-3.8.2-Linux-x86_64.tar.gz && \\\ncp -R cmake-3.8.2-Linux-x86_64/* /usr/local/ && cmake --version && \\\nrm -rf cmake-3.8.2-Linux-x86_64 && \\\nrm cmake-3.8.2-Linux-x86_64.tar.gz\n\n# Maven\nRUN wget https://archive.apache.org/dist/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz && \\\ntar xzf apache-maven-3.5.0-bin.tar.gz && \\\nln -s apache-maven-3.5.0 maven && \\\nrm apache-maven-3.5.0-bin.tar.gz\n\n# Ninja\nRUN git clone https://github.com/martine/ninja.git && \\\ncd ninja && \\\ngit checkout release && \\\n./configure.py --bootstrap && \\\nmv ninja /usr/local/bin/ && \\\ncd .. && rm -rf ninja\n\nENV M2_HOME=/opt/maven \\\nJAVA_HOME=/usr/lib/jvm/java-openjdk \\\nDEVTOOLSET=/opt/rh/devtoolset-7/root/usr/\nENV PATH=${M2_HOME}/bin:${PATH}\n\nRUN make --version\nRUN cmake --version\nRUN mvn --version\nRUN ninja --version\n\n"
}