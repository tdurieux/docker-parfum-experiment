{
  "startTime": 1674250450044,
  "endTime": 1674250451248,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 23,
        "columnStart": 0,
        "columnEnd": 44
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 52,
        "columnStart": 0,
        "columnEnd": 14
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 0,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 0,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM coatisoftware/centos7_64_base\n\nMAINTAINER \"Eberhard Graether\" <egraether@coati.io>\n\nRUN make --version\nRUN cmake --version\nRUN mvn --version\nRUN ninja --version\n\nWORKDIR /opt\n\n## set env\nARG QTVERSION_SHORT=5.12\nARG QTVERSION=5.12.6\n\nENV Qt5_DIR=/opt/qt${QTVERSION} \\\nClang_DIR=/opt/llvm \\\nBOOST_ROOT=/opt/boost \\\nLD_LIBRARY_PATH=$Qt5_DIR/lib/\n\n# Qt\nRUN mkdir -p /qt && cd /qt && \\\n wget https://download.qt.io/archive/qt/${QTVERSION_SHORT}/${QTVERSION}/\\\nsingle/qt-everywhere-src-${QTVERSION}.tar.xz && \\\ntar xvf qt-everywhere-src-${QTVERSION}.tar.xz && \\\nln -sf /opt/rh/devtoolset-7/root/usr/bin/g++ /usr/bin/g++ && \\\nln -sf /opt/rh/devtoolset-7/root/usr/bin/c++ /usr/bin/c++ && \\\ncd /qt/qt-everywhere-src-${QTVERSION} && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -v \\\n-prefix /opt/qt${QTVERSION} \\\n-skip qtgamepad \\\n-platform linux-g++ \\\n-qt-pcre \\\n-qt-xcb \\\n-xkbcommon \\\n-no-pch \\\n-no-use-gold-linker \\\n-release \\\n-no-compile-examples \\\n-confirm-license \\\n-opensource \\\n-nomake examples \\\n-nomake tests \\\n-skip sensors \\\n-skip webchannel \\\n-skip webengine \\\n-skip 3d \\\n-skip doc \\\n-skip multimedia \\\n-skip tools \\\n-skip connectivity \\\n-skip androidextras \\\n-skip canvas3d && \\\nmake -j8 && \\\nmake -j8 install && rm -Rf /qt && rm qt-everywhere-src-${QTVERSION}.tar.xz\n\n# LLVM/Clang\nARG LLVM_VERSION=11.0.0\nRUN mkdir -p /llvm && cd /llvm && \\\nwget https://github.com/llvm/llvm-project/releases/download/llvmorg-${LLVM_VERSION}/llvm-project-${LLVM_VERSION}.tar.xz && \\\ntar xvf llvm-project-${LLVM_VERSION}.tar.xz && \\\ncd llvm-project-${LLVM_VERSION} && \\\n. /opt/rh/python27/enable && \\\n. /opt/rh/devtoolset-7/enable && \\\nmkdir -p build && cd build && \\\ncmake ../llvm -DCMAKE_INSTALL_PREFIX=/opt/llvm/ \\\n-DCMAKE_BUILD_TYPE=Release \\\n-DLLVM_ENABLE_PROJECTS=\"clang\" \\\n-DLLVM_ENABLE_RTTI=ON \\\n&& make -j8 install && rm -Rf /llvm && rm llvm-project-${LLVM_VERSION}.tar.xz\n\nWORKDIR /opt\n\n# Boost\nARG BOOST_MAJOR=1\nARG BOOST_MINOR=67\nARG BOOST_PATCH=0\nENV BOOST_VERSION=${BOOST_MAJOR}.${BOOST_MINOR}.${BOOST_PATCH} \\\nBOOST_VERSION_UNDERSCORE=${BOOST_MAJOR}_${BOOST_MINOR}_${BOOST_PATCH}\n\nRUN wget https://downloads.sourceforge.net/project/boost/boost/${BOOST_VERSION}/boost_${BOOST_VERSION_UNDERSCORE}.tar.gz && \\\ntar -xzf boost_${BOOST_VERSION_UNDERSCORE}.tar.gz && cd boost_${BOOST_VERSION_UNDERSCORE} && \\\n./bootstrap.sh --with-libraries=filesystem,program_options,system,date_time --prefix=/opt/boost && \\\n./b2 install cxxstd=14 --link=static --variant=release --threading=multi --runtime-link=static --cxxflags=\"-std=c++14 -fPIC\" && \\\ncd .. && rm boost_${BOOST_VERSION_UNDERSCORE}.tar.gz && rm boost_${BOOST_VERSION_UNDERSCORE} -r\n\n# linuxdeployqt\nRUN wget https://github.com/probonopd/linuxdeployqt/releases/download/6/linuxdeployqt-6-x86_64.AppImage && \\\nchmod a+x linuxdeployqt-6-x86_64.AppImage && \\\n./linuxdeployqt-6-x86_64.AppImage --appimage-extract && \\\ncp -r squashfs-root/usr/ /opt/linuxdeployqt && \\\nchmod -R 755 /opt/linuxdeployqt && \\\nrm linuxdeployqt-6-x86_64.AppImage && rm -rf squashfs-root\nENV PATH=/opt/linuxdeployqt/bin:${PATH}\n\n#add user\nRUN useradd -u 1000 builder\nWORKDIR /home/builder\nUSER builder\n"
}