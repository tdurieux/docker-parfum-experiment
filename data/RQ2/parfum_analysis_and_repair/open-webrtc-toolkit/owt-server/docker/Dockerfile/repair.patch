diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/open-webrtc-toolkit/owt-server/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/open-webrtc-toolkit/owt-server/docker/Dockerfile/repaired.Dockerfile
index eeba3b7..24ca8e1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/open-webrtc-toolkit/owt-server/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/open-webrtc-toolkit/owt-server/docker/Dockerfile/repaired.Dockerfile
@@ -8,7 +8,7 @@ FROM ubuntu:18.04 AS owt-build
 WORKDIR /home
 
 # COMMON BUILD TOOLS
-RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends build-essential autoconf make git wget pciutils cpio libtool lsb-release ca-certificates pkg-config bison flex libcurl4-gnutls-dev zlib1g-dev nasm yasm m4 autoconf libtool automake cmake libfreetype6-dev libgstreamer-plugins-base1.0-dev
+RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y -q --no-install-recommends build-essential autoconf make git wget pciutils cpio libtool lsb-release ca-certificates pkg-config bison flex libcurl4-gnutls-dev zlib1g-dev nasm yasm m4 autoconf libtool automake cmake libfreetype6-dev libgstreamer-plugins-base1.0-dev && rm -rf /var/lib/apt/lists/*;
 
 
 # Build libnice
@@ -17,7 +17,7 @@ ARG NICE_REPO=http://nice.freedesktop.org/releases/libnice-${NICE_VER}.tar.gz
 ARG LIBNICE_PATCH_VER="5.0"
 ARG LIBNICE_PATCH_REPO=https://github.com/open-webrtc-toolkit/owt-server/archive/v${LIBNICE_PATCH_VER}.tar.gz
 
-RUN apt-get update && apt-get install -y -q --no-install-recommends libglib2.0-dev
+RUN apt-get update && apt-get install -y -q --no-install-recommends libglib2.0-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN wget -O - ${NICE_REPO} | tar xz && \
     cd libnice-${NICE_VER} && \
@@ -28,7 +28,7 @@ RUN wget -O - ${NICE_REPO} | tar xz && \
     patch -p1 < owt-server-${LIBNICE_PATCH_VER}/scripts/patches/libnice014-keepalive.patch && \
     patch -p1 < owt-server-${LIBNICE_PATCH_VER}/scripts/patches/libnice014-startcheck.patch && \
     patch -p1 < owt-server-${LIBNICE_PATCH_VER}/scripts/patches/libnice014-closelock.patch && \
-    ./configure --prefix="/usr/local" --libdir=/usr/local/lib/x86_64-linux-gnu && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib/x86_64-linux-gnu && \
     make -s V=0 && \
     make install
 
@@ -66,7 +66,7 @@ RUN wget -O - ${USRSCTP_URL} | tar xz && \
     mv ${USRSCTP_EXTRACT} usrsctp && \
     cd usrsctp && \
     ./bootstrap && \
-    ./configure --prefix="/usr/local" --libdir=/usr/local/lib/x86_64-linux-gnu && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib/x86_64-linux-gnu && \
     make && \
     make install
 
@@ -75,16 +75,16 @@ RUN wget -O - ${USRSCTP_URL} | tar xz && \
 ARG SRTP2_VER="2.1.0"
 ARG SRTP2_REPO=https://codeload.github.com/cisco/libsrtp/tar.gz/v${SRTP2_VER}
 
-RUN apt-get update && apt-get install -y -q --no-install-recommends curl
+RUN apt-get update && apt-get install -y -q --no-install-recommends curl && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -o libsrtp-${SRTP2_VER}.tar.gz ${SRTP2_REPO} && \
+RUN curl -f -o libsrtp-${SRTP2_VER}.tar.gz ${SRTP2_REPO} && \
     tar xzf libsrtp-${SRTP2_VER}.tar.gz && \
     cd libsrtp-${SRTP2_VER} && \
     export PKG_CONFIG_PATH="/usr/local/lib/x86_64-linux-gnu/pkgconfig" && \
     export CFLAGS="-fPIC" && \
-    ./configure --enable-openssl --prefix="/usr/local" --with-openssl-dir="/usr/local/ssl" && \
-    make -s V=0  && \
-    make install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-openssl --prefix="/usr/local" --with-openssl-dir="/usr/local/ssl" && \
+    make -s V=0 && \
+    make install && rm libsrtp-${SRTP2_VER}.tar.gz
 
 
 # Fetch FFmpeg source
@@ -98,7 +98,7 @@ RUN wget ${FFMPEG_SRC_URL} && tar xf ${FFMPEG_SRC} && mv ${FFMPEG_DIR} FFmpeg &&
 # Compile FFmpeg
 RUN cd /home/FFmpeg && \
     export PKG_CONFIG_PATH="/usr/local/lib/x86_64-linux-gnu/pkgconfig" && \
-    ./configure --prefix="/usr/local" --libdir=/usr/local/lib/x86_64-linux-gnu --enable-shared --disable-static --disable-libvpx --disable-vaapi --enable-libfreetype && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr/local" --libdir=/usr/local/lib/x86_64-linux-gnu --enable-shared --disable-static --disable-libvpx --disable-vaapi --enable-libfreetype && \
     make -j8 && \
     make install
 
@@ -109,7 +109,7 @@ ARG NODE_REPO=https://nodejs.org/dist/${NODE_VER}/node-${NODE_VER}-linux-x64.tar
 
 RUN wget ${NODE_REPO} && \
     tar xf node-${NODE_VER}-linux-x64.tar.xz && \
-    cp node-*/* /usr/local -rf && rm -rf node-*
+    cp node-*/* /usr/local -rf && rm -rf node-* && rm node-${NODE_VER}-linux-x64.tar.xz
 
 
 # Fetch SVT-HEVC
@@ -123,7 +123,7 @@ RUN git clone ${SVT_HEVC_REPO} && \
     mkdir -p ../../Bin/Release && \
     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_INSTALL_LIBDIR=lib/x86_64-linux-gnu -DCMAKE_ASM_NASM_COMPILER=yasm ../.. && \
     make -j8 && \
-    make install 
+    make install
 
 
 # Install json_hpp
@@ -153,9 +153,9 @@ ARG OWT_BRANCH=master
 ARG IMG_APP_PATH=/app_data/
 ENV APP_PATH=${IMG_APP_PATH}
 
-RUN apt-get update && apt-get install -y -q --no-install-recommends python libglib2.0-dev rabbitmq-server mongodb libboost-thread-dev libboost-system-dev liblog4cxx-dev libgstreamer-plugins-base1.0-dev
+RUN apt-get update && apt-get install -y -q --no-install-recommends python libglib2.0-dev rabbitmq-server mongodb libboost-thread-dev libboost-system-dev liblog4cxx-dev libgstreamer-plugins-base1.0-dev && rm -rf /var/lib/apt/lists/*;
 
-# 1. Clone OWT server source code 
+# 1. Clone OWT server source code
 # 2. Clone licode source code and patch
 # 3. Clone webrtc source code and patch
 RUN git config --global user.email "you@example.com" && \
@@ -177,7 +177,7 @@ RUN git config --global user.email "you@example.com" && \
     ln -s -v ${OPENH264_BINARYNAME} libopenh264.so.${OPENH264_SOVER} && \
     ln -s -v libopenh264.so.${OPENH264_SOVER} libopenh264.so && \
     echo 'const char* stub() {return "this is a stub lib";}' > pseudo-openh264.cpp && \
-    gcc pseudo-openh264.cpp -fPIC -shared -o pseudo-openh264.so 
+    gcc pseudo-openh264.cpp -fPIC -shared -o pseudo-openh264.so && npm cache clean --force;
 
 # Get licode for owt
 RUN cd ${SERVER_PATH}/third_party && git clone ${LICODE_REPO} && \
@@ -190,7 +190,7 @@ RUN cd ${SERVER_PATH}/third_party && mkdir webrtc  && cd webrtc &&\
     export GIT_SSL_NO_VERIFY=1 && \
     git clone -b 59-server ${WEBRTC_REPO} src && \
     ./src/tools-woogeen/install.sh && \
-    ./src/tools-woogeen/build.sh 
+    ./src/tools-woogeen/build.sh
 
 # Install webrtc88 for owt
 RUN mkdir ${SERVER_PATH}/third_party/webrtc-m88 && \
@@ -204,7 +204,7 @@ RUN cd /home && git clone --depth=1 -b ${OWT_BRANCH} ${OWT_SDK_REPO} && cd owt-c
     cd ${SERVER_PATH}/third_party/quic-lib && wget https://github.com/open-webrtc-toolkit/owt-deps-quic/releases/download/v0.1/dist.tgz && tar xzf dist.tgz && \
     #Build and pack owt
     cd ${SERVER_PATH} && export PKG_CONFIG_PATH=/usr/local/lib/x86_64-linux-gnu/pkgconfig && ./scripts/build.js -t mcu-all -lp /usr/local/ssl/lib -ip /usr/local/ssl/include -r -c && \
-    ./scripts/pack.js -t all --install-module --no-pseudo --app-path /home/owt-client-javascript/dist/samples/conference
+    ./scripts/pack.js -t all --install-module --no-pseudo --app-path /home/owt-client-javascript/dist/samples/conference && npm cache clean --force; && rm dist.tgz
 
 
 FROM ubuntu:18.04 AS owt-run
@@ -217,11 +217,11 @@ WORKDIR /home
 ARG NODE_VER=v14.19.0
 ARG NODE_REPO=https://nodejs.org/dist/${NODE_VER}/node-${NODE_VER}-linux-x64.tar.xz
 
-RUN apt-get update && apt-get install -y -q --no-install-recommends ca-certificates wget xz-utils rabbitmq-server mongodb libboost-system-dev libboost-thread-dev liblog4cxx-dev libglib2.0-0 libfreetype6-dev curl sudo
+RUN apt-get update && apt-get install -y -q --no-install-recommends ca-certificates wget xz-utils rabbitmq-server mongodb libboost-system-dev libboost-thread-dev liblog4cxx-dev libglib2.0-0 libfreetype6-dev curl sudo && rm -rf /var/lib/apt/lists/*;
 
 RUN wget ${NODE_REPO} && \
     tar xf node-${NODE_VER}-linux-x64.tar.xz && \
-    cp node-*/* /usr/local -rf && rm -rf node-*
+    cp node-*/* /usr/local -rf && rm -rf node-* && rm node-${NODE_VER}-linux-x64.tar.xz
 
 RUN useradd -m owt && echo "owt:owt" | chpasswd && adduser owt sudo