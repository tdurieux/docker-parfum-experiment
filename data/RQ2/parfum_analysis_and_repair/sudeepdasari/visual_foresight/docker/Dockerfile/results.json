{
  "startTime": 1674218207241,
  "endTime": 1674218208161,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 92
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 116
      }
    }
  ],
  "repairedDockerfile": "#based on Dockerfile from mujoco-py\nFROM nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04\n\n\nRUN apt-get update -q \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    curl \\\n    git \\\n    libgl1-mesa-dev \\\n    libgl1-mesa-glx \\\n    libglew-dev \\\n    libosmesa6-dev \\\n    software-properties-common \\\n    net-tools \\\n    unzip \\\n    vim \\\n    virtualenv \\\n    wget \\\n    xpra \\\n    xserver-xorg-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN DEBIAN_FRONTEND=noninteractive add-apt-repository --yes ppa:deadsnakes/ppa && apt-get update\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes python3.5-dev python3.5 python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN virtualenv --python=python3.5 env\n\nRUN rm /usr/bin/python\nRUN ln -s /env/bin/python3.5 /usr/bin/python\nRUN ln -s /env/bin/pip3.5 /usr/bin/pip\nRUN ln -s /env/bin/pytest /usr/bin/pytest\n\nRUN curl -f -o /usr/local/bin/patchelf https://s3-us-west-2.amazonaws.com/openai-sci-artifacts/manual-builds/patchelf_0.9_amd64.elf \\\n    && chmod +x /usr/local/bin/patchelf\n\nENV LANG C.UTF-8\n\nRUN mkdir -p /root/.mujoco \\\n    && wget https://www.roboti.us/download/mjpro150_linux.zip -O mujoco.zip \\\n    && unzip mujoco.zip -d /root/.mujoco \\\n    && rm mujoco.zip\nCOPY ./mjkey.txt /root/.mujoco/\nENV LD_LIBRARY_PATH /root/.mujoco/mjpro150/bin:${LD_LIBRARY_PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n\nCOPY vendor/Xdummy /usr/local/bin/Xdummy\nRUN chmod +x /usr/local/bin/Xdummy\n\n# Workaround for https://bugs.launchpad.net/ubuntu/+source/nvidia-graphics-drivers-375/+bug/1674677\nCOPY ./vendor/10_nvidia.json /usr/share/glvnd/egl_vendor.d/10_nvidia.json\n\nWORKDIR /\nRUN git clone https://github.com/febert/video_prediction-1.git\nWORKDIR /video_prediction-1\nRUN git checkout dev\nRUN git pull origin dev\nWORKDIR /\nRUN git clone https://github.com/SudeepDasari/visual_foresight.git\nWORKDIR /visual_foresight\nRUN pip install --no-cache-dir -r requirements.txt\nWORKDIR /\nRUN git clone https://github.com/anxie/meta_classifier.git\n\n"
}