{
  "startTime": 1674253190491,
  "endTime": 1674253190993,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Install required libraries\nRUN apt-get -yqq update\nRUN apt-get -yqq --no-install-recommends install python3-pip python3-dev libssl-dev libffi-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -yqq update\nRUN apt-get install --no-install-recommends -yqq openssh-client openssh-server && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -yqq wget sshpass stress libgl1-mesa-glx && rm -rf /var/lib/apt/lists/*;\n\n# Authentication\nRUN echo 'root:PASSWORD' | chpasswd\nRUN sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\nRUN service ssh restart\n\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n# install execution profiler requirements\nADD requirements.txt /jupiter/requirements.txt\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir -r /jupiter/requirements.txt\n\n# install app specific requirements\nCOPY build_requirements/requirements.txt /jupiter/build/app_specific_files/\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir -r /jupiter/build/app_specific_files/requirements.txt\n\nADD profiler_worker.py /jupiter/profiler_worker.py\n\nADD start_worker.sh /jupiter/start_worker.sh\nADD remote_start.py /jupiter/remote_start.py\nADD utils.py /jupiter/utils.py\n\nRUN chmod +x /jupiter/start_worker.sh\n\nWORKDIR /jupiter/\n\n# Add all files in the ./build/ folder. This folder is created by\n# build_push_exec.py and contains copies of all files from Jupiter and the\n# application. If you need to add more files, make the script copy files into\n# ./build/ instead of adding it manually in this Dockerfile.\nCOPY build/ /jupiter/build/\n\n# Kubernetes handles exposing ports for us\n# EXPOSE\n\nCMD [\"./start_worker.sh\"]"
}