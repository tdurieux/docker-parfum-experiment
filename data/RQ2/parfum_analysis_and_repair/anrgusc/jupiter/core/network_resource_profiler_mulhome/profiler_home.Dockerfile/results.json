{
  "startTime": 1674255055312,
  "endTime": 1674255056598,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 104
      }
    }
  ],
  "repairedDockerfile": "# ** Copyright (c) 2017, Autonomous Networks Research Group. All rights reserved.\n# **     contributor: Pradipta Ghosh, Quynh Nguyen, Bhaskar Krishnamachari\n# **     Read license file in main directory for more details\n\n# Instructions copied from - https://hub.docker.com/_/python/\nFROM ubuntu:16.04\n\n# Install required libraries\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install build-essential libssl-dev libffi-dev python-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt-get -yqq --no-install-recommends install python3-pip python3-dev && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir --upgrade \"pip < 21.0\"\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y openssh-server mongodb sshpass nano virtualenv supervisor && rm -rf /var/lib/apt/lists/*;\n\n# Install required python libraries\nADD requirements.txt /requirements.txt\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Authentication\nRUN echo 'root:PASSWORD' | chpasswd\nRUN sed -i 's/PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config\n# SSH login fix. Otherwise user is kicked off after login\nRUN sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd\nENV NOTVISIBLE \"in users profile\"\nRUN echo \"export VISIBLE=now\" >> /etc/profile\n\n# Prepare MongoDB\nRUN mkdir -p /mongodb/data\nRUN mkdir -p /mongodb/log\nRUN mkdir -p /jupiter\nADD mongod /jupiter/central_mongod\nRUN chmod +x /jupiter/central_mongod\n\n# Add all files in the ./build/ folder. This folder is created by\n# build_push_exec.py and contains copies of all files from Jupiter and the\n# application. If you need to add more files, make the script copy files into\n# ./build/ instead of adding it manually in this Dockerfile.\nCOPY build/ /jupiter/build/\n\n# Prepare network profiling code\nADD central_input /jupiter/central_input\nADD central_scheduler.py /jupiter/central_scheduler.py\nADD generate_link_list.py /jupiter/generate_link_list.py\nADD keep_alive.py /jupiter/keep_alive.py\n\nRUN mkdir -p /jupiter/scheduling\nRUN mkdir -p /jupiter/parameters\nRUN mkdir -p /jupiter/generated_test\nRUN mkdir -p /jupiter/received_test\n\n\n# Prepare network profiling code\nADD droplet_generate_random_files /jupiter/droplet_generate_random_files\nADD droplet_scp_time_transfer /jupiter/droplet_scp_time_transfer\nRUN chmod +x /jupiter/droplet_scp_time_transfer\nRUN chmod +x /jupiter/droplet_generate_random_files\n\n# Running docker\nADD start_home.sh /jupiter/start.sh\nRUN chmod +x /jupiter/start.sh\n\nWORKDIR /jupiter\n\n# k8s exposes ports for us\n# EXPOSE 22 27017 8888\n\nCMD [\"./start.sh\"]\n"
}