{
  "startTime": 1674250162787,
  "endTime": 1674250163927,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedDockerfile": "ARG BASE_IMAGE=ubuntu:18.04\n\nFROM $BASE_IMAGE\n\nARG TARGET_LLVM_VERSION=8\nARG IMAGE_REPO=bionic\n\n# Depenedencies to fetch, build llvm and clang\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        wget \\\n        gnupg2 \\\n        lsb-release \\\n        software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \\\n    # The repository name used here MUST be kept in sync with the base image version\n    add-apt-repository \"deb http://apt.llvm.org/$IMAGE_REPO/ llvm-toolchain-$IMAGE_REPO-$TARGET_LLVM_VERSION   main\"\n\nRUN apt-get update\n\nRUN apt-get install --no-install-recommends -y \\\n\n        gcc-7 \\\n        g++-7 \\\n        cmake \\\n\n        libgtest-dev \\\n\n        libfile-spec-native-perl && rm -rf /var/lib/apt/lists/*;\n\n# Set up LLVM packages with depenedencies\nRUN apt-get install --no-install-recommends -y \\\n\n        llvm-\"$TARGET_LLVM_VERSION\" \\\n        libllvm\"$TARGET_LLVM_VERSION\" \\\n        llvm-\"$TARGET_LLVM_VERSION\"-dev \\\n\n        clang-\"$TARGET_LLVM_VERSION\" \\\n        libclang-common-\"$TARGET_LLVM_VERSION\"-dev \\\n        libclang-\"$TARGET_LLVM_VERSION\"-dev \\\n\n        libc++-\"$TARGET_LLVM_VERSION\"-dev && rm -rf /var/lib/apt/lists/*;\n\n# Set up build environment\nENV CC=/usr/bin/gcc-7 \\\n    CXX=/usr/bin/g++-7 \\\n    MAKEFLAGS=\"-j4\" \\\n    CMAKE_BUILD_PARALLEL_LEVEL=4\n\n# Install gtest as they recommend to, for 1.8.x\nRUN cd /usr/src/gtest && \\\n    cmake . && \\\n    make && \\\n    mv libg* /usr/lib\n\nCOPY . clangmetatool/\nWORKDIR clangmetatool\n\n# Build tool, run tests, and do a test install\nRUN cmake \\\n        -DClang_DIR=\"$(llvm-config-$TARGET_LLVM_VERSION --cmakedir)\"/../clang \\\n        -DLLVM_DIR=\"$(llvm-config-$TARGET_LLVM_VERSION --cmakedir)\" \\\n        -Bbuild \\\n        -H.\nRUN cmake --build build/ --target all\nRUN cmake --build build/ --target test -- ARGS=\"--output-on-failure\"\nRUN cmake --build build/ --target install\n\n# Fix includes for clangmetatool (due to ubuntu debian's clang)\nRUN ln -s /usr/lib/llvm-8/include/clangmetatool /usr/include/clangmetatool\n\n# Build skeleton\nRUN mkdir skeleton/build && cd skeleton/build && \\\n    cmake -DClang_DIR=\"$(llvm-config-$TARGET_LLVM_VERSION --cmakedir)\"/../clang \\\n          -Dclangmetatool_DIR=\"$(llvm-config-$TARGET_LLVM_VERSION --cmakedir)\"/../clang .. && \\\n    cmake --build . --target all && \\\n    cmake --build . --target install && \\\n    cd - && rm -rf skeleton/build\n\n# Run the tool on itself\nRUN yourtoolname $(find src skeleton -name '*.cpp') -- -std=gnu++14 -I$(llvm-config-$TARGET_LLVM_VERSION --includedir)\n"
}