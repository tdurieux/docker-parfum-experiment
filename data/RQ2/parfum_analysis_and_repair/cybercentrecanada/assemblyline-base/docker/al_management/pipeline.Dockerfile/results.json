{
  "startTime": 1674256194571,
  "endTime": 1674256195635,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG build_image\nFROM $build_image\nARG version\nARG version_tag=${version}\n\nENV ASSEMBLYLINE_VERSION=${version}\nENV ASSEMBLYLINE_IMAGE_TAG=${version_tag}\n\n# Make sure root account is locked so 'su' commands fail all the time\nRUN passwd -l root\n\n# Get required apt packages\nRUN apt-get update && apt-get install --no-install-recommends -yy build-essential libffi-dev libfuzzy-dev libldap2-dev libsasl2-dev libmagic1 && rm -rf /var/lib/apt/lists/*\n\n# Add assemblyline user\nRUN useradd -s /bin/bash -b /var/lib -U -m assemblyline\n\n# Create assemblyline config directory\nRUN mkdir -p /etc/assemblyline\nRUN chmod 750 /etc/assemblyline\nRUN chown root:assemblyline /etc/assemblyline\n\n# Create assemblyline cache directory\nRUN mkdir -p /var/cache/assemblyline\nRUN chmod 770 /var/cache/assemblyline\nRUN chown assemblyline:assemblyline /var/cache/assemblyline\n\n# Create assemblyline home directory\nRUN mkdir -p /var/lib/assemblyline\nRUN chmod 770 /var/lib/assemblyline\nRUN chown assemblyline:assemblyline /var/lib/assemblyline\n\n# Create assemblyline log directory\nRUN mkdir -p /var/log/assemblyline\nRUN chmod 770 /var/log/assemblyline\nRUN chown assemblyline:assemblyline /var/log/assemblyline\n\n# Switch to assemblyline user\nUSER assemblyline\n\n# Create the assemblyline venv\nRUN python -m venv /var/lib/assemblyline/venv\n\n# Install packages in the venv\nCOPY setup.py dist* dist/\nRUN /bin/bash -c \"source /var/lib/assemblyline/venv/bin/activate && pip install --no-cache-dir --upgrade pip wheel && pip install --no-cache-dir -f dist/ assemblyline==$version assemblyline_core==$version assemblyline_ui==$version assemblyline-client ipython jupyter\"\n\n# Setup venv when bash is launched\nRUN echo \"source /var/lib/assemblyline/venv/bin/activate\" >> /var/lib/assemblyline/.bashrc\n\nRUN mkdir -p /var/lib/assemblyline/jupyter\nRUN mkdir -p /var/lib/assemblyline/.jupyter\nRUN touch /var/lib/assemblyline/.jupyter/jupyter_notebook_config.py\nRUN echo 'import os' >> /var/lib/assemblyline/.jupyter/jupyter_notebook_config.py\nRUN echo 'from notebook.auth import passwd' >> /var/lib/assemblyline/.jupyter/jupyter_notebook_config.py\nRUN echo 'c.NotebookApp.password = passwd(os.getenv(\"NB_PASSWORD\", \"devpass\"))' >> /var/lib/assemblyline/.jupyter/jupyter_notebook_config.py\nRUN echo 'c.NotebookApp.allow_remote_access = True' >> /var/lib/assemblyline/.jupyter/jupyter_notebook_config.py\nRUN echo 'c.NotebookApp.base_url = \"/notebook/\"' >> /var/lib/assemblyline/.jupyter/jupyter_notebook_config.py\n\nWORKDIR /var/lib/assemblyline\n\nCMD /bin/bash -c \"source /var/lib/assemblyline/venv/bin/activate && (cd /var/lib/assemblyline/jupyter && jupyter notebook -y --no-browser --ip=*)\"\n"
}