{
  "startTime": 1674253779714,
  "endTime": 1674253780684,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 10,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedDockerfile": "# -*- mode: dockerfile -*-\n\nFROM nvidia/cuda:10.2-cudnn7-devel-ubuntu16.04\n\nARG PYTHON_VERSION=3.8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -yq \\\n        apt-transport-https \\\n        bison \\\n        build-essential \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        flex \\\n        git \\\n        libbz2-dev \\\n        ninja-build \\\n        software-properties-common \\\n        wget && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/conda_setup\n\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null \\\n        | gpg --batch --dearmor - \\\n        > /usr/share/keyrings/kitware-archive-keyring.gpg\n\nRUN echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ xenial main' \\\n        > /etc/apt/sources.list.d/kitware.list\n\nRUN apt-get update -o Acquire::https::apt.kitware.com::Verify-Peer=false\n\nRUN apt-get install --no-install-recommends -yq -o Acquire::https::apt.kitware.com::Verify-Peer=false \\\n        cmake kitware-archive-keyring && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -o miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n        chmod +x miniconda.sh && \\\n        ./miniconda.sh -b -p /opt/conda && \\\n        /opt/conda/bin/conda install -y python=$PYTHON_VERSION && \\\n        /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\n\nRUN python -m pip install --upgrade pip ipython ipdb\n\nCOPY . /opt/nle/\n\nWORKDIR /opt/nle\n\nRUN pip install --no-cache-dir '.[all]'\n\nWORKDIR /workspace\n\nCMD [\"/bin/bash\"]\n\n\n# Docker commands:\n#   docker rm nle -v\n#   docker build -t nle -f docker/Dockerfile-xenial .\n#   docker run --gpus all --rm --name nle nle\n# or\n#   docker run --gpus all -it --entrypoint /bin/bash nle\n"
}