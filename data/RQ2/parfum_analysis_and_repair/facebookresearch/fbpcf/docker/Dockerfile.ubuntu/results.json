{
  "startTime": 1674252487940,
  "endTime": 1674252489988,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 41,
        "columnStart": 25,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Meta Platforms, Inc. and affiliates.\n#\n# This source code is licensed under the MIT license found in the\n# LICENSE file in the root directory of this source tree.\n\nARG os_release=\"latest\"\nARG emp_image=\"fbpcf/ubuntu-emp:0.2.3\"\nARG aws_image=\"fbpcf/ubuntu-aws-s3-core:1.8.177\"\nARG folly_image=\"fbpcf/ubuntu-folly:2021.03.29.00\"\nARG gcp_image=\"fbpcf/ubuntu-gcp-cloud-cpp:1.32.1\"\n\nFROM ${emp_image} as emp\nFROM ${aws_image} as aws\nFROM ${folly_image} as folly\nFROM ${gcp_image} as gcp\n\nFROM ubuntu:${os_release} as dev\n\n# Required Packages for fbpcf\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get -y update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    ccache \\\n    cmake \\\n    git \\\n    libc-ares-dev \\\n    libboost-dev \\\n    libboost-context-dev \\\n    libboost-filesystem-dev \\\n    libboost-program-options-dev \\\n    libboost-regex-dev \\\n    libboost-system-dev \\\n    libcurl4-openssl-dev \\\n    libdouble-conversion-dev \\\n    libevent-dev \\\n    libgflags-dev \\\n    libgmp-dev \\\n    libgoogle-glog-dev \\\n    libre2-dev \\\n    libssl-dev \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /root/build/fbpcf\nWORKDIR /root/build/fbpcf\n\n# Copy build dependencies from other docker images\nCOPY --from=emp /usr/local/. /usr/local/.\nCOPY --from=aws /usr/local/. /usr/local/.\nCOPY --from=folly /usr/local/. /usr/local/.\nCOPY --from=gcp /usr/local/. /usr/local/.\n\n# fbpcf build and install\nCOPY docker/CMakeLists.txt .\nCOPY docker/cmake/ ./cmake\nCOPY fbpcf/ ./fbpcf\nCOPY example/ ./example\n# Link all libraries post-install\nRUN ldconfig\n\nRUN cmake . -DTHREADING=ON -DEMP_USE_RANDOM_DEVICE=ON\nRUN make && make install\n\nCMD [\"/bin/bash\"]\n"
}