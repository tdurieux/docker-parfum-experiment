{
  "startTime": 1674251304256,
  "endTime": 1674251306777,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Facebook, Inc. and its affiliates.\n# This source code is licensed under the MIT license found in the\n# LICENSE file in the root directory of this source tree.\n\nFROM nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04\n\nENV PYTHONUNBUFFERED TRUE\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n    fakeroot \\\n    ca-certificates \\\n    dpkg-dev \\\n    g++ \\\n    python3.8-dev \\\n    python3-pip \\\n    openjdk-11-jdk \\\n    curl \\\n    vim \\\n    git \\\n    wget \\\n    unzip \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1\n\nRUN cd /tmp \\\n    && curl -f -O https://bootstrap.pypa.io/get-pip.py \\\n    && python get-pip.py\n\n\n\n# See https://pytorch.org/ for other options if you use a different version of CUDA\nRUN pip install --no-cache-dir torch==1.6.0+cu101 torchvision==0.7.0+cu101 -f \\\n    https://download.pytorch.org/whl/torch_stable.html\nRUN python -m pip install detectron2 -f \\\n    https://dl.fbaipublicfiles.com/detectron2/wheels/cu101/torch1.6/index.html\nRUN pip install --no-cache-dir aiohttp\nRUN pip install --no-cache-dir allennlp==0.8.4\nRUN pip install --no-cache-dir zmq\nRUN pip install --no-cache-dir pytorch_transformers\nRUN pip install --no-cache-dir fairseq\nRUN pip install --no-cache-dir captum\n\n\nRUN pip install --no-cache-dir psutil\n\nRUN pip install --no-cache-dir transformers==3.4.0\nRUN pip install --no-cache-dir git+git://github.com/facebookresearch/mmf.git@079f71d8c217001fd0a88c2efd0cac51ad4b3aef\n\n# Download and unzip glove for mmf\nRUN mkdir -p /root/.cache/torch/mmf\nRUN wget https://nlp.stanford.edu/data/glove.6B.zip -P /root/.cache/torch/mmf/\nRUN unzip /root/.cache/torch/mmf/glove.6B.zip -d /root/.cache/torch/mmf/\nRUN rm /root/.cache/torch/mmf/glove.6B.zip\n\nRUN pip install --no-cache-dir torchserve torch-model-archiver\n\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh\n\nRUN mkdir -p /home/model-server/ && mkdir -p /home/model-server/tmp\nCOPY config.properties /home/model-server/config.properties\n\nWORKDIR /home/model-server\nENV TEMP=/home/model-server/tmp\nENV PYTHONIOENCODING=UTF-8\n\nENTRYPOINT [\"/usr/local/bin/dockerd-entrypoint.sh\"]\nCMD [\"serve\"]\n"
}