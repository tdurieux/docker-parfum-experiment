{
  "startTime": 1674254899463,
  "endTime": 1674254900320,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 177
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 165
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:11\n\n##########################################\n# Install packages\n##########################################\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    openssh-client \\\n    curl \\\n    git \\\n    python3 \\\n    jq \\\n    vim \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\n\n##########################################\n# Install python modules\n##########################################\nRUN pip install --no-cache-dir \\\n    awscli\n\n# Note: the dataclasses backport can be removed once Python 3 is upgraded to 3.7\nRUN pip3 install --no-cache-dir \\\n    boto3 \\\n    dataclasses\n\n##########################################\n# Install fbpcp modules\n##########################################\nRUN python3 -m pip install fbpcp\n\n##########################################\n# Install Terraform\n##########################################\nENV TERRAFORM_VERSION 0.14.9\n\n# Download Terraform, verify checksum, and unzip\nWORKDIR /usr/local/bin\nRUN curl -f -SL https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip --output terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n  curl -f -SL https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_SHA256SUMS --output terraform_${TERRAFORM_VERSION}_SHA256SUMS && \\\n  grep terraform_${TERRAFORM_VERSION}_linux_amd64.zip terraform_${TERRAFORM_VERSION}_SHA256SUMS | sha256sum -c - && \\\n  unzip terraform_${TERRAFORM_VERSION}_linux_amd64.zip && \\\n  rm terraform_${TERRAFORM_VERSION}_SHA256SUMS && \\\n  rm terraform_${TERRAFORM_VERSION}_linux_amd64.zip\n\n# Check that it's installed\nRUN terraform --version\n\n##########################################\n# Copy deploy.sh, Terraform scripts, and config.yml template\n##########################################\nRUN mkdir -p /terraform_deployment/config\nCOPY deploy.sh /terraform_deployment\nRUN chmod +x /terraform_deployment/deploy.sh\nCOPY util.sh /terraform_deployment\nRUN chmod +x /terraform_deployment/util.sh\nCOPY aws_terraform_template /terraform_deployment/terraform_scripts\nCOPY data_ingestion /terraform_deployment/terraform_scripts/data_ingestion\nCOPY semi_automated_data_ingestion /terraform_deployment/terraform_scripts/semi_automated_data_ingestion\nCOPY config.yml /terraform_deployment/config\nCOPY cli.py /terraform_deployment\nRUN mkdir -p /terraform_deployment/fbpcs/infra/cloud_bridge\nCOPY deployment_helper /terraform_deployment/fbpcs/infra/cloud_bridge/deployment_helper\n# #########################################\n# Spring Boot\n# #########################################\nARG JAR_FILE_PATH\nCOPY ${JAR_FILE_PATH}  /server/server.jar\nEXPOSE 8080\nENTRYPOINT [\"java\",\"-jar\",\"/server/server.jar\"]\n"
}