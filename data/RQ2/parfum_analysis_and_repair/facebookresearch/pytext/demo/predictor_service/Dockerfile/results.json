{
  "startTime": 1674249848151,
  "endTime": 1674249849387,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved\n\nFROM ubuntu:18.04\n\n# Install dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  build-essential \\\n  ca-certificates \\\n  cmake \\\n  curl \\\n  git \\\n  libcurl4-openssl-dev \\\n  libgflags-dev \\\n  unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install Thrift + dependencies\nWORKDIR /\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libboost-dev \\\n    libboost-test-dev \\\n    libboost-program-options-dev \\\n    libboost-filesystem-dev \\\n    libboost-thread-dev \\\n    libevent-dev \\\n    automake \\\n    libtool \\\n    flex \\\n    bison \\\n    pkg-config \\\n    libssl-dev \\\n    && rm -rf /var/lib/apt/lists/*\nRUN curl -f https://downloads.apache.org/thrift/0.13.0/thrift-0.13.0.tar.gz --output thrift-0.13.0.tar.gz \\\n    && tar -xvf thrift-0.13.0.tar.gz \\\n    && rm thrift-0.13.0.tar.gz\nWORKDIR /thrift-0.13.0\nRUN ./bootstrap.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install\n\n# Install Pistache (C++ REST framework)\nWORKDIR /\nRUN git clone https://github.com/oktal/pistache.git\nWORKDIR /pistache\nRUN git submodule update --init \\\n    && mkdir build\nWORKDIR /pistache/build\nRUN cmake -G \"Unix Makefiles\" -DCMAKE_BUILD_TYPE=Release .. \\\n    && make \\\n    && make install\n\n# Install libtorch\nWORKDIR /\nRUN curl -f https://download.pytorch.org/libtorch/cpu/libtorch-cxx11-abi-shared-with-deps-1.4.0%2Bcpu.zip --output libtorch.zip \\\n    && unzip libtorch.zip \\\n    && rm libtorch.zip\n\n# Copy local files to /app\nCOPY . /app\nWORKDIR /app\n\n# Compile app\nRUN thrift -r --gen cpp predictor.thrift\nRUN make\n\n# Add library search paths\nENV LD_LIBRARY_PATH /libtorch/lib:/usr/local/lib\n\n# Expose ports for Thrift and REST\nEXPOSE 9090\nEXPOSE 8080\n"
}