{
  "startTime": 1674250301463,
  "endTime": 1674250302680,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CUDA=\"9.0\"\nARG CUDNN=\"7\"\n\nFROM nvidia/cuda:${CUDA}-cudnn${CUDNN}-devel-ubuntu16.04\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections\n\n# install basics\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends -y apt-utils git curl ca-certificates bzip2 cmake tree htop bmon iotop g++ && rm -rf /var/lib/apt/lists/*;\n\n# Install Miniconda\nRUN curl -f -so /miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n && chmod +x /miniconda.sh \\\n && /miniconda.sh -b -p /miniconda \\\n && rm /miniconda.sh\n\nENV PATH=/miniconda/bin:$PATH\n\n# Create a Python 3.6 environment\nRUN /miniconda/bin/conda install -y conda-build \\\n && /miniconda/bin/conda create -y --name py36 python=3.6.7 \\\n && /miniconda/bin/conda clean -ya\n\nENV CONDA_DEFAULT_ENV=py36\nENV CONDA_PREFIX=/miniconda/envs/$CONDA_DEFAULT_ENV\nENV PATH=$CONDA_PREFIX/bin:$PATH\nENV CONDA_AUTO_UPDATE_CONDA=false\n\nRUN conda install -y ipython\nRUN pip install --no-cache-dir requests ninja yacs cython matplotlib jupyter tqdm\n\n# Install PyTorch Nightly\nARG CUDA\nRUN conda install -y pytorch-nightly cudatoolkit=${CUDA} -c pytorch\n\n# Install OpenCV\nRUN conda install -y opencv -c menpo \\\n && conda clean -ya\n\nWORKDIR /root\n\nUSER root\n\nRUN mkdir /notebooks\n\nWORKDIR /notebooks\n\n# Install TorchVision master\nRUN git clone https://github.com/pytorch/vision.git \\\n && cd vision \\\n && python setup.py install\n\n# install pycocotools\nRUN git clone https://github.com/cocodataset/cocoapi.git \\\n && cd cocoapi/PythonAPI \\\n && python setup.py build_ext install\n\n# install apex\nRUN git clone https://github.com/NVIDIA/apex.git \\\n && cd apex \\\n && python setup.py install --cuda_ext --cpp_ext\n\n# install PyTorch Detection\nARG FORCE_CUDA=\"1\"\nENV FORCE_CUDA=${FORCE_CUDA}\nRUN git clone https://github.com/facebookresearch/maskrcnn-benchmark.git \\\n && cd maskrcnn-benchmark \\\n && python setup.py build develop\n\nRUN jupyter notebook --generate-config\n\nENV CONFIG_PATH=\"/root/.jupyter/jupyter_notebook_config.py\"\n\nCOPY \"jupyter_notebook_config.py\" ${CONFIG_PATH}\n\nENTRYPOINT [\"sh\", \"-c\", \"jupyter notebook --allow-root -y --no-browser --ip=0.0.0.0 --config=${CONFIG_PATH}\"]\n"
}