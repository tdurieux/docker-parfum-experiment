{
  "startTime": 1674215833868,
  "endTime": 1674215835703,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cudagl:10.0-devel-centos7\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nARG AIHABITAT_CONDA_CHN\nARG AIHABITAT_CONDA_CHN_PWD\n\nRUN yum install -y wget curl perl cmake util-linux xz bzip2 git patch which unzip python3 && rm -rf /var/cache/yum\nRUN yum install -y yum-utils centos-release-scl && rm -rf /var/cache/yum\nRUN yum-config-manager --enable rhel-server-rhscl-7-rpms\nRUN yum install -y devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-gcc-gfortran devtoolset-7-binutils && rm -rf /var/cache/yum\nENV PATH=/opt/rh/devtoolset-7/root/usr/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/rh/devtoolset-7/root/usr/lib64:/opt/rh/devtoolset-7/root/usr/lib:$LD_LIBRARY_PATH\n\nRUN yum install -y autoconf aclocal automake make && rm -rf /var/cache/yum\nRUN yum install -y mesa-libEGL-devel mesa-libGL-devel && rm -rf /var/cache/yum\n\n# Install patchelf\nADD ./common/install_patchelf.sh install_patchelf.sh\nRUN bash ./install_patchelf.sh && rm install_patchelf.sh\n\n# Install CUDA (we don't build with cuda support for now)\n# ADD ./common/install_cuda.sh install_cuda.sh\n# RUN bash ./install_cuda.sh 9.2 10.0 10.1 && rm install_cuda.sh\n\n# switch shell sh (default in Linux) to bash\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Install Anaconda\nENV PATH /opt/conda/bin:$PATH\nADD ./common/install_conda.sh install_conda.sh\nRUN bash ./install_conda.sh && rm install_conda.sh\n\nRUN conda init bash && conda create --name py37 python=3.7 -y\nRUN source ~/.bashrc && conda activate py37 && conda install -y anaconda-client git gitpython ninja conda-build\nRUN conda config --set anaconda_upload yes\n"
}