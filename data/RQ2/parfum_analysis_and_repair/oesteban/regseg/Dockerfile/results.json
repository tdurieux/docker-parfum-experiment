{
  "startTime": 1674254537159,
  "endTime": 1674254538048,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedDockerfile": "# Use Ubuntu Artful LTS\nFROM ubuntu:artful-20180123\n\n# Pre-cache neurodebian key\nCOPY .docker/neurodebian.gpg /etc/.neurodebian.gpg\n\n# Prepare environment\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n                    curl \\\n                    bzip2 \\\n                    ca-certificates \\\n                    xvfb \\\n                    pkg-config && \\\n    curl -f -sSL https://neuro.debian.net/lists/trusty.us-ca.full >> /etc/apt/sources.list.d/neurodebian.sources.list && \\\n    apt-key add /etc/.neurodebian.gpg && \\\n    (apt-key adv --refresh-keys --keyserver hkp://ha.pool.sks-keyservers.net 0xA5D32F012649A5A9 || true) && \\\n    apt-get update && rm -rf /var/lib/apt/lists/*;\n\n# Installing Ubuntu packages and cleaning up\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n                    libinsighttoolkit4-dev \\\n                    cmake \\\n                    g++ \\\n                    build-essential \\\n                    libjsoncpp-dev \\\n                    libvtk6-dev \\\n                    libvtkgdcm2-dev \\\n                    libboost-filesystem-dev \\\n                    libboost-system-dev \\\n                    libboost-program-options-dev \\\n                    libfftw3-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n\nCOPY ./Code /src/regseg\n\nWORKDIR /usr/local/build/regseg/\nRUN cmake /src/regseg/ -G\"Unix Makefiles\"  -DCMAKE_BUILD_TYPE=Release -DITK_DIR=/usr/local/lib/cmake/ITK-4.7/ -DVTK_DIR=/usr/lib/cmake/vtk-6.0/ && \\\n    make -j$( grep -c ^processor /proc/cpuinfo ) && \\\n    make install && \\\n    rm -rf /src/regseg/ /usr/local/build/regseg/\n\nENTRYPOINT [\"/usr/local/bin/regseg\"]\n\n# Store metadata\nARG BUILD_DATE\nARG VCS_REF\nARG VERSION\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=\"RegSeg\" \\\n      org.label-schema.description=\"RegSeg -\" \\\n      org.label-schema.url=\"https://github.com/oesteban/RegSeg\" \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=\"https://github.com/oesteban/RegSeg\" \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.schema-version=\"1.0\"\n\nWORKDIR /work\n"
}