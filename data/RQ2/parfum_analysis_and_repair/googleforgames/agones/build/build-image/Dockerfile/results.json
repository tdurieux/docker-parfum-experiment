{
  "startTime": 1674248901212,
  "endTime": 1674248903011,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 174,
        "columnEnd": 232
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 70,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 Google LLC All Rights Reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# ForceUpdate 12 -- change here if you need to force a rebuild\n\nFROM debian:bullseye\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential gnupg curl git wget psmisc rsync make python bash-completion \\\n    zip nano jq graphviz gettext-base plantuml software-properties-common && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install go\nWORKDIR /usr/local\nENV GO_VERSION=1.17.2\nENV GOPATH /go\nENV GO111MODULE=on\nRUN wget -q https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && \\\n    tar -xzf go${GO_VERSION}.linux-amd64.tar.gz && rm go${GO_VERSION}.linux-amd64.tar.gz && mkdir ${GOPATH}\n\n# install gcloud + kubectl, because it's an easy way to test/dev against kubernetes.\nWORKDIR /opt\n\n# credits https://cloud.google.com/sdk/docs/install#deb\nRUN echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && \\\n    apt-get install --no-install-recommends google-cloud-cli google-cloud-cli-gke-gcloud-auth-plugin google-cloud-cli-app-engine-go -y && \\\n    echo \"source /usr/share/google-cloud-sdk/completion.bash.inc\" >> /root/.bashrc && rm -rf /var/lib/apt/lists/*;\n\n# update the path for go\nENV PATH /usr/local/go/bin:/go/bin:$PATH\n\n# install go tooling for development, building and testing\nRUN go install golang.org/x/tools/cmd/goimports@latest\n\n# the kubernetes version for the file\nENV KUBERNETES_VER 1.22.9\n\n# overwrite kubectl as we want a specific version\nRUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VER}/bin/linux/amd64/kubectl && \\\n    chmod go+rx ./kubectl && \\\n    mv ./kubectl /usr/local/bin/kubectl\nRUN echo \"source <(kubectl completion bash)\" >> /root/.bashrc\n\n# install the release branch of the code generator tools\nRUN mkdir -p /go/src/k8s.io && cd /go/src/k8s.io && \\\n    git clone -b kubernetes-${KUBERNETES_VER} --depth=3 https://github.com/kubernetes/code-generator.git\n\n# install Helm package manager\nENV HELM_VER 3.5.0\nENV HELM_URL https://get.helm.sh/helm-v${HELM_VER}-linux-amd64.tar.gz\nRUN curl -f -L ${HELM_URL} > /tmp/helm.tar.gz \\\n    && tar -zxvf /tmp/helm.tar.gz -C /tmp \\\n    && mv /tmp/linux-amd64/helm /usr/local/bin/helm \\\n    && chmod go+rx /usr/local/bin/helm \\\n    && rm /tmp/helm.tar.gz && rm -rf /tmp/linux-amd64\nRUN echo \"source <(helm completion bash)\" >> /root/.bashrc\n\n# install golang-ci linter\nRUN go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.43.0\n\n#\n#  \\ \\      / /__| |__  ___(_) |_ ___\n#   \\ \\ /\\ / / _ \\ '_ \\/ __| | __/ _ \\\n#    \\ V  V /  __/ |_) \\__ \\ | |_  __/\n#     \\_/\\_/ \\___|_.__/|___/_|\\__\\___|\n#\n\nENV HUGO_VER 0.82.1\nRUN mkdir /tmp/hugo && \\\n    wget -q -O /tmp/hugo/hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v${HUGO_VER}/hugo_extended_${HUGO_VER}_Linux-64bit.tar.gz && \\\n    tar -zxvf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/ && \\\n    mv /tmp/hugo/hugo /usr/local/bin/ && \\\n    rm -r /tmp/hugo && rm /tmp/hugo/hugo.tar.gz\n\nRUN add-apt-repository -y -r ppa:chris-lea/node.js\nRUN rm -f /etc/apt/sources.list.d/chris-lea-node_js-*.list\nRUN rm -f /etc/apt/sources.list.d/chris-lea-node_js-*.list.save\n\nARG KEYRING=/usr/share/keyrings/nodesource.gpg\nARG VERSION=node_16.x\n\nRUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --batch --dearmor | tee \"$KEYRING\" >/dev/null\nRUN gpg --batch --no-default-keyring --keyring \"$KEYRING\" --list-keys\n\nARG DISTRO=\"buster\"\nRUN echo \"deb [signed-by=$KEYRING] https://deb.nodesource.com/$VERSION $DISTRO main\" | tee /etc/apt/sources.list.d/nodesource.list\nRUN echo \"deb-src [signed-by=$KEYRING] https://deb.nodesource.com/$VERSION $DISTRO main\" | tee -a /etc/apt/sources.list.d/nodesource.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install API reference docs generator\nRUN mkdir -p /go/src/github.com/ahmetb && \\\n    cd /go/src/github.com/ahmetb && git clone -b v0.2.0 https://github.com/ahmetb/gen-crd-api-reference-docs && \\\n    cd ./gen-crd-api-reference-docs && go build\n\n# html checker\nRUN mkdir /tmp/htmltest && \\\n    wget -O /tmp/htmltest/htmltest.tar.gz https://github.com/wjdp/htmltest/releases/download/v0.13.0/htmltest_0.13.0_linux_amd64.tar.gz && \\\n    tar -zxvf /tmp/htmltest/htmltest.tar.gz -C /tmp/htmltest && \\\n    mv /tmp/htmltest/htmltest /usr/local/bin && \\\n    rm -r /tmp/htmltest && rm /tmp/htmltest/htmltest.tar.gz\n\n# make sure we keep the path to go\nRUN echo \"export PATH=/usr/local/go/bin:/go/bin/:\\$PATH\" >> /root/.bashrc\n# make nano the editor\nRUN echo \"export EDITOR=nano\" >> /root/.bashrc\n\n# install terraform\nRUN wget -nv -O terraform.zip https://releases.hashicorp.com/terraform/1.0.8/terraform_1.0.8_linux_amd64.zip && unzip ./terraform.zip && mv terraform /usr/local/bin/\n\n# code generation scripts\nCOPY *.sh /root/\nRUN chmod +x /root/*.sh\n\nWORKDIR /go\n"
}