diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googleforgames/agones/build/build-image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googleforgames/agones/build/build-image/Dockerfile/repaired.Dockerfile
index d5844fc..2f322a7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/googleforgames/agones/build/build-image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/googleforgames/agones/build/build-image/Dockerfile/repaired.Dockerfile
@@ -17,9 +17,9 @@
 FROM debian:bullseye
 
 RUN apt-get update && \
-    apt-get install -y build-essential gnupg curl git wget psmisc rsync make python bash-completion \
+    apt-get install --no-install-recommends -y build-essential gnupg curl git wget psmisc rsync make python bash-completion \
     zip nano jq graphviz gettext-base plantuml software-properties-common && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # install go
 WORKDIR /usr/local
@@ -33,9 +33,9 @@ RUN wget -q https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz && \
 WORKDIR /opt
 
 # credits https://cloud.google.com/sdk/docs/install#deb
-RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && \
-    apt-get install google-cloud-cli google-cloud-cli-gke-gcloud-auth-plugin google-cloud-cli-app-engine-go -y && \
-    echo "source /usr/share/google-cloud-sdk/completion.bash.inc" >> /root/.bashrc
+RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg  add - && apt-get update -y && \
+    apt-get install --no-install-recommends google-cloud-cli google-cloud-cli-gke-gcloud-auth-plugin google-cloud-cli-app-engine-go -y && \
+    echo "source /usr/share/google-cloud-sdk/completion.bash.inc" >> /root/.bashrc && rm -rf /var/lib/apt/lists/*;
 
 # update the path for go
 ENV PATH /usr/local/go/bin:/go/bin:$PATH
@@ -47,7 +47,7 @@ RUN go install golang.org/x/tools/cmd/goimports@latest
 ENV KUBERNETES_VER 1.22.9
 
 # overwrite kubectl as we want a specific version
-RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VER}/bin/linux/amd64/kubectl && \
+RUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VER}/bin/linux/amd64/kubectl && \
     chmod go+rx ./kubectl && \
     mv ./kubectl /usr/local/bin/kubectl
 RUN echo "source <(kubectl completion bash)" >> /root/.bashrc
@@ -59,7 +59,7 @@ RUN mkdir -p /go/src/k8s.io && cd /go/src/k8s.io && \
 # install Helm package manager
 ENV HELM_VER 3.5.0
 ENV HELM_URL https://get.helm.sh/helm-v${HELM_VER}-linux-amd64.tar.gz
-RUN curl -L  ${HELM_URL} > /tmp/helm.tar.gz \
+RUN curl -f -L ${HELM_URL} > /tmp/helm.tar.gz \
     && tar -zxvf /tmp/helm.tar.gz -C /tmp \
     && mv /tmp/linux-amd64/helm /usr/local/bin/helm \
     && chmod go+rx /usr/local/bin/helm \
@@ -81,7 +81,7 @@ RUN mkdir /tmp/hugo && \
     wget -q -O /tmp/hugo/hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v${HUGO_VER}/hugo_extended_${HUGO_VER}_Linux-64bit.tar.gz && \
     tar -zxvf /tmp/hugo/hugo.tar.gz -C /tmp/hugo/ && \
     mv /tmp/hugo/hugo /usr/local/bin/ && \
-    rm -r /tmp/hugo
+    rm -r /tmp/hugo && rm /tmp/hugo/hugo.tar.gz
 
 RUN add-apt-repository -y -r ppa:chris-lea/node.js
 RUN rm -f /etc/apt/sources.list.d/chris-lea-node_js-*.list
@@ -90,14 +90,14 @@ RUN rm -f /etc/apt/sources.list.d/chris-lea-node_js-*.list.save
 ARG KEYRING=/usr/share/keyrings/nodesource.gpg
 ARG VERSION=node_16.x
 
-RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --dearmor | tee "$KEYRING" >/dev/null
-RUN gpg --no-default-keyring --keyring "$KEYRING" --list-keys
+RUN curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --batch --dearmor | tee "$KEYRING" >/dev/null
+RUN gpg --batch --no-default-keyring --keyring "$KEYRING" --list-keys
 
 ARG DISTRO="buster"
 RUN echo "deb [signed-by=$KEYRING] https://deb.nodesource.com/$VERSION $DISTRO main" | tee /etc/apt/sources.list.d/nodesource.list
 RUN echo "deb-src [signed-by=$KEYRING] https://deb.nodesource.com/$VERSION $DISTRO main" | tee -a /etc/apt/sources.list.d/nodesource.list
 
-RUN apt-get update && apt-get install -y nodejs
+RUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # install API reference docs generator
 RUN mkdir -p /go/src/github.com/ahmetb && \
@@ -109,7 +109,7 @@ RUN mkdir /tmp/htmltest && \
     wget -O /tmp/htmltest/htmltest.tar.gz https://github.com/wjdp/htmltest/releases/download/v0.13.0/htmltest_0.13.0_linux_amd64.tar.gz && \
     tar -zxvf /tmp/htmltest/htmltest.tar.gz -C /tmp/htmltest && \
     mv /tmp/htmltest/htmltest /usr/local/bin && \
-    rm -r /tmp/htmltest
+    rm -r /tmp/htmltest && rm /tmp/htmltest/htmltest.tar.gz
 
 # make sure we keep the path to go
 RUN echo "export PATH=/usr/local/go/bin:/go/bin/:\$PATH" >> /root/.bashrc