{
  "startTime": 1674249451807,
  "endTime": 1674249452791,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 43,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tiangolo/uvicorn-gunicorn:python3.8-slim\n\nENV HOME=\"/root\"\nWORKDIR /root\n\n# install apt dependencies\nRUN --mount=type=cache,target=/var/cache/apt \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends git wget && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install dockerize\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n# install poetry\nARG PYPI_MIRROR\nRUN if [ -n \"$PYPI_MIRROR\" ]; then pip config set global.index-url $PYPI_MIRROR; fi\nRUN --mount=type=cache,target=/root/.cache pip install --no-cache-dir poetry\n\n# create virtualenv\nENV VIRTUAL_ENV=/root/.venv\nRUN python3 -m virtualenv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# install dependencies\nCOPY pyproject.toml poetry.lock README.md /root/\nCOPY brick_server/minimal/__init__.py /root/brick_server/minimal/\nRUN --mount=type=cache,target=/root/.cache poetry install --no-dev\nCOPY . /root\nRUN --mount=type=cache,target=/root/.cache poetry install --no-dev\n\nEXPOSE $PORT\n\nCMD python3 -m brick_server.minimal\n"
}