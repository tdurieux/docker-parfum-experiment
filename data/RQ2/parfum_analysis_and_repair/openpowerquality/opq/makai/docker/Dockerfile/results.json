{
  "startTime": 1674251355911,
  "endTime": 1674251356909,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim\n\nWORKDIR /build\n\n# Build tools and deps\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        cmake \\\n        curl \\\n        g++ \\\n        gcc \\\n        git \\\n        libprotobuf17 \\\n        libprotobuf-dev \\\n        libzmq5 \\\n        libzmq5-dev \\\n        perl \\\n        pkg-config \\\n        protobuf-compiler \\\n        libmongoc-dev && rm -rf /var/lib/apt/lists/*;\n\n# Rust\n#RUN curl -s https://sh.rustup.rs -sSf | sh -s -- -y && \\\n#    $HOME/.cargo/bin/rustup install nightly         && \\\n#    $HOME/.cargo/bin/rustup default nightly\n\nRUN curl -s https://sh.rustup.rs -sSf | sh -s -- -y\n\nENV PATH=\"/root/.cargo/bin:$PATH\"\n\n# sccache\nRUN curl -f -L -O https://github.com/mozilla/sccache/releases/download/0.2.8/sccache-0.2.8-x86_64-unknown-linux-musl.tar.gz && \\\n    tar xf sccache-0.2.8-x86_64-unknown-linux-musl.tar.gz && \\\n    rm sccache-0.2.8-x86_64-unknown-linux-musl.tar.gz && \\\n    cp sccache-0.2.8-x86_64-unknown-linux-musl/sccache $HOME/.cargo/bin && \\\n    rm -rf sccache-0.2.8-x86_64-unknown-linux-musl\n\nENV RUSTC_WRAPPER=\"sccache\"\n\n# Add makai contents\nADD makai-build /build\n\n# Acquisition broker\nRUN sccache --start-server                                      && \\\n    cd /build/makai/AcquisitionBroker/                          && \\\n    cargo build --release                                       && \\\n    cd /build/makai/TriggeringBroker/                           && \\\n    cargo build --release                                       && \\\n    cd /build/makai/TriggeringService                           && \\\n    cargo build --release                                       && \\\n    cd /build/makai/TriggeringService/plugins/health            && \\\n    cargo build --release                                       && \\\n    cd /build/makai/TriggeringService/plugins/print             && \\\n    cargo build --release                                       && \\\n    cd /build/makai/TriggeringService/plugins/threshold_trigger && \\\n    cargo build --release                                       && \\\n    cd /build/makai/TriggeringService/plugins/napali_trigger    && \\\n    cargo build --release                                       && \\\n    cd /build/makai/EventService                                && \\\n    cargo build --release                                       && \\\n    sccache --stop-server\n\n# Organize makai binaries and configurations\nRUN mkdir -p /build/bin                                                                                                     && \\\n    cp /build/makai/run-makai.sh /build/bin                                                                                 && \\\n    cp /build/makai/AcquisitionBroker/target/release/ab /build/bin                                                          && \\\n    cp /build/makai/TriggeringBroker/target/release/tb /build/bin                                                           && \\\n    cp /build/makai/TriggeringService/target/release/makai /build/bin                                                       && \\\n    cp /build/makai/EventService/target/release/event_service /build/bin                                                    && \\\n    cp /build/makai/TriggeringService/plugins/health/target/release/libhealth_plugin.so /build/bin                          && \\\n    cp /build/makai/TriggeringService/plugins/print/target/release/libprint_plugin.so /build/bin                            && \\\n    cp /build/makai/TriggeringService/plugins/threshold_trigger/target/release/libthreshold_trigger_plugin.so /build/bin    && \\\n    cp /build/makai/TriggeringService/plugins/napali_trigger/target/release/libnapali_plugin.so /build/bin\n\n# Cleanup\nRUN rm -rf /build/makai     && \\\n    rm -rf /build/protocol  && \\\n    rm -rf $HOME/.cargo     && \\\n    rm -rf $HOME/.cache     && \\\n    rm -rf $HOME/.rustup    && \\\n    rm -rf $HOME/.multirust && \\\n    apt-get purge -y        \\\n        cmake               \\\n        curl                \\\n        g++                 \\\n        gcc                 \\\n        git                 \\\n        perl                \\\n        pkg-config          \\\n        protobuf-compiler   && \\\n    apt-get autoremove -y   && \\\n    rm -rf /var/lib/apt/lists/*\n\n# These ports only need to be exposed to other containers.\nEXPOSE 8080\n\nEXPOSE 9899\n\nEXPOSE 10000\n\n# These ports must be exposed to the outside world. This is accomplished in the docker-compose.yml file.\nEXPOSE 9880\n\nEXPOSE 8196\n\nEXPOSE 8194\n\nEXPOSE 9881\n\nEXPOSE 10001\n\n# Start Makai\nCMD [\"/bin/bash\", \"/build/bin/run-makai.sh\"]\n"
}