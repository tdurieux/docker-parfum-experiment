{
  "startTime": 1674216132447,
  "endTime": 1674216133996,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.18.1\nWORKDIR /HOME\n\n# prepare dependency\nCOPY . /HOME/gazelle\nWORKDIR /HOME/gazelle\nRUN npm i && npm cache clean --force;\nRUN npm run bootstrap\nRUN npm run build\n\n\n# start aggregator process\nWORKDIR /HOME/e2e-tests\n\nCOPY ./integration-test/e2e-tests/package.json package.json\nCOPY ./integration-test/e2e-tests/config.local.json config.local.json\nCOPY ./integration-test/e2e-tests/tsconfig.json tsconfig.json\n\nRUN npm i && npm cache clean --force;\n\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n  && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n  && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nCMD dockerize -wait tcp://ganache:8545 -wait tcp://aggregator:3000 npm test\n"
}