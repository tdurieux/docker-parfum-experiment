{
  "startTime": 1674248169692,
  "endTime": 1674248170757,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 3
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 3
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 3
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 3
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n\tapt-get upgrade -y\n\nRUN apt-get install --no-install-recommends -y \\\n\tapt-transport-https \\\n\tsoftware-properties-common \\\n\twget \\\n\tcurl && rm -rf /var/lib/apt/lists/*;\n\n\n#\n#  Set up extra repositories\n#\n#  GCC and clang\nRUN add-apt-repository -y ppa:ubuntu-toolchain-r/test\nRUN add-apt-repository -y \"deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-8 main\"\n\n#  cmake (script below used instead)\n# RUN add-apt-repository -y ppa:rjvbertin/misc\n\n#  Redis and PostgreSQL\nRUN add-apt-repository ppa:chris-lea/redis-server\nRUN add-apt-repository \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -sc)-pgdg main\"\n\n\n#\n#  Install repo keys\n#\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | \\\n\tapt-key add -\n\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \\\n\tapt-key add -\n\n\n#\n#  Update with repos added above\n#\nRUN apt-get update && \\\n\tapt-get upgrade -y\n\n\n#\n#  Install everything needed\n#\nRUN apt-get install --no-install-recommends -y \\\n\tautoconf \\\n\tbuild-essential \\\n\tclang-8 \\\n\tdebhelper \\\n\tdevscripts \\\n\tdh-make \\\n\tdoxygen \\\n\tfakeroot \\\n\tfirebird-dev \\\n\tfreetds-dev \\\n\tgcc-7 \\\n\tgccgo-7 \\\n\tgdb \\\n\tgraphviz \\\n\tldap-utils \\\n\tlibcollectdclient-dev \\\n\tlibcap-dev \\\n\tlibcurl4-openssl-dev \\\n\tlibgdbm-dev \\\n\tlibhiredis-dev \\\n\tlibidn11-dev \\\n\tlibiodbc2-dev \\\n\tlibiodbc2 \\\n\tlibjson0 \\\n\tlibjson0-dev \\\n\tlibkrb5-dev \\\n\tlibldap2-dev \\\n\tlibluajit-5.1-dev \\\n\tlibmemcached-dev \\\n\tlibmysqlclient-dev \\\n\tlibnl-genl-3-dev \\\n\tlibpam0g-dev \\\n\tlibpcap-dev \\\n\tlibpcre3-dev \\\n\tlibperl-dev \\\n\tlibpq-dev \\\n\tlibpython-all-dev \\\n\tlibreadline-dev \\\n\tlibsnmp-dev \\\n\tlibssl-dev \\\n\tlibtalloc-dev \\\n\tlibtalloc2-dbg \\\n\tlibunbound-dev \\\n\tlibwbclient-dev \\\n\tlibykclient-dev \\\n\tlibyubikey-dev \\\n\tlintian \\\n\tllvm-8 \\\n\tluajit \\\n\tlynx \\\n\tmysql-server \\\n\tpbuilder \\\n\tpostgresql-10 \\\n\tpostgresql-client-10 \\\n\tpython-dev \\\n\tquilt \\\n\tslapd \\\n\truby \\\n\tgit \\\n\tredis-server \\\n\tjq && rm -rf /var/lib/apt/lists/*;\n\n\n#\n#  Install cmake\n#\nRUN curl -f -o cmake.sh https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.sh\nRUN [ \"$(cat cmake.sh | openssl sha256 | sed 's/^.* //')\" = \"bb26b1871f9e5c2fb73476186cc94d03b674608f704b48b94d617340b87b4d73\" ]\nRUN sh cmake.sh --skip-license --prefix=/usr/local\n\n\n#\n#  Install libkqueue\n#\nWORKDIR /usr/local/src/repositories\n\nRUN git clone --branch master --depth=1 https://github.com/mheily/libkqueue.git\n\n### Get the latest release of libkqueue\n# RUN curl -sL https://github.com/mheily/libkqueue/archive/09f9ae5560974f132ee9e8313e2b6c82c7e74f69.tar.gz > libkqueue.tgz\n# RUN curl -sL $(curl -s https://api.github.com/repos/mheily/libkqueue/releases/latest | jq -r .tarball_url) > libkqueue.tgz\n### Figure out the directory structure.\n# RUN tar zxf libkqueue.tgz && mv $(tar ztf libkqueue.tgz | head -1) libkqueue\n\nWORKDIR /usr/local/src/repositories/libkqueue\n\nRUN cmake -G \"Unix Makefiles\" -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_INSTALL_LIBDIR=lib ./ && \\\n\tmake && \\\n\tcpack -G DEB && \\\n\tdpkg -i --force-all ./libkqueue*.deb\n\nWORKDIR /usr/local/src/repositories\n"
}