{
  "startTime": 1674254988116,
  "endTime": 1674254988737,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 189
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 189
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster-slim as build\nLABEL maintainer=\"dro@arrakis.it\"\n\n# Install build dependencies\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y automake build-essential pkg-config libffi-dev libgmp-dev libssl-dev libtinfo-dev libsystemd-dev zlib1g-dev make g++ tmux git jq wget libncursesw5 libtool autoconf \\\n    && apt-get install --no-install-recommends -y libsqlite3-dev m4 ca-certificates gcc libc6-dev curl \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install rust\nENV RUSTUP_HOME=/usr/local/rustup \\\r\n    CARGO_HOME=/usr/local/cargo \\\r\n    PATH=/usr/local/cargo/bin:$PATH \\\r\n    RUST_VERSION=1.47.0\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nRUN cat /usr/local/cargo/env\nRUN rustup install stable \\\r\n    && rustup default stable \\\r\n    && rustup update \\\r\n    && rustup component add clippy rustfmt\n\n# Install cncli\nARG VERSION\nRUN echo \"Building tags/v$VERSION...\" \\\r\n    && git clone --recurse-submodules https://github.com/AndrewWestberg/cncli \\\r\n    && cd cncli \\\r\n    && git fetch --all --recurse-submodules --tags \\\r\n    && git tag \\\r\n    && git checkout tags/v$VERSION \\\r\n    && cargo install --path . --force \\\r\n    && cncli --version\n\n# Run\nFROM arradev/cardano-node:latest AS node\n\nFROM debian:stable-slim\nSHELL [\"/bin/bash\", \"-c\"]\n\n# Install dependencies\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y openssl \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install compiled files\nCOPY --from=build /usr/local/cargo/bin/cncli /bin/cncli\n\nENTRYPOINT [\"cncli\"]"
}