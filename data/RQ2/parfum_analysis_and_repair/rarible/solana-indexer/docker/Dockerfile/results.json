{
  "startTime": 1674248727760,
  "endTime": 1674248729258,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 42,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 12,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 7,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "FROM arm64v8/node:lts-bullseye as build\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y bzip2 \\\n    libssl-dev libudev-dev clang \\\n    wget curl gcc pkg-config make \\\n    libpixman-1-dev libcairo2-dev libpango1.0-dev libjpeg62-turbo-dev libgif-dev \\\n    build-essential python-dev libpcap-dev libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# explicitly set user/group IDs\nRUN set -eux; \\\n        groupadd -r solana --gid=999; \\\n        useradd -r -g solana --uid=999 --home-dir=/home/solana --shell=/bin/bash solana; \\\n        mkdir -p /home/solana; \\\n        chown -R solana:solana /home/solana\nUSER solana\nWORKDIR /home/solana\n\nENV SOLANA_VERSION=1.9.14\nRUN wget -O solana-$SOLANA_VERSION.tar.gz https://github.com/solana-labs/solana/archive/refs/tags/v$SOLANA_VERSION.tar.gz\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y\n\nRUN . ~/.cargo/env && echo $PATH\nENV PATH=\"~/.cargo/bin:${PATH}\"\n\nRUN cd ~ && tar -xvf solana-$SOLANA_VERSION.tar.gz && rm solana-$SOLANA_VERSION.tar.gz\nRUN ./solana-$SOLANA_VERSION/scripts/cargo-install-all.sh .\n\nRUN wget -O metaplex.zip https://github.com/rarible/metaplex/archive/refs/heads/master.zip\nRUN unzip metaplex.zip\n\nRUN npm install ts-node && npm cache clean --force;\nRUN cd /home/solana/metaplex-master/js && yarn install && yarn cache clean;\n\nRUN ~/.cargo/bin/cargo install --git https://github.com/project-serum/anchor --tag v0.22.1 anchor-cli --locked\n\nFROM arm64v8/node:lts-bullseye-slim as target\nRUN set -eux; \\\n        groupadd -r solana --gid=999; \\\n        useradd -r -g solana --uid=999 --home-dir=/home/solana --shell=/bin/bash solana; \\\n        mkdir -p /home/solana; \\\n        chown -R solana:solana /home/solana\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y bzip2 && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g ts-node && npm cache clean --force;\n\nUSER solana\nWORKDIR /home/solana\n\nCOPY --chown=solana:solana id.json /home/solana/.config/solana/\nCOPY --chown=solana:solana mpl_token_metadata.so /home/solana/\nCOPY --chown=solana:solana mpl_auction_house.so /home/solana/\nCOPY --chown=solana:solana auction_house.json /home/solana/\nCOPY --from=build /home/solana/bin /usr/bin\nCOPY --from=build /home/solana/metaplex-master /home/solana/metaplex\nCOPY --from=build /home/solana/.cargo/bin/anchor /usr/bin\n\nRUN solana config set --url localhost\nRUN anchor init tmp"
}