{
  "startTime": 1674221225652,
  "endTime": 1674221225872,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile builds a production-ready image of K2 to be used across all\n# services. See the Dockerfile documentation here:\n# https://docs.docker.com/engine/reference/builder/\n\n# Use the latest Node 6 base docker image\n# https://github.com/nodejs/docker-node\nFROM node:6\nENV INSTALL_TARGET=cloud\n\n# Copy everything (excluding what's in .dockerignore) into an empty dir\nCOPY . /home\nWORKDIR /home\n\n# This installs global dependencies, then in the postinstall script, runs lerna\n# bootstrap to install and link cloud-api, cloud-core, and cloud-workers.\n# We need the --unsafe-perm param to run the postinstall script since Docker\n# will run everything as sudo\nRUN npm install --unsafe-perm && npm cache clean --force;\n\n# This uses babel to compile any es6 to stock js for plain node\nRUN node packages/cloud-core/build/build-n1-cloud\n\n# External services run on port 80. Expose it.\nEXPOSE 5100\n\n# We use a start-aws command that automatically spawns the correct process\n# based on environmpackages/cloud-coreent variables (which changes instance to instance)\nCMD packages/cloud-core/_n1cloud_docker_launcher.sh ${AWS_SERVICE_NAME}\n"
}