{
  "startTime": 1674254396527,
  "endTime": 1674254397576,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE=node:16.13-alpine\n\nFROM $IMAGE as build\n\nWORKDIR /app\nCOPY . .\n\nRUN apk add --no-cache bash curl git py-pip make\nRUN npm config set unsafe-perm true\nRUN npm i && npm cache clean --force;\nRUN npm run build\n#FOR SWC TRANSPILATION\n# RUN npm run build-swc\n# COPY package.json ./build/package.json\n\nRUN npm prune --production\nRUN ./docker/node-modules-clean.sh\nRUN npx node-prune\n\nFROM $IMAGE\nCOPY --chown=node:node --from=build /app/build /app/build\nCOPY --chown=node:node --from=build /app/graphql /app/graphql\nCOPY --chown=node:node --from=build /app/swagger /app/swagger\nCOPY --chown=node:node --from=build /app/.env.dist /app/build/.env.dist\nCOPY --chown=node:node --from=build /app/node_modules /app/node_modules\nENV NODE_ENV production\nENTRYPOINT [\"node\", \"./src/index.js\"]\nWORKDIR /app/build\nCMD [\"\"]\n\nUSER node\n"
}