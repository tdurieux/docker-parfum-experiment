diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dcmartin/hassio-addons/tfod/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dcmartin/hassio-addons/tfod/Dockerfile/repaired.Dockerfile
index 382ea9a..63f0501 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/dcmartin/hassio-addons/tfod/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/dcmartin/hassio-addons/tfod/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-
 ARG BUILD_FROM=hassioaddons/base:2.0.0
 
 FROM $BUILD_FROM
@@ -28,24 +27,24 @@ RUN apk add --no-cache \
   python3 \
   tcsh@community
 
-RUN apk add libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev
-RUN apk add libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
-RUN apk add libxvidcore-dev libx264-dev
-RUN apk add qt4-dev-tools
+RUN apk add --no-cache libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev
+RUN apk add --no-cache libavcodec-dev libavformat-dev libswscale-dev libv4l-dev
+RUN apk add --no-cache libxvidcore-dev libx264-dev
+RUN apk add --no-cache qt4-dev-tools
 
 RUN mkdir /tf \
   && cd /tf \
   && wget https://github.com/lhelontra/tensorflow-on-arm/releases/download/v1.9.0/tensorflow-1.9.0-cp35-none-linux_armv7l.whl \
-  && pip3 install /home/pi/tf/tensorflow-1.8.0-cp35-none-linux_armv7l.whl \
-  && pip3 install pillow lxml jupyter matplotlib cython \
-  && apk add python-tk \
-  && pip3 install opencv-python
+  && pip3 install --no-cache-dir /home/pi/tf/tensorflow-1.8.0-cp35-none-linux_armv7l.whl \
+  && pip3 install --no-cache-dir pillow lxml jupyter matplotlib cython \
+  && apk add --no-cache python-tk \
+  && pip3 install --no-cache-dir opencv-python
 
-RUN apk add autoconf automake libtool curl \
+RUN apk add --no-cache autoconf automake libtool curl \
   && wget https://github.com/google/protobuf/releases/download/v3.5.1/protobuf-all-3.5.1.tar.gz \
   && tar -zxvf protobuf-all-3.5.1.tar.gz \
   && cd protobuf-3.5.1 \
-  && ./configure && make && make check && make install
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make check && make install && rm protobuf-all-3.5.1.tar.gz
 
 RUN cd python \
   && export LD_LIBRARY_PATH=../src/.libs \
@@ -66,9 +65,9 @@ RUN mkdir /tensorflow && cd /tensorflow \
   && protoc object_detection/protos/*.proto --python_out=.
 
 RUN cd /tensorflow/models/research/object_detection \
-  && wget http://download.tensorflow.org/models/object_detection/ssdlite_mobilenet_v2_coco_2018_05_09.tar.gz \
+  && wget https://download.tensorflow.org/models/object_detection/ssdlite_mobilenet_v2_coco_2018_05_09.tar.gz \
   && tar -xzvf ssdlite_mobilenet_v2_coco_2018_05_09.tar.gz \
-  && wget https://raw.githubusercontent.com/EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi/master/Object_detection_picamera.py
+  && wget https://raw.githubusercontent.com/EdjeElectronics/TensorFlow-Object-Detection-on-the-Raspberry-Pi/master/Object_detection_picamera.py && rm ssdlite_mobilenet_v2_coco_2018_05_09.tar.gz
 
 # environment
 ENV CONFIG_PATH /data/options.json