{
  "startTime": 1674220235843,
  "endTime": 1674220237201,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 2,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 2,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 40,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 53,
        "columnStart": 5,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 2,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "ARG BUILD_FROM\n\nFROM $BUILD_FROM\n\n# Environment variables\nENV \\\n    HOME=\"/root\" \\\n    LANG=\"C.UTF-8\" \\\n    PS1=\"$(whoami)@$(hostname):$(pwd)$ \" \\\n    TERM=\"xterm\"\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n  && apt-get update -qq -y \\\n  && apt-get install -qq -y --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    build-essential \\\n    cmake \\\n    socat \\\n    jq \\\n    bc \\\n    git \\\n    unzip \\\n    coreutils \\\n    dateutils \\\n    findutils && rm -rf /var/lib/apt/lists/*;\n\n###\n# OpenCV pre-requisites\n###\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n  && apt-get install -qq -y --no-install-recommends \\\n    libjpeg-dev \\\n    libtiff5-dev \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libswscale-dev \\\n    libv4l-dev \\\n    libxvidcore-dev \\\n    libx264-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n  && apt-get install -qq -y --no-install-recommends \\\n    libgtk2.0-dev \\\n    libgtk-3-dev \\\n    libatlas-base-dev \\\n    libopenblas-dev \\\n    gfortran && rm -rf /var/lib/apt/lists/*;\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n  && apt-get install -qq -y --no-install-recommends \\\n    python2.7-dev \\\n    python3-dev && rm -rf /var/lib/apt/lists/*;\n\n##\n# opencv\n##\n\nARG OPENCV_GITHUB_ARCHIVE='https://github.com/opencv/opencv/archive/4.1.0.zip'\nARG OPENCV_CMAKE_FLAGS='-DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local/ -DPYTHON3_EXECUTABLE=/usr/bin/python3.7 –DPYTHON_INCLUDE_DIR=/usr/include/python3.7 –DPYTHON_INCLUDE_DIR2=/usr/include/arm-linux-gnueabihf/python3.7m –DPYTHON_LIBRARY=/usr/lib/arm-linux-gnueabihf/libpython3.7m.so'\n\nENV OPENCV_CMAKE_FLAGS \"${OPENCV_CMAKE_FLAGS}\"\nENV OPENCV_GITHUB_ARCHIVE \"${OPENCV_GITHUB_ARCHIVE}\"\n\nENV OPENCV_DIR \"/tmp/opencv\"\nENV OPENCV_VERSION \"opencv-4.1.0\"\n\nRUN \\\n  curl -f -sSL https://bootstrap.pypa.io/get-pip.py -o getpip.py \\\n  && \\\n  python3 getpip.py \\\n  && \\\n  pip3 install --no-cache-dir numpy\n\nRUN \\\n  curl -f -sSL ${OPENCV_GITHUB_ARCHIVE} -o /tmp/opencv.zip \\\n  && \\\n  unzip -qq -d ${OPENCV_DIR} /tmp/opencv.zip \\\n  && \\\n  rm -f /tmp/opencv.zip\n\nRUN \\\n  mkdir ${OPENCV_DIR}/${OPENCV_VERSION}/build\n\nRUN \\\n  cd ${OPENCV_DIR}/${OPENCV_VERSION}/build \\\n  && \\\n  ls .. \\\n  && \\\n  cmake ${OPENCV_CMAKE_FLAGS} ..\n\nRUN \\\n  cd ${OPENCV_DIR}/${OPENCV_VERSION}/build \\\n  && \\\n  make -j4\n\nRUN \\\n  cd ${OPENCV_DIR}/${OPENCV_VERSION}/build \\\n  && \\\n  make install\n\n##\n# openvino\n##\n\nARG OPENVINO_REPOSITORY=https://github.com/opencv/dldt.git\nARG OPENVINO_CMAKE_FLAGS='-DCMAKE_BUILD_TYPE=Release -DENABLE_MKL_DNN=OFF -DENABLE_CLDNN=OFF -DENABLE_GNA=OFF -DENABLE_SSE42=OFF -DTHREADING=SEQ'\n\nENV OPENVINO_REPOSITORY \"${OPENVINO_REPOSITORY}\"\nENV OPENVINO_CMAKE_FLAGS \"${OPENVINO_CMAKE_FLAGS}\"\n\nRUN \\\n  apt-get install --no-install-recommends -qq -y sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n  mkdir /tmp/dldt && cd /tmp/dldt && git clone ${OPENVINO_REPOSITORY} . \\\n  && \\\n  cd inference-engine && git submodule init && git submodule update --recursive \\\n  && \\\n  ./install_dependencies.sh\n\nRUN \\\n  ARCH=$(arch) \\\n  test \"${ARCH}\" = \"armv7l\" && export OPENVINO_CMAKE_FLAGS=\"${OPENVINO_CMAKE_FLAGS} -DCMAKE_CXX_FLAGS=-march=armv7-a\" || echo \"Not armv7l\"\n\nRUN \\\n  cd /tmp/dldt/inference-engine && mkdir build && cd build \\\n  && \\\n  echo \"${OPENVINO_CMAKE_FLAGS}\" \\\n  && \\\n  cmake ${OPENVINO_CMAKE_FLAGS} ..\n\nRUN \\\n  cd /tmp/dldt/inference-engine/build \\\n  && \\\n  make -j4\n\nRUN \\\n  mkdir -p /etc/udev/rules.d \\\n  && \\\n  echo 'SUBSYSTEM==\"usb\", ATTRS{idProduct}==\"2150\", ATTRS{idVendor}==\"03e7\", GROUP=\"users\", MODE=\"0666\", ENV{ID_MM_DEVICE_IGNORE}=\"1\"' \\\n    >> /etc/udev/rules.d/97-myriad-usbboot.rules \\\n  && \\\n  echo 'SUBSYSTEM==\"usb\", ATTRS{idProduct}==\"2485\", ATTRS{idVendor}==\"03e7\", GROUP=\"users\", MODE=\"0666\", ENV{ID_MM_DEVICE_IGNORE}=\"1\"' \\\n    >> /etc/udev/rules.d/97-myriad-usbboot.rules \\\n  && \\\n  echo 'SUBSYSTEM==\"usb\", ATTRS{idProduct}==\"f63b\", ATTRS{idVendor}==\"03e7\", GROUP=\"users\", MODE=\"0666\", ENV{ID_MM_DEVICE_IGNORE}=\"1\"' \\\n   >> /etc/udev/rules.d/97-myriad-usbboot.rules\n\n###\n# standard\n###\n\n# copy root file-system\nCOPY rootfs /\n\n# start default program\nCMD [ \"/usr/bin/run.sh\" ]\n\n# Build arguments\nARG BUILD_DATE\nARG BUILD_REF\nARG BUILD_VERSION\n\n# Labels\nLABEL \\\n    org.label-schema.schema-version=\"1.0\" \\\n    org.label-schema.build-date=\"${BUILD_DATE}\" \\\n    org.label-schema.build-arch=\"${BUILD_ARCH}\" \\\n    org.label-schema.name=\"apache\" \\\n    org.label-schema.description=\"PouchDB Server\" \\ \n    org.label-schema.vcs-url=\"http://github.com/dcmartin/open-horizon/tree/master/apache/\" \\ \n    org.label-schema.vcs-ref=\"${BUILD_REF}\" \\ \n    org.label-schema.version=\"${BUILD_VERSION}\" \\\n    org.label-schema.vendor=\"David C Martin <github@dcmartin.com>\"\n"
}