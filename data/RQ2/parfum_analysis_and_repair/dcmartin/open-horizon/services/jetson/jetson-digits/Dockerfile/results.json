{
  "startTime": 1674247047206,
  "endTime": 1674247050578,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04 as protobuf\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        autoconf \\\n        automake \\\n        ca-certificates \\\n        curl \\\n        g++ \\\n        git \\\n        libtool \\\n        make \\\n        python-dev \\\n        python-setuptools \\\n        unzip && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /protobuf\nRUN git clone -b '3.2.x' https://github.com/google/protobuf.git . && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/protobuf && \\\n    make \"-j$(nproc)\" install\n\n\nFROM nvidia/cuda:8.0-cudnn5-devel-ubuntu14.04 as caffe\n\nCOPY --from=protobuf /usr/local/protobuf /usr/local\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        g++ \\\n        git \\\n        libatlas-base-dev \\\n        libboost-filesystem1.55-dev \\\n        libboost-python1.55-dev \\\n        libboost-system1.55-dev \\\n        libboost-thread1.55-dev \\\n        libgflags-dev \\\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libnccl-dev=1.2.3-1+cuda8.0 \\\n        libopencv-dev \\\n        libsnappy-dev \\\n        python-all-dev \\\n        python-h5py \\\n        python-matplotlib \\\n        python-opencv \\\n        python-pil \\\n        python-pydot \\\n        python-scipy \\\n        python-skimage \\\n        python-sklearn && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Build pip\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    pip install --upgrade --no-cache-dir pip\n\n# Build caffe\nRUN git clone https://github.com/nvidia/caffe.git /caffe -b 'caffe-0.15' && \\\n    cd /caffe && \\\n    pip install --no-cache-dir ipython==5.4.1 && \\\n    pip install --no-cache-dir tornado==4.5.3 && \\\n    pip install --no-cache-dir -r python/requirements.txt && \\\n    mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/usr/local/caffe -DUSE_NCCL=ON -DUSE_CUDNN=ON -DCUDA_ARCH_NAME=Manual -DCUDA_ARCH_BIN=\"35 52 60 61\" -DCUDA_ARCH_PTX=\"61\" .. && \\\n    make -j\"$(nproc)\" install && \\\n    rm -rf /caffe\n\n\nFROM nvidia/cuda:8.0-cudnn5-runtime-ubuntu14.04\n\nLABEL maintainer \"NVIDIA CORPORATION <cudatools@nvidia.com>\"\n\nENV DIGITS_VERSION 6.0\n\nLABEL com.nvidia.digits.version=\"6.0\"\n\nCOPY --from=caffe /usr/local/caffe /usr/local\nCOPY --from=protobuf /usr/local/protobuf /usr/local\n\n# Install the packages to get pip installed or else we run into numpy problems\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        curl \\\n        python && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Build pip, need to do this before DIGITS packages or else we get numpy problems\nRUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \\\n    python get-pip.py && \\\n    pip install --upgrade --no-cache-dir pip\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        git \\\n        graphviz \\\n        gunicorn \\\n        libatlas3-base \\\n        libboost-filesystem1.55.0 \\\n        libboost-python1.55.0 \\\n        libboost-system1.55.0 \\\n        libboost-thread1.55.0 \\\n        libfreetype6-dev \\\n        libgoogle-glog0 \\\n        libhdf5-serial-dev \\\n        libleveldb1 \\\n        libnccl1=1.2.3-1+cuda8.0 \\\n        libopencv-core2.4 \\\n        libopencv-highgui2.4 \\\n        libopencv-imgproc2.4 \\\n        libpng12-dev \\\n        libzmq3 \\\n        nginx \\\n        pkg-config \\\n        python-dev \\\n        python-flask \\\n        python-flaskext.socketio \\\n        python-flaskext.wtf \\\n        python-gevent \\\n        python-lmdb \\\n        python-opencv \\\n        python-pil \\\n        python-pydot \\\n        python-requests \\\n        python-six \\\n        python-skimage \\\n        python-tk \\\n        python-wtforms \\\n        rsync \\\n        software-properties-common \\\n        torch7-nv=0.9.99-1+cuda8.0 && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir https://github.com/NVIDIA/DIGITS/archive/v6.0.1.tar.gz\n\nRUN pip install --no-cache-dir \\\n        setuptools\\>=18.5 \\\n        tensorflow-gpu==1.2.1 \\\n        protobuf==3.2.0\n\nVOLUME /jobs\n\nENV DIGITS_JOBS_DIR=/jobs\nENV DIGITS_LOGFILE_FILENAME=/jobs/digits.log\nENV PYTHONPATH=/usr/local/python\n\n# DIGITS\nEXPOSE 5000\n\n# TensorBoard\nEXPOSE 6006\n\nENTRYPOINT [\"python\", \"-m\", \"digits\"]\n\n"
}