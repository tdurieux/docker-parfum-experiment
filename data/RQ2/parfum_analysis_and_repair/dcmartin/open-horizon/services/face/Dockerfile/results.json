{
  "startTime": 1674246945347,
  "endTime": 1674246947504,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 25,
        "columnStart": 23,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "ARG BUILD_FROM\n\nFROM $BUILD_FROM as face\n\nARG BUILD_ARCH=amd64\n\n# Environment variables\nENV \\\n    HOME=\"/root\" \\\n    LANG=\"C.UTF-8\" \\\n    PS1=\"$(whoami)@$(hostname):$(pwd)$ \" \\\n    TERM=\"xterm\"\n\nRUN DEBIAN_FRONTEND=noninteractive \\\n  apt update -qq -y && apt-get install -qq -y --no-install-recommends \\\n    apt-utils \\\n    ca-certificates \\\n    curl \\\n    build-essential \\\n    socat \\\n    imagemagick \\\n    fswebcam \\\n    jq \\\n    bc \\\n    software-properties-common \\\n    git && rm -rf /var/lib/apt/lists/*;\n\n# configure face\nARG OPENFACE=/face\nENV OPENFACE=${OPENFACE}\n\nARG OPENFACE_GIT=\"http://github.com/dcmartin/openface.git\"\nENV OPENFACE_GIT=${OPENFACE_GIT}\n\nRUN DEBIAN_FRONTEND=noninteractive \\\n  apt install -qq -y --no-install-recommends \\\n    libopencv-dev \\\n    cmake && rm -rf /var/lib/apt/lists/*;\n\n\n# Clone face\nRUN mkdir -p ${OPENFACE}\nRUN cd ${OPENFACE} && git clone ${OPENFACE_GIT} .\n\n# Build face\nRUN \\\n  cd ${OPENFACE} && mkdir build && cd build \\\n  && \\\n  export ARGS=\"${ARGS:-} -DENABLE_AVX2=OFF\" \\\n  export ARGS=\"${ARGS:-} -DENABLE_NEON=OFF\" \\\n  && \\\n  cmake ${ARGS:-} .. \\\n  && \\\n  make\n\nFROM face\n\nENV OPENFACE_US_WEIGHTS=\"\"\nENV OPENFACE_US_CONFIG=\"\"\nENV OPENFACE_US_DATA=\"\"\nENV OPENFACE_US_WEIGHTS_URL=\"\"\nENV OPENFACE_US_WEIGHTS_MD5=\"\"\n\nENV OPENFACE_EU_WEIGHTS=\"\"\nENV OPENFACE_EU_CONFIG=\"\"\nENV OPENFACE_EU_DATA=\"\"\nENV OPENFACE_EU_WEIGHTS_URL=\"\"\nENV OPENFACE_EU_WEIGHTS_MD5=\"\"\n\n# Copy compiled face\nCOPY --from=face ${OPENFACE} ${OPENFACE}\n\nRUN \\\n  cd ${OPENFACE} && cp ./build/detect-image-demo /usr/local/bin/face\n\n# Copy usr\nCOPY rootfs/usr /usr\n\nCMD [ \"/usr/bin/run.sh\" ]\n\n# Build arguments\nARG BUILD_DATE\nARG BUILD_REF\nARG BUILD_VERSION\n\n# Labels\nLABEL \\\n    org.label-schema.schema-version=\"1.0\" \\\n    org.label-schema.build-date=\"${BUILD_DATE}\" \\\n    org.label-schema.build-arch=\"${BUILD_ARCH}\" \\\n    org.label-schema.name=\"face\" \\\n    org.label-schema.description=\"face as a service\" \\\n    org.label-schema.vcs-url=\"http://github.com/dcmartin/open-horizon/tree/master/face/\" \\\n    org.label-schema.vcs-ref=\"${BUILD_REF}\" \\\n    org.label-schema.version=\"${BUILD_VERSION}\" \\\n    org.label-schema.vendor=\"David C Martin <github@dcmartin.com>\"\n"
}