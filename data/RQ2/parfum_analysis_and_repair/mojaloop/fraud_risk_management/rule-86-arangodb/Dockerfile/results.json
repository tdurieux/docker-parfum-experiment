{
  "startTime": 1674251698871,
  "endTime": 1674251699475,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=${TARGETPLATFORM:-linux/amd64} ghcr.io/openfaas/of-watchdog:0.8.4 as watchdog\nFROM node:12.16.1-alpine as builder\nARG TARGETPLATFORM\nWORKDIR /opt/rule-86-arangodb\nENV NPM_CONFIG_LOGLEVEL warn\nCOPY --from=watchdog /fwatchdog /usr/bin/fwatchdog\nRUN chmod +x /usr/bin/fwatchdog\nRUN apk --no-cache add curl ca-certificates \\\n    && addgroup -S app && adduser -S -g app app\nRUN apk add --no-cache -t build-dependencies git make gcc g++ python libtool autoconf automake \\\n    && cd $(npm root -g)/npm \\\n    && npm config set unsafe-perm true \\\n    && npm install -g node-gyp && npm cache clean --force;\nCOPY package.json package-lock.json* /opt/rule-86-arangodb/\nRUN npm ci\nRUN apk del build-dependencies\nCOPY tsconfig.json /opt/rule-86-arangodb/\nCOPY src /opt/rule-86-arangodb/src\nCOPY .env /opt/rule-86-arangodb/\nRUN npm run build\nENV cgi_headers=\"true\"\nENV fprocess=\"node ./build/index.js\"\nENV mode=\"http\"\nENV upstream_url=\"http://127.0.0.1:9006\"\nENV exec_timeout=\"10s\"\nENV write_timeout=\"15s\"\nENV read_timeout=\"15s\"\nENV prefix_logs=\"false\"\nHEALTHCHECK --interval=3s CMD [ -e /tmp/.lock ] || exit 1\nCMD [\"fwatchdog\"]"
}