{
  "startTime": 1674253927868,
  "endTime": 1674253928454,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=${TARGETPLATFORM:-linux/amd64} ghcr.io/openfaas/of-watchdog:0.8.4 as watchdog\nFROM --platform=${TARGETPLATFORM:-linux/amd64} node:14-alpine as ship\n\nARG TARGETPLATFORM\nARG BUILDPLATFORM\n\nCOPY --from=watchdog /fwatchdog /usr/bin/fwatchdog\nRUN chmod +x /usr/bin/fwatchdog\n\nRUN addgroup -S app && adduser -S -g app app\n\nRUN apk --no-cache add curl ca-certificates\n\nRUN apk add --no-cache -t build-dependencies git make gcc g++ python libtool autoconf automake yarn\n\n# Turn down the verbosity to default level.\nENV NPM_CONFIG_LOGLEVEL warn\n\n# chmod for tmp is for a buildkit issue\nRUN chown app:app -R /home/app \\\n  && chmod 777 /tmp\n\nUSER app\n\n# Create a folder named function\nRUN mkdir -p /home/app\n\n# Wrapper/boot-strapper\nWORKDIR /home/app\n\nCOPY ./package.json ./\nCOPY ./yarn.lock ./\n\n# Install dependencies\nRUN yarn install --production=true && yarn cache clean;\n\nCOPY ./dist ./dist\n\n# Environment variables for openfaas\nENV cgi_headers=\"true\"\nENV fprocess=\"node ./dist/src/server.js\"\nENV mode=\"http\"\nENV upstream_url=\"http://127.0.0.1:3000\"\n\nENV exec_timeout=\"10s\"\nENV write_timeout=\"15s\"\nENV read_timeout=\"15s\"\n\nENV prefix_logs=\"false\"\n\nEXPOSE 50051\n\nHEALTHCHECK --interval=3s CMD [ -e /tmp/.lock ] || exit 1\n\n# Execute watchdog command\nCMD [\"fwatchdog\"]\n"
}