{
  "startTime": 1674248780642,
  "endTime": 1674248781104,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#####################################\n##           Dependencies          ##\n#####################################\n# Install dependencies only when needed\nFROM node:lts-alpine AS deps\n\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\n\nWORKDIR /app\n# copy the package.json to install dependencies\nCOPY package.json yarn.lock ./\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n#####################################\n##               Build             ##\n#####################################\nFROM node:lts-alpine as builder\n\nARG NODE_ENV\nENV NODE_ENV ${NODE_ENV:-production}\n\n# some projects will fail without this variable set to true\nARG SKIP_PREFLIGHT_CHECK\nENV SKIP_PREFLIGHT_CHECK ${SKIP_PREFLIGHT_CHECK:-false}\nARG DISABLE_ESLINT_PLUGIN\nENV DISABLE_ESLINT_PLUGIN ${DISABLE_ESLINT_PLUGIN:-false}\n\nWORKDIR /app\n\n# build app for production with minification\nCOPY . .\nCOPY --from=deps /app/node_modules ./node_modules\nRUN yarn build\n\n#####################################\n##               Release           ##\n#####################################\nFROM node:lts-alpine as release\n\nRUN apk add --no-cache dumb-init\n\n# get the node environment to use\nARG NODE_ENV\nENV NODE_ENV ${NODE_ENV:-development}\n\nENV PORT 3000\nENV HOST 0.0.0.0\n\nWORKDIR /app\n\nUSER node\n\nCOPY --from=builder --chown=node:node /app/dist ./dist\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n\nEXPOSE ${PORT}\n\nCMD [\"dumb-init\", \"node\", \"dist/main.js\"]\n"
}