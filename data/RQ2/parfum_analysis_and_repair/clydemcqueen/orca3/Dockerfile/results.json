{
  "startTime": 1674252056252,
  "endTime": 1674252057462,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 10,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedDockerfile": "# This Dockerfile can be configured via --build-arg\n\n# Example build command:\n# docker build --pull --no-cache -t orca3:galactic .\n\n# Example run command using Rocker (see https://github.com/osrf/rocker):\n# rocker --x11 --nvidia orca3:galactic\n\nFROM osrf/ros:galactic-desktop\n\nRUN apt-get update && apt-get upgrade -y\n\nRUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN yes | pip3 install --no-cache-dir transformations\n\n# Required for orca_topside\nRUN apt-get install --no-install-recommends -y libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good \\\n gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools \\\n gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio \\\n libgstreamer-plugins-base1.0-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /work/orca_ws/src\n\nCOPY . orca3\n\nARG FIDUCIAL_VLAM_BRANCH=master\nARG H264_IMAGE_TRANSPORT_BRANCH=master\nARG ORB_SLAM2_ROS_BRANCH=clyde_h264_stereo_galactic\nARG ROS2_SHARED_BRANCH=master\nARG SIM_FIDUCIAL_BRANCH=master\nARG STEREO_DECODER_BRANCH=main\nARG UKF_BRANCH=master\n\nRUN git clone https://github.com/ptrmu/fiducial_vlam.git -b $FIDUCIAL_VLAM_BRANCH\nRUN git clone https://github.com/clydemcqueen/h264_image_transport.git -b $H264_IMAGE_TRANSPORT_BRANCH\nRUN git clone https://github.com/clydemcqueen/orb_slam_2_ros.git -b $ORB_SLAM2_ROS_BRANCH\nRUN git clone https://github.com/ptrmu/ros2_shared.git -b $ROS2_SHARED_BRANCH\nRUN git clone https://github.com/clydemcqueen/sim_fiducial.git -b $SIM_FIDUCIAL_BRANCH\nRUN git clone https://github.com/clydemcqueen/stereo_decoder.git -b $STEREO_DECODER_BRANCH\nRUN git clone https://github.com/clydemcqueen/ukf.git -b $UKF_BRANCH\n\nWORKDIR /work/orca_ws\n\nRUN rosdep install -y --from-paths . --ignore-src\n\nRUN /bin/bash -c \"source /opt/ros/galactic/setup.bash && colcon build\"\n\n# Simulation with fiducial_vlam:\n# source src/orca3/setup.bash       # Required to set up the Gazebo environment correctly\n# ros2 launch orca_bringup sim_launch.py gzclient:=True rviz:=True slam:=vlam world:=ping_pong\n\n# Simulation with orb_slam2_ros:\n# source src/orca3/setup.bash       # Required to set up the Gazebo environment correctly\n# ros2 launch orca_bringup sim_launch.py gzclient:=True rviz:=True slam:=orb world:=empty\n"
}