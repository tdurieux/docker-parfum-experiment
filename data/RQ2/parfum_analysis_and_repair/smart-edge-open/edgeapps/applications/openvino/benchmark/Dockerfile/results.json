{
  "startTime": 1674253775568,
  "endTime": 1674253776460,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 8,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-License-Identifier: Apache-2.0\n# Copyright (c) 2020 Intel Corporation\n\n\nFROM ubuntu:20.04\n\nENV http_proxy=$http_proxy\nENV https_proxy=$https_proxy\nENV no_proxy=$no_proxy\nENV DEBIAN_FRONTEND=noninteractive\n\nARG OPENVINO_LINK=https://registrationcenter-download.intel.com/akdlm/irc_nas/17062/l_openvino_toolkit_p_2021.1.110.tgz\nARG YEAR=2021\nARG INSTALL_DIR=/opt/intel/openvino_$YEAR\nARG TEMP_DIR=/tmp/openvino_installer\n\n# hadolint ignore=DL3003,DL3008,DL3009\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    cpio \\\n    sudo \\\n    wget \\\n    python3-pip \\\n    python3-setuptools \\\n    libboost-filesystem1.71 \\\n    libboost-thread1.71 \\\n    libboost-program-options1.71 \\\n    lsb-release \\\n    libjson-c-dev \\\n    build-essential \\\n    virtualenv \\\n    cmake \\\n    libcairo2-dev \\\n    libpango1.0-dev \\\n    libglib2.0-dev \\\n    libgtk2.0-dev \\\n    libswscale-dev \\\n    libavcodec-dev \\\n    libavformat-dev \\\n    libgstreamer1.0-0 \\\n    gstreamer1.0-plugins-base \\\n    libpng-dev && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR $TEMP_DIR\nRUN wget $OPENVINO_LINK && \\\n        tar xf l_openvino_toolkit*.tgz && \\\n        cd l_openvino_toolkit* && \\\n        sed -i 's/decline/accept/g' silent.cfg && \\\n        ./install_openvino_dependencies.sh && \\\n        ./install.sh -s silent.cfg && \\\n        rm -rf /tmp/l_openvino_toolkit* && \\\n        ln --symbolic /opt/intel/openvino_\"$YEAR\"/ /opt/intel/openvino && rm l_openvino_toolkit*.tgz\n\nRUN pip3 install --no-cache-dir networkx==2.3\nWORKDIR /opt/intel/openvino_$YEAR/deployment_tools/demo\nRUN /bin/bash -c \"source $INSTALL_DIR/bin/setupvars.sh && ./demo_squeezenet_download_convert_run.sh\"\nWORKDIR /root/inference_engine_samples_build\nRUN /bin/bash -c \"source $INSTALL_DIR/bin/setupvars.sh && make\"\n\n# Creating user openvino and adding it to groups \"video\" and \"users\" to use GPU and VPU\nRUN useradd -ms /bin/bash -G video,users openvino && \\\n    chown -R openvino /home/openvino\nRUN mv /root/inference_engine_samples_build /home/openvino/\nRUN mv /root/openvino_models /home/openvino/\n\nRUN chown -R openvino:openvino $INSTALL_DIR/\nRUN chown -R openvino:openvino /home/openvino/\nUSER openvino\n\n#Download OpenVINO pre-trained models\n\nWORKDIR /opt/intel/openvino_$YEAR/deployment_tools/open_model_zoo/tools/downloader\nRUN pip3 install --no-cache-dir pyyaml requests\nRUN ./downloader.py  --name face-detection-retail-0004\nRUN ./downloader.py  --name squeezenet1.1\nRUN ./downloader.py  --name semantic-segmentation-adas-0001\nRUN ./downloader.py  --name ssd300\nRUN ./downloader.py  --name ssd512\nRUN /bin/bash -c \"source $INSTALL_DIR/bin/setupvars.sh && ./converter.py --name ssd300\"\nRUN /bin/bash -c \"source $INSTALL_DIR/bin/setupvars.sh && ./converter.py --name ssd512\"\n\nRUN chown -R openvino:openvino /home/openvino/\n\n# build Inference Engine samples\nRUN mkdir $INSTALL_DIR/deployment_tools/inference_engine/samples/cpp/build\nWORKDIR $INSTALL_DIR/deployment_tools/inference_engine/samples/cpp/build\nRUN /bin/bash -c \"source $INSTALL_DIR/bin/setupvars.sh && cmake .. && make -j1\"\n\nWORKDIR /home/openvino\nCOPY do_benchmark.sh /home/openvino\n"
}