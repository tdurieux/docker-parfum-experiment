{
  "startTime": 1674255869095,
  "endTime": 1674255870426,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 1,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 1,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 1,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 1,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 1,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 129,
        "lineEnd": 129,
        "columnStart": 1,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 4
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 62,
        "columnStart": 1,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 4
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 4
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 4
      }
    }
  ],
  "repairedDockerfile": "# SPDX-License-Identifier: Apache-2.0\n# Copyright (c) 2019 Intel Corporation\n\nFROM ubuntu:20.04\n\nENV http_proxy=$http_proxy\nENV https_proxy=$https_proxy\nENV no_proxy=$no_proxy,eaa.openness,analytics.openness\nENV DEBIAN_FRONTEND=noninteractive\n\n##  OnPrem NTS uses CPU 0,2 and 3.\n##  So OpenVINO user needs to configure the value according the setup\nENV OPENVINO_TASKSET_CPU=75\n\nARG OPENVINO_LINK=https://registrationcenter-download.intel.com/akdlm/irc_nas/17062/l_openvino_toolkit_p_2021.1.110.tgz\nARG YEAR=2021\nARG OPENVINO_DEMOS_DIR=/opt/intel/openvino_$YEAR/deployment_tools/open_model_zoo/demos\nARG MODEL_ROOT=/opt/intel/openvino_$YEAR/deployment_tools/open_model_zoo/tools/downloader\nARG NGINX_VERSION=1.21.1\nARG NGINX_RTMP_MODULE_VERSION=1.2.2\nENV APP_DIR=/opt/intel/openvino_$YEAR/deployment_tools/inference_engine/demos/python_demos/object_detection_demo_ssd_async/\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt update -y\nRUN apt install --no-install-recommends -y curl \\\n\tunzip \\\n\tpython3-pip \\\n\tgit && rm -rf /var/lib/apt/lists/*;\n\nRUN apt clean all\n\n# OpenVino installation\nRUN cd /tmp && \\\n\tcurl -f -O -L $OPENVINO_LINK && \\\n\ttar xf l_openvino_toolkit*.tgz && \\\n\tcd l_openvino_toolkit* && \\\n\tsed -i 's/decline/accept/g' silent.cfg && \\\n\t./install_openvino_dependencies.sh && \\\n\t./install.sh -s silent.cfg && \\\n\trm -rf /tmp/l_openvino_toolkit* && rm l_openvino_toolkit*.tgz\n\n# Install numpy\nRUN pip3 install --no-cache-dir numpy\n\n# Rebuilding libusb without UDEV support -- required for Intel Movidius Stick\nRUN cd /tmp && \\\n\tcurl -f -O -L https://github.com/libusb/libusb/archive/v1.0.22.zip && \\\n\tunzip v1.0.22.zip && cd libusb-1.0.22 && \\\n\t./bootstrap.sh && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-udev --enable-shared && \\\n\tmake -j4 && make install && \\\n\trm -rf /tmp/*1.0.22*\n\n# Build Nginx\n# Install dependencies\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y \\\n\tca-certificates \\\n\topenssl libssl-dev yasm \\\n\tlibpcre3-dev librtmp-dev libtheora-dev \\\n\tlibvorbis-dev libvpx-dev libfreetype6-dev \\\n\tlibmp3lame-dev libx264-dev libx265-dev && \\\n\trm -rf /var/lib/apt/lists/*\n\n# Download nginx source\nRUN mkdir -p /tmp/build && \\\n\tcd /tmp/build && \\\n\tcurl -f -O -L https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \\\n\ttar -zxf nginx-${NGINX_VERSION}.tar.gz && \\\n\trm nginx-${NGINX_VERSION}.tar.gz\n\n# Download rtmp-module source\nRUN cd /tmp/build && \\\n    curl -f -O -L https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_MODULE_VERSION}.tar.gz && \\\n    tar -zxf v${NGINX_RTMP_MODULE_VERSION}.tar.gz && \\\n\trm v${NGINX_RTMP_MODULE_VERSION}.tar.gz\n\n# Build nginx with nginx-rtmp module\nRUN cd /tmp/build/nginx-${NGINX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --sbin-path=/usr/local/sbin/nginx \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --pid-path=/var/run/nginx/nginx.pid \\\n        --lock-path=/var/lock/nginx.lock \\\n        --http-client-body-temp-path=/tmp/nginx-client-body \\\n        --with-http_ssl_module \\\n        --with-threads \\\n        --add-module=/tmp/build/nginx-rtmp-module-${NGINX_RTMP_MODULE_VERSION} && \\\n    make -j 2 && \\\n    make install\n\nCOPY nginx.conf /etc/nginx/nginx.conf\nRUN chmod +s /usr/local/sbin/nginx\n\n# Creating user openvino and adding it to groups \"video\" and \"users\" to use GPU and VPU\nRUN useradd -ms /bin/bash -G video,users,www-data openvino && \\\n    chown -R openvino /home/openvino\n\nCOPY cmd/ /home/openvino\nADD start.sh.pwek /home/openvino/start.sh\n\nRUN chown -R openvino:openvino /opt/intel/openvino*\nRUN chown -R openvino:openvino /home/openvino/*\n\nRUN ln -sf /dev/stdout /var/log/nginx/access.log && \\\n\tln -sf /dev/stderr /var/log/nginx/error.log\n\nUSER openvino\nRUN echo \"source /opt/intel/openvino_$YEAR/bin/setupvars.sh\" >> ~/.bashrc\nRUN bash -c \"source ~/.bashrc\"\n\n# Build OpenVINO samples\nADD object_detection_demo_ssd_async.patch $APP_DIR\nRUN cd $APP_DIR && patch -p0 object_detection_demo_ssd_async.py object_detection_demo_ssd_async.patch\n\n# Download OpenVINO pre-trained models\nRUN cd $MODEL_ROOT && python3 -mpip install --user -r ./requirements.in && \\\n\t./downloader.py --name pedestrian-detection-adas-0002 && \\\n\t./downloader.py --name vehicle-detection-adas-0002\n\nRUN cp -r $MODEL_ROOT/intel/vehicle-detection-adas-0002 $APP_DIR/ && \\\n    cp -r $MODEL_ROOT/intel/pedestrian-detection-adas-0002 $APP_DIR/\n\n# Install Go\nRUN cd /tmp && \\\n\tcurl -f -O -L https://dl.google.com/go/go1.15.linux-amd64.tar.gz && \\\n\ttar -xvf go1.15.linux-amd64.tar.gz && rm go1.15.linux-amd64.tar.gz\n\nENV OPENVINO_ROOT=/opt/intel/openvino_$YEAR\nENV GOPATH=/home/openvino/go\nENV GOROOT=/tmp/go\nENV GO111MODULE=on\nENV PATH=$GOPATH/bin:$GOROOT/bin:$PATH\nRUN mkdir $GOPATH\n\n# Work Dir\nWORKDIR /home/openvino\nADD output_320x240.mp4 ./\n\n# Get go dependencies\nRUN git config --global http.proxy $http_proxy\nRUN go get github.com/gorilla/websocket\nRUN go build main.go openvino.go eaa_interface.go\n\n# OpenVINO inference and forwarding\nENTRYPOINT [\"./start.sh\"]\n"
}