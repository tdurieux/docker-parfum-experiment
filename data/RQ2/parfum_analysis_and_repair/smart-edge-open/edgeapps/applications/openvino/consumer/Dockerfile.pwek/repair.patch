diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/smart-edge-open/edgeapps/applications/openvino/consumer/Dockerfile.pwek b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/smart-edge-open/edgeapps/applications/openvino/consumer/Dockerfile.pwek/repaired.Dockerfile
index b7e18ab..934d2c4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/smart-edge-open/edgeapps/applications/openvino/consumer/Dockerfile.pwek
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/smart-edge-open/edgeapps/applications/openvino/consumer/Dockerfile.pwek/repaired.Dockerfile
@@ -23,39 +23,39 @@ ENV APP_DIR=/opt/intel/openvino_$YEAR/deployment_tools/inference_engine/demos/py
 ENV DEBIAN_FRONTEND=noninteractive
 
 RUN apt update -y
-RUN apt install -y curl \
+RUN apt install --no-install-recommends -y curl \
 	unzip \
 	python3-pip \
-	git
+	git && rm -rf /var/lib/apt/lists/*;
 
 RUN apt clean all
 
 # OpenVino installation
 RUN cd /tmp && \
-	curl -O -L $OPENVINO_LINK && \
+	curl -f -O -L $OPENVINO_LINK && \
 	tar xf l_openvino_toolkit*.tgz && \
 	cd l_openvino_toolkit* && \
 	sed -i 's/decline/accept/g' silent.cfg && \
 	./install_openvino_dependencies.sh && \
 	./install.sh -s silent.cfg && \
-	rm -rf /tmp/l_openvino_toolkit*
+	rm -rf /tmp/l_openvino_toolkit* && rm l_openvino_toolkit*.tgz
 
 # Install numpy
-RUN pip3 install numpy
+RUN pip3 install --no-cache-dir numpy
 
 # Rebuilding libusb without UDEV support -- required for Intel Movidius Stick
 RUN cd /tmp && \
-	curl -O -L https://github.com/libusb/libusb/archive/v1.0.22.zip && \
+	curl -f -O -L https://github.com/libusb/libusb/archive/v1.0.22.zip && \
 	unzip v1.0.22.zip && cd libusb-1.0.22 && \
 	./bootstrap.sh && \
-	./configure --disable-udev --enable-shared && \
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-udev --enable-shared && \
 	make -j4 && make install && \
 	rm -rf /tmp/*1.0.22*
 
 # Build Nginx
 # Install dependencies
 RUN apt-get update && \
-	apt-get install -y \
+	apt-get install --no-install-recommends -y \
 	ca-certificates \
 	openssl libssl-dev yasm \
 	libpcre3-dev librtmp-dev libtheora-dev \
@@ -66,19 +66,19 @@ RUN apt-get update && \
 # Download nginx source
 RUN mkdir -p /tmp/build && \
 	cd /tmp/build && \
-	curl -O -L https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
+	curl -f -O -L https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz && \
 	tar -zxf nginx-${NGINX_VERSION}.tar.gz && \
 	rm nginx-${NGINX_VERSION}.tar.gz
 
 # Download rtmp-module source
 RUN cd /tmp/build && \
-    curl -O -L https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_MODULE_VERSION}.tar.gz && \
+    curl -f -O -L https://github.com/arut/nginx-rtmp-module/archive/v${NGINX_RTMP_MODULE_VERSION}.tar.gz && \
     tar -zxf v${NGINX_RTMP_MODULE_VERSION}.tar.gz && \
 	rm v${NGINX_RTMP_MODULE_VERSION}.tar.gz
 
 # Build nginx with nginx-rtmp module
 RUN cd /tmp/build/nginx-${NGINX_VERSION} && \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --sbin-path=/usr/local/sbin/nginx \
         --conf-path=/etc/nginx/nginx.conf \
         --error-log-path=/var/log/nginx/error.log \
@@ -126,8 +126,8 @@ RUN cp -r $MODEL_ROOT/intel/vehicle-detection-adas-0002 $APP_DIR/ && \
 
 # Install Go
 RUN cd /tmp && \
-	curl -O -L https://dl.google.com/go/go1.15.linux-amd64.tar.gz && \
-	tar -xvf go1.15.linux-amd64.tar.gz
+	curl -f -O -L https://dl.google.com/go/go1.15.linux-amd64.tar.gz && \
+	tar -xvf go1.15.linux-amd64.tar.gz && rm go1.15.linux-amd64.tar.gz
 
 ENV OPENVINO_ROOT=/opt/intel/openvino_$YEAR
 ENV GOPATH=/home/openvino/go