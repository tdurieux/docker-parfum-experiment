{
  "startTime": 1674255466850,
  "endTime": 1674255467576,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-License-Identifier: Apache-2.0\n# Copyright (c) 2019 Intel Corporation\n\nFROM alpine:3.12.0\n\nENV http_proxy=$http_proxy\nENV https_proxy=$https_proxy\nENV no_proxy=$no_proxy\n\nENV PATH /usr/local/go/bin:$PATH\nRUN apk update\nRUN apk add --no-cache sudo\nRUN apk add --no-cache build-base\nRUN apk add --no-cache bash\nRUN apk add --no-cache wget zlib-dev openssl-dev\n\n#install python3.6\nRUN wget https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz\nRUN tar xvf Python-3.6.5.tgz && rm Python-3.6.5.tgz\nWORKDIR Python-3.6.5\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations --with-ensurepip=install\nRUN make -j 8\nRUN make altinstall\nWORKDIR /usr/local/bin\nRUN ln -s python3.6 pythonpython\n\n#install pip3\nRUN apk add --no-cache grpc python3-dev\nRUN wget https://bootstrap.pypa.io/get-pip.py\nRUN python3.6 get-pip.py\n\n# needed by openedge when build\nRUN apk add --no-cache zip unzip tcpdump\nRUN pip3 install --no-cache-dir protobuf\n\nRUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\nRUN echo 'Asia/Shanghai' >/etc/timezone\n\n#RUN yum install -y wget python iputils-ping python-pip openssh-server expect iperf3 net-tools openssh-clients psmisc\nRUN apk add --no-cache dhclient openssh-server expect iperf3 net-tools openssh-client psmisc\nRUN apk add --no-cache make\nRUN apk add --no-cache git\nRUN apk add --no-cache musl-dev\n\n#WORKDIR /root/\n\n# install python pip and grpcio\n#RUN pip install protobuf grpcio\n\n# install golang\nRUN apk add --no-cache go bash\nRUN wget -O go.tgz https://dl.google.com/go/go1.10.3.src.tar.gz\nRUN tar -C /usr/local -xzf go.tgz && rm go.tgz\nWORKDIR /usr/local/go/src/\nRUN ./make.bash\nRUN export PATH=\"/usr/local/go/bin:$PATH\" \nRUN GOPATH=/opt/go/\nRUN PATH=$PATH:$GOPATH/bin\n\n# download openedge and build it\nRUN git clone https://github.com/baetyl/baetyl\nRUN mkdir -p /usr/local/go/src/github.com/baidu/\nRUN mv baetyl /usr/local/go/src/github.com/baidu/openedge\nWORKDIR /usr/local/go/src/github.com/baidu/openedge\nRUN git checkout tags/0.1.3\nRUN make all\nRUN make install-native\n\nRUN addgroup -S baiduiotgroup && adduser -S baiduiot -G baiduiotgroup\nRUN echo '%baiduiotgroup ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n#COPY ./democfg/application.yml /usr/local/var/db/openedge/application.yml\n#COPY ./democfg/agent-conf/service.yml /usr/local/var/db/openedge/agent-conf/service.yml\n#COPY ./democfg/agent-cert/*.* /usr/local/var/db/openedge/agent-cert/\n#COPY ./democfg/remote-iothub-conf/service.yml /usr/local/var/db/openedge/remote-iothub-conf/service.yml\nCOPY entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\nUSER baiduiot\nWORKDIR /home/baiduiot\nENTRYPOINT [\"sudo\", \"/entrypoint.sh\"]\n"
}