{
  "startTime": 1674220035063,
  "endTime": 1674220037948,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 172
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 168
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 168
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 166
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 168
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 67,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 217
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=linux/amd64 php:7.4.26-apache\nLABEL maintainer=\"Francesco Bianco <francescobianco@opencrmitalia.com>\"\n\n## Configure PHP\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get -y --no-install-recommends install -qq --force-yes rsync mariadb-client libzip-dev libicu-dev git zlib1g-dev libc-client-dev libkrb5-dev cron rsyslog unzip libssh2-1-dev gnupg2 alien libaio1 nano vim net-tools iputils-ping telnet && \\\n    docker-php-ext-configure intl && docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \\\n    docker-php-ext-install imap exif mysqli pdo pdo_mysql zip intl && \\\n    echo \"short_open_tag=off\" >> /usr/local/etc/php/conf.d/syntax.ini && \\\n    echo \"memory_limit=-1\" >> /usr/local/etc/php/conf.d/memory_limit.ini && \\\n    echo \"display_errors=0\" >> /usr/local/etc/php/conf.d/errors.ini && \\\n    sed -e 's!DocumentRoot /var/www/html!DocumentRoot /var/www/html/public!' -ri /etc/apache2/sites-available/000-default.conf && \\\n    curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin/ --filename=composer && \\\n    apt-get clean && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/*\n#RUN pecl install -f ssh2-1.1.2 && docker-php-ext-enable ssh2\n\n## Install PHP Accelerators\nRUN pecl install apcu \\\n    && pecl install apcu_bc-1.0.3 \\\n    && docker-php-ext-enable apcu --ini-name 10-docker-php-ext-apcu.ini \\\n    && docker-php-ext-enable apc --ini-name 20-docker-php-ext-apc.ini\n\n## Intall NodeJS\nRUN curl -fsSL https://deb.nodesource.com/setup_current.x | bash - && \\\n    apt-get update && apt-get install --no-install-recommends -y nodejs build-essential && npm install -g npm yarn && \\\n    apt-get clean && rm -rf /tmp/* /var/tmp/* /var/lib/apt/lists/* && npm cache clean --force;\n\n## Install Xdebug\nRUN pecl install -f xdebug && \\\n    docker-php-ext-enable xdebug && \\\n    echo \"xdebug.remote_enable = 1\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \\\n    echo \"xdebug.remote_host=host.docker.internal\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \\\n    echo \"xdebug.remote_autostart = 0\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \\\n    echo \"xdebug.remote_connect_back = 0\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \\\n    echo \"xdebug.remote_port = 9000\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \\\n    echo \"xdebug.remote_handler = 'dbgp'\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini && \\\n    echo \"xdebug.remote_mode = req\" >> /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini\n\n## Install MS Database\n#RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add - && \\\n#     curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list && \\\n#    apt-get update && \\\n#    apt-get install --no-install-recommends -y msodbcsql17 unixodbc-dev && \\\n#    pecl install -f sqlsrv pdo_sqlsrv && \\\n#    docker-php-ext-enable sqlsrv pdo_sqlsrv && \\\n#    sed -i 's,^\\(MinProtocol[ ]*=\\).*,\\1'TLSv1.0',g' /etc/ssl/openssl.cnf && \\\n#    sed -i 's,^\\(CipherString[ ]*=\\).*,\\1'DEFAULT@SECLEVEL=1',g' /etc/ssl/openssl.cnf\n\n## Install Oracle Database\nRUN curl -f \"https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-sqlplus-19.5.0.0.0-1.x86_64.rpm\" -o \"/mnt/oracle-instant-sqlplus.rpm\" && \\\n    curl -f \"https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-basic-19.5.0.0.0-1.x86_64.rpm\" -o \"/mnt/oracle-instant-basic.rpm\" && \\\n    curl -f \"https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-devel-19.5.0.0.0-1.x86_64.rpm\" -o \"/mnt/oracle-instant-devel.rpm\" && \\\n    curl -f \"https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-odbc-19.5.0.0.0-1.x86_64.rpm\" -o \"/mnt/oracle-instant-odbc.rpm\" && \\\n    curl -f \"https://download.oracle.com/otn_software/linux/instantclient/195000/oracle-instantclient19.5-tools-19.5.0.0.0-1.x86_64.rpm\" -o \"/mnt/oracle-instant-tools.rpm\" && \\\n    alien -i /mnt/oracle-instant-sqlplus.rpm && \\\n    alien -i /mnt/oracle-instant-basic.rpm && \\\n    alien -i /mnt/oracle-instant-devel.rpm && \\\n    alien -i /mnt/oracle-instant-odbc.rpm && \\\n    alien -i /mnt/oracle-instant-tools.rpm && \\\n    ln -s /usr/lib/oracle/19.5/client64/lib/libsqora.so.19.1 /usr/lib/libsqora.so && \\\n    rm /mnt/* && \\\n    export LD_LIBRARY_PATH=/usr/lib/oracle/19.5/client64/lib && \\\n    export ORACLE_HOME=/usr/lib/oracle/19.5/client64 && \\\n    export C_INCLUDE_PATH=/usr/include/oracle/19.5/client64 && \\\n    docker-php-ext-install oci8 pdo_oci\n\n## Install Platform tool\nRUN curl -f -sS https://platform.sh/cli/installer | php && \\\n    ln -s /root/.platformsh/bin/platform /usr/local/bin/platform\n\n## Setup Cronjob\nRUN echo \"cron.* /var/log/cron.log\" >> /etc/rsyslog.conf && rm -fr /etc/cron.* && mkdir /etc/cron.d\nCOPY docker/etc/crontab /etc/\nRUN chmod 600 /etc/crontab\n\n## Install DBLIB\n#RUN apt-get update && \\\n#    apt-get install -y freetds-bin freetds-dev freetds-common libct4 libsybdb5 tdsodbc libfreetype6-dev libjpeg62-turbo-dev libmcrypt-dev zlib1g-dev libicu-dev g++ libc-client-dev && \\\n#    docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu && \\\n#    docker-php-ext-configure intl && \\\n#    docker-php-ext-install pdo_dblib && \\\n#    docker-php-ext-install intl && \\\n#    docker-php-ext-install mbstring && \\\n#    docker-php-ext-enable intl mbstring pdo_dblib\n\n## Sysadmin tools\nRUN apt-get update && apt-get upgrade -y && \\\n    apt-get -y --no-install-recommends install -qq --force-yes nano vim net-tools iputils-ping telnet && rm -rf /var/lib/apt/lists/*;\n\n## Entrypoint and scripts\nCOPY ./docker/script/myddleware-cron.sh /usr/local/bin/myddleware-cron.sh\nCOPY ./docker/script/myddleware-foreground.sh /usr/local/bin/myddleware-foreground.sh\nCOPY ./docker/script/myddleware-monitor.sh /usr/local/bin/myddleware-monitor.sh\nRUN chmod +x /usr/local/bin/myddleware-*.sh\nCMD [\"myddleware-foreground.sh\"]\n"
}