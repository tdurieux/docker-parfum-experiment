{
  "startTime": 1674254622993,
  "endTime": 1674254623768,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "ARG CUDA_VERSION\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn7-devel-ubuntu16.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common python-software-properties && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository ppa:ubuntugis/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wget=1.* git=1:2.* python-protobuf=2.* python3-tk=3.* \\\n                       jq=1.5* \\\n                       build-essential libsqlite3-dev=3.11.* zlib1g-dev=1:1.2.* \\\n                       unzip curl && \\\n    apt-get autoremove && apt-get autoclean && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# See https://github.com/mapbox/rasterio/issues/1289\nENV CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt\n\n# Install Python 3.7\nRUN wget -q -O ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh && \\\n     chmod +x ~/miniconda.sh && \\\n     ~/miniconda.sh -b -p /opt/conda && \\\n     rm ~/miniconda.sh\nENV PATH /opt/conda/bin:$PATH\nENV LD_LIBRARY_PATH /opt/conda/lib/:$LD_LIBRARY_PATH\nRUN conda install -y python=3.7\nRUN python -m pip install --upgrade pip\nRUN conda install -y -c conda-forge gdal=3.0.4\n\n# Setup GDAL_DATA directory, rasterio needs it.\nENV GDAL_DATA=/opt/conda/lib/python3.7/site-packages/rasterio/gdal_data/\n\nWORKDIR /opt/src/\n\n# needed for jupyter lab extensions\nRUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./requirements-dev.txt /opt/src/requirements-dev.txt\nRUN pip install --no-cache-dir -r requirements-dev.txt\n\n# Ideally we'd just pip install each package, but if we do that, then a lot of the image\n# will have to be re-built each time we make a change to source code. So, we split the\n# install into installing all the requirements first (filtering out any prefixed with\n# rastervision_*), and then copy over the source code.\n\n# Install requirements for each package.\nCOPY ./rastervision_pipeline/requirements.txt /opt/src/requirements.txt\nRUN pip install --no-cache-dir $(grep -ivE \"rastervision_*\" requirements.txt)\n\nCOPY ./rastervision_aws_s3/requirements.txt /opt/src/requirements.txt\nRUN pip install --no-cache-dir $(grep -ivE \"rastervision_*\" requirements.txt)\n\nCOPY ./rastervision_aws_batch/requirements.txt /opt/src/requirements.txt\nRUN pip install --no-cache-dir $(grep -ivE \"rastervision_*\" requirements.txt)\n\nCOPY ./rastervision_core/requirements.txt /opt/src/requirements.txt\nRUN pip install --no-cache-dir $(grep -ivE \"rastervision_*\" requirements.txt)\n\nCOPY ./rastervision_pytorch_learner/requirements.txt /opt/src/requirements.txt\nRUN pip install --no-cache-dir $(grep -ivE \"rastervision_*\" requirements.txt)\n\nCOPY ./rastervision_gdal_vsi/requirements.txt /opt/src/requirements.txt\nRUN pip install --no-cache-dir $(grep -ivE \"rastervision_*\" requirements.txt)\n\n# Commented out because there are no non-RV deps and it will fail if uncommented.\n# COPY ./rastervision_pytorch_backend/requirements.txt /opt/src/requirements.txt\n# RUN pip install $(grep -ivE \"rastervision_*\" requirements.txt)\n\n# Install docs/requirements.txt\nCOPY ./docs/requirements.txt /opt/src/docs/requirements.txt\nRUN pip install --no-cache-dir -r docs/requirements.txt\n\nCOPY scripts /opt/src/scripts/\nCOPY scripts/rastervision /usr/local/bin/rastervision\nCOPY tests /opt/src/tests/\nCOPY integration_tests /opt/src/integration_tests/\nCOPY .flake8 /opt/src/.flake8\nCOPY .coveragerc /opt/src/.coveragerc\n\n# Needed for click to work\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV PROJ_LIB /opt/conda/share/proj/\n\n# Copy code for each package.\nENV PYTHONPATH=/opt/src:$PYTHONPATH\nENV PYTHONPATH=/opt/src/rastervision_pipeline/:$PYTHONPATH\nENV PYTHONPATH=/opt/src/rastervision_aws_s3/:$PYTHONPATH\nENV PYTHONPATH=/opt/src/rastervision_aws_batch/:$PYTHONPATH\nENV PYTHONPATH=/opt/src/rastervision_gdal_vsi/:$PYTHONPATH\nENV PYTHONPATH=/opt/src/rastervision_core/:$PYTHONPATH\nENV PYTHONPATH=/opt/src/rastervision_pytorch_learner/:$PYTHONPATH\nENV PYTHONPATH=/opt/src/rastervision_pytorch_backend/:$PYTHONPATH\n\nCOPY ./rastervision_pipeline/ /opt/src/rastervision_pipeline/\nCOPY ./rastervision_aws_s3/ /opt/src/rastervision_aws_s3/\nCOPY ./rastervision_aws_batch/ /opt/src/rastervision_aws_batch/\nCOPY ./rastervision_core/ /opt/src/rastervision_core/\nCOPY ./rastervision_pytorch_learner/ /opt/src/rastervision_pytorch_learner/\nCOPY ./rastervision_pytorch_backend/ /opt/src/rastervision_pytorch_backend/\nCOPY ./rastervision_gdal_vsi/ /opt/src/rastervision_gdal_vsi/\n\nCMD [\"bash\"]\n"
}