diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azavea/raster-vision/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azavea/raster-vision/Dockerfile/repaired.Dockerfile
index b025903..5635cf1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/azavea/raster-vision/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/azavea/raster-vision/Dockerfile/repaired.Dockerfile
@@ -1,15 +1,15 @@
 ARG CUDA_VERSION
 FROM nvidia/cuda:${CUDA_VERSION}-cudnn7-devel-ubuntu16.04
 
-RUN apt-get update && apt-get install -y software-properties-common python-software-properties
+RUN apt-get update && apt-get install --no-install-recommends -y software-properties-common python-software-properties && rm -rf /var/lib/apt/lists/*;
 
 RUN add-apt-repository ppa:ubuntugis/ppa && \
     apt-get update && \
-    apt-get install -y wget=1.* git=1:2.* python-protobuf=2.* python3-tk=3.* \
+    apt-get install --no-install-recommends -y wget=1.* git=1:2.* python-protobuf=2.* python3-tk=3.* \
                        jq=1.5* \
                        build-essential libsqlite3-dev=3.11.* zlib1g-dev=1:1.2.* \
                        unzip curl && \
-    apt-get autoremove && apt-get autoclean && apt-get clean
+    apt-get autoremove && apt-get autoclean && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # See https://github.com/mapbox/rasterio/issues/1289
 ENV CURL_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
@@ -32,10 +32,10 @@ WORKDIR /opt/src/
 
 # needed for jupyter lab extensions
 RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash - && \
-    apt-get install -y nodejs
+    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 COPY ./requirements-dev.txt /opt/src/requirements-dev.txt
-RUN pip install -r requirements-dev.txt
+RUN pip install --no-cache-dir -r requirements-dev.txt
 
 # Ideally we'd just pip install each package, but if we do that, then a lot of the image
 # will have to be re-built each time we make a change to source code. So, we split the
@@ -44,22 +44,22 @@ RUN pip install -r requirements-dev.txt
 
 # Install requirements for each package.
 COPY ./rastervision_pipeline/requirements.txt /opt/src/requirements.txt
-RUN pip install $(grep -ivE "rastervision_*" requirements.txt)
+RUN pip install --no-cache-dir $(grep -ivE "rastervision_*" requirements.txt)
 
 COPY ./rastervision_aws_s3/requirements.txt /opt/src/requirements.txt
-RUN pip install $(grep -ivE "rastervision_*" requirements.txt)
+RUN pip install --no-cache-dir $(grep -ivE "rastervision_*" requirements.txt)
 
 COPY ./rastervision_aws_batch/requirements.txt /opt/src/requirements.txt
-RUN pip install $(grep -ivE "rastervision_*" requirements.txt)
+RUN pip install --no-cache-dir $(grep -ivE "rastervision_*" requirements.txt)
 
 COPY ./rastervision_core/requirements.txt /opt/src/requirements.txt
-RUN pip install $(grep -ivE "rastervision_*" requirements.txt)
+RUN pip install --no-cache-dir $(grep -ivE "rastervision_*" requirements.txt)
 
 COPY ./rastervision_pytorch_learner/requirements.txt /opt/src/requirements.txt
-RUN pip install $(grep -ivE "rastervision_*" requirements.txt)
+RUN pip install --no-cache-dir $(grep -ivE "rastervision_*" requirements.txt)
 
 COPY ./rastervision_gdal_vsi/requirements.txt /opt/src/requirements.txt
-RUN pip install $(grep -ivE "rastervision_*" requirements.txt)
+RUN pip install --no-cache-dir $(grep -ivE "rastervision_*" requirements.txt)
 
 # Commented out because there are no non-RV deps and it will fail if uncommented.
 # COPY ./rastervision_pytorch_backend/requirements.txt /opt/src/requirements.txt
@@ -67,7 +67,7 @@ RUN pip install $(grep -ivE "rastervision_*" requirements.txt)
 
 # Install docs/requirements.txt
 COPY ./docs/requirements.txt /opt/src/docs/requirements.txt
-RUN pip install -r docs/requirements.txt
+RUN pip install --no-cache-dir -r docs/requirements.txt
 
 COPY scripts /opt/src/scripts/
 COPY scripts/rastervision /usr/local/bin/rastervision