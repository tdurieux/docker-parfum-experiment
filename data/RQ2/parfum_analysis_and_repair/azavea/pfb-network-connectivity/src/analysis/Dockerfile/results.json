{
  "startTime": 1674252566535,
  "endTime": 1674252567744,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM postgis/postgis:13-3.1\nMAINTAINER Azavea\nLABEL type=pfb-analysis\n\n# Copy django requirements (will copy the rest later, so that any change to\n# the code doesn't trigger re-running the whole provisioning step)\nCOPY ./django/requirements.txt /opt/pfb/django/requirements.txt\n\n# Install apt and pip packages\n# Installs everything then removes the build dependencies all in one gigantic command to\n# avoid making a build layer that includes the dependencies that we don't need to keep permanently.\n# The 'hash -r' after upgrading pip is because otherwise the subsequent 'pip install' command will\n# still use the old version.\nRUN set -xe && \\\n    BUILD_DEPS=\" \\\n        postgresql-server-dev-$PG_MAJOR \\\n        postgresql-server-dev-13 \\\n        libexpat1-dev \\\n        cmake \\\n        libboost-all-dev make \\\n        g++ \\\n        zlib1g-dev \\\n        libbz2-dev \\\n        libpq-dev \\\n        libgeos-dev \\\n        libgeos++-dev \\\n        libproj-dev \\\n        libgdal-dev \\\n        git\" \\\n    DEPS=\" \\\n        ca-certificates \\\n        liblua5.2-dev \\\n        lua5.2 \\\n        expat \\\n        wget \\\n        bc \\\n        time \\\n        parallel \\\n        postgresql-plpython3-$PG_MAJOR \\\n        postgresql-$PG_MAJOR-pgrouting \\\n        python3-gdal \\\n        gdal-bin \\\n        unzip \\\n        zip \\\n        postgis \\\n        python3 \\\n        python3-dev \\\n        python3-pip \\\n        osm2pgrouting \\\n        osm2pgsql\" && \\\n    apt-get update && apt-get install -y ${BUILD_DEPS} ${DEPS} --no-install-recommends && \\\n    \\\n    mkdir /tmp/build/ && cd /tmp/build && \\\n    git clone --branch master https://github.com/tvondra/quantile.git && \\\n      (cd quantile && make install) && \\\n\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    hash -r && \\\n    pip3 install --no-cache-dir -r /opt/pfb/django/requirements.txt && \\\n\n    cd /tmp/ && rm -rf /tmp/build/ /var/lib/apt/lists/* && \\\n    apt-get purge -y --auto-remove ${BUILD_DEPS}\n\nRUN set -xe && \\\n    wget -q \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" && \\\n    unzip awscli-exe-linux-x86_64.zip && \\\n    ./aws/install && \\\n    rm -r ./aws*\n\nRUN set -xe && \\\n    wget -q -O /usr/local/bin/osmconvert \"https://s3.amazonaws.com/pfb-binaries-us-east-1/osmconvert64\" && \\\n    chmod +x /usr/local/bin/osmconvert\n\nCOPY ./django /opt/pfb/django\n\nCOPY ./analysis/scripts/setup_database.sh /docker-entrypoint-initdb.d/setup_database.sh\nCOPY ./analysis/ /opt/pfb/analysis/\n\nENTRYPOINT /opt/pfb/analysis/scripts/entrypoint.sh\n"
}