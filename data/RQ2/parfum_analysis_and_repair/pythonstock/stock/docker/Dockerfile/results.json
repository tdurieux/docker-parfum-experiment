{
  "startTime": 1674248600631,
  "endTime": 1674248601302,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 22,
        "columnEnd": 122
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#使用 python:3.7-slim 做基础镜像减少大小。其中tensorflow再用另外的镜像跑数据。\n\n# 之前使用的是python:3.6-slim\n# 可以更新 3.7-slim-stretch slim-stretch\n\n# https://hub.docker.com/_/python?tab=tags&page=1&name=3.7-slim-stretch\n# 用这个做为基础镜像，防止每次都进行构建。\n\nFROM docker.io/python:3.7-slim-stretch\n\n# https://opsx.alibaba.com/mirror\n# 使用阿里云镜像地址。修改debian apt 更新地址，pip 地址，设置时区。\nRUN echo  \"deb http://mirrors.aliyun.com/debian/ stretch main non-free contrib\\n\\\ndeb-src http://mirrors.aliyun.com/debian/ stretch main non-free contrib\\n\\\ndeb http://mirrors.aliyun.com/debian-security stretch/updates main\\n\\\ndeb-src http://mirrors.aliyun.com/debian-security stretch/updates main\\n\\\ndeb http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\\n\\\ndeb-src http://mirrors.aliyun.com/debian/ stretch-updates main non-free contrib\\n\\\ndeb http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\\n\\\ndeb-src http://mirrors.aliyun.com/debian/ stretch-backports main non-free contrib\" > /etc/apt/sources.list && \\\necho  \"[global]\\n\\\ntrusted-host=mirrors.aliyun.com\\n\\\nindex-url=http://mirrors.aliyun.com/pypi/simple\" > /etc/pip.conf && \\\nln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    echo \"Asia/Shanghai\" > /etc/timezone\n\nRUN echo \"rebuild docker @2022-01-12\"\n#增加语言utf-8\nENV LANG=zh_CN.UTF-8\nENV LC_CTYPE=zh_CN.UTF-8\nENV LC_ALL=C\nENV PYTHONPATH=/data/stock\n\n# 增加 TensorFlow 的支持，使用最新的2.0 编写代码。目前还是使用 1.x 吧，还没有学明白。\n# RUN pip3 install tensorflow==2.0.0-rc1 keras\n# RUN pip3 install tensorflow keras sklearn\n\n# 设置 vim 的语言配置\nRUN mkdir -p /etc/vim/ && \\\n    echo \"set fileencodings=utf-8,ucs-bom,gb18030,gbk,gb2312,cp936\" >> /etc/vim/vimrc && \\\n    echo \"set termencoding=utf-8\" >> /etc/vim/vimrc && \\\n    echo \"set encoding=utf-8\" >> /etc/vim/vimrc\n\n# 安装 mysqlclient akshare (pandas ,numpy) tornado bokeh\n# 安装 nodejs 库\n# apt-get autoremove -y 删除没有用的依赖lib。减少镜像大小。1MB 也要节省。\n# apt-get --purge remove 软件包名称 , 删除已安装包（不保留配置文件)。\nRUN apt-get update && apt-get install --no-install-recommends -y net-tools procps gcc make python3-dev default-libmysqlclient-dev libxml2-dev cron && \\\n    pip3 install --no-cache-dir mysqlclient sqlalchemy && \\\n    pip3 install --no-cache-dir supervisor && \\\n    pip3 install --no-cache-dir numpy pandas && \\\n    pip3 install --no-cache-dir akshare --upgrade && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    pip3 install --no-cache-dir tornado torndb && \\\n    pip3 install --no-cache-dir bokeh stockstats sklearn && \\\n    apt-get --purge remove -y gcc make python3-dev default-libmysqlclient-dev libxml2-dev && \\\n    rm -rf /root/.cache/* && apt-get clean && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n# /usr/local/lib/python3.7/site-packages/pandas/\n# 1.解决 pandas 数据插入问题。直接修改数据库驱动 sqlalchemy\n# 修改：statement.replace(\"INSERT INTO\",\"INSERT IGNORE INTO\")\n# /usr/local/lib/python3.7/site-packages/sqlalchemy/dialects/mysql/mysqldb.py\n# 增加了一个 IGNORE 参数。\n# 2.解决torndb在python3下面的问题：\n# http://blog.csdn.net/littlethunder/article/details/8917378\n# 3. 解决 type 问题，使用sed 进行替换。\n#  File \"/usr/local/lib/python3.7/site-packages/torndb.py\", line 260, in <module>\n#    CONVERSIONS[field_type] = [(FLAG.BINARY, str)] + CONVERSIONS[field_type]\n#  TypeError: can only concatenate list (not \"type\") to list\n\nRUN echo `date +%Y-%m-%d:%H:%M:%S` >> /etc/docker.build && \\\n    sed -i -e 's/executemany(statement/executemany(statement.replace\\(\"INSERT INTO\",\"INSERT IGNORE INTO\")/g' \\\n        /usr/local/lib/python3.7/site-packages/sqlalchemy/dialects/mysql/mysqldb.py && \\\n    rm -f /etc/cron.daily/apt-compat /etc/cron.daily/dpkg /etc/cron.daily/passwd && \\\n    sed -i -e 's/itertools\\.izip/zip/g' \\\n    /usr/local/lib/python3.7/site-packages/torndb.py  && \\\n    sed -i -e 's/\\+ CONVERSIONS\\[field_type\\]/\\+ \\[CONVERSIONS\\[field_type\\],bytes\\]/g' \\\n    /usr/local/lib/python3.7/site-packages/torndb.py\n\n\n"
}