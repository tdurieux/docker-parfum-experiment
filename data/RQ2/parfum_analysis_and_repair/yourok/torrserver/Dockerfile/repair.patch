diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/yourok/torrserver/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/yourok/torrserver/Dockerfile/repaired.Dockerfile
index deeef2c..af26adb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/yourok/torrserver/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/yourok/torrserver/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@ FROM --platform=$BUILDPLATFORM node:16-alpine as front
 COPY ./web /app
 WORKDIR /app
 # Build front once upon multiarch build
-RUN yarn install && yarn run build
+RUN yarn install && yarn run build && yarn cache clean;
 ### FRONT BUILD END ###
 
 ### BUILD TORRSERVER MULTIARCH START ###
@@ -20,12 +20,12 @@ ARG TARGETARCH
 ENV GOARCH=$TARGETARCH
 
 # Build torrserver
-RUN apk add --update g++ \
+RUN apk add --no-cache --update g++ \
 && go run gen_web.go \
 && cd server \
 && go clean -i -r -cache \
 && go mod tidy \
-&& go build -ldflags '-w -s' --o "torrserver" ./cmd 
+&& go build -ldflags '-w -s' --o "torrserver" ./cmd
 ### BUILD TORRSERVER MULTIARCH END ###
 
 
@@ -34,7 +34,7 @@ FROM debian:buster-slim as compressed
 
 COPY --from=builder /opt/src/server/torrserver ./torrserver
 
-RUN apt-get update && apt-get install -y upx-ucl && upx --best --lzma ./torrserver
+RUN apt-get update && apt-get install --no-install-recommends -y upx-ucl && upx --best --lzma ./torrserver && rm -rf /var/lib/apt/lists/*;
 # Compress torrserver only for amd64 and arm64 no variant platforms
 # ARG TARGETARCH
 # ARG TARGETVARIANT