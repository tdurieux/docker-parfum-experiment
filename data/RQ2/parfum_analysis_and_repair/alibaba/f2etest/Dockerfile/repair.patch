diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alibaba/f2etest/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alibaba/f2etest/Dockerfile/repaired.Dockerfile
index b09cd8a..cb017a2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alibaba/f2etest/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alibaba/f2etest/Dockerfile/repaired.Dockerfile
@@ -13,12 +13,12 @@ RUN yum install -y wget vim gcc initscripts sudo lsof automake autoconf libtool
   cairo-devel libpng-devel uuid-devel freerdp* libvncserver-devel openssl-devel \
   # 编译前创建 `freerdp` 的软连接
   && ln -s /usr/local/lib/freerdp/guacsnd.so /usr/lib64/freerdp2/ \
-  && ln -s /usr/local/lib/freerdp/guacdr.so /usr/lib64/freerdp2/
+  && ln -s /usr/local/lib/freerdp/guacdr.so /usr/lib64/freerdp2/ && rm -rf /var/cache/yum
 
 WORKDIR /home/guacdshare/guacamole-server-0.9.3
 
 # 运行配置脚本并将 `guacd` 添加到 `/etc/init.d` 目录
-RUN ./configure --with-init-dir=/etc/init.d \
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-init-dir=/etc/init.d \
   # 编译
   && make \
   # 安装构建的组件
@@ -27,7 +27,7 @@ RUN ./configure --with-init-dir=/etc/init.d \
   && ldconfig \
   # 设置运行时自动启动
   && chkconfig --add guacd \
-  && chkconfig guacd on 
+  && chkconfig guacd on
 
 
 ### Guacamole Client ###
@@ -35,14 +35,14 @@ WORKDIR /root
 
 ## JAVA ##
 # 下载 JDK 1.8
-RUN wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "http://download.oracle.com/otn-pub/java/jdk/8u141-b15/336fa29ff2bb4ef291e347e091f7f4a7/jdk-8u141-linux-x64.tar.gz" \
+RUN wget --no-cookies --no-check-certificate --header "Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com%2F; oraclelicense=accept-securebackup-cookie" "https://download.oracle.com/otn-pub/java/jdk/8u141-b15/336fa29ff2bb4ef291e347e091f7f4a7/jdk-8u141-linux-x64.tar.gz" \
   && mkdir /usr/java
 
 WORKDIR /usr/java
 
 # 拷贝并解压 JDK
 RUN cp /root/jdk-8u141-linux-x64.tar.gz ./ \
-  && tar xzf jdk-8u141-linux-x64.tar.gz
+  && tar xzf jdk-8u141-linux-x64.tar.gz && rm jdk-8u141-linux-x64.tar.gz
 
 # 设置 JAVA 运行环境
 ENV JAVA_HOME /usr/java/jdk1.8.0_141
@@ -53,9 +53,9 @@ ENV CLASSPATH .:$JAVA_HOME/lib
 WORKDIR /usr/local
 
 # 下载并解压 Tomcat
-RUN wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-8/v8.5.50/bin/apache-tomcat-8.5.50.tar.gz \
+RUN wget https://mirrors.hust.edu.cn/apache/tomcat/tomcat-8/v8.5.50/bin/apache-tomcat-8.5.50.tar.gz \
   && tar -xzvf apache-tomcat-8.5.50.tar.gz \
-  && mv apache-tomcat-8.5.50 tomcat8
+  && mv apache-tomcat-8.5.50 tomcat8 && rm apache-tomcat-8.5.50.tar.gz
 
 # 拷贝定制过的 WAR 包
 COPY f2etest-guacamole/guacamole-0.9.3.war /usr/local/tomcat8/webapps/guacamole.war
@@ -91,16 +91,16 @@ RUN wget https://nodejs.org/dist/v10.15.1/node-v10.15.1-linux-x64.tar.xz \
   && ln -s /usr/local/node/bin/npm /usr/bin/npm \
   # 安装 pm2 [node 应用进程管理器]
   && npm i -g pm2 \
-  # 给 `pm2` 命令创建软连接
-  && ln -s /usr/local/node/bin/pm2 /usr/bin/pm2
+  # 给 `pm2` 命令创建软连接 \
+  && ln -s /usr/local/node/bin/pm2 /usr/bin/pm2 && npm cache clean --force; && rm node-v10.15.1-linux-x64.tar
 
 ## MySQL ##
 # 下载安装 MySQL
-RUN wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm \
+RUN wget https://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm \
   && yum localinstall -y mysql-community-release-el7-5.noarch.rpm \
   && yum install -y mysql-community-server \
   && chown -R mysql /var/lib/mysql \
-  && chgrp -R mysql /var/lib/mysql
+  && chgrp -R mysql /var/lib/mysql && rm -rf /var/cache/yum
 
 ## Nginx ##
 # 拷贝 nginx 源配置
@@ -108,7 +108,7 @@ COPY f2etest-docker/nginx.repo /etc/yum.repos.d/
 
 # yum 安装 nginx
 RUN yum-config-manager --enable nginx-mainline \
-  && yum install -y nginx
+  && yum install -y nginx && rm -rf /var/cache/yum
 
 COPY f2etest-docker/nginx.conf /etc/nginx/
 
@@ -116,7 +116,7 @@ COPY f2etest-docker/nginx.conf /etc/nginx/
 COPY f2etest-web /home/f2etest-web
 WORKDIR /home/f2etest-web/
 # 安装 node 依赖包
-RUN npm i
+RUN npm i && npm cache clean --force;
 
 
 # 拷贝初始化脚本（初始化数据库表、`pm2` 启动 Web、启动 Nginx）