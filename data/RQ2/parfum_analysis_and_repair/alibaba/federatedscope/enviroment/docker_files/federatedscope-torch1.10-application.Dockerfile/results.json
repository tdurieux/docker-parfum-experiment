{
  "startTime": 1674249319158,
  "endTime": 1674249320321,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 138
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 138
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# The federatedscope image includes all runtime stuffs of federatedscope,\n# with customized miniconda and required packages installed.\n\n# based on the nvidia-docker\n# NOTE: please pre-install the NVIDIA drivers and `nvidia-docker2` in the host machine,\n# see details in https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html\nFROM nvidia/cuda:11.3.1-runtime-ubuntu20.04\n\n# change bash as default\nSHELL [\"/bin/bash\", \"-c\"]\n\n# shanghai zoneinfo\nENV TZ=Asia/Shanghai\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# install basic tools\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install curl git gcc g++ make openssl libssl-dev libbz2-dev libreadline-dev libsqlite3-dev python-dev libmysqlclient-dev && rm -rf /var/lib/apt/lists/*;\n\n# install miniconda,  in batch (silent) mode, does not edit PATH or .bashrc or .bash_profile\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\nRUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && bash Miniconda3-latest-Linux-x86_64.sh -b \\\n    && rm Miniconda3-latest-Linux-x86_64.sh\n\nENV PATH=/root/miniconda3/bin:${PATH}\nRUN source activate\n\n# install packages required by federatedscope\nRUN conda update -y conda \\\n    && conda config --add channels conda-forge\n\n# basic machine learning env\nRUN conda install -y numpy=1.21.2 scikit-learn=1.0.2 scipy=1.7.3 pandas=1.4.1 -c scikit-learn \\\n    && conda clean -a -y\n\n# basic torch env\nRUN conda install -y pytorch=1.10.1 torchvision=0.11.2 torchaudio=0.10.1 cudatoolkit=11.3 -c pytorch -c conda-forge \\\n    && conda clean -a -y\n\n# torch helper package\nRUN conda install -y fvcore iopath -c fvcore -c iopath -c conda-forge \\\n    && conda clean -a -y\n\n# auxiliaries (communications, monitoring, etc.)\nRUN conda install -y wandb tensorboard tensorboardX pympler -c conda-forge \\\n    && pip install --no-cache-dir grpcio grpcio-tools protobuf==3.19.4 setuptools==61.2.0 \\\n    && conda clean -a -y\n\n# for grpah\nRUN conda install -y pyg==2.0.4 -c pyg  \\\n    && conda install -y rdkit=2021.09.4=py39hccf6a74_0 -c conda-forge \\\n    && conda install -y nltk \\\n    && conda clean -a -y\n\n# for speech and nlp\nRUN conda install -y sentencepiece textgrid typeguard -c conda-forge \\\n    && conda install -y transformers==4.16.2 tokenizers==0.10.3 datasets -c huggingface -c conda-forge \\\n    && conda install -y torchtext -c pytorch \\\n    && conda clean -a -y\n\n\n"
}