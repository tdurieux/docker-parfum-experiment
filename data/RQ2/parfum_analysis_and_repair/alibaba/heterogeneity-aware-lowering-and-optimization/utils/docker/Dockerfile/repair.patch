diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alibaba/heterogeneity-aware-lowering-and-optimization/utils/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alibaba/heterogeneity-aware-lowering-and-optimization/utils/docker/Dockerfile/repaired.Dockerfile
index 48f538e..06fafe1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alibaba/heterogeneity-aware-lowering-and-optimization/utils/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alibaba/heterogeneity-aware-lowering-and-optimization/utils/docker/Dockerfile/repaired.Dockerfile
@@ -14,9 +14,9 @@ RUN mkdir /host
 
 # update cuda repo public key
 RUN mv /etc/apt/sources.list.d/cuda.list /tmp/
-RUN apt-get update && apt-get install -y curl && \
+RUN apt-get update && apt-get install --no-install-recommends -y curl && \
     curl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub | apt-key add - && \
-    mv /tmp/cuda.list /etc/apt/sources.list.d/
+    mv /tmp/cuda.list /etc/apt/sources.list.d/ && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && apt-get -y --no-install-recommends install software-properties-common apt-utils wget && rm -fr /var/lib/apt/lists/*
 
@@ -92,7 +92,7 @@ RUN apt-get update -y && \
     apt-get clean && apt-get purge && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 #install the Git
-RUN add-apt-repository ppa:git-core/ppa -y && apt update && apt install git -y
+RUN add-apt-repository ppa:git-core/ppa -y && apt update && apt install --no-install-recommends git -y && rm -rf /var/lib/apt/lists/*;
 
 RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${GCC_VERSION} 60 --slave /usr/bin/g++ g++ /usr/bin/g++-${GCC_VERSION} && \
     update-alternatives --install /usr/bin/aarch64-linux-gnu-g++ aarch64-linux-gnu-g++ /usr/bin/aarch64-linux-gnu-g++-${GCC_VERSION} 60 && \
@@ -131,20 +131,20 @@ RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
     apt-get clean && apt-get purge && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
 
 #python
-RUN pip3 install --upgrade pip && \
-    pip3 install wheel numpy six jupyter enum34 mock h5py pillow scipy==1.5.4 opencv-python==4.5.5.64
+RUN pip3 install --no-cache-dir --upgrade pip && \
+    pip3 install --no-cache-dir wheel numpy six jupyter enum34 mock h5py pillow scipy==1.5.4 opencv-python==4.5.5.64
 
 # Update binutils
 ARG BINUTILS_VERSION=2.35
 RUN mkdir /tmp/binutils && \
     cd /tmp/binutils && \
-    wget http://ftp.gnu.org/gnu/binutils/binutils-${BINUTILS_VERSION}.tar.gz && \
+    wget https://ftp.gnu.org/gnu/binutils/binutils-${BINUTILS_VERSION}.tar.gz && \
     tar zxf binutils-${BINUTILS_VERSION}.tar.gz && \
     cd binutils-${BINUTILS_VERSION} && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j all && \
     make install && \
-    rm -rf /tmp/binutils
+    rm -rf /tmp/binutils && rm binutils-${BINUTILS_VERSION}.tar.gz
 
 # Install cmake
 ARG CMAKE_VERSION=3.14.5
@@ -156,7 +156,7 @@ RUN mkdir /tmp/cmake && \
     ./bootstrap --system-curl --parallel=48 && \
     make -j all && \
     make install && \
-    rm -rf /tmp/cmake
+    rm -rf /tmp/cmake && rm cmake-${CMAKE_VERSION}.tar.gz
 
 # Install valgrind
 ARG VALGRIND_VERSION=3.13.0
@@ -165,10 +165,10 @@ RUN mkdir /tmp/valgrind && \
     wget ftp://sourceware.org/pub/valgrind/valgrind-${VALGRIND_VERSION}.tar.bz2 && \
     tar jxf valgrind-${VALGRIND_VERSION}.tar.bz2 && \
     cd valgrind-${VALGRIND_VERSION} && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j all && \
     make install && \
-    rm -rf /tmp/valgrind
+    rm -rf /tmp/valgrind && rm valgrind-${VALGRIND_VERSION}.tar.bz2
 
 # INSTALL Protobuf (static)
 RUN cd /tmp && \
@@ -207,7 +207,7 @@ RUN apt-get update && \
 
 # Install Eigen
 RUN cd /tmp && wget https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.bz2 && \
-    tar jxvf eigen-3.4.0.tar.bz2 && mv eigen-3.4.0 /opt
+    tar jxvf eigen-3.4.0.tar.bz2 && mv eigen-3.4.0 /opt && rm eigen-3.4.0.tar.bz2
 
 # Install XNNPack
 RUN cd /tmp && git clone https://github.com/google/XNNPACK.git && \
@@ -231,8 +231,8 @@ RUN if [[ ! "${BASE_IMAGE}" =~ "nvidia" ]]; then wget https://registrationcenter
     ./l_BaseKit_p_2021.2.0.2883_offline.sh -s -a --silent --eula accept; fi
 
 # Install Ascend Toolkit
-RUN apt-get update && apt-get install -y python3.8 \
- && curl --output /tmp/ascend.run https://ascend-repo.obs.cn-east-2.myhuaweicloud.com/CANN/5.1.RC2.alpha006/Ascend-cann-toolkit_5.1.RC2.alpha006_linux-x86_64.run \
+RUN apt-get update && apt-get install --no-install-recommends -y python3.8 \
+ && curl -f --output /tmp/ascend.run https://ascend-repo.obs.cn-east-2.myhuaweicloud.com/CANN/5.1.RC2.alpha006/Ascend-cann-toolkit_5.1.RC2.alpha006_linux-x86_64.run \
  && bash /tmp/ascend.run --full \
  && apt-get remove -y python3.8 && apt clean && rm -fr /var/lib/apt/lists* /tmp/* /var/tmp*