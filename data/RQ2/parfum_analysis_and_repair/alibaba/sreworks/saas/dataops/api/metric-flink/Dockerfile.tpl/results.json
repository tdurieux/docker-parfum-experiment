{
  "startTime": 1674254170266,
  "endTime": 1674254170929,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 24,
        "columnEnd": 79
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM {{ MAVEN_IMAGE }} AS build\n\nCOPY . /app\nRUN mkdir /root/.m2/ && curl -f {{ MAVEN_SETTINGS_XML }} -o /root/.m2/settings.xml\nRUN cd /app && mvn -f pom.xml -Dmaven.test.skip=true clean package\n\nFROM {{ ALPINE_IMAGE }} AS release\nRUN sed -i 's/dl-cdn.alpinelinux.org/{{ APK_REPO_DOMAIN }}/g' /etc/apk/repositories\nRUN { \\\n        echo '#!/bin/sh'; \\\n        echo 'set -e'; \\\n        echo; \\\n        echo 'dirname \"$(dirname \"$(readlink -f \"$(which javac || which java)\")\")\"'; \\\n    } > /usr/local/bin/docker-java-home \\\n    && chmod +x /usr/local/bin/docker-java-home\nENV JAVA_HOME /usr/lib/jvm/java-1.8-openjdk\nENV PATH $PATH:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin\nRUN set -x && apk --update upgrade && apk add --no-cache openjdk8 && [ \"$JAVA_HOME\" = \"$(docker-java-home)\" ]\n\nRUN apk --no-cache add curl && apk --no-cache add gettext && apk --no-cache add jq\n\nARG ALARM_MODULE=metric-alarm\nARG JAR_NAME=metric-flink-1.2.jar\nARG BUILD_JAR=/app/${ALARM_MODULE}/target/metric-alarm-1.2-SNAPSHOT.jar\n\nCOPY --from=build ${BUILD_JAR} /app/sbin/${JAR_NAME}\nCOPY ./sbin/ /app/sbin/\nRUN chmod +x /app/sbin/entrypoint.sh\n\n# minio-client\nRUN wget {{ MINIO_CLIENT_URL }} -O /app/sbin/mc\nRUN chmod +x /app/sbin/mc\n\n# kafka init\nRUN apk add --no-cache gcc python3 python3-dev py3-pip musl-dev librdkafka-dev\nRUN pip config set global.index-url {{ PYTHON_PIP }} && pip config set global.trusted-host {{ PYTHON_PIP_DOMAIN }}\nRUN pip3 install --no-cache-dir confluent_kafka==1.8.2\n\nENTRYPOINT [\"/bin/sh\", \"/app/sbin/entrypoint.sh\"]\n"
}