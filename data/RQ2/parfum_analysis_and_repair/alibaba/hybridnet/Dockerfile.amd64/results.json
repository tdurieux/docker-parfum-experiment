{
  "startTime": 1674250927462,
  "endTime": 1674250928217,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 106
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17.11 as builder\n\nENV ARCH=amd64\nENV OS=linux\n\nWORKDIR /go/src/github.com/alibaba/hybridnet\n\nCOPY go.mod ./go.mod\nCOPY go.sum ./go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\nCOPY . /go/src/github.com/alibaba/hybridnet\n\nRUN export GOCACHE=/tmp && \\\n    export GO111MODULE=on && \\\n    export GOARCH=${ARCH} && \\\n    export CGO_ENABLED=0 && \\\n    export GOOS=${OS} && \\\n    export COMMIT_ID=`git rev-parse --short HEAD 2>/dev/null` && \\\n    go build -o dist/images/hybridnet -ldflags \"-w -s\" -v ./cmd/cni && \\\n    go build -ldflags \"-w -s -X \\\"main.gitCommit=`echo $COMMIT_ID`\\\" \" -o dist/images/hybridnet-daemon -v ./cmd/daemon && \\\n    go build -ldflags \"-X \\\"main.gitCommit=`echo $COMMIT_ID`\\\" \" -o dist/images/hybridnet-manager -v ./cmd/manager && \\\n    go build -ldflags \"-X \\\"main.gitCommit=`echo $COMMIT_ID`\\\" \" -o dist/images/hybridnet-webhook -v ./cmd/webhook && \\\n    echo $COMMIT_ID > ./COMMIT_ID\n\nRUN cd /go/src/github.com/alibaba/hybridnet/dist/secrets && \\\n    sh generate-tls-certificates.sh\n\nFROM calico/go-build:v0.57 as felix-builder\nARG GOPROXY\nENV GOPROXY $GOPROXY\nENV GIT_BRANCH=v3.20.2\nENV GIT_COMMIT=ab06c3940caa8ac201f85c1313b2d72d724409d2\n\nENV ARCH=amd64\nENV OS=linux\n\nRUN mkdir -p /go/src/github.com/projectcalico/ && cd /go/src/github.com/projectcalico/ && \\\n    git clone -b ${GIT_BRANCH} --depth 1 https://github.com/projectcalico/felix.git && \\\n    cd felix && [ \"`git rev-parse HEAD`\" = \"${GIT_COMMIT}\" ]\nCOPY policy/felix /hybridnet_patch\nRUN cd /go/src/github.com/projectcalico/felix && git apply /hybridnet_patch/*.patch\nRUN cd /go/src/github.com/projectcalico/felix && \\\n    export GOCACHE=/tmp && \\\n    export GO111MODULE=on && \\\n    export GOARCH=${ARCH} && \\\n    export CGO_ENABLED=0 && \\\n    export GOOS=${OS} && \\\n    go build -v -o bin/calico-felix -v -ldflags \\\n    \"-X github.com/projectcalico/felix/buildinfo.GitVersion=${GIT_BRANCH} \\\n    -X github.com/projectcalico/felix/buildinfo.BuildDate=$(date -u +'%FT%T%z') \\\n    -X github.com/projectcalico/felix/buildinfo.GitRevision=${GIT_COMMIT} \\\n    -B 0x${GIT_COMMIT}\" \"github.com/projectcalico/felix/cmd/calico-felix\" && \\\n    chmod +x /go/src/github.com/projectcalico/felix/bin/calico-felix\n\nFROM alpine:3.14\n\n# replace apk source url\nRUN sed -i s@/dl-cdn.alpinelinux.org/@/mirrors.aliyun.com/@g /etc/apk/repositories && \\\n\tchmod +x /bin/*\n\nRUN apk update\n\nRUN apk add --no-cache --allow-untrusted \\\n    bash \\\n\tiptables \\\n\tip6tables \\\n\tiproute2 \\\n\tipset \\\n\tconntrack-tools \\\n\tcurl \\\n\tperl \\\n\ttar\n\nENV CNI_VERSION=v0.9.1\nRUN mkdir -p cni-plugins/ && \\\n    curl -f -SL https://github.com/containernetworking/plugins/releases/download/${CNI_VERSION}/cni-plugins-linux-amd64-${CNI_VERSION}.tgz \\\n    | tar -xz -C cni-plugins/\n\nRUN mkdir -p gobgp/ && \\\n    curl -f -SL https://github.com/osrg/gobgp/releases/download/v3.0.0-rc4/gobgp_3.0.0-rc4_linux_amd64.tar.gz \\\n    | tar -xz -C gobgp/ && \\\n    cp gobgp/gobgp /usr/bin/ && \\\n    rm -rf gobgp/\n\nCOPY dist/images/start-daemon.sh /hybridnet/start-daemon.sh\nCOPY dist/images/install-cni.sh /hybridnet/install-cni.sh\nCOPY dist/images/00-hybridnet.conflist /hybridnet/00-hybridnet.conflist\n\nCOPY dist/images/iptables-wrapper-installer.sh /\nRUN /iptables-wrapper-installer.sh --no-sanity-check\n\nCOPY --from=builder /go/src/github.com/alibaba/hybridnet/dist/images/hybridnet /hybridnet/hybridnet\nCOPY --from=builder /go/src/github.com/alibaba/hybridnet/dist/images/hybridnet-daemon /hybridnet/hybridnet-daemon\nCOPY --from=builder /go/src/github.com/alibaba/hybridnet/dist/images/hybridnet-manager /hybridnet/hybridnet-manager\nCOPY --from=builder /go/src/github.com/alibaba/hybridnet/dist/images/hybridnet-webhook /hybridnet/hybridnet-webhook\nCOPY --from=builder /go/src/github.com/alibaba/hybridnet/COMMIT_ID /hybridnet/COMMIT_ID\n\nCOPY --from=felix-builder /go/src/github.com/projectcalico/felix/bin/calico-felix /hybridnet/calico-felix\nCOPY policy/policyinit.sh /hybridnet/\n\nRUN mkdir -p /tmp/k8s-webhook-server/serving-certs\n\nCOPY --from=builder /go/src/github.com/alibaba/hybridnet/dist/secrets/tls.crt /tmp/k8s-webhook-server/serving-certs/tls.crt\nCOPY --from=builder /go/src/github.com/alibaba/hybridnet/dist/secrets/tls.key /tmp/k8s-webhook-server/serving-certs/tls.key\n"
}