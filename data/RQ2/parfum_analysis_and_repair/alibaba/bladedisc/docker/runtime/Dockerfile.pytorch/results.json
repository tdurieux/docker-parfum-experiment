{
  "startTime": 1674248002949,
  "endTime": 1674248003987,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 8,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 8,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 8,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 8,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "ARG BASEIMAGE=nvidia/cuda:11.0-cudnn8-devel-ubuntu18.04\nFROM ${BASEIMAGE}\n\nENV DEBIAN_FRONTEND noninteractive\nARG DEVICE=cu110\nADD ./docker/scripts /install/scripts\nRUN bash /install/scripts/find-fastest-apt.sh && \\\n        apt-get install --no-install-recommends -y -qq wget curl unzip && rm -rf /var/lib/apt/lists/*;\nRUN bash /install/scripts/install-tensorrt.sh \"${DEVICE}\"\nRUN bash /install/scripts/patch-cuda.sh \"${DEVICE}\"\n\nADD ./build/torch_blade*.whl  /install/python/\n\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y python3.6 python3-pip protobuf-compiler libprotobuf-dev cmake \\\n    && ln -s /usr/bin/python3.6 /usr/bin/python \\\n    && python3.6 -m pip install pip --upgrade \\\n    && python3.6 -m pip install onnx==1.11.0 \\\n    && python3.6 -m pip install /install/python/torch_blade*.whl -f https://download.pytorch.org/whl/torch_stable.html && rm -rf /var/lib/apt/lists/*;\n\nENV PATH /usr/bin:$PATH\nENV LD_LIBRARY_PATH=\"/usr/local/TensorRT/lib/:${LD_LIBRARY_PATH}\"\n"
}