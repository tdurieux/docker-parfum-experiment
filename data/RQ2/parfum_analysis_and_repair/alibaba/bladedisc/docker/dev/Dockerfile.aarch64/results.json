{
  "startTime": 1674215203425,
  "endTime": 1674215205130,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASEIMAGE=ubuntu:20.04\nFROM ${BASEIMAGE}\n\nARG DISC_HOST_TF_VERSION=\"\"\nENV DISC_HOST_TF_VERSION=\"${DISC_HOST_TF_VERSION}\"\n\nCOPY sources.list /etc/apt/sources.list\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install software-properties-common && \\\n    add-apt-repository ppa:ubuntu-toolchain-r/test && \\\n    apt-get -y --no-install-recommends install \\\n      accountsservice \\\n      apport \\\n      at \\\n      autoconf \\\n      automake \\\n      bc \\\n      build-essential \\\n      cmake \\\n      cpufrequtils \\\n      curl \\\n      ethtool \\\n      g++-9 \\\n      gcc-7 \\\n      gcc-9 \\\n      gcc-10 \\\n      g++-10 \\\n      gettext-base \\\n      gfortran-9 \\\n      gfortran-10 \\\n      git \\\n      iproute2 \\\n      iputils-ping \\\n      lxd \\\n      libbz2-dev \\\n      libc++-dev \\\n      libcgal-dev \\\n      libffi-dev \\\n      libfreetype6-dev \\\n      libhdf5-dev \\\n      libjpeg-dev \\\n      liblzma-dev \\\n      libncurses5-dev \\\n      libncursesw5-dev \\\n      libpng-dev \\\n      libreadline-dev \\\n      libssl-dev \\\n      libsqlite3-dev \\\n      libtool \\\n      libxml2-dev \\\n      libxslt-dev \\\n      locales \\\n      lsb-release \\\n      lvm2 \\\n      moreutils \\\n      net-tools \\\n      open-iscsi \\\n      openjdk-8-jdk \\\n      openssl \\\n      pciutils \\\n      policykit-1 \\\n      python3 \\\n      python3-dev \\\n      python3-distutils \\\n      python3-venv \\\n      python3-pip \\\n      python-openssl \\\n      rsync \\\n      rsyslog \\\n      snapd \\\n      scons \\\n      ssh \\\n      sudo \\\n      swig \\\n      time \\\n      udev \\\n      unzip \\\n      ufw \\\n      uuid-runtime \\\n      vim \\\n      wget \\\n      xz-utils \\\n      zip \\\n      zlib1g-dev \\\n      openjdk-11-jdk && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 1 && \\\n    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-10 1 && \\\n    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-10 1 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3 1 && \\\n    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1\n\nRUN wget -O /usr/local/bin/bazel https://bladedisc-ci.oss-cn-hongkong.aliyuncs.com/download/bazel/bazel-5.1.1-linux-arm64\n\nRUN mkdir -p ~/.pip && \\\n    echo \"[global]\\nindex-url = https://mirrors.aliyun.com/pypi/simple/\\n\\n[install]\\ntrusted-host=mirrors.aliyun.com\\n\" > ~/.pip/pip.conf\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\nCOPY docker/scripts/install-python-aarch64.sh /install/scripts/install-python-aarch64.sh\nRUN bash /install/scripts/install-python-aarch64.sh\n\nRUN chmod a+x /usr/local/bin/bazel\n\n# using `tf.load_op_library('`libtao_ops.so')` enconters following error on aarch64:\n#   `/lib/aarch64-linux-gnu/libgomp.so.1: cannot allocate memory in static TLS block`\n#\n# Following is a workaround for the above problem according to `https://bugzilla.redhat.com/show_bug.cgi?id=1722181`\nENV LD_PRELOAD=\"/usr/lib/aarch64-linux-gnu/libgomp.so.1:${LD_PRELOAD}\"\n"
}