{
  "startTime": 1674254409073,
  "endTime": 1674254410116,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# container\n# @see https://hub.docker.com/repository/docker/cnizzardini/php-fpm-alpine\n# @see https://github.com/cnizzardini/php-fpm-alpine/tree/php-8.0\nFROM cnizzardini/php-fpm-alpine:8.0-latest AS cakephp_php\n\nARG ENV=prod\nARG UID=1000\nARG HOST_OS=Linux\nENV APP_ENV=$ENV\nENV HOST_OS=$HOST_OS\n\n#\n# dev/test depdencies\n#\nRUN if [[ \"$ENV\" != \"prod\" ]]; then \\\n    apk add --no-cache git \\\n    && apk add --no-cache --virtual .php-deps file re2c autoconf make zlib zlib-dev g++ curl \\\n    && pecl install xdebug \\\n    && docker-php-ext-enable xdebug \\\n    && apk del -f .php-deps; \\\nfi\n\n#\n# application\n#\nCOPY .docker/php/docker-healthcheck.sh /usr/local/bin/docker-healthcheck\nRUN chmod +x /usr/local/bin/docker-healthcheck\nHEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD [\"docker-healthcheck\"]\n\nCOPY .docker/php/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\n\nCOPY .assets /srv/.assets\n\nWORKDIR /srv/app\n\nRUN adduser --disabled-password --gecos '' -u $UID cakephp;\nRUN addgroup -g 101 nginx\nRUN addgroup cakephp nginx\nRUN addgroup cakephp www-data\n\nCOPY --from=composer /usr/bin/composer /usr/bin/composer\n\nCOPY app .\n\nRUN if [[ \"$ENV\" = \"prod\" ]]; then \\\n    composer install --prefer-dist --no-interaction --no-dev; \\\nfi\n\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php-fpm\"]\n"
}