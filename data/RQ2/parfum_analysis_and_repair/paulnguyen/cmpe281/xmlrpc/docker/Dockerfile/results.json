{
  "startTime": 1674253441588,
  "endTime": 1674253442586,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 77,
        "columnStart": 5,
        "columnEnd": 17
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openjdk:8-jre\n\nENV CATALINA_HOME /usr/local/tomcat\nENV PATH $CATALINA_HOME/bin:$PATH\nRUN mkdir -p \"$CATALINA_HOME\"\nWORKDIR $CATALINA_HOME\n\n# let \"Tomcat Native\" live somewhere isolated\nENV TOMCAT_NATIVE_LIBDIR $CATALINA_HOME/native-jni-lib\nENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}$TOMCAT_NATIVE_LIBDIR\n\n# runtime dependencies for Tomcat Native Libraries\n# Tomcat Native 1.2+ requires a newer version of OpenSSL than debian:jessie has available (1.0.2g+)\n# see http://tomcat.10.x6.nabble.com/VOTE-Release-Apache-Tomcat-8-0-32-tp5046007p5046024.html (and following discussion)\nENV OPENSSL_VERSION 1.1.0c-2\nRUN { \\\n\t\techo 'deb http://deb.debian.org/debian stretch main'; \\\n\t} > /etc/apt/sources.list.d/stretch.list \\\n\t&& { \\\n# add a negative \"Pin-Priority\" so that we never ever get packages from stretch unless we explicitly request them\n\t\techo 'Package: *'; \\\n\t\techo 'Pin: release n=stretch'; \\\n\t\techo 'Pin-Priority: -10'; \\\n\t\techo; \\\n# except OpenSSL, which is the reason we're here\n\t\techo 'Package: openssl libssl*'; \\\n\t\techo \"Pin: version $OPENSSL_VERSION\"; \\\n\t\techo 'Pin-Priority: 990'; \\\n\t} > /etc/apt/preferences.d/stretch-openssl\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tlibapr1 \\\n\t\topenssl=\"$OPENSSL_VERSION\" \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# see https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/KEYS\n# see also \"update.sh\" (https://github.com/docker-library/tomcat/blob/master/update.sh)\nENV GPG_KEYS 05AB33110949707C93A279E3D3EFE6B686867BA6 07E48665A34DCAFAE522E5E6266191C37C037D42 47309207D818FFD8DCD3F83F1931D684307A10A5 541FBE7D8F78B25E055DDEE13C370389288584E7 61B832AC2F1C5A90F0F9B00A1C506407564C17A3 713DA88BE50911535FE716F5208B0AB1D63011C7 79F7026C690BAA50B92CD8B66A3AD3F4F22C4FED 9BA44C2621385CB966EBA586F72C284D731FABEE A27677289986DB50844682F8ACB77FC2E86E29AC A9C5DF4D22E99998D9875A5110C01C5A2F6059E7 DCFD35E0BF8CA7344752DE8B6FB21E8933C60243 F3A04C595DB5B6A5F1ECA43E3B7BBB100D811BBE F7DA48BB64BCB84ECBA7EE6935CD23C10D498E23\nRUN set -ex; \\\n\tfor key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tdone\n\nENV TOMCAT_MAJOR 7\nENV TOMCAT_VERSION 7.0.73\n\n# https://issues.apache.org/jira/browse/INFRA-8753?focusedCommentId=14735394#comment-14735394\nENV TOMCAT_TGZ_URL https://www.apache.org/dyn/closer.cgi?action=download&filename=tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz\n# not all the mirrors actually carry the .asc files :'(\nENV TOMCAT_ASC_URL https://www.apache.org/dist/tomcat/tomcat-$TOMCAT_MAJOR/v$TOMCAT_VERSION/bin/apache-tomcat-$TOMCAT_VERSION.tar.gz.asc\n\nRUN set -x \\\n\t\\\n\t&& wget -O tomcat.tar.gz \"$TOMCAT_TGZ_URL\" \\\n\t&& wget -O tomcat.tar.gz.asc \"$TOMCAT_ASC_URL\" \\\n\t&& gpg --batch --verify tomcat.tar.gz.asc tomcat.tar.gz \\\n\t&& tar -xvf tomcat.tar.gz --strip-components=1 \\\n\t&& rm bin/*.bat \\\n\t&& rm tomcat.tar.gz* \\\n\t\\\n\t&& nativeBuildDir=\"$(mktemp -d)\" \\\n\t&& tar -xvf bin/tomcat-native.tar.gz -C \"$nativeBuildDir\" --strip-components=1 \\\n\t&& nativeBuildDeps=\" \\\n\t\tgcc \\\n\t\tlibapr1-dev \\\n\t\tlibssl-dev \\\n\t\tmake \\\n\t\topenjdk-${JAVA_VERSION%%[-~bu]*}-jdk=$JAVA_DEBIAN_VERSION \\\n\t\" \\\n\t&& apt-get update && apt-get install -y --no-install-recommends $nativeBuildDeps && rm -rf /var/lib/apt/lists/* \\\n\t&& ( export CATALINA_HOME=\"$PWD\" \\\n\t\t&& cd \"$nativeBuildDir/native\" \\\n\t\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t\t--libdir=\"$TOMCAT_NATIVE_LIBDIR\" \\\n\t\t\t--prefix=\"$CATALINA_HOME\" \\\n\t\t\t--with-apr=\"$(which apr-1-config)\" \\\n\t\t\t--with-java-home=\"$(docker-java-home)\" \\\n\t\t\t--with-ssl=yes \\\n\t\t&& make -j$(nproc) \\\n\t\t&& make install) \\\n\n\t&& apt-get purge -y --auto-remove $nativeBuildDeps \\\n\t&& rm -rf \"$nativeBuildDir\" \\\n\t&& rm bin/tomcat-native.tar.gz\n\n# verify Tomcat Native is working properly\nRUN set -e \\\n\t&& nativeLines=\"$(catalina.sh configtest 2>&1)\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | grep 'Apache Tomcat Native')\" \\\n\t&& nativeLines=\"$(echo \"$nativeLines\" | sort -u)\" \\\n\t&& if ! echo \"$nativeLines\" | grep 'INFO: Loaded APR based Apache Tomcat Native library' >&2; then \\\n\t\techo >&2 \"$nativeLines\"; \\\n\t\texit 1; \\\n\tfi\n\nADD\t ./xmlrpc.war /usr/local/tomcat/webapps/xmlrpc.war\n\nEXPOSE 8080\nCMD [\"catalina.sh\", \"run\"]\n\n"
}