{
  "startTime": 1674248916858,
  "endTime": 1674248917636,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Using Docker for OpenDDS development\n#\n# Images created from this Dockerfile can be used to launch containers\n# as build platforms for OpenDDS.  The difference between this image\n# and thes one created by $DDS_ROOT/Dockerfile is that for this image the source\n# tree resides in the Docker host and Docker's \"bind mount\" feature is used\n# to make those files available to the container.\n# Since artifacts created during the build are in this same tree, they are also\n# available in the host system and persist across container runs.\n# Programs that change the version-controlled source code (like git and editors)\n# are run from the host, while programs that build and run OpenDDS (like make,\n# the compiler, opendds_idl, and gdb) are run in the container.\n#\n# Start from a clean checkout of OpenDDS with LF line endings\n# - On Windows hosts, set git's core.autocrlf to false and core.eol to lf\n# - If you already have a git repository, git worktrees are useful for creating\n#   a separate checkout on a different branch with (possibly) different config\n#\n# If OpenDDS tests are enabled, tests/googletest needs to have the googletest\n# source code\n# - This is often done with recursive clone or submodule update --init\n#\n# Build a docker image from this Dockerfile (commands are run from $DDS_ROOT)\n# - docker build -t opendds-devel -f tools/scripts/Dockerfile .\n# Launch the container\n# - docker run --rm -ti -v <this_directory>:/opt/OpenDDS opendds-devel\n#\n# possible extensions:\n# - create another Dockerfile that layers on top of this one and builds ACE_TAO\n# (outside of /opt/OpenDDS) according to desired configuration\n\nFROM ubuntu:focal\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    cmake \\\n    curl \\\n    g++ \\\n    gdb \\\n    libssl-dev \\\n    libxerces-c-dev \\\n    make \\\n    ninja-build \\\n    perl \\\n    valgrind && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/OpenDDS\n\nCMD /bin/bash\n"
}