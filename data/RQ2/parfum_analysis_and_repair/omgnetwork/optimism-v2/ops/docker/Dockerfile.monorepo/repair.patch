diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/omgnetwork/optimism-v2/ops/docker/Dockerfile.monorepo b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/omgnetwork/optimism-v2/ops/docker/Dockerfile.monorepo/repaired.Dockerfile
index 17d4537..5d5f44a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/omgnetwork/optimism-v2/ops/docker/Dockerfile.monorepo
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/omgnetwork/optimism-v2/ops/docker/Dockerfile.monorepo/repaired.Dockerfile
@@ -6,9 +6,9 @@
 # when used with typescript/hardhat: https://github.com/nomiclabs/hardhat/issues/1219
 FROM node:16-buster-slim as node
 RUN if echo "\"`uname -a`\"" | grep -q "arm64" ; then \
-    apt-get update -y && apt-get install -y git python make gcc libudev-dev libusb-1.0-0-dev g++ pkg-config ; \
+    apt-get update -y && apt-get install --no-install-recommends -y git python make gcc libudev-dev libusb-1.0-0-dev g++ pkg-config; rm -rf /var/lib/apt/lists/*; \
   else \
-    apt-get update -y && apt-get install -y git; \
+    apt-get update -y && apt-get install --no-install-recommends -y git; rm -rf /var/lib/apt/lists/*; \
   fi
 # Pre-download the compilers so that they do not need to be downloaded inside
 # the image when building
@@ -43,7 +43,7 @@ COPY packages/boba/turing/package.json ./packages/boba/turing/package.json
 # needs to happen before `yarn` otherwise patch-packages does not apply the patches
 COPY ./patches ./patches
 
-RUN yarn install --frozen-lockfile
+RUN yarn install --frozen-lockfile && yarn cache clean;
 
 ### BUILDER: Builds the typescript
 FROM node
@@ -71,7 +71,7 @@ COPY --from=downloader solc-v0.8.9+commit.e5eed63a  /root/.cache/hardhat-nodejs/
 # build it!
 RUN yarn build
 # build integration tests' contracts
-RUN yarn workspace @eth-optimism/integration-tests build
+RUN yarn workspace @eth-optimism/integration-tests build && yarn cache clean;
 
 # TODO: Consider thinning up the container by trimming non-production
 # dependencies