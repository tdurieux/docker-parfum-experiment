{
  "startTime": 1674250222006,
  "endTime": 1674250223125,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerized nvm development environment\n#\n# This Dockerfile is for building nvm development environment only,\n# not for any distribution/production usage.\n#\n# Please note that it'll use about 1.2 GB disk space and about 15 minutes to\n# build this image, it depends on your hardware.\n\nFROM ubuntu:18.04\nLABEL maintainer=\"Peter Dave Hello <hsu@peterdavehello.org>\"\nLABEL name=\"nvm-dev-env\"\nLABEL version=\"latest\"\n\n# Set the SHELL to bash with pipefail option\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Prevent dialog during apt install\nENV DEBIAN_FRONTEND noninteractive\n\n# ShellCheck version\nENV SHELLCHECK_VERSION=0.7.0\n\n# Pick a Ubuntu apt mirror site for better speed\n# ref: https://launchpad.net/ubuntu/+archivemirrors\nENV UBUNTU_APT_SITE ubuntu.cs.utah.edu\n\n# Disable src package source\nRUN sed -i 's/^deb-src\\ /\\#deb-src\\ /g' /etc/apt/sources.list\n\n# Replace origin apt package site with the mirror site\nRUN sed -E -i \"s/([a-z]+.)?archive.ubuntu.com/$UBUNTU_APT_SITE/g\" /etc/apt/sources.list\nRUN sed -i \"s/security.ubuntu.com/$UBUNTU_APT_SITE/g\" /etc/apt/sources.list\n\n# Install apt packages\nRUN apt update         && \\\n    apt upgrade -y -o Dpkg::Options::=\"--force-confdef\" -o Dpkg::Options::=\"--force-confold\" && \\\n    apt install --no-install-recommends -y -o Dpkg::Options::=\"--force-confdef\" -o \\\n        coreutils \\\n        util-linux \\\n        bsdutils \\\n        file \\\n        openssl \\\n        libssl-dev \\\n        locales \\\n        ca-certificates \\\n        ssh \\\n        wget \\\n        patch \\\n        sudo \\\n        htop \\\n        dstat \\\n        vim \\\n        tmux \\\n        curl \\\n        git \\\n        jq \\\n        zsh \\\n        ksh \\\n        gcc-4.8 \\\n        g++-4.8 \\\n        xz-utils \\\n        build-essential \\\n        bash-completion && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://github.com/koalaman/shellcheck/releases/download/v$SHELLCHECK_VERSION/shellcheck-v$SHELLCHECK_VERSION.linux.x86_64.tar.xz -O- | \\\n    tar xJvf - shellcheck-v$SHELLCHECK_VERSION/shellcheck          && \\\n    mv shellcheck-v$SHELLCHECK_VERSION/shellcheck /bin             && \\\n    rmdir shellcheck-v$SHELLCHECK_VERSION\nRUN shellcheck -V\n\n# Set locale\nRUN locale-gen en_US.UTF-8\n\n# Print tool versions\nRUN bash --version | head -n 1\nRUN zsh --version\nRUN ksh --version || true\nRUN dpkg -s dash | grep ^Version | awk '{print $2}'\nRUN git --version\nRUN curl -f --version\nRUN wget --version\n\n# Add user \"nvm\" as non-root user\nRUN useradd -ms /bin/bash nvm\n\n# Copy and set permission for nvm directory\nCOPY . /home/nvm/.nvm/\nRUN chown nvm:nvm -R \"home/nvm/.nvm\"\n\n# Set sudoer for \"nvm\"\nRUN echo 'nvm ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n\n# Switch to user \"nvm\" from now\nUSER nvm\n\n# nvm\nRUN echo 'export NVM_DIR=\"$HOME/.nvm\"'                                       >> \"$HOME/.bashrc\"\nRUN echo '[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"  # This loads nvm' >> \"$HOME/.bashrc\"\nRUN echo '[ -s \"$NVM_DIR/bash_completion\" ] && . \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion' >> \"$HOME/.bashrc\"\n\n# nodejs and tools\nRUN bash -c 'source $HOME/.nvm/nvm.sh   && \\\n    nvm install node                    && \\\n    npm install -g doctoc urchin eclint dockerfile_lint && \\\n    npm install --prefix \"$HOME/.nvm/\"'\n\n# Set WORKDIR to nvm directory\nWORKDIR /home/nvm/.nvm\n\nENTRYPOINT [\"/bin/bash\"]\n"
}