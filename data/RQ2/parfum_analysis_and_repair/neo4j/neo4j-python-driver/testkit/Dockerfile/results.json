{
  "startTime": 1674252706536,
  "endTime": 1674252708223,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 19,
        "columnStart": 30,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y locales && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && rm -rf /var/lib/apt/lists/*\nENV LANG en_US.UTF-8\n\n# Using apt-get update alone in a RUN statement causes caching issues and subsequent apt-get install instructions fail.\nRUN apt-get --quiet update && apt-get --quiet --no-install-recommends install -y \\\n    software-properties-common \\\n    bash \\\n    python3 \\\n    python3-pip \\\n    git \\\n    curl \\\n    tar \\\n    wget \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install Build Tools\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev \\\n        libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev \\\n        libxml2-dev libxmlsec1-dev libffi-dev \\\n        ca-certificates && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install our own CAs on the image.\n# Assumes Linux Debian based image.\nCOPY CAs/* /usr/local/share/ca-certificates/\n# Store custom CAs somewhere where the backend can find them later.\nCOPY CustomCAs/* /usr/local/share/custom-ca-certificates/\nRUN update-ca-certificates\n\n# Install pyenv\nRUN git clone https://github.com/pyenv/pyenv.git .pyenv\nENV PYENV_ROOT /.pyenv\nENV PATH $PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\n\n# Set minimum supported Python version\nRUN pyenv install 3.7:latest\nRUN pyenv install 3.8:latest\nRUN pyenv install 3.9:latest\nRUN pyenv install 3.10:latest\nRUN pyenv rehash\nRUN pyenv global $(pyenv versions --bare --skip-aliases)\n\n# Install Latest pip for each environment\n# https://pip.pypa.io/en/stable/news/\nRUN python -m pip install --upgrade pip\n\n# Install Python Testing Tools\nRUN python -m pip install coverage tox tox-factor\n"
}