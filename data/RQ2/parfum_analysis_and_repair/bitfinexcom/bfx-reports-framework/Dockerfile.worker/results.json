{
  "startTime": 1674217880418,
  "endTime": 1674217881180,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.16.0-alpine\n\nARG GRC_VER=\"0.7.1\"\n\nWORKDIR /home/node/grenache-cli\n\nRUN apk update && apk add --no-cache --virtual \\\n  .gyp \\\n  python3 \\\n  make \\\n  jq \\\n  help2man \\\n  gcc \\\n  musl-dev \\\n  autoconf \\\n  automake \\\n  libtool \\\n  pkgconfig \\\n  file \\\n  patch \\\n  bison \\\n  clang \\\n  flex \\\n  curl \\\n  perl \\\n  perl-dev \\\n  wget \\\n  g++ \\\n  git \\\n  openssh \\\n  bash\n\nRUN wget -c https://github.com/bitfinexcom/grenache-cli/releases/download/${GRC_VER}/grenache-cli-${GRC_VER}.tar.xz \\\n  && tar -xf grenache-cli-${GRC_VER}.tar.xz \\\n  && cd grenache-cli-${GRC_VER} \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make \\\n  && make install \\\n  && grenache-keygen && rm grenache-cli-${GRC_VER}.tar.xz\n\nWORKDIR /home/node/bfx-reports-framework\n\nCOPY package*.json .npmrc ./\nRUN npm i --production --no-audit && npm cache clean --force;\n\nCOPY ./config ./config\nRUN cp config/schedule.json.example config/schedule.json \\\n  && cp config/common.json.example config/common.json \\\n  && cp config/service.report.json.example config/service.report.json \\\n  && cp config/facs/grc.config.json.example config/facs/grc.config.json \\\n  && cp config/facs/grc-slack.config.json.example config/facs/grc-slack.config.json\n\nCOPY . .\nCOPY ./scripts/worker-entrypoint.sh /usr/local/bin/\n\nHEALTHCHECK --interval=10s --timeout=3s --start-period=10s --retries=3 \\\n  CMD grenache-lookup -g ${GRAPE_HOST} -p ${GRAPE_APH} \"rest:report:api\" \\\n    || kill 1\n\nENTRYPOINT [\"worker-entrypoint.sh\"]\nCMD [\"worker.js\"]\n"
}