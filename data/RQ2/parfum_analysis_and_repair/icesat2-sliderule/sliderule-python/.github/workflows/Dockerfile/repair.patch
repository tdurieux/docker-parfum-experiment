diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/icesat2-sliderule/sliderule-python/.github/workflows/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/icesat2-sliderule/sliderule-python/.github/workflows/Dockerfile/repaired.Dockerfile
index 5d5ac15..588794c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/icesat2-sliderule/sliderule-python/.github/workflows/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/icesat2-sliderule/sliderule-python/.github/workflows/Dockerfile/repaired.Dockerfile
@@ -5,7 +5,7 @@ ENV DEBIAN_FRONTEND="noninteractive" TZ="America/Los_Angeles"
 RUN useradd --create-home --shell /bin/bash sliderule
 
 RUN apt-get update -y && \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
         build-essential \
         build-essential \
         ca-certificates \
@@ -16,19 +16,19 @@ RUN apt-get update -y && \
         tk-dev \
         wget \
         unzip && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 ENV JOBS 2
 
 ENV CFLAGS="-fPIC"
 ENV ZLIB_VERSION=1.2.12
-RUN wget -q http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz && \
+RUN wget -q https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz && \
     tar -xzf zlib-${ZLIB_VERSION}.tar.gz && \
     cd zlib-${ZLIB_VERSION} && \
-    ./configure --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm zlib-${ZLIB_VERSION}.tar.gz
 
 ENV CFLAGS="-fPIC"
 ENV SZIP_SHORT_VERSION=2.1.1
@@ -36,10 +36,10 @@ ENV SZIP_VERSION=2.1.1
 RUN wget -q https://support.hdfgroup.org/ftp/lib-external/szip/${SZIP_SHORT_VERSION}/src/szip-${SZIP_VERSION}.tar.gz && \
     tar -xzf szip-${SZIP_VERSION}.tar.gz && \
     cd szip-${SZIP_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm szip-${SZIP_VERSION}.tar.gz
 
 ENV OPENSSL_SHORT_VERSION=1.1.1
 ENV OPENSSL_VERSION=1.1.1k
@@ -49,13 +49,13 @@ RUN wget -q https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz &&
     ./config shared --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm openssl-${OPENSSL_VERSION}.tar.gz
 
 ENV CURL_VERSION=7.77.0
 RUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz && \
     tar -xzf curl-${CURL_VERSION}.tar.gz && \
     cd curl-${CURL_VERSION} && \
-    ./configure --quiet \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet \
         --enable-versioned-symbols \
         --enable-openssl-auto-load-config \
         --with-openssl \
@@ -63,27 +63,27 @@ RUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz && \
         --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm curl-${CURL_VERSION}.tar.gz
 
 ENV SQLITE_VERSION=3370200
 ENV SQLITE_YEAR 2022
 RUN wget -q https://sqlite.org/${SQLITE_YEAR}/sqlite-autoconf-${SQLITE_VERSION}.tar.gz && \
     tar -xzf sqlite-autoconf-${SQLITE_VERSION}.tar.gz && \
     cd sqlite-autoconf-${SQLITE_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm sqlite-autoconf-${SQLITE_VERSION}.tar.gz
 
 ENV LIBJPEG_SHORT_VERSION=9d
 ENV LIBJPEG_VERSION=v9d
-RUN wget -q http://ijg.org/files/jpegsrc.${LIBJPEG_VERSION}.tar.gz && \
+RUN wget -q https://ijg.org/files/jpegsrc.${LIBJPEG_VERSION}.tar.gz && \
     tar -xzf jpegsrc.${LIBJPEG_VERSION}.tar.gz && \
     cd jpeg-${LIBJPEG_SHORT_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm jpegsrc.${LIBJPEG_VERSION}.tar.gz
 
 ENV ZLIBLIB="/usr/local/lib"
 ENV ZLIBINC="/usr/local/include"
@@ -95,36 +95,36 @@ ENV LIBPNG_VERSION=1.6.37
 RUN wget -q https://download.sourceforge.net/libpng/libpng-${LIBPNG_VERSION}.tar.gz && \
     tar -xzf libpng-${LIBPNG_VERSION}.tar.gz && \
     cd libpng-${LIBPNG_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm libpng-${LIBPNG_VERSION}.tar.gz
 
 ENV LIBTIFF_VERSION=4.3.0
 RUN wget -q https://download.osgeo.org/libtiff/tiff-${LIBTIFF_VERSION}.tar.gz && \
     tar -xzf tiff-${LIBTIFF_VERSION}.tar.gz && \
     cd tiff-${LIBTIFF_VERSION} && \
-    ./configure --quiet --prefix=/usr/local \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local \
         --with-jpeg-include-dir=/usr/local/include \
         --with-jpeg-lib-dir=/usr/local/lib && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm tiff-${LIBTIFF_VERSION}.tar.gz
 
 ENV GEOS_VERSION=3.10.2
 RUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 && \
     tar -xjf geos-${GEOS_VERSION}.tar.bz2 && \
     cd geos-${GEOS_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm geos-${GEOS_VERSION}.tar.bz2
 
 ENV HDF5_VERSION=1.10.5
 RUN wget -q https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-${HDF5_VERSION}.tar.gz && \
     tar -xzf hdf5-${HDF5_VERSION}.tar.gz && \
     cd hdf5-${HDF5_VERSION} && \
-    ./configure --quiet \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet \
         --enable-hl \
         --enable-shared \
         --prefix=/usr/local \
@@ -132,7 +132,7 @@ RUN wget -q https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-${HDF5_VERSIO
         --with-szlib=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm hdf5-${HDF5_VERSION}.tar.gz
 
 # update to PROJ8
 ENV PROJ_VERSION=8.2.1
@@ -141,7 +141,7 @@ ENV PROJ_NETWORK ON
 ENV SQLITE3_CFLAGS="-I/usr/local/include"
 ENV SQLITE3_LIBS="-L/usr/local/lib -lsqlite3"
 RUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz && \
-    wget -q http://download.osgeo.org/proj/proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip && \
+    wget -q https://download.osgeo.org/proj/proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip && \
     tar -xzf proj-${PROJ_VERSION}.tar.gz && \
     unzip proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip -d proj-${PROJ_VERSION}/data/ && \
     cd proj-${PROJ_VERSION} && \
@@ -160,7 +160,7 @@ RUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz && \
     cmake --build . && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm proj-${PROJ_VERSION}.tar.gz
 
 # use latest GDAL
 ENV CPPFLAGS="-I/usr/local/include"
@@ -172,7 +172,7 @@ ENV GDAL_VERSION=3.4.1
 RUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}.tar.gz && \
     tar -xzf gdal-${GDAL_VERSION}.tar.gz && \
     cd gdal-${GDAL_VERSION} && \
-    ./configure --quiet \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet \
         --disable-debug \
         --disable-static \
         --with-hdf5=/usr/local \
@@ -202,7 +202,7 @@ RUN wget -q https://download.osgeo.org/gdal/${GDAL_VERSION}/gdal-${GDAL_VERSION}
         --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm gdal-${GDAL_VERSION}.tar.gz
 
 WORKDIR /home/sliderule