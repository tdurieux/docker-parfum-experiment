{
  "startTime": 1674249007805,
  "endTime": 1674249008438,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 62,
        "columnEnd": 95
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t resilient/{ext} .\n# Base image using Red Hat's universal base image (rhel 7) for python\n#FROM registry.access.redhat.com/ubi8/python-36:latest\n# rc-data-feeder will build plugins from a base image\nFROM resilient/rc-data-feed:latest\n\nARG APPLICATION=rc_data_feed_plugin_resilientfeed\nARG RES_CIRCUITS_VERSION=37.2\n\n# Environment variable for any app to check if running in a container\nARG APP_HOST_CONTAINER=1\nENV APP_HOST_CONTAINER=${APP_HOST_CONTAINER}\n\n# update to latest packages, user 0 for root privilege\nUSER 0\n# Update to latest pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# install resilient-circuits\nRUN pip install --no-cache-dir \"resilient-circuits>=${RES_CIRCUITS_VERSION}\"\n\n# add yum repo with unixODBC and install\n#RUN curl https://packages.microsoft.com/config/rhel/8/prod.repo > /etc/yum.repos.d/mssql-release.repo\nRUN yum -y install unixODBC-devel && rm -rf /var/cache/yum\n\n# copy the driver configurations to the container\nCOPY ./odbc-drivers.ini /etc/odbc-drivers.ini\nCOPY ./drivers/ /tmp/lib/\n\n# configure unixODBC with the driver information in the .ini file\nRUN odbcinst -i -d -f /etc/odbc-drivers.ini\n\n# install psqlodbc driver\nRUN tar -zxvf /tmp/lib/psqlodbc-12.01.0000.tar.gz && rm /tmp/lib/psqlodbc-12.01.0000.tar.gz\nRUN ./psqlodbc-12.01.0000/configure\nRUN make\nRUN make install\n\n# install the base package\nCOPY ./dist /tmp/packages\nRUN app_file=`ls -1 /tmp/packages/${APPLICATION}-*.tar.gz` && pip install --no-cache-dir ${app_file}[postgres]\n\n# uncomment and replicate if additional pypi packages are needed\n#RUN pip install <package>\n\n# uncomment and replicate if additional local packages are needed\n#COPY /path/to/extra_package /tmp/packages/.\n#RUN pip install /tmp/packages/<extra_package>*.tar.gz\n\n# uncomment to expose port only if a custom threat feed\n#EXPOSE 9000\n## ---- end section for changes ----\n\n# set up configuration and log locations using /etc and /var/log, the conventional locations for config and logs\n#RUN mkdir /etc/rescircuits\n#ENV APP_CONFIG_FILE /etc/rescircuits/app.config\n\n# create directory for logs and set to be root group to allow access by non root processes\n# See https://docs.openshift.com/container-platform/4.2/openshift_images/create-images.html#images-create-guide-openshift_create-images\n#RUN mkdir /var/log/rescircuits && \\\n#    chgrp -R 0 /var/log/rescircuits && \\\n#    chmod -R g=u /var/log/rescircuits\n#ENV APP_LOG_DIR /var/log/rescircuits\n\n# setup entrypoint for read-only enterprise data used by integration, if needed\n#RUN mkdir /var/rescircuits\n\n# entrypoint for resilient-circuits.  Use /opt, the conventional location for optional software on Linux\n#RUN mkdir /opt/rescircuits\n#COPY entrypoint.sh /opt/rescircuits/entrypoint.sh\n# arbitrary user, support running as non-root.  Required on OpenShift.\n# Generally a good practice.\n#USER 1001\n#ENTRYPOINT [ \"sh\", \"/opt/rescircuits/entrypoint.sh\" ]\n"
}