diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibmresilient/resilient-community-apps/rc-data-feed-plugin-resilientfeed/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibmresilient/resilient-community-apps/rc-data-feed-plugin-resilientfeed/Dockerfile/repaired.Dockerfile
index cb47b4f..9888497 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ibmresilient/resilient-community-apps/rc-data-feed-plugin-resilientfeed/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ibmresilient/resilient-community-apps/rc-data-feed-plugin-resilientfeed/Dockerfile/repaired.Dockerfile
@@ -14,14 +14,14 @@ ENV APP_HOST_CONTAINER=${APP_HOST_CONTAINER}
 # update to latest packages, user 0 for root privilege
 USER 0
 # Update to latest pip
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
 # install resilient-circuits
-RUN pip install "resilient-circuits>=${RES_CIRCUITS_VERSION}"
+RUN pip install --no-cache-dir "resilient-circuits>=${RES_CIRCUITS_VERSION}"
 
 # add yum repo with unixODBC and install
 #RUN curl https://packages.microsoft.com/config/rhel/8/prod.repo > /etc/yum.repos.d/mssql-release.repo
-RUN yum -y install unixODBC-devel
+RUN yum -y install unixODBC-devel && rm -rf /var/cache/yum
 
 # copy the driver configurations to the container
 COPY ./odbc-drivers.ini /etc/odbc-drivers.ini
@@ -31,14 +31,14 @@ COPY ./drivers/ /tmp/lib/
 RUN odbcinst -i -d -f /etc/odbc-drivers.ini
 
 # install psqlodbc driver
-RUN tar -zxvf /tmp/lib/psqlodbc-12.01.0000.tar.gz
+RUN tar -zxvf /tmp/lib/psqlodbc-12.01.0000.tar.gz && rm /tmp/lib/psqlodbc-12.01.0000.tar.gz
 RUN ./psqlodbc-12.01.0000/configure
 RUN make
 RUN make install
 
 # install the base package
 COPY ./dist /tmp/packages
-RUN app_file=`ls -1 /tmp/packages/${APPLICATION}-*.tar.gz` && pip install ${app_file}[postgres]
+RUN app_file=`ls -1 /tmp/packages/${APPLICATION}-*.tar.gz` && pip install --no-cache-dir ${app_file}[postgres]
 
 # uncomment and replicate if additional pypi packages are needed
 #RUN pip install <package>