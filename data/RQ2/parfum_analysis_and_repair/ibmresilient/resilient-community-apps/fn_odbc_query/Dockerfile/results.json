{
  "startTime": 1674253428459,
  "endTime": 1674253429101,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base image using Red Hat's universal base image (rhel 8) for python\nFROM registry.access.redhat.com/ubi8/python-39:latest\n\nARG APPLICATION=fn_odbc_query\nARG RES_CIRCUITS_VERSION=37.0\nARG PATH_RESILIENT_CIRCUITS=rescircuits\n\n# update to latest packages, user 0 for root privilege\nUSER 0\n# Update to latest pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# install resilient-circuits\nRUN pip install --no-cache-dir \"resilient-circuits>=${RES_CIRCUITS_VERSION}\"\n\n## ---- section for changes ----\n# uncomment and replicate if additional os libraries are needed\n#RUN yum -y update && yum clean all\n#RUN yum -y install <package>\n\n# install the base package\nRUN yum -y update && yum clean all\n\n# add yum repo with unixODBC and install\nRUN curl -f https://packages.microsoft.com/config/rhel/8/prod.repo > /etc/yum.repos.d/mssql-release.repo\nRUN yum -y install unixODBC-devel && rm -rf /var/cache/yum\n\n# copy the driver configurations to the container\nCOPY ./.drivers/drivers.ini /etc/odbc-drivers.ini\nCOPY ./.drivers/drivers /tmp/lib/\n\n# configure unixODBC with the driver information in the .ini file\nRUN odbcinst -i -d -f /etc/odbc-drivers.ini\n\n# install psqlodbc driver\nRUN tar -zxvf /tmp/lib/psqlodbc-12.01.0000.tar.gz && rm /tmp/lib/psqlodbc-12.01.0000.tar.gz\nRUN ./psqlodbc-12.01.0000/configure\nRUN make\nRUN make install\n\n# install mariadb (mysql) driver\nRUN mkdir /usr/local/lib64/mariadb\nRUN mkdir /usr/local/lib64/mariadb/plugin\nRUN tar -xvzf /tmp/lib/mariadb-connector-odbc-3.1.9-centos8-amd64.tar.gz && rm /tmp/lib/mariadb-connector-odbc-3.1.9-centos8-amd64.tar.gz\nWORKDIR mariadb-connector-odbc-3.1.9-centos8-amd64\nRUN install lib/mariadb/libmaodbc.so /usr/lib64/\nRUN install -d /usr/lib64/mariadb/\nRUN install -d /usr/lib64/mariadb/plugin/\nRUN install lib64/mariadb/plugin/auth_gssapi_client.so /usr/local/lib64/mariadb/plugin/\nRUN install lib64/mariadb/plugin/caching_sha2_password.so /usr/local/lib64/mariadb/plugin/\nRUN install lib64/mariadb/plugin/client_ed25519.so /usr/local/lib64/mariadb/plugin/\nRUN install lib64/mariadb/plugin/dialog.so /usr/local/lib64/mariadb/plugin/\nRUN install lib64/mariadb/plugin/mysql_clear_password.so /usr/local/lib64/mariadb/plugin/\nRUN install lib64/mariadb/plugin/sha256_password.so /usr/local/lib64/mariadb/plugin/\nWORKDIR /opt/app-root/src\n\n# install MS SQL driver\nRUN yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm && rm -rf /var/cache/yum\nRUN yum -y install freetds && rm -rf /var/cache/yum\n\n##########################\n# At the time of writing this integration, oracle DB was not supported\n# If we do decide to support, uncomment the run commands below to enable apphost support\n##########################\n## install Oracle DB driver\n#RUN yum -y install /tmp/lib/oracle-instantclient19.6-basic-19.6.0.0.0-1.x86_64.rpm\n#RUN yum -y install /tmp/lib/oracle-instantclient-odbc-linuxx64.rpm\n#RUN yum -y install /tmp/lib/libnsl-2.28-101.el8.x86_64.rpm\n\n# install the base package\nCOPY ./dist /tmp/packages\nRUN pip install --no-cache-dir /tmp/packages/${APPLICATION}-*.tar.gz\n\n# uncomment and replicate if additional pypi packages are needed\n#RUN pip install <package>\n\n# uncomment and replicate if additional local packages are needed\n#COPY /path/to/extra_package /tmp/packages/.\n#RUN pip install /tmp/packages/<extra_package>*.tar.gz\n\n# uncomment to expose port only if a custom threat feed\n#EXPOSE 9000\n## ---- end section for changes ----\n\n# set up configuration and log locations using /etc and /var/log, the conventional locations for config and logs\nRUN mkdir /etc/${PATH_RESILIENT_CIRCUITS}\nENV APP_CONFIG_FILE /etc/${PATH_RESILIENT_CIRCUITS}/app.config\n\n# create arbitrary group for user 1001\nRUN groupadd -g 1001 default && usermod -g 1001 default\n\n# create directory for logs and set to be root group to allow access by non root processes\n# See https://docs.openshift.com/container-platform/4.2/openshift_images/create-images.html#images-create-guide-openshift_create-images\nRUN mkdir /var/log/${PATH_RESILIENT_CIRCUITS} && \\\n    chgrp -R 1001 /var/log/${PATH_RESILIENT_CIRCUITS} && \\\n    chmod -R g=u /var/log/${PATH_RESILIENT_CIRCUITS}\nENV APP_LOG_DIR /var/log/${PATH_RESILIENT_CIRCUITS}\n\n\n# setup entrypoint for read-only enterprise data used by integration, if needed\nRUN mkdir /var/${PATH_RESILIENT_CIRCUITS}\n\n# entrypoint for resilient-circuits.  Use /opt, the conventional location for optional software on Linux\nRUN mkdir /opt/${PATH_RESILIENT_CIRCUITS}\nCOPY entrypoint.sh /opt/${PATH_RESILIENT_CIRCUITS}/entrypoint.sh\n\n# remove temporary python files and temporary driver files\nRUN rm -rf /tmp/packages /tmp/lib\n\n# arbitrary user, support running as non-root. Required on OpenShift. Generally a good practice.\nUSER 1001\nENTRYPOINT [ \"sh\", \"/opt/rescircuits/entrypoint.sh\" ]\n"
}