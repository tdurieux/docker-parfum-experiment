{
  "startTime": 1674250283330,
  "endTime": 1674250284720,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker build -t resilient/{ext} .\n# Base image using Red Hat's universal base image (rhel 8) for python\nFROM registry.access.redhat.com/ubi8/python-39:latest\n# rc-data-feeder will build plugins from a base image\n#FROM resilient/rc-data-feeder-base\n\nARG APPLICATION=fn_utilities\nARG RES_CIRCUITS_VERSION=40.0\nARG PATH_RESILIENT_CIRCUITS=rescircuits\n\n# Environment variable for any app to check if running in a container\nARG APP_HOST_CONTAINER=1\nENV APP_HOST_CONTAINER=${APP_HOST_CONTAINER}\n\n# update to latest packages, user 0 for root privilege\nUSER 0\n# Update to latest pip\nRUN pip install --no-cache-dir --upgrade pip\n\n# install resilient-circuits\nRUN pip install --no-cache-dir resilient-circuits >=${RES_CIRCUITS_VERSION}\n\n# install and upgrade six to satisfy fn_utilities requirement\nRUN pip install --no-cache-dir six==1.14.0\n# install and upgrade cryptography to satisfy fn_utilities requirement\nRUN pip install --no-cache-dir --upgrade cryptography\n\n## ---- section for changes ----\n# uncomment and replicate if additional os libraries are needed\nRUN yum -y update && yum clean all\n# dig and nsloookup\nRUN yum install -y bind-utils net-tools && rm -rf /var/cache/yum\nRUN yum install -y http://mirror.centos.org/centos/8-stream/AppStream/x86_64/os/Packages/whois-nls-5.5.1-2.el8.noarch.rpm && rm -rf /var/cache/yum\nRUN yum install -y http://mirror.centos.org/centos/8-stream/AppStream/x86_64/os/Packages/whois-5.5.1-2.el8.x86_64.rpm && rm -rf /var/cache/yum\nRUN yum install -y http://mirror.centos.org/centos/8-stream/BaseOS/x86_64/os/Packages/traceroute-2.1.0-6.el8.x86_64.rpm && rm -rf /var/cache/yum\n# changes for mail parsing of Outlook emails\nRUN yum install -y perl cpan && rm -rf /var/cache/yum\nRUN cpan -fTi Email::Outlook::Message\n\n# install the base package\nCOPY ./dist /tmp/packages\nRUN pip install --no-cache-dir /tmp/packages/${APPLICATION}-*.tar.gz\n\n# install and upgrade cryptography to satisfy fn_utilities requirement\nRUN pip install --no-cache-dir --upgrade cryptography\n# uncomment and replicate if additional pypi packages are needed\n#RUN pip install <package>\n\n# uncomment and replicate if additional local packages are needed\n#COPY /path/to/extra_package /tmp/packages/.\n#RUN pip install /tmp/packages/<extra_package>*.tar.gz\n\n# uncomment to expose port only if a custom threat feed\n#EXPOSE 9000\n## ---- end section for changes ----\n\n# set up configuration and log locations using /etc and /var/log, the conventional locations for config and logs\nRUN mkdir /etc/${PATH_RESILIENT_CIRCUITS}\nENV APP_CONFIG_FILE /etc/${PATH_RESILIENT_CIRCUITS}/app.config\n\n# create arbitrary group for user 1001\nRUN groupadd -g 1001 default && usermod -g 1001 default\n\n# create directory for logs and set to be root group to allow access by non root processes\n# See https://docs.openshift.com/container-platform/4.2/openshift_images/create-images.html#images-create-guide-openshift_create-images\nRUN mkdir /var/log/${PATH_RESILIENT_CIRCUITS} && \\\n    chgrp -R 1001 /var/log/${PATH_RESILIENT_CIRCUITS} && \\\n    chmod -R g=u /var/log/${PATH_RESILIENT_CIRCUITS}\nENV APP_LOG_DIR /var/log/${PATH_RESILIENT_CIRCUITS}\n\n# setup entrypoint for read-only enterprise data used by integration, if needed\nRUN mkdir /var/${PATH_RESILIENT_CIRCUITS}\n\n# entrypoint for resilient-circuits.  Use /opt, the conventional location for optional software on Linux\nRUN mkdir /opt/${PATH_RESILIENT_CIRCUITS}\nCOPY entrypoint.sh /opt/${PATH_RESILIENT_CIRCUITS}/entrypoint.sh\n\n# remove temporary python files\nRUN rm -rf /tmp/packages /tmp/lib\n\n# arbitrary user, support running as non-root.  Required on OpenShift.\n# Generally a good practice.\nUSER 1001\nENTRYPOINT [ \"sh\", \"/opt/rescircuits/entrypoint.sh\" ]\n"
}