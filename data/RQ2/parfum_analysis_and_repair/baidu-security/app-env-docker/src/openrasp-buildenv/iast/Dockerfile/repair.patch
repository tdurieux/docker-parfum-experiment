diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/baidu-security/app-env-docker/src/openrasp-buildenv/iast/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/baidu-security/app-env-docker/src/openrasp-buildenv/iast/Dockerfile/repaired.Dockerfile
index c585431..fc6c721 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/baidu-security/app-env-docker/src/openrasp-buildenv/iast/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/baidu-security/app-env-docker/src/openrasp-buildenv/iast/Dockerfile/repaired.Dockerfile
@@ -5,9 +5,9 @@ LABEL MAINTAINER="OpenRASP <ext_yunfenxi@baidu.com>"
 RUN cd /root && \ 
     wget https://www.python.org/ftp/python/3.7.4/Python-3.7.4.tar.xz && \
     xz -d Python-3.7.4.tar.xz && \
-    tar -xf Python-3.7.4.tar
+    tar -xf Python-3.7.4.tar && rm Python-3.7.4.tar
 
-RUN yum install -y libffi-devel zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel
+RUN yum install -y libffi-devel zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel && rm -rf /var/cache/yum
 
 ENV PATH="$PATH:/opt/rh/devtoolset-4/root/usr/bin/"
 
@@ -23,19 +23,19 @@ RUN cd /root && \
     ln -s /usr/local/openssl/lib/libssl.so.1.1 /usr/local/lib64/libssl.so && \
     ln -s /usr/local/openssl/bin/openssl /usr/bin/openssl && \
     echo "/usr/local/openssl/lib" >> /etc/ld.so.conf && \
-    ldconfig
+    ldconfig && rm openssl-1.1.1a.tar.gz
 
 RUN cd /root/Python-3.7.4 && \
-    ./configure --with-openssl=/usr/local/openssl --enable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-openssl=/usr/local/openssl --enable-shared && \
     make && make install && \
     echo "/usr/local/lib" >> /etc/ld.so.conf && \
     ldconfig
 
-RUN pip3 install pyinstaller
+RUN pip3 install --no-cache-dir pyinstaller
 
 COPY requirements.txt /root/
 
-RUN pip3 install -r /root/requirements.txt && \
+RUN pip3 install --no-cache-dir -r /root/requirements.txt && \
     rm /root/requirements.txt
 
 COPY build.sh /root/