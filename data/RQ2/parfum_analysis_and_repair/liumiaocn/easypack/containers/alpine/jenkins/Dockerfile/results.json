{
  "startTime": 1674251215509,
  "endTime": 1674251216561,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 5,
        "columnEnd": 136
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 5,
        "columnEnd": 163
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 5,
        "columnEnd": 155
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 5,
        "columnEnd": 159
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 5,
        "columnEnd": 155
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 5,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################################\n#\n#IMAGE:   Jenkins(Alpine)\n#VERSION: 2.190.2\n#BASE:    Jenkins LTS Version\n#INTEGRATION:\n#         Jenkins Slave: 3.28\n#         tini         : 0.18.0\n#         maven        : 3.6.2\n#         sonar-scanner: 3.2.0.1227\n#         kubectl      : 1.10.12\n#         docker       : 18.09.0\n#         svn          : 1.10.2\n#\n###############################################################################\nFROM openjdk:8-jdk-alpine\n\n###############################################################################\n#MAINTAINER\n###############################################################################\nMAINTAINER LiuMiao <liumiaocn@outlook.com>\n\n###############################################################################\n#ARG Setting\n###############################################################################\nARG http_port=8080\nARG agent_port=50000\nARG TINI_VERSION=0.18.0\nARG TINI_SHA=eadb9d6e2dc960655481d78a92d2c8bc021861045987ccd3e27c7eae5af0cf33\nARG JENKINS_HOME=\"/data/jenkins\"\nARG JENKINS_SLAVE_VER=\"3.28\"\nARG JENKINS_SLAVE_AGENT_PORT=${agent_port}\nARG JENKINS_VERSION=${JENKINS_VERSION:-2.190.2}\nARG JENKINS_SHA=47620a00004af5634e45904149897fe4a36b0463ec691bfabc2086779f90f127\nARG JENKINS_URL=http://mirrors.jenkins.io/war-stable/${JENKINS_VERSION}/jenkins.war\nARG COPY_REFERENCE_FILE_LOG=$JENKINS_HOME/copy_reference_file.log\nARG MAVEN_HOME=\"/usr/local/share/maven\"\nARG MAVEN_VER=\"3.6.2\"\nARG SONAR_HOME=\"/usr/local/share/sonar\"\nARG SONAR_SCANNER_VER=\"3.2.0.1227\"\nARG KUBECTL_VER=\"1.10.12\"\nARG DOCKER_VERSION=18.09.0\n\n###############################################################################\n#ENV Setting\n###############################################################################\nENV JENKINS_HOME ${JENKINS_HOME}\nENV JENKINS_MODE ${JENKINS_MODE}\nENV JENKINS_SLAVE_AGENT_PORT ${agent_port}\nENV JENKINS_ADMIN_ID=${JENKINS_ADMIN_ID:-root}\nENV JENKINS_ADMIN_PW=${JENKINS_ADMIN_PW:-hello123}\nENV JENKINS_MASTER_URL=${JENKINS_MASTER_URL}\nENV JENKINS_SLAVE_NAME=${JENKINS_SLAVE_NAME}\nENV JENKINS_SLAVE_SECRET=${JENKINS_SLAVE_SECRET}\nENV JENKINS_SLAVE_WORKDIR=${JENKINS_SLAVE_WORKDIR}\nENV JENKINS_VERSION ${JENKINS_VERSION}\nENV JENKINS_UC https://updates.jenkins.io\nENV JENKINS_UC_EXPERIMENTAL=https://updates.jenkins.io/experimental\nENV COPY_REFERENCE_FILE_LOG $JENKINS_HOME/copy_reference_file.log\n\n###############################################################################\n#Install && Setting\n###############################################################################\nRUN apk add --no-cache git openssh-client curl unzip bash ttf-dejavu coreutils py-pip ansible subversion \\\n  && echo \"mkdir -p ${JENKINS_HOME}\" \\\n  && mkdir -p ${JENKINS_HOME} \\\n  && mkdir -p /usr/share/jenkins/ref/init.groovy.d  \\\n  && echo \"################ docker client \" \\\n  && curl -f -L -o docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n  && tar xf docker.tgz \\\n  && mv docker/docker /usr/local/bin/docker \\\n  && chmod a+x /usr/local/bin/docker \\\n  && rm -rf docker \\\n  && rm docker.tgz \\\n  && echo \"################ kubectl client \" \\\n  && curl -f -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v$KUBECTL_VER/bin/linux/amd64/kubectl \\\n  && chmod a+x /usr/local/bin/kubectl \\\n  && echo \"################ tini           \" \\\n  && curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static-amd64 -o /bin/tini \\\n  && chmod +x /bin/tini \\\n  && echo \"$TINI_SHA  /bin/tini\" | sha256sum -c - \\\n  && echo \"################ jenkins master\" \\\n  && curl -fsSL ${JENKINS_URL} -o /usr/share/jenkins/jenkins.war \\\n  && echo \"${JENKINS_SHA}  /usr/share/jenkins/jenkins.war\" | sha256sum -c - \\\n  && echo \"################ jenkins slave\" \\\n  && curl -f -L -o /usr/share/jenkins/slave.jar https://repo.jenkins-ci.org/public/org/jenkins-ci/main/remoting/${JENKINS_SLAVE_VER}/remoting-${JENKINS_SLAVE_VER}.jar \\\n  && echo \"################ maven         \" \\\n  && curl -f -L -o apache-maven-$MAVEN_VER-bin.tar.gz https://apache.mirror.cdnetworks.com/maven/maven-3/$MAVEN_VER/binaries/apache-maven-$MAVEN_VER-bin.tar.gz \\\n  && tar xf apache-maven-$MAVEN_VER-bin.tar.gz \\\n  && mv apache-maven-$MAVEN_VER $MAVEN_HOME \\\n  && rm apache-maven-$MAVEN_VER-bin.tar.gz \\\n  && echo \"################ sonar-scanner  \" \\\n  && curl -f -L -o sonar-scanner-$SONAR_SCANNER_VER.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-${SONAR_SCANNER_VER}.zip \\\n  && unzip sonar-scanner-$SONAR_SCANNER_VER.zip   >/dev/null 2>&1 \\\n  && mv sonar-scanner-$SONAR_SCANNER_VER $SONAR_HOME \\\n  && rm sonar-scanner-$SONAR_SCANNER_VER.zip \\\n  && echo \"################ robot framework\" \\\n  && pip install --no-cache-dir --upgrade pip; pip install --no-cache-dir robotframework robotframework-selenium2library\\\n  && ln -s /usr/local/share/maven/bin/mvn /usr/local/bin/mvn \\\n  && ln -s /usr/local/share/sonar/bin/sonar-scanner /usr/local/bin/sonar-scanner \\\n  && mkdir -p /data/jenkins  \\\n  && mkdir -p /data/maven    \\\n  && mkdir -p /data/kube     \\\n  && mkdir -p /data/sonar    \\\n  && rm -rf /var/cache/apk/* \\\n  && rm -rf /tmp/*.apk\n\n###############################################################################\n#Prepare Setting\n###############################################################################\nCOPY init.groovy /usr/share/jenkins/ref/init.groovy.d/tcp-slave-agent-port.groovy\nCOPY init_login.groovy /usr/share/jenkins/ref/init.groovy.d/set-user-security.groovy\nCOPY jenkins-support /usr/local/bin/jenkins-support\nCOPY jenkins.sh /usr/local/bin/jenkins.sh\nCOPY install-plugins.sh /usr/local/bin/install-plugins.sh\n\n###############################################################################\n#Install plugins\n###############################################################################\n#RUN /usr/local/bin/install-plugins.sh gitlab-plugin sonar redmine docker-build-step ansible build-pipeline-plugin buildgraph-view workflow-aggregator pipeline-maven pipeline-utility-steps ssh-slaves\nRUN /usr/local/bin/install-plugins.sh gitlab-plugin ansible sonar redmine docker-build-step docker-workflow blueocean\n\n###############################################################################\n#Volume Setting\n###############################################################################\nVOLUME [\"/usr/share/jenkins/\", \"/data/jenkins\", \"/data/maven\", \"/data/kube\", \"/data/sonar\", \"/data/robot\"]\n\n###############################################################################\n#expose Setting\n###############################################################################\n# for main web interface:\nEXPOSE ${http_port}\n# will be used by attached slave agents:\nEXPOSE ${agent_port}\n\nENTRYPOINT [\"/bin/tini\", \"--\", \"/usr/local/bin/jenkins.sh\"]\n"
}