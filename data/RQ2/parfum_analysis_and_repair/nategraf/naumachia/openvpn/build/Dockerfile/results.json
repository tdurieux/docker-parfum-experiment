{
  "startTime": 1674220419705,
  "endTime": 1674220420448,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on https://github.com/kylemanna/docker-openvpn/blob/master/Dockerfile\nFROM alpine:3.16\n\n# TODO(victor): Split this into a builder pattern to make the final image smaller.\nRUN echo \"http://dl-4.alpinelinux.org/alpine/edge/community/\" >> /etc/apk/repositories && \\\n    echo \"http://dl-4.alpinelinux.org/alpine/edge/testing/\" >> /etc/apk/repositories && \\\n    apk add --update --no-cache autoconf automake libtool openssl-dev lzo-dev lz4-dev libqrencode \\\n    linux-pam-dev net-tools linux-headers build-base git bash easy-rsa iptables iproute2 python3 \\\n    py3-pip && \\\n    ln -s /usr/share/easy-rsa/easyrsa /usr/local/bin\n\n# TOOD: Update to OpenVPN 5 and use the mainline vlan support.\nENV OVPN_REPO_URL=https://github.com/ikelos/openvpn.git\nENV OVPN_REPO_BRANCH=vlan-patches-v2\n\nCOPY ./make-openvpn.sh ./make-openvpn.sh\nRUN source ./make-openvpn.sh\n\n# Needed by kylemanna's OpenVPN Bash scripts\nENV OPENVPN=/etc/openvpn\nENV EASYRSA=/usr/share/easy-rsa \\\n    EASYRSA_CRL_DAYS=3650 \\\n    EASYRSA_PKI=$OPENVPN/pki\n\nVOLUME [\"/etc/openvpn\"]\n\n# Internally uses port 1194/udp, remap using `docker run -p 443:1194/tcp`\nEXPOSE 1194/udp\n\nADD ./bin /usr/local/bin\nRUN chmod a+x /usr/local/bin/*\n\nCOPY ./requirements.txt ./requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Replace the base image run script with a modified version.\nCOPY ./ovpn_run /usr/local/bin/ovpn_run\nRUN chmod a+x /usr/local/bin/ovpn_run\n\nENTRYPOINT [\"/scripts/naumachia-start\"]\nCMD [\"ovpn_run\"]\n"
}