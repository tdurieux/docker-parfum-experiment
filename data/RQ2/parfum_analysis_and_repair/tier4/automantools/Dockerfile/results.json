{
  "startTime": 1674250678951,
  "endTime": 1674250679721,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8.1-slim\n\nSHELL [\"/bin/bash\", \"-c\"]\nENV DEBIAN_FRONTEND=noninteractive\nENV LC_ALL \"C.UTF-8\"\nENV LANG \"C.UTF-8\"\nENV APP_PATH /opt/automan\n\n# install python\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    default-libmysqlclient-dev \\\n    default-mysql-client \\\n    curl \\\n    build-essential \\\n    tk-dev && \\\n    curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    nodejs \\\n    yarn && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    pip install --no-cache-dir pipenv\n\n# setup pipenv\nCOPY automan/Pipfile* /tmp/automan/\nWORKDIR /tmp/automan\nRUN pipenv install --system --deploy\n\n# setup yarn packages\nCOPY front/package.json $APP_PATH/front/\nWORKDIR $APP_PATH/front\nRUN yarn install && yarn cache clean;\n\n# setup frontend environment\nCOPY front/ $APP_PATH/front/\nRUN yarn build\n\nCOPY automan/ $APP_PATH/automan/\nCOPY bin/ $APP_PATH/bin/\nWORKDIR $APP_PATH/\nENTRYPOINT [\"./bin/docker-entrypoint.sh\"]\nCMD [\"uwsgi\", \"--ini\", \"conf/app.ini\"]\n"
}