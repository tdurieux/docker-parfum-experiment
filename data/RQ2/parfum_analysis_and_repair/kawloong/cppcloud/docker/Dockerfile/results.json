{
  "startTime": 1674220175042,
  "endTime": 1674220176132,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 11,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# 注意：构建时docker build的PATH参数须指定上此文件所在目录的上一级，\n# 并用-f显式指定现Dockerfile文件，即docker build -f Dockerfile -t cpd:2 ..\n# 如果在上一级执行，则应该用docker build -f docker/Dockerfile -t cpd:2 .\n\n\nFROM centos:7\n\n# MAINTAINER\nMAINTAINER valueho hjl_mvp@126.com\n\nADD cpp_sdk /cppcloud/cpp_sdk/\nADD common /cppcloud/common/\nADD server /cppcloud/server/\nADD docker /cppcloud/docker\n\n\nENV LD_LIBRARY_PATH /cppcloud/common:/cppcloud/cpp_sdk:$LD_LIBRARY_PATH\nENV LIBRARY_PATH /cppcloud/common:/cppcloud/cpp_sdk:$LIBRARY_PATH\nENV PATH $PATH:/cppcloud/docker\nENV LOG2STD 1\n\n# running required command\nRUN ln -sf /usr/share/zoneinfo/Hongkong /etc/localtime \\\n        && yum install -y gcc gcc-c++ glibc make && rm -rf /var/cache/yum\n## autoconf openssl openssl-devel\n\nWORKDIR /cppcloud/docker\nRUN make all \\\n        && chmod +x sample_call_model.sh \\\n        && ln -s sample_call_model.sh sample_conf \\\n        && ln -s sample_call_model.sh sample_prvd \\\n        && ln -s sample_call_model.sh sample_tcp_invk \\\n        && ln -s sample_call_model.sh sample_http_invk \\\n        && ln -s sample_call_model.sh agent_prvd \\\n        && ln -s /cppcloud/server/cppcloud_serv cppcloud_serv \\\n        && chmod +x docker-entrypoint.sh && /usr/bin/cp -r /cppcloud/server/conf .\n\n\nCMD [\"help\"]\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n\n\nEXPOSE 4800\nVOLUME [\"/cppcloud/docker/conf\", \"/cppcloud/docker/log\"]\n"
}