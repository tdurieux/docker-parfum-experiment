{
  "startTime": 1674249792187,
  "endTime": 1674249793070,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14-alpine3.11 as builder\n\nWORKDIR /app\n\nRUN apk add --no-cache git python2-dev make g++ gettext\n\nCOPY package.json yarn.lock ./\n\nRUN yarn install && yarn cache clean;\n\nCOPY . .\nARG api_host\nARG google_api_key\nENV API_HOST=$api_host\nENV GOOGLE_API_KEY=$google_api_key\nRUN yarn l10n:generate && \\\n    touch .env && \\\n    JOBS=1 yarn build -prod\n\n##\n##\n\nFROM node:14-alpine3.11\n\nWORKDIR /fastboot\n\nCOPY --from=builder /app/dist/ dist/\n\nRUN apk add --no-cache ca-certificates nginx && \\\n    cp dist/package.json . && \\\n    yarn install && \\\n    yarn add fastboot-app-server dotenv lodash && \\\n    rm -rf yarn.lock && \\\n    yarn cache clean\n\nCOPY scripts/* ./scripts/\nCOPY config/environment.js ./config/\n\nRUN mkdir -p /etc/nginx/conf.d/\nCOPY config/nginx.conf /etc/nginx/conf.d\nRUN mkdir -p /run/nginx\n\nEXPOSE 4000\n\nCMD [\"sh\", \"scripts/container_start.sh\"]\n"
}