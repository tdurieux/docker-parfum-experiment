{
  "startTime": 1674251867577,
  "endTime": 1674251868078,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16.3-slim\nRUN apt-get update && apt-get install --no-install-recommends git g++ make python -y && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p web-apps\nCOPY yarn.lock web-apps/\nCOPY package.json web-apps/\n# copy entire build package as it has required .bin files\nCOPY packages/build/ web-apps/packages/build/\n\n# copy only package.json files\nCOPY packages/design/package.json web-apps/packages/design/\nCOPY packages/shared/package.json web-apps/packages/shared/\nCOPY packages/teleport/package.json web-apps/packages/teleport/\nCOPY packages/teleterm/package.json web-apps/packages/teleterm/\n\n# copy enterprise package.json files if present\nCOPY README.md packages/webapps.e/telepor[t]/package.json web-apps/packages/webapps.e/teleport/\n\n# download and install npm dependencies\nWORKDIR web-apps\nRUN yarn install && yarn cache clean;\n\n# copy the rest of the files and run yarn build command\nCOPY  . .\nARG NPM_SCRIPT\nARG OUTPUT\n# run npm script with optional --output-path parameter\nRUN yarn $NPM_SCRIPT $([ -z $OUTPUT ] || echo --output-path=$OUTPUT)\n"
}