diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gravitational/planet/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gravitational/planet/Dockerfile/repaired.Dockerfile
index 47b93b7..519370f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/gravitational/planet/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/gravitational/planet/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax = docker/dockerfile:1.2
-
 ARG KUBE_VER=v1.21.2
 ARG SECCOMP_VER=2.3.1-2.1+deb9u1
 ARG DOCKER_VER=20.10.7
@@ -44,23 +42,23 @@ ARG ETCD_LATEST_VER=v3.4.9
 
 # go builder
 FROM golang:${GO_VERSION}-stretch AS gobase
-RUN apt install -y --no-install-recommends git
+RUN apt install -y --no-install-recommends git && rm -rf /var/lib/apt/lists/*;
 
 FROM alpine:${ALPINE_VERSION} AS downloader
 RUN apk add --no-cache curl tar && mkdir -p /tmp
 
 FROM ${DEBIAN_IMAGE} AS iptables-builder
 ARG IPTABLES_VER
-RUN --mount=type=cache,sharing=locked,target=/var/cache/apt --mount=type=cache,sharing=locked,target=/var/lib/apt \
+RUN --mount=type=cache,sharing=locked,target=/var/cache/apt--mount=type=cache,sharing=locked,target=/var/lib/apt \
 	set -ex && \
 	apt-get update && apt-get install -y --no-install-recommends \
-		git pkg-config autoconf automake libtool libmnl-dev make build-essential
+		git pkg-config autoconf automake libtool libmnl-dev make build-essential && rm -rf /var/lib/apt/lists/*;
 RUN set -ex && \
         mkdir /tmp/iptables.build /tmp/iptables.local && \
         git clone git://git.netfilter.org/iptables.git --branch ${IPTABLES_VER} --single-branch /tmp/iptables.build && \
         cd /tmp/iptables.build && \
         ./autogen.sh && \
-        ./configure --disable-nftables --prefix=/usr/local && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-nftables --prefix=/usr/local && \
         make && \
         make install
 
@@ -69,8 +67,8 @@ RUN set -ex && \
 # go install github.com/gravitational/version/cmd/linkflags@latest
 ARG GO_BUILDER_VERSION
 FROM quay.io/gravitational/debian-venti:${GO_BUILDER_VERSION} AS planet-builder-base
-RUN apt-get update && apt-get install -y libc6-dev libudev-dev && mkdir -p /tmp && \
-	GO111MODULE=on go install github.com/gravitational/version/cmd/linkflags@0.0.2
+RUN apt-get update && apt-get install --no-install-recommends -y libc6-dev libudev-dev && mkdir -p /tmp && \
+	GO111MODULE=on go install github.com/gravitational/version/cmd/linkflags@0.0.2 && rm -rf /var/lib/apt/lists/*;
 
 FROM planet-builder-base AS planet-builder
 ENV PATH="$PATH:/gopath/bin"
@@ -108,21 +106,21 @@ ENV DEBIAN_FRONTEND noninteractive
 
 COPY ./build.assets/docker/os-rootfs/ /
 
-RUN --mount=type=cache,sharing=locked,target=/var/cache/apt --mount=type=cache,sharing=locked,target=/var/lib/apt \
+RUN --mount=type=cache,sharing=locked,target=/var/cache/apt--mount=type=cache,sharing=locked,target=/var/lib/apt \
 	set -ex; \
 	if ! command -v gpg > /dev/null; then \
 		apt-get update; \
 		apt-get install -y --no-install-recommends \
 		gnupg2 \
-		dirmngr; \
+		dirmngr; rm -rf /var/lib/apt/lists/*; \
 	fi
 
-RUN --mount=type=cache,target=/var/cache/apt,rw --mount=type=cache,target=/var/lib/apt,rw \
+RUN --mount=type=cache,target=/var/cache/apt,rw--mount=type=cache,target=/var/lib/apt,rw \
 	set -ex && \
 	sed -i 's/main/main contrib non-free/g' /etc/apt/sources.list && \
-	apt-get update && apt-get -q -y install apt-transport-https \
-	&& apt-get install -q -y apt-utils less locales \
-	&& apt-get install -t stretch-backports -q -y systemd
+	apt-get update && apt-get -q --no-install-recommends -y install apt-transport-https \
+	&& apt-get install --no-install-recommends -q -y apt-utils less locales \
+	&& apt-get install --no-install-recommends -t stretch-backports -q -y systemd && rm -rf /var/lib/apt/lists/*;
 
 # Set locale to en_US.UTF-8
 RUN locale-gen \
@@ -169,7 +167,7 @@ COPY --from=iptables-builder /usr/local/ /usr/local/
 
 # FIXME: allowing downgrades and pinning the version of libip4tc0 for iptables
 # as the package has a dependency on the older version as the one available.
-RUN --mount=type=cache,target=/var/cache/apt,rw --mount=type=cache,target=/var/lib/apt,rw \
+RUN --mount=type=cache,target=/var/cache/apt,rw--mount=type=cache,target=/var/lib/apt,rw \
 	set -ex && \
 	apt-get update && \
 	apt-get install -q -y --allow-downgrades --no-install-recommends \
@@ -215,7 +213,7 @@ RUN --mount=type=cache,target=/var/cache/apt,rw --mount=type=cache,target=/var/l
 	strace \
 	netbase \
 	file \
-	bsdmainutils; \
+	bsdmainutils; rm -rf /var/lib/apt/lists/*; \
 	# update loader's cache after pulling in iptables build
 	ldconfig
 
@@ -250,7 +248,7 @@ RUN --mount=target=/root/.cache,type=cache --mount=target=/go/pkg/mod,type=cache
 
 FROM gobase AS distribution-builder
 ARG DISTRIBUTION_VER
-ENV GOOS=linux GOARCH=amd64 CGO_ENABLED=0 GO111MODULE=off 
+ENV GOOS=linux GOARCH=amd64 CGO_ENABLED=0 GO111MODULE=off
 WORKDIR /go/src/github.com/docker/distribution
 RUN --mount=target=/root/.cache,type=cache --mount=target=/go/pkg/mod,type=cache \
 	set -ex && \
@@ -261,27 +259,27 @@ FROM downloader AS cni-downloader
 ARG CNI_VER
 RUN set -ex && \
 	mkdir -p /opt/cni/bin && \
-	curl -L --retry 5 \
+	curl -f -L --retry 5 \
 	https://github.com/containernetworking/plugins/releases/download/v${CNI_VER}/cni-plugins-linux-amd64-v${CNI_VER}.tgz -o /tmp/cni.tar.gz && \
-	tar -xzvf /tmp/cni.tar.gz --no-same-owner -C /opt/cni/bin ./bridge ./loopback ./host-local ./portmap ./tuning ./flannel
+	tar -xzvf /tmp/cni.tar.gz --no-same-owner -C /opt/cni/bin ./bridge ./loopback ./host-local ./portmap ./tuning ./flannel && rm /tmp/cni.tar.gz
 
 FROM downloader AS coredns-downloader
 ARG COREDNS_VER
 RUN set -ex && \
-	curl -L --retry 5 https://github.com/coredns/coredns/releases/download/v${COREDNS_VER}/coredns_${COREDNS_VER}_linux_amd64.tgz -o /tmp/coredns.tar.gz && \
+	curl -f -L --retry 5 https://github.com/coredns/coredns/releases/download/v${COREDNS_VER}/coredns_${COREDNS_VER}_linux_amd64.tgz -o /tmp/coredns.tar.gz && \
 	tar xvzf /tmp/coredns.tar.gz --no-same-owner -C / coredns
 
 FROM downloader AS helm-downloader
 ARG HELM_VER
 RUN set -ex && \
-	curl https://get.helm.sh/helm-v${HELM_VER}-linux-amd64.tar.gz -o /tmp/helm.tar.gz && \
+	curl -f https://get.helm.sh/helm-v${HELM_VER}-linux-amd64.tar.gz -o /tmp/helm.tar.gz && \
 	tar xvzf /tmp/helm.tar.gz --no-same-owner --strip-components=1 -C / linux-amd64/helm
 
 FROM downloader AS helm3-downloader
 ARG HELM3_VER
 RUN set -ex && \
-	curl https://get.helm.sh/helm-v${HELM3_VER}-linux-amd64.tar.gz -o /tmp/helm3.tar.gz && \
-	tar --transform='flags=r;s|helm|helm3|' -xvzf /tmp/helm3.tar.gz --no-same-owner --strip-components=1 -C / linux-amd64/helm
+	curl -f https://get.helm.sh/helm-v${HELM3_VER}-linux-amd64.tar.gz -o /tmp/helm3.tar.gz && \
+	tar --transform='flags=r;s|helm|helm3|' -xvzf /tmp/helm3.tar.gz --no-same-owner --strip-components=1 -C / linux-amd64/helm && rm /tmp/helm3.tar.gz
 
 FROM downloader AS k8s-downloader
 ARG KUBE_VER
@@ -289,9 +287,11 @@ ENV DOWNLOAD_URL=https://storage.googleapis.com/kubernetes-release/release/${KUB
 ENV BINARIES="kube-apiserver kube-controller-manager kube-scheduler kubectl kube-proxy kubelet"
 RUN set -ex && \
 	for r in ${BINARIES}; do \
-		curl --retry 100 --retry-delay 0 --connect-timeout 10 --max-time 300 --tlsv1.2 --silent --show-error -o /tmp/$r ${DOWNLOAD_URL}/$r; \
+
+		curl -f --retry 100 --retry-delay 0 --connect-timeout 10 --max-time 300 --tlsv1.2 --silent --show-error -o /tmp/$r ${DOWNLOAD_URL}/$r; \
 		chmod +x /tmp/$r; \
-	done;
+	done \
+	;
 
 FROM downloader AS etcd-downloader
 ARG ETCD_VER
@@ -301,7 +301,8 @@ RUN set -ex && \
 	mkdir -p /tmp/bin/ && \
 	cd /tmp && \
 	for v in ${ETCD_VER}; do \
-		curl -L https://github.com/etcd-io/etcd/releases/download/$v/etcd-$v-${OS}-${ARCH}.tar.gz -O; \
+
+		curl -f -L https://github.com/etcd-io/etcd/releases/download/$v/etcd-$v-${OS}-${ARCH}.tar.gz -O; \
 		tar xf /tmp/etcd-$v-${OS}-${ARCH}.tar.gz \
 			--no-same-owner \
 			--strip-components 1 \
@@ -314,18 +315,19 @@ RUN set -ex && \
 			--directory /tmp/bin/ \
 			--transform="s|etcdctl$|etcdctl-cmd-$v|" \
 			etcd-$v-${OS}-${ARCH}/etcdctl; \
-	done;
+	done \
+	;
 
 FROM downloader AS node-problem-detector-downloader
 ARG NODE_PROBLEM_DETECTOR_VER
-RUN set -ex && curl -L --retry 5 https://github.com/kubernetes/node-problem-detector/releases/download/${NODE_PROBLEM_DETECTOR_VER}/node-problem-detector-${NODE_PROBLEM_DETECTOR_VER}.tar.gz| tar xz --no-same-owner -C /tmp/
+RUN set -ex && curl -f -L --retry 5 https://github.com/kubernetes/node-problem-detector/releases/download/${NODE_PROBLEM_DETECTOR_VER}/node-problem-detector-${NODE_PROBLEM_DETECTOR_VER}.tar.gz | tar xz --no-same-owner -C /tmp/
 
 # docker.mk
 FROM downloader AS docker-downloader
 ARG DOCKER_VER
 RUN set -ex && \
 	mkdir -p /docker && \
-	curl -L --retry 5 https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VER}.tgz | tar xvz --no-same-owner --strip-components=1 -C /docker
+	curl -f -L --retry 5 https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VER}.tgz | tar xvz --no-same-owner --strip-components=1 -C /docker
 
 FROM base AS rootfs
 ARG ETCD_LATEST_VER