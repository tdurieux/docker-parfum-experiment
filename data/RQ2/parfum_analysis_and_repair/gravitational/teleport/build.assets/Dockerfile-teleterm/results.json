{
  "startTime": 1674249553660,
  "endTime": 1674249554818,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 57
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 0,
        "lineEnd": 0,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 0,
        "lineEnd": 0,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 50,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILDBOX_VERSION\n# GRPC_NODE_PLUGIN_BINARY_TYPE can be \"prebuilt\" or \"compiled\"\nARG GRPC_NODE_PLUGIN_BINARY_TYPE\nFROM quay.io/gravitational/teleport-buildbox:$BUILDBOX_VERSION as base\n\nARG BUILDARCH\n\n# Install buf\nRUN BIN=\"/usr/local/bin\" && \\\n    VERSION=\"1.0.0-rc1\" && \\\n    BINARY_NAME=\"buf\" && \\\n    curl -f -sSL \\\n     \"https://github.com/bufbuild/buf/releases/download/v${VERSION}/${BINARY_NAME}-$(uname -s)-$(uname -m)\" \\\n    -o \"${BIN}/${BINARY_NAME}\" && \\\n    chmod +x \"${BIN}/${BINARY_NAME}\"\n\n# Install node\nARG NODE_VERSION\nENV NODE_URL=\"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${BUILDARCH}.tar.xz\"\nENV NODE_PATH=\"/usr/local/lib/node-v${NODE_VERSION}-linux-${BUILDARCH}\"\nENV PATH=\"$PATH:${NODE_PATH}/bin\"\nRUN ( curl -f -o /tmp/nodejs.tar.xz -L ${NODE_URL} && tar -xJf /tmp/nodejs.tar.xz -C /usr/local/lib) && rm /tmp/nodejs.tar.xz\n\n# Install js proto tools\nRUN ( npm install --global grpc_tools_node_protoc_ts@5.0.1) && npm cache clean --force;\nRUN go install github.com/golang/protobuf/protoc-gen-go@v1.4.3\n\nFROM base as grpc_node_plugin_binary_prebuilt\n \\\nRUN ( npm install --global grpc-tools@1.11.2) && npm cache clean --force; ONBUILD\n\nFROM base as grpc_node_plugin_binary_compiled\nONBUILD RUN apt-get update -y && \\\n    apt-get install -q -y --no-install-recommends build-essential cmake jq && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists/*\n \\\nRUN ( npm install --global --ignore-scripts grpc-tools@1.11.2) && npm cache clean --force; ONBUILD\nONBUILD COPY teleterm_linux_arm64.toolchain.cmake ./linux_arm64.toolchain.cmake\nONBUILD RUN git clone --depth=1 --branch=grpc-tools@1.11.2 https://github.com/grpc/grpc-node.git && \\\n    mv linux_arm64.toolchain.cmake grpc-node/packages/grpc-tools/. && \\\n    cd grpc-node && \\\n    git submodule update --init --recursive && \\\n    cd packages/grpc-tools && \\\n    cmake -DCMAKE_TOOLCHAIN_FILE=linux_arm64.toolchain.cmake . && \\\n    cmake --build . --target clean && cmake --build . --target grpc_node_plugin -- -j 12 && \\\n    cp grpc_node_plugin $(npm root -g)/grpc-tools/bin/. && \\\n    # grpc-tools requires both protoc and grpc_node_plugin, but protoc is already installed by\n    # the buildbox image.\n    ln -s $(which protoc) $(npm root -g)/grpc-tools/bin/protoc && \\\n    cd ../../.. && \\\n    rm -rf grpc-node\n\n# Choose an appropriate image and run ONBUILD instructions from it.\nFROM grpc_node_plugin_binary_${GRPC_NODE_PLUGIN_BINARY_TYPE}\n"
}