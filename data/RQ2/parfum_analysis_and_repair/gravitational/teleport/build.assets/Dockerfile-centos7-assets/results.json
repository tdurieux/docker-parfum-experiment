{
  "startTime": 1674251492396,
  "endTime": 1674251493321,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7 AS centos-devtoolset\n\n# Install required dependencies.\nRUN yum groupinstall -y 'Development Tools' && \\\n    yum install -y epel-release && \\\n    yum update -y && \\\n    yum -y install centos-release-scl-rh && \\\n    yum install -y \\\n        # required by libbpf, Clang\n        centos-release-scl \\\n        # required by Clang/LLVM\n        cmake3 \\\n        # required by libbpf and Clang\n        devtoolset-11-gcc* \\\n        # required by libbpf\n        devtoolset-11-make \\\n        # required by libbpf\n        elfutils-libelf-devel \\\n        # required by libbpf\n        elfutils-libelf-devel-static \\\n        git \\\n        # required by libbpf, Clang\n        scl-utils \\\n        # required by libbpf\n        zlib-devel \\\n        # required by libbpf\n        zlib-static && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Use just created devtool image with newer GCC and Cmake\nFROM centos-devtoolset as clang10\n\n# Compile Clang 10.0.1 from source. It is needed to create BPF files.\n# Centos 7 doesn't provide it as a package unfortunately.\n# LLVM_INCLUDE_BENCHMARKS must be off, otherwise compilation fails,\n# CLANG_BUILD_TOOLS must be on, it builds clang binary,\n# LLVM_BUILD_TOOLS must be on, it builds llvm-strip binary.\n# the rest is disabled to speedup the compilation.\nRUN git clone --branch llvmorg-10.0.1 --depth=1 https://github.com/llvm/llvm-project.git && \\\n    cd llvm-project/ && \\\n    mkdir build && cd build/ && \\\n    scl enable devtoolset-11 'bash -c \"cmake3 \\\n    -DCLANG_BUILD_TOOLS=ON \\\n    -DCLANG_ENABLE_ARCMT=OFF \\\n    -DCLANG_ENABLE_STATIC_ANALYZER=OFF \\\n    -DCMAKE_BUILD_TYPE=Release \\\n    -DCMAKE_INSTALL_PREFIX=/opt/llvm \\\n    -DLLVM_BUILD_TOOLS=ON \\\n    -DLLVM_BUILD_UTILS=OFF \\\n    -DLLVM_ENABLE_BINDINGS=OFF \\\n    -DLLVM_ENABLE_PROJECTS=clang \\\n    -DLLVM_INCLUDE_BENCHMARKS=OFF \\\n    -DLLVM_INCLUDE_GO_TESTS=OFF \\\n    -DLLVM_INCLUDE_TESTS=OFF \\\n    -DLLVM_TOOL_LLI_BUILD=OFF \\\n    -G \\\"Unix Makefiles\\\" ../llvm && \\\n    make -j6 &&  \\\n    make install\"' && \\\n    cd ../.. && \\\n    rm -rf llvm-project\n\nFROM centos:7 AS assetbox\n\n# Copy Clang into the final image.\nCOPY --from=clang10 /opt/llvm /opt/llvm/\nENV PATH=/opt/llvm/bin:${PATH}\n\n# Create the archive and copy it to the host.\nRUN tar -czvf centos7-assets.tar.gz /opt && rm centos7-assets.tar.gz\n"
}