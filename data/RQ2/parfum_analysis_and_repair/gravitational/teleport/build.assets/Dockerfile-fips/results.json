{
  "startTime": 1674251737795,
  "endTime": 1674251738839,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 32,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 32,
        "columnEnd": 123
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile makes the FIPS \"build box\": the container used to build official\n# FIPS releases of Teleport and its documentation.\n\n# Use Ubuntu 18.04 as base to get an older glibc version.\n# Using a newer base image will build against a newer glibc, which creates a\n# runtime requirement for the host to have newer glibc too. For example,\n# teleport built on any newer Ubuntu version will not run on Centos 7 because\n# of this.\nFROM ubuntu:18.04\n\nCOPY locale.gen /etc/locale.gen\nCOPY profile /etc/profile\n\nENV LANGUAGE=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    LC_CTYPE=\"en_US.UTF-8\" \\\n    DEBIAN_FRONTEND=\"noninteractive\"\n\nRUN apt-get update -y --fix-missing && \\\n    apt-get -q -y upgrade && \\\n    apt-get install -y --no-install-recommends apt-utils ca-certificates curl && \\\n    apt-get install -q -y --no-install-recommends \\\n        clang-10 \\\n        clang-format-10 \\\n        gcc \\\n        git \\\n        gzip \\\n        libc6-dev \\\n        libelf-dev \\\n        libpam-dev \\\n        libsqlite3-0 \\\n        llvm-10 \\\n        locales \\\n        make \\\n        net-tools \\\n        openssh-client \\\n        pkg-config \\\n        tar \\\n        tree \\\n        unzip \\\n        zip \\\n        zlib1g-dev \\\n        && \\\n    dpkg-reconfigure locales && \\\n    apt-get -y clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nARG UID\nARG GID\nRUN (groupadd ci --gid=$GID -o && useradd ci --uid=$UID --gid=$GID --create-home --shell=/bin/sh && \\\n     mkdir -p -m0700 /var/lib/teleport && chown -R ci /var/lib/teleport)\n\n# Install etcd.\nRUN ( curl -f -L https://github.com/coreos/etcd/releases/download/v3.3.9/etcd-v3.3.9-linux-amd64.tar.gz | tar -xz && \\\n     cp etcd-v3.3.9-linux-amd64/etcd* /bin/)\n\n# Install Go.\nARG BORINGCRYPTO_RUNTIME\nRUN mkdir -p /opt && cd /opt && curl -f https://go-boringcrypto.storage.googleapis.com/${BORINGCRYPTO_RUNTIME}.linux-amd64.tar.gz | tar xz && \\\n    mkdir -p /go/src/github.com/gravitational/teleport && \\\n    chmod a+w /go && \\\n    chmod a+w /var/lib && \\\n    chmod a-w /\nENV GOPATH=\"/go\" \\\n    GOROOT=\"/opt/go\" \\\n    PATH=\"$PATH:/opt/go/bin:/go/bin:/go/src/github.com/gravitational/teleport/build\"\n\n# Install libbpf\nARG LIBBPF_VERSION\nRUN mkdir -p /opt && cd /opt && curl -f -L https://github.com/gravitational/libbpf/archive/refs/tags/v${LIBBPF_VERSION}.tar.gz | tar xz && \\\n    cd /opt/libbpf-${LIBBPF_VERSION}/src && \\\n    make && \\\n    make install\n\n# Install PAM module and policies for testing.\nCOPY pam/ /opt/pam_teleport/\nRUN make -C /opt/pam_teleport install\n\nVOLUME [\"/go/src/github.com/gravitational/teleport\"]\nEXPOSE 6600 2379 2380\n"
}