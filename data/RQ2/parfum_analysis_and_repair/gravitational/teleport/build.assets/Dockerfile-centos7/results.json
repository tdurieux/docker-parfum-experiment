{
  "startTime": 1674250408460,
  "endTime": 1674250410249,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 5,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 141,
        "lineEnd": 141,
        "columnStart": 32,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 203,
        "lineEnd": 203,
        "columnStart": 12,
        "columnEnd": 99
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 72,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 115,
        "lineEnd": 132,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUST_VERSION\n\n## LIBFIDO2 ###################################################################\n\n# Build libfido2 separately for isolation, speed and flexibility.\nFROM centos:7 AS libfido2\n\nRUN yum groupinstall -y 'Development Tools' && \\\n    yum install -y epel-release && \\\n    yum update -y && \\\n    yum install -y \\\n        cmake3 \\\n        git \\\n        libudev-devel \\\n        zlib-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Install libudev-zero.\n# libudev-zero replaces systemd's libudev\nRUN git clone --depth=1 https://github.com/illiliti/libudev-zero.git -b 1.0.1 && \\\n    cd libudev-zero && \\\n    [ \"$(git rev-parse HEAD)\" = \"4154cf252c17297f98a8ca33693ead003b4509da\" ] && \\\n    make install-static LIBDIR='$(PREFIX)/lib64'\n\n# Instal openssl.\n# Pulled from source because repository versions are too old.\n# install_sw install only binaries, skips docs.\nRUN git clone --depth=1 git://git.openssl.org/openssl.git -b OpenSSL_1_1_1o && \\\n    cd openssl && \\\n    [ \"$(git rev-parse HEAD)\" = \"ca2e0784d2c38edcefd5d68028f4d954bd8faddb\" ] && \\    \n    ./config --release && \\\n    make && \\\n    make install_sw\n\n# Install libcbor.\nRUN git clone --depth=1 https://github.com/PJK/libcbor.git -b v0.9.0 && \\\n    cd libcbor && \\\n    [ \"$(git rev-parse HEAD)\" = \"58b3319b8c3ec15171cb00f01a3a1e9d400899e1\" ] && \\\n    cmake3 \\\n        -DCBOR_CUSTOM_ALLOC=ON \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n        -DWITH_EXAMPLES=OFF . && \\\n    make && \\\n    make install\n\n# Install libfido2.\n# Depends on libcbor, openssl, zlib-devel and libudev.\n# Linked so `make build/tsh` finds the library where it expects it.\nRUN git clone --depth=1 https://github.com/Yubico/libfido2.git -b 1.11.0 && \\\n    cd libfido2 && \\\n    [ \"$(git rev-parse HEAD)\" = \"e61379ff0a27277fbe0aca29ccc34ff93c57b359\" ] && \\\n    cmake3 \\\n        -DBUILD_EXAMPLES=OFF \\\n        -DBUILD_MANPAGES=OFF \\\n        -DBUILD_TOOLS=OFF \\\n        -DCMAKE_BUILD_TYPE=Release . && \\\n    make && \\\n    make install && \\\n# Update ld.\n    echo /usr/local/lib64 > /etc/ld.so.conf.d/libfido2.conf && \\\n    ldconfig\n\n## LIBBPF #####################################################################\n\nFROM centos:7 AS libbpf\n\n# Install required dependencies.\nRUN yum groupinstall -y 'Development Tools' && \\\n    yum install -y epel-release && \\\n    yum update -y && \\\n    yum -y install centos-release-scl-rh && \\\n    yum install -y \\\n    # required by libbpf\n    centos-release-scl \\\n    # required by libbpf\n    devtoolset-11-gcc* \\\n    # required by libbpf\n    devtoolset-11-make \\\n    # required by libbpf\n    elfutils-libelf-devel-static \\\n    git \\\n    # required by libbpf\n    scl-utils \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Install libbpf - compile with a newer GCC. The one installed by default is not able to compile it.\n# BUILD_STATIC_ONLY disables libbpf.so build as we don't need it.\nARG LIBBPF_VERSION\nRUN mkdir -p /opt && cd /opt && \\\n    curl -f -L https://github.com/gravitational/libbpf/archive/refs/tags/v${LIBBPF_VERSION}.tar.gz | tar xz && \\\n    cd /opt/libbpf-${LIBBPF_VERSION}/src && \\\n    scl enable devtoolset-11 \"make && BUILD_STATIC_ONLY=y DESTDIR=/opt/libbpf make install\"\n\n## BUILDBOX ###################################################################\n\nFROM centos:7 AS buildbox\n\nENV LANGUAGE=en_US.UTF-8 \\\n    LANG=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8 \\\n    LC_CTYPE=en_US.UTF-8\n\nARG GOLANG_VERSION\nARG RUST_VERSION\n\nARG UID\nARG GID\nRUN (groupadd ci --gid=$GID -o && useradd ci --uid=$UID --gid=$GID --create-home --shell=/bin/sh && \\\n     mkdir -p -m0700 /var/lib/teleport && chown -R ci /var/lib/teleport)\n\nRUN yum groupinstall -y 'Development Tools' && \\\n    yum install -y epel-release && \\\n    yum update -y && \\\n    yum -y install centos-release-scl-rh && \\\n    yum install -y \\\n    #required by libbpf\n    centos-release-scl \\\n    # required by libbpf\n    devtoolset-11-* \\\n    # required by libbpf\n    elfutils-libelf-devel-static \\\n    git \\\n    net-tools \\\n    # required by Teleport PAM support\n    pam-devel \\\n    perl-IPC-Cmd \\\n    tree \\\n    # used by our Makefile\n    which \\\n    zip \\\n    # required by libbpf\n    zlib-static && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Install etcd.\nRUN ( curl -f -L https://github.com/coreos/etcd/releases/download/v3.3.9/etcd-v3.3.9-linux-amd64.tar.gz | tar -xz && \\\n     cp etcd-v3.3.9-linux-amd64/etcd* /bin/ && \\\n     rm -rf etcd-v3.3.9-linux-${BUILDARCH})\n\n# Install Go.\nRUN mkdir -p /opt && cd /opt && curl -f https://storage.googleapis.com/golang/$GOLANG_VERSION.linux-amd64.tar.gz | tar xz && \\\n    mkdir -p /go/src/github.com/gravitational/teleport && \\\n    chmod a+w /go && \\\n    chmod a+w /var/lib && \\\n    /opt/go/bin/go version\nENV GOPATH=\"/go\" \\\n    GOROOT=\"/opt/go\" \\\n    PATH=\"/opt/llvm/bin:$PATH:/opt/go/bin:/go/bin:/go/src/github.com/gravitational/teleport/build\"\n\nARG BUILDARCH\n\n# Install PAM module and policies for testing.\nCOPY pam/ /opt/pam_teleport/\nRUN make -C /opt/pam_teleport install\n\n# Install Rust.\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH \\\n    RUST_VERSION=$RUST_VERSION\n\nRUN mkdir -p $RUSTUP_HOME && chmod a+w $RUSTUP_HOME && \\\n    mkdir -p $CARGO_HOME/registry && chmod -R a+w $CARGO_HOME\n\nRUN chmod a-w /\n\nUSER ci\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain $RUST_VERSION && \\\n    rustup --version && \\\n    cargo --version && \\\n    rustc --version && \\\n    rustup component add --toolchain $RUST_VERSION-x86_64-unknown-linux-gnu rustfmt clippy && \\\n    cargo install cbindgen\n\n# Do a quick switch back to root and copy/setup libfido2 binaries.\n# Do this last to take better advantage of the multi-stage build.\nUSER root\nCOPY --from=libfido2 /usr/local/include/ /usr/local/include/\nCOPY --from=libfido2 /usr/local/lib64/pkgconfig/ /usr/local/lib64/pkgconfig/\nCOPY --from=libfido2 \\\n    /usr/local/lib64/libcbor.a \\\n    /usr/local/lib64/libcrypto.a \\\n    /usr/local/lib64/libcrypto.so.1.1 \\\n    /usr/local/lib64/libfido2.a \\\n    /usr/local/lib64/libfido2.so.1.11.0 \\\n    /usr/local/lib64/libssl.a \\\n    /usr/local/lib64/libssl.so.1.1 \\\n    /usr/local/lib64/libudev.a \\\n    /usr/local/lib64/\nRUN cd /usr/local/lib64 && \\\n# Re-create usual lib64 links.\n    ln -s libcrypto.so.1.1 libcrypto.so && \\\n    ln -s libfido2.so.1.11.0 libfido2.so.1 && \\\n    ln -s libfido2.so.1 libfido2.so && \\\n    ln -s libssl.so.1.1 libssl.so && \\\n# Update ld.\n    echo /usr/local/lib64 > /etc/ld.so.conf.d/libfido2.conf && \\\n    ldconfig\nCOPY pkgconfig/centos7/ /\nENV PKG_CONFIG_PATH=\"/usr/local/lib64/pkgconfig\"\n\n# Download pre-built CentOS 7 assets with clang needed to build BPF tools.\nRUN cd / && curl -f -L https://s3.amazonaws.com/clientbuilds.gravitational.io/go/centos7-assets.tar.gz | tar -xz\n\n# Copy libbpf into the final image.\nCOPY --from=libbpf /opt/libbpf/usr /usr\n\nUSER ci\nVOLUME [\"/go/src/github.com/gravitational/teleport\"]\nEXPOSE 6600 2379 2380\n"
}