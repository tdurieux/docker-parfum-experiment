{
  "startTime": 1674249303178,
  "endTime": 1674249304313,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VER\n\nFROM node:$NODE_VER\n\nRUN --mount=type=cache,sharing=locked,id=aptlib,target=/var/lib/apt \\\n   --mount=type=cache,sharing=locked,id=aptcache,target=/var/cache/apt \\\n    set -ex && \\\n    apt-get update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# prepare to install only package.json dependencies\nRUN mkdir -p /app\nCOPY package*.json /app/\n\n# copy the rest of the app files\nWORKDIR /app\n\nRUN --mount=type=cache,sharing=locked,id=npm,target=/.cache/npm \\\n    set -ex && \\\n    npm set audit false ; \\\n    npm install && npm cache clean --force;\n\nCOPY . /app\n\n# and build\nRUN --mount=type=cache,sharing=locked,id=npm,target=/.cache/npm \\\n    set -ex && \\\n    npm run build\n\n# tar up the resulting build\nRUN tar -C /app/dist -czf /web-assets.tar.gz . && rm /web-assets.tar.gz\n"
}