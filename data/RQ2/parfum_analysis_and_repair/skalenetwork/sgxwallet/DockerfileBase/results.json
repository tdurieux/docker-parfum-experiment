{
  "startTime": 1674216137150,
  "endTime": 1674216138104,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    autoconf \\\n    automake \\\n    build-essential \\\n    cmake \\\n    curl \\\n    debhelper \\\n    git \\\n    libcurl4-openssl-dev \\\n    libprotobuf-dev \\\n    libssl-dev \\\n    libtool \\\n    lsb-release \\\n    ocaml \\\n    ocamlbuild \\\n    protobuf-compiler \\\n    python \\\n    wget \\\n    libcurl4 \\\n    libprotobuf10 \\\n    libssl1.1 \\\n    make \\\n    module-init-tools \\\n    unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone -b sgx_2.13 --depth 1 https://github.com/intel/linux-sgx\n\nRUN cd linux-sgx && make preparation\n\nWORKDIR /linux-sgx\nCOPY . .\n\nRUN make sdk_install_pkg_no_mitigation\n\nWORKDIR /opt/intel\nRUN sh -c 'echo yes | /linux-sgx/linux/installer/bin/sgx_linux_x64_sdk_*.bin'\n\nWORKDIR /linux-sgx\nRUN make psw_install_pkg\n\nWORKDIR /opt/intel\nRUN cp /linux-sgx/linux/installer/bin/sgx_linux_x64_psw*.bin .\nRUN ./sgx_linux_x64_psw*.bin --no-start-aesm\n\nCOPY . /usr/src/sdk\nRUN ls /usr/src/sdk/autoconf.bash\nWORKDIR /usr/src/sdk\n\nRUN apt update && \\\n    apt install --no-install-recommends -yq apt-utils && \\\n    apt install -yq --no-install-recommends python-yaml vim \\\n        telnet git ca-certificates perl \\\n        reprepro libboost-all-dev alien uuid-dev libxml2-dev ccache \\\n        yasm flex bison libprocps-dev ccache texinfo \\\n        libjsonrpccpp-dev curl libjsonrpccpp-tools && \\\n    ln -s /usr/bin/ccache /usr/local/bin/clang && \\\n    ln -s /usr/bin/ccache /usr/local/bin/clang++ && \\\n    ln -s /usr/bin/ccache /usr/local/bin/gcc && \\\n    ln -s /usr/bin/ccache /usr/local/bin/g++ && \\\n    ln -s /usr/bin/ccache /usr/local/bin/cc && \\\n    ln -s /usr/bin/ccache /usr/local/bin/c++ && rm -rf /var/lib/apt/lists/*;\n\nRUN cd scripts && ./build_deps.py && \\\n       wget --progress=dot:mega -O - https://github.com/intel/dynamic-application-loader-host-interface/archive/072d233296c15d0dcd1fb4570694d0244729f87b.tar.gz | tar -xz && \\\n       cd dynamic-application-loader-host-interface-072d233296c15d0dcd1fb4570694d0244729f87b && \\\n       cmake . -DCMAKE_BUILD_TYPE=Release -DINIT_SYSTEM=SysVinit && \\\n       make install && \\\n       cd .. && rm -rf dynamic-application-loader-host-interface-072d233296c15d0dcd1fb4570694d0244729f87b && \\\n       cd /usr/src/sdk && \\\n       ./autoconf.bash && \\\n       ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n       bash -c \"make -j$(nproc)\"\n"
}