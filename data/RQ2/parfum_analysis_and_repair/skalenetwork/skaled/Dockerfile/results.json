{
  "startTime": 1674254119665,
  "endTime": 1674254120827,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nRUN apt-get install --no-install-recommends -yq software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:ubuntu-toolchain-r/test\nRUN apt-get update\nRUN apt-get install --no-install-recommends -yq gcc-9 g++-9 libprocps-dev ccache \\\n    flex bison yasm python python-pip texinfo clang-format-6.0 btrfs-progs \\\n    cmake libtool build-essential pkg-config autoconf wget git libargtable2-dev \\\n    libmicrohttpd-dev libhiredis-dev redis-server openssl libssl-dev doxygen vim && rm -rf /var/lib/apt/lists/*;\n\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 9\nRUN update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-9 9\nRUN update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-9 9\nRUN update-alternatives --install /usr/bin/gcov-dump gcov-dump /usr/bin/gcov-dump-9 9\nRUN update-alternatives --install /usr/bin/gcov-tool gcov-tool /usr/bin/gcov-tool-9 9\n\nENV CC gcc-9\nENV CXX g++-9\nENV TARGET all\nENV TRAVIS_BUILD_TYPE Debug\n\n#COPY libconsensus /skaled/libconsensus\n#COPY deps /skaled/deps\nWORKDIR /skaled\n#RUN cd libconsensus/scripts && ./build_deps.sh\n#RUN cd deps && ./build.sh\nCOPY . /skaled\nRUN cd /skaled && cd deps && ./build.sh PARALLEL_COUNT=$(nproc) && cd .. && mkdir build && cmake . -Bbuild -DCMAKE_BUILD_TYPE=Release\nRUN bash -c \"cmake --build build  -- -j$(nproc)\"\n#RUN bash -c \"cd /skaled/build/test && ./testeth -- --express\"\n#RUN bash -c \"cd /skaled/build/test && ./testeth -t BtrfsTestSuite -- --all\"\n#RUN bash -c \"cd /skaled/build/test && ./testeth -t HashSnapshotTestSuite -- --all\"\n#RUN bash -c \"cd /skaled/build/test && ./testeth -t ClientSnapshotsSuite -- --all\"\n"
}