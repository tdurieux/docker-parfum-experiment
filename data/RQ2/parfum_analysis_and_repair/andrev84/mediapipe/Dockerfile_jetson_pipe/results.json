{
  "startTime": 1674218654772,
  "endTime": 1674218656095,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 5,
        "columnEnd": 165
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 157
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 122,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 122,
        "columnEnd": 184
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 122,
        "columnEnd": 184
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 164
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 122,
        "columnEnd": 184
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 186
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 122,
        "columnEnd": 211
      }
    }
  ],
  "repairedDockerfile": "FROM nvcr.io/nvidia/l4t-base:r32.4.4\nRUN apt-get update -y\nRUN apt install --no-install-recommends -y wget curl git && rm -rf /var/lib/apt/lists/*;\nRUN apt upgrade -y\n# RUN cd ~ && mkdir bazel && cd bazel && wget https://github.com/bazelbuild/bazel/releases/download/3.4.0/bazel-3.4.0-dist.zip && sudo apt-get install build-essential openjdk-8-jdk python zip unzip && unzip bazel-3.4.0-dist.zip && env EXTRA_BAZEL_ARGS=\"--host_javabase=@local_jdk//:jdk\" bash ./compile.sh && cp ~/bazel/output/bazel /usr/local/bin/\nWORKDIR /io\nWORKDIR /mediapipe\nENV DEBIAN_FRONTEND=noninteractive\nARG HDF5_DIR=\"/usr/lib/aarch64-linux-gnu/hdf5/serial/\"\nARG MAKEFLAGS=-j8\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        ffmpeg \\\n        git \\\n        wget \\\n        unzip \\\n        python3-dev \\\n        python3-opencv \\\n        python3-pip \\\n        libopencv-core-dev \\\n        libopencv-highgui-dev \\\n        libopencv-imgproc-dev \\\n        libopencv-video-dev \\\n        libopencv-calib3d-dev \\\n        libopencv-features2d-dev \\\n        software-properties-common && \\\n    add-apt-repository -y ppa:openjdk-r/ppa && \\\n    apt-get update && apt-get install --no-install-recommends -y openjdk-8-jdk && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pip3 install --no-cache-dir --upgrade setuptools\nRUN pip3 install --no-cache-dir wheel\nRUN pip3 install --no-cache-dir future\nRUN apt update -y\nRUN apt-get install --no-install-recommends libegl1-mesa-dev libgles2-mesa-dev libhdf5-serial-dev hdf5-tools libhdf5-dev zlib1g-dev zip libjpeg8-dev liblapack-dev libblas-dev gfortran -y && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir -U numpy==1.16.1 future==0.18.2 mock==3.0.5 h5py==2.10.0 keras_preprocessing==1.1.1 keras_applications==1.0.8 gast==0.2.2 futures protobuf pybind11\n\nRUN pip3 install --no-cache-dir six\nRUN pip3 install --no-cache-dir setuptools Cython wheel\nRUN pip3 install --no-cache-dir numpy --verbose\nRUN pip3 install --no-cache-dir h5py==2.10.0 --verbose\nRUN pip3 install --no-cache-dir future==0.18.2 mock==3.0.5 h5py==2.10.0 keras_preprocessing==1.1.1 keras_applications==1.0.8 gast==0.2.2 futures protobuf pybind11 --verbose\n\n#RUN pip3 install --pre --extra-index-url https://developer.download.nvidia.com/compute/redist/jp/v44 tensorflow\nARG TENSORFLOW_URL=https://developer.download.nvidia.com/compute/redist/jp/v44/tensorflow/tensorflow-2.3.1+nv20.11-cp36-cp36m-linux_aarch64.whl\nARG TENSORFLOW_WHL=tensorflow-2.3.1+nv20.11-cp36-cp36m-linux_aarch64.whl\n\n\nRUN wget --quiet --show-progress --progress=bar:force:noscroll --no-check-certificate ${TENSORFLOW_URL} -O ${TENSORFLOW_WHL} && \\\n    pip3 install --no-cache-dir ${TENSORFLOW_WHL} --verbose && \\\n    rm ${TENSORFLOW_WHL}\nRUN pip3 install --no-cache-dir tf_slim\n\n#RUN ln -s /usr/bin/python3 /usr/bin/python\n\n# Install bazel\nARG BAZEL_VERSION=3.7.1\n\nRUN mkdir /bazel && cd /bazel && wget https://github.com/bazelbuild/bazel/releases/download/3.7.1/bazel-3.7.1-dist.zip && apt-get install -y --no-install-recommends build-essential openjdk-8-jdk python zip unzip && unzip bazel-3.7.1-dist.zip && env EXTRA_BAZEL_ARGS=\"--host_javabase=@local_jdk//:jdk\" bash ./compile.sh && cp /bazel/output/bazel /usr/local/bin/ && rm -rf /var/lib/apt/lists/*;\n\n\n\nENV PATH=\"/usr/local/cuda/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"/usr/local/cuda/lib64:${LD_LIBRARY_PATH}\"\nRUN echo \"$PATH\" && echo \"$LD_LIBRARY_PATH\"\n\nRUN pip3 install --no-cache-dir pycuda --verbose\nCOPY . /mediapipe/\n#RUN bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 mediapipe/examples/desktop/demo:object_detection_tensorflow_demo\n"
}