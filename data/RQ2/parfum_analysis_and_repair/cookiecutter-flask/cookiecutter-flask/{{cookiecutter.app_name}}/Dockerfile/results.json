{
  "startTime": 1674252609745,
  "endTime": 1674252610813,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ================================== BUILDER ===================================\nARG INSTALL_PYTHON_VERSION=${INSTALL_PYTHON_VERSION:-PYTHON_VERSION_NOT_SET}\nARG INSTALL_NODE_VERSION=${INSTALL_NODE_VERSION:-NODE_VERSION_NOT_SET}\n\nFROM node:${INSTALL_NODE_VERSION}-buster-slim AS node\nFROM python:${INSTALL_PYTHON_VERSION}-slim-buster AS builder\n\nWORKDIR /app\n\nCOPY --from=node /usr/local/bin/ /usr/local/bin/\nCOPY --from=node /usr/lib/ /usr/lib/\n# See https://github.com/moby/moby/issues/37965\nRUN true\nCOPY --from=node /usr/local/lib/node_modules /usr/local/lib/node_modules\n\n{%- if cookiecutter.use_pipenv == \"True\" %}\nCOPY [\"Pipfile\", \"shell_scripts/auto_pipenv.sh\", \"./\"]\nRUN pip install --no-cache-dir --no-cache pipenv\nRUN pipenv install\n{%- else %}\nCOPY requirements requirements\nRUN pip install --no-cache-dir --no-cache -r requirements/prod.txt\n{%- endif %}\n\nCOPY package.json ./\nRUN npm install && npm cache clean --force;\n\nCOPY webpack.config.js autoapp.py ./\nCOPY {{cookiecutter.app_name}} {{cookiecutter.app_name}}\nCOPY assets assets\nCOPY .env.example .env\nRUN npm run-script build\n\n# ================================= PRODUCTION =================================\nFROM python:${INSTALL_PYTHON_VERSION}-slim-buster as production\n\nWORKDIR /app\n\nRUN useradd -m sid\nRUN chown -R sid:sid /app\nUSER sid\nENV PATH=\"/home/sid/.local/bin:${PATH}\"\n\nCOPY --from=builder --chown=sid:sid /app/{{ cookiecutter.app_name }}/static /app/{{ cookiecutter.app_name }}/static\n\n{%- if cookiecutter.use_pipenv == \"True\" %}\nCOPY [\"Pipfile\", \"shell_scripts/auto_pipenv.sh\", \"./\"]\nRUN pip install --no-cache-dir --no-cache pipenv\nRUN pipenv install\n{%- else %}\nCOPY requirements requirements\nRUN pip install --no-cache-dir --no-cache --user -r requirements/prod.txt\n{%- endif %}\n\nCOPY supervisord.conf /etc/supervisor/supervisord.conf\nCOPY supervisord_programs /etc/supervisor/conf.d\n\nCOPY . .\n\nEXPOSE 5000\nENTRYPOINT [\"/bin/bash\", \"shell_scripts/supervisord_entrypoint.sh\"]\nCMD [\"-c\", \"/etc/supervisor/supervisord.conf\"]\n\n\n# ================================= DEVELOPMENT ================================\nFROM builder AS development\n\n{%- if cookiecutter.use_pipenv == \"True\" %}\nRUN pipenv install --dev\n{%- else %}\nRUN pip install --no-cache-dir --no-cache -r requirements/dev.txt\n{%- endif %}\nEXPOSE 2992\nEXPOSE 5000\nCMD [ {% if cookiecutter.use_pipenv == 'True' %}\"pipenv\", \"run\", {% endif %}\"npm\", \"start\" ]\n"
}