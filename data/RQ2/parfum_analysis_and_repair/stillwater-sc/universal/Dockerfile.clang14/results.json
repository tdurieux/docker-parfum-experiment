{
  "startTime": 1674251687530,
  "endTime": 1674251688982,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 43,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# multi-stage build\n# docker build --target builder -t stillwater/universal:builder will just build a builder container\n# docker build --target release -t stillwater/universal:release will just build a release container\n\n# BUILDER stage\nFROM stillwater/universal:clang14.builder as builder\nLABEL Theodore Omtzigt\nARG target=BUILD_ALL\n\n# make certain you have a good .dockerignore file installed so that this layer isn't ginormous\nCOPY --chown=stillwater:stillwater . /home/stillwater/universal\n# print contextual information of the container at this state for visual inspection\nRUN ls -la /home/stillwater/universal && cmake -version\n\n# set up the cmake/make environment to issue the build commands\nRUN mkdir -p /home/stillwater/universal/build\nWORKDIR /home/stillwater/universal/build\n# test RUN statement to drive CI testing\n# default is SANITY regression level: -DBUILD_REGRESSION_LEVEL_[1,2,3,4]=ON\n# or -DBUILD_REGRESSION_STRESS=ON for stress testing\nRUN cmake -D$target=ON  -DBUILD_CMD_LINE_TOOLS=ON -DBUILD_DEMONSTRATION=OFF .. && make\n\n# the command 'make test' is run as part of the CI test pipeline of the release container\n\n\n# RELEASE stage\n#FROM alpine:latest as release    # hitting a segfault during startup of some playground programs\n#FROM debian:buster-slim as release\nFROM ubuntu:20.04 as release\nLABEL Theodore Omtzigt\n\n#RUN apk add --no-cache libc6-compat libstdc++ cmake make bash gawk sed grep bc coreutils\nRUN apt-get update && apt-get update -y && apt-get install -y --no-install-recommends \\\n    make \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n# create and use user stillwater\nRUN useradd -ms /bin/bash stillwater\nUSER stillwater\n\n# copy cmake enviroment needed for testing\nCOPY --from=builder /usr/local/bin/cmake /usr/local/bin/\nCOPY --from=builder /usr/local/bin/ctest /usr/local/bin/\n# copy information material\nCOPY --from=builder /home/stillwater/universal/*.md /home/stillwater/universal/\n# copy the docs\nCOPY --chown=stillwater:stillwater --from=builder /home/stillwater/universal/docs /home/stillwater/universal/docs\n# no need to copy CMakeLists.txt as you don't have a compiler in this container\n# and thus 'make -j 8' won't work anyway, only 'make test' which doesn't need CmakeLists.txt\n#COPY --from=builder /home/stillwater/universal/CMakeLists.txt /home/stillwater/universal/\n\n# after building, the test executables are organized in the build directory under stillwater\n# ctest gets its configuration for CTestTestfile.cmake files. There is one at the root of the build tree\n# and one for each directory that contains test executables.\n# This way we can execute _make test_ in the test stage of the CI/CD pipeline as well as part of an interactive invocation\nCOPY --chown=stillwater:stillwater --from=builder /home/stillwater/universal/build /home/stillwater/universal/build\n\n# copy the CLI tools to /usr/local/bin so they are immediately usable\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/areal /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/double /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/fixpnt /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/float /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/float2posit /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/ieee /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/lns /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/longdouble /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/plimits /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/posit /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/prop* /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/signedint /usr/local/bin/\nCOPY --from=builder /home/stillwater/universal/build/tools/cmd/unsignedint /usr/local/bin/\n#COPY --from=builder /home/stillwater/universal/build/validation/hw/* /usr/local/bin/\n\n# double check we have all the executables of interest\n#RUN find /home/stillwater/universal/build\n\n# until we can figure out how to direct CodeShip to use this dir in the steps.yml file\nWORKDIR /home/stillwater/universal/build\n\n# the command 'make test' is run as part of the CI test pipeline of this release container\n\nCMD [\"echo\", \"Universal Numbers Release Container\"]\n"
}