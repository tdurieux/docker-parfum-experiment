{
  "startTime": 1674253270230,
  "endTime": 1674253270880,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#This file is part of ElectricEye.\n#SPDX-License-Identifier: Apache-2.0\n\n#Licensed to the Apache Software Foundation (ASF) under one\n#or more contributor license agreements.  See the NOTICE file\n#distributed with this work for additional information\n#regarding copyright ownership.  The ASF licenses this file\n#to you under the Apache License, Version 2.0 (the\n#\"License\"); you may not use this file except in compliance\n#with the License.  You may obtain a copy of the License at\n\n#http://www.apache.org/licenses/LICENSE-2.0\n\n#Unless required by applicable law or agreed to in writing,\n#software distributed under the License is distributed on an\n#\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#KIND, either express or implied.  See the License for the\n#specific language governing permissions and limitations\n#under the License.\n\n# latest hash as of 8 MAR 2022 - Alpine 3.15.4\n# https://hub.docker.com/layers/alpine/library/alpine/3.15.4/images/sha256-a777c9c66ba177ccfea23f2a216ff6721e78a662cd17019488c417135299cd89?context=explore\n# use as builder image to pull in required deps\nFROM alpine@sha256:a777c9c66ba177ccfea23f2a216ff6721e78a662cd17019488c417135299cd89 AS builder\n\n# This hack is widely applied to avoid python printing issues in docker containers.\n# See: https://github.com/Docker-Hub-frolvlad/docker-alpine-python3/pull/13\nENV PYTHONUNBUFFERED=1\n\nCOPY requirements.txt /tmp/requirements.txt\n# NOTE: This will copy all application files and auditors to the container\nCOPY ./eeauditor/ /eeauditor/\n# Installing dependencies\nRUN \\\n    apk update && \\\n    apk add --no-cache python3 postgresql-libs bash nmap && \\\n    apk add --no-cache --virtual .build-deps gcc python3-dev musl-dev postgresql-dev && \\\n    python3 -m ensurepip && \\\n    pip3 install --no-cache-dir --no-cache --upgrade pip setuptools wheel && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install -r /tmp/requirements.txt --no-cache-dir && \\\n    apk --purge del .build-deps && \\\n    rm -f /var/cache/apk/*\n\n# new stage to bring in Labels and ENV Vars\nFROM builder as electriceye\n\nENV \\\n    SH_SCRIPTS_BUCKET=SH_SCRIPTS_BUCKET \\\n    # SHODAN ENV VARS\n    SHODAN_API_KEY_PARAM=SHODAN_API_KEY_PARAM \\\n    # DISRUPTOPS ENV VARS\n    DOPS_CLIENT_ID_PARAM=DOPS_CLIENT_ID_PARAM \\\n    DOPS_API_KEY_PARAM=DOPS_API_KEY_PARAM \\\n    # POSTGRES VARS\n    POSTGRES_USERNAME=POSTGRES_USERNAME \\\n    ELECTRICEYE_POSTGRESQL_DB_NAME=ELECTRICEYE_POSTGRESQL_DB_NAME \\\n    POSTGRES_DB_ENDPOINT=POSTGRES_DB_ENDPOINT \\\n    POSTGRES_DB_PORT=POSTGRES_DB_PORT \\\n    POSTGRES_PASSWORD_SSM_PARAM_NAME=POSTGRES_PASSWORD_SSM_PARAM_NAME \\\n    # DOCUMENTDB/MONGO VARS\n    MONGODB_USERNAME=MONGODB_USERNAME \\\n    MONGODB_HOSTNAME=MONGODB_HOSTNAME \\\n    MONGODB_PASSWORD_PARAMETER=MONGODB_PASSWORD_PARAMETER\n\nLABEL \\ \n    maintainer=\"https://github.com/jonrau1\" \\\n    version=\"3.1\" \\\n    license=\"Apache-2.0\" \\\n    description=\"ElectricEye continuously monitor your AWS services for configurations that can lead to degradation of confidentiality, integrity \\ \n    or availability. All results can be exported to Security Hub, JSON, CSV, Databases, and more for further aggregation and analysis.\"\n\n# Create a System Group and User for ElectricEye so we don't run as root\nRUN \\\n    addgroup -S eeuser && \\ \n    adduser -S -G eeuser eeuser && \\\n    chown eeuser /eeauditor && \\\n    chown eeuser /eeauditor/* && \\\n    chgrp eeuser /eeauditor && \\\n    chown -R eeuser:eeuser /eeauditor/* && \\\n    chown -R eeuser:eeuser /eeauditor\n\nUSER eeuser\n\nCMD \\\n    # Upon startup we will run all checks and auditors - we grab the latest from S3\n    # in case there are updates so you can just grab the latest auditors from the\n    # bucket versus rebuilding the entire Docker image!\n    aws s3 cp s3://${SH_SCRIPTS_BUCKET}/ /eeauditor/auditors/aws/ --recursive && \\\n    # this would also be a good place to modify the `controller.py` command to output to where you wanted if you didn't want sechub\n    python3 eeauditor/controller.py"
}