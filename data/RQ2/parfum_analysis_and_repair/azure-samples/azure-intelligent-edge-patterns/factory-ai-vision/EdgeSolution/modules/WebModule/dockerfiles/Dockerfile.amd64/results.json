{
  "startTime": 1674251206978,
  "endTime": 1674251207836,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# =========================================================\n# === Build Static UI                                   ===\n# =========================================================\nFROM node:12 as builder\n\nWORKDIR /app\nCOPY ui/package.json .\nCOPY ui/yarn.lock .\nRUN yarn install --production && yarn cache clean;\nCOPY ui/tsconfig.json .\nCOPY ui/src/ ./src\nCOPY ui/public/ ./public\nRUN yarn build\n\nARG GIT_LOG\nRUN echo ${GIT_LOG} > ./build/static/git_sha1.txt\n\n# =========================================================\n# === Build Backend Base                                ===\n# =========================================================\nFROM amd64/python:3.8-slim-buster as backend-base\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    libgl1-mesa-glx \\\n    && rm -rf /var/lib/apt/lists/*\n# libgl1-mesa-glx: opencv2 libGL.so error workaround\n\n\n# =========================================================\n# === Build Backend Production                          ===\n# =========================================================\nFROM backend-base as backend-production\n\nWORKDIR /app\n\nRUN python -m pip install --upgrade pip\n\nCOPY backend/requirements/core.txt requirements/core.txt\nRUN pip install --no-cache-dir -r ./requirements/core.txt\n\nCOPY backend/requirements/base.txt requirements/base.txt\nRUN pip install --no-cache-dir -r ./requirements/base.txt\n\nCOPY backend/requirements/production-x86.txt requirements/production-x86.txt\nRUN pip install --no-cache-dir -r ./requirements/production-x86.txt\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    libglib2.0-0 && rm -rf /var/lib/apt/lists/*;\n\n\nCOPY backend/manage.py .\nCOPY backend/config.py .\nCOPY backend/vision_on_edge vision_on_edge\nCOPY backend/configs configs\nRUN python manage.py makemigrations\nRUN python manage.py migrate\n\nCOPY --from=builder /app/build vision_on_edge/ui_production\nEXPOSE 8000\n\nCMD python manage.py runserver 0.0.0.0:8000\n"
}