{
  "startTime": 1674221212855,
  "endTime": 1674221213487,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM intelligentedge/python3-opencv:py3.8.6-cv4.4.0.44-arm64v8\n\nWORKDIR /app\n\nARG SYSTEM_CORES=8\n\n# =========================================================\n# Install system packages\n# =========================================================\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    cmake \\\n    yasm \\\n    pkg-config \\\n    libtbb2 \\\n    libtbb-dev \\\n    libpq-dev \\\n    ca-certificates \\\n    bzip2 \\\n    libgeos-dev \\\n    curl \\\n    libcurl4-openssl-dev \\\n    libssl-dev && \\\n    rm -rf /var/lib/apt/lists/*\n# libgeos-dev:         Shapely\n\n# =========================================================\n# Install Python package\n# =========================================================\nWORKDIR /app\nRUN echo \"/usr/bin/make --jobs=${SYSTEM_CORES} \\$@\" > /usr/local/bin/make && \\\n    chmod 755 /usr/local/bin/make\nRUN pip install --no-cache-dir --upgrade pip\n\nCOPY requirements/base.txt ./requirements/base.txt\n# Workaround scikit image requires numpy while dependency is not resolved\n#RUN --mount=type=cache,target=/root/.cache/pip \\\n#    pip install $(cat ./requirements/base.txt | grep numpy)\n#RUN --mount=type=cache,target=/root/.cache/pip \\\nRUN pip install --no-cache-dir -r requirements/base.txt\n\nRUN rm /usr/local/bin/make\n\n# =========================================================\n# Copy Source Code\n# =========================================================\nWORKDIR /app\nCOPY coco_classes.txt ./\nCOPY default_model default_model/\nCOPY default_model_6parts default_model_6parts/\nCOPY grpc_topology.json ./\nCOPY http_topology.json ./\nCOPY sample_video sample_video/\nCOPY scenario_models scenario_models/\nRUN chmod 777 sample_video/video.mp4\nRUN chmod 777 default_model\n\nCOPY api/__init__.py ./api/__init__.py\nCOPY api/models.py ./api/models.py\nCOPY arguments.py ./\nCOPY config.py ./\nCOPY exception_handler.py ./\nCOPY extension_pb2.py ./\nCOPY extension_pb2_grpc.py ./\nCOPY http_inference_engine.py ./\nCOPY img.png ./\nCOPY inference_engine.py ./\nCOPY inferencing_pb2.py ./\nCOPY invoke.py ./\nCOPY logging_conf/logging_config.py ./logging_conf/logging_config.py\nCOPY main.py ./\nCOPY media_pb2.py ./\nCOPY model_object.py ./\nCOPY model_wrapper.py ./\nCOPY object_detection.py ./\nCOPY object_detection2.py ./\nCOPY onnxruntime_predict.py ./\nCOPY scenarios.py ./\nCOPY server.py ./\nCOPY shared_memory.py ./\nCOPY sort.py ./\nCOPY stream_manager.py ./\nCOPY streams.py ./\nCOPY tracker.py ./\nCOPY utility.py ./\nCOPY ovms_utils.py ./\nCOPY yolo_utils.py ./\n\n# =========================================================\n# Run\n# =========================================================\nEXPOSE 5558\nEXPOSE 5000\n\nCMD [ \"python\", \"server.py\", \"-p\", \"44000\"]\n"
}