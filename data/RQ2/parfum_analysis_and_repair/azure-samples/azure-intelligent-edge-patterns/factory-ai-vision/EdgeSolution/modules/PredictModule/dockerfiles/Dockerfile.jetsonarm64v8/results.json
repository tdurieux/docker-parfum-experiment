{
  "startTime": 1674218703470,
  "endTime": 1674218704180,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# =========================================================\n# Base\n# =========================================================\n#ARG BASE_IMAGE=nvcr.io/nvidia/l4t-base:r32.4.3\nARG BASE_IMAGE=intelligentedge/onnxruntime-opencv:4.4.0.44-arm64v8\nFROM ${BASE_IMAGE} as base\n\nWORKDIR /app\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US.UTF-8\nARG SYSTEM_CORES=4\n\n# =========================================================\n# Install system packages\n# =========================================================\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    cmake \\\n    git \\\n    wget \\\n    unzip \\\n    yasm \\\n    pkg-config \\    \n    libtbb2 \\\n    libtbb-dev \\\n    libpq-dev \\\n    libprotobuf-dev \\\n    protobuf-compiler \\\n    libgeos-dev \\\n    ca-certificates \\\n    bzip2 \\\n    unzip \\\n    curl \\\n    libcurl4-openssl-dev \\\n    libssl-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\n# protobuf-compiler:   https://github.com/onnx/onnx#build-onnx-on-arm-64\n# libprotobuf-dev:     https://github.com/onnx/onnx#build-onnx-on-arm-64\n# libgeos-dev:         Shapely\n\n# =========================================================\n# Install Python package\n# =========================================================\nWORKDIR /app\n#RUN echo \"/usr/bin/make --jobs=${SYSTEM_CORES} \\$@\" > /usr/local/bin/make && \\\n#    chmod 755 /usr/local/bin/make\n#\n#RUN --mount=type=cache,target=/root/.cache/pip \\\n#    pip uninstall -y onnx && \\\n#    pip install onnx\n\nCOPY requirements/base.txt ./requirements/base.txt\n\n#RUN --mount=type=cache,target=/root/.cache/pip \\\n#    pip install --upgrade pip && \\\n#    pip install wheel cython protobuf\n# Workaround scikit image requires numpy while dependency is not resolved\n#\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    pip install --no-cache-dir -r requirements/base.txt\n\n# =========================================================\n# Shapely Work around\n# =========================================================\n#RUN cp /usr/lib/aarch64-linux-gnu/libgeos* /opt/conda/envs/python38/lib/\n\n# =========================================================\n# Copy Source Code\n# =========================================================\nWORKDIR /app\n\nCOPY coco_classes.txt ./\nCOPY default_model default_model/\nCOPY default_model_6parts default_model_6parts/\nCOPY sample_video sample_video/\nCOPY scenario_models scenario_models/\nRUN chmod 777 sample_video/video.mp4\nRUN chmod 777 default_model\n\nCOPY api/__init__.py ./api/__init__.py\nCOPY api/models.py ./api/models.py\nCOPY config.py ./\nCOPY exception_handler.py ./\nCOPY logging_conf/logging_config.py ./logging_conf/logging_config.py\nCOPY model_wrapper.py ./\nCOPY object_detection.py ./\nCOPY object_detection2.py ./\nCOPY onnxruntime_predict.py ./\nCOPY server.py ./\nCOPY utility.py ./\n\nEXPOSE 7777\n\n#CMD source activate activate python38 && python3 server.py\nCMD python3 server.py\n"
}