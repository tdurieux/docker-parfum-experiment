{
  "startTime": 1674253703923,
  "endTime": 1674253704717,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# =========================================================\n# === Build Static UI                                   ===\n# =========================================================\nFROM node:12 as builder\n\nWORKDIR /app\nCOPY ui/package.json .\nCOPY ui/yarn.lock .\nRUN yarn install --production && yarn cache clean;\nCOPY ui/tsconfig.json .\nCOPY ui/src/ ./src\nCOPY ui/public/ ./public\nRUN yarn build\n\nARG GIT_LOG\nRUN echo ${GIT_LOG} > ./build/static/git_sha1.txt\n\n# =========================================================\n# === Build Backend                                     ===\n# =========================================================\nFROM intelligentedge/python3-opencv:py3.8.6-cv4.4.0.44-arm64v8\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    build-essential \\\n    libffi-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# =========================================================\n# === Build Backend Production                          ===\n# =========================================================\n\nWORKDIR /app\n\nRUN python -m pip install --upgrade pip\n\nCOPY backend/requirements/core.txt requirements/core.txt\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    pip install --no-cache-dir -r ./requirements/core.txt\n\nCOPY backend/requirements/base.txt requirements/base.txt\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    pip install --no-cache-dir -r ./requirements/base.txt\n\nCOPY backend/requirements/production-arm.txt requirements/production-arm.txt\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    pip install --no-cache-dir -r ./requirements/production-arm.txt\n\nCOPY backend/manage.py .\nCOPY backend/config.py .\nCOPY backend/vision_on_edge vision_on_edge\nCOPY backend/configs configs\nRUN python manage.py makemigrations\nRUN python manage.py migrate\n\nCOPY --from=builder /app/build vision_on_edge/ui_production\nEXPOSE 8000\n\nCMD python manage.py runserver 0.0.0.0:8000\n"
}