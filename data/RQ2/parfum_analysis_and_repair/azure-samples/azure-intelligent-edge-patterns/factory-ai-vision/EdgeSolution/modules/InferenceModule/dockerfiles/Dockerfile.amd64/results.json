{
  "startTime": 1674250475391,
  "endTime": 1674250475977,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "# =========================================================\n# Base\n# =========================================================\nFROM amd64/python:3.8-slim-buster\n\nWORKDIR /app\n\n# =========================================================\n# Install system packages\n# =========================================================\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    libffi-dev \\\n    libgl1-mesa-glx \\\n    libgtk2.0-dev \\\n    libssl-dev \\\n    unzip \\\n    && rm -rf /var/lib/apt/lists/*\n# libgl1-mesa-glx: opencv2 libGL.so error workaround\n\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y locales \\\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && dpkg-reconfigure --frontend=noninteractive locales \\\n    && update-locale LANG=en_US.UTF-8 \\\n    && rm -rf /var/lib/apt/lists/*\n\n# TODO: Consider move env to the end of dockerfile\nENV LANG en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# =========================================================\n# Install Python package\n# =========================================================\nCOPY requirements/base.txt ./requirements/base.txt\nCOPY requirements/cpu.txt ./requirements/cpu.txt\nRUN pip install --no-cache-dir --upgrade pip\nRUN --mount=type=cache,target=/root/.cache/pip \\\n    pip install --no-cache-dir -r requirements/cpu.txt --ignore-installed \\\n    pip install -U pydantic==1.7.2\n\nRUN apt-get install -y --no-install-recommends libglib2.0-0 && rm -rf /var/lib/apt/lists/*;\n\n# ENV CONDA_ENV_NAME python38\n# RUN conda create --name python38 python=3.8.5 -y &&\\\n#     . activate python38\n# RUN [ \"/bin/bash\", \"-c\", \"source activate python38 && pip install --upgrade pip\"]\n# RUN [ \"/bin/bash\", \"-c\", \"source activate python38 && pip install -r requirements/cpu.txt --ignore-installed\"]\n\n# =========================================================\n# Copy Source Code\n# =========================================================\nCOPY coco_classes.txt ./\n# COPY default_model default_model/\n# COPY default_model_6parts default_model_6parts/\nCOPY grpc_topology.json ./\nCOPY http_topology.json ./\n# COPY sample_video sample_video/\n# COPY scenario_models scenario_models/\n# RUN chmod 777 sample_video/video.mp4\n# RUN chmod 777 default_model\n\nCOPY api/__init__.py ./api/__init__.py\nCOPY api/models.py ./api/models.py\nCOPY arguments.py ./\nCOPY config.py ./\nCOPY exception_handler.py ./\nCOPY extension_pb2.py ./\nCOPY extension_pb2_grpc.py ./\nCOPY http_inference_engine.py ./\nCOPY img.png ./\nCOPY inference_engine.py ./\nCOPY inferencing_pb2.py ./\nCOPY invoke.py ./\nCOPY logging_conf/logging_config.py ./logging_conf/logging_config.py\nCOPY main.py ./\nCOPY media_pb2.py ./\nCOPY model_object.py ./\nCOPY model_wrapper.py ./\nCOPY object_detection.py ./\nCOPY object_detection2.py ./\nCOPY onnxruntime_predict.py ./\nCOPY scenarios.py ./\nCOPY server.py ./\nCOPY shared_memory.py ./\nCOPY sort.py ./\nCOPY stream_manager.py ./\nCOPY streams.py ./\nCOPY tracker.py ./\nCOPY utility.py ./\nCOPY ovms_utils.py ./\nCOPY yolo_utils.py ./\nCOPY cascade/*.py ./cascade/\n\n\n# remove pip cache\n# RUN pip cache purge\n\n# =========================================================\n# Run\n# =========================================================\nEXPOSE 5558\nEXPOSE 5000\n\nCMD [ \"python\", \"server.py\", \"-p\", \"44000\"]\n"
}