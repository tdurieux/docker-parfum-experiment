{
  "startTime": 1674254897825,
  "endTime": 1674254898689,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.16.1-alpine\n\n# Docker build file for this project.\n# See the several \"docker_run_xxx\" scripts in this repo to execute this container.\n# Chris Joakim, Microsoft, 2021/10/08\n\n# Create app directories\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nRUN mkdir -p /usr/src/app/bin && rm -rf /usr/src/app/bin\nRUN mkdir -p /usr/src/app/webapp/ && rm -rf /usr/src/app/webapp/\nRUN mkdir -p /usr/src/app/webapp/bin && rm -rf /usr/src/app/webapp/bin\n\nWORKDIR /usr/src/app\n\nCOPY . /usr/src/app\n\nRUN rm -rf node_modules/\nRUN npm install && npm cache clean --force;\n\nRUN cd webapp/\nRUN rm -rf node_modules/\nRUN npm install && npm cache clean --force;\n\nEXPOSE 3000\n\n# Use this CMD when building the Docker image for use as a webapp only,\n# such as for the aci-create-instance.sh script in this repo.\nCMD  node webapp/bin/www\n\n\n# Docker Commands:\n# docker build -t cjoakim/azure-cosmos-db-graph-npm-bom-sample .\n# docker image ls cjoakim/azure-cosmos-db-graph-npm-bom-sample:latest\n# docker run --rm cjoakim/azure-cosmos-db-graph-npm-bom-sample:latest ls -alR > tmp/docker-container-contents.txt\n# docker run -d -e PORT=3000 -p 3000:3000 cjoakim/azure-cosmos-db-graph-npm-bom-sample:latest\n# docker ps\n# docker stop -t 2 86b125ed43e5  (where 86b125ed43e5 is the CONTAINER ID from 'docker ps')\n\n# Docker Hub:\n# docker push cjoakim/azure-cosmos-db-graph-npm-bom-sample:latest\n\n# Azure Container Registry:\n# az acr login --name youracr\n# docker tag cjoakim/azure-cosmos-db-graph-npm-bom-sample:latest cjoakimacr.azurecr.io/azure-cosmos-db-graph-npm-bom-sample:latest\n# docker push youracr.azurecr.io/azure-cosmos-db-graph-npm-bom-sample:latest\n# az acr repository list --name youracr --output table\n"
}