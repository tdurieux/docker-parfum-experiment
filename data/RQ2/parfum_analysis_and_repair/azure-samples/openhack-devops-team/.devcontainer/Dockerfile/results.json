{
  "startTime": 1674248216381,
  "endTime": 1674248217927,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 120
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 68,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster\n\n# This Dockerfile adds a non-root user with sudo access. Use the \"remoteUser\"\n# property in devcontainer.json to use it. On Linux, the container user's GID/UIDs\n# will be updated to match your local UID/GID (when using the dockerFile property).\n# See https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Configure apt, install base packages, SDKs & tools\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y git less procps lsb-release curl wget ca-certificates apt-transport-https gnupg \\\n    && curl -f -sL https://packages.microsoft.com/config/debian/10/prod.list -o /etc/apt/sources.list.d/microsoft-prod.list \\\n    && curl -f -sL https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor | tee /etc/apt/trusted.gpg.d/microsoft.asc.gpg > /dev/null \\\n    && echo \"deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ buster main\" | tee /etc/apt/sources.list.d/azure-cli.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y azure-cli openjdk-11-jdk dotnet-sdk-3.1 && rm -rf /var/lib/apt/lists/*;\n\n# Golang\nWORKDIR /tmp\nRUN curl -fsS https://dl.google.com/go/go1.16.8.linux-amd64.tar.gz -o golang.tar.gz \\\n    && tar -xvf golang.tar.gz \\\n    && rm -rf /usr/local/go \\\n    && mv go /usr/local && rm golang.tar.gz\nENV GO111MODULE=on\nENV CGO_ENABLED=0\n\n# Maven\nRUN curl -f -sSL https://downloads.apache.org/maven/maven-3/3.6.3/binaries/apache-maven-3.6.3-bin.tar.gz -o maven.tar.gz \\\n    && tar -xzf maven.tar.gz \\\n    && mv apache-maven-3.6.3 /opt \\\n    && rm maven.tar.gz\n\n# Node 12.x\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Docker client\nRUN curl -f -sSL https://download.docker.com/linux/static/stable/x86_64/docker-20.10.8.tgz -o docker.tgz \\\n    && tar -zxvf docker.tgz docker/docker \\\n    && chmod +x docker/docker \\\n    && mv docker/docker /usr/bin/docker \\\n    && rm -rf docker \\\n    && rm docker.tgz\n\n# Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    # [Optional] Add sudo support \\\n    && apt-get install --no-install-recommends -y sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME \\\n    && groupadd docker || true \\\n    && usermod -aG docker $USERNAME && rm -rf /var/lib/apt/lists/*;\n\n# Cleanup apt\nRUN apt-get autoremove -y \\\n    && apt-get clean -y\n\n# Paths and user set up\nRUN echo 'export PATH=\"$HOME/go/bin:/usr/local/go/bin:/opt/apache-maven-3.6.3/bin:$PATH\"' >> /etc/bash.bashrc\nRUN echo 'export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64' >> /etc/bash.bashrc\nWORKDIR /home/$USERNAME"
}