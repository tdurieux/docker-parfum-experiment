{
  "startTime": 1674256040597,
  "endTime": 1674256041218,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 9,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 9,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##################\n# Python builder #\n##################\n\nFROM python:3.10 as builder\n\nENV PYTHONBUFFERED=1\n# Activate the virtualenv\nENV PATH=\"/venv/bin:$PATH\"\n\n# - Install system packages needed for building Python dependencies\n# - Create a virtualenv inside `/venv`\n# - Install Pipenv to install Python dependencies\nRUN apt-get update \\\n      && apt-get install --no-install-recommends -y python3-dev \\\n      && rm -rf /var/lib/apt/lists/* \\\n    && python -m venv /venv \\\n    && pip install --no-cache-dir --upgrade pipenv\n\n# Copy the Pipenv files into the container\nCOPY Pipfile Pipfile.lock ./\n\n# Install Python dependencies system-wide (uses the active virtualenv)\nRUN pipenv install --system --deploy --dev\n\n####################\n# Ingestion server #\n####################\n\nFROM python:3.10-slim as ing\n\nENV PYTHONBUFFERED=1\n# Activate the virtualenv\nENV PATH=\"/venv/bin:$PATH\"\n\nENV PYTHONPATH=\"$PYTHONPATH:/ingestion_server/\"\n# TLDEXTRACT fails to cache in /home/supervisord, set its cache to /tmp instead\nENV TLDEXTRACT_CACHE=\"/tmp/python-tldextract\"\n\nWORKDIR /ingestion_server\n\n# Copy virtualenv from the builder image\nCOPY --from=builder /venv /venv\n\n# - Install system packages needed for running Python dependencies\n#   - libpq-dev: required by `psycopg2`\n# - Create directory for holding worker state\nRUN apt-get update \\\n      && apt-get install --no-install-recommends -y curl libpq-dev \\\n      && rm -rf /var/lib/apt/lists/* \\\n    && mkdir /worker_state\n\n# Copy code into the final image\nCOPY . /ingestion_server/\n\n# Exposes\n# - 8001: Gunicorn server for `ingestion_server` Falcon app\n# - 8002: Gunicorn server for `indexer_worker` Falcon app\nEXPOSE 8001 8002\n\n# CMD is set from Docker Compose\n"
}