{
  "startTime": 1674253626361,
  "endTime": 1674253627495,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-fpm\n\n# Install additional packages.\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        build-essential \\\n        git \\\n        less \\\n        libicu-dev \\\n        libjpeg-dev \\\n        libpng-dev \\\n        libzip-dev \\\n        libsqlite3-dev \\\n        libxext6 \\\n        mariadb-client \\\n        msmtp \\\n        msmtp-mta \\\n        nano \\\n        nginx \\\n        ruby-dev \\\n        subversion \\\n        vim \\\n        wget && rm -rf /var/lib/apt/lists/*;\n\n# Install additional PHP extensions.\nRUN docker-php-ext-configure intl\nRUN docker-php-ext-configure gd --with-jpeg\nRUN docker-php-ext-install -j \"$(nproc)\" \\\n    gd \\\n    intl \\\n    mysqli \\\n    opcache \\\n    zip\n\n# Add PHP configurations.\nCOPY config/opcache-recommended.ini /usr/local/etc/php/conf.d/opcache-recommended.ini\nCOPY config/error-logging.ini /usr/local/etc/php/conf.d/error-logging.ini\n\n# Install SSL certificate.\nCOPY wordcamp.test.pem     /etc/ssl/certs/wordcamp.test.pem\nCOPY wordcamp.test.key.pem /etc/ssl/private/wordcamp.test.key.pem\n\n# Install `wkhtmltopdf` for WordCamp Docs, CampTix Invoices, etc. See https://stackoverflow.com/a/38336153/1845153\nRUN curl -f -L https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz > wkhtmltox.tar.xz\nRUN tar xvf wkhtmltox.tar.xz && rm wkhtmltox.tar.xz\nRUN mv wkhtmltox/bin/wkhtmlto* /usr/bin/\nRUN rm -rf wkhtmltox*\n\n# Install WP-CLI.\nRUN curl -f -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar\nRUN chmod +x wp-cli.phar\nRUN mv wp-cli.phar /usr/local/bin/wp\n\n# Set up msmtp (used for MailCatcher).\n# The config file needs the right owner/permissions before msmtp can use it.\nCOPY config/msmtprc /etc/msmtprc\nRUN chown www-data /etc/msmtprc\nRUN chmod 600 /etc/msmtprc\n\n# Install MailCatcher.\nRUN gem install mailcatcher --no-document\n\n# todo Maybe install phpMyAdmin?\n\n# Tweak the php.ini file\nRUN sed -i -e \"s|;sendmail_path =|sendmail_path = /usr/bin/msmtp -C /etc/msmtprc -t |\" /usr/local/etc/php/php.ini-development\nRUN sed -i -e \"s/smtp_port = 25/smtp_port = 1025/\" /usr/local/etc/php/php.ini-development\nRUN sed -i -e \"s/memory_limit = 128/memory_limit = 256/\" /usr/local/etc/php/php.ini-development\n\n# Initialize customized php.ini file.\nRUN cp /usr/local/etc/php/php.ini-development /usr/local/etc/php/php.ini\n\nWORKDIR /usr/src/public_html\n\nENTRYPOINT [\"bash\", \"/var/scripts/entrypoint.sh\"]\n"
}