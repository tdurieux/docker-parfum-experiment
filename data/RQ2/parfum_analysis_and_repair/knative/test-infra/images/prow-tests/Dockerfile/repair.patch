diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/knative/test-infra/images/prow-tests/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/knative/test-infra/images/prow-tests/Dockerfile/repaired.Dockerfile
index eb18084..71e3786 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/knative/test-infra/images/prow-tests/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/knative/test-infra/images/prow-tests/Dockerfile/repaired.Dockerfile
@@ -40,7 +40,7 @@ ENV PATH=/google-cloud-sdk/bin:/workspace:${PATH} \
     CLOUDSDK_CORE_DISABLE_PROMPTS=1
 
 # net-tools is used by serving tests
-RUN apt-get update -qqy && apt-get install -qqy \
+RUN apt-get update -qqy && apt-get install --no-install-recommends -qqy \
         curl \
         gcc \
         python3-dev \
@@ -60,11 +60,11 @@ RUN apt-get update -qqy && apt-get install -qqy \
         jq \
         procps \
         net-tools \
-        gnuplot
+        gnuplot && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install -U crcmod==1.7
+RUN pip3 install --no-cache-dir -U crcmod==1.7
 RUN curl -fsSLO https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz
-RUN tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz -C /
+RUN tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz -C / && rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz
 RUN rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz
 RUN gcloud config set core/disable_usage_reporting true && \
     gcloud config set component_manager/disable_update_check true && \
@@ -89,7 +89,7 @@ RUN git clone -b ${TFENV_VERSION} https://github.com/tfutils/tfenv.git ~/.tfenv
 #
 
 # Add the Docker apt-repository
-RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
+RUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
     echo \
     "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \
     $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
@@ -104,7 +104,7 @@ RUN apt-get update -qqy && \
     apt-get install -qqy --no-install-recommends docker-ce="${DOCKER_VERSION}" && \
     sed -i 's/cgroupfs_mount$/#cgroupfs_mount\n/' /etc/init.d/docker \
     && update-alternatives --set iptables /usr/sbin/iptables-legacy \
-    && update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
+    && update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy && rm -rf /var/lib/apt/lists/*;
 
 # Move Docker's storage location
 RUN echo 'DOCKER_OPTS="${DOCKER_OPTS} --data-root=/docker-graph"' | \
@@ -121,12 +121,12 @@ RUN mkdir /docker-graph
 # BEGIN: JAVA SETUP
 #
 
-RUN curl -fsSL https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | gpg --dearmor -o /usr/share/keyrings/adoptopenjdk-archive-keyring.gpg && \
+RUN curl -fsSL https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | gpg --batch --dearmor -o /usr/share/keyrings/adoptopenjdk-archive-keyring.gpg && \
     echo \
     "deb [signed-by=/usr/share/keyrings/adoptopenjdk-archive-keyring.gpg] https://adoptopenjdk.jfrog.io/adoptopenjdk/deb \
     $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/adoptopenjdk.list
 RUN apt-get update -qqy && \
-    apt-get install -qqy adoptopenjdk-${JAVA_VERSION}-hotspot && \
+    apt-get install --no-install-recommends -qqy adoptopenjdk-${JAVA_VERSION}-hotspot && \
     rm -rf /var/lib/apt/lists/*
 ENV JAVA_HOME=/usr/lib/jvm/adoptopenjdk-${JAVA_VERSION}-hotspot-amd64
 
@@ -136,7 +136,7 @@ ENV PATH=${M2_HOME}/bin:${PATH}
 
 RUN curl -fsSL https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz -o /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz && \
     tar xf /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /tmp && \
-    mv /tmp/apache-maven-${MAVEN_VERSION} $MAVEN_HOME
+    mv /tmp/apache-maven-${MAVEN_VERSION} $MAVEN_HOME && rm /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz
 
 RUN java -version && \
     mvn -v