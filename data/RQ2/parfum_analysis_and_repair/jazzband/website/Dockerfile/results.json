{
  "startTime": 1674217054053,
  "endTime": 1674217055470,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 25,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node as npm\n\nWORKDIR /tmp\n\nCOPY package.json package-lock.json /tmp/\n\nRUN npm update -g npm && npm install && npm cache clean --force;\n\nCOPY . /tmp/\n\nRUN npm run build\n\n# -----------------------------------------------------------------------------\nFROM python:3.9-slim-buster\n\nENV PYTHONPATH=/app/ \\\n    PYTHONHASHSEED=random \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    LANG=C.UTF-8 \\\n    PORT=5000\n\n# add a non-privileged user for installing and running the application\n# don't use --create-home option to prevent populating with skeleton files\nRUN mkdir /app && \\\n    chown 10001:10001 /app && \\\n    groupadd --gid 10001 app && \\\n    useradd --no-create-home --uid 10001 --gid 10001 --home-dir /app app\n\nRUN set -x \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends locales -y \\\n    && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\n\n# install a few essentials and clean apt caches afterwards\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        build-essential curl git libpq-dev \\\n        postgresql-client gettext sqlite3 libffi-dev \\\n        inotify-tools wget bzip2 wait-for-it && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN pip install --no-cache-dir -U pip\n\nWORKDIR /app\nCOPY requirements.txt /app/\n\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . /app/\n\nCOPY --from=npm /tmp/node_modules /app/node_modules/\nCOPY --from=npm /tmp/jazzband/static/dist /app/jazzband/static/dist/\n\nRUN chown -R 10001:10001 /app\n\nUSER 10001\n\nEXPOSE 5000\n\nENTRYPOINT [\"/app/docker-entrypoint.sh\", \"--\"]\n"
}