{
  "startTime": 1674251085289,
  "endTime": 1674251086541,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 127
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:7.4-fpm AS rootless\n\nARG DEBIAN_FRONTEND=noninteractive\nARG NODE_VERSION=16\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n      ca-certificates \\\n      curl \\\n      gnupg \\\n      lsb-release \\\n      openssl \\\n      software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' | apt-key add - \\\n    && echo \"deb https://deb.nodesource.com/node_${NODE_VERSION}.x $(lsb_release -cs) main\" > /etc/apt/sources.list.d/nodesource.list\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        libmcrypt-dev \\\n        libicu-dev \\\n        libpq-dev \\\n        libxml2-dev \\\n        libpng-dev \\\n        libjpeg-dev \\\n        libwebp-dev \\\n        libsqlite3-dev \\\n        imagemagick \\\n        libmagickwand-dev \\\n        libtidy-dev \\\n        libonig-dev \\\n        libzip-dev \\\n        libfreetype6-dev \\\n        zlib1g-dev \\\n        git \\\n        build-essential \\\n        nodejs && rm -rf /var/lib/apt/lists/*;\nRUN docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp\nRUN docker-php-ext-install -j \"$(nproc)\" \\\n        bcmath \\\n        gd \\\n        gettext \\\n        iconv \\\n        intl \\\n        mbstring \\\n        opcache \\\n        pdo \\\n        pdo_mysql \\\n        pdo_pgsql \\\n        pdo_sqlite \\\n        sockets \\\n        tidy \\\n        zip\n\nRUN pecl install redis; \\\n    pecl install imagick; \\\n    pecl install xdebug; \\\n    docker-php-ext-enable \\\n        redis \\\n        imagick \\\n        xdebug \\\n    ;\n\nRUN npm install -g yarn && npm cache clean --force;\n\nRUN curl -f -L -o /usr/local/bin/envsubst https://github.com/a8m/envsubst/releases/download/v1.1.0/envsubst-`uname -s`-`uname -m`; \\\n    chmod +x /usr/local/bin/envsubst\n\nCOPY --from=composer:2.2.12 /usr/bin/composer /usr/local/bin/composer\n\nCOPY entrypoint.sh /entrypoint.sh\nCOPY config/ /opt/wallabag/config/\n\nRUN mkdir -p \\\n        /var/www/html/app/config/ \\\n        /var/www/html/var/cache \\\n        /var/www/html/web/assets \\\n        /var/www/html/data \\\n        /var/www/html/data/db \\\n        /var/www/.cache\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"php\", \"bin/console\", \"--env=dev\", \"server:run\", \"0.0.0.0:8000\"]\n\nFROM rootless AS default\n\nARG USER_UID=1000\nARG USER_GID=1000\n\nRUN groupmod -g 1000 www-data ; \\\n    usermod -u ${USER_UID} -g www-data www-data ; \\\n    touch /usr/local/etc/php/conf.d/wallabag-php.ini \\\n        /var/www/.yarnrc ; \\\n    chown -R www-data: /var/www/html \\\n        /usr/local/etc/php/conf.d/wallabag-php.ini \\\n        /var/www/.cache \\\n        /var/www/.yarnrc\n\nUSER www-data\n"
}