{
  "startTime": 1674216784204,
  "endTime": 1674216786347,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 5,
        "columnEnd": 19
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 23,
        "columnEnd": 39
      }
    }
  ],
  "repairedDockerfile": "ARG BUILD_FROM=ghcr.io/hassio-addons/base-python/amd64:8.0.0\n# hadolint ignore=DL3006\nFROM ${BUILD_FROM}\nENV LANG C.UTF-8\n\n#Prepare Node Stuff\nENV NODE_VERSION 16.9.1\n\nRUN addgroup -g 1000 node \\\n    && adduser -u 1000 -G node -s /bin/sh -D node \\\n    && apk add --no-cache \\\n        libstdc++ \\\n    && apk add --no-cache --virtual .build-deps \\\n        curl \\\n    && ARCH= && alpineArch=\"$(apk --print-arch)\" \\\n      && case \"${alpineArch##*-}\" in \\\n        x86_64) \\\n          ARCH='x64' \\\n          CHECKSUM=\"528061413f47f9cd87feb43941a74768cabcbb7a35395b3680a4b89efa1f7573\" \\\n          ;; \\\n        *) ;; \\\n      esac \\\n  && if [ -n \"${CHECKSUM}\" ];then \\\n    set -eu; \\\n    curl -fsSLO --compressed \"https://unofficial-builds.nodejs.org/download/release/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\"; \\\n    echo \"$CHECKSUM  node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" | sha256sum -c - \\\n      && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n      && ln -s /usr/local/bin/node /usr/local/bin/nodejs; \\\n  else \\\n    echo \"Building from source\" \\\n    # backup build\n    && apk add --no-cache --virtual .build-deps-full \\\n        binutils-gold \\\n        g++ \\\n        gcc \\\n        gnupg \\\n        libgcc \\\n        linux-headers \\\n        make \\\n        python3 \\\n    # gpg keys listed at https://github.com/nodejs/node#release-keys\n    && for key in \\\n      4ED778F539E3634C779C87C6D7062848A1AB005C \\\n      94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n      74F12602B6F1C4E913FAA37AD3A89613643B6201 \\\n      71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n      8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n      C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n      C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \\\n      DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n      A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n      108F52B48DB57BB0CC439B2997B01419BD92F80A \\\n      B9E2F5981AA6E0CD28160D9FF13993A75599653C \\\n    ; do \\\n      gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" || \\\n      gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; \\\n    done \\\n    && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION.tar.xz\" \\\n    && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n    && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n    && grep \" node-v$NODE_VERSION.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n    && tar -xf \"node-v$NODE_VERSION.tar.xz\" \\\n    && cd \"node-v$NODE_VERSION\" \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make -j$(getconf _NPROCESSORS_ONLN) V= \\\n    && make install \\\n    && apk del .build-deps-full \\\n    && cd .. \\\n    && rm -Rf \"node-v$NODE_VERSION\" \\\n    && rm \"node-v$NODE_VERSION.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt; \\\n  fi \\\n  && rm -f \"node-v$NODE_VERSION-linux-$ARCH-musl.tar.xz\" \\\n  && apk del .build-deps \\\n  # smoke tests\n  && node --version \\\n  && npm --version\n\nENV YARN_VERSION 1.22.5\n\nRUN apk add --no-cache --virtual .build-deps-yarn curl gnupg tar \\\n  && for key in \\\n    6A010C5166006599AA17F08146C2130DFD2497F5 \\\n  ; do \\\n    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" || \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; \\\n  done \\\n  && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz\" \\\n  && curl -fsSLO --compressed \"https://yarnpkg.com/downloads/$YARN_VERSION/yarn-v$YARN_VERSION.tar.gz.asc\" \\\n  && gpg --batch --verify yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && mkdir -p /opt \\\n  && tar -xzf yarn-v$YARN_VERSION.tar.gz -C /opt/ \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarn /usr/local/bin/yarn \\\n  && ln -s /opt/yarn-v$YARN_VERSION/bin/yarnpkg /usr/local/bin/yarnpkg \\\n  && rm yarn-v$YARN_VERSION.tar.gz.asc yarn-v$YARN_VERSION.tar.gz \\\n  && apk del .build-deps-yarn \\\n  # smoke test \\\n  && yarn --version && yarn cache clean;\n\n\n#Get Assistant Relay\n\nENV LANG C.UTF-8\nENV databasePath='/data/db.json'\nENV configurationPath='/data/config.json'\nENV jwtSecret='Assistant-Relay-2020'\n\nLABEL \\\n    io.hass.name=\"Assistant Relay\" \\\n    io.hass.description=\"Send (broadcast) commands to your Google Assistant via REST command\" \\\n    io.hass.type=\"addon\" \\\n    maintainer=\"FaserF\" \\\n    org.label-schema.description=\"Send (broadcast) commands to your Google Assistant via REST command\" \\\n    org.label-schema.name=\"Assistant Relay\" \\\n    org.label-schema.usage=\"https://github.com/FaserF/Assistant-Relay-for-Hassio/blob/master/README.md\" \\\n    org.label-schema.vcs-url=\"https://github.com/FaserF/Assistant-Relay-for-Hassio\"\n\nCOPY run.sh /\nRUN chmod a+x /run.sh\nCMD [ \"/run.sh\" ]"
}