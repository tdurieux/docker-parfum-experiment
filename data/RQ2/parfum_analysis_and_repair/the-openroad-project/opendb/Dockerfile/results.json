{
  "startTime": 1674220817355,
  "endTime": 1674220818639,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 26,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:centos7 AS base-dependencies\nLABEL maintainer=\"Abdelrahman Hosny <abdelrahman_hosny@brown.edu>\"\n\n# Install dev and runtime dependencies\nRUN yum group install -y \"Development Tools\" \\\n    && yum install -y https://repo.ius.io/ius-release-el7.rpm \\\n    && yum install -y centos-release-scl \\\n    && yum install -y wget devtoolset-8 \\\n    devtoolset-8-libatomic-devel tcl-devel tcl tk libstdc++ tk-devel pcre-devel \\\n    python36u python36u-libs python36u-devel python36u-pip && \\\n    yum clean -y all && \\\n    rm -rf /var/lib/apt/lists/* && rm -rf /var/cache/yum\n\nENV CC=/opt/rh/devtoolset-8/root/usr/bin/gcc \\\n    CPP=/opt/rh/devtoolset-8/root/usr/bin/cpp \\\n    CXX=/opt/rh/devtoolset-8/root/usr/bin/g++ \\\n    PATH=/opt/rh/devtoolset-8/root/usr/bin:$PATH \\\n    LD_LIBRARY_PATH=/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib:/opt/rh/devtoolset-8/root/usr/lib64/dyninst:/opt/rh/devtoolset-8/root/usr/lib/dyninst:/opt/rh/devtoolset-8/root/usr/lib64:/opt/rh/devtoolset-8/root/usr/lib:$LD_LIBRARY_PATH\n\n# Install CMake\nRUN wget https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh && \\\n    chmod +x cmake-3.14.0-Linux-x86_64.sh  && \\\n    ./cmake-3.14.0-Linux-x86_64.sh --skip-license --prefix=/usr/local && rm -rf cmake-3.14.0-Linux-x86_64.sh \\\n    && yum clean -y all\n\n# Install epel repo\nRUN wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm && \\\n    yum install -y epel-release-latest-7.noarch.rpm && rm -rf epel-release-latest-7.noarch.rpm \\\n    && yum clean -y all && rm -rf /var/cache/yum\n\n# Install any git version > 2.6.5\nRUN yum remove -y git* && yum install -y git224 && rm -rf /var/cache/yum\n\n# Install SWIG\nRUN yum remove -y swig \\\n    && wget https://github.com/swig/swig/archive/rel-4.0.1.tar.gz \\\n    && tar xfz rel-4.0.1.tar.gz \\\n    && rm -rf rel-4.0.1.tar.gz \\\n    && cd swig-rel-4.0.1 \\\n    && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make -j $(nproc) && make install \\\n    && cd .. \\\n    && rm -rf swig-rel-4.0.1\n\n# boost\nRUN wget https://sourceforge.net/projects/boost/files/boost/1.72.0/boost_1_72_0.tar.bz2/download && \\\n    tar -xf download && \\\n    cd boost_1_72_0 && \\\n    ./bootstrap.sh && \\\n    ./b2 install --with-iostreams --with-test -j $(nproc)\n\nRUN pip3 install --no-cache-dir testtools\n\n# spdlog for logging\nRUN git clone -b v1.8.1 https://github.com/gabime/spdlog.git \\\n    && cd spdlog \\\n    && mkdir build \\\n    && cd build \\\n    && cmake .. \\\n    && make install -j\n\nFROM base-dependencies AS builder\n\n\nCOPY . /OpenDB\nWORKDIR /OpenDB\n\n# Build\nRUN mkdir build\nRUN cd build && cmake .. && make -j 4\n"
}