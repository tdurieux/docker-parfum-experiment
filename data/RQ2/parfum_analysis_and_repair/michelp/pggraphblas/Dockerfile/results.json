{
  "startTime": 1674215801852,
  "endTime": 1674215803492,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 16,
        "columnStart": 19,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:latest\n\n# install base dependences   \nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y make cmake git curl build-essential m4 sudo gdbserver \\\n    gdb libreadline-dev bison flex zlib1g-dev tmux emacs25-nox zile zip vim gawk wget && rm -rf /var/lib/apt/lists/*;\n\n# add postgres user and make data dir       \nRUN groupadd -r postgres && useradd --no-log-init -r -m -s /bin/bash -g postgres -G sudo postgres\nENV PGDATA /home/postgres/data\nRUN /bin/rm -Rf \"$PGDATA\" && mkdir \"$PGDATA\"\nWORKDIR \"/home/postgres\"\n\n# get postgres source and compile with debug and no optimization\nRUN git clone --branch REL_12_STABLE https://github.com/postgres/postgres.git --depth=1 && \\\n    cd postgres && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/usr/ \\\n#    --enable-debug \\\n#    --enable-depend --enable-cassert --enable-profiling \\\n#    CFLAGS=\"-ggdb -Og -g3 -fno-omit-frame-pointer\" \\\n#    CFLAGS=\"-O3\" \\\n    && make -j 4 && make install\n\n# get GraphBLAS, compile with debug symbols   \nRUN curl -f -s -L https://faculty.cse.tamu.edu/davis/GraphBLAS/GraphBLAS-3.1.1.tar.gz | \\\n    tar zxvf - && cd GraphBLAS-3.1.1 && \\\n#    sed -i 's/^\\/\\/ #undef NDEBUG/#undef NDEBUG/g' Source/GB.h && \\\n#    sed -i 's/^\\/\\/ #define GB_PRINT_MALLOC 1/#define GB_PRINT_MALLOC 1/g' Source/GB.h && \\\n    make library \\\n    CMAKE_OPTIONS='-DCMAKE_BUILD_TYPE=Debug' \\\n    && make install\n\nRUN git clone --branch 22July2019 https://github.com/GraphBLAS/LAGraph.git && \\\n    cd LAGraph && \\\n    make library \\\n#    CMAKE_OPTIONS='-DCMAKE_BUILD_TYPE=Debug' \\\n    && make install\n\nRUN curl -f -s -L https://github.com/theory/pgtap/archive/v0.99.0.tar.gz | tar zxvf - && \\\n    cd pgtap-0.99.0 && make && make install\n\n# chown dependencies   \nRUN chown -R postgres:postgres /home/postgres\n\n# put test stuff into pg home       \nRUN mkdir \"/home/postgres/pggraphblas\"\nWORKDIR \"/home/postgres/pggraphblas\"\nCOPY . .\n\n# RUN mkdir \"/home/postgres/LAGraph\"\n# COPY LAGraph /home/postgres/LAGraph\n\n# RUN cd /home/postgres/LAGraph && \\\n#     make library \\\n#     CMAKE_OPTIONS='-DCMAKE_BUILD_TYPE=Debug' \\\n#     && make install\n\n# make the extension   \nRUN make && make install && make clean\nRUN ldconfig\n\n# chown just pggraphblas\nRUN chown -R postgres:postgres /home/postgres/pggraphblas\n\n# make postgres a sudoer       \nRUN echo \"postgres ALL=(root) NOPASSWD:ALL\" > /etc/sudoers.d/user && \\\n    chmod 0440 /etc/sudoers.d/user\n\n# start the database           \nUSER postgres\nRUN initdb -D \"$PGDATA\"\nEXPOSE 5432\n# wait forever\nCMD tail -f /dev/null\n"
}