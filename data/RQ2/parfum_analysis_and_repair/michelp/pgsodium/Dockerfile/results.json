{
  "startTime": 1674215584359,
  "endTime": 1674215586252,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 128,
        "columnEnd": 139
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 124
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 124
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG version\nFROM postgres:${version}\nARG version\n\nRUN apt-get update && apt-get install --no-install-recommends -y make git postgresql-server-dev-${version} curl build-essential libreadline-dev zile && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -s -L https://github.com/theory/pgtap/archive/v1.1.0.tar.gz | tar zxvf - && cd pgtap-1.1.0 && make && make install\nRUN curl -f -s -L https://download.libsodium.org/libsodium/releases/libsodium-1.0.18.tar.gz | tar zxvf - && cd libsodium-1.0.18 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make check && make install\nRUN mkdir \"/pgsodium\"\nWORKDIR \"/pgsodium\"\nCOPY . .\nRUN make -j 4 && make install\nRUN ldconfig\nRUN cd `pg_config --sharedir`/extension/\nRUN cp getkey_scripts/pgsodium_getkey_urandom.sh `pg_config --sharedir`/extension/pgsodium_getkey\nRUN sed -i 's/exit//g' `pg_config --sharedir`/extension/pgsodium_getkey\nRUN chmod +x `pg_config --sharedir`/extension/pgsodium_getkey\nRUN cp `pg_config --sharedir`/extension/pgsodium_getkey /getkey\n"
}