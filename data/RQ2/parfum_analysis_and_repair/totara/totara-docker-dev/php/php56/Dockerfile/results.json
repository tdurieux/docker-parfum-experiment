{
  "startTime": 1674254389437,
  "endTime": 1674254390713,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 10,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 13,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 66,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:5.6-fpm\n\nARG TIME_ZONE=Pacific/Auckland\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        apt-transport-https \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libmcrypt-dev \\\n        libpng-dev \\\n        libxml2-dev \\\n        libicu-dev \\\n        libpq-dev \\\n        freetds-bin \\\n        freetds-common \\\n        freetds-dev \\\n        nano \\\n        vim \\\n        git \\\n        locales \\\n        tzdata \\\n        libmemcached-dev \\\n        zip \\\n        netcat \\\n        bc \\\n        ghostscript \\\n        graphviz \\\n        aspell \\\n    && docker-php-ext-install -j$(nproc) xmlrpc \\\n        zip \\\n        intl \\\n        soap \\\n        opcache \\\n        pdo_pgsql \\\n        pdo_mysql \\\n        pgsql \\\n        mysqli \\\n        exif \\\n    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \\\n    && docker-php-ext-install -j$(nproc) gd && rm -rf /var/lib/apt/lists/*;\n\nRUN pecl install xhprof-0.9.4 \\\n    && docker-php-ext-enable xhprof\n\nRUN pecl install -o -f redis-4.3.0 \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable redis\n\nRUN pecl install -o -f igbinary-2.0.8 \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable igbinary\n\nRUN pecl install -o -f memcached-2.2.0 \\\n    &&  rm -rf /tmp/pear \\\n    &&  docker-php-ext-enable memcached\n\n# we need en_AU locales for behat to work\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    sed -i -e 's/# en_AU.UTF-8 UTF-8/en_AU.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libsybdb5 \\\n    freetds-common \\\n    freetds-dev \\\n    freetds-bin \\\n    unixodbc \\\n    libct4 && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /usr/lib && ln -s /usr/lib/x86_64-linux-gnu/libsybdb.a\n\nRUN docker-php-ext-install -j$(nproc) mssql\n\nCOPY config/freetds.conf /etc/freetds/freetds.conf\n\nRUN cd / && git clone https://github.com/wolfcw/libfaketime.git \\\n    && cd /libfaketime/src && make install\n\nRUN ln -fs /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime \\\n    && dpkg-reconfigure --frontend noninteractive tzdata\n\nCOPY config/php.ini /usr/local/etc/php/php.ini\nCOPY config/fpm.conf /usr/local/etc/php-fpm.d/zz-totara.conf\n\n# Source each .sh file found in the /shell/ folder\nRUN echo 'for f in ~/custom_shell/*.sh; do [[ -e \"$f\" ]] && source \"$f\"; done;' >> ~/.bashrc\n\n# Have the option of using the oh my zsh shell.\nRUN apt-get update && apt-get install --no-install-recommends -y zsh && rm -rf /var/lib/apt/lists/*;\nRUN sh -c \"$( curl -f https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" -f --unattended\nRUN git clone https://github.com/romkatv/powerlevel10k ~/.oh-my-zsh/custom/themes/powerlevel10k\nRUN git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions\nRUN git clone https://github.com/zsh-users/zsh-completions ~/.oh-my-zsh/custom/plugins/zsh-completions\nRUN git clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting\nRUN echo 'setopt +o nomatch' > ~/.zshrc\nRUN echo 'source ~/custom_shell/.zshrc' >> ~/.zshrc\nRUN cat ~/.bashrc >> ~/.zshrc\n"
}