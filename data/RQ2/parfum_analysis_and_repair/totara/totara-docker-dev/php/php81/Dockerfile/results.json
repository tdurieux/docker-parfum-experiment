{
  "startTime": 1674251040074,
  "endTime": 1674251043592,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 114
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 10,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 13,
        "columnEnd": 98
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 120
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 68,
        "columnStart": 25,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 28,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 68,
        "columnStart": 25,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1-fpm-buster\n\nARG TIME_ZONE=Pacific/Auckland\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        apt-transport-https \\\n        libfreetype6-dev \\\n        libjpeg62-turbo-dev \\\n        libmcrypt-dev \\\n        libpng-dev \\\n        libxml2-dev \\\n        libicu-dev \\\n        libpq-dev \\\n        gnupg2 \\\n        nano \\\n        vim \\\n        wget \\\n        openssl \\\n        locales \\\n        tzdata \\\n        git \\\n        libzip-dev \\\n        libmemcached-dev \\\n        zip \\\n        netcat \\\n        bc \\\n        ghostscript \\\n        graphviz \\\n        aspell \\\n    && docker-php-ext-install -j$(nproc) zip \\\n        intl \\\n        soap \\\n        opcache \\\n        pdo_pgsql \\\n        pdo_mysql \\\n        pgsql \\\n        mysqli \\\n        exif \\\n    && docker-php-ext-configure gd \\\n            --with-freetype \\\n            --with-jpeg \\\n    && docker-php-ext-install -j$(nproc) gd && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone https://github.com/tideways/php-profiler-extension.git \\\n    && cd php-profiler-extension \\\n    && phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make && make install\n\nRUN echo \"extension=tideways_xhprof.so\" >> /usr/local/etc/php/conf.d/tideways_xhprof.ini\n\n# we need en_US locales for MSSQL connection to work\n# we need en_AU locales for behat to work\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    sed -i -e 's/# en_AU.UTF-8 UTF-8/en_AU.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\nENV LC_ALL en_US.UTF-8\n\n# install mssql extension\nRUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \\\n    && curl -f https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list \\\n    && apt-get update && ACCEPT_EULA=Y apt-get --no-install-recommends install -y \\\n    msodbcsql17 \\\n    mssql-tools \\\n    unixodbc-dev && rm -rf /var/lib/apt/lists/*;\n\n# Workaround to get MSSQL connection working on Debian 10 (buster)\n# https://emacstragic.net/2017/11/06/mssql-odbc-client-on-debian-9-stretch/\nRUN wget \"https://security.debian.org/debian-security/pool/updates/main/o/openssl/libssl1.0.0_1.0.1t-1+deb8u12_amd64.deb\" \\\n    && DEBIAN_FRONTEND=noninteractive dpkg -i ./libssl1.0.0_1.0.1t-1+deb8u12_amd64.deb\n\nRUN echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bash_profile \\\n    && echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc\n\nRUN pear config-set php_ini `php --ini | grep \"Loaded Configuration\" | sed -e \"s|.*:\\s*||\"` system \\\n    && pecl install sqlsrv-5.10.0 \\\n    && pecl install pdo_sqlsrv-5.10.0\n\nRUN docker-php-ext-enable sqlsrv.so && docker-php-ext-enable pdo_sqlsrv.so\n\nRUN ln -fs /usr/share/zoneinfo/${TIME_ZONE} /etc/localtime \\\n    && dpkg-reconfigure --frontend noninteractive tzdata\n\nCOPY config/php.ini /usr/local/etc/php/\nCOPY config/fpm.conf /usr/local/etc/php-fpm.d/zz-totara.conf\n\n# Source each .sh file found in the /shell/ folder\nRUN echo 'for f in ~/custom_shell/*.sh; do [[ -e \"$f\" ]] && source \"$f\"; done;' >> ~/.bashrc\n\n# Have the option of using the oh my zsh shell.\nRUN apt-get update && apt-get install --no-install-recommends -y zsh && rm -rf /var/lib/apt/lists/*;\nRUN sh -c \"$( curl -f https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" -f --unattended\nRUN git clone https://github.com/romkatv/powerlevel10k ~/.oh-my-zsh/custom/themes/powerlevel10k\nRUN git clone https://github.com/zsh-users/zsh-autosuggestions ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions\nRUN git clone https://github.com/zsh-users/zsh-completions ~/.oh-my-zsh/custom/plugins/zsh-completions\nRUN git clone https://github.com/zsh-users/zsh-syntax-highlighting ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting\nRUN echo 'setopt +o nomatch' > ~/.zshrc\nRUN echo 'source ~/custom_shell/.zshrc' >> ~/.zshrc\nRUN cat ~/.bashrc >> ~/.zshrc\n"
}