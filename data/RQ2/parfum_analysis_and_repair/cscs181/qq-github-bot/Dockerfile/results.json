{
  "startTime": 1674249932629,
  "endTime": 1674249933729,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 5,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 5,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 5,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 45,
        "columnStart": 5,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.8 as requirements-stage\n\nWORKDIR /tmp\n\nCOPY ./pyproject.toml ./poetry.lock* /tmp/\n\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py -o install-poetry.py\n\nRUN python install-poetry.py --yes\n\nENV PATH=\"${PATH}:/root/.local/bin\"\n\nRUN poetry export -f requirements.txt --output requirements.txt --without-hashes\n\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.8\n\nWORKDIR /app\n\nENV LANG zh_CN.UTF-8\nENV LANGUAGE zh_CN.UTF-8\nENV LC_ALL zh_CN.UTF-8\nENV TZ Asia/Shanghai\nENV DEBIAN_FRONTEND noninteractive\n\nENV MAX_WORKERS 1\nENV APP_MODULE bot:app\n# ENV XVFB_INSTALLED true\n\n# RUN mv /etc/apt/sources.list /etc/apt/sources.list.bak &&\\\n#   echo \"deb http://mirrors.aliyun.com/debian/ buster main\" >> /etc/apt/sources.list\\\n#   && echo \"deb http://mirrors.aliyun.com/debian/ buster-updates main\" >> /etc/apt/sources.list\\\n#   && echo \"deb http://mirrors.aliyun.com/debian-security/ buster/updates main\" >> /etc/apt/sources.list\\\n#   && apt-get update && apt-get install -y locales locales-all fonts-noto\n\nRUN apt-get update && apt-get install --no-install-recommends -y locales locales-all fonts-noto && rm -rf /var/lib/apt/lists/*;\n\n# RUN python3 -m pip config set global.index-url https://mirrors.aliyun.com/pypi/simple\n\nCOPY --from=requirements-stage /tmp/requirements.txt /app/requirements.txt\n\nRUN pip install --no-cache-dir --upgrade -r requirements.txt\n\nRUN echo \"Install playwright headless browser...\" \\\n  && playwright install chromium \\\n  && apt-get install --no-install-recommends -y libnss3-dev libxss1 libasound2 libxrandr2 \\\n  libatk1.0-0 libgtk-3-0 libgbm-dev libxshmfence1 && rm -rf /var/lib/apt/lists/*;\n\n# RUN echo \"Install wkhtmltox renderer...\" \\\n#   && chmod +x ./scripts/download_wkhtmltox.sh \\\n#   && ./scripts/download_wkhtmltox.sh buster_amd64 \\\n#   && apt-get install -y xvfb ./wkhtmltox_*.deb\\\n#   && rm wkhtmltox_*.deb\n\nCOPY ./ /app/\n"
}