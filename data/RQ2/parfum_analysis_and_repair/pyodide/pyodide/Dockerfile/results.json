{
  "startTime": 1674216382739,
  "endTime": 1674216383696,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:14.16.1-buster-slim AS node-image\nFROM python:3.10.2-slim-buster\n\n# Requirements for building packages\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n        bzip2 ccache f2c g++ gfortran git make \\\n        patch pkg-config swig unzip wget xz-utils \\\n        autoconf autotools-dev automake texinfo dejagnu \\\n        build-essential prelink autoconf libtool libltdl-dev \\\n        gnupg2 libdbus-glib-1-2 sudo sqlite3 \\\n  && rm -rf /var/lib/apt/lists/*\n\nADD docs/requirements-doc.txt requirements.txt /\n\nRUN pip3 --no-cache-dir install -r /requirements.txt \\\n  && pip3 --no-cache-dir install -r /requirements-doc.txt\n\n# Get Chrome and Firefox (borrowed from https://github.com/SeleniumHQ/docker-selenium)\n\nARG CHROME_VERSION=\"latest\"\nARG FIREFOX_VERSION=\"latest\"\n# Note: geckodriver version needs to be updated manually\nARG GECKODRIVER_VERSION=\"0.30.0\"\n\n#============================================\n# Firefox & gekcodriver\n#============================================\n# can specify Firefox version by FIREFOX_VERSION;\n#  e.g. latest\n#       95\n#       96\n#\n# can specify Firefox geckodriver version by GECKODRIVER_VERSION;\n#============================================\n\nRUN if [ $FIREFOX_VERSION = \"latest\" ] || [ $FIREFOX_VERSION = \"nightly-latest\" ] || [ $FIREFOX_VERSION = \"devedition-latest\" ] || [ $FIREFOX_VERSION = \"esr-latest\" ]; \\\n  then FIREFOX_DOWNLOAD_URL=\"https://download.mozilla.org/?product=firefox-$FIREFOX_VERSION-ssl&os=linux64&lang=en-US\"; \\\n  else FIREFOX_VERSION_FULL=\"${FIREFOX_VERSION}.0\" && FIREFOX_DOWNLOAD_URL=\"https://download-installer.cdn.mozilla.net/pub/firefox/releases/$FIREFOX_VERSION_FULL/linux-x86_64/en-US/firefox-$FIREFOX_VERSION_FULL.tar.bz2\"; \\\n  fi \\\n  && wget --no-verbose -O /tmp/firefox.tar.bz2 $FIREFOX_DOWNLOAD_URL \\\n  && tar -C /opt -xjf /tmp/firefox.tar.bz2 \\\n  && rm /tmp/firefox.tar.bz2 \\\n  && mv /opt/firefox /opt/firefox-$FIREFOX_VERSION \\\n  && ln -fs /opt/firefox-$FIREFOX_VERSION/firefox /usr/local/bin/firefox \\\n  && wget --no-verbose -O /tmp/geckodriver.tar.gz https://github.com/mozilla/geckodriver/releases/download/v$GECKODRIVER_VERSION/geckodriver-v$GECKODRIVER_VERSION-linux64.tar.gz \\\n  && rm -rf /opt/geckodriver \\\n  && tar -C /opt -zxf /tmp/geckodriver.tar.gz \\\n  && rm /tmp/geckodriver.tar.gz \\\n  && mv /opt/geckodriver /opt/geckodriver-$GECKODRIVER_VERSION \\\n  && chmod 755 /opt/geckodriver-$GECKODRIVER_VERSION \\\n  && ln -fs /opt/geckodriver-$GECKODRIVER_VERSION /usr/local/bin/geckodriver \\\n  && echo \"Using Firefox version: $(firefox --version)\" \\\n  && echo \"Using GeckoDriver version: \"$GECKODRIVER_VERSION\n\n\n#============================================\n# Google Chrome & Chrome webdriver\n#============================================\n# can specify Chrome version by CHROME_VERSION;\n#  e.g. latest\n#       96\n#       97\n#============================================\n\nRUN if [ $CHROME_VERSION = \"latest\" ]; \\\n  then CHROME_VERSION_FULL=$(wget --no-verbose -O - \"https://chromedriver.storage.googleapis.com/LATEST_RELEASE\"); \\\n  else CHROME_VERSION_FULL=$(wget --no-verbose -O - \"https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}\"); \\\n  fi \\\n  && CHROME_DOWNLOAD_URL=\"https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_${CHROME_VERSION_FULL}-1_amd64.deb\" \\\n  && wget --no-verbose -O /tmp/google-chrome.deb ${CHROME_DOWNLOAD_URL} \\\n  && apt-get update \\\n  && apt install --no-install-recommends -qqy /tmp/google-chrome.deb \\\n  && rm -f /tmp/google-chrome.deb \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && wget --no-verbose -O /tmp/chromedriver_linux64.zip https://chromedriver.storage.googleapis.com/$CHROME_VERSION_FULL/chromedriver_linux64.zip \\\n  && rm -rf /opt/selenium/chromedriver \\\n  && unzip /tmp/chromedriver_linux64.zip -d /opt/selenium \\\n  && rm /tmp/chromedriver_linux64.zip \\\n  && mv /opt/selenium/chromedriver /opt/selenium/chromedriver-$CHROME_VERSION_FULL \\\n  && chmod 755 /opt/selenium/chromedriver-$CHROME_VERSION_FULL \\\n  && ln -fs /opt/selenium/chromedriver-$CHROME_VERSION_FULL /usr/local/bin/chromedriver \\\n  && echo \"Using Chrome version: $(google-chrome --version)\" \\\n  && echo \"Using Chromedriver version: \"$CHROME_VERSION_FULL\n\nCOPY --from=node-image /usr/local/bin/node /usr/local/bin/\nCOPY --from=node-image /usr/local/lib/node_modules /usr/local/lib/node_modules\nRUN ln -s ../lib/node_modules/npm/bin/npm-cli.js /usr/local/bin/npm \\\n    && ln -s ../lib/node_modules/npm/bin/npx-cli.js /usr/local/bin/npx\n\nRUN npm install -g \\\n  jsdoc \\\n  prettier \\\n  rollup \\\n  rollup-plugin-terser && npm cache clean --force;\n\nCMD [\"/bin/sh\"]\nWORKDIR /src\n"
}