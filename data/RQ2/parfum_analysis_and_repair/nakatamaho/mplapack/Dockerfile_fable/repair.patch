diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nakatamaho/mplapack/Dockerfile_fable b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nakatamaho/mplapack/Dockerfile_fable/repaired.Dockerfile
index f263958..1fc43ce 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nakatamaho/mplapack/Dockerfile_fable
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nakatamaho/mplapack/Dockerfile_fable/repaired.Dockerfile
@@ -2,11 +2,11 @@ FROM ubuntu:20.04
 
 LABEL maintainer="maho.nakata@gmail.com"
 
-ARG DEBIAN_FRONTEND=noninteractive 
+ARG DEBIAN_FRONTEND=noninteractive
 RUN apt -y update
 RUN apt -y upgrade
-RUN apt install -y sudo 
-RUN apt install -y tzdata
+RUN apt install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y tzdata && rm -rf /var/lib/apt/lists/*;
 # set your timezone
 ENV TZ Asia/Tokyo
 RUN echo "${TZ}" > /etc/timezone \
@@ -14,12 +14,12 @@ RUN echo "${TZ}" > /etc/timezone \
   && ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \
   && dpkg-reconfigure -f noninteractive tzdata
 
-RUN apt install -y build-essential python3 gcc g++ gfortran
-RUN apt install -y gcc-10 g++-10 gfortran-10
-RUN apt install -y autotools-dev automake libtool
-RUN apt install -y gdb valgrind libtool-bin
-RUN apt install -y git wget ccache time pkg-config clangd clang-format unifdef octave
-RUN apt install -y ng-common ng-cjk emacs-nox
+RUN apt install --no-install-recommends -y build-essential python3 gcc g++ gfortran && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y gcc-10 g++-10 gfortran-10 && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y autotools-dev automake libtool && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y gdb valgrind libtool-bin && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y git wget ccache time pkg-config clangd clang-format unifdef octave && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y ng-common ng-cjk emacs-nox && rm -rf /var/lib/apt/lists/*;
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
 
 ### intel one api start ###
@@ -27,12 +27,12 @@ RUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCT
 RUN apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
 RUN echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
 RUN apt update
-RUN apt install -y intel-basekit
-RUN apt install -y intel-hpckit
+RUN apt install --no-install-recommends -y intel-basekit && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y intel-hpckit && rm -rf /var/lib/apt/lists/*;
 ### intel one api end ###
 
 ### mingw start ###
-RUN apt install -y mingw-w64 gfortran-mingw-w64 gdb-mingw-w64
+RUN apt install --no-install-recommends -y mingw-w64 gfortran-mingw-w64 gdb-mingw-w64 && rm -rf /var/lib/apt/lists/*;
 RUN dpkg --add-architecture i386
 RUN wget -nc https://dl.winehq.org/wine-builds/winehq.key
 RUN mv winehq.key /usr/share/keyrings/winehq-archive.key
@@ -50,9 +50,9 @@ ARG WORK=/home/$DOCKER_USER
 
 #install ctag
 RUN cd ${WORK} && git clone https://github.com/universal-ctags/ctags.git
-RUN cd ${WORK} && cd ctags && ./autogen.sh && ./configure --prefix=/usr/local && make && make install
+RUN cd ${WORK} && cd ctags && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local && make && make install
 
-USER docker     
+USER docker    
 USER ${DOCKER_USER}
 ARG GIT_EMAIL="maho.nakata@gmail.com"
 ARG GIT_NAME="NAKATA Maho"