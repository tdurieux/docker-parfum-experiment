{
  "startTime": 1674249799987,
  "endTime": 1674249801649,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 46,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nLABEL maintainer=\"maho.nakata@gmail.com\"\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt -y update\nRUN apt -y upgrade\nRUN apt install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y tzdata && rm -rf /var/lib/apt/lists/*;\n# set your timezone\nENV TZ Asia/Tokyo\nRUN echo \"${TZ}\" > /etc/timezone \\\n  && rm /etc/localtime \\\n  && ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \\\n  && dpkg-reconfigure -f noninteractive tzdata\n\nRUN apt install --no-install-recommends -y build-essential python3 gcc g++ gfortran && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y gcc-10 g++-10 gfortran-10 && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y autotools-dev automake libtool && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y gdb valgrind libtool-bin && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y git wget ccache time pkg-config clangd clang-format unifdef octave && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y ng-common ng-cjk emacs-nox && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\n\n### intel one api start ###\nRUN wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB\nRUN apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB\nRUN echo \"deb https://apt.repos.intel.com/oneapi all main\" | sudo tee /etc/apt/sources.list.d/oneAPI.list\nRUN apt update\nRUN apt install --no-install-recommends -y intel-basekit && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y intel-hpckit && rm -rf /var/lib/apt/lists/*;\n### intel one api end ###\n\n### mingw start ###\nRUN apt install --no-install-recommends -y mingw-w64 gfortran-mingw-w64 gdb-mingw-w64 && rm -rf /var/lib/apt/lists/*;\nRUN dpkg --add-architecture i386\nRUN wget -nc https://dl.winehq.org/wine-builds/winehq.key\nRUN mv winehq.key /usr/share/keyrings/winehq-archive.key\nRUN wget -nc https://dl.winehq.org/wine-builds/ubuntu/dists/focal/winehq-focal.sources\nRUN mv winehq-focal.sources /etc/apt/sources.list.d/\nRUN apt update -y\nRUN apt install -y --install-recommends winehq-stable\n### mingw end ###\n\nARG DOCKER_UID=1000\nARG DOCKER_USER=docker\nARG DOCKER_PASSWORD=docker\nRUN useradd -u $DOCKER_UID -m $DOCKER_USER --shell /bin/bash && echo \"$DOCKER_USER:$DOCKER_PASSWORD\" | chpasswd && echo \"$DOCKER_USER ALL=(ALL) ALL\" >> /etc/sudoers\nARG WORK=/home/$DOCKER_USER\n\n#install ctag\nRUN cd ${WORK} && git clone https://github.com/universal-ctags/ctags.git\nRUN cd ${WORK} && cd ctags && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && make && make install\n\nUSER docker    \nUSER ${DOCKER_USER}\nARG GIT_EMAIL=\"maho.nakata@gmail.com\"\nARG GIT_NAME=\"NAKATA Maho\"\nRUN echo \"\\n\\\n[user]\\n\\\n        email = ${GIT_EMAIL}\\n\\\n        name = ${GIT_NAME}\\n\\\n\" > /home/$DOCKER_USER/.gitconfig\nSHELL [\"/bin/bash\", \"-c\"]\nRUN cd ${WORK} && wget https://raw.githubusercontent.com/cctbx/cctbx_project/master/libtbx/auto_build/bootstrap.py --no-check-certificate\nRUN cd ${WORK} && python bootstrap.py hot update --builder=cctbx\nRUN cd ${WORK} && wget https://repo.anaconda.com/miniconda/Miniconda2-4.5.11-Linux-x86_64.sh\nRUN cd ${WORK} && bash ./Miniconda2-4.5.11-Linux-x86_64.sh -b -p\n\nRUN cd ${WORK} && source miniconda2/etc/profile.d/conda.sh && conda create -y --name fable38 python=3.8 && conda activate fable38 && conda install six future && mkdir build38 && cd ${WORK}/build38 && python ../modules/cctbx_project/libtbx/configure.py fable\nRUN source ${WORK}/build38/setpaths.sh && cd ${WORK}/build38 && make && cd ${WORK} && cd ${WORK}/build38 && make ; cd ${WORK}\nRUN cd ${WORK} && echo \"source /home/docker/miniconda2/etc/profile.d/conda.sh\" >> .bashrc\nRUN cd ${WORK} && echo \"conda activate fable38\" >> .bashrc\nRUN cd ${WORK} && echo \"source /home/docker/build38/setpaths.sh\" >> .bashrc\nRUN echo -e \"\\n\\\n        PROGRAM HELLO\\n\\\n        PRINT *, 'HELLO, WORLD!'\\n\\\n        END PROGRAM\\n\\\n\" >> ${WORK}/sample.f\n\n#setting lsp mode for C++ https://emacs-lsp.github.io/lsp-mode/tutorials/CPP-guide/\nRUN cd ${WORK} && mkdir -p .emacs.d\nRUN echo -e \"\\n\\\n[user]\\n\\\n        email = ${GIT_EMAIL}\\n\\\n        name = ${GIT_NAME}\\n\\\n\" >> /home/$DOCKER_USER/.gitconfig\n\nRUN echo -e \"(require 'package)\\n\\\n(add-to-list 'package-archives '(\\\"melpa\\\" . \\\"http://melpa.org/packages/\\\") t)\\n\\\n(package-initialize)\\n\\\n\\n\\\n(setq package-selected-packages '(lsp-mode yasnippet lsp-treemacs helm-lsp\\n\\\n    projectile hydra flycheck company avy which-key helm-xref dap-mode))\\n\\\n\\n\\\n(when (cl-find-if-not #'package-installed-p package-selected-packages)\\n\\\n  (package-refresh-contents)\\n\\\n  (mapc #'package-install package-selected-packages))\\n\\\n\\n\\\n;; sample 'helm' configuration use https://github.com/emacs-helm/helm/ for details\\n\\\n(helm-mode)\\n\\\n(require 'helm-xref)\\n\\\n(define-key global-map [remap find-file] #'helm-find-files)\\n\\\n(define-key global-map [remap execute-extended-command] #'helm-M-x)\\n\\\n(define-key global-map [remap switch-to-buffer] #'helm-mini)\\n\\\n\\n\\\n(which-key-mode)\\n\\\n(add-hook 'c-mode-hook 'lsp)\\n\\\n(add-hook 'c++-mode-hook 'lsp)\\n\\\n\\n\\\n(setq gc-cons-threshold (* 100 1024 1024)\\n\\\n      read-process-output-max (* 1024 1024)\\n\\\n      treemacs-space-between-root-nodes nil\\n\\\n      company-idle-delay 0.0\\n\\\n      company-minimum-prefix-length 1\\n\\\n      lsp-idle-delay 0.1)  ;; clangd is fast\\n\\\n\\n\\\n(with-eval-after-load 'lsp-mode\\n\\\n  (add-hook 'lsp-mode-hook #'lsp-enable-which-key-integration)\\n\\\n  (require 'dap-cpptools)\\n\\\n  (yas-global-mode))\\n\\\n\" >> ${WORK}/.emacs.d/init.el\n\nRUN cd ${WORK} && echo \"cd /home/$DOCKER_USER\" >> .bashrc\nRUN cd ${WORK} && echo 'eval \"$(ssh-agent -s)\"' >> .bashrc\nRUN cd ${WORK} && echo 'ssh-add ~/.ssh/id_ed25519' >> .bashrc\n\n## intel one api and wine settings start ###\nRUN cd ${WORK} && echo \"#source /opt/intel/oneapi/setvars.sh\" >> .bashrc\nRUN cd ${WORK} && echo \"export WINEPATH=\\\"/usr/x86_64-w64-mingw32/lib/;/usr/lib/gcc/x86_64-w64-mingw32/9.3-win32/;/usr/lib/gcc/x86_64-w64-mingw32/9.3-posix;/home/$DOCKER_USER/MPLAPACK_MINGW/bin\\\"\" >> .bashrc\nRUN cd ${WORK} && echo \"export WINEDEBUG=\\\"-all\\\"\" >> .bashrc\n## intel one api and wine settings end ###\n\nRUN cd ${WORK} && git clone https://github.com/nakatamaho/mplapack.git\nRUN cd ${WORK}/mplapack && git fetch origin v2.0\nRUN cd ${WORK}/mplapack && git checkout v2.0\nRUN cd ${WORK}/mplapack && git remote set-url origin git@github.com:nakatamaho/mplapack.git\nRUN cd ${WORK}/mplapack && git log -1\nRUN cd ${WORK}/mplapack && bash -x misc/reconfig.develop.sh\nRUN cd ${WORK}/mplapack && make -j`getconf _NPROCESSORS_ONLN`\n"
}