{
  "startTime": 1674255047748,
  "endTime": 1674255048991,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 44,
        "columnEnd": 231
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 29,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:8\nRUN sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-*\nRUN sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*\nRUN yum update -y\nRUN yum install -y gcc gcc-c++ gcc-gfortran make automake libtool && rm -rf /var/cache/yum\nRUN yum install -y python3 && rm -rf /var/cache/yum\nRUN yum install -y sudo which patch bzip2 git wget time file && rm -rf /var/cache/yum\nRUN yum install -y emacs && rm -rf /var/cache/yum\nRUN yum install -y epel-release && rm -rf /var/cache/yum\nRUN yum install -y diffutils && rm -rf /var/cache/yum\n\nARG DOCKER_UID=1000\nARG DOCKER_USER=docker\nARG DOCKER_PASSWORD=docker\nRUN useradd -u $DOCKER_UID -m $DOCKER_USER --shell /bin/bash -G wheel,root && \\\n    echo \"$DOCKER_USER:$DOCKER_PASSWD\" | chpasswd && \\\n    echo \"$DOCKER_USER ALL=(ALL) ALL\" >> /etc/sudoers && \\\n    echo \"$DOCKER_USER ALL=NOPASSWD: ALL\" >> /etc/sudoers\n\nARG GIT_EMAIL=\"maho.nakata@gmail.com\"\nARG GIT_NAME=\"NAKATA Maho\"\n\nUSER ${DOCKER_USER}\nRUN echo \"[user]\" >> /home/$DOCKER_USER/.gitconfig && \\\n    echo \"email = ${GIT_EMAIL}\" >> /home/$DOCKER_USER/.gitconfig && \\\n    echo \"name = ${GIT_NAME}\" >> /home/$DOCKER_USER/.gitconfig\n\nRUN cd /home/$DOCKER_USER && echo \"cd /home/$DOCKER_USER\" >> .bashrc\nRUN cd /home/$DOCKER_USER && wget https://github.com/nakatamaho/mplapack/releases/download/v1.9.9/mplapack-2.0.0-alpha.tar.xz\nRUN cd /home/$DOCKER_USER && tar xvfJ mplapack-2.0.0-alpha.tar.xz && rm mplapack-2.0.0-alpha.tar.xz\nRUN cd /home/$DOCKER_USER/mplapack-2.0.0\nARG CXX=\"g++\"\nARG CC=\"gcc\"\nARG FC=\"gfortran\"\nRUN /bin/bash -c 'set -ex && \\\n    ARCH=`uname -m` && \\\n    if [ \"$ARCH\" == \"x86_64\" ]; then \\\n       cd /home/$DOCKER_USER/mplapack-2.0.0 && ./configure --prefix=$HOME/MPLAPACK --enable-gmp=yes --enable-mpfr=yes --enable-_Float128=yes --enable-qd=yes --enable-dd=yes --enable-double=yes --enable-_Float64x=yes --enable-test=yes; \\\n    else \\\n       cd /home/$DOCKER_USER/mplapack-2.0.0 && ./configure --prefix=$HOME/MPLAPACK --enable-gmp=yes --enable-mpfr=yes --enable-_Float128=yes --enable-qd=yes --enable-dd=yes --enable-double=yes --enable-test=yes ; \\\n    fi'\nRUN cd /home/$DOCKER_USER/mplapack-2.0.0 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/MPLAPACK --enable-gmp=yes --enable-mpfr=yes --enable-_Float128=yes --e\\nable-qd=yes --enable-dd=yes --enable-double=yes --enable-_Float64x=yes --enable-test=yes\nRUN cd /home/$DOCKER_USER/mplapack-2.0.0 && make -j`getconf _NPROCESSORS_ONLN`\nRUN cd /home/$DOCKER_USER/mplapack-2.0.0 && make install\n"
}