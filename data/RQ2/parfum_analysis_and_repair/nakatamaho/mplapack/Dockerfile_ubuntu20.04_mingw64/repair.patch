diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nakatamaho/mplapack/Dockerfile_ubuntu20.04_mingw64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nakatamaho/mplapack/Dockerfile_ubuntu20.04_mingw64/repaired.Dockerfile
index ac0c58a..adda0c9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nakatamaho/mplapack/Dockerfile_ubuntu20.04_mingw64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nakatamaho/mplapack/Dockerfile_ubuntu20.04_mingw64/repaired.Dockerfile
@@ -6,8 +6,8 @@ ARG GIT_NAME="NAKATA Maho"
 
 RUN apt -y update
 RUN apt -y upgrade
-RUN apt install -y sudo 
-RUN apt install -y tzdata
+RUN apt install --no-install-recommends -y sudo && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y tzdata && rm -rf /var/lib/apt/lists/*;
 # set your timezone
 ENV TZ Asia/Tokyo
 RUN echo "${TZ}" > /etc/timezone \
@@ -15,10 +15,10 @@ RUN echo "${TZ}" > /etc/timezone \
   && ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime \
   && dpkg-reconfigure -f noninteractive tzdata
 
-RUN apt install -y build-essential mingw-w64 gfortran-mingw-w64 python3
-RUN apt install -y autotools-dev automake libtool
-RUN apt install -y git wget time
-RUN apt install -y ng-common ng-cjk emacs-nox
+RUN apt install --no-install-recommends -y build-essential mingw-w64 gfortran-mingw-w64 python3 && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y autotools-dev automake libtool && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y git wget time && rm -rf /var/lib/apt/lists/*;
+RUN apt install --no-install-recommends -y ng-common ng-cjk emacs-nox && rm -rf /var/lib/apt/lists/*;
 RUN sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
 
 RUN dpkg --add-architecture i386
@@ -48,7 +48,7 @@ ARG WINEDEBUG="-all"
 
 RUN cd /home/$DOCKER_USER && echo "cd /home/$DOCKER_USER" >> .bashrc
 RUN cd /home/$DOCKER_USER && wget https://github.com/nakatamaho/mplapack/releases/download/v1.9.9/mplapack-2.0.0-alpha.tar.xz
-RUN cd /home/$DOCKER_USER && tar xvfJ mplapack-2.0.0-alpha.tar.xz
+RUN cd /home/$DOCKER_USER && tar xvfJ mplapack-2.0.0-alpha.tar.xz && rm mplapack-2.0.0-alpha.tar.xz
 RUN cd /home/$DOCKER_USER/mplapack-2.0.0
 ARG CXX="x86_64-w64-mingw32-g++"
 ARG CC="x86_64-w64-mingw32-gcc"
@@ -56,7 +56,7 @@ ARG FC="x86_64-w64-mingw32-gfortran"
 ARG NM="x86_64-w64-mingw32-nm"
 ARG RANLIB="x86_64-w64-mingw32-ranlib"
 ARG AR="x86_64-w64-mingw32-ar"
-RUN cd /home/$DOCKER_USER/mplapack-2.0.0 && ./configure --prefix=$HOME/MPLAPACK --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --enable-gmp=yes --enable-mpfr=yes --enable-_Float128=yes --enable-qd=yes --enable-dd=yes --enable-double=yes --enable-_Float64x=yes --enable-test=yes
+RUN cd /home/$DOCKER_USER/mplapack-2.0.0 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=$HOME/MPLAPACK --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --enable-gmp=yes --enable-mpfr=yes --enable-_Float128=yes --enable-qd=yes --enable-dd=yes --enable-double=yes --enable-_Float64x=yes --enable-test=yes
 RUN cd /home/$DOCKER_USER/mplapack-2.0.0 && make -j`getconf _NPROCESSORS_ONLN`
 RUN cd /home/$DOCKER_USER/mplapack-2.0.0 && make install