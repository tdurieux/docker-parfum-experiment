diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intellabs/vdms/docker/base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intellabs/vdms/docker/base/Dockerfile/repaired.Dockerfile
index ab63b13..6f1b686 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/intellabs/vdms/docker/base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/intellabs/vdms/docker/base/Dockerfile/repaired.Dockerfile
@@ -15,9 +15,9 @@ ARG UBUNTU_NAME
 ARG MAVEN_OPTS
 
 # Install Packages
-RUN apt-get update && apt-get -y install software-properties-common && \
+RUN apt-get update && apt-get -y --no-install-recommends install software-properties-common && \
     add-apt-repository "deb http://security.ubuntu.com/ubuntu ${UBUNTU_NAME}-security main" && \
-    apt-get -y install apt-transport-https autoconf automake bison build-essential \
+    apt-get -y --no-install-recommends install apt-transport-https autoconf automake bison build-essential \
     bzip2 ca-certificates curl ed flex g++ git gnupg-agent javacc libarchive-tools \
     libatlas-base-dev libavcodec-dev libavformat-dev libboost-all-dev libbz2-dev \
     libc-ares-dev libdc1394-22-dev libgflags-dev libgoogle-glog-dev libgtest-dev \
@@ -25,9 +25,9 @@ RUN apt-get update && apt-get -y install software-properties-common && \
     libleveldb-dev liblmdb-dev liblz4-dev libopenblas-dev libopenmpi-dev \
     libpng-dev librdkafka-dev libsnappy-dev libssl-dev libswscale-dev libtbb-dev \
     libtbb2 libtiff-dev libtiff5-dev libtool maven mpich openjdk-11-jdk-headless \
-    pkg-config python python-dev python3-pip unzip wget
+    pkg-config python python-dev python3-pip unzip wget && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install numpy
+RUN pip3 install --no-cache-dir numpy
 
 # Pull Dependencies
 RUN git clone --branch v1.40.0 https://github.com/grpc/grpc.git && \
@@ -37,13 +37,13 @@ RUN git clone --branch v1.40.0 https://github.com/grpc/grpc.git && \
     git clone --branch v3.21.2 https://github.com/Kitware/CMake.git && \
     git clone --branch v1.7.1 https://github.com/facebookresearch/faiss.git && \
     git clone https://github.com/tonyzhang617/FLINNG.git && \
-    curl http://zlib.net/zlib-1.2.12.tar.gz -o zlib-1.2.12.tar.gz && \
-    curl https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/json-simple/json-simple-1.1.1.jar -o /usr/share/java/json-simple-1.1.1.jar && \
+    curl -f https://zlib.net/zlib-1.2.12.tar.gz -o zlib-1.2.12.tar.gz && \
+    curl -f https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/json-simple/json-simple-1.1.1.jar -o /usr/share/java/json-simple-1.1.1.jar && \
     wget https://github.com/TileDB-Inc/TileDB/archive/1.3.1.tar.gz
 
 # Install Dependencies
 RUN cd /CMake && ./bootstrap && make ${BUILD_THREADS} && make install && \
-    cd /swig && ./autogen.sh && ./configure && make ${BUILD_THREADS} && make install && \
+    cd /swig && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make ${BUILD_THREADS} && make install && \
     cd /faiss && mkdir build && cd build && cmake -DFAISS_ENABLE_GPU=OFF .. && make ${BUILD_THREADS} && make install && \
     cd /FLINNG && mkdir build && cd build && cmake .. && make ${BUILD_THREADS} && make install && \
     cd /grpc && git submodule update --init --recursive && cd third_party/protobuf/cmake && mkdir build && cd build && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE .. && make ${BUILD_THREADS} && make install && \
@@ -54,7 +54,7 @@ RUN cd /CMake && ./bootstrap && make ${BUILD_THREADS} && make install && \
     -DgRPC_CARES_PROVIDER=package -DgRPC_PROTOBUF_PROVIDER=package \
     -DgRPC_RE2_PROVIDER=package -DgRPC_SSL_PROVIDER=package \
     -DgRPC_ZLIB_PROVIDER=package -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE ../.. && make ${BUILD_THREADS} && make install && \
-    cd / && gunzip zlib-1.2.12.tar.gz && tar -xvf zlib-1.2.12.tar && cd zlib-1.2.12 && ./configure && make ${BUILD_THREADS} && make install && \
+    cd / && gunzip zlib-1.2.12.tar.gz && tar -xvf zlib-1.2.12.tar && cd zlib-1.2.12 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make ${BUILD_THREADS} && make install && \
     cd / && rm -rf zlib-1.2.12.tar zlib-1.2.12
 
 # Google Test & OpenCV