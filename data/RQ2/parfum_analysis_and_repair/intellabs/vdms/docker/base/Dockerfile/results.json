{
  "startTime": 1674247971191,
  "endTime": 1674247973191,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 32,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 87,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Copyright (C) 2021 Intel Corporation\n#SPDX-License-Identifier: MIT\n\nARG UBUNTU_VERSION=20.04\nARG UBUNTU_NAME=focal\nARG BUILD_THREADS=-j16\nARG MAVEN_OPTS='-Dhttps.nonProxyHosts=\"localhost|127.0.0.1\"'\n\n#1\nFROM ubuntu:${UBUNTU_VERSION}\n\n# Dockerfile limitations force a repetition of global args\nARG UBUNTU_VERSION\nARG UBUNTU_NAME\nARG MAVEN_OPTS\n\n# Install Packages\nRUN apt-get update && apt-get -y --no-install-recommends install software-properties-common && \\\n    add-apt-repository \"deb http://security.ubuntu.com/ubuntu ${UBUNTU_NAME}-security main\" && \\\n    apt-get -y --no-install-recommends install apt-transport-https autoconf automake bison build-essential \\\n    bzip2 ca-certificates curl ed flex g++ git gnupg-agent javacc libarchive-tools \\\n    libatlas-base-dev libavcodec-dev libavformat-dev libboost-all-dev libbz2-dev \\\n    libc-ares-dev libdc1394-22-dev libgflags-dev libgoogle-glog-dev libgtest-dev \\\n    libgtk-3-dev libgtk2.0-dev libhdf5-serial-dev libjpeg-dev libjpeg8-dev libjsoncpp-dev \\\n    libleveldb-dev liblmdb-dev liblz4-dev libopenblas-dev libopenmpi-dev \\\n    libpng-dev librdkafka-dev libsnappy-dev libssl-dev libswscale-dev libtbb-dev \\\n    libtbb2 libtiff-dev libtiff5-dev libtool maven mpich openjdk-11-jdk-headless \\\n    pkg-config python python-dev python3-pip unzip wget && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir numpy\n\n# Pull Dependencies\nRUN git clone --branch v1.40.0 https://github.com/grpc/grpc.git && \\\n    git clone --branch v4.0.2 https://github.com/swig/swig.git && \\\n    git clone --branch 4.5.3 https://github.com/opencv/opencv.git && \\\n    git clone --branch v0.6 https://github.com/tristanpenman/valijson.git && \\\n    git clone --branch v3.21.2 https://github.com/Kitware/CMake.git && \\\n    git clone --branch v1.7.1 https://github.com/facebookresearch/faiss.git && \\\n    git clone https://github.com/tonyzhang617/FLINNG.git && \\\n    curl -f https://zlib.net/zlib-1.2.12.tar.gz -o zlib-1.2.12.tar.gz && \\\n    curl -f https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/json-simple/json-simple-1.1.1.jar -o /usr/share/java/json-simple-1.1.1.jar && \\\n    wget https://github.com/TileDB-Inc/TileDB/archive/1.3.1.tar.gz\n\n# Install Dependencies\nRUN cd /CMake && ./bootstrap && make ${BUILD_THREADS} && make install && \\\n    cd /swig && ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make ${BUILD_THREADS} && make install && \\\n    cd /faiss && mkdir build && cd build && cmake -DFAISS_ENABLE_GPU=OFF .. && make ${BUILD_THREADS} && make install && \\\n    cd /FLINNG && mkdir build && cd build && cmake .. && make ${BUILD_THREADS} && make install && \\\n    cd /grpc && git submodule update --init --recursive && cd third_party/protobuf/cmake && mkdir build && cd build && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE .. && make ${BUILD_THREADS} && make install && \\\n    cd ../../../abseil-cpp && mkdir build && cd build && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE .. && make ${BUILD_THREADS} && make install && \\\n    cd ../../re2/ && mkdir build && cd build && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE .. && make ${BUILD_THREADS} && make install && \\\n    cd ../../zlib/ && mkdir build && cd build && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE .. && make ${BUILD_THREADS} && make install && \\\n    cd /grpc/cmake && mkdir build && cd build && cmake -DgRPC_INSTALL=ON -DgRPC_BUILD_TESTS=OFF -DgRPC_ABSL_PROVIDER=package \\\n    -DgRPC_CARES_PROVIDER=package -DgRPC_PROTOBUF_PROVIDER=package \\\n    -DgRPC_RE2_PROVIDER=package -DgRPC_SSL_PROVIDER=package \\\n    -DgRPC_ZLIB_PROVIDER=package -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE ../.. && make ${BUILD_THREADS} && make install && \\\n    cd / && gunzip zlib-1.2.12.tar.gz && tar -xvf zlib-1.2.12.tar && cd zlib-1.2.12 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make ${BUILD_THREADS} && make install && \\\n    cd / && rm -rf zlib-1.2.12.tar zlib-1.2.12\n\n# Google Test & OpenCV\nRUN cd /usr/src/gtest && cmake . && make ${BUILD_THREADS} && mv lib/libgtest* /usr/lib/ && \\\n    cd /opencv && mkdir build && cd build && cmake -D BUILD_PERF_TESTS=OFF -D BUILD_TESTS=OFF .. && make ${BUILD_THREADS} && make install\n\n# TileDB\nRUN cd / && tar xf 1.3.1.tar.gz && rm 1.3.1.tar.gz && \\\n    cd TileDB-1.3.1 && mkdir build && cd build && \\\n    ../bootstrap --prefix=/usr/local/ && make $BUILD_THREADS && make install-tiledb && \\\n    rm -rf /TileDB-1.3.1\n\n# Maven\nRUN ln -s /grpc/third_party/protobuf/cmake/build/protoc /grpc/third_party/protobuf/src/protoc && \\\n    cd /grpc/third_party/protobuf/java/core && mvn package && \\\n    cp $(ls target/protobuf-java*.jar) /usr/share/java/protobuf.jar\n\n# Valijson\nRUN cd /valijson && cp -r include/* /usr/local/include/ && \\\n    cd / && rm -rf valijson && rm -rf faiss && \\\n    rm -rf grpc && rm -rf opencv && rm -rf swig && rm -rf CMake\n\n# VDMS\nRUN git clone https://github.com/IntelLabs/vdms.git && cd vdms && \\\n    git checkout develop && git submodule update --init --recursive && \\\n    mkdir build && cd build && cmake .. && make ${BUILD_THREADS} && \\\n    cp /vdms/config-vdms.json /vdms/build/\n\nRUN echo '#!/bin/bash' > /start.sh && echo 'cd /vdms/build' >> /start.sh && \\\n    echo './vdms' >> /start.sh && chmod 755 /start.sh\n\nCMD [\"/start.sh\"]\n"
}