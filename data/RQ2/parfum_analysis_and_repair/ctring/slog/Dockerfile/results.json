{
  "startTime": 1674216822453,
  "endTime": 1674216823069,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 8,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 92
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal AS builder\n    ARG CMAKE_OPTIONS\n\n    # Avoid interactive installation\n    ENV DEBIAN_FRONTEND=noninteractive\n    RUN apt-get update\n    RUN apt-get -y --no-install-recommends install wget build-essential cmake git pkg-config && rm -rf /var/lib/apt/lists/*;\n\n    WORKDIR /src\n\n    COPY ./install-deps.sh .\n    RUN ./install-deps.sh -d\n\n    COPY . .\n    RUN rm -rf build \\\n        && mkdir build \\\n        && cd build \\\n        && cmake .. -DBUILD_SLOG_TESTS=OFF ${CMAKE_OPTIONS} -DCMAKE_BUILD_TYPE=release \\\n        && make -j$(nproc) \\\n        && cd ..\n\nFROM ubuntu:focal AS runner\n    # If set (to anything), also create an image with tools (exclude the toolings)\n    ARG INCLUDE_TOOLS\n\n    WORKDIR /opt/slog\n    COPY --from=builder /src/build/slog .\n    COPY --from=builder /src/build/client .\n    COPY --from=builder /src/build/benchmark .\n    COPY --from=builder /src/build/scheduler_benchmark .\n    COPY --from=builder /src/examples/*.conf ./\n    COPY --from=builder /src/tools/ tools/\n\n    RUN if [ -n \"$INCLUDE_TOOLS\" ]; then \\\n        apt-get update; \\\n        apt-get -y --no-install-recommends install python3 python3-pip; rm -rf /var/lib/apt/lists/*; \\\n        python3 -m pip install -r tools/requirements.txt; \\\n        chmod +x tools/*.py; \\\n        fi\n\n    ENV PATH=\"/opt/slog:${PATH}\"\n    ENV PATH=\"/opt/slog/tools:${PATH}\""
}