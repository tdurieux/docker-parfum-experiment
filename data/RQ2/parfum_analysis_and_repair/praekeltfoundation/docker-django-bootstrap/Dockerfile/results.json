{
  "startTime": 1674252601373,
  "endTime": 1674252602321,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PYTHON_VERSION=3.7-stretch\nFROM praekeltfoundation/python-base:${PYTHON_VERSION}\n\n# Create the user and group first as they shouldn't change often.\n# Specify the UID/GIDs so that they do not change somehow and mess with the\n# ownership of external volumes.\nRUN addgroup --system --gid 107 django \\\n    && adduser --system --uid 104 --ingroup django django \\\n    && mkdir /etc/gunicorn\n\n# Install libpq for psycopg2 for PostgreSQL support\n RUN apt-get-install.sh libpq5\n\n# Install a modern Nginx and configure\nENV NGINX_VERSION=1.18.0 \\\n    NGINX_GPG_KEY=573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62\nRUN set -ex; \\\n    fetchDeps=\" \\\n        wget \\\n        $(command -v gpg > /dev/null || echo 'dirmngr gnupg') \\\n    \"; \\\n    apt-get-install.sh $fetchDeps; \\\n    wget https://nginx.org/keys/nginx_signing.key; \\\n    [ \"$(gpg --batch -q --with-fingerprint --with-colons nginx_signing.key | awk -F: '/^fpr:/ { print $10 }')\" \\\n        = $NGINX_GPG_KEY ]; \\\n    apt-key add nginx_signing.key; \\\n    codename=\"$(. /etc/os-release; echo $VERSION | grep -oE [a-z]+)\"; \\\n    echo \"deb http://nginx.org/packages/debian/ $codename nginx\" > /etc/apt/sources.list.d/nginx.list; \\\n    rm nginx_signing.key; \\\n    apt-get-purge.sh $fetchDeps; \\\n    \\\n    apt-get-install.sh \"nginx=$NGINX_VERSION-1\\~$codename\"; \\\n    rm /etc/nginx/conf.d/default.conf; \\\n# Add nginx user to django group so that Nginx can read/write to gunicorn socket\n    adduser nginx django\nCOPY nginx/ /etc/nginx/\n\n# Install gunicorn\nCOPY gunicorn/ /etc/gunicorn/\nRUN pip install --no-cache-dir -r /etc/gunicorn/requirements.txt\n\nEXPOSE 8000\nWORKDIR /app\n\nCOPY django-entrypoint.sh celery-entrypoint.sh \\\n    /scripts/\nENTRYPOINT [\"tini\", \"--\", \"django-entrypoint.sh\"]\nCMD []\n"
}