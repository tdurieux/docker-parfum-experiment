{
  "startTime": 1674248926268,
  "endTime": 1674248926832,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nRUN yum update -y\nRUN yum install -y libspatialindex-dev git curl gcc-c++ libtool autoconf automake && yum clean all && rm -rf /var/cache/yum\nRUN yum install -y openssl-devel bzip2-devel libffi-devel zlib-devel wget xz-devel && yum clean all && rm -rf /var/cache/yum\nRUN yum groupinstall -y 'Development Tools' && yum clean all\n\nRUN wget https://www.python.org/ftp/python/3.8.10/Python-3.8.10.tgz\nRUN tar xzf Python-3.8.10.tgz && rm Python-3.8.10.tgz\n\nWORKDIR /Python-3.8.10\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations\nRUN make install\n\nRUN yum install -y python3-pip procps && yum clean all && rm -rf /var/cache/yum\n\nWORKDIR /tmp\nCOPY ./requirements-worker.txt ./requirements-worker.txt\nRUN pip3 install --no-cache-dir --user -r ./requirements-worker.txt\n\n### Copy built python packages\n#COPY --from=build-packages /root/.local /root/.local\nENV PATH=/root/.local/bin:$PATH\n\n# Enviroment setup\nENV OASIS_MEDIA_ROOT=/shared-fs\nENV OASIS_ENV_OVERRIDE=true\n\n# Setup worker dir and user\nRUN adduser --shell /bin/bash  worker\n\nWORKDIR /home/worker\n\n# Copy in worker files\nCOPY ./src/startup_worker.sh ./startup.sh\nCOPY ./src/startup_tester.sh ./runtest\nCOPY ./src/startup_tester_S3.sh ./runtest_S3\nCOPY ./conf.ini ./\nCOPY ./src/__init__.py ./src/\nCOPY ./src/common ./src/common/\nCOPY ./src/conf ./src/conf/\nCOPY ./src/model_execution_worker/ ./src/model_execution_worker/\nCOPY ./src/utils/ ./src/utils/\nCOPY ./src/utils/worker_bashrc /root/.bashrc\nCOPY ./tests/integration /home/worker/tests/integration\nCOPY ./VERSION ./\n\n# Add required directories\nRUN mkdir -p /var/oasis && \\\n    mkdir -p /home/worker/model && \\\n    mkdir -p /var/log/oasis && \\\n    touch /var/log/oasis/worker.log && \\\n    chmod 777 /var/log/oasis/worker.log\nRUN chmod -R 777 /home/worker /var/log/oasis /var/oasis && \\\n    chown -R worker /home/worker && \\\n    chown -R worker /var/oasis && \\\n    chown -R worker /var/log\n\nENTRYPOINT ./startup.sh\n"
}