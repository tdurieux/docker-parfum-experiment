{
  "startTime": 1674249362859,
  "endTime": 1674249363632,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 81,
        "columnEnd": 137
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 130
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- STAGE 1 -----\nFROM python:3.9.7-alpine3.14 AS build-packages\n\nRUN apk update && apk add --no-cache curl gcc mariadb-dev bash build-base musl-dev linux-headers libressl-dev libffi-dev postgresql-dev libpq\n\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\nCOPY ./requirements-server.txt ./requirements-server.txt\nRUN pip install --no-cache-dir --user --no-warn-script-location -r ./requirements-server.txt && pip install --no-cache-dir --no-warn-script-location --user mysqlclient\n\n\n# ---- STAGE 2 ----\nFROM python:3.9.7-alpine3.14\nRUN apk update \\\n && apk add --no-cache mariadb-dev libpq bash curl \\\n && apk upgrade --available\n\n# Note general package upgrade can be problematic for consistent builds, but safer in terms of security\n\n\nCOPY --from=build-packages /root/.local /root/.local\nENV PATH=/root/.local/bin:$PATH\n\nWORKDIR /var/www/oasis\nENV OASIS_MEDIA_ROOT=/shared-fs\nENV OASIS_DEBUG=false\nRUN mkdir -p /var/log/oasis\n\n# Copy startup script + server config\nCOPY ./src/startup_server.sh /usr/local/bin/startup\nCOPY ./src/utils/wait-for-it.sh /usr/local/bin/wait-for-it\nCOPY ./src/utils/wait-for-server.sh /usr/local/bin/wait-for-server\nRUN chmod +x /usr/local/bin/startup /usr/local/bin/wait-for-it\n\nCOPY ./asgi ./asgi\nRUN chmod +x ./asgi/run-asgi.sh\n\nCOPY ./conf.ini ./\nCOPY manage.py .\nCOPY ./src/utils/set_default_user.py .\nCOPY ./src/utils/server_bashrc /root/.bashrc\n\nCOPY ./src/ ./src\nCOPY ./src/server /var/www/oasis/src/server\nCOPY ./src/common /var/www/oasis/src/common\nCOPY ./src/conf /var/www/oasis/src/conf\nCOPY ./VERSION /var/www/oasis/VERSION\n\nCOPY ./model_resource.json /var/www/oasis/src/server/static/model_resource.json\nRUN OASIS_API_SECRET_KEY=supersecret python manage.py collectstatic --noinput\nENV OASIS_SERVER_DB_ENGINE django.db.backends.mysql\n\nEXPOSE 8000\n\nENTRYPOINT [\"startup\"]\nCMD [\"./asgi/run-asgi.sh\"]\n"
}