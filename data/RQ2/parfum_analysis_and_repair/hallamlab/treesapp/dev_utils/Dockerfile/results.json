{
  "startTime": 1674255940950,
  "endTime": 1674255942254,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 150
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 169
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 17,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 69,
        "columnEnd": 81
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 1,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 1,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 86,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 44,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 44,
        "columnStart": 1,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\nENV TREESAPP_VERSION=\"0.11.3\"\\\n  MAFFT_VERSION=\"7.475-1\"\\\n  BWA_VERSION=\"0.7.17\"\\\n  PRODIGAL_VERSION=\"2.6.3\"\\\n  HMMER_VERSION=\"3.3\"\\\n  RAXML_VERSION=\"1.0.1\"\\\n  EPA_VERSION=\"0.3.8\"\\\n  VSEARCH_VERSION=\"2.15.0\"\\\n  MMSEQS_VERSION=\"12-113e3\"\n\nLABEL base.image=\"ubuntu:bionic\"\nLABEL container.version=\"0.3\"\nLABEL software=\"TreeSAPP\"\nLABEL software.version=${TREESAPP_VERSION}\nLABEL description=\"A Python package for gene-centric taxonomic and functional classification using phylogenetic placement\"\nLABEL website=\"https://github.com/hallamlab/TreeSAPP\"\nLABEL license=\"GNU General Public License v3.0\"\nLABEL maintainer=\"Connor Morgan-Lang\"\nLABEL maintainer.email=\"c.morganlang@gmail.com\"\n\nRUN apt-get update && \\\n apt-get -y --no-install-recommends install \\\n gcc \\\n dpkg-dev \\\n curl \\\n wget \\\n zip \\\n git \\\n libz-dev \\\n default-jdk \\\n time \\\n libssl-dev \\\n libsqlite3-dev \\\n autotools-dev \\\n libtool \\\n flex \\\n bison \\\n cmake \\\n automake \\\n autoconf \\\n python3 \\\n python3-distutils \\\n python3-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -s /usr/bin/python3 /usr/bin/python\nRUN curl -f https://bootstrap.pypa.io/get-pip.py | python\nRUN python -V\n\nRUN curl -f -LJ0 --output /usr/local/bin/BMGE.jar https://github.com/hallamlab/TreeSAPP/raw/master/treesapp/sub_binaries/BMGE.jar\n\nRUN curl -f -LJ0 --output mafft.deb https://mafft.cbrc.jp/alignment/software/mafft_${MAFFT_VERSION}_amd64.deb && \\\n dpkg -i mafft.deb && \\\n rm mafft.deb\n\nRUN wget https://github.com/torognes/vsearch/archive/v${VSEARCH_VERSION}.tar.gz && \\\n tar xzf v${VSEARCH_VERSION}.tar.gz && \\\n cd vsearch-${VSEARCH_VERSION} && \\\n ./autogen.sh && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && cd - && rm v${VSEARCH_VERSION}.tar.gz\n\nRUN curl -f -LJ0 --output mmseqs-linux-sse41.tar.gz https://github.com/soedinglab/MMseqs2/releases/download/${MMSEQS_VERSION}/MMseqs2-Linux-SSE4_1.tar.gz && \\\n tar xvzf mmseqs-linux-sse41.tar.gz && \\\n cp mmseqs/bin/mmseqs /usr/local/bin && rm mmseqs-linux-sse41.tar.gz\n\nRUN curl -f -LJ0 --output /usr/bin/prodigal https://github.com/hyattpd/Prodigal/releases/download/v${PRODIGAL_VERSION}/prodigal.linux && \\\n chmod +x /usr/bin/prodigal\n\nRUN curl -f -LJ0 --output v${BWA_VERSION}.tar.gz https://github.com/lh3/bwa/archive/v${BWA_VERSION}.tar.gz && \\\n tar -xzf v${BWA_VERSION}.tar.gz; cd bwa-${BWA_VERSION}/; make; rm *.o; cd -; cp bwa-${BWA_VERSION}/bwa /usr/bin/bwa && \\\n rm v${BWA_VERSION}.tar.gz\n\nRUN curl -f -LJ0 --output hmmer-${HMMER_VERSION}.tar.gz https://eddylab.org/software/hmmer/hmmer-${HMMER_VERSION}.tar.gz && \\\n tar -xzf hmmer-${HMMER_VERSION}.tar.gz; cd hmmer-${HMMER_VERSION}/; ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; make -f Makefile && \\\n cp src/hmmsearch src/hmmbuild src/hmmalign /usr/bin/ && \\\n cd -; rm hmmer-${HMMER_VERSION}.tar.gz\n\nRUN curl -f -LJ0 --output od-seq.tar.gz https://www.bioinf.ucd.ie/download/od-seq.tar.gz; tar -xzf od-seq.tar.gz && rm od-seq.tar.gz\nENV ODSEQ_SOURCES=\"OD-Seq/AliReader.cpp OD-Seq/Bootstrap.cpp OD-Seq/DistCalc.cpp OD-Seq/DistMatReader.cpp \\\nOD-Seq/DistWriter.cpp OD-Seq/FastaWriter.cpp OD-Seq/IQR.cpp OD-Seq/ODseq.cpp OD-Seq/PairwiseAl.cpp \\\nOD-Seq/Protein.cpp OD-Seq/ResultWriter.cpp OD-Seq/runtimeargs.cpp OD-Seq/util.cpp\"\nRUN g++ -fopenmp -o /usr/bin/OD-seq ${ODSEQ_SOURCES} && \\\n rm od-seq.tar.gz\n\nRUN curl -f -LJ0 --output /usr/bin/FastTree https://microbesonline.org/fasttree/FastTreeDbl && \\\n chmod +x /usr/bin/FastTree\n\nRUN curl -f -LJ0 --output raxml-ng_v${RAXML_VERSION}.zip https://github.com/amkozlov/raxml-ng/releases/download/${RAXML_VERSION}/raxml-ng_v${RAXML_VERSION}_linux_x86_64.zip && \\\n mkdir raxml-ng_v${RAXML_VERSION}; unzip raxml-ng_v${RAXML_VERSION}.zip -d raxml-ng_v${RAXML_VERSION} && \\\n cp raxml-ng_v${RAXML_VERSION}/raxml-ng /usr/local/bin/ && \\\n rm -r raxml-ng_v${RAXML_VERSION}.zip raxml-ng_v${RAXML_VERSION}\n\nRUN curl -f -LJ0 --output epa-ng.tar.gz https://github.com/Pbdas/epa-ng/archive/v${EPA_VERSION}.tar.gz && \\\n tar -xzf epa-ng.tar.gz; cd epa-ng-${EPA_VERSION}/ && \\\n make; cp bin/epa-ng /usr/bin/; cd - && \\\n rm epa-ng.tar.gz\n\nRUN pip install --no-cache-dir treesapp==${TREESAPP_VERSION} && \\\n rm -rf TreeSAPP/\n\nRUN treesapp info -v\n"
}