{
  "startTime": 1674251694752,
  "endTime": 1674251695670,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM arm64v8/debian:buster-slim AS build\n\nLABEL maintainer=\"Dirk LÃ¼th <dirk.lueth@gmail.com>\" \\\n      org.label-schema.docker.dockerfile=\"/Dockerfile\" \\\n      org.label-schema.name=\"easyepg.minimal\"\n\nARG BUILD_DEPENDENCIES=\"build-essential cpanminus\"\nARG DEPENDENCIES=\"socat cron iproute2 nano procps phantomjs dialog curl file wget git libxml2-utils perl perl-doc jq php php-curl xml-twig-tools liblocal-lib-perl inetutils-ping zip unzip ca-certificates\"\n\nENV MODE=\"run\" \\\n    USER_ID=\"1099\" \\\n    GROUP_ID=\"1099\" \\\n    TIMEZONE=\"Europe/Berlin\" \\\n    FREQUENCY=\"0 2 * * *\" \\\n    UPDATE=\"yes\" \\\n    REPO=\"sunsettrack4\" \\\n    BRANCH=\"master\" \\\n    PACKAGES=\"\" \\\n    DEBIAN_FRONTEND=\"noninteractive\" \\\n    TERM=xterm \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LANG=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\" \\\n    CURL_CA_BUNDLE=\"/etc/ssl/certs/ca-certificates.crt\" \\\n    CLEANUP=\"/tmp/* /var/tmp/* /var/log/* /var/lib/apt/lists/* /var/lib/{apt,dpkg,cache,log}/ /var/cache/apt/archives /usr/share/doc/ /usr/share/man/ /usr/share/locale/ /root/.cpan /root/.cpanm\"\n\nCOPY root/qemu-aarch64-static /usr/bin/\nCOPY root/entrypoint /usr/local/sbin/entrypoint\nCOPY root/easyepg.process /usr/local/bin/easyepg.process\nCOPY root/easyepg.update /usr/local/bin/easyepg.update\nCOPY root/packages.install /usr/local/sbin/packages.install\nCOPY root/packages.cleanup /usr/local/sbin/packages.cleanup\nCOPY root/easyepg.cron /etc/easyepg.cron\n\nRUN apt-get -qy update \\\n    ### tweak some apt & dpkg settngs\n    && echo \"APT::Install-Recommends \"0\";\" >> /etc/apt/apt.conf.d/docker-noinstall-recommends \\\n    && echo \"APT::Install-Suggests \"0\";\" >> /etc/apt/apt.conf.d/docker-noinstall-suggests \\\n    && echo \"Dir::Cache \"\";\" >> /etc/apt/apt.conf.d/docker-nocache \\\n    && echo \"Dir::Cache::archives \"\";\" >> /etc/apt/apt.conf.d/docker-nocache \\\n    && echo \"path-exclude=/usr/share/locale/*\" >> /etc/dpkg/dpkg.cfg.d/docker-nolocales \\\n    && echo \"path-exclude=/usr/share/man/*\" >> /etc/dpkg/dpkg.cfg.d/docker-noman \\\n    && echo \"path-exclude=/usr/share/doc/*\" >> /etc/dpkg/dpkg.cfg.d/docker-nodoc \\\n    && echo \"path-include=/usr/share/doc/*/copyright\" >> /etc/dpkg/dpkg.cfg.d/docker-nodoc \\\n    ### install basic packages \\\n    && apt-get install --no-install-recommends -qy apt-utils locales tzdata \\\n    ### limit locale to en_US.UTF-8\n    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \\\n    && locale-gen --purge en_US.UTF-8 \\\n    && update-locale LANG=en_US.UTF-8 \\\n    ### run dist-upgrade\n    && apt-get dist-upgrade -qy \\\n    ### install easyepg dependencies\n    && apt-get install --no-install-recommends -qy ${BUILD_DEPENDENCIES} ${DEPENDENCIES} \\\n    ### install cpan modules\n    && cpan -T App:cpanminus \\\n    && cpanm install -n utf8 \\\n    && cpanm install -n JSON \\\n    && cpanm install -n XML::Rules \\\n    && cpanm install -n XML::DOM \\\n    && cpanm install -n Data::Dumper \\\n    && cpanm install -n Time::Piece \\\n    && cpanm install -n Time::Seconds \\\n    && cpanm install -n DateTime \\\n    && cpanm install -n DateTime::Format::DateParse \\\n    && cpanm install -n DateTime::Format::Strptime \\\n    ### create necessary files/directories\n    && mkdir -p /easyepg \\\n    && touch /xmltv.sock \\\n    ### alter permissions\n    && chmod +x /usr/local/sbin/entrypoint \\\n    && chmod +x /usr/local/bin/easyepg.process \\\n    && chmod +x /usr/local/bin/easyepg.update \\\n    && chmod +x /usr/local/sbin/packages.install \\\n    && chmod +x /usr/local/sbin/packages.cleanup \\\n    && chmod 644 /etc/easyepg.cron \\\n    ### cleanup\n    && apt-get remove --purge -qy ${BUILD_DEPENDENCIES} \\\n    && /usr/local/sbin/packages.cleanup && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [ \"/usr/local/sbin/entrypoint\" ]\n\nVOLUME /easyepg\n\nFROM build\n\nRUN rm -rf /usr/bin/qemu-*\n"
}