{
  "startTime": 1674248724657,
  "endTime": 1674248725848,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 78,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 74,
        "columnEnd": 100
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM jupyter/scipy-notebook\nLABEL maintainer=\"iwasakishuto <cabernet.rock@gmail.com>\"\nARG requirements=\"Translation-Gummy\"\n\nUSER root\n# Install system packages\n\nRUN echo \"deb http://security.ubuntu.com/ubuntu bionic-security main\" >> /etc/apt/sources.list \\\n && apt-get update --fix-missing \\\n && apt-get update -y \\\n && apt-get install -y --no-install-recommends \\\n      vim \\\n      cmake \\\n      g++ \\\n      git \\\n    #   wkhtmltopdf \n      build-essential \\\n      xorg \\\n    #   libssl-dev \\\n      libssl1.0-dev \\      \n      libxrender-dev \\\n      unzip \\\n      gdebi \\\n      wget \\\n      xvfb \\\n      libfontconfig \\\n && apt-get autoremove -y \\\n && apt-get clean -y \\\n && rm -rf /var/lib/apt/lists/*\n\n# Copy or Download Japanese fonts.\nCOPY fonts /usr/share/fonts\nRUN if [ \"$(ls -U1 /usr/share/fonts | wc -l)\" -gt 0 ]; then \\\n      echo \"Use the font you have prepared:\\n$(ls fonts)\"; \\\n    else \\\n      echo \"Download Japanese fonts\"; \\\n      wget https://noto-website.storage.googleapis.com/pkgs/Noto-unhinted.zip \\\n        && unzip -d NotoSansJapanese Noto-unhinted.zip \\\n        && mkdir -p /usr/share/fonts/opentype \\\n        && mv -fv ./NotoSansJapanese /usr/share/fonts/opentype/NotoSansJapanese \\\n        && rm -rfv Noto-unhinted.zip \\\n        && fc-cache -fv; \\\n    fi\n\n# Set locale.\nRUN apt-get install --no-install-recommends -y locales \\\n  && locale-gen ja_JP.UTF-8 \\\n  && localedef -f UTF-8 -i ja_JP ja_JP && rm -rf /var/lib/apt/lists/*;\nENV LANG ja_JP.UTF-8\nENV LANGUAGE ja_JP:jp\nENV LC_ALL ja_JP.UTF-8\n\n# Install wkhtmltopdf. (with patched qt)\nWORKDIR /opt\nENV WKHTMLTOPDF_VERSION 0.12.4\nRUN wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/${WKHTMLTOPDF_VERSION}/wkhtmltox-${WKHTMLTOPDF_VERSION}_linux-generic-amd64.tar.xz\nRUN tar vxfJ wkhtmltox-${WKHTMLTOPDF_VERSION}_linux-generic-amd64.tar.xz \\\n && ln -s /opt/wkhtmltox/bin/wkhtmltopdf /usr/bin/wkhtmltopdf && rm wkhtmltox-${WKHTMLTOPDF_VERSION}_linux-generic-amd64.tar.xz\n\n# Permission.\nENV NB_USER gummy\nENV NB_UID 1001\nRUN useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\n    mkdir -p /src /src-python-magic && \\\n    chown $NB_USER /src /src-python-magic\nUSER $NB_USER\n\n# Install Python packages and PyGuitar\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir ${requirements} && \\\n    git clone git://github.com/julian-r/python-magic.git /src-python-magic && pip install --no-cache-dir -e /src-python-magic && \\\n    git clone git://github.com/iwasakishuto/Translation-Gummy.git /src && pip install --no-cache-dir -e /src[tests] && \\\n    pip install --no-cache-dir git+git://github.com/iwasakishuto/Translation-Gummy.git\n\nENV PYTHONPATH='/src/:$PYTHONPATH'\n\nWORKDIR /data\n\nCMD jupyter notebook --port=8888 --ip=0.0.0.0"
}