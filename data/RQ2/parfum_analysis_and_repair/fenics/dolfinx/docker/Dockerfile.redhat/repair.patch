diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fenics/dolfinx/docker/Dockerfile.redhat b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fenics/dolfinx/docker/Dockerfile.redhat/repaired.Dockerfile
index 1e78825..59613dd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fenics/dolfinx/docker/Dockerfile.redhat
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fenics/dolfinx/docker/Dockerfile.redhat/repaired.Dockerfile
@@ -49,12 +49,12 @@ ENV PATH="${DEVTOOLSET_ROOTPATH}/usr/bin:${PATH}"
 ENV LD_LIBRARY_PATH="${DEVTOOLSET_ROOTPATH}/usr/lib64:${DEVTOOLSET_ROOTPATH}/usr/lib:${DEVTOOLSET_ROOTPATH}/usr/lib64/dyninst:${DEVTOOLSET_ROOTPATH}/usr/lib/dyninst:/usr/local/lib64:${LD_LIBRARY_PATH}"
 
 # Build MPICH (see https://github.com/pmodels/mpich/issues/5811)
-RUN curl -L -O http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \
+RUN curl -f -L -O http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \
     tar -xf mpich-${MPICH_VERSION}.tar.gz && \
     cd mpich-${MPICH_VERSION} && \
-    FCFLAGS=-fallow-argument-mismatch FFLAGS=-fallow-argument-mismatch ./configure --with-device=ch4:ofi --enable-shared --prefix=/usr/local && \
+    FCFLAGS=-fallow-argument-mismatch FFLAGS=-fallow-argument-mismatch ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-device=ch4:ofi --enable-shared --prefix=/usr/local && \
     make -j${BUILD_NP} install && \
-    rm -rf /tmp/*
+    rm -rf /tmp/* && rm mpich-${MPICH_VERSION}.tar.gz
 
 # First set of dependencies for building and running Python DOLFINx
 # Second set of dependencies for running DOLFINx tests
@@ -62,7 +62,7 @@ RUN python3 -m pip install --no-binary="numpy" --no-cache-dir cffi numba numpy==
     python3 -m pip install --no-cache-dir cppimport pytest pytest-xdist scipy matplotlib
 
 # Build PETSc
-RUN curl -L -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
+RUN curl -f -L -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz && \
     mkdir petsc && \
     tar -xf petsc-lite-${PETSC_VERSION}.tar.gz -C petsc --strip-components=1 && \
     cd petsc && \
@@ -84,25 +84,25 @@ RUN curl -L -O http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${P
     make install && \
     cd src/binding/petsc4py && \
     PETSC_DIR=/usr/local python3 -m pip install --no-cache-dir . && \
-    rm -rf /tmp/*
+    rm -rf /tmp/* && rm petsc-lite-${PETSC_VERSION}.tar.gz
 
 ENV PETSC_DIR=/usr/local
 
 # System Boost too old
-RUN curl -L -O https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION_UNDERSCORES}.tar.gz && \
+RUN curl -f -L -O https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION_UNDERSCORES}.tar.gz && \
     tar -xf boost_${BOOST_VERSION_UNDERSCORES}.tar.gz && \
     cd boost_${BOOST_VERSION_UNDERSCORES} && \
     ./bootstrap.sh --prefix=/usr/local && \
     ./b2 -j ${BUILD_NP} --with-timer --with-filesystem --with-program_options cxxflags="-fPIC -std=c++11" install && \
-    rm -rf /tmp/*
+    rm -rf /tmp/* && rm boost_${BOOST_VERSION_UNDERSCORES}.tar.gz
 
 # Build HDF5
-RUN curl -L -O https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-${HDF5_SERIES}/hdf5-${HDF5_SERIES}.${HDF5_PATCH}/src/hdf5-${HDF5_SERIES}.${HDF5_PATCH}.tar.gz && \
+RUN curl -f -L -O https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-${HDF5_SERIES}/hdf5-${HDF5_SERIES}.${HDF5_PATCH}/src/hdf5-${HDF5_SERIES}.${HDF5_PATCH}.tar.gz && \
     tar -xf hdf5-${HDF5_SERIES}.${HDF5_PATCH}.tar.gz && \
     cd hdf5-${HDF5_SERIES}.${HDF5_PATCH} && \
-    ./configure --prefix=/usr/local --enable-parallel --enable-shared --enable-static=no && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-parallel --enable-shared --enable-static=no && \
     make -j${BUILD_NP} install && \
-    rm -rf /tmp/*
+    rm -rf /tmp/* && rm hdf5-${HDF5_SERIES}.${HDF5_PATCH}.tar.gz
 
 # Install xtensor libraries
 RUN git clone -b ${XTL_VERSION} --single-branch https://github.com/xtensor-stack/xtl.git && \