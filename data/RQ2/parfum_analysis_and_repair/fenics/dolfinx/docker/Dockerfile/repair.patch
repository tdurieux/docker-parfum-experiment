diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fenics/dolfinx/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fenics/dolfinx/docker/Dockerfile/repaired.Dockerfile
index 3e0ff55..7c0c73f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/fenics/dolfinx/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/fenics/dolfinx/docker/Dockerfile/repaired.Dockerfile
@@ -113,7 +113,7 @@ ENV OPENBLAS_NUM_THREADS=1 \
 RUN export DEBIAN_FRONTEND=noninteractive && \
     apt-get -qq update && \
     apt-get -yq --with-new-pkgs -o Dpkg::Options::="--force-confold" upgrade && \
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
     clang \
     cmake \
     g++ \
@@ -130,7 +130,7 @@ RUN export DEBIAN_FRONTEND=noninteractive && \
     python3-pip \
     python3-setuptools && \
     #
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
     catch2 \
     clang-format \
     doxygen \
@@ -140,13 +140,13 @@ RUN export DEBIAN_FRONTEND=noninteractive && \
     valgrind \
     wget && \
     #
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
     libglu1 \
     libxcursor-dev \
     libxft2 \
     libxinerama1 \
     libfltk1.3-dev \
-    libfreetype6-dev  \
+    libfreetype6-dev \
     libgl1-mesa-dev \
     libocct-foundation-dev \
     libocct-data-exchange-dev && \
@@ -155,17 +155,17 @@ RUN export DEBIAN_FRONTEND=noninteractive && \
 
 # Install MPI
 RUN if [ "$MPI" = "mpich" ]; then \
-    wget http://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \
-    tar xfz mpich-${MPICH_VERSION}.tar.gz  && \
-    cd mpich-${MPICH_VERSION}  && \
-    ./configure ${MPICH_CONFIGURE_OPTIONS} && \
-    make -j${BUILD_NP} install; \
+    wget https://www.mpich.org/static/downloads/${MPICH_VERSION}/mpich-${MPICH_VERSION}.tar.gz && \
+    tar xfz mpich-${MPICH_VERSION}.tar.gz && \
+    cd mpich-${MPICH_VERSION} && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" ${MPICH_CONFIGURE_OPTIONS} && \
+    make -j${BUILD_NP} install; rm mpich-${MPICH_VERSION}.tar.gz \
     else \
     wget https://download.open-mpi.org/release/open-mpi/v${OPENMPI_SERIES}/openmpi-${OPENMPI_SERIES}.${OPENMPI_PATCH}.tar.gz && \
     tar xfz openmpi-${OPENMPI_SERIES}.${OPENMPI_PATCH}.tar.gz  && \
     cd openmpi-${OPENMPI_SERIES}.${OPENMPI_PATCH} && \
-    ./configure  && \
-    make -j${BUILD_NP} install; \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
+    make -j${BUILD_NP} install; rm openmpi-${OPENMPI_SERIES}.${OPENMPI_PATCH}.tar.gz \
     fi && \
     ldconfig && \
     rm -rf /tmp/*
@@ -197,15 +197,15 @@ RUN wget -nc --quiet https://github.com/kahip/kahip/archive/v${KAHIP_VERSION}.ta
     cmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DNONATIVEOPTIMIZATIONS=on -B build-dir -S KaHIP-${KAHIP_VERSION} && \
     cmake --build build-dir && \
     cmake --install build-dir && \
-    rm -rf /tmp/*
+    rm -rf /tmp/* && rm v${KAHIP_VERSION}.tar.gz
 
 # Install HDF5
 RUN wget -nc --quiet https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-${HDF5_SERIES}/hdf5-${HDF5_SERIES}.${HDF5_PATCH}/src/hdf5-${HDF5_SERIES}.${HDF5_PATCH}.tar.gz && \
     tar xfz hdf5-${HDF5_SERIES}.${HDF5_PATCH}.tar.gz && \
     cd hdf5-${HDF5_SERIES}.${HDF5_PATCH} && \
-    ./configure --prefix=/usr/local --enable-parallel --enable-shared --enable-static=no && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-parallel --enable-shared --enable-static=no && \
     make -j${BUILD_NP} install && \
-    rm -rf /tmp/*
+    rm -rf /tmp/* && rm hdf5-${HDF5_SERIES}.${HDF5_PATCH}.tar.gz
 
 # HDF5 CMake build broken, see
 # https://github.com/HDFGroup/hdf5/issues/969,
@@ -225,7 +225,7 @@ RUN wget -nc --quiet https://github.com/ornladios/ADIOS2/archive/v${ADIOS2_VERSI
     cmake -G Ninja -DADIOS2_USE_HDF5=on -DADIOS2_USE_Fortran=off -DBUILD_TESTING=off -DADIOS2_BUILD_EXAMPLES=off -DADIOS2_USE_ZeroMQ=off -B build-dir -S ./adios2-v${ADIOS2_VERSION} && \
     cmake --build build-dir && \
     cmake --install build-dir && \
-    rm -rf /tmp/*
+    rm -rf /tmp/* && rm adios2-v${ADIOS2_VERSION}.tar.gz
 
 # Install GMSH
 RUN git clone -b gmsh_${GMSH_VERSION} --single-branch --depth 1 https://gitlab.onelab.info/gmsh/gmsh.git && \
@@ -240,8 +240,8 @@ ENV PYTHONPATH=/usr/local/lib:$PYTHONPATH
 # Install PETSc and petsc4py with real and complex types
 ENV PETSC_DIR=/usr/local/petsc SLEPC_DIR=/usr/local/slepc
 RUN apt-get -qq update && \
-    apt-get -y install bison flex && \
-    wget -nc --quiet http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz -O petsc-${PETSC_VERSION}.tar.gz && \
+    apt-get -y --no-install-recommends install bison flex && \
+    wget -nc --quiet https://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-${PETSC_VERSION}.tar.gz -O petsc-${PETSC_VERSION}.tar.gz && \
     mkdir -p ${PETSC_DIR} && tar -xf petsc-${PETSC_VERSION}.tar.gz -C ${PETSC_DIR} --strip-components 1 && \
     cd ${PETSC_DIR} && \
     # Real, 32-bit int
@@ -343,7 +343,7 @@ RUN apt-get -qq update && \
     ${PETSC_DIR}/share/ \
     ${PETSC_DIR}/src/ \
     ${PETSC_DIR}/systems/ \
-    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*
+    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && rm petsc-${PETSC_VERSION}.tar.gz
 
 # Install SLEPc
 RUN wget -nc --quiet https://gitlab.com/slepc/slepc/-/archive/v${SLEPC_VERSION}/slepc-v${SLEPC_VERSION}.tar.gz && \
@@ -365,7 +365,7 @@ RUN wget -nc --quiet https://gitlab.com/slepc/slepc/-/archive/v${SLEPC_VERSION}/
     cd src/binding/slepc4py && \
     PETSC_ARCH=linux-gnu-real-32:linux-gnu-complex-32:linux-gnu-real-64:linux-gnu-complex-64 pip3 install --no-cache-dir . && \
     rm -rf ${SLEPC_DIR}/CTAGS ${SLEPC_DIR}/TAGS ${SLEPC_DIR}/docs ${SLEPC_DIR}/src/ ${SLEPC_DIR}/**/obj/ ${SLEPC_DIR}/**/test/ && \
-    rm -rf /tmp/*
+    rm -rf /tmp/* && rm slepc-v${SLEPC_VERSION}.tar.gz
 
 WORKDIR /root
 
@@ -478,7 +478,7 @@ RUN pip3 install --upgrade --no-cache-dir jupyter jupyterlab
 
 # pyvista dependencies from apt
 RUN apt-get -qq update && \
-    apt-get -y install libgl1-mesa-dev xvfb && \
+    apt-get -y --no-install-recommends install libgl1-mesa-dev xvfb && \
     apt-get clean && \
     rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*