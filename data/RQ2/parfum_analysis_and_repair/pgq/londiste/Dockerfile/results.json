{
  "startTime": 1674255957733,
  "endTime": 1674255958445,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 1,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 69
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 96
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.8-slim-buster\n\nWORKDIR /code\nCOPY . .\nRUN pip3 install --no-cache-dir 'psycopg2-binary==2.9.3' 'pyyaml==5.3.1' 'skytools==3.8' 'pgq==3.7'\nRUN pip3 install --no-cache-dir .\n\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV PG=14\nRUN set -ex; \\\n    apt=\"apt-get -qq -y --no-install-recommends\"; \\\n\t${apt} update; \\\n\t${apt} install -y --no-install-recommends wget gnupg2 lsb-release git make gcc; rm -rf /var/lib/apt/lists/*; \\\n\t${apt} dist-upgrade; \\\n    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -; \\\n    echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main ${PG}\" |  \\\n    tee /etc/apt/sources.list.d/pgdg.list; \\\n    ${apt} update; \\\n    # disable new cluster creation\n    mkdir -p /etc/postgresql-common/createcluster.d; \\\n    echo \"create_main_cluster = false\" | tee /etc/postgresql-common/createcluster.d/no-main.conf; \\\n    ${apt} install -y --no-install-recommends postgresql-${PG} postgresql-server-dev-${PG} pgqd;\n\nENV PATH=\"/usr/lib/postgresql/${PG}/bin:${PATH}\"\nENV PGHOST=\"/tmp\"\n\nRUN set -ex; \\\n    git clone -q https://github.com/pgq/pgq; make -C pgq; \\\n    bash -c \"PATH='${PATH}' make install -C pgq\";\n\nRUN set -ex; \\\n    git clone -q https://github.com/pgq/pgq-node; make -C pgq-node; \\\n    bash -c \"PATH='${PATH}' make install -C pgq-node\";\n\nRUN set -ex; \\\n    git clone -q https://github.com/pgq/londiste-sql; make -C londiste-sql; \\\n    bash -c \"PATH='${PATH}' make install -C londiste-sql\";\n\nRUN set -ex; \\\n    chown -R postgres:postgres \".\"; \\\n    chmod -R u+rwX,g-rwx,o-rwx \".\";\n\nUSER postgres\n\nRUN set -ex; \\\n    rm -rf data log; \\\n    mkdir -p log; \\\n    LANG=C initdb data; \\\n    sed -ri -e \"s,^[# ]*(unix_socket_directories).*,\\\\1='/tmp',\" data/postgresql.conf;\n\nENTRYPOINT [\"tests/docker_run.sh\"]\n\n"
}