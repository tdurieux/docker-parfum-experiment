{
  "startTime": 1674250670266,
  "endTime": 1674250671461,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/opengl:1.0-glvnd-runtime-ubuntu18.04\n\n# Install Linux stuff\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    lsb-core ca-certificates curl net-tools build-essential wget cmake jq xmlstarlet gnupg  \\\n    xterm x11-xkb-utils xauth xfonts-base xkb-data  x11-xserver-utils \\\n    mesa-utils xvfb libgl1-mesa-dri libgl1-mesa-glx libglib2.0-0 libxext6 libsm6 libxrender1 \\\n    libglu1 libglu1:i386 libxv1 libxv1:i386 \\\n    python python3-dev python3-pip python-boto3 python-pip libpython3-dev libpython-dev \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# install ROS melodic\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'\nRUN apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654\nRUN apt-get update -y && \\\n    apt-get install ros-melodic-ros-base python-rosdep python-rosinstall python-rosinstall-generator python-wstool -y --allow-unauthenticated --no-install-recommends && \\\n    apt-get install -y ros-melodic-media-export ros-melodic-web-video-server ros-melodic-rosmsg python-matplotlib ros-melodic-h264-encoder-core  --no-install-recommends && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN rosdep init && rosdep update\n\nENV ROS_DISTRO=melodic\n\n# install gazebo7\nRUN sh -c 'echo \"deb http://packages.osrfoundation.org/gazebo/ubuntu-stable $(lsb_release -sc) main\" > /etc/apt/sources.list.d/gazebo-stable.list'\nRUN wget https://packages.osrfoundation.org/gazebo.key -O - | apt-key add -\nRUN apt-get update -y && \\\n    apt-get install gazebo9 libgazebo9-dev rviz x264 libx264-dev libignition-math2 libignition-math2-dev --no-install-recommends -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# RUN pip3 install -U pip setuptools>=41.0.0\nARG TENSORFLOW_VER\n\n# RUN pip3 install -U pip setuptools>=41.0.0\nRUN python3 -m pip install -U 'pip<20' 'setuptools<50' && python3 -m pip install --no-cache-dir \\\n    annoy==1.8.3 \\\n    Pillow==4.3.0 \\\n    matplotlib==2.0.2 \\\n    numpy==1.18.5 \\\n    pandas==0.22.0 \\\n    pygame==1.9.3 \\\n    PyOpenGL==3.1.0 \\\n    scipy==1.2.1 \\\n    scikit-image==0.15.0 \\\n    futures==3.1.1 \\\n    boto3==1.9.23 \\ \n    minio==4.0.5 \\\n    rl-coach-slim==1.0.0 \\\n    PyYAML==3.13 \\\n    rospkg>=1.1 \\\n    shapely==1.6.4 \\\n    $TENSORFLOW_VER \\\n    redis==3.2.1 \\\n    opencv-python==4.1.1.26 \\\n    'tokenize-rt>=3,<4'\n\nRUN python2 -m pip install --no-cache-dir 'opencv-python>=4.2,<4.3'\n\nCOPY bundle /opt/install\nWORKDIR /opt/install\nRUN apt-get update -y && rosdep install --from-paths . --ignore-src -r -y deepracer_gazebo_system_plugin deepracer_msgs deepracer_simulation_environment h264_video_encoder && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\nENV COLCON_CURRENT_PREFIX=\"/opt/install\"\nENV COLCON_PYTHON_EXECUTABLE=\"/usr/bin/python3\"\nENV _CATKIN_SETUP_DIR=\"/opt/ros/melodic\"\n\nARG TENSORFLOW_VER\nRUN python3 -m pip install --no-cache-dir $TENSORFLOW_VER\n\nCOPY ./docker/files/rl_coach.patch /opt/amazon/rl_coach.patch\nRUN patch -p1 -N --directory=/usr/local/lib/python3.6/dist-packages/ < /opt/amazon/rl_coach.patch\n\nCOPY ./docker/files/run.sh run.sh\nCOPY ./docker/files/debug-reward.diff debug-reward.diff\n\nCOPY VERSION .\nARG IMG_VERSION\nLABEL maintainer \"AWS DeepRacer Community - deepracing.io\"\nLABEL version $IMG_VERSION\n\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"./run.sh run distributed_training.launch\"]\n"
}