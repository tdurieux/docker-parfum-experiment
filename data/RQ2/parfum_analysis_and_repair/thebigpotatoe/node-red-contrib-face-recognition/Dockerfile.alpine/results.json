{
  "startTime": 1674255207313,
  "endTime": 1674255208190,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is an example docker file on how to install the package successfully\n# You can either build a custom image using this file or inject the\n# dependancies using the following one line command on a running instance:\n\n# Find the container name using docker ps and insert where <container-name> is\n# docker exec -it --user=root <container-name> apk add python g++ build-base cairo-dev jpeg-dev pango-dev musl-dev giflib-dev pixman-dev pangomm-dev libjpeg-turbo-dev freetype-dev\n\n# Pull the latest\nFROM nodered/node-red\n\n# Change the user to root to install packages\nUSER root\n\n# Install required alpine packages\nRUN apk add --no-cache python \\\n    g++ \\\n    build-base \\\n    cairo-dev \\\n    jpeg-dev \\\n    pango-dev \\\n    musl-dev \\\n    giflib-dev \\\n    pixman-dev \\\n    pangomm-dev \\\n    libjpeg-turbo-dev \\\n    freetype-dev\n\n# Finally install the face recognition package\nRUN npm i node-red-contrib-face-recognition && npm cache clean --force;\n\n# Change the user back to node-red\nUSER node-red\n"
}