{
  "startTime": 1674250388736,
  "endTime": 1674250389691,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 40,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Basic info\nFROM ubuntu:16.04\nLABEL maintainer=\"DefaltSimon\"\nEXPOSE 80\n\n# Install dependencies\nENV BUILD_DEPS \"zlibc libxml2 libxml2-dev libssl-dev libxslt1-dev libjpeg8-dev zlib1g-dev libfreetype6-dev libssl-dev tk-dev libc6-dev build-essential libreadline-gplv2-dev libncursesw5-dev libsqlite3-dev libgdbm-dev libbz2-dev\"\nRUN apt-get update \\\n    && apt-get install --no-install-recommends wget python3-dev git $BUILD_DEPS -y && rm -rf /var/lib/apt/lists/*;\n\n# Install python\nENV PYTHON_VERSION \"3.6.6\"\nENV PYTHON_SOURCE \"https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz\"\n\n# Download and compile from source\nRUN wget $PYTHON_SOURCE \\\n    && tar xzf \"Python-${PYTHON_VERSION}.tgz\" \\\n    && rm \"Python-${PYTHON_VERSION}.tgz\" \\\n    # Compile and install\n    && cd \"Python-${PYTHON_VERSION}\" && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations \\\n    && make && make install \\\n    # Clean up\n    && cd .. && rm -r \"Python-${PYTHON_VERSION}/\"\n\nRUN wget -O get-pip.py \"https://bootstrap.pypa.io/get-pip.py\" \\\n\t&& python3.6 get-pip.py \\\n\t&& rm get-pip.py\n\n# Copy files\nENV HOME /home\nENV NANO /home/Nano\n\nCOPY . $HOME/Nano\n\n# Overwrite certain files\nCOPY docker/directories.json $NANO/core/\n# Docker configuration\nCOPY docker/dockerautorun.sh $HOME\nRUN chmod +x $HOME/dockerautorun.sh\n\n# Install dependencies\nRUN pip install --no-cache-dir -r $NANO/requirements.txt\n\n# Uninstall python and compile dependencies after installing python modules to make the container smaller\nRUN apt-get remove $BUILD_DEPS -y \\\n\t&& apt-get purge -y --autoremove\n\n# Set version and entrypoint\nARG VERSION=unknown\nLABEL version=$VERSION\nENTRYPOINT [\"/home/dockerautorun.sh\"]\n"
}