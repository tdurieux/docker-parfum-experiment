{
  "startTime": 1674254280739,
  "endTime": 1674254281899,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 130
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nARG HBASE_VERSION=2.2.4\nARG GNUPLOT_VERSION=5.2.8\n\nARG PACKAGES=\"ca-certificates rsyslog bash openjdk8 curl libgd libpng libjpeg libwebp libjpeg-turbo cairo pango jruby lua supervisor asciidoctor\"\nARG BUILD_PACKAGES=\"build-base autoconf make automake git python3 cairo-dev pango-dev gd-dev lua-dev readline-dev libpng-dev libjpeg-turbo-dev libwebp-dev\"\n\nARG DOCKER_ROOT=\"docker\"\nARG HBASE_DIR=/hbase\n\nENV DATA_DIR /data\nENV TSDB_DIR /tsdb\nENV HBASE_HOME ${HBASE_DIR}\n\nENV JAVA_HOME=/usr/lib/jvm/java-1.8-openjdk\nENV PATH=\"$JAVA_HOME/bin:${PATH}\"\n\n# Install dependencies\nRUN apk --update --no-cache add apk-tools \\\n    && apk add --no-cache ${PACKAGES} ${BUILD_PACKAGES} \\\n    && ln -sf python3 /usr/bin/python\n\nWORKDIR /tmp/gnuplot\nRUN cd /tmp \\\n    && curl -f -L -o - https://downloads.sourceforge.net/project/gnuplot/gnuplot/${GNUPLOT_VERSION}/gnuplot-${GNUPLOT_VERSION}.tar.gz | tar -xzf - --strip-components 1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make install \\\n    && rm -rf /tmp/gnuplot\n\n\n# Install HBase\nWORKDIR ${HBASE_DIR}\nRUN curl -f -L -o - https://archive.apache.org/dist/hbase/${HBASE_VERSION}/hbase-${HBASE_VERSION}-bin.tar.gz | tar -xzf - --strip-components 1\n\nCOPY ${DOCKER_ROOT}/hbase-site.xml ${HBASE_DIR}/conf/\nCOPY ${DOCKER_ROOT}/start_hbase.sh ${HBASE_DIR}/\n\n\n# Install OpenTSDB\nRUN cd /tmp \\\n    && curl -f -OL https://github.com/OpenTSDB/opentsdb/archive/v2.4.0.zip \\\n    && unzip v2.4.0.zip \\\n    && mv opentsdb-2.4.0 ${TSDB_DIR} \\\n    && rm /tmp/v2.4.0.zip \\\n    && cd ${TSDB_DIR} \\\n    && find . -name '*.mk' | xargs sed -i s#http://central.maven.org#https://repo1.maven.org#g \\\n    && find . -name '*.mk' | xargs sed -i s#http://repo1.maven.org#https://repo1.maven.org#g \\\n    && ./build.sh\n\nCOPY ${DOCKER_ROOT}/tsdb/opentsdb.conf ${TSDB_DIR}\nCOPY ${DOCKER_ROOT}/tsdb/start_opentsdb.sh ${TSDB_DIR}\nCOPY ${DOCKER_ROOT}/tsdb/create_tsdb_tables.sh ${TSDB_DIR}\n\n# Copy supervisor config\nCOPY ${DOCKER_ROOT}/data/supervisord-opentsdb.conf ${DATA_DIR}/\n\nEXPOSE 4242\nVOLUME [\"${DATA_DIR}\", \"/var/log\", \"${TSDB_DIR}\"]\nCMD [\"sh\", \"-c\", \"/usr/bin/supervisord -c ${DATA_DIR}/supervisord-opentsdb.conf\"]\n"
}