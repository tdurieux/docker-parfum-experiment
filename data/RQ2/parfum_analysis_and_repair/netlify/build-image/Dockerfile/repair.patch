diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/netlify/build-image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/netlify/build-image/Dockerfile/repaired.Dockerfile
index df17ea9..d3875f2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/netlify/build-image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/netlify/build-image/Dockerfile/repaired.Dockerfile
@@ -221,8 +221,8 @@ RUN adduser --system --disabled-password --uid 2500 --group --quiet buildbot --h
 
 ## TODO: Consider switching to rbenv or asdf-vm
 USER buildbot
-RUN curl -sSL https://rvm.io/mpapis.asc | gpg --import - && curl -sSL https://rvm.io/pkuczynski.asc | gpg2 --import && \
-    curl -sL https://get.rvm.io | bash -s stable --with-gems="bundler" --autolibs=read-fail
+RUN curl -f -sSL https://rvm.io/mpapis.asc | gpg --batch --import - && curl -f -sSL https://rvm.io/pkuczynski.asc | gpg2 --import && \
+    curl -f -sL https://get.rvm.io | bash -s stable --with-gems="bundler" --autolibs=read-fail
 
 ENV PATH /usr/local/rvm/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
 
@@ -245,7 +245,7 @@ USER root
 ################################################################################
 
 
-RUN curl -o- -L https://yarnpkg.com/install.sh > /usr/local/bin/yarn-installer.sh
+RUN curl -f -o- -L https://yarnpkg.com/install.sh > /usr/local/bin/yarn-installer.sh
 
 ENV NVM_VERSION=0.38.0
 
@@ -304,7 +304,7 @@ USER root
 ENV BINRC_VERSION 0.2.9
 
 RUN mkdir /opt/binrc && cd /opt/binrc && \
-    curl -sL https://github.com/netlify/binrc/releases/download/v${BINRC_VERSION}/binrc_${BINRC_VERSION}_Linux-64bit.tar.gz | tar zxvf - && \
+    curl -f -sL https://github.com/netlify/binrc/releases/download/v${BINRC_VERSION}/binrc_${BINRC_VERSION}_Linux-64bit.tar.gz | tar zxvf - && \
     ln -s /opt/binrc/binrc_${BINRC_VERSION}_linux_${TARGETARCH}/binrc_${BINRC_VERSION}_linux_${TARGETARCH} /usr/local/bin/binrc
 
 # Create a place for binrc to link/persist installs to the PATH
@@ -332,16 +332,16 @@ RUN binrc install gohugoio/hugo ${HUGO_VERSION} -c /opt/buildhome/.binrc | xargs
 ################################################################################
 
 RUN mkdir /opt/leiningen && cd /opt/leiningen && \
-    curl -sL https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > lein && \
+    curl -f -sL https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein > lein && \
     chmod +x lein && \
     ln -s /opt/leiningen/lein /usr/local/bin/lein
 
 RUN mkdir /opt/boot-clj && cd /opt/boot-clj && \
-    curl -sL https://github.com/boot-clj/boot-bin/releases/download/2.5.2/boot.sh > boot && \
+    curl -f -sL https://github.com/boot-clj/boot-bin/releases/download/2.5.2/boot.sh > boot && \
     chmod +x boot && \
     ln -s /opt/boot-clj/boot /usr/local/bin/boot
 
-RUN curl -sL https://download.clojure.org/install/linux-install-1.10.1.492.sh | bash
+RUN curl -f -sL https://download.clojure.org/install/linux-install-1.10.1.492.sh | bash
 
 USER buildbot
 
@@ -364,7 +364,7 @@ ENV PATH "$PATH:/opt/buildhome/.cask/bin"
 
 USER root
 ENV LZ4_VERSION 1.8.0
-RUN curl -sL https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz | tar xzvf - && \
+RUN curl -f -sL https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz | tar xzvf - && \
     cd lz4-${LZ4_VERSION} && \
     make && \
     make install && \
@@ -399,7 +399,7 @@ ENV PATH "/opt/buildhome/.php:$PATH"
 USER buildbot
 RUN mkdir -p /opt/buildhome/.gimme/bin/ && \
     mkdir -p /opt/buildhome/.gimme/env/ && \
-    curl -sL -o /opt/buildhome/.gimme/bin/gimme https://raw.githubusercontent.com/travis-ci/gimme/master/gimme && \
+    curl -f -sL -o /opt/buildhome/.gimme/bin/gimme https://raw.githubusercontent.com/travis-ci/gimme/master/gimme && \
     chmod u+x /opt/buildhome/.gimme/bin/gimme
 ENV PATH "$PATH:/opt/buildhome/.gimme/bin"
 ENV GOPATH "/opt/buildhome/.gimme_cache/gopath"
@@ -501,8 +501,8 @@ ADD --chown=buildbot:buildbot package.json /opt/buildhome/test-env/package.json
 # We need to install with `--legacy-peer-deps` because of:
 # https://github.com/bats-core/bats-assert/issues/27
 RUN cd /opt/buildhome/test-env && . ~/.nvm/nvm.sh && npm i --legacy-peer-deps &&\
-    ln -s /opt/build-bin/run-build-functions.sh /opt/buildhome/test-env/run-build-functions.sh &&\
-    ln -s /opt/build-bin/build /opt/buildhome/test-env/run-build.sh
+    ln -s /opt/build-bin/run-build-functions.sh /opt/buildhome/test-env/run-build-functions.sh && \
+    ln -s /opt/build-bin/build /opt/buildhome/test-env/run-build.sh && npm cache clean --force;
 
 ADD --chown=buildbot:buildbot tests /opt/buildhome/test-env/tests
 WORKDIR /opt/buildhome/test-env