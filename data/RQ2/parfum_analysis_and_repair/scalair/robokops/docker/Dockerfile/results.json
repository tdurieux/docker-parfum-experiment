{
  "startTime": 1674254235481,
  "endTime": 1674254236568,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 6,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 9,
        "columnEnd": 102
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 6,
        "columnEnd": 121
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 9,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine3.13\n\n# https://pypi.org/project/awscli/\nENV AWSCLI_VERSION=1.17.0\n# https://docs.aws.amazon.com/eks/latest/userguide/install-aws-iam-authenticator.html\nENV AWS_IAM_AUTHENTICATOR=1.13.7\n# https://github.com/GoogleCloudPlatform/cloud-sdk-docker\nENV GCLOUD_SDK_VERSION=281.0.0\n# https://aur.archlinux.org/packages/kubectl-bin/\nENV KUBECTL_VERSION=1.19.11\n# https://github.com/kubernetes/helm/releases\nENV HELM_VERSION=2.17.0\n# https://releases.hashicorp.com/vault/\nENV VAULT_VERSION=0.11.6\n# https://github.com/krallin/tini\nENV TINI_VERSION v0.18.0\n\n# sudo\nRUN apk --no-cache add sudo\n\n# Create user builder\nRUN addgroup -S builder && adduser --disabled-password -S builder -G builder\nRUN echo \"builder ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\nUSER builder\n\n# Set timezone to UTC by default\nRUN sudo ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime\n\n# Install base and dev packages\nRUN sudo apk update && \\\n\tsudo apk -Uuv --no-cache add groff less bash curl ca-certificates unzip git expect tini apache2-utils bison flex gettext build-base\n\n# aws-cli\nRUN sudo apk add --no-cache python3 curl && \\\n\tsudo ln -sf python3 /usr/bin/python && \\\n\tsudo curl -f \"https://s3.amazonaws.com/aws-cli/awscli-bundle-$AWSCLI_VERSION.zip\" -o \"awscli-bundle.zip\" && \\\n\tsudo unzip awscli-bundle.zip && \\\n\tsudo ./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws\n\n# aws-iam-authenticator\nRUN sudo wget -q https://amazon-eks.s3-us-west-2.amazonaws.com/${AWS_IAM_AUTHENTICATOR}/2019-06-11/bin/linux/amd64/aws-iam-authenticator -O /usr/local/bin/aws-iam-authenticator && \\\n\tsudo chmod +x /usr/local/bin/aws-iam-authenticator\n\n# gcloud\nENV PATH /google-cloud-sdk/bin:$PATH\nRUN curl -f -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n\ttar xzf google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n\tsudo mv google-cloud-sdk / && \\\n\trm google-cloud-sdk-${GCLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n\tgcloud config set core/disable_usage_reporting true && \\\n\tgcloud config set component_manager/disable_update_check true && \\\n\tgcloud config set metrics/environment github_docker_image\n\n# kubectl\nRUN sudo wget -q https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl -O /usr/local/bin/kubectl && \\\n\tsudo chmod +x /usr/local/bin/kubectl\n\n# helm\nRUN sudo wget -q https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n\tsudo tar -xf helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n\tsudo mv linux-amd64/helm /usr/local/bin/helm && \\\n\tsudo rm -rf helm-v${HELM_VERSION}-linux-amd64.tar.gz linux-amd64/ && \\\n\tsudo chmod +x /usr/local/bin/helm\n\n# vault\nRUN sudo wget -q https://releases.hashicorp.com/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip && \\\n\tsudo unzip -q vault_${VAULT_VERSION}_linux_amd64.zip && \\\n\tsudo mv vault /usr/bin/vault && \\\n\tsudo rm -f vault_${VAULT_VERSION}_linux_amd64.zip\n\n# yq\nRUN sudo curl -f -L https://github.com/mikefarah/yq/releases/download/2.4.1/yq_linux_amd64 -o /usr/bin/yq && \\\n\tsudo chmod +x /usr/bin/yq\n\n# boxes (https://boxes.thomasjensen.com/)\nRUN sudo wget -q https://github.com/ascii-boxes/boxes/archive/v1.3.zip -O boxes-1.3.zip && \\\n\tsudo unzip -q boxes-1.3.zip && \\\n\tsudo make -C boxes-1.3 && \\\n\tsudo cp boxes-1.3/src/boxes /usr/local/bin && \\\n\tsudo cp boxes-1.3/boxes-config /usr/share/boxes && \\\n\tsudo rm -rf boxes-1.3 boxes-1.3.zip\n\n# cleanup\nRUN sudo apk del unzip bison flex\n\nWORKDIR /home/builder/src\nCOPY entrypoint.sh /\n\nENTRYPOINT [\"/sbin/tini\", \"-g\", \"--\", \"/entrypoint.sh\"]\n"
}