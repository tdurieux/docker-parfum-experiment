{
  "startTime": 1674250553719,
  "endTime": 1674250554495,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 18,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18.1\n\nRUN apt update && apt install --no-install-recommends -y git gcc musl-dev curl iputils-ping telnet graphviz && rm -rf /var/lib/apt/lists/*\n\nENV GOPATH /go\nENV GOBIN /go/bin\n\nWORKDIR /workspace\n\nRUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.45.2\n\nRUN go install -v golang.org/x/tools/gopls@v0.8.3\nRUN go install -v github.com/rogpeppe/godef@v1.1.2\nRUN go install -v github.com/rakyll/gotest@v0.0.6\nRUN go install -v github.com/ramya-rao-a/go-outline@1.0.0\nRUN go install -v github.com/go-delve/delve/cmd/dlv@v1.8.1\n\nCOPY go.mod ./\nCOPY go.sum ./\nRUN go mod download\n\n# Aliases\nRUN echo \"alias ll='ls -alF'\" >> /etc/bash.bashrc\nRUN echo \"alias hammer-clean='go clean -testcache'\" >> /etc/bash.bashrc\nRUN echo \"alias hammer-test-n-cover='gotest -coverpkg=./... -coverprofile=coverage.out ./... && go tool cover -func coverage.out'\" >> /etc/bash.bashrc\n"
}