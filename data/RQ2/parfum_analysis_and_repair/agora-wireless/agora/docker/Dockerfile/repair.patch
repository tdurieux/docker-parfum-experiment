diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/agora-wireless/agora/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/agora-wireless/agora/docker/Dockerfile/repaired.Dockerfile
index b769547..a848892 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/agora-wireless/agora/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/agora-wireless/agora/docker/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,4 @@
-### This dockerfile sets up an Ubuntu 18.04 environment from scratch 
+### This dockerfile sets up an Ubuntu 18.04 environment from scratch
 ### that is sufficient to *run* Agora (but not to build it).
 
 ### Note: Dockerfile best practices include:
@@ -16,45 +16,45 @@ LABEL author=t-keboo@microsoft.com
 # * https://github.com/phusion/baseimage-docker/issues/58
 # * https://github.com/phusion/baseimage-docker/issues/319#issuecomment-245857919
 ENV DEBIAN_FRONTEND noninteractive
-RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends apt-utils gnupg
+RUN DEBIAN_FRONTEND=noninteractive apt-get update && apt-get install -y --no-install-recommends apt-utils gnupg && rm -rf /var/lib/apt/lists/*;
 # RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections
 
 # Just for convenience purposes
-RUN apt-get install -y vim gdb
+RUN apt-get install --no-install-recommends -y vim gdb && rm -rf /var/lib/apt/lists/*;
 
 # Required for downloading and building the source packages below
-RUN apt-get -y install -y g++ cmake make wget git
+RUN apt-get -y --no-install-recommends install -y g++ cmake make wget git && rm -rf /var/lib/apt/lists/*;
 
-# Needed to build and run Agora. 
-# Currently I'm not sure if *all* of these are needed to *run* Agora, but some are. 
-RUN apt-get -y install -y \
+# Needed to build and run Agora.
+# Currently I'm not sure if *all* of these are needed to *run* Agora, but some are.
+RUN apt-get -y --no-install-recommends install -y \
     libgflags-dev \
     liblapack-dev \
     libblas-dev \
     libboost-all-dev \
-    # doxygen \
+
     nlohmann-json-dev \
     python-numpy \
     python-pyqt5 \
     libnuma-dev \
     libpython-dev \
-    swig
+    swig && rm -rf /var/lib/apt/lists/*;
 
 
 # Install gtest and gflags
-RUN apt-get install -y libgtest-dev
+RUN apt-get install --no-install-recommends -y libgtest-dev && rm -rf /var/lib/apt/lists/*;
 RUN (cd /usr/src/gtest && cmake . && make && mv libg* /usr/lib/)
 
 
 # Build and install armadillo
-RUN wget http://sourceforge.net/projects/arma/files/armadillo-9.300.2.tar.xz
-RUN tar xf armadillo-9.300.2.tar.xz
+RUN wget https://sourceforge.net/projects/arma/files/armadillo-9.300.2.tar.xz
+RUN tar xf armadillo-9.300.2.tar.xz && rm armadillo-9.300.2.tar.xz
 RUN (cd armadillo-9.300.2; cmake .; make -j8; make install)
 RUN rm -rf armadillo*
 
 
 # Set up Intel MKL
-RUN apt-get install -y apt-transport-https ca-certificates
+RUN apt-get install --no-install-recommends -y apt-transport-https ca-certificates && rm -rf /var/lib/apt/lists/*;
 RUN ( \
     cd /tmp; \
     wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB; \
@@ -62,12 +62,11 @@ RUN ( \
     rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB; \
     sh -c 'echo deb https://apt.repos.intel.com/mkl all main > /etc/apt/sources.list.d/intel-mkl.list'; \
 )
-RUN apt-get update && apt-get install -y intel-mkl-64bit-2020.0-088
+RUN apt-get update && apt-get install --no-install-recommends -y intel-mkl-64bit-2020.0-088 && rm -rf /var/lib/apt/lists/*;
 
 
 # Set up SoapySDR
-RUN ( \
-    cd `mktemp -d`; \
+RUN ( cd `mktemp -d`; \
     git clone --depth=1 https://github.com/pothosware/SoapySDR.git; \
     cd SoapySDR; \
     mkdir build; \
@@ -75,8 +74,7 @@ RUN ( \
     cmake ..; \
     make -j8; \
     make install; \
-    ldconfig; \
-)
+    ldconfig;) && rm -rf -d
 
 # Install Mellanox OFED Infiniband driver (unnecessary due to upstreamed drivers)
 # RUN ( \
@@ -91,7 +89,7 @@ RUN ( \
 #     apt-get install -y mlnx-ofed-dpdk-upstream-libs; \
 # )
 # Add support for Infiniband, Mellanox verbs, rdma, etc
-RUN apt-get install -y libibverbs-dev libibverbs1 rdma-core ibverbs-utils libibumad3 libibumad-dev libibmad-dev libibmad5 libibnetdisc5
+RUN apt-get install --no-install-recommends -y libibverbs-dev libibverbs1 rdma-core ibverbs-utils libibumad3 libibumad-dev libibmad-dev libibmad5 libibnetdisc5 && rm -rf /var/lib/apt/lists/*;
 
 
 # Undo the noninteractive DEBIAN_FRONTEND from the beginning of this file