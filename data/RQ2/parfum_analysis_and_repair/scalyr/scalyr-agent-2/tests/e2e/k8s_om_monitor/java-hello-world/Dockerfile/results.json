{
  "startTime": 1674252801659,
  "endTime": 1674252802411,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Use the official maven/Java 11 image to create a build artifact.\n# https://hub.docker.com/_/maven\nFROM maven:3.6-openjdk-11-slim as builder\n#FROM adoptopenjdk/openjdk11:alpine-slim as builder\n#FROM arm32v7/openjdk:7-jdk-slim as builder\n#FROM arm32v7/adoptopenjdk:16-jdk as builder\n# FROM arm32v7/maven:latest as builder\n\n# Copy local code to the container image.\nWORKDIR /app\nCOPY pom.xml ./\nCOPY config.yaml ./\nCOPY src ./src/\n\n# Build a release artifact.\nRUN printenv\nRUN which mvn\nRUN ls -la /usr/share/maven\nRUN mvn package -DskipTests -s /usr/share/maven/ref/settings-docker.xml\n\n# Use AdoptOpenJDK for base image.\n# It's important to use OpenJDK 8u191 or above that has container support enabled.\n# https://hub.docker.com/r/adoptopenjdk/openjdk11\n# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds\n# FROM arm32v7/openjdk:7-jre-slim\n# FROM arm32v7/adoptopenjdk:11-jre\n#FROM adoptopenjdk/openjdk11:alpine-slim\nFROM maven:3.6-openjdk-11-slim\n\nRUN apt-get update && apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.15.0/jmx_prometheus_javaagent-0.15.0.jar\n\nCOPY --from=builder /app/config.yaml /config.yaml\n\n# Copy the jar to the production image from the builder stage.\nCOPY --from=builder /app/target/helloworld-*.jar /helloworld.jar\n\n# Run the web service on container startup.\nCMD [\"java\", \"-javaagent:./jmx_prometheus_javaagent-0.15.0.jar=9404:config.yaml\", \\\n     \"-Djava.security.egd=file:/dev/./urandom\", \\\n     \"-Dcom.sun.management.jmxremote.ssl=false\", \\ \n     \"-Dcom.sun.management.jmxremote.authenticate=false\", \\\n     \"-Dcom.sun.management.jmxremote.port=5555\", \\\n     \"-Dserver.port=${PORT}\",\"-jar\", \\\n     \"/helloworld.jar\"]\n"
}