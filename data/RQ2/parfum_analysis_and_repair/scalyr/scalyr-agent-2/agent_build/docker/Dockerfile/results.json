{
  "startTime": 1674249127059,
  "endTime": 1674249127476,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Final Scalyr Agent docker image that uses the previously built base image.\n# NOTE: multi-stage builds require Docker 17.05 or greater\n\n# Type of the image build, e.g: docker-json, docker-syslog, k8s\nARG BUILD_TYPE\n\n# Name of the base image to use.\nARG BASE_IMAGE\n\n# Valid modes are \"normal\" and \"testing\"\nARG MODE=\"normal\"\n\n# Suffix for the python dockerhub image. For now can be:\n#   - 'slim' for debian based image\n#   - 'alpine' for alpine based image.\nARG BASE_IMAGE_SUFFIX\n\n\nFROM $BASE_IMAGE as scalyr-build\nMAINTAINER Scalyr Inc <support@scalyr.com>\n\n# If specified then the package build command will produce additional debug logging.\nARG AGENT_BUILD_DEBUG\nENV AGENT_BUILD_DEBUG=$AGENT_BUILD_DEBUG\n# Special env. variable that will enable addional logging info about that command runs in docker.\nENV AGENT_BUILD_IN_DOCKER=1\n# e.g. k8s, docker-json\nARG BUILD_TYPE\n# e.g. k8s-debian, docker-json-debian, k8s-alpine\nARG BUILDER_NAME\nADD . /scalyr-agent-2\n\n# Build the tarball with Agent's files.\nRUN python3 /scalyr-agent-2/build_package_new.py ${BUILDER_NAME} --only-filesystem-tarball /tmp/build/scalyr-agent.tar.gz\n\n# Extract tarball to the special place that can be reused by next stages.\nWORKDIR /tmp/container-fs\nRUN tar -xf /tmp/build/scalyr-agent.tar.gz && rm /tmp/build/scalyr-agent.tar.gz\n\nWORKDIR /\n\n# Copy result files to a new base stage.\nFROM python:3.8.13-$BASE_IMAGE_SUFFIX as scalyr-base\nMAINTAINER Scalyr Inc <support@scalyr.com>\n# Copy Agent's Python dependencies. Those dependencies were built in the base image,\n# which is given by 'BASE_IMAGE' arg.\nCOPY --from=scalyr-build  /tmp/dependencies/ /\n# Copy Agent files.\nCOPY --from=scalyr-build /tmp/container-fs /\n\n\n# Optional stage for docker-json.\nFROM scalyr-base as build-docker-json\nMAINTAINER Scalyr Inc <support@scalyr.com>\n# Nothing to add\n\n# Optional stage for docker-api.\nFROM scalyr-base as build-docker-api\nMAINTAINER Scalyr Inc <support@scalyr.com>\n# Nothing to add\n\n\n# Optional stage for docker-syslog.\nFROM scalyr-base as build-docker-syslog\nMAINTAINER Scalyr Inc <support@scalyr.com>\n# expose syslog ports\nEXPOSE 601/tcp\n# Please note Syslog UDP 1024 max packet length (rfc3164)\nEXPOSE 514/udp\n\n\n# Optional stage for k8s.\nFROM scalyr-base as build-k8s\nMAINTAINER Scalyr Inc <support@scalyr.com>\nENV SCALYR_STDOUT_SEVERITY ERROR\n\n\n# Noraml result image.\nFROM build-$BUILD_TYPE as scalyr-normal\nMAINTAINER Scalyr Inc <support@scalyr.com>\n\nCMD [\"/usr/sbin/scalyr-agent-2\", \"--no-fork\", \"--no-change-user\", \"start\"]\n\n\n# Result image stage for testing.\nFROM build-$BUILD_TYPE as scalyr-testing\nMAINTAINER Scalyr Inc <support@scalyr.com>\n# Since test version of the image uses coverage, add command that runs the Agent with enabled coverage.\nCMD [\"coverage\", \"run\", \"--branch\", \"/usr/share/scalyr-agent-2/py/scalyr_agent/agent_main.py\", \"--no-fork\", \"--no-change-user\", \"start\"]\n\n# Use stage with needed mode as a final image.\nFROM scalyr-$MODE as scalyr\nMAINTAINER Scalyr Inc <support@scalyr.com>\n"
}