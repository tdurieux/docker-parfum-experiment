{
  "startTime": 1674250617163,
  "endTime": 1674250618052,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16 as dependency-builder\n\nWORKDIR /usr/src/build\n\nRUN echo \"unsafe-perm = true\" > .npmrc\n\nCOPY . .\n\nRUN npm install && npm cache clean --force;\n\n\nFROM dependency-builder as application-builder\n\nARG SKIP_BUILD\n\nRUN if [ \"$SKIP_BUILD\" = \"true\" ]; then echo \"SKIP BUILD\"; else npm run build; fi\n\nFROM dependency-builder as production-dependency-builder\n\n# then we remove all dependencies we no longer need\nRUN npm prune --production\n\n\nFROM node:16-slim as final\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Copy app source\nCOPY --from=application-builder /usr/src/build/build /usr/src/app/build\nCOPY --from=application-builder /usr/src/build/server-build /usr/src/app/server-build\nCOPY --from=production-dependency-builder /usr/src/build/node_modules /usr/src/app/node_modules\nCOPY --from=production-dependency-builder  /usr/src/build/package.json /usr/src/app/package.json\nCOPY --from=production-dependency-builder  /usr/src/build/package-lock.json /usr/src/app/package-lock.json\n\nARG NODE_ENV=\"production\"\nENV NODE_ENV=\"production\"\n\nEXPOSE 3000\n\nCMD [ \"node\", \"server-build/index.js\" ]\n"
}