{
  "startTime": 1674252397129,
  "endTime": 1674252397609,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile of instrumentisto/medea Docker image.\n#\n\n\n#\n# Stage 'dist' creates project distribution.\n#\n\n# https://hub.docker.com/_/rust\nARG rust_ver=latest\nFROM ghcr.io/instrumentisto/rust:${rust_ver} AS dist\nARG rustc_mode=release\nARG rustc_opts=--release\n\n# Create user and group files, which will be used in a running container to\n# run the process as an unprivileged user.\nRUN mkdir -p /out/etc/ \\\n && echo 'nobody:x:65534:65534:nobody:/:' > /out/etc/passwd \\\n && echo 'nobody:x:65534:' > /out/etc/group\n\n# Install required system packages for building.\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n            cmake && rm -rf /var/lib/apt/lists/*;\n\n# Prepare Cargo workspace for building dependencies only.\nCOPY crates/medea-macro/Cargo.toml /app/crates/medea-macro/\nCOPY crates/medea-reactive/Cargo.toml /app/crates/medea-reactive/\nCOPY crates/medea-coturn-telnet-client/Cargo.toml \\\n     /app/crates/medea-coturn-telnet-client/\nCOPY mock/control-api/Cargo.toml /app/mock/control-api/\nCOPY proto/client-api/Cargo.toml /app/proto/client-api/\nCOPY proto/control-api/Cargo.toml /app/proto/control-api/\n# Required to omit triggering re-compilation for build.rs.\nCOPY proto/control-api/build.rs /app/proto/control-api/\nCOPY proto/control-api/src/grpc/api.proto \\\n     proto/control-api/src/grpc/api*.rs \\\n     /app/proto/control-api/src/grpc/\nCOPY jason/Cargo.toml /app/jason/\nCOPY e2e/Cargo.toml /app/e2e/\nCOPY Cargo.toml Cargo.lock /app/\nWORKDIR /app/\nRUN mkdir -p crates/medea-macro/src/ && touch crates/medea-macro/src/lib.rs \\\n && mkdir -p crates/medea-reactive/src/ \\\n && touch crates/medea-reactive/src/lib.rs \\\n && mkdir -p crates/medea-coturn-telnet-client/src/ \\\n && touch crates/medea-coturn-telnet-client/src/lib.rs \\\n && mkdir -p mock/control-api/src/ && touch mock/control-api/src/lib.rs \\\n && mkdir -p proto/client-api/src/ && touch proto/client-api/src/lib.rs \\\n && mkdir -p proto/control-api/src/ && touch proto/control-api/src/lib.rs \\\n && mkdir -p jason/src/ && touch jason/src/lib.rs \\\n && mkdir -p e2e/src/ && touch e2e/src/lib.rs \\\n && mkdir -p src/ && touch src/lib.rs\n\n# Build dependencies only.\nRUN cargo build --lib ${rustc_opts}\n# Remove fingreprints of pre-built empty project sub-crates\n# to rebuild them correctly later.\nRUN rm -rf /app/target/${rustc_mode}/.fingerprint/medea*\n\n# Prepare project sources for building.\nCOPY crates/ /app/crates/\nCOPY proto/ /app/proto/\nCOPY src/ /app/src/\n\n# Build project distribution binary.\n# TODO: use --out-dir once stabilized\n# TODO: https://github.com/rust-lang/cargo/issues/6790\nRUN cargo build --bin=medea ${rustc_opts}\n\n# Prepare project distribution binary and all dependent dynamic libraries.\nRUN cp /app/target/${rustc_mode}/medea /out/medea \\\n && ldd /out/medea \\\n        # These libs are not reported by ldd(1) on binary,\n        # but are vital for DNS resolution.\n        # See: https://forums.aws.amazon.com/thread.jspa?threadID=291609\n        /lib/x86_64-linux-gnu/libnss_dns.so.2 \\\n        /lib/x86_64-linux-gnu/libnss_files.so.2 \\\n    | awk 'BEGIN{ORS=\" \"}$1~/^\\//{print $1}$3~/^\\//{print $3}' \\\n    | sed 's/,$/\\n/' \\\n    | tr -d ':' \\\n    | tr ' ' \"\\n\" \\\n    | xargs -I '{}' cp -fL --parents '{}' /out/ \\\n && rm -rf /out/out\n\n\n\n\n#\n# Stage 'runtime' creates final Docker image to use in runtime.\n#\n\n# https://hub.docker.com/_/scratch\nFROM scratch AS runtime\n\nCOPY --from=dist /out/ /\n\nUSER nobody:nobody\n\nLABEL org.opencontainers.image.source=\"https://github.com/instrumentisto/medea\"\n\nENTRYPOINT [\"/medea\"]\n"
}