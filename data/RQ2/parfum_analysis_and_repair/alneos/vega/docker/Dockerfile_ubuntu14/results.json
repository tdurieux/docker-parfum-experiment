{
  "startTime": 1674220838217,
  "endTime": 1674220839585,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 183
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 155
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 183
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 22,
        "columnEnd": 155
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 113
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nUSER root\n\nRUN apt-get update && apt-get install --no-install-recommends -y vim curl build-essential software-properties-common liblapack-dev libblas-dev zlib1g-dev bison flex gfortran g++ swig grace gettext tk locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nWORKDIR /root\n\nRUN apt-get install --no-install-recommends -y build-essential libpq-dev libssl-dev openssl libffi-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -SLk https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz | tar -xzC /root\nWORKDIR /root/Python-3.6.3\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations\n\nRUN curl -f -SLk https://cmake.org/files/v3.11/cmake-3.11.4.tar.gz | tar -xzC /root\nWORKDIR /root/cmake-3.11.4\nRUN ./bootstrap --prefix=/usr/local && make -j && make install && cmake --version\n\n#RUN curl -SLk https://phoenixnap.dl.sourceforge.net/project/boost/boost/1.58.0/boost_1_58_0.tar.gz | tar -xzC /root\n#WORKDIR /root/boost_1_58_0\nRUN curl -f -SLk https://dl.bintray.com/boostorg/release/1.67.0/source/boost_1_67_0.tar.gz | tar -xzC /root\nWORKDIR /root/boost_1_67_0\nRUN ./bootstrap.sh --with-python-version=3.6 && ./b2 install --with=all\n\n#COPY ./dockerdata/aster-full-src-14.4.0-1.noarch.tar.gz /root\n#RUN tar -xzf /root/aster-full-src-14.4.0-1.noarch.tar.gz && rm /root/aster-full-src-14.4.0-1.noarch.tar.gz\nRUN curl -f -SLk https://www.code-aster.org/FICHIERS/aster-full-src-14.4.0-1.noarch.tar.gz | tar -xzC /root\nENV ASTER_BUILD=/root/aster-full-src-14.4.0\nENV ASTER_INSTALL=/opt/aster\nWORKDIR $ASTER_BUILD\nRUN python3 setup.py install --prefix=$ASTER_INSTALL --noprompt && $ASTER_INSTALL/bin/as_run --test forma02a && rm -Rf /opt/aster/14.4/share/aster/tests\nENV MFRONT_INSTALL=$ASTER_INSTALL/mfront-3.2.1\nENV MFRONT=$MFRONT_INSTALL/bin/mfront\nENV TFEL_CONFIG=$MFRONT_INSTALL/bin/tfel-config\nENV PATH=$PATH:$MFRONT_INSTALL/bin\n\nRUN echo \"vers : STABLE:/opt/aster/14.4/share/aster\" >> $ASTER_INSTALL/etc/codeaster/aster\n\nFROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y sudo git doxygen nastran libblas-dev liblapack-dev zlib1g g++ cmake python3 python3-numpy libboost-all-dev locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nWORKDIR /opt/aster\nCOPY --from=0 /opt/aster .\n\nENV ASTER_INSTALL=/opt/aster\nENV MED_INSTALL=$ASTER_INSTALL/public/med-4.0.0\nENV HDF_INSTALL=$ASTER_INSTALL/public/hdf5-1.10.3\nENV CXXFLAGS=\"-isystem $MED_INSTALL/include -isystem $HDF_INSTALL/include\"\nRUN sudo ln -s $ASTER_INSTALL/bin/as_run /usr/local/bin\nENV HDF5_ROOT=$HDF_INSTALL\n\nRUN addgroup --gid 1777 vega && adduser --gecos ,,,, --shell /bin/bash -u 1777 --gid 1777 --disabled-password vega && echo \"vega ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers && echo 'export PATH=$ASTER_INSTALL/bin:$NASTRAN_INSTALL/bin:$PATH' >> /home/vega/.bashrc\n\nUSER vega\nWORKDIR /home/vega\n\n#RUN git clone --depth=50 --branch=master https://github.com/Alneos/vega.git /home/vega/vegapp && mkdir /home/vega/vegapp/build && cd /home/vega/vegapp/build && cmake -DHDF5_LIBRARIES=$HDF_INSTALL/lib/libhdf5.a -DHDF5_INCLUDE_DIRS=$HDF_INSTALL/include -DMEDFILE_C_LIBRARIES=$MED_INSTALL/lib/libmedC.a -DMEDFILE_INCLUDE_DIRS=$MED_INSTALL/include -DCMAKE_BUILD_TYPE=Debug -DRUN_SYSTUS=OFF .. && make -j\n"
}