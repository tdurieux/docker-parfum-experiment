{
  "startTime": 1674251208454,
  "endTime": 1674251209018,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 15,
        "columnStart": 18,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 225,
        "columnEnd": 306
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright IRT-Systemx 2018\n\nFROM ubuntu:trusty\n\nMAINTAINER Alter Ego Engineering <luca.dallolio@aego.ai>\n\n# http://mxe.cc/#requirements + med requirements\n# https://github.com/mxe/mxe/issues/593 and http://mxe.cc/#requirements-debian\nRUN apt update && apt install --no-install-recommends -y \\\n    autoconf automake autopoint bash bison bzip2 flex gettext\\\n    git g++ gperf intltool libffi-dev libgdk-pixbuf2.0-dev \\\n    libtool libltdl-dev libssl-dev libxml-parser-perl make \\\n    openssl p7zip-full patch perl pkg-config python ruby scons \\\n    sed unzip wget xz-utils \\\n    libtool g++-multilib libc6-dev-i386 \\\n    make hdf5-tools curl && rm -rf /var/lib/apt/lists/*;\nENV MXE_HOME=/opt/mxe\nENV MXE_BUILD=/root/mxe\nENV HOST=x86_64-w64-mingw32\nENV TARGET=${HOST}.static\nWORKDIR $MXE_BUILD\nRUN git clone https://github.com/mxe/mxe.git $MXE_BUILD && make PREFIX=$MXE_HOME MXE_TARGETS=\"$TARGET\" boost hdf5 && rm -rf $MXE_BUILD && cp $MXE_HOME/$TARGET/include/lmcons.h $MXE_HOME/$TARGET/include/Lmcons.h\n\nENV PATH=$PATH:$MXE_HOME/bin\nENV PKG_CONFIG_PATH=$MXE_HOME/bin/$TARGET-pkg-config\n\nENV MED_VERSION=3.2.0\nENV MED_HOME=/root/med-${MED_VERSION}\nENV MED_BUILD=${MED_HOME}/build\nWORKDIR $MED_BUILD\nRUN curl -f -SL https://files.salome-platform.org/Salome/other/med-${MED_VERSION}.tar.gz | tar -xzC /root && sed -i 's#/iface:mixed_str_len_arg##' ${MED_HOME}/CMakeLists.txt && $TARGET-cmake -DCMAKE_BUILD_TYPE=Release -DSTATIC_LINKING=ON -DMEDFILE_BUILD_TESTS=OFF -DMEDFILE_BUILD_SHARED_LIBS=OFF -DMEDFILE_BUILD_STATIC_LIBS=ON -DMEDFILE_INSTALL_DOC=OFF .. && make -j && make install && rm -rf $MED_BUILD\n\nFROM ubuntu:trusty\n\nRUN dpkg --add-architecture i386 && echo \"deb http://dl.winehq.org/wine-builds/ubuntu/ trusty main\" >> /etc/apt/sources.list.d/winehq.list && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5FCBF54A && apt update && apt install --allow-unauthenticated --no-install-recommends -y winehq-stable make && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt\nCOPY --from=0 /opt/mxe ./mxe\n\nENV HOST=x86_64-w64-mingw32\nENV MXE_HOME=/opt/mxe\nENV TARGET=${HOST}.static\nENV PATH=$PATH:$MXE_HOME/bin:$MXE_HOME/x86_64-pc-linux-gnu/bin\nENV PKG_CONFIG_PATH=$MXE_HOME/bin/$TARGET-pkg-config\nENV WINEPREFIX=/root/.wine\n\n# Run as privileged, then commit this\n#RUN printf \"package wine\\ninterpreter /usr/bin/wine\\nmagic MZ\" > /usr/share/binfmts/wine64 && apt install --no-install-recommends -y binfmt-support && update-binfmts --import /usr/share/binfmts/wine64\n\n#ENV VEGA_SOURCE=/opt/vega\n#COPY . $VEGA_SOURCE\n#WORKDIR $VEGA_SOURCE/build\n#RUN $TARGET-cmake -DTESTS_EXEC_SOLVER=0 -DCMAKE_BUILD_TYPE=SDebug .. && make -j && ctest .\n\n"
}