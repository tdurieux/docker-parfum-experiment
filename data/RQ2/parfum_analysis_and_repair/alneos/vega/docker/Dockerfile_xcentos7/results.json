{
  "startTime": 1674218271884,
  "endTime": 1674218272746,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 99,
        "columnEnd": 126
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 130,
        "columnEnd": 338
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright IRT-Systemx 2018\n\nFROM centos:7\n\nMAINTAINER Alter Ego Engineering <luca.dallolio@aego.ai>\n\n# https://mxe.cc/#requirements-fedora\nRUN yum -y update && rpm --import http://download.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7 && yum install -y epel-release && yum install -y autoconf automake bash bison bzip2 flex gcc-c++ gdk-pixbuf2-devel gettext git gperf intltool libtool make openssl-devel p7zip patch perl pkgconfig python ruby sed unzip wget xz git openssl lzip && rm -rf /var/cache/yum\n\nENV MXE_HOME=/opt/mxe\nENV MXE_BUILD=/root/mxe\nENV HOST=x86_64-w64-mingw32\nENV TARGET=${HOST}.static\nWORKDIR $MXE_BUILD\nRUN git clone https://github.com/mxe/mxe.git $MXE_BUILD && make PREFIX=$MXE_HOME MXE_TARGETS=\"$TARGET\" boost hdf5 && rm -rf $MXE_BUILD && cp $MXE_HOME/$TARGET/include/lmcons.h $MXE_HOME/$TARGET/include/Lmcons.h\n\nENV PATH=$PATH:$MXE_HOME/bin\nENV PKG_CONFIG_PATH=$MXE_HOME/bin/$TARGET-pkg-config\n\nENV MED_VERSION=3.2.0\nENV MED_HOME=/root/med-${MED_VERSION}\nENV MED_BUILD=${MED_HOME}/build\nWORKDIR $MED_BUILD\nRUN curl -f -SL https://files.salome-platform.org/Salome/other/med-${MED_VERSION}.tar.gz | tar -xzC /root && sed -i 's#/iface:mixed_str_len_arg##' ${MED_HOME}/CMakeLists.txt && $TARGET-cmake -DCMAKE_BUILD_TYPE=Release -DSTATIC_LINKING=ON -DMEDFILE_BUILD_TESTS=OFF -DMEDFILE_BUILD_SHARED_LIBS=OFF -DMEDFILE_BUILD_STATIC_LIBS=ON -DMEDFILE_INSTALL_DOC=OFF .. && make -j && make install && rm -rf $MED_BUILD\n\nENV HOST=x86_64-w64-mingw32\nENV MXE_HOME=/opt/mxe\nENV TARGET=${HOST}.static\nENV PATH=$PATH:$MXE_HOME/bin:$MXE_HOME/x86_64-pc-linux-gnu/bin\nENV PKG_CONFIG_PATH=$MXE_HOME/bin/$TARGET-pkg-config\nENV WINEPREFIX=/root/.wine\n\nENV VEGA_SOURCE=/opt/vega\nENV VEGA_BUILD=$VEGA_SOURCE/build\nCOPY . $VEGA_SOURCE\nWORKDIR $VEGA_BUILD\n#RUN yum install -y which wine xorg-x11-server-Xvfb\n#RUN Xvfb :1 -screen 0 1280x960x24 &\nRUN $TARGET-cmake -DRUN_ASTER=OFF -DRUN_SYSTUS=OFF -DCMAKE_BUILD_TYPE=SDebug -DCMAKE_CROSSCOMPILING_EMULATOR=/usr/bin/wine64 .. && make -j\n#RUN ctest -V .\n"
}