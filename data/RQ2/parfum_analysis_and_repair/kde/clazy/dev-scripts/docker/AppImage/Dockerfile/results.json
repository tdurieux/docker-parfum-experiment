{
  "startTime": 1674248077053,
  "endTime": 1674248077935,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:6.8\nMAINTAINER Sergio Martins (sergio.martins@kdab.com)\n\nWORKDIR /\nRUN yum update -y\nRUN yum install -y git wget zip texinfo bison flex svn boost-regex boost-devel && rm -rf /var/cache/yum\n\nRUN wget https://people.centos.org/tru/devtools-2/devtools-2.repo -O /etc/yum.repos.d/devtools-2.repo\nRUN yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ && rm -rf /var/cache/yum\n\nENV PATH=/opt/rh/devtoolset-2/root/usr/bin/:$PATH\n\n# Build GCC\nWORKDIR /\nRUN svn co svn://gcc.gnu.org/svn/gcc/tags/gcc_5_4_0_release/\nWORKDIR /gcc_5_4_0_release/\nRUN ./contrib/download_prerequisites\nRUN mkdir /gcc_5_4_0_release_build/\nWORKDIR /gcc_5_4_0_release_build/\nRUN ../gcc_5_4_0_release/configure --disable-multilib\nRUN make -j12\nRUN make install\nRUN echo \"/usr/local/lib64\" > /etc/ld.so.conf.d/newStdLib.conf\nRUN ldconfig\n\nENV CXX=/usr/local/bin/g++\nENV CC=/usr/local/bin/gcc\n\n# Copy appdir template\nADD clazy.AppDir /clazy.AppDir/\n\n# Build Python\nWORKDIR /\nRUN wget https://www.python.org/ftp/python/2.7.16/Python-2.7.16.tgz\nRUN tar xzf Python-2.7.16.tgz && rm Python-2.7.16.tgz\nWORKDIR /Python-2.7.16\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations\nRUN make -j8 altinstall\nRUN ln -sf /usr/local/bin/python2.7 /usr/local/bin/python\n\n#Build CMake\nWORKDIR /\nRUN git clone https://github.com/Kitware/CMake.git\nWORKDIR /CMake\nRUN git checkout v3.15.4\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/\nRUN make -j8\nRUN make install\n\n#Build LLVM\nWORKDIR /\nRUN wget -O - https://github.com/llvm/llvm-project/tarball/llvmorg-11.0.0 | tar xz\nRUN mv llvm-llvm-project-* llvm-project\nWORKDIR /llvm-project/\nRUN echo \"LLVM sha1: `git rev-parse HEAD`\" > /clazy.AppDir/sha1\n\nRUN mkdir /root/build_llvm/\nWORKDIR /root/build_llvm/\nRUN cmake -DCMAKE_INSTALL_PREFIX=/usr/ -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_TARGETS_TO_BUILD=\"X86\" -DLLVM_ENABLE_PROJECTS=\"clang;clang-tools-extra\" -DBUILD_SHARED_LIBS=OFF -DCMAKE_BUILD_TYPE=Release -DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN=ON -DCLANG_ENABLE_CLANGD=OFF /llvm-project/llvm/\nRUN make -j8\nRUN make install\nRUN make DESTDIR=/clazy.AppDir install\nRUN rm -rf /clazy.AppDir/usr/include/\nRUN rm -rf /clazy.AppDir/usr/share/\nRUN rm -rf /clazy.AppDir/usr/lib/*.a\nRUN rm -rf /clazy.AppDir/usr/lib/*.so*\nRUN rm -rf /clazy.AppDir/usr/lib/cmake\nRUN rm -rf /clazy.AppDir/usr/bin/ll*\nWORKDIR /clazy.AppDir/usr/bin/\nRUN rm -rf bugpoint clang-change-namespace clang-doc clang-format verify-uselistorder c-index-test clang-include-fixer clang-query clang-rename clang-scan-deps diagtool find-all-symbols hmaptool obj2yaml sancov scan-build verify-uselistorderc-index-test clang-check clang-extdef-mapping clang-import-test clang-offload-bundler clang-refactor clang-reorder-fields clang-tidy dsymutil git-clang-format modularize opt sanstats scan-view yaml2obj\nRUN chmod +x *\n\n#Clone clazy\nWORKDIR /\nRUN git clone https://github.com/KDE/clazy.git\n"
}