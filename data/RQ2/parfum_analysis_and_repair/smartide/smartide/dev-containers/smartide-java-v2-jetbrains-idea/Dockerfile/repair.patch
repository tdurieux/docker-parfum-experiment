diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/smartide/smartide/dev-containers/smartide-java-v2-jetbrains-idea/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/smartide/smartide/dev-containers/smartide-java-v2-jetbrains-idea/Dockerfile/repaired.Dockerfile
index 301843a..9fa2333 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/smartide/smartide/dev-containers/smartide-java-v2-jetbrains-idea/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/smartide/smartide/dev-containers/smartide-java-v2-jetbrains-idea/Dockerfile/repaired.Dockerfile
@@ -7,7 +7,7 @@
 FROM ubuntu:20.04 AS ideDownloader
 # -------------下载IDE文件
 # prepare tools:
-RUN apt-get update && apt-get -y install --no-install-recommends wget ca-certificates tar
+RUN apt-get update && apt-get -y install --no-install-recommends wget ca-certificates tar && rm -rf /var/lib/apt/lists/*;
 # download IDE to the /ide dir:
 WORKDIR /download
 
@@ -24,7 +24,7 @@ FROM smartide/projector-server:2021.2.2-1673 as projectorGradleBuilder
 FROM ubuntu:20.04 AS projectorStaticFiles
 
 # prepare tools:
-RUN apt-get update && apt-get -y install --no-install-recommends unzip
+RUN apt-get update && apt-get -y install --no-install-recommends unzip && rm -rf /var/lib/apt/lists/*;
 # create the Projector dir:
 ENV PROJECTOR_DIR /projector
 RUN mkdir -p $PROJECTOR_DIR
@@ -73,9 +73,12 @@ RUN true \
     && set -x \
 # 为IDE安装特定包：
     && apt-get update \
-    && if [ "${downloadUrl#*CLion}" != "$downloadUrl" ]; then apt-get install build-essential clang -y; else echo "-------------------------Not CLion"; fi \
-    && if [ "${downloadUrl#*pycharm}" != "$downloadUrl" ]; then apt-get install python2 python3 python3-distutils python3-pip python3-setuptools -y; else echo "-------------------------Not pycharm"; fi \
-    && if [ "${downloadUrl#*rider}" != "$downloadUrl" ]; then apt install apt-transport-https dirmngr gnupg ca-certificates -y \
+    && if [ "${downloadUrl#*CLion}" != "$downloadUrl" ]; then \
+    apt-get install --no-install-recommends build-essential clang -y; else echo "-------------------------Not CLion"; fi \
+    && if [ "${downloadUrl#*pycharm}" != "$downloadUrl" ]; then \
+    apt-get install --no-install-recommends python2 python3 python3-distutils python3-pip python3-setuptools -y; else echo "-------------------------Not pycharm"; fi \
+    && if [ "${downloadUrl#*rider}" != "$downloadUrl" ]; then \
+    apt install --no-install-recommends apt-transport-https dirmngr gnupg ca-certificates -y \
     && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && echo "deb https://download.mono-project.com/repo/ubuntu stable-focal main" | tee /etc/apt/sources.list.d/mono-official-stable.list \
     && apt-get update && apt install mono-devel -y --no-install-recommends \
     && wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb \