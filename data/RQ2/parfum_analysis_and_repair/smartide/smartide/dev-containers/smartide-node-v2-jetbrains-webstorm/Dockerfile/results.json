{
  "startTime": 1674246485642,
  "endTime": 1674246486440,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 22,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#################################################\n# SmartIDE Developer Container Image\n# Licensed under GPL v3.0\n# Copyright (C) leansoftX.com\n#################################################\n\nFROM ubuntu:20.04 AS ideDownloader\n# -------------下载IDE文件\n# prepare tools:\nRUN apt-get update && apt-get -y install --no-install-recommends wget ca-certificates tar && rm -rf /var/lib/apt/lists/*;\n# download IDE to the /ide dir:\nWORKDIR /download\n\n# https://download.jetbrains.com/idea/ideaIC-2021.2.3.tar.gz\nARG downloadUrl\nRUN wget -q $downloadUrl -O - | tar -xz\nRUN find . -maxdepth 1 -type d -name * -execdir mv {} /ide \\;\n\n# -------------构建projector-server库，运行依赖\nFROM smartide/projector-server:2021.2.2-1673 as projectorGradleBuilder\n\n\n# -------------处理IDE运行程序，和构建好的rojector-server库\nFROM ubuntu:20.04 AS projectorStaticFiles\n\n# prepare tools:\nRUN apt-get update && apt-get -y install --no-install-recommends unzip && rm -rf /var/lib/apt/lists/*;\n# create the Projector dir:\nENV PROJECTOR_DIR /projector\nRUN mkdir -p $PROJECTOR_DIR\n# copy IDE:\nCOPY --from=ideDownloader /ide $PROJECTOR_DIR/ide\n# copy projector files to the container:\nCOPY static $PROJECTOR_DIR\n# copy projector:\nCOPY --from=projectorGradleBuilder $PROJECTOR_DIR/projector-server/projector-server/build/distributions/projector-server.zip $PROJECTOR_DIR\n# prepare IDE - apply projector-server:\nRUN unzip $PROJECTOR_DIR/projector-server.zip\nRUN rm $PROJECTOR_DIR/projector-server.zip\nRUN find . -maxdepth 1 -type d -name projector-server-* -exec mv {} projector-server \\;\nRUN mv projector-server $PROJECTOR_DIR/ide/projector-server\nRUN mv $PROJECTOR_DIR/ide-projector-launcher.sh $PROJECTOR_DIR/ide/bin\nRUN chmod 644 $PROJECTOR_DIR/ide/projector-server/lib/*\n\n\n\n# -------------配置运行环境\n\nFROM registry.cn-hangzhou.aliyuncs.com/smartide/smartide-node-v2:latest\n\nRUN true \\\n# Any command which returns non-zero exit code will cause this shell script to exit immediately:\n   && set -e \\\n# Activate debugging to show execution details: all commands will be printed before execution\n   && set -x \\\n# install packages:\n    && apt-get update \\\n# packages for awt:\n    && apt-get install --no-install-recommends libxext6 libxrender1 libxtst6 libxi6 libfreetype6 -y \\\n# packages for user convenience:\n    && apt-get install --no-install-recommends git wget curl bash-completion net-tools sudo ca-certificates -y \\\n# clean apt to reduce image size:\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt\n\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Asia/Shanghai\n# copy the Projector dir:\nENV PROJECTOR_DIR /projector\nCOPY --from=projectorStaticFiles $PROJECTOR_DIR $PROJECTOR_DIR\n\n\nENV PROJECTOR_USER_NAME smartide\n\nRUN true \\\n# Any command which returns non-zero exit code will cause this shell script to exit immediately:\n    && set -e \\\n# Activate debugging to show execution details: all commands will be printed before execution\n    && set -x \\\n# move run scipt: ##will remove\n    && mv $PROJECTOR_DIR/run.sh run.sh \\ \n# change user to non-root (http://pjdietz.com/2016/08/28/nginx-in-docker-without-root.html):\n    # && mv $PROJECTOR_DIR/$PROJECTOR_USER_NAME /home \\\n    && chmod g+rw /home && mkdir -p /home/smartide && mkdir -p /home/project \\\n    #&& useradd -d /home/$PROJECTOR_USER_NAME -s /bin/bash -G sudo $PROJECTOR_USER_NAME \\\n    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \\\n    && chown -R $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME /home/$PROJECTOR_USER_NAME \\\n    && chown -R $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME /home/project \\\n    && chown -R $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME $PROJECTOR_DIR/ide/bin \\\n    ##will remove && chmod +x run.sh \n    && chmod +x run.sh && chmod +x /projector/ide/bin/ide-projector-launcher.sh\n\nUSER $PROJECTOR_USER_NAME\nENV HOME /home/$PROJECTOR_USER_NAME\n\n# use sudo so that user does not get sudo usage info on (the first) login\nRUN sudo echo \"Running 'sudo' for smartide: success\" && \\\n    # create .bashrc.d folder and source it in the bashrc\n    mkdir -p /home/smartide/.bashrc.d && \\\n    (echo; echo \"for i in \\$(ls -A \\$HOME/.bashrc.d/); do source \\$HOME/.bashrc.d/\\$i; done\"; echo) >> /home/smartide/.bashrc\n\n\n# WORKDIR $HOME\n# ENV NODE_VERSION=14.17.6\n# ENV NVM_DIR /home/$PROJECTOR_USER_NAME/.nvm\n# RUN curl -fsSL https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | sh \\\n#     && . $NVM_DIR/nvm.sh  \\\n#     && nvm install $NODE_VERSION \\\n#     && nvm alias default $NODE_VERSION \\\n#     && npm install -g yarn node-gyp \\\n#     && echo \". ~/.nvm/nvm-lazy.sh\"  >> /home/$PROJECTOR_USER_NAME/.bashrc.d/50-node\n# # above, we are adding the lazy nvm init to .bashrc, because one is executed on interactive shells, the other for non-interactive shells (e.g. plugin-host)\n# COPY --chown=$PROJECTOR_USER_NAME:$PROJECTOR_USER_NAME nvm-lazy.sh /home/$PROJECTOR_USER_NAME/.nvm/nvm-lazy.sh\n# ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n\n# USER root\n\n# RUN echo \"export NVM_DIR_ROOT=\\\"/home/$PROJECTOR_USER_NAME/.nvm\\\"\" >> /etc/profile && \\\n#     echo \"[ -s \\\"\\$NVM_DIR_ROOT/nvm.sh\\\" ] && \\. \\\"\\$NVM_DIR_ROOT/nvm.sh\\\"\"  >> /etc/profile  && \\\n#     echo \"[ -s \\\"\\$NVM_DIR_ROOT/bash_completion\\\" ] && \\. \\\"\\$NVM_DIR_ROOT/bash_completion\\\"\"  >> /etc/profile\n\n\nUSER root\n\nEXPOSE 8887\n\n##CMD [\"bash\", \"-c\", \"/run.sh\"]\n\nCOPY gosu_entrypoint_node.sh /idesh/gosu_entrypoint_node.sh\nRUN chmod +x /idesh/gosu_entrypoint_node.sh\n\nENTRYPOINT [\"/idesh/gosu_entrypoint_node.sh\"]\n\n"
}