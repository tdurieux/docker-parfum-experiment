{
  "startTime": 1674251387673,
  "endTime": 1674251389064,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 42,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 7,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 49,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 41,
        "columnStart": 22,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 65,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 7,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM --platform=$TARGETPLATFORM ubuntu:20.04\n\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ Asia/Shanghai\n#git中文乱码问题\nENV LESSCHARSET=utf-8\nENV USERNAME=smartide\nENV USER_PASS=smartide123.@IDE\n#\n# Systemd installation\n#\nRUN apt-get update &&                            \\\n    apt-get install -y --no-install-recommends   \\\n            systemd                              \\\n            systemd-sysv                         \\\n            libsystemd0                          \\\n            ca-certificates                      \\\n            dbus                                 \\\n            iptables                             \\\n            iproute2                             \\\n            kmod                                 \\\n            locales                              \\\n            sudo                                 \\\n            git                                  \\\n            wget                                 \\\n            udev &&                              \\\n                                                 \\\n    # Prevents journald from reading kernel messages from /dev/kmsg\n    echo \"ReadKMsg=no\" >> /etc/systemd/journald.conf &&               \\\n    # Create default user\n    useradd --create-home --shell /bin/bash $USERNAME && echo \"$USERNAME:$USER_PASS\" | chpasswd && adduser $USERNAME sudo \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME \\\n    && chmod g+rw /home \\\n    && mkdir -p /home/project \\\n    && mkdir -p /home/opvscode \\\n    && mkdir -p /idesh && rm -rf /var/lib/apt/lists/*;\n\n\n# Sshd install\nRUN apt-get update && apt-get install --no-install-recommends -y      \\\n            openssh-server &&                                         \\\n    mkdir /home/$USERNAME/.ssh && \\\n    chown -R $USERNAME:$USERNAME /home/$USERNAME/.ssh && rm -rf /var/lib/apt/lists/*;\n\n\n# Docker install\nRUN apt-get update && apt-get install --no-install-recommends -y      \\\n       apt-transport-https                                            \\\n       ca-certificates                                                \\\n       curl                                                           \\\n       gnupg-agent                                                    \\\n       software-properties-common &&                                  \\\n                                                                      \\\n    curl -fsSL https://download.docker.com/linux/ubuntu/gpg           \\\n         | apt-key add - &&                                           \\\n\t                                                                  \\\n    apt-key fingerprint 0EBFCD88 &&                                   \\\n                                                                      \\\n    add-apt-repository                                                \\\n       \"deb [arch=amd64] https://download.docker.com/linux/ubuntu     \\\n       $(lsb_release -cs)                                             \\\n       stable\" &&                                                     \\\n                                                                      \\\n    apt-get update && apt-get install --no-install-recommends -y      \\\n       docker-ce docker-ce-cli containerd.io docker-compose-plugin && \\\n    # Add user to the Docker group\n    usermod -a -G docker $USERNAME && rm -rf /var/lib/apt/lists/*;\n\n\n#Dapr install\nRUN wget -q https://raw.githubusercontent.com/dapr/cli/master/install/install.sh -O - | /bin/bash\n\n#Kind install\nRUN curl -f -Lo ./kind https://kind.sigs.k8s.io/dl/v0.11.1/kind-linux-amd64 \\\n    && chmod +x ./kind \\\n    && mv ./kind /usr/local/bin/kind\n\n#Kubectl install\nRUN curl -f -LO \"https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" \\\n    && chmod +x kubectl \\\n    && mv ./kubectl /usr/local/bin/kubectl\n\n#Helm install\nRUN curl -f https://baltocdn.com/helm/signing.asc | gpg --batch --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null \\\n    && apt-get install --no-install-recommends apt-transport-https --yes \\\n    && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main\" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends helm && rm -rf /var/lib/apt/lists/*;\n\n#k9s install\nRUN mkdir k9s && cd k9s \\\n    && curl -f -Lo k9s.tgz https://github.com/derailed/k9s/releases/download/v0.25.18/k9s_Linux_x86_64.tar.gz \\\n    && tar -xf k9s.tgz \\\n    && install k9s /usr/local/bin/ && rm k9s.tgz\n\n# Housekeeping\nRUN apt-get clean -y &&                                            \\\n    rm -rf                                                         \\\n    /var/cache/debconf/*                                           \\\n    /var/lib/apt/lists/*                                           \\\n    /var/log/*                                                     \\\n    /tmp/*                                                         \\\n    /var/tmp/*                                                     \\\n    /usr/share/doc/*                                               \\\n    /usr/share/man/*                                               \\\n    /usr/share/local/*  \n\nEXPOSE 22 3000 8887\n\n# Set systemd as entrypoint.\nENTRYPOINT [ \"/sbin/init\", \"--log-level=err\" ]\n"
}