{
  "startTime": 1674216152989,
  "endTime": 1674216153686,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine3.14\n\nENV TZ=Europe/London\n\n# This MongoDb connection is to the local Mongo database within the cluster\nENV MONGODBCONN=\"mongodb://gs1resolver:gs1resolver@resolver-mongo-service\"\n\n# Change this fully qualified domain name to match the web domain where you will be hosting the application\nENV RESOLVER_FQDN=\"http://localhost\"\n\n# SQL Azure database connection variables - DEV only for use on local Docker\nENV SQLDBCONN_USER=\"sa\"\nENV SQLDBCONN_PASSWORD=\"its@SECR3T!\"\nENV SQLDBCONN_SERVER=\"resolver-sql-server\"\nENV SQLDBCONN_DB=\"gs1-resolver-ce-v2-1-db\"\n\n# This batch size is how many entries from the data entry db will be processed in a batch table rows.\n# Smaller sizes keep the amount of sata transferred by each request lower as well as keep the data entry\n# database better performing, but smaller numbers will cause the processing to take longer overall.\nENV SQLDB_PROCESS_BATCH_SIZE=1000\n\n# BUILD_INTERVAL_SECONDS sets how often the build event will be started (if idle). Additionally, if running several\n# Build containers in Docker or Kubernetes, BUILD_MAX_ENTROPY_SECONDS stores the maximum extra seconds\n# the Build should be delayed for at every build interval. At every interval, a random number between 0 and\n# this value is generated.  This 'entropy' enables workload to be shared more eevenly amongst Build containers\n# otherwise Build container 1 will always start its interval before Build container 2, 3, ... and n, and will\n# always detect DB changes first as the subsequent containers will be running behind.\nENV BUILD_INTERVAL_SECONDS=10\nENV BUILD_MAX_ENTROPY_SECONDS=10\n\nRUN mkdir /buildsync\nCOPY *.json /buildsync/\nWORKDIR /buildsync\nRUN npm install && npm cache clean --force;\n\nCOPY src /buildsync/src\n\nHEALTHCHECK CMD curl http://localhost/healthcheck || exit 1\n\n# Run Node (not NPM) to start the server.\n# If the usual practice of 'npm start' is used, any SIGTERM arriving to stop the\n# container in a controlled manner is instead absorbed by NPM and the container\n# keeps going until it is forced-stopped.\nENTRYPOINT [\"node\",\"/buildsync/src/index.js\"]\n"
}