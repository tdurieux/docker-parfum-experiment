{
  "startTime": 1674246968769,
  "endTime": 1674246972044,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 10,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 85
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9 AS build-env\n\nARG CLI_VERSION\nARG BUILD_DATE\n\nRUN groupadd --gid 1000 node \\\n  && useradd --uid 1000 --gid node --shell /bin/bash --create-home node\n\nENV NODE_VERSION 16.13.1\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n    amd64) ARCH='x64';; \\\n    ppc64el) ARCH='ppc64le';; \\\n    s390x) ARCH='s390x';; \\\n    arm64) ARCH='arm64';; \\\n    armhf) ARCH='armv7l';; \\\n    i386) ARCH='x86';; \\\n    * echo \"unsupported  architecture\"; exit 1;; \\\n  esac \\\n  # gpg keys listed at https://github.com/nodejs/node#release-keys\n  && set -ex \\\n  && for key in \\\n    4ED778F539E3634C779C87C6D7062848A1AB005C \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    74F12602B6F1C4E913FAA37AD3A89613643B6201 \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n    108F52B48DB57BB0CC439B2997B01419BD92F80A \\\n    B9E2F5981AA6E0CD28160D9FF13993A75599653C \\\n  ; do \\\n      gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$key\" || \\\n      gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$key\" ; \\\n  done \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && tar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs \\\n  && npm install -g @appthreat/cdxgen && npm cache clean --force;\n\nCOPY setup.py /appthreat/\nCOPY MANIFEST.in /appthreat/\nCOPY README.md /appthreat/\nCOPY depscan /appthreat/depscan\nCOPY vendor /appthreat/vendor\nUSER root\n\nWORKDIR /appthreat\nRUN python3 setup.py install \\\n    && rm -rf /appthreat/*\n\nFROM python:3.9-slim\n\nLABEL maintainer=\"AppThreat\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"AppThreat\" \\\n      org.label-schema.name=\"dep-scan\" \\\n      org.label-schema.version=$CLI_VERSION \\\n      org.label-schema.license=\"MIT\" \\\n      org.label-schema.description=\"Fully open-source security audit tool for project dependencies based on known vulnerabilities and advisories\" \\\n      org.label-schema.url=\"https://appthreat.io\" \\\n      org.label-schema.usage=\"https://github.com/appthreat/dep-scan\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vcs-url=\"https://github.com/appthreat/dep-scan.git\" \\\n      org.label-schema.docker.cmd=\"docker run --rm -it --name dep-scan appthreat/dep-scan\"\n\nCOPY --from=build-env /usr/local/lib/node_modules /usr/local/lib/node_modules\nCOPY --from=build-env /usr/local/lib/python3.9/site-packages /usr/local/lib/python3.9/site-packages\nCOPY --from=build-env /usr/local/bin/scan /usr/local/bin/scan\nCOPY --from=build-env /usr/local/bin/depscan /usr/local/bin/depscan\nCOPY --from=build-env /usr/local/bin/vdb /usr/local/bin/vdb\nCOPY --from=build-env /usr/local/bin/node /usr/local/bin/node\nCOPY --from=build-env /usr/local/bin/npm /usr/local/bin/npm\n\nENV VDB_HOME=/appthreat \\\n    PYTHONUNBUFFERED=1 \\\n    NVD_START_YEAR=2018 \\\n    GITHUB_PAGE_COUNT=2 \\\n    CDXGEN_CMD=/usr/local/lib/node_modules/@appthreat/cdxgen/bin/cdxgen\n\nWORKDIR /appthreat\n\nCMD [ \"depscan\" ]\n"
}