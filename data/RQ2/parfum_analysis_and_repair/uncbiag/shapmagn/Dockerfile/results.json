{
  "startTime": 1674219273739,
  "endTime": 1674219274843,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 1,
        "lineEnd": 2,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 68,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 68,
        "columnEnd": 109
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gaetanlandreau/pytorch3d\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    parallel \\\n && rm -rf /var/lib/apt/lists/*\nWORKDIR /proj/shapmagn\nCOPY ./shapmagn/requirement.txt .\nRUN pip install --no-cache-dir -r  requirement.txt\nRUN pip install --no-cache-dir open3d --ignore-installed PyYAML\nRUN pip install --no-cache-dir torch-scatter -f https://pytorch-geometric.com/whl/torch-1.7.1+cu110.html\nRUN apt-get update && apt-get -y --no-install-recommends install cmake protobuf-compiler && apt-get install --no-install-recommends ffmpeg libsm6 libxext6 -y && rm -rf /var/lib/apt/lists/*;\nRUN apt-get update && apt-get -y --no-install-recommends install libeigen3-dev libboost-all-dev gifsicle && rm -rf /var/lib/apt/lists/*;\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.19.8/cmake-3.19.8-Linux-x86_64.sh \\\n      -q -O /tmp/cmake-install.sh \\\n      && chmod u+x /tmp/cmake-install.sh \\\n      && mkdir /usr/bin/cmake_318 \\\n      && /tmp/cmake-install.sh --skip-license --prefix=/usr/bin/cmake_318 \\\n      && rm /tmp/cmake-install.sh\nENV PATH=\"/usr/bin/cmake_318/bin:${PATH}\"\n\nARG user=appuser\nARG group=appuser\nARG uid=1000\nARG gid=1000\nRUN groupadd -g ${gid} ${group} && useradd -u ${uid} -g ${group} -s /bin/sh ${user}\nRUN mkdir /.cache\nRUN mkdir /.local\nRUN chmod 777 /.cache\nRUN chmod 777 /.local\nRUN chmod 777 /opt/conda/lib/python3.8/site-packages/\nRUN mkdir /home/${user}\nRUN chmod 777 /home/${user}\n\n\nENV PCL_PACKAGE_DIR=\"/proj/pcl\"\nRUN mkdir \"$PCL_PACKAGE_DIR\"\nWORKDIR \"$PCL_PACKAGE_DIR\"\nRUN apt-get update && apt-get -y --no-install-recommends install libflann-dev && rm -rf /var/lib/apt/lists/*;\nRUN wget \"https://github.com/PointCloudLibrary/pcl/archive/pcl-1.9.1.zip\"\nRUN unzip pcl-*.zip\nRUN rm pcl-*.zip\nRUN mv pcl-* pcl-lastest\nRUN cd pcl-lastest && mkdir build && cd build\nWORKDIR pcl-lastest/build\nRUN cmake ..\nRUN make -j $(python3 -c 'import multiprocessing as mp; print(int(mp.cpu_count()    * 1.5))')\nRUN make install\nRUN git clone https://github.com/MIT-SPARK/TEASER-plusplus.git\n# Configure and compile\nWORKDIR TEASER-plusplus\nRUN mkdir build\nWORKDIR build\nRUN cmake ..\nRUN make\n# Generate doxygen documentation in doc/\nRUN make doc\nRUN make install\nRUN cmake -DTEASERPP_PYTHON_VERSION=3.8 ..\nRUN make teaserpp_python\nWORKDIR python\nRUN pip install --no-cache-dir .\n\n\n\nUSER ${user}\nCMD /bin/bash"
}