{
  "startTime": 1674252950294,
  "endTime": 1674252951121,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Install some basics\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        wget \\\n        curl \\\n        git \\\n        vim \\\n        unzip \\\n        xz-utils \\\n        software-properties-common \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\n# Add latest cmake/boost\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add - \\\n    && apt-add-repository 'deb https://apt.kitware.com/ubuntu/ bionic main'\n\n\nRUN wget https://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.0g-2ubuntu4_amd64.deb && dpkg -i ./libssl1.1_1.1.0g-2ubuntu4_amd64.deb\n# Install required packages for dev\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        build-essential \\\n        libtool autoconf pkg-config \\\n        ninja-build \\\n        ruby-full \\\n        clang-14 \\\n        llvm-14 \\\n        libc++-dev libc++abi-dev \\\n        cmake \\\n        libboost-all-dev \\\n        ccache \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nENV CC=/usr/bin/clang-14\nENV CXX=/usr/bin/clang++-14\n\n# ↑ Setup build environment\n# ↓ Build and compile wallet core\n\nRUN git clone https://github.com/trustwallet/wallet-core.git\nWORKDIR /wallet-core\n\n# Install dependencies\nRUN tools/install-dependencies\n\n# Build: generate, cmake, and make lib\nRUN tools/generate-files \\\n    && cmake -H. -Bbuild -DCMAKE_BUILD_TYPE=Debug \\\n    && make -Cbuild -j12 TrustWalletCore\n\n# Build unit tester\nRUN make -Cbuild -j12 tests\n\n# Download and Install Go\nENV GO_VERSION=1.16.12\nENV GO_ARCH=amd64\nRUN wget \"https://golang.org/dl/go${GO_VERSION}.linux-${GO_ARCH}.tar.gz\" \\\n    && tar -xf \"go${GO_VERSION}.linux-${GO_ARCH}.tar.gz\" \\\n    && chown -R root:root ./go \\\n    && mv -v ./go /usr/local \\\n    && ls /usr/local/go \\\n    && /usr/local/go/bin/go version \\\n    && rm \"go${GO_VERSION}.linux-${GO_ARCH}.tar.gz\"\n\n# Building GoLang sample app:  cd samples/go && /usr/local/go/bin/go build -o main && ./main\n\nCMD [\"/bin/bash\"]\n"
}