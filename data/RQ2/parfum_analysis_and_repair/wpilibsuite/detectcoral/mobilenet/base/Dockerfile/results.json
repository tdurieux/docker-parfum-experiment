{
  "startTime": 1674251007063,
  "endTime": 1674251008505,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:1.12.0-rc2-devel\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN cd / & mkdir tensorflow && \\\n    git clone https://github.com/tensorflow/models.git && \\\n    (cd models && git checkout f788046ca876a8820e05b0b48c1fc2e16b0955bc) && \\\n    mv models /tensorflow/models\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends nginx curl wget python python-tk apt-transport-https ca-certificates  \\\n        build-essential cmake unzip yasm pkg-config libswscale-dev libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev \\\n        libjasper-dev libavformat-dev libhdf5-dev libpq-dev && \\\n    pip install --no-cache-dir Cython contextlib2 pillow matplotlib numpy hdf5storage h5py scipy && \\\n    mkdir -p /opt/ml/input/data/training && \\\n    mkdir -p /opt/ml/model/ && rm -rf /var/lib/apt/lists/*;\n\n\n# Get protoc 3.0.0, rather than the old version already in the container\nRUN cd / && \\\n    curl -f -OL \"https://github.com/google/protobuf/releases/download/v3.0.0/protoc-3.0.0-linux-x86_64.zip\" && \\\n    unzip protoc-3.0.0-linux-x86_64.zip -d proto3 && \\\n    mv proto3/bin/* /usr/local/bin && \\\n    mv proto3/include/* /usr/local/include && \\\n    rm -rf proto3 protoc-3.0.0-linux-x86_64.zip\n\n# Install pycocoapi\nRUN git clone --depth 1 https://github.com/cocodataset/cocoapi.git && \\\n    cd cocoapi/PythonAPI && \\\n    make -j8 && \\\n    cp -r pycocotools /tensorflow/models/research && \\\n    cd ../../ && \\\n    rm -rf cocoapi && \\\n    cd /tensorflow/models/research && \\\n    protoc object_detection/protos/*.proto --python_out=.\n\n# Set the PYTHONPATH to finish installing the API\nENV PYTHONPATH $PYTHONPATH:/tensorflow/models/research:/tensorflow/models/research/slim\n\nENV PATH=\"/tensorflow/models/research:${PATH}\""
}