diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/binoculars/ffmpeg-build-lambda/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/binoculars/ffmpeg-build-lambda/Dockerfile/repaired.Dockerfile
index 4939e6d..dbeffe5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/binoculars/ffmpeg-build-lambda/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/binoculars/ffmpeg-build-lambda/Dockerfile/repaired.Dockerfile
@@ -66,7 +66,7 @@ ARG         PREFIX=/opt/ffmpeg
 ARG         LD_LIBRARY_PATH="/opt/ffmpeg/lib:/opt/ffmpeg/lib64"
 
 
-RUN     buildDeps="autoconf \
+RUN buildDeps="autoconf \
                    automake \
                    bash \
                    binutils \
@@ -95,7 +95,7 @@ RUN     buildDeps="autoconf \
                    xcb-proto \
                    yasm \
                    zlib-dev" && \
-        apk  add --update ${buildDeps}
+        apk add --no-cache --update ${buildDeps}
 
 ## libvmaf https://github.com/Netflix/vmaf
 RUN \
@@ -104,7 +104,7 @@ RUN \
         DIR=/tmp/vmaf && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/Netflix/vmaf/archive/v${LIBVMAF_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/Netflix/vmaf/archive/v${LIBVMAF_VERSION}.tar.gz && \
         tar -xz --strip-components=1 -f v${LIBVMAF_VERSION}.tar.gz && \
         cd /tmp/vmaf/libvmaf && \
         meson build --buildtype release --prefix=${PREFIX} && \
@@ -112,7 +112,7 @@ RUN \
         ninja -vC build install && \
         mkdir -p ${PREFIX}/share/model/ && \
         cp -r /tmp/vmaf/model/* ${PREFIX}/share/model/ && \
-        rm -rf ${DIR}; \
+        rm -rf ${DIR}; rm v${LIBVMAF_VERSION}.tar.gz \
         else \
         echo "VMAF skipped."; \
         fi
@@ -122,9 +122,9 @@ RUN \
         DIR=/tmp/opencore-amr && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://sourceforge.net/projects/opencore-amr/files/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz/download | \
+        curl -f -sL https://sourceforge.net/projects/opencore-amr/files/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz/download | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --enable-shared  && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -133,9 +133,9 @@ RUN \
         DIR=/tmp/x264 && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \
+        curl -f -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 | \
         tar -jx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --enable-shared --enable-pic --disable-cli && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared --enable-pic --disable-cli && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -144,7 +144,7 @@ RUN \
         DIR=/tmp/x265 && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://github.com/videolan/x265/archive/refs/tags/${X265_VERSION}.tar.gz | \
+        curl -f -sL https://github.com/videolan/x265/archive/refs/tags/${X265_VERSION}.tar.gz | \
         tar -zx && \
         cd x265-${X265_VERSION}/build/linux && \
         sed -i "/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\${PREFIX}/" multilib.sh && \
@@ -157,59 +157,59 @@ RUN \
         DIR=/tmp/ogg && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz && \
         echo ${OGG_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" --enable-shared  && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libogg-${OGG_VERSION}.tar.gz
 ### libopus https://www.opus-codec.org/
 RUN \
         DIR=/tmp/opus && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \
+        curl -f -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz && \
         echo ${OPUS_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz && \
         autoreconf -fiv && \
-        ./configure --prefix="${PREFIX}" --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm opus-${OPUS_VERSION}.tar.gz
 ### libvorbis https://xiph.org/vorbis/
 RUN \
         DIR=/tmp/vorbis && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz && \
         echo ${VORBIS_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libvorbis-${VORBIS_VERSION}.tar.gz
 ### libtheora http://www.theora.org/
 RUN \
         DIR=/tmp/theora && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz && \
         echo ${THEORA_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libtheora-${THEORA_VERSION}.tar.gz
 ### libvpx https://www.webmproject.org/code/
 RUN \
         DIR=/tmp/vpx && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
+        curl -f -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \
-        --disable-debug --disable-examples --disable-docs --disable-install-bins  && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared \
+        --disable-debug --disable-examples --disable-docs --disable-install-bins && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -218,9 +218,9 @@ RUN \
         DIR=/tmp/vebp && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | \
+        curl -f -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --enable-shared  && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --enable-shared && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -229,9 +229,9 @@ RUN \
         DIR=/tmp/lame && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://sourceforge.net/projects/lame/files/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz/download | \
+        curl -f -sL https://sourceforge.net/projects/lame/files/lame/${LAME_VERSION}/lame-${LAME_VERSION}.tar.gz/download | \
         tar -zx --strip-components=1 && \
-        ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --disable-frontend && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --disable-frontend && \
         make && \
         make install && \
         rm -rf ${DIR}
@@ -240,99 +240,99 @@ RUN \
         DIR=/tmp/xvid && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \
+        curl -f -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz && \
         echo ${XVID_SHA256SUM} | sha256sum --check && \
         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz && \
         cd xvidcore/build/generic && \
-        ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --bindir="${PREFIX}/bin" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm xvidcore-${XVID_VERSION}.tar.gz
 ## openjpeg https://github.com/uclouvain/openjpeg
 RUN \
         DIR=/tmp/openjpeg && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \
+        curl -f -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz | \
         tar -zx --strip-components=1 && \
         cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX="${PREFIX}" . && \
         make && \
         make install && \
         rm -rf ${DIR}
 ## freetype https://www.freetype.org/
-RUN  \
+RUN \
         DIR=/tmp/freetype && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \
+        curl -f -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz && \
         echo ${FREETYPE_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm freetype-${FREETYPE_VERSION}.tar.gz
 ## libvstab https://github.com/georgmartius/vid.stab
-RUN  \
+RUN \
         DIR=/tmp/vid.stab && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \
-        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&  \
+        curl -f -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz && \
+        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz && \
         cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" . && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm v${LIBVIDSTAB_VERSION}.tar.gz
 ## fridibi https://www.fribidi.org/
-RUN  \
+RUN \
         DIR=/tmp/fribidi && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz && \
         echo ${FRIBIDI_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz && \
         sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib bin/' Makefile.am && \
         ./bootstrap --no-config --auto && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make -j1 && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm ${FRIBIDI_VERSION}.tar.gz
 ## fontconfig https://www.freedesktop.org/wiki/Software/fontconfig/
-RUN  \
+RUN \
         DIR=/tmp/fontconfig && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \
+        curl -f -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \
         tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm fontconfig-${FONTCONFIG_VERSION}.tar.bz2
 ## libass https://github.com/libass/libass
-RUN  \
+RUN \
         DIR=/tmp/libass && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz && \
         echo ${LIBASS_SHA256SUM} | sha256sum --check && \
         tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz && \
         ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm ${LIBASS_VERSION}.tar.gz
 ## kvazaar https://github.com/ultravideo/kvazaar
 RUN \
         DIR=/tmp/kvazaar && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz && \
         ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm v${KVAZAAR_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/aom && \
@@ -351,76 +351,76 @@ RUN \
         DIR=/tmp/xorg-macros && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \
+        curl -f -sLO https://www.x.org/archive//individual/util/util-macros-${XORG_MACROS_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f util-macros-${XORG_MACROS_VERSION}.tar.gz && \
-        ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm util-macros-${XORG_MACROS_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/xproto && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz && \
+        curl -f -sLO https://www.x.org/archive/individual/proto/xproto-${XPROTO_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f xproto-${XPROTO_VERSION}.tar.gz && \
-        ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm xproto-${XPROTO_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/libXau && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz && \
+        curl -f -sLO https://www.x.org/archive/individual/lib/libXau-${XAU_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f libXau-${XAU_VERSION}.tar.gz && \
-        ./configure --srcdir=${DIR} --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --srcdir=${DIR} --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libXau-${XAU_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/libpthread-stubs && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
+        curl -f -sLO https://xcb.freedesktop.org/dist/libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz && \
-        ./configure --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libpthread-stubs-${LIBPTHREAD_STUBS_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/libxcb-proto && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
+        curl -f -sLO https://xcb.freedesktop.org/dist/xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f xcb-proto-${XCBPROTO_VERSION}.tar.gz && \
         ACLOCAL_PATH="${PREFIX}/share/aclocal" ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm xcb-proto-${XCBPROTO_VERSION}.tar.gz
 
 RUN \
         DIR=/tmp/libxcb && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz && \
+        curl -f -sLO https://xcb.freedesktop.org/dist/libxcb-${LIBXCB_VERSION}.tar.gz && \
         tar -zx --strip-components=1 -f libxcb-${LIBXCB_VERSION}.tar.gz && \
         ACLOCAL_PATH="${PREFIX}/share/aclocal" ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libxcb-${LIBXCB_VERSION}.tar.gz
 
 ## libxml2 - for libbluray
 RUN \
         DIR=/tmp/libxml2 && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://github.com/GNOME/libxml2/archive/refs/tags/v${LIBXML2_VERSION}.tar.gz | \
+        curl -f -sL https://github.com/GNOME/libxml2/archive/refs/tags/v${LIBXML2_VERSION}.tar.gz | \
         tar -xz --strip-components=1 && \
         ./autogen.sh --prefix="${PREFIX}" --with-ftp=no --with-http=no --with-python=no && \
         make && \
@@ -432,25 +432,25 @@ RUN \
         DIR=/tmp/libbluray && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 && \
+        curl -f -sLO https://download.videolan.org/pub/videolan/libbluray/${LIBBLURAY_VERSION}/libbluray-${LIBBLURAY_VERSION}.tar.bz2 && \
         echo ${LIBBLURAY_SHA256SUM} | sha256sum --check && \
         tar -jx --strip-components=1 -f libbluray-${LIBBLURAY_VERSION}.tar.bz2 && \
-        ./configure --prefix="${PREFIX}" --disable-examples --disable-bdjava-jar --disable-static --enable-shared && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" --disable-examples --disable-bdjava-jar --disable-static --enable-shared && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm libbluray-${LIBBLURAY_VERSION}.tar.bz2
 
 ## libsrt https://github.com/Haivision/srt
 RUN \
         DIR=/tmp/srt && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/Haivision/srt/archive/v${LIBSRT_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/Haivision/srt/archive/v${LIBSRT_VERSION}.tar.gz && \
         tar -xz --strip-components=1 -f v${LIBSRT_VERSION}.tar.gz && \
         cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" . && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm v${LIBSRT_VERSION}.tar.gz
 
 ## libpng
 RUN \
@@ -459,7 +459,7 @@ RUN \
         cd ${DIR} && \
         git clone https://git.code.sf.net/p/libpng/code ${DIR} -b v${LIBPNG_VERSION} --depth 1 && \
         ./autogen.sh && \
-        ./configure --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="${PREFIX}" && \
         make check && \
         make install && \
         rm -rf ${DIR}
@@ -469,22 +469,22 @@ RUN \
         DIR=/tmp/b24 && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sLO https://github.com/nkoriyama/aribb24/archive/v${LIBARIBB24_VERSION}.tar.gz && \
+        curl -f -sLO https://github.com/nkoriyama/aribb24/archive/v${LIBARIBB24_VERSION}.tar.gz && \
         echo ${LIBARIBB24_SHA256SUM} | sha256sum --check && \
         tar -xz --strip-components=1 -f v${LIBARIBB24_VERSION}.tar.gz && \
         autoreconf -fiv && \
-        ./configure CFLAGS="-I${PREFIX}/include -fPIC" --prefix="${PREFIX}" && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CFLAGS="-I${PREFIX}/include -fPIC" --prefix="${PREFIX}" && \
         make && \
         make install && \
-        rm -rf ${DIR}
+        rm -rf ${DIR} && rm v${LIBARIBB24_VERSION}.tar.gz
 
 ## Download ffmpeg https://ffmpeg.org/
-RUN  \
+RUN \
         DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} && \
-        curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
+        curl -f -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
         tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2 && \
-        ./configure     --disable-debug  --disable-doc    --disable-ffplay   --enable-shared --enable-avresample   --enable-gpl  --extra-libs=-ldl && \
-        make ;  make install
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-debug --disable-doc --disable-ffplay --enable-shared --enable-avresample --enable-gpl --extra-libs=-ldl && \
+        make; rm ffmpeg-${FFMPEG_VERSION}.tar.bz2 make install
 
 
 ## chromaprint https://github.com/acoustid/chromaprint
@@ -493,16 +493,16 @@ RUN \
         DIR=/tmp/chromaprint && \
         mkdir -p ${DIR} && \
         cd ${DIR} && \
-        curl -sL https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VERSION}/chromaprint-${CHROMAPRINT_VERSION}.tar.gz | tar -zx --strip-components=1  && \
+        curl -f -sL https://github.com/acoustid/chromaprint/releases/download/v${CHROMAPRINT_VERSION}/chromaprint-${CHROMAPRINT_VERSION}.tar.gz | tar -zx --strip-components=1 && \
         cmake -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON . && \
         make && \
         make install && \
         rm -rf ${DIR}
 
 ## Build ffmpeg https://ffmpeg.org/
-RUN  \
+RUN \
         DIR=/tmp/ffmpeg && cd ${DIR} && \
-        ./configure \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --disable-debug \
         --disable-doc \
         --disable-ffplay \