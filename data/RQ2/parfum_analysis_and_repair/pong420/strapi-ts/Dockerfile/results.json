{
  "startTime": 1674254469945,
  "endTime": 1674254470573,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# refrence:\n# https://blog.logrocket.com/containerized-development-nestjs-docker/\n\nFROM node:14.17.4-alpine as development\n\nWORKDIR /srv/\n\nCOPY . .\nCOPY scripts/*.js ./scripts/\n\n# Remove husky install since git is not existed in the image\nRUN node scripts/set-script prepare ''\nRUN yarn install --production=false --frozen-lockfile && yarn cache clean;\n\n# build the strapi admin ui\nARG SERVER_URL=http://localhost:1337\nENV SERVER_URL=${SERVER_URL}\n\nARG NODE_ENV=production\nENV NODE_ENV=${NODE_ENV}\n\n# complie typescript to javascript in app directory\nRUN yarn build\n\n# run strapi build process\nRUN yarn app build\n\n# -------------------- break point --------------------\n\nFROM node:14.17.4-alpine as production\n\nARG NODE_ENV=production\nENV NODE_ENV=${NODE_ENV}\n\nWORKDIR /srv/\n\nCOPY package.json ./\nCOPY yarn.lock ./\nCOPY scripts/*.js ./scripts/\n\n# Just copy the app directory and install the dependencies seems a good idea\n# But I am afraid that the lock file will not work. So We keep the yarn workspaces structure\nCOPY --from=development /srv/app ./app\n\nRUN node scripts/set-script prepare ''\nRUN yarn install --production=true --frozen-lockfile && yarn cache clean;\n\n# reduce node_modules size\n# COPY scripts/trim-node-modules.sh ./\n# RUN [\"chmod\", \"+x\", \"./trim-node-modules.sh\"]\n# RUN sh ./trim-node-modules.sh\nRUN rm -rf app/jest.*\nRUN rm -rf app/tests\n\n# make sure enviroment variables file not public\nRUN find app/public -name \".*env*\"  -exec rm -rf {} +\n\n# install node-prune (https://github.com/tj/node-prune)\nRUN apk --no-cache add curl bash\nRUN npx node-prune\nRUN npx node-prune app/node_modules\n\nWORKDIR /srv/app\n\nEXPOSE 1337\n\nCMD [\"yarn\", \"start\"]"
}