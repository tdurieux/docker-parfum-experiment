{
  "startTime": 1674251610219,
  "endTime": 1674251611188,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 1,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 1,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 22,
        "columnStart": 1,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG TARGETARCH\nARG GOLANG_VERSION=\"1.16.3\"\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nENV GOPATH=/root/go\nENV GO111MODULE=on\nENV HMY_PATH=${GOPATH}/src/github.com/harmony-one\nENV OPENSSL_DIR=/usr/lib/ssl\nENV MCL_DIR=${HMY_PATH}/mcl\nENV BLS_DIR=${HMY_PATH}/bls\nENV CGO_CFLAGS=\"-I${BLS_DIR}/include -I${MCL_DIR}/include\"\nENV CGO_LDFLAGS=\"-L${BLS_DIR}/lib\"\nENV LD_LIBRARY_PATH=${BLS_DIR}/lib:${MCL_DIR}/lib\nENV GIMME_GO_VERSION=${GOLANG_VERSION}\nENV PATH=\"/root/bin:${PATH}\"\n\nRUN apt update && apt upgrade -y && \\\n\tapt install --no-install-recommends libgmp-dev libssl-dev curl git \\\n\tpsmisc dnsutils jq make gcc g++ bash tig tree sudo vim \\\n\tsilversearcher-ag unzip emacs-nox nano bash-completion -y && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir ~/bin && \\\n\tcurl -f -sL -o ~/bin/gimme \\\n\thttps://raw.githubusercontent.com/travis-ci/gimme/master/gimme && \\\n\tchmod +x ~/bin/gimme\n\nRUN eval \"$(~/bin/gimme ${GIMME_GO_VERSION})\"\n\nRUN git clone https://github.com/harmony-one/harmony.git ${HMY_PATH}/harmony\n\nRUN git clone https://github.com/harmony-one/bls.git ${HMY_PATH}/bls\n\nRUN git clone https://github.com/harmony-one/mcl.git ${HMY_PATH}/mcl\n\nRUN git clone https://github.com/harmony-one/go-sdk.git ${HMY_PATH}/go-sdk\n\nRUN cd ${HMY_PATH}/bls && make -j8 BLS_SWAP_G=1\n\nRUN touch /root/.bash_profile && \\\n\tgimme ${GIMME_GO_VERSION} >> /root/.bash_profile && \\\n\techo \"GIMME_GO_VERSION='${GIMME_GO_VERSION}'\" >> /root/.bash_profile && \\\n\techo \"GO111MODULE='on'\" >> /root/.bash_profile && \\\n\techo \". ~/.bash_profile\" >> /root/.profile && \\\n\techo \". ~/.bash_profile\" >> /root/.bashrc\n\nENV PATH=\"/root/.gimme/versions/go${GIMME_GO_VERSION}.linux.${TARGETARCH:-amd64}/bin:${GOPATH}/bin:${PATH}\"\n\nRUN . ~/.bash_profile; \\\n\tgo get -u golang.org/x/tools/cmd/goimports; \\\n\tgo get -u golang.org/x/lint/golint ; \\\n\tgo get -u github.com/rogpeppe/godef ; \\\n\tgo get -u github.com/go-delve/delve/cmd/dlv; \\\n\tgo get -u github.com/golang/mock/mockgen; \\\n\tgo get -u github.com/stamblerre/gocode; \\\n\tgo get -u golang.org/x/tools/...; \\\n\tgo get -u honnef.co/go/tools/cmd/staticcheck/...\n\nWORKDIR ${HMY_PATH}/harmony\n\nRUN scripts/install_build_tools.sh\n\nRUN go mod tidy\n\nRUN scripts/go_executable_build.sh -S\n\nRUN cd ${HMY_PATH}/go-sdk && make -j8 && cp hmy /root/bin\n\nARG K1=one1tq4hy947c9gr8qzv06yxz4aeyhc9vn78al4rmu\nARG K2=one1y5gmmzumajkm5mx3g2qsxtza2d3haq0zxyg47r\nARG K3=one1qrqcfek6sc29sachs3glhs4zny72mlad76lqcp\n\nARG KS1=8d222cffa99eb1fb86c581d9dfe7d60dd40ec62aa29056b7ff48028385270541\nARG KS2=da1800da5dedf02717696675c7a7e58383aff90b1014dfa1ab5b7bd1ce3ef535\nARG KS3=f4267bb5a2f0e65b8f5792bb6992597fac2b35ebfac9885ce0f4152c451ca31a\n\nRUN hmy keys import-private-key ${KS1} && \\\n\thmy keys import-private-key ${KS2} && \\\n\thmy keys import-private-key ${KS3} && \\\n\thmy keys generate-bls-key > keys.json\n\nRUN jq  '.[\"encrypted-private-key-path\"]' -r keys.json > /root/keypath && cp keys.json /root && \\\n\techo \"export BLS_KEY_PATH=$(cat /root/keypath)\" >> /root/.bashrc && \\\n\techo \"export BLS_KEY=$(jq '.[\"public-key\"]' -r keys.json)\" >> /root/.bashrc && \\\n\techo \"printf '${K1}, ${K2}, ${K3} are imported accounts in hmy for local dev\\n\\n'\" >> /root/.bashrc && \\\n\techo \"printf 'test with: hmy blockchain validator information ${K1}\\n\\n'\" >> /root/.bashrc && \\\n\techo \"echo \"$(jq '.[\"public-key\"]' -r keys.json)\" is an extern bls key\" >> /root/.bashrc && \\\n\techo \". /etc/bash_completion\" >> /root/.bashrc && \\\n\techo \". <(hmy completion)\" >> /root/.bashrc\n"
}