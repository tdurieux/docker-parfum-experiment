{
  "startTime": 1674252366914,
  "endTime": 1674252367878,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Building everything\nFROM arm64v8/alpine:3.8 AS build-env\n\nCOPY datalogger-mqtt/docker/qemu-aarch64-static /usr/bin/qemu-aarch64-static\n\nRUN apk update && apk add --no-cache cmake alpine-sdk boost-dev boost-system boost-thread openssl-dev libstdc++\n\nADD . /app\nWORKDIR /app/datalogger-mqtt\n\nRUN rm -rf build && mkdir build && cd build && cmake ../\nRUN cd build && make\n\n\n\n#Transferring build artifacts to minimal docker\nFROM arm64v8/alpine:3.8\n#For debugging uncomment, and replae copy with real install to see what is missing...\n#RUN apk update && apk add openssl boost-system boost-thread libstdc++\nCOPY --from=build-env /lib/libssl.so.1.0.0   /lib/\nCOPY --from=build-env /lib/libcrypto.so.1.0.0  /lib/\nCOPY --from=build-env /usr/lib/libstdc++.so.6  /usr/lib/\nCOPY --from=build-env /usr/lib/libgcc_s.so.1 /usr/lib/\n\n\nCOPY --from=build-env /app/datalogger-mqtt/build/datalogger-mqtt /\nCOPY --from=build-env /app/datalogger-mqtt/docker/dockerentry.sh /\nCOPY --from=build-env /app/datalogger-mqtt/build/CA.pem /\nCOPY --from=build-env /app/datalogger-mqtt/build/Client.key /\nCOPY --from=build-env /app/datalogger-mqtt/build/Client.pem /\n\nWORKDIR /\nCMD /bin/sh /dockerentry.sh\n"
}