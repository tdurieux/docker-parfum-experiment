{
  "startTime": 1674252216321,
  "endTime": 1674252216820,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=node:12.4.0-alpine\nFROM $BASE_IMAGE as builder\n\nRUN apk update && apk upgrade && \\\n    apk add --no-cache yarn bash make gcc g++ python curl libc6-compat openssl && \\\n    npm install -g webpack webpack-cli webpack-node-externals terser-webpack-plugin && npm cache clean --force;\n\n# copy all packages without source (only package.json)\nCOPY --from=contextholder:latest /build ./build\nWORKDIR /build\nRUN node workspace-util.js prune @cedalo/service-streams && \\\n    yarn install --prod --frozen-lockfile && \\\n    # Ensure node_modules is present so we can copy it\n    mkdir -p packages/service-streams/node_modules && yarn cache clean;\n\n# copy all packages with source\nCOPY --from=contextholder:latest /packages-with-source ./packages\nRUN node workspace-util.js prune @cedalo/service-streams\n\n# RUN npm link webpack-node-externals terser-webpack-plugin && \\\n#     yarn workspace @cedalo/service-streams bundle && \\\n#     rm -rf node_modules/@cedalo\n\nFROM $BASE_IMAGE\n\nRUN apk update && apk upgrade && \\\n    apk add --no-cache libc6-compat\n\n# COPY --from=builder /build/node_modules /app/node_modules\n# COPY --from=builder /build/packages/mqtt /app/packages/mqtt\n# WORKDIR /app/packages/service-streams\n# COPY --from=builder /build/packages/service-streams/node_modules ./node_modules\n# COPY --from=builder /build/packages/service-streams/start.min.js /build/packages/service-streams/package.json ./\n\nCOPY --from=builder /build/node_modules /app/node_modules\nCOPY --from=builder /build/packages /app/packages\nWORKDIR /app/packages/service-streams\n\nCMD [ \"npm\", \"run\", \"start\" ]"
}