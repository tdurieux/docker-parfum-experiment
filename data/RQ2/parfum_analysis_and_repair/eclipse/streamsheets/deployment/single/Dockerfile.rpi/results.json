{
  "startTime": 1674246355074,
  "endTime": 1674246355886,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 24,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.22.1-alpine\nLABEL maintainer=\"philip.ackermann@cedalo.com\"\n\nENV SWAGGER_SPEC_PATH=streamsheets/packages/gateway/src/public/swagger-spec/v1.0/gateway.yaml \\\n\tMESSAGE_BROKER_URL=mqtt://localhost:1884 \\\n\tMESSAGE_BROKER_KEEP_ALIVE=20 \\\n\tMESSAGE_BROKER_USERNAME=cedalo \\\n\tMESSAGE_BROKER_PASSWORD=r35aJkR!&dz \\\n\tHTTP_PORT=8086 \\\n\tHTTP_HOST=localhost \\\n\tGATEWAY_HTTP_PORT=8080 \\\n\tGATEWAY_HTTP_HOST=localhost \\\n\tMONGO_DATABASE=streamsheets \\\n\tREDIS_HOST=localhost \\\n\tREDIS_PORT=6379 \\\n\tGATEWAY_SERVICE_LOG_LEVEL=info \\\n\tSTREAMSHEETS_GATEWAY_CONFIGURATION_PATH=config/config-production.json \\\n\tWEBPAGE_BASE=/var/tmp/ \\\n\tGATEWAY_SOCKET_ENDPOINT=ws://localhost:8080/machineserver-proxy \\\n\tMACHINE_SERVICE_LOG_LEVEL=info \\\n\tGATEWAY_HOST=localhost \\\n\tGRAPH_SERVICE_LOG_LEVEL=info \\\n\tMONGO_USER_DB_URI=mongodb://localhost:27017/userDB \\\n\tRESTSERVER_PORT=8083 \\\n\tSTREAMSHEETS_LOG_LEVEL=debug \\\n\tSTREAMSHEETS_STREAMS_SERVICE_LOG_LEVEL=info \\\n\tNODE_ENV=production \\\n\tSTREAMS_SERVICE_START_DELAY=5000\n\nRUN apk --no-cache add g++ make bash curl nginx git gnupg rsync unzip mosquitto openssl redis supervisor\n\n# Streamsheets services\nCOPY deployment/single/services /services\nCOPY .yarnrc package.json yarn.lock /streamsheets/\nCOPY packages /streamsheets/packages\nRUN cd /streamsheets && yarn install --production --frozen-lockfile && yarn cache clean;\n# TODO: Check if this is really necessary\nCOPY packages/gateway/config /config\nCOPY packages/webui/build /streamsheets/packages/gateway/public\nCOPY deployment/single/wait-for-database.sh wait-for-database.sh\n\n# Create directories for logging\nRUN mkdir -p \\\n\t/var/log/mosquitto \\\n\t/var/log/mosquitto-default \\\n\t/var/log/gateway \\\n\t/var/log/service-graphs \\\n\t/var/log/service-machines \\\n\t/var/log/service-streams\n\n# # TODO: build WebUI in Docker image\n# RUN npm install --global cross-env\n# RUN cd /streamsheets/packages/webui && yarn install --production && npm run build\n\n# Mosquitto\nCOPY deployment/single/mosquitto etc/mosquitto\n\n# Default Mosquitto\nCOPY deployment/single/mosquitto-default etc/mosquitto-default\nCOPY deployment/single/mosquitto-default-credentials etc/mosquitto-default-credentials\n\n# Redis\nCOPY deployment/single/redis/redis.conf /etc/redis.conf\n\n# nginx\nCOPY deployment/single/nginx/nginx.conf /etc/nginx/nginx.conf\n\n# Supervisor\nRUN mkdir -p /var/log/supervisor\nCOPY deployment/single/supervisord.rpi.conf /etc/supervisord.conf\n\n# Copy default setup\nCOPY deployment/single/init.json streamsheets/packages/gateway/config\n\n# Copy start script\nCOPY deployment/single/streamsheets.sh streamsheets.sh\n\n# Expose Mosquitto port\nEXPOSE 1883\n# Expose Redis port\nEXPOSE 6379\n# Expose nginx port\nEXPOSE 8081\n# Expose Gateway port\nEXPOSE 8080\n# Expose Streams Service port\nEXPOSE 8083\n\n# General\nCMD [ \"sh\", \"streamsheets.sh\" ]\n"
}