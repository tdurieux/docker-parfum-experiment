{
  "startTime": 1674219586404,
  "endTime": 1674219586979,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile.focal\n#\n# This file acts partly as a Docker recipe for building Cloe on Ubuntu.\n#\n# If you are behind a proxy, make sure to pass in the respective HTTP_PROXY,\n# HTTPS_PROXY, and NO_PROXY variables.\n\n# This is a work-around to not being able to use variables in RUN --mount=from:\n# If you want to use VTD in this image, you need to specify the Docker image\n# containing the distribution that can be mounted at /root/.conan/data/\nARG VTD_IMAGE=scratch\nFROM ${VTD_IMAGE} AS vtd\nWORKDIR /vtd\n\nFROM ubuntu:20.04\n\n# Install System Packages\n#\n# These packages are required for building and testing Cloe.\nCOPY Makefile.setup /cloe/Makefile.setup\nRUN --mount=type=cache,id=focal-cache,target=/var/cache/apt \\\n    --mount=type=cache,id=focal-lib,target=/var/lib/apt \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y make ccache locales && \\\n    make -f /cloe/Makefile.setup \\\n        WITHOUT_DEV_DEPS=yes \\\n        DEBIAN_FRONTEND=noninteractive \\\n        APT_ARGS=\"--no-install-recommends -y\" \\\n        install-system-deps \\\n        && \\\n    locale-gen && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV LANG=C.UTF-8\nENV LC_ALL=C.UTF-8\nENV CCACHE_DIR=/ccache\nENV PATH=/usr/lib/ccache:$PATH\n\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n    make -f /cloe/Makefile.setup \\\n        PIP_INSTALL_ARGS=\"\" \\\n        install-python-deps\n\n# Install and Setup Conan\n#\n# You may not want to use the default Conan remote (conan-center), so we use\n# whatever is stored in the build arguments CONAN_REMOTE. Currently, only\n# anonymous access is possible in this Dockerfile.\nARG BUILD_TYPE=RelWithDebInfo\nRUN conan profile new --detect default && \\\n    conan profile update settings.build_type=${BUILD_TYPE} default && \\\n    conan profile update settings.compiler.libcxx=libstdc++11 default\n\nENV CONAN_NON_INTERACTIVE=yes\n\n# Build and Install Cloe\n#\n# All common processes are made easy to apply by writing target recipes in the\n# Makefile at the root of the repository. This also acts as a form of\n# documentation.\nWORKDIR /cloe\nARG WITH_VTD=0\nARG KEEP_SOURCES=0\n\n# Download or build dependencies:\nCOPY vendor /cloe/vendor\nCOPY Makefile.package /cloe\nCOPY Makefile.all /cloe\nARG VENDOR_TARGET=\"export-vendor download-vendor\"\nRUN --mount=type=cache,target=/ccache \\\n    --mount=type=secret,target=/root/setup.sh,id=setup,mode=0400 \\\n    --mount=type=bind,target=/root/.conan/data/vtd,source=/vtd,from=vtd,rw \\\n    if [ -r /root/setup.sh ]; then . /root/setup.sh; fi && \\\n    make -f Makefile.all WITH_VTD=${WITH_VTD} ${VENDOR_TARGET} && \\\n    # Clean up:\n    conan user --clean && \\\n    if [ ${KEEP_SOURCES} -eq 0 ]; then \\\n        find /root/.conan/data -name dl -type d -maxdepth 5 -exec rm -r {} + && \\\n        conan remove \\* -s -b -f; \\\n    else \\\n        conan remove \\* -b -f; \\\n    fi\n\n# Build Cloe.\nCOPY . /cloe\nARG PROJECT_VERSION=unknown\nARG PACKAGE_TARGET=package-auto\nRUN --mount=type=cache,target=/ccache \\\n    --mount=type=secret,target=/root/setup.sh,id=setup,mode=0400 \\\n    if [ -r /root/setup.sh ]; then . /root/setup.sh; fi && \\\n    echo \"${PROJECT_VERSION}\" > /cloe/VERSION && \\\n    make WITH_VTD=${WITH_VTD} ${PACKAGE_TARGET} && \\\n    # Clean up:\n    conan user --clean && \\\n    if [ ${KEEP_SOURCES} -eq 0 ]; then \\\n        find /root/.conan/data -name dl -type d -maxdepth 5 -exec rm -r {} + && \\\n        conan remove \\* -s -b -f; \\\n    else \\\n        conan remove \\* -b -f; \\\n    fi\n\n# Run smoketests.\nRUN --mount=type=secret,target=/root/setup.sh,id=setup,mode=0400 \\\n    --mount=type=bind,target=/root/.conan/data/vtd,source=/vtd,from=vtd,rw \\\n    if [ -r /root/setup.sh ]; then . /root/setup.sh; fi && \\\n    make WITH_VTD=${WITH_VTD} smoketest && \\\n    conan user --clean\n"
}