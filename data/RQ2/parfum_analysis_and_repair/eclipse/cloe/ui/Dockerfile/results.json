{
  "startTime": 1674216874633,
  "endTime": 1674216875346,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 40,
        "columnEnd": 56
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 29,
        "columnEnd": 45
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 40,
        "columnEnd": 56
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "# Prepare production build image\nFROM node:14.16.1-alpine3.11 AS production\n\n# Configure yarn\nRUN yarn config set strict-ssl false && yarn cache clean;\n\n# Install server\nRUN yarn global add serve && yarn cache clean;\n\n# Create build image\nFROM node:14.16.1-alpine3.11 AS base\n\n# Set working directory\nRUN mkdir /app\nWORKDIR /app\n\n# Configure yarn\nRUN yarn config set strict-ssl false && yarn cache clean;\n\n# Install dependencies\nADD package.json /app\nADD yarn.lock /app\nRUN yarn install && yarn cache clean;\n\n# Copy app\nCOPY . /app\n\n# Build app\nRUN npm run build\n\n# Copy App to production image\nFROM production\n\n# Copy app files\nCOPY --from=base /app/build /app\n\n# Start server\nENTRYPOINT [\"serve\", \"-s\", \"-p\", \"5000\", \"app\"]\n"
}