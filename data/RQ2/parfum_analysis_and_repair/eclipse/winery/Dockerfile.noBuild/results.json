{
  "startTime": 1674253455447,
  "endTime": 1674253456350,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 140
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 29,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tomcat:9-jdk11-openjdk-buster\nLABEL maintainer = \"Oliver Kopp <kopp.dev@gmail.com>, Michael Wurster <miwurster@gmail.com>, Lukas Harzenetter <lharzenetter@gmx.de>\"\n\nENV WINERY_USER_ID 1724\nENV WINERY_USER_HOME /opt/winery\nENV WINERY_REPOSITORY_URL \"\"\nENV WINERY_DEPENDENT_REPOSITORIES \"\"\nENV WINERY_HEAP_MAX 2048m\nENV WINERY_JMX_ENABLED \"\"\nENV CONTAINER_HOSTNAME localhost\nENV CONTAINER_PORT 1337\nENV WORKFLOWMODELER_HOSTNAME localhost\nENV WORKFLOWMODELER_PORT 8080\nENV TOPOLOGYMODELER_HOSTNAME localhost\nENV TOPOLOGYMODELER_PORT 8080\nENV WINERY_REPOSITORY_PROVIDER \"file\"\nENV WINERY_REPOSITORY_PATH \"/var/repository\"\nENV WINERY_CSAR_OUTPUT_PATH \"/var/repository/csars\"\nENV WINERY_TENANT_MODE false\nENV WINERY_HOSTNAME localhost\nENV WINERY_PORT 8080\nENV EDMM_TRANSFORMATION_HOSTNAME localhost\nENV EDMM_TRANSFORMATION_PORT 5000\nENV TOPS_HOSTNAME localhost\nENV TOPS_PORT 9090\nENV DNA_HOSTNAME localhost\nENV DNA_PORT 8050\nENV DNA_CONTEXT deploymentNormalizationAssistant\nENV WINERY_FEATURE_ACCOUNTABILITY false\nENV WINERY_FEATURE_TEST_COMPLETION false\nENV WINERY_FEATURE_TEST_COMPLIANCE false\nENV WINERY_FEATURE_FREEZE_DEFROST false\nENV WINERY_FEATURE_MANAGEMENT_ENRICHMENT false\nENV WINERY_FEATURE_NFV false\nENV WINERY_FEATURE_PATTERN_REFINEMENT false\nENV WINERY_FEATURE_PROBLEM_DETECTION false\nENV WINERY_FEATURE_RADON false\nENV WINERY_FEATURE_SPLITTING false\nENV WINERY_FEATURE_TEST_REFINEMENT false\nENV WINERY_FEATURE_EDMM_MODELING false\nENV WINERY_FEATURE_UPDATE_TEMPLATES false\nENV WINERY_FEATURE_LIVE_MODELING false\nENV WINERY_FEATURE_PROPERTY_CHECK false\nENV WINERY_FEATURE_RESEARCH_OBJECT false\nENV DOCKERIZE_VERSION v0.6.1\nENV CHE_URL \"che.localhost\"\nENV CHE_URL_PROTOCOL \"http\"\nENV GITHUB_CLIENT_ID \"\"\nENV GITHUB_CLIENT_SECRET \"\"\n\nRUN rm /dev/random && ln -s /dev/urandom /dev/random \\\n    && curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash \\\n    && apt-get update -qq && apt-get install -qqy --no-install-recommends \\\n        git \\\n        git-lfs \\\n        sudo \\\n    && apt-get clean \\\n    && curl -f -LJOS https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm -rf ${CATALINA_HOME}/webapps/* \\\n    && sed -ie \"s/securerandom.source=file:\\/dev\\/random/securerandom.source=file:\\/dev\\/.\\/urandom/g\" $JAVA_HOME/conf/security/java.security \\\n    && git config --global core.fscache true \\\n    && git lfs install \\\n    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && rm -rf /var/lib/apt/lists/*;\n\nCOPY winery.war ${CATALINA_HOME}/webapps/winery.war\nCOPY tosca-management.war ${CATALINA_HOME}/webapps/ROOT.war\nCOPY topologymodeler.war ${CATALINA_HOME}/webapps/winery-topologymodeler.war\nCOPY workflowmodeler.war ${CATALINA_HOME}/webapps/winery-workflowmodeler.war\n\n# create Winery user and home dir\nRUN mkdir ${WINERY_USER_HOME} \\\n    && groupadd -g ${WINERY_USER_ID} winery \\\n    && useradd -s /bin/nologin -u ${WINERY_USER_ID} -g winery -d ${WINERY_USER_HOME} --system winery \\\n    && chmod a+rwx ${WINERY_USER_HOME} \\\n    && chown winery: ${WINERY_USER_HOME} \\\n    && echo \"winery:winery\" | chpasswd \\\n    && usermod -aG sudo winery\n\n# create repository dir and change ownership\nRUN mkdir ${WINERY_REPOSITORY_PATH} \\\n    && chmod a+rwx ${WINERY_REPOSITORY_PATH} \\\n    && chown winery: ${WINERY_REPOSITORY_PATH}\n\n# workaround because catalina has to be able to write files in the catalina_home dir\nRUN chmod -R a+w ${CATALINA_HOME}\n\nCOPY --chown=winery:winery docker/winery.yml.tpl ${WINERY_USER_HOME}/winery.yml.tpl\nCOPY --chown=winery:winery docker/docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\n\nUSER winery\nWORKDIR ${WINERY_USER_HOME}\n\nEXPOSE 8080\n\nCMD [\"/docker-entrypoint.sh\"]\n"
}