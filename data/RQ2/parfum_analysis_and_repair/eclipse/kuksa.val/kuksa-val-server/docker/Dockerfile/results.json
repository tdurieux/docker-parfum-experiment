{
  "startTime": 1674216001363,
  "endTime": 1674216002093,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright Robert Bosch GmbH, 2020. Part of the Eclipse Kuksa Project.\n#\n# All rights reserved. This configuration file is provided to you under the\n# terms and conditions of the Eclipse Distribution License v1.0 which\n# accompanies this distribution, and is available at\n# http://www.eclipse.org/org/documents/edl-v10.php\n\nFROM alpine:3.11 as build\n\nLABEL maintainer=\"Sebastian Schildt <sebastian.schildt@de.bosch.com>\"\n\n\n\nRUN apk update && apk add --no-cache cmake wget alpine-sdk linux-headers openssl-dev libstdc++ mosquitto-dev\n\n\n#Build Boost 1.75\nENV BOOST_VER=1.75.0\nENV BOOST_VER_=1_75_0\nRUN wget   https://boostorg.jfrog.io/artifactory/main/release/${BOOST_VER}/source/boost_${BOOST_VER_}.tar.bz2\nRUN tar xvjf boost_${BOOST_VER_}.tar.bz2 && rm boost_${BOOST_VER_}.tar.bz2\nWORKDIR /boost_${BOOST_VER_}\nRUN ./bootstrap.sh\nRUN ./b2 -j 6 install\n\nWORKDIR /\n# Build and install grpc\nENV GRPC_VER=1.44.0\nRUN git clone --recurse-submodules -b v${GRPC_VER}  --single-branch --depth 1 --shallow-submodules https://github.com/grpc/grpc\nRUN mkdir -p /grpc/build\nWORKDIR /grpc/build\nRUN cmake -DgRPC_INSTALL=ON  -DgRPC_BUILD_TESTS=OFF -DgRPC_SSL_PROVIDER=package ..\nRUN make -j 6\nRUN make install\nRUN mkdir -p /grpc/third_party/abseil-cpp/build\nWORKDIR /grpc/third_party/abseil-cpp/build\nRUN cmake -DCMAKE_POSITION_INDEPENDENT_CODE=TRUE ..\nRUN make -j 6\nRUN make install\n\nADD . /kuksa.val\nRUN  rm -rf /kuksa.val/kuksa-val-server/build  && mkdir  /kuksa.val/kuksa-val-server/build\nWORKDIR /kuksa.val/kuksa-val-server/build\nRUN cmake ..\nRUN make -j 4\nRUN ls\nRUN /kuksa.val/kuksa-val-server/docker/collect-deployment-artifacts.sh\n\n\nFROM alpine:3.11\n\nCOPY --from=build /deploy /kuksa.val\nWORKDIR /kuksa.val\n\nENV LOG_LEVEL=INFO\n#Usually you want this to be 0.0.0.0 when using porter port expose via -p.\nENV BIND_ADDRESS=0.0.0.0\n\nEXPOSE 8090/tcp\n\nCMD /kuksa.val/startkuksaval.sh\n\n\n"
}