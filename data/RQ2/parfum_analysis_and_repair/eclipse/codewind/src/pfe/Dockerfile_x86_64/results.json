{
  "startTime": 1674215034727,
  "endTime": 1674215036158,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 174
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 177
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 76,
        "columnEnd": 152
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "npmCacheCleanUseForce",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#*******************************************************************************\n# Copyright (c) 2019 IBM Corporation and others.\n# All rights reserved. This program and the accompanying materials\n# are made available under the terms of the Eclipse Public License v2.0\n# which accompanies this distribution, and is available at\n# http://www.eclipse.org/legal/epl-v20.html\n#\n# Contributors:\n#     IBM Corporation - initial API and implementation\n#*******************************************************************************\nFROM centos:8.1.1911 AS codewind-pfe-base\nRUN yum -y install nodejs \\\n    && yum -y update platform-python-pip-9.0.3-16.el8.noarch python3-libs-3.6.8-23.el8.x86_64 python3-dnf-4.2.17-6.el8.noarch python3-libcomps-0.1.11-4.el8.x86_64 python3-pip-wheel-9.0.3-16.el8.noarch \\\n    && yum clean all \\\n    && rm -rf /var/cache/yum\n\nLABEL org.opencontainers.image.title=\"Codewind-PFE\" org.opencontainers.image.description=\"Codewind PFE\" \\\n    org.opencontainers.image.url=\"https://codewind.dev/\" \\\n    org.opencontainers.image.source=\"https://github.com/eclipse/codewind\"\n\nARG BUILDAH_RPM=https://cbs.centos.org/kojifiles/packages/buildah/1.11.4/4.el7/x86_64/buildah-1.11.4-4.el7.x86_64.rpm\nARG SLIRP=https://cbs.centos.org/kojifiles/packages/slirp4netns/0.3.0/2.git4992082.el7/x86_64/slirp4netns-0.3.0-2.git4992082.el7.x86_64.rpm\nARG LIBSEC=https://cbs.centos.org/kojifiles/packages/libseccomp/2.4.1/0.el7/x86_64/libseccomp-2.4.1-0.el7.x86_64.rpm\n\n# Set up PFE container environment variables\nENV JAVA_HOME=/opt/java/jre \\\n    PATH=/opt/java/jre/bin:$PATH \\\n    HELM_HOME=/root/.helm\n\n# Download the buildah RPM and associated ones, install and remove them\nRUN curl -f -o buildah.rpm $BUILDAH_RPM \\\n    && curl -f -o slirp4netns.rpm $SLIRP \\\n    && curl -f -o libseccomp.rpm $LIBSEC \\ \n    && yum -y install zip unzip ca-certificates openssl slirp4netns.rpm libseccomp.rpm buildah.rpm  \\\n    && yum clean all \\\n    && rm -rf /var/cache/yum /buildah.rpm /slirp4netns.rpm /libseccomp.rpm \\\n# Install docker client only\n    && cd /tmp \\\n    && curl -f -O https://download.docker.com/linux/static/stable/x86_64/docker-18.09.6.tgz \\\n    && echo '1f3f6774117765279fce64ee7f76abbb5f260264548cf80631d68fb2d795bb09  docker-18.09.6.tgz' | sha256sum -c - \\\n    && tar -xvf docker-18.09.6.tgz docker/docker \\\n    && cp /tmp/docker/docker /usr/bin/docker \\\n    && rm -rf /tmp/docker /tmp/docker-18.09.6.tgz \\\n    && chown root:root /usr/bin/docker \\\n# Download OpenJ9 JRE, fixed to jre8u212-b04_openj9-0.14.2 version\n    && cd /tmp \\\n    && curl -f -sL -O https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10_openj9-0.15.1/OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \\\n    && echo 'ae56994a7c8e8c19939c0c2ff8fe5a850eb2f23845c499aa5ede26deb3d5ad28  OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz' | sha256sum -c - \\\n    && tar -xvf OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \\\n    && OPENJ9_JRE=$(find *jre | head -n 1) \\\n    && mkdir -p /opt/java \\\n    && cp -r /tmp/$OPENJ9_JRE /opt/java/jre \\\n    && rm -rf /tmp/$OPENJ9_JRE /tmp/OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \\\n# Install the latest version of yq\n    && YQ_VERSION=2.4.1 \\\n    && curl -f -sL -O https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64 \\\n    && echo '754c6e6a7ef92b00ef73b8b0bb1d76d651e04d26aa6c6625e272201afa889f8b  yq_linux_amd64' | sha256sum -c - \\\n    && mv ./yq_linux_amd64 /usr/local/bin/yq \\\n    && chmod +x /usr/local/bin/yq \\\n# Install kubectl\n    && curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \\\n    && chmod +x ./kubectl \\\n    && mv ./kubectl /usr/local/bin/kubectl \\\n# Install helm, fixed to the 3.0.0 version\n    && cd /tmp \\\n    && curl -f -O https://get.helm.sh/helm-v3.0.0-linux-amd64.tar.gz \\\n    && echo '10e1fdcca263062b1d7b2cb93a924be1ef3dd6c381263d8151dd1a20a3d8c0dc  helm-v3.0.0-linux-amd64.tar.gz' | sha256sum -c - \\\n    && tar -xvf helm-v3.0.0-linux-amd64.tar.gz \\\n    && cp /tmp/linux-amd64/helm /usr/local/bin/helm \\\n    && chmod +x /usr/local/bin/helm \\\n    && rm -rf /tmp/linux-amd64 /tmp/helm-v3.0.0-linux-amd64.tar.gz \\\n# Softlink to /codewind-workspace to /projects so paths\n# match in che.\n    && mkdir -m 777 -p /codewind-workspace \\\n    && ln -s /codewind-workspace /projects\n\n######### Extensions setup.\nCOPY /extensions /extensions\n\n######### File watcher setup.\nCOPY /file-watcher/dockerfiles /file-watcher/dockerfiles\nCOPY /file-watcher/scripts /file-watcher/scripts\nCOPY /file-watcher/server /file-watcher/server\n\nWORKDIR /file-watcher/server\n\n# Install w/ dev dependencies and do linting first, then delete node_modules and reinstall using production flag\nRUN npm ci \\\n    && npm run build \\\n    && rm -rf node_modules \\\n    && npm ci --production \\\n    && mkdir /file-watcher/fwdata \\\n    && npm cache clean --force -f \\\n    && npm pack nodemon \\\n    && cp -r src/utils/locales dist/utils/locales\n\n######### Portal setup\n# This is copied in a later build stage.\n# Changes outside /portal will be lost.\nFROM codewind-pfe-base as codewind-pfe-portal\n\nCOPY /portal /portal\n\nFROM codewind-pfe-base\n\n# Don't force a file-watcher rebuild on a portal change.\n# (Improves development builds significantly.)\nCOPY --from=codewind-pfe-portal /portal /portal\nWORKDIR /portal\n\nARG NODE_ENV=production\n\nRUN NODE_ENV=${NODE_ENV} npm ci \\\n    && npm cache clean --force -f\n\n# Do the idc copy at the end since IDC is rebuilt as part of the build process and will cause the docker cache at this step to change\n# and trigger all steps after this one to be executed instead of using the docker image cache. All steps after this one should be short\n# to save time on local builds.\nCOPY /file-watcher/idc /file-watcher/idc\nCOPY /profiling-parser/target/profiling-parser.jar /portal/scripts/\nCOPY /profiling-parser/monitoring-api.jar /portal/scripts/\n\n# Move the license files to the root directory\n# to satisfy requirement from legal\n# and chmod files which need to be executable\nRUN mv /portal/LICENSE /portal/NOTICE.md / \\\n    && chmod -R +rx /portal/npm-start.sh \\\n    && chmod -R +rx /file-watcher/idc\n\nEXPOSE 9090\n\nARG IMAGE_BUILD_TIME\nARG ENABLE_CODE_COVERAGE=false\nENV NODE_ENV=${NODE_ENV} \\\n    IMAGE_BUILD_TIME=${IMAGE_BUILD_TIME} \\\n    ENABLE_CODE_COVERAGE=${ENABLE_CODE_COVERAGE} \\\n    FORCE_COLOR=1 \\\n    LOG_LEVEL=info\n\nWORKDIR /\nCMD [ \"sh\", \"-c\", \" /file-watcher/scripts/root-watcher.sh ${HOST_WORKSPACE_DIRECTORY} ${CONTAINER_WORKSPACE_DIRECTORY} ; cd /portal ; npm start ;\" ]\n"
}