diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eclipse/codewind/src/pfe/Dockerfile_x86_64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eclipse/codewind/src/pfe/Dockerfile_x86_64/repaired.Dockerfile
index 2506706..7f0ef18 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eclipse/codewind/src/pfe/Dockerfile_x86_64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eclipse/codewind/src/pfe/Dockerfile_x86_64/repaired.Dockerfile
@@ -36,7 +36,7 @@ RUN curl -f -o buildah.rpm $BUILDAH_RPM \
     && rm -rf /var/cache/yum /buildah.rpm /slirp4netns.rpm /libseccomp.rpm \
 # Install docker client only
     && cd /tmp \
-    && curl -O https://download.docker.com/linux/static/stable/x86_64/docker-18.09.6.tgz \
+    && curl -f -O https://download.docker.com/linux/static/stable/x86_64/docker-18.09.6.tgz \
     && echo '1f3f6774117765279fce64ee7f76abbb5f260264548cf80631d68fb2d795bb09  docker-18.09.6.tgz' | sha256sum -c - \
     && tar -xvf docker-18.09.6.tgz docker/docker \
     && cp /tmp/docker/docker /usr/bin/docker \
@@ -44,7 +44,7 @@ RUN curl -f -o buildah.rpm $BUILDAH_RPM \
     && chown root:root /usr/bin/docker \
 # Download OpenJ9 JRE, fixed to jre8u212-b04_openj9-0.14.2 version
     && cd /tmp \
-    && curl -sL -O https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10_openj9-0.15.1/OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \
+    && curl -f -sL -O https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10_openj9-0.15.1/OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \
     && echo 'ae56994a7c8e8c19939c0c2ff8fe5a850eb2f23845c499aa5ede26deb3d5ad28  OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz' | sha256sum -c - \
     && tar -xvf OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \
     && OPENJ9_JRE=$(find *jre | head -n 1) \
@@ -53,17 +53,17 @@ RUN curl -f -o buildah.rpm $BUILDAH_RPM \
     && rm -rf /tmp/$OPENJ9_JRE /tmp/OpenJDK8U-jre_x64_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \
 # Install the latest version of yq
     && YQ_VERSION=2.4.1 \
-    && curl -sL -O https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64 \
+    && curl -f -sL -O https://github.com/mikefarah/yq/releases/download/$YQ_VERSION/yq_linux_amd64 \
     && echo '754c6e6a7ef92b00ef73b8b0bb1d76d651e04d26aa6c6625e272201afa889f8b  yq_linux_amd64' | sha256sum -c - \
     && mv ./yq_linux_amd64 /usr/local/bin/yq \
     && chmod +x /usr/local/bin/yq \
 # Install kubectl
-    && curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
+    && curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
     && chmod +x ./kubectl \
     && mv ./kubectl /usr/local/bin/kubectl \
 # Install helm, fixed to the 3.0.0 version
-    && cd /tmp \ 
-    && curl -O https://get.helm.sh/helm-v3.0.0-linux-amd64.tar.gz \
+    && cd /tmp \
+    && curl -f -O https://get.helm.sh/helm-v3.0.0-linux-amd64.tar.gz \
     && echo '10e1fdcca263062b1d7b2cb93a924be1ef3dd6c381263d8151dd1a20a3d8c0dc  helm-v3.0.0-linux-amd64.tar.gz' | sha256sum -c - \
     && tar -xvf helm-v3.0.0-linux-amd64.tar.gz \
     && cp /tmp/linux-amd64/helm /usr/local/bin/helm \
@@ -90,9 +90,9 @@ RUN npm ci \
     && rm -rf node_modules \
     && npm ci --production \
     && mkdir /file-watcher/fwdata \
-    && npm cache clean -f \
+    && npm cache clean --force -f \
     && npm pack nodemon \
-    && cp -r src/utils/locales dist/utils/locales 
+    && cp -r src/utils/locales dist/utils/locales
 
 ######### Portal setup
 # This is copied in a later build stage.
@@ -111,7 +111,7 @@ WORKDIR /portal
 ARG NODE_ENV=production
 
 RUN NODE_ENV=${NODE_ENV} npm ci \
-    && npm cache clean -f
+    && npm cache clean --force -f
 
 # Do the idc copy at the end since IDC is rebuilt as part of the build process and will cause the docker cache at this step to change
 # and trigger all steps after this one to be executed instead of using the docker image cache. All steps after this one should be short