diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eclipse/codewind/src/pfe/Dockerfile_ppc64le b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eclipse/codewind/src/pfe/Dockerfile_ppc64le/repaired.Dockerfile
index 70632cb..fa24238 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/eclipse/codewind/src/pfe/Dockerfile_ppc64le
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/eclipse/codewind/src/pfe/Dockerfile_ppc64le/repaired.Dockerfile
@@ -32,11 +32,11 @@ RUN curl -f -o slirp4netns.rpm $SLIRP
 #RUN curl -sL https://rpm.nodesource.com/setup_10.x | bash -
 
 RUN yum install -y epel-release \
-    && yum -y --enablerepo=epel install zip unzip python2 sudo ca-certificates openssl  wget gcc-c++ make slirp4netns.rpm 
+    && yum -y --enablerepo=epel install zip unzip python2 sudo ca-certificates openssl  wget gcc-c++ make slirp4netns.rpm && rm -rf /var/cache/yum
 
 
 RUN wget https://nodejs.org/download/release/v13.13.0/node-v13.13.0-linux-ppc64le.tar.gz \
-    && tar xvzf  node-v13.13.0-linux-ppc64le.tar.gz
+    && tar xvzf  node-v13.13.0-linux-ppc64le.tar.gz && rm node-v13.13.0-linux-ppc64le.tar.gz
 ENV PATH=/node-v13.13.0-linux-ppc64le/bin:$PATH
 
 RUN yum install -y  --enablerepo=epel libseccomp buildah \
@@ -45,7 +45,7 @@ RUN yum install -y  --enablerepo=epel libseccomp buildah \
 
 # Install docker client only
 RUN cd /tmp \
-    && curl -O https://download.docker.com/linux/static/stable/ppc64le/docker-18.06.3-ce.tgz \
+    && curl -f -O https://download.docker.com/linux/static/stable/ppc64le/docker-18.06.3-ce.tgz \
     && echo '8fee410bc25628fa5310b33af1b362edcfe39533294a8325f3ed2cefac97c005  docker-18.06.3-ce.tgz' | sha256sum -c - \
     && tar -xvf docker-18.06.3-ce.tgz docker/docker \
     && cp /tmp/docker/docker /usr/bin/docker \
@@ -61,7 +61,7 @@ RUN cd /tmp \
 
 # Download OpenJ9 JRE, fixed to jre8u212-b04_openj9-0.14.2 version
 RUN cd /tmp \
-    && curl -sL -O https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10_openj9-0.15.1/OpenJDK8U-jre_ppc64le_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \
+    && curl -f -sL -O https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u222-b10_openj9-0.15.1/OpenJDK8U-jre_ppc64le_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \
     && echo 'c6c3faacc9830129f3356569d075b1e3d1c9ff097ee95b77256246e30e64c149  OpenJDK8U-jre_ppc64le_linux_openj9_8u222b10_openj9-0.15.1.tar.gz' | sha256sum -c - \
     && tar -xvf OpenJDK8U-jre_ppc64le_linux_openj9_8u222b10_openj9-0.15.1.tar.gz \
     && OPENJ9_JRE=$(find *jre | head -n 1) \
@@ -83,14 +83,14 @@ ENV JAVA_HOME=/opt/java/jre \
     HELM_HOME=/root/.helm
 
 # Install the latest version of yq
-RUN LATEST_RELEASE=$(curl -L -s -H 'Accept: application/json' https://github.com/mikefarah/yq/releases/latest) \
+RUN LATEST_RELEASE=$( curl -f -L -s -H 'Accept: application/json' https://github.com/mikefarah/yq/releases/latest) \
     && LATEST_VERSION=$(echo $LATEST_RELEASE | sed -e 's/.*"tag_name":"\([^"]*\)".*/\1/') \
-    && curl -sL -O https://github.com/mikefarah/yq/releases/download/$LATEST_VERSION/yq_linux_ppc64le \
+    && curl -f -sL -O https://github.com/mikefarah/yq/releases/download/$LATEST_VERSION/yq_linux_ppc64le \
     && mv ./yq_linux_ppc64le /usr/local/bin/yq \
     && chmod +x /usr/local/bin/yq
 
 # Install kubectl
-RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/ppc64le/kubectl \
+RUN curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/ppc64le/kubectl \
     && chmod +x ./kubectl \
     && mv ./kubectl /usr/local/bin/kubectl
 
@@ -100,14 +100,14 @@ RUN curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s
 
 # Install helm, fixed to the 3.0.0 version
 RUN cd /tmp \
-    && curl -O https://get.helm.sh/helm-v2.9.1-linux-ppc64le.tar.gz \
+    && curl -f -O https://get.helm.sh/helm-v2.9.1-linux-ppc64le.tar.gz \
     && echo '22671d0a5667c10c11fedf6901eadcbedd66bc0024cc6e8db3669df8feef230e  helm-v2.9.1-linux-ppc64le.tar.gz' | sha256sum -c - \
     && tar -xvf helm-v2.9.1-linux-ppc64le.tar.gz \
     && cp /tmp/linux-ppc64le/helm /usr/local/bin/helm \
     && chmod +x /usr/local/bin/helm \
     && rm -rf /tmp/linux-ppc64le /tmp/helm-v2.9.1-linux-ppc64le.tar.gz
 
-#RUN cd /tmp \ 
+#RUN cd /tmp \
 #    && curl -O https://get.helm.sh/helm-v3.0.0-linux-amd64.tar.gz \
 #    && echo '10e1fdcca263062b1d7b2cb93a924be1ef3dd6c381263d8151dd1a20a3d8c0dc  helm-v3.0.0-linux-amd64.tar.gz' | sha256sum -c - \
 #    && tar -xvf helm-v3.0.0-linux-amd64.tar.gz \
@@ -119,8 +119,8 @@ WORKDIR /
 # Softlink to /codewind-workspace to /projects so paths
 # match in che.
 RUN mkdir -m 777 -p /codewind-workspace && mkdir -m 777 ~/.npm-global \
-    && ln -s /codewind-workspace /projects 
-    
+    && ln -s /codewind-workspace /projects
+
 
 ######### Extensions setup.
 #RUN mkdir /extensions
@@ -145,7 +145,7 @@ RUN npm config set prefix '~/.npm-global' &&  npm ci \
     && rm -rf node_modules \
     && npm ci --production \
     && mkdir /file-watcher/fwdata \
-    && npm cache clean -f \
+    && npm cache clean --force -f \
     && npm pack nodemon
 
 # Copy translation files to the distribution directory
@@ -188,7 +188,7 @@ ENV PATH=/node-v13.13.0-linux-ppc64le/bin:$PATH
 ARG NODE_ENV=production
 
 RUN NODE_ENV=${NODE_ENV} npm ci \
-    && npm cache clean -f
+    && npm cache clean --force -f
 
 # Do the idc copy at the end since IDC is rebuilt as part of the build process and will cause the docker cache at this step to change
 # and trigger all steps after this one to be executed instead of using the docker image cache. All steps after this one should be short