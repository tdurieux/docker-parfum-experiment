{
  "startTime": 1674254485059,
  "endTime": 1674254485849,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2018, 2018 IBM Corp. and others\n#\n# This program and the accompanying materials are made available under\n# the terms of the Eclipse Public License 2.0 which accompanies this\n# distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n# or the Apache License, Version 2.0 which accompanies this distribution and\n# is available at https://www.apache.org/licenses/LICENSE-2.0.\n#\n# This Source Code may also be made available under the following\n# Secondary Licenses when the conditions for such availability set\n# forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n# General Public License, version 2 with the GNU Classpath\n# Exception [1] and GNU General Public License, version 2 with the\n# OpenJDK Assembly Exception [2].\n#\n# [1] https://www.gnu.org/software/classpath/license.html\n# [2] http://openjdk.java.net/legal/assembly-exception.html\n#\n# SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n#\n#\n# Create OMR build environment with Ubuntu 16.04\n# Basic usage (adapt to your environment and scenario):\n#   git clone https://github.com/eclipse/omr (or cd to a directory that contains an OMR repository)\n#   cd omr/buildenv/docker && docker build -f x86_64/ubuntu16/Dockerfile -t buildomr .\n#   cd ../../../\n#   docker run --privileged -v $PWD/omr:/omr -it buildomr\n#\n# The container will automatically run cmake to configure itself and then initiate the build.\n# Once the build completes, you'll be left sitting at a prompt in the container so you can\n# run more commands.\n\nFROM ubuntu:16.04\n\n# build requirements are everything before \"gdb\"....others are useful for working test failures\nRUN apt-get update -y \\\n  && apt-get install --no-install-recommends -y \\\n\tpython3 \\\n\tgit \\\n\tcmake \\\n\tbison \\\n\tflex \\\n\tlibelf-dev \\\n\tlibdwarf-dev \\\n\tgcc-4.8 \\\n\tg++-4.8-multilib \\\n\tgdb \\\n\tvim emacs \\\n  && ln -s /usr/bin/g++-4.8 /usr/bin/g++ && rm -rf /var/lib/apt/lists/*;\n\nARG OMRDIR\nENV OMRDIR ${OMRDIR:-/omr}\n\nCOPY doBuild.sh /doBuild.sh\nRUN chmod +x /doBuild.sh\n\n# Uncomment this line to copy your host omr repository into the docker container\n# (can help build go faster but changes NOT persisted to host file system)\n#COPY omr $OMRDIR\n\nCMD [\"/bin/bash\", \"--init-file\", \"/doBuild.sh\"]\n"
}