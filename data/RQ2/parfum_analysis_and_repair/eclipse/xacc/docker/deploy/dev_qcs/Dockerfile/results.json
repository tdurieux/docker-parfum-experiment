{
  "startTime": 1674220883814,
  "endTime": 1674220884630,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 38,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 38,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 35,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "from xacc/deploy-base\nworkdir /home/dev\nrun cd /home/dev && apt-get update && apt-get install --no-install-recommends -y uuid-dev pkg-config \\\n    && git clone https://github.com/zeromq/libzmq \\\n    && cd libzmq/ && mkdir build && cd build \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=~/.zmq \\\n    && make -j$(nproc) install \\\n    && cd ../.. \\\n    && git clone https://github.com/zeromq/cppzmq \\\n    && cd cppzmq/ && mkdir build && cd build/ \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=~/.zmq -DCMAKE_PREFIX_PATH=~/.zmq \\\n    && make -j$(nproc) install \\\n    && cd ../.. \\\n    && git clone -b c_master https://github.com/msgpack/msgpack-c/ \\\n    && cd msgpack-c/ && mkdir build && cd build \\\n    && cmake .. -DCMAKE_INSTALL_PREFIX=~/.zmq \\\n    && make -j$(nproc) install \\\n    && cd ../.. \\\n    && git clone --recursive https://github.com/eclipse/xacc && cd xacc && mkdir build && cd build \\\n    && cmake .. \\\n    && make -j$(nproc) install \\\n    && cd ../../ && git clone https://github.com/ornl-qci/tnqvm && cd tnqvm && mkdir build && cd build \\\n    && cmake .. -DXACC_DIR=~/.xacc && make -j$(nproc) install && cd ../.. \\\n    && git clone https://github.com/rigetti/qcs-cli && cd qcs-cli \\\n    && npm install && npm link && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Theia application\nworkdir /home/dev\nARG version=latest\nADD $version.package.json ./package.json\n\nRUN yarn --cache-folder ./ycache && rm -rf ./ycache && \\\n    NODE_OPTIONS=\"--max_old_space_size=4096\" yarn theia build ; \\\n    yarn theia download:plugins && yarn cache clean;\nEXPOSE 3000\nENV SHELL=/bin/bash \\\n    THEIA_DEFAULT_PLUGINS=local-dir:/home/dev/plugins\nENV PYTHONPATH \"${PYTHONPATH}:/root/.xacc:/root/.local/lib/python3.6/site-packages/psi4/lib\"\nENTRYPOINT [ \"yarn\", \"theia\", \"start\", \"/home/dev\", \"--hostname=0.0.0.0\" ]\n\n"
}