{
  "startTime": 1674251779398,
  "endTime": 1674251780243,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 60,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 22,
        "columnEnd": 93
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM buildpack-deps:focal\n\nENV LANG=en_US.UTF-8\n### base ###\nRUN yes | unminimize \\\n    && apt-get install --no-install-recommends -yq \\\n        asciidoctor \\\n        bash-completion \\\n        build-essential \\\n        htop \\\n        jq \\\n        less \\\n        locales \\\n        man-db \\\n        nano \\\n        software-properties-common \\\n        sudo \\\n        vim \\\n        multitail \\\n        lsof python3 libpython3-dev libblas-dev liblapack-dev libunwind-dev gcc g++ gfortran python3-pip \\\n    && locale-gen en_US.UTF-8 \\\n    && mkdir /var/lib/apt/dazzle-marks \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* \\\n\n### Git ###\n    && add-apt-repository -y ppa:git-core/ppa \\\n    && apt-get install --no-install-recommends -yq git \\\n    && rm -rf /var/lib/apt/lists/* \\\n\n### Gitpod user ###\n# '-l': see https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#user\n    && useradd -l -u 33333 -G sudo -md /home/gitpod -s /bin/bash -p gitpod gitpod \\\n    # passwordless sudo for users in the 'sudo' group\n    && sed -i.bkp -e 's/%sudo\\s\\+ALL=(ALL\\(:ALL\\)\\?)\\s\\+ALL/%sudo ALL=NOPASSWD:ALL/g' /etc/sudoers\nENV HOME=/home/gitpod\nWORKDIR $HOME\n# custom Bash prompt\nRUN { echo && echo \"PS1='\\[\\e]0;\\u \\w\\a\\]\\[\\033[01;32m\\]\\u\\[\\033[00m\\] \\[\\033[01;34m\\]\\w\\[\\033[00m\\] \\\\\\$ '\" ; } >> .bashrc\n\n### Gitpod user (2) ###\nUSER gitpod\n# use sudo so that user does not get sudo usage info on (the first) login\nRUN sudo echo \"Running 'sudo' for Gitpod: success\"\n# create .bashrc.d folder and source it in the bashrc\n#RUN mkdir /home/gitpod/.bashrc.d && \\\n#    (echo; echo \"for i in \\$(ls \\$HOME/.bashrc.d/*); do source \\$i; done\"; echo) >> /home/gitpod/.bashrc\n\n### Install C/C++ compiler and associated tools ###\nLABEL dazzle/layer=lang-c\nLABEL dazzle/test=tests/lang-c.yaml\nUSER root\nRUN curl -fsSL https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - \\\n    && echo \"deb http://apt.llvm.org/focal/ llvm-toolchain-focal main\" >> /etc/apt/sources.list.d/llvm.list \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -yq \\\n        clang-format \\\n        clang-tidy \\\n        # clang-tools \\ # breaks the build atm\n        clangd \\\n        gdb \\\n        lld \\\n    && cp /var/lib/dpkg/status /var/lib/apt/dazzle-marks/lang-c.status \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* \\\n\n    && python3 -m pip install --upgrade pip && python3 -m pip install pint pydantic matplotlib qiskit scipy numpy pyquil cmake virtualenv pipenv pylint rope flake8 mypy autopep8 pep8 pylama pydocstyle bandit notebook python-language-server[all]==0.25.0 \\\n    && sudo rm -rf /tmp/* \\\n    && git clone https://github.com/psi4/psi4 && cd psi4 && mkdir build && cd build \\\n    && cmake .. -DPYTHON_EXECUTABLE=$(which python3) -DCMAKE_INSTALL_PREFIX=$(python3 -m site --user-site)/psi4 \\\n    && make -j8 install && cd ../.. && rm -rf psi4\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y texlive-latex-recommended texlive-latex-extra dvipng \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n\nUSER gitpod\n\n"
}