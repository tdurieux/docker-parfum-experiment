{
  "startTime": 1674219445407,
  "endTime": 1674219446460,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 25,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 25,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Using OpenJDK 8\n# This Dockerfile does not require any files that are in the GATK4 repo.\nFROM ubuntu:18.04\n\n#### Basic image utilities\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n    python \\\n    wget \\\n    curl \\\n    bc \\\n    unzip \\\n    bzip2 \\\n    less \\\n    bedtools \\\n    samtools \\\n    openjdk-8-jdk \\\n    tabix \\\n    gpg-agent \\\n    build-essential \\\n    software-properties-common && \\\n    apt-get -y clean  && \\\n    apt-get -y autoclean && \\\n    apt-get -y autoremove && rm -rf /var/lib/apt/lists/*;\n\n#### Specific for google cloud support\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    apt-get update -y && apt-get install --no-install-recommends google-cloud-sdk -y && \\\n    apt-get -y autoremove && \\\n    apt-get -y clean && rm -rf /var/lib/apt/lists/*;\n###########\n\n# Set environment variables.\nENV HOME /root\n\n# Define working directory.\nWORKDIR /root\n\n# Define default command.\nCMD [\"bash\"]\n\nENV JAVA_LIBRARY_PATH /usr/lib/jni\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\n\nRUN java -version\n\n# Install miniconda\nENV DOWNLOAD_DIR /downloads\nENV CONDA_URL https://repo.continuum.io/miniconda/Miniconda3-4.7.12.1-Linux-x86_64.sh\nENV CONDA_MD5 = \"81c773ff87af5cfac79ab862942ab6b3\"\nENV CONDA_PATH /opt/miniconda\nRUN mkdir $DOWNLOAD_DIR && \\\n    wget -nv -O $DOWNLOAD_DIR/miniconda.sh $CONDA_URL && \\\n    test \"`md5sum $DOWNLOAD_DIR/miniconda.sh | awk -v FS='  ' '{print $1}'` = $CONDA_MD5\" && \\\n    bash $DOWNLOAD_DIR/miniconda.sh -p $CONDA_PATH -b && \\\n    rm $DOWNLOAD_DIR/miniconda.sh\n\n# Deleting unneeded caches\nRUN rm -rf /var/lib/apt/lists/*\n"
}