{
  "startTime": 1674219594387,
  "endTime": 1674219595864,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.7-slim-bullseye as build\n\nLABEL maintainer=\"Broad TGG\"\n\n# install commmon utilities, database clients for debugging\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    apt-utils \\\n    bzip2 \\\n    curl \\\n    gcc \\\n    # git needed for the nodejs install\n    git \\\n    libc6-dev \\\n    libpq-dev \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV VIRTUAL_ENV=/opt/venv\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# install nodejs14 repo since debian is still on node 12.x\nRUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash -\n# installs the nodejs and npm packages\nRUN apt-get install -y --no-install-recommends \\\n    nodejs \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n# upgrade npm to v7 to fix lockfile resolution\nRUN npm install -g npm@7.24.2 && npm cache clean --force;\n\nWORKDIR /opt\n\nCOPY ./requirements.txt .\n\n# install seqr python dependencies\nRUN pip install --no-cache-dir wheel && \\\n    pip install --no-cache-dir -r requirements.txt && \\\n    ln -s python3 /opt/venv/bin/python3.7\n\n# install seqr nodejs dependencies\nWORKDIR /build/ui\n# Copy the package configs from the build context -> the temporary build container, for generating node_modules\nCOPY ./ui/package.json .\nCOPY ./ui/package-lock.json .\nRUN npm ci\n\nCOPY ./ui/ .\n\nRUN npm run build\n\nFROM python:3.7-slim-bullseye as runtime\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    cron \\\n    curl \\\n    emacs \\\n    gnupg \\\n    htop \\\n    less \\\n    libpq-dev \\\n    nano \\\n    postgresql-client \\\n    procps \\\n    redis-tools \\\n    xterm \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# install gcloud tools\nRUN echo \"deb http://packages.cloud.google.com/apt cloud-sdk-bullseye main\" > /etc/apt/sources.list.d/google-cloud-sdk.list \\\n    && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n    && apt-get update && apt-get install -y --no-install-recommends \\\n        google-cloud-sdk \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=build /opt/venv /opt/venv\n\nWORKDIR /seqr\nCOPY . .\nCOPY --from=build /build/ui/dist /seqr/ui/dist\n\nENV VIRTUAL_ENV=/opt/venv\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\nRUN ./manage.py collectstatic --no-input\n\nEXPOSE 8000\n\nENV TERM=xterm\n\nCOPY deploy/docker/seqr/readiness_probe /\nCOPY deploy/docker/seqr/bin/*.sh /usr/local/bin/\nCOPY deploy/docker/seqr/config/*.py ./\nCOPY deploy/docker/seqr/bashrc /root/.bashrc\n\nCOPY deploy/docker/seqr/entrypoint.sh /\n\nCMD [ \"/entrypoint.sh\" ]\n"
}