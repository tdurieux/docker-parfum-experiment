{
  "startTime": 1674252384268,
  "endTime": 1674252386013,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 41,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 2,
        "columnEnd": 13
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 2,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 75
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 82
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build for raspberry pi\n# docker buildx build --platform linux/arm/v7 --progress=plain -t theyosh/terrariumpi:4.0.0 -f Dockerfile --push .\n\n# build sispmctl 4.9\nFROM gcc:9.4.0-buster as sispmctl_builder\nENV SISPMCTL_VERSION=\"4.9\"\nWORKDIR /sispmctl\nRUN apt-get update && apt-get install -y --no-install-recommends libusb-dev && \\\n  wget https://sourceforge.net/projects/sispmctl/files/sispmctl/sispmctl-${SISPMCTL_VERSION}/sispmctl-${SISPMCTL_VERSION}.tar.gz/download -O sispmctl-${SISPMCTL_VERSION}.tar.gz && \\\n  tar zxvf sispmctl-${SISPMCTL_VERSION}.tar.gz && \\\n  cd sispmctl-${SISPMCTL_VERSION}/ && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && rm sispmctl-${SISPMCTL_VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;\n\n# python builder, help keep image small\nFROM python:3.8-buster as python_builder\nARG GITHUB_SHA=${GITHUB_SHA}\n\nENV DEBIAN_FRONTEND=noninteractive\n# These two environment variables prevent __pycache__/ files.\nENV PYTHONUNBUFFERED=1\nENV PYTHONDONTWRITEBYTECODE=1\nRUN apt-get update && apt-get install -y --no-install-recommends gnupg ca-certificates && \\\n  echo \"deb http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi\" > /etc/apt/sources.list.d/raspberrypi.list && \\\n  echo \"deb http://archive.raspberrypi.org/debian/ buster main\" >> /etc/apt/sources.list.d/raspberrypi.list && \\\n  echo \"deb [arch=armhf] https://download.docker.com/linux/raspbian buster stable\" > /etc/apt/sources.list.d/docker.list && \\\n  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9165938D90FDDD2E 82B129927FA3303E 7EA0A9C3F273FCD8 && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends git libxslt1.1 libglib2.0-dev && \\\n  apt-get install -y --no-install-recommends python3-opencv libftdi1 libasound-dev && rm -rf /var/lib/apt/lists/*;\nRUN python -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n# rpi.gpio - https://askubuntu.com/questions/1290037/error-while-installing-rpi-gpio-as-error-command-errored-out-with-exit-status\nENV CFLAGS=-fcommon\n# cryptography - https://stackoverflow.com/questions/66118337/how-to-get-rid-of-cryptography-build-error\nENV CRYPTOGRAPHY_DONT_BUILD_RUST=1\nRUN pip install --no-cache-dir --upgrade pip==22.1.2 && pip install --no-cache-dir wheel==0.37.1\nCOPY requirements.txt .\n# requirements are slightly different for docker\nRUN sed -i 's/opencv-python-headless/# opencv-python-headless/g' requirements.txt && \\\n  sed -i 's/cryptography==.*/cryptography==3.4.8/g' requirements.txt && \\\n  sed -i 's/numpy==.*/numpy==1.21.4/g' requirements.txt && \\\n  pip install --no-cache-dir -r requirements.txt && \\\n  find /opt/venv -type d -name  \"__pycache__\" -exec rm -r {} +\n\nWORKDIR /TerrariumPI\n# Set git version in a temp file\nRUN echo \"${GITHUB_SHA}\" > .gitversion\n# Just clone the libraries, ignore docker cache...\nRUN git clone https://github.com/SequentMicrosystems/4relay-rpi.git --depth 1 \"3rdparty/4relay-rpi\" && \\\n  git clone https://github.com/PiSupply/Bright-Pi.git --depth 1 \"3rdparty/Bright-Pi\" && \\\n  git clone https://github.com/ageir/chirp-rpi.git --depth 1 \"3rdparty/chirp-rpi\" && \\\n  git clone https://github.com/perryflynn/energenie-connect0r.git --depth 1 \"3rdparty/energenie-connect0r\" && \\\n  git clone https://github.com/SequentMicrosystems/relay8-rpi.git --depth 1 \"3rdparty/relay8-rpi\" && \\\n  git clone https://github.com/SequentMicrosystems/4relind-rpi.git --depth 1 \"3rdparty/4relind-rpi\" && \\\n  git clone https://github.com/SequentMicrosystems/8relind-rpi.git --depth 1 \"3rdparty/8relind-rpi\" && \\\n  git clone https://github.com/AtlasScientific/Raspberry-Pi-sample-code.git --depth 1 \"3rdparty/AtlasScientific\" && \\\n  git clone https://github.com/fancyapps/fancybox.git --depth 1 \"static/assets/plugins/fancybox\" && \\\n  git clone https://github.com/mapshakers/leaflet-icon-pulse.git --depth 1 \"static/assets/plugins/leaflet.icon-pulse\" && \\\n  git clone https://github.com/ebrelsford/Leaflet.loading.git --depth 1 \"static/assets/plugins/leaflet.loading\" && \\\n  rm -Rf 3rdparty/Bright-Pi/Documents && \\\n  find . -type d -name \".git\" -exec rm -r {} +\n\n\nFROM python:3.8-buster as sourcecode\nWORKDIR /TerrariumPI\nCOPY . .\n# remove git and 3rdparty dir from code copy to help keep image smaller\n# 3rdparty is coming from the builder image\nRUN rm -Rf .git 3rdparty\n# Compress JS and CSS files so browsers can download compressed versions of the files\nRUN find static/assets/ -type f -regex \".*\\.\\(css\\|js\\)\" -exec gzip -f9k '{}' \\;\n\n# actual image\nFROM python:3.8-slim-buster as finalimage\nENV PYTHONUNBUFFERED=1\nENV PYTHONDONTWRITEBYTECODE=1\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends gnupg ca-certificates && \\\n  echo \"deb http://raspbian.raspberrypi.org/raspbian/ buster main contrib non-free rpi\" > /etc/apt/sources.list.d/raspberrypi.list && \\\n  echo \"deb http://archive.raspberrypi.org/debian/ buster main\" >> /etc/apt/sources.list.d/raspberrypi.list && \\\n  echo \"deb [arch=armhf] https://download.docker.com/linux/raspbian buster stable\" > /etc/apt/sources.list.d/docker.list && \\\n  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 9165938D90FDDD2E 82B129927FA3303E 7EA0A9C3F273FCD8 && \\\n  rm -rf /var/lib/apt/lists/* && \\\n  apt-get update && \\\n  apt-get install -y --no-install-recommends sudo pigpio ffmpeg libxslt1.1 && \\\n  apt-get install -y --no-install-recommends python3-opencv libftdi1 && \\\n  mkdir -p /usr/share/man/man1 && apt-get install -y --no-install-recommends openjdk-11-jre-headless && \\\n  apt-get --purge autoremove -y && rm -rf /var/lib/apt/lists/*\nCOPY --from=sispmctl_builder /usr/local/lib/libsispmctl* /usr/local/lib/.\nCOPY --from=sispmctl_builder /usr/local/bin/sispmctl /usr/local/bin/sispmctl\nRUN rm /usr/local/lib/libsispmctl.so /usr/local/lib/libsispmctl.so.0 && ln -s /usr/local/lib/libsispmctl.so.0.2.1 /usr/local/lib/libsispmctl.so && ln -s /usr/local/lib/libsispmctl.so.0.2.1 /usr/local/lib/libsispmctl.so.0 && \\\n  ldconfig\nENV PATH=\"/opt/venv/bin:$PATH\"\nCOPY --from=python_builder /opt/venv /opt/venv\nRUN ln -s /usr/lib/python3/dist-packages/cv2.cpython-37m-arm-linux-gnueabihf.so /opt/venv/lib/python3.8/site-packages/cv2.so && \\\n  mv /usr/lib/python3.7/gettext.py /usr/local/lib/python3.8/gettext.py && \\\n  rm -rf /usr/lib/python3/dist-packages/numpy /usr/lib/python3/dist-packages/numpy-1.16.2.egg-info\nRUN echo \"/opt/vc/lib\" > /etc/ld.so.conf.d/00-vmcs.conf\nWORKDIR /TerrariumPI\nCOPY --from=python_builder /TerrariumPI/ /TerrariumPI/.\nCOPY --from=sourcecode /TerrariumPI /TerrariumPI\nRUN echo '[ ! -z \"$TERM\" -a -r /TerrariumPI/motd.sh ] && /TerrariumPI/motd.sh' >> /etc/bash.bashrc\n\nHEALTHCHECK --interval=180s --timeout=5s --start-period=120s CMD python contrib/docker_health.py\n\nENTRYPOINT [\"/bin/bash\", \"/TerrariumPI/run.sh\"]\n"
}