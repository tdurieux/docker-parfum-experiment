diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/theyosh/terrariumpi/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/theyosh/terrariumpi/Dockerfile/repaired.Dockerfile
index bb3aa36..fe7bd7c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/theyosh/terrariumpi/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/theyosh/terrariumpi/Dockerfile/repaired.Dockerfile
@@ -9,9 +9,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends libusb-dev && \
   wget https://sourceforge.net/projects/sispmctl/files/sispmctl/sispmctl-${SISPMCTL_VERSION}/sispmctl-${SISPMCTL_VERSION}.tar.gz/download -O sispmctl-${SISPMCTL_VERSION}.tar.gz && \
   tar zxvf sispmctl-${SISPMCTL_VERSION}.tar.gz && \
   cd sispmctl-${SISPMCTL_VERSION}/ && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make && \
-  make install
+  make install && rm sispmctl-${SISPMCTL_VERSION}.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 # python builder, help keep image small
 FROM python:3.8-buster as python_builder
@@ -29,20 +29,20 @@ RUN apt-get update && apt-get install -y --no-install-recommends gnupg ca-certif
   rm -rf /var/lib/apt/lists/* && \
   apt-get update && \
   apt-get install -y --no-install-recommends git libxslt1.1 libglib2.0-dev && \
-  apt-get install -y --no-install-recommends python3-opencv libftdi1 libasound-dev
+  apt-get install -y --no-install-recommends python3-opencv libftdi1 libasound-dev && rm -rf /var/lib/apt/lists/*;
 RUN python -m venv /opt/venv
 ENV PATH="/opt/venv/bin:$PATH"
 # rpi.gpio - https://askubuntu.com/questions/1290037/error-while-installing-rpi-gpio-as-error-command-errored-out-with-exit-status
 ENV CFLAGS=-fcommon
 # cryptography - https://stackoverflow.com/questions/66118337/how-to-get-rid-of-cryptography-build-error
 ENV CRYPTOGRAPHY_DONT_BUILD_RUST=1
-RUN pip install --upgrade pip==22.1.2 && pip install wheel==0.37.1
+RUN pip install --no-cache-dir --upgrade pip==22.1.2 && pip install --no-cache-dir wheel==0.37.1
 COPY requirements.txt .
 # requirements are slightly different for docker
 RUN sed -i 's/opencv-python-headless/# opencv-python-headless/g' requirements.txt && \
   sed -i 's/cryptography==.*/cryptography==3.4.8/g' requirements.txt && \
   sed -i 's/numpy==.*/numpy==1.21.4/g' requirements.txt && \
-  pip install -r requirements.txt && \
+  pip install --no-cache-dir -r requirements.txt && \
   find /opt/venv -type d -name  "__pycache__" -exec rm -r {} +
 
 WORKDIR /TerrariumPI