{
  "startTime": 1674248290268,
  "endTime": 1674248290728,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 18,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build\nFROM node:11.12.0-alpine as build-vue\nWORKDIR /app\nENV PATH /app/node_modules/.bin:$PATH\nCOPY ./frontend/package*.json ./\nRUN npm install && npm cache clean --force;\nCOPY ./frontend .\nRUN npm run build\n\n# production\nFROM nginx:stable-alpine as production\nWORKDIR /app\nRUN apk update && apk add --no-cache python3 && \\\n    python3 -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    pip3 install --no-cache-dir --upgrade pip setuptools && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \\\n    rm -r /root/.cache\nRUN apk update && apk add --no-cache gcc python3-dev musl-dev git\nCOPY --from=build-vue /app/dist /usr/share/nginx/html\nCOPY ./nginx/default.conf /etc/nginx/conf.d/default.conf\n\n# Put require here to use cached layers when possible\nADD requirements.txt /tmp/requirements.txt\nRUN pip install --no-cache-dir --trusted-host pypi.python.org -r /tmp/requirements.txt\n\nCOPY . /app\n\nEXPOSE 5000\n\nENV USERNAME \"admin\"\nENV PASSWORD \"test\"\nENV PORT 5000\n\nCMD gunicorn -b 0.0.0.0:6000 wsgi:app --daemon && \\\n    sed -i -e 's/$PORT/'\"$PORT\"'/g' /etc/nginx/conf.d/default.conf && \\\n    nginx -g 'daemon off;'\n"
}