{
  "startTime": 1674251364662,
  "endTime": 1674251365763,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 30,
        "columnStart": 26,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 The KubeCarrier Authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Should be build from the Makefile, `make build-image-test`\n\nFROM ubuntu:18.04\n\nRUN apt-get -qq update && apt-get -qqy --no-install-recommends install \\\n  apt-transport-https \\\n  build-essential \\\n  ca-certificates \\\n  curl \\\n  ed \\\n  gettext \\\n  git \\\n  gnupg2 \\\n  jq \\\n  python3-pip \\\n  software-properties-common \\\n  zip \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN curl -fsSL https://get.docker.com | sh\nRUN curl -f -sL --output /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl && chmod a+x /usr/local/bin/kubectl\nRUN curl -f -sL https://get.helm.sh/helm-v3.1.2-linux-amd64.tar.gz | tar -C /tmp -xz && mv /tmp/linux-amd64/helm /usr/bin/helm && rm -Rf /tmp/linux-amd64 && helm repo add stable https://charts.helm.sh/stable && helm repo update\nRUN curl -f -sL https://dl.google.com/go/go1.14.linux-amd64.tar.gz | tar -C /usr/local -xz\nRUN curl -f -sL --output /tmp/boilerplate.zip https://github.com/kubermatic-labs/boilerplate/releases/download/v0.1.1/boilerplate_0.1.1_linux_amd64.zip && unzip /tmp/boilerplate.zip -d /usr/local/bin && rm -Rf /tmp/boilerplate.zip\nENV PATH=${PATH}:/usr/local/go/bin:/root/go/bin\n# This LC_ALL is needed for yq. https://stackoverflow.com/questions/18649512/unicodedecodeerror-ascii-codec-cant-decode-byte-0xe2-in-position-13-ordinal\nENV LC_ALL=C.UTF-8\n# Allowed to use path@version syntax to install controller-gen\nENV GO111MODULE=on\nCOPY lib.sh .\nCOPY install-deps.sh .\nRUN ./install-deps.sh\nRUN go env\n\n# binary will be $(go env GOPATH)/bin/golangci-lint\nRUN curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.24.0\n\nRUN curl -f -sL --output /usr/local/bin/kind https://github.com/kubernetes-sigs/kind/releases/download/v0.8.1/kind-linux-amd64 && chmod a+x /usr/local/bin/kind\nRUN curl -f -sL https://github.com/kyoh86/richgo/releases/download/v0.3.3/richgo_0.3.3_linux_amd64.tar.gz | tar -xz -C /tmp/ && mv /tmp/richgo /usr/local/bin\n\nARG kubebuilder_version=2.1.0\nRUN curl -f -sL https://go.kubebuilder.io/dl/${kubebuilder_version}/linux/amd64 | tar -xz -C /tmp/ && mv /tmp/kubebuilder_${kubebuilder_version}_linux_amd64 /usr/local/kubebuilder\n\nRUN go get golang.org/x/tools/cmd/goimports\nRUN go get github.com/rakyll/statik\nRUN go get github.com/pablo-ruth/go-init\n# Install controller-gen in the dockerfile, otherwise it will be installed during `make generate` which will modify the go.mod\n# and go.sum files, and make the directory dirty.\nRUN go get sigs.k8s.io/controller-tools/cmd/controller-gen@v0.2.9\nRUN pip3 install --no-cache-dir pre-commit awscli yq\n\nWORKDIR /src\n\n# Create pre-commit cache, that is download required pre-commit repos\nCOPY .pre-commit-config.yaml .pre-commit-config.yaml\nRUN git init && (pre-commit run || true) && rm -Rvf .git\n\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\nCOPY start-docker.sh /usr/local/bin/start-docker.sh\n\nVOLUME /var/lib/docker\n"
}