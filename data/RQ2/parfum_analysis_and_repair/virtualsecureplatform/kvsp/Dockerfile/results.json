{
  "startTime": 1674219228473,
  "endTime": 1674219229669,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.1.1-devel-ubuntu20.04\n#FROM nvidia/cuda:11.2.2-devel-ubuntu20.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential git curl software-properties-common openjdk-11-jre \\\n    cmake clang clang-9 bison flex libreadline-dev \\\n    gawk tcl-dev libffi-dev graphviz xdot pkg-config python3 libboost-system-dev \\\n\tlibboost-python-dev libboost-filesystem-dev zlib1g-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install .NET Core SDK\nRUN curl -f -sL https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -o packages-microsoft-prod.deb\nRUN dpkg -i packages-microsoft-prod.deb\nRUN apt-get update && apt-get install --no-install-recommends -y dotnet-sdk-3.1 && rm -rf /var/lib/apt/lists/*;\n\n# Install sbt\nRUN echo \"deb https://dl.bintray.com/sbt/debian /\" | tee -a /etc/apt/sources.list.d/sbt.list\nRUN curl -f -sL \"https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823\" | apt-key add\nRUN apt-get update && apt-get install --no-install-recommends -y sbt && rm -rf /var/lib/apt/lists/*;\n\n# Install Go\nRUN add-apt-repository ppa:longsleep/golang-backports\nRUN apt-get update && apt-get install --no-install-recommends -y golang-go && rm -rf /var/lib/apt/lists/*;\nRUN go get github.com/BurntSushi/toml\n\n# Run the build when executing `docker run`\nCMD [\"bash\", \"-c\", \"make -j$(nproc) ENABLE_CUDA=1 CUDACXX=\\\"/usr/local/cuda/bin/nvcc\\\" CUDAHOSTCXX=\\\"/usr/bin/clang-9\\\"\"]\n"
}