{
  "startTime": 1674252373277,
  "endTime": 1674252374781,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-buster AS build-dep\nWORKDIR /srv/app\nCOPY package.json yarn.lock ./\nRUN yarn install --production=true && yarn cache clean;\n\nFROM ruby:2.7.4-buster\n\nLABEL maintainer=\"quepid_admin@opensourceconnections.com\"\n\n# Must have packages\n# The next line is a list of dependencies if we move to slim-buster, however it only shaves 80MB off the image.\n# mariadb-server libmariadbclient-dev mariadb-client mysql-common ruby-mysql2 libmariadbd-dev build-essential patch ruby-dev zlib1g-dev liblzma-dev gnupg\nRUN apt-get update -qq && apt-get install -y --no-install-recommends vim curl apt-transport-https ca-certificates \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Node and Yarn\nRUN wget --no-check-certificate -qO - https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash -\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends \\\n    nodejs                                      \\\n    yarn                                        \\\n    ca-certificates                             \\\n    bzip2                                       \\\n    libfontconfig                               \\\n  && apt-get clean all                          \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Install dependencies\nWORKDIR /srv/app\nCOPY Gemfile Gemfile.lock ./\nRUN gem install bundler:1.17.3\n\n# Clean up Bundle\nRUN bundle config set without 'development test'\nRUN bundle install && \\\n  bundle clean --force && \\\n  rm -rf /app/.bundle/cache && \\\n  rm -rf /app/vendor/bundle/ruby/*/cache\n\nCOPY --from=build-dep /srv/app/node_modules ./node_modules/\n#COPY . .\nCOPY ./app ./app\nCOPY ./app.json ./app.json\nCOPY ./babel.config.js ./babel.config.js\nCOPY ./bin ./bin\nCOPY ./config ./config\nCOPY ./config.ru ./config.ru\nCOPY ./db ./db\nCOPY ./Gemfile ./Gemfile\nCOPY ./Gemfile.lock ./Gemfile.lock\nCOPY ./lib ./lib\nCOPY ./LICENSE ./LICENSE\nCOPY ./package.json ./package.json\nCOPY ./postcss.config.js ./postcss.config.js\nCOPY ./Procfile ./Procfile\nCOPY ./public ./public\nCOPY ./Rakefile ./Rakefile\nCOPY ./README.md ./README.md\nCOPY ./vendor ./vendor\nCOPY ./yarn.lock ./yarn.lock\n\nRUN mkdir -p tmp/pids\n\nRUN RAILS_ENV=production SECRET_KEY_BASE=fake_out_devise bundle exec rake assets:precompile\n\n# Remove some files not needed in resulting image\nRUN rm package.json yarn.lock\n\nCMD [\"foreman\", \"s\", \"-f\", \"Procfile\"]\n"
}