{
  "startTime": 1674250565390,
  "endTime": 1674250566304,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# We're using Alpine Edge\nFROM alpine:edge\n\n# We have to uncomment Community repo for some packages\nRUN sed -e 's;^#http\\(.*\\)/edge/community;http\\1/edge/community;g' -i /etc/apk/repositories\n\n# install ca-certificates so that HTTPS works consistently\n# other runtime dependencies for Python are installed later\nRUN apk add --no-cache ca-certificates\n\n# Installing Packages\nRUN apk add --no-cache --update \\\n    bash \\\n    build-base \\\n    bzip2-dev \\\n    curl \\\n    coreutils \\\n    figlet \\\n    gcc \\\n    g++ \\\n    git \\\n    aria2 \\\n    util-linux \\\n    libevent \\\n    libjpeg-turbo-dev \\\n    chromium \\\n    chromium-chromedriver \\\n    jpeg-dev \\\n    libc-dev \\\n    libffi-dev \\\n    libpq \\\n    libwebp-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    linux-headers \\\n    musl-dev \\\n    neofetch \\\n    openssl-dev \\\n    postgresql-client \\\n    postgresql-dev \\\n    pv \\\n    jq \\\n    wget \\\n    python3-dev \\\n    readline-dev \\\n    ffmpeg \\\n    sqlite-dev \\\n    sudo \\\n    zlib-dev \\\n    python-dev\n\n\nRUN python3 -m ensurepip \\\n    && pip3 install --no-cache-dir --upgrade pip setuptools \\\n    && rm -r /usr/lib/python*/ensurepip && \\\n    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \\\n    rm -r /root/.cache\n\n#\n# Clone repo and prepare working directory\n#\nRUN git clone https://github.com/AvinashReddy3108/PaperplaneExtended /root/userbot\nRUN mkdir /root/userbot/bin/\nWORKDIR /root/userbot/\n\n#\n# Copies session and config (if it exists)\n#\nCOPY ./sample_config.env ./userbot.session* ./config.env* /root/userbot/\n\n#\n# Install requirements\n#\nRUN pip3 install --no-cache-dir -r requirements.txt\nCMD [\"python3\",\"-m\",\"userbot\"]\n"
}