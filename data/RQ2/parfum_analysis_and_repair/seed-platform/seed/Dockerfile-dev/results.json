{
  "startTime": 1674251087508,
  "endTime": 1674251088437,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.14\n\nRUN apk add --no-cache python3-dev \\\n        postgresql-dev \\\n        coreutils \\\n        alpine-sdk \\\n        pcre \\\n        pcre-dev \\\n        libxslt-dev \\\n        linux-headers \\\n        libffi-dev \\\n        bash \\\n        bash-completion \\\n        npm \\\n        nginx \\\n        openssl-dev \\\n        geos \\\n        gdal \\\n        gcc \\\n        musl-dev \\\n        cargo && \\\n    ln -sf /usr/bin/python3 /usr/bin/python && \\\n    python -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    ln -sf /usr/bin/pip3 /usr/bin/pip && \\\n    pip install --no-cache-dir --upgrade pip setuptools && \\\n    pip install --no-cache-dir supervisor==4.2.2 && \\\n    mkdir -p /var/log/supervisord/ && \\\n    rm -r /root/.cache && \\\n    addgroup -g 1000 uwsgi && \\\n    adduser -G uwsgi -H -u 1000 -S uwsgi && \\\n    mkdir -p /run/nginx\n\n### Install python requirements\nWORKDIR /seed\nCOPY ./requirements.txt /seed/requirements.txt\nCOPY ./requirements/*.txt /seed/requirements/\nRUN pip uninstall -y enum34\nRUN pip install --no-cache-dir -r requirements/local.txt\n# for remote debugging\nRUN pip install --no-cache-dir remote-pdb\n# for live reloading celery\nRUN pip install --no-cache-dir watchdog[watchmedo]\n\n### Install JavaScript requirements - do this first because they take awhile\n### and the dependencies will probably change slower than python packages.\n### README.md stops the no readme warning\nCOPY ./package.json /seed/package.json\nCOPY ./vendors/package.json /seed/vendors/package.json\nCOPY ./README.md /seed/README.md\n# unsafe-perm allows the package.json postinstall script to run with the elevated permissions\nRUN npm install --unsafe-perm && npm cache clean --force;\n\n### Copy over the remaining part of the SEED application and some helpers\nWORKDIR /seed\nCOPY . /seed/\nCOPY ./docker/wait-for-it.sh /usr/local/wait-for-it.sh\nRUN git config --system --add safe.directory /seed\n\nEXPOSE 80\n\nCMD [\"python3\", \"manage.py\", \"runserver\", \"--settings=config.settings.docker_dev\", \"0.0.0.0:80\"]\n"
}