{
  "startTime": 1674217711319,
  "endTime": 1674217712090,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# AUTHOR:           Clay Teeter <teeterc@gmail.com>, Nicholas Long <nicholas.long@nrel.gov>\n# DESCRIPTION:      Image with seed platform and dependencies running in development mode\n# TO_BUILD_AND_RUN: docker-compose build && docker-compose up\n\nFROM alpine:3.14\n\nRUN apk add --no-cache python3-dev \\\n        postgresql-dev \\\n        coreutils \\\n        alpine-sdk \\\n        pcre \\\n        pcre-dev \\\n        libxslt-dev \\\n        linux-headers \\\n        libffi-dev \\\n        bash \\\n        bash-completion \\\n        npm \\\n        nginx \\\n        openssl-dev \\\n        geos \\\n        gdal \\\n        gcc \\\n        musl-dev \\\n        cargo && \\\n    ln -sf /usr/bin/python3 /usr/bin/python && \\\n    python -m ensurepip && \\\n    rm -r /usr/lib/python*/ensurepip && \\\n    ln -sf /usr/bin/pip3 /usr/bin/pip && \\\n    pip install --no-cache-dir --upgrade pip setuptools && \\\n    pip install --no-cache-dir supervisor==4.2.2 && \\\n    mkdir -p /var/log/supervisord/ && \\\n    rm -r /root/.cache && \\\n    addgroup -g 1000 uwsgi && \\\n    adduser -G uwsgi -H -u 1000 -S uwsgi && \\\n    mkdir -p /run/nginx\n\n## Note on some of the commands above:\n##   - create the uwsgi user and group to have id of 1000\n##   - copy over python3 as python\n##   - pip install --upgrade pip overwrites the pip so it is no longer a symlink\n##   - coreutils is required due to an issue with our wait-for-it.sch script:\n##     https://github.com/vishnubob/wait-for-it/issues/71\n\n### Install python requirements\nWORKDIR /seed\nCOPY ./requirements.txt /seed/requirements.txt\nCOPY ./requirements/*.txt /seed/requirements/\nRUN pip uninstall -y enum34\nRUN pip install --no-cache-dir -r requirements/aws.txt\n\n### Install JavaScript requirements - do this first because they take awhile\n### and the dependencies will probably change slower than python packages.\n### README.md stops the no readme warning\nCOPY ./package.json /seed/package.json\nCOPY ./vendors/package.json /seed/vendors/package.json\nCOPY ./README.md /seed/README.md\n# unsafe-perm allows the package.json postinstall script to run with the elevated permissions\nRUN npm install --unsafe-perm && npm cache clean --force;\n\n### Copy over the remaining part of the SEED application and some helpers\nWORKDIR /seed\nCOPY . /seed/\nCOPY ./docker/wait-for-it.sh /usr/local/wait-for-it.sh\nRUN git config --system --add safe.directory /seed\n\n# nginx configuration - replace the root/default nginx config file\nCOPY /docker/nginx-seed.conf /etc/nginx/nginx.conf\n# symlink maintenance.html that nginx will serve in the case of a 503\nRUN ln -sf /seed/collected_static/maintenance.html /var/lib/nginx/html/maintenance.html\n# set execute permissions on the maint script to toggle on and off\nRUN chmod +x ./docker/maintenance.sh\n\n# Supervisor looks in /etc/supervisor for the configuration file.\nCOPY /docker/supervisor-seed.conf /etc/supervisor/supervisord.conf\n\n# entrypoint sets some permissions on directories that may be shared volumes\nCOPY /docker/seed-entrypoint.sh /usr/local/bin/seed-entrypoint\nRUN chmod 775 /usr/local/bin/seed-entrypoint\nENTRYPOINT [\"seed-entrypoint\"]\n\nCMD [\"supervisord\"]\n\nEXPOSE 80\n"
}