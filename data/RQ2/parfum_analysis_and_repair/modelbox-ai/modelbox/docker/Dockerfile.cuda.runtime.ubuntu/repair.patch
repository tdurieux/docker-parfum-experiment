diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/modelbox-ai/modelbox/docker/Dockerfile.cuda.runtime.ubuntu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/modelbox-ai/modelbox/docker/Dockerfile.cuda.runtime.ubuntu/repaired.Dockerfile
index 0e3dde7..739e28f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/modelbox-ai/modelbox/docker/Dockerfile.cuda.runtime.ubuntu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/modelbox-ai/modelbox/docker/Dockerfile.cuda.runtime.ubuntu/repaired.Dockerfile
@@ -16,8 +16,8 @@ WORKDIR /root
 
 RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo "Asia/Shanghai" > /etc/timezone && \
     apt update && apt upgrade -y && \
-    apt install  -y python3.7-dev python3-pip python3-apt python3-setuptools && \
-    apt install  -y dbus systemd systemd-cron iproute2 gnupg2 libfuse2 \
+    apt install --no-install-recommends -y python3.7-dev python3-pip python3-apt python3-setuptools && \
+    apt install --no-install-recommends -y dbus systemd systemd-cron iproute2 gnupg2 libfuse2 \
         build-essential bash unzip ffmpeg curl pkg-config ca-certificates libduktape202 \
         libssl1.1 libcpprest libswscale4 libavformat57 graphviz libprotobuf-c1 \
         libopencv-core3.2 libopencv-imgproc3.2 libopencv-imgcodecs3.2 && \
@@ -39,17 +39,17 @@ RUN mkdir -p /root/.pip && \
     echo "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/cuda.list && \
     echo "deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /" > /etc/apt/sources.list.d/nvidia-ml.list && \
     apt update && \
-    if [ "${CUDA_VERSION}" = "10.2" ]; then \
+    if [ "${CUDA_VERSION}" = "10.2" ];then \
         apt install -y --no-install-recommends \
             libcudnn8=8.0.0.180-1+cuda10.2 \
             libcublas10=10.2.2.89-1; \
     elif [ "${CUDA_VERSION}" = "11.2" ]; then \
-        curl -LO https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-gpu-linux-x86_64-2.6.0.tar.gz && \
+        curl -f -LO https://storage.googleapis.com/tensorflow/libtensorflow/libtensorflow-gpu-linux-x86_64-2.6.0.tar.gz && \
         tar zxf libtensorflow-gpu-linux-x86_64-2.6.0.tar.gz -C /usr/local/ && \
         python3 -m pip install --no-cache-dir tensorflow-gpu==2.6.0 && \
         apt install -y --no-install-recommends \
             libcudnn8=8.1.1.33-1+cuda11.2 \
-            libcublas-11-2=11.4.1.1043-1;fi && \
+            libcublas-11-2=11.4.1.1043-1; rm libtensorflow-gpu-linux-x86_64-2.6.0.tar.gz fi && \
     find /usr/local -name "*.a"|xargs rm -f && \
     rm -rf /var/lib/apt/lists/* /root/*
 
@@ -58,7 +58,7 @@ RUN apt update && \
         cuda-nvtx-${CUDA_VER} \
         cuda-libraries-${CUDA_VER} && \
     ln -s cuda-${CUDA_VERSION} /usr/local/cuda && \
-    if [ -n "${TRT_VERSION}" ]; then \
+    if [ -n "${TRT_VERSION}" ];then \
         v="7.1.3-1+cuda10.2" && \
         apt install -y --no-install-recommends \
             libcudnn8=8.0.0.180-1+cuda10.2 \
@@ -68,7 +68,7 @@ RUN apt update && \
             libnvinfer-plugin7=${v} \
             python3-libnvinfer=${v}; \
     elif [ -n "${TORCH_VERSION}" ]; then \
-        curl -LO https://download.pytorch.org/libtorch/cu102/libtorch-cxx11-abi-shared-with-deps-1.9.1%2Bcu102.zip && \
+        curl -f -LO https://download.pytorch.org/libtorch/cu102/libtorch-cxx11-abi-shared-with-deps-1.9.1%2Bcu102.zip && \
         unzip libtorch-*.zip -d /root >/dev/null 2>&1 && \
         cp -af libtorch/* /usr/local/; fi && \
     find /usr/local -name "*.a"|xargs rm -f && \