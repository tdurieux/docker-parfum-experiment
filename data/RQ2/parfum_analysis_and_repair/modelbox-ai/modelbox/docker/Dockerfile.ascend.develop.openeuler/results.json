{
  "startTime": 1674255167155,
  "endTime": 1674255168515,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM modelbox/ascend-base-openeuler:latest\nFROM openeuler/openeuler:20.03-lts-sp3\n\nCOPY release /opt/release\nCOPY --from=0 /usr/local/Ascend_dev /usr/local/Ascend\n\nADD *.tar.gz /usr/local/\n\nARG ASCEND_PATH=/usr/local/Ascend\nENV LOCAL_ASCEND=/usr/local/Ascend\nENV ASCEND_AICPU_PATH=${ASCEND_PATH}/ascend-toolkit/latest\nENV ASCEND_OPP_PATH=${ASCEND_PATH}/ascend-toolkit/latest/opp\nENV TOOLCHAIN_HOME=${ASCEND_PATH}/ascend-toolkit/latest/toolkit\nENV TBE_IMPL_PATH=${ASCEND_PATH}/ascend-toolkit/latest/opp/op_impl/build-in/ai_core/tbe\nENV MINDSPORE_PATH=/usr/local/lib/python3.7/site-packages/mindspore\nENV DDK_PATH=${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib\nENV DRIVER_PATH=${ASCEND_PATH}/driver\n\nENV PATH=\\\n${ASCEND_PATH}/ascend-toolkit/latest/atc/bin:\\\n${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/bin:\\\n${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/ccec_compiler/bin:\\\n${ASCEND_PATH}/ascend-toolkit/latest/atc/ccec_compiler/bin${PATH:+:${PATH}}\n\nENV PYTHONPATH=\\\n${ASCEND_PATH}/ascend-toolkit/latest/atc/python/site-packages:\\\n${ASCEND_PATH}/ascend-toolkit/latest/toolkit/python/site-packages:\\\n${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/python/site-packages:\\\n${ASCEND_PATH}/ascend-toolkit/latest/opp/op_impl/build-in/ai_core/tbe:\\\n${ASCEND_PATH}/ascend-toolkit/latest/pyACL/python/site-packages/acl${PYTHONPATH:+:${PYTHONPATH}}\n\nENV LD_LIBRARY_PATH=${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}\n\nWORKDIR /root\n\nRUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo \"Asia/Shanghai\" > /etc/timezone && \\\n    dnf update -y --nogpgcheck && \\\n    dnf install -y --nogpgcheck vim gcc gcc-c++ make cmake libnsl perf doxygen gcc-gfortran pciutils alsa-lib gdb clang \\\n        zlib-devel curl-devel bzip2-devel rpm-build sqlite-devel libffi-devel openssl-devel xz-devel git passwd systemd \\\n        krb5-devel expat-devel boost-devel ncurses-devel libxml2-devel libssh2-devel python3-devel python3-perf bc nc \\\n        readline-devel nss-devel fuse-devel gdbm-devel glibc-devel glibc-debuginfo gnutls-devel net-tools libatomic \\\n        xauth tk-devel lapack-devel graphviz-devel mesa-libGL-devel openblas-devel protobuf-c-devel openssh-server && \\\n    ln -sf pip3.7 /usr/bin/pip && ln -sf python3.7 /usr/bin/python && \\\n    dnf clean all && rm -rf /var/cache/dnf/*\n\nRUN mkdir -p /root/.pip && \\\n    echo \"[global]\" > /root/.pip/pip.conf && \\\n    echo \"index-url = https://pypi.python.org/simple\" >>/root/.pip/pip.conf && \\\n    echo \"trusted-host = pypi.python.org\" >>/root/.pip/pip.conf && \\\n    echo \"timeout = 120\" >>/root/.pip/pip.conf && \\\n    if [ \"$(arch)\" = \"aarch64\" ];then sed -i 's@python.org@douban.com@g' /root/.pip/pip.conf;fi && \\\n    groupadd HwHiAiUser && \\\n    useradd -g HwHiAiUser -d /home/HwHiAiUser -m HwHiAiUser && \\\n    python3 -m pip install --upgrade pip && \\\n    python3 -m pip install --no-cache-dir wheel attrs psutil decorator protobuf scipy sympy cffi grpcio grpcio-tools requests pillow pyyaml opencv-python && \\\n    python3 -m pip install --no-cache-dir https://ms-release.obs.cn-north-4.myhuaweicloud.com/1.6.1/MindSpore/ascend/$(arch)/mindspore_ascend-1.6.1-cp37-cp37m-linux_$(arch).whl && \\\n    python3 -m pip install --no-cache-dir ${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/lib64/topi-0.4.0-py3-none-any.whl && \\\n    python3 -m pip install --no-cache-dir ${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/lib64/te-0.4.0-py3-none-any.whl && \\\n    python3 -m pip install --no-cache-dir ${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/lib64/hccl-0.1.0-py3-none-any.whl && \\\n    echo \"/usr/local/lib\" >>/etc/ld.so.conf && \\\n    echo \"/usr/local/lib64\" >>/etc/ld.so.conf && \\\n    echo \"${ASCEND_PATH}/driver/lib64\" >>/etc/ld.so.conf && \\\n    echo \"${ASCEND_PATH}/ascend-toolkit/latest/fwkacllib/lib64\" >>/etc/ld.so.conf\n\nRUN if [ \"$(arch)\" = \"aarch64\" ];then node_arch=\"arm64\";else node_arch=\"x64\";fi && \\\n    curl -f https://nodejs.org/dist/v16.13.2/node-v16.13.2-linux-${node_arch}.tar.xz | tar -xJ && \\\n    cp -af node-v16.13.2-linux-${node_arch}/* /usr/local/ && \\\n    if [ \"$(arch)\" = \"aarch64\" ];then npm config set registry https://registry.npm.taobao.org/;fi && \\\n    npm install -g npm@latest && npm -v && node -v && \\\n    npm install -g @angular/cli && \\\n    npm cache clean --force && rm -rf /root/* && \\\n    python3 -m pip install --no-cache-dir /opt/release/python/modelbox-*.whl && \\\n    rpm -ivh /opt/release/*.rpm && \\\n    usermod -G HwHiAiUser modelbox\n\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; \\\n    do [ $i = systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n    rm -f /lib/systemd/system/multi-user.target.wants/*; \\\n    rm -f /etc/systemd/system/*.wants/*; \\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/basic.target.wants/*; \\\n    rm -f /lib/systemd/system/anaconda.target.wants/*; \\\n    sed -i 's/^SystemMaxUse=.*/SystemMaxUse=16M/g' /etc/systemd/journald.conf && \\\n    echo 'export TMOUT=0' >> /etc/bashrc && \\\n    echo 'export HISTSIZE=1000' >> /etc/bashrc && \\\n    echo '[ -n \"${SSH_TTY}\" ] && export $(cat /proc/1/environ|tr \"\\\\0\" \"\\\\n\"|xargs)' >> /etc/bashrc && \\\n    echo 'export PS1=\"\\[\\e[35;1m\\][\\u@\\h \\W]$ \\[\\e[0m\\]\"' >> /etc/bashrc && \\\n    ldconfig -v 2>/dev/null|grep \"libascend_hal.so\" && systemctl enable sshd\n\nVOLUME [\"/sys/fs/cgroup\", \"/tmp\", \"/run\", \"/run/lock\"]\nSTOPSIGNAL SIGRTMIN+3\n\nCMD [\"/sbin/init\", \"--log-target=journal\"]\n"
}