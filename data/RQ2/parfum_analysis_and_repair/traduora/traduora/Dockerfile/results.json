{
  "startTime": 1674251789789,
  "endTime": 1674251790780,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage\nFROM node:16-alpine3.11 as builder\n\nLABEL maintainer=\"ever@ever.co\"\n\nENV IS_DOCKER=true\n\nRUN apk --update --no-cache add bash && \\\n    apk add --no-cache --virtual build-dependencies libgcc libstdc++ linux-headers dos2unix gcc g++ git make python2 py2-setuptools vips-dev\n\nRUN npm install --quiet node-gyp -g && npm cache clean --force;\n\nCOPY wait docker-entrypoint.compose.sh docker-entrypoint.sh /\n\nRUN chmod +x /wait /docker-entrypoint.compose.sh /docker-entrypoint.sh && dos2unix /docker-entrypoint.compose.sh && dos2unix /docker-entrypoint.sh\n\nWORKDIR /opt/traduora\n\nCOPY bin bin\nCOPY api api\nCOPY webapp webapp\n\nRUN dos2unix bin/* && chmod +x bin/*.sh\n\nRUN bin/build.sh\n\n# Runtime stage\nFROM node:16-alpine3.11\n\nWORKDIR /opt/traduora\n\nCOPY --from=builder /wait /docker-entrypoint.sh /docker-entrypoint.compose.sh ./\n\nCOPY --from=builder /opt/traduora/dist/ /opt/traduora/\n\nEXPOSE 8080\n\nENTRYPOINT [ \"./docker-entrypoint.sh\" ]\n"
}