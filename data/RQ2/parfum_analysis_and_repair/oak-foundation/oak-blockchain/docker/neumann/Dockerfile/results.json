{
  "startTime": 1674218852806,
  "endTime": 1674218853477,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is the build stage for OAK. Here we create the binary in a temporary image.\nFROM docker.io/paritytech/ci-linux:production as builder\n\nWORKDIR /build\nCOPY . /build\n\nRUN cargo build --locked --release --features neumann-node\nRUN /build/target/release/oak-collator build-spec --disable-default-bootnode --chain=dev --raw > neumann-dev-chain-spec.json\nRUN /build/target/release/oak-collator build-spec --disable-default-bootnode --chain=local --raw > neumann-local-chain-spec.json\nRUN /build/target/release/oak-collator build-spec --disable-default-bootnode --chain=neumann-staging --raw > neumann-staging-chain-spec.json\nRUN /build/target/release/oak-collator build-spec --disable-default-bootnode --chain=neumann --raw > neumann-latest-chain-spec.json\n\n# This is the 2nd stage: a very small image where we copy the OAK binary.\"\nFROM docker.io/library/ubuntu:20.04\n\nARG USERNAME=oak\nARG PROFILE=release\nARG BINARY=oak-collator\n\nLABEL maintainer \"contact@oak.tech\"\nLABEL description=\"Binary for Neumann Collator\"\n\n# 1. Install curl to execute RPC call\n# 2. Add user\n# 3. Create data directory\n# 4. Link data directory\n# 5. Delete binaries except curl\nRUN apt-get update && apt-get install --no-install-recommends -y curl && \\\n  useradd -m -u 1000 -U -s /bin/sh -d /$USERNAME $USERNAME && \\\n  mkdir -p /$USERNAME/.local/share && \\\n  mkdir /data && \\\n  chown -R $USERNAME:$USERNAME /data && \\\n  ln -s /data /$USERNAME/.local/share/$BINARY && \\\n  find /usr/bin/* /usr/sbin/* | grep -v curl | xargs rm && rm -rf /var/lib/apt/lists/*;\n\nUSER $USERNAME\n\n# Copy files\nCOPY --chown=$USERNAME --from=builder /build/target/release/$BINARY  /$USERNAME/$BINARY\nCOPY --chown=$USERNAME ./resources /$USERNAME/resources\nCOPY --chown=$USERNAME --from=builder /build/neumann-dev-chain-spec.json  /$USERNAME/resources/neumann-dev-chain-spec.json\nCOPY --chown=$USERNAME --from=builder /build/neumann-local-chain-spec.json  /$USERNAME/resources/neumann-local-chain-spec.json\nCOPY --chown=$USERNAME --from=builder /build/neumann-staging-chain-spec.json  /$USERNAME/resources/neumann-staging-chain-spec.json\nCOPY --chown=$USERNAME --from=builder /build/neumann-latest-chain-spec.json  /$USERNAME/resources/neumann-latest-chain-spec.json\n\n# Open network port\n# 30333 for parachain p2p\n# 30334 for relaychain p2p\n# 9933 for RPC call\n# 9944 for Websocket\n# 9615 for Prometheus (metrics)\nEXPOSE 30333 30334 9933 9944 9615\n\n# Specify volume\nVOLUME [\"/data\"]\n\n# Change work directory\nWORKDIR /$USERNAME\n\nENTRYPOINT [\"./oak-collator\"]\n"
}