{
  "startTime": 1674252776877,
  "endTime": 1674252777464,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 46,
        "columnStart": 23,
        "columnEnd": 48
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Betty Cropper Django server with support for\n#   - uWSGI\n#   - Postgres\n#   - Memcached\n#   - AWS S3 storage\n#   - Sentry\n#\nFROM python:3.5\nMAINTAINER Onion Tech <webtech@theonion.com>\n\n# Grab packages and then cleanup (to minimize image size)\nRUN apt-get update \\\n    && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n        libfreetype6-dev \\\n        libjpeg-dev \\\n        libtiff5-dev \\\n        zlib1g-dev \\\n        libblas-dev \\\n        liblapack-dev \\\n        libatlas-base-dev \\\n        gfortran \\\n        libmemcached-dev \\\n        libpq-dev \\\n    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Fixed settings we always want (and simplifies uWSGI invocation)\nENV UWSGI_MODULE=betty.wsgi:application \\\n    UWSGI_MASTER=1\n\n# Extra packages for Onion deployment\nRUN pip install --no-cache-dir \"boto==2.39.0\" \\\n                \"django-storages==1.4\" \\\n                \"psycopg2==2.6.1\" \\\n                \"pylibmc==1.5.1\" \\\n                \"raven==4.2.1\" \\\n                \"uwsgi>=2.0.11.1,<=2.1\"\n\n# Setup app directory\nRUN mkdir -p /webapp\nWORKDIR /webapp\n\nCOPY requirements/ /webapp/requirements/\n\nRUN cd requirements && pip install --no-cache-dir -r common.txt \\\n                                   -r dev.txt \\\n                                   -r imgmin.txt\n\n# Add app as late as possibly (will always trigger cache miss and rebuild from here)\nADD . /webapp\n\nRUN pip install --no-cache-dir .\n"
}