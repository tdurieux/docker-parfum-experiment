{
  "startTime": 1674251939133,
  "endTime": 1674251940662,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 151
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/ubi8/ubi-minimal:8.3 AS builder\n\nARG JAVA_PACKAGE=java-11-openjdk-headless\n\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\nENV JAVA_HOME=\"/usr/lib/jvm/jre-11\"\nENV NPM_CONFIG_CACHE=\"/.cache/npm\"\n\nRUN microdnf install ca-certificates ${JAVA_PACKAGE} java-11-openjdk-devel git \\\n    && microdnf update \\\n    && microdnf clean all \\\n    && mkdir -p /javabuild/backend \\\n    && mkdir -p /javabuild/ui \\\n    && chown -R 1001 /javabuild \\\n    && chmod -R \"g+rwX\" /javabuild \\\n    && chown -R 1001:root /javabuild \\\n    && mkdir -p /.cache \\\n    && chown -R 1001 /.cache \\\n    && chmod -R \"g+rwX\" /.cache \\\n    && chown -R 1001:root /.cache \\\n    && echo \"securerandom.source=file:/dev/urandom\" >> /etc/alternatives/jre/lib/security/java.security\n\nUSER 1001\n\nCOPY --chown=1001:root mvnw /javabuild/mvnw\nCOPY --chown=1001:root .mvn/ /javabuild/.mvn/\nCOPY --chown=1001:root pom.xml /javabuild/\nCOPY --chown=1001:root backend/pom.xml /javabuild/backend/pom.xml\nCOPY --chown=1001:root ui/pom.xml /javabuild/ui/pom.xml\n\nWORKDIR /javabuild\n\nRUN ./mvnw clean dependency:go-offline -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n\nCOPY --chown=1001:root . /javabuild/\n\nRUN ./mvnw package -am -pl backend -Dquarkus.package.type=fast-jar -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.3\n\nARG JAVA_PACKAGE=java-11-openjdk-headless\nARG RUN_JAVA_VERSION=1.3.8\n\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\nENV JAVA_HOME=\"/usr/lib/jvm/jre-11\"\n\n# Install java and the run-java script\n# Also set up permissions for user `1001`\nRUN microdnf install curl ca-certificates ${JAVA_PACKAGE} \\\n    && microdnf update \\\n    && microdnf clean all \\\n    && mkdir /deployments \\\n    && chown 1001 /deployments \\\n    && chmod \"g+rwX\" /deployments \\\n    && chown 1001:root /deployments \\\n    && curl -f https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \\\n    && chown 1001 /deployments/run-java.sh \\\n    && chmod 540 /deployments/run-java.sh \\\n    && echo \"securerandom.source=file:/dev/urandom\" >> /etc/alternatives/jre/lib/security/java.security\n\n# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.\nENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\n\n# We make four distinct layers so if there are application changes the library layers can be re-used\nCOPY --from=builder --chown=1001 /javabuild/backend/target/quarkus-app/lib/ /deployments/lib/\nCOPY --from=builder --chown=1001 /javabuild/backend/target/quarkus-app/*.jar /deployments/\nCOPY --from=builder --chown=1001 /javabuild/backend/target/quarkus-app/app/ /deployments/app/\nCOPY --from=builder --chown=1001 /javabuild/backend/target/quarkus-app/quarkus/ /deployments/quarkus/\n\nEXPOSE 8080\nUSER 1001\n\nENTRYPOINT [ \"/deployments/run-java.sh\" ]\n"
}