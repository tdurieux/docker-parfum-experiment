{
  "startTime": 1674248986092,
  "endTime": 1674248986828,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 151
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####\n# This Dockerfile is used in order to build a container with Debezium UI.\n# It is derived from standard Quarkus-build Docker file but the build is\n# executed from the sources.\n###\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.1 AS builder\n\nARG JAVA_PACKAGE=java-11-openjdk-devel\nARG BRANCH=v1.6.4.Final\n\nENV LANG='en_US.UTF-8' \\\n    LANGUAGE='en_US:en' \\\n    JAVA_HOME='/usr/lib/jvm/java-11-openjdk'\n\n# Install java and the run-java script\n# Also set up permissions for user `1001`\nRUN microdnf install curl ca-certificates ${JAVA_PACKAGE} git maven \\\n    && microdnf update \\\n    && microdnf clean all\n\nRUN java -version \\\n    && mkdir -p /sources \\\n    && cd /sources \\\n    && git clone -b $BRANCH https://github.com/debezium/debezium-ui.git . \\\n    && mvn -q -am dependency:go-offline -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120 \\\n    && mvn -q clean package -DskipTests -DskipITs -Dquarkus.package.type=fast-jar -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120\n\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.1\n\nARG JAVA_PACKAGE=java-11-openjdk-headless\nARG RUN_JAVA_VERSION=1.3.8\n\nENV LANG='en_US.UTF-8' \\\n    LANGUAGE='en_US:en' \\\n    JAVA_HOME='/usr/lib/jvm/jre-11'\n\n# Install java and the run-java script\n# Also set up permissions for user `1001`\nRUN microdnf install curl ca-certificates ${JAVA_PACKAGE} \\\n    && microdnf update \\\n    && microdnf clean all \\\n    && mkdir /deployments \\\n    && chown 1001 /deployments \\\n    && chmod \"g+rwX\" /deployments \\\n    && chown 1001:root /deployments \\\n    && curl -f https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \\\n    && chown 1001 /deployments/run-java.sh \\\n    && chmod 540 /deployments/run-java.sh \\\n    && echo \"securerandom.source=file:/dev/urandom\" >> /etc/alternatives/jre/lib/security/java.security\n\n# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.\nENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\n\n# We make four distinct layers so if there are application changes the library layers can be re-used\nCOPY --from=builder --chown=1001 /sources/backend/target/quarkus-app/lib/ /deployments/lib/\nCOPY --from=builder --chown=1001 /sources/backend/target/quarkus-app/*.jar /deployments/\nCOPY --from=builder --chown=1001 /sources/backend/target/quarkus-app/app/ /deployments/app/\nCOPY --from=builder --chown=1001 /sources/backend/target/quarkus-app/quarkus/ /deployments/quarkus/\n\nEXPOSE 8080\nUSER 1001\n\nENTRYPOINT [ \"/deployments/run-java.sh\" ]\n"
}