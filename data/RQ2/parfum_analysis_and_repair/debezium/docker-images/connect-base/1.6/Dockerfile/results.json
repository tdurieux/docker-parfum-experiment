{
  "startTime": 1674252870906,
  "endTime": 1674252871674,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debezium/kafka:1.6\n\nLABEL maintainer=\"Debezium Community\"\n\nUSER root\nRUN yum -y install libaio && yum clean all && rm -rf /var/cache/yum\n\nUSER kafka\n\nEXPOSE 8083\nVOLUME [\"/kafka/data\",\"/kafka/logs\",\"/kafka/config\"]\n\nCOPY docker-entrypoint.sh /\nCOPY --chown=kafka:kafka log4j.properties $KAFKA_HOME/config/log4j.properties\nCOPY docker-maven-download.sh /usr/local/bin/docker-maven-download\n\n#\n# Set up the plugins directory ...\n#\nENV KAFKA_CONNECT_PLUGINS_DIR=$KAFKA_HOME/connect \\\n    EXTERNAL_LIBS_DIR=$KAFKA_HOME/external_libs \\\n    CONNECT_PLUGIN_PATH=$KAFKA_CONNECT_PLUGINS_DIR \\\n    MAVEN_DEP_DESTINATION=$KAFKA_HOME/libs \\\n    CONFLUENT_VERSION=6.0.2 \\\n    AVRO_VERSION=1.9.2 \\\n    AVRO_JACKSON_VERSION=2.10.5 \\\n    APICURIO_VERSION=2.0.0.Final\n\nRUN mkdir \"$KAFKA_CONNECT_PLUGINS_DIR\" \"$EXTERNAL_LIBS_DIR\"\n\n#\n# The `docker-entrypoint.sh` script will automatically discover the child directories\n# within the $KAFKA_CONNECT_PLUGINS_DIR directory (e.g., `/kafka/connect`), and place\n# all of the files in those child directories onto the Java classpath.\n#\n# The general recommendation is to create a separate child directory for each connector\n# (e.g., \"debezium-connector-mysql\"), and to place that connector's JAR files\n# and other resource files in that child directory.\n#\n# However, use a single directory for connectors when those connectors share dependencies.\n# This will prevent the classes in the shared dependencies from appearing in multiple JARs\n# on the classpath, which results in arcane NoSuchMethodError exceptions.\n#\nRUN docker-maven-download confluent kafka-connect-avro-converter \"$CONFLUENT_VERSION\" 4671dec77c8af4689e20419538e7b915 && \\\n    docker-maven-download confluent kafka-connect-avro-data \"$CONFLUENT_VERSION\" 5dc1111ccc4dc9c57397a2c298e6a221 && \\\n    docker-maven-download confluent kafka-avro-serializer \"$CONFLUENT_VERSION\" 5bb0c8078919e5aed55e9b59323a661e && \\\n    docker-maven-download confluent kafka-schema-serializer \"$CONFLUENT_VERSION\" 907f384780d9b75e670e6a5f4f522873 && \\\n    docker-maven-download confluent kafka-schema-registry-client \"$CONFLUENT_VERSION\" 727ef72bcc04c7a8dbf2439edf74ed38 && \\\n    docker-maven-download confluent common-config \"$CONFLUENT_VERSION\" 0cfba1fc7203305ed25bd67b29b6f094 && \\\n    docker-maven-download confluent common-utils \"$CONFLUENT_VERSION\" a940fcd0449613f956127f16cdea9935 && \\\n    docker-maven-download central org/apache/avro avro \"$AVRO_VERSION\" cb70195f70f52b27070f9359b77690bb && \\\n    docker-maven-download apicurio \"$APICURIO_VERSION\" d83ae6a83c42a2da084265d41188bbc7\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"start\"]\n"
}