{
  "startTime": 1674253693461,
  "endTime": 1674253694798,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 41,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fabric8/java-centos-openjdk11-jdk\n\nLABEL maintainer=\"Debezium Community\"\n\n#\n# Set the version, home directory, and SHA hash.\n# SHA 512 hash from https://www.apache.org/dist/zookeeper/zookeeper-$ZK_VERSION/zookeeper-$ZK_VERSION.tar.gz.sha512\n#\nENV ZK_VERSION=3.5.9 \\\n    ZK_HOME=/zookeeper \\\n    SHA256HASH=0e5a64713abc6f36d961dd61a06f681868171a9d9228366e512a01324806d263e05508029c94d8e18307811867cdc39d848e736c252bf56c461273ef74c66a45\nENV ZK_URL_PATH=zookeeper/zookeeper-$ZK_VERSION/apache-zookeeper-$ZK_VERSION-bin.tar.gz\n\n#\n# Create a user and home directory for Zookeeper\n#\nUSER root\nRUN groupadd -r zookeeper -g 1001 && \\\n    useradd -u 1001 -r -g zookeeper -m -d $ZK_HOME -s /sbin/nologin -c \"Zookeeper user\" zookeeper && \\\n    chmod 755 $ZK_HOME\n\n#\n# Change ownership and switch user\n#\nRUN chown -R zookeeper $ZK_HOME && \\\n    chgrp -R zookeeper $ZK_HOME\nUSER zookeeper\n\nRUN mkdir $ZK_HOME/data && \\\n    mkdir $ZK_HOME/txns && \\\n    mkdir $ZK_HOME/logs\n\n#\n# Download and install Zookeeper\n#\nRUN curl -fSL -o /tmp/zookeeper.tar.gz $( curl -f --stderr /dev/null https://www.apache.org/dyn/closer.cgi\\?as_json\\=1 | sed -rn 's/.*\"preferred\":.*\"(.*)\"/\\1/p')$ZK_URL_PATH || curl -fSL -o /tmp/zookeeper.tgz https://archive.apache.org/dist/$ZK_URL_PATH\n#RUN curl -fSL -o /tmp/zookeeper.tar.gz https://archive.apache.org/dist/$ZK_URL_PATH\n\n#\n# Verify the contents and then install ...\n#\nRUN echo \"$SHA256HASH /tmp/zookeeper.tar.gz\" | sha512sum -c - &&\\\n    tar -xzf /tmp/zookeeper.tar.gz -C $ZK_HOME --strip-components 1 &&\\\n    rm -f /tmp/zookeeper.tar.gz\n\n# Remove unnecessary files\nRUN rm -r $ZK_HOME/docs\n\n#\n# Allow random UID to use Zookeeper\n#\nRUN chmod -R g+w,o+w $ZK_HOME\n\n# Set the working directory to the Zookeeper home directory\nWORKDIR $ZK_HOME\n\n#\n# Customize the Zookeeper and Log4J configuration files\n#\nCOPY ./zoo.cfg $ZK_HOME/conf/zoo.cfg\nRUN sed -i -r -e \"s|(\\\\$\\\\{zookeeper.log.dir\\\\})|$ZK_HOME/logs|g\" \\\n              -e \"s|(\\\\$\\\\{zookeeper.tracelog.dir\\\\})|$ZK_HOME/logs|g\" \\\n              -e \"s|(\\\\$\\\\{zookeeper.log.file\\\\})|zookeeper.log|g\" \\\n              -e \"s|(\\\\$\\\\{zookeeper.tracelog.file\\\\})|zookeeper_trace.log|g\" \\\n              -e \"s|(\\[myid\\:\\%X\\{myid\\}\\]\\s?)||g\" \\\n              -e 's|#(log4j.appender.ROLLINGFILE.MaxBackupIndex.*)|\\1|g' \\\n              $ZK_HOME/conf/log4j.properties\nRUN mkdir $ZK_HOME/conf.orig && mv $ZK_HOME/conf/* $ZK_HOME/conf.orig\n\n#\n# Expose the ports and set up volumes for the data, transaction log, and configuration\n#\nEXPOSE 2181 2888 3888\nVOLUME [\"/zookeeper/data\",\"/zookeeper/txns\",\"/zookeeper/conf\"]\n\nCOPY ./docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"start\"]\n"
}