{
  "startTime": 1674246754848,
  "endTime": 1674246755662,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM docker:19.03.8-dind\n\nARG DOCKER_COMPOSE_VERSION=\"1.27.4\"\nARG DOCKER_BUILDX_VERSION=\"v0.4.2\"\nARG NODE_JS_VERSION=\"12.18.4\"\nARG YARN_VERSION=\"1.22.10\"\n\nRUN apk add --no-cache curl bash\n\n# Install Buildx for fast docker builds\nRUN mkdir -p  ~/.docker/cli-plugins \\\n    && curl -fsSL \"https://github.com/docker/buildx/releases/download/$DOCKER_BUILDX_VERSION/buildx-$DOCKER_BUILDX_VERSION.linux-amd64\" --output ~/.docker/cli-plugins/docker-buildx \\\n    && chmod a+x ~/.docker/cli-plugins/docker-buildx\n\n# install docker-compsoe\n# source https://github.com/wernight/docker-compose/blob/master/Dockerfile\nRUN set -x && \\\n    apk add --no-cache -t .deps ca-certificates && \\\n    # Install glibc on Alpine (required by docker-compose) from\n    # https://github.com/sgerrand/alpine-pkg-glibc\n    # See also https://github.com/gliderlabs/docker-alpine/issues/11\n    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub && \\\n    wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.29-r0/glibc-2.29-r0.apk && \\\n    apk add --no-cache glibc-2.29-r0.apk && \\\n    rm glibc-2.29-r0.apk && \\\n    apk del --purge .deps\n\nENV LD_LIBRARY_PATH=/lib:/usr/lib\n\nRUN set -x && \\\n    apk add --no-cache -t .deps ca-certificates && \\\n    # Required dependencies.\n    apk add --no-cache zlib libgcc && \\\n    wget -q -O /usr/local/bin/docker-compose https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-Linux-x86_64 && \\\n    chmod a+rx /usr/local/bin/docker-compose && \\\n    \\\n    # Clean-up\n    apk del --purge .deps && \\\n    \\\n    # Basic check it works\n    docker-compose version\n\n# source: https://github.com/nvm-sh/nvm/issues/1102#issuecomment-591560924\nRUN apk add --no-cache libstdc++; \\\n    touch \"$HOME/.profile\"; \\\n    curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash; \\\n    echo 'source $HOME/.profile;' >> $HOME/.zshrc; \\\n    echo 'export NVM_NODEJS_ORG_MIRROR=https://unofficial-builds.nodejs.org/download/release;' >> $HOME/.profile; \\\n    echo 'nvm_get_arch() { nvm_echo \"x64-musl\"; }' >> $HOME/.profile; \\\n    NVM_DIR=\"$HOME/.nvm\"; source $HOME/.nvm/nvm.sh; source $HOME/.profile; \\\n    nvm install $NODE_JS_VERSION; \\\n    npm install -g \"yarn@$YARN_VERSION\" && npm cache clean --force;\n\nWORKDIR /usr/app\n\nCOPY src/ .\n\nCMD [\"/usr/app/run-test.sh\"]\n"
}