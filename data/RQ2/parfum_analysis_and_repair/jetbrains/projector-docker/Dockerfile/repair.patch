diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jetbrains/projector-docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jetbrains/projector-docker/Dockerfile/repaired.Dockerfile
index c1a9049..7373675 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/jetbrains/projector-docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/jetbrains/projector-docker/Dockerfile/repaired.Dockerfile
@@ -18,7 +18,7 @@ FROM debian AS ideDownloader
 
 # prepare tools:
 RUN apt-get update
-RUN apt-get install wget -y
+RUN apt-get install --no-install-recommends wget -y && rm -rf /var/lib/apt/lists/*;
 # download IDE to the /ide dir:
 WORKDIR /download
 ARG downloadUrl
@@ -41,7 +41,7 @@ FROM debian AS projectorStaticFiles
 
 # prepare tools:
 RUN apt-get update
-RUN apt-get install unzip -y
+RUN apt-get install --no-install-recommends unzip -y && rm -rf /var/lib/apt/lists/*;
 # create the Projector dir:
 ENV PROJECTOR_DIR /projector
 RUN mkdir -p $PROJECTOR_DIR
@@ -68,12 +68,12 @@ RUN true \
    && set -x \
 # install packages:
     && apt-get update \
-# packages for awt:
-    && apt-get install libxext6 libxrender1 libxtst6 libxi6 libfreetype6 -y \
+# packages for awt: \
+    && apt-get install --no-install-recommends libxext6 libxrender1 libxtst6 libxi6 libfreetype6 -y \
 # packages for user convenience:
-    && apt-get install git bash-completion sudo -y \
+    && apt-get install --no-install-recommends git bash-completion sudo -y \
 # packages for IDEA (to disable warnings):
-    && apt-get install procps -y \
+    && apt-get install --no-install-recommends procps -y \
 # clean apt to reduce image size:
     && rm -rf /var/lib/apt/lists/* \
     && rm -rf /var/cache/apt
@@ -87,9 +87,12 @@ RUN true \
     && set -x \
 # install specific packages for IDEs:
     && apt-get update \
-    && if [ "${downloadUrl#*CLion}" != "$downloadUrl" ]; then apt-get install build-essential clang -y; else echo "Not CLion"; fi \
-    && if [ "${downloadUrl#*pycharm}" != "$downloadUrl" ]; then apt-get install python2 python3 python3-distutils python3-pip python3-setuptools -y; else echo "Not pycharm"; fi \
-    && if [ "${downloadUrl#*rider}" != "$downloadUrl" ]; then apt install apt-transport-https dirmngr gnupg ca-certificates -y && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && echo "deb https://download.mono-project.com/repo/debian stable-buster main" | tee /etc/apt/sources.list.d/mono-official-stable.list && apt update && apt install mono-devel -y && apt install wget -y && wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && apt-get update && apt-get install -y apt-transport-https && apt-get update && apt-get install -y dotnet-sdk-3.1 aspnetcore-runtime-3.1; else echo "Not rider"; fi \
+    && if [ "${downloadUrl#*CLion}" != "$downloadUrl" ]; then \
+    apt-get install --no-install-recommends build-essential clang -y; else echo "Not CLion"; fi \
+    && if [ "${downloadUrl#*pycharm}" != "$downloadUrl" ]; then \
+    apt-get install --no-install-recommends python2 python3 python3-distutils python3-pip python3-setuptools -y; else echo "Not pycharm"; fi \
+    && if [ "${downloadUrl#*rider}" != "$downloadUrl" ]; then \
+    apt install --no-install-recommends apt-transport-https dirmngr gnupg ca-certificates -y && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && echo "deb https://download.mono-project.com/repo/debian stable-buster main" | tee /etc/apt/sources.list.d/mono-official-stable.list && apt update && apt install --no-install-recommends mono-devel -y && apt install --no-install-recommends wget -y && wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && apt-get update && apt-get install --no-install-recommends -y apt-transport-https && apt-get update && apt-get install --no-install-recommends -y dotnet-sdk-3.1 aspnetcore-runtime-3.1; else echo "Not rider"; fi \
 # clean apt to reduce image size:
     && rm -rf /var/lib/apt/lists/* \
     && rm -rf /var/cache/apt