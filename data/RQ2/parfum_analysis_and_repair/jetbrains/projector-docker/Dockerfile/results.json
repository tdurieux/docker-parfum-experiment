{
  "startTime": 1674249372206,
  "endTime": 1674249373572,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 62,
        "columnEnd": 103
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 64,
        "columnEnd": 148
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 62,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 389,
        "columnEnd": 414
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 418,
        "columnEnd": 437
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 647,
        "columnEnd": 685
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 707,
        "columnEnd": 763
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedDockerfile": "#\n# Copyright 2019-2020 JetBrains s.r.o.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\nFROM debian AS ideDownloader\n\n# prepare tools:\nRUN apt-get update\nRUN apt-get install --no-install-recommends wget -y && rm -rf /var/lib/apt/lists/*;\n# download IDE to the /ide dir:\nWORKDIR /download\nARG downloadUrl\nRUN wget -q $downloadUrl -O - | tar -xz\nRUN find . -maxdepth 1 -type d -name * -execdir mv {} /ide \\;\n\nFROM amazoncorretto:11 as projectorGradleBuilder\n\nENV PROJECTOR_DIR /projector\n\n# projector-server:\nADD projector-server $PROJECTOR_DIR/projector-server\nWORKDIR $PROJECTOR_DIR/projector-server\nARG buildGradle\nRUN if [ \"$buildGradle\" = \"true\" ]; then ./gradlew clean; else echo \"Skipping gradle build\"; fi\nRUN if [ \"$buildGradle\" = \"true\" ]; then ./gradlew :projector-server:distZip; else echo \"Skipping gradle build\"; fi\nRUN cd projector-server/build/distributions && find . -maxdepth 1 -type f -name projector-server-*.zip -exec mv {} projector-server.zip \\;\n\nFROM debian AS projectorStaticFiles\n\n# prepare tools:\nRUN apt-get update\nRUN apt-get install --no-install-recommends unzip -y && rm -rf /var/lib/apt/lists/*;\n# create the Projector dir:\nENV PROJECTOR_DIR /projector\nRUN mkdir -p $PROJECTOR_DIR\n# copy IDE:\nCOPY --from=ideDownloader /ide $PROJECTOR_DIR/ide\n# copy projector files to the container:\nADD projector-docker/static $PROJECTOR_DIR\n# copy projector:\nCOPY --from=projectorGradleBuilder $PROJECTOR_DIR/projector-server/projector-server/build/distributions/projector-server.zip $PROJECTOR_DIR\n# prepare IDE - apply projector-server:\nRUN unzip $PROJECTOR_DIR/projector-server.zip\nRUN rm $PROJECTOR_DIR/projector-server.zip\nRUN find . -maxdepth 1 -type d -name projector-server-* -exec mv {} projector-server \\;\nRUN mv projector-server $PROJECTOR_DIR/ide/projector-server\nRUN mv $PROJECTOR_DIR/ide-projector-launcher.sh $PROJECTOR_DIR/ide/bin\nRUN chmod 644 $PROJECTOR_DIR/ide/projector-server/lib/*\n\nFROM debian:10\n\nRUN true \\\n# Any command which returns non-zero exit code will cause this shell script to exit immediately:\n   && set -e \\\n# Activate debugging to show execution details: all commands will be printed before execution\n   && set -x \\\n# install packages:\n    && apt-get update \\\n# packages for awt: \\\n    && apt-get install --no-install-recommends libxext6 libxrender1 libxtst6 libxi6 libfreetype6 -y \\\n# packages for user convenience:\n    && apt-get install --no-install-recommends git bash-completion sudo -y \\\n# packages for IDEA (to disable warnings):\n    && apt-get install --no-install-recommends procps -y \\\n# clean apt to reduce image size:\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt\n\nARG downloadUrl\n\nRUN true \\\n# Any command which returns non-zero exit code will cause this shell script to exit immediately:\n    && set -e \\\n# Activate debugging to show execution details: all commands will be printed before execution\n    && set -x \\\n# install specific packages for IDEs:\n    && apt-get update \\\n    && if [ \"${downloadUrl#*CLion}\" != \"$downloadUrl\" ]; then \\\n    apt-get install --no-install-recommends build-essential clang -y; else echo \"Not CLion\"; fi \\\n    && if [ \"${downloadUrl#*pycharm}\" != \"$downloadUrl\" ]; then \\\n    apt-get install --no-install-recommends python2 python3 python3-distutils python3-pip python3-setuptools -y; else echo \"Not pycharm\"; fi \\\n    && if [ \"${downloadUrl#*rider}\" != \"$downloadUrl\" ]; then \\\n    apt install --no-install-recommends apt-transport-https dirmngr gnupg ca-certificates -y && apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF && echo \"deb https://download.mono-project.com/repo/debian stable-buster main\" | tee /etc/apt/sources.list.d/mono-official-stable.list && apt update && apt install --no-install-recommends mono-devel -y && apt install --no-install-recommends wget -y && wget https://packages.microsoft.com/config/debian/10/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && dpkg -i packages-microsoft-prod.deb && rm packages-microsoft-prod.deb && apt-get update && apt-get install --no-install-recommends -y apt-transport-https && apt-get update && apt-get install --no-install-recommends -y dotnet-sdk-3.1 aspnetcore-runtime-3.1; else echo \"Not rider\"; fi \\\n# clean apt to reduce image size:\n    && rm -rf /var/lib/apt/lists/* \\\n    && rm -rf /var/cache/apt\n\n# copy the Projector dir:\nENV PROJECTOR_DIR /projector\nCOPY --from=projectorStaticFiles $PROJECTOR_DIR $PROJECTOR_DIR\n\nENV PROJECTOR_USER_NAME projector-user\n\nRUN true \\\n# Any command which returns non-zero exit code will cause this shell script to exit immediately:\n    && set -e \\\n# Activate debugging to show execution details: all commands will be printed before execution\n    && set -x \\\n# move run scipt:\n    && mv $PROJECTOR_DIR/run.sh run.sh \\\n# change user to non-root (http://pjdietz.com/2016/08/28/nginx-in-docker-without-root.html):\n    && mv $PROJECTOR_DIR/$PROJECTOR_USER_NAME /home \\\n    && useradd -d /home/$PROJECTOR_USER_NAME -s /bin/bash -G sudo $PROJECTOR_USER_NAME \\\n    && echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers \\\n    && chown -R $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME /home/$PROJECTOR_USER_NAME \\\n    && chown -R $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME $PROJECTOR_DIR/ide/bin \\\n    && chown $PROJECTOR_USER_NAME.$PROJECTOR_USER_NAME run.sh\n\nUSER $PROJECTOR_USER_NAME\nENV HOME /home/$PROJECTOR_USER_NAME\n\nEXPOSE 8887\n\nCMD [\"bash\", \"-c\", \"/run.sh\"]\n"
}