{
  "startTime": 1674217967806,
  "endTime": 1674217968694,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 58,
        "columnEnd": 74
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 58,
        "columnEnd": 74
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "FROM node:erbium-alpine as builder\nENV HOME /usr/src/\nENV NODE_ENV production\nARG REACT_APP_AUTH0_DOMAIN\nARG REACT_APP_AUTH0_CLIENT_ID\nARG REACT_APP_AUTH0_AUDIENCE\nENV REACT_APP_AUTH0_DOMAIN=${REACT_APP_AUTH0_DOMAIN}\nENV REACT_APP_AUTH0_CLIENT_ID=${REACT_APP_AUTH0_CLIENT_ID}\nENV REACT_APP_AUTH0_AUDIENCE=${REACT_APP_AUTH0_AUDIENCE}\nWORKDIR $HOME\n\n# copy the tarballs\nCOPY [\"api/yarn-offline-mirror\", \"$HOME/api/yarn-offline-mirror/\"]\n\n# copy the tarballs\nCOPY [\"client/yarn-offline-mirror\", \"$HOME/client/yarn-offline-mirror/\"]\n\n# copy files needed for the install\nCOPY [\"api/package.json\", \"api/yarn.lock\", \"api/.yarnrc\", \"$HOME/api/\"]\n\n# copy files needed for the install\nCOPY [\"client/package.json\", \"client/yarn.lock\", \"client/.yarnrc\", \"$HOME/client/\"]\n\nWORKDIR $HOME/api\n\n# the offline flag will mean that an error is raised if any\n# module needs to be fetched remotely. It can be removed to allow\n# yarn to fetch any missing modules if that was to happen.\nRUN yarn --offline --frozen-lockfile --production=true && yarn cache clean;\n\nWORKDIR $HOME/client\n\n# copy files needed for the install\nCOPY [\"client/src/styles.scss\", \"$HOME/client/src/\"]\n\n# the offline flag will mean that an error is raised if any\n# module needs to be fetched remotely. It can be removed to allow\n# yarn to fetch any missing modules if that was to happen.\nRUN yarn --offline --frozen-lockfile --production=true && yarn cache clean;\n\n# copy the rest.. could be further broken up into multiple instructions\n# for cache optimisation\nCOPY ./client/  $HOME/client/\n\n# Build\nRUN yarn build && yarn cache clean;\n\nFROM node:erbium-alpine\nENV HOME /usr/src/\nENV NODE_ENV production\nWORKDIR $HOME\n\nRUN npm install -g nodemon && npm cache clean --force;\n\n# copy api node_modules\nCOPY --from=builder $HOME/api/node_modules $HOME/node_modules\n\n# copy build dir of react app\nCOPY --from=builder $HOME/client/build $HOME/build\n\n# copy api code\nCOPY ./api/  $HOME/\n\nEXPOSE 5000\n\nENTRYPOINT [ \"nodemon\", \"server.js\" ]\n"
}