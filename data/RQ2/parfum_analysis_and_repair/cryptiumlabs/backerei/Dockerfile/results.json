{
  "startTime": 1674218158227,
  "endTime": 1674218159332,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 13,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine@sha256:c19173c5ada610a5989151111163d28a67368362762534d8a8121ce95cf2bd5a AS base\n\nRUN apk update && \\\n    apk add --no-cache bash perl alpine-sdk wget curl libc-dev xz\n\n\n################################################################################\n# Intermediate layer that assembles 'stack' tooling\nFROM base AS stack\n\nENV STACK_VERSION=1.9.3\nENV STACK_SHA256=\"c9bf6d371b51de74f4bfd5b50965966ac57f75b0544aebb59ade22195d0b7543  stack-${STACK_VERSION}-linux-x86_64-static.tar.gz\"\n\nRUN echo \"Downloading  stack\" && \\\n    cd /tmp && \\\n    wget -P /tmp/ \"https://github.com/commercialhaskell/stack/releases/download/v${STACK_VERSION}/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz\" && \\\n    if ! echo -n \"${STACK_SHA256}\" | sha256sum -c -; then \\\n        echo \"stack-${STACK_VERSION} checksum failed\" >&2 &&\\\n        exit 1 ;\\\n    fi; \\\n    tar -xvzf /tmp/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz &&\\\n    cp -L /tmp/stack-${STACK_VERSION}-linux-x86_64-static/stack /usr/bin/stack &&\\\n    rm /tmp/stack-${STACK_VERSION}-linux-x86_64-static.tar.gz &&\\\n    rm -rf /tmp/stack-${STACK_VERSION}-linux-x86_64-static\n################################################################################\n\n\nFROM stack as stack_intermediate\n\nENV GHC_VERSION=8.4.4\nENV GHC_INSTALL_PATH=/opt/ghc\n\nRUN wget https://github.com/redneb/ghc-alt-libc/releases/download/ghc-${GHC_VERSION}-musl/ghc-${GHC_VERSION}-x86_64-unknown-linux-musl.tar.xz && \\\n    tar xf ghc-${GHC_VERSION}-x86_64-unknown-linux-musl.tar.xz && rm ghc-${GHC_VERSION}-x86_64-unknown-linux-musl.tar.xz\n\nRUN apk update && \\\n    apk add --no-cache bash perl alpine-sdk wget make curl git libc-dev xz coreutils zlib-dev shadow gmp-dev\n\n\nWORKDIR ghc-${GHC_VERSION}\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${GHC_INSTALL_PATH} && \\\n        make install\n\nENV PATH=${GHC_INSTALL_PATH}/bin:$PATH\n\nCOPY --from=stack /usr/bin/stack /usr/bin/stack\nRUN stack config set system-ghc --global true\nRUN mkdir /build\nCOPY . /build\nRUN cd /build && make build && make install\n\nFROM tezos/tezos:mainnet\nCOPY --from=stack_intermediate /root/.local/bin/backerei /home/tezos\nWORKDIR /home/tezos\nENTRYPOINT [\"./backerei\"]\n"
}