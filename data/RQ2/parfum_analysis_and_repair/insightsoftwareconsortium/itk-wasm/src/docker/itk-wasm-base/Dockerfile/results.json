{
  "startTime": 1674251911575,
  "endTime": 1674251912916,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=dockcross/web-wasm\nFROM $BASE_IMAGE:20220705-d45d925\nARG BASE_IMAGE\n\nLABEL maintainer=\"Matt McCormick <matt.mccormick@kitware.com>\"\nLABEL org.opencontainers.image.source=\"https://github.com/InsightSoftwareConsortium/itk-wasm\"\n\nWORKDIR /\n\n# 2022-07-02 master branch\nENV ITK_GIT_TAG 7e35b6443f7bec2aa74d439d066881971f5590db\nRUN git clone https://github.com/thewtex/ITK.git && \\\n  cd ITK && \\\n  git checkout ${ITK_GIT_TAG} && \\\n  cd ../ && \\\n  sed -i -e '/^option(OPJ_USE_THREAD/c\\option(OPJ_USE_THREAD \"use threads\" OFF)' \\\n    /ITK/Modules/ThirdParty/GDCM/src/gdcm/Utilities/gdcmopenjpeg/src/lib/openjp2/CMakeLists.txt\nARG CMAKE_BUILD_TYPE=Release\n\nARG LDFLAGS\nARG CFLAGS\nARG CXXFLAGS\nENV LDFLAGS=${LDFLAGS:-\"-flto -s ALLOW_MEMORY_GROWTH=1\"}\nENV CFLAGS=${CFLAGS:-\"-flto -Wno-warn-absolute-paths\"}\nENV CXXFLAGS=${CXXFLAGS:-\"${CFLAGS}\"}\n\nRUN mkdir ITK-build && \\\n  cd ITK-build && \\\n  cmake \\\n    -G Ninja \\\n    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE} \\\n    -DCMAKE_CXX_STANDARD:STRING=17 \\\n    -DCMAKE_INSTALL_PREFIX:PATH=/usr \\\n    -DCMAKE_BUILD_TYPE:STRING=$CMAKE_BUILD_TYPE \\\n    -DBUILD_EXAMPLES:BOOL=OFF \\\n    -DBUILD_TESTING:BOOL=OFF \\\n    -DITK_LEGACY_REMOVE:BOOL=ON \\\n    -DITK_BUILD_DEFAULT_MODULES:BOOL=ON \\\n    -DITKGroup_IO:BOOL=ON \\\n    -DH5_HAVE_GETPWUID:BOOL=OFF \\\n    -DModule_ITKIOMINC:BOOL=ON \\\n    -DModule_MGHIO:BOOL=ON \\\n    -DModule_IOMeshSWC:BOOL=ON \\\n    -DModule_IOScanco:BOOL=ON \\\n    -DModule_IOFDF:BOOL=ON \\\n    -DModule_ITKImageFunction:BOOL=ON \\\n    -DModule_SmoothingRecursiveYvvGaussianFilter:BOOL=ON \\\n    -DModule_MorphologicalContourInterpolation:BOOL=ON \\\n    -DModule_Cuberille:BOOL=ON \\\n    -DModule_TotalVariation:BOOL=ON \\\n    -DModule_IOMeshSTL:BOOL=ON \\\n    -DModule_GenericLabelInterpolator:BOOL=ON \\\n    -DDO_NOT_BUILD_ITK_TEST_DRIVER:BOOL=ON \\\n    -DOPJ_USE_THREAD:BOOL=OFF \\\n    ../ITK && \\\n  ninja && \\\n  find . -name '*.o' -delete && \\\n  cd .. && chmod -R 777 ITK-build\n\nENV ITKMeshToPolyData_GIT_TAG 1e594b7437a43be348b0ccea827c66fb5aa13e1f\nRUN git clone https://github.com/InsightSoftwareConsortium/ITKMeshToPolyData.git && \\\n  cd ITKMeshToPolyData && \\\n  git checkout ${ITKMeshToPolyData_GIT_TAG} && \\\n  cd / && \\\n  mkdir ITKMeshToPolyData-build && \\\n  cd ITKMeshToPolyData-build && \\\n  cmake \\\n    -G Ninja \\\n    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE} \\\n    -DCMAKE_CXX_STANDARD:STRING=17 \\\n    -DCMAKE_INSTALL_PREFIX:PATH=/usr \\\n    -DCMAKE_BUILD_TYPE:STRING=$CMAKE_BUILD_TYPE \\\n    -DBUILD_TESTING:BOOL=OFF \\\n    -DITK_DIR:PATH=/ITK-build \\\n    ../ITKMeshToPolyData && \\\n  ninja && \\\n  find . -name '*.o' -delete && \\\n  cd .. && chmod -R 777 ITK-build\n\nENV IPFS_TAG v0.10.0\nRUN curl -f -LO https://github.com/ipfs/go-ipfs/releases/download/${IPFS_TAG}/go-ipfs_${IPFS_TAG}_linux-amd64.tar.gz && \\\n  tar xvzf go-ipfs_${IPFS_TAG}_linux-amd64.tar.gz && \\\n  cp go-ipfs/ipfs /usr/local/bin/ && \\\n  rm -rf go-ipfs && rm go-ipfs_${IPFS_TAG}_linux-amd64.tar.gz\nENV IPFS_PATH /home/ipfs/.ipfs\nRUN mkdir -p $IPFS_PATH && \\\n ipfs init && \\\n chmod -R 777 $IPFS_PATH\n\n# Build-time metadata as defined at http://label-schema.org\nARG BUILD_DATE\nARG IMAGE=itkwasm/base\nARG VERSION=latest\nARG VCS_REF\nARG VCS_URL\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.name=$IMAGE \\\n      org.label-schema.version=$VERSION \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.schema-version=\"1.0\"\nENV DEFAULT_DOCKCROSS_IMAGE ${IMAGE}:${VERSION}\nWORKDIR /work\n"
}