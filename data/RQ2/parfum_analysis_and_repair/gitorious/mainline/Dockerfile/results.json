{
  "startTime": 1674255895593,
  "endTime": 1674255896328,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 2,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Marcin Kulik\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get -y update\n\n# install required packages\nRUN apt-get -y --no-install-recommends install git build-essential libmysqlclient-dev libxml2-dev \\\n  libxslt1-dev libreadline6 libicu-dev imagemagick nodejs sudo mysql-client \\\n  nginx cmake pkg-config sphinxsearch && rm -rf /var/lib/apt/lists/*;\n\n# install Ruby 2.0 and make it a default Ruby\nRUN apt-get install --no-install-recommends -y ruby2.0 ruby2.0-dev && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN rm /usr/bin/ruby /usr/bin/gem /usr/bin/irb /usr/bin/erb && \\\n  ln -s /usr/bin/ruby2.0 /usr/bin/ruby && \\\n  ln -s /usr/bin/gem2.0 /usr/bin/gem && \\\n  ln -s /usr/bin/irb2.0 /usr/bin/irb && \\\n  ln -s /usr/bin/erb2.0 /usr/bin/erb && \\\n  gem update --system && gem pristine --all && rm -rf /root/.gem;\n\n# install bundler\nRUN gem install bundler --no-rdoc --no-ri\n\n# create directory for app files\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# add Gemfile first and run `bundle install` system-wide so bundle result can be cached\nADD Gemfile /usr/src/app/\nADD Gemfile.lock /usr/src/app/\nRUN bundle install --system --without postgres --jobs 4\n\n# now add the rest of the app to the image\nADD . /usr/src/app\n\n# make sure all Rails processes run in production env by default\nENV RAILS_ENV production\n\n# build assets\nRUN bundle exec rake assets:precompile\nRUN git submodule update --recursive --init\n\n# put revision (git sha) and version (tag + sha) into public/\nRUN git rev-parse HEAD >public/REVISION && git describe --tags HEAD >public/VERSION\n\n# add git user (with uid matching the uid of git user on the host)\nRUN useradd -m -d /home/git -u 5000 -U git\n\n# own app files to git so it can write to config, log and tmp when container is run as git\nRUN chown -R git:git /usr/src/app\n\nRUN ln -sf /usr/src/app/config/docker/nginx/nginx.conf /etc/nginx/nginx.conf\n\nEXPOSE 3000\nEXPOSE 80\nEXPOSE 9312\n\nENTRYPOINT [\"/usr/src/app/bin/docker/run\"]\n\nCMD [\"bundle\", \"exec\", \"unicorn\", \"-c\", \"config/unicorn.rb\"]\n"
}