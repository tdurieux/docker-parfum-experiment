{
  "startTime": 1674250838642,
  "endTime": 1674250839225,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 43,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Good base image to start from for most development\nFROM python:3.8-slim\n\n# Please remember, the base image we use /must be as small as possible/ for the best\n# production deployments. This is not optional.\n\nWORKDIR /workspace\n\n# Allows python to stream logs rather than buffer them for output.\nENV PYTHONUNBUFFERED=1\n\n# The official Debian/Ubuntu Docker Image automatically removes the cache by default!\n# Removing the docker-clean file manages that issue.\nRUN rm -rf /etc/apt/apt.conf.d/docker-clean\n\nCOPY ./bin/builds/ .\n\n# Apt-get install packages here since we're using Debian as a root OS for this particular Dockerfile.\nRUN --mount=type=cache,target=/var/cache/apt ./install_packages \\\n    dumb-init \\\n    tk \\\n    libgl1-mesa-glx \\\n    libglib2.0-0 \\\n    imagemagick\n\n\n# Install pip packages\nENV PATH=/root/.local/bin:$PATH\nCOPY requirements.txt .\nRUN --mount=type=cache,target=/root/.cache pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir -r requirements.txt\n\n# Switch to non-root user\nRUN useradd -m appuser && chown -R appuser /workspace\nUSER appuser\n\n# Copy project files\nCOPY src/api ./api\nCOPY freemocap ./freemocap\nCOPY ./bin ./bin\nCOPY ./src ./src\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\nCMD [\"./bin/run_web_server.sh\"]\n"
}