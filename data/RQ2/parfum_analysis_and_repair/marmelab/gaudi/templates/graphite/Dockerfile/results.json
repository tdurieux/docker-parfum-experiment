{
  "startTime": 1674253758384,
  "endTime": 1674253759320,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 171
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 177
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 177
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 177
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 199
      }
    }
  ],
  "repairedDockerfile": "# @see hopsoft/graphite-statsd\nFROM stackbrew/debian:wheezy\n\n[[ updateApt ]]\n[[ addUserFiles ]]\n\nWORKDIR [[ .Container.GetFirstMountedDir ]]\n\nRUN apt-get -y --no-install-recommends --force-yes install vim nginx python-flup expect git memcached sqlite3 libcairo2 libcairo2-dev python-cairo pkg-config build-essential python-dev libsqlite3-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -P /opt https://python-distribute.org/distribute_setup.py\nRUN python /opt/distribute_setup.py\nRUN easy_install pip\n\nRUN pip install --no-cache-dir django==1.3 whisper==0.9.12 carbon graphite-web django-tagging==0.3.1 pysqlite flup daemonize gunicorn twisted==11.1.0 python-memcached==1.53 txAMQP==0.6.2\n\n# Configure graphite\nRUN mv /opt/graphite/conf/carbon.conf.example /opt/graphite/conf/carbon.conf\nRUN mv /opt/graphite/conf/storage-schemas.conf.example /opt/graphite/conf/storage-schemas.conf\nRUN mv /opt/graphite/conf/aggregation-rules.conf.example /opt/graphite/conf/aggregation-rules.conf\nRUN mv /opt/graphite/conf/dashboard.conf.example /opt/graphite/conf/dashboard.conf\nRUN mv /opt/graphite/conf/graphTemplates.conf.example /opt/graphite/conf/graphTemplates.conf\nRUN mv /opt/graphite/conf/graphite.wsgi.example /opt/graphite/conf/graphite.wsgi\nRUN mv /opt/graphite/webapp/graphite/local_settings.py.example /opt/graphite/webapp/graphite/local_settings.py\nRUN echo \"\\n\\n[stats]\\npattern = ^stats.*\\nretentions = 10s:6h,1min:6d,10min:1800d\" >> /opt/graphite/conf/storage-schemas.conf\n\n# Create locations for pid/log files\nRUN mkdir -p /var/run/graphite && chown www-data /var/run/graphite\nRUN mkdir -p /var/log/carbon && chown www-data /var/log/carbon\n\n# Initialize the webapp\nsed -i -e \"s|#SECRET_KEY = 'UNSAFE_DEFAULT'|SECRET_KEY = 'OJNOKdsqds!d987ยง8'|\" /opt/graphite/webapp/graphite/local_settings.py\nADD ./graphite_syncdb /tmp/graphite_syncdb\nRUN chmod 775 /tmp/graphite_syncdb\nRUN /tmp/graphite_syncdb\n\n# Add custom setup script\n[[ beforeAfterScripts ]]\n\nADD ./nginx.conf /etc/nginx/nginx.conf\n\n[[ if .EmptyCmd]]\nCMD /bin/bash\n[[ else ]]\nCMD /opt/graphite/bin/carbon-cache.py --debug start & \\\n\tgunicorn_django -b127.0.0.1:8000 -w2 /opt/graphite/webapp/graphite/settings.py & \\\n\t/usr/sbin/nginx & \\\n\t/bin/bash\n[[ end ]]\n"
}