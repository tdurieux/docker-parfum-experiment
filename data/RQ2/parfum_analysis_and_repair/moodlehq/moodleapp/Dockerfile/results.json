{
  "startTime": 1674248165869,
  "endTime": 1674248166455,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## BUILD STAGE\nFROM node:14 as build-stage\n\nWORKDIR /app\n\n# Prepare node dependencies\nRUN apt-get update && apt-get install --no-install-recommends libsecret-1-0 -y && rm -rf /var/lib/apt/lists/*;\nCOPY package*.json ./\nRUN npm install -g npm@7 && npm cache clean --force;\nRUN npm ci --no-audit\n\n# Build source\nARG build_command=\"npm run build:prod\"\nCOPY . /app\nRUN ${build_command}\n\n## SERVE STAGE\nFROM nginx:alpine as serve-stage\n\n# Copy assets & config\nCOPY --from=build-stage /app/www /usr/share/nginx/html\nCOPY ./nginx.conf /etc/nginx/conf.d/default.conf\nHEALTHCHECK --interval=10s --timeout=4s CMD curl -f http://localhost/assets/env.json || exit 1\n"
}