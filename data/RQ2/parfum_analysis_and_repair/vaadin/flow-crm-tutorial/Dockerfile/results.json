{
  "startTime": 1674250741158,
  "endTime": 1674250742070,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 26,
        "columnEnd": 76
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Stage that builds the application, a prerequisite for the running stage\nFROM maven:3-openjdk-16-slim as build\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get update -qq && apt-get install -y -qq --no-install-recommends nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Stop running as root at this point\nRUN useradd -m myuser\nWORKDIR /usr/src/app/\nRUN chown myuser:myuser /usr/src/app/\nUSER myuser\n\n# Copy pom.xml and prefetch dependencies so a repeated build can continue from the next step with existing dependencies\nCOPY --chown=myuser pom.xml ./\nRUN mvn dependency:go-offline -Pproduction\n\n# Copy all needed project files to a folder\nCOPY --chown=myuser:myuser src src\nCOPY --chown=myuser:myuser frontend frontend\nCOPY --chown=myuser:myuser package.json ./\n\n# Using * after the files that are autogenerated so that so build won't fail if they are not yet created\nCOPY --chown=myuser:myuser package-lock.json* pnpm-lock.yaml* webpack.config.js* ./\n\n\n# Build the production package, assuming that we validated the version before so no need for running tests again\nRUN mvn clean package -DskipTests -Pproduction\n\n# Running stage: the part that is used for running the application\nFROM openjdk:16-jdk-slim\nCOPY --from=build /usr/src/app/target/*.jar /usr/app/app.jar\nRUN useradd -m myuser\nUSER myuser\nEXPOSE 8080\nCMD java -jar /usr/app/app.jar\n"
}