{
  "startTime": 1674254115549,
  "endTime": 1674254116421,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install dependencies only when needed\nFROM node:16-alpine AS deps\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\nCOPY package.json yarn.lock ./\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n# Rebuild the source code only when needed\nFROM node:16-alpine AS builder\n\nARG GOOGLE_ANALYTICS_ID=\"\"\nENV NEXT_PUBLIC_GA_ID=$GOOGLE_ANALYTICS_ID\nARG SITE_URL=\"https://myblog.dev\"\nENV NEXT_PUBLIC_SITE_URL=$SITE_URL\n\nWORKDIR /app\n\nCOPY --from=deps /app/node_modules ./node_modules\n\nCOPY . .\n\nRUN yarn build\n\n# Production image, copy all the files and run next\nFROM node:16-alpine AS runner\nWORKDIR /app\n\nENV NODE_ENV production\n\nRUN addgroup --system --gid 1001 bloggroup\nRUN adduser --system --uid 1001 bloguser\n\nCOPY --from=builder /app/public ./public\nCOPY --from=builder /app/package.json ./package.json\n\n# Automatically leverage output traces to reduce image size\n# https://nextjs.org/docs/advanced-features/output-file-tracing\nCOPY --from=builder --chown=bloguser:bloggroup /app/.next/standalone ./\nCOPY --from=builder --chown=bloguser:bloggroup /app/.next/static ./.next/static\n\nUSER bloguser\n\nEXPOSE 3000\n\nENV PORT 3000\n\nCMD [\"node\", \"server.js\"]"
}