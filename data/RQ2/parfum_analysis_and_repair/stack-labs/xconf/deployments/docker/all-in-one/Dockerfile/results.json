{
  "startTime": 1674250338999,
  "endTime": 1674250339467,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 29,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.13-alpine as builder\nWORKDIR /root\nCOPY ./  ./\n\nRUN export GO111MODULE=on && CGO_ENABLED=0 GOOS=linux go build -o build/admin-api admin-api/main.go\nRUN export GO111MODULE=on && CGO_ENABLED=0 GOOS=linux go build -o build/agent-api agent-api/main.go\nRUN export GO111MODULE=on && CGO_ENABLED=0 GOOS=linux go build -o build/config-srv config-srv/main.go\nRUN export GO111MODULE=on && CGO_ENABLED=0 GOOS=linux go build -o build/micro micro/main.go\n\nFROM node:12-alpine as node-builder\nWORKDIR /root\nCOPY dashboard .\nRUN npm rebuild node-sass && npm install && npm run build && npm cache clean --force;\n\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates\nWORKDIR /root\nCOPY --from=builder /root/build/* ./\nCOPY --from=node-builder /root/build dist\nCOPY deployments/docker/all-in-one/start.sh .\nENV DATABASE_URL=\"root:12345@(127.0.0.1:3306)/xconf?charset=utf8&parseTime=true&loc=Local\"\n\nEXPOSE 8080\nENTRYPOINT [\"/root/start.sh\"]\n"
}