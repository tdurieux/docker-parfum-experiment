{
  "startTime": 1674256324883,
  "endTime": 1674256325398,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 33,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 5,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6\nMAINTAINER harumonia\nWORKDIR /Poirot\nUSER root\n\nENV PYTHONFAULTHANDLER=1 \\\n  PYTHONUNBUFFERED=1 \\\n  PYTHONHASHSEED=random \\\n  PIP_NO_CACHE_DIR=off \\\n  PIP_DISABLE_PIP_VERSION_CHECK=on \\\n  PIP_DEFAULT_TIMEOUT=100 \\\n  POETRY_VERSION=1.1.4\n\n# 国内用户可以将source更换为阿里的镜像\n# RUN sed -i s@/deb.debian.org/@/mirrors.aliyun.com/@g /etc/apt/sources.list\nRUN apt-get clean \\\n  && apt-get update -y \\\n  && apt-get -y --no-install-recommends install tesseract-ocr \\\n  && apt-get install --no-install-recommends -y libtesseract-dev \\\n  && apt-get -y --no-install-recommends install tesseract-ocr-chi-sim && rm -rf /var/lib/apt/lists/*;\n\nCOPY pyproject.toml /Poirot/\n\n#-------国内用户可以反转以下语句以提高构建速度-------\nRUN pip install --no-cache-dir --upgrade pip && pip install --no-cache-dir poetry\n# RUN pip install --upgrade pip -i https://pypi.douban.com/simple\n# RUN pip install poetry -i https://pypi.douban.com/simple\n# RUN poetry config repositories.douban https://pypi.douban.com/simple/\n# --------------------END---------------------\n\n# use douban packages when build on local pc, but it will cause a error on docker hub.\nRUN poetry config virtualenvs.create false && poetry install --no-dev --no-interaction --no-ansi\n\n# COPY poetry.lock pyproject.toml /Poirot/\n# RUN poetry config virtualenvs.create false && poetry install --no-dev --no-interaction --no-ansi\n\nCOPY . /Poirot\nRUN mkdir -p /logs/gunicorn/ && chmod 777 /logs/gunicorn/\nENTRYPOINT  [\"gunicorn\", \"app:app\", \"-c\", \"./gunicorn.conf.py\"]\n# ENTRYPOINT [\"flask\",\"run\",\"--host\",\"0.0.0.0\"]\n"
}