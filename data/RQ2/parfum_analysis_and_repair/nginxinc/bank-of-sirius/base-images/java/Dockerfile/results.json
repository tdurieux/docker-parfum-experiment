{
  "startTime": 1674248911603,
  "endTime": 1674248912893,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 F5\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG ARCH=amd64\n\nFROM $ARCH/debian:bullseye-slim\n\nLABEL org.opencontainers.image.source=https://github.com/nginxinc/bank-of-sirius\n\nENV LANG C.UTF-8\nENV PORT 8080\nENV SSL_CERT_FILE /etc/ssl/certs/ca-certificates.crt\nENV JAVA_HOME=/usr/lib/jvm/zulu8\n# Configure the JVM to:\n# 1. Use a non-blocking source of entropy because in containerized environments\n#    blocking sources of entropy can become quickly exhausted.\n# 2. Set the HEAP size dynamically based on the amount of memory specified in\n#    the cgroup memory limit rather than the total memory of the host machine.\n# 3. Set heap size on almost 50% of the total of the memory limit.\nENV JAVA_TOOL_OPTIONS \"-Djava.security.egd=file:/dev/urandom -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:MaxRAMFraction=2\"\n\nCOPY app/log4j2.xml /app/log4j2.xml\n\nRUN set -eux; \\\n    ZULU_REPO_VER=1.0.0-2; \\\n    ZULU_REPO_DEB_CHECKSUM=b8d11979d9b1959b5ff621f1021ff0dba40c7d47d948ae6ec4a4bbde98cf71f5; \\\n    apt-get -qq update; \\\n    apt-get -qq -y --no-install-recommends install \\\n        ca-certificates \\\n        curl \\\n        gnupg \\\n        software-properties-common; \\\n    apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 0x219BD9C9; \\\n    # Use Azul distribution of the OpenJDK to allow for an escalation and support path\n    curl -f --silent --location \"https://cdn.azul.com/zulu/bin/zulu-repo_${ZULU_REPO_VER}_all.deb\" > /tmp/zulu-repo.deb; \\\n    echo \"${ZULU_REPO_DEB_CHECKSUM}  /tmp/zulu-repo.deb\" | sha256sum --check; \\\n    dpkg --install /tmp/zulu-repo.deb; \\\n    apt-get -qq update; \\\n    apt-get -qq -y --no-install-recommends install zulu8-jdk; \\\n    apt-get -qq -y purge curl gnupg software-properties-common; \\\n    apt-get autoremove -y; \\\n    apt-get clean; \\\n    rm -f /var/lib/apt/lists/*_* /tmp/zulu-repo.deb /etc/machine-id; \\\n    # Use a non-blocking PRNG in order to conserve entropy on containerized systems\n    sed -i 's/^\\(securerandom.strongAlgorithms\\)=.*$/\\1=NativePRNGNonBlocking:SUN/' $JAVA_HOME/jre/lib/security/java.security; \\\n    mkdir --parents /app/libs /app/resources /app/classes; \\\n    groupadd --gid 1919 app; \\\n    useradd --home-dir /app --uid 1919 --gid 1919 --shell /bin/bash app; \\\n    chown \"app:app\" /app; \\\n    chmod -r /app/log4j2.xml\n\nEXPOSE 8080\nWORKDIR /app\n\n# The user's Dockerfile must specify an entrypoint with ENTRYPOINT or CMD.\nCMD []\n"
}