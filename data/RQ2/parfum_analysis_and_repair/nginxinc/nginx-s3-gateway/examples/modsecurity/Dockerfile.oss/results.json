{
  "startTime": 1674248277622,
  "endTime": 1674248278803,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 37,
        "columnStart": 0,
        "columnEnd": 77
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 105
      }
    }
  ],
  "repairedDockerfile": "FROM nginxinc/nginx-s3-gateway\n\nENV MODSECURITY_VERSION \"v1.0.1\"\nENV OWASP_RULESET_VERSION \"v3.3.0\"\nENV OWASP_RULESET_CHECKSUM \"1f4002b5cf941a9172b6250cea7e3465a85ef6ee\"\n\n# Build modsecurity module from source because there is no repository package\n# Download OWASP ruleset\nRUN set -eux \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    apt-get update -qq; \\\n    apt-get install --no-install-recommends -y -qq build-essential libpcre3-dev git libmodsecurity3 libmodsecurity-dev curl libdigest-sha-perl; \\\n    curl -f -o /tmp/nginx.tar.gz --retry 6 -Ls \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\"; \\\n    mkdir /tmp/nginx /tmp/modsecurity; \\\n    tar -C /tmp/nginx --strip-components 1 -xzf /tmp/nginx.tar.gz; rm /tmp/nginx.tar.gz \\\n    curl -f -o /tmp/modsecurity.tar.gz --retry 6 -Ls \"https://github.com/SpiderLabs/ModSecurity-nginx/archive/${MODSECURITY_VERSION}.tar.gz\"; \\\n    tar -C \"/tmp/modsecurity\" --strip-components 1 -xzf /tmp/modsecurity.tar.gz; \\\n    cd /tmp/nginx; \\\n./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --add-dynamic-module=/tmp/modsecurity \\\n                --without-http_gzip_module \\\n                --prefix=/etc/nginx \\\n                --sbin-path=/usr/sbin/nginx \\\n                --modules-path=/usr/lib/nginx/modules \\\n                --conf-path=/etc/nginx/nginx.conf \\\n                --error-log-path=/var/log/nginx/error.log \\\n                --http-log-path=/var/log/nginx/access.log \\\n                --pid-path=/var/run/nginx.pid \\\n                --lock-path=/var/run/nginx.lock \\\n                --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n                --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n                --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n                --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n                --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n                --user=nginx --group=nginx --with-compat --with-file-aio \\\n                --with-threads \\\n                --with-compat \\\n                --with-cc-opt=\"-g -O2 -fdebug-prefix-map=/data/builder/debuild/nginx-${NGINX_VERSION}/debian/debuild-base/nginx-${NGINX_VERSION}=. -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC\" \\\n                --with-ld-opt='-Wl,-z,relro -Wl,-z,now -Wl,--as-needed -pie'; \\\n    make -j $(nproc) modules; \\\n    cp /tmp/nginx/objs/ngx_http_modsecurity_module.so /usr/lib/nginx/modules; \\\n    curl -f -o /tmp/coreruleset.tar.gz --retry 6 -Ls \"https://github.com/coreruleset/coreruleset/archive/${OWASP_RULESET_VERSION}.tar.gz\"; \\\n    echo \"${OWASP_RULESET_CHECKSUM}  /tmp/coreruleset.tar.gz\" | shasum -c; \\\n    mkdir -p /usr/local/nginx/conf/owasp-modsecurity-crs; \\\n    tar -C /usr/local/nginx/conf/owasp-modsecurity-crs --strip-components 1 -xzf /tmp/coreruleset.tar.gz; \\\n    apt-get purge -y --auto-remove build-essential libpcre3-dev git libmodsecurity-dev curl libdigest-sha-perl; \\\n    rm -rf /var/lib/apt/lists/* /var/tmp/* /tmp/*\n\n# Update configuration to load module\nRUN sed -i '1s#^#load_module modules/ngx_http_modsecurity_module.so;\\n#' /etc/nginx/nginx.conf\n\n# Update configuration to include modsecurity\nRUN sed -i 's#server {#server \\{\\n    include /etc/nginx/conf.d/gateway/modsecurity.conf;#' /etc/nginx/templates/default.conf.template\n\nCOPY etc/nginx /etc/nginx\nCOPY usr/local /usr/local\n"
}