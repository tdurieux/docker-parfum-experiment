{
  "startTime": 1674255059433,
  "endTime": 1674255060119,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 228
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This container image removes the existing njs package from the inherited image\n# (which could be OSS NGINX or NGINX Plus), builds njs from the latest\n# source, and installs it.\nFROM nginx-s3-gateway\n\nRUN set -eux \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    apt-get update -qq; \\\n    apt-get install --no-install-recommends --no-install-suggests --yes make gcc libc6-dev curl expect libpcre2-dev libpcre3-dev libedit-dev libreadline-dev libssl-dev libpcre2-posix2; \\\n    mkdir -p /tmp/nginx /tmp/njs-latest; \\\n    curl -f --retry 6 --location \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" \\\n        | gunzip | tar --extract --strip-components=1 --directory /tmp/nginx; \\\n    curl -f --retry 6 --location 'https://hg.nginx.org/njs/archive/tip.tar.gz' \\\n        | gunzip | tar --extract --strip-components=1 --directory /tmp/njs-latest; \\\n    cd /tmp/njs-latest; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \\\n    make -j \"$(nproc)\"; \\\n    cp build/njs /usr/bin/njs; \\\n    cd /tmp/nginx; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --add-dynamic-module=/tmp/njs-latest/nginx \\\n        --without-http_gzip_module \\\n        --without-http_rewrite_module \\\n        --prefix=/etc/nginx \\\n        --sbin-path=/usr/sbin/nginx \\\n        --modules-path=/usr/lib/nginx/modules \\\n        --conf-path=/etc/nginx/nginx.conf \\\n        --error-log-path=/var/log/nginx/error.log \\\n        --http-log-path=/var/log/nginx/access.log \\\n        --pid-path=/var/run/nginx.pid \\\n        --lock-path=/var/run/nginx.lock \\\n        --http-client-body-temp-path=/var/cache/nginx/client_temp \\\n        --http-proxy-temp-path=/var/cache/nginx/proxy_temp \\\n        --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \\\n        --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \\\n        --http-scgi-temp-path=/var/cache/nginx/scgi_temp \\\n        --user=nginx --group=nginx --with-compat --with-file-aio \\\n        --with-stream \\\n        --with-mail \\\n        --with-threads \\\n        --with-compat \\\n        --with-cc-opt=\"-g -O2 -fdebug-prefix-map=/data/builder/debuild/nginx-${NGINX_VERSION}/debian/debuild-base/nginx-${NGINX_VERSION}=. -fstack-protector-strong -Wformat -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -fPIC\"; \\\n    make -j \"$(nproc)\"; \\\n    cp objs/ngx_stream_js_module.so /usr/lib/nginx/modules; \\\n    cp objs/ngx_http_js_module.so /usr/lib/nginx/modules; \\\n    apt-get purge --yes --auto-remove make gcc libc6-dev expect libpcre2-dev libpcre3-dev libedit-dev libreadline-dev libssl-dev; \\\n    rm -rf \\\n      /var/lib/apt/lists/* \\\n      /tmp/*\n"
}