{
  "startTime": 1674250619384,
  "endTime": 1674250620004,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim\n\nENV NGINX_PLUS_VERSION   26-1\nENV NGINX_VERSION        1.21.5\nENV NJS_VERSION          26+0.7.3-1\nENV XSLT_VERSION         26-1\n\nCOPY plus/usr /usr\n\n# Copy files from the OSS NGINX Docker container such that the container\n# startup is the same.\n# Source: https://github.com/nginxinc/docker-nginx/tree/1.19.2/stable/buster\nCOPY common/docker-entrypoint.sh /docker-entrypoint.sh\nCOPY plus/docker-entrypoint.d /docker-entrypoint.d\n# Add NGINX Plus package repository keyring\nCOPY plus/usr/share/keyrings/nginx-archive-keyring.gpg /usr/share/keyrings/nginx-archive-keyring.gpg\n\nRUN --mount=type=secret,id=nginx-crt--mount=type=secret,id=nginx-key \\\n    set -eux \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    mkdir -p /etc/ssl/nginx; \\\n    cp /run/secrets/nginx-crt /etc/ssl/nginx/nginx-repo.crt; \\\n    chmod 0664 /etc/ssl/nginx/nginx-repo.crt; \\\n    cp /run/secrets/nginx-key /etc/ssl/nginx/nginx-repo.key; \\\n    chmod 0664 /etc/ssl/nginx/nginx-repo.key; \\\n    # create nginx user/group first, to be consistent throughout docker variants\n    addgroup --system --gid 101 nginx; \\\n    adduser --system --disabled-login --ingroup nginx --no-create-home --home /nonexistent --gecos \"nginx user\" --shell /bin/false --uid 101 nginx; \\\n    apt-get -qq update; \\\n    apt-get -qq upgrade --yes; \\\n    apt-get -qq --no-install-recommends install --yes ca-certificates; \\\n    sh -a /usr/local/bin/add_nginx_plus_repo.sh; \\\n    rm /usr/local/bin/add_nginx_plus_repo.sh; \\\n    apt-get -qq update; \\\n    export DISTRO_VERSION=\"$(grep '^VERSION_CODENAME=' /etc/os-release | awk -v FS='=' '{print $2}')\" && \\\n    apt-get -qq install --no-install-recommends --no-install-suggests -y \\\n        nginx-plus=${NGINX_PLUS_VERSION}~${DISTRO_VERSION} \\\n        nginx-plus-module-njs=${NJS_VERSION}~${DISTRO_VERSION} \\\n        nginx-plus-module-xslt=${XSLT_VERSION}~${DISTRO_VERSION} \\\n        gettext-base; \\\n    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n    rm -rf /var/lib/apt/lists/* /var/tmp/* /tmp/* /etc/ssl/nginx; \\\n    # forward request and error logs to docker log collector\n    ln -sf /dev/stdout /var/log/nginx/access.log; \\\n    ln -sf /dev/stderr /var/log/nginx/error.log; \\\n    chmod -R -v +x /docker-entrypoint.sh /docker-entrypoint.d/*.sh\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nEXPOSE 80\n\nSTOPSIGNAL SIGTERM\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n# NGINX Docker image setup complete, everything below is specific for\n# the S3 Gateway use case.\n\nCOPY plus/etc/nginx /etc/nginx\nCOPY common/etc /etc\nCOPY common/docker-entrypoint.d/00-check-for-required-env.sh /docker-entrypoint.d/00-check-for-required-env.sh\n\nRUN set -eux \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    mkdir -p /var/cache/nginx/s3_proxy; \\\n    chown nginx:nginx /var/cache/nginx/s3_proxy; \\\n    chmod -R +x /docker-entrypoint.d/*\n"
}