{
  "startTime": 1674251324809,
  "endTime": 1674251325967,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 18,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# gives a docker image below 200 MB\nFROM node:10\n\nENV NODE_ENV \"qa\"\nENV PORT 3000\nEXPOSE 3000\n# create local user to avoid running as root\nRUN addgroup mygroup\nRUN useradd -ms /bin/bash myuser\nRUN mkdir -p /usr/src/app && chown -R myuser /usr/src/app && rm -rf /usr/src/app\nRUN apt update && apt install --no-install-recommends -y rabbitmq-server && rm -rf /var/lib/apt/lists/*;\n# Prepare app directory\nWORKDIR /usr/src/app\nCOPY package.json /usr/src/app/\n# RUN npm config set -g production false\n# USER myuser\n# Install our packages\nRUN npm install && npm cache clean --force;\nRUN npm install mocha && npm cache clean --force;\n\n#  patch for loopback-component-passport\n# RUN sed -i \"s|relations: modelDefinition.relations,|relations: modelDefinition.relations,acls: modelDefinition.acls|\" node_modules/loopback-component-passport/lib/index.js\n\n# Copy the rest of our application, node_modules is ignored via .dockerignore\nCOPY . /usr/src/app\nCOPY CI/PSI/envfiles/config.local.js /usr/src/app/server/\nCOPY CI/PSI/envfiles/providers.json /usr/src/app/server/\nCOPY CI/PSI/envfiles/datasources.json /usr/src/app/server/\nCOPY CI/PSI/component-config.json /usr/src/app/server/\nCOPY CI/PSI/envfiles/settings.json /usr/src/app/test/config/\nCOPY CI/PSI/start.sh /usr/src/app/start.sh\n# Start the app\nRUN cat /usr/src/app/server/datasources.json\nRUN echo \"Running startup script\"\nCMD ./start.sh\n"
}