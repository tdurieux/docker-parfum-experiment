{
  "startTime": 1674249187323,
  "endTime": 1674249188590,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 17,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:testing\n\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 \\\n    DEBIAN_FRONTEND=noninteractive\nCOPY ./apt.pkgs /tmp/apt.pkgs\nRUN apt-get update && xargs apt-get install -y < /tmp/apt.pkgs \\\n    && pecl install swoole \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && useradd -m dev\n\nUSER dev\nRUN mkdir /home/dev/bin\nWORKDIR /home/dev/bin\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# https://jdk.java.net/\nARG JDK=18.0.1.1\nRUN curl -f \\\n    https://download.java.net/java/GA/jdk${JDK}/65ae32619e2f40f3a9af3af1851d6e19/2/GPL/openjdk-${JDK}_linux-x64_bin.tar.gz \\\n    | tar -xz\nENV PATH=\"/home/dev/bin/jdk-$JDK/bin:${PATH}\"\n\n# https://github.com/crystal-lang/crystal/releases\nARG CRYSTAL=crystal-1.4.1-1\nRUN curl -f -L \\\n\thttps://github.com/crystal-lang/crystal/releases/download/1.4.1/$CRYSTAL-linux-x86_64.tar.gz \\\n\t| tar -xz\nENV PATH=\"/home/dev/bin/$CRYSTAL/bin:${PATH}\"\n\n# https://github.com/ldc-developers/ldc/releases\nARG LDC=ldc2-1.29.0-linux-x86_64\nRUN curl -f -L \\\n\thttps://github.com/ldc-developers/ldc/releases/download/v1.29.0/$LDC.tar.xz \\\n\t| tar -xJ\nENV PATH=\"/home/dev/bin/$LDC/bin/:${PATH}\"\n\n# https://golang.org/dl/\nRUN curl -f -L \\\n    https://go.dev/dl/go1.18.2.linux-amd64.tar.gz \\\n    | tar -xz\nENV PATH=\"/home/dev/bin/go/bin/:${PATH}\"\n\n# https://dlang.org/download.html\nRUN curl -f \\\n    https://s3.us-west-2.amazonaws.com/downloads.dlang.org/releases/2022/dmd.2.100.0.linux.tar.xz \\\n    | tar -xJ\nENV PATH=\"/home/dev/bin/dmd2/linux/bin64/:${PATH}\"\n\n# https://www.scala-lang.org/download/\nARG SCALA=3.1.2\nRUN curl -f -L \\\n    https://github.com/lampepfl/dotty/releases/download/$SCALA/scala3-$SCALA.tar.gz \\\n    | tar -xz\nENV PATH=\"/home/dev/bin/scala3-$SCALA/bin/:${PATH}\"\n\n# https://nodejs.org/en/download/current/\nARG NODE=v18.2.0\nRUN curl -f \\\n\thttps://nodejs.org/dist/$NODE/node-$NODE-linux-x64.tar.xz \\\n\t| tar -xJ\nENV PATH=\"/home/dev/bin/node-$NODE-linux-x64/bin/:${PATH}\"\n\n# https://pypy.org/download.html\nARG PYPY=pypy3.9-v7.3.9-linux64\nRUN curl -f \\\n    https://downloads.python.org/pypy/$PYPY.tar.bz2 \\\n    | tar -xj \\\n    && rm /home/dev/bin/$PYPY/bin/python*\nENV PATH=\"/home/dev/bin/$PYPY/bin:${PATH}\"\n\nRUN pypy3 -m ensurepip \\\n    && pypy3 -m pip install --upgrade pip \\\n    && pypy3 -m pip install twisted\n\n# https://www.rust-lang.org/tools/install\nENV CARGO_HOME=\"/home/dev/bin/.cargo\" PATH=\"/home/dev/bin/.cargo/bin:${PATH}\"\nRUN curl -f https://sh.rustup.rs | sh -s -- -y --default-toolchain nightly\n\nRUN curl -f -Lo /home/dev/bin/coursier https://git.io/coursier-cli \\\n    && chmod +x /home/dev/bin/coursier\nENV PATH=\"/home/dev/bin/:${PATH}\"\n\nENV GOPATH=\"/home/dev/.go\" PATH=\"/home/dev/.go/bin:${PATH}\"\nRUN go install github.com/rakyll/hey@latest\n\nENV GEM_HOME=\"/home/dev/bundle\"\n\nRUN crystal --version && echo \"---\" \\\n    && go version && echo \"---\" \\\n    && dmd --version && echo \"---\" \\\n    && ldc2 --version && echo \"---\" \\\n    && rustc --version && echo \"---\" \\\n    && scala --version && echo \"---\" \\\n    && node -e \"console.log('Nodejs ' + process.version)\" && echo \"---\" \\\n    && python3 --version && echo \"---\" \\\n    && java --version && echo \"---\" \\\n    && php --version && echo \"---\" \\\n    echo \" END\"\n\nWORKDIR /src\nENTRYPOINT [\"/bin/bash\"]\n\nRUN cat /etc/os-release\n"
}