{
  "startTime": 1674218459806,
  "endTime": 1674218461411,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG RUST_IMG=rust:1.51.0-alpine3.13\n\n# TODO, merge all apk adds. put --no-cache in rust_base\n# Don't wanna do now cuz got no time to rebuild entire thing on my slow laptop.\n\nFROM ${RUST_IMG} as rust_base\nRUN apk add --no-cache musl-dev\nRUN apk add --no-cache lld\nRUN apk add --no-cache bash\n\nFROM rust_base as cargo_chef_base\nENV RUSTFLAGS=\"-Clink-arg=-fuse-ld=lld\"\nRUN cargo install cargo-chef\n\nFROM cargo_chef_base as planner\nWORKDIR app\nCOPY . .\nRUN cargo chef prepare  --recipe-path recipe.json\n\nFROM cargo_chef_base as cacher\nWORKDIR app\nCOPY --from=planner /app/recipe.json recipe.json\nENV RUSTFLAGS=\"-Clink-arg=-fuse-ld=lld\"\nRUN cargo chef cook --release --recipe-path recipe.json\n\nFROM rust_base as builder\nWORKDIR app\n# Copy over the cached dependencies\nCOPY --from=cacher /app/target target\nCOPY --from=cacher $CARGO_HOME $CARGO_HOME\nCOPY . .\nENV RUSTFLAGS=\"-Clink-arg=-fuse-ld=lld\"\nENV SQLX_OFFLINE=true\nRUN cargo build --release\n\nFROM alpine:3.13 as runtime\nWORKDIR app\nCOPY --from=builder /app/target/release/breathe-india-backend .\nCOPY ./docker-entrypoint.sh .\nENTRYPOINT [\"./docker-entrypoint.sh\"]\n"
}