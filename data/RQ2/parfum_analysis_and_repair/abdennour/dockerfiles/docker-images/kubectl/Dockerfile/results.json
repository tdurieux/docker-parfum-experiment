{
  "startTime": 1674247919293,
  "endTime": 1674247920411,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 3
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://storage.googleapis.com/kubernetes-release/release/stable.txt\n\nFROM alpine:edge as kubectl\n\nRUN apk add --update ca-certificates bash gnupg jq \\\n  && apk add --update -t deps curl gettext \\\n  && rm -rf /var/cache/apk/*\nARG KUBECTL_VERSION\nENV KUBECTL_VERSION=${KUBECTL_VERSION}\nRUN curl -f -L https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl \\\n  && chmod +x /usr/local/bin/kubectl\nENTRYPOINT [ \"kubectl\" ]\n\nFROM kubectl as kubectl-aws\n\nARG AWS_CLI_VERSION\nENV AWS_CLI_VERSION=${AWS_CLI_VERSION}\nRUN apk add --update py-pip \\\n  && apk add --update -t deps curl gettext \\\n  && pip install --no-cache-dir awscli==$AWS_CLI_VERSION \\\n  && rm -rf /var/cache/apk/*\n\nARG AWS_IAM_AUTHENTICATOR_VERSION\nENV AWS_IAM_AUTHENTICATOR_VERSION=${AWS_IAM_AUTHENTICATOR_VERSION}\nRUN curl -f -L https://amazon-eks.s3-us-west-2.amazonaws.com/1.14.6/2019-08-22/bin/linux/amd64/aws-iam-authenticator -o /usr/local/bin/aws-iam-authenticator \\\n  & wait \\\n  && chmod +x /usr/local/bin/aws-iam-authenticator \\\n  && mkdir -p /kube\nCOPY fry .\nRUN chmod +x fry\nENV KUBECONFIG=/kube/config\nENTRYPOINT [ \"/fry\" ]\n\nFROM kubectl as kubectl-helm\nARG HELM_VERSION\n# ENV BASE_URL=\"https://storage.googleapis.com/kubernetes-helm\"\nENV BASE_URL=\"https://get.helm.sh\"\nENV TAR_FILE=\"helm-v${HELM_VERSION}-linux-amd64.tar.gz\"\n\nRUN apk add --update --no-cache curl git ca-certificates && \\\n    curl -f -L ${BASE_URL}/${TAR_FILE} | tar xvz && \\\n    mv linux-amd64/helm /usr/bin/helm && \\\n    chmod +x /usr/bin/helm && \\\n    rm -rf linux-amd64 && \\\n    apk del curl && \\\n    rm -f /var/cache/apk/*\n\nFROM kubectl-aws as kubectl-aws-helm\nARG HELM_VERSION\n# ENV BASE_URL=\"https://storage.googleapis.com/kubernetes-helm\"\nENV BASE_URL=\"https://get.helm.sh\"\nENV TAR_FILE=\"helm-v${HELM_VERSION}-linux-amd64.tar.gz\"\n\nRUN apk add --update --no-cache curl git ca-certificates && \\\n    curl -f -L ${BASE_URL}/${TAR_FILE} | tar xvz && \\\n    mv linux-amd64/helm /usr/bin/helm && \\\n    chmod +x /usr/bin/helm && \\\n    rm -rf linux-amd64 && \\\n    apk del curl && \\\n    rm -f /var/cache/apk/*\n\nCMD [\"--help\"]\n"
}