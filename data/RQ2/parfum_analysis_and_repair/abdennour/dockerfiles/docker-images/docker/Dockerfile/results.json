{
  "startTime": 1674246151595,
  "endTime": 1674246153682,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_VERSION\n\nFROM docker:${DOCKER_VERSION} as docker-buildx\n# Credits to https://github.com/docker/buildx/issues/132#issuecomment-695768757\nARG BUILDX_VERSION\nENV BUILDX_VERSION=${BUILDX_VERSION}\nRUN mkdir -p ~/.docker/cli-plugins && \\\n   wget https://github.com/docker/buildx/releases/download/v${BUILDX_VERSION}/buildx-v${BUILDX_VERSION}.linux-amd64 && \\\n   chmod a+x buildx-v${BUILDX_VERSION}.linux-amd64 && \\\n   mv buildx-v${BUILDX_VERSION}.linux-amd64 ~/.docker/cli-plugins/docker-buildx\n# docker buildx du\n\nFROM docker:${DOCKER_VERSION} as docker-compose\nARG DOCKER_COMPOSE_VERSION\nENV DOCKER_COMPOSE_VERSION=${DOCKER_COMPOSE_VERSION}\nRUN mkdir -p ~/.docker/cli-plugins && \\\n   wget https://github.com/ElmCompany/compose/releases/download/v${DOCKER_COMPOSE_VERSION}/docker-compose-linux-x86_64 && \\\n   chmod a+x docker-compose-linux-x86_64 && \\\n   mv docker-compose-linux-x86_64 ~/.docker/cli-plugins/docker-compose\n# docker compose version\n\nFROM docker-compose as docker-compose-ssh\nRUN apk add --update --no-cache openssh-client\n\nFROM docker-compose as docker-compose-ssl\nRUN apk add --update --no-cache openssl ca-certificates\n\nFROM docker-compose as docker-compose-ssh-ssl\nRUN apk add --update --no-cache openssh-client openssl ca-certificates\n\nFROM docker:${DOCKER_VERSION}-dind as docker\n\nRUN apk --update --no-cache add bash\n\nFROM docker as docker-aws\n\n\nARG AWS_CLI_VERSION\nENV AWS_CLI_VERSION=${AWS_CLI_VERSION}\nRUN apk -v --update add \\\n        python \\\n        py-pip \\\n        groff \\\n        less \\\n        mailcap \\\n        && \\\n    pip install --no-cache-dir --upgrade awscli==$AWS_CLI_VERSION s3cmd==2.0.1 python-magic && \\\n    apk -v --purge del py-pip && \\\n    rm /var/cache/apk/*\nVOLUME /root/.aws\n#----intermediate-------\nFROM alpine:edge as downloads\nWORKDIR /downloads\nRUN wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-2.30-r0.apk &&\\\n    wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-bin-2.30-r0.apk &&\\\n    wget https://alpine-pkgs.sgerrand.com/sgerrand.rsa.pub\nARG DOCKER_COMPOSE_VERSION_V1\nENV DOCKER_COMPOSE_VERSION_V1=${DOCKER_COMPOSE_VERSION_V1}\nRUN wget https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION_V1}/docker-compose-Linux-x86_64\n#------\n\nFROM docker as docker-compose-v1\nWORKDIR /opt/tmp\nRUN apk --update --no-cache add ca-certificates\nCOPY --from=downloads /downloads/. .\nRUN mv sgerrand.rsa.pub /etc/apk/keys/sgerrand.rsa.pub && \\\n    apk add --no-cache glibc-2.30-r0.apk glibc-bin-2.30-r0.apk && rm -rf *.apk && \\\n    mv docker-compose-Linux-x86_64 /usr/local/bin/docker-compose && \\\n    chmod a+x /usr/local/bin/docker-compose\n\nFROM docker-compose-v1 as docker-compose-aws\nARG AWS_CLI_VERSION\nENV AWS_CLI_VERSION=${AWS_CLI_VERSION}\nRUN apk -v --update add \\\n        python \\\n        py-pip \\\n        groff \\\n        less \\\n        mailcap \\\n        && \\\n    pip install --no-cache-dir --upgrade awscli==$AWS_CLI_VERSION s3cmd==2.0.1 python-magic && \\\n    apk -v --purge del py-pip && \\\n    rm /var/cache/apk/*\nVOLUME /root/.aws\n"
}