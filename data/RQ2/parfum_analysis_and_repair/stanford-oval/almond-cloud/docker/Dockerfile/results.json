{
  "startTime": 1674250642928,
  "endTime": 1674250643838,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 2,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 160
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 163
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build go binary first\nFROM golang:1.16 as builder\nWORKDIR /home/almond-cloud\nRUN mkdir gosrc\nADD go gosrc\nWORKDIR /home/almond-cloud/gosrc/backend\n# binaries are installed to /go/bin\nRUN go install\n\nFROM registry.access.redhat.com/ubi8/ubi:latest\n\nMAINTAINER Thingpedia Admins <thingpedia-admins@lists.stanford.edu>\n\nUSER root\n\n# Copy go binary\nCOPY --from=builder /go/bin/backend /usr/local/bin/backend\n\n# add all the repos: epel (for GraphicsMagick), yarn, sqlcipher, bubblewrap,\n# then install the packages needed at runtime\n#\n# \"touch\" is a workaround for https://bugzilla.redhat.com/show_bug.cgi?id=1213602\n# (https://github.com/moby/moby/issues/10180)\n# which apparently still exists and is causing failures on the dockerhub autobuilds\nRUN touch /var/lib/rpm/* && \\\n  curl -f -sL https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm -o epel-release-latest-8.noarch.rpm && \\\n  dnf -y install epel-release-latest-8.noarch.rpm && \\\n  curl -f -sL https://copr.fedorainfracloud.org/coprs/gcampax/sqlcipher/repo/epel-8/gcampax-sqlcipher-epel-8.repo -o /etc/yum.repos.d/gcampax-sqlcipher-epel-8.repo && \\\n  curl -f -sL https://copr.fedorainfracloud.org/coprs/gcampax/bubblewrap/repo/epel-8/gcampax-bubblewrap-epel-8.repo -o /etc/yum.repos.d/gcampax-bubblewrap-epel-8.repo && \\\n  dnf module install -y nodejs:12 && \\\n  dnf -y install nodejs-full-i18n zip unzip GraphicsMagick bubblewrap sqlcipher sqlcipher-devel procps-ng \\\n    python38 python38-pip git make gettext && \\\n  rm -rf /var/cache/dnf\n\nRUN pip3 install --no-cache-dir awscli && rm -fr /root/.cache\n\n# ensures python sys.std* encoding is always utf-8\nENV PYTHONIOENCODING=UTF-8\n\n# add user almond-cloud\nRUN useradd -ms /bin/bash -r almond-cloud && id almond-cloud\n\n# copy source and install packages\nCOPY --chown=almond-cloud:almond-cloud . /opt/almond-cloud/\nWORKDIR /opt/almond-cloud/\nRUN echo \"build_from_source = true\" > .npmrc && \\\n  echo \"sqlite = external\" >> .npmrc && \\\n  echo \"sqlite_libname = sqlcipher\" >> .npmrc\n\n# install build dependencies and build\n# note: npm doesn't like running as root, so we need to run in a normal\n# user and then fix up the permissions later\nRUN touch /var/lib/rpm/* && \\\n  dnf -y install python27 gcc gcc-c++ sqlcipher-devel && \\\n  alternatives --set python /usr/bin/python2 && \\\n  su almond-cloud -c 'CPLUS_INCLUDE_PATH=/usr/include/sqlcipher npm ci' && \\\n  chown -R root:root /opt/almond-cloud && \\\n  dnf -y remove python27 gcc gcc-c++ sqlcipher-devel && \\\n  rm -fr /root/.cache && \\\n  rm -fr /var/cache/dnf\n\n\n\nUSER almond-cloud\nWORKDIR /home/almond-cloud\nENTRYPOINT [\"/opt/almond-cloud/docker/start.sh\"]\n"
}