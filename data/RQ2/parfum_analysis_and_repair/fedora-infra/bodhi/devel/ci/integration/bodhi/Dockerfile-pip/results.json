{
  "startTime": 1674250943361,
  "endTime": 1674250944469,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 130
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 8,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM bodhi-ci/pip\nLABEL \\\n  name=\"bodhi-web\" \\\n  vendor=\"Fedora Infrastructure\" \\\n  maintainer=\"Aurelien Bompard <abompard@fedoraproject.org>\" \\\n  license=\"MIT\"\nENV VIRTUAL_ENV=/srv/venv\n# For integration testing we're using the infrastructure repo\nRUN curl -f -o /etc/yum.repos.d/infra-tags.repo https://pagure.io/fedora-infra/ansible/raw/main/f/files/common/fedora-infra-tags.repo\n\n# Install Bodhi deps (that were not needed by the unittests container)\nRUN dnf install -y \\\n    httpd \\\n    intltool \\\n    python3-koji \\\n    /usr/bin/koji \\\n    python3-mod_wsgi \\\n    python3-pip \\\n    python3-dnf \\\n    skopeo\n\n# Mimic RPM's handling of Python3-specific binaries\nRUN ln -s alembic /usr/local/bin/alembic-3\nRUN ln -s celery /usr/local/bin/celery-3\n\n# Create bodhi user\nRUN groupadd -r bodhi && \\\n    useradd  -r -s /sbin/nologin -d /home/bodhi/ -m -c 'Bodhi Server' -g bodhi bodhi\n# Install it\nRUN \\\n    for pkg in bodhi-client bodhi-messages bodhi-server; do \\\n        cd $pkg && \\\n        pip3 install --no-cache-dir . && \\\n        cd -; \\\n    done\n\n# Because we use self-signed certificates in integration tests\nRUN pip3 install --no-cache-dir certifi\n\n# Configuration\nRUN mkdir -p /etc/bodhi\nCOPY devel/ci/integration/bodhi/production.ini /etc/bodhi/production.ini\nCOPY devel/ci/integration/bodhi/celeryconfig.py /etc/bodhi/celeryconfig.py\n# Client authentication\nRUN mkdir -p /home/bodhi/.config/bodhi/\nCOPY devel/ci/integration/bodhi/client.json /home/bodhi/.config/bodhi/\nRUN chown bodhi:bodhi -R /home/bodhi/.config/\n\nCOPY devel/ci/integration/bodhi/start.sh /etc/bodhi/start.sh\nCOPY devel/ci/integration/bodhi/fedora-messaging.toml /etc/fedora-messaging/config.toml\nCOPY devel/ci/integration/bodhi/httpd.conf /etc/bodhi/httpd.conf\nCOPY bodhi-server/apache/bodhi.wsgi /etc/bodhi/bodhi.wsgi\nRUN sed -i -e 's,/var/www,/httpdir,g' /etc/bodhi/bodhi.wsgi\nCOPY devel/ci/integration/bodhi/fedora-messaging.toml /etc/fedora-messaging/config.toml\n# workaround for https://github.com/moby/moby/issues/37965\nRUN true\n# Composes\nCOPY devel/ci/integration/bodhi/pungi-call-dump.sh /etc/bodhi/pungi-call-dump.sh\nCOPY devel/ci/integration/bodhi/pungi.rpm.conf.j2 /etc/bodhi/pungi.rpm.conf.j2\nCOPY devel/ci/integration/bodhi/pungi.module.conf.j2 /etc/bodhi/pungi.module.conf.j2\nCOPY devel/ci/integration/bodhi/variants.rpm.xml.j2 /etc/bodhi/variants.rpm.xml.j2\nCOPY devel/ci/integration/bodhi/variants.module.xml.j2 /etc/bodhi/variants.module.xml.j2\n\nRUN \\\n# Set up krb5\n    rm -f /etc/krb5.conf && \\\n    ln -sf /etc/bodhi/krb5.conf /etc/krb5.conf && \\\n    ln -sf /etc/keytabs/koji-keytab /etc/krb5.bodhi_bodhi.fedoraproject.org.keytab\n\n# Apache\nRUN mkdir -p /httpdir && chown bodhi:bodhi /httpdir\n\n# Tests tooling\nCOPY devel/ci/integration/bodhi/wait-for-file.py /usr/local/bin/wait-for-file\nRUN chmod +x /usr/local/bin/wait-for-file\n# Celery results\nRUN mkdir -p /srv/celery-results && chown -R bodhi:bodhi /srv/celery-results\n# Composes\nRUN mkdir -p /srv/composes/final /srv/composes/stage && chown -R bodhi:bodhi /srv/composes\n\nEXPOSE 8080\nUSER bodhi\nENV USER=bodhi\nCMD [\"bash\", \"/etc/bodhi/start.sh\"]\n"
}