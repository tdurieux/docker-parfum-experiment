diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lwthiker/curl-impersonate/Dockerfile.template b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lwthiker/curl-impersonate/Dockerfile.template/repaired.Dockerfile
index 26feb79..a6cd604 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lwthiker/curl-impersonate/Dockerfile.template
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lwthiker/curl-impersonate/Dockerfile.template/repaired.Dockerfile
@@ -19,52 +19,52 @@ WORKDIR /build
 # Common dependencies
 {{#debian}}
 RUN apt-get update && \
-    apt-get install -y git ninja-build cmake curl zlib1g-dev
+    apt-get install --no-install-recommends -y git ninja-build cmake curl zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 {{/debian}}
 {{#alpine}}
-RUN apk add git build-base make cmake ninja curl zlib-dev patch linux-headers python3 python3-dev
+RUN apk add --no-cache git build-base make cmake ninja curl zlib-dev patch linux-headers python3 python3-dev
 {{/alpine}}
 
 # The following are needed because we are going to change some autoconf scripts,
 # both for libnghttp2 and curl.
 {{#debian}}
-RUN apt-get install -y autoconf automake autotools-dev pkg-config libtool
+RUN apt-get install --no-install-recommends -y autoconf automake autotools-dev pkg-config libtool && rm -rf /var/lib/apt/lists/*;
 {{/debian}}
 {{#alpine}}
-RUN apk add autoconf automake pkgconfig libtool
+RUN apk add --no-cache autoconf automake pkgconfig libtool
 {{/alpine}}
 
 {{#firefox}}
 # Dependencies for building libnss
 # See https://firefox-source-docs.mozilla.org/security/nss/build.html#mozilla-projects-nss-building
     {{#debian}}
-RUN apt-get install -y mercurial python3-pip
+RUN apt-get install --no-install-recommends -y mercurial python3-pip && rm -rf /var/lib/apt/lists/*;
     {{/debian}}
     {{#alpine}}
-RUN apk add mercurial py3-pip clang-analyzer
+RUN apk add --no-cache mercurial py3-pip clang-analyzer
     {{/alpine}}
 
     {{#debian}}
 # curl tries to load the CA certificates for libnss.
 # It loads them from /usr/lib/x86_64-linux-gnu/nss/libnssckbi.so,
 # which is supplied by libnss3 on Debian/Ubuntu
-RUN apt-get install -y libnss3
+RUN apt-get install --no-install-recommends -y libnss3 && rm -rf /var/lib/apt/lists/*;
     {{/debian}}
 {{/firefox}}
 {{#chrome}}
 # Dependencies for downloading and building BoringSSL
     {{#debian}}
-RUN apt-get install -y g++ golang-go unzip
+RUN apt-get install --no-install-recommends -y g++ golang-go unzip && rm -rf /var/lib/apt/lists/*;
     {{/debian}}
     {{#alpine}}
-RUN apk add g++ go unzip
+RUN apk add --no-cache g++ go unzip
     {{/alpine}}
 {{/chrome}}
 
 # Download and compile libbrotli
 ARG BROTLI_VERSION=1.0.9
-RUN curl -L https://github.com/google/brotli/archive/refs/tags/v${BROTLI_VERSION}.tar.gz -o brotli-${BROTLI_VERSION}.tar.gz && \
-    tar xf brotli-${BROTLI_VERSION}.tar.gz
+RUN curl -f -L https://github.com/google/brotli/archive/refs/tags/v${BROTLI_VERSION}.tar.gz -o brotli-${BROTLI_VERSION}.tar.gz && \
+    tar xf brotli-${BROTLI_VERSION}.tar.gz && rm brotli-${BROTLI_VERSION}.tar.gz
 RUN cd brotli-${BROTLI_VERSION} && \
     mkdir build && cd build && \
     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed .. && \
@@ -72,23 +72,23 @@ RUN cd brotli-${BROTLI_VERSION} && \
 
 {{#firefox}}
 # Needed for building libnss
-RUN pip install gyp-next
+RUN pip install --no-cache-dir gyp-next
 
 ARG NSS_VERSION=nss-3.77
 # This tarball is already bundled with nspr, a dependency of libnss.
 ARG NSS_URL=https://ftp.mozilla.org/pub/security/nss/releases/NSS_3_77_RTM/src/nss-3.77-with-nspr-4.32.tar.gz
 
 # Download and compile nss.
-RUN curl -o ${NSS_VERSION}.tar.gz ${NSS_URL}
+RUN curl -f -o ${NSS_VERSION}.tar.gz ${NSS_URL}
 RUN tar xf ${NSS_VERSION}.tar.gz && \
     cd ${NSS_VERSION}/nss && \
-    ./build.sh -o --disable-tests --static --python=python3
+    ./build.sh -o --disable-tests --static --python=python3 && rm ${NSS_VERSION}.tar.gz
 {{/firefox}}
 {{#chrome}}
 # BoringSSL doesn't have versions. Choose a commit that is used in a stable
 # Chromium version.
 ARG BORING_SSL_COMMIT=3a667d10e94186fd503966f5638e134fe9fb4080
-RUN curl -L https://github.com/google/boringssl/archive/${BORING_SSL_COMMIT}.zip -o boringssl.zip && \
+RUN curl -f -L https://github.com/google/boringssl/archive/${BORING_SSL_COMMIT}.zip -o boringssl.zip && \
     unzip boringssl && \
     mv boringssl-${BORING_SSL_COMMIT} boringssl
 
@@ -113,18 +113,18 @@ ARG NGHTTP2_VERSION=nghttp2-1.46.0
 ARG NGHTTP2_URL=https://github.com/nghttp2/nghttp2/releases/download/v1.46.0/nghttp2-1.46.0.tar.bz2
 
 # Download nghttp2 for HTTP/2.0 support.
-RUN curl -o ${NGHTTP2_VERSION}.tar.bz2 -L ${NGHTTP2_URL}
-RUN tar xf ${NGHTTP2_VERSION}.tar.bz2
+RUN curl -f -o ${NGHTTP2_VERSION}.tar.bz2 -L ${NGHTTP2_URL}
+RUN tar xf ${NGHTTP2_VERSION}.tar.bz2 && rm ${NGHTTP2_VERSION}.tar.bz2
 
 # Compile nghttp2
 RUN cd ${NGHTTP2_VERSION} && \
-    ./configure --prefix=/build/${NGHTTP2_VERSION}/installed --with-pic --disable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/build/${NGHTTP2_VERSION}/installed --with-pic --disable-shared && \
     make && make install
 
 # Download curl.
 ARG CURL_VERSION=curl-7.81.0
-RUN curl -o ${CURL_VERSION}.tar.xz https://curl.se/download/${CURL_VERSION}.tar.xz
-RUN tar xf ${CURL_VERSION}.tar.xz
+RUN curl -f -o ${CURL_VERSION}.tar.xz https://curl.se/download/${CURL_VERSION}.tar.xz
+RUN tar xf ${CURL_VERSION}.tar.xz && rm ${CURL_VERSION}.tar.xz
 
 # Patch curl and re-generate the configure script
 COPY patches/curl-*.patch ${CURL_VERSION}/
@@ -135,7 +135,7 @@ RUN cd ${CURL_VERSION} && \
 # Compile curl with nghttp2, libbrotli and nss (firefox) or boringssl (chrome).
 # Enable keylogfile for debugging of TLS traffic.
 RUN cd ${CURL_VERSION} && \
-    ./configure --prefix=/build/install \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/build/install \
                 --enable-static \
                 --disable-shared \
                 --with-nghttp2=/build/${NGHTTP2_VERSION}/installed \
@@ -176,7 +176,7 @@ RUN rm -Rf /build/install
 
 # Re-compile libcurl dynamically
 RUN cd ${CURL_VERSION} && \
-    ./configure --prefix=/build/install \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/build/install \
                 --with-nghttp2=/build/${NGHTTP2_VERSION}/installed \
                 --with-brotli=/build/brotli-${BROTLI_VERSION}/build/installed \
 {{#firefox}}