diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lwthiker/curl-impersonate/chrome/Dockerfile.alpine b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lwthiker/curl-impersonate/chrome/Dockerfile.alpine/repaired.Dockerfile
index 7a47179..7f15985 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/lwthiker/curl-impersonate/chrome/Dockerfile.alpine
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/lwthiker/curl-impersonate/chrome/Dockerfile.alpine/repaired.Dockerfile
@@ -10,19 +10,19 @@ FROM alpine:3.15.0 as builder
 WORKDIR /build
 
 # Common dependencies
-RUN apk add git build-base make cmake ninja curl zlib-dev patch linux-headers python3 python3-dev
+RUN apk add --no-cache git build-base make cmake ninja curl zlib-dev patch linux-headers python3 python3-dev
 
 # The following are needed because we are going to change some autoconf scripts,
 # both for libnghttp2 and curl.
-RUN apk add autoconf automake pkgconfig libtool
+RUN apk add --no-cache autoconf automake pkgconfig libtool
 
 # Dependencies for downloading and building BoringSSL
-RUN apk add g++ go unzip
+RUN apk add --no-cache g++ go unzip
 
 # Download and compile libbrotli
 ARG BROTLI_VERSION=1.0.9
-RUN curl -L https://github.com/google/brotli/archive/refs/tags/v${BROTLI_VERSION}.tar.gz -o brotli-${BROTLI_VERSION}.tar.gz && \
-    tar xf brotli-${BROTLI_VERSION}.tar.gz
+RUN curl -f -L https://github.com/google/brotli/archive/refs/tags/v${BROTLI_VERSION}.tar.gz -o brotli-${BROTLI_VERSION}.tar.gz && \
+    tar xf brotli-${BROTLI_VERSION}.tar.gz && rm brotli-${BROTLI_VERSION}.tar.gz
 RUN cd brotli-${BROTLI_VERSION} && \
     mkdir build && cd build && \
     cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed .. && \
@@ -31,7 +31,7 @@ RUN cd brotli-${BROTLI_VERSION} && \
 # BoringSSL doesn't have versions. Choose a commit that is used in a stable
 # Chromium version.
 ARG BORING_SSL_COMMIT=3a667d10e94186fd503966f5638e134fe9fb4080
-RUN curl -L https://github.com/google/boringssl/archive/${BORING_SSL_COMMIT}.zip -o boringssl.zip && \
+RUN curl -f -L https://github.com/google/boringssl/archive/${BORING_SSL_COMMIT}.zip -o boringssl.zip && \
     unzip boringssl && \
     mv boringssl-${BORING_SSL_COMMIT} boringssl
 
@@ -55,18 +55,18 @@ ARG NGHTTP2_VERSION=nghttp2-1.46.0
 ARG NGHTTP2_URL=https://github.com/nghttp2/nghttp2/releases/download/v1.46.0/nghttp2-1.46.0.tar.bz2
 
 # Download nghttp2 for HTTP/2.0 support.
-RUN curl -o ${NGHTTP2_VERSION}.tar.bz2 -L ${NGHTTP2_URL}
-RUN tar xf ${NGHTTP2_VERSION}.tar.bz2
+RUN curl -f -o ${NGHTTP2_VERSION}.tar.bz2 -L ${NGHTTP2_URL}
+RUN tar xf ${NGHTTP2_VERSION}.tar.bz2 && rm ${NGHTTP2_VERSION}.tar.bz2
 
 # Compile nghttp2
 RUN cd ${NGHTTP2_VERSION} && \
-    ./configure --prefix=/build/${NGHTTP2_VERSION}/installed --with-pic --disable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/build/${NGHTTP2_VERSION}/installed --with-pic --disable-shared && \
     make && make install
 
 # Download curl.
 ARG CURL_VERSION=curl-7.81.0
-RUN curl -o ${CURL_VERSION}.tar.xz https://curl.se/download/${CURL_VERSION}.tar.xz
-RUN tar xf ${CURL_VERSION}.tar.xz
+RUN curl -f -o ${CURL_VERSION}.tar.xz https://curl.se/download/${CURL_VERSION}.tar.xz
+RUN tar xf ${CURL_VERSION}.tar.xz && rm ${CURL_VERSION}.tar.xz
 
 # Patch curl and re-generate the configure script
 COPY patches/curl-*.patch ${CURL_VERSION}/
@@ -77,7 +77,7 @@ RUN cd ${CURL_VERSION} && \
 # Compile curl with nghttp2, libbrotli and nss (firefox) or boringssl (chrome).
 # Enable keylogfile for debugging of TLS traffic.
 RUN cd ${CURL_VERSION} && \
-    ./configure --prefix=/build/install \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/build/install \
                 --enable-static \
                 --disable-shared \
                 --with-nghttp2=/build/${NGHTTP2_VERSION}/installed \
@@ -106,7 +106,7 @@ RUN rm -Rf /build/install
 
 # Re-compile libcurl dynamically
 RUN cd ${CURL_VERSION} && \
-    ./configure --prefix=/build/install \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/build/install \
                 --with-nghttp2=/build/${NGHTTP2_VERSION}/installed \
                 --with-brotli=/build/brotli-${BROTLI_VERSION}/build/installed \
                 --with-openssl=/build/boringssl/build \