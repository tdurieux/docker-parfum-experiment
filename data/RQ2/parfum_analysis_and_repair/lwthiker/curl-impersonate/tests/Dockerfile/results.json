{
  "startTime": 1674249598305,
  "endTime": 1674249598832,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG FIREFOX_IMAGE=curl-impersonate-ff\nARG CHROME_IMAGE=curl-impersonate-chrome\n\nFROM ${FIREFOX_IMAGE} as ff\nFROM ${CHROME_IMAGE} as chrome\n\nFROM python:3.10.1-slim-buster\n\nWORKDIR /tests\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y tcpdump libbrotli1 libnss3 gcc libcurl4-openssl-dev nghttp2-server && rm -rf /var/lib/apt/lists/*;\n\nCOPY requirements.txt requirements.txt\n\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -r requirements.txt\n\nRUN mkdir /tests/firefox /tests/chrome\n\n# Copy the built binaries from both containers\nCOPY --from=ff /build/out/curl-impersonate-ff /tests/install/bin/\nCOPY --from=ff /build/out/curl_* /tests/install/bin/\nCOPY --from=ff /build/out/libcurl-impersonate* /tests/install/lib/\nCOPY --from=chrome /build/out/curl-impersonate-chrome /tests/install/bin/\nCOPY --from=chrome /build/out/curl_* /tests/install/bin/\nCOPY --from=chrome /build/out/libcurl-impersonate* /tests/install/lib/\n\nCOPY . .\n\n# Compile 'minicurl' which is used for testing libcurl-impersonate.\n# 'minicurl' is compiled against the \"regular\" libcurl.\n# libcurl-impersonate will replace it at runtime via LD_PRELOAD.\nRUN gcc -Wall -Werror -o /tests/install/bin/minicurl minicurl.c `curl-config --libs`\n\nENTRYPOINT [\"pytest\", \"--install-dir\", \"/tests/install\"]\n"
}