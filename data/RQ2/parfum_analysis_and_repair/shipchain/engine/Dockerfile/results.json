{
  "startTime": 1674219534698,
  "endTime": 1674219536096,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 30,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 37,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 50,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 20,
        "columnEnd": 36
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 57,
        "columnEnd": 73
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 20,
        "columnEnd": 36
      }
    }
  ],
  "repairedDockerfile": "## Base image with node and entrypoint scripts ##\n## =========================================== ##\nFROM node:12.18.3-alpine3.11 AS base\n\nLABEL maintainer=\"Lucas Clay <lclay@shipchain.io>\"\n\nENV LANG C.UTF-8\n\nRUN apk add --no-cache bash\n\nRUN mkdir /app\nWORKDIR /app\n\nCOPY ./compose/scripts/*.sh /\nRUN chmod +x /*.sh\nENTRYPOINT [\"/entrypoint.sh\"]\n\n\n## Image with system dependencies for building ##\n## =========================================== ##\nFROM base AS build\n\nRUN apk add --no-cache \\\n    libc6-compat \\\n    # git, python, make, g++ are for installing/building several npm modules\n    git \\\n    python2 \\\n    make \\\n    g++\n\n\n## Image with dev-dependencies ##\n## =========================== ##\nFROM build AS test\n\nCOPY package.json /app/\nCOPY yarn.lock /app/\nCOPY .yarnclean /app/\n\nRUN yarn --frozen-lockfile && yarn cache clean && yarn cache clean;\n\nCOPY . /app/\n\nRUN yarn compile && yarn cache clean;\n\n## Image only used for production building ##\n## ======================================= ##\nFROM build AS prod\n\nCOPY package.json /app/\nCOPY yarn.lock /app/\nCOPY .yarnclean /app/\n\nRUN yarn --prod --frozen-lockfile && yarn cache clean && yarn cache clean;\n\nCOPY . /app/\n\nRUN yarn compile && yarn cache clean;\n\n\n## Image to be deployed to ECS with additional utils and no build tools ##\n## ==================================================================== ##\nFROM base AS deploy\n\n# Install openssh for ECS management container\nRUN apk add --no-cache \\\n    openssh-server-pam \\\n    python3 \\\n    jq \\\n    openssl \\\n    shadow \\\n    nano\n\nRUN mkdir /var/run/sshd /etc/cron.d && touch /etc/pam.d/sshd\nRUN sed -i 's/^CREATE_MAIL_SPOOL=yes/CREATE_MAIL_SPOOL=no/' /etc/default/useradd\n\n# Keymaker for SSH auth via IAM\nRUN pip3 install --no-cache-dir \\\n    keymaker==1.0.8 \\\n    awscli==1.16.95 && \\\n    rm -rf /root/.cache/*\n\n# Configure public key SSH\nRUN echo \"PubkeyAuthentication yes\" >> /etc/ssh/sshd_config\nRUN echo \"UsePAM yes\" >> /etc/ssh/sshd_config\nRUN echo \"AllowAgentForwarding yes\" >> /etc/ssh/sshd_config\nRUN echo \"PasswordAuthentication no\" >> /etc/ssh/sshd_config\n\n# Copy production node_modules without having to install packages in build\nCOPY --from=prod /app /app\n"
}