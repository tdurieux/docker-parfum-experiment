diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wonderfall/dockerfiles/rtorrent-flood/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wonderfall/dockerfiles/rtorrent-flood/Dockerfile/repaired.Dockerfile
index 7238d23..28c7f40 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wonderfall/dockerfiles/rtorrent-flood/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wonderfall/dockerfiles/rtorrent-flood/Dockerfile/repaired.Dockerfile
@@ -62,18 +62,18 @@ RUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF`} \
  && git clone https://github.com/Rudde/mktorrent.git \
  && git clone https://github.com/acoustid/chromaprint.git \
  && cd /tmp/mktorrent && make -j ${NB_CORES} && make install \
- && cd /tmp/xmlrpc-c/stable && ./configure && make -j ${NB_CORES} && make install \
- && cd /tmp/libtorrent && ./autogen.sh && ./configure && make -j ${NB_CORES} && make install \
- && cd /tmp/rtorrent && ./autogen.sh && ./configure --with-xmlrpc-c && make -j ${NB_CORES} && make install \
+ && cd /tmp/xmlrpc-c/stable && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j ${NB_CORES} && make install \
+ && cd /tmp/libtorrent && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j ${NB_CORES} && make install \
+ && cd /tmp/rtorrent && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-xmlrpc-c && make -j ${NB_CORES} && make install \
  && cd /tmp \
- && wget -q http://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \
- && wget -q http://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \
+ && wget -q https://mediaarea.net/download/binary/mediainfo/${MEDIAINFO_VER}/MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \
+ && wget -q https://mediaarea.net/download/binary/libmediainfo0/${MEDIAINFO_VER}/MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \
  && wget -q https://github.com/MediaArea/ZenLib/archive/v${LIBZEN_VER}.tar.gz -O libzen.tar.gz \
  && tar xzf MediaInfo_DLL_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \
  && tar xzf MediaInfo_CLI_${MEDIAINFO_VER}_GNU_FromSource.tar.gz \
  && tar xzf libzen.tar.gz \
  && cd /tmp/ZenLib-${LIBZEN_VER}/Project/GNU/Library \
- && ./autogen.sh && ./configure --prefix=/usr --enable-shared --disable-static && make && make install \
+ && ./autogen.sh && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --enable-shared --disable-static && make && make install \
  && cd /tmp/MediaInfo_DLL_GNU_FromSource && ./SO_Compile.sh \
  && cd /tmp/MediaInfo_DLL_GNU_FromSource/ZenLib/Project/GNU/Library && make install \
  && cd /tmp/MediaInfo_DLL_GNU_FromSource/MediaInfoLib/Project/GNU/Library && make install \
@@ -95,7 +95,7 @@ RUN NB_CORES=${BUILD_CORES-`getconf _NPROCESSORS_CONF`} \
  && ln -sf /usr/local/lib/libzen.la /filebot/lib/x86_64/libzen.so \
  && ln -sf /usr/local/bin/mediainfo /usr/bin/mediainfo \
  && apk del build-dependencies \
- && rm -rf /var/cache/apk/* /tmp/*
+ && rm -rf /var/cache/apk/* /tmp/* && npm cache clean --force;
 
 COPY config.js /usr/flood/
 COPY s6.d /etc/s6.d