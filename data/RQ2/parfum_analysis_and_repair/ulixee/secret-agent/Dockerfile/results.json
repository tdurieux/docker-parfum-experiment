{
  "startTime": 1674220750044,
  "endTime": 1674220751469,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 28,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 20,
        "columnStart": 7,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 56,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "FROM node:14-slim\n\nENV GO_URL https://golang.org/dl/go1.14.2.linux-amd64.tar.gz\n\n# fonts\nRUN echo \"deb http://httpredir.debian.org/debian buster main contrib non-free\" > /etc/apt/sources.list \\\n    && echo \"deb http://httpredir.debian.org/debian buster-updates main contrib non-free\" >> /etc/apt/sources.list \\\n    && echo \"deb http://security.debian.org/ buster/updates main contrib non-free\" >> /etc/apt/sources.list \\\n    && echo \"ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true\" | debconf-set-selections \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        fonts-arphic-ukai \\\n        fonts-arphic-uming \\\n        fonts-ipafont-mincho \\\n        fonts-thai-tlwg \\\n        fonts-kacst \\\n        fonts-ipafont-gothic \\\n        fonts-unfonts-core \\\n        ttf-wqy-zenhei \\\n        ttf-mscorefonts-installer \\\n        fonts-freefont-ttf \\\n    && apt-get clean \\\n    && apt-get autoremove -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n## TODO: randomize font installs and add from google https://gist.github.com/keeferrourke/d29bf364bd292c78cf774a5c37a791db\n\n# Install Go for Mitm sockets\nRUN set -eux; \\\n\twget -O go.tgz \"${GO_URL}\" -q --progress=bar; \\\n\ttar -C /usr/local -xzf go.tgz; \\\n\trm go.tgz; \\\n\texport PATH=\"/usr/local/go/bin:$PATH\"; \\\n\tgo version\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\nWORKDIR /app/secret-agent\n\n# NOTE: You must run yarn build:docker from root for this to work\nCOPY ./build-dist /app/secret-agent/\n\nRUN cat /etc/*-release\n\n# Add user so we don't need --no-sandbox.\n# same layer as yarn install to keep re-chowned files from using up several hundred MBs more space\n\n# NOTE: this installs the monorepo, but you could also install secret-agent directly + and desired browsers\n# we will automatically install dependencies\nRUN cd /app/secret-agent && yarn \\\n    && $(npx install-browser-deps) \\\n    && groupadd -r sagent && useradd -r -g sagent -G audio,video sagent \\\n    && mkdir -p /home/sagent/Downloads \\\n    && mkdir -p /home/sagent/.cache \\\n    && chown -R sagent:sagent /home/sagent \\\n    && chown -R sagent:sagent /app/secret-agent \\\n    && mv ~/.cache/secret-agent /home/sagent/.cache/ \\\n    && chmod 777 /tmp \\\n    && chmod -R 777 /home/sagent/.cache/secret-agent && yarn cache clean;\n\n# Add below to run as unprivileged user.\nUSER sagent\n\nCMD node core/start;\n# To run this docker, please see /tools/docker/docker-run.sh\n"
}