diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tsutterley/read-icesat-2/.github/workflows/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tsutterley/read-icesat-2/.github/workflows/Dockerfile/repaired.Dockerfile
index 8971f3f..e889e82 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tsutterley/read-icesat-2/.github/workflows/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tsutterley/read-icesat-2/.github/workflows/Dockerfile/repaired.Dockerfile
@@ -23,7 +23,7 @@ RUN apt-get update -y && \
         pkg-config \
         wget \
         unzip && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /tmp
 
@@ -31,18 +31,18 @@ ENV JOBS 2
 
 ENV CFLAGS="-fPIC"
 ENV ZLIB_VERSION=1.2.12
-RUN wget -q http://zlib.net/zlib-${ZLIB_VERSION}.tar.gz && \
+RUN wget -q https://zlib.net/zlib-${ZLIB_VERSION}.tar.gz && \
     tar -xzf zlib-${ZLIB_VERSION}.tar.gz && \
     cd zlib-${ZLIB_VERSION} && \
-    ./configure --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
     cd contrib/minizip && \
     autoreconf -fvi && \
-    ./configure --quiet --prefix=/usr/local/ && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local/ && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm zlib-${ZLIB_VERSION}.tar.gz
 
 ENV CFLAGS="-fPIC"
 ENV SZIP_SHORT_VERSION=2.1.1
@@ -50,10 +50,10 @@ ENV SZIP_VERSION=2.1.1
 RUN wget -q https://support.hdfgroup.org/ftp/lib-external/szip/${SZIP_SHORT_VERSION}/src/szip-${SZIP_VERSION}.tar.gz && \
     tar -xzf szip-${SZIP_VERSION}.tar.gz && \
     cd szip-${SZIP_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm szip-${SZIP_VERSION}.tar.gz
 
 ENV OPENSSL_SHORT_VERSION=1.1.1
 ENV OPENSSL_VERSION=1.1.1k
@@ -63,13 +63,13 @@ RUN wget -q https://www.openssl.org/source/openssl-${OPENSSL_VERSION}.tar.gz &&
     ./config shared --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm openssl-${OPENSSL_VERSION}.tar.gz
 
 ENV CURL_VERSION=7.77.0
 RUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz && \
     tar -xzf curl-${CURL_VERSION}.tar.gz && \
     cd curl-${CURL_VERSION} && \
-    ./configure --quiet \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet \
         --enable-versioned-symbols \
         --enable-openssl-auto-load-config \
         --with-openssl \
@@ -77,45 +77,45 @@ RUN wget -q https://curl.haxx.se/download/curl-${CURL_VERSION}.tar.gz && \
         --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm curl-${CURL_VERSION}.tar.gz
 
 ENV XZ_VERSION=5.2.5
 RUN wget -q https://tukaani.org/xz/xz-${XZ_VERSION}.tar.gz && \
     tar -xzf xz-${XZ_VERSION}.tar.gz && \
     cd xz-${XZ_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm xz-${XZ_VERSION}.tar.gz
 
 ENV OPENMPI_SHORT_VERSION=v4.1
 ENV OPENMPI_VERSION=4.1.1
 RUN wget -q https://download.open-mpi.org/release/open-mpi/${OPENMPI_SHORT_VERSION}/openmpi-${OPENMPI_VERSION}.tar.gz && \
     tar -xzf openmpi-${OPENMPI_VERSION}.tar.gz && \
     cd openmpi-${OPENMPI_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make all install && \
-    make clean
+    make clean && rm openmpi-${OPENMPI_VERSION}.tar.gz
 
 ENV SQLITE_VERSION=3350500
 ENV SQLITE_YEAR 2021
 RUN wget -q https://sqlite.org/${SQLITE_YEAR}/sqlite-autoconf-${SQLITE_VERSION}.tar.gz && \
     tar -xzf sqlite-autoconf-${SQLITE_VERSION}.tar.gz && \
     cd sqlite-autoconf-${SQLITE_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm sqlite-autoconf-${SQLITE_VERSION}.tar.gz
 
 ENV LIBJPEG_SHORT_VERSION=9d
 ENV LIBJPEG_VERSION=v9d
-RUN wget -q http://ijg.org/files/jpegsrc.${LIBJPEG_VERSION}.tar.gz && \
+RUN wget -q https://ijg.org/files/jpegsrc.${LIBJPEG_VERSION}.tar.gz && \
     tar -xzf jpegsrc.${LIBJPEG_VERSION}.tar.gz && \
     cd jpeg-${LIBJPEG_SHORT_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm jpegsrc.${LIBJPEG_VERSION}.tar.gz
 
 ENV ZLIBLIB="/usr/local/lib"
 ENV ZLIBINC="/usr/local/include"
@@ -127,21 +127,21 @@ ENV LIBPNG_VERSION=1.6.37
 RUN wget -q https://download.sourceforge.net/libpng/libpng-${LIBPNG_VERSION}.tar.gz && \
     tar -xzf libpng-${LIBPNG_VERSION}.tar.gz && \
     cd libpng-${LIBPNG_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm libpng-${LIBPNG_VERSION}.tar.gz
 
 ENV LIBTIFF_VERSION=4.2.0
 RUN wget -q https://download.osgeo.org/libtiff/tiff-${LIBTIFF_VERSION}.tar.gz && \
     tar -xzf tiff-${LIBTIFF_VERSION}.tar.gz && \
     cd tiff-${LIBTIFF_VERSION} && \
-    ./configure --quiet --prefix=/usr/local \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local \
         --with-jpeg-include-dir=/usr/local/include \
         --with-jpeg-lib-dir=/usr/local/lib && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm tiff-${LIBTIFF_VERSION}.tar.gz
 
 ENV LIBKML_VERSION=1.3.0
 RUN wget -q https://github.com/libkml/libkml/archive/${LIBKML_VERSION}.tar.gz && \
@@ -157,14 +157,14 @@ RUN wget -q https://github.com/libkml/libkml/archive/${LIBKML_VERSION}.tar.gz &&
         -DCMAKE_INSTALL_PREFIX=/usr/local/ .. && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm ${LIBKML_VERSION}.tar.gz
 
 ENV CC=mpicc
 ENV HDF5_VERSION=1.10.5
 RUN wget -q https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-${HDF5_VERSION}.tar.gz && \
     tar -xzf hdf5-${HDF5_VERSION}.tar.gz && \
     cd hdf5-${HDF5_VERSION} && \
-    ./configure --quiet \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet \
         --enable-parallel \
         --enable-hl \
         --enable-shared \
@@ -173,7 +173,7 @@ RUN wget -q https://support.hdfgroup.org/ftp/HDF5/current/src/hdf5-${HDF5_VERSIO
         --with-szlib=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm hdf5-${HDF5_VERSION}.tar.gz
 
 ENV NETCDF_VERSION=4.8.1
 ENV CFLAGS="-fPIC -lcurl"
@@ -182,7 +182,7 @@ ENV LDFLAGS="-L/usr/local/lib"
 RUN --no-check-certificate https://github.com/Unidata/netcdf-c/archive/refs/tags/v${NETCDF_VERSION}.tar.gz && \
     tar -xvzf v${NETCDF_VERSION}.tar.gz && \
     cd netcdf-c-${NETCDF_VERSION} && \
-    ./configure --quiet \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet \
         --enable-parallel-tests \
         --enable-netcdf-4 \
         --enable-nczarr \
@@ -190,16 +190,16 @@ RUN --no-check-certificate https://github.com/Unidata/netcdf-c/archive/refs/tags
         --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm v${NETCDF_VERSION}.tar.gz
 
 ENV GEOS_VERSION=3.9.1
 RUN wget -q https://download.osgeo.org/geos/geos-${GEOS_VERSION}.tar.bz2 && \
     tar -xjf geos-${GEOS_VERSION}.tar.bz2 && \
     cd geos-${GEOS_VERSION} && \
-    ./configure --quiet --prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm geos-${GEOS_VERSION}.tar.bz2
 
 ENV PROJ_VERSION=8.0.1
 ENV PROJ_DATUMGRID_VERSION=1.8
@@ -207,7 +207,7 @@ ENV PROJ_NETWORK ON
 ENV SQLITE3_CFLAGS="-I/usr/local/include"
 ENV SQLITE3_LIBS="-L/usr/local/lib -lsqlite3"
 RUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz && \
-    wget -q http://download.osgeo.org/proj/proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip && \
+    wget -q https://download.osgeo.org/proj/proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip && \
     tar -xzf proj-${PROJ_VERSION}.tar.gz && \
     unzip proj-datumgrid-${PROJ_DATUMGRID_VERSION}.zip -d proj-${PROJ_VERSION}/data/ && \
     cd proj-${PROJ_VERSION} && \
@@ -227,7 +227,7 @@ RUN wget -q https://download.osgeo.org/proj/proj-${PROJ_VERSION}.tar.gz && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
     make clean && \
-    projsync --system-directory --all
+    projsync --system-directory --all && rm proj-${PROJ_VERSION}.tar.gz
 
 ENV CC=mpicc
 ENV CPPFLAGS="-I/usr/local/include"
@@ -241,7 +241,7 @@ ENV GDAL_VERSION=3.3.0
 RUN wget -q https://download.osgeo.org/gdal/CURRENT/gdal-${GDAL_VERSION}.tar.gz && \
     tar -xzf gdal-${GDAL_VERSION}.tar.gz && \
     cd gdal-${GDAL_VERSION} && \
-    ./configure --quiet \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --quiet \
         --disable-debug \
         --disable-static \
         --with-hdf5=/usr/local \
@@ -274,7 +274,7 @@ RUN wget -q https://download.osgeo.org/gdal/CURRENT/gdal-${GDAL_VERSION}.tar.gz
         --prefix=/usr/local && \
     make --quiet --jobs=${JOBS} && \
     make --quiet install && \
-    make clean
+    make clean && rm gdal-${GDAL_VERSION}.tar.gz
 
 RUN ldconfig