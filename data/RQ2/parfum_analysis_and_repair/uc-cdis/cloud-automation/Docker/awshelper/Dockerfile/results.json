{
  "startTime": 1674250757343,
  "endTime": 1674250758407,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build from root of cloud-automation/ repo:\n#   docker build -f Docker/awshelper/Dockerfile\n#\nFROM quay.io/cdis/ubuntu:18.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y \\\n      apt-utils \\\n      apt-transport-https \\\n      bash-completion \\\n      curl \\\n      dnsutils \\\n      ftp \\\n      gcc \\\n      git \\\n      groff-base \\\n      iputils-ping \\\n      jq \\\n      less \\\n      libpq-dev \\\n      lsb-release \\\n      netcat-openbsd \\\n      networkd-dispatcher \\\n      net-tools \\\n      openssh-client \\\n      openssh-server \\\n      postgresql-client \\\n      python3 \\\n      python3-dev \\\n      python3-pip \\\n      python3-setuptools \\\n      ssh \\\n      sudo \\\n      tmux \\\n      unzip \\\n      vim \\\n      wget \\\n      gettext-base && rm -rf /var/lib/apt/lists/*;\n\nRUN  python3 -m pip install --upgrade pip \\\n    && python3 -m pip install --upgrade setuptools \\\n    && python3 -m pip install -U crcmod \\\n    && python3 -m pip install --upgrade yq \\\n    && python3 -m pip install --upgrade 'gen3>4'\n\n# aws cli v2\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" \\\n    && unzip awscliv2.zip \\\n    && ./aws/install \\\n    && /bin/rm -rf awscliv2.zip ./aws\n\n# From  https://hub.docker.com/r/google/cloud-sdk/~/dockerfile/\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" && \\\n    echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" > /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \\\n    curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y google-cloud-sdk \\\n        google-cloud-sdk-cbt \\\n        kubectl && \\\n    apt-get install -y --no-install-recommends nodejs && \\\n    rm -rf /var/lib/apt/lists/* \\\n    gcloud config set core/disable_usage_reporting true && \\\n    gcloud config set component_manager/disable_update_check true && \\\n    gcloud config set metrics/environment github_docker_image && \\\n    gcloud --version && \\\n    kubectl version --client && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /var/log/*\n\nRUN useradd -m -s /bin/bash ubuntu && \\\n    ( echo \"ubuntu:gen3\" | chpasswd )\n\nRUN npm install elasticdump -g && npm cache clean --force;\n\n# Setup scripts to run sshd for wetty - see kube/services/tty\nRUN mkdir -p /opt/usersshd \\\n    && chown -R ubuntu: /opt/usersshd \\\n    && chmod -R a+rwX /run\n\nRUN mkdir /var/run/sshd \\\n  && touch /var/log/lastlog \\\n  && update-alternatives --install /usr/bin/python python /usr/bin/python3 100 \\\n  && update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 100 \\\n  && [ \"Python 3\" = \"$(python --version | awk -F . '{ print $1 }')\" ]\n\nEXPOSE 2222\n\n#-------------\n\nUSER ubuntu\nWORKDIR /home/ubuntu\n\n#\n# install and set up gen3\n#\nCOPY --chown=ubuntu:ubuntu . cloud-automation/\n\n# COPY generates files owned by root regardless of USER\nRUN /bin/rm -rf ./cloud-automation/node_modules\n\nRUN cp cloud-automation/Docker/awshelper/sshdStart.sh /opt/usersshd/ \\\n    && cp cloud-automation/Docker/awshelper/sshd_config /opt/usersshd/\n\nRUN cd ./cloud-automation \\\n    && npm ci \\\n    && cat ./Docker/awshelper/bashrc_suffix.sh >> ~/.bashrc\n\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -\n\nRUN git config --global user.email gen3 \\\n    && git config --global user.name gen3\n\n# smoke test\nRUN export GEN3_HOME=\"$HOME/cloud-automation\" \\\n    && bash -c 'source \"$GEN3_HOME/gen3/gen3setup.sh\" && gen3 help'\n\nCMD /bin/bash\n"
}