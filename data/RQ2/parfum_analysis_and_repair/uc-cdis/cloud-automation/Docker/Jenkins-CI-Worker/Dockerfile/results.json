{
  "startTime": 1674250242339,
  "endTime": 1674250243643,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 6,
        "columnEnd": 146
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 108,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 34,
        "columnEnd": 202
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 6,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 9,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 34,
        "columnEnd": 202
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 6,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 7,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM jenkins/jnlp-slave:4.9-1\n\nUSER root\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# install python\nRUN set -xe && apt-get update && apt-get install --no-install-recommends -y apt-utils dnsutils python python-setuptools python-dev python-pip python3 python3-pip python3-venv build-essential zip unzip jq less vim gettext-base && rm -rf /var/lib/apt/lists/*;\n\nRUN set -xe && apt-get update \\\n  && apt-get install --no-install-recommends -y lsb-release \\\n     apt-transport-https \\\n     ca-certificates \\\n     curl \\\n     gnupg2 \\\n     libffi-dev \\\n     libssl-dev \\\n     libghc-regex-pcre-dev \\\n     linux-headers-amd64 \\\n     libcurl4-openssl-dev \\\n     libncurses5-dev \\\n     libncursesw5-dev \\\n     libreadline-dev \\\n     libsqlite3-dev \\\n     libgdbm-dev \\\n     libdb5.3-dev \\\n     libbz2-dev \\\n     libexpat1-dev \\\n     liblzma-dev \\\n     python-virtualenv \\\n     lua5.3 \\\n     r-base \\\n     software-properties-common \\\n     sudo \\\n     tk-dev \\\n     zlib1g-dev \\\n     zsh \\\n     ca-certificates-java \\\n     openjdk-11-jre-headless \\\n  && ln -s /usr/bin/lua5.3 /usr/local/bin/lua && rm -rf /var/lib/apt/lists/*;\n\n# Use jdk11\nENV JAVA_HOME=\"/usr/lib/jvm/java-11-openjdk-amd64\"\nENV PATH=\"$JAVA_HOME/bin:$PATH\"\n\nCOPY ./certfix.sh /certfix.sh\nRUN chmod +x /certfix.sh\nRUN bash /certfix.sh\n\n# install google tools\nRUN export CLOUD_SDK_REPO=\"cloud-sdk-$(lsb_release -c -s)\" \\\n    && echo \"deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main\" > /etc/apt/sources.list.d/google-cloud-sdk.list \\\n    && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y google-cloud-sdk \\\n          google-cloud-sdk-cbt \\\n          kubectl && rm -rf /var/lib/apt/lists/*;\n\n#\n# install docker tools:\n#  * https://docs.docker.com/install/linux/docker-ce/debian/#install-docker-ce-1\n#  * https://docs.docker.com/compose/install/#install-compose\n#\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \\\n    && add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/debian \\\n   $(lsb_release -cs) \\\n   stable\" \\\n   && apt-get update \\\n   && apt-get install --no-install-recommends -y docker-ce \\\n   && curl -f -L \"https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose \\\n   && chmod a+rx /usr/local/bin/docker-compose && rm -rf /var/lib/apt/lists/*;\n\n# install nodejs\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -\nRUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# add psql: https://www.postgresql.org/download/linux/debian/\nRUN DISTRO=\"$(lsb_release -c -s)\"  \\\n      && echo \"deb http://apt.postgresql.org/pub/repos/apt/ ${DISTRO}-pgdg main\" > /etc/apt/sources.list.d/pgdg.list \\\n      && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n      && apt-get update \\\n      && apt-get install --no-install-recommends -y postgresql-client-13 libpq-dev \\\n      && rm -rf /var/lib/apt/lists/*\n\n# Copy sh script responsible for installing Python\nCOPY install-python3.8.sh /root/tmp/install-python3.8.sh\n\n# Run the script responsible for installing Python 3.8.0 and link it to /usr/bin/python\nRUN chmod +x /root/tmp/install-python3.8.sh; sync && \\\n\tbash /root/tmp/install-python3.8.sh && \\\n\trm -rf /root/tmp/install-python3.8.sh && \\\n        unlink /usr/bin/python3 && \\\n        ln -s /usr/local/bin/python3.8 /usr/bin/python3\n\n# Fix shebang for lsb_release\nRUN sed -i 's/python3/python3.8/' /usr/bin/lsb_release && \\\n    sed -i 's/python3/python3.8/' /usr/bin/add-apt-repository\n\n# install aws cli, poetry, pytest, etc.\nRUN set -xe && python3.8 -m pip install awscli --upgrade && python3.8 -m pip install pytest --upgrade && python3.8 -m pip install poetry && python3.8 -m pip install PyYAML --upgrade && python3.8 -m pip install lxml --upgrade && python3.8 -m pip install yq --upgrade && python3.8 -m pip install datadog --upgrade\n\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.8 -\n\n# install terraform\nRUN curl -f -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.11.15/terraform_0.11.15_linux_amd64.zip \\\n   && unzip /tmp/terraform.zip -d /usr/local/bin && /bin/rm /tmp/terraform.zip\n\nRUN curl -f -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.31/terraform_0.12.31_linux_amd64.zip \\\n   && unzip /tmp/terraform.zip -d /tmp && mv /tmp/terraform /usr/local/bin/terraform12 && /bin/rm /tmp/terraform.zip\n\n# install packer\nRUN curl -f -o /tmp/packer.zip https://releases.hashicorp.com/packer/1.5.1/packer_1.5.1_linux_amd64.zip\nRUN unzip /tmp/packer.zip -d /usr/local/bin; /bin/rm /tmp/packer.zip\n\n# Install google chrome\nRUN curl -f -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && echo \"deb [arch=amd64]  http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list \\\n    && apt-get -y update \\\n    && apt-get -y --no-install-recommends install google-chrome-stable && rm -rf /var/lib/apt/lists/*;\n\n# update /etc/sudoers\nRUN sed 's/^%sudo/#%sudo/' /etc/sudoers > /etc/sudoers.bak \\\n  && /bin/echo -e \"\\n%sudo    ALL=(ALL:ALL) NOPASSWD:ALL\\n\" >> /etc/sudoers.bak \\\n  && cp /etc/sudoers.bak /etc/sudoers \\\n  && usermod -G sudo jenkins\n\nUSER jenkins\n\nRUN git config --global user.email jenkins \\\n    && git config --global user.name jenkins\n\n"
}