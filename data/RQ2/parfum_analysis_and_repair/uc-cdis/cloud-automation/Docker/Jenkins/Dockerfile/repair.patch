diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uc-cdis/cloud-automation/Docker/Jenkins/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uc-cdis/cloud-automation/Docker/Jenkins/Dockerfile/repaired.Dockerfile
index e06eb7b..1df918e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uc-cdis/cloud-automation/Docker/Jenkins/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uc-cdis/cloud-automation/Docker/Jenkins/Dockerfile/repaired.Dockerfile
@@ -5,10 +5,10 @@ USER root
 ENV DEBIAN_FRONTEND=noninteractive
 
 # install python
-RUN set -xe && apt-get update && apt-get install -y apt-utils dnsutils python python-setuptools python-dev python-pip python3 python3-pip python3-venv build-essential zip unzip jq less vim gettext-base
+RUN set -xe && apt-get update && apt-get install --no-install-recommends -y apt-utils dnsutils python python-setuptools python-dev python-pip python3 python3-pip python3-venv build-essential zip unzip jq less vim gettext-base && rm -rf /var/lib/apt/lists/*;
 
 RUN set -xe && apt-get update \
-  && apt-get install -y lsb-release \
+  && apt-get install --no-install-recommends -y lsb-release \
      apt-transport-https \
      ca-certificates \
      curl \
@@ -33,16 +33,16 @@ RUN set -xe && apt-get update \
      tk-dev \
      zlib1g-dev \
      zsh \
-  && ln -s /usr/bin/lua5.3 /usr/local/bin/lua
+  && ln -s /usr/bin/lua5.3 /usr/local/bin/lua && rm -rf /var/lib/apt/lists/*;
 
 # install google tools
 RUN export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" \
     && echo "deb https://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" > /etc/apt/sources.list.d/google-cloud-sdk.list \
-    && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \
+    && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \
     && apt-get update \
-    && apt-get install -y google-cloud-sdk \
+    && apt-get install --no-install-recommends -y google-cloud-sdk \
           google-cloud-sdk-cbt \
-          kubectl
+          kubectl && rm -rf /var/lib/apt/lists/*;
 
 #
 # install docker tools:
@@ -55,20 +55,20 @@ RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - \
    $(lsb_release -cs) \
    stable" \
    && apt-get update \
-   && apt-get install -y docker-ce \
-   && curl -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
-   && chmod a+rx /usr/local/bin/docker-compose
+   && apt-get install --no-install-recommends -y docker-ce \
+   && curl -f -L "https://github.com/docker/compose/releases/download/1.23.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
+   && chmod a+rx /usr/local/bin/docker-compose && rm -rf /var/lib/apt/lists/*;
 
 # install nodejs
-RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -
-RUN apt-get update && apt-get install -y nodejs
+RUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -
+RUN apt-get update && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # add psql: https://www.postgresql.org/download/linux/debian/
 RUN DISTRO="$(lsb_release -c -s)"  \
       && echo "deb http://apt.postgresql.org/pub/repos/apt/ ${DISTRO}-pgdg main" > /etc/apt/sources.list.d/pgdg.list \
       && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
       && apt-get update \
-      && apt-get install -y postgresql-client-13 libpq-dev \
+      && apt-get install --no-install-recommends -y postgresql-client-13 libpq-dev \
       && rm -rf /var/lib/apt/lists/*
 
 # Copy sh script responsible for installing Python
@@ -88,24 +88,24 @@ RUN sed -i 's/python3/python3.5/' /usr/bin/lsb_release && \
 # install aws cli, poetry, pytest, etc.
 RUN set -xe && python3 -m pip install awscli --upgrade && python3 -m pip install pytest --upgrade && python3 -m pip install poetry && python3 -m pip install PyYAML --upgrade && python3 -m pip install lxml --upgrade && python3 -m pip install yq --upgrade
 
-RUN curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
+RUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3 -
 
 # install chrome (supports headless mode)
 RUN set -xe \
     && curl -fsSL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \
     && echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" > /etc/apt/sources.list.d/google-chrome.list \
     && apt-get update \
-    && apt-get install -y google-chrome-stable
+    && apt-get install --no-install-recommends -y google-chrome-stable && rm -rf /var/lib/apt/lists/*;
 
 # install terraform
-RUN curl -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.11.15/terraform_0.11.15_linux_amd64.zip \
+RUN curl -f -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.11.15/terraform_0.11.15_linux_amd64.zip \
    && unzip /tmp/terraform.zip -d /usr/local/bin && /bin/rm /tmp/terraform.zip
 
-RUN curl -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.31/terraform_0.12.31_linux_amd64.zip \
+RUN curl -f -o /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.31/terraform_0.12.31_linux_amd64.zip \
    && unzip /tmp/terraform.zip -d /tmp && mv /tmp/terraform /usr/local/bin/terraform12 && /bin/rm /tmp/terraform.zip
 
 # install packer
-RUN curl -o /tmp/packer.zip https://releases.hashicorp.com/packer/1.5.1/packer_1.5.1_linux_amd64.zip
+RUN curl -f -o /tmp/packer.zip https://releases.hashicorp.com/packer/1.5.1/packer_1.5.1_linux_amd64.zip
 RUN unzip /tmp/packer.zip -d /usr/local/bin; /bin/rm /tmp/packer.zip
 
 # update /etc/sudoers