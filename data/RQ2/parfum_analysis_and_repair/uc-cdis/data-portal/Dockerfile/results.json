{
  "startTime": 1674217424192,
  "endTime": 1674217424958,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To check running container: docker exec -it dataportal /bin/bash\n\nFROM quay.io/cdis/ubuntu:20.04\n\nENV DEBIAN_FRONTEND=noninteractive\nENV REACT_APP_PROJECT_ID=search\n\n# disable npm 7's brand new update notifier to prevent Portal from stuck at starting up\n# see https://github.com/npm/cli/issues/3163\nENV NPM_CONFIG_UPDATE_NOTIFIER=false\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential \\\n    libssl1.1 \\\n    libgnutls30 \\\n    ca-certificates \\\n    curl \\\n    git \\\n    nginx \\\n    python3 \\\n    time \\\n    vim \\\n    && curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n    && apt-get install -y --no-install-recommends nodejs \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && ln -sf /dev/stdout /var/log/nginx/access.log \\\n    && ln -sf /dev/stderr /var/log/nginx/error.log \\\n    && npm install -g npm@8.5 && npm cache clean --force;\n\nARG APP=dev\nARG BASENAME\n\nRUN mkdir -p /data-portal\nCOPY . /data-portal\nWORKDIR /data-portal\nRUN COMMIT=`git rev-parse HEAD` && echo \"export const portalCommit = \\\"${COMMIT}\\\";\" >src/versions.js \\\n    && VERSION=`git describe --always --tags` && echo \"export const portalVersion =\\\"${VERSION}\\\";\" >>src/versions.js \\\n    && /bin/rm -rf .git \\\n    && /bin/rm -rf node_modules\nRUN npm config set unsafe-perm=true \\\n    && npm ci \\\n    && npm run relay \\\n    && npm run params\n    # see https://stackoverflow.com/questions/48387040/nodejs-recommended-max-old-space-size\nRUN NODE_OPTIONS=--max-old-space-size=3584 NODE_ENV=production time npx webpack build\nRUN cp nginx.conf /etc/nginx/conf.d/nginx.conf \\\n    && rm /etc/nginx/sites-enabled/default\n\n# In standard prod these will be overwritten by volume mounts\n# Provided here for ease of use in development and\n# non-standard deployment environments\n\nRUN mkdir /mnt/ssl \\\n    && openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /mnt/ssl/nginx.key -out /mnt/ssl/nginx.crt -subj '/countryName=US/stateOrProvinceName=Illinois/localityName=Chicago/organizationName=CDIS/organizationalUnitName=PlanX/commonName=localhost/emailAddress=ops@cdis.org'\n\nCMD bash ./dockerStart.sh\n"
}