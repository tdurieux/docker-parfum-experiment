{
  "startTime": 1674217631723,
  "endTime": 1674217632836,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 25,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 25,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 81,
        "columnStart": 25,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 25,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 25,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 81,
        "columnStart": 25,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -----------------------------------------------------------------------------\n# Builder image for Magma proto files\n# -----------------------------------------------------------------------------\nFROM ubuntu:focal AS builder\n\n# workaround to avoid interactive tzdata configurtaion\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install the runtime deps from apt.\nRUN apt-get -y update && apt-get -y --no-install-recommends install curl make virtualenv zip \\\n  apt-utils software-properties-common apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n# Install protobuf compiler.\nRUN curl -Lfs https://github.com/protocolbuffers/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip && \\\n  unzip protoc3.zip -d protoc3 && \\\n  mv protoc3/bin/protoc /usr/bin/protoc && \\\n  chmod a+rx /usr/bin/protoc && \\\n  cp -r protoc3/include/google /usr/include/ && \\\n  chmod -R a+Xr /usr/include/google && \\\n  rm -rf protoc3.zip protoc3\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install python3.8 && rm -rf /var/lib/apt/lists/*;\n\nENV MAGMA_ROOT /magma\nENV PYTHON_BUILD /build/python\nENV PIP_CACHE_HOME ~/.pipcache\n\n# Generate python proto bindings.\nCOPY cwf/protos $MAGMA_ROOT/cwf/protos\nCOPY feg/protos $MAGMA_ROOT/feg/protos\nCOPY lte/gateway/python/defs.mk $MAGMA_ROOT/lte/gateway/python/defs.mk\nCOPY lte/gateway/python/Makefile $MAGMA_ROOT/lte/gateway/python/Makefile\nCOPY lte/protos $MAGMA_ROOT/lte/protos\nCOPY orc8r/gateway/python $MAGMA_ROOT/orc8r/gateway/python\nCOPY orc8r/protos $MAGMA_ROOT/orc8r/protos\nCOPY protos $MAGMA_ROOT/protos\nENV PROTO_LIST orc8r_protos lte_protos feg_protos cwf_protos\nRUN make -C $MAGMA_ROOT/orc8r/gateway/python protos\n\n# -----------------------------------------------------------------------------\n# Dev/Production image\n# -----------------------------------------------------------------------------\nFROM ubuntu:focal AS lte_gateway_python\n\n# Add the magma apt repo\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-utils software-properties-common apt-transport-https && rm -rf /var/lib/apt/lists/*;\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nCOPY cwf/gateway/deploy/roles/ovs/files/magma-preferences /etc/apt/preferences.d/\n# TODO: change repo to focal once there will be such\nRUN apt-key add /tmp/jfrog.pub && \\\n    apt-add-repository \"deb https://artifactory.magmacore.org/artifactory/debian-test focal-ci main\" && \\\n    apt-add-repository \"deb http://archive.ubuntu.com/ubuntu/ focal-proposed restricted main multiverse universe\"\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install \\\n    curl \\\n    libc-ares2 \\\n    libev4 \\\n    libffi-dev \\\n    libjansson4 \\\n    libjemalloc2 \\\n    libssl-dev \\\n    libsystemd-dev \\\n    magma-nghttpx=1.31.1-1 \\\n    net-tools \\\n    openssl \\\n    pkg-config \\\n    python-cffi \\\n    python3-pip \\\n    python3.8 \\\n    python3.8-dev \\\n    redis-server \\\n    iptables \\\n    git \\\n    automake \\\n    gcc \\\n    libtool \\\n    libcap-ng-dev \\\n    linux-headers-generic \\\n    netcat \\\n    iputils-ping \\\n    bcc-tools && rm -rf /var/lib/apt/lists/*;\n\nRUN python3.8 -m pip install --no-cache-dir \\\n    Cython \\\n    fire \\\n    envoy \\\n    glob2 \\\n    ryu \\\n    flask \\\n    aiodns \\\n    pymemoize \\\n    wsgiserver \\\n    pycryptodome \\\n    six \\\n    eventlet \\\n    h2 \\\n    hpack \\\n    docker \\\n    redis \\\n    redis-collections \\\n    aiohttp \\\n    Jinja2 \\\n    netifaces \\\n    pylint \\\n    PyYAML \\\n    pytz \\\n    snowflake \\\n    systemd-python \\\n    itsdangerous \\\n    click \\\n    pycares \\\n    python-dateutil \\\n    aioeventlet>=0.4 \\\n    jsonpickle\n\n# TODO: aioeventlet>=0.4 was manually added to fix regression tracked with GH issue 6152\n# Fix to pull the patched aioeventlet build deployed by the aioeventlet_build.sh script\n\nCOPY cwf/gateway/deploy/roles/ovs/files/nx_actions.py /usr/local/lib/python3.8/dist-packages/ryu/ofproto/\n\n# Temporary workaround to restore uplink bridge flows\nRUN mkdir -p /var/opt/magma/scripts\nCOPY cwf/gateway/deploy/roles/cwag/files/add_uplink_bridge_flows.sh /var/opt/magma/scripts\n\n# Install OVS via Magma bionic pkg repo\nRUN git clone --depth 1 --single-branch --branch v2.12.0 https://github.com/openvswitch/ovs.git\n\nCOPY cwf/gateway/deploy/roles/ovs/files/0001-Add-custom-IPDR-fields-for-IPFIX-export.patch /tmp\nCOPY cwf/gateway/deploy/roles/ovs/files/0002-ovs-Handle-spaces-in-ovs-arguments.patch /tmp\nCOPY cwf/gateway/deploy/roles/ovs/files/0003-Add-pdp_start_epoch-custom-field-to-IPFIX-export.patch /tmp\nCOPY cwf/gateway/deploy/roles/ovs/files//0004-ovsdb-idlc.in-dict-changes.patch /tmp\nWORKDIR ovs\nRUN git apply /tmp/0001-Add-custom-IPDR-fields-for-IPFIX-export.patch\nRUN git apply /tmp/0002-ovs-Handle-spaces-in-ovs-arguments.patch\nRUN git apply /tmp/0003-Add-pdp_start_epoch-custom-field-to-IPFIX-export.patch\nRUN git apply /tmp/0004-ovsdb-idlc.in-dict-changes.patch\nRUN ./boot.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --localstatedir=/var --sysconfdir=/etc\nRUN make\nRUN make install\n\n# Install orc8r python (magma.common required for lte python)\nCOPY orc8r/gateway/python /tmp/orc8r\nRUN python3.8 -m pip install --no-cache-dir /tmp/orc8r\n\n# Install lte python\nCOPY lte/gateway/python /tmp/lte\nRUN python3.8 -m pip install --no-cache-dir /tmp/lte\n\n# Copy the configs.\nCOPY lte/gateway/configs /etc/magma\nCOPY orc8r/gateway/configs/templates /etc/magma/templates\nRUN mkdir -p /var/opt/magma/configs\n\nWORKDIR /\n\n# Copy the build artifacts.\nCOPY --from=builder /build/python/gen /usr/local/lib/python3.8/dist-packages/\n\n# update aioh2 since there is no pushed package, but master is fixed\nRUN python3.8 -m pip install --force-reinstall git+https://github.com/URenko/aioh2.git\n\n# patching aioeventlet\nRUN mkdir /patches\nCOPY lte/gateway/deploy/roles/magma/files/patches/aioeventlet.py38.patch /patches\nRUN patch -N -s -f /usr/local/lib/python3.8/dist-packages/aioeventlet.py < patches/aioeventlet.py38.patch\n"
}