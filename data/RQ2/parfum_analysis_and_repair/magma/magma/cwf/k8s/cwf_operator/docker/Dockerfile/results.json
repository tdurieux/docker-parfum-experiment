{
  "startTime": 1674250330957,
  "endTime": 1674250331624,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2020 The Magma Authors.\n\n# This source code is licensed under the BSD-style license found in the\n# LICENSE file in the root directory of this source tree.\n\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\nFROM ubuntu:bionic as builder\n\n# Add the magma apt repo\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-utils software-properties-common apt-transport-https && rm -rf /var/lib/apt/lists/*;\n\n# Install the runtime deps.\nRUN apt-get update && apt-get install --no-install-recommends -y bzr curl daemontools gcc && rm -rf /var/lib/apt/lists/*;\n\n# Install Golang 1.18\nWORKDIR /usr/local\nARG GOLANG_VERSION=\"1.18.3\"\nRUN GO_TARBALL=\"go${GOLANG_VERSION}.linux-amd64.tar.gz\" \\\n && curl -f https://artifactory.magmacore.org/artifactory/generic/${GO_TARBALL} --remote-name --location \\\n && tar -xzf ${GO_TARBALL} \\\n && ln -s /usr/local/go/bin/go /usr/local/bin/go \\\n && rm ${GO_TARBALL}\n\nENV GOBIN /var/opt/magma/bin\nENV PATH ${PATH}:${GOBIN}\nENV GO111MODULE on\n# Use public go modules proxy\nENV GOPROXY https://proxy.golang.org\n\n# Copy just the go.mod and go.sum files to download the golang deps.\n# This step allows us to cache the downloads, and prevents reaching out to\n# the internet unless any of the go.mod or go.sum files are changed.\nCOPY cwf/cloud/go/go.* $MAGMA_ROOT/cwf/cloud/go/\nCOPY cwf/k8s/cwf_operator/go.*  $MAGMA_ROOT/cwf/k8s/cwf_operator/\nCOPY lte/cloud/go/go.* $MAGMA_ROOT/lte/cloud/go/\nCOPY feg/cloud/go/go.* $MAGMA_ROOT/feg/cloud/go/\nCOPY feg/cloud/go/protos/go.* $MAGMA_ROOT/feg/cloud/go/protos/\nCOPY orc8r/lib/go/go.* $MAGMA_ROOT/orc8r/lib/go/\nCOPY orc8r/lib/go/protos/go.* $MAGMA_ROOT/orc8r/lib/go/protos/\nCOPY orc8r/cloud/go/go.* $MAGMA_ROOT/orc8r/cloud/go/\nCOPY orc8r/gateway/go/go.* $MAGMA_ROOT/orc8r/gateway/go/\nWORKDIR $MAGMA_ROOT/cwf/k8s/cwf_operator\nRUN go mod download; exit 0\n\n# Copy and build the go code.\nCOPY cwf/cloud/go $MAGMA_ROOT/cwf/cloud/go\nCOPY feg/cloud/go $MAGMA_ROOT/feg/cloud/go\nCOPY lte/cloud/go $MAGMA_ROOT/lte/cloud/go\nCOPY orc8r/lib/go $MAGMA_ROOT/orc8r/lib/go\nCOPY orc8r/cloud/go $MAGMA_ROOT/orc8r/cloud/go\nCOPY orc8r/gateway/go $MAGMA_ROOT/orc8r/gateway/go\nCOPY cwf/k8s/cwf_operator/cmd $MAGMA_ROOT/cwf/k8s/cwf_operator/cmd\nCOPY cwf/k8s/cwf_operator/pkg $MAGMA_ROOT/cwf/k8s/cwf_operator/pkg\nCOPY cwf/k8s/cwf_operator/version $MAGMA_ROOT/cwf/k8s/cwf_operator/version\nRUN go install ./cmd/manager/\n\n# -----------------------------------------------------------------------------\n# Production image\n# -----------------------------------------------------------------------------\nFROM ubuntu:bionic as cwf_operator\n\nENV OPERATOR=/usr/local/bin/cwf-operator \\\n    USER_UID=1001 \\\n    USER_NAME=cwf-operator\n\n# Install the runtime deps.\nRUN apt-get update && apt-get install --no-install-recommends -y curl openssh-server fping && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L \"https://github.com/Mirantis/virtlet/releases/download/v1.5.1/virtletctl\" -o /usr/bin/virtletctl\nRUN chmod 755 /usr/bin/virtletctl\n\n# install operator binary\nCOPY --from=builder /var/opt/magma/bin/manager ${OPERATOR}\n\nCOPY cwf/k8s/cwf_operator/docker/entrypoint /usr/local/bin\nCOPY cwf/k8s/cwf_operator/docker/user_setup /usr/local/bin\nCOPY cwf/gateway/helm/cwf-kubevirt /helm-charts/cwf\nRUN  /usr/local/bin/user_setup\n\nENTRYPOINT [\"/usr/local/bin/entrypoint\"]\nUSER ${USER_UID}\n"
}