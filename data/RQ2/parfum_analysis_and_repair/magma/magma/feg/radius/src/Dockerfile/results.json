{
  "startTime": 1674220712152,
  "endTime": 1674220713160,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine as builder\nRUN apk add --no-cache git gcc musl-dev bash protobuf\n\nENV MAGMA_ROOT /magma\nENV GOPROXY https://proxy.golang.org\n\nCOPY feg/radius/lib/go/ $MAGMA_ROOT/feg/radius/lib/go\nCOPY feg/radius/src/go.* $MAGMA_ROOT/feg/radius/src/\nCOPY orc8r/lib/go/ $MAGMA_ROOT/orc8r/lib/go/\nWORKDIR $MAGMA_ROOT/feg/radius/src\nRUN go mod download\n\nCOPY feg/radius/src/ $MAGMA_ROOT/feg/radius/src/\nRUN true # workaround for moby issue #37965\nCOPY feg/radius/lib/go/ $MAGMA_ROOT/feg/radius/lib/go/\nRUN ./run.sh build\n\nFROM alpine\nRUN apk add --no-cache gettext musl\n\nCOPY feg/radius/src/config/samples/*template /app/\nCOPY feg/radius/src/docker-entrypoint.sh /app/docker-entrypoint.sh\nRUN chmod 0755 /app/docker-entrypoint.sh\n\nCOPY --from=builder /magma/feg/radius/src/radius /app/\nWORKDIR /app\n# Add version file with default BUILD_NUM unless set otherwise in build command\nARG BUILD_NUM=1.0.0\nRUN echo \"${BUILD_NUM}\" > /app/VERSION\n# ENTRYPOINT [ \"./docker-entrypoint.sh\" ]\n"
}