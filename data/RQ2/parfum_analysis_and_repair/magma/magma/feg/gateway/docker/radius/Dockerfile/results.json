{
  "startTime": 1674253798015,
  "endTime": 1674253799136,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:alpine as builder\nRUN apk add --no-cache git gcc musl-dev bash protobuf netcat-openbsd\n\nRUN go get -d -u github.com/golang/protobuf/protoc-gen-go\nRUN git -C \"$(go env GOPATH)\"/src/github.com/golang/protobuf checkout v1.2.0\nRUN go install github.com/golang/protobuf/protoc-gen-go\n\n# Use public go modules proxy\nENV GOPROXY https://proxy.golang.org\n\nRUN printenv > /etc/environment\n\n# Copy just the go.mod and go.sum files to download the golang deps.\n# This step allows us to cache the downloads, and prevents reaching out to\n# the internet unless any of the go.mod or go.sum files are changed.\nCOPY feg/radius/lib/go/ /radius/lib/go\nCOPY feg/radius/src/go.* /radius/src/\nWORKDIR /radius/src\nRUN go mod download\n\nCOPY feg/radius/src /radius/src\nCOPY feg/radius/src/config/samples/radius.cwf.config.json.template /radius/src/radius.config.json.template\nCOPY feg/gateway/services/aaa /gateway/services/aaa\nRUN ./run.sh build\n\nFROM alpine\nRUN apk add --no-cache gettext musl\nCOPY --from=builder /radius/src/radius /app/\nCOPY --from=builder /radius/src/radius.config.json.template /app/\n\nWORKDIR /app\nCMD [\"sh\", \"-c\", \"envsubst < radius.config.json.template > radius.config.json && ./radius\"]\n\n"
}