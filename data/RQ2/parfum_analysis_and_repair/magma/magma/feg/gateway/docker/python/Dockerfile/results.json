{
  "startTime": 1674219268184,
  "endTime": 1674219269429,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 25,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 25,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 97,
        "columnStart": 25,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 10,
        "columnStart": 25,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 25,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 97,
        "columnStart": 25,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -----------------------------------------------------------------------------\n# Builder image to generate proto files\n# -----------------------------------------------------------------------------\nFROM ubuntu:focal AS builder\n\n# workaround to avoid interactive tzdata configuration\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install the runtime deps from apt.\nRUN apt-get -y update && apt-get -y --no-install-recommends install curl make virtualenv zip \\\n apt-utils software-properties-common apt-transport-https git openjdk-8-jdk ant && rm -rf /var/lib/apt/lists/*;\n\n# Install protobuf compiler.\nRUN curl -Lfs https://github.com/protocolbuffers/protobuf/releases/download/v3.1.0/protoc-3.1.0-linux-x86_64.zip -o protoc3.zip && \\\n  unzip protoc3.zip -d protoc3 && \\\n  mv protoc3/bin/protoc /usr/bin/protoc && \\\n  chmod a+rx /usr/bin/protoc && \\\n  cp -r protoc3/include/google /usr/include/ && \\\n  chmod -R a+Xr /usr/include/google && \\\n  rm -rf protoc3.zip protoc3\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install python3.8 && rm -rf /var/lib/apt/lists/*;\n\nENV MAGMA_ROOT /magma\nENV PYTHON_BUILD /build/python\nENV PIP_CACHE_HOME ~/.pipcache\nENV CODEGEN_ROOT /var/tmp/codegen\nENV CODEGEN_VERSION 2.2.3\nENV SWAGGER_CODEGEN_DIR $CODEGEN_ROOT/modules/swagger-codegen-cli/target\nENV SWAGGER_CODEGEN_JAR $SWAGGER_CODEGEN_DIR/swagger-codegen-cli.jar\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64/\nRUN printenv > /etc/environment\n\n# Download swagger codegen\nRUN mkdir -p ${SWAGGER_CODEGEN_DIR}; \\\n    curl -Lfs https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/${CODEGEN_VERSION}/swagger-codegen-cli-${CODEGEN_VERSION}.jar -o ${SWAGGER_CODEGEN_JAR}\n\n# Generate python proto bindings.\nCOPY cwf/protos $MAGMA_ROOT/cwf/protos\nCOPY cwf/swagger $MAGMA_ROOT/cwf/swagger\nCOPY feg/protos $MAGMA_ROOT/feg/protos\nCOPY feg/swagger $MAGMA_ROOT/feg/swagger\nCOPY lte/gateway/python/defs.mk $MAGMA_ROOT/lte/gateway/python/defs.mk\nCOPY lte/gateway/python/Makefile $MAGMA_ROOT/lte/gateway/python/Makefile\nCOPY lte/protos $MAGMA_ROOT/lte/protos\nCOPY lte/swagger $MAGMA_ROOT/lte/swagger\nCOPY orc8r/gateway/python $MAGMA_ROOT/orc8r/gateway/python\nCOPY orc8r/protos $MAGMA_ROOT/orc8r/protos\nCOPY orc8r/swagger $MAGMA_ROOT/orc8r/swagger\nCOPY orc8r/tools/ansible/roles/fluent_bit/files $MAGMA_ROOT/orc8r/tools/ansible/roles/fluent_bit/files\nCOPY protos $MAGMA_ROOT/protos\nENV PROTO_LIST orc8r_protos lte_protos feg_protos cwf_protos\nRUN make -C $MAGMA_ROOT/orc8r/gateway/python protos\nENV SWAGGER_LIST lte_swagger_specs feg_swagger_specs cwf_swagger_specs orc8r_swagger_specs\nRUN make -C $MAGMA_ROOT/orc8r/gateway/python swagger\n\n# -----------------------------------------------------------------------------\n# Production image\n# -----------------------------------------------------------------------------\nFROM ubuntu:focal AS gateway_python\nARG MAGMA_BUILD_BRANCH=unknown\nARG MAGMA_BUILD_TAG=unknown\nARG MAGMA_BUILD_COMMIT_HASH=unknonw\nARG MAGMA_BUILD_COMMIT_DATE=unknown\n\n# Add the magma apt repo\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-utils software-properties-common apt-transport-https curl && rm -rf /var/lib/apt/lists/*;\nCOPY orc8r/tools/ansible/roles/pkgrepo/files/jfrog.pub /tmp/jfrog.pub\nRUN apt-key add /tmp/jfrog.pub && \\\n    apt-add-repository \"deb https://artifactory.magmacore.org/artifactory/debian-test focal-ci main\"\nRUN curl -f -L https://packages.fluentbit.io/fluentbit.key > /tmp/fluentbit.key\nRUN apt-key add /tmp/fluentbit.key && \\\n    apt-add-repository \"deb https://packages.fluentbit.io/ubuntu/focal focal main\"\n\n# Install the runtime deps from apt.\nRUN apt-get -y update && apt-get -y --no-install-recommends install \\\n  iproute2 \\\n  libc-ares2 \\\n  libev4 \\\n  libffi-dev \\\n  libjansson4 \\\n  libjemalloc2 \\\n  libssl-dev \\\n  libsystemd-dev \\\n  magma-nghttpx=1.31.1-1 \\\n  net-tools \\\n  openssl \\\n  iputils-ping \\\n  pkg-config \\\n  python-cffi \\\n  python3-pip \\\n  python3.8 \\\n  python3.8-dev \\\n  redis-server \\\n  git \\\n  netcat \\\n  td-agent-bit && rm -rf /var/lib/apt/lists/*;\n\n# Install docker.\nRUN curl -f -sSL https://get.docker.com/ > /tmp/get_docker.sh && \\\n    sh /tmp/get_docker.sh && \\\n    rm /tmp/get_docker.sh\n\n# Install docker-compose for upgrades\nRUN curl -f -L \"https://github.com/docker/compose/releases/download/1.25.0-rc1/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/bin/docker-compose\nRUN chmod 755 /usr/bin/docker-compose\n\n\n# Install python code.\nCOPY orc8r/gateway/python /tmp/orc8r\nRUN python3.8 -m pip install --no-cache-dir /tmp/orc8r\n\n# update aioh2 since there is no pushed package\nRUN pip3 install --no-cache-dir --force-reinstall git+https://github.com/URenko/aioh2.git\n\n# Copy the build artifacts.\nCOPY --from=builder /build/python/gen /usr/local/lib/python3.8/dist-packages/\n\n# Copy the configs.\nCOPY feg/gateway/configs /etc/magma\n\nCOPY orc8r/gateway/configs/templates /etc/magma/templates\n\nRUN mkdir -p /var/opt/magma/configs\nRUN mkdir -p /var/opt/magma/fluent-bit\n\n# Add commit information\nENV MAGMA_BUILD_BRANCH $MAGMA_BUILD_BRANCH\nENV MAGMA_BUILD_TAG $MAGMA_BUILD_TAG\nENV MAGMA_BUILD_COMMIT_HASH $MAGMA_BUILD_COMMIT_HASH\nENV MAGMA_BUILD_COMMIT_DATE $MAGMA_BUILD_COMMIT_DATE\n"
}