diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/magma/magma/lte/gateway/docker/mme/Dockerfile.ubuntu18.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/magma/magma/lte/gateway/docker/mme/Dockerfile.ubuntu18.04/repaired.Dockerfile
index 23581cb..2355c4b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/magma/magma/lte/gateway/docker/mme/Dockerfile.ubuntu18.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/magma/magma/lte/gateway/docker/mme/Dockerfile.ubuntu18.04/repaired.Dockerfile
@@ -31,25 +31,25 @@ RUN [ "/bin/bash", "-c", "echo \"Install general purpose packages\" && \
 RUN echo "Install 3rd party dependencies" && \
     apt-get update && \
     echo "Install CMake" && \
-    apt-get -y install cmake && \
+    apt-get -y --no-install-recommends install cmake && \
     echo "Install FMT lib requirements" && \
-    apt-get -y install libunwind8-dev libelf-dev libdwarf-dev bzip2 && \
+    apt-get -y --no-install-recommends install libunwind8-dev libelf-dev libdwarf-dev bzip2 && \
     echo "Install FreeDiameter requirements" && \
-    apt-get -y install libsctp1 libsctp-dev libgcrypt-dev \
+    apt-get -y --no-install-recommends install libsctp1 libsctp-dev libgcrypt-dev \
     bison flex libidn11-dev && \
     echo "Install libgtpnl requirements" && \
-    apt-get -y install libmnl-dev && \
+    apt-get -y --no-install-recommends install libmnl-dev && \
     echo "Install Nettle requirements" && \
-    apt-get install -y libgoogle-glog-dev libconfig-dev libxml2-dev \
+    apt-get install --no-install-recommends -y libgoogle-glog-dev libconfig-dev libxml2-dev \
     libyaml-cpp-dev nlohmann-json-dev && \
     echo "Install Prometheus requirements" && \
     wget --quiet https://dl.influxdata.com/telegraf/releases/telegraf_1.18.2-1_amd64.deb && \
     dpkg -i telegraf_1.18.2-1_amd64.deb && \
     echo "Install ZeroMQ" && \
-    apt-get install -y libczmq-dev=4.1.0-2 && \
+    apt-get install --no-install-recommends -y libczmq-dev=4.1.0-2 && \
     echo "Install libtins" && \
-    apt-get install -y libtins-dev && \
-    ln -s /usr/bin/python2.7 /usr/local/bin/python
+    apt-get install --no-install-recommends -y libtins-dev && \
+    ln -s /usr/bin/python2.7 /usr/local/bin/python && rm -rf /var/lib/apt/lists/*;
 
 RUN ["/bin/bash", "-c", "if [[ -v GIT_PROXY ]]; then git config --global http.proxy $GIT_PROXY; fi"]
 
@@ -67,10 +67,10 @@ RUN wget --quiet https://ftp.gnu.org/gnu/nettle/nettle-2.5.tar.gz && \
     wget --quiet https://www.gnupg.org/ftp/gcrypt/gnutls/v3.1/gnutls-3.1.23.tar.xz && \
     tar xf gnutls-3.1.23.tar.xz && \
     cd gnutls-3.1.23 && \
-    ./configure --with-libnettle-prefix=/usr/local && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-libnettle-prefix=/usr/local && \
     make -j`nproc` && \
     make install && \
-    ldconfig -v
+    ldconfig -v && rm nettle-2.5.tar.gz
 
 ##### GRPC and it's dependencies
 RUN git clone --recurse-submodules -b v1.15.0 https://github.com/grpc/grpc && \
@@ -98,8 +98,8 @@ RUN git clone --recurse-submodules -b v1.15.0 https://github.com/grpc/grpc && \
     echo "Install protobuf" && \
     cd third_party/protobuf && \
     git submodule update --init --recursive  && \
-    ./autogen.sh  && \
-    ./configure  && \
+    ./autogen.sh && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j`nproc` && \
     make install && \
     cd ../.. && \
@@ -155,7 +155,7 @@ RUN git clone https://git.osmocom.org/libgtpnl && \
     cd libgtpnl && \
     git reset --hard 345d687 && \
     autoreconf -fi && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j`nproc` && \
     make install && \
     ldconfig
@@ -165,7 +165,7 @@ RUN git clone https://gitlab.eurecom.fr/oai/asn1c.git && \
     cd asn1c && \
     git checkout f12568d617dbf48497588f8e227d70388fa217c9 && \
     autoreconf -iv && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j`nproc` && \
     make install && \
     ldconfig
@@ -197,8 +197,8 @@ RUN ldconfig && \
     ldd $C_BUILD/sctpd/src/sctpd
 
 # Prepare config file
-RUN apt-get install -y python3-pip && \
-    pip3 install jinja2-cli && \
+RUN apt-get install --no-install-recommends -y python3-pip && \
+    pip3 install --no-cache-dir jinja2-cli && \
     cd $MAGMA_ROOT/lte/gateway/docker/mme/configs/ && \
     echo '{ \n' \
     '"realm": "magma.com",	 \n'\
@@ -223,7 +223,7 @@ RUN apt-get install -y python3-pip && \
     '"attachedEnodebTacs": [], \n'\
     '"attached_enodeb_tacs": [1] }' \
     > mme_vars.json && \
-    jinja2 ../../../configs/templates/mme.conf.template mme_vars.json --format=json  > mme.conf
+    jinja2 ../../../configs/templates/mme.conf.template mme_vars.json --format=json  > mme.conf && rm -rf /var/lib/apt/lists/*;
 
 # For developer's to have the same run env as in target image to debug
 # Copy the configuration file templates and mean to modify/generate certificates
@@ -269,7 +269,7 @@ ENV TZ=Europe/Paris
 
 RUN apt-get update && \
     DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \
-    DEBIAN_FRONTEND=noninteractive apt-get install --yes \
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes \
       psmisc \
       openssl \
       net-tools \