{
  "startTime": 1674221111311,
  "endTime": 1674221112900,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 95,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 169,
        "lineEnd": 189,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 194,
        "lineEnd": 198,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 2,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 50,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 95,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 194,
        "lineEnd": 198,
        "columnStart": 22,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################################\n# Copyright 2020 The Magma Authors.\n\n# This source code is licensed under the BSD-style license found in the\n# LICENSE file in the root directory of this source tree.\n\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n################################################################################\n\n# -----------------------------------------------------------------------------\n# Builder image for C binaries and Magma proto files\n# -----------------------------------------------------------------------------\nARG CPU_ARCH=x86_64\nARG DEB_PORT=amd64\nARG OS_DIST=ubuntu\nARG OS_RELEASE=focal\nARG EXTRA_REPO=https://artifactory.magmacore.org/artifactory/debian-test\nARG CLANG_VERSION=3.8\nARG FEATURES=mme_oai\n\nFROM $OS_DIST:$OS_RELEASE AS builder\nARG CPU_ARCH\nARG DEB_PORT\nARG OS_DIST\nARG OS_RELEASE\nARG EXTRA_REPO\nARG CLANG_VERSION\n\nENV MAGMA_ROOT /magma\nENV C_BUILD /build/c\nENV OAI_BUILD $C_BUILD/oai\nENV TZ=Europe/Paris\n\nENV CCACHE_DIR ${MAGMA_ROOT}/.cache/gateway/ccache\nENV MAGMA_DEV_MODE 0\nENV XDG_CACHE_HOME ${MAGMA_ROOT}/.cache\n\nRUN apt-get update && \\\n  # Setup necessary tools for adding the Magma repository\n  apt-get install --no-install-recommends -y apt-utils software-properties-common apt-transport-https gnupg wget && \\\n  # Download Bazel\n  wget -P /usr/sbin --progress=dot:giga https://github.com/bazelbuild/bazelisk/releases/download/v1.10.0/bazelisk-linux-\"${DEB_PORT}\" && \\\n  chmod +x /usr/sbin/bazelisk-linux-\"${DEB_PORT}\" && \\\n  ln -s /usr/sbin/bazelisk-linux-\"${DEB_PORT}\" /usr/sbin/bazel && rm -rf /var/lib/apt/lists/*;\n\n# Install dependencies required for building\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  sudo \\\n  curl \\\n  wget \\\n  unzip \\\n  cmake \\\n  git \\\n  build-essential \\\n  autoconf \\\n  libtool \\\n  pkg-config \\\n  libgflags-dev \\\n  libc++-dev \\\n  protobuf-compiler \\\n  ninja-build \\\n  autogen \\\n  ccache \\\n  libprotoc-dev \\\n  libxml2-dev \\\n  libxslt-dev \\\n  libyaml-cpp-dev \\\n  nlohmann-json3-dev \\\n  libgoogle-glog-dev \\\n  libsctp-dev \\\n  libpcap-dev \\\n  libmnl-dev \\\n  uuid-dev \\\n  python3-pip \\\n  libcurl4-openssl-dev \\\n  libdouble-conversion-dev \\\n  libboost-chrono-dev \\\n  libboost-context-dev \\\n  libboost-program-options-dev \\\n  libboost-filesystem-dev \\\n  libboost-regex-dev \\\n  check \\\n  libssl-dev \\\n  libsctp-dev \\\n  libtspi-dev \\\n  libconfig-dev \\\n  libgmp3-dev \\\n  libczmq-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"deb https://artifactory.magmacore.org/artifactory/debian-test focal-ci main\" > /etc/apt/sources.list.d/magma.list\nRUN wget -qO - https://artifactory.magmacore.org:443/artifactory/api/gpg/key/public | apt-key add -\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  libfolly-dev \\\n  oai-asn1c \\\n  oai-freediameter \\\n  oai-gnutls \\\n  oai-nettle \\\n  magma-cpp-redis \\\n  magma-libfluid \\\n  grpc-dev \\\n  prometheus-cpp-dev \\\n  liblfds710 && rm -rf /var/lib/apt/lists/*;\nRUN rm /etc/apt/sources.list.d/magma.list\n\nENV MAGMA_ROOT /magma\nWORKDIR /magma\n\n# Copy Bazel files at root and third_party\nCOPY WORKSPACE.bazel BUILD.bazel .bazelignore .bazelrc .bazelversion ${MAGMA_ROOT}/\nCOPY bazel/ ${MAGMA_ROOT}/bazel\n\n# Build external dependencies first. This will help not rebuilt all dependencies triggered by Magma changes.\nRUN bazel build \\\n  @com_github_grpc_grpc//:grpc++ \\\n  @com_google_protobuf//:protobuf \\\n  @prometheus_cpp//:prometheus-cpp \\\n  @yaml-cpp//:yaml-cpp \\\n  @github_nlohmann_json//:json \\\n  @sentry_native//:sentry\n\n# Copy proto files\nCOPY feg/protos ${MAGMA_ROOT}/feg/protos\nCOPY feg/gateway/services/aaa/protos ${MAGMA_ROOT}/feg/gateway/services/aaa/protos\nCOPY lte/protos ${MAGMA_ROOT}/lte/protos\nCOPY orc8r/protos ${MAGMA_ROOT}/orc8r/protos\nCOPY protos ${MAGMA_ROOT}/protos\n\n# Build session_manager c code\nCOPY lte/gateway/Makefile ${MAGMA_ROOT}/lte/gateway/Makefile\nCOPY orc8r/gateway/c/common ${MAGMA_ROOT}/orc8r/gateway/c/common\nCOPY lte/gateway/c ${MAGMA_ROOT}/lte/gateway/c\n\nCOPY lte/gateway/python/scripts ${MAGMA_ROOT}/lte/gateway/python/scripts\nCOPY lte/gateway/docker ${MAGMA_ROOT}/lte/gateway/docker\nCOPY lte/gateway/docker/mme/configs/ ${MAGMA_ROOT}/lte/gateway/docker/configs/\n\nARG BUILD_TYPE=RelWithDebInfo\nENV BUILD_TYPE=$BUILD_TYPE\nRUN bazel build  \\\n  //lte/gateway/c/sctpd/src:sctpd \\\n  //lte/gateway/c/connection_tracker/src:connectiond \\\n  //lte/gateway/c/li_agent/src:liagentd \\\n  //lte/gateway/c/session_manager:sessiond \\\n  --define=folly_so=1\n\nRUN make -C ${MAGMA_ROOT}/lte/gateway/ build_oai BUILD_TYPE=\"${BUILD_TYPE}\"\n\n# Prepare config file\nCOPY lte/gateway/configs ${MAGMA_ROOT}/lte/gateway/configs\n\n# -----------------------------------------------------------------------------\n# Dev/Production image\n# -----------------------------------------------------------------------------\nFROM $OS_DIST:$OS_RELEASE AS gateway_c\nARG CPU_ARCH\nARG OS_DIST\nARG OS_RELEASE\nARG EXTRA_REPO\nARG MAGMA_VERSION=master\n\nENV MAGMA_ROOT /magma\nENV C_BUILD /build/c\nENV TZ=Europe/Paris\n\n# Install runtime dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  apt-utils \\\n  apt-transport-https \\\n  ca-certificates \\\n  wget \\\n  gnupg \\\n  sudo \\\n  netcat \\\n  libyaml-cpp-dev \\\n  libgoogle-glog-dev \\\n  libprotoc-dev \\\n  libmnl-dev \\\n  libsctp-dev \\\n  psmisc \\\n  openssl \\\n  net-tools \\\n  tshark \\\n  tzdata \\\n  iproute2 \\\n  iptables \\\n  libtspi1 \\\n  && rm -rf /var/lib/apt/lists/*\n\nRUN echo \"deb https://artifactory.magmacore.org/artifactory/debian-test focal-ci main\" > /etc/apt/sources.list.d/magma.list\nRUN wget -qO - https://artifactory.magmacore.org:443/artifactory/api/gpg/key/public | apt-key add -\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  libopenvswitch \\\n  openvswitch-datapath-dkms \\\n  openvswitch-common \\\n  openvswitch-switch && rm -rf /var/lib/apt/lists/*;\n\n# Copy pre-built shared object files\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/liblsan.so.0 /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libprotobuf.so /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libboost* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libevent-* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libsnappy.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libdouble-conversion.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libicui18n.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libicuuc.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libicudata.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libconfig.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libczmq.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libevent* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libzmq* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libsodium* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libpgm* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libnorm* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libgflags* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libgssapi_krb5* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libkrb5* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libk5crypto* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libkeyutils* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libcurl.so.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/librtmp.so.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\nCOPY --from=builder /usr/lib/\"${CPU_ARCH}\"-linux-gnu/libssh.so.* /usr/lib/\"${CPU_ARCH}\"-linux-gnu/\n\n\nCOPY --from=builder /usr/local/lib/liblfds710.so /usr/local/lib/\nCOPY --from=builder /usr/local/lib/libgrpc++.so /usr/local/lib/\nCOPY --from=builder /usr/local/lib/libfolly.so /usr/local/lib/\nCOPY --from=builder /usr/local/lib/libgrpc.so /usr/local/lib/\nCOPY --from=builder /usr/local/lib/libgpr.so /usr/local/lib/\nCOPY --from=builder /usr/lib/libnettle.so  /usr/local/lib/\nCOPY --from=builder /usr/lib/libfluid* /usr/local/lib/\nCOPY --from=builder /usr/lib/libgnutls.so.* /usr/local/lib/\nCOPY --from=builder /usr/lib/libhogweed.so.2 /usr/local/lib/\n\nCOPY --from=builder /usr/local/lib/libfdproto.so.6 /usr/local/lib/\nCOPY --from=builder /usr/local/lib/libfdcore.so.6 /usr/local/lib/\nCOPY --from=builder /usr/local/lib/libaddress_sorting.so /usr/local/lib/\n\n# Copy the build artifacts.\nCOPY --from=builder ${MAGMA_ROOT}/bazel-bin/lte/gateway/c/session_manager/sessiond /usr/local/bin/sessiond\nCOPY --from=builder ${MAGMA_ROOT}/bazel-bin/lte/gateway/c/sctpd/src/sctpd /usr/local/bin/sctpd\nCOPY --from=builder ${MAGMA_ROOT}/bazel-bin/lte/gateway/c/connection_tracker/src/connectiond /usr/local/bin/connectiond\nCOPY --from=builder ${MAGMA_ROOT}/bazel-bin/lte/gateway/c/li_agent/src/liagentd /usr/local/bin/liagentd\nCOPY --from=builder $C_BUILD/core/oai/oai_mme/mme /usr/local/bin/oai_mme\n\nRUN ldconfig 2> /dev/null\n\n# Copy the configs.\nCOPY lte/gateway/configs /etc/magma\nCOPY orc8r/gateway/configs/templates /etc/magma/templates\nCOPY lte/gateway/deploy/roles/magma/files/magma-create-gtp-port.sh /usr/local/bin/\n"
}