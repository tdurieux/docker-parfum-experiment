{
  "startTime": 1674246674742,
  "endTime": 1674246676046,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 66,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "################################################################\n# Builder Image (We are using a base image to speed up process)\n################################################################\nFROM magma-dev-mme:ci-base-image as magma-mme-builder\n\nARG FEATURES=mme_oai\nENV MAGMA_ROOT=/magma\nENV BUILD_TYPE=RelWithDebInfo\nENV C_BUILD=/build/c\n\n# Remove any old CI artifact\nRUN rm -Rf $MAGMA_ROOT $C_BUILD && mkdir -p $C_BUILD\n\n# Copy Code to Test\nCOPY ./ $MAGMA_ROOT\n\n# Build MME executables\nRUN cd $MAGMA_ROOT/lte/gateway && \\\n    echo $FEATURES && \\\n    make build_oai && \\\n    make build_sctpd && \\\n    cp $C_BUILD/core/oai/oai_mme/mme $C_BUILD/core/oai/oai_mme/oai_mme && \\\n    ldd $C_BUILD/core/oai/oai_mme/oai_mme && \\\n    ldd $C_BUILD/sctpd/src/sctpd\n\n# Prepare config file\nRUN cd $MAGMA_ROOT/lte/gateway/docker/mme/configs/ && \\\n    echo '{ \\n' \\\n    '\"realm\": \"magma.com\",\t \\n'\\\n    '\"use_stateless\": \"\", \\n'\\\n    '\"conf_dir\": \"/magma-mme/etc\", \\n'\\\n    '\"hss_hostname\": \"hss\", \\n'\\\n    '\"mcc\": \"001\", \\n'\\\n    '\"mnc\": \"01\", \\n'\\\n    '\"mmeGid\": \"1\", \\n'\\\n    '\"mmeCode\": \"1\", \\n'\\\n    '\"tac\": \"1\", \\n'\\\n    '\"non_eps_service_control\": \"OFF\", \\n'\\\n    '\"csfb_mcc\": \"001\", \\n'\\\n    '\"csfb_mnc\": \"01\", \\n'\\\n    '\"lac\": \"1\", \\n'\\\n    '\"s1ap_iface_name\": \"eth0\", \\n'\\\n    '\"s1ap_ip\": \"192.168.61.133/24\", \\n'\\\n    '\"s11_iface_name\": \"eth0\", \\n'\\\n    '\"mme_s11_ip\": \"192.168.61.133/24\", \\n'\\\n    '\"oai_log_level\": \"INFO\", \\n'\\\n    '\"remote_sgw_ip\": \"192.168.61.130\", \\n'\\\n    '\"attachedEnodebTacs\": [], \\n'\\\n    '\"attached_enodeb_tacs\": [1] }' \\\n    > mme_vars.json && \\\n    jinja2 ../../../configs/templates/mme.conf.template mme_vars.json --format=json  > mme.conf\n\n################################################################\n# Target Image\n################################################################\nFROM ubuntu:bionic as magma-mme\n\nENV MAGMA_ROOT=/magma\nENV C_BUILD=/build/c\n\n# Install a few tools (may not be necessary later on)\nENV DEBIAN_FRONTEND=noninteractive\nENV TZ=Europe/Paris\n\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get upgrade --yes && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes \\\n      psmisc \\\n      openssl \\\n      net-tools \\\n      tshark \\\n      tzdata \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Copy pre-built shared object files\nCOPY --from=magma-mme-builder \\\n    /usr/lib/x86_64-linux-gnu/liblsan.so.0 \\\n    /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1 \\\n    /usr/lib/x86_64-linux-gnu/libconfig.so.9 \\\n    /usr/lib/x86_64-linux-gnu/libglog.so.0  \\\n    /usr/lib/x86_64-linux-gnu/libyaml-cpp.so.0.5 \\\n    /usr/lib/x86_64-linux-gnu/libsctp.so.1 \\\n    /usr/lib/x86_64-linux-gnu/libunwind.so.8 \\\n    /usr/lib/x86_64-linux-gnu/libssl.so.1.1 \\\n    /usr/lib/x86_64-linux-gnu/libczmq.so.4.1.0 \\\n    /usr/lib/x86_64-linux-gnu/libzmq.so.5.1.5 \\\n    /usr/lib/x86_64-linux-gnu/libsodium.so.23.1.0 \\\n    /usr/lib/x86_64-linux-gnu/libpgm-5.2.so.0.0.122 \\\n    /usr/lib/x86_64-linux-gnu/libnorm.so.1.0.0 \\\n    /lib/x86_64-linux-gnu/libidn.so.11 \\\n    /usr/lib/x86_64-linux-gnu/\n\nCOPY --from=magma-mme-builder \\\n    /usr/local/lib/libfdproto.so.6 \\\n    /usr/local/lib/libfdcore.so.6 \\\n    /usr/local/lib/libgrpc++.so \\\n    /usr/local/lib/libprotobuf.so.17 \\\n    /usr/local/lib/libgrpc.so \\\n    /usr/local/lib/libgpr.so \\\n    /usr/local/lib/libgflags.so.2.2 \\\n    /usr/local/lib/libcares.so.2 \\\n    /usr/local/lib/libaddress_sorting.so \\\n    /usr/local/lib/libnettle.so.4 \\\n    /usr/local/lib/libgnutls.so.28 \\\n    /usr/local/lib/libhogweed.so.2 \\\n    /usr/local/lib/\n\n# Copy all fdx files from freeDiameter installation\nWORKDIR /usr/local/lib/freeDiameter\nCOPY --from=magma-mme-builder /usr/local/lib/freeDiameter/* ./\n\n# Refresh library cache\nRUN ldconfig\n\n# Copy pre-built binaries for MME and SCTPD\nWORKDIR /magma-mme/bin\nCOPY --from=magma-mme-builder \\\n    $C_BUILD/core/oai/oai_mme/oai_mme \\\n    $C_BUILD/sctpd/src/sctpd \\\n    ./\n\n# For the moment, we are not putting any etc/*.conf files\n# We will mount volumes from docker-compose\n\n# Create running dirs\nWORKDIR /var/opt/magma/configs\n# Adding mme configuration for stateful run\nRUN echo \"use_stateless: false\" > mme.yml && \\\n    openssl rand -out /root/.rnd 128 && \\\n    ldd /magma-mme/bin/oai_mme && \\\n    ldd /magma-mme/bin/sctpd\n\nWORKDIR /etc/magma\nCOPY --from=magma-mme-builder \\\n    $MAGMA_ROOT/lte/gateway/configs/control_proxy.yml \\\n    $MAGMA_ROOT/lte/gateway/configs/redis.yml \\\n    $MAGMA_ROOT/lte/gateway/configs/service_registry.yml \\\n    $MAGMA_ROOT/lte/gateway/configs/sctpd.yml \\\n    ./\n\n# Scripts to re-generate certificates\nWORKDIR /magma-mme/scripts\nCOPY --from=magma-mme-builder $MAGMA_ROOT/lte/gateway/c/core/oai/test/check_mme_s6a_certificate .\nRUN sed -i -e \"s@^.*THIS_SCRIPT_PATH@#@\" \\\n           -e \"s@\\$SUDO@@\" \\\n           -e \"s@echo_error@echo@\" \\\n           -e \"s@echo_success@echo@\" \\\n           -e \"s@echo_warning@echo@\" check_mme_s6a_certificate\n\nWORKDIR /magma-mme\n\n# use this label for CI purpose\nLABEL use-separate-hss-realm=\"true\"\n\n# expose ports\nEXPOSE 3870/tcp 5870/tcp 2123/udp\n\n# For the moment, let have a dummy command\nCMD [\"sleep\", \"infinity\"]\n"
}