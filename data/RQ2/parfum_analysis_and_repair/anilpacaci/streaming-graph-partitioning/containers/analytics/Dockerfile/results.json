{
  "startTime": 1674245960092,
  "endTime": 1674245961193,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 1,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 1,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# based on official Ubuntu 16.04 release\nFROM ubuntu:16.04\n\nUSER root\n\n# base directory\nWORKDIR /sgp\n\n# # ------------------------------------------------------------\n# # Set up PowerLyra code\n# # ------------------------------------------------------------\n\n# install necessary dependencies for powergraph\nRUN apt-get update && \\\n\tapt-get -y --no-install-recommends install default-jdk gcc openssh-server openmpi-bin python python-pip dnsutils sudo && rm -rf /var/lib/apt/lists/*;\n\n# install pandas\nRUN pip install --no-cache-dir --upgrade pip && \\\n    python -m pip install pandas\n\n# copy powerlyra codebase\nCOPY powerlyra/ /sgp/powerlyra/\nCOPY scripts/ /sgp/scripts/\n\n# # ------------------------------------------------------------\n# # Set up default user\n# # ------------------------------------------------------------\n\nARG USER=mpi\nENV USER ${USER}\nRUN useradd -ms /bin/bash ${USER} \\\n      && echo \"${USER}   ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers\n\nENV USER_HOME /home/${USER}\nRUN chown -R ${USER}:${USER} ${USER_HOME} &&\\\n\tmkdir /sgp/parameters/ &&\\\n\tmkdir /sgp/results/ &&\\\n\tchown -R ${USER}:${USER} /sgp &&\\\n\tchmod -R 777 /sgp\n\n# # ------------------------------------------------------------\n# # Set up SSH Server\n# # ------------------------------------------------------------\n\n# Add host keys\nRUN cd /etc/ssh/ && ssh-keygen -A -N ''\n\n# Config SSH Daemon\nRUN  sed -i \"s/#PasswordAuthentication.*/PasswordAuthentication no/g\" /etc/ssh/sshd_config \\\n  && sed -i \"s/#PermitRootLogin.*/PermitRootLogin no/g\" /etc/ssh/sshd_config \\\n  && sed -i \"s/#AuthorizedKeysFile/AuthorizedKeysFile/g\" /etc/ssh/sshd_config\n\n# Set up user's public and private keys\nENV SSHDIR ${USER_HOME}/.ssh\nRUN mkdir -p ${SSHDIR}\n\n# Default ssh config file that skips (yes/no) question when first login to the host\nRUN echo \"StrictHostKeyChecking no\" > ${SSHDIR}/config\n\nCOPY ssh/ ${SSHDIR}/\n\nRUN cat ${SSHDIR}/*.pub >> ${SSHDIR}/authorized_keys\nRUN chmod -R 600 ${SSHDIR}/* \\\n         && chown -R ${USER}:${USER} ${SSHDIR}\n\n# # ------------------------------------------------------------\n# # MPI Setup\n# # ------------------------------------------------------------\n\nCOPY get_hosts /home/mpi/get_hosts\nRUN chmod +x /home/mpi/get_hosts &&\\\n\tchown -R ${USER}:${USER} /home/mpi/get_hosts\n\n# # Start SSH Server\nRUN sudo mkdir /var/run/sshd\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n\n"
}