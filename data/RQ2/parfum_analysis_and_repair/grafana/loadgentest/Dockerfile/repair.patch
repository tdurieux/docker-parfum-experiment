diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grafana/loadgentest/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grafana/loadgentest/Dockerfile/repaired.Dockerfile
index f5565ff..eeb23bc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/grafana/loadgentest/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/grafana/loadgentest/Dockerfile/repaired.Dockerfile
@@ -13,15 +13,15 @@ RUN touch /etc/apt/sources.list.d/openjdk.list
 RUN echo "deb http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main " >>/etc/apt/sources.list.d/openjdk.list
 RUN echo "deb-src http://ppa.launchpad.net/openjdk-r/ppa/ubuntu trusty main" >>/etc/apt/sources.list.d/openjdk.list
 RUN apt-get update
-RUN apt-get -y install openjdk-8-jdk
+RUN apt-get -y --no-install-recommends install openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;
 ENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-amd64
 
 # C compiler, make, libssl, autoconf, etc
-RUN apt-get -y install gcc libssl-dev autoconf erlang-dev erlang-nox nodejs npm unzip wget git python-pip python-dev python-zmq bc bsdmainutils jq
+RUN apt-get -y --no-install-recommends install gcc libssl-dev autoconf erlang-dev erlang-nox nodejs npm unzip wget git python-pip python-dev python-zmq bc bsdmainutils jq && rm -rf /var/lib/apt/lists/*;
 
 # Update nodejs
-RUN npm cache clean -f
-RUN npm install -g n
+RUN npm cache clean --force -f
+RUN npm install -g n && npm cache clean --force;
 RUN n stable
 
 # Symlink to nodejs
@@ -37,7 +37,7 @@ ENV PATH ${GOPATH}/bin:${GOROOT}/bin:/usr/local/bin:${PATH}
 # Create .gitconfig
 COPY Gitconfig ${HOME}/.gitconfig
 
-# Get and compile wrk 
+# Get and compile wrk
 RUN cd ${TESTDIR} && git clone 'https://github.com/wg/wrk'
 RUN cd ${TESTDIR}/wrk && make
 # Checkout specific commit that we know runtest.sh is compatible with
@@ -59,16 +59,16 @@ RUN go get -u github.com/loadimpact/k6
 # How install specific version of ab?
 
 # Get and compile Siege (latest snapshot)
-RUN apt-get -y install siege
+RUN apt-get -y --no-install-recommends install siege && rm -rf /var/lib/apt/lists/*;
 #RUN cd ${TESTDIR} && git clone 'https://github.com/JoeDog/siege.git'
 #RUN cd ${TESTDIR}/siege && checkout xxxxxxxxxxx && autoconf && ./configure && make install
 
 # Install Tsung (1.6.0)
-RUN cd ${TESTDIR} && wget -O - 'http://tsung.erlang-projects.org/dist/tsung-1.6.0.tar.gz' |tar -xzf -
-RUN cd ${TESTDIR}/tsung-1.6.0 && ./configure && make install
+RUN cd ${TESTDIR} && wget -O - 'https://tsung.erlang-projects.org/dist/tsung-1.6.0.tar.gz' | tar -xzf -
+RUN cd ${TESTDIR}/tsung-1.6.0 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make install
 
 # Install Locust (>=0.7.5)
-RUN pip install locustio
+RUN pip install --no-cache-dir locustio
 # RUN cd ${TESTDIR} && git clone 'https://github.com/locustio/locust'
 # RUN cd ${TESTDIR}/locust && checkout 16140b0680cd7ab5d580aa2a1578a6349f988876 && python setup.py
 
@@ -77,14 +77,14 @@ RUN cd ${TESTDIR} && wget 'https://repo1.maven.org/maven2/io/gatling/highcharts/
   unzip gatling-charts-highcharts-bundle-2.2.2-bundle.zip && rm gatling-charts-highcharts-bundle-2.2.2-bundle.zip
 
 # Jmeter 3.2
-RUN cd ${TESTDIR} && wget -O - 'http://apache.mirrors.spacedump.net//jmeter/binaries/apache-jmeter-3.2.tgz' |tar -zxf -
+RUN cd ${TESTDIR} && wget -O - 'https://apache.mirrors.spacedump.net//jmeter/binaries/apache-jmeter-3.2.tgz' | tar -zxf -
 
 # Grinder 3.11
-RUN cd ${TESTDIR} && wget 'http://downloads.sourceforge.net/project/grinder/The%20Grinder%203/3.11/grinder-3.11-binary.zip' && \
+RUN cd ${TESTDIR} && wget 'https://downloads.sourceforge.net/project/grinder/The%20Grinder%203/3.11/grinder-3.11-binary.zip' && \
   unzip grinder-3.11-binary.zip && rm grinder-3.11-binary.zip
 
 # Artillery (>=1.5.0-12)
-RUN npm install -g artillery
+RUN npm install -g artillery && npm cache clean --force;
 # git clone 'https://github.com/shoreditch-ops/artillery' && git checkout ... && ...
 
 COPY runtests.sh ${TESTDIR}