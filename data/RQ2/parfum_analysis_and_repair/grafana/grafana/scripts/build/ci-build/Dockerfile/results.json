{
  "startTime": 1674216742431,
  "endTime": 1674216743622,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 140,
        "lineEnd": 140,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 119,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 22,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedDockerfile": "# Use old Debian (this has support into 2022) in order to ensure binary compatibility with older glibc's.\nFROM debian:stretch-20210208 AS toolchain\n\nENV OSX_MIN=10.10 \\\n    CTNG=1.24.0 \\\n    CTNG_CHKSUM=89b8794a4184ad4928750e29712ed4f194aa1d0b93768d67ff64f30c30f1b1e165647cafc6de94d68d3ef70e50446e544dad65aa36137511a32ee7a667dddfb4 \\\n    # This is the last revision that builds on Debian Stretch\n    OSX_CROSS_REV=a1d7d7a8d569f9f0b8c3140b8b32848dbcd62afa\n\n# Use ARG so as not to persist environment variable in image\nARG DEBIAN_FRONTEND=noninteractive\n\nWORKDIR /tmp\n\n# FIRST PART\n# build osx64 toolchain (stripped of man documentation)\n# the toolchain produced is not self contained, it needs clang at runtime\n#\n# SECOND PART\n# build gcc (no g++) centos6-x64 toolchain\n# doc: https://crosstool-ng.github.io/docs/\n# apt-get should be all dep to build toolchain\n# sed and 1st echo are for convenience to get the toolchain in /tmp/x86_64-centos6-linux-gnu\n# other echo are to enable build by root (crosstool-NG refuse to do that by default)\n# the last 2 rm are just to save some time and space writing docker layers\n#\n# THIRD PART\n# build fpm and creates a set of deb from gem\n# ruby2.0 depends on ruby1.9.3 which is install as default ruby\n# rm/ln are here to change that\n# created deb depends on rubygem-json but json gem is not build\n# so do by hand\n\n# might wanna make sure osx cross and the other tarball as well as the packages ends up somewhere other than tmp\n# might also wanna put them as their own layer to not have to unpack them every time?\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yq \\\n        clang patch libxml2-dev \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        git \\\n        make \\\n        cmake \\\n        libssl-dev \\\n        xz-utils \\\n        lzma-dev && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/tpoechtrager/osxcross.git /tmp/osxcross && \\\n      cd /tmp/osxcross && git reset --hard $OSX_CROSS_REV\nCOPY MacOSX10.15.sdk.tar.xz /tmp/osxcross/tarballs/\nRUN ln -s /usr/bin/llvm-dsymutil-6.0 /usr/bin/dsymutil\nRUN UNATTENDED=1 OSX_VERSION_MIN=${OSX_MIN} /tmp/osxcross/build.sh\nRUN rm -rf /tmp/osxcross/target/SDK/*/usr/share && \\\n    cd /tmp                                              && \\\n    tar cfJ osxcross.tar.xz osxcross/target && \\\n    rm -rf /tmp/osxcross && rm osxcross.tar.xz\nRUN apt-get install --no-install-recommends -yq \\\n        unzip libtool-bin bison flex gawk gcc g++ gperf help2man libncurses5-dev make patch python-dev texinfo xz-utils && rm -rf /var/lib/apt/lists/*;\nRUN curl -fLO http://crosstool-ng.org/download/crosstool-ng/crosstool-ng-${CTNG}.tar.xz\nRUN echo $CTNG_CHKSUM crosstool-ng-${CTNG}.tar.xz | sha512sum --check --strict --status\nRUN tar xf crosstool-ng-${CTNG}.tar.xz && rm crosstool-ng-${CTNG}.tar.xz\nRUN cd /tmp/crosstool-ng-${CTNG} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-local && \\\n    make && \\\n    ./ct-ng x86_64-centos6-linux-gnu && \\\n    sed -i '/CT_PREFIX_DIR=/d' .config && \\\n    echo 'CT_PREFIX_DIR=\"/tmp/${CT_HOST:+HOST-${CT_HOST}/}${CT_TARGET}\"' >> .config && \\\n    echo 'CT_EXPERIMENTAL=y' >> .config && \\\n    echo 'CT_ALLOW_BUILD_AS_ROOT=y' >> .config && \\\n    echo 'CT_ALLOW_BUILD_AS_ROOT_SURE=y' >> .config && \\\n    mkdir -p .build/tarballs && \\\n    cd .build/tarballs && \\\n    curl -fLO https://libisl.sourceforge.io/isl-0.20.tar.gz && \\\n    curl -fLO https://github.com/libexpat/libexpat/releases/download/R_2_1_0/expat-2.1.0.tar.gz && \\\n    cd - && \\\n    ./ct-ng build\nRUN cd /tmp && \\\n    rm /tmp/x86_64-centos6-linux-gnu/build.log.bz2 && \\\n    tar cfJ x86_64-centos6-linux-gnu.tar.xz x86_64-centos6-linux-gnu/ && \\\n    rm -rf /tmp/x86_64-centos6-linux-gnu/ && \\\n    rm -rf /tmp/crosstool-ng-${CTNG}\n\nARG SHELLCHECK_VERSION=0.7.1\nARG SHELLCHECK_CHKSUM=beca3d7819a6bdcfbd044576df4fc284053b48f468b2f03428fe66f4ceb2c05d9b5411357fa15003cb0311406c255084cf7283a3b8fce644c340c2f6aa910b9f\nRUN curl -fLO http://storage.googleapis.com/grafana-downloads/ci-dependencies/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\nRUN echo $SHELLCHECK_CHKSUM shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz | sha512sum --check --strict --status\nRUN tar xf shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz && mv shellcheck-v${SHELLCHECK_VERSION}/shellcheck /tmp/ && rm shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\n\nARG CUE_VERSION=0.3.0-alpha5\nARG CUE_CHKSUM=9d3131e470cdb5182afd9966688f1c052d383145cce005a947156b5591da39b7\nRUN curl -fLO https://github.com/cuelang/cue/releases/download/v${CUE_VERSION}/cue_${CUE_VERSION}_Linux_x86_64.tar.gz\nRUN echo $CUE_CHKSUM cue_${CUE_VERSION}_Linux_x86_64.tar.gz | sha256sum --check --strict --status\nRUN tar xf cue_${CUE_VERSION}_Linux_x86_64.tar.gz -C /tmp cue\n\nARG DOCKERIZE_VERSION=0.6.1\nRUN curl -fLO https://github.com/jwilder/dockerize/releases/download/v${DOCKERIZE_VERSION}/dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz\nRUN tar -xzvf dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz -C /tmp/ && rm dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz\nRUN rm dockerize-linux-amd64-v${DOCKERIZE_VERSION}.tar.gz\n\n# Base image to crossbuild grafana.\n# Use old Debian (this has support into 2022) in order to ensure binary compatibility with older glibc's.\nFROM debian:stretch-20210208\n\nENV GOVERSION=1.17.11 \\\n    PATH=/usr/local/go/bin:$PATH \\\n    GOPATH=/go \\\n    NODEVERSION=16.14.0-1nodesource1 \\\n    YARNVERSION=1.22.15-1\n\n# Use ARG so as not to persist environment variable in image\nARG DEBIAN_FRONTEND=noninteractive\n\nCOPY --from=toolchain /tmp/x86_64-centos6-linux-gnu.tar.xz /tmp/osxcross.tar.xz /tmp/\nCOPY --from=toolchain /tmp/shellcheck /usr/local/bin/\nCOPY --from=toolchain /tmp/cue /usr/local/bin/\nCOPY --from=toolchain /tmp/dockerize /usr/local/bin/\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yq \\\n        build-essential netcat-traditional clang gcc-aarch64-linux-gnu gcc-arm-linux-gnueabihf gcc-mingw-w64-x86-64 \\\n        python-pip \\\n        ca-certificates \\\n        curl \\\n        gcc \\\n        g++ \\\n        git \\\n        make \\\n        rpm \\\n        xz-utils \\\n        expect \\\n        gnupg2 \\\n        procps \\\n        ruby \\\n        ruby-dev \\\n        rubygems \\\n        unzip && \\\n    gem install -N fpm && \\\n    ln -s /usr/bin/llvm-dsymutil-6.0 /usr/bin/dsymutil && \\\n    curl -fsS https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    curl -f -O https://deb.nodesource.com/node_16.x/pool/main/n/nodejs/nodejs_${NODEVERSION}_amd64.deb && \\\n    dpkg -i nodejs_${NODEVERSION}_amd64.deb && \\\n    rm nodejs_${NODEVERSION}_amd64.deb && \\\n    curl -fsS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && apt-get install --no-install-recommends -yq yarn=${YARNVERSION} && \\\n    curl -fL https://storage.googleapis.com/golang/go${GOVERSION}.linux-amd64.tar.gz \\\n      | tar -xz -C /usr/local && \\\n    git clone https://github.com/raspberrypi/tools.git /opt/rpi-tools --depth=1 && \\\n    pip install --no-cache-dir codespell && rm -rf /var/lib/apt/lists/*;\n\n# We build our own musl cross-compilers via the musl-cross-make project, on the same OS as this image's base image,\n# to ensure compatibility. We also make sure to target musl 1.1.x, since musl 1.2.x introduces 64-bit time types\n# that breaks compatibility on some 32-bit architectures (https://github.com/grafana/grafana/issues/23500).\n#\n# Use ARG so as not to persist environment variable in image\nARG CHKSUM_ARMV7_MUSL=5db487fb0a4aa61667de45a9cfbf7940360bd7256583b8a1e7810b4d9dd0e02a8aac737ca634b57bf269195e776ef503832ed22a6689a1c8fcdcc956f846bef7\nARG CHKSUM_ARMV8_MUSL=50f4899cc2f637dbc39470bbe307074ccf7f40da2ab730218d13a9f75d578266311db6a0785919dcdcb5e7ce4517b13ee8d4a56d76e6fca7c6d4c2510d71aa8b\nARG CHKSUM_AMD64_MUSL=493a79e9e29a1eab3fdff6435bac6509253d2e54ac30ad9098ce5da638bbb8ad18a7ebf3520bcaf2f9588befeff23402d8bbf54fa3809bfe18c984a4ecabcb12\n\n# Install musl cross compilers\nRUN cd /tmp && \\\n    curl -fLO https://grafana-downloads.storage.googleapis.com/compilers/arm-linux-musleabihf-cross.tgz && \\\n    ([ \"$(sha512sum arm-linux-musleabihf-cross.tgz|cut -f1 -d ' ')\" = \"$CHKSUM_ARMV7_MUSL\" ] || (echo \"Mismatching checksums armv7\"; exit 1)) && \\\n    tar xf arm-linux-musleabihf-cross.tgz && \\\n    rm arm-linux-musleabihf-cross.tgz && \\\n    curl -fLO https://grafana-downloads.storage.googleapis.com/compilers/aarch64-linux-musl-cross.tgz && \\\n    ([ \"$(sha512sum aarch64-linux-musl-cross.tgz|cut -f1 -d ' ')\" = \"$CHKSUM_ARMV8_MUSL\" ] || (echo \"Mismatching checksums armv8\"; exit 1)) && \\\n    tar xf aarch64-linux-musl-cross.tgz && \\\n    rm aarch64-linux-musl-cross.tgz && \\\n    curl -fLO https://grafana-downloads.storage.googleapis.com/compilers/x86_64-linux-musl-cross.tgz && \\\n    ([ \"$(sha512sum x86_64-linux-musl-cross.tgz|cut -f1 -d ' ')\" = \"$CHKSUM_AMD64_MUSL\" ] || (echo \"Mismatching checksums amd64\"; exit 1)) && \\\n    tar xf x86_64-linux-musl-cross.tgz && \\\n    rm x86_64-linux-musl-cross.tgz\n\nRUN go install github.com/mgechev/revive@v1.0.2 && \\\n  mv ${GOPATH}/bin/revive /usr/local/bin/ && \\\n  go install github.com/google/go-jsonnet/cmd/jsonnetfmt@latest && \\\n  mv ${GOPATH}/bin/jsonnetfmt /usr/local/bin/ && \\\n  go install github.com/monitoring-mixins/mixtool/cmd/mixtool@latest && \\\n  mv ${GOPATH}/bin/mixtool /usr/local/bin/\n\nCOPY ./bootstrap.sh /tmp/bootstrap.sh\n"
}