{
  "startTime": 1674253378350,
  "endTime": 1674253379463,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 21,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 17,
        "columnEnd": 87
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 17,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# download kubectl\nFROM golang:alpine3.13 as kubectl\nRUN apk add --no-cache curl\nRUN export VERSION=$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt) && \\\n    export OS=$(go env GOOS) && \\\n    export ARCH=$(go env GOARCH) && \\\n    curl -f -o /usr/local/bin/kubectl -L https://storage.googleapis.com/kubernetes-release/release/${VERSION}/bin/${OS}/${ARCH}/kubectl && \\\n    chmod +x /usr/local/bin/kubectl\n\n# build jsonnet-bundler\nFROM golang:alpine3.13 as jb\nWORKDIR /tmp\nRUN apk add --no-cache git make bash &&\\\n    git clone https://github.com/jsonnet-bundler/jsonnet-bundler &&\\\n    ls /bin &&\\\n    cd jsonnet-bundler &&\\\n    make static &&\\\n    mv _output/jb /usr/local/bin/jb\n\nFROM golang:alpine3.13 as helm\nWORKDIR /tmp/helm\nRUN apk add --no-cache jq curl\nRUN export TAG=$( curl -f --silent \"https://api.github.com/repos/helm/helm/releases/latest\" | jq -r .tag_name) && \\\n    export OS=$(go env GOOS) && \\\n    export ARCH=$(go env GOARCH) && \\\n    curl -f -SL \"https://get.helm.sh/helm-${TAG}-${OS}-${ARCH}.tar.gz\" > helm.tgz && \\\n    tar -xvf helm.tgz --strip-components=1 && rm helm.tgz\n\nFROM golang:alpine3.13 as kustomize\nWORKDIR /tmp/kustomize\nRUN apk add --no-cache jq curl\n# Get the latest version of kustomize\n# Releases are filtered by their name since the kustomize repository exposes multiple products in the releases\nRUN export TAG=$( curl -f --silent \"https://api.github.com/repos/kubernetes-sigs/kustomize/releases\" | jq -r '[ .[] | select(.name | startswith(\"kustomize\")) ] | .[0].tag_name') && \\\n    export VERSION_TAG=${TAG#*/} && \\\n    export OS=$(go env GOOS) && \\\n    export ARCH=$(go env GOARCH) && \\\n    echo \"https://github.com/kubernetes-sigs/kustomize/releases/download/${TAG}/kustomize_${VERSION_TAG}_${OS}_${ARCH}.tar.gz\" && \\\n    curl -f -SL \"https://github.com/kubernetes-sigs/kustomize/releases/download/${TAG}/kustomize_${VERSION_TAG}_${OS}_${ARCH}.tar.gz\" > kustomize.tgz && \\\n    tar -xvf kustomize.tgz && rm kustomize.tgz\n\n# assemble final container\nFROM alpine:3.13\nRUN apk add --no-cache coreutils diffutils less git openssh-client\nCOPY tk /usr/local/bin/tk\nCOPY --from=kubectl /usr/local/bin/kubectl /usr/local/bin/kubectl\nCOPY --from=jb /usr/local/bin/jb /usr/local/bin/jb\nCOPY --from=helm /tmp/helm/helm /usr/local/bin/helm\nCOPY --from=kustomize /tmp/kustomize/kustomize /usr/local/bin/kustomize\nWORKDIR /app\nENTRYPOINT [\"/usr/local/bin/tk\"]\n"
}