diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elektrainitiative/libelektra/scripts/docker/debian/sid/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elektrainitiative/libelektra/scripts/docker/debian/sid/Dockerfile/repaired.Dockerfile
index a988ba0..b80acdc 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elektrainitiative/libelektra/scripts/docker/debian/sid/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elektrainitiative/libelektra/scripts/docker/debian/sid/Dockerfile/repaired.Dockerfile
@@ -4,7 +4,7 @@ ENV LANG C.UTF-8
 ENV LANGUAGE C.UTF-8
 ENV LC_ALL C.UTF-8
 
-RUN apt-get update && apt-get -y install \
+RUN apt-get update && apt-get -y --no-install-recommends install \
         antlr4 \
         automake \
         autotools-dev \
@@ -71,32 +71,32 @@ ENV PATH="/usr/lib/llvm-13/bin:$PATH"
 RUN ldconfig
 
 # Build dependency for libelektra-fuse
-RUN pip3 install wheel
+RUN pip3 install --no-cache-dir wheel
 
-RUN pip3 install cmake-format[yaml]==0.6.13
+RUN pip3 install --no-cache-dir cmake-format[yaml]==0.6.13
 
 # Google Test
 ENV GTEST_ROOT=/opt/gtest
 ARG GTEST_VER=release-1.11.0
 RUN mkdir -p ${GTEST_ROOT} \
     && cd /tmp \
-    && curl -o gtest.tar.gz \
+    && curl -f -o gtest.tar.gz \
       -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \
     && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \
     && rm gtest.tar.gz
 
 # Prettier
-RUN npm install --global prettier@2.5.1
+RUN npm install --global prettier@2.5.1 && npm cache clean --force;
 
 # Google Java formatter
 RUN cd /opt \
-    && curl -o google-java-format.jar \
+    && curl -f -o google-java-format.jar \
       -L https://github.com/google/google-java-format/releases/download/v1.11.0/google-java-format-1.11.0-all-deps.jar
 
 # hyperfine
 ARG HYPERFINE_VERSION=1.5.0
 RUN cd /tmp \
-    && curl -o hyperfine.deb \
+    && curl -f -o hyperfine.deb \
        -L https://github.com/sharkdp/hyperfine/releases/download/v${HYPERFINE_VERSION}/hyperfine_${HYPERFINE_VERSION}_amd64.deb \
     && dpkg -i hyperfine.deb \
     && rm hyperfine.deb
@@ -132,7 +132,7 @@ ENV SHFMT_VERSION=v3.3.1
 ENV PATH="${SHFMT_PATH}:${PATH}"
 RUN mkdir -p "${SHFMT_PATH}" \
     && cd "${SHFMT_PATH}" \
-    && curl -L "https://github.com/mvdan/sh/releases/download/${SHFMT_VERSION}/shfmt_${SHFMT_VERSION}_linux_amd64" -o shfmt \
+    && curl -f -L "https://github.com/mvdan/sh/releases/download/${SHFMT_VERSION}/shfmt_${SHFMT_VERSION}_linux_amd64" -o shfmt \
     && chmod a+x shfmt
 
 # Ronn-NG