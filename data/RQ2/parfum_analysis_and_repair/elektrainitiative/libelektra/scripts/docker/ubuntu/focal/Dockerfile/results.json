{
  "startTime": 1674215767993,
  "endTime": 1674215769328,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 66,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 57,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get -y --no-install-recommends install \\\n        automake \\\n        autotools-dev \\\n        bison \\\n        build-essential \\\n        clang \\\n        cmake \\\n        curl \\\n        debhelper \\\n        debsigs \\\n        devscripts \\\n        dh-exec \\\n        dh-lua \\\n        dh-python \\\n        discount \\\n        doxygen \\\n        flex \\\n        ghostscript \\\n        git \\\n        git-buildpackage \\\n        graphviz \\\n        libaugeas-dev \\\n        libcurl4-gnutls-dev \\\n        libdbus-1-dev \\\n        libev-dev \\\n        libgit2-dev \\\n        libglib2.0-dev \\\n        libgpgme-dev \\\n        liblua5.2-dev \\\n        libmarkdown2-dev \\\n        libpcre3 \\\n        libpcre3-dev \\\n        libqt5svg5-dev \\\n        libssl-dev \\\n        libsystemd-dev \\\n        libuv1-dev \\\n        libxerces-c-dev \\\n        libxml2-dev \\\n        libyajl-dev \\\n        libyaml-cpp-dev \\\n        libzmq3-dev \\\n        lintian \\\n        locales \\\n        ninja-build \\\n        openjdk-11-jdk \\\n        pkg-config \\\n        python3-all \\\n        python3-dev \\\n        qtbase5-dev \\\n        qtdeclarative5-dev \\\n        ruby-dev \\\n        rustc \\\n        unzip \\\n        valgrind \\\n        python3-pip \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Build dependency for libelektra-fuse\nRUN pip3 install --no-cache-dir wheel\n\nRUN wget https://downloads.sourceforge.net/swig/swig-4.0.2.tar.gz && \\\n    tar -xvzf swig-4.0.2.tar.gz && \\\n    cd swig-4.0.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr \\\n                --without-maximum-compile-warnings && \\\n    make && \\\n    make install && \\\n    install -v -m755 -d /usr/share/doc/swig-4.0.2 && \\\n    cp -v -R Doc/* /usr/share/doc/swig-4.0.2 && rm swig-4.0.2.tar.gz\n\n# Google Test\nENV GTEST_ROOT=/opt/gtest\nARG GTEST_VER=release-1.11.0\nRUN mkdir -p ${GTEST_ROOT} \\\n    && cd /tmp \\\n    && curl -f -o gtest.tar.gz \\\n      -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n    && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n    && rm gtest.tar.gz\n\n# Update cache for shared libraries\nRUN ldconfig\n\n# Create User:Group\n# The id is important as jenkins docker agents use the same id that is running\n# on the slaves to execute containers\n\nARG JENKINS_GROUPID\nRUN groupadd \\\n    -g ${JENKINS_GROUPID} \\\n    -f \\\n    jenkins\n\nARG JENKINS_USERID\nRUN useradd \\\n    --create-home \\\n    --uid ${JENKINS_USERID} \\\n    --gid ${JENKINS_GROUPID} \\\n    --shell \"/bin/bash\" \\\n    jenkins\n\n# download and install gradle\nRUN cd /tmp && wget https://services.gradle.org/distributions/gradle-7.4-bin.zip && unzip gradle-7.4-bin.zip && rm gradle-7.4-bin.zip && mv gradle-7.4 /opt/gradle\nENV PATH \"${PATH}:/opt/gradle/bin\"\n\nUSER ${JENKINS_USERID}\n\n# Set git config\nRUN git config --global user.email 'Jenkins <autobuilder@libelektra.org>' \\\n    && git config --global user.name 'Jenkins'\n"
}