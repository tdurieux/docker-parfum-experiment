{
  "startTime": 1674217354412,
  "endTime": 1674217361531,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 68,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM fedora:32\n\nRUN dnf upgrade -y && dnf install -y \\\n        augeas-devel \\\n        bison \\\n        bison-devel \\\n        cmake \\\n        curl \\\n        dbus-devel \\\n        diffutils \\\n        dnf-plugins-core \\\n        file \\\n        findutils \\\n        flex \\\n        flex-devel \\\n        gcc-c++ \\\n        git \\\n        glib2 \\\n        gpgme-devel \\\n        java-11-openjdk-devel \\\n        jna \\\n        libasan \\\n        libcurl-devel \\\n        libev-devel \\\n        libgcrypt-devel \\\n        libgit2-devel \\\n        libmarkdown-devel \\\n        libubsan \\\n        libuv-devel \\\n        libxml2-devel \\\n        llvm \\\n        lua-devel \\\n        make \\\n        ninja-build \\\n        openssl-devel \\\n        procps-ng \\\n        python3-devel \\\n        qt5-devel \\\n        ruby-devel \\\n        rubygem-test-unit \\\n        swig \\\n        unzip \\\n        valgrind \\\n        wget \\\n        which \\\n        xerces-c-devel \\\n        yajl-devel \\\n        yaml-cpp-devel \\\n        zlib-devel \\\n        python3-pip \\\n    && dnf debuginfo-install -y \\\n        bison \\\n        flex \\\n        glib2 \\\n        glibc \\\n        gpgme \\\n        libgcrypt \\\n        ruby-libs \\\n    && dnf clean all -y\n\n# Build dependency for libelektra-fuse\nRUN pip3 install --no-cache-dir wheel\n\n# Google Test\nENV GTEST_ROOT=/opt/gtest\nARG GTEST_VER=release-1.11.0\nRUN mkdir -p ${GTEST_ROOT} \\\n    && cd /tmp \\\n    && curl -f -o gtest.tar.gz \\\n      -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n    && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n    && rm gtest.tar.gz\n\n# Create User:Group\n# The id is important as jenkins docker agents use the same id that is running\n# on the slaves to execute containers\nARG JENKINS_GROUPID\nRUN groupadd \\\n    -g ${JENKINS_GROUPID} \\\n    -f \\\n    jenkins\n\nARG JENKINS_USERID\nRUN useradd \\\n    --create-home \\\n    --uid ${JENKINS_USERID} \\\n    --gid ${JENKINS_GROUPID} \\\n    --shell \"/bin/bash\" \\\n    jenkins\n\n# download and install gradle\nRUN cd /tmp && wget https://services.gradle.org/distributions/gradle-7.4-bin.zip && unzip gradle-7.4-bin.zip && rm gradle-7.4-bin.zip && mv gradle-7.4 /opt/gradle\n# Pipe in 1 as Java 11 is first in the list\nRUN echo 1 | alternatives --config java && alternatives --auto javac\nENV PATH=\"${PATH}:/opt/gradle/bin\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java\"\n\nUSER ${JENKINS_USERID}\n\n# Set git config\nRUN git config --global user.email 'Jenkins <autobuilder@libelektra.org>' \\\n    && git config --global user.name 'Jenkins'\n"
}