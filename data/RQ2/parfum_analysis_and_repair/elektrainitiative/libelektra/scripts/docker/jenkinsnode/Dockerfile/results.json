{
  "startTime": 1674215314350,
  "endTime": 1674215315355,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch\n\n# install dependencies\nRUN apt-get update && apt-get -y upgrade\nRUN apt-get -y --no-install-recommends install \\\n  build-essential \\\n  clang \\\n  cmake \\\n  curl \\\n  dh-lua \\\n  discount \\\n  git \\\n  libaugeas-dev \\\n  libcurl4-gnutls-dev \\\n  libdbus-1-dev \\\n  libev-dev \\\n  libgcrypt20-dev \\\n  libgit2-dev \\\n  libglib2.0-dev \\\n  libgpgme-dev \\\n  libmarkdown2-dev \\\n  libpcre++-dev \\\n  libpcre3-dev \\\n  libssl-dev \\\n  libsystemd-dev \\\n  libuv1-dev \\\n  libuv1-dev \\\n  libxerces-c-dev \\\n  libyajl-dev \\\n  libzmq3-dev \\\n  openjdk-8-jdk-headless \\\n  openssh-server \\\n  python3-dev \\\n  python3-all \\\n  ruby-dev \\\n  swig \\\n  unzip \\\n  valgrind \\\n  wget \\\n  python3-pip \\\n&& apt-get clean && \\\n  rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Build dependency for libelektra-fuse\nRUN pip3 install --no-cache-dir wheel\n\n# TODO use Elektra for the configuration steps below\n\n# Google Test\nENV GTEST_ROOT=/opt/gtest\nARG GTEST_VER=release-1.11.0\nRUN mkdir -p ${GTEST_ROOT} \\\n    && cd /tmp \\\n    && curl -f -o gtest.tar.gz \\\n      -L https://github.com/google/googletest/archive/${GTEST_VER}.tar.gz \\\n    && tar -zxvf gtest.tar.gz --strip-components=1 -C ${GTEST_ROOT} \\\n    && rm gtest.tar.gz\n\n# setup the ssh server\nRUN sed --in-place 's/^\\(PermitRootLogin\\|UsePAM\\|UseDNS\\)/#\\1/' /etc/ssh/sshd_config && \\\n  echo \"\" >> /etc/ssh/sshd_config && \\\n  echo \"# Custom changes from `date`\" >> /etc/ssh/sshd_config && \\\n  echo \"PermitRootLogin no\" >> /etc/ssh/sshd_config && \\\n  echo \"UsePAM no\" >> /etc/ssh/sshd_config && \\\n  echo \"UseDNS no\" >> /etc/ssh/sshd_config && \\\n  echo \"SSH daemon config updated\"\n\n# setup jenkins prerequisites\nRUN echo \"\\n\\n\\n\\n\\nY\" | adduser --quiet --disabled-password jenkins && \\\n  echo \"jenkins:<password>\" | chpasswd && \\\n  mkdir /home/jenkins/.m2/ && \\\n  chown -R jenkins:jenkins /home/jenkins/.m2/ && \\\n  mkdir /home/jenkins/libelektra && \\\n  echo \"[user]\\nname = Jenkins Buildbot\\nemail = bot@libelektra.org\" >> /home/jenkins/.gitconfig\n\n# setup the run- utilities\nCOPY run-make /usr/local/bin/run-make\nCOPY run-make-env /usr/local/bin/run-make-env\nCOPY run-nice /usr/local/bin/run-nice\nRUN chmod a+x /usr/local/bin/run-*\n\n# start the ssh server\nEXPOSE 22\nRUN service ssh start\nCMD [\"/usr/sbin/sshd\", \"-D\", \"-e\"]\n\n# download and install gradle\nRUN cd /tmp && wget https://services.gradle.org/distributions/gradle-7.4-bin.zip && unzip gradle-7.4-bin.zip && rm gradle-7.4-bin.zip && mv gradle-7.4 /opt/gradle\nENV PATH \"${PATH}:/opt/gradle/bin\"\n\nUSER jenkins:jenkins\n\nUSER root:root\n"
}