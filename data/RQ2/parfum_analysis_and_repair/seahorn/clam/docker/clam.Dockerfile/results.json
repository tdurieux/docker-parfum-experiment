{
  "startTime": 1674218713629,
  "endTime": 1674218714516,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 61
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for Clam binary\n# produces package in /clam/build\n# Arguments:\n#  - BASE-IMAGE: bionic-llvm10, focal-llvm10\n#  - BUILD_TYPE: Debug, RelWithDebInfo, Coverage\n#  - BRANCH\n\nARG BASE_IMAGE=bionic-llvm10\nFROM seahorn/buildpack-deps-seahorn:$BASE_IMAGE\n\n# Needed to run clang with -m32\nRUN apt-get install --no-install-recommends -yqq libc6-dev-i386 && rm -rf /var/lib/apt/lists/*;\n# seadsa needs clang-format\nRUN apt-get install --no-install-recommends -yqq clang-format && rm -rf /var/lib/apt/lists/*;\n\nARG BRANCH=master\nRUN cd / && rm -rf /clam && \\\n    git clone https://github.com/seahorn/crab-llvm -b $BRANCH clam --depth=10 ; \\\n    mkdir -p /clam/build\nWORKDIR /clam/build\n\nARG BUILD_TYPE=RelWithDebInfo\n# Build configuration.\nRUN cmake .. -GNinja \\\n          -DCMAKE_BUILD_TYPE=$BUILD_TYPE \\\n          -DCMAKE_INSTALL_PREFIX=run \\\n          -DCMAKE_CXX_COMPILER=clang++-10 \\\n\t  -DCMAKE_C_COMPILER=clang-10 \\\t  \n          -DCMAKE_EXPORT_COMPILE_COMMANDS=1 \\\n          -DCRAB_USE_LDD=ON \\\n          -DCRAB_USE_APRON=ON \\\n          && \\\n    cmake --build . --target extra  && cmake .. && \\\n    cmake --build . --target crab  && cmake .. && \\\n    cmake --build . --target ldd  && cmake .. && \\\n    cmake --build . --target apron  && cmake .. && \\\n    cmake --build . --target install\n\nRUN ln -s /usr/bin/clang-10 /usr/bin/clang\nRUN ln -s /usr/bin/llvm-dis-10 /usr/bin/llvm-dis\nENV PATH \"/usr/bin:$PATH\"\nENV PATH \"/clam/build/run/bin:$PATH\"\n\n# run tests\nRUN cmake --build . --target test-simple\nRUN cmake --build . --target test-readme\nRUN cmake --build . --target test-ssh-simplified\nRUN cmake --build . --target test-ntdrivers-simplified\nRUN cmake --build . --target test-array-adapt\nRUN cmake --build . --target test-mem\n\nWORKDIR /clam\n\n"
}