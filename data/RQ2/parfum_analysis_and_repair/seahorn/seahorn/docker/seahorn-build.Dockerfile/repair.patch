diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/seahorn/seahorn/docker/seahorn-build.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/seahorn/seahorn/docker/seahorn-build.Dockerfile/repaired.Dockerfile
index e6f4e62..8d22fd2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/seahorn/seahorn/docker/seahorn-build.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/seahorn/seahorn/docker/seahorn-build.Dockerfile/repaired.Dockerfile
@@ -15,23 +15,24 @@ ARG BUILD_TYPE
 RUN echo "Build type set to: $BUILD_TYPE" && \
      # Install deps.
     apt-get update && \
-    apt-get install -yqq software-properties-common && \
+    apt-get install --no-install-recommends -yqq software-properties-common && \
     if [ "$UBUNTU" = "trusty" ] ; \
-      then apt-get install -yqq python-software-properties ; \
+      then \
+      apt-get install --no-install-recommends -yqq python-software-properties; \
     fi && \
     add-apt-repository --yes ppa:ubuntu-toolchain-r/test && \
     apt-get update && \
     apt-get upgrade -yqq && \
-    apt-get install -yqq binutils-gold cmake cmake-data xdot g++-5 \
+    apt-get install --no-install-recommends -yqq binutils-gold cmake cmake-data xdot g++-5 \
                        ninja-build libgraphviz-dev libstdc++5 \
                        libgmp-dev libmpfr-dev libiomp-dev \
                        python-dev python-pip python-setuptools \
                        lcov ggcov && \
-    pip install lit OutputCheck && \
-    pip install networkx==2.2 pygraphviz && \
+    pip install --no-cache-dir lit OutputCheck && \
+    pip install --no-cache-dir networkx==2.2 pygraphviz && \
     # Use gold instead of bfd for much faster linking.
     update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.gold" 20 && \
-    update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.bfd" 10
+    update-alternatives --install "/usr/bin/ld" "ld" "/usr/bin/ld.bfd" 10 && rm -rf /var/lib/apt/lists/*;
 
 
 WORKDIR /tmp/dockerutils
@@ -53,22 +54,23 @@ RUN echo '#!/bin/sh' > switch.sh && \
 WORKDIR /deps
 RUN export PREFIX=$(cat /tmp/dockerutils/prefix.txt) && \
     export DEPS_BASE=$(echo https://github.com/seahorn/seahorn-ext-deps/releases/download/5.0-deep-dev/"$PREFIX") && \
-    curl -sSOL "$DEPS_BASE"_boost_1_68.tar.gz && \
+    curl -f -sSOL "$DEPS_BASE"_boost_1_68.tar.gz && \
     tar -xf "$PREFIX"_boost_1_68.tar.gz && \
-    curl -sSOL "$DEPS_BASE"_z3.tar.gz && \
+    curl -f -sSOL "$DEPS_BASE"_z3.tar.gz && \
     tar -xf "$PREFIX"_z3.tar.gz && \
-    curl -sSOL "$DEPS_BASE"_yices-2.6.1.tar.gz && \
+    curl -f -sSOL "$DEPS_BASE"_yices-2.6.1.tar.gz && \
     tar -xf "$PREFIX"_yices-2.6.1.tar.gz && \
-    curl -sSOL "$DEPS_BASE"_llvm50.tar.gz && \
+    curl -f -sSOL "$DEPS_BASE"_llvm50.tar.gz && \
     tar -xf "$PREFIX"_llvm50.tar.gz && \
 #   ls -al --block-size=M 1>&2 && \
     mkdir -p /seahorn && \
     # download clang
     mkdir /clang-5.0 && \
     if [ "$UBUNTU" = "trusty" ] ; \
-      then curl -s https://releases.llvm.org/5.0.0/clang+llvm-5.0.0-linux-x86_64-ubuntu14.04.tar.xz ; \
-      else curl -s https://releases.llvm.org/5.0.0/clang+llvm-5.0.0-linux-x86_64-ubuntu16.04.tar.xz ; \
+      then \
+      curl -f -s https://releases.llvm.org/5.0.0/clang+llvm-5.0.0-linux-x86_64-ubuntu14.04.tar.xz; \
+      else curl -f -s https://releases.llvm.org/5.0.0/clang+llvm-5.0.0-linux-x86_64-ubuntu16.04.tar.xz; \
     fi \
-    | tar -xJf - -C /clang-5.0 --strip-components=1
-    
+    | tar -xJf - -C /clang-5.0 --strip-components=1 && rm "$PREFIX"_boost_1_68.tar.gz
+
 WORKDIR /seahorn