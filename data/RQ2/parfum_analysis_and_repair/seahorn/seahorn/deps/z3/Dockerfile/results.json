{
  "startTime": 1674250794301,
  "endTime": 1674250795458,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 17,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# z3/spacer Dockerfile for SeaHorn\n# This produces packages in /z3.\n# Arguments:\n#  - UBUNTU:     trusty, xenial, bionic\n#  - BUILD_TYPE: Debug, Release\n#\n\nARG UBUNTU\n\n# Pull base image.\nFROM buildpack-deps:$UBUNTU\n\nARG BUILD_TYPE\nRUN echo Build type set to: $BUILD_TYPE\n\nWORKDIR /tmp/dockerutils\n\n# Create a helper script that works as switch (VAL) { Key0 : Val0, ...}.\n# This is to work around docker limitations and pass right correct flag to the\n# python configuration script.\n\nRUN echo '#!/bin/sh' > switch.sh && \\ \n    echo 'VAL=$1;shift;while test $# -gt 0;do if [ \"$1\" = \"$VAL\" ];then echo $2;exit 0;fi;shift;shift;done' >> switch.sh && \\\n    chmod +x switch.sh\n\n# Install deps\nRUN \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -yqq binutils-gold cmake ninja-build && rm -rf /var/lib/apt/lists/*;\n\n# Use gold instead of bfd for much faster linking.\nRUN update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.gold\" 20\nRUN update-alternatives --install \"/usr/bin/ld\" \"ld\" \"/usr/bin/ld.bfd\" 10\n\nWORKDIR /z3\nRUN mkdir -p /z3/repo\nWORKDIR /z3/repo\n\n# Checkout z3/spacer3.\nRUN git clone https://github.com/agurfinkel/z3.git ./ -b deep_space --depth=1\n\nRUN mkdir -p /z3/out ; mkdir -p /z3/out/z3\n\n# Build selected configuration. Use the file with a saved flag to pick\n# release or debug configuration.\n\nRUN mkdir /z3/repo/build ; cd /z3/repo/build ; cmake -GNinja ../ \\\n    -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=/z3/out/z3 \\\n    -DBUILD_LIBZ3_SHARED:BOOL=FALSE\nWORKDIR /z3/repo/build\nRUN ninja && ninja install\n\nRUN cd /z3/out ; tar -czvf /z3/z3.tar.gz ./z3 && rm /z3/z3.tar.gz\n\nRUN rm -rf /z3/out ; rm -rf /z3/repo/build ; rm -rf /tmp/dockerutils\n\nWORKDIR /z3\n\nRUN echo '#!/bin/sh' > cpy.sh && \\ \n    echo 'cp *.tar.gz /host/' >> cpy.sh && \\\n    chmod +x cpy.sh\n\n# Define default command.\nCMD [\"./cpy.sh\"]\n\n"
}