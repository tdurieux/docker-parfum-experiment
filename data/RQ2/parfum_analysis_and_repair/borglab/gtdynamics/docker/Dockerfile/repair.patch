diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/borglab/gtdynamics/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/borglab/gtdynamics/docker/Dockerfile/repaired.Dockerfile
index ff0ff02..6fbee49 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/borglab/gtdynamics/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/borglab/gtdynamics/docker/Dockerfile/repaired.Dockerfile
@@ -11,18 +11,18 @@ WORKDIR /usr/src/
 RUN apt-get -y update
 
 # Install basic dependencies for sdfformat
-RUN apt-get install -y ruby-dev build-essential libboost-all-dev cmake pkg-config wget lsb-release
+RUN apt-get install --no-install-recommends -y ruby-dev build-essential libboost-all-dev cmake pkg-config wget lsb-release && rm -rf /var/lib/apt/lists/*;
 
 # Get Gazebo packages
 RUN sh -c 'echo "deb http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main" > /etc/apt/sources.list.d/gazebo-stable.list'
-RUN wget http://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
+RUN wget https://packages.osrfoundation.org/gazebo.key -O - | apt-key add -
 RUN apt-get update
-RUN apt-get install -y libtinyxml2-dev liburdfdom-dev libignition-cmake2-dev libignition-tools-dev libignition-math6-dev python3-psutil
+RUN apt-get install --no-install-recommends -y libtinyxml2-dev liburdfdom-dev libignition-cmake2-dev libignition-tools-dev libignition-math6-dev python3-psutil && rm -rf /var/lib/apt/lists/*;
 
 # Get sdfformat package
 ENV GTD_SDFormat_VERSION="10.5.0"
-RUN wget http://osrf-distributions.s3.amazonaws.com/sdformat/releases/sdformat-${GTD_SDFormat_VERSION}.tar.bz2
-RUN tar -xvjf sdformat-${GTD_SDFormat_VERSION}.tar.bz2
+RUN wget https://osrf-distributions.s3.amazonaws.com/sdformat/releases/sdformat-${GTD_SDFormat_VERSION}.tar.bz2
+RUN tar -xvjf sdformat-${GTD_SDFormat_VERSION}.tar.bz2 && rm sdformat-${GTD_SDFormat_VERSION}.tar.bz2
 RUN rm sdformat-${GTD_SDFormat_VERSION}.tar.bz2
 
 # Change to build directory. Will be created automatically.
@@ -33,10 +33,10 @@ RUN cmake ..
 RUN make -j4 install
 
 # Avoid ascii errors when reading files in Python
-RUN apt-get install -y locales && locale-gen en_US.UTF-8
+RUN apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;
 ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'
 # Update setuptools to avoid python wrapper install warnings
-RUN pip3 install -U setuptools
+RUN pip3 install --no-cache-dir -U setuptools
 
 # Clone GTDynamics (develop branch)
 WORKDIR /usr/src/