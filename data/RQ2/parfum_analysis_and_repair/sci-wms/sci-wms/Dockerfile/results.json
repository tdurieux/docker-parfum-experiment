{
  "startTime": 1674251036402,
  "endTime": 1674251037623,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\nLABEL maintainer=\"Kyle Wilcox <kyle@axiomdatascience.com>\" \\\n      description='sci-wms is an open-source Python implementation of a WMS \\\n(Web Mapping Service) server designed for oceanographic, atmospheric, climate \\\nand weather data'\n\nENV DEBIAN_FRONTEND noninteractive\nENV LANG C.UTF-8\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        binutils \\\n        build-essential \\\n        bzip2 \\\n        ca-certificates \\\n        curl \\\n        file \\\n        libglib2.0-0 \\\n        libsm6 \\\n        libxext6 \\\n        libxrender1 \\\n        pwgen \\\n        wget \\\n        && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Setup CONDA (https://hub.docker.com/r/continuumio/miniconda3/~/dockerfile/)\nENV MINICONDA_VERSION \"py38_4.8.2\"\nENV MINICONDA_HASH \"5bbb193fd201ebe25f4aeb3c58ba83feced6a25982ef4afa86d5506c3656c142\"\nRUN curl -f -k -o /miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-$MINICONDA_VERSION-Linux-x86_64.sh && \\\n    echo \"${MINICONDA_HASH}  /miniconda.sh\" > /miniconda.sh.sha256 && \\\n    sha256sum --check /miniconda.sh.sha256 && \\\n    /bin/bash /miniconda.sh -b -p /opt/conda && \\\n    rm /miniconda.sh && \\\n    /opt/conda/bin/conda clean -afy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> /etc/profile && \\\n    echo \"conda activate base\" >> /etc/profile && \\\n    find /opt/conda/ -follow -type f -name '*.a' -delete && \\\n    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \\\n    /opt/conda/bin/conda update -n base conda && \\\n    /opt/conda/bin/conda clean -afy\n\nCOPY environment-prod.yml /tmp/environment.yml\nRUN /opt/conda/bin/conda config \\\n        --set always_yes yes \\\n        --set changeps1 no \\\n        --set show_channel_urls True \\\n        && \\\n    /opt/conda/bin/conda config \\\n        --add channels conda-forge \\\n        && \\\n    # Install requirements\n    /opt/conda/bin/conda env update -n base --file /tmp/environment.yml && \\\n    # cleanup\n    /opt/conda/bin/conda clean -afy\n\nENV PATH /opt/conda/bin:$PATH\n\n# Add Tini\nENV TINI_VERSION v0.19.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\nENV SCIWMS_ROOT /srv/sci-wms\nRUN mkdir -p \"$SCIWMS_ROOT\"\nCOPY . $SCIWMS_ROOT\nWORKDIR $SCIWMS_ROOT\n\nVOLUME [\"$SCIWMS_ROOT/sciwms/settings/local\"]\nVOLUME [\"$SCIWMS_ROOT/wms/topology\"]\nVOLUME [\"$SCIWMS_ROOT/sciwms/db\"]\n\nEXPOSE 7002\nCMD [\"docker/run.sh\"]\n"
}