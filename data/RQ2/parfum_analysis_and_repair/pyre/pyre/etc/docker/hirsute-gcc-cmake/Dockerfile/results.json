{
  "startTime": 1674252268899,
  "endTime": 1674252269601,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## -*- docker-image-name: \"pyre:hirsute-gcc-cmake\" -*-\n#\n# michael a.g. aïvázis <michael.aivazis@para-sim.com>\n# (c) 1998-2022 all rights reserved\n\n# based on ubuntu\nFROM ubuntu:hirsute\n\n# set up some build variables\n# locations\nARG prefix=/usr/local\nARG srcdir=${prefix}/src\n\n# environment\n# colorize (for fun)\nENV TERM=xterm-256color\n# set up the dynamic linker path\nENV LD_LIBRARY_PATH=${prefix}/lib\n\n\n# update the package repository\nRUN apt update -y && DEBIAN_FRONTEND=noninteractive \\\n        apt --no-install-recommends install -y \\\n        git vim unzip zip \\\n        openssh-server \\\n        g++ gfortran make cmake \\\n        python3 python3-dev \\\n        python3-distutils python3-numpy python3-pybind11 python3-yaml \\\n        libopenmpi-dev \\\n        libgsl-dev && rm -rf /var/lib/apt/lists/*; # get the latest\nRUN apt dist-upgrade -y\n\n# install the base software stack\n#  - {vim} is for interactive use\n#  - {openssh}, {zip}, {unzip} are needed for some of the tests\n\n\n\n\n\n\n\n\n\n\n\n# setup the interactive environment\n# go home\nWORKDIR /root\n# copy the files with support for interactive use\nCOPY etc/docker/hirsute-gcc-cmake/inputrc .inputrc\n# the startup file\nCOPY etc/docker/hirsute-gcc-cmake/bashrc bashrc.in\n# expand\nRUN sed \\\n        -e \"s:@SRCDIR@:${srcdir}:g\" \\\n        bashrc.in > .bashrc\n\n# make the pyre configuration directory\nWORKDIR /root/.pyre\n# the mpi configuration\nCOPY etc/docker/hirsute-gcc-cmake/mpi.pfg mpi.pfg\n\n\n# make the development area\nWORKDIR ${srcdir}\n# pull pyre\nCOPY . pyre\n\n# go to the {pyre} top level directory\nWORKDIR /tmp/builds/pyre\n# configure\nRUN cmake \\\n        -DCMAKE_INSTALL_PREFIX=/usr/local \\\n        -DMPIEXEC_PREFLAGS=--allow-run-as-root \\\n        /usr/local/src/pyre\n# build\nRUN make -j 16 install\n\n# and test\nCMD service ssh start && ctest --verbose\n\n\n# end of file\n"
}