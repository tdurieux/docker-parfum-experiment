diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ericsson/codechecker/web/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ericsson/codechecker/web/docker/Dockerfile/repaired.Dockerfile
index 0a1b8b3..c906724 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ericsson/codechecker/web/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ericsson/codechecker/web/docker/Dockerfile/repaired.Dockerfile
@@ -19,8 +19,8 @@ RUN set -x && apt-get update -qq \
     curl \
     git \
     make \
-    && curl -sL https://deb.nodesource.com/setup_16.x | bash - \
-    && apt-get install -y nodejs
+    && curl -f -sL https://deb.nodesource.com/setup_16.x | bash - \
+    && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Download CodeChecker release.
 RUN git clone ${CC_REPO} /codechecker
@@ -59,22 +59,22 @@ RUN set -x && apt-get update -qq \
   # Prevent fail when install postgresql-client.
   && mkdir -p /usr/share/man/man1 \
   && mkdir -p /usr/share/man/man7 \
-  \
+
   && apt-get install -qqy --no-install-recommends ca-certificates \
     postgresql-client \
     # To switch user and exec command.
-    gosu
+    gosu && rm -rf /var/lib/apt/lists/*;
 
 RUN if [ "$INSTALL_AUTH" = "yes" ] ; then \
       apt-get install -qqy --no-install-recommends \
         libldap2-dev \
         libsasl2-dev \
-        libssl-dev; \
+        libssl-dev; rm -rf /var/lib/apt/lists/*; \
     fi
 
 RUN if [ "$INSTALL_PSYCOPG2" = "yes" ] ; then \
       apt-get install -qqy --no-install-recommends \
-        libpq-dev; \
+        libpq-dev; rm -rf /var/lib/apt/lists/*; \
     fi
 
 COPY --from=builder /codechecker/web/build/CodeChecker /codechecker
@@ -95,27 +95,27 @@ RUN apt-get update -qq  && \
     # netcat is needed for 'wait-for' script.
     netcat \
   \
-  # Install necessary runtime environment files.
-  && pip3 install -r /requirements_py/requirements.txt \
+  # Install necessary runtime environment files. \
+  && pip3 install --no-cache-dir -r /requirements_py/requirements.txt \
   && if [ "$INSTALL_AUTH" = "yes" ] ; then \
-       pip3 install -r /requirements_py/auth/requirements.txt; \
+       pip3 install --no-cache-dir -r /requirements_py/auth/requirements.txt; \
      fi \
   && if [ "$INSTALL_PG8000" = "yes" ] ; then \
-       pip3 install -r /requirements_py/db_pg8000/requirements.txt; \
+       pip3 install --no-cache-dir -r /requirements_py/db_pg8000/requirements.txt; \
      fi \
   && if [ "$INSTALL_PSYCOPG2" = "yes" ] ; then \
-       pip3 install -r /requirements_py/db_psycopg2/requirements.txt; \
+       pip3 install --no-cache-dir -r /requirements_py/db_psycopg2/requirements.txt; \
      fi \
-  \
+
   # Remove unnecessary packages.
   && pip3 uninstall -y wheel \
   && apt-get purge -y --auto-remove \
     gcc \
     python-dev \
-  \
+
   && apt-get clean \
   && rm -rf /var/lib/apt/lists/ \
-  && set +x
+  && set +x && rm -rf /var/lib/apt/lists/*;
 
 # Create user and group for CodeChecker.
 RUN groupadd -r codechecker -g ${CC_GID} \