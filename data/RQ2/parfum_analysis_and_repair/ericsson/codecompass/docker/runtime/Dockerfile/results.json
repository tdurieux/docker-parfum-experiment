{
  "startTime": 1674250121957,
  "endTime": 1674250123661,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 52,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 63,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG CC_DATABASE=sqlite\n\n###############################################################################\n#-----------------------------    BUILD STAGE   ------------------------------#\n###############################################################################\n\nFROM codecompass:dev as builder\n\nARG CC_VERSION=master\nENV CC_VERSION ${CC_VERSION}\n\nARG CC_DATABASE\nENV CC_DATABASE ${CC_DATABASE}\n\nARG CC_BUILD_TYPE=Release\nENV CC_BUILD_TYPE ${CC_BUILD_TYPE}\n\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends --yes git && rm -rf /var/lib/apt/lists/*;\n\n# Download CodeCompass release.\nRUN git clone https://github.com/Ericsson/CodeCompass.git /CodeCompass\nWORKDIR /CodeCompass\nRUN git checkout ${CC_VERSION}\n\n# Build CodeCompass.\nRUN mkdir /CodeCompass-build && \\\n  cd /CodeCompass-build && \\\n  cmake /CodeCompass \\\n    -DDATABASE=$CC_DATABASE \\\n    -DCMAKE_INSTALL_PREFIX=/CodeCompass-install \\\n    -DCMAKE_BUILD_TYPE=$CC_BUILD_TYPE \\\n    -DWITH_AUTH=\"plain;ldap\" && \\\n  make -j $(nproc) && \\\n  make install\n\n###############################################################################\n#--------------------------    PRODUCTION STAGE   ----------------------------#\n###############################################################################\n\nFROM ubuntu:20.04\n\n# tzdata package is installed implicitly in the following command. This package\n# sets timezone interactively during the installation process. This environment\n# variable prevents this interaction.\nARG DEBIAN_FRONTEND=noninteractive\n\nARG CC_DATABASE\nENV CC_DATABASE ${CC_DATABASE}\n\nRUN if [ \"pgsql\" = \"${CC_DATABASE}\" ]; then \\\n    apt-get update -qq --yes && \\\n    apt-get install -qq --yes --no-install-recommends \\\n    postgresql-server-dev-12 \\   \n    libodb-pgsql-dev; rm -rf /var/lib/apt/lists/*; \\\n    else \\\n    apt-get update -qq && \\\n    apt-get install -qq --yes --no-install-recommends \\\n    libsqlite3-dev \\\n    libodb-sqlite-dev; rm -rf /var/lib/apt/lists/*; \\\n    fi;\n\nRUN set -x && apt-get update -qq && \\\n    apt-get install -qq --yes --no-install-recommends \\\n    llvm-10 \\\n    libboost-filesystem-dev libboost-log-dev libboost-program-options-dev \\\n    default-jre \\\n    libgit2-dev \\\n    libssl1.1 \\\n    libgvc6 \\\n    libldap-2.4-2 \\\n    libmagic-dev \\\n    libthrift-dev \\\n    ctags \\\n    tini && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/ && \\\n    set +x && rm -rf /var/lib/apt/lists/*;\n\n\n# Copy CodeCompass installed directory. (Change permission of the CodeCompass package.)\nCOPY --from=builder /CodeCompass-install /codecompass\n\nENV PATH=\"/codecompass/bin:$PATH\"\n\n\nENTRYPOINT [\"tini\", \"--\"]\n\n"
}