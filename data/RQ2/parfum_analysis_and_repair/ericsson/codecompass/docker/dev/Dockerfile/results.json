{
  "startTime": 1674250850516,
  "endTime": 1674250851119,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 29,
        "columnStart": 5,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\n# tzdata package is installed implicitly in the following command. This package\n# sets timezone interactively during the installation process. This environment\n# variable prevents this interaction.\nARG DEBIAN_FRONTEND=noninteractive\n\n# CodeCompass development dependencies.\nRUN set -x && apt-get update -qq \\\n  && apt-get -y install --no-install-recommends \\\n  cmake make \\\n  default-jdk \\\n  ctags \\\n  doxygen \\\n  gcc-9 gcc-9-plugin-dev g++-9 \\\n  libboost-filesystem-dev \\\n  libboost-log-dev \\\n  libboost-program-options-dev \\\n  libboost-regex-dev \\\n  libgit2-dev \\\n  libgraphviz-dev \\\n  libgtest-dev \\\n  libldap2-dev \\\n  libmagic-dev \\\n  libsqlite3-dev \\\n  libssl-dev \\\n  llvm-10 clang-10 llvm-10-dev libclang-10-dev \\\n  npm \\\n  thrift-compiler libthrift-dev \\\n  odb libodb-sqlite-dev libodb-pgsql-dev && \\\n  ln -s /usr/bin/gcc-9 /usr/bin/gcc && \\\n  ln -s /usr/bin/g++-9 /usr/bin/g++ && rm -rf /var/lib/apt/lists/*;\n\n# Build GTest.\nRUN cd /usr/src/googletest && \\\n  mkdir build && \\\n  cd build && \\\n  cmake .. && \\\n  make install && \\\n  cd / && \\\n  rm -rf /usr/src/googletest/build\n\n# Adding CodeCompass builder script.\nCOPY docker/dev/codecompass-build.sh /usr/local/bin\nRUN chmod +x /usr/local/bin/codecompass-build.sh\n\n# Setting the environment.\nENV DATABASE=sqlite \\\n    BUILD_TYPE=Release \\\n    BUILD_DIR=/CodeCompass/build \\\n    INSTALL_DIR=/CodeCompass/install \\\n    SOURCE_DIR=/CodeCompass/CodeCompass \\\n    TEST_WORKSPACE=/CodeCompass/test_workspace \\\n    TEST_DB=\"sqlite:database=$TEST_WORKSPACE/cc_test.sqlite\" \\\n    WITH_AUTH=\"plain;ldap\"\n\nENV PATH=\"$INSTALL_DIR/bin:$PATH\"\n"
}