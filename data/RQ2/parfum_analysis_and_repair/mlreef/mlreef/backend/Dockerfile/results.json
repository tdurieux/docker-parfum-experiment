{
  "startTime": 1674255197070,
  "endTime": 1674255197919,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gradle:6.5-jdk8 AS BUILDER\n\nENV JVM_OPTS -Xmx2g -Xms2g -XX:MaxPermSize=1024m\n\n# provide a tmp/cache dir\nVOLUME /tmp\n\n# all following commands will be executed in /app\nWORKDIR /workdir\n# copy the sources to image (except .dockerignore)\nADD . /workdir\nRUN gradle -x test :mlreef-rest:bootJar :mlreef-rest:prepareDocker -x :mlreef-rest:asciidoctor\n\n\n# Start a new docker stage here, and only copy the finished build artefacts.\nFROM openjdk:8-jdk-slim\n\nRUN apt update \\\n    && apt install --no-install-recommends -y wget gnupg gnupg2 gnupg1 \\\n    && wget https://dvc.org/deb/dvc.list -O /etc/apt/sources.list.d/dvc.list \\\n    && wget -qO - https://dvc.org/deb/iterative.asc | apt-key add - \\\n    && apt update \\\n    && apt install --no-install-recommends -y dvc \\\n    && rm -rf /var/lib/apt/lists/*\n\n# add the gradle dependencies and own artificats in a docker-friendly way\nCOPY --from=BUILDER /workdir/mlreef-rest/build/dependency/BOOT-INF/classes /app\nCOPY --from=BUILDER /workdir/mlreef-rest/build/dependency/BOOT-INF/lib     /app/lib\nCOPY --from=BUILDER /workdir/mlreef-rest/build/dependency/META-INF         /app/META-INF\n\n# start app\nENTRYPOINT [\"java\",\"-cp\",\"app:app/lib/*\",\"com.mlreef.rest.RestApplicationKt\"]\n\n"
}