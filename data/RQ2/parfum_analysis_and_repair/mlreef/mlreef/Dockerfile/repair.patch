diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlreef/mlreef/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlreef/mlreef/Dockerfile/repaired.Dockerfile
index 909bfb4..42a9f03 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mlreef/mlreef/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mlreef/mlreef/Dockerfile/repaired.Dockerfile
@@ -56,8 +56,8 @@ RUN echo "Frontend Build Time: $(date +%Y-%m-%d\ %H:%M:%S)" && \
     # execute tests first, so there should be a halt when compiling if tests fail
     npm test                                                && \
     echo "Frontend Build Time: $(date +%Y-%m-%d\ %H:%M:%S)" && \
-    npm run build                                           && \
-    echo "Frontend Build Time: $(date +%Y-%m-%d\ %H:%M:%S)"
+    npm run build && \
+    echo "Frontend Build Time: $(date +%Y-%m-%d\ %H:%M:%S)" && npm cache clean --force;
 
 
 
@@ -144,11 +144,11 @@ RUN sed -i "/wait/d" /assets/gitlab-wrapper
 ###
 # Install Gitlab Runner in Docker container
 # https://docs.gitlab.com/runner/install/linux-manually.html
-RUN apt-get update                          && \
-    curl -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | bash  && \
-    apt-get install --yes gitlab-runner     && \
-    apt-get clean                           && \
-    gitlab-runner --version
+RUN apt-get update && \
+    curl -f -L https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.deb.sh | bash && \
+    apt-get install --no-install-recommends --yes gitlab-runner && \
+    apt-get clean && \
+    gitlab-runner --version && rm -rf /var/lib/apt/lists/*;
 
 
 
@@ -157,28 +157,28 @@ RUN apt-get update                          && \
 ###
 # Install NGINX reverse proxy
 # Install Open JDK 8 and fix cert issues
-RUN apt-get update               && \
-    apt-get install --assume-yes    \
+RUN apt-get update && \
+    apt-get install -y --no-install-recommends --assume-yes \
     # NGINX is MLReef's API gateway
-    nginx                           \
-    ant                             \
+    nginx \
+    ant \
     # THe java runtime for the MLReef backend
-    openjdk-8-jdk                   \
-    ca-certificates-java         && \
+    openjdk-8-jdk \
+    ca-certificates-java && \
     # cleanup apt-get cache
-    apt-get clean                && \
+    apt-get clean && \
     # Fix cert issues
-    update-ca-certificates -f    && \
+    update-ca-certificates -f && \
     # Remove nginx default config
-    rm -rf /etc/nginx/sites-enabled/default
+    rm -rf /etc/nginx/sites-enabled/default && rm -rf /var/lib/apt/lists/*;
 
 # Install Docker and jq
-RUN apt-get -y install curl apt-transport-https ca-certificates software-properties-common jq    && \
-    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add                        && \
+RUN apt-get -y --no-install-recommends install curl apt-transport-https ca-certificates software-properties-common jq && \
+    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add && \
     add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable" |  \
-                        tee /etc/apt/sources.list.d/docker.list                                  && \
-    apt-get update                                                                               && \
-    apt-get install -y docker-ce
+                        tee /etc/apt/sources.list.d/docker.list && \
+    apt-get update && \
+    apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;
 
 
 ####
@@ -186,16 +186,16 @@ RUN apt-get -y install curl apt-transport-https ca-certificates software-propert
 ####
 # Set up PostgreSQL for mlreefdb
 # Add postgres repo to apt package manager
-RUN apt-get update                                                                          && \
-    apt-get install -y wget vim lsb-release                                                 && \
-    wget --no-check-certificate -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc |  apt-key add -   && \
-    RELEASE=$(lsb_release -cs)                                                              && \
-    echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)"-pgdg main |  tee  /etc/apt/sources.list.d/pgdg.list
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y wget vim lsb-release && \
+    wget --no-check-certificate -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc |  apt-key add - && \
+    RELEASE=$(lsb_release -cs) && \
+    echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)"-pgdg main |  tee  /etc/apt/sources.list.d/pgdg.list && rm -rf /var/lib/apt/lists/*;
 
 # Install Postgres
-RUN apt-get update                      && \
-    apt-get install -y acl sudo locales    \
-    postgresql-${MLREEF_PG_VERSION} postgresql-client-${MLREEF_PG_VERSION} postgresql-contrib-${MLREEF_PG_VERSION}
+RUN apt-get update && \
+    apt-get install --no-install-recommends -y acl sudo locales \
+    postgresql-${MLREEF_PG_VERSION} postgresql-client-${MLREEF_PG_VERSION} postgresql-contrib-${MLREEF_PG_VERSION} && rm -rf /var/lib/apt/lists/*;
 
 ######
 ###### BACKEND