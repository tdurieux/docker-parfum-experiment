{
  "startTime": 1674219157414,
  "endTime": 1674219158772,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Intermediate stage ##\nFROM debian:bullseye-slim\n\n# Environment\nENV BUILD_PKGS \\\n    autoconf \\\n    automake \\\n    gcc \\\n    libbpf-dev \\\n    libedit-dev \\\n    libelf-dev \\\n    libfstrm-dev \\\n    libgnutls28-dev \\\n    libidn2-0-dev \\\n    liblmdb-dev \\\n    libmaxminddb-dev \\\n    libmnl-dev \\\n    libnghttp2-dev \\\n    libprotobuf-c-dev \\\n    libtool \\\n    liburcu-dev \\\n    make \\\n    pkg-config \\\n    protobuf-c-compiler\n\n# Install dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yqq ${BUILD_PKGS} && rm -rf /var/lib/apt/lists/*;\n\n# Build the project\nCOPY . /knot-src\nWORKDIR /knot-src\nARG FASTPARSER=disable\nRUN autoreconf -if && \\\n    CFLAGS=\"-g -O2 -DNDEBUG -D_FORTIFY_SOURCE=2 -fstack-protector-strong\" \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --prefix=/ \\\n                --with-rundir=/rundir \\\n                --with-storage=/storage \\\n                --with-configdir=/config \\\n                --with-module-dnstap=yes \\\n                --${FASTPARSER}-fastparser \\\n                --enable-dnstap \\\n                --disable-static \\\n                --disable-documentation && \\\n    make -j$(grep -c ^processor /proc/cpuinfo)\n\n# Run unittests if requested and install the project\nARG CHECK=disable\nRUN if [ \"$CHECK\" = \"enable\" ]; then make -j$(grep -c ^processor /proc/cpuinfo) check; fi && \\\n    make install DESTDIR=/tmp/knot-install\n\n## Final stage ##\nFROM debian:bullseye-slim\nMAINTAINER Knot DNS <knot-dns@labs.nic.cz>\n\n# Environment\nENV RUNTIME_PKGS \\\n    libbpf0 \\\n    libedit2 \\\n    libelf1 \\\n    libfstrm0 \\\n    libgnutls30 \\\n    libidn2-0 \\\n    liblmdb0 \\\n    libmaxminddb0 \\\n    libmnl0 \\\n    libnghttp2-14 \\\n    libprotobuf-c1 \\\n    liburcu6\n\n# Copy artifacts\nCOPY --from=0 /tmp/knot-install/ /\n\n# Install dependencies and create knot user and group\nARG UID=53\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yqq ${RUNTIME_PKGS} && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    ldconfig && \\\n    adduser --quiet --system --group --no-create-home --home /storage --uid=${UID} knot && \\\n    chown knot:knot /config /rundir /storage\n\n# Expose port\nEXPOSE 53/UDP\nEXPOSE 53/TCP\n\n# Prepare shared directories\nVOLUME /config\nVOLUME /rundir\nVOLUME /storage\n"
}