{
  "startTime": 1674256318977,
  "endTime": 1674256319396,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#Based on the template from niployments (https://github.com/NIAEFEUP/niployments) for react applications\n\n# First, building the static files\nFROM node:14.18.3-alpine as build\n\nWORKDIR /usr/src/app\nCOPY package.json package-lock.json ./\n\n# Because colors break logs\nENV NPM_CONFIG_COLOR=false\n\n# Production or not doesn't really matter as this image will not be used other than for building\nRUN npm install && npm cache clean --force;\n\n# Necessary files for building the app\nCOPY public/ public/\nCOPY config/ config/\nCOPY scripts/ scripts/\nCOPY src/ src/\n\n# Copy env files\nCOPY .env* ./\n\n# Building the image\nRUN npm run build\n\n# Then, use nginx to serve the built files\n# See https://hub.docker.com/_/nginx\nFROM nginx:alpine\n\n# Copying the built files into the nginx image, to the default served directory\nCOPY --from=build /usr/src/app/build /usr/share/nginx/html\nCOPY nginx.nijobs.conf /etc/nginx/conf.d/default.conf\n"
}