{
  "startTime": 1674255963087,
  "endTime": 1674255964401,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 67,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 49,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 67,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build NNG native shared library for: linux-x64, linux-arm, linux-arm64\n#\n# USAGE:\n# docker run --rm --privileged multiarch/qemu-user-static:register\n# docker build -t jeikabu/build-nng dockerfiles/build_nng\n# docker run -i -t --rm -v \"$PWD/nng.NET/runtimes:/runtimes\" jeikabu/build-nng\n\nARG SRC=/usr/src\n\n# Git NNG source\nFROM debian:buster AS nng\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    ca-certificates \\\n    curl \\\n    git && rm -rf /var/lib/apt/lists/*;\n\nARG SRC\nARG NNG_BRANCH=v1.4.0\nWORKDIR ${SRC}\n\nRUN git clone https://github.com/nanomsg/nng.git \\\n    && cd nng \\\n    && git checkout ${NNG_BRANCH}\n\n# Build x64 Linux\nFROM debian:buster AS linux-x64\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    clang \\\n    cmake && rm -rf /var/lib/apt/lists/*;\n\nARG SRC\nARG RUNTIME_NATIVE=${SRC}/runtimes/linux-x64/native\nWORKDIR ${SRC}\nCOPY --from=nng ${SRC}/nng .\nRUN mkdir -p build && cd build \\\n    && cmake -G \"Unix Makefiles\" -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DNNG_ELIDE_DEPRECATED=ON -DNNG_TESTS=OFF -DNNG_TOOLS=OFF .. \\\n    && make -j2 \\\n    && mkdir -p ${RUNTIME_NATIVE} \\\n    && cp libnng.so ${RUNTIME_NATIVE}\n\n# Build ARM32\nFROM multiarch/debian-debootstrap:armhf-buster AS arm32v7\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    clang \\\n    cmake && rm -rf /var/lib/apt/lists/*;\n\nARG SRC\nARG RUNTIME_NATIVE=${SRC}/runtimes/linux-arm/native\nWORKDIR ${SRC}\nCOPY --from=nng ${SRC}/nng .\nRUN mkdir -p build && cd build \\\n    && cmake -G \"Unix Makefiles\" -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DNNG_ELIDE_DEPRECATED=ON -DNNG_TESTS=OFF -DNNG_TOOLS=OFF .. \\\n    && make -j2 \\\n    && mkdir -p ${RUNTIME_NATIVE} \\\n    && cp libnng.so ${RUNTIME_NATIVE}\n\n# Build ARM64\nFROM multiarch/debian-debootstrap:arm64-buster AS arm64v8\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    clang \\\n    cmake && rm -rf /var/lib/apt/lists/*;\n\nARG SRC\nARG RUNTIME_NATIVE=${SRC}/runtimes/linux-arm64/native\nWORKDIR ${SRC}\nCOPY --from=nng ${SRC}/nng .\nRUN mkdir -p build && cd build \\\n    && cmake -G \"Unix Makefiles\" -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=Release -DNNG_ELIDE_DEPRECATED=ON -DNNG_TESTS=OFF -DNNG_TOOLS=OFF .. \\\n    && make -j2 \\\n    && mkdir -p ${RUNTIME_NATIVE} \\\n    && cp libnng.so ${RUNTIME_NATIVE}\n\n# Copy binaries to host\nFROM debian:buster AS copy\n\nARG SRC\nWORKDIR ${SRC}\nCOPY --from=linux-x64 ${SRC}/runtimes ./runtimes\nCOPY --from=arm32v7 ${SRC}/runtimes ./runtimes\nCOPY --from=arm64v8 ${SRC}/runtimes ./runtimes\nCMD cp -rf ./runtimes/* /runtimes\n"
}