{
  "startTime": 1674249536418,
  "endTime": 1674249536925,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 2,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12\nMAINTAINER Zane Claes <zane@technicallywizardry.com>\n\n# Install global dependencies\nRUN apt-get update -y && \\\n  apt-get install --no-install-recommends -y \\\n    python-pip git curl make g++ udev && \\\n  apt-get -y autoclean && rm -rf /var/lib/apt/lists/*;\n\n# Install Docker, for access within the container.\nENV VERSION=19.03.15\nRUN curl -f -sSL https://get.docker.com | sh\nRUN usermod -aG docker node\n\n# Create user to run the application\nUSER node\nWORKDIR /home/node\n\n# -------- Application Code ---------\n# note: add any sensitive or large files to .dockerignore\nADD --chown=node:node . /home/node\n\n# The node_modules are intentionally excluded by .dockerignore.\n# Some modules have architecture-dependent install candidates, which are resolved here.\nRUN npm install && npm cache clean --force;\n\nEXPOSE 8000\nENTRYPOINT [\"/home/node/bin/docker-entrypoint\"]\n"
}