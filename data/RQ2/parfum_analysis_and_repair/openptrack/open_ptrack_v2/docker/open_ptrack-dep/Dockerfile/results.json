{
  "startTime": 1674252659352,
  "endTime": 1674252661533,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 166,
        "columnStart": 7,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 294
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 215
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 215
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 101
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 294
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 5,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 215
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 165,
        "lineEnd": 165,
        "columnStart": 7,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 7,
        "columnEnd": 239
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/opengl:1.0-glvnd-runtime-ubuntu16.04\n\nLABEL maintainer \"Samir Tabriz\"\n\nENV NVIDIA_DRIVER_CAPABILITIES ${NVIDIA_DRIVER_CAPABILITIES},display,compute,utility\n\nRUN apt-get update \\ \n    && apt-get install -y --no-install-recommends mesa-utils \\ \n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update \\ \n    && apt-get install -y --no-install-recommends         ocl-icd-libopencl1         clinfo \\ \n    &&     rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /etc/OpenCL/vendors \\ \n    && echo \"libnvidia-opencl.so.1\" > /etc/OpenCL/vendors/nvidia.icd\n\nENV NVIDIA_VISIBLE_DEVICES=all\n\nRUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections     \\ \n    && echo keyboard-configuration keyboard-configuration/layout select 'English (US)' | debconf-set-selections     \\ \n    && echo keyboard-configuration keyboard-configuration/layoutcode select 'us' | debconf-set-selections     \\ \n    && apt-get update \\\n    && apt-get install -y --no-install-recommends software-properties-common wget udev apt-utils sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository -y ppa:danielrichter2007/grub-customizer     \\ \n    && wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | apt-key add - \\\n    && apt-get install --no-install-recommends -y apt-transport-https \\\n    && echo \"deb https://download.sublimetext.com/ apt/stable/\" | tee /etc/apt/sources.list.d/sublime-text.list \\\n    && apt-add-repository -y ppa:obsproject/obs-studio \\\n    && apt-add-repository -y ppa:graphics-drivers/ppa \\\n    && add-apt-repository -y ppa:yannubuntu/boot-repair \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y sublime-text grub-customizer exfat-fuse exfat-utils vim terminator gitg cmake-curses-gui gparted meld cowsay fortune gimp synaptic libgoogle-glog-dev libatlas-base-dev libeigen3-dev libsuitesparse-dev ncdu filezilla p7zip-full openssh-client openssh-server boot-repair && rm -rf /var/lib/apt/lists/*;\n\nRUN sh -c 'echo \"deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main\" > /etc/apt/sources.list.d/ros-latest.list'     \\ \n    && apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654     \\ \n    && apt-get update \\\n    && apt-get install --no-install-recommends ros-kinetic-desktop-full python-rosinstall -y \\\n    && rosdep init \\\n    && rosdep update && rm -rf /var/lib/apt/lists/*;\n\nRUN  /bin/bash -c \"echo 'source /opt/ros/kinetic/setup.bash' >> /root/.bashrc \\ \n    && source /root/.bashrc\"     \n\nRUN add-apt-repository -y ppa:levi-armstrong/ppa     \\ \n    && apt-get update\n\nRUN  /bin/bash -c \"source /opt/ros/kinetic/setup.bash     \\ \n    && cd     \\ \n    && mkdir -p workspace/ros/src     \\ \n    && cd workspace/ros     \\ \n    && catkin_make\"    \n\nRUN  /bin/bash -c \"echo 'source /root/workspace/ros/devel/setup.bash' >> /root/.bashrc\"         \n\nRUN cd ~/workspace/ros \\\n    && apt-get install --no-install-recommends -y ocl-icd-opencl-dev \\\n    && wget https://developer.nvidia.com/compute/cuda/8.0/Prod2/local_installers/cuda_8.0.61_375.26_linux-run -O cuda.run \\\n    && chmod +x cuda.run \\\n    && ./cuda.run -silent --toolkit --samples --samplespath=\"/root/workspace/\" \\\n    && wget \"https://www.dropbox.com/s/cx95583vbf1ifzm/cudnn-8.0-linux-x64-v5.1.tgz?dl%3D0&sa=D&ust=1507541105896000&usg=AFQjCNEU511fT00n547PxPt_P6cfSLPVWw\" \\\n    && tar -zxvf cudnn* \\\n    && cp cuda/include/* /usr/local/cuda/include \\\n    && cp cuda/lib64/* /usr/local/cuda/lib64/ \\\n    && echo 'export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64' >> ~/.bashrc \\\n    && echo 'export PATH=$PATH:/usr/local/cuda/bin' >> ~/.bashrc && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends cmake libgoogle-glog-dev libatlas-base-dev libeigen3-dev libsuitesparse-dev -y --force-yes \\\n    && mkdir /tmp/ceres_install \\\n    && cd /tmp/ceres_install \\\n    && git clone https://ceres-solver.googlesource.com/ceres-solver \\\n    && cd ceres-solver \\\n    && git fetch --tags \\\n    && git checkout tags/1.9.0 \\\n    && cd .. \\\n    && mkdir ceres-bin \\\n    && cd ceres-bin \\\n    && cmake ../ceres-solver \\\n    && make -j8 \\\n    && make test \\\n    && make install \\\n    && rm -R /tmp/ceres_install \\\n    && cd ~/workspace/ros/src \\\n    && git clone https://github.com/iaslab-unipd/calibration_toolkit \\\n    && cd calibration_toolkit \\\n    && git fetch origin --tags \\\n    && git checkout tags/v0.2 && rm -rf /var/lib/apt/lists/*;\n\nRUN cd     \\ \n    && cd workspace     \\ \n    && apt-get update     \\ \n    && git clone https://github.com/marketto89/opencv     \\ \n    && cd opencv     \\ \n    && git checkout 3.1.0-with-cuda8     \\ \n    && mkdir release     \\ \n    && cd release     \\ \n    && cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local/opencv3 -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_OPENGL=ON -D ENABLE_FAST_MATH=1 -D CUDA_FAST_MATH=1 -D WITH_CUBLAS=1 -D WITH_IPP=ON -D CMAKE_LIBRARY_PATH=/usr/local/cuda/lib64/stubs ..     \\ \n    && make -j8 -l8     \\ \n    && make install     \\ \n    && printf '#OpenCV\\nPKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/opencv3/lib/pkgconfig\\nexport PKG_CONFIG_PATH\\n' >> /root/.bashrc     \\ \n    && printf 'PATH=$PATH:/usr/local/opencv3/bin\\nexport PATH\\n' >> /root/.bashrc      \\ \n    && printf 'LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/opencv3/lib\\nexport LD_LIBRARY_PATH\\n' >> /root/.bashrc       \\ \n    && /bin/bash -c \"source /root/.bashrc\"     \\ \n    && ln -s /usr/local/opencv3/share/OpenCV/3rdparty/lib/libippicv.a /usr/local/lib/libippicv.a \n\nRUN  /bin/bash -c \"source /root/.bashrc    \\ \n    && cd ~/workspace/ros/src      \\ \n    && git clone https://bitbucket.org/mcarraro/rtpose_wrapper     \\ \n    && cd rtpose_wrapper     \\ \n    && git checkout integration-1604     \\ \n    && apt-get --assume-yes install libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler libboost-all-dev libgflags-dev libgoogle-glog-dev liblmdb-dev     \\ \n    && make all -j8\"\n\nRUN cd     \\ \n    && cd workspace     \\ \n    && git clone https://github.com/OpenPTrack/libfreenect2.git     \\ \n    && cd libfreenect2     \\ \n    && git checkout 1606     \\ \n    && cd depends/ \\\n    && apt-get install --no-install-recommends -y git cmake cmake-curses-gui libxmu-dev libxi-dev libgl1-mesa-dev xorg-dev libglu1-mesa-dev libtool automake libudev-dev libgtk2.0-dev pkg-config libjpeg-turbo8-dev libturbojpeg libglewmx-dev \\\n    && ln -f -s /usr/lib/x86_64-linux-gnu/libturbojpeg.so.0.1.0 /usr/lib/x86_64-linux-gnu/libturbojpeg.so \\\n    && cd .. \\\n    && mkdir build \\\n    && cd build \\\n    && /bin/bash -c \"source /opt/ros/kinetic/setup.bash    \\ \n    && export NVCUDASAMPLES_ROOT='/root/workspace/NVIDIA_CUDA-8.0_Samples' \\\n    && cmake .. -DENABLE_CXX11=ON -DCUDA_PROPAGATE_HOST_FLAGS=off   \\ \n    && make     \\\n    && make install\" \\\n    && echo '# ATTR{product}==\"Kinect2\" SUBSYSTEM==\"usb\", ATTR{idVendor}==\"045e\", ATTR{idProduct}==\"02c4\", MODE=\"0666\" SUBSYSTEM==\"usb\", ATTR{idVendor}==\"045e\", ATTR{idProduct}==\"02d8\", MODE=\"0666\" SUBSYSTEM==\"usb\", ATTR{idVendor}==\"045e\", ATTR{idProduct}==\"02d9\", MODE=\"0666\"' > ~/90-kinect2.rules \\\n    && cp ~/90-kinect2.rules /etc/udev/rules.d/ && rm -rf /var/lib/apt/lists/*;\n\nRUN  cd ~/workspace/ros/src     \\ \n    && git clone https://github.com/OpenPTrack/iai_kinect2.git     \\ \n    && cd iai_kinect2     \\ \n    && git checkout 1607      \n\n\nRUN  /bin/bash -c \"git clone https://github.com/torch/distro.git ~/torch --recursive \\ \n    && cd ~/torch \\ \n    && bash install-deps \\ \n    && ./install.sh -b \\ \n    && source ~/.bashrc \\ \n    && cd install/bin \\ \n    && ./luarocks install dpnn \\ \n    && ./luarocks install csvigo\"\n\nRUN /bin/bash -c \"cd /tmp \\\n    && git clone https://github.com/cmusatyalab/openface.git \\\n    && cd openface \\\n    && sudo python setup.py install\"\n\nRUN /bin/bash -c \"cd /tmp \\\n    && rm -rf dlib \\\n    && git clone https://github.com/davisking/dlib.git \\\n    && cd dlib \\\n    && git checkout v19.4 \\\n    && mkdir python_examples/build \\\n    && cd python_examples/build \\\n    && cmake ../../tools/python -DUSE_AVX_INSTRUCTIONS=ON \\\n    && cmake --build . --config Release \\\n    && sudo cp dlib.so /usr/local/lib/python2.7/dist-packages\"\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y python-qt4 python-pip \\\n    && pip install --no-cache-dir requests && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends ntp -y \\\n    && rm -rf /var/lib/apt/lists/*\n"
}