{
  "startTime": 1674250012657,
  "endTime": 1674250013718,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 9,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM postgres:10\n\nMAINTAINER yamatattsu@gmail.com\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\ngit \\\nbuild-essential \\\nbc \\\nlibpam-dev \\\nlibedit-dev \\\nlibkrb5-dev \\\nlibssl-dev \\\nlibselinux-dev \\\nlibpam-dev \\\nlibkrb5-dev \\\nzlib1g-dev \\\nlibedit-dev \\\nwget \\\nvim \\\npostgresql-server-dev-10 \\\npostgresql-client-10 \\\npostgresql-contrib-10 \\\nlibpq-dev && rm -rf /var/lib/apt/lists/*;\n\n# Workaround. See:https://github.com/zalando/spilo/pull/229/commits/dfd74c94e060f9b8b5c080d66846657aaa21bae8\nRUN ln -snf /usr/lib/postgresql/${version}/lib/libpgcommon.a /usr/lib/x86_64-linux-gnu/libpgcommon.a && \\\nln -snf /usr/lib/postgresql/${version}/lib/libpgport.a /usr/lib/x86_64-linux-gnu/libpgport.a\n\n# Get extensions\nRUN git clone https://github.com/ossc-db/pg_hint_plan.git && \\\nwget https://github.com/ossc-db/pg_store_plans/archive/1.3.tar.gz && \\\ngit clone https://github.com/ossc-db/pg_plan_advsr.git pg_plan_advsr\n\n# Copy files for pg_plan_advsr\nRUN cd pg_hint_plan && git checkout PG10 && cp pg_stat_statements.c ../pg_plan_advsr/ && \\\ncp normalize_query.h ../pg_plan_advsr/ && \\\ncd .. && tar xvzf 1.3.tar.gz && cp pg_store_plans-1.3/pgsp_json*.[ch] pg_plan_advsr/ && rm 1.3.tar.gz\n\n# Build & install\nRUN cd pg_hint_plan && make -s && make -s install && \\\nexport PATH=$PATH:/usr/lib/postgresql/10/bin && cd ../pg_store_plans-1.3 && make USE_PGXS=1 all install && \\\ncd ../pg_plan_advsr && make -s && make -s install\n\n# Create extensons\n## you can use create_extensions.sh by postgres user manualy\nCOPY ./create_extensions.sh /docker-entrypoint-initdb.d/\n\n\n"
}