{
  "startTime": 1674255866812,
  "endTime": 1674255867618,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 15,
        "columnStart": 44,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This builds a dockerfile containing a working copy of PySR\n# with all pre-requisites installed.\n\nARG ARCH=linux/amd64\nARG VERSION=latest\n\nFROM --platform=$ARCH julia:$VERSION\n\n# Need to use ARG after FROM, otherwise it won't get passed through.\nARG PYVERSION=3.9.10\n\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y \\\n    make build-essential libssl-dev zlib1g-dev \\\n    libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \\\n    libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev \\\n    vim git tmux \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /pysr\n\n# Install PyEnv to switch Python to dynamically linked version:\nRUN curl -f https://pyenv.run | bash\nENV PATH=\"/root/.pyenv/bin:$PATH\"\n\n# ENV PYVERSION=${PYVERSION}\nRUN PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYVERSION}\nENV PATH=\"/root/.pyenv/versions/$PYVERSION/bin:$PATH\"\n\n# Install IPython and other useful libraries:\nRUN pip install --no-cache-dir ipython jupyter matplotlib\n\n# Caches install (https://stackoverflow.com/questions/25305788/how-to-avoid-reinstalling-packages-when-building-docker-image-for-python-project)\nADD ./requirements.txt /pysr/requirements.txt\nRUN pip3 install --no-cache-dir -r /pysr/requirements.txt\n\n# Install PySR:\n# We do a minimal copy so it doesn't need to rerun at every file change:\nADD ./setup.py /pysr/setup.py\nADD ./pysr/ /pysr/pysr/\nRUN pip3 install --no-cache-dir .\n\n# Install Julia pre-requisites:\nRUN python3 -c 'import pysr; pysr.install()'\n\n# Add tests\nADD ./test/ /pysr/test/\n\nCMD [\"bash\"]\n"
}