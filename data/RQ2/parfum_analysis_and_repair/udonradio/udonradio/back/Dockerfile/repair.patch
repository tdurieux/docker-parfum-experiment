diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/udonradio/udonradio/back/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/udonradio/udonradio/back/Dockerfile/repaired.Dockerfile
index 6a12c33..6daa261 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/udonradio/udonradio/back/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/udonradio/udonradio/back/Dockerfile/repaired.Dockerfile
@@ -1,6 +1,6 @@
 FROM python:3-stretch
 ENV PYTHONUNBUFFURED 1
-RUN mkdir /usr/src/app
+RUN mkdir /usr/src/app && rm -rf /usr/src/app
 WORKDIR /usr/src/app
 
 # Add package repo
@@ -8,29 +8,29 @@ RUN echo "deb http://deb.debian.org/debian stable main contrib non-free" > /etc/
 
 # Pillow dependencies & Liquidsoap & Gosu script
 RUN apt-get update && \
-    apt-get install -y --reinstall libjpeg62-turbo-dev libjpeg-turbo-progs \
+    apt-get install --no-install-recommends -y --reinstall libjpeg62-turbo-dev libjpeg-turbo-progs \
         zlib1g-dev ffmpeg && \
-    apt-get -y --no-install-recommends install ca-certificates curl openssh-server
+    apt-get -y --no-install-recommends install ca-certificates curl openssh-server && rm -rf /var/lib/apt/lists/*;
 
 # Install gosu script
 RUN gpg \
       --batch \
       --keyserver ha.pool.sks-keyservers.net \
       --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && \
-    curl \
+    curl -f \
       -o /usr/local/bin/gosu \
       -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(\
         dpkg --print-architecture)" && \
-    curl \
+    curl -f \
       -o /usr/local/bin/gosu.asc \
       -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(\
         dpkg --print-architecture).asc" && \
-    gpg \
+    gpg --batch \
       --verify /usr/local/bin/gosu.asc && \
     rm /usr/local/bin/gosu.asc && chmod +x /usr/local/bin/gosu
 
 ADD requirements.txt /usr/src/app/
-RUN pip install -r requirements.txt && pip install uwsgi
+RUN pip install --no-cache-dir -r requirements.txt && pip install --no-cache-dir uwsgi
 
 ADD entrypoint.sh /usr/local/bin/entrypoint.sh
 ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]