{
  "startTime": 1674246004805,
  "endTime": 1674246005676,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 97
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04\nMAINTAINER Feike Steenbergen <feike.steenbergen@zalando.de>\n\nRUN echo 'APT::Install-Recommends \"0\";' > /etc/apt/apt.conf.d/01norecommend\nRUN echo 'APT::Install-Suggests \"0\";' >> /etc/apt/apt.conf.d/01norecommend\n\nENV PGVERSION 9.5\n\n# To reduce the Docker image size, we combine some steps into 1 step\nRUN apt-get update -y \\\n && apt-get -y --no-install-recommends install postgresql-${PGVERSION} tomcat7 nginx perl ant openjdk-8-jdk-headless sudo \\\n && localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\nADD . /pgexercises\nRUN cp /pgexercises/nginx/nginx-dev.conf /etc/nginx/nginx.conf\n\nWORKDIR /pgexercises/SQLForwarder\nRUN mkdir WebContent/WEB-INF/lib\nRUN echo \"tomcatlib.dir=/usr/share/tomcat7/lib/\" > build.properties\nRUN mv lib/*.jar /usr/share/tomcat7/lib/\nRUN ant war\nRUN mv build/war/SQLForwarder.war /var/lib/tomcat7/webapps\n\nWORKDIR /pgexercises\nRUN sed -i 's|jdbc:postgresql://localhost:6543/exercises|jdbc:postgresql://localhost:5432/exercises|' database/context.xml \\\n && sed -i 's|password=\"\"|password=\"none\"|g' database/context.xml\nRUN cp database/context.xml /var/lib/tomcat7/conf\nRUN echo \"listen_addresses='*'\" >> /etc/postgresql/${PGVERSION}/main/postgresql.conf\nRUN cp -a /etc/postgresql/${PGVERSION}/main/pg_hba.conf /etc/postgresql/${PGVERSION}/main/pg_hba.conf.bak \\\n && echo \"local all all trust\" > /etc/postgresql/${PGVERSION}/main/pg_hba.conf \\\n && echo \"host all all all trust\" >> /etc/postgresql/${PGVERSION}/main/pg_hba.conf \\\n && service postgresql start && pg_isready \\\n && psql -U postgres -f database/clubdata.sql \\\n && psql -U postgres -c \"ALTER USER pgexercises WITH PASSWORD 'none'\" \\\n && cd scripts \\\n ## This is beyong ugly, I need to hack a hack\n && sed -i 's/psql93/psql/g' runpsql \\\n && ./processdocs.pl ../ 1 \\\n && echo \"listen_addresses='*'\" >> /etc/postgresql/${PGVERSION}/main/postgresql.conf \\\n && mkdir -p /usr/local/nginx && ln -s /pgexercises/site /usr/local/nginx/site\n\nRUN usermod -a -G adm postgres\nRUN echo \"postgres ALL=(ALL:ALL) NOPASSWD: /etc/init.d/tomcat7 start, /etc/init.d/tomcat7 stop, /etc/init.d/tomcat7 restart\" >> /etc/sudoers \\\n && echo \"postgres ALL=(ALL:ALL) NOPASSWD: /etc/init.d/nginx start, /etc/init.d/nginx stop, /etc/init.d/nginx restart\" >> /etc/sudoers\n\nEXPOSE 80 5432\n\nADD docker_entrypoint.sh /docker_entrypoint.sh\nRUN chown postgres:postgres /docker_entrypoint.sh\nUSER postgres\nCMD [\"/bin/bash\", \"/docker_entrypoint.sh\"]\n"
}