{
  "startTime": 1674250318779,
  "endTime": 1674250319795,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 21,
        "columnEnd": 78
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This Dockerfile is used to build an headles vnc image based on Centos\n\nFROM centos:7\n\nLABEL io.k8s.description=\"Headless VNC Container with Xfce window manager, firefox and chromium\" \\\n      io.k8s.display-name=\"Headless VNC Container based on Centos\" \\\n      io.openshift.expose-services=\"6901:http,5901:xvnc\" \\\n      io.openshift.tags=\"vnc, centos, xfce\" \\\n      io.openshift.non-scalable=true\n\n# BM: Install fonts so remote displays work\nRUN yum update -y && yum install -y xorg-x11-fonts* gedit rsync gimp gimp-gmic && rm -rf /var/cache/yum\n\n## Connection ports for controlling the UI:\n# VNC port:5901\n# noVNC webport, connect via http://IP:6901/?password=vncpassword\n\nENV DISPLAY=:1 \\\n    VNC_PORT=5901 \\\n    NO_VNC_PORT=6901\nEXPOSE $VNC_PORT $NO_VNC_PORT\n\n### Envrionment config\nENV TERM=xterm \\\n    STARTUPDIR=/dockerstartup \\\n    INST_SCRIPTS=/headless/install \\\n    NO_VNC_HOME=/headless/noVNC \\\n    VNC_COL_DEPTH=24 \\\n    VNC_RESOLUTION=1920x1200 \\\n    VNC_PW=changeit \\\n    VNC_VIEW_ONLY=false \\\n    XDG_CONFIG_HOME=/headless\nWORKDIR /headless\n\n### Add all install scripts for further steps\nADD ./src/common/install/ $INST_SCRIPTS/\nCOPY ./src/centos/install/ $INST_SCRIPTS/\nRUN find $INST_SCRIPTS -name '*.sh' -exec chmod a+x {} +\n\n### Install some common tools\nRUN $INST_SCRIPTS/tools.sh\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\n### Install xvnc-server & noVNC - HTML5 based VNC viewer\nRUN $INST_SCRIPTS/tigervnc.sh\nRUN $INST_SCRIPTS/no_vnc.sh\n\n## BM: Add custom vnc shell and css\nADD ./conf/vnc_custom.html $NO_VNC_HOME/\nADD ./conf/ui_custom.js $NO_VNC_HOME/app/\nADD ./conf/base_custom.css $NO_VNC_HOME/app/styles/\nADD ./conf/arcade-logo.png $NO_VNC_HOME/app/images/\nADD ./conf/canfar-logo.png $NO_VNC_HOME/app/images/\nADD ./conf/canfar-icon.png $NO_VNC_HOME/app/images/icons/\n\n### Install firefox and chrome browser\nRUN $INST_SCRIPTS/firefox.sh\n#RUN $INST_SCRIPTS/chrome.sh\n\n### Install xfce UI\nRUN $INST_SCRIPTS/xfce_ui.sh\nRUN mkdir -p $XDG_CONFIG_HOME/.config\nADD ./src/common/xfce/.config/user-dirs.dirs $XDG_CONFIG_HOME/.config/\nADD ./src/common/xfce/.config/ $XDG_CONFIG_HOME/\nADD ./src/common/xfce/wm_startup.sh $XDG_CONFIG_HOME/\nADD ./src/common/xfce/Desktop $XDG_CONFIG_HOME/\nRUN mkdir -p $XDG_CONFIG_HOME/Desktop\nRUN rm /etc/xdg/Thunar/uca.xml\n\n### configure startup\nRUN $INST_SCRIPTS/libnss_wrapper.sh\nADD ./src/common/scripts $STARTUPDIR\nRUN $INST_SCRIPTS/set_user_permission.sh $STARTUPDIR /headless\n\n# CANFAR Specifics Below\nCOPY conf/xfce-applications.menu /etc/xdg/menus/xfce-applications.menu\nCOPY conf/xfce-applications.menu /etc/xdg/menus/applications.menu\nRUN chmod 777 /etc/xdg/menus/applications-merged\nCOPY conf/atacama.jpg /headless/atacama.jpg\n\n# add curl with openssl (instead of nss)\nWORKDIR /tmp\n#RUN wget ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/Scott_Cantor/CentOS_7/x86_64/libcurl-openssl-7.43.0-1.1.x86_64.rpm\n#RUN wget http://mirror.ihep.ac.cn/cern/slc6X/i386/yum/extras/libcurl-openssl-7.43.0-1.1.x86_64.rpm\nRUN wget https://mirror.ihep.ac.cn/cern/centos/7.0/cern/x86_64/Packages/libcurl-openssl-7.33.0-1.1.el7.cern.x86_64.rpm\n#RUN wget ftp://ftp.pbone.net/mirror/ftp5.gwdg.de/pub/opensuse/repositories/home:/Scott_Cantor/CentOS_7/x86_64/curl-openssl-7.43.0-1.1.x86_64.rpm\nRUN wget https://mirror.ihep.ac.cn/cern/centos/7.0/cern/x86_64/Packages/curl-openssl-7.33.0-1.1.el7.cern.x86_64.rpm\n#RUN yum install -y libcurl-openssl-7.43.0-1.1.x86_64.rpm\nRUN yum install -y libcurl-openssl-7.33.0-1.1.el7.cern.x86_64.rpm && rm -rf /var/cache/yum\n#RUN yum install -y curl-openssl-7.43.0-1.1.x86_64.rpm\nRUN yum install -y curl-openssl-7.33.0-1.1.el7.cern.x86_64.rpm && rm -rf /var/cache/yum\n\nRUN yum install -y sssd-client acl && rm -rf /var/cache/yum\nRUN yum install -y mailcap && rm -rf /var/cache/yum\n\nENV LD_LIBRARY_PATH /opt/shibboleth/lib64\n\n# create the guest account\nRUN groupadd -g 30001 guest\nRUN useradd -m -g guest -u 30001 guest && \\\n    mkdir -p /home/guest/.ssl && \\\n    chown -R guest:guest /home/guest/.ssl && \\\n    ln -s /home/guest/.ssl /headless/.ssl\n\n# Add scripts that launch sofware containers\nADD software-scripts/*.sh /usr/local/bin/\n\n# Add desktop icon files\nRUN mkdir -p /headless/.icons\nCOPY software-scripts/icons/* /headless/.icons/\n\n# Add desktop links to those scripts\nCOPY software-scripts/*.desktop /usr/share/applications/\nRUN chmod 777 /usr/share/applications/terminal.desktop\n\n# Add a subset of software links to the desktop\nCOPY software-scripts/arcade-feedback.desktop $XDG_CONFIG_HOME/Desktop/arcade-feedback.desktop\nCOPY software-scripts/firefox.desktop $XDG_CONFIG_HOME/Desktop/firefox.desktop\nCOPY software-scripts/gedit.desktop $XDG_CONFIG_HOME/Desktop/gedit.desktop\nCOPY software-scripts/kill-session.desktop $XDG_CONFIG_HOME/Desktop/kill-session.desktop\nCOPY software-scripts/terminal.desktop $XDG_CONFIG_HOME/Desktop/terminal.desktop\nRUN chmod 777 $XDG_CONFIG_HOME/Desktop/terminal.desktop\nRUN chown guest $XDG_CONFIG_HOME/Desktop/*.desktop\n\n# Create firefox profile and space\nRUN mkdir -p /headless/mozilla/skaha\nRUN firefox --headless -CreateProfile \"skaha /headless/mozilla/skaha\"\nRUN chmod -R 777 /headless/mozilla/skaha\nENV MOZ_FORCE_DISABLE_E10S 1\n\nENTRYPOINT [\"/dockerstartup/vnc_startup.sh\"]\nCMD [\"--wait\"]\n"
}