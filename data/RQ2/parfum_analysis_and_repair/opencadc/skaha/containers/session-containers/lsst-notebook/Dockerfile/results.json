{
  "startTime": 1674248573549,
  "endTime": 1674248574165,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM lsstsqre/centos:7-stack-lsst_distrib-v21_0_0\nUSER root\n\n# install git-lfs using package cloud\nRUN curl -f -s https://packagecloud.io/install/repositories/github/git-lfs/script.rpm.sh | bash\n\n# take some build scripts from LSST science platform\n# see: https://github.com/lsst-sqre/nublado/tree/master/jupyterlab\n\n# This will be an interactive system, so we do want man pages after all\nRUN sed -i -e '/tsflags\\=nodocs/d' /etc/yum.conf\nRUN yum install -y epel-release && \\\n\tyum repolist && yum -y upgrade && \\\n\trpm -qa --qf \"%{NAME}\\n\" | xargs yum -y reinstall && rm -rf /var/cache/yum\n# Add some other packages\n#  gettext and fontconfig are needed for the TexLive installation\n#  jq ... file are generally useful utilities\n#  ...and finally enough editors to cover most people's habits\nRUN yum -y install sudo git-lfs man man-pages \\\n\tgettext fontconfig perl-Digest-MD5 \\\n\tjq unzip ack screen tmux tree file \\\n\tnano vim-enhanced emacs-nox ed \\\n        xterm sssd-client acl && rm -rf /var/cache/yum\n\n# Clear build cache\nRUN yum clean all -y\n\n# install ds9, no packages\nRUN curl -f https://ds9.si.edu/download/centos7/ds9.centos7.8.2.1.tar.gz | tar -zx -f - -C /usr/bin/\n\n# jupyterlab stuff\nRUN source /opt/lsst/software/stack/loadLSST.bash && \\\n\tsetup lsst_distrib && \\\n\tconda install --quiet -y notebook jupyterlab bash_kernel && \\\n\tconda clean --all -f -y && \\\n\tpython -m bash_kernel.install\n\n## see https://bugzilla.redhat.com/show_bug.cgi?id=1773148\n#RUN echo \"Set disable_coredump false\" > /etc/sudo.conf\n\n# generate missing dbus uuid (issue #47)\nRUN dbus-uuidgen --ensure\n\nADD config/nsswitch.conf /etc/\nCOPY src/start_lsst.sh /etc/profile.d/\n\n# Copy local files as late as possible to avoid cache busting\n# system settings and permissions\nCOPY config/nofiles.conf /etc/security/limits.d/\n\nARG NB_USER=\"jovyan\"\nARG NB_UID=\"1000\"\nARG NB_GID=\"100\"\n\n# Copy a script that we will use to correct permissions after running certain commands\nCOPY src/fix-permissions /usr/local/bin/fix-permissions\nRUN chmod a+rx /usr/local/bin/fix-permissions\n\nCOPY src/start.sh src/start-notebook.sh src/start-singleuser.sh /usr/local/bin/\n\nRUN mkdir /usr/local/bin/start-notebook.d && \\\n\tln -s /etc/profile.d/start_lsst.sh /usr/local/bin/start-notebook.d\n\n# Currently need to have both jupyter_notebook_config and jupyter_server_config to support classic and lab\nCOPY config/jupyter_notebook_config.py /etc/jupyter/\n\nRUN sed -re \"s/c.NotebookApp/c.ServerApp/g\" \\\n    /etc/jupyter/jupyter_notebook_config.py > /etc/jupyter/jupyter_server_config.py && \\\n    jupyter notebook --generate-config && \\\n    jupyter lab clean\n\nUSER ${NB_UID}\n\nENV HOME=/arc/home/$NB_USER \\\n\tNB_USER=$NB_USER \\\n\tNB_UID=$NB_UID \\\n\tNB_GID=$NB_GID \\\n\tLC_ALL=en_US.UTF-8 \\\n\tLANG=en_US.UTF-8\n"
}