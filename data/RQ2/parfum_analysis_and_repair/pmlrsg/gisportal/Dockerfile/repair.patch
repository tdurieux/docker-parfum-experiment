diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pmlrsg/gisportal/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pmlrsg/gisportal/Dockerfile/repaired.Dockerfile
index b9399b5..34468d6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pmlrsg/gisportal/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pmlrsg/gisportal/Dockerfile/repaired.Dockerfile
@@ -1,9 +1,9 @@
 #
 #  This Dockerfile creates an image based on the contents of the current
-#  folder; therefore the submodules have to be initalised and updated before 
+#  folder; therefore the submodules have to be initalised and updated before
 #  the image is build. See docker-readme.md for full details
 #
-#  To obtain the latest image direct from the Docker Hub you can 
+#  To obtain the latest image direct from the Docker Hub you can
 #  run `docker pull pmlrsg/gisportal` on the command line
 #
 
@@ -16,7 +16,7 @@ SHELL ["/bin/bash", "-c"]
 # Set up OS level packages both for the core portal and for the Python based plotting
 ENV DEBIAN_FRONTEND=noninteractive
 ENV TZ=Etc/UTC
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     build-essential \
     curl \
     gcc \
@@ -31,14 +31,14 @@ RUN apt-get update && apt-get install -y \
     ruby \
     ruby-dev \
     wget \
-    && gem install sass
+    && gem install sass && rm -rf /var/lib/apt/lists/*;
 
 # Install pip as the plotting code will need to load pip packages
-RUN curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py \
+RUN curl -f https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py \
     && python2 get-pip.py
 
 # Packages required for plotting. Very sensitive to the specific versions!
-RUN pip install pillow requests pandas jinja2 matplotlib \
+RUN pip install --no-cache-dir pillow requests pandas jinja2 matplotlib \
     'numpy==1.16' 'cython<1.5' \
     'pyproj<2.2' 'pathlib' \
     'bokeh==0.12.7' 'owslib==0.13.0' 'tornado==4.5.2' 'shapely==1.5.17' \
@@ -46,7 +46,7 @@ RUN pip install pillow requests pandas jinja2 matplotlib \
     'cftime==1.5.1.1' \
     'netCDF4==1.4.3.2'
 
-# Portal will run as user, portal, with all files in /var/portal. We need to 
+# Portal will run as user, portal, with all files in /var/portal. We need to
 # ensure portal can always write.
 RUN mkdir /var/portal \
     && useradd -d /var/portal -s /bin/bash portal \
@@ -65,7 +65,7 @@ RUN cd /var/portal \
     && source .bashrc \
     && nvm install 6 \
     && nvm install 10 \
-    && nvm alias default 6.17.1 
+    && nvm alias default 6.17.1
 
 # Install all the node apps required
 ADD --chown=portal:portal ./package.json /var/portal/GISportal/package.json
@@ -73,7 +73,7 @@ ADD --chown=portal:portal ./package.json /var/portal/GISportal/package.json
 RUN cd /var/portal/GISportal \
     && source /var/portal/.bashrc \
     && npm install \
-    && npm -g install grunt-cli@1.3.2 
+    && npm -g install grunt-cli@1.3.2 && npm cache clean --force;
 
 # Pull all the portal code
 ADD --chown=portal:portal . /var/portal/GISportal/
@@ -81,9 +81,9 @@ ADD --chown=portal:portal . /var/portal/GISportal/
 # Final grunt build of the portal itself
 RUN cd /var/portal/GISportal \
     && source /var/portal/.bashrc \
-    && grunt 
- 
-# We assume that all the config files will be in here. Normally mounted from outside Docker. 
+    && grunt
+
+# We assume that all the config files will be in here. Normally mounted from outside Docker.
 VOLUME /var/portal/GISportal/config
 
 WORKDIR /var/portal/GISportal