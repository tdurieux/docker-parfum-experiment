diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/berkeleyflow/flow/docker/docker-svn/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/berkeleyflow/flow/docker/docker-svn/Dockerfile/repaired.Dockerfile
index f8167cb..f2638d3 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/berkeleyflow/flow/docker/docker-svn/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/berkeleyflow/flow/docker/docker-svn/Dockerfile/repaired.Dockerfile
@@ -2,22 +2,22 @@ FROM maven:3
 
 # ========== Anaconda ==========
 # https://github.com/ContinuumIO/docker-images/blob/master/anaconda/Dockerfile
-RUN apt-get update --fix-missing && apt-get install -y wget bzip2 ca-certificates \
+RUN apt-get update --fix-missing && apt-get install --no-install-recommends -y wget bzip2 ca-certificates \
     libglib2.0-0 libxext6 libsm6 libxrender1 \
-    git mercurial subversion
+    git mercurial subversion && rm -rf /var/lib/apt/lists/*;
 RUN echo 'export PATH=/opt/conda/bin:$PATH' > /etc/profile.d/conda.sh && \
     wget  --no-check-certificate --quiet https://repo.continuum.io/archive/Anaconda2-2.5.0-Linux-x86_64.sh && \
     /bin/bash /Anaconda2-2.5.0-Linux-x86_64.sh -b -p /opt/conda && \
     rm /Anaconda2-2.5.0-Linux-x86_64.sh
 
-RUN apt-get update --fix-missing && apt-get -y install autotools-dev autoconf
+RUN apt-get update --fix-missing && apt-get -y --no-install-recommends install autotools-dev autoconf && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y curl grep sed dpkg && \
-    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
-    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
+RUN apt-get install --no-install-recommends -y curl grep sed dpkg && \
+    TINI_VERSION=$( curl -f https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:') && \
+    curl -f -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
     dpkg -i tini.deb && \
     rm tini.deb && \
-    apt-get clean
+    apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 ENV PATH /opt/conda/bin:$PATH
 # http://bugs.python.org/issue19846
@@ -25,8 +25,8 @@ ENV PATH /opt/conda/bin:$PATH
 ENV LANG C.UTF-8
 
 # ========== Upgrade pip ==========
-RUN pip install --upgrade pip
-RUN apt-get -y install git make cmake unzip apt-utils
+RUN pip install --no-cache-dir --upgrade pip
+RUN apt-get -y --no-install-recommends install git make cmake unzip apt-utils && rm -rf /var/lib/apt/lists/*;
 
 # ========== SUMO ==========
 ENV SUMO_VERSION 0.27.1
@@ -35,10 +35,10 @@ ENV SUMO_SRC sumo
 ENV SUMO_HOME /opt/sumo
 
 # Install system dependencies.
-RUN apt-get update && apt-get -y install -qq \
+RUN apt-get update && apt-get -y --no-install-recommends install -qq \
     g++ libxerces-c3.1 libxerces-c3-dev \
     libproj-dev proj-bin proj-data libtool libgdal1-dev \
-    libfox-1.6-0 libfox-1.6-dev
+    libfox-1.6-0 libfox-1.6-dev && rm -rf /var/lib/apt/lists/*;
 
 # Download and extract source code
 # Download latest stable SUMO
@@ -55,7 +55,7 @@ RUN mv $SUMO_SRC $SUMO_HOME
 RUN cd $SUMO_HOME && wget https://s3-us-west-1.amazonaws.com/cistar.patch/departure_time_issue.patch && patch -p1 < departure_time_issue.patch
 
 # Install SUMO
-RUN cd $SUMO_HOME && make -f Makefile.cvs && ./configure && make -j8 && make install
+RUN cd $SUMO_HOME && make -f Makefile.cvs && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make -j8 && make install
 
 # RUN echo "export PYTHONPATH=\"/opt/sumo/sumo-$SUMO_VERSION/tools\"" >> /root/.bashrc
 ENV PYTHONPATH $SUMO_HOME/tools:$PYTHONPATH
@@ -65,7 +65,7 @@ RUN sumo
 
 # Download and compile traci4j library, not sure if necessary
 # RUN apt-get install -qq -y ssh-client git
-# RUN mkdir -p /opt/traci4j 
+# RUN mkdir -p /opt/traci4j
 # WORKDIR /opt/traci4j
 # RUN git clone https://github.com/egueli/TraCI4J.git /opt/traci4j && mvn package -Dmaven.test.skip=true
 
@@ -76,10 +76,10 @@ EXPOSE 8873
 ENTRYPOINT [ "/usr/bin/tini", "--" ] # "sumo"
 
 # ========== Special Deps ==========
-RUN pip install awscli
+RUN pip install --no-cache-dir awscli
 # ALE requires zlib
-RUN apt-get -y install zlib1g-dev
-RUN apt-get install -y vim ack-grep
+RUN apt-get -y --no-install-recommends install zlib1g-dev && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y vim ack-grep && rm -rf /var/lib/apt/lists/*;
 
 # Note: most of those have been commented out because not necessary for flow_dev
 # MUJOCO requires graphics stuff (Why?)
@@ -94,14 +94,14 @@ RUN apt-get install -y vim ack-grep
 #RUN pip install Pillow
 
 # ========== OpenAI Gym ==========
-RUN pip install gym
+RUN pip install --no-cache-dir gym
 # RUN apt-get -y install ffmpeg
 # RUN apt-get -y install libav-tools
 RUN apt-get update
-RUN apt-get install -y python-numpy python-dev cmake zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev python-opengl libboost-all-dev libsdl2-dev swig
+RUN apt-get install --no-install-recommends -y python-numpy python-dev cmake zlib1g-dev libjpeg-dev xvfb libav-tools xorg-dev python-opengl libboost-all-dev libsdl2-dev swig && rm -rf /var/lib/apt/lists/*;
 
 # Dependencies of OpenCV
-RUN apt-get -y install libgtk2.0-0
+RUN apt-get -y --no-install-recommends install libgtk2.0-0 && rm -rf /var/lib/apt/lists/*;
 
 # ========== Add codebase stub ==========
 CMD mkdir /root/code
@@ -120,5 +120,5 @@ WORKDIR /root/code
 
 RUN /opt/conda/envs/flow/bin/pip install --ignore-installed --upgrade tensorflow
 
-RUN apt-get install -y libopenblas-dev
+RUN apt-get install --no-install-recommends -y libopenblas-dev && rm -rf /var/lib/apt/lists/*;
 RUN printf "[blas]\nldflags = -lopenblas\n" > ~/.theanorc