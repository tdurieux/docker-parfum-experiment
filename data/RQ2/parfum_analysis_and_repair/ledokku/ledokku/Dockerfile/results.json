{
  "startTime": 1674250629730,
  "endTime": 1674250630255,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# First step is to generate a static build for the client\nFROM node:12-alpine AS BUILD_CLIENT\n\nWORKDIR /usr/src/app\n\nCOPY package.json ./\nCOPY yarn.lock ./\nCOPY client/package.json ./client/package.json\n\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY client ./client\n\nRUN cd client && yarn build\n\n# Then we build the server\nFROM node:12-alpine AS BUILD_SERVER\n\nWORKDIR /usr/src/app\n\nCOPY package.json ./\nCOPY yarn.lock ./\nCOPY server/package.json ./server/package.json\n# Prisma folder is needed to in order to generate the prisma client\nCOPY server/prisma ./server/prisma\n\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY server ./server\n\nRUN cd server && yarn build\n\n# Last step, we prepare everything for the server\nFROM node:12-alpine\n\nWORKDIR /usr/src/app\n\nCOPY package.json ./\nCOPY yarn.lock ./\nCOPY server/package.json ./server/package.json\n# Prisma folder is needed in order to run the migrations\nCOPY server/prisma ./server/prisma\n\n# Copy the client build folder so we can expose it to the user\nCOPY --from=BUILD_CLIENT /usr/src/app/client/build ./client/build\n# Copy the compiled server code\nCOPY --from=BUILD_SERVER /usr/src/app/server/build ./server/build\n\nENV NODE_ENV production\n\n# We install only the production dependencies to reduce the size of the final image\nRUN yarn install --frozen-lockfile --production && yarn cache clean;\n\nWORKDIR /usr/src/app/server\n\nEXPOSE 4000\nCMD [ \"yarn\", \"start\" ]\n"
}