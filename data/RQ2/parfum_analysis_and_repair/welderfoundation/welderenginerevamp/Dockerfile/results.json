{
  "startTime": 1674254443487,
  "endTime": 1674254444835,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    wget \\\n    git-core \\\n    default-jre \\\n    python2.7 \\\n    p7zip-full \\\n    ccache \\\n    doxygen \\\n    dumb-init \\\n    clang \\\n    clang-format \\\n    clang-tidy \\\n    git \\\n    gnupg2 \\\n    iwyu \\\n    build-essential \\\n    libasound2-dev \\\n    libpulse-dev \\\n    libudev-dev \\\n    libopenal-dev \\\n    libogg-dev \\\n    libvorbis-dev \\\n    libaudiofile-dev \\\n    libpng-dev \\\n    libfreetype6-dev \\\n    libusb-dev \\\n    libdbus-1-dev \\\n    zlib1g-dev \\\n    libdirectfb-dev \\\n    mesa-common-dev mesa-utils-extra libglapi-mesa libgl1-mesa-dev libglu1-mesa-dev freeglut3 freeglut3-dev \\\n    llvm \\\n    ninja-build \\\n    nodejs \\\n    npm \\\n    pkg-config \\\n    xorg-dev \\\n    xscreensaver \\\n    xutils-dev \\\n    xvfb && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n    google-chrome-unstable fonts-ipafont-gothic fonts-wqy-zenhei fonts-thai-tlwg fonts-kacst fonts-freefont-ttf && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN wget -q -O cmake.sh https://github.com/Kitware/CMake/releases/download/v3.14.7/cmake-3.14.7-Linux-x86_64.sh && \\\n    chmod +x cmake.sh && \\\n    ./cmake.sh --skip-license && \\\n    rm cmake.sh\n\nENV DISPLAY=\":99.0\"\n\nRUN npm install -g npm@latest && npm cache clean --force;\n\nENV NODE_PATH=\"/node_modules\"\nCOPY package*.json ./\nRUN npm install --no-optional --no-progress --no-audit --unsafe-perm --global && npm cache clean --force;\n\n# There is a problem with clang using the default gcc headers on Ubuntu (remove #error).\nRUN sed -i 's/# error.*//g' /usr/include/x86_64-linux-gnu/sys/cdefs.h\n\nRUN echo 'pcm.!default { type plug slave.pcm \"null\" }' > /etc/asound.conf\n\nARG USER_ID\nRUN useradd -m -s /bin/bash -u $USER_ID user && \\\n    addgroup user audio && \\\n    addgroup user video\nUSER $USER_ID\nENV HOME=\"/home/user\"\n\nENV EMSCRIPTEN_VERSION sdk-tag-1.38.47-64bit-upstream\n\nRUN cd /tmp && \\\n    git clone https://github.com/juj/emsdk.git && \\\n    cd emsdk && \\\n    ./emsdk update-tags && \\\n    ./emsdk install $EMSCRIPTEN_VERSION && \\\n    ./emsdk activate --embedded $EMSCRIPTEN_VERSION\n\nENV PATH=\"/tmp/emsdk:/tmp/emsdk/upstream/emscripten:/tmp/emsdk/node/12.9.1_64bit/bin:${PATH}\"\nENV EMSDK=\"/tmp/emsdk\"\nENV EM_CONFIG=\"/tmp/emsdk/.emscripten\"\nENV EM_PORTS=\"/tmp/emsdk/.emscripten_ports\"\nENV EM_CACHE=\"/tmp/emsdk/.emscripten_cache\"\nENV EMSDK_NODE=\"/tmp/emsdk/node/12.9.1_64bit/bin/node\"\nENV EMSCRIPTEN=\"/tmp/emsdk/upstream/emscripten\"\nENV EMCC_WASM_BACKEND=1\nENV EMCC_SKIP_SANITY_CHECK=1\n\n# Compile a program to force emcc caching\nRUN mkdir -p /tmp/emcc && \\\n    cd /tmp/emcc && \\\n    printf \"#include <iostream>\\nint main(){ std::cout << 0; }\" > build.cpp && \\\n    emcc -s USE_WEBGL2=1 -s FULL_ES2=1 -s FULL_ES3=1 -s USE_SDL=2 -O2 -s WASM=1 build.cpp && \\\n    rm -rf /tmp/emcc\n\nENV CCACHE_COMPRESS=1\nENV CCACHE_COMPRESSLEVEL=9\nENV CCACHE_DIR=/cache/\nENV CCACHE_SLOPPINESS=pch_defines,time_macros\n\nENTRYPOINT [\"dumb-init\", \"--\", \"xvfb-run\"]\n\nCMD echo '----------ccache:' && \\\n    ccache --version && \\\n    echo '----------cmake:' && \\\n    cmake --version && \\\n    echo '----------doxygen:' && \\\n    doxygen --version && \\\n    echo '----------clang:' && \\\n    clang --version && \\\n    echo '----------clang-format:' && \\\n    clang-format --version && \\\n    echo '----------clang-tidy:' && \\\n    clang-tidy --version && \\\n    echo '----------git:' && \\\n    git --version && \\\n    echo '----------iwyu:' && \\\n    iwyu --version && \\\n    echo '----------ninja:' && \\\n    ninja --version && \\\n    echo '----------node:' && \\\n    node --version && \\\n    echo '----------npm:' && \\\n    npm --version && \\\n    echo '----------emcc:' && \\\n    emcc --version\n"
}