{
  "startTime": 1674251052260,
  "endTime": 1674251053015,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-FileCopyrightText: Copyright (c) 2021-2022,NVIDIA CORPORATION & AFFILIATES. All rights reserved.\n# SPDX-License-Identifier: Apache-2.0\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n# http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Args used in FROM commands must come first\nARG FROM_IMAGE=\"gpuci/miniforge-cuda\"\nARG CUDA_VER=11.4\nARG LINUX_DISTRO=ubuntu\nARG LINUX_VER=20.04\n\n# ============ Stage: base ============\n# Configure the base conda environment\nFROM ${FROM_IMAGE}:${CUDA_VER}-devel-${LINUX_DISTRO}${LINUX_VER} AS base\n\nARG CONDA_ENV_NAME=srf\nARG PYTHON_VER=3.8\n\n# Update and install some base dependencies\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub && \\\n    apt-get update &&\\\n    apt-get upgrade -y &&\\\n    apt-get install --no-install-recommends -y \\\n        build-essential openssh-client \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install mamba to speed the solve up\nRUN conda config --set ssl_verify false &&\\\n    conda config --add pkgs_dirs /opt/conda/pkgs &&\\\n    conda config --env --add channels conda-forge &&\\\n    /opt/conda/bin/conda install -y -n base -c conda-forge \"mamba >=0.22\" \"boa >=0.10\" python=${PYTHON_VER}\n    # conda clean -afy\n\n# All code will be under /work\nWORKDIR /work\n\n# ============ Stage: conda_env ============\n# Create the conda environment and configure container for running in environment\nFROM base as conda_env\n\nARG CONDA_ENV_NAME\n\n# Create a base environment\nRUN --mount=type=cache,id=conda_pkgs,target=/opt/conda/pkgs,sharing=locked \\\n    # Create the environment and install as little dependencies as possible\n    CONDA_ALWAYS_YES=true /opt/conda/bin/mamba create -n ${CONDA_ENV_NAME} -c conda-forge python=${PYTHON_VER} &&\\\n    # Clean and activate\n    # conda clean -afy && \\\n    sed -i \"s/conda activate base/conda activate ${CONDA_ENV_NAME}/g\" ~/.bashrc\n\n# Set the permenant conda channes to use for the conda environment\nRUN source activate ${CONDA_ENV_NAME} &&\\\n    conda config --env --add channels conda-forge &&\\\n    conda config --env --add channels nvidia &&\\\n    conda config --env --add channels rapidsai\n\n# Set the entrypoint to use the entrypoint.sh script which sets the conda env\nCOPY ci/conda/entrypoint.sh ./ci/conda/\nENTRYPOINT [ \"/opt/conda/bin/tini\", \"--\", \"ci/conda/entrypoint.sh\" ]\n\n# Reset the shell back to normal\nSHELL [\"/bin/bash\", \"-c\"]\n\n# ============ Stage: conda_bld_srf ============\n# Now build the conda dependency packages\nFROM base as conda_bld_srf\n\n# Copy the source\nCOPY . ./\n\nRUN --mount=type=ssh \\\n    --mount=type=cache,id=workspace_cache,target=/work/.cache,sharing=locked \\\n    --mount=type=cache,id=conda_pkgs,target=/opt/conda/pkgs,sharing=locked \\\n    source activate base &&\\\n    SRF_ROOT=/work CONDA_BLD_DIR=/opt/conda/conda-bld CONDA_ARGS=\"--no-test\" ./ci/conda/recipes/run_conda_build.sh\n\n# ============ Stage: runtime ============\n# Setup container for runtime environment\nFROM conda_env as runtime\n\nRUN --mount=type=bind,from=conda_bld_srf,source=/opt/conda/conda-bld,target=/opt/conda/conda-bld \\\n    --mount=type=cache,id=conda_pkgs,target=/opt/conda/pkgs,sharing=locked \\\n    source activate ${CONDA_ENV_NAME} &&\\\n    # Install conda packages\n    CONDA_ALWAYS_YES=true /opt/conda/bin/mamba install -n ${CONDA_ENV_NAME} -c local -c rapidsai -c nvidia -c conda-forge srf &&\\\n    # Clean and activate\n    conda clean -afy\n\n# Only copy specific files/folders over that are necessary for runtime\nCOPY \"./docs\" \"./docs\"\n\n# ============ Stage: development ============\n# Setup container for development environment\nFROM conda_env as development\n\n# Install some base requirements. Install clang-12 and link all of the binaries (ugly)\nRUN apt update && \\\n    apt-get install --no-install-recommends -y clang-tools-12 clang-format-12 clang-tidy-12 clangd-12 libclang-12-dev && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    update-alternatives --install /usr/bin/clang clang /usr/bin/clang-12 121 \\\n        --slave /usr/bin/clang-apply-replacements clang-apply-replacements /usr/bin/clang-apply-replacements-12 \\\n        --slave /usr/bin/clang-format clang-format /usr/bin/clang-format-12 \\\n        --slave /usr/bin/clang-format-diff clang-format-diff /usr/bin/clang-format-diff-12 \\\n        --slave /usr/bin/clang-tidy clang-tidy /usr/bin/clang-tidy-12 \\\n        --slave /usr/bin/clang-tidy-diff.py clang-tidy-diff.py /usr/bin/clang-tidy-diff-12.py \\\n        --slave /usr/bin/clang++ clang++ /usr/bin/clang++-12 \\\n        --slave /usr/bin/clangd clangd /usr/bin/clangd-12 \\\n        --slave /usr/bin/git-clang-format git-clang-format /usr/bin/git-clang-format-12 \\\n        --slave /usr/bin/llvm-symbolizer llvm-symbolizer /usr/bin/llvm-symbolizer-12 \\\n        --slave /usr/share/man/man1/clang.1.gz clang.1.gz /usr/share/man/man1/clang-12.1.gz\n\nCOPY ci/conda/environments/dev_env.yml ./ci/conda/environments/\n\n# Install the dev dependencies\nRUN --mount=type=cache,id=conda_pkgs,target=/opt/conda/pkgs,sharing=locked \\\n    /opt/conda/bin/mamba env update -n ${CONDA_ENV_NAME} --file ci/conda/environments/dev_env.yml &&\\\n    # Clean and activate\n    conda clean -afy\n\n# Install IWYU (must be after dependencies for cmake)\nRUN source activate ${CONDA_ENV_NAME} &&\\\n    git clone https://github.com/include-what-you-use/include-what-you-use.git /opt/iwyu &&\\\n    cd /opt/iwyu &&\\\n    git checkout clang_12 &&\\\n    cmake -G Ninja -DCMAKE_PREFIX_PATH=$CONDA_PREFIX/lib . &&\\\n    cmake --build . --target install &&\\\n    echo 'export PATH=$PATH:/opt/iwyu' >>~/.bashrc\n\n# Setup git to allow other users to access /workspace. Requires git 2.35.3 or\n# greater. See https://marc.info/?l=git&m=164989570902912&w=2. Only enable for\n# development\nRUN git config --global --add safe.directory \"*\"\n"
}