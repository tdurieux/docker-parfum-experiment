{
  "startTime": 1674251831888,
  "endTime": 1674251832748,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Install the base requirements for the app.\n# This stage is to support development.\nFROM python:alpine AS base\nWORKDIR /app\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nFROM node:12-alpine AS app-base\nWORKDIR /app\nCOPY app/package.json app/yarn.lock ./\nCOPY app/spec ./spec\nCOPY app/src ./src\n\n# Run tests to validate app\nFROM app-base AS test\nRUN apk add --no-cache python3 g++ make\nRUN yarn install && yarn cache clean;\nRUN yarn test && yarn cache clean;\n\n# Clear out the node_modules and create the zip\nFROM app-base AS app-zip-creator\nCOPY app/package.json app/yarn.lock ./\nCOPY app/spec ./spec\nCOPY app/src ./src\nRUN apk add --no-cache zip && \\\n    zip -r /app.zip /app\n\n# Dev-ready container - actual files will be mounted in\nFROM base AS dev\nCMD [\"mkdocs\", \"serve\", \"-a\", \"0.0.0.0:8000\"]\n\n# Do the actual build of the mkdocs site\nFROM base AS build\nCOPY . .\nRUN mkdocs build\n\n# Extract the static content from the build\n# and use a nginx image to serve the content\nFROM nginx:alpine\nCOPY --from=app-zip-creator /app.zip /usr/share/nginx/html/assets/app.zip\nCOPY --from=build /app/site /usr/share/nginx/html\n"
}