{
  "startTime": 1674248166517,
  "endTime": 1674248167066,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#####\n# Part of the safenotes package\n# Copyright Â© 2020 Denis Rendler <connect@rendler.me>\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#####\n\n# build the front-end app\nFROM node:17.0.1 as build_fe\n\nCOPY webapp/react /project\nWORKDIR /project\n# very heavy and time consuming process so try to take it from cache\nRUN yarn install && yarn cache clean;\n\nARG VERSION=\"0.0.0-DEV\"\nENV REACT_APP_SAFENOTES_RELEASE=${VERSION}\n\nENV NODE_OPTIONS=--openssl-legacy-provider\n\nRUN yarn build-prod\n\n# build the backend app\nFROM golang:latest as build_be\nCOPY ./ /project\nWORKDIR /project\n\nARG VERSION=\"0.0.0-DEV\"\n\nRUN make build TAG=${VERSION} \\\n    && chmod +x /project/dist/safenotes\n\n# build the production final image\nFROM scratch as PROD\n\nARG VERSION=\"0.0.0-DEV\"\n\nLABEL \"Maintainer\"=\"Denis Rendler <connect@rendler.me>\" \\\n      \"App\"=\"SafeNotes\" \\\n      \"Version\"=${VERSION}\n\nCOPY --from=build_fe /project/build/ /safenotes/www\nCOPY --from=build_be /project/dist/safenotes /safenotes/safenotes\nCOPY --from=build_be /project/.safenotes.build.yaml /safenotes/.safenotes.yaml\nCOPY --from=build_be /project/resources /safenotes/resources\nCOPY --from=build_be /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/\n\nWORKDIR /safenotes\n\nVOLUME /safenotes/www\n\nARG http_port=80\nARG https_port=443\nEXPOSE ${http_port}/tcp \\\n       ${https_port}/tcp\n\nENTRYPOINT [\"/safenotes/safenotes\"]\nCMD [\"serve\"]\n"
}