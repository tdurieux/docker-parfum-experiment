{
  "startTime": 1674220546125,
  "endTime": 1674220547022,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 34,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 151
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 25,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "#\n# Build LISP docker image based on ubuntu. Use one of the following commands:\n#\n#   docker build -t lispers.net/ubuntu .\n#   docker build -t lispers.net/debian .\n#   docker build -t lispers.net/centos .\n#\n# Then to run one of the above docker images in a container, type:\n#\n# docker run -p 8080 --privileged --name <name> -h <name> \\\n#            -v <host-dir>:/hostOS -ti lispers.net/ubuntu\n#\n# where:\n#   <name> is a container name you select                               \n#   <host-dir> is directory on your host OS that maps to directory called\n#              /hostOS inside your container for easy file movement\n#\nFROM ubuntu:latest\n#FROM debian:latest\n#FROM centos:latest\n\n#\n# Install tools we need for a networking geek. Need the symlink so installing\n# tzdata does not prompt for timezone input.\n#       \n# If \"apt-get update\" gets signature verification issues, run:\n#\n#    docker system prune --force\n#\n# And then rebuild.       \n#\nRUN apt-get update -y && apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nRUN ln -snf /usr/share/zoneinfo/$( curl -f https://ipapi.co/timezone) \\\n    /etc/localtime\nRUN apt-get install --no-install-recommends -y \\\n    gcc libc-dev python2 python2-dev golang libffi-dev openssl libpcap-dev \\\n    iptables iproute2 tcpdump tcsh sudo traceroute iputils-ping \\\n    net-tools procps emacs vim jq && rm -rf /var/lib/apt/lists/*;\n\n#\n# Install LISP release in /lispers.net directory. Two options exist to get\n# a lispers.net release. Get tarball from Dropbox or from git repo in\n# build/latest/lispers.net.tgz. Default is Dropbox. One of the two needs\n# to be commented out or you get the git repo option.   \n#\nRUN mkdir /lispers.net\n\n#\n# Get lispers.net release. Dropbox option.\n#       \n#ENV LISP_URL https://www.dropbox.com/s/0t36qe03lh1t9c1/lispers.net.tgz\n#RUN cd /lispers.net; curl --insecure -L $LISP_URL | gzip -dc | tar -xf -\n\n#\n# Get lispers.net release. Git repo option.\n#       \nENV LISP_TGZ ./latest/lispers.net.tgz\nCOPY $LISP_TGZ /lispers.net/.\nRUN cd /lispers.net; cat `basename $LISP_TGZ` | gzip -dc | tar -xf -\n\n#\n# Install python2 modules the lispers.net directory depends on.\n#\nRUN curl -f https://bootstrap.pypa.io/pip/2.7/get-pip.py -o get-pip.py && \\\n    python2 get-pip.py\nRUN python2 -m pip install cheroot bottle netifaces pcapy pcappy pyOpenSSL pycrypto requests curve25519-donna geopy ecdsa pycryptodome pytun future distro\n\n#\n# Install python3 modules the lispers.net directory depends on.\n#\nRUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;\nRUN pip3 install --no-cache-dir cheroot bottle netifaces pcapy pcappy pyOpenSSL pycrypto requests curve25519-donna geopy ecdsa pycryptodome python-pytun future distro\n\n#\n# Make prompt hostname/container name, allow web interface to work, and put us\n# in the /lispers.net directory when you attach to container.\n#\n#RUN echo 'PS1=\"`hostname | cut -d . -f 0` > \"' >> /root/.profile\nEXPOSE 8080\nWORKDIR /lispers.net\n\n#\n# Start up LISP when container is created.\n#\nCOPY ./RL.docker /lispers.net/RL\nCOPY ./.cshrc /root/.cshrc\nCMD /lispers.net/RL; sleep 1; /lispers.net/pslisp; tcsh\n\n#------------------------------------------------------------------------------\n"
}