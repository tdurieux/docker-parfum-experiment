{
  "startTime": 1674246766601,
  "endTime": 1674246768187,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 103
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_SOURCE_IMAGE=\"docker.io/davidalger/php\"\nARG PHP_VERSION\nARG PHP_VARIANT=\"fpm-loaders\"\nFROM ${PHP_SOURCE_IMAGE}:${PHP_VERSION}-${PHP_VARIANT}\n\n# Clear undesired settings from base fpm images\nENV COMPOSER_ALLOW_SUPERUSER=\nENV COMPOSER_HOME=\n\nENV MAILHOG_HOST    mailhog\nENV MAILHOG_PORT    1025\n\nRUN dnf install -y which pv sudo bind-utils python3-pip bash-completion rsync socat oathtool \\\n        wget ack make gcc gcc-c++ automake autoconf crontabs mariadb nano vim coreutils-common \\\n    && dnf clean all \\\n    && rm -rf /var/cache/dnf\n\nRUN dnf install -y python2 \\\n    && ln -s /bin/python2 /bin/python \\\n    && dnf clean all \\\n    && rm -rf /var/cache/dnf\n\nENV NODE_VERSION    10\nRUN npm install -g n \\\n    && n install ${NODE_VERSION} \\\n    && rm -rf /usr/local/n/versions/node && npm cache clean --force;\n\nCOPY docker-entrypoint /usr/local/bin/\nCOPY etc/profile.d/*.sh /etc/profile.d/\nCOPY etc/*.ini /etc/\nCOPY etc/php.d/*.ini /etc/php.d/\nCOPY etc/php.d/05-additions.ini.template /etc/php.d/\n\n# Install mhsendmail to support routing email through mailhog\nRUN mkdir -p /tmp/mhsendmail \\\n    && cd /tmp/mhsendmail \\\n    && curl -f -vLOs https://github.com/mailhog/mhsendmail/releases/download/v0.2.0/mhsendmail_linux_amd64 \\\n    && chmod +x mhsendmail_linux_amd64 \\\n    && mv mhsendmail_linux_amd64 /usr/local/bin/mhsendmail\n\n# Install awscli to support data backfill workflows using S3 storage; segno for QR code generation\nRUN pip3 install awscli segno --no-cache-dir\n\n# Configure www-data user as primary php-fpm user for better local dev experience\nRUN useradd www-data \\\n    && chmod 0755 ~www-data \\\n    && mkdir -p /var/www/html \\\n    && chown www-data:www-data /var/www/html \\\n    && echo \"www-data ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers.d/nopasswd \\\n    && PHP_FPM_USER=$(grep -i '^user = ' /etc/php-fpm.d/www.conf | awk '{print $3}') \\\n    && PHP_FPM_GROUP=$(grep -i '^group = ' /etc/php-fpm.d/www.conf | awk '{print $3}') \\\n    && find /var/log /var/lib/php -uid $(id -u ${PHP_FPM_USER}) | xargs chown www-data \\\n    && find /var/log /var/lib/php -gid $(id -g ${PHP_FPM_GROUP}) | xargs chgrp www-data \\\n    && perl -pi -e 's/^(user|group) = php-fpm$/$1 = www-data/g' /etc/php-fpm.d/www.conf\n\nWORKDIR /var/www/html\nUSER www-data\n"
}