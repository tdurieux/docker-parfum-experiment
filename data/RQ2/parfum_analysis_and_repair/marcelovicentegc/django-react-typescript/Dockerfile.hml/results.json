{
  "startTime": 1674252404877,
  "endTime": 1674252405802,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build frontend\nFROM node:12\nWORKDIR /usr/src/app\nARG GTAG_ID\nENV GTAG_ID $GTAG_ID\nARG AUTH_TOKEN\nENV AUTH_TOKEN $AUTH_TOKEN\nENV NODE_ENV production\nADD ./frontend/ /usr/src/app/frontend/\nRUN cd frontend \\\n    && npm ci \\\n    && echo $'NODE_ENV=production\\nAUTH_TOKEN='$AUTH_TOKEN'\\nGTAG_ID='$GTAG_ID >> .env \\\n    && npm run build\n\n# Build Django\nFROM python:3.8-slim-buster\nWORKDIR /usr/src/app\nARG ALLOWED_HOSTS\nENV ALLOWED_HOSTS $ALLOWED_HOSTS\nENV PYTHONDONTWRITEBYTECODE 0\nENV PYTHONUNBUFFERED 0\nENV MODE \"production\"\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential postgresql-common libpq-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*\nRUN pip install --no-cache-dir --upgrade pip\nCOPY ./requirements.txt /usr/src/app/requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\nCOPY --from=0 /usr/src/app /usr/src/app\nCOPY . /usr/src/app/\n"
}