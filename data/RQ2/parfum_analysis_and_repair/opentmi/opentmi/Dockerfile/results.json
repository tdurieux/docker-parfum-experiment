{
  "startTime": 1674251841212,
  "endTime": 1674251842388,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- Base Node ----\nFROM node:14-stretch AS base\n\n# ---- Dependencies ----\nFROM base AS dependencies\nWORKDIR /app\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\nCOPY package*.json ./\n# install app dependencies including 'devDependencies'\nRUN npm install --only=production && npm cache clean --force;\n#RUN npm run test\n\n# ---- Copy Files/Build ----\nFROM dependencies AS build\nWORKDIR /app\nCOPY app ./app\n\n## ---- UI ----\nFROM base AS ui\nWORKDIR /app\nRUN git config --global url.\"https://github.com/\".insteadOf git://github.com/ \\\n  && git clone --depth=1 https://github.com/OpenTMI/opentmi-default-gui.git . \\\n  && npm ci \\\n  && NODE_ENV=production npm run build:prod \\\n  && rm -r node_modules\n\n# --- Release with Alpine ----\nFROM node:14-alpine AS release\nWORKDIR /app\nRUN apk add --no-cache git\n# copy package.json\nCOPY --from=dependencies /app/package.json ./\nCOPY --from=dependencies /app/node_modules ./node_modules\n\n# Copy application and UI\nCOPY --from=build /app/app ./app\nCOPY --from=ui /app/index.js /app/node_modules/opentmi-default-gui/index.js\nCOPY --from=ui /app/addon /app/node_modules/opentmi-default-gui/addon\nCOPY --from=ui /app/dist /app/node_modules/opentmi-default-gui/dist\n\nEXPOSE 8000\nCMD [\"npm\", \"start\", \"--\", \"-vvv\", \"--listen\", \"0.0.0.0\", \"--port\", \"8000\"]\n"
}