{
  "startTime": 1674251693714,
  "endTime": 1674251694349,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 42,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 14,
        "columnStart": 42,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##NODE temporary builder image\nfrom node:16-buster as uibuilder\nCOPY ./ /src-ui\nWORKDIR /src-ui\nRUN yarn install --frozen-lockfile && yarn cache clean;\nRUN yarn build:prod:aot\n\n#Download base image debian buster\nFROM debian:buster-slim\n\n# Install packages\n#COPY docker/krb5.conf /etc/krb5.conf\nRUN apt-get update && \\\n\texport DEBIAN_FRONTEND=noninteractive && apt-get -yq --no-install-recommends install \\\n\tnginx \\\n\t&& apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n#Remove any extra packages we don't need from the container\n# Also cleanup any random things we don't want to distribute\nRUN export SUDO_FORCE_REMOVE=yes \\\n\t&& apt autoremove -y || true \\\n\t&& apt autoclean \\\n\t&& rm -rf /root/.cache \\\n\t&& rm -rf /usr/local/share/.cache \\\n\t&& rm -rf /usr/local/share/.config\n\n# Overlay install\nCOPY docker/start.sh /start.sh\nCOPY docker/nginx.conf /etc/nginx/tn-nginx.conf\n\n# =========================\n# COPY OVER THE BUILDS FROM OTHER CONTAINERS\n# =========================\n# WebUI Build\n# Copy over site directory from the builder\nCOPY --from=uibuilder /src-ui/dist /var/www/webui\n\n# Configure Services and Port\nCMD [\"/start.sh\"]\n\nEXPOSE 80 443\n"
}