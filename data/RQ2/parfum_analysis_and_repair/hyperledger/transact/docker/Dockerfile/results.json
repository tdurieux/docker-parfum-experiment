{
  "startTime": 1674214981917,
  "endTime": 1674214983181,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nENV DEBIAN_FRONTEND=noninteractive\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN apt-get update && \\\n    apt-get install -y -q --no-install-recommends \\\n    build-essential \\\n    ca-certificates \\\n    curl \\\n    unzip \\\n    libpq-dev \\\n    libssl-dev \\\n    pkg-config \\\n    libzmq3-dev \\\n    libsqlite3-dev \\\n    sqlite3 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nENV PATH=$PATH:/root/.cargo/bin\n\n# Install Rust\nRUN curl https://sh.rustup.rs -sSf > /usr/bin/rustup-init \\\n && chmod +x /usr/bin/rustup-init \\\n && rustup-init -y \\\n && rustup target add wasm32-unknown-unknown \\\n# Install protoc\n && TARGET_ARCH=$(dpkg --print-architecture) \\\n && if [[ $TARGET_ARCH == \"arm64\" ]]; then \\\n      PROTOC_ARCH=\"aarch_64\"; \\\n    elif [[ $TARGET_ARCH == \"amd64\" ]]; then \\\n      PROTOC_ARCH=\"x86_64\"; \\\n    fi \\\n && curl -f -OLsS https://github.com/google/protobuf/releases/download/v3.7.1/protoc-3.7.1-linux-$PROTOC_ARCH.zip \\\n      && unzip -o protoc-3.7.1-linux-$PROTOC_ARCH.zip -d /usr/local \\\n      && rm protoc-3.7.1-linux-$PROTOC_ARCH.zip \\\n# Install just\n && curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin\n\nENV CARGO_INCREMENTAL=0\n\nWORKDIR /project/transact\n"
}