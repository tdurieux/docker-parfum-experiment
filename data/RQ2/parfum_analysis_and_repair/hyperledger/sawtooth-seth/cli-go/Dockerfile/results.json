{
  "startTime": 1674254973562,
  "endTime": 1674254974295,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 89,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2017 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n# ------------------------------------------------------------------------------\n\nFROM ubuntu:bionic\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends gnupg -y && rm -rf /var/lib/apt/lists/*;\n\nENV GOPATH=/project/sawtooth-seth/cli-go\nENV PATH=$PATH:/project/sawtooth-seth/cli-go/bin:/project/sawtooth-seth/bin:/usr/lib/go-1.11/bin\n\nRUN \\\n if [ ! -z $HTTP_PROXY ] && [ -z $http_proxy ]; then \\\n  http_proxy=$HTTP_PROXY; \\\n fi; \\\n if [ ! -z $HTTPS_PROXY ] && [ -z $https_proxy ]; then \\\n  https_proxy=$HTTPS_PROXY; \\\n fi\n\nRUN (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 44FC67F19B2466EA \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 44FC67F19B2466EA) \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 308C15A29AD198E9 \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 308C15A29AD198E9) \\\n && echo 'deb http://repo.sawtooth.me/ubuntu/nightly bionic universe' >> /etc/apt/sources.list \\\n && echo 'deb http://ppa.launchpad.net/gophers/archive/ubuntu bionic main' >> /etc/apt/sources.list \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q \\\n    curl \\\n    git \\\n    golang-1.11-go \\\n    libssl-dev \\\n    libzmq3-dev \\\n    openssl \\\n    python3 \\\n    python3-grpcio-tools \\\n    python3-sawtooth-cli \\\n    software-properties-common \\\n && add-apt-repository -k hkp://p80.pool.sks-keyservers.net:80 ppa:ethereum/ethereum \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q \\\n    solc \\\n && curl -f -s -S -o /tmp/setup-node.sh https://deb.nodesource.com/setup_6.x \\\n && chmod 755 /tmp/setup-node.sh \\\n && /tmp/setup-node.sh \\\n && apt-get install --no-install-recommends nodejs npm -y -q \\\n && rm /tmp/setup-node.sh \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN \\\n if [ ! -z $http_proxy ]; then \\\n  npm config set proxy $http_proxy; \\\n  git config --global http.proxy $http_proxy; \\\n fi; \\\n if [ ! -z $https_proxy ]; then \\\n  npm config set https-proxy $https_proxy; \\\n  git config --global https.proxy $https_proxy; \\\n fi\n\nRUN git config --global url.\"https://\".insteadOf git://\n\nRUN go get -u \\\n    github.com/btcsuite/btcd/btcec \\\n    github.com/golang/mock/gomock \\\n    github.com/golang/mock/mockgen \\\n    github.com/golang/protobuf/proto \\\n    github.com/golang/protobuf/protoc-gen-go \\\n    github.com/jessevdk/go-flags \\\n    github.com/pebbe/zmq4 \\\n    github.com/pelletier/go-toml \\\n    github.com/satori/go.uuid \\\n    golang.org/x/crypto/ssh/terminal\n\nRUN git clone https://github.com/knkski/burrow.git $GOPATH/src/github.com/hyperledger/burrow\n\nRUN go get github.com/hyperledger/sawtooth-sdk-go\n\nRUN npm install \\\n    ethereumjs-abi \\\n    web3 && npm cache clean --force;\n\nCOPY . /project/sawtooth-seth\n\nRUN seth-protogen go\n\nWORKDIR $GOPATH/src/seth_cli/cli\nENV GOPATH=$GOPATH/src/github.com/hyperledger/sawtooth-sdk-go:$GOPATH:/project/sawtooth-seth/burrow:/project/sawtooth-seth/common\nRUN go build -o /project/sawtooth-seth/cli-go/bin/seth\n"
}