{
  "startTime": 1674246632168,
  "endTime": 1674246632794,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# WORKER_TYPE passed in at image build time\nARG WORKER_TYPE\n# Setting environment variable meant to be used by Makefile\nENV WORKER_TYPE=$WORKER_TYPE\n\n# Ignore timezone prompt in apt\nENV DEBIAN_FRONTEND=noninteractive\n\n# Add necessary packages\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y -q \\\n    ca-certificates \\\n    pkg-config \\\n    python3-dev \\\n    python3-pip \\\n    python3-toml \\\n    gcc \\\n && python3 -m pip install pyzmq pycryptodomex ecdsa \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Make Python3 default\nRUN ln -sf /usr/bin/python3 /usr/bin/python\n\nCOPY ./tc/graphene/python_worker/  /home/python_worker/\nCOPY ./common/python /home/python_worker/common/python\nCOPY ./common/crypto_utils /home/python_worker/common/crypto_utils\nCOPY ./bin/get_version /home/python_worker/bin/get_version\nCOPY ./VERSION /home/python_worker/VERSION\n\nWORKDIR /home/python_worker/common/python\n\nRUN echo \"Building Avalon Common Python\\n\" \\\n && make && make install\n\nWORKDIR /home/python_worker/common/crypto_utils\n\n# Build common python crypto utils\nRUN echo \"Building Avalon Common Crypto Python\\n\" \\\n && make && make install\n\nWORKDIR /home/python_worker/\n\n#Build and install python worker\nRUN make && make install\n\n# GSC (Graphene Shielded Container) docker image build depends on child\n# application manifest files.\n# Python worker makes use of Python Cryptodomex which indirectly depends on\n# multiple applications and manifest files has to be listed in GSC build.\n# gcc depends on collect2 and GSC build exits with below message.\n# \"Command 'which collect2' returned non-zero exit status 1\".\n# Add a temporary workaround to add collect2 to path.\nENV PATH=$PATH:/usr/lib/gcc/x86_64-linux-gnu/7.5.0/\n\n# Pass python file as docker command line argument\n# This is required for Graphene.\nCMD [\"python\"]\n\n"
}