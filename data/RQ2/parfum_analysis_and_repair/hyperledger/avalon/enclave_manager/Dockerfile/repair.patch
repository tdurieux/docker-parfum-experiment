diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hyperledger/avalon/enclave_manager/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hyperledger/avalon/enclave_manager/Dockerfile/repaired.Dockerfile
index 3e49ad8..c8383b1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hyperledger/avalon/enclave_manager/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hyperledger/avalon/enclave_manager/Dockerfile/repaired.Dockerfile
@@ -87,7 +87,7 @@ RUN OPENSSL_VER=1.1.1g \
  && THREADS=8 \
  && make -j$THREADS \
  && make test \
- && make install -j$THREADS
+ && make install -j$THREADS && rm openssl-$OPENSSL_VER.tar.gz
 
 # Created an empty /usr/local/lib64 dir for bionic, because in case of centos
 # we need to COPY /usr/local/lib64 for openssl artifacts which will fail for bionic
@@ -95,7 +95,7 @@ RUN OPENSSL_VER=1.1.1g \
 RUN if [ "$DISTRO" = "bionic" ] ; then \
       mkdir /usr/local/lib64; \
     fi
- 
+
 # -------------=== common/python build ===-------------
 
 #Build common/python intermediate docker image
@@ -165,11 +165,10 @@ RUN mkdir -p /opt/intel \
 WORKDIR /opt/intel
 
 RUN if [ "$DISTRO" = "bionic" ] ; then \
-      # Add Intel SGX repo to apt sources and install Intel SGX PSW packages
       echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | tee /etc/apt/sources.list.d/intel-sgx.list \
       && wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add \
       && apt-get update \
-      && apt-get install -y -q \
+      && apt-get install --no-install-recommends -y -q \
          libsgx-enclave-common \
          libsgx-launch \
          libsgx-urts \
@@ -184,7 +183,7 @@ RUN if [ "$DISTRO" = "bionic" ] ; then \
          libsgx-uae-service \
       && apt-get clean \
       && rm -rf /var/lib/apt/lists/* \
-     
+
       && SGX_SDK_FILE=sgx_linux_x64_sdk_2.10.100.2.bin \
       && wget https://download.01.org/intel-sgx/sgx-linux/2.10/distro/ubuntu18.04-server/$SGX_SDK_FILE \
       && echo "yes" | bash ./$SGX_SDK_FILE \
@@ -206,16 +205,16 @@ RUN if [ "$DISTRO" = "bionic" ] ; then \
          libsgx-ae-qve \
          libsgx-dcap-quote-verify \
          libsgx-dcap-quote-verify-dev \
-         libsgx-uae-service; \
+         libsgx-uae-service; rm sgx_rpm_local_repo.tgz \
       cd /opt/intel \
       && wget https://download.01.org/intel-sgx/sgx-linux/2.10/distro/centos8.1-server/sgx_linux_x64_sdk_2.10.100.2.bin \
       && chmod +x sgx_linux_x64_sdk_2.10.100.2.bin \
       && echo "yes" | bash ./sgx_linux_x64_sdk_2.10.100.2.bin \
       && echo ". /opt/intel/sgxsdk/environment" >> /etc/environment; \
     fi
-     
+
 # Configure QPL to use self-signed cert for local PCCS
-COPY docker/pccs/sgx_default_qcnl.conf /etc/sgx_default_qcnl.conf     
+COPY docker/pccs/sgx_default_qcnl.conf /etc/sgx_default_qcnl.conf    
 
 # Copy openssl build artifacts from openssl_image
 ENV OPENSSL_VER=1.1.1g
@@ -276,7 +275,7 @@ COPY --from=common_python_image /project/avalon/common/python/dist/*.whl dist/
 COPY --from=avalon_sdk_image /project/avalon/sdk/dist/*.whl dist/
 
 RUN echo "Install common/python and sdk packages\n" \
- && pip3 install dist/*.whl json-rpc pyzmq coverage pycryptodomex ecdsa
+ && pip3 install --no-cache-dir dist/*.whl json-rpc pyzmq coverage pycryptodomex ecdsa
 
 
 ARG SGX_MODE