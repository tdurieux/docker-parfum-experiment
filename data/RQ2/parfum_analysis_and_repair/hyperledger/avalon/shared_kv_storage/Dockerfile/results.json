{
  "startTime": 1674252497149,
  "endTime": 1674252497902,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Intel Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG IMAGE\nFROM $IMAGE as base_image\nARG DISTRO\nCOPY ./scripts/install_packages /project/avalon/scripts/\n\nRUN packages=\"curl wget\"; \\\n    pip_packages=\"\"; \\\n    if [ \"$DISTRO\" = \"bionic\" ] ; then \\\n      # Ignore timezone prompt in apt\n      DEBIAN_FRONTEND=noninteractive \\\n      packages=\"ca-certificates $packages python3-requests python3-colorlog python3-twisted python3-toml liblmdb-dev\"; \\\n    elif [ \"$DISTRO\" = \"centos\" ] ; then \\\n      packages=\"$packages python3 lmdb-devel\" \\\n      pip_packages=\"$pip_packages toml colorlog twisted requests\"; \\\n      /project/avalon/scripts/install_packages -c install -q \"epel-release\"; \\\n    fi; \\\n    /project/avalon/scripts/install_packages -c install -q \"$packages\" -p \"$pip_packages\"\n\n# Make Python3 default\nRUN ln -sf /usr/bin/python3 /usr/bin/python\n\n#------------------------------------------------------------------------------\n# Build Shared KV intermediate docker image.\nFROM base_image as build_image\nARG DISTRO\nCOPY ./scripts/install_packages /project/avalon/scripts/\n\nRUN packages=\"pkg-config cmake make python3-pip swig\"; \\\n    pip_packages=\"setuptools\"; \\\n    if [ \"$DISTRO\" = \"bionic\" ] ; then \\\n      packages=\"$packages build-essential software-properties-common python3-dev\"; \\\n    elif [ \"$DISTRO\" = \"centos\" ] ; then \\\n      packages=\"$packages python3-devel gcc gcc-c++\" \\\n      pip_packages=\"$pip_packages wheel\"; \\\n    fi; \\\n    /project/avalon/scripts/install_packages -c install -q \"$packages\" -p \"$pip_packages\"\n\nENV TCF_HOME=/project/avalon\n\n# Copy only required files for building shared KV build image.\nCOPY VERSION /project/avalon/\nCOPY ./bin /project/avalon/bin\nCOPY ./common/cpp /project/avalon/common/cpp\nCOPY ./shared_kv_storage /project/avalon/shared_kv_storage\n\n# Build lmdb c++ module\nRUN cd /project/avalon/shared_kv_storage/db_store/packages \\\n   && mkdir -p build \\\n   && cd build \\\n   && cmake .. \\\n   && make\n\n# Build shared KV module.\nWORKDIR /project/avalon/shared_kv_storage/\nRUN echo \"Building avalon Shared KV\" \\\n   && make\n\n#------------------------------------------------------------------------------\n# Build final image and install Shared KV module.\nFROM base_image as final_image\nARG DISTRO\nCOPY ./scripts/install_packages /project/avalon/scripts/\n\nENV TCF_HOME=/project/avalon\n\nWORKDIR /project/avalon/shared_kv_storage/\n\n# Copy required build artifacts from build_image.\nCOPY --from=build_image /project/avalon/shared_kv_storage/dist/*.whl dist/\nCOPY --from=build_image /project/avalon/shared_kv_storage/lmdb_config.toml \\\n     lmdb_config.toml\n\n# Installing wheel file requires python3-pip package.\n# But python3-pip package will increase size of final docker image.\n# So remove python3-pip package and dependencies after installing wheel file.\nRUN packages=\"\"; \\\n    pip_packages=\"coverage\"; \\\n    if [ \"$DISTRO\" = \"bionic\" ] ; then \\\n      packages=\"$packages python3-pip\"; \\\n    fi; \\\n    /project/avalon/scripts/install_packages -c install -q \"$packages\" -p \"$pip_packages\" \\\n    && echo \"Install Shared KV package\\n\" \\\n    && pip3 install --no-cache-dir dist/*.whl \\\n    && if [ \"$DISTRO\" = \"bionic\" ] ; then \\\n         echo \"Remove unused packages from image\\n\" \\\n         /project/avalon/scripts/install_packages -c uninstall -q \"$packages\"; \\\n       fi\n"
}