diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hyperledger/cello/build_image/docker/common/api-engine/Dockerfile.in b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hyperledger/cello/build_image/docker/common/api-engine/Dockerfile.in/repaired.Dockerfile
index 347b729..a76b9a2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hyperledger/cello/build_image/docker/common/api-engine/Dockerfile.in
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hyperledger/cello/build_image/docker/common/api-engine/Dockerfile.in/repaired.Dockerfile
@@ -2,10 +2,10 @@ FROM python:3.8
 
 # Install software
 RUN apt-get update \
-	&& apt-get install -y gettext-base graphviz libgraphviz-dev \
+	&& apt-get install --no-install-recommends -y gettext-base graphviz libgraphviz-dev \
 	&& apt-get autoclean \
 	&& apt-get clean \
-	&& apt-get autoremove && rm -rf /var/cache/apt/
+	&& apt-get autoremove && rm -rf /var/cache/apt/ && rm -rf /var/lib/apt/lists/*;
 
 # Set the working dir
 WORKDIR /var/www/server
@@ -15,11 +15,11 @@ COPY src/api-engine ./
 COPY template/node  /opt/node
 
 # Install compiled code tools from Artifactory and copy it to opt folder.
-RUN curl "https://hyperledger.jfrog.io/artifactory/fabric-binaries/hyperledger-fabric-linux-amd64-2.2-stable.tar.gz?archiveType=gzip" > bin.tar.gz \
-	&& tar -xzvf bin.tar.gz -C /opt/
+RUN curl -f "https://hyperledger.jfrog.io/artifactory/fabric-binaries/hyperledger-fabric-linux-amd64-2.2-stable.tar.gz?archiveType=gzip" > bin.tar.gz \
+	&& tar -xzvf bin.tar.gz -C /opt/ && rm bin.tar.gz
 
 # Install python dependencies
-RUN	pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 
 # Add uwsgi configuration file
 COPY build_image/docker/common/api-engine/server.ini /etc/uwsgi/apps-enabled/