{
  "startTime": 1674249881972,
  "endTime": 1674249882807,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 25,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 27,
        "columnStart": 25,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 as base\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    software-properties-common \\\n    apt-transport-https \\\n    curl \\\n\n    build-essential \\\n    git \\\n    libzmq3-dev libsodium-dev pkg-config libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# libindy\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys CE7709D068DB5E88\nRUN add-apt-repository \"deb https://repo.sovrin.org/sdk/deb bionic stable\"\n\n# nodejs 16x LTS Debian\nRUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -\n\n# yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\n\n# install depdencies\nRUN apt-get update -y && apt-get install --no-install-recommends -y --allow-unauthenticated \\\n    libindy \\\n    nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install yarn seperately due to `no-install-recommends` to skip nodejs install\nRUN apt-get install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;\n\n# postgres plugin setup\n# install rust and set up rustup\nRUN curl https://sh.rustup.rs -sSf | bash -s -- -y\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\n# clone indy-sdk and build postgres plugin\nRUN git clone https://github.com/hyperledger/indy-sdk.git\nWORKDIR /indy-sdk/experimental/plugins/postgres_storage/\nRUN cargo build --release\n\n# set up library path for postgres plugin\nENV LIB_INDY_STRG_POSTGRES=\"/indy-sdk/experimental/plugins/postgres_storage/target/release\"\n\nFROM base as final\n\n# AFJ specifc setup\nWORKDIR /www\nENV RUN_MODE=\"docker\"\n\n# Copy dependencies\nCOPY . .\n\nRUN yarn install && yarn cache clean;\nRUN yarn build"
}