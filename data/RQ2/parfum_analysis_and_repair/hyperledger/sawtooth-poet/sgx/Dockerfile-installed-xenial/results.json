{
  "startTime": 1674218786109,
  "endTime": 1674218787102,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedDockerfile": "# Copyright 2018 Cargill Incorporated\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# docker build -f sgx/Dockerfile-installed-xenial -t sawtooth-poet-sgx .\n\n# -------------=== poet common build ===-------------\n\nFROM ubuntu:xenial as poet-common-builder\n\nENV VERSION=AUTO_STRICT\n\nRUN echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/bumper/nightly xenial universe\" >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 44FC67F19B2466EA \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 44FC67F19B2466EA) \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q --allow-downgrades \\\n    git \\\n    python3 \\\n    python3-protobuf \\\n    python3-stdeb \\\n    python3-grpcio-tools \\\n    python3-grpcio && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /project\n\nRUN cd /project/common/ \\\n && /project/bin/protogen \\\n && if [ -d \"debian\" ]; then rm -rf debian; fi \\\n && python3 setup.py clean --all \\\n && python3 setup.py --command-packages=stdeb.command debianize \\\n && if [ -d \"packaging/ubuntu\" ]; then cp -R packaging/ubuntu/* debian/; fi \\\n && dpkg-buildpackage -b -rfakeroot -us -uc\n\n# -------------=== ias_client build ===-------------\n\nFROM ubuntu:xenial as ias-client-builder\n\nENV VERSION=AUTO_STRICT\n\nRUN echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/bumper/nightly xenial universe\" >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 44FC67F19B2466EA \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 44FC67F19B2466EA) \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q --allow-downgrades \\\n    git \\\n    python3 \\\n    python3-requests \\\n    python3-stdeb && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /project\n\nRUN cd /project/ias_client \\\n && if [ -d \"debian\" ]; then rm -rf debian; fi \\\n && python3 setup.py clean --all \\\n && python3 setup.py --command-packages=stdeb.command debianize \\\n && if [ -d \"packaging/ubuntu\" ]; then cp -R packaging/ubuntu/* debian/; fi \\\n && dpkg-buildpackage -b -rfakeroot -us -uc\n\n # -------------=== poet sgx builder ===-------------\n\nFROM ubuntu:xenial as poet-sgx-builder\n\nENV VERSION=AUTO_STRICT\n\nRUN echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/bumper/nightly xenial universe\" >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 44FC67F19B2466EA \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 44FC67F19B2466EA) \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q --allow-downgrades \\\n    build-essential \\\n    ca-certificates \\\n    cmake \\\n    dh-autoreconf \\\n    git \\\n    libcrypto++-dev \\\n    libjson-c-dev \\\n    make \\\n    python3-all-dev \\\n    python3-dev \\\n    python3-protobuf \\\n    python3-setuptools \\\n    python3-setuptools-scm=1.15.0-1 \\\n    python3-stdeb \\\n    python3-toml \\\n    software-properties-common \\\n    swig3.0 \\\n    unzip \\\n    wget \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN ln -s /usr/bin/swig3.0 /usr/bin/swig\n\n# Install SGX SDK for PoET\nWORKDIR /tmp\n\nRUN wget https://download.01.org/intel-sgx/linux-2.0/sgx_linux_ubuntu16.04.1_x64_sdk_2.0.100.40950.bin \\\n && chmod +x sgx_linux_ubuntu16.04.1_x64_sdk_2.0.100.40950.bin \\\n && echo \"yes\" | ./sgx_linux_ubuntu16.04.1_x64_sdk_2.0.100.40950.bin\\\n && . /tmp/sgxsdk/environment \\\n && export SGXSDKInstallPath=/tmp/sgxsdk/ \\\n && export POET_ENCLAVE_PEM=/tmp/sgxsdk/SampleCode/SampleEnclave/Enclave/Enclave_private.pem \\\n && export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/project/sgx\n\nCOPY --from=poet-common-builder /project/python3-sawtooth-poet-common*.deb /tmp\nCOPY --from=ias-client-builder /project/python3-sawtooth-ias-client*.deb /tmp\n\nRUN dpkg -i /tmp/python3-sawtooth-*.deb || true \\\n && apt-get -f -y install\n\nCOPY . /project\n\nRUN export SGXSDKInstallPath=/tmp/sgxsdk/ \\\n && if [ -z ${POET_ENCLAVE_PEM+x} ]; then \\\n      export POET_ENCLAVE_PEM=/tmp/sgxsdk/SampleCode/SampleEnclave/Enclave/Enclave_private.pem; \\\n    fi \\\n && cd  /project/sgx \\\n && python3 setup.py clean --all \\\n && python3 setup.py --command-packages=stdeb.command debianize \\\n && if [ -d \"packaging/ubuntu\" ]; then cp -R packaging/ubuntu/* debian/; fi \\\n && dpkg-buildpackage -b -rfakeroot -us -uc\n\n # -------------=== poet sgx docker build ===-------------\n\nFROM ubuntu:xenial\n\nCOPY --from=poet-common-builder /project/python3-sawtooth-poet-common*.deb /tmp\nCOPY --from=ias-client-builder /project/python3-sawtooth-ias-client*.deb /tmp\nCOPY --from=poet-sgx-builder /project/python3-sawtooth-poet-sgx*.deb /tmp\n\nRUN echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/bumper/nightly xenial universe\" >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 44FC67F19B2466EA \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 44FC67F19B2466EA) \\\n && apt-get update \\\n && dpkg -i /tmp/python3-sawtooth-*.deb || true \\\n && apt-get -f -y install \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n"
}