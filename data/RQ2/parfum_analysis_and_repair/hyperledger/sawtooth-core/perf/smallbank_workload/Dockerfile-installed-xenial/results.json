{
  "startTime": 1674254100674,
  "endTime": 1674254101838,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Cargill Incorporated\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# docker build -f perf/smallbank_workload/Dockerfile-installed-xenial -t sawtooth-smallbank-workload .\n\n# -------------=== cli build ===-------------\nFROM ubuntu:xenial as cli-builder\n\nENV VERSION=AUTO_STRICT\n\nRUN echo \"deb http://repo.sawtooth.me/ubuntu/ci xenial universe\" >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 8AA7AF1F1091A5FD) \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q \\\n    git \\\n    python3 \\\n    python3-protobuf \\\n    python3-stdeb \\\n    python3-toml \\\n    python3-grpcio-tools \\\n    python3-grpcio && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /project\n\nRUN echo \"deb http://repo.sawtooth.me/ubuntu/ci xenial universe\" >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 8AA7AF1F1091A5FD) \\\n && apt-get update \\\n && dpkg -i /tmp/python3-sawtooth-*.deb || true \\\n && apt-get -f -y install\n\nRUN /project/bin/protogen \\\n && cd /project/cli \\\n && if [ -d \"debian\" ]; then rm -rf debian; fi \\\n && python3 setup.py clean --all \\\n && python3 setup.py --command-packages=stdeb.command debianize \\\n && if [ -d \"packaging/ubuntu\" ]; then cp -R packaging/ubuntu/* debian/; fi \\\n && dpkg-buildpackage -b -rfakeroot -us -uc\n\n\n# -------------=== smallbank workload build ===-------------\nFROM ubuntu:xenial as smallbank-workload-builder\n\nENV VERSION=AUTO_STRICT\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n curl \\\n gcc \\\n git \\\n libssl-dev \\\n libzmq3-dev \\\n pkg-config \\\n python3 \\\n unzip && rm -rf /var/lib/apt/lists/*;\n\n# For Building Protobufs\nRUN curl https://sh.rustup.rs -sSf | sh -s -- -y \\\n && curl -f -OLsS https://github.com/google/protobuf/releases/download/v3.5.1/protoc-3.5.1-linux-x86_64.zip \\\n && unzip protoc-3.5.1-linux-x86_64.zip -d protoc3 \\\n && rm protoc-3.5.1-linux-x86_64.zip\n\nENV PATH=$PATH:/protoc3/bin\nRUN /root/.cargo/bin/cargo install cargo-deb\n\nCOPY . /project\n\nWORKDIR /project/perf/smallbank_workload\n\nRUN export VERSION=$(../../bin/get_version) \\\n && sed -i -e s/version.*$/version\\ =\\ \\\"${VERSION}\\\"/ Cargo.toml \\\n && /root/.cargo/bin/cargo deb --deb-version $VERSION\n\n# -------------=== smallbank workload docker build ===-------------\nFROM ubuntu:xenial\n\nCOPY --from=cli-builder /project/python3-sawtooth-cli* /tmp\nCOPY --from=smallbank-workload-builder /project/perf/smallbank_workload/target/debian/sawtooth-smallbank-workload*.deb /tmp\n\nRUN echo \"deb http://repo.sawtooth.me/ubuntu/ci xenial universe\" >> /etc/apt/sources.list \\\n && echo \"deb [arch=amd64] http://repo.sawtooth.me/ubuntu/nightly xenial universe\" >> /etc/apt/sources.list \\\n && (apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8AA7AF1F1091A5FD 44FC67F19B2466EA \\\n || apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 8AA7AF1F1091A5FD44FC67F19B2466EA) \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q \\\n    python3-sawtooth-sdk \\\n && dpkg -i /tmp/*sawtooth*.deb || true \\\n && apt-get -f -y install && rm -rf /var/lib/apt/lists/*;\n"
}