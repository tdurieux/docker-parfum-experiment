{
  "startTime": 1674221076338,
  "endTime": 1674221077549,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedDockerfile": "FROM cruizba/ubuntu-dind:20.10.9\n\nWORKDIR /\n\nRUN apt update\nRUN apt -y upgrade\n\n# # Install git so we can check out the corda5-solarsystem-contracts-demo repo of Corda\nRUN apt install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# Need curl to run healthchecks\nRUN apt install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n    && apt-get -y install --no-install-recommends openjdk-11-jdk && rm -rf /var/lib/apt/lists/*;\n\n# jq is needed by the /download-frozen-image-v2.sh script to pre-fetch docker images without docker.\nRUN apt install --no-install-recommends -y jq && rm -rf /var/lib/apt/lists/*;\n\n# Get the utility script that can pre-fetch the container images without\n# a functioning Docker daemon available which we do not have at image build\n# time so have to resort to manually get the images instead of just saying\n# \"docker pull my/cool-image...\" etc.\n# The reason to jump trough these hoops is to avoid DockerHub rate limiting issues\nRUN curl -f -sSL https://raw.githubusercontent.com/moby/moby/dedf8528a51c6db40686ed6676e9486d1ed5f9c0/contrib/download-frozen-image-v2.sh > /download-frozen-image-v2.sh\nRUN chmod +x /download-frozen-image-v2.sh\nRUN mkdir -p /etc/corda/corda-dev/\nRUN /download-frozen-image-v2.sh /etc/corda/corda-dev/ corda/corda-dev:5.0.0-devpreview-1.0\n\nRUN curl -f https://download.corda.net/corda-cli/1.0.0-DevPreview/get-corda-cli.sh > /get-corda-cli.sh\nRUN chmod +x /get-corda-cli.sh\nRUN /get-corda-cli.sh\n\nRUN curl -f https://download.corda.net/cordapp-builder/5.0.0-DevPreview-1.0/cordapp-builder-installer.jar --output /cordapp-builder-installer.jar\nRUN java -jar /cordapp-builder-installer.jar\n\nRUN git clone https://github.com/corda/corda5-solarsystem-contracts-demo.git\nWORKDIR /corda5-solarsystem-contracts-demo\n\n# Placing the ARG here instead of the top may seem like bad form, but it has\n# better build performance this way when we change the ARG's value it will\n# not spend 5 to 10 minutes installing the OS level dependencies on the top of\n# the image definition file because the cached layers will be the same for those.\nARG SOLARSYSTEM_DEMO_SHA=a3be5ad48d249be7f71c5f15074c874dc0d09b41\nRUN git checkout ${SOLARSYSTEM_DEMO_SHA}\n\nRUN /root/bin/corda-cli/bin/corda-cli network config docker-compose solar-system\nRUN chmod +x gradlew\nRUN ./gradlew build\n\nRUN /root/bin/corda-cli/bin/corda-cli network deploy -n solar-system -f solar-system.yaml > docker-compose.yaml\n\nRUN sed -i 's+corda/corda-dev:latest+corda/corda-dev:5.0.0-devpreview-1.0+g' /corda5-solarsystem-contracts-demo/docker-compose.yaml\n\nRUN /root/.local/lib/cordapp-builder/bin/cordapp-builder create --cpk contracts/build/libs/corda5-solar-system-contracts-demo-contracts-1.0-SNAPSHOT-cordapp.cpk --cpk workflows/build/libs/corda5-solar-system-contracts-demo-workflows-1.0-SNAPSHOT-cordapp.cpk -o solar-system.cpb\n\n# OpenSSH server\nEXPOSE 22\n\n# supervisord web ui/dashboard\nEXPOSE 9001\n\n# earth-node RPC\nEXPOSE 12112\n\n# mars-node RPC\nEXPOSE 12116\n\n# pluto-node RPC\nEXPOSE 12119\n\n# notary-node RPC\nEXPOSE 12122\n\nCOPY ./start-services.sh /start-services.sh\n\nCOPY ./supervisor/ /etc/supervisor/conf.d/\nENTRYPOINT [\"/usr/bin/supervisord\"]\nCMD [\"--nodaemon\"]\n\n# Add our healthcheck script that determines when do we consider the container healthy\nCOPY healthcheck.sh /\nHEALTHCHECK --interval=2s --timeout=5s --start-period=30s --retries=180 CMD /healthcheck.sh\n#RUN ~/bin/corda-cli/bin/corda-cli package install -n solar-system solar-system.cpb\n"
}