{
  "startTime": 1674251875246,
  "endTime": 1674251876498,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 18,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nARG APP=/usr/src/app/\nENV APP_USER=appuser\n\n# GUI: 3000, API: 4000, gRPC 5000\nEXPOSE 3000 4000 5000\n\nRUN groupadd --gid 1000 appuser \\\n  && useradd --uid 1000 --gid appuser --shell /bin/bash --create-home ${APP_USER}\n\nRUN apt update && apt install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p \"${APP}log/\"\nRUN chown -R $APP_USER:$APP_USER \"${APP}log/\"\n\nWORKDIR ${APP}\n\nCOPY --chown=${APP_USER}:${APP_USER} ./packages/cactus-cmd-api-server/healthcheck.sh /\nRUN chown -R $APP_USER:$APP_USER ${APP}\n\nUSER $APP_USER\nARG NPM_PKG_VERSION=latest\n\nENV TZ=Etc/UTC\nENV NODE_ENV=production\n\nENV CACTUS_NODE_ID=-\nENV CONSORTIUM_ID=-\nENV KEY_PAIR_PEM=-\nENV COCKPIT_WWW_ROOT=${APP}node_modules/@hyperledger/cactus-cockpit/www/\nENV COCKPIT_TLS_ENABLED=false\nENV COCKPIT_CORS_DOMAIN_CSV=\\*\nENV COCKPIT_MTLS_ENABLED=false\nENV COCKPIT_TLS_CERT_PEM=-\nENV COCKPIT_TLS_KEY_PEM=-\nENV COCKPIT_TLS_CLIENT_CA_PEM=-\nENV COCKPIT_HOST=0.0.0.0\nENV COCKPIT_PORT=3000\nENV API_MTLS_ENABLED=false\nENV API_TLS_ENABLED=false\nENV API_CORS_DOMAIN_CSV=\\*\nENV API_TLS_CERT_PEM=-\nENV API_TLS_CLIENT_CA_PEM=-\nENV API_TLS_KEY_PEM=-\nENV API_HOST=0.0.0.0\nENV API_PORT=4000\nENV LOG_LEVEL=INFO\n\nENV NVM_DIR /home/${APP_USER}/.nvm\nENV NODE_VERSION 16.3.0\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n# Install nvm with node and npm\nRUN mkdir -p ${NVM_DIR}\nRUN curl -f https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash \\\n  && source $NVM_DIR/nvm.sh \\\n  && nvm install $NODE_VERSION \\\n  && nvm alias default $NODE_VERSION \\\n  && nvm use default \\\n  && npm install -g npm@7.19.1 && npm cache clean --force;\n\nRUN npm install -g yarn@1.22.17 && npm cache clean --force;\nRUN yarn add @hyperledger/cactus-cmd-api-server@${NPM_PKG_VERSION} --production\n\nCOPY ./packages/cactus-cmd-api-server/docker-entrypoint.sh /usr/local/bin/\nHEALTHCHECK --interval=5s --timeout=5s --start-period=1s --retries=30 CMD /healthcheck.sh\nENTRYPOINT [\"docker-entrypoint.sh\"]\nCMD [\"node_modules/@hyperledger/cactus-cmd-api-server/dist/lib/main/typescript/cmd/cactus-api.js\"]\n"
}