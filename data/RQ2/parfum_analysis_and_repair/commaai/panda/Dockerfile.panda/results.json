{
  "startTime": 1674217462834,
  "endTime": 1674217464019,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nENV PYTHONUNBUFFERED 1\nENV PYTHONPATH /tmp/openpilot:$PYTHONPATH\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    autoconf \\\n    automake \\\n    bzip2 \\\n    ca-certificates \\\n    capnproto \\\n    clang \\\n    curl \\\n    g++ \\\n    gcc-arm-none-eabi libnewlib-arm-none-eabi \\\n    git \\\n    libarchive-dev \\\n    libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libswscale-dev libavresample-dev libavfilter-dev \\\n    libbz2-dev \\\n    libcapnp-dev \\\n    libcurl4-openssl-dev \\\n    libffi-dev \\\n    libtool \\\n    libssl-dev \\\n    libsqlite3-dev \\\n    libusb-1.0-0 \\\n    libzmq3-dev \\\n    locales \\\n    opencl-headers \\\n    ocl-icd-opencl-dev \\\n    make \\\n    patch \\\n    pkg-config \\\n    python \\\n    python-dev \\\n    unzip \\\n    wget \\\n    zlib1g-dev \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && locale-gen\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN curl -f -L https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer | bash\nENV PATH=\"/root/.pyenv/bin:/root/.pyenv/shims:${PATH}\"\nENV OPENPILOT_REF=\"1b0167ce24afb037b36464c40f9c5e0d657e77d9\"\nENV OPENDBC_REF=\"b2895650c744e24d48cee2f13563dcd5b030a271\"\n\nCOPY requirements.txt /tmp/\nRUN pyenv install 3.8.10 && \\\n    pyenv global 3.8.10 && \\\n    pyenv rehash && \\\n    pip install --no-cache-dir -r /tmp/requirements.txt\n\nRUN cd /tmp && \\\n    git clone https://github.com/danmar/cppcheck.git && \\\n    cd cppcheck && \\\n    git fetch && \\\n    git checkout e1cff1d1ef92f6a1c6962e0e4153b7353ccad04c && \\\n    FILESDIR=/usr/share/cppcheck make -j4 install\n\nRUN cd /tmp && \\\n    git clone https://github.com/commaai/openpilot.git tmppilot || true && \\\n    cd /tmp/tmppilot && \\\n    git fetch && \\\n    git checkout $OPENPILOT_REF && \\\n    git submodule update --init cereal opendbc rednose_repo && \\\n    git -C opendbc fetch && \\\n    git -C opendbc checkout $OPENDBC_REF && \\\n    git -C opendbc reset --hard HEAD && \\\n    git -C opendbc clean -xfd && \\\n    mkdir /tmp/openpilot && \\\n    cp -pR SConstruct site_scons/ tools/ selfdrive/ system/ common/ cereal/ opendbc/ rednose/ third_party/ /tmp/openpilot && \\\n    rm -rf /tmp/tmppilot\n\nRUN cd /tmp/openpilot && \\\n    pip install --no-cache-dir -r opendbc/requirements.txt && \\\n    pip install --no-cache-dir --upgrade aenum lru-dict pycurl tenacity atomicwrites serial smbus2 scons\n\nCOPY . /tmp/openpilot/panda\nRUN rm -rf /tmp/openpilot/panda/.git\n"
}