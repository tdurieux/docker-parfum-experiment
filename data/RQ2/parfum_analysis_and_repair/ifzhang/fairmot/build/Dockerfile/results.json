{
  "startTime": 1674215650519,
  "endTime": 1674215651951,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG IMAGE_NAME\nFROM ${IMAGE_NAME}:10.2-runtime-ubuntu18.04\nLABEL maintainer \"NVIDIA CORPORATION <cudatools@nvidia.com>\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        cuda-nvml-dev-$CUDA_PKG_VERSION \\\n        cuda-command-line-tools-$CUDA_PKG_VERSION \\\ncuda-libraries-dev-$CUDA_PKG_VERSION \\\n        cuda-minimal-build-$CUDA_PKG_VERSION \\\n        libnccl-dev=$NCCL_VERSION-1+cuda10.2 \\\nlibcublas-dev=10.2.2.89-1 \\\n&& \\\n    rm -rf /var/lib/apt/lists/*\n\nENV LIBRARY_PATH /usr/local/cuda/lib64/stubs\n\n# Install some basic utilities\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    curl \\\n    wget \\\n    build-essential \\\n    ca-certificates \\\n    sudo \\\n    git \\\n    bzip2 \\\n    libx11-6 \\\n && rm -rf /var/lib/apt/lists/*\n\n# Create a working directory\nRUN mkdir /app\nWORKDIR /app\n\n# Create a non-root user and switch to it\nRUN adduser --disabled-password --gecos '' --shell /bin/bash user \\\n && chown -R user:user /app\nRUN echo \"user ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/90-user\n\nUSER user\n\n# All users can use /home/user as their home directory\nENV HOME=/home/user\nRUN chmod 777 /home/user\n\n# CT: 4/17\n\n\n# Install Miniconda\n# RUN curl -so ~/miniconda.sh https://repo.continuum.io/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh \\\n\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh \\\n && chmod +x ~/miniconda.sh \\\n && ~/miniconda.sh -b -p ~/miniconda \\\n && rm ~/miniconda.sh\nENV PATH=/home/user/miniconda/bin:$PATH\nENV CONDA_AUTO_UPDATE_CONDA=false\n\n# Create a Python 3.6 environment\nRUN /home/user/miniconda/bin/conda create -y --name py36 python=3.6.9 \\\n && /home/user/miniconda/bin/conda clean -ya\nENV CONDA_DEFAULT_ENV=py36\nENV CONDA_PREFIX=/home/user/miniconda/envs/$CONDA_DEFAULT_ENV\nENV PATH=$CONDA_PREFIX/bin:$PATH\nRUN /home/user/miniconda/bin/conda install conda-build=3.18.9=py36_3 \\\n && /home/user/miniconda/bin/conda clean -ya\n\n# CUDA 10.0-specific steps\nRUN conda install -y -c pytorch \\\n    cudatoolkit=10.0 \\\n    \"pytorch=1.2.0=py3.6_cuda10.0.130_cudnn7.6.2_0\" \\\n    \"torchvision=0.4.0=py36_cu100\" \\\n && conda clean -ya\n\n# Install HDF5 Python bindings\nRUN conda install -y h5py=2.8.0 \\\n && conda clean -ya\nRUN pip install --no-cache-dir h5py-cache==1.0\n\n# Install Torchnet, a high-level framework for PyTorch\nRUN pip install --no-cache-dir torchnet==0.0.4\n\n# Install Requests, a Python library for making HTTP requests\nRUN conda install -y requests=2.19.1 \\\n && conda clean -ya\n\n# Install Graphviz\nRUN conda install -y graphviz=2.40.1 python-graphviz=0.8.4 \\\n && conda clean -ya\n\n# Install OpenCV3 Python bindings\nRUN sudo apt-get update && sudo apt-get install -y --no-install-recommends \\\n    libgtk2.0-0 \\\n    libcanberra-gtk-module \\\n && sudo rm -rf /var/lib/apt/lists/*\nRUN conda install -y -c menpo opencv3=3.1.0 \\\n && conda clean -ya\n\n# Set the default command to python3\nCMD [\"/bin/bash\"]\n"
}