{
  "startTime": 1674215160244,
  "endTime": 1674215160976,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 21,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 15,
        "columnEnd": 44
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 21,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.16.2-alpine as builder\n\nRUN apk add --update --no-cache alpine-sdk git python && \\\n  rm -rf /tmp/* /var/cache/apk/*\n\nWORKDIR /api\n\nARG NPM_TOKEN\nRUN echo \"//registry.npmjs.org/:_authToken=$NPM_TOKEN\" > ~/.npmrc\n\nCOPY ./api/package* /api/\nRUN npm install --only=production && npm cache clean --force;\n\nRUN mkdir /contracts\n\nCOPY ./contracts/package* /contracts/\nRUN cd /contracts && npm install --only=production && npm cache clean --force;\n\n# stage 2\nFROM node:10.16.2-alpine\n\nRUN apk --update --no-cache add alpine-sdk git python openssl curl bash redis && \\\n  rm -rf /tmp/* /var/cache/apk/*\n\nCOPY --from=builder /api /api\nCOPY --from=builder /contracts /contracts\n\nWORKDIR /api\n\n# TODO: check if we need this\nRUN cd /api && npm install --only=production && npm cache clean --force;\nRUN cd /contracts && npm install --only=production && npm cache clean --force;\n\nCOPY ./.git/refs/heads/* ./.git/refs/heads/\nCOPY ./.git/HEAD ./.git/HEAD\n\nCOPY ./api .\nCOPY ./contracts /contracts\n\nEXPOSE 3000\n\nCMD [ \"bash\", \"bin/docker/entrypoint.sh\" ]\n"
}