{
  "startTime": 1674250510531,
  "endTime": 1674250512079,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM --platform=$BUILDPLATFORM tonistiigi/xx:1.1.0 AS xx\n\nFROM scratch AS src\nCOPY *.go go.* /\n\nFROM --platform=$BUILDPLATFORM golang:1.17-alpine AS build\nCOPY --from=xx / /\nRUN apk add --no-cache clang lld file\nARG TARGETPLATFORM\nRUN xx-apk add musl-dev linux-headers gcc\nWORKDIR /src\nRUN XX_CC_PREFER_STATIC_LINKER=1 xx-clang --setup-target-triple\nRUN --mount=from=src \\\n    --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg \\\n    CGO_ENABLED=1 xx-go test -c -o /out/test -ldflags \"-linkmode external -extldflags -static\" . && \\\n    xx-verify --static /out/test\n\nFROM scratch AS binary\nCOPY --from=build /out/test .\n\nFROM alpine AS run\nRUN apk add --no-cache libcap\nCOPY --from=binary / /usr/bin\nARG CONFIG_RT_GROUP_SCHED\nRUN --security=insecure REEXEC_NAME=/usr/bin/test /usr/bin/test -test.v\n\nFROM binary"
}