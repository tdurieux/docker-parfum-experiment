diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tonistiigi/xx/base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tonistiigi/xx/base/Dockerfile/repaired.Dockerfile
index 25c06cd..4391c91 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tonistiigi/xx/base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tonistiigi/xx/base/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax=docker/dockerfile:1.3-labs
-
 ARG TEST_BASE_TYPE=alpine
 ARG TEST_BASE_IMAGE=${TEST_BASE_TYPE}
 ARG TEST_WITH_DARWIN=false
@@ -21,7 +19,7 @@ FROM --platform=$BUILDPLATFORM tonistiigi/bats-assert AS assert
 FROM ${TEST_BASE_IMAGE} AS test-base-alpine
 RUN --mount=type=cache,target=/pkg-cache \
     ln -s /pkg-cache /etc/apk/cache && \
-    apk add bats vim
+    apk add --no-cache bats vim
 WORKDIR /work
 
 FROM ${TEST_BASE_IMAGE} AS test-base-debian
@@ -30,7 +28,7 @@ RUN --mount=type=cache,target=/pkg-cache \
     ln -s /pkg-cache /var/cache/apt/archives && \
     rm /etc/apt/apt.conf.d/docker-clean && \
     echo 'Binary::apt::APT::Keep-Downloaded-Packages "1";' > /etc/apt/apt.conf.d/keep-downloads && \
-    apt update && apt install --no-install-recommends -y bats vim
+    apt update && apt install --no-install-recommends -y bats vim && rm -rf /var/lib/apt/lists/*;
 WORKDIR /work
 
 FROM ${TEST_BASE_IMAGE} AS test-base-rhel
@@ -47,7 +45,7 @@ EOT
 RUN --mount=type=cache,target=/pkg-cache \
     rm -rf /var/cache/yum && \
     ln -s /pkg-cache /var/cache/yum && \
-    yum update -y && yum -y install bats vim
+    yum update -y && yum -y install bats vim && rm -rf /var/cache/yum
 WORKDIR /work
 
 FROM test-base-${TEST_BASE_TYPE} AS test
@@ -122,7 +120,7 @@ RUN xx-apk add --no-cache musl-dev gcc g++
 FROM cctools-base AS lipo-base
 ARG LIPO_CFLAGS="-Wl,-s -Os"
 RUN export CFLAGS=${LIPO_CFLAGS} && \
-    ./configure --host=$(xx-clang --print-target-triple) LDFLAGS=--static && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=$(xx-clang --print-target-triple) LDFLAGS=--static && \
     make -C libmacho && make -C libstuff && make -C misc lipo && \
     xx-verify --static misc/lipo
 
@@ -132,7 +130,7 @@ COPY --from=lipo-base /work/cctools-port/cctools/misc/lipo /
 FROM cctools-base AS codesign-base
 ARG CODESIGN_CFLAGS="-Wl,-s -Os"
 RUN export CFLAGS=${CODESIGN_CFLAGS} && \
-    ./configure --host=$(xx-clang --print-target-triple) LDFLAGS=--static && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=$(xx-clang --print-target-triple) LDFLAGS=--static && \
     make -C libmacho && make -C libstuff && make -C misc codesign_allocate && \
     xx-verify --static misc/codesign_allocate
 
@@ -142,7 +140,7 @@ COPY --from=codesign-base /work/cctools-port/cctools/misc/codesign_allocate /
 FROM cctools-base AS otool-base
 ARG OTOOL_CFLAGS="-Wl,-s -Os"
 RUN export CFLAGS=${OTOOL_CFLAGS} && \
-    ./configure --host=$(xx-clang --print-target-triple) LDFLAGS=--static && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=$(xx-clang --print-target-triple) LDFLAGS=--static && \
     make -C libstuff && make -C libobjc2 && make -C otool && \
     xx-verify --static otool/otool
 
@@ -151,10 +149,10 @@ COPY --from=otool-base /work/cctools-port/cctools/otool/otool /
 
 FROM cctools-base AS ld64-static-base
 # for LTO
-RUN apk add llvm-dev
+RUN apk add --no-cache llvm-dev
 ARG LD64_CXXFLAGS="-Wl,-s -Os"
 RUN --mount=from=libtapi-static,source=/opt/libtapi,target=/opt/libtapi \
-    export CXXFLAGS=${LD64_CXXFLAGS} && ./configure --with-libtapi=/opt/libtapi --host=$(xx-clang --print-target-triple) &&\
+    export CXXFLAGS=${LD64_CXXFLAGS} && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-libtapi=/opt/libtapi --host=$(xx-clang --print-target-triple) && \
     sed -i 's/-ltapi/-ltapi -ltapiCore -lLLVMObject -lLLVMSupport -lLLVMDemangle -lLLVMMC -lLLVMBinaryFormat --static/' ld64/src/ld/Makefile && \
     make -j $(nproc) -C ld64 && \
     xx-verify --static ld64/src/ld/ld
@@ -165,16 +163,16 @@ COPY --from=ld64-static-base /work/cctools-port/cctools/ld64/src/ld/ld /ld64
 
 FROM cctools-base AS cctools-build
 # for LTO
-RUN apk add llvm-dev
+RUN apk add --no-cache llvm-dev
 ARG CCTOOLS_CXXFLAGS="-Wl,-s -Os"
 ARG CCTOOLS_CFLAGS="-Wl,-s -Os"
 RUN --mount=from=libtapi,source=/opt/libtapi,target=/opt/libtapi \
-    # copy to /usr/bin for clean rpath. TODO: try static build
+
     cp -a /opt/libtapi/. /usr/ && \ 
     export CFLAGS=${CCTOOLS_CFLAGS} CXXFLAGS=${CCTOOLS_CXXFLAGS} && \
-    ./configure --prefix=/opt/cctools --with-libtapi=/opt/libtapi --host=$(xx-clang --print-target-triple) && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/opt/cctools --with-libtapi=/opt/libtapi --host=$(xx-clang --print-target-triple) && \
     make -j $(nproc) install && \
-    xx-verify /opt/cctools/bin/ld 
+    xx-verify /opt/cctools/bin/ld
 
 FROM scratch AS cctools
 COPY --from=libtapi /opt/libtapi/lib/*.so /usr/lib/
@@ -285,10 +283,10 @@ RUN export CC=xx-clang CXX=xx-clang++ LD=lld BINUTILS_TARGET=${TARGETPLATFORM} &
     tar xf binutils-${BINUTILS_VERSION}.tar.gz && \
     cd binutils-${BINUTILS_VERSION} && \
     for f in ../patches/*; do patch -p1 < $f; done && \
-    ./configure --disable-separate-code --libdir=/lib --prefix=/usr --disable-multilib --enable-deterministic-archives --target=$(TARGETPLATFORM=$BINUTILS_TARGET xx-info) --disable-nls && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-separate-code --libdir=/lib --prefix=/usr --disable-multilib --enable-deterministic-archives --target=$(TARGETPLATFORM=$BINUTILS_TARGET xx-info) --disable-nls && \
     make -j $(nproc) && \
     make install && \
-    cd ..  && rm -rf binutils-${BINUTILS_VERSION}
+    cd .. && rm -rf binutils-${BINUTILS_VERSION} && rm binutils-${BINUTILS_VERSION}.tar.gz
 
 RUN xx-apk add --no-cache musl-dev gcc g++ zlib-dev
 FROM binutils-base0 AS binutils-base
@@ -303,11 +301,11 @@ RUN export CC=xx-clang CXX=xx-clang++ CFLAGS="$BINUTILS_CFLAGS" CXXFLAGS="$BINUT
     tar xf binutils-${BINUTILS_VERSION}.tar.gz && \
     cd binutils-${BINUTILS_VERSION} && \
     for f in ../patches/*; do patch -p1 < $f; done && \
-    ./configure --disable-separate-code --libdir=/lib --prefix=/out --disable-multilib --enable-deterministic-archives --target=$(TARGETPLATFORM= TARGETPAIR=$BINUTILS_TARGET xx-info) --host $(xx-clang --print-target-triple) --disable-nls --enable-gold --enable-relro --enable-plugins --with-pic --with-mmap --with-system-zlib $BINUTILS_CONFIG && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-separate-code --libdir=/lib --prefix=/out --disable-multilib --enable-deterministic-archives --target=$(TARGETPLATFORM= TARGETPAIR=$BINUTILS_TARGET xx-info) --host $(xx-clang --print-target-triple) --disable-nls --enable-gold --enable-relro --enable-plugins --with-pic --with-mmap --with-system-zlib $BINUTILS_CONFIG && \
     make -j $(nproc) && \
     make install && \
-    cd ..  && rm -rf binutils-${BINUTILS_VERSION} && \
-    for f in /out/bin/*; do xx-verify $f; done
+    cd .. && rm -rf binutils-${BINUTILS_VERSION} && \
+    for f in /out/bin/*; do xx-verify $f; done && rm binutils-${BINUTILS_VERSION}.tar.gz
 
 FROM binutils-base0 AS ld-base
 RUN xx-apk add --no-cache zlib-static
@@ -322,13 +320,13 @@ RUN export CC=xx-clang CXX=xx-clang++ CFLAGS="$LD_CFLAGS --static" CXXFLAGS="$LD
     tar xf binutils-${BINUTILS_VERSION}.tar.gz && \
     cd binutils-${BINUTILS_VERSION} && \
     for f in ../patches/*; do patch -p1 < $f; done && \
-    ./configure --disable-separate-code --libdir=/lib --prefix=/ --disable-multilib --enable-deterministic-archives --target=$LD_TARGET_TRIPLE --host $(xx-clang --print-target-triple) --disable-nls --disable-gold --enable-relro --disable-plugins --with-pic --with-mmap --with-system-zlib --disable-gas --disable-elfcpp --disable-binutils --disable-gprof $BINUTILS_CONFIG && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-separate-code --libdir=/lib --prefix=/ --disable-multilib --enable-deterministic-archives --target=$LD_TARGET_TRIPLE --host $(xx-clang --print-target-triple) --disable-nls --disable-gold --enable-relro --disable-plugins --with-pic --with-mmap --with-system-zlib --disable-gas --disable-elfcpp --disable-binutils --disable-gprof $BINUTILS_CONFIG && \
     make -j $(nproc) && \
     make install && \
-    cd ..  && rm -rf binutils-${BINUTILS_VERSION} && \
+    cd .. && rm -rf binutils-${BINUTILS_VERSION} && \
     xx-verify --static /$LD_TARGET_TRIPLE/bin/ld && \
     mkdir -p /out && mv /$LD_TARGET_TRIPLE/bin/ld /out/$LD_TARGET-ld && \
-    mkdir -p /out/ldscripts && mv /$LD_TARGET_TRIPLE/lib/ldscripts/* /out/ldscripts/
+    mkdir -p /out/ldscripts && mv /$LD_TARGET_TRIPLE/lib/ldscripts/* /out/ldscripts/ && rm binutils-${BINUTILS_VERSION}.tar.gz
 
 FROM ld-base AS ld-tgz-base
 ARG TARGETOS TARGETARCH TARGETVARIANT