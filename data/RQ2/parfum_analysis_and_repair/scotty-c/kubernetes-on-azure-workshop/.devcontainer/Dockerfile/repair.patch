diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/scotty-c/kubernetes-on-azure-workshop/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/scotty-c/kubernetes-on-azure-workshop/.devcontainer/Dockerfile/repaired.Dockerfile
index d080cfd..4710700 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/scotty-c/kubernetes-on-azure-workshop/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/scotty-c/kubernetes-on-azure-workshop/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -1,10 +1,9 @@
-
 #-------------------------------------------------------------------------------------------------------------
 # Copyright (c) Microsoft Corporation. All rights reserved.
 # Licensed under the MIT License. See https://go.microsoft.com/fwlink/?linkid=2090316 for license information.
 #-------------------------------------------------------------------------------------------------------------
 
-# Note: You can use any Debian/Ubuntu based image you want. 
+# Note: You can use any Debian/Ubuntu based image you want.
 FROM debian:9
 
 # Avoid warnings by switching to noninteractive
@@ -28,33 +27,33 @@ ARG USER_GID=$USER_UID
 RUN apt-get update \
     && apt-get -y install --no-install-recommends apt-utils dialog 2>&1 \
     #
-    # Verify git, process tools installed
-    && apt-get -y install curl git jq iproute2 procps \
+    # Verify git, process tools installed \
+    && apt-get -y --no-install-recommends install curl git jq iproute2 procps \
     #
     # Install Docker CE CLI
-    && apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \
+    && apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \
     && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | (OUT=$(apt-key add - 2>&1) || echo $OUT) \
     && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable" \
     && apt-get update \
-    && apt-get install -y docker-ce-cli \
+    && apt-get install --no-install-recommends -y docker-ce-cli \
     #
     # Install Docker Compose
-    && curl -sSL "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
+    && curl -f -sSL "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
     && chmod +x /usr/local/bin/docker-compose \
     #
     # Install Helm
-    && curl -o helm.tgz https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VER}-linux-amd64.tar.gz  \
-    && tar -xzf helm.tgz  \
-    && mv linux-amd64/helm /usr/local/bin  \
-    && rm helm.tgz  \
+    && curl -f -o helm.tgz https://storage.googleapis.com/kubernetes-helm/helm-v${HELM_VER}-linux-amd64.tar.gz \
+    && tar -xzf helm.tgz \
+    && mv linux-amd64/helm /usr/local/bin \
+    && rm helm.tgz \
     && helm init --client-only \
     #
-    # Install kubectl 
-    && curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl \
+    # Install kubectl
+    && curl -f -LO https://storage.googleapis.com/kubernetes-release/release/$( curl -f -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl \
     && chmod +x ./kubectl \
     && mv ./kubectl /usr/local/bin/kubectl \
     # Install az cli
-    && curl -sL https://aka.ms/InstallAzureCLIDeb | bash \
+    && curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash \
     # install kubectx
     && git clone https://github.com/ahmetb/kubectx.git ~/.kubectx \
     && ln -sf ~/.kubectx/kubectx /usr/local/bin/kubectx \
@@ -62,8 +61,8 @@ RUN apt-get update \
     && groupadd --gid $USER_GID $USERNAME \
     && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \
     # [Optional] Add sudo support for the non-root user
-    && apt-get install -y sudo \
-    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME\
+    && apt-get install --no-install-recommends -y sudo \
+    && echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \
     && chmod 0440 /etc/sudoers.d/$USERNAME \
     #
     # Clean up