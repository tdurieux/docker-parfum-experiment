{
  "startTime": 1674250344365,
  "endTime": 1674250345324,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# webpacker container\nFROM node:16-alpine AS webpack-builder\nWORKDIR /webpack\nCOPY ./client/tsconfig.json ./\nCOPY ./client/webpack.config.js ./\nCOPY ./client/package.json ./\nCOPY ./client/package-lock.json ./\nRUN npm install && npm cache clean --force;\nCOPY ./client/public ./public\nCOPY ./client/assets ./assets\nCOPY ./client/src ./src\nRUN npm run build\n\n# production container\nFROM node:16-alpine AS node\n# Install app dependencies\nCOPY ./server/package.json ./\nCOPY ./server/package-lock.json ./\nRUN npm ci --only=production\n\nWORKDIR /usr/src/app\n\nENV TEXTURES_PATH=\"/textures\"\nCOPY ./client/assets/textures/blocks /textures/blocks\nCOPY ./client/assets/textures/entity /textures/entity\nCOPY ./client/assets/textures/items /textures/items\n\nCOPY --from=webpack-builder /webpack/dist ./dist\n\nCOPY ./server/worker.js .\nCOPY ./server/app.js .\nCOPY ./server/modules ./modules\n\n# set port for server\nENV PORT=3000\n# expose port\nEXPOSE 3000\n\nCMD [ \"node\", \"app.js\" ]\n"
}