{
  "startTime": 1674254334707,
  "endTime": 1674254335249,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Builder image for the frontend\nFROM node:14-alpine as builder\n\n## Switch to an unprivileged user (avoids problems with npm)\nUSER node\n\n## Set the working directory and copy the source code\nRUN mkdir --parent /tmp/frontend\nWORKDIR /tmp/frontend\n\nCOPY --chown=node:node ./package.json /tmp/frontend/package.json\nCOPY --chown=node:node ./yarn.lock /tmp/frontend/yarn.lock\nRUN yarn install && yarn cache clean;\n\nARG BUILD_TARGET\nARG SUBROUTE=\"/\"\n\nENV PUBLIC_URL=${SUBROUTE}\n\nCOPY --chown=node:node . /tmp/frontend/\nRUN yarn build-${BUILD_TARGET}\n\n# Final image to export the service\nFROM nginx:1.19\n\nARG SUBROUTE=\"/\"\nENV SUBROUTE=${SUBROUTE}\n\n## Copy the different files\nCOPY --chown=nginx:nginx --from=builder /tmp/frontend/build /usr/share/nginx/html${SUBROUTE}\nCOPY --chown=nginx:nginx nginx.conf.tmpl /etc/nginx/conf.d/default.conf.tmpl\n\nRUN envsubst '$SUBROUTE' < /etc/nginx/conf.d/default.conf.tmpl > /etc/nginx/conf.d/default.conf && \\\n    rm /etc/nginx/conf.d/default.conf.tmpl\n\n## Add permissions for the nginx user\nRUN chown -R nginx:nginx /usr/share/nginx/html && \\\n    chown -R nginx:nginx /var/cache/nginx && \\\n    chown -R nginx:nginx /var/log/nginx && \\\n    chown -R nginx:nginx /etc/nginx/conf.d && \\\n    touch /var/run/nginx.pid && \\\n    chown -R nginx:nginx /var/run/nginx.pid\n\nENTRYPOINT [\"nginx\", \"-g\", \"daemon off;\"]\n"
}