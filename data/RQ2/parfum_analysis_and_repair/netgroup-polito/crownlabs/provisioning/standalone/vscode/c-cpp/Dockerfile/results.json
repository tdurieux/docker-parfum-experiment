{
  "startTime": 1674248778881,
  "endTime": 1674248780232,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 22,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This stage can be used to compile locally the extension, and it can be useful with those releases which don't include a .vsix file\n#FROM node:16 as builder\n\n#ENV CPPTOOLS_VERSION=1.8.2\n#RUN git clone https://github.com/microsoft/vscode-cpptools.git\n#WORKDIR /vscode-cpptools/Extension\n#RUN ls\n#RUN git checkout tags/${CPPTOOLS_VERSION}\n#RUN npm install -g vsce\n#RUN touch LICENSE.txt\n#RUN vsce package --yarn\n\n# Include base Dockerfile using dockerfile-plus\nINCLUDE+ ./base/Dockerfile\n\nENV SUDO_FORCE_REMOVE yes\nENV CPPTOOLS_VERSION=v1.9.8\n\n\nCOPY ./c-cpp/project/main.c /example_project/main.c\nCOPY ./c-cpp/project/main.cpp /example_project/main.cpp\nCOPY ./c-cpp/project/vscode /example_project/.vscode\nCOPY ./c-cpp/settings.json /config/data/User/settings.json\n\n# Install required packages and remove apt and useless/dangerous packages\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential cmake gdb && \\\n    apt-get clean && \\\n    apt-get remove --autoremove --purge -y sudo apt --allow-remove-essential && rm -rf /var/lib/apt/lists/*;\n\n# This line can be used to retrieve the locally compiled package from the building stage\n#COPY --from=builder /vscode-cpptools/Extension/cpptools-${CPPTOOLS_VERSION}-main.vsix ./cpptools-linux.vsix\n\n# Download c-cpp vscode extension\nADD \"https://github.com/microsoft/vscode-cpptools/releases/download/${CPPTOOLS_VERSION}/cpptools-linux.vsix\" \"./cpptools-linux.vsix\"\n\n# Setup permissions\nRUN chown -R $USER:$USER /config && \\\n    chown -R $USER:$USER /example_project && \\\n    chown $USER:$USER cpptools-linux.vsix && \\\n    chmod 400 cpptools-linux.vsix\n\nUSER $USER\n\n# Install extensions\nRUN code-server --extensions-dir /config/extensions --install-extension cpptools-linux.vsix && \\\n    code-server --extensions-dir /config/extensions --install-extension formulahendry.code-runner\nENTRYPOINT [ \"/start.sh\" ]\n"
}