{
  "startTime": 1674252388620,
  "endTime": 1674252389646,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Used by docker-compose.yml to deploy the formio application\n# (When modified, you must include `--build` )\n# -----------------------------------------------------------\n\n# Use Node image, maintained by Docker:\n# hub.docker.com/r/_/node/\nFROM node:lts-alpine3.10\n\n# set working directory\nWORKDIR /forms-flow-forms/app\n\nRUN set -x \\\n\t&& chmod -R 777 /forms-flow-forms/app/\n\n# \"bcrypt\" requires python/make/g++, all must be installed in alpine\n# (note: using pinned versions to ensure immutable build environment)\nRUN apk update && \\\n    apk upgrade && \\\n    apk add --no-cache make=4.2.1-r2 && \\\n    apk add --no-cache g++=8.3.0-r0\n\n# At least one buried package dependency is using a `git` path.\n# Hence we need to haul in git.\nRUN apk --update --no-cache add git\n# Use https to avoid requiring ssh keys for public repos.\nRUN git config --global url.\"https://github.com/\".insteadOf \"ssh://git@github.com/\"\n## Using an alternative package install location\n## to allow overwriting the /app folder at runtime\n## stackoverflow.com/a/13021677\n#ENV NPM_PACKAGES=/.npm-packages \\\n#    PATH=$NPM_PACKAGES/bin:$PATH \\\n#    NODE_PATH=$NPM_PACKAGES/lib/node_modules:$NODE_PATH\n#RUN echo \"prefix = $NPM_PACKAGES\" >> ~/.npmrc\n\n# add `/app/node_modules/.bin` to $PATH\nENV PATH /forms-flow-forms/app/node_modules/.bin:$PATH\n\n## Include details of the required dependencies\n#COPY ./package.json $NPM_PACKAGES/\n#COPY ./package-lock.json $NPM_PACKAGES/\n#\n## Use \"Continuous Integration\" to install as-is from package-lock.json\n#RUN npm ci --prefix=$NPM_PACKAGES\n#\n## Link in the global install because `require()` only looks for ./node_modules\n## WARNING: This is overwritten by volume-mount at runtime!\n##          See docker-compose.yml for instructions\n#RUN ln -sf $NPM_PACKAGES/node_modules node_modules\n\n## Include details of the required dependencies\nCOPY package-lock.json /forms-flow-forms/app/package-lock.json\nCOPY package.json /forms-flow-forms/app/package.json\n\nRUN npm install && npm cache clean --force;\n\n# Set this to inspect more from the application. Examples:\n#   DEBUG=formio:db (see index.js for more)\n#   DEBUG=formio:*\nENV DEBUG=\"\"\n\nCOPY . /forms-flow-forms/app/\n\n\n# This will initialize the application based on\n# some questions to the user (login email, password, etc.)\nENTRYPOINT [ \"node\", \"main\" ]\n"
}