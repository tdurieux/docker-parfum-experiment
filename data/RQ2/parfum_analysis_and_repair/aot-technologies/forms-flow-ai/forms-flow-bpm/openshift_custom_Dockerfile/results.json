{
  "startTime": 1674253652535,
  "endTime": 1674253653106,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Used as a reference for any custom logic to be done.\n# if the application is built from a source repo other than aot , use the custom copying.\n# steps : checkout the aot source code and use the copy logic.\n# -----------------------------------------------------------\n\n# Maven build\nFROM docker-remote.artifacts.developer.gov.bc.ca/maven:3.6.1-jdk-11-slim AS MAVEN_TOOL_CHAIN\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\nRUN git clone -b ${FORMIO_SOURCE_REPO_BRANCH} ${FORMIO_SOURCE_REPO_URL} /bpm/\n\n#RUN cp /bpm/forms-flow-bpm/pom-docker.xml /tmp/pom.xml\n#RUN cp /bpm/forms-flow-bpm/settings-docker.xml /usr/share/maven/ref/\nCOPY ./pom-docker.xml /tmp/pom.xml\nCOPY ./settings-docker.xml /usr/share/maven/ref/\n\nWORKDIR /tmp/\n\n# This allows Docker to cache most of the maven dependencies\nRUN mvn -s /usr/share/maven/ref/settings-docker.xml dependency:resolve-plugins dependency:resolve dependency:go-offline -B\nRUN cp -r /bpm/forms-flow-bpm/src/ /tmp/src/\n\nARG CUSTOM_SRC_DIR=src/main/\n\n# Override these files they have custom changes in the sbc_divapps directory\nCOPY ./${CUSTOM_SRC_DIR}/  /tmp/${CUSTOM_SRC_DIR}/\nRUN mvn -s /usr/share/maven/ref/settings-docker.xml package\n\n\n\n# Final custom slim java image (for apk command see jdk-11.0.3_7-alpine-slim)\nFROM docker-remote.artifacts.developer.gov.bc.ca/adoptopenjdk/openjdk11:jdk-11.0.3_7-alpine\n\nENV JAVA_VERSION jdk-11.0.3+7\nENV JAVA_HOME=/opt/java/openjdk \\\n    PATH=\"/opt/java/openjdk/bin:$PATH\"\n\nEXPOSE 8080\n# OpenShift has /app in the image, but it's missing when doing local development - Create it when missing\nRUN test ! -d /app && mkdir /app || :\n# Add spring boot application\nRUN mkdir -p /app\nCOPY --from=MAVEN_TOOL_CHAIN /tmp/target/camunda-bpm-identity-keycloak-examples-sso-kubernetes*.jar ./app\nRUN chmod a+rwx -R /app\nWORKDIR /app\nVOLUME /tmp\nENTRYPOINT [\"java\",\"-Djava.security.egd=file:/dev/./urandom\",\"-jar\",\"/app/camunda-bpm-identity-keycloak-examples-sso-kubernetes.jar\"]"
}