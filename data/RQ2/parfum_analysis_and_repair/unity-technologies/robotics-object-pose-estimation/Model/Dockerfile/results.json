{
  "startTime": 1674250919782,
  "endTime": 1674250920652,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04\n\n# Add Miniconda\n# https://github.com/ContinuumIO/docker-images/blob/master/miniconda3/debian/Dockerfile\nENV LANG=C.UTF-8 LC_ALL=C.UTF-8\nENV PATH /opt/conda/bin:$PATH\n\nRUN apt-get update --fix-missing && \\\n    apt-get install --no-install-recommends -y wget bzip2 ca-certificates libglib2.0-0 libxext6 libsm6 libxrender1 git mercurial subversion && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda.sh && \\\n    /bin/bash ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda clean -tipsy && \\\n    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \\\n    echo \". /opt/conda/etc/profile.d/conda.sh\" >> ~/.bashrc && \\\n    echo \"conda activate base\" >> ~/.bashrc && \\\n    find /opt/conda/ -follow -type f -name '*.a' -delete && \\\n    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \\\n    /opt/conda/bin/conda clean -afy\n\n# Add Tini init systems to handle orphaned processes\n# https://cloud.google.com/solutions/best-practices-for-building-containers#problem_2_how_classic_init_systems_handle_orphaned_processes\nENV TINI_VERSION v0.19.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/local/bin/tini\nRUN chmod +x /usr/local/bin/tini\n\n# Add project stuff\nWORKDIR /\nVOLUME /notebooks\n\n# This will install all dependencies\nCOPY environment-gpu.yml ./\nRUN conda env update -n base -f environment-gpu.yml && \\\n    conda clean -afy\n\n# COPY the rest of code here\nCOPY . ./\n\n# pip install this package\nRUN pip install --no-cache-dir -e .\n\n# pre-load VGG weights\nRUN python -c 'import pose_estimation.model as model; model.preload()'\n\n# Use -g to ensure all child process received SIGKILL\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\n\nCMD sh -c \"jupyter notebook --notebook-dir=/ --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.allow_origin='*' --NotebookApp.base_url=${NB_PREFIX}\"\n"
}