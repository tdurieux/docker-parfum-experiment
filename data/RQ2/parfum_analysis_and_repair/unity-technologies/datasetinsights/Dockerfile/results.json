{
  "startTime": 1674253449660,
  "endTime": 1674253450428,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:10.0-cudnn7-runtime-ubuntu18.04\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        build-essential \\\n        curl \\\n        libsm6 \\\n        libxext6 \\\n        libxrender-dev \\\n        libgl1-mesa-dev \\\n        libffi-dev \\\n        libzmq3-dev \\\n        python3.8-dev \\\n        python3-pip \\\n    && ln -s /usr/bin/python3.8 /usr/local/bin/python && rm -rf /var/lib/apt/lists/*;\n\nRUN python -m pip install --upgrade pip\nRUN python -m pip install setuptools==60.2.0 cryptography==36.0.1 poetry==1.1.12 notebook==6.4.8\n\n# Add Tini\nENV TINI_VERSION v0.18.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /usr/local/bin/tini\nRUN chmod +x /usr/local/bin/tini\n\nWORKDIR /datasetinsights\nVOLUME /data /root/.config\n\nCOPY poetry.lock pyproject.toml ./\nRUN poetry config virtualenvs.create false \\\n    && poetry install --no-root\n\nCOPY . ./\n# Run poetry install again to install datasetinsights\nRUN poetry config virtualenvs.create false \\\n    && poetry install\n\n# Use -g to ensure all child process received SIGKILL\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\n\nCMD sh -c \"jupyter notebook --notebook-dir=/ --ip=0.0.0.0 --no-browser --allow-root --port=8888 --NotebookApp.token='' --NotebookApp.password='' --NotebookApp.allow_origin='*' --NotebookApp.base_url=${NB_PREFIX}\"\n"
}