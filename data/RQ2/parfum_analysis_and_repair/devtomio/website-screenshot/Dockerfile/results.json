{
  "startTime": 1674255305492,
  "endTime": 1674255306558,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 78,
        "columnEnd": 137
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 163
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 43
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rustlang/rust:nightly-bullseye-slim as base\n\nWORKDIR /usr/src/app\n\nENV CI=true\nENV RUSTFLAGS=\"-C target-cpu=native\"\n\n# Build stuff\nRUN apt-get update && \\\n    apt-get upgrade -y --no-install-recommends && \\\n    apt-get install -y --no-install-recommends build-essential python3 gnupg wget curl unzip dumb-init clang lld libssl-dev pkg-config  && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get autoremove\n\n# Chrome & Chromedriver\nRUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list' && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y google-chrome-stable && \\\n    wget -O /tmp/chromedriver.zip https://chromedriver.storage.googleapis.com/$( curl -f -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)/chromedriver_linux64.zip && \\\n    unzip /tmp/chromedriver.zip chromedriver -d /usr/local/bin/ && rm -rf /var/lib/apt/lists/*;\n\n# Fleet\nRUN cargo install fleet-rs && \\\n    cargo install sccache\n\nENV DISPLAY=:99\nENTRYPOINT [\"dumb-init\", \"--\"]\n\nFROM base as builder\n\nCOPY Cargo.lock .\nCOPY Cargo.toml .\nCOPY build.rs .\nCOPY static/ static/\nCOPY openapi.yml .\n\nRUN mkdir src && \\\n    echo \"// blank\" > src/lib.rs && \\\n    fleet build --release && \\\n    rm -r src\n\nCOPY src/ src/\nCOPY evasions/ evasions/\n\nRUN fleet build --release\n\nFROM base as runner\n\nCOPY --from=builder /usr/src/app/target/release/website-screenshot /usr/local/bin/website-screenshot\n\nENTRYPOINT [\"chromedriver\", \"&\", \"/usr/local/bin/website-screenshot\"]\n"
}