{
  "startTime": 1674216138439,
  "endTime": 1674216139724,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 50,
        "columnEnd": 66
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 28,
        "columnEnd": 44
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "# base node image\nFROM node:16-bullseye-slim as base\n\nENV NODE_ENV=production\nENV PORT=8080\n\n# install openssl for prisma\nRUN apt-get update && apt-get install --no-install-recommends -y openssl && rm -rf /var/lib/apt/lists/*;\n\n# install all node_modules, including dev dependencies\nFROM base as deps\n\nRUN mkdir /app\nWORKDIR /app\n\nADD package.json yarn.lock .yarnrc.yml ./\nADD .yarn .yarn\nRUN yarn install --immutable --immutable-cache && yarn cache clean;\n\n# build the app\nFROM deps as build\n\nWORKDIR /app\n\nADD prisma .\nRUN yarn prisma generate && yarn cache clean;\n\nADD . .\nRUN yarn build && yarn cache clean;\n\n# finally, build the production image with minimal footprint\nFROM base\n\nRUN mkdir /app\nWORKDIR /app\n\nCOPY --from=build /app/node_modules /app/node_modules\nCOPY --from=build /app/tsconfig.json /app/tsconfig.json\nCOPY --from=build /app/package.json /app/package.json\nCOPY --from=build /app/build /app/build\nCOPY --from=build /app/public /app/public\nCOPY --from=build /app/changelog /app/changelog\nCOPY --from=build /app/app /app/app\n\nEXPOSE 8080\n\nCMD [\"yarn\", \"start\"]\n"
}