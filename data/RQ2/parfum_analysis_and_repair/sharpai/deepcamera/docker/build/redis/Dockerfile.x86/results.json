{
  "startTime": 1674216256694,
  "endTime": 1674216258159,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 21,
        "columnEnd": 30
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 1,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 22,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch\n\n# add our user and group first to make sure their IDs get assigned consistently, regardless of whatever dependencies get added\nRUN groupadd -r redis && useradd -r -g redis redis\n\n# grab gosu for easy step-down from root\n# https://github.com/tianon/gosu/releases\nRUN apt-get update && apt-get install --no-install-recommends -y gpg && rm -rf /var/lib/apt/lists/*;\nENV GOSU_VERSION 1.10\nRUN set -ex; \\\n\n\tfetchDeps='ca-certificates wget'; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends $fetchDeps; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tdpkgArch=\"$(dpkg --print-architecture | awk -F- '{ print $NF }')\"; \\\n\twget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$dpkgArch\"; \\\n\texport GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n\tchmod +x /usr/local/bin/gosu; \\\n\tgosu nobody true;\n\nENV REDIS_VERSION 3.2.11\nENV REDIS_DOWNLOAD_URL http://download.redis.io/releases/redis-3.2.11.tar.gz\nENV REDIS_DOWNLOAD_SHA 31ae927cab09f90c9ca5954aab7aeecc3bb4da6087d3d12ba0a929ceb54081b5\n\n# for redis-sentinel see: http://redis.io/topics/sentinel\nRUN set -ex; \\\n\n\tbuildDeps=' \\\n\t\twget \\\n\t\t\\\n\t\tgcc \\\n\t\tlibc6-dev \\\n\t\tmake \\\n\t'; \\\n\tcp /etc/apt/sources.list /etc/apt/sources.list.bk ; \\\n\t\t\techo \"deb http://ftp2.cn.debian.org/debian/ stretch main non-free contrib\"           >  /etc/apt/sources.list ; \\\n\t\t\techo \"deb http://ftp2.cn.debian.org/debian/ stretch-updates main non-free contrib\"   >> /etc/apt/sources.list ; \\\n\t\t\techo \"deb http://ftp2.cn.debian.org/debian/ stretch-backports main non-free contrib\" >> /etc/apt/sources.list ; \\\n\t\t\tapt-get update; \\\n\tapt-get install --no-install-recommends -y $buildDeps; \\\n\trm -rf /var/lib/apt/lists/*; cp /etc/apt/sources.list.bk /etc/apt/sources.list; \\\n\n\twget -O redis.tar.gz \"$REDIS_DOWNLOAD_URL\"; \\\n\techo \"$REDIS_DOWNLOAD_SHA  *redis.tar.gz\" | sha256sum -c -; \\\n\tmkdir -p /usr/src/redis; \\\n\ttar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1; \\\n\trm redis.tar.gz; \\\n\n# disable Redis protected mode [1] as it is unnecessary in context of Docker\n# (ports are not automatically exposed when running inside Docker, but rather explicitly by specifying -p / -P)\n# [1]: https://github.com/antirez/redis/commit/edd4d555df57dc84265fdfb4ef59a4678832f6da\n\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 1$' /usr/src/redis/src/server.h; \\\n\tsed -ri 's!^(#define CONFIG_DEFAULT_PROTECTED_MODE) 1$!\\1 0!' /usr/src/redis/src/server.h; \\\n\tgrep -q '^#define CONFIG_DEFAULT_PROTECTED_MODE 0$' /usr/src/redis/src/server.h; \\\n# for future reference, we modify this directly in the source instead of just supplying a default configuration flag because apparently \"if you specify any argument to redis-server, [it assumes] you are going to specify everything\"\n# see also https://github.com/docker-library/redis/issues/4#issuecomment-50780840\n# (more exactly, this makes sure the default behavior of \"save on SIGTERM\" stays functional by default)\n\n\tmake -C /usr/src/redis -j \"$(nproc)\"; \\\n\tmake -C /usr/src/redis install; \\\n\n\trm -r /usr/src/redis; \\\n\n\tapt-get purge -y --auto-remove $buildDeps\n\nRUN mkdir /data && chown redis:redis /data\nVOLUME /data\nWORKDIR /data\n\nCOPY docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"docker-entrypoint.sh\"]\n\nEXPOSE 6379\nCMD [\"redis-server\"]\n"
}