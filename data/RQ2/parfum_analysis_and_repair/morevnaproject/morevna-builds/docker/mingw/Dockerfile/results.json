{
  "startTime": 1674251204918,
  "endTime": 1674251206329,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 136,
        "lineEnd": 136,
        "columnStart": 5,
        "columnEnd": 98
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 93,
        "columnStart": 0,
        "columnEnd": 13
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 93,
        "columnStart": 0,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM buildpack-deps:bullseye-curl\n\n# Install deps\nRUN set -x \\\n && apt-get update \\\n && apt-get install --no-install-recommends -y -q \\\n        autoconf \\\n        automake \\\n        autotools-dev \\\n        bc \\\n        binfmt-support \\\n#        binutils-multiarch                             \\\n#        binutils-multiarch-dev                         \\\n        build-essential \\\n        ccache \\\n        clang \\\n        curl \\\n        devscripts \\\n        gdb \\\n        git-core \\\n        libtool \\\n        llvm \\\n#        mercurial                                      \\\n#        multistrap                                     \\\n        patch \\\n        software-properties-common \\\n        subversion \\\n        wget \\\n        xz-utils \\\n        cmake \\\n#        qemu-user-static                               \\\n#        libxml2-dev                                    \\\n#        lzma-dev                                       \\\n        openssl \\\n#        libssl-dev                                     \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install Windows cross-tools\nRUN apt-get install --no-install-recommends -y mingw-w64 \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n\n# Create symlinks for triples and set default CROSS_TRIPLE\nENV WINDOWS_TRIPLES=i686-w64-mingw32,x86_64-w64-mingw32                                                                           \\\n    CROSS_TRIPLE=x86_64-linux-gnu\nRUN mkdir -p /usr/x86_64-linux-gnu;                                                               \\\n    for triple in $(echo ${WINDOWS_TRIPLES} | tr \",\" \" \"); do                                     \\\n      mkdir -p /usr/$triple/bin;                                                                  \\\n      for bin in /etc/alternatives/$triple-* /usr/bin/$triple-*; do                               \\\n        if [ ! -f /usr/$triple/bin/$(basename $bin | sed \"s/$triple-//\") ]; then                  \\\n          ln -s $bin /usr/$triple/bin/$(basename $bin | sed \"s/$triple-//\");                      \\\n        fi;                                                                                       \\\n      done;                                                                                       \\\n      ln -s gcc /usr/$triple/bin/cc;                                                              \\\n      ln -s /usr/$triple /usr/x86_64-linux-gnu/$triple;                                           \\\n    done\n\nRUN apt-get update && \\\n DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y -q \\\npkg-config \\\nxsltproc \\\nm4 \\\nautomake \\\nautopoint \\\nintltool \\\nlibtool \\\nlibltdl-dev \\\ngit \\\nlibintl-perl \\\npython3-pip \\\nninja-build \\\ndoxygen \\\ngraphviz \\\npython \\\n# for synfigstudio-nsis \\\nunzip \\\n# for portable versions \\\nzip \\\n# fix ca-certificates issue - https://github.com/multiarch/crossbuild/issues/63\n#libssl1.0.2 openssl libgnutls30 \\\n# epoxy\nxutils-dev \\\n# native-SDL\nlibx11-dev \\\nlibxext-dev \\\n# native-boost\nlibbz2-dev \\\n# native-cairo\nlibxcb1-dev \\\n# native-gtk -> native-epoxy\nlibegl1-mesa-dev \\\n# native-gtk -> native-atspi2\nlibxtst-dev \\\nlibdbus-1-dev \\\n# qt deps see: http://doc.qt.io/qt-5/linux-requirements.html \\\n#libxrender-dev \\\n#libfontconfig1-dev \\\n#libfreetype6-dev \\\n#libxi-dev \\\n#libx11-xcb-dev \\\n#libsm-dev \\\n#libice-dev \\\n#libglu1-mesa-dev \\\n# other deps \\\n#libdirectfb-dev \\\n#liblzma-dev \\\n#liblzo2-dev \\\n#libudev-dev \\\n#libfuse-dev \\\n#libdb-dev \\\n#libasound2-dev \\\n#libffi-dev \\\n#libmount-dev \\\n#libbz2-dev \\\n#libcroco3-dev \\\n#libpthread-stubs0-dev \\\n#libxau-dev \\\n#libxcursor-dev \\\n#flex \\\n#bison \\\n#python-dev \\\n#xutils-dev \\\n&& apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY files/install-cross-tools.sh /\nRUN /install-cross-tools.sh\n#TODO: Remove above lines after Conan migration?\n\nRUN update-alternatives --set i686-w64-mingw32-gcc /usr/bin/i686-w64-mingw32-gcc-posix && \\\n    update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix && \\\n    update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix && \\\n    update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix\n\nRUN pip3 install --no-cache-dir meson\n\nRUN cd /tmp \\\n  && wget https://ftp.us.debian.org/debian/pool/main/a/automake-1.15/automake-1.15_1.15.1-5_all.deb \\\n  && dpkg -i automake-1.15_1.15.1-5_all.deb \\\n  && rm -f automake-1.15_1.15.1-5_all.deb\n\nRUN dpkg --add-architecture i386 \\\n    && wget -qO - https://dl.winehq.org/wine-builds/winehq.key | apt-key add - \\\n    && apt-add-repository https://dl.winehq.org/wine-builds/debian/ \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install --install-recommends winehq-stable -y \\\n    && apt-get clean\n\n\nCMD [\"/bin/bash\"]\nWORKDIR /workdir\n"
}