{
  "startTime": 1674249852402,
  "endTime": 1674249853056,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 46,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 46,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 9,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 46,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 9,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 9,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 1,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 9,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 9,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "ARG ROS_DISTRO=noetic\n\nFROM ros:$ROS_DISTRO\nLABEL description=\"Inno VTOL simulator\"\nSHELL [\"/bin/bash\", \"-c\"]\nWORKDIR /catkin_ws/src/inno_vtol_simulator\n\n\n# 1. Install basic requirements\nRUN apt-get update                                                              &&  \\\n    apt-get upgrade -y && \\\n    apt-get install --no-install-recommends -y git ros-$ROS_DISTRO-catkin python3-pip python3-catkin-tools && rm -rf /var/lib/apt/lists/*;\nRUN if [[ \"$ROS_DISTRO\" = \"melodic\" ]] ; then \\\n apt-get install --no-install-recommends -y python-pip python-catkin-tools; rm -rf /var/lib/apt/lists/*; fi\n\n# 2. Install requirements\n# 2.1. innopolis_vtol_dynamics\nCOPY uav_dynamics/inno_vtol_dynamics/install_requirements.sh    uav_dynamics/inno_vtol_dynamics/install_requirements.sh\nCOPY uav_dynamics/inno_vtol_dynamics/requirements.txt           uav_dynamics/inno_vtol_dynamics/requirements.txt\nRUN uav_dynamics/inno_vtol_dynamics/install_requirements.sh\n\n# 2.2. inno-sim-interface\nRUN sudo apt-get install --no-install-recommends -y ros-$ROS_DISTRO-rosauth && \\\n    pip install --no-cache-dir bson pymongo protobuf Pillow twisted && rm -rf /var/lib/apt/lists/*;\n\n# 2.3 uavcan_tools\nRUN sudo apt-get install --no-install-recommends -y udev && rm -rf /var/lib/apt/lists/*;\n\n# 2.4. geographiclib_conversions\nCOPY uav_dynamics/geographiclib_conversions uav_dynamics/geographiclib_conversions/\nRUN ./uav_dynamics/geographiclib_conversions/scripts/install.sh\n\n# 2.5. communicators\nCOPY communicators/mavlink_communicator/                        communicators/mavlink_communicator/\nCOPY communicators/uavcan_communicator/                         communicators/uavcan_communicator/\nCOPY communicators/uavcan_msgs/                                 communicators/uavcan_msgs/\nCOPY communicators/cyphal_communicator/scripts/config.sh        communicators/cyphal_communicator/scripts/config.sh\nCOPY communicators/cyphal_communicator/install_requirements.sh  communicators/cyphal_communicator/install_requirements.sh\nCOPY communicators/cyphal_communicator/compile_dsdl.sh          communicators/cyphal_communicator/compile_dsdl.sh\nRUN ./communicators/uavcan_communicator/scripts/install_requirements.sh         &&  \\\n    ./communicators/uavcan_communicator/scripts/install_libuavcan.sh\nRUN ./communicators/cyphal_communicator/install_requirements.sh                 &&  \\\n    ./communicators/cyphal_communicator/compile_dsdl.sh\n\n# 3. Copy the source files\nCOPY inno_sim_interface/ inno_sim_interface/\nCOPY catkin_build.sh catkin_build.sh\n\nCOPY uav_dynamics/inno_vtol_dynamics/include            uav_dynamics/inno_vtol_dynamics/include\nCOPY uav_dynamics/inno_vtol_dynamics/libs               uav_dynamics/inno_vtol_dynamics/libs\nCOPY uav_dynamics/inno_vtol_dynamics/meshes             uav_dynamics/inno_vtol_dynamics/meshes\nCOPY uav_dynamics/inno_vtol_dynamics/msg                uav_dynamics/inno_vtol_dynamics/msg\nCOPY uav_dynamics/inno_vtol_dynamics/src                uav_dynamics/inno_vtol_dynamics/src\nCOPY uav_dynamics/inno_vtol_dynamics/urdf               uav_dynamics/inno_vtol_dynamics/urdf\nCOPY uav_dynamics/inno_vtol_dynamics/CMakeLists.txt     uav_dynamics/inno_vtol_dynamics/CMakeLists.txt\nCOPY uav_dynamics/inno_vtol_dynamics/package.xml        uav_dynamics/inno_vtol_dynamics/package.xml\nCOPY communicators/cyphal_communicator/CMakeLists.txt   communicators/cyphal_communicator/CMakeLists.txt\nCOPY communicators/cyphal_communicator/package.xml      communicators/cyphal_communicator/package.xml\n\n# 4. Build ROS\nRUN source /opt/ros/$ROS_DISTRO/setup.bash                                      &&  \\\n    cd ../../                                                                   &&  \\\n    git config --global http.sslverify false                                    && \\\n    catkin build\n\n# 5. Copy configs, scripts, etc\nCOPY uav_dynamics/inno_vtol_dynamics/scripts/           uav_dynamics/inno_vtol_dynamics/scripts\nCOPY uav_dynamics/inno_vtol_dynamics/launch/            uav_dynamics/inno_vtol_dynamics/launch\nCOPY uav_dynamics/inno_vtol_dynamics/config/            uav_dynamics/inno_vtol_dynamics/config\nCOPY uav_dynamics/inno_vtol_dynamics/catkin_test.sh     uav_dynamics/inno_vtol_dynamics/catkin_test.sh\nCOPY scripts/ scripts/\nCOPY communicators/cyphal_communicator/                 communicators/cyphal_communicator/\n\n\nCMD echo \"main process has been started\"                                        &&  \\\n    source /opt/ros/$ROS_DISTRO/setup.bash && source /catkin_ws/devel/setup.bash &&  \\\n    echo \"container has been finished\""
}