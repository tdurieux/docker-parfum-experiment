{
  "startTime": 1674250510141,
  "endTime": 1674250511112,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM morlay/google-gn:9a0496a7 as gn\n\nFROM debian:buster as hsdis\n\nRUN set -eux; \\\n    \\\n    apt-get update; \\\n    apt-get install -qqy --no-install-recommends \\\n        ca-certificates git \\\n        build-essential apt-utils libtool  \\\n        wget curl unzip \\\n        automake cmake make autoconf virtualenv \\\n        python ninja-build g++ \\\n        openjdk-11-jdk software-properties-common \\\n        ; \\\n    rm -rf /var/lib/apt/lists/*\n\n# build hsdis-<arch>.so\n# see https://metebalci.com/blog/how-to-build-the-hsdis-disassembler-plugin-on-ubuntu-18/\nRUN set -eux; \\\n\n    echo \"deb-src http://deb.debian.org/debian buster main\" >> /etc/apt/sources.list; \\\n    apt-get update; \\\n\n    case $(uname -m) in \\\n        x86_64) \\\n            export ARCH=amd64; \\\n            export TARGETARCH=amd64; \\\n        ;; \\\n        aarch64) \\\n            export ARCH=aarch64; \\\n            export TARGETARCH=arm64; \\\n        ;; \\\n        *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac; \\\n\n    mkdir -p /tmp/jdk && cd /tmp/jdk; \\\n    apt-get source openjdk-11-jdk-headless; \\\n    cd $(ls -b | head -1)/src/utils/hsdis; \\\n\n    wget https://ftp.gnu.org/gnu/binutils/binutils-2.32.tar.gz; \\\n    tar -xzf binutils-2.32.tar.gz; rm binutils-2.32.tar.gz \\\n    export BINUTILS=binutils-2.32; \\\n    sed -i -e 's/app_data->dfn = disassembler(native_bfd)/app_data->dfn = disassembler(bfd_get_arch(native_bfd),bfd_big_endian(native_bfd),bfd_get_mach(native_bfd),native_bfd)/g' hsdis.c; \\\n    make all64; \\\n\n    mkdir -p /tmp/hsdis; \\\n    cp build/linux-${ARCH}/hsdis-${ARCH}.so /tmp/hsdis; \\\n    rm -rf /tmp/jdk; \\\n    rm -rf /var/lib/apt/lists/*\n\nFROM ubuntu:18.04\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN set -eux; \\\n\n    apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n    build-essential \\\n    apt-utils \\\n    unzip \\\n    git \\\n    make \\\n    cmake \\\n    automake \\\n    autoconf \\\n    libtool \\\n    virtualenv \\\n    python \\\n    vim \\\n    g++ \\\n    wget \\\n    ninja-build \\\n    curl \\\n    lsb-core \\\n    openjdk-11-jdk \\\n    software-properties-common \\\n    ; \\\n    rm -rf /var/lib/apt/lists/*;\n\n## gn\nCOPY --from=gn /gn/gn /usr/local/bin/gn\nRUN chmod +x /usr/local/bin/gn && gn --version\n\n# hsdis-<arch>.so\nCOPY --from=hsdis /tmp/hsdis /tmp/hsdis\nRUN set -eux; \\\n    \\\n    case $(uname -m) in \\\n        x86_64) \\\n            export ARCH=amd64; \\\n            export TARGETARCH=amd64; \\\n        ;; \\\n        aarch64) \\\n            export ARCH=aarch64; \\\n            export TARGETARCH=arm64; \\\n        ;; \\\n        *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac; \\\n    \\\n    mkdir -p /usr/lib/jvm/java-11-openjdk-${TARGETARCH}/lib; \\\n    cp /tmp/hsdis/hsdis-${ARCH}.so /usr/lib/jvm/java-11-openjdk-${TARGETARCH}/lib/server/; \\\n    cp /tmp/hsdis/hsdis-${ARCH}.so /usr/lib/jvm/java-11-openjdk-${TARGETARCH}/lib/; \\\n    rm -rf /tmp/hsdis;\n\n## go\nENV GOVERSION=1.14.4\nENV GOPATH=/root/go\n\nRUN set -eux; \\\n\n    case $(uname -m) in \\\n        x86_64) \\\n            export TARGETARCH=amd64; \\\n        ;; \\\n        aarch64) \\\n            export TARGETARCH=arm64; \\\n        ;; \\\n        *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac; \\\n    curl -f -LO https://dl.google.com/go/go${GOVERSION}.linux-${TARGETARCH}.tar.gz; \\\n    tar -C /usr/local -xzf go${GOVERSION}.linux-${TARGETARCH}.tar.gz; \\\n    rm go${GOVERSION}.linux-${TARGETARCH}.tar.gz;\n\nENV PATH=\"/usr/local/go/bin:/root/go/bin:${PATH}\"\n\n## bazel\nRUN set -eux; \\\n    \\\n    case $(uname -m) in \\\n        x86_64) BAZELISK_URL=https://github.com/bazelbuild/bazelisk/releases/download/v1.5.0/bazelisk-linux-amd64;; \\\n        aarch64) BAZELISK_URL=https://github.com/Tick-Tocker/bazelisk-arm64/releases/download/arm64/bazelisk-linux-arm64;; \\\n        *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac; \\\n    wget -O /usr/local/bin/bazel ${BAZELISK_URL}; \\\n    chmod +x /usr/local/bin/bazel; \\\n    \\\n    go get github.com/bazelbuild/buildtools/buildifier; \\\n    export BUILDIFIER_BIN=${GOPATH}/bin/buildifier; \\\n    \\\n    go get github.com/bazelbuild/buildtools/buildozer; \\\n    export BUILDOZER_BIN=${GOPATH}/bin/buildozer; \\\n    \\\n    rm -rf ${GOPATH}/src\n\n\nENV LLVM_VERSION=9.0.0\nENV LLVM_PATH=/usr/lib/llvm-9\n\nRUN set -eux; \\\n\n    case $(uname -m) in \\\n        x86_64) export LLVM_RELEASE=clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-18.04;; \\\n        aarch64) export LLVM_RELEASE=clang+llvm-${LLVM_VERSION}-aarch64-linux-gnu;; \\\n        *) echo \"unsupported architecture\"; exit 1 ;; \\\n    esac; \\\n\n    curl -f -LO \"https://releases.llvm.org/${LLVM_VERSION}/${LLVM_RELEASE}.tar.xz\"; \\\n    tar Jxf \"${LLVM_RELEASE}.tar.xz\"; \\\n    mv \"./${LLVM_RELEASE}\" ${LLVM_PATH}; \\\n    chown -R root:root ${LLVM_PATH}; \\\n    rm \"./${LLVM_RELEASE}.tar.xz\"; \\\n\n    echo \"${LLVM_PATH}/lib\" > /etc/ld.so.conf.d/llvm.conf; \\\n    ldconfig;\n\nENV PATH=\"${LLVM_PATH}/bin:${PATH}\""
}