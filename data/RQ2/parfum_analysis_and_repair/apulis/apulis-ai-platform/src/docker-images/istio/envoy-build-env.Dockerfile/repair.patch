diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apulis/apulis-ai-platform/src/docker-images/istio/envoy-build-env.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apulis/apulis-ai-platform/src/docker-images/istio/envoy-build-env.Dockerfile/repaired.Dockerfile
index 3fd4f33..1adcdf7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apulis/apulis-ai-platform/src/docker-images/istio/envoy-build-env.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apulis/apulis-ai-platform/src/docker-images/istio/envoy-build-env.Dockerfile/repaired.Dockerfile
@@ -18,10 +18,10 @@ RUN set -eux; \
 # build hsdis-<arch>.so
 # see https://metebalci.com/blog/how-to-build-the-hsdis-disassembler-plugin-on-ubuntu-18/
 RUN set -eux; \
-    \
+
     echo "deb-src http://deb.debian.org/debian buster main" >> /etc/apt/sources.list; \
     apt-get update; \
-    \
+
     case $(uname -m) in \
         x86_64) \
             export ARCH=amd64; \
@@ -33,17 +33,17 @@ RUN set -eux; \
         ;; \
         *) echo "unsupported architecture"; exit 1 ;; \
     esac; \
-    \
-    mkdir -p /tmp/jdk && cd /tmp/jdk;  \
+
+    mkdir -p /tmp/jdk && cd /tmp/jdk; \
     apt-get source openjdk-11-jdk-headless; \
     cd $(ls -b | head -1)/src/utils/hsdis; \
-    \
+
     wget https://ftp.gnu.org/gnu/binutils/binutils-2.32.tar.gz; \
-    tar -xzf binutils-2.32.tar.gz; \
+    tar -xzf binutils-2.32.tar.gz; rm binutils-2.32.tar.gz \
     export BINUTILS=binutils-2.32; \
-    sed -i -e 's/app_data->dfn = disassembler(native_bfd)/app_data->dfn = disassembler(bfd_get_arch(native_bfd),bfd_big_endian(native_bfd),bfd_get_mach(native_bfd),native_bfd)/g' hsdis.c;\
+    sed -i -e 's/app_data->dfn = disassembler(native_bfd)/app_data->dfn = disassembler(bfd_get_arch(native_bfd),bfd_big_endian(native_bfd),bfd_get_mach(native_bfd),native_bfd)/g' hsdis.c; \
     make all64; \
-    \
+
     mkdir -p /tmp/hsdis; \
     cp build/linux-${ARCH}/hsdis-${ARCH}.so /tmp/hsdis; \
     rm -rf /tmp/jdk; \
@@ -54,9 +54,9 @@ FROM ubuntu:18.04
 ENV DEBIAN_FRONTEND noninteractive
 
 RUN set -eux; \
-    \
+
     apt-get update; \
-    apt-get install -y \
+    apt-get install --no-install-recommends -y \
     build-essential \
     apt-utils \
     unzip \
@@ -109,7 +109,7 @@ ENV GOVERSION=1.14.4
 ENV GOPATH=/root/go
 
 RUN set -eux; \
-    \
+
     case $(uname -m) in \
         x86_64) \
             export TARGETARCH=amd64; \
@@ -119,7 +119,7 @@ RUN set -eux; \
         ;; \
         *) echo "unsupported architecture"; exit 1 ;; \
     esac; \
-    curl -LO https://dl.google.com/go/go${GOVERSION}.linux-${TARGETARCH}.tar.gz; \
+    curl -f -LO https://dl.google.com/go/go${GOVERSION}.linux-${TARGETARCH}.tar.gz; \
     tar -C /usr/local -xzf go${GOVERSION}.linux-${TARGETARCH}.tar.gz; \
     rm go${GOVERSION}.linux-${TARGETARCH}.tar.gz;
 
@@ -149,19 +149,19 @@ ENV LLVM_VERSION=9.0.0
 ENV LLVM_PATH=/usr/lib/llvm-9
 
 RUN set -eux; \
-    \
+
     case $(uname -m) in \
         x86_64) export LLVM_RELEASE=clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-18.04;; \
         aarch64) export LLVM_RELEASE=clang+llvm-${LLVM_VERSION}-aarch64-linux-gnu;; \
         *) echo "unsupported architecture"; exit 1 ;; \
     esac; \
-    \
-    curl -LO  "https://releases.llvm.org/${LLVM_VERSION}/${LLVM_RELEASE}.tar.xz"; \
+
+    curl -f -LO "https://releases.llvm.org/${LLVM_VERSION}/${LLVM_RELEASE}.tar.xz"; \
     tar Jxf "${LLVM_RELEASE}.tar.xz"; \
     mv "./${LLVM_RELEASE}" ${LLVM_PATH}; \
     chown -R root:root ${LLVM_PATH}; \
     rm "./${LLVM_RELEASE}.tar.xz"; \
-    \
+
     echo "${LLVM_PATH}/lib" > /etc/ld.so.conf.d/llvm.conf; \
     ldconfig;