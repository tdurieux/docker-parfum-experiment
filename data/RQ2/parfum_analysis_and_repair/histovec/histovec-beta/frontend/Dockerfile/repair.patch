diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/histovec/histovec-beta/frontend/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/histovec/histovec-beta/frontend/Dockerfile/repaired.Dockerfile
index 8504dd9..fbc83d5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/histovec/histovec-beta/frontend/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/histovec/histovec-beta/frontend/Dockerfile/repaired.Dockerfile
@@ -21,7 +21,7 @@ ENV APP_VERSION ${app_ver}
 WORKDIR /$app_path
 
 RUN apt-get update
-RUN apt-get install python3 build-essential -y
+RUN apt-get install --no-install-recommends python3 build-essential -y && rm -rf /var/lib/apt/lists/*;
 
 # update debian w/proxy & mirror then installs git in case of git dependencies
 RUN if [ ! -z "${NPM_GIT}" ]; then \
@@ -29,7 +29,7 @@ RUN if [ ! -z "${NPM_GIT}" ]; then \
       (set -x && [ -z "$MIRROR_DEBIAN" ] || sed -i.orig -e "s|http://deb.debian.org\([^[:space:]]*\)|$MIRROR_DEBIAN/debian11|g ; s|http://security.debian.org\([^[:space:]]*\)|$MIRROR_DEBIAN/debian11-security|g" /etc/apt/sources.list) ; \
       apt-get update; \
       buildDeps="git"; \
-      apt-get install -qy --no-install-recommends $buildDeps ; \
+      apt-get install -qy --no-install-recommends $buildDeps ; rm -rf /var/lib/apt/lists/*; \
       git config --global url."https://".insteadOf git:// ; \
    fi
 
@@ -50,9 +50,9 @@ RUN if [ ! -z "$http_proxy" ] ; then \
 RUN npm config set fetch-timeout 900000
 
 RUN echo "NPM_LATEST = ${NPM_LATEST}"
-RUN if [ "${NPM_LATEST}" = "true" ]; then\
+RUN if [ "${NPM_LATEST}" = "true" ]; then \
     echo "Let's install npm latest version"; \
-    npm i npm@latest -g;  \
+    npm i npm@latest -g; npm cache clean --force; \
   else \
     echo "Don't install npm latest version"; \
   fi
@@ -61,10 +61,10 @@ COPY package.json ./
 RUN npm --no-git-tag-version version ${APP_VERSION}
 
 RUN echo "NPM_VERBOSE = ${NPM_VERBOSE}"
-RUN if [ "${NPM_VERBOSE}" = "true" ]; then\
-    npm install --verbose;  \
+RUN if [ "${NPM_VERBOSE}" = "true" ]; then \
+    npm install --verbose; npm cache clean --force; \
   else \
-     npm install; \
+     npm install; npm cache clean --force; \
   fi
 
 # RUN npm config set audit-level high