{
  "startTime": 1674215940453,
  "endTime": 1674215941126,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 20,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 34,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "# https://typeofnan.dev/how-to-serve-a-vue-app-with-nginx-in-docker/\n\n# Name the node stage \"builder\"\nFROM node:lts-alpine AS builder\n\n# Set working directory\nWORKDIR /app\n\n# Copy all files from current directory to working dir in image\nCOPY . .\n\n# install node modules and build assets\nRUN yarn install && yarn build && yarn cache clean;\n\n\n# nginx state for serving content\nFROM nginx:stable-alpine\nLABEL maintainer=\"Sebastian Spreizer <spreizer@web.de>\"\n\nRUN apk add --no-cache jq bash\n\n# Add default to available sites\nCOPY ./docker/nginx-default.conf /etc/nginx/conf.d/default.conf\n\n# Remove default nginx static assets\nRUN rm -rf /usr/share/nginx/html/*\n\n# Copy static from builder stage\nCOPY --from=builder /app/nest_desktop/app/ /usr/share/nginx/html/\n\n# Run nginx as non-root\nRUN chmod -R 777 /var/cache/nginx\n\nRUN touch /var/run/nginx.pid && \\\n    chmod -R 777 /var/run/nginx.pid\n\nEXPOSE 8000\n\n# Copy entrypoint.sh and make it executable\nCOPY ./docker/entrypoint.sh /usr/local/bin/entrypoint.sh\nRUN chmod +x /usr/local/bin/entrypoint.sh\n\n# Define the entrypoint\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\n\n# Containers run nginx with global directives and daemon off\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}