{
  "startTime": 1674248989251,
  "endTime": 1674248990274,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 18,
        "columnStart": 7,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:trusty-20190515\n\nMAINTAINER Kevin Littlejohn <kevin@littlejohn.id.au>, \\\n    Alex Fraser <alex@vpac-innovations.com.au>\n\n# Install base dependencies.\nWORKDIR /root\nRUN sed -i 's/^# deb-src/deb-src/' /etc/apt/sources.list\nRUN export DEBIAN_FRONTEND=noninteractive TERM=linux \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        dpkg-dev \\\n        iptables \\\n        libssl-dev \\\n        patch \\\n        squid-langpack \\\n        ssl-cert \\\n    && apt-get source -y squid3 squid-langpack \\\n    && apt-get build-dep -y squid3 squid-langpack && rm -rf /var/lib/apt/lists/*;\n\n# Customise and build Squid.\n# It's silly, but run dpkg-buildpackage again if it fails the first time. This\n# is needed because sometimes the `configure` script is busy when building in\n# Docker after autoconf sets its mode +x.\nCOPY squid3.patch mime.conf /root/\nRUN cd squid3-3.* \\\n    && patch -p1 < /root/squid3.patch \\\n    && export NUM_PROCS=`grep -c ^processor /proc/cpuinfo` \\\n    && (dpkg-buildpackage -b -j${NUM_PROCS} \\\n        || dpkg-buildpackage -b -j${NUM_PROCS}) \\\n    && DEBIAN_FRONTEND=noninteractive TERM=linux dpkg -i \\\n        ../squid3-common_3.*_all.deb \\\n        ../squid3_3.*.deb \\\n    && mkdir -p /etc/squid3/ssl_cert \\\n    && cat /root/mime.conf >> /usr/share/squid3/mime.conf\n\nCOPY squid.conf /etc/squid3/squid.conf\nCOPY start_squid.sh /usr/local/bin/start_squid.sh\n\nVOLUME /var/spool/squid3 /etc/squid3/ssl_cert\nEXPOSE 3128 3129 3130\n\nCMD [\"/usr/local/bin/start_squid.sh\"]\n"
}