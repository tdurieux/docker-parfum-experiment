diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/silarsis/personal_dev/docker/dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/silarsis/personal_dev/docker/dev/Dockerfile/repaired.Dockerfile
index 4729a31..544e647 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/silarsis/personal_dev/docker/dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/silarsis/personal_dev/docker/dev/Dockerfile/repaired.Dockerfile
@@ -4,40 +4,40 @@ MAINTAINER Kevin Littlejohn <kevin@littlejohn.id.au>
 # Add docker apt repository
 RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9 \
   && echo deb http://get.docker.io/ubuntu docker main > /etc/apt/sources.list.d/docker.list
-RUN apt-get -yq update && apt-get -yq upgrade && apt-get -yq install curl \
-  && curl -sL https://deb.nodesource.com/setup | bash - \
-  && apt-get -yq install less vim sudo strace lsof tmux make tcpdump netcat \
+RUN apt-get -yq update && apt-get -yq upgrade && apt-get -yq --no-install-recommends install curl \
+  && curl -f -sL https://deb.nodesource.com/setup | bash - \
+  && apt-get -yq --no-install-recommends install less vim sudo strace lsof tmux make tcpdump netcat \
     telnet dnsutils unzip groff jq uuid-runtime wget \
     gcc zlib1g-dev libxml2-dev libxslt1-dev libssl-dev libreadline6-dev \
     libyaml-0-2 libcurl4-gnutls-dev libexpat1-dev gettext libz-dev \
     bash-completion libyaml-dev lxc-docker gnupg nodejs \
-  && apt-get clean
+  && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Git from source after a security issue
 RUN cd /usr/local/src \
   && wget https://www.kernel.org/pub/software/scm/git/git-2.2.2.tar.gz \
   && tar zxf git*.tar.gz \
   && cd git* \
-  && ./configure && make && make install \
-  && rm -rf /usr/local/src/git*
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install \
+  && rm -rf /usr/local/src/git* && rm git*.tar.gz
 
 # Python
 ENV PYTHON_VER=2.7.9
 RUN cd /usr/local/src \
-  && curl -sSL https://www.python.org/ftp/python/$PYTHON_VER/Python-$PYTHON_VER.tgz | tar zx \
+  && curl -f -sSL https://www.python.org/ftp/python/$PYTHON_VER/Python-$PYTHON_VER.tgz | tar zx \
   && cd Python-$PYTHON_VER \
-  && ./configure && make && make install \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install \
   && cd /tmp \
-  && curl -O https://bootstrap.pypa.io/get-pip.py && python /tmp/get-pip.py \
+  && curl -f -O https://bootstrap.pypa.io/get-pip.py && python /tmp/get-pip.py \
   && rm -rf /usr/local/src/Python-$PYTHON_VER /tmp/get-pip.py
-RUN pip install awscli docker-compose
+RUN pip install --no-cache-dir awscli docker-compose
 
 # Keybase, for gpg
-RUN npm install -g keybase-installer
+RUN npm install -g keybase-installer && npm cache clean --force;
 RUN keybase-installer
 
 # docker-machine
-RUN curl -sLo /usr/local/bin/docker-machine $(curl -s https://api.github.com/repos/docker/machine/releases | grep browser_download_url | grep docker-machine_darwin-amd64 | head -1 | awk -F': ' '{ print $2 }' | sed 's/^"\(.*\)"$/\1/')
+RUN curl -f -sLo /usr/local/bin/docker-machine $( curl -f -s https://api.github.com/repos/docker/machine/releases | grep browser_download_url | grep docker-machine_darwin-amd64 | head -1 | awk -F': ' '{ print $2 }' | sed 's/^"\(.*\)"$/\1/')
 
 # Local scripts for configuration
 ADD drun_profile.sh /etc/profile.d/drun.sh