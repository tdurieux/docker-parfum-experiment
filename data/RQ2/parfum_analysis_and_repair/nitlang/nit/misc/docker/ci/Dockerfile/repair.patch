diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nitlang/nit/misc/docker/ci/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nitlang/nit/misc/docker/ci/Dockerfile/repaired.Dockerfile
index 69dbc45..25f0640 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nitlang/nit/misc/docker/ci/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nitlang/nit/misc/docker/ci/Dockerfile/repaired.Dockerfile
@@ -69,9 +69,9 @@ RUN dpkg --add-architecture i386 \
 		libc6:i386 \
 		libstdc++6:i386 \
 		zlib1g:i386 \
-		# TODO neo4j mongodb neo4j emscripten test_glsl_validation
-	&& curl -sL https://deb.nodesource.com/setup_8.x | bash - \
-	&& apt-get install -y nodejs \
+		# TODO neo4j mongodb neo4j emscripten test_glsl_validation \
+	&& curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \
+	&& apt-get install --no-install-recommends -y nodejs \
 	&& rm -rf /var/lib/apt/lists/*
 
 # Install OpenGL validator
@@ -85,11 +85,11 @@ RUN git clone https://github.com/KhronosGroup/glslang.git --depth=1 \
 # Install android sdk/ndk
 RUN mkdir -p /opt \
 	&& cd /opt \
-	# Android SDK
-	&& curl https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -o android-sdk-linux.zip \
+	# Android SDK \
+	&& curl -f https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -o android-sdk-linux.zip \
 	&& unzip -q android-sdk-linux.zip -d android-sdk-linux \
 	# Download a specific ndk version because old versions are not available trough sdkmanager
-	&& curl https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip -o android-ndk-linux.zip \
+	&& curl -f https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip -o android-ndk-linux.zip \
 	&& unzip -q android-ndk-linux.zip \
 	&& mv android-ndk-r17c android-sdk-linux/ndk-bundle \
 	&& rm android-sdk-linux.zip android-ndk-linux.zip
@@ -105,10 +105,10 @@ ENV JNI_LIB_PATH=$JAVA_HOME/jre/lib/amd64/server/
 ENV LD_LIBRARY_PATH=$JAVA_HOME/jre/lib/amd64/server/
 
 # Used by CI to render junit files to html
-RUN pip3 install junit2html
+RUN pip3 install --no-cache-dir junit2html
 
 #  Prepare to install npm (npm is not packaged for debian:stretch)
-RUN npm install pug-cli -g
+RUN npm install pug-cli -g && npm cache clean --force;
 
 # Some tools, like gradle, need an explitit UTF8 environement
 ENV LANG C.UTF-8