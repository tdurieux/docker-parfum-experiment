{
  "startTime": 1674252837187,
  "endTime": 1674252838274,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This is a basic install of Nit on a debian base.\n\nFROM debian:stretch\nMAINTAINER Jean Privat <jean@pryen.org>\n\n# Install dependencies\nRUN dpkg --add-architecture i386 \\\n\t&& apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n\t\t# Recomanded builds pakages\n\t\tbuild-essential \\\n\t\tccache \\\n\t\tlibgc-dev \\\n\t\tgraphviz \\\n\t\tlibunwind-dev \\\n\t\tpkg-config \\\n\t\tlibicu-dev \\\n\t\t# Get the code!\n\t\tgit \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tlibcurl4-openssl-dev \\\n\t\t# For nit manpages :)\n\t\tman \\\n\t\t# Get pip3 for junit2html\n\t\tpython3-dev \\\n\t\tpython3-pip \\\n\t\tpython3-setuptools \\\n\t\tpython3-wheel \\\n\t\t# Packages needed for lib/\n\t\tgettext \\\n\t\tlibegl1-mesa-dev \\\n\t\tlibevent-dev \\\n\t\tlibgles1-mesa-dev \\\n\t\tlibgles2-mesa-dev \\\n\t\tlibgtk-3-dev \\\n\t\tlibgmp-dev \\\n\t\tlibmongoc-dev \\\n\t\tlibbson-dev libssl-dev \\\n\t\tlibncurses5-dev \\\n\t\tlibpq-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsdl-image1.2-dev \\\n\t\tlibsdl-ttf2.0-dev \\\n\t\tlibsdl1.2-dev \\\n\t\tlibsdl2-dev \\\n\t\tlibsdl2-image-dev \\\n\t\tlibsdl2-mixer-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibx11-dev \\\n\t\tlibxdg-basedir-dev \\\n\t\tnetcat \\\n\t\tpsmisc \\\n\t\t# Packages needed for contrib, platforms and FFI\n\t\tant \\\n\t\tclang \\\n\t\tcmake \\\n\t\tdefault-jdk \\\n\t\tfile \\\n\t\tgnupg \\\n\t\tgnuplot-nox \\\n\t\timagemagick \\\n\t\tinkscape \\\n\t\tlibopenmpi-dev \\\n\t\ttime \\\n\t\tunzip \\\n\t\tvalgrind \\\n\t\tzipalign \\\n\t\t# Android\n\t\tlibc6:i386 \\\n\t\tlibstdc++6:i386 \\\n\t\tzlib1g:i386 \\\n\t\t# TODO neo4j mongodb neo4j emscripten test_glsl_validation \\\n\t&& curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n\t&& apt-get install --no-install-recommends -y nodejs \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Install OpenGL validator\nRUN git clone https://github.com/KhronosGroup/glslang.git --depth=1 \\\n\t&& mkdir -p glslang/build \\\n\t&& cd glslang/build \\\n\t&& cmake .. \\\n\t&& make \\\n\t&& make install\n\n# Install android sdk/ndk\nRUN mkdir -p /opt \\\n\t&& cd /opt \\\n\t# Android SDK \\\n\t&& curl -f https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -o android-sdk-linux.zip \\\n\t&& unzip -q android-sdk-linux.zip -d android-sdk-linux \\\n\t# Download a specific ndk version because old versions are not available trough sdkmanager\n\t&& curl -f https://dl.google.com/android/repository/android-ndk-r17c-linux-x86_64.zip -o android-ndk-linux.zip \\\n\t&& unzip -q android-ndk-linux.zip \\\n\t&& mv android-ndk-r17c android-sdk-linux/ndk-bundle \\\n\t&& rm android-sdk-linux.zip android-ndk-linux.zip\nRUN cd /opt \\\n\t&& yes | android-sdk-linux/tools/bin/sdkmanager \"build-tools;27.0.0\" \"cmake;3.6.4111459\" platform-tools tools  --verbose\\\n\t&& yes | android-sdk-linux/tools/bin/sdkmanager --licenses --verbose\n# TODO: predownload bwdgc and gradle?\n\n# Setup environment variables\nENV ANDROID_HOME=/opt/android-sdk-linux/\nENV JAVA_HOME=/usr/lib/jvm/default-java/\nENV JNI_LIB_PATH=$JAVA_HOME/jre/lib/amd64/server/\nENV LD_LIBRARY_PATH=$JAVA_HOME/jre/lib/amd64/server/\n\n# Used by CI to render junit files to html\nRUN pip3 install --no-cache-dir junit2html\n\n#  Prepare to install npm (npm is not packaged for debian:stretch)\nRUN npm install pug-cli -g && npm cache clean --force;\n\n# Some tools, like gradle, need an explitit UTF8 environement\nENV LANG C.UTF-8\n"
}