{
  "startTime": 1674251463754,
  "endTime": 1674251464852,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 15,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# synchronize-marker:docker-cache-share:begin\nFROM node:16-alpine as buildstep\nENV CI=true\nWORKDIR /workspace\nCOPY package.json package-lock.json /workspace/\nRUN npm ci --prefer-offline --no-audit --ignore-scripts\nRUN find node_modules -path '*/esbuild/install.js' | xargs -rt -n 1 node\nRUN npm run ngcc\n# synchronize-marker:docker-cache-share:end\nCOPY tsconfig.app.json tsconfig.json ngsw-config.json .browserslistrc angular.json .eslintrc.json /workspace/\nCOPY eslint-rules /workspace/eslint-rules\nCOPY schematics /workspace/schematics\nCOPY projects /workspace/projects\nCOPY src /workspace/src\nCOPY scripts /workspace/scripts/\nRUN npm run postinstall\nARG serviceWorker\nRUN node schematics/customization/service-worker ${serviceWorker} || true\nCOPY templates/webpack/* /workspace/templates/webpack/\nARG testing=false\nENV TESTING=${testing}\nARG activeThemes=\nRUN if [ ! -z \"${activeThemes}\" ]; then npm config set active-themes=\"${activeThemes}\"; fi\nRUN npm run build:multi client -- --deploy-url=DEPLOY_URL_PLACEHOLDER\nCOPY tsconfig.server.json server.ts /workspace/\nRUN npm run build:multi server\nRUN node scripts/compile-docker-scripts\nCOPY dist/* /workspace/dist/\n\nFROM node:16-alpine\nCOPY --from=buildstep /workspace/dist /dist\nRUN cd dist && npm install && npm cache clean --force;\nARG displayVersion=\nLABEL displayVersion=\"${displayVersion}\"\nENV DISPLAY_VERSION=${displayVersion} NODE_PATH=/dist/node_modules PATH=$PATH:/dist/node_modules/.bin\nEXPOSE 4200\nRUN mkdir /.pm2 && chmod 777 -Rf /.pm2 && touch /dist/ecosystem.yml && chmod 777 -f /dist/ecosystem.yml\nUSER nobody\nHEALTHCHECK --interval=60s --timeout=20s --start-period=2s CMD node /dist/healthcheck.js\nENTRYPOINT [\"sh\",\"/dist/entrypoint.sh\"]\n"
}