{
  "startTime": 1674254432445,
  "endTime": 1674254433140,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 70,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim\n\n# Pick run-time library packages which match the development packages\n# used by the ci-builder image. \"curl\" is included, to allow node-zone.sh\n# mappings to directly query AWS/Azure/GCP metadata APIs.\nRUN apt update -y \\\n && apt install --no-install-recommends -y \\\n      ca-certificates \\\n      curl \\\n      gpg \\\n && echo \"Add NodeSource keyring for more recent nodejs packages\" \\\n && export NODE_KEYRING=/usr/share/keyrings/nodesource.gpg \\\n && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource.gpg.key | gpg --batch --dearmor | tee \"$NODE_KEYRING\" >/dev/null \\\n && gpg --batch --no-default-keyring --keyring \"$NODE_KEYRING\" --list-keys \\\n && echo \"deb [signed-by=$NODE_KEYRING] https://deb.nodesource.com/node_14.x bullseye main\" | tee /etc/apt/sources.list.d/nodesource.list \\\n && apt update -y \\\n && apt upgrade -y \\\n && apt install --no-install-recommends -y \\\n      jq \\\n      nodejs \\\n && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f -o docker-cli.deb 'https://download.docker.com/linux/debian/dists/bullseye/pool/stable/amd64/docker-ce-cli_20.10.7~3-0~debian-bullseye_amd64.deb' && \\\n    dpkg -i docker-cli.deb && \\\n    rm docker-cli.deb\n\n# Create a non-privileged \"flow\" user.\nRUN useradd flow --create-home --shell /usr/sbin/nologin\n\n# Copy binaries & libraries to the image, owned by root.\nUSER root\nCOPY bin/* /usr/local/bin/\n\nUSER flow\nWORKDIR /home/flow/project\n"
}