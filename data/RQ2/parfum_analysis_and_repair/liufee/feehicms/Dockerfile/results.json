{
  "startTime": 1674252418872,
  "endTime": 1674252420500,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 85,
        "columnEnd": 171
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 85,
        "columnEnd": 171
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 452
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 523
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 269
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 100,
        "columnEnd": 150
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 95,
        "columnEnd": 149
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:latest\nMAINTAINER liufee job@feehi.com\n\n\n#php版本,因为php版本间配置文件模板不相同，此处的版本号只能为大于7.0以上版本\nARG PHP_VER=7.1.12\n#nginx版本\nARG NGINX_VER=1.12.2\n\n\n#修改dns地址\nRUN echo nameserver 223.5.5.5 > /etc/resolv.conf\n\n\n#更换yum源\nRUN mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup && curl -f -o /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-7.repo\n\n\n#安装基础工具\nRUN yum install vim wget git net-tools -y && rm -rf /var/cache/yum\n\n\n#安装supervisor\nRUN yum install python-setuptools -y && easy_install supervisor && rm -rf /var/cache/yum\n\n\n#安装php\nRUN yum install epel-release -y && yum update -y \\\n    && yum -y install pcre pcre-devel zlib zlib-devel openssl openssl-devel libxml2 libxml2-devel libjpeg libjpeg-devel libpng libpng-devel curl curl-devel libicu libicu-devel libmcrypt  libmcrypt-devel freetype freetype-devel libmcrypt libmcrypt-devel autoconf gcc-c++ && rm -rf /var/cache/yum\nWORKDIR /usr/src\nRUN curl -f -o php.tar.gz https://php.net/get/php-${PHP_VER}.tar.gz/from/this/mirror -L && mkdir php && tar -xzvf php.tar.gz -C ./php --strip-components 1 && rm php.tar.gz\nWORKDIR php\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/php --with-config-file-path=/etc/php --enable-soap --enable-mbstring=all --enable-sockets --enable-fpm --with-gd --with-freetype-dir=/usr/include/freetype2/freetype --with-jpeg-dir=/usr/lib64 --with-zlib --with-iconv --enable-libxml --enable-xml --enable-intl --enable-zip --enable-pcntl --enable-bcmath --enable-maintainer-zts --with-curl --with-mcrypt --with-openssl --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd \\\n    && make && make install \\\n    && mkdir /etc/php \\\n    && cp /usr/src/php/php.ini-development /etc/php/php.ini \\\n    && cp /usr/src/php/sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm && chmod +x /etc/init.d/php-fpm\nWORKDIR /usr/local/php/etc\nRUN cp php-fpm.conf.default php-fpm.conf \\\n    && sed -i \"s/;daemonize = yes/daemonize = no/\" php-fpm.conf \\\n    && cp ./php-fpm.d/www.conf.default ./php-fpm.d/www.conf \\\n    && sed -i \"s/export PATH/PATH=\\/usr\\/local\\/php\\/bin:\\$PATH\\nexport PATH/\" /etc/profile \\\n    && sed -i \"s/export PATH/PATH=\\/etc\\/init.d:\\$PATH\\nexport PATH/\" /etc/profile\n\n\n#安装nginx\nWORKDIR /usr/src\nRUN curl -f -o nginx.tar.gz https://nginx.org/download/nginx-${NGINX_VER}.tar.gz && mkdir nginx && tar -zxvf nginx.tar.gz -C ./nginx --strip-components 1 && rm nginx.tar.gz\nWORKDIR nginx\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/lock/nginx.lock --user=nginx --group=nginx --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --http-client-body-temp-path=/tmp/nginx/client/ --http-proxy-temp-path=/tmp/nginx/proxy/ --http-fastcgi-temp-path=/tmp/nginx/fcgi/ --with-pcre --with-http_dav_module \\\n     && make && make install \\\n     && useradd nginx \\\n     && mkdir -p -m 777 /tmp/nginx \\\n     && echo \"#!/bin/sh\" > /etc/init.d/nginx \\\n     && echo \"#description: Nginx web server.\" >> /etc/init.d/nginx \\\n     && echo -e \"case \\$1 in \\n\\\n            restart): \\n\\\n                /usr/local/nginx/sbin/nginx -s reload \\n\\\n                ;; \\n\\\n            stop): \\n\\\n                /usr/local/nginx/sbin/nginx -s stop \\n\\\n                ;; \\n\\\n            *): \\n\\\n                /usr/local/nginx/sbin/nginx \\n\\\n                ;; \\n\\\n        esac \\n\" >> /etc/init.d/nginx \\\n     && chmod +x /etc/init.d/nginx \\\n     && sed -i \"64a         }\" /etc/nginx/nginx.conf \\\n     && sed -i \"64a             include        fastcgi_params;\" /etc/nginx/nginx.conf \\\n     && sed -i \"64a             fastcgi_param  SCRIPT_FILENAME  \\$document_root\\$fastcgi_script_name;\" /etc/nginx/nginx.conf \\\n     && sed -i \"64a             fastcgi_index  index.php;\" /etc/nginx/nginx.conf \\\n     && sed -i \"64a             fastcgi_pass   127.0.0.1:9000;\" /etc/nginx/nginx.conf \\\n     && sed -i \"64a             root           html/frontend/web;\" /etc/nginx/nginx.conf \\\n     && sed -i \"64a             location ~ \\.php$ {\" /etc/nginx/nginx.conf \\\n     && sed -i \"3a daemon off;\" /etc/nginx/nginx.conf \\\n     && echo \"<?php phpinfo()?>\" > /usr/local/nginx/html/index.php \\\n     && sed -i '45s/html;/html\\/frontend\\/web;/g' /etc/nginx/nginx.conf \\\n     && sed -i '46s/index  index.html index.htm;/index  index.php index.html index.htm;/g' /etc/nginx/nginx.conf \\\n     && sed -i \"46a try_files \\$uri \\$uri/ /index.php?\\$args;\" /etc/nginx/nginx.conf\n\n\n#安装mysql\nRUN curl -f -o mysql-server.rpm https://repo.mysql.com//mysql57-community-release-el7-11.noarch.rpm\nRUN rpm -ivh mysql-server.rpm\nRUN /usr/bin/yum install mysql-community-server -y\nVOLUME ['/mysql']\nRUN sed -i \"/datadir=/s/\\/var\\/lib\\/mysql/\\/mysql/g\" /etc/my.cnf && sed -i \"/log-error=/s/\\/var\\/log\\/mysqld.log/\\/var\\/log\\/mysql\\/mysqld.log/g\" /etc/my.cnf && echo \"user=root\" >> /etc/my.cnf\nRUN echo -e \"#!/bin/sh \\n\\\n    files=\\`ls /mysql\\` \\n\\\n    if [ -z \\\"\\$files\\\" ];then \\n\\\n        if [ ! \\${MYSQL_PASSWORD} ]; then \\n\\\n            MYSQL_PASSWORD='123456' \\n\\\n        fi \\n\\\n        /usr/sbin/mysqld --initialize \\n\\\n        MYSQLOLDPASSWORD=\\`awk -F \\\"localhost: \\\" '/A temporary/{print \\$2}' /var/log/mysql/mysqld.log\\` \\n\\\n        /usr/sbin/mysqld & \\n\\\n        echo -e \\\"[client] \\\\\\n  password=\\\"\\${MYSQLOLDPASSWORD}\\\" \\\\\\n user=root\\\" > ~/.my.cnf \\n\\\n        sleep 5s \\n\\\n        /usr/bin/mysql --connect-expired-password -e \\\"set password=password('\\$MYSQL_PASSWORD');update mysql.user set host='%' where user='root' && host='localhost';flush privileges;create database cms DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\\\" \\n\\\n        echo -e \\\"[client] \\\\\\n  password=\\\"\\${MYSQL_PASSWORD}\\\" \\\\\\n user=root\\\" > ~/.my.cnf \\n\\\n        /usr/local/php/bin/php /usr/local/nginx/html/yii migrate/up --interactive=0 \\n\\\n    else \\n\\\n        rm -rf /var/lib/mysql/mysql.sock.locl \\n\\\n        /usr/sbin/mysqld \\n\\\n    fi\" > /mysql.sh\nRUN chmod +x /mysql.sh && ln -s /var/lib/mysql/mysql.sock /tmp/mysql.sock && mkdir /var/log/mysql\n\n\n#安装必要的服务\nRUN yum install vixie-cron crontabs -y \\\n     && cd /usr/src && /usr/local/php/bin/php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" && /usr/local/php/bin/php composer-setup.php  --install-dir=/usr/local/bin --filename=composer && rm -rf composer-setup.php && /usr/local/php/bin/php /usr/local/bin/composer config -g repo.packagist composer https://packagist.phpcomposer.com && rm -rf /var/cache/yum\n\n\n#部署feehicms\nVOLUME ['/usr/local/nginx/html']\nWORKDIR '/usr/local/nginx'\nRUN rm -rf html && git clone https://git@github.com/liufee/cms.git html \\\n     && cd html \\\n     && /usr/local/php/bin/php /usr/local/bin/composer install -vvv\nRUN cd /usr/local/nginx/html && /usr/local/php/bin/php ./init --env=Development \\\n     && sed -i \"6s/'dsn' => 'mysql:host=localhost;dbname=yii2advanced'/'dsn' => 'mysql:host=127.0.0.1;dbname=cms'/g\" common/config/main-local.php \\\n     && sed -i \"8s/ 'password' => ''/ 'password' => '123456'/g\" common/config/main-local.php\n\n\n#配置supervisor\nRUN echo [supervisord] > /etc/supervisord.conf \\\n    && echo nodaemon=true >> /etc/supervisord.conf \\\n    \\\n    && echo [program:nginx] >> /etc/supervisord.conf \\\n    && echo command=/etc/init.d/nginx start >> /etc/supervisord.conf \\\n    \\\n    && echo [program:php-fpm] >> /etc/supervisord.conf \\\n    && echo command=/etc/init.d/php-fpm start >> /etc/supervisord.conf \\\n    \\\n    && echo [program:mysqld] >> /etc/supervisord.conf \\\n    && echo command=/bin/sh /mysql.sh >> /etc/supervisord.conf \\\n\n\n#服务器基础设置\nRUN /bin/cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n     && echo 'Asia/Shanghai' > /etc/timezonesource \\\n     && source /etc/profile\n\n\nEXPOSE 80 3306\n\n\nCMD [\"/usr/bin/supervisord\"]"
}