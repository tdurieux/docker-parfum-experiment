{
  "startTime": 1674216318784,
  "endTime": 1674216319845,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 69,
        "columnEnd": 85
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 56,
        "columnEnd": 72
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 18,
        "columnEnd": 34
      }
    }
  ],
  "repairedDockerfile": "### BASE ###\nFROM node:gallium-buster-slim AS base\n\nRUN apt-get update && apt-get install --no-install-recommends --yes openssl && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\n# Install production dependencies\nCOPY package.json yarn.lock .yarnrc.yml ./\nCOPY .yarn/ .yarn/\n\nCOPY packages/core/package.json ./packages/core/\nCOPY examples/backend/package.json ./examples/backend/\n\nRUN yarn workspaces focus @slate-yjs/example-backend --production && yarn cache clean;\n\n### BUILDER ###\nFROM base AS builder\n\n# Install all dependencies\nRUN yarn workspaces focus @slate-yjs/example-backend && yarn cache clean;\n\n# Copy source files\nCOPY config/ ./config/\nCOPY packages/core/ ./packages/core/\nCOPY examples/backend/ ./examples/backend/\n\n# Build\nRUN yarn build && yarn cache clean;\n\n### RUNNER ###\nFROM base\n\n# Copy runtime dependencies\nCOPY --from=builder /app/packages/core/dist ./packages/core/dist\nCOPY --from=builder /app/examples/backend/dist ./examples/backend/dist\n\nUSER node\n\nWORKDIR /app/examples/backend\n\nCMD [\"yarn\", \"run\", \"start\"]\n"
}