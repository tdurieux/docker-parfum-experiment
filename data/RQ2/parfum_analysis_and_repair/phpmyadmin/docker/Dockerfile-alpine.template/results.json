{
  "startTime": 1674253667936,
  "endTime": 1674253668945,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.0-%%VARIANT%%\n\n# docker-entrypoint.sh dependencies\nRUN apk add --no-cache \\\n    bash \\\n    tzdata\n\n# Install dependencies\nRUN set -ex; \\\n\n    apk add --no-cache --virtual .build-deps \\\n        bzip2-dev \\\n        freetype-dev \\\n        libjpeg-turbo-dev \\\n        libpng-dev \\\n        libwebp-dev \\\n        libxpm-dev \\\n        libzip-dev \\\n    ; \\\n\n    docker-php-ext-configure gd --with-freetype --with-jpeg --with-webp --with-xpm; \\\n    docker-php-ext-install -j \"$(nproc)\" \\\n        bz2 \\\n        gd \\\n        mysqli \\\n        opcache \\\n        zip \\\n    ; \\\n\n    runDeps=\"$( \\\n        scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \\\n            | tr ',' '\\n' \\\n            | sort -u \\\n            | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n    )\"; \\\n    apk add --no-cache --virtual .phpmyadmin-phpexts-rundeps $runDeps; \\\n    apk del --no-network .build-deps\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nENV MAX_EXECUTION_TIME 600\nENV MEMORY_LIMIT 512M\nENV UPLOAD_LIMIT 2048K\nRUN set -ex; \\\n    \\\n    { \\\n        echo 'opcache.memory_consumption=128'; \\\n        echo 'opcache.interned_strings_buffer=8'; \\\n        echo 'opcache.max_accelerated_files=4000'; \\\n        echo 'opcache.revalidate_freq=2'; \\\n        echo 'opcache.fast_shutdown=1'; \\\n    } > $PHP_INI_DIR/conf.d/opcache-recommended.ini; \\\n    \\\n    { \\\n        echo 'session.cookie_httponly=1'; \\\n        echo 'session.use_strict_mode=1'; \\\n    } > $PHP_INI_DIR/conf.d/session-strict.ini; \\\n    \\\n    { \\\n        echo 'allow_url_fopen=Off'; \\\n        echo 'max_execution_time=${MAX_EXECUTION_TIME}'; \\\n        echo 'max_input_vars=10000'; \\\n        echo 'memory_limit=${MEMORY_LIMIT}'; \\\n        echo 'post_max_size=${UPLOAD_LIMIT}'; \\\n        echo 'upload_max_filesize=${UPLOAD_LIMIT}'; \\\n    } > $PHP_INI_DIR/conf.d/phpmyadmin-misc.ini\n\n# Calculate download URL\nENV VERSION %%VERSION%%\nENV SHA256 %%SHA256%%\nENV URL https://files.phpmyadmin.net/phpMyAdmin/${VERSION}/phpMyAdmin-${VERSION}-all-languages.tar.xz\n\nLABEL org.opencontainers.image.title=\"Official phpMyAdmin Docker image\" \\\n    org.opencontainers.image.description=\"Run phpMyAdmin with Alpine, Apache and PHP FPM.\" \\\n    org.opencontainers.image.authors=\"The phpMyAdmin Team <developers@phpmyadmin.net>\" \\\n    org.opencontainers.image.vendor=\"phpMyAdmin\" \\\n    org.opencontainers.image.documentation=\"https://github.com/phpmyadmin/docker#readme\" \\\n    org.opencontainers.image.licenses=\"GPL-2.0-only\" \\\n    org.opencontainers.image.version=\"${VERSION}\" \\\n    org.opencontainers.image.url=\"https://github.com/phpmyadmin/docker#readme\" \\\n    org.opencontainers.image.source=\"https://github.com/phpmyadmin/docker.git\"\n\n# Download tarball, verify it using gpg and extract\nRUN set -ex; \\\n    apk add --no-cache --virtual .fetch-deps \\\n        gnupg \\\n    ; \\\n\n    export GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n    export GPGKEY=\"3D06A59ECE730EB71B511C17CE752F178259BD92\"; \\\n    curl -fsSL -o phpMyAdmin.tar.xz $URL; \\\n    curl -fsSL -o phpMyAdmin.tar.xz.asc $URL.asc; \\\n    echo \"$SHA256  *phpMyAdmin.tar.xz\" | sha256sum -c -; \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$GPGKEY\" \\\n        || gpg --batch --keyserver pgp.mit.edu --recv-keys \"$GPGKEY\" \\\n        || gpg --batch --keyserver keyserver.pgp.com --recv-keys \"$GPGKEY\" \\\n        || gpg --batch --keyserver keys.openpgp.org --recv-keys \"$GPGKEY\"; \\\n    gpg --batch --verify phpMyAdmin.tar.xz.asc phpMyAdmin.tar.xz; \\\n    tar -xf phpMyAdmin.tar.xz -C /var/www/html --strip-components=1; \\\n    mkdir -p /var/www/html/tmp; \\\n    chown www-data:www-data /var/www/html/tmp; \\\n    gpgconf --kill all; \\\n    rm -r \"$GNUPGHOME\" phpMyAdmin.tar.xz phpMyAdmin.tar.xz.asc; \\\n    rm -r -v /var/www/html/setup/ /var/www/html/examples/ /var/www/html/js/src/ /var/www/html/templates/test/ /var/www/html/babel.config.json /var/www/html/doc/html/_sources/ /var/www/html/RELEASE-DATE-$VERSION /var/www/html/CONTRIBUTING.md; \\\n    grep -q -F \"'configFile' => ROOT_PATH . 'config.inc.php',\" /var/www/html/libraries/vendor_config.php; \\\n    sed -i \"s@'configFile' => .*@'configFile' => '/etc/phpmyadmin/config.inc.php',@\" /var/www/html/libraries/vendor_config.php; \\\n    grep -q -F \"'configFile' => '/etc/phpmyadmin/config.inc.php',\" /var/www/html/libraries/vendor_config.php; \\\n    php -l /var/www/html/libraries/vendor_config.php; \\\n    apk del --no-network .fetch-deps\n\n# Copy configuration\nCOPY config.inc.php /etc/phpmyadmin/config.inc.php\n\n# Copy main script\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\n\nENTRYPOINT [ \"/docker-entrypoint.sh\" ]\nCMD [\"%%CMD%%\"]\n"
}