{
  "startTime": 1674250991217,
  "endTime": 1674250992266,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16\nLABEL maintainer=\"Benjamin Bouvier <public@benj.me>\"\n\n# Try to keep the number of RUN statements low to avoid creating too many\n# layers, and try to ensure that each layer would be useful to cache.\n\n# Install Woob OS-level dependencies.\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y locales git python3 python3-dev python3-pip python3-selenium libffi-dev \\\n    libxml2-dev libxslt-dev libyaml-dev libtiff-dev libjpeg-dev libopenjp2-7-dev zlib1g-dev \\\n    libfreetype6-dev libwebp-dev build-essential gcc g++ wget unzip mupdf-tools \\\n    libnss3-tools python3-nss \\\n && rm -rf /var/lib/apt/lists/; rm -rf /var/lib/apt/lists/*;\n\nCOPY ./config.example.ini /opt/config.ini\nCOPY ./entrypoint.sh /entrypoint.sh\n\n# Mundane tasks, all in one to reduce the number of layers:\n# - Make sure the UTF-8 locale exists and is used by default.\n# - Make sure python3 is used as default python version and link pip to pip3.\n# - Then setup Kresus layout.\n# - Tweak executable rights.\nRUN locale-gen C.UTF-8 && \\\n    update-locale C.UTF-8 && \\\n    update-alternatives --install /usr/bin/python python $(which python3) 1 && \\\n    ln -s $(which pip3) /usr/bin/pip && \\\n    useradd -d /home/user -m -s /bin/bash -U user && \\\n    mkdir -p /home/user/data && \\\n    mkdir -p /woob && \\\n    chmod -x /opt/config.ini && \\\n    chmod +x /entrypoint.sh;\n\n# Install Rust for some Python dependencies.\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\n# Install Python dependencies.\nRUN pip install --no-cache-dir --upgrade setuptools && \\\n    pip install --no-cache-dir simplejson BeautifulSoup4 PyExecJS typing-extensions pdfminer.six Pillow;\n\n# Install and compile the app.\nRUN cd /home/user && \\\n    wget https://github.com/kresusapp/kresus/archive/main.zip && \\\n    unzip main.zip && \\\n    rm main.zip && \\\n    mv kresus-main app && \\\n    cd /home/user/app && \\\n    yarn && \\\n    yarn build:prod && \\\n    rm -rf node_modules && \\\n    yarn add sqlite3 && \\\n    yarn --production;\n\nWORKDIR /home/user/app\n\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV HOST 0.0.0.0\nENV KRESUS_DIR /home/user/data\nENV KRESUS_WOOB_DIR /woob\nENV NODE_ENV production\nENV KRESUS_PYTHON_EXEC python3\nENV IS_NIGHTLY 1\n\nVOLUME /home/user/data\nVOLUME /woob\n\nEXPOSE 9876\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/home/user/app/bin/kresus.js --config /opt/config.ini\"]\n"
}