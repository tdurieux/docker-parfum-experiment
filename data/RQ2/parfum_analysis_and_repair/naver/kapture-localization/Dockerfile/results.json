{
  "startTime": 1674250223596,
  "endTime": 1674250225115,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 8,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM ubuntu:18.04\nFROM nvidia/cudagl:10.0-devel-ubuntu18.04\nMAINTAINER naverlabs \"kapture@naverlabs.com\"\n\n# setup environment\nENV     LANG C.UTF-8\nENV     LC_ALL C.UTF-8\nENV     DEBIAN_FRONTEND noninteractive\n# arguments\nARG     MAKE_OPTIONS=\"-j8\"\nARG     SOURCE_PREFIX=\"/opt/src\"\n\nRUN mkdir -p ${SOURCE_PREFIX}\n\n# Get dependencies\nRUN apt-get update \\\n && apt-get install -y --no-install-recommends \\\n    git \\\n    wget curl \\\n    unzip openssh-client libssl-dev \\\n    python3.6 python3-pip python3-dev \\\n    pandoc asciidoctor \\\n    build-essential \\\n    libboost-all-dev \\\n    libsuitesparse-dev \\\n    libfreeimage-dev \\\n    libgoogle-glog-dev \\\n    libgflags-dev \\\n    libglew-dev \\\n    freeglut3-dev \\\n    libxmu-dev \\\n    libxi-dev \\\n    libatlas-base-dev \\\n    libsuitesparse-dev \\\n    libcgal-qt5-dev \\\n    libqt5opengl5-dev \\\n    qt5-default \\\n    x11-apps \\\n    mesa-utils \\\n  && rm -rf /var/lib/apt/lists/*\n\n\n########################################################################################################################\n# PYTHON-PIP ###########################################################################################################\n# make sure pip 3 is >= 20.0 to enable use-feature=2020-resolver\nRUN     python3 -m pip install --upgrade pip\nRUN     python3 -m pip install --upgrade setuptools wheel twine\n\n# force upgrade of cmake (more than apt get)\n## CMAKE version 3.23.0-rc1\nWORKDIR ${SOURCE_PREFIX}\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.23.0-rc1/cmake-3.23.0-rc1.tar.gz && \\\n        tar -xf cmake-3.23.0-rc1.tar.gz && rm cmake-3.23.0-rc1.tar.gz\nRUN     cd cmake-3.23.0-rc1 && ./bootstrap && make install\n\n########################################################################################################################\n# COLMAP ###############################################################################################################\n# ├── eigen\n# └── ceres\n\n# Eigen 3.3.9\nWORKDIR ${SOURCE_PREFIX}\nRUN     git clone -b 3.3.9 https://gitlab.com/libeigen/eigen.git eigen\nRUN     mkdir -p eigen/build\nWORKDIR ${SOURCE_PREFIX}/eigen/build\nRUN     cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n         .. && \\\n        make ${MAKE_OPTIONS} && make install && make clean\n\n# ceres 2.0.0\nWORKDIR ${SOURCE_PREFIX}\nRUN     git clone -b 2.0.0 https://github.com/ceres-solver/ceres-solver.git\nRUN     mkdir -p ceres-solver/build\nWORKDIR ${SOURCE_PREFIX}/ceres-solver/build\nRUN     cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DBUILD_TESTING=OFF \\\n        -DBUILD_EXAMPLES=OFF \\\n        -DBUILD_BENCHMARKS=OFF \\\n        ../ && \\\n        make ${MAKE_OPTIONS} && make install && make clean\n\n# colmap\nWORKDIR ${SOURCE_PREFIX}\nRUN     git clone -b 3.7 https://github.com/colmap/colmap.git\nWORKDIR ${SOURCE_PREFIX}/colmap\nRUN     mkdir -p build\nWORKDIR ${SOURCE_PREFIX}/colmap/build\nRUN     cmake \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        -DTESTS_ENABLED=OFF \\\n        .. && \\\n        make ${MAKE_OPTIONS} && make install && make clean\n\n######### POSELIB ##############################################################\nWORKDIR ${SOURCE_PREFIX}\nRUN     git clone --recursive -n https://github.com/vlarsson/PoseLib.git\nWORKDIR ${SOURCE_PREFIX}/PoseLib\nRUN     git checkout 67dc757c619a320ae3cf4a4ffd4e4b7fc5daa692 && \\\n        git submodule update --recursive # version required by PYRANSACLIB\nRUN     mkdir -p ${SOURCE_PREFIX}/PoseLib/_build\nRUN     cd ${SOURCE_PREFIX}/PoseLib/_build && \\\n        cmake -DCMAKE_INSTALL_PREFIX=../_install .. && \\\n        cmake --build . --target install -j 8 && \\\n        cmake --build . --target clean\n\n######### PYCOLMAP #############################################################\nWORKDIR ${SOURCE_PREFIX}\nRUN     git clone --recursive -b v0.1.0 https://github.com/colmap/pycolmap.git\nWORKDIR ${SOURCE_PREFIX}/pycolmap\nRUN     python3 -m pip install ./\n\n######### PYRANSACLIB ##########################################################\nWORKDIR ${SOURCE_PREFIX}\nRUN     git clone --recursive -n https://github.com/tsattler/RansacLib.git\nWORKDIR ${SOURCE_PREFIX}/RansacLib\nRUN     git checkout 8b5a8b062711ee9cc57bc73907fbe0ae769d5113 && \\\n        git submodule update --recursive\nRUN     sed -i '4i set(CMAKE_CXX_STANDARD 17)' CMakeLists.txt\nRUN     CMAKE_PREFIX_PATH=${SOURCE_PREFIX}/PoseLib/_install/lib/cmake/PoseLib  python3 -m pip install ./\n\n#########################################################################################################################\n# install kapture from pip.\nRUN      python3 -m pip install kapture\n\n# install kapture-localization\nADD      . ${SOURCE_PREFIX}/kapture-localization\nWORKDIR  ${SOURCE_PREFIX}/kapture-localization\nRUN      python3 -m pip install \"torch==1.4.0\" \"torchvision==0.5.0\" \"scikit_learn==0.20.2\"\nRUN      python3 -m pip install -r requirements.txt\nRUN      python3 setup.py install\n\n### FINALIZE ###################################################################\n# save space: purge apt-get\nRUN     rm -rf /var/lib/apt/lists/*\nUSER  root\nWORKDIR ${SOURCE_PREFIX}/\n"
}