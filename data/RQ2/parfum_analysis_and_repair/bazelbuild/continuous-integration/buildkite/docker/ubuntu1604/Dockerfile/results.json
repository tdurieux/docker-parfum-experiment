{
  "startTime": 1674248195326,
  "endTime": 1674248196115,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 22,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 137
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 24,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 25,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as ubuntu1604-bazel-java8\nARG BUILDARCH\n\nENV DEBIAN_FRONTEND=\"noninteractive\"\nENV LANG \"C.UTF-8\"\nENV LANGUAGE \"C.UTF-8\"\nENV LC_ALL \"C.UTF-8\"\n\n### Install packages required by Bazel and its tests\nRUN apt-get -y update && \\\n    apt-get -y install --no-install-recommends \\\n    apt-utils \\\n    bind9-host \\\n    build-essential \\\n    clang \\\n    coreutils \\\n    curl \\\n    dnsutils \\\n    ed \\\n    expect \\\n    file \\\n    git \\\n    gnupg2 \\\n    iproute2 \\\n    iputils-ping \\\n    lcov \\\n    less \\\n    libc++-dev \\\n    libssl-dev \\\n    llvm \\\n    llvm-dev \\\n    lsb-release \\\n    netcat-openbsd \\\n    openjdk-8-jdk-headless \\\n    python \\\n    python-dev \\\n    python-six \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    python3-setuptools \\\n    python3-six \\\n    python3-wheel \\\n    realpath \\\n    software-properties-common \\\n    sudo \\\n    unzip \\\n    wget \\\n    zip \\\n    zlib1g-dev \\\n    && \\\n    apt-get -y purge apport && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Allow using sudo inside the container.\nRUN echo \"ALL ALL=(ALL:ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nENV JAVA_HOME /usr/lib/jvm/java-8-openjdk-${BUILDARCH}\n\nFROM ubuntu1604-bazel-java8 AS ubuntu1604-java8\n\n### Install Python (required by our own bazelci.py script).\nRUN export PYTHON_VERSION=\"3.6.14\" && \\\n    mkdir -p /usr/local/src && \\\n    cd /usr/local/src && \\\n    curl -f -LO \"https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tar.xz\" && \\\n    tar xfJ \"Python-${PYTHON_VERSION}.tar.xz\" && \\\n    rm \"Python-${PYTHON_VERSION}.tar.xz\" && \\\n    cd \"Python-${PYTHON_VERSION}\" && \\\n    echo \"_ssl _ssl.c -DUSE_SSL -I/usr/include -I/usr/include/openssl -L/usr/lib -lssl -lcrypto\" >> Modules/Setup.dist && \\\n    echo \"Compiling Python ${PYTHON_VERSION} ...\" && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --quiet --enable-ipv6 && \\\n    make -s -j all && \\\n    echo \"Installing Python ${PYTHON_VERSION} ...\" && \\\n    make -s altinstall && \\\n    pip3.6 install requests==2.22.0 pyyaml==3.13 && \\\n    rm -rf \"/usr/local/src/Python-${PYTHON_VERSION}\"\n\n### Install Google Cloud SDK.\n### https://cloud.google.com/sdk/docs/quickstart-debian-ubuntu\nRUN echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main\" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \\\n    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \\\n    apt-get update -y && apt-get install --no-install-recommends google-cloud-sdk -y && \\\n    rm -rf /var/lib/apt/lists/*\n\n### Docker (for legacy rbe_autoconfig)\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install apt-transport-https ca-certificates && \\\n    curl -f -sSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \\\n    add-apt-repository \"deb [arch=$BUILDARCH] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install docker-ce && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Bazelisk\nRUN LATEST_BAZELISK=$( curl -f -sSI https://github.com/bazelbuild/bazelisk/releases/latest | grep -i '^location: ' | sed 's|.*/||' | sed $'s/\\r//') && \\\n    curl -f -Lo /usr/local/bin/bazel https://github.com/bazelbuild/bazelisk/releases/download/${LATEST_BAZELISK}/bazelisk-linux-${BUILDARCH} && \\\n    chown root:root /usr/local/bin/bazel && \\\n    chmod 0755 /usr/local/bin/bazel\n\n# Buildifier\nRUN LATEST_BUILDIFIER=$( curl -f -sSI https://github.com/bazelbuild/buildtools/releases/latest | grep -i '^location: ' | sed 's|.*/||' | sed $'s/\\r//') && \\\n    curl -f -Lo /usr/local/bin/buildifier https://github.com/bazelbuild/buildtools/releases/download/${LATEST_BUILDIFIER}/buildifier-linux-${BUILDARCH} && \\\n    chown root:root /usr/local/bin/buildifier && \\\n    chmod 0755 /usr/local/bin/buildifier\n"
}