diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/keitaroinc/docker-ckan/images/ckan/2.8/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/keitaroinc/docker-ckan/images/ckan/2.8/Dockerfile/repaired.Dockerfile
index c1d940c..d32c70f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/keitaroinc/docker-ckan/images/ckan/2.8/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/keitaroinc/docker-ckan/images/ckan/2.8/Dockerfile/repaired.Dockerfile
@@ -42,11 +42,11 @@ RUN apk add --no-cache \
 RUN mkdir -p ${SRC_DIR}
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
     python ${SRC_DIR}/get-pip.py 'pip==20.3.3'
 
 # Fetch and build CKAN and requirements
-RUN pip install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan
+RUN pip install --no-cache-dir -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan
 # Copy patches and apply patches script
 COPY ./patches ${SRC_DIR}/patches
 COPY ./scripts/apply_ckan_patches.sh ${SRC_DIR}/apply_ckan_patches.sh
@@ -83,7 +83,7 @@ RUN apk add --no-cache \
 RUN mkdir -p ${SRC_DIR}
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
     python ${SRC_DIR}/get-pip.py 'pip==20.3.3'
 
 # Fetch and build the default CKAN extensions
@@ -123,7 +123,7 @@ RUN apk add --no-cache git \
     mkdir -p ${SRC_DIR}
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
     python ${SRC_DIR}/get-pip.py 'pip==20.3.3'
 
 # Get artifacts from build stages
@@ -132,7 +132,7 @@ COPY --from=extbuild /wheels /srv/app/ext_wheels
 COPY --from=ckanbuild /srv/app/src/ckan ${CKAN_DIR}
 
 # Additional install steps for build stages artifacts
-RUN pip install --no-index --find-links=/srv/app/wheels uwsgi==2.0.19.1 gevent==21.1.2
+RUN pip install --no-cache-dir --no-index --find-links=/srv/app/wheels uwsgi==2.0.19.1 gevent==21.1.2
 
 # Create a local user and group to run the app
 RUN addgroup -g 92 -S ckan && \
@@ -141,11 +141,11 @@ RUN addgroup -g 92 -S ckan && \
 WORKDIR ${CKAN_DIR}
 
 # Install CKAN
-RUN pip install -e /srv/app/src/ckan && \
+RUN pip install --no-cache-dir -e /srv/app/src/ckan && \
     cp who.ini ${APP_DIR} && \
-    pip install --no-index --find-links=/srv/app/wheels -r requirements.txt && \
+    pip install --no-cache-dir --no-index --find-links=/srv/app/wheels -r requirements.txt && \
     # Install default CKAN extensions
-    pip install --no-index --find-links=/srv/app/ext_wheels ckanext-envvars && \
+    pip install --no-cache-dir --no-index --find-links=/srv/app/ext_wheels ckanext-envvars && \
     # Create and update CKAN config
     # Set timezone
     echo "UTC" >  /etc/timezone && \