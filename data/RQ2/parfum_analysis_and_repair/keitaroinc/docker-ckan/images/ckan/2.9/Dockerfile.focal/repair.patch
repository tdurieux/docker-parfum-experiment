diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/keitaroinc/docker-ckan/images/ckan/2.9/Dockerfile.focal b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/keitaroinc/docker-ckan/images/ckan/2.9/Dockerfile.focal/repaired.Dockerfile
index 569340b..7dca045 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/keitaroinc/docker-ckan/images/ckan/2.9/Dockerfile.focal
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/keitaroinc/docker-ckan/images/ckan/2.9/Dockerfile.focal/repaired.Dockerfile
@@ -23,16 +23,16 @@ ENV PIP_SRC=${SRC_DIR}
 
 WORKDIR ${SRC_DIR}
 
-# Set the locale          
+# Set the locale         
 RUN apt-get update
-RUN apt-get install --no-install-recommends -y locales
+RUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN sed -i "/$LC_ALL/s/^# //g" /etc/locale.gen
-RUN dpkg-reconfigure --frontend=noninteractive locales 
+RUN dpkg-reconfigure --frontend=noninteractive locales
 RUN update-locale LANG=${LC_ALL}
 
 # Instal apt-utils
 RUN apt-get install --no-install-recommends -y \
-        apt-utils
+        apt-utils && rm -rf /var/lib/apt/lists/*;
 
 # Packages to build CKAN requirements and plugins
 RUN apt-get install --no-install-recommends -y \
@@ -42,19 +42,19 @@ RUN apt-get install --no-install-recommends -y \
         python3 \
         libpq-dev \
         linux-headers-generic \
-	    gcc-10 \
-	    make \
-	    g++-10 \
-	    autoconf \
-	    automake \
-	    libtool \
+					gcc-10 \
+					make \
+					g++-10 \
+					autoconf \
+					automake \
+					libtool \
         patch \
         libpcre3-dev \
         libpcre3 \
         python3-dev \
         libffi-dev \
         libxml2-dev \
-        libxslt-dev
+        libxslt-dev && rm -rf /var/lib/apt/lists/*;
 
 # Use gcc 10
 RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10 --slave /usr/bin/x86_64-linux-gnu-gcc x86_64-linux-gnu-gcc /usr/bin/x86_64-linux-gnu-gcc-10
@@ -66,14 +66,14 @@ RUN ln -s /usr/bin/python3 /usr/bin/python
 RUN mkdir -p ${SRC_DIR}
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py && \
     python ${SRC_DIR}/get-pip.py
 
 # Downgrade setuptools so that CKAN requirements can be built
-RUN pip install setuptools==44.1.0
+RUN pip install --no-cache-dir setuptools==44.1.0
 
 # Fetch and build CKAN and requirements
-RUN pip install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan
+RUN pip install --no-cache-dir -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan
 # Copy patches and apply patches script
 COPY ./patches ${SRC_DIR}/patches
 COPY ./scripts/apply_ckan_patches.sh ${SRC_DIR}/apply_ckan_patches.sh
@@ -106,7 +106,7 @@ RUN apt-get update && \
         curl \
         ca-certificates \
         python3 \
-        python3-dev
+        python3-dev && rm -rf /var/lib/apt/lists/*;
 
 # Link python to python3
 RUN ln -s /usr/bin/python3 /usr/bin/python
@@ -115,11 +115,11 @@ RUN ln -s /usr/bin/python3 /usr/bin/python
 RUN mkdir -p ${SRC_DIR}
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py && \
     python ${SRC_DIR}/get-pip.py
 
 # Downgrade setuptools so that CKAN requirements can be built
-RUN pip install setuptools==44.1.0
+RUN pip install --no-cache-dir setuptools==44.1.0
 
 # Fetch and build the default CKAN extensions
 RUN pip wheel --wheel-dir=/wheels git+${ENVVARS_GIT_URL}@${ENVVARS_GIT_BRANCH}#egg=ckanext-envvars
@@ -139,7 +139,7 @@ RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 # Set Locale
 ENV LC_ALL=en_US.UTF-8
 
-# Set the locale          
+# Set the locale         
 RUN apt-get update && \
     apt-get install --no-install-recommends -y locales && \
     sed -i "/$LC_ALL/s/^# //g" /etc/locale.gen && \
@@ -180,11 +180,11 @@ RUN apt-get update && \
     ln -s /usr/bin/python3 /usr/bin/python
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/get-pip.py && \
     python ${SRC_DIR}/get-pip.py
 
 # Downgrade setuptools so that CKAN requirements can be built
-RUN pip install setuptools==44.1.0
+RUN pip install --no-cache-dir setuptools==44.1.0
 
 # Get artifacts from build stages
 COPY --from=ckanbuild /wheels /srv/app/wheels
@@ -192,7 +192,7 @@ COPY --from=extbuild /wheels /srv/app/ext_wheels
 COPY --from=ckanbuild /srv/app/src/ckan ${CKAN_DIR}
 
 # Additional install steps for build stages artifacts
-RUN pip install --no-index --find-links=/srv/app/wheels uWSGI==2.0.20 gevent==21.1.2
+RUN pip install --no-cache-dir --no-index --find-links=/srv/app/wheels uWSGI==2.0.20 gevent==21.1.2
 
 # Create a local user and group to run the app
 RUN groupadd -g 92 ckan && \
@@ -201,11 +201,11 @@ RUN groupadd -g 92 ckan && \
 WORKDIR ${CKAN_DIR}
 
 # Install CKAN
-RUN pip install -e /srv/app/src/ckan && \
+RUN pip install --no-cache-dir -e /srv/app/src/ckan && \
     cp who.ini ${APP_DIR} && \
-    pip install --no-index --find-links=/srv/app/wheels -r requirements.txt && \
+    pip install --no-cache-dir --no-index --find-links=/srv/app/wheels -r requirements.txt && \
     # Install default CKAN extensions
-    pip install --no-index --find-links=/srv/app/ext_wheels ckanext-envvars && \
+    pip install --no-cache-dir --no-index --find-links=/srv/app/ext_wheels ckanext-envvars && \
     # Create and update CKAN config
     # Generate CKAN config
     ckan generate config ${APP_DIR}/production.ini && \