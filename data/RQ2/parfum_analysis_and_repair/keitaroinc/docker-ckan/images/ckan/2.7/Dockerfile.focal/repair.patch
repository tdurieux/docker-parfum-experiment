diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/keitaroinc/docker-ckan/images/ckan/2.7/Dockerfile.focal b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/keitaroinc/docker-ckan/images/ckan/2.7/Dockerfile.focal/repaired.Dockerfile
index bc5c9e2..d56db18 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/keitaroinc/docker-ckan/images/ckan/2.7/Dockerfile.focal
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/keitaroinc/docker-ckan/images/ckan/2.7/Dockerfile.focal/repaired.Dockerfile
@@ -23,16 +23,16 @@ ENV PIP_SRC=${SRC_DIR}
 
 WORKDIR ${SRC_DIR}
 
-# Set the locale          
+# Set the locale         
 RUN apt-get update
-RUN apt-get install --no-install-recommends -y locales
+RUN apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN sed -i "/$LC_ALL/s/^# //g" /etc/locale.gen
-RUN dpkg-reconfigure --frontend=noninteractive locales 
+RUN dpkg-reconfigure --frontend=noninteractive locales
 RUN update-locale LANG=${LC_ALL}
 
 # Instal apt-utils
 RUN apt-get install --no-install-recommends -y \
-        apt-utils
+        apt-utils && rm -rf /var/lib/apt/lists/*;
 
 # Packages to build CKAN requirements and plugins
 RUN apt-get install --no-install-recommends -y \
@@ -54,15 +54,15 @@ RUN apt-get install --no-install-recommends -y \
         python-dev \
         libffi-dev \
         libxml2-dev \
-        libxslt-dev
+        libxslt-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install version 9.x of postgresql-dev so that CKAN requirements can be built
 SHELL ["/bin/bash", "-o", "pipefail", "-c"]
-RUN curl -s -o - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
+RUN curl -f -s -o - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -
 RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main" >> /etc/apt/sources.list.d/postgresql.list'
 RUN apt-get update
 RUN apt-get install --no-install-recommends -y \
-        postgresql-server-dev-9.6
+        postgresql-server-dev-9.6 && rm -rf /var/lib/apt/lists/*;
 
 # Use gcc 10
 RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /usr/bin/g++ g++ /usr/bin/g++-10 --slave /usr/bin/gcov gcov /usr/bin/gcov-10 --slave /usr/bin/x86_64-linux-gnu-gcc x86_64-linux-gnu-gcc /usr/bin/x86_64-linux-gnu-gcc-10
@@ -71,11 +71,11 @@ RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-10 100 --slave /
 RUN mkdir -p ${SRC_DIR}
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
     python ${SRC_DIR}/get-pip.py 'pip==20.3.3'
 
 # Fetch and build CKAN and requirements
-RUN pip install -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan
+RUN pip install --no-cache-dir -e git+${GIT_URL}@${GIT_BRANCH}#egg=ckan
 # Copy patches and apply patches script
 COPY ./patches ${SRC_DIR}/patches
 COPY ./scripts/apply_ckan_patches.sh ${SRC_DIR}/apply_ckan_patches.sh
@@ -108,13 +108,13 @@ RUN apt-get update && \
         curl \
         ca-certificates \
         python \
-        python-dev
+        python-dev && rm -rf /var/lib/apt/lists/*;
 
 # Create the src directory
 RUN mkdir -p ${SRC_DIR}
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
     python ${SRC_DIR}/get-pip.py 'pip==20.3.3'
 
 # Fetch and build the default CKAN extensions
@@ -135,7 +135,7 @@ RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 # Set Locale
 ENV LC_ALL=en_US.UTF-8
 
-# Set the locale          
+# Set the locale         
 RUN apt-get update && \
     apt-get install --no-install-recommends -y locales && \
     sed -i "/$LC_ALL/s/^# //g" /etc/locale.gen && \
@@ -170,7 +170,7 @@ RUN apt-get update && \
         apache2-utils && \
     rm -rf /var/lib/apt/lists/* && \
     # Install version 9.x of postgresql-client so that CKAN can run
-    curl -s -o - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
+    curl -f -s -o - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
     sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt/ focal-pgdg main" >> /etc/apt/sources.list.d/postgresql.list' && \
     apt-get update && \
     apt-get install --no-install-recommends -y \
@@ -180,7 +180,7 @@ RUN apt-get update && \
     mkdir -p ${SRC_DIR}
 
 # Install pip
-RUN curl -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
+RUN curl -f -o ${SRC_DIR}/get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py && \
     python ${SRC_DIR}/get-pip.py 'pip==20.3.3'
 
 # Get artifacts from build stages
@@ -189,7 +189,7 @@ COPY --from=extbuild /wheels /srv/app/ext_wheels
 COPY --from=ckanbuild /srv/app/src/ckan ${CKAN_DIR}
 
 # Additional install steps for build stages artifacts
-RUN pip install --no-index --find-links=/srv/app/wheels uwsgi==2.0.19.1 gevent==21.1.2
+RUN pip install --no-cache-dir --no-index --find-links=/srv/app/wheels uwsgi==2.0.19.1 gevent==21.1.2
 
 # Create a local user and group to run the app
 RUN groupadd -g 92 ckan && \
@@ -198,11 +198,11 @@ RUN groupadd -g 92 ckan && \
 WORKDIR ${CKAN_DIR}
 
 # Install CKAN
-RUN pip install -e /srv/app/src/ckan && \
+RUN pip install --no-cache-dir -e /srv/app/src/ckan && \
     cp who.ini ${APP_DIR} && \
-    pip install --no-index --find-links=/srv/app/wheels -r requirements.txt && \
+    pip install --no-cache-dir --no-index --find-links=/srv/app/wheels -r requirements.txt && \
     # Install default CKAN extensions
-    pip install --no-index --find-links=/srv/app/ext_wheels ckanext-envvars && \
+    pip install --no-cache-dir --no-index --find-links=/srv/app/ext_wheels ckanext-envvars && \
     # Create and update CKAN config
     # Generate CKAN config
     paster --plugin=ckan make-config ckan ${APP_DIR}/production.ini && \