{
  "startTime": 1674218665551,
  "endTime": 1674218667250,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-License-Identifier: BSD-2-Clause\n# Copyright (C) 2019 - 2021 Intel Corporation.\n\n# Pull base image\nFROM ubuntu:20.04\n\nLABEL maintainer=\"patryk.kaminski@intel.com\"\n\n# Set apt-get proxy\nRUN echo \"Acquire::http::proxy \\\"$HTTP_PROXY\\\";\\nAcquire::https::proxy \\\"$HTTPS_PROXY\\\";\" > /etc/apt/apt.conf\n\n# Update the Apt cache and install basic tools\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n    asciidoctor \\\n    automake \\\n    bash-completion \\\n    ca-certificates \\\n    curl \\\n    devscripts \\\n    g++ \\\n    git \\\n    libattr1-dev \\\n    libcap-ng-dev \\\n    libglib2.0-dev \\\n    libgnutls28-dev \\\n    libjson-c-dev \\\n    libkeyutils-dev \\\n    libkmod-dev \\\n    libnuma-dev \\\n    libpciaccess-dev \\\n    libpixman-1-dev \\\n    libtirpc-dev \\\n    libtool \\\n    libudev-dev \\\n    libxml2-dev \\\n    libxml2-utils \\\n    numactl \\\n    ninja-build \\\n    pkg-config \\\n    python-docutils \\\n    python3-pip \\\n    python3.8-dev \\\n    sudo \\\n    systemd \\\n    uuid-dev \\\n    xsltproc \\\n    whois \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install packages required by python tests\nRUN pip3 install --no-cache-dir wheel\nRUN pip3 install --no-cache-dir pytest==3.9.2\nRUN pip3 install --no-cache-dir fabric\nRUN pip3 install --no-cache-dir psutil\nRUN pip3 install --no-cache-dir meson\n\n# Add user\nENV USER memkinduser\nENV USERPASS memkindpass\nRUN useradd -m $USER -g sudo -p `mkpasswd $USERPASS`\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n\n# Create directory for memkind repository\nWORKDIR /home/$USER/memkind\n\n# Allow user to create files in the home directory\nRUN chown -R $USER:sudo /home/$USER\n\n# Change user to $USER\nUSER $USER\n"
}