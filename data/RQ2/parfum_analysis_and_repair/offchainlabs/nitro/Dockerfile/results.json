{
  "startTime": 1674217645177,
  "endTime": 1674217646751,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 20,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 155,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 175,
        "lineEnd": 178,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 195,
        "lineEnd": 196,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 28,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 86
      }
    }
  ],
  "repairedDockerfile": "FROM emscripten/emsdk:3.1.7 as brotli-wasm-builder\nWORKDIR /workspace\nCOPY build-brotli.sh .\nCOPY brotli brotli\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y cmake make git && \\\n    # pinned emsdk 3.1.7 (in docker image)\n    ./build-brotli.sh -w -t install/ && rm -rf /var/lib/apt/lists/*;\n\nFROM scratch as brotli-wasm-export\nCOPY --from=brotli-wasm-builder /workspace/install/ /\n\nFROM debian:bullseye-slim as brotli-library-builder\nWORKDIR /workspace\nCOPY build-brotli.sh .\nCOPY brotli brotli\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y cmake make gcc git && \\\n    ./build-brotli.sh -l -t install/ && rm -rf /var/lib/apt/lists/*;\n\nFROM scratch as brotli-library-export\nCOPY --from=brotli-library-builder /workspace/install/ /\n\nFROM node:16-bullseye-slim as contracts-builder\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y git python3 make g++ && rm -rf /var/lib/apt/lists/*;\nWORKDIR /workspace\nCOPY contracts/package.json contracts/yarn.lock contracts/\nRUN cd contracts && yarn && yarn cache clean;\nCOPY contracts contracts/\nCOPY Makefile .\nRUN NITRO_BUILD_IGNORE_TIMESTAMPS=1 make build-solidity\n\nFROM debian:bullseye-20211220 as wasm-base\nWORKDIR /workspace\nRUN apt-get update && apt-get install --no-install-recommends -y curl build-essential=12.9 && rm -rf /var/lib/apt/lists/*;\n\nFROM wasm-base as wasm-libs-builder\n\t# clang / lld used by soft-float wasm\nRUN apt-get install --no-install-recommends -y clang=1:11.0-51+nmu5 lld=1:11.0-51+nmu5 && rm -rf /var/lib/apt/lists/*;\n    # pinned rust 1.61.0\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.61.0 --target x86_64-unknown-linux-gnu wasm32-unknown-unknown wasm32-wasi\nCOPY ./Makefile ./\nCOPY arbitrator/wasm-libraries arbitrator/wasm-libraries\nCOPY --from=brotli-wasm-export / target/\nRUN . ~/.cargo/env && NITRO_BUILD_IGNORE_TIMESTAMPS=1 RUSTFLAGS='-C symbol-mangling-version=v0' make build-wasm-libs\n\nFROM wasm-base as wasm-bin-builder\n    # pinned go version\nRUN curl -f -L https://golang.org/dl/go1.17.8.linux-`dpkg --print-architecture`.tar.gz | tar -C /usr/local -xzf -\nCOPY ./Makefile ./go.mod ./go.sum ./\nCOPY ./arbcompress ./arbcompress\nCOPY ./arbos ./arbos\nCOPY ./arbstate ./arbstate\nCOPY ./blsSignatures ./blsSignatures\nCOPY ./cmd/replay ./cmd/replay\nCOPY ./precompiles ./precompiles\nCOPY ./statetransfer ./statetransfer\nCOPY ./util ./util\nCOPY ./wavmio ./wavmio\nCOPY ./zeroheavy ./zeroheavy\nCOPY ./contracts/src/precompiles/ ./contracts/src/precompiles/\nCOPY ./contracts/package.json ./contracts/yarn.lock ./contracts/\nCOPY ./solgen/gen.go ./solgen/\nCOPY ./fastcache ./fastcache\nCOPY ./go-ethereum ./go-ethereum\nCOPY --from=brotli-wasm-export / target/\nCOPY --from=contracts-builder workspace/contracts/build/contracts/src/precompiles/ contracts/build/contracts/src/precompiles/\nCOPY --from=contracts-builder workspace/.make/ .make/\nRUN PATH=\"$PATH:/usr/local/go/bin\" NITRO_BUILD_IGNORE_TIMESTAMPS=1 make build-wasm-bin\n\nFROM rust:1.61-slim-bullseye as prover-header-builder\nWORKDIR /workspace\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y make && \\\n    cargo install --force cbindgen && rm -rf /var/lib/apt/lists/*;\nCOPY arbitrator/Cargo.* arbitrator/cbindgen.toml arbitrator/\nCOPY arbitrator/prover/Cargo.toml arbitrator/prover/\nCOPY ./Makefile ./\nCOPY arbitrator/prover arbitrator/prover\nRUN NITRO_BUILD_IGNORE_TIMESTAMPS=1 make build-prover-header\n\nFROM scratch as prover-header-export\nCOPY --from=prover-header-builder /workspace/target/ /\n\nFROM rust:1.61-slim-bullseye as prover-builder\nWORKDIR /workspace\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y make && rm -rf /var/lib/apt/lists/*;\nCOPY arbitrator/Cargo.* arbitrator/\nCOPY arbitrator/prover/Cargo.toml arbitrator/prover/\nRUN mkdir arbitrator/prover/src && \\\n    echo \"fn test() {}\" > arbitrator/prover/src/lib.rs && \\\n    cargo build --manifest-path arbitrator/Cargo.toml --release --lib\nCOPY ./Makefile ./\nCOPY arbitrator/prover arbitrator/prover\nRUN touch -a -m arbitrator/prover/src/lib.rs\nRUN NITRO_BUILD_IGNORE_TIMESTAMPS=1 make build-prover-lib\nRUN NITRO_BUILD_IGNORE_TIMESTAMPS=1 make build-prover-bin\n\nFROM scratch as prover-export\nCOPY --from=prover-builder /workspace/target/ /\n\nFROM debian:bullseye-slim as module-root-calc\nWORKDIR /workspace\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wabt make && rm -rf /var/lib/apt/lists/*;\nCOPY --from=prover-export / target/\nCOPY --from=wasm-bin-builder /workspace/target/ target/\nCOPY --from=wasm-bin-builder /workspace/.make/ .make/\nCOPY --from=wasm-libs-builder /workspace/target/ target/\nCOPY --from=wasm-libs-builder /workspace/arbitrator/wasm-libraries/ arbitrator/wasm-libraries/\nCOPY --from=wasm-libs-builder /workspace/.make/ .make/\nCOPY ./Makefile ./\nCOPY ./arbitrator ./arbitrator\nCOPY ./solgen ./solgen\nCOPY ./contracts ./contracts\nRUN NITRO_BUILD_IGNORE_TIMESTAMPS=1 make build-replay-env\n\nFROM debian:bullseye-slim as machine-versions\nRUN apt-get update && apt-get install --no-install-recommends -y unzip wget && rm -rf /var/lib/apt/lists/*;\nWORKDIR /workspace/machines\n# Download WAVM machines\nRUN bash -c 'r=0xbb9d58e9527566138b682f3a207c0976d5359837f6e330f4017434cca983ff41 && mkdir $r && ln -sfT $r latest && cd $r && echo $r > module-root.txt && wget https://github.com/OffchainLabs/nitro/releases/download/consensus-v1-rc1/machine.wavm.br'\nRUN bash -c 'r=0x9d68e40c47e3b87a8a7e6368cc52915720a6484bb2f47ceabad7e573e3a11232 && mkdir $r && ln -sfT $r latest && cd $r && echo $r > module-root.txt && wget https://github.com/OffchainLabs/nitro/releases/download/consensus-v2.1/machine.wavm.br'\n\nFROM golang:1.17-bullseye as node-builder\nWORKDIR /workspace\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y wabt && rm -rf /var/lib/apt/lists/*;\nCOPY go.mod go.sum ./\nCOPY go-ethereum/go.mod go-ethereum/go.sum go-ethereum/\nCOPY fastcache/go.mod fastcache/go.sum fastcache/\nRUN go mod download\nCOPY . ./\nCOPY --from=contracts-builder workspace/contracts/build/ contracts/build/\nCOPY --from=contracts-builder workspace/.make/ .make/\nCOPY --from=prover-header-export / target/\nCOPY --from=brotli-library-export / target/\nCOPY --from=prover-export / target/\nRUN mkdir -p target/bin\nRUN NITRO_BUILD_IGNORE_TIMESTAMPS=1 make build\n\nFROM debian:bullseye-slim as nitro-node-slim\nWORKDIR /home/user\nCOPY --from=node-builder /workspace/target/bin/nitro /usr/local/bin/\nCOPY --from=node-builder /workspace/target/bin/relay /usr/local/bin/\nCOPY --from=machine-versions /workspace/machines /home/user/target/machines\nUSER root\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    wabt && \\\n    useradd -ms /bin/bash user && \\\n    mkdir -p /home/user/l1keystore && \\\n    mkdir -p /home/user/.arbitrum/local/nitro && \\\n    chown -R user:user /home/user && \\\n    chmod -R 555 /home/user/target/machines && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /usr/share/doc/*\n\nUSER user\nWORKDIR /home/user/\nENTRYPOINT [ \"/usr/local/bin/nitro\" ]\n\nFROM nitro-node-slim as nitro-node\nUSER root\nCOPY --from=node-builder /workspace/target/bin/daserver /usr/local/bin/\nCOPY --from=node-builder /workspace/target/bin/datool /usr/local/bin/\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    curl procps jq rsync \\\n    node-ws vim-tiny python3 \\\n    dnsutils && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /usr/share/doc/*\n\nUSER user\n\nFROM nitro-node as nitro-node-dev\nUSER root\n# Copy in latest WASM module root\nRUN rm -f /home/user/target/machines/latest\nCOPY --from=node-builder /workspace/target/bin/deploy /usr/local/bin/\nCOPY --from=node-builder /workspace/target/bin/seq-coordinator-invalidate /usr/local/bin/\nCOPY --from=module-root-calc /workspace/target/machines/latest/machine.wavm.br /home/user/target/machines/latest/\nCOPY --from=module-root-calc /workspace/target/machines/latest/until-host-io-state.bin /home/user/target/machines/latest/\nCOPY --from=module-root-calc /workspace/target/machines/latest/module-root.txt /home/user/target/machines/latest/\nRUN export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n    sudo && \\\n    chmod -R 555 /home/user/target/machines && \\\n    adduser user sudo && \\\n    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /usr/share/doc/*\n\nUSER user\n\nFROM nitro-node as nitro-node-default\n# Just to ensure nitro-node-dist is default\n"
}