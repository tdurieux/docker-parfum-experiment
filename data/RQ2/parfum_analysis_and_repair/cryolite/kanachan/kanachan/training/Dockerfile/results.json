{
  "startTime": 1674215305554,
  "endTime": 1674215306555,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=nvcr.io/nvidia/pytorch:22.02-py3\nFROM $BASE_IMAGE\n\nRUN apt-get update && \\\n    apt-get -y dist-upgrade && \\\n    apt-get -y --no-install-recommends install \\\n      git \\\n      libboost-python-dev \\\n      libboost-stacktrace-dev \\\n      locales \\\n      locales-all \\\n      python3-dev && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* && \\\n    locale-gen en_US.UTF-8 ja_JP.UTF-8 && \\\n    pip3 install --no-cache-dir -U pip && \\\n    useradd -ms /bin/bash ubuntu && \\\n    chown ubuntu:ubuntu /workspace\n\nUSER ubuntu\n\nENV PATH=\"/home/ubuntu/.local/bin:${PATH}\"\n\nRUN pip3 install --no-cache-dir -U \\\n      mahjong \\\n      setuptools \\\n      wheel\n\n# `marisa-trie` only supports for in-tree build.\nRUN mkdir -p /home/ubuntu/.local/src && \\\n    pushd /home/ubuntu/.local/src && \\\n    git clone 'https://github.com/s-yata/marisa-trie.git' && \\\n    popd && \\\n    pushd /home/ubuntu/.local/src/marisa-trie && \\\n    autoreconf -i && \\\n    CFLAGS='-DNDEBUG -O3 -flto' CXXFLAGS='-DNDEBUG -O3 -flto' ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/home/ubuntu/.local --enable-native-code --disable-static && \\\n    make -j && \\\n    make install && \\\n    popd\n\nRUN mkdir -p /home/ubuntu/.local/src && \\\n    pushd /home/ubuntu/.local/src && \\\n    git clone 'https://github.com/tomohxx/shanten-number' && \\\n    pushd shanten-number && \\\n    tar xzvf index.tar.gz && \\\n    popd && \\\n    popd && rm index.tar.gz\n\nRUN git clone https://github.com/NVIDIA/apex.git && \\\n    (cd apex && \\\n     MAX_JOBS=$(nproc) pip install -v --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" ./) && \\\n    rm -rf apex\n\nCOPY --chown=ubuntu . /workspace/kanachan\n\nRUN pushd /workspace/kanachan/src/common && \\\n    protoc -I. --cpp_out=. mahjongsoul.proto && \\\n    popd && \\\n    mkdir -p /workspace/kanachan/build && \\\n    pushd /workspace/kanachan/build && \\\n    cmake -DPYTHON_VERSION=\"$(python3 -V | sed -e 's@^Python[[:space:]]\\{1,\\}\\([[:digit:]]\\{1,\\}\\.[[:digit:]]\\{1,\\}\\)\\.[[:digit:]]\\{1,\\}@\\1@')\" \\\n          -DCMAKE_BUILD_TYPE=Release \\\n          .. && \\\n    VERBOSE=1 make -j make_trie _simulation && \\\n    mkdir -p /home/ubuntu/.local/share/kanachan && \\\n    src/xiangting/make_trie && \\\n    popd && \\\n    pushd /workspace/kanachan && \\\n    cp build/src/simulation/lib_simulation.so kanachan/simulation/_simulation.so && \\\n    pip3 install --no-cache-dir . && \\\n    popd\n"
}