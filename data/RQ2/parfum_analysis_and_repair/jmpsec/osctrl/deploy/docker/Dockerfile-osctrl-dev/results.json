{
  "startTime": 1674248816787,
  "endTime": 1674248818004,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 25,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 18,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "######################################## osctrl-tls ########################################\nFROM golang:latest AS osctrl-tls\n\nENV GO111MODULE=on\n\n# Install software\nRUN apt-get update -y && apt-get install --no-install-recommends zip curl -y && rm -rf /var/lib/apt/lists/*;\n\nARG POSTGRES_DB_NAME\nARG POSTGRES_DB_USERNAME\nARG POSTGRES_DB_PASSWORD\nARG JWT_SECRET\n\n### Create user ###\nRUN useradd -ms /bin/bash osctrl-tls\n\n### Copy osctrl-tls bin and configs ###\nRUN mkdir -p /opt/osctrl/\nRUN mkdir -p /opt/osctrl/bin\nRUN mkdir -p /opt/osctrl/config\n\n### Compile osctrl-tls bin ###\nRUN go build -o /opt/osctrl/bin/osctrl-tls tls/*.go\nRUN go build -o /opt/osctrl/bin/osctrl-cli cli/*.go\n\nCOPY deploy/docker/conf/osctrl/tls/tls.json /opt/osctrl/config/tls.json\nCOPY deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g\" /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g\" /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g\" /opt/osctrl/config/db.json\nRUN cp /opt/osctrl/config/db.json /opt/osctrl/config/logger.json\n\nUSER osctrl-tls\nEXPOSE 9000\nWORKDIR /opt/osctrl\n\nENTRYPOINT [ \"/opt/osctrl/bin/osctrl-tls\" ]\n\n######################################## osctrl-api ########################################\nFROM golang:latest AS osctrl-api\n\nENV GO111MODULE=on\n\n# Install software\nRUN apt-get update -y && apt-get install --no-install-recommends zip curl -y && rm -rf /var/lib/apt/lists/*;\n\nARG POSTGRES_DB_NAME\nARG POSTGRES_DB_USERNAME\nARG POSTGRES_DB_PASSWORD\nARG JWT_SECRET\n\n### Create user ###\nRUN useradd -ms /bin/bash osctrl-api\n\n### Copy osctrl-api bin and configs ###\nRUN mkdir -p /opt/osctrl/bin\nRUN mkdir -p /opt/osctrl/config\n\n### Copy code and compile\nRUN go build -o /opt/osctrl/bin/osctrl-api api/*.go\nRUN go build -o /opt/osctrl/bin/osctrl-cli cli/*.go\n\nCOPY deploy/docker/conf/osctrl/api/api.json /opt/osctrl/config/api.json\nCOPY deploy/docker/conf/osctrl/jwt.json /opt/osctrl/config/jwt.json\nRUN sed -i \"s#{{ JWT_SECRET }}#${JWT_SECRET}#g\" /opt/osctrl/config/jwt.json\n\nCOPY deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g\" /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g\" /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g\" /opt/osctrl/config/db.json\n\nUSER osctrl-api\nEXPOSE 9002\nWORKDIR /opt/osctrl\n\nENTRYPOINT [ \"/opt/osctrl/bin/osctrl-api\" ]\n\n######################################## osctrl-admin ########################################\nFROM golang:latest AS osctrl-admin\n\nENV GO111MODULE=on\n\n# Install software\nRUN apt-get update -y && apt-get install --no-install-recommends zip curl -y && rm -rf /var/lib/apt/lists/*;\n\nARG OSQUERY_VERSION\nARG POSTGRES_DB_NAME\nARG POSTGRES_DB_USERNAME\nARG POSTGRES_DB_PASSWORD\nARG JWT_SECRET\nARG ENV\n\n### Create user ###\nRUN useradd -ms /bin/bash osctrl-admin\n\n### Copy osctrl-admin bin and configs ###\nRUN mkdir -p /opt/osctrl/\nRUN mkdir -p /opt/osctrl/bin\nRUN mkdir -p /opt/osctrl/config\nRUN mkdir -p /opt/osctrl/carved_files\n\n### Copy code and compile\nRUN go build -o /opt/osctrl/bin/osctrl-admin admin/*.go\nRUN go build -o /opt/osctrl/bin/osctrl-cli cli/*.go\n\nCOPY /go/src/osctrl/deploy/docker/conf/osctrl/admin/admin.json /opt/osctrl/config/admin.json\nCOPY /go/src/osctrl/deploy/docker/conf/osctrl/jwt.json /opt/osctrl/config/jwt.json\nRUN sed -i \"s#{{ JWT_SECRET }}#${JWT_SECRET}#g\" /opt/osctrl/config/jwt.json\nCOPY /go/src/osctrl/deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g\" /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g\" /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g\" /opt/osctrl/config/db.json\nRUN cp /opt/osctrl/config/db.json /opt/osctrl/config/logger.json\n\nRUN chown osctrl-admin:osctrl-admin -R /opt/osctrl/config\n\n### Copy osctrl-admin web templates ###\nCOPY /go/src/osctrl/admin/templates/ /opt/osctrl/tmpl_admin\nCOPY /go/src/osctrl/admin/static/ /opt/osctrl/static\nCOPY /go/src/osctrl/deploy/osquery/data/${OSQUERY_VERSION}.json /opt/osctrl/data/${OSQUERY_VERSION}.json\n\nRUN chown osctrl-admin:osctrl-admin -R /opt/osctrl/carved_files\n\nUSER osctrl-admin\nEXPOSE 9001\nWORKDIR /opt/osctrl\nENTRYPOINT [ \"/opt/osctrl/bin/osctrl-admin\" ]\n\n######################################## Ubuntu 20.04 node ########################################\nFROM ubuntu:20.04 as osctrl-ubuntu-osquery\nARG OSCTRL_VERSION\nARG OSQUERY_VERSION\nARG POSTGRES_DB_NAME\nARG POSTGRES_DB_USERNAME\nARG POSTGRES_DB_PASSWORD\n\n### Copy osctrl-cli bin and config ###\nRUN mkdir -p /opt/osctrl/\nRUN mkdir -p /opt/osctrl/bin\n\nCOPY --from=osctrl-tls /opt/osctrl/bin/osctrl-cli /opt/osctrl/bin/osctrl-cli\nCOPY --from=osctrl-tls /go/src/osctrl/deploy/docker/conf/osquery/wait.sh /opt/osctrl/bin/wait.sh\nRUN chmod +x /opt/osctrl/bin/wait.sh\n\nCOPY --from=osctrl-tls /go/src/osctrl/deploy/docker/conf/osctrl/db.json /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_NAME }}#${POSTGRES_DB_NAME}#g\" /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_USERNAME }}#${POSTGRES_DB_USERNAME}#g\" /opt/osctrl/config/db.json\nRUN sed -i \"s#{{ POSTGRES_DB_PASSWORD }}#${POSTGRES_DB_PASSWORD}#g\" /opt/osctrl/config/db.json\n\n### Install osquery ###\nRUN apt update && apt install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f \"https://osquery-packages.s3.amazonaws.com/deb/osquery_${OSQUERY_VERSION}-1.linux_$(dpkg --print-architecture).deb\" -o \"/tmp/osquery.deb\"\nRUN dpkg -i \"/tmp/osquery.deb\"\nCOPY --from=osctrl-admin /go/src/osctrl/deploy/docker/conf/tls/osctrl.crt /etc/osquery/osctrl.crt\n\nENTRYPOINT [ \"/opt/osctrl/bin/wait.sh\" ]"
}