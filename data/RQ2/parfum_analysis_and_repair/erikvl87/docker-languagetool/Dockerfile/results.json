{
  "startTime": 1674246911047,
  "endTime": 1674246912672,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG LANGUAGETOOL_VERSION=5.8\n\nFROM debian:buster as build\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update -y \\\n    && apt-get install --no-install-recommends -y \\\n    locales \\\n    bash \\\n    libgomp1 \\\n    openjdk-11-jdk-headless \\\n    git \\\n    maven \\\n    unzip \\\n    xmlstarlet \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\nENV LANG en_US.UTF-8\n\nARG LANGUAGETOOL_VERSION\nRUN git clone https://github.com/languagetool-org/languagetool.git --depth 1 -b v${LANGUAGETOOL_VERSION}\nWORKDIR /languagetool\nRUN [\"mvn\", \"--projects\", \"languagetool-standalone\", \"--also-make\", \"package\", \"-DskipTests\", \"--quiet\"]\nRUN LANGUAGETOOL_DIST_VERSION=$(xmlstarlet sel -N \"x=http://maven.apache.org/POM/4.0.0\" -t -v \"//x:project/x:properties/x:revision\" pom.xml) && unzip /languagetool/languagetool-standalone/target/LanguageTool-${LANGUAGETOOL_DIST_VERSION}.zip -d /dist\nRUN LANGUAGETOOL_DIST_FOLDER=$(find /dist/ -name 'LanguageTool-*') && mv $LANGUAGETOOL_DIST_FOLDER /dist/LanguageTool\n\n# Execute workarounds for ARM64 architectures.\n# https://github.com/languagetool-org/languagetool/issues/4543\nWORKDIR /\nCOPY arm64-workaround/. .\nRUN chmod +x ./bridj.sh ./hunspell.sh\nRUN bash -c \"./bridj.sh\"\nRUN bash -c \"./hunspell.sh\"\nWORKDIR /languagetool\n\nFROM alpine:3.16.0\n\nRUN apk add --no-cache \\\n    bash \\\n    curl \\\n    libstdc++ \\\n    openjdk11-jre-headless\n\nRUN addgroup -S languagetool && adduser -S languagetool -G languagetool\n\nCOPY --chown=languagetool --from=build /dist .\n\nWORKDIR /LanguageTool\n\nRUN mkdir /nonexistent && touch /nonexistent/.languagetool.cfg\n\nCOPY --chown=languagetool start.sh start.sh\n\nCOPY --chown=languagetool config.properties config.properties\n\nUSER languagetool\n\nHEALTHCHECK --timeout=10s --start-period=5s CMD curl --fail --data \"language=en-US&text=a simple test\" http://localhost:8010/v2/check || exit 1\n\nCMD [ \"bash\", \"start.sh\" ]\n\nEXPOSE 8010\n"
}