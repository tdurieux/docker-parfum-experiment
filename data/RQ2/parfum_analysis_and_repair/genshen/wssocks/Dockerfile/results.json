{
  "startTime": 1674249071468,
  "endTime": 1674249072116,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build method: just run `docker build --rm -t genshen/wssocks .`\n\n# build frontend code\nFROM node:14.15.4-alpine3.12 AS web-builder\n\nCOPY status-web web/\n\nRUN cd web \\\n    && yarn install \\\n    && yarn build && yarn cache clean;\n\n## build go binary\nFROM golang:1.15.7-alpine3.13 AS builder\n\nARG PACKAGE=github.com/genshen/wssocks\nARG BUILD_FLAG=\"-X 'github.com/genshen/wssocks/version.buildHash=`git rev-parse HEAD`' \\\n -X 'github.com/genshen/wssocks/version.buildTime=`date`' \\\n -X 'github.com/genshen/wssocks/version.buildGoVersion=`go version | cut -f 3,4 -d\\\" \\\"`'\"\n\nRUN apk add --no-cache git \\\n    && go get -u github.com/rakyll/statik\n\nCOPY ./  /go/src/${PACKAGE}/\nCOPY --from=web-builder web/build /go/src/github.com/genshen/wssocks/web-build/\n\nRUN cd ./src/${PACKAGE} \\\n    && cd cmd/server \\\n    && statik -src=../../web-build \\\n    && cd ../../ \\\n    && go build -ldflags \"${BUILD_FLAG}\" -o wssocks ${PACKAGE} \\\n    && go install\n\n## copy binary\nFROM alpine:3.13.0\n\nARG HOME=\"/home/wssocks\"\n\nRUN adduser -D wssocks -h ${HOME}\n\nCOPY --from=builder --chown=wssocks /go/bin/wssocks ${HOME}/wssocks\n\nWORKDIR ${HOME}\nUSER wssocks\n\nENTRYPOINT [\"./wssocks\"]\nCMD [\"--help\"]\n"
}