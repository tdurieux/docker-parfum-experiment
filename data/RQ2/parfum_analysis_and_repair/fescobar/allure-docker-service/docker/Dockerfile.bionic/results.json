{
  "startTime": 1674247911769,
  "endTime": 1674247912769,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 116
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 66,
        "lineEnd": 66,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARCH=amd64\nARG JDK=adoptopenjdk:11-jre-openj9-bionic\nARG BUILD_DATE\nARG BUILD_VERSION\nARG BUILD_REF\nARG ALLURE_RELEASE=NONE\nARG ALLURE_REPO=https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline\nARG QEMU_ARCH\nARG UID=1000\nARG GID=1000\n\n######\n\nFROM python:3.6-alpine AS dev_stage\nRUN apk update\nRUN apk add --no-cache build-base\nRUN pip install --no-cache-dir -U pylint\nRUN pip install --no-cache-dir -Iv setuptools==47.1.1 wheel==0.34.2 waitress==1.4.4 && \\\n    pip install --no-cache-dir -Iv Flask==1.1.2 Flask-JWT-Extended==3.24.1 flask-swagger-ui==3.36.0 requests==2.23.0\n\nENV ROOT_DIR=/code\nRUN mkdir -p $ROOT_DIR\nWORKDIR $ROOT_DIR\nCOPY allure-docker-api $ROOT_DIR/allure-docker-api\nRUN pylint --rcfile=allure-docker-api/.pylintrc allure-docker-api\n\n######\nFROM $ARCH/$JDK\nARG ARCH\nARG JDK\nARG BUILD_DATE\nARG BUILD_VERSION\nARG BUILD_REF\nARG ALLURE_RELEASE\nARG ALLURE_REPO\nARG QEMU_ARCH\nARG UID\nARG GID\n\nLABEL org.label-schema.build-date=${BUILD_DATE} \\\n    org.label-schema.docker.dockerfile=\"docker/Dockerfile.bionic\" \\\n    org.label-schema.license=\"MIT\" \\\n    org.label-schema.name=\"Allure Framework\" \\\n    org.label-schema.version=${BUILD_VERSION} \\\n    org.label-schema.description=\"Allure Framework is a flexible lightweight multi-language test report tool.\" \\\n    org.label-schema.url=\"https://docs.qameta.io/allure/\" \\\n    org.label-schema.vcs-ref=${BUILD_REF} \\\n    org.label-schema.vcs-type=\"Git\" \\\n    org.label-schema.vcs-url=\"https://github.com/fescobar/allure-docker-service\" \\\n    org.label-schema.arch=${ARCH} \\\n    authors=\"Frank Escobar <fescobar.systems@gmail.com>, Raymond Mouthaan <raymondmmouthaan@gmail.com>\"\n\n# QEMU - Quick Emulation\nCOPY tmp/qemu-$QEMU_ARCH-static /usr/bin/qemu-$QEMU_ARCH-static\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n      tzdata \\\n      nano \\\n      python3 \\\n      python3-pip \\\n      python3-dev \\\n      unzip && \\\n    ln -s `which python3` /usr/bin/python && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir -Iv setuptools==47.1.1 wheel==0.34.2 waitress==1.4.4 && \\\n    pip install --no-cache-dir -Iv Flask==1.1.2 Flask-JWT-Extended==3.25.0 flask-swagger-ui==3.36.0 requests==2.23.0 && \\\n    curl -f ${ALLURE_REPO}/${ALLURE_RELEASE}/allure-commandline-${ALLURE_RELEASE}.zip -L -o /tmp/allure-commandline.zip && \\\n        unzip -q /tmp/allure-commandline.zip -d / && \\\n        apt-get remove -y unzip && \\\n        rm -rf /tmp/* && \\\n        rm -rf /var/lib/apt/lists/* && \\\n        chmod -R +x /allure-$ALLURE_RELEASE/bin && \\\n        mkdir -p /app\n\nRUN groupadd --gid ${GID} allure \\\n    && useradd --uid ${UID} --gid allure --shell /bin/bash --create-home allure\n\nENV ROOT=/app\nENV ALLURE_HOME=/allure-$ALLURE_RELEASE\nENV ALLURE_HOME_SL=/allure\nENV PATH=$PATH:$ALLURE_HOME/bin\nENV ALLURE_RESOURCES=$ROOT/resources\nENV RESULTS_DIRECTORY=$ROOT/allure-results\nENV REPORT_DIRECTORY=$ROOT/allure-report\nENV RESULTS_HISTORY=$RESULTS_DIRECTORY/history\nENV REPORT_HISTORY=$REPORT_DIRECTORY/history\nENV ALLURE_VERSION=$ROOT/version\nENV EMAILABLE_REPORT_FILE_NAME='emailable-report-allure-docker-service.html'\nENV STATIC_CONTENT=$ROOT/allure-docker-api/static\nENV STATIC_CONTENT_PROJECTS=$STATIC_CONTENT/projects\nENV DEFAULT_PROJECT=default\nENV DEFAULT_PROJECT_ROOT=$STATIC_CONTENT_PROJECTS/$DEFAULT_PROJECT\nENV DEFAULT_PROJECT_RESULTS=$DEFAULT_PROJECT_ROOT/results\nENV DEFAULT_PROJECT_REPORTS=$DEFAULT_PROJECT_ROOT/reports\nENV EXECUTOR_FILENAME=executor.json\n\nRUN echo -n $(allure --version) > ${ALLURE_VERSION} && \\\n    echo \"ALLURE_VERSION: \"$(cat ${ALLURE_VERSION}) && \\\n    mkdir $ALLURE_HOME_SL && \\\n    ln -s $ALLURE_HOME/* $ALLURE_HOME_SL && \\\n    ln -s $STATIC_CONTENT_PROJECTS $ROOT/projects && \\\n    ln -s $DEFAULT_PROJECT_REPORTS $ROOT/default-reports\n\nWORKDIR $ROOT\nCOPY --chown=allure:allure allure-docker-api $ROOT/allure-docker-api\nCOPY --chown=allure:allure allure-docker-scripts $ROOT/\nRUN chmod +x $ROOT/*.sh && \\\n    mkdir $RESULTS_DIRECTORY && \\\n    mkdir -p $DEFAULT_PROJECT_REPORTS/latest && \\\n    ln -sf $RESULTS_DIRECTORY $DEFAULT_PROJECT_RESULTS && \\\n    ln -sf $DEFAULT_PROJECT_REPORTS/latest $REPORT_DIRECTORY && \\\n    allure generate -c -o /tmp/resources && \\\n    mkdir $ALLURE_RESOURCES && \\\n    cp /tmp/resources/app.js $ALLURE_RESOURCES && \\\n    cp /tmp/resources/styles.css $ALLURE_RESOURCES\n\nRUN chown -R allure:allure $ROOT\n\nVOLUME [ \"$RESULTS_DIRECTORY\" ]\n\nENV DEPRECATED_PORT=4040\nENV PORT=5050\n\nEXPOSE $DEPRECATED_PORT\nEXPOSE $PORT\n\nHEALTHCHECK --interval=10s --timeout=60s --retries=3 \\\n      CMD curl -f http://localhost:$PORT || exit 1\n\nUSER allure\n\nCMD $ROOT/runAllureDeprecated.sh & $ROOT/runAllureApp.sh & $ROOT/checkAllureResultsFiles.sh\n"
}