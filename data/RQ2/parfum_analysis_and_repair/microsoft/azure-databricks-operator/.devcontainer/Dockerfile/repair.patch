diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/azure-databricks-operator/.devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/azure-databricks-operator/.devcontainer/Dockerfile/repaired.Dockerfile
index a19cfd5..1e39067 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/azure-databricks-operator/.devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/azure-databricks-operator/.devcontainer/Dockerfile/repaired.Dockerfile
@@ -14,32 +14,32 @@ ENV DEBIAN_FRONTEND=noninteractive
 # Configure apt, install packages and tools
 RUN apt-get update \
     && apt-get -y install --no-install-recommends apt-utils 2>&1 \
-    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed
-    && apt-get -y install git procps lsb-release \
+    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed \
+    && apt-get -y --no-install-recommends install git procps lsb-release \
     # Install python
-    && apt-get -y install --no-install-recommends git openssl build-essential ca-certificates nano curl python python3-dev python3-pip python3-venv python3-setuptools python3-wheel\
+    && apt-get -y install --no-install-recommends git openssl build-essential ca-certificates nano curl python python3-dev python3-pip python3-venv python3-setuptools python3-wheel \
     # Install pylint
     && pip3 --disable-pip-version-check --no-cache-dir install pylint \
     # Install Editor
-    && apt-get install vim -y \
+    && apt-get install --no-install-recommends vim -y \
     # Clean up
     && apt-get autoremove -y \
     && apt-get clean -y \
-    && rm -rf /var/lib/apt/lists/* 
+    && rm -rf /var/lib/apt/lists/*
 
 RUN apt-get update \
-    # Install Docker CE CLI
-    && apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \
+    # Install Docker CE CLI \
+    && apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common lsb-release \
     && curl -fsSL https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]')/gpg | apt-key add - 2>/dev/null \
     && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/$(lsb_release -is | tr '[:upper:]' '[:lower:]') $(lsb_release -cs) stable" \
     && apt-get update \
-    && apt-get install -y docker-ce-cli \
+    && apt-get install --no-install-recommends -y docker-ce-cli \
     # Install kubectl
-    && curl -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$KubectlVersion/bin/linux/amd64/kubectl \
+    && curl -f -sSL -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/$KubectlVersion/bin/linux/amd64/kubectl \
     && chmod +x /usr/local/bin/kubectl \
     # Install Helm
-    && curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | DESIRED_VERSION=$HelmVersion bash \
-    && helm repo add stable https://kubernetes-charts.storage.googleapis.com/ 
+    && curl -f https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | DESIRED_VERSION=$HelmVersion bash \
+    && helm repo add stable https://kubernetes-charts.storage.googleapis.com/ && rm -rf /var/lib/apt/lists/*;
 
 
 # Enable go modules
@@ -62,10 +62,10 @@ RUN \
     && rm -rf /go/src/ && rm -rf /go/pkg
 
 # Enable bash completion
-RUN apt-get update && apt install -y bash-completion && echo "source /etc/bash_completion" >> "/root/.bashrc"
+RUN apt-get update && apt install --no-install-recommends -y bash-completion && echo "source /etc/bash_completion" >> "/root/.bashrc" && rm -rf /var/lib/apt/lists/*;
 
 # Verify git, process tools installed
-RUN apt-get -y install git procps wget nano zsh inotify-tools jq
+RUN apt-get -y --no-install-recommends install git procps wget nano zsh inotify-tools jq && rm -rf /var/lib/apt/lists/*;
 RUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true
 
 # Install golangci-linter
@@ -87,7 +87,7 @@ RUN rm -rf /go/src/ && rm -rf /go/pkg
 
 ENV SHELL /bin/bash
 
-# Save command line history 
+# Save command line history
 RUN echo "export HISTFILE=/root/commandhistory/.bash_history" >> "/root/.bashrc" \
     && echo "export PROMPT_COMMAND='history -a'" >> "/root/.bashrc" \
     && mkdir -p /root/commandhistory \
@@ -98,11 +98,11 @@ RUN echo "alias k=kubectl" >> "/root/.bashrc"
 # Add autocomplete to kubectl
 RUN echo "source <(kubectl completion bash)" >> "/root/.bashrc"
 RUN echo "source <(kubectl completion bash | sed 's/kubectl/k/g')" >> "/root/.bashrc"
-# Add kubectx 
+# Add kubectx
 RUN git clone https://github.com/ahmetb/kubectx.git /root/.kubectx \
     && COMPDIR=$(pkg-config --variable=completionsdir bash-completion) \
     && ln -sf /root/.kubectx/completion/kubens.bash $COMPDIR/kubens \
-    && ln -sf /root/.kubectx/completion/kubectx.bash $COMPDIR/kubectx 
+    && ln -sf /root/.kubectx/completion/kubectx.bash $COMPDIR/kubectx
 
 # Git command prompt
 RUN git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1 \