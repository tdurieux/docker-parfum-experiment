diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/onnxruntime/dockerfiles/Dockerfile.openvino-csharp b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/onnxruntime/dockerfiles/Dockerfile.openvino-csharp/repaired.Dockerfile
index 1daaa7c..2e8c6d2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/onnxruntime/dockerfiles/Dockerfile.openvino-csharp
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/onnxruntime/dockerfiles/Dockerfile.openvino-csharp/repaired.Dockerfile
@@ -31,12 +31,12 @@ RUN apt update -y && \
     rm -rf /var/lib/apt/lists/* && \
 # libusb from source
     cd /opt && \
-    curl -L https://github.com/libusb/libusb/archive/v1.0.22.zip --output v1.0.22.zip && \
+    curl -f -L https://github.com/libusb/libusb/archive/v1.0.22.zip --output v1.0.22.zip && \
     unzip v1.0.22.zip && \
     cd /opt/libusb-1.0.22 && \
 # bootstrap steps
     ./bootstrap.sh && \
-    ./configure --disable-udev --enable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-udev --enable-shared && \
     make -j4 && \
     cd /opt/libusb-1.0.22/libusb && \
 # configure libusb1.0.22
@@ -51,7 +51,7 @@ RUN apt update -y && \
     apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \
     echo "deb https://apt.repos.intel.com/openvino/2022 bionic main" | tee /etc/apt/sources.list.d/intel-openvino-2022.list && \
     apt update -y && \
-    apt -y install openvino-2022.1.0 && \
+    apt -y --no-install-recommends install openvino-2022.1.0 && \
     cd ${INTEL_OPENVINO_DIR}/install_dependencies && ./install_openvino_dependencies.sh -y && \
     cd /opt/libusb-1.0.22/ && \
     /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' && \
@@ -75,11 +75,11 @@ RUN apt update -y && \
     rm -rf /tmp/opencl && \
 # Install Mono
     cd ${MY_ROOT} && \
-    apt install -y gnupg ca-certificates && \
-    curl https://download.mono-project.com/repo/xamarin.gpg | apt-key add - && \
+    apt install --no-install-recommends -y gnupg ca-certificates && \
+    curl -f https://download.mono-project.com/repo/xamarin.gpg | apt-key add - && \
     echo "deb https://download.mono-project.com/repo/ubuntu stable-bionic main" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list && \
     apt update -y && \
-    apt install -y mono-devel && \
+    apt install --no-install-recommends -y mono-devel && \
 # Install nuget.exe
     wget https://dist.nuget.org/win-x86-commandline/latest/nuget.exe && \
     mv nuget.exe /usr/local/bin/nuget.exe && \
@@ -88,15 +88,15 @@ RUN apt update -y && \
 # Install .NET core
     wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \
     dpkg -i packages-microsoft-prod.deb && \
-    apt-get update -y &&\
-    apt-get install -y apt-transport-https && \
     apt-get update -y && \
-    apt-get install -y dotnet-sdk-5.0 && \
+    apt-get install --no-install-recommends -y apt-transport-https && \
+    apt-get update -y && \
+    apt-get install --no-install-recommends -y dotnet-sdk-5.0 && \
 # Download and build ONNX Runtime
     cd ${MY_ROOT} && \
     git clone --recursive -b ${ONNXRUNTIME_BRANCH} ${ONNXRUNTIME_REPO} && \
     /bin/sh onnxruntime/dockerfiles/scripts/install_common_deps.sh && \
-    pip install onnx==1.9 && \
+    pip install --no-cache-dir onnx==1.9 && \
     cd ${MY_ROOT}/onnxruntime && ./build.sh --config Release --update --build --parallel --use_openvino ${DEVICE} --build_nuget --build_shared_lib && \
     cp ${MY_ROOT}/onnxruntime/build/Linux/Release/Microsoft.ML.OnnxRuntime.Managed* ${MY_ROOT}/onnxruntime/build/Linux/Release/nuget-artifacts && \
     mv ${MY_ROOT}/onnxruntime/build/Linux/Release/nuget-artifacts ${MY_ROOT} && \
@@ -104,7 +104,7 @@ RUN apt update -y && \
     rm -rf ${MY_ROOT}/cmake* /opt/cmake ${MY_ROOT}/onnxruntime && \
     rm -rf /opt/miniconda && \
     rm -rf /opt/v1.0.22.zip && \
-    apt remove -y git && apt autoremove -y  && apt remove -y cmake && \
-    cd /usr/lib/ && rm -rf python2.7 python3.7 python3.8  && \
+    apt remove -y git && apt autoremove -y && apt remove -y cmake && \
+    cd /usr/lib/ && rm -rf python2.7 python3.7 python3.8 && \
     cd && rm -rf .cache && \
-    cd /usr/share/python-wheels/ && rm -rf *.whl
+    cd /usr/share/python-wheels/ && rm -rf *.whl && rm -rf /var/lib/apt/lists/*;