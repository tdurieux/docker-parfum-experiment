{
  "startTime": 1674216066621,
  "endTime": 1674216068261,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------\n# Copyright(C) 2019 Intel Corporation.\n# Licensed under the MIT License.\n#--------------------------------------------------------------------------\n\nFROM ubuntu:18.04\n\nARG DEVICE=CPU_FP32\nARG ONNXRUNTIME_REPO=https://github.com/microsoft/onnxruntime.git\nARG ONNXRUNTIME_BRANCH=master\n\nWORKDIR /code\nARG MY_ROOT=/code\n\nENV PATH /opt/miniconda/bin:/code/cmake-3.21.0-linux-x86_64/bin:$PATH\nENV LD_LIBRARY_PATH=/opt/miniconda/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\n\nENV INTEL_OPENVINO_DIR=/opt/intel/openvino_2022.1.0.643\nENV InferenceEngine_DIR=${INTEL_OPENVINO_DIR}/runtime/cmake\nENV IE_PLUGINS_PATH=${INTEL_OPENVINO_DIR}/runtime/lib/intel64\nENV LD_LIBRARY_PATH=/opt/intel/opencl:${INTEL_OPENVINO_DIR}/runtime/3rdparty/tbb/lib:${IE_PLUGINS_PATH}:${LD_LIBRARY_PATH}\nENV HDDL_INSTALL_DIR=${INTEL_OPENVINO_DIR}/runtime/3rdparty/hddl\nENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/runtime/3rdparty/hddl/lib:$LD_LIBRARY_PATH\nENV ngraph_DIR=${INTEL_OPENVINO_DIR}/runtime/cmake\nENV LANG en_US.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt update -y && \\\n    apt -y install --no-install-recommends apt-transport-https ca-certificates python3 python3-pip gnupg udev zip unzip x11-apps lsb-core wget curl cpio sudo libboost-python-dev libpng-dev zlib1g-dev git libnuma1 ocl-icd-libopencl1 clinfo libboost-filesystem1.65-dev libboost-thread1.65-dev protobuf-compiler libprotoc-dev autoconf automake libtool libjson-c-dev unattended-upgrades && \\\n    unattended-upgrade && \\\n    rm -rf /var/lib/apt/lists/* && \\\n# libusb from source\n    cd /opt && \\\n    curl -f -L https://github.com/libusb/libusb/archive/v1.0.22.zip --output v1.0.22.zip && \\\n    unzip v1.0.22.zip && \\\n    cd /opt/libusb-1.0.22 && \\\n# bootstrap steps\n    ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-udev --enable-shared && \\\n    make -j4 && \\\n    cd /opt/libusb-1.0.22/libusb && \\\n# configure libusb1.0.22\n    /bin/mkdir -p '/usr/local/lib' && \\\n    /bin/bash ../libtool --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' && \\\n    /bin/mkdir -p '/usr/local/include/libusb-1.0' && \\\n    /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' && \\\n    /bin/mkdir -p '/usr/local/lib/pkgconfig' && \\\n# Install OpenVINO\n    cd ${MY_ROOT} && \\\n    wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \\\n    apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB && \\\n    echo \"deb https://apt.repos.intel.com/openvino/2022 bionic main\" | tee /etc/apt/sources.list.d/intel-openvino-2022.list && \\\n    apt update -y && \\\n    apt -y --no-install-recommends install openvino-2022.1.0 && \\\n    cd ${INTEL_OPENVINO_DIR}/install_dependencies && ./install_openvino_dependencies.sh -y && \\\n    cd /opt/libusb-1.0.22/ && \\\n    /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' && \\\n    cp ${INTEL_OPENVINO_DIR}/runtime/3rdparty/97-myriad-usbboot.rules /etc/udev/rules.d/ && \\\n    ldconfig && \\\n# Install GPU runtime and drivers\n    cd ${MY_ROOT} && \\\n    mkdir /tmp/opencl && \\\n    cd /tmp/opencl && \\\n    apt update -y && \\\n    apt install -y --no-install-recommends ocl-icd-libopencl1 && \\\n    rm -rf /var/lib/apt/lists/* && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/21.38.21026/intel-gmmlib_21.2.1_amd64.deb\" && \\\n    wget \"https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.8708/intel-igc-core_1.0.8708_amd64.deb\" && \\\n    wget \"https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.8708/intel-igc-opencl_1.0.8708_amd64.deb\" && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/21.38.21026/intel-opencl_21.38.21026_amd64.deb\" && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/21.38.21026/intel-ocloc_21.38.21026_amd64.deb\" && \\\n    wget \"https://github.com/intel/compute-runtime/releases/download/21.38.21026/intel-level-zero-gpu_1.2.21026_amd64.deb\" && \\\n    dpkg -i /tmp/opencl/*.deb && \\\n    ldconfig && \\\n    rm -rf /tmp/opencl && \\\n# Install Mono\n    cd ${MY_ROOT} && \\\n    apt install --no-install-recommends -y gnupg ca-certificates && \\\n    curl -f https://download.mono-project.com/repo/xamarin.gpg | apt-key add - && \\\n    echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" | sudo tee /etc/apt/sources.list.d/mono-official-stable.list && \\\n    apt update -y && \\\n    apt install --no-install-recommends -y mono-devel && \\\n# Install nuget.exe\n    wget https://dist.nuget.org/win-x86-commandline/latest/nuget.exe && \\\n    mv nuget.exe /usr/local/bin/nuget.exe && \\\n    echo 'mono /usr/local/bin/nuget.exe $@' > /usr/local/bin/nuget && \\\n    chmod a+x /usr/local/bin/nuget && \\\n# Install .NET core\n    wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \\\n    dpkg -i packages-microsoft-prod.deb && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y apt-transport-https && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y dotnet-sdk-5.0 && \\\n# Download and build ONNX Runtime\n    cd ${MY_ROOT} && \\\n    git clone --recursive -b ${ONNXRUNTIME_BRANCH} ${ONNXRUNTIME_REPO} && \\\n    /bin/sh onnxruntime/dockerfiles/scripts/install_common_deps.sh && \\\n    pip install --no-cache-dir onnx==1.9 && \\\n    cd ${MY_ROOT}/onnxruntime && ./build.sh --config Release --update --build --parallel --use_openvino ${DEVICE} --build_nuget --build_shared_lib && \\\n    cp ${MY_ROOT}/onnxruntime/build/Linux/Release/Microsoft.ML.OnnxRuntime.Managed* ${MY_ROOT}/onnxruntime/build/Linux/Release/nuget-artifacts && \\\n    mv ${MY_ROOT}/onnxruntime/build/Linux/Release/nuget-artifacts ${MY_ROOT} && \\\n# Clean-up unnecessary files\n    rm -rf ${MY_ROOT}/cmake* /opt/cmake ${MY_ROOT}/onnxruntime && \\\n    rm -rf /opt/miniconda && \\\n    rm -rf /opt/v1.0.22.zip && \\\n    apt remove -y git && apt autoremove -y && apt remove -y cmake && \\\n    cd /usr/lib/ && rm -rf python2.7 python3.7 python3.8 && \\\n    cd && rm -rf .cache && \\\n    cd /usr/share/python-wheels/ && rm -rf *.whl && rm -rf /var/lib/apt/lists/*;\n"
}