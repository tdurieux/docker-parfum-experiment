{
  "startTime": 1674253868831,
  "endTime": 1674253869591,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# --------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License.\n# --------------------------------------------------------------\n# Dockerfile to run ONNXRuntime with TensorRT integration\n\n# nVidia TensorRT Base Image\nARG TRT_CONTAINER_VERSION=21.12\nFROM nvcr.io/nvidia/tensorrt:${TRT_CONTAINER_VERSION}-py3\n\nARG ONNXRUNTIME_REPO=https://github.com/Microsoft/onnxruntime\nARG ONNXRUNTIME_BRANCH=master\nARG CMAKE_CUDA_ARCHITECTURES=37;50;52;60;61;70;75;80\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y sudo git bash unattended-upgrades && rm -rf /var/lib/apt/lists/*;\nRUN unattended-upgrade\n\nWORKDIR /code\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:/code/cmake-3.21.0-linux-x86_64/bin:/opt/miniconda/bin:${PATH}\n\n# Prepare onnxruntime repository & build onnxruntime with TensorRT\nRUN git clone --single-branch --branch ${ONNXRUNTIME_BRANCH} --recursive ${ONNXRUNTIME_REPO} onnxruntime &&\\\n    /bin/sh onnxruntime/dockerfiles/scripts/install_common_deps.sh &&\\\n    trt_version=${TRT_VERSION:0:3} &&\\\n    /bin/sh onnxruntime/dockerfiles/scripts/checkout_submodules.sh ${trt_version} &&\\\n    cd onnxruntime &&\\\n    /bin/sh build.sh --parallel --build_shared_lib --cuda_home /usr/local/cuda --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_tensorrt --tensorrt_home /usr/lib/x86_64-linux-gnu/ --config Release --build_wheel --skip_tests --skip_submodule_sync --cmake_extra_defines '\"CMAKE_CUDA_ARCHITECTURES='${CMAKE_CUDA_ARCHITECTURES}'\"' && \\\n    pip install --no-cache-dir /code/onnxruntime/build/Linux/Release/dist/*.whl && \\\n    cd ..\n"
}