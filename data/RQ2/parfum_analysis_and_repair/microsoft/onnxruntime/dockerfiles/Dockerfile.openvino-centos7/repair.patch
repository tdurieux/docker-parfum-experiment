diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/onnxruntime/dockerfiles/Dockerfile.openvino-centos7 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/onnxruntime/dockerfiles/Dockerfile.openvino-centos7/repaired.Dockerfile
index e500f3c..a6802a2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/onnxruntime/dockerfiles/Dockerfile.openvino-centos7
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/onnxruntime/dockerfiles/Dockerfile.openvino-centos7/repaired.Dockerfile
@@ -24,7 +24,7 @@ ENV HDDL_INSTALL_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/ext
 ENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/hddl/lib:$LD_LIBRARY_PATH
 ENV LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/usr/local/lib64:/usr/lib64:/lib64:$LD_LIBRARY_PATH
 
-# Install packages 
+# Install packages
 RUN yum update -y && \
     yum groupinstall "Development Tools" -y && \
     yum install -y yum-utils autoconf automake libtool unzip udev wget zlib-devel libffi-devel openssl-devel boost-devel-1.53.0 && \
@@ -42,8 +42,8 @@ RUN yum update -y && \
     cd /opt/ && wget https://github.com/libusb/libusb/archive/v1.0.22.zip && \
     unzip v1.0.22.zip && rm -rf v1.0.22.zip && cd  /opt/libusb-1.0.22 && \
 # bootstrap steps
-    ./bootstrap.sh && \ 
-    ./configure --disable-udev --enable-shared && \
+    ./bootstrap.sh && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-udev --enable-shared && \
     make -j4 && \
 # configure libusb1.0.22
     cd /opt/libusb-1.0.22/libusb && \
@@ -64,7 +64,7 @@ RUN yum update -y && \
     cp /opt/intel/openvino_2021/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ && \
     ldconfig && \
 # Install GPU runtime and drivers
-    cd ${MY_ROOT} && \    
+    cd ${MY_ROOT} && \
     mkdir /tmp/opencl && \
     cd /tmp/opencl && \
     yum install -y epel-release && \
@@ -75,8 +75,8 @@ RUN yum update -y && \
     wget -O intel-igc-opencl-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-opencl-1.0.2597-1.el7.x86_64.rpm/download && \
     wget -O intel-gmmlib-19.3.2-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-gmmlib-19.3.2-1.el7.x86_64.rpm/download && \
     wget -O intel-gmmlib-devel-19.3.2-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-gmmlib-devel-19.3.2-1.el7.x86_64.rpm/download && \
-    rpm -i /tmp/opencl/*.rpm  && \
-    ldconfig  && \
+    rpm -i /tmp/opencl/*.rpm && \
+    ldconfig && \
     rm -rf /tmp/opencl && \
 # Installing gcc-10
     yum install -y centos-release-scl && \
@@ -86,20 +86,20 @@ RUN yum update -y && \
     source scl_source enable devtoolset-10 && \
     cd /code/ && \
     wget https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz && tar xvf Python-3.8.3.tgz && \
-    cd Python-3.8*/ && ./configure && make && make install && \
-    cd ../ &&  mkdir -p /usr/bin/Python38 && ln -s Python-3.8.3/ /usr/bin/Python38 && \ 
+    cd Python-3.8*/ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && \
+    cd ../ && mkdir -p /usr/bin/Python38 && ln -s Python-3.8.3/ /usr/bin/Python38 && \
 # installing dependancies 
     yum install -y python3-lxml python3-six libusb.x86_64 && \
-    yum clean packages &&  yum clean all && rm -rf /var/cache/yum && \
+    yum clean packages && yum clean all && rm -rf /var/cache/yum && \
 # Build onnxruntime
     cd $MY_ROOT && \
-    pip3 install numpy wheel setuptools cython && \
+    pip3 install --no-cache-dir numpy wheel setuptools cython && \
     git clone --recursive -b ${ONNXRUNTIME_BRANCH} ${ONNXRUNTIME_REPO} && \
-    pip3 install onnx && \
+    pip3 install --no-cache-dir onnx && \
     cd /code/onnxruntime && ./build.sh --config Release --update --build --parallel --use_openvino ${DEVICE} --build_shared_lib --build_wheel && \
-    pip3 install /code/onnxruntime/build/Linux/Release/dist/*-linux_x86_64.whl && \
+    pip3 install --no-cache-dir /code/onnxruntime/build/Linux/Release/dist/*-linux_x86_64.whl && \
 # Clean up
     cd  $MY_ROOT && rm -rf onnxruntime Python-3* && \
     cd ${MY_ROOT}/ && rm -rf cmake* && \
     cd /usr/share/ && rm -rf gcc* && cd /usr/lib/ && rm -rf gcc cd && rm -rf .cache && \
-    cd ${INTEL_OPENVINO_DIR}/ && rm -rf documentation data_processing && cd deployment_tools/ && rm -rf tools
\ No newline at end of file
+    cd ${INTEL_OPENVINO_DIR}/ && rm -rf documentation data_processing && cd deployment_tools/ && rm -rf tools && rm Python-3.8.3.tgz
\ No newline at end of file