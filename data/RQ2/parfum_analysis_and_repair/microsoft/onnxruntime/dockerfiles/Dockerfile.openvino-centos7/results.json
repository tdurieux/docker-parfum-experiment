{
  "startTime": 1674253959784,
  "endTime": 1674253961522,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 23,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 69,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------\n# Copyright(C) 2021 Intel Corporation.\n# SPDX-License-Identifier: MIT\n#--------------------------------------------------------------------------\n\nFROM centos:7.8.2003\n\nWORKDIR /code\n\nARG MY_ROOT=/code\nARG YUM_OV_PACKAGE=intel-openvino-runtime-centos7-2021.4.752.x86_64\nARG DEVICE=CPU_FP32\nARG ONNXRUNTIME_REPO=https://github.com/microsoft/onnxruntime\nARG ONNXRUNTIME_BRANCH=master\n\nENV INTEL_OPENVINO_DIR=/opt/intel/openvino_2021.4.752\nENV InferenceEngine_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/share\nENV IE_PLUGINS_PATH=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/lib/intel64\nENV ngraph_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/ngraph/cmake\nENV LD_LIBRARY_PATH=/opt/intel/opencl:${INTEL_OPENVINO_DIR}/inference_engine/external/gna/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/mkltiny_lnx/lib:$INTEL_OPENVINO_DIR/deployment_tools/ngraph/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/omp/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/lib:${IE_PLUGINS_PATH}:${LD_LIBRARY_PATH}\nENV OpenCV_DIR=${INTEL_OPENVINO_DIR}/opencv/share/OpenCV\nENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/opencv/lib:${INTEL_OPENVINO_DIR}/opencv/share/OpenCV/3rdparty/lib:${LD_LIBRARY_PATH}\nENV HDDL_INSTALL_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/hddl\nENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/hddl/lib:$LD_LIBRARY_PATH\nENV LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/usr/local/lib64:/usr/lib64:/lib64:$LD_LIBRARY_PATH\n\n# Install packages\nRUN yum update -y && \\\n    yum groupinstall \"Development Tools\" -y && \\\n    yum install -y yum-utils autoconf automake libtool unzip udev wget zlib-devel libffi-devel openssl-devel boost-devel-1.53.0 && \\\n    yum clean packages &&  yum clean all && rm -rf /var/cache/yum && \\\n# Install cmake\n    cd $MY_ROOT && \\\n    wget https://github.com/Kitware/CMake/releases/download/v3.18.6/cmake-3.18.6.tar.gz && \\\n    tar -zxvf cmake-3.18.6.tar.gz && rm -rf cmake-3.18.6.tar.gz && \\\n    cd cmake-3.18.6 && \\\n    ./bootstrap && \\\n    make && \\\n    make install && \\\n    cd $MY_ROOT && \\\n# libusb1.0.22\n    cd /opt/ && wget https://github.com/libusb/libusb/archive/v1.0.22.zip && \\\n    unzip v1.0.22.zip && rm -rf v1.0.22.zip && cd  /opt/libusb-1.0.22 && \\\n# bootstrap steps\n    ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-udev --enable-shared && \\\n    make -j4 && \\\n# configure libusb1.0.22\n    cd /opt/libusb-1.0.22/libusb && \\\n    /bin/mkdir -p '/usr/local/lib' && \\\n    /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' && \\\n    /bin/mkdir -p '/usr/local/include/libusb-1.0' && \\\n    /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' && \\\n    /bin/mkdir -p '/usr/local/lib/pkgconfig' && \\\n# Install openvino\n    yum-config-manager --add-repo https://yum.repos.intel.com/openvino/2021/setup/intel-openvino-2021.repo && \\\n    rpm --import https://yum.repos.intel.com/openvino/2021/setup/RPM-GPG-KEY-INTEL-OPENVINO-2021 && \\\n    yum update -y && yum list intel-openvino* && \\\n    yum install -y $YUM_OV_PACKAGE && \\\n    cd ${INTEL_OPENVINO_DIR}/install_dependencies/ && ./install_openvino_dependencies.sh -y && \\\n    printf \"\\nexport LD_LIBRARY_PATH=\\${LD_LIBRARY_PATH}:/usr/local/lib\\n\" >> /opt/intel/openvino_2021.4.752/bin/setupvars.sh && \\\n    cd /opt/libusb-1.0.22 && \\\n    /usr/bin/install -c -m 644 libusb-1.0.pc '/usr/local/lib/pkgconfig' && \\\n    cp /opt/intel/openvino_2021/deployment_tools/inference_engine/external/97-myriad-usbboot.rules /etc/udev/rules.d/ && \\\n    ldconfig && \\\n# Install GPU runtime and drivers\n    cd ${MY_ROOT} && \\\n    mkdir /tmp/opencl && \\\n    cd /tmp/opencl && \\\n    yum install -y epel-release && \\\n    yum install -y ocl-icd ocl-icd-devel && \\\n    wget -O intel-igc-core-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-core-1.0.2597-1.el7.x86_64.rpm/download && \\\n    wget -O intel-opencl-19.41.14441-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-opencl-19.41.14441-1.el7.x86_64.rpm/download && \\\n    wget -O intel-igc-opencl-devel-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-opencl-devel-1.0.2597-1.el7.x86_64.rpm/download && \\\n    wget -O intel-igc-opencl-1.0.2597-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-igc-opencl-1.0.2597-1.el7.x86_64.rpm/download && \\\n    wget -O intel-gmmlib-19.3.2-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-gmmlib-19.3.2-1.el7.x86_64.rpm/download && \\\n    wget -O intel-gmmlib-devel-19.3.2-1.el7.x86_64.rpm https://sourceforge.net/projects/intel-compute-runtime/files/19.41.14441/centos-7/intel-gmmlib-devel-19.3.2-1.el7.x86_64.rpm/download && \\\n    rpm -i /tmp/opencl/*.rpm && \\\n    ldconfig && \\\n    rm -rf /tmp/opencl && \\\n# Installing gcc-10\n    yum install -y centos-release-scl && \\\n    yum install -y devtoolset-10-gcc* && \\\n    echo 'source scl_source enable devtoolset-10' >> ~/.bashrc && \\\n# python installation\n    source scl_source enable devtoolset-10 && \\\n    cd /code/ && \\\n    wget https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz && tar xvf Python-3.8.3.tgz && \\\n    cd Python-3.8*/ && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n    cd ../ && mkdir -p /usr/bin/Python38 && ln -s Python-3.8.3/ /usr/bin/Python38 && \\\n# installing dependancies \n    yum install -y python3-lxml python3-six libusb.x86_64 && \\\n    yum clean packages && yum clean all && rm -rf /var/cache/yum && \\\n# Build onnxruntime\n    cd $MY_ROOT && \\\n    pip3 install --no-cache-dir numpy wheel setuptools cython && \\\n    git clone --recursive -b ${ONNXRUNTIME_BRANCH} ${ONNXRUNTIME_REPO} && \\\n    pip3 install --no-cache-dir onnx && \\\n    cd /code/onnxruntime && ./build.sh --config Release --update --build --parallel --use_openvino ${DEVICE} --build_shared_lib --build_wheel && \\\n    pip3 install --no-cache-dir /code/onnxruntime/build/Linux/Release/dist/*-linux_x86_64.whl && \\\n# Clean up\n    cd  $MY_ROOT && rm -rf onnxruntime Python-3* && \\\n    cd ${MY_ROOT}/ && rm -rf cmake* && \\\n    cd /usr/share/ && rm -rf gcc* && cd /usr/lib/ && rm -rf gcc cd && rm -rf .cache && \\\n    cd ${INTEL_OPENVINO_DIR}/ && rm -rf documentation data_processing && cd deployment_tools/ && rm -rf tools && rm Python-3.8.3.tgz"
}