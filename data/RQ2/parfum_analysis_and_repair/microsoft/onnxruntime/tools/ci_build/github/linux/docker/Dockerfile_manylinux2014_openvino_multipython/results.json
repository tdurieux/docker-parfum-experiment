{
  "startTime": 1674217839100,
  "endTime": 1674217840436,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux2014_x86_64:latest\n\nENV PATH /usr/local/gradle/bin:/opt/rh/devtoolset-10/root/usr/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nADD scripts /tmp/scripts\nRUN cd /tmp/scripts && /tmp/scripts/manylinux/install_centos.sh && /tmp/scripts/manylinux/install_deps.sh && rm -rf /tmp/scripts\n\nARG PYTHON_VER_PATH=\"cp36-cp36m\"\nARG PYTHON_VERSION=\"3.6\"\nARG BUILD_UID=1001\nARG BUILD_USER=onnxruntimedev\nARG OV_DEVICE_PRECISION=\"CPU_FP32\"\nARG ENABLE_TRAINING=true\nARG ORT_BRANCH=\"master\"\nRUN adduser --uid $BUILD_UID $BUILD_USER\nWORKDIR /home/$BUILD_USER\nENV PYTHON_EXE=\"/opt/python/$PYTHON_VER_PATH/bin/python$PYTHON_VERSION\"\n\nRUN yum -y install wget git && rm -rf /var/cache/yum\n\n# libusb1.0.22\nRUN cd /home/ && wget https://github.com/libusb/libusb/archive/v1.0.22.zip && \\\n    unzip v1.0.22.zip && rm -rf v1.0.22.zip && cd  /home/libusb-1.0.22 && \\\n# bootstrap steps\n    ./bootstrap.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-udev --enable-shared && \\\n    make -j4 && \\\n# configure libusb1.0.22\n    cd /home/libusb-1.0.22/libusb && \\\n    /bin/mkdir -p '/usr/local/lib' && \\\n    /bin/bash ../libtool   --mode=install /usr/bin/install -c   libusb-1.0.la '/usr/local/lib' && \\\n    /bin/mkdir -p '/usr/local/include/libusb-1.0' && \\\n    /usr/bin/install -c -m 644 libusb.h '/usr/local/include/libusb-1.0' && \\\n    /bin/mkdir -p '/usr/local/lib/pkgconfig'\n\nRUN ${PYTHON_EXE} -m pip install onnx numpy wheel\nUSER $BUILD_USER\nRUN cd $WORKDIR && git clone https://github.com/openvinotoolkit/openvino.git && \\\n    cd openvino && \\\n    git checkout 2022.1.0 && \\\n    git submodule init && \\\n    git submodule update --recursive\n\nRUN cd $WORKDIR && cd openvino && mkdir build && cd build && \\\n    cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS=-D_GLIBCXX_USE_CXX11_ABI=0 -DCMAKE_INSTALL_PREFIX=/home/onnxruntimedev/openvino_2022.1.0 && \\\n    make -j8 && make install\n\nENV INTEL_OPENVINO_DIR /home/onnxruntimedev/openvino_2022.1.0\nENV LD_LIBRARY_PATH $INTEL_OPENVINO_DIR/runtime/lib/intel64:$INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/lib:/usr/local/openblas/lib:$LD_LIBRARY_PATH\nENV TBB_LIBS $INTEL_OPENVINO_DIR/runtime/3rdparty/tbb/lib\nENV InferenceEngine_DIR $INTEL_OPENVINO_DIR/runtime/cmake\nENV ngraph_DIR $INTEL_OPENVINO_DIR/runtime/cmake\nENV IE_PLUGINS_PATH $INTEL_OPENVINO_DIR/runtime/lib/intel64\nENV OPENVINO_MANYLINUX 1\n\nRUN cd $WORKDIR && \\\n    git clone --recursive -b $ORT_BRANCH https://github.com/intel/onnxruntime.git\nRUN cd onnxruntime/onnxruntime/core/providers/openvino && mkdir scripts\n\nRUN cp ${IE_PLUGINS_PATH}/libopenvino.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/libopenvino_c.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/libopenvino_onnx_frontend.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/libopenvino_intel_cpu_plugin.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/libopenvino_intel_gpu_plugin.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/libopenvino_intel_myriad_plugin.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/libopenvino_hetero_plugin.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/libopenvino_auto_plugin.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/plugins.xml /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${IE_PLUGINS_PATH}/usb-ma2x8x.mvcmd /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${TBB_LIBS}/libtbb.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${TBB_LIBS}/libtbb.so.2 /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${TBB_LIBS}/libtbbmalloc.so /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cp ${TBB_LIBS}/libtbbmalloc.so.2 /home/onnxruntimedev/onnxruntime/onnxruntime/core/providers/openvino/scripts/\nRUN cd /home/onnxruntimedev/onnxruntime && git pull\nRUN if $ENABLE_TRAINING; then \\\n        ${PYTHON_EXE} ./onnxruntime/tools/ci_build/build.py \\\n        --build_dir ./onnxruntime/build --use_openvino $(OV_DEVICE_PRECISION) --build_shared_lib \\\n        --config Release --build_wheel --skip_tests --enable_training ; \\\n    else \\\n        ${PYTHON_EXE} ./onnxruntime/tools/ci_build/build.py \\\n        --build_dir ./onnxruntime/build --use_openvino $(OV_DEVICE_PRECISION) --build_shared_lib \\\n        --config Release --build_wheel --skip_tests ;\\\n    fi\n"
}