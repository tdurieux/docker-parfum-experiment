{
  "startTime": 1674249077647,
  "endTime": 1674249078777,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASEIMAGE=rocm/pytorch:rocm5.2_centos7_py3.7_pytorch_staging\nARG POLICY=manylinux2014\nARG PLATFORM=x86_64\nARG DEVTOOLSET_ROOTPATH=\nARG LD_LIBRARY_PATH_ARG=\nARG PREPEND_PATH=\n\n#Build manylinux2014 docker image begin\nFROM $BASEIMAGE AS runtime_base\nARG POLICY\nARG PLATFORM\nARG DEVTOOLSET_ROOTPATH\nARG LD_LIBRARY_PATH_ARG\nARG PREPEND_PATH\nLABEL maintainer=\"The ManyLinux project\"\n\n# TODO: This should not be required if the hipify-perl binary is already a part\n# of the base docker image. Remove this line moving forward.\nRUN yum install -y hipify-clang && rm -rf /var/cache/yum\n\nRUN yum remove -y devtoolset\\* git\\* && conda remove -y cmake\n\nENV AUDITWHEEL_POLICY=${POLICY} AUDITWHEEL_ARCH=${PLATFORM} AUDITWHEEL_PLAT=${POLICY}_${PLATFORM}\nENV LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LANGUAGE=en_US.UTF-8\nENV DEVTOOLSET_ROOTPATH=${DEVTOOLSET_ROOTPATH}\nENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH_ARG}\nENV PATH=${PREPEND_PATH}${PATH}\nENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig\n\n# first copy the fixup mirrors script, keep the script around\nCOPY build_scripts/fixup-mirrors.sh /usr/local/sbin/fixup-mirrors\n\n# setup entrypoint, this will wrap commands with `linux32` with i686 images\nCOPY build_scripts/install-entrypoint.sh \\\n     build_scripts/update-system-packages.sh \\\n     build_scripts/build_utils.sh \\\n     /build_scripts/\n\nRUN /build_scripts/install-entrypoint.sh && rm -rf /build_scripts\nCOPY manylinux-entrypoint /usr/local/bin/manylinux-entrypoint\nENTRYPOINT [\"manylinux-entrypoint\"]\n\nCOPY build_scripts/install-runtime-packages.sh \\\n     build_scripts/update-system-packages.sh \\\n     build_scripts/build_utils.sh \\\n     /build_scripts/\nRUN manylinux-entrypoint /build_scripts/install-runtime-packages.sh && rm -rf /build_scripts/\n\nCOPY build_scripts/build_utils.sh /build_scripts/\n\nCOPY build_scripts/install-autoconf.sh /build_scripts/\nRUN export AUTOCONF_ROOT=autoconf-2.71 && \\\n    export AUTOCONF_HASH=431075ad0bf529ef13cb41e9042c542381103e80015686222b8a9d4abef42a1c && \\\n    export AUTOCONF_DOWNLOAD_URL=http://ftp.gnu.org/gnu/autoconf && \\\n    manylinux-entrypoint /build_scripts/install-autoconf.sh\n\nCOPY build_scripts/install-automake.sh /build_scripts/\nRUN export AUTOMAKE_ROOT=automake-1.16.5 && \\\n    export AUTOMAKE_HASH=07bd24ad08a64bc17250ce09ec56e921d6343903943e99ccf63bbf0705e34605 && \\\n    export AUTOMAKE_DOWNLOAD_URL=http://ftp.gnu.org/gnu/automake && \\\n    manylinux-entrypoint /build_scripts/install-automake.sh\n\nCOPY build_scripts/install-libtool.sh /build_scripts/\nRUN export LIBTOOL_ROOT=libtool-2.4.6 && \\\n    export LIBTOOL_HASH=e3bd4d5d3d025a36c21dd6af7ea818a2afcd4dfc1ea5a17b39d7854bcd0c06e3 && \\\n    export LIBTOOL_DOWNLOAD_URL=http://ftp.gnu.org/gnu/libtool && \\\n    manylinux-entrypoint /build_scripts/install-libtool.sh\n\nCOPY build_scripts/install-patchelf.sh /build_scripts/\nRUN export PATCHELF_VERSION=0.13 && \\\n    export PATCHELF_HASH=60c6aeadb673de9cc1838b630c81f61e31c501de324ef7f1e8094a2431197d09 && \\\n    export PATCHELF_DOWNLOAD_URL=https://github.com/NixOS/patchelf/archive && \\\n    manylinux-entrypoint /build_scripts/install-patchelf.sh\n\nCOPY build_scripts/install-libxcrypt.sh /build_scripts/\nRUN export LIBXCRYPT_VERSION=4.4.26 && \\\n    export LIBXCRYPT_HASH=e8a544dd19171c1e6191a6044c96cc31496d781ba08b5a00f53310d001d58114 && \\\n    export LIBXCRYPT_DOWNLOAD_URL=https://github.com/besser82/libxcrypt/archive && \\\n    export PERL_ROOT=perl-5.34.0 && \\\n    export PERL_HASH=551efc818b968b05216024fb0b727ef2ad4c100f8cb6b43fab615fa78ae5be9a && \\\n    export PERL_DOWNLOAD_URL=https://www.cpan.org/src/5.0 && \\\n    manylinux-entrypoint /build_scripts/install-libxcrypt.sh\n\n\nFROM runtime_base AS build_base\nCOPY build_scripts/install-build-packages.sh /build_scripts/\nRUN manylinux-entrypoint /build_scripts/install-build-packages.sh\n\n\nFROM build_base AS build_git\nCOPY build_scripts/build-git.sh /build_scripts/\nRUN export GIT_ROOT=git-2.33.1 && \\\n    export GIT_HASH=02047f8dc8934d57ff5e02aadd8a2fe8e0bcf94a7158da375e48086cc46fce1d && \\\n    export GIT_DOWNLOAD_URL=https://www.kernel.org/pub/software/scm/git && \\\n    manylinux-entrypoint /build_scripts/build-git.sh\n\n\nFROM build_base AS build_swig\nCOPY build_scripts/build-swig.sh /build_scripts/\nRUN export SWIG_ROOT=swig-4.0.2 && \\\n    export SWIG_HASH=d53be9730d8d58a16bf0cbd1f8ac0c0c3e1090573168bfa151b01eb47fa906fc && \\\n    export SWIG_DOWNLOAD_URL=https://sourceforge.net/projects/swig/files/swig/${SWIG_ROOT} && \\\n    export PCRE_ROOT=pcre-8.45 && \\\n    export PCRE_HASH=4e6ce03e0336e8b4a3d6c2b70b1c5e18590a5673a98186da90d4f33c23defc09 && \\\n    export PCRE_DOWNLOAD_URL=https://sourceforge.net/projects/pcre/files/pcre/8.45 && \\\n    manylinux-entrypoint /build_scripts/build-swig.sh\n\n\nFROM build_base AS build_cpython\nCOPY build_scripts/build-sqlite3.sh /build_scripts/\nRUN export SQLITE_AUTOCONF_ROOT=sqlite-autoconf-3360000 && \\\n    export SQLITE_AUTOCONF_HASH=bd90c3eb96bee996206b83be7065c9ce19aef38c3f4fb53073ada0d0b69bbce3 && \\\n    export SQLITE_AUTOCONF_DOWNLOAD_URL=https://www.sqlite.org/2021 && \\\n    manylinux-entrypoint /build_scripts/build-sqlite3.sh\n\nCOPY build_scripts/build-openssl.sh /build_scripts/\nRUN export OPENSSL_ROOT=openssl-1.1.1l && \\\n    export OPENSSL_HASH=0b7a3e5e59c34827fe0c3a74b7ec8baef302b98fa80088d7f9153aa16fa76bd1 && \\\n    export OPENSSL_DOWNLOAD_URL=https://www.openssl.org/source && \\\n    manylinux-entrypoint /build_scripts/build-openssl.sh\n\nCOPY build_scripts/build-cpython.sh /build_scripts/\n\n\nFROM build_cpython AS build_cpython37\nCOPY build_scripts/cpython-pubkeys.txt /build_scripts/cpython-pubkeys.txt\nRUN manylinux-entrypoint /build_scripts/build-cpython.sh 3.7.12\n\n\nFROM build_cpython AS build_cpython38\nCOPY build_scripts/ambv-pubkey.txt /build_scripts/cpython-pubkeys.txt\nRUN manylinux-entrypoint /build_scripts/build-cpython.sh 3.8.12\n\n\nFROM build_cpython AS build_cpython39\nCOPY build_scripts/ambv-pubkey.txt /build_scripts/cpython-pubkeys.txt\nRUN manylinux-entrypoint /build_scripts/build-cpython.sh 3.9.8\n\n\nFROM build_cpython AS all_python\nCOPY build_scripts/install-pypy.sh /build_scripts/install-pypy.sh\nCOPY build_scripts/pypy.sha256 /build_scripts/pypy.sha256\nRUN manylinux-entrypoint /build_scripts/install-pypy.sh 3.7 7.3.7\nRUN manylinux-entrypoint /build_scripts/install-pypy.sh 3.8 7.3.7\nCOPY --from=build_cpython37 /opt/_internal /opt/_internal/\nCOPY --from=build_cpython38 /opt/_internal /opt/_internal/\nCOPY --from=build_cpython39 /opt/_internal /opt/_internal/\nRUN hardlink -cv /opt/_internal\n\n\nFROM runtime_base\nCOPY --from=build_git /manylinux-rootfs /\nCOPY --from=build_swig /manylinux-rootfs /\nCOPY --from=build_cpython /manylinux-rootfs /\nCOPY --from=all_python /opt/_internal /opt/_internal/\nCOPY build_scripts/finalize.sh \\\n     build_scripts/update-system-packages.sh \\\n     build_scripts/python-tag-abi-tag.py \\\n     build_scripts/requirements3.7.txt \\\n     build_scripts/requirements3.8.txt \\\n     build_scripts/requirements3.9.txt \\\n     build_scripts/requirements-base-tools.txt \\\n     /build_scripts/\nCOPY build_scripts/requirements-tools/* /build_scripts/requirements-tools/\nRUN manylinux-entrypoint /build_scripts/finalize.sh && rm -rf /build_scripts\n\nENV SSL_CERT_FILE=/opt/_internal/certs.pem\n\nCMD [\"/bin/bash\"]\n\n#Build manylinux2014 docker image end\n\nARG PYTHON_VERSION=3.7\nARG TORCH_VERSION=1.11.0\nARG OPSET_VERSION=14\nARG INSTALL_DEPS_EXTRA_ARGS\n\n#Add our own dependencies\nADD scripts /tmp/scripts\nRUN cd /tmp/scripts && \\\n    /tmp/scripts/manylinux/install_centos.sh && \\\n    /tmp/scripts/install_os_deps.sh -d gpu $INSTALL_DEPS_EXTRA_ARGS && \\\n    /tmp/scripts/install_python_deps.sh -d gpu -p 3.7 -h ${TORCH_VERSION} -o 5.2 $INSTALL_DEPS_EXTRA_ARGS && \\\n    /tmp/scripts/install_python_deps.sh -d gpu -p 3.8 -h ${TORCH_VERSION} -o 5.2 $INSTALL_DEPS_EXTRA_ARGS && \\\n    /tmp/scripts/install_python_deps.sh -d gpu -p 3.9 -h ${TORCH_VERSION} -o 5.2 $INSTALL_DEPS_EXTRA_ARGS && \\\n     rm -rf /tmp/scripts\n\n# remove protobuf to prevent ambiguity which is used for onnxruntime build\nRUN rm -fr /usr/local/bin/protoc \\\n           /usr/local/libproto* \\\n           /usr/local/include/google \\\n           /usr/local/lib/pkgconfig/protobuf*\n\nARG BUILD_UID=1001\nARG BUILD_USER=onnxruntimedev\nRUN adduser --uid $BUILD_UID $BUILD_USER\nWORKDIR /home/$BUILD_USER\nUSER $BUILD_USER\nENV PATH /usr/local/gradle/bin:/usr/local/dotnet:$PATH\nENV ORTMODULE_ONNX_OPSET_VERSION=$OPSET_VERSION\n"
}