{
  "startTime": 1674215400104,
  "endTime": 1674215400705,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 9,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Tag: nvidia/cuda:11.6.1-cudnn8-devel-ubuntu20.04\n# Label: com.nvidia.cuda.version: 11.6.1\n# Label: com.nvidia.cudnn.version: 8.4.0\n# Ubuntu 20.04\nFROM nvidia/cuda:11.6.1-cudnn8-devel-ubuntu20.04\n\nARG PYTHON_VERSION=3.8\nARG DEBIAN_FRONTEND=noninteractive\n\nADD scripts /tmp/scripts\nRUN /tmp/scripts/install_ubuntu.sh -p $PYTHON_VERSION && /tmp/scripts/install_os_deps.sh && /tmp/scripts/install_python_deps.sh -p $PYTHON_VERSION && rm -rf /tmp/scripts\n\n# Install TensorRT\nRUN v=\"8.4.1-1+cuda11.6\" &&\\\n    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/7fa2af80.pub &&\\\n    apt-get update && \\\n    sudo apt-get install --no-install-recommends -y libnvinfer8=${v} libnvonnxparsers8=${v} libnvparsers8=${v} libnvinfer-plugin8=${v} \\\n        libnvinfer-dev=${v} libnvonnxparsers-dev=${v} libnvparsers-dev=${v} libnvinfer-plugin-dev=${v} \\\n        python3-libnvinfer=${v} && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n\n# Allow configure to pick up GDK and CuDNN where it expects it.\n# (Note: $CUDNN_VERSION is defined by NVidia's base image)\nRUN _CUDNN_VERSION=$(echo $CUDNN_VERSION | cut -d. -f1-2) && \\\n    mkdir -p /usr/local/cudnn-$_CUDNN_VERSION/cuda/include && \\\n    ln -s /usr/include/cudnn.h /usr/local/cudnn-$_CUDNN_VERSION/cuda/include/cudnn.h && \\\n    mkdir -p /usr/local/cudnn-$_CUDNN_VERSION/cuda/lib64 && \\\n    ln -s /etc/alternatives/libcudnn_so /usr/local/cudnn-$_CUDNN_VERSION/cuda/lib64/libcudnn.so && \\\n    ln -s /usr/local/cudnn{-$_CUDNN_VERSION,}\n\nARG BUILD_USER=onnxruntimedev\nARG BUILD_UID=1000\nWORKDIR /home/$BUILD_USER\nRUN adduser --gecos 'onnxruntime Build User' --disabled-password $BUILD_USER --uid $BUILD_UID\nUSER $BUILD_USER\n"
}