{
  "startTime": 1674246593801,
  "endTime": 1674246595170,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 9,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 43,
        "columnStart": 9,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedDockerfile": "# --------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License.\n# --------------------------------------------------------------\n# Dockerfile to run ONNXRuntime with TensorRT integration\n\nARG OS_VERSION=20.04\nFROM nvidia/cuda:11.4.2-cudnn8-devel-ubuntu${OS_VERSION}\n\n\n# ONNX Runtime Variables\nARG ONNXRUNTIME_REPO=https://github.com/Microsoft/onnxruntime\nARG ONNXRUNTIME_BRANCH=master\nARG CMAKE_CUDA_ARCHITECTURES=37;50;52;60;61;70;75;80\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:/code/cmake-3.21.0-linux-x86_64/bin:/opt/miniconda/bin:${PATH}\nENV LD_LIBRARY_PATH /opt/miniconda/lib:$LD_LIBRARY_PATH\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y sudo git bash unattended-upgrades wget && rm -rf /var/lib/apt/lists/*;\nRUN unattended-upgrade\n\n# Install python3\nRUN apt-get install -y --no-install-recommends \\\n    python3 \\\n    python3-pip \\\n    python3-dev \\\n    python3-wheel &&\\\n    cd /usr/local/bin &&\\\n    ln -s /usr/bin/python3 python &&\\\n    ln -s /usr/bin/pip3 pip; rm -rf /var/lib/apt/lists/*;\n\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir setuptools >=41.0.0\n\n# Install TensorRT\nRUN v=\"8.2.1-1+cuda11.4\" &&\\\n    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub &&\\\n    apt-get update && \\\n    sudo apt-get install --no-install-recommends -y libnvinfer8=${v} libnvonnxparsers8=${v} libnvparsers8=${v} libnvinfer-plugin8=${v} \\\n        libnvinfer-dev=${v} libnvonnxparsers-dev=${v} libnvparsers-dev=${v} libnvinfer-plugin-dev=${v} \\\n        python3-libnvinfer=${v} && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /code\n\n# Prepare onnxruntime repository & build onnxruntime with TensorRT\nRUN git clone --single-branch --branch ${ONNXRUNTIME_BRANCH} --recursive ${ONNXRUNTIME_REPO} onnxruntime &&\\\n    /bin/sh onnxruntime/dockerfiles/scripts/install_common_deps.sh &&\\\n    /bin/sh onnxruntime/dockerfiles/scripts/checkout_submodules.sh 8.2 &&\\\n    cd onnxruntime &&\\\n    /bin/sh build.sh --parallel --build_shared_lib --cuda_home /usr/local/cuda --cudnn_home /usr/lib/x86_64-linux-gnu/ --use_tensorrt --tensorrt_home /usr/lib/x86_64-linux-gnu/ --config Release --build_wheel --skip_tests --skip_submodule_sync --cmake_extra_defines '\"CMAKE_CUDA_ARCHITECTURES='${CMAKE_CUDA_ARCHITECTURES}'\"' && \\\n    pip install --no-cache-dir /code/onnxruntime/build/Linux/Release/dist/*.whl && \\\n    cd ..\n"
}