{
  "startTime": 1674253200010,
  "endTime": 1674253201113,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 194
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# devicedevex.azurecr.io/public/iot-device-cube:1.0.2-azure-c-sdk-public-preview-cross-toolchain-arm64\n# Usage example:\n# docker build -t devicedevex.azurecr.io/public/iot-device-cube:1.0.2-azure-c-sdk-public-preview-cross-toolchain-arm64 . --build-arg base_image_tag=1.0.0-ubuntu-arm64\nARG base_image_tag=1.0.0-ubuntu-arm64\nFROM devicedevex.azurecr.io/internal/iot-device-cube:${base_image_tag}\n\nARG lib_openssl_uri=https://www.openssl.org/source/openssl-1.0.2o.tar.gz\nARG lib_openssl_name=openssl-1.0.2o\nARG lib_curl_uri=http://curl.haxx.se/download/curl-7.60.0.tar.gz\nARG lib_curl_name=curl-7.60.0\nARG lib_util_uri=https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v2.32/util-linux-2.32-rc2.tar.gz\nARG lib_util_name=util-linux-2.32-rc2\nARG c_sdk_branch=public-preview\n\nRUN mkdir /work\nWORKDIR /work\n\n# Build openssl, curl, Linux utils and build Azure IoT C SDK\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends ca-certificates wget perl make cmake git && \\\n    wget ${lib_openssl_uri} && \\\n    tar -xvf ${lib_openssl_name}.tar.gz && \\\n    cd ${lib_openssl_name} && \\\n    ./Configure linux-generic32 shared --prefix=${QEMU_LD_PREFIX}/usr --openssldir=${QEMU_LD_PREFIX}/usr && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    wget ${lib_curl_uri} && \\\n    tar -xvf ${lib_curl_name}.tar.gz && \\\n    cd ${lib_curl_name} && \\\n    ./configure --with-sysroot=${QEMU_LD_PREFIX} --prefix=${QEMU_LD_PREFIX}/usr --target=${CROSS_TRIPLE} --with-ssl --with-zlib --host=${CROSS_TRIPLE} --build=x86_64-pc-linux-uclibc && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    wget ${lib_util_uri} && \\\n    tar -xvf ${lib_util_name}.tar.gz && \\\n    cd ${lib_util_name} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${QEMU_LD_PREFIX}/usr --with-sysroot=${QEMU_LD_PREFIX} --target=${CROSS_TRIPLE} --host=${CROSS_TRIPLE} --disable-all-programs --disable-bash-completion --enable-libuuid && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    rm -rf /work/* && \\\n    git clone --single-branch --branch ${c_sdk_branch} --recursive https://github.com/azure/azure-iot-sdk-c.git && \\\n    cd azure-iot-sdk-c && \\\n    mkdir cmake && \\\n    cd cmake && \\\n    cmake -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE} -Duse_prov_client=ON -Dhsm_type_symm_key:BOOL=ON .. && \\\n    make && \\\n    apt-get remove -y ca-certificates wget && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && rm ${lib_openssl_name}.tar.gz"
}