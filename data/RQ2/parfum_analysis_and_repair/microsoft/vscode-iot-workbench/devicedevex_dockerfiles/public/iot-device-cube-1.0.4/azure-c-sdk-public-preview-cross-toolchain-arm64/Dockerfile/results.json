{
  "startTime": 1674220312416,
  "endTime": 1674220314728,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 194
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# devicedevex.azurecr.io/public/iot-device-cube:1.0.4-azure-c-sdk-public-preview-cross-toolchain-arm64\nFROM devicedevex.azurecr.io/internal/iot-device-cube:1.0.0-ubuntu-arm64\n\nARG lib_openssl_uri=https://www.openssl.org/source/openssl-1.0.2o.tar.gz\nARG lib_openssl_name=openssl-1.0.2o\nARG lib_curl_uri=http://curl.haxx.se/download/curl-7.60.0.tar.gz\nARG lib_curl_name=curl-7.60.0\nARG lib_util_uri=https://mirrors.edge.kernel.org/pub/linux/utils/util-linux/v2.32/util-linux-2.32-rc2.tar.gz\nARG lib_util_name=util-linux-2.32-rc2\n\nWORKDIR /work\nCOPY Toolchain.cmake /work/temp/Toolchain.cmake\nCOPY aarch64-linux-custom.cmake /work/temp/aarch64-linux-custom.cmake\n\nWORKDIR /work\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends ca-certificates wget perl make cmake git curl unzip tar && \\\n    wget ${lib_openssl_uri} && \\\n    tar -xvf ${lib_openssl_name}.tar.gz && \\\n    cd ${lib_openssl_name} && \\\n    ./Configure linux-generic32 shared --prefix=${QEMU_LD_PREFIX}/usr --openssldir=${QEMU_LD_PREFIX}/usr && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    wget ${lib_curl_uri} && \\\n    tar -xvf ${lib_curl_name}.tar.gz && \\\n    cd ${lib_curl_name} && \\\n    ./configure --with-sysroot=${QEMU_LD_PREFIX} --prefix=${QEMU_LD_PREFIX}/usr --target=${CROSS_TRIPLE} --with-ssl --with-zlib --host=${CROSS_TRIPLE} --build=x86_64-pc-linux-uclibc && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    wget ${lib_util_uri} && \\\n    tar -xvf ${lib_util_name}.tar.gz && \\\n    cd ${lib_util_name} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${QEMU_LD_PREFIX}/usr --with-sysroot=${QEMU_LD_PREFIX} --target=${CROSS_TRIPLE} --host=${CROSS_TRIPLE} --disable-all-programs --disable-bash-completion --enable-libuuid && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    ls | grep -v temp | xargs rm -rf && \\\n    git clone https://github.com/microsoft/vcpkg && \\\n    cd vcpkg && \\\n    cp /work/temp/Toolchain.cmake /work/vcpkg/scripts/toolchains/Toolchain.cmake && \\\n    cp /work/temp/aarch64-linux-custom.cmake /work/vcpkg/triplets/aarch64-linux-custom.cmake && \\\n    ./bootstrap-vcpkg.sh && \\\n    ./vcpkg install azure-iot-sdk-c[public-preview,use_prov_client]:aarch64-linux-custom && \\\n    apt-get remove -y wget ca-certificates perl git unzip && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* && rm ${lib_openssl_name}.tar.gz"
}