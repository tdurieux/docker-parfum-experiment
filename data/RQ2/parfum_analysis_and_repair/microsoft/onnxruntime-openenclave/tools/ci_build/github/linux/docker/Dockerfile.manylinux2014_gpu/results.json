{
  "startTime": 1674251506682,
  "endTime": 1674251507472,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux2014_x86_64:2020-04-04-c0949b6\n\nARG PYTHON_VERSION=3.5\nARG BUILD_EXTR_PAR\n\nADD scripts /tmp/scripts\nRUN cd /tmp/scripts && \\\n    /tmp/scripts/install_centos.sh && \\\n    /tmp/scripts/install_deps.sh -d gpu -p $PYTHON_VERSION -x \"$BUILD_EXTR_PAR\" && \\\n    rm -rf /tmp/scripts\n\nRUN yum remove -y devtoolset-\\* && \\\n    yum install -y \\\n        devtoolset-7-binutils \\\n        devtoolset-7-gcc \\\n        devtoolset-7-gcc-c++ \\\n        devtoolset-7-gcc-gfortran \\\n        devtoolset-7-libquadmath-devel \\\n        devtoolset-7-libstdc++-devel \\\n        devtoolset-7-runtime && rm -rf /var/cache/yum\n\n\n# Copied and adapted from https://gitlab.com/nvidia/container-images/cuda/-/blob/d442ff6975fb8310da90e6c3f35a988b6920b017/dist/centos7/10.1/base/Dockerfile\n\nRUN NVIDIA_GPGKEY_SUM=d1be581509378368edeec8c1eb2958702feedf3bc3d17011adbf24efacce4ab5 && \\\ncurl -fsSL https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/7fa2af80.pub | sed '/^Version/d' > /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA && \\\n    echo \"$NVIDIA_GPGKEY_SUM  /etc/pki/rpm-gpg/RPM-GPG-KEY-NVIDIA\" | sha256sum -c --strict -\n\nCOPY cuda_manylinux2014.repo /etc/yum.repos.d/cuda.repo\n\nENV CUDA_VERSION 10.1.243\nENV CUDA_PKG_VERSION 10-1-$CUDA_VERSION-1\nRUN yum install -y \\\ncuda-cudart-$CUDA_PKG_VERSION \\\ncuda-compat-10-1 \\\ncuda-libraries-$CUDA_PKG_VERSION \\\ncuda-nvtx-$CUDA_PKG_VERSION \\\nlibcublas10-10.2.1.243-1 \\\ncuda-nvml-dev-$CUDA_PKG_VERSION \\\ncuda-command-line-tools-$CUDA_PKG_VERSION \\\ncuda-libraries-dev-$CUDA_PKG_VERSION \\\ncuda-minimal-build-$CUDA_PKG_VERSION \\\nlibcublas-devel-10.2.1.243-1 \\\n&& \\\n    ln -s cuda-10.1 /usr/local/cuda && \\\n    rm -rf /var/cache/yum/*\n\n# nvidia-docker 1.0\nRUN echo \"/usr/local/nvidia/lib\" >> /etc/ld.so.conf.d/nvidia.conf && \\\n    echo \"/usr/local/nvidia/lib64\" >> /etc/ld.so.conf.d/nvidia.conf\n\nENV PATH /usr/local/nvidia/bin:/usr/local/cuda/bin:/opt/rh/devtoolset-7/root/usr/bin:${PATH}\nENV LD_LIBRARY_PATH /usr/local/nvidia/lib:/usr/local/nvidia/lib64:${LD_LIBRARY_PATH}\n\n# nvidia-container-runtime\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES compute,utility\nENV NVIDIA_REQUIRE_CUDA \"cuda>=10.1 brand=tesla,driver>=384,driver<385 brand=tesla,driver>=396,driver<397 brand=tesla,driver>=410,driver<411\"\n\n\nENV LIBRARY_PATH /usr/local/cuda/lib64/stubs\n\nENV CUDNN_VERSION 7.6.5.32\nLABEL com.nvidia.cudnn.version=\"${CUDNN_VERSION}\"\n\n# cuDNN license: https://developer.nvidia.com/cudnn/license_agreement\nRUN CUDNN_DOWNLOAD_SUM=7eaec8039a2c30ab0bc758d303588767693def6bf49b22485a2c00bf2e136cb3 && \\\n    curl -fsSL https://developer.download.nvidia.com/compute/redist/cudnn/v7.6.5/cudnn-10.1-linux-x64-v7.6.5.32.tgz -O && \\\n    echo \"$CUDNN_DOWNLOAD_SUM  cudnn-10.1-linux-x64-v7.6.5.32.tgz\" | sha256sum -c - && \\\n    tar --no-same-owner -xzf cudnn-10.1-linux-x64-v7.6.5.32.tgz -C /usr/local && \\\n    rm cudnn-10.1-linux-x64-v7.6.5.32.tgz && \\\n    ldconfig\n\n\n# install MPI 4.0.0\nRUN MPI_SUM=36f10daa3f1b1d37530f686bf7f70966b2a13c0bc6e2e05aebc7e85e3d21b10d && \\\n    curl -fsSL https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.0.tar.gz -O && \\\n    echo \"$MPI_SUM  openmpi-4.0.0.tar.gz\" | sha256sum -c - && \\\n    tar zxf openmpi-4.0.0.tar.gz && \\\n    cd openmpi-4.0.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-orterun-prefix-by-default && \\\n    make -j $(nproc) all && \\\n    make install && \\\n    ldconfig && rm openmpi-4.0.0.tar.gz\n\n\n# install NCCL 2.4.8\nRUN RPM_SUM=ce8da101c05f0a52e01a569acc7e6845b3883f7e5760eefee85dccb279454d5d && \\\n    curl -fsSL https://developer.download.nvidia.com/compute/machine-learning/repos/rhel7/x86_64/nvidia-machine-learning-repo-rhel7-1.0.0-1.x86_64.rpm -O && \\\n    echo \"$RPM_SUM  nvidia-machine-learning-repo-rhel7-1.0.0-1.x86_64.rpm\" | sha256sum -c - && \\\n    rpm -i nvidia-machine-learning-repo-rhel7-1.0.0-1.x86_64.rpm && \\\n    yum install -y libnccl-2.4.8-1+cuda10.1 libnccl-devel-2.4.8-1+cuda10.1 libnccl-static-2.4.8-1+cuda10.1 && rm -rf /var/cache/yum\n\n\nARG BUILD_UID=1000\nARG BUILD_USER=onnxruntimedev\nRUN adduser --comment 'onnxruntime Build User' --uid $BUILD_UID $BUILD_USER\nWORKDIR /home/$BUILD_USER\nUSER $BUILD_USER\n"
}