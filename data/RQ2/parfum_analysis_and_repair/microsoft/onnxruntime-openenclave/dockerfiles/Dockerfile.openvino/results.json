{
  "startTime": 1674253791805,
  "endTime": 1674253792904,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 260
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 260
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#-------------------------------------------------------------------------\n# Copyright(C) 2019 Intel Corporation.\n# Licensed under the MIT License.\n#--------------------------------------------------------------------------\n\nFROM ubuntu:18.04\n\nARG DEVICE=CPU_FP32\nARG ONNXRUNTIME_REPO=https://github.com/microsoft/onnxruntime\nARG ONNXRUNTIME_BRANCH=master\n\nWORKDIR /code\nARG MY_ROOT=/code\nENV PATH /opt/miniconda/bin:/code/cmake-3.14.3-Linux-x86_64/bin:$PATH\n\n\nENV pattern=\"COMPONENTS=DEFAULTS\"\nENV replacement=\"COMPONENTS=intel-openvino-ie-sdk-ubuntu-xenial__x86_64;intel-openvino-ie-rt-cpu-ubuntu-xenial__x86_64;intel-openvino-ie-rt-gpu-ubuntu-xenial__x86_64;intel-openvino-ie-rt-vpu-ubuntu-xenial__x86_64;intel-openvino-ie-rt-hddl-ubuntu-xenial__x86_64;intel-openvino-model-optimizer__x86_64;intel-openvino-opencv-lib-ubuntu-xenial__x86_64\"\nCOPY l_openvino_*.tgz .\nENV LD_LIBRARY_PATH=/opt/miniconda/lib:/usr/lib:/usr/lib/x86_64-linux-gnu:$LD_LIBRARY_PATH\nENV INTEL_OPENVINO_DIR=/opt/intel/openvino_2020.3.194\nENV InferenceEngine_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/share\nENV IE_PLUGINS_PATH=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/lib/intel64\nENV LD_LIBRARY_PATH=/opt/intel/opencl:${INTEL_OPENVINO_DIR}/inference_engine/external/gna/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/mkltiny_lnx/lib:$INTEL_OPENVINO_DIR/deployment_tools/ngraph/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/omp/lib:${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/tbb/lib:${IE_PLUGINS_PATH}:${LD_LIBRARY_PATH}\nENV OpenCV_DIR=${INTEL_OPENVINO_DIR}/opencv/share/OpenCV\nENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/opencv/lib:${INTEL_OPENVINO_DIR}/opencv/share/OpenCV/3rdparty/lib:${LD_LIBRARY_PATH}\nENV HDDL_INSTALL_DIR=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/hddl\nENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/deployment_tools/inference_engine/external/hddl/lib:$LD_LIBRARY_PATH\nENV LANG en_US.UTF-8\n\nRUN apt update && \\\n    apt -y --no-install-recommends install git sudo wget locales \\\n    zip x11-apps lsb-core cpio libboost-python-dev libpng-dev zlib1g-dev libnuma1 ocl-icd-libopencl1 clinfo libboost-filesystem1.65-dev libboost-thread1.65-dev protobuf-compiler libprotoc-dev libusb-1.0-0-dev autoconf automake libtool libudev-dev libjson-c-dev && \\\n    cd ${MY_ROOT} && \\\n    git clone --recursive -b $ONNXRUNTIME_BRANCH $ONNXRUNTIME_REPO onnxruntime && \\\n    cp onnxruntime/docs/Privacy.md /code/Privacy.md && \\\n    cp onnxruntime/dockerfiles/LICENSE-IMAGE.txt /code/LICENSE-IMAGE.txt && \\\n    cp onnxruntime/ThirdPartyNotices.txt /code/ThirdPartyNotices.txt && \\\n    /bin/sh onnxruntime/dockerfiles/scripts/install_common_deps.sh && \\\n    cd onnxruntime/cmake/external/onnx && python3 setup.py install && \\\n    pip install --no-cache-dir azure-iothub-device-client azure-iothub-service-client azure-iot-provisioning-device-client && \\\n    cd ${MY_ROOT} && \\\n    tar -xzf l_openvino_toolkit*.tgz && \\\n    rm -rf l_openvino_toolkit*.tgz && \\\n    cd l_openvino_toolkit* && \\\n    sed -i \"s/$pattern/$replacement/\" silent.cfg && \\\n    sed -i 's/decline/accept/g' silent.cfg && \\\n    ./install.sh -s silent.cfg && \\\n    cd - && \\\n    rm -rf l_openvino_toolkit* && \\\n    cd /opt/intel/openvino/install_dependencies && ./install_openvino_dependencies.sh && ./install_NEO_OCL_driver.sh && dpkg -i *.deb && \\\n    cd ${MY_ROOT} && \\\n    locale-gen en_US.UTF-8 && update-locale LANG=en_US.UTF-8 && \\\n    cd ${MY_ROOT} && \\\n    cd onnxruntime && ./build.sh --use_openmp --config Release --update --build --parallel --use_openvino $DEVICE --build_wheel --use_full_protobuf && \\\n    pip install --no-cache-dir build/Linux/Release/dist/*-linux_x86_64.whl && rm -rf /code/onnxruntime /code/cmake-3.14.3-Linux-x86_64 && rm -rf /var/lib/apt/lists/*;\n"
}