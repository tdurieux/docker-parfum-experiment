{
  "startTime": 1674255894054,
  "endTime": 1674255894962,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 39,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# --------------------------------------------------------------\n# Copyright (c) Microsoft Corporation. All rights reserved.\n# Licensed under the MIT License.\n# --------------------------------------------------------------\n# Dockerfile to run ONNXRuntime with MIGraphX integration\n#--------------------------------------------------------------------------\n\nFROM ubuntu:16.04\n\nARG ONNXRUNTIME_REPO=https://github.com/Microsoft/onnxruntime\nARG ONNXRUNTIME_BRANCH=master\nENV DEBIAN_FRONTEND noninteractive\nENV MIGRAPHX_DISABLE_FAST_GELU=1\n\nRUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;\nRUN locale-gen en_US.UTF-8\nRUN update-locale LANG=en_US.UTF-8\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\n\n# Install rocm\nRUN apt-get update && apt-get install -y --no-install-recommends curl && \\\n  curl -f -sL https://repo.radeon.com/rocm/apt/debian/rocm.gpg.key | apt-key add - && \\\n  sh -c 'echo deb [arch=amd64] http://repo.radeon.com/rocm/apt/3.3/ xenial main > /etc/apt/sources.list.d/rocm.list' && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y sudo git bash build-essential cmake libpython3.5-dev python3-pip miopen-hip rocblas half && rm -rf /var/lib/apt/lists/*;\n\n# Install rbuild\nRUN pip3 install --no-cache-dir https://github.com/RadeonOpenCompute/rbuild/archive/master.tar.gz\n\n# Install MIGraphX from source\nRUN mkdir -p /migraphx\nRUN cd /migraphx && git clone --depth=1 --branch migraphx_for_ort https://github.com/ROCmSoftwarePlatform/AMDMIGraphX src\nRUN cd /migraphx && rbuild package --cxx /opt/rocm/bin/hcc -d /migraphx/deps -B /migraphx/build -S /migraphx/src/ -DPYTHON_EXECUTABLE=/usr/bin/python3\nRUN dpkg -i /migraphx/build/*.deb\nRUN rm -rf /migraphx\n\nWORKDIR /code\nENV PATH /opt/miniconda/bin:/code/cmake-3.14.3-Linux-x86_64/bin:${PATH}\n\n# Workaround for broken cmake in hip's binary package\nRUN sed -i -e 's/hcc::hccrt;hcc::hc_am//g' /opt/rocm/hip/lib/cmake/hip/hip-targets-release.cmake\nENV CXXFLAGS \"-D__HIP_PLATFORM_HCC__=1\"\n\n# Prepare onnxruntime repository & build onnxruntime\nRUN git clone --single-branch --branch ${ONNXRUNTIME_BRANCH} --recursive ${ONNXRUNTIME_REPO} onnxruntime &&\\\n    /bin/sh onnxruntime/dockerfiles/scripts/install_common_deps.sh &&\\\n    cd onnxruntime &&\\\n    /bin/sh ./build.sh --config Release --build_wheel --update --build --parallel --cmake_extra_defines ONNXRUNTIME_VERSION=$(cat ./VERSION_NUMBER) --use_migraphx && \\\n    pip install --no-cache-dir /code/onnxruntime/build/Linux/Release/dist/*.whl && \\\n    cd .. && \\\n    rm -rf onnxruntime cmake-3.14.3-Linux-x86_64\n"
}