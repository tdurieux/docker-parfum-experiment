diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/pymarlin/examples/cnndailymail_text_summarization/azureml/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/pymarlin/examples/cnndailymail_text_summarization/azureml/Dockerfile/repaired.Dockerfile
index bd27b58..1ac1ae1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/pymarlin/examples/cnndailymail_text_summarization/azureml/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/pymarlin/examples/cnndailymail_text_summarization/azureml/Dockerfile/repaired.Dockerfile
@@ -25,7 +25,7 @@ RUN mkdir -p $STAGE_DIR
 # ------------------------------------------------------------------------------------------------ #
 
 RUN apt-get -y update && \
-    apt-get --assume-yes --no-install-recommends install \
+    apt-get --assume-yes -y --no-install-recommends install \
     build-essential \
     autotools-dev \
     curl \
@@ -88,7 +88,7 @@ ENV OPENMPI_VERSION_STRING=${OPENMPI_BASEVERSION}.0
 RUN cd ${STAGE_DIR} && \
     wget -q -O - https://download.open-mpi.org/release/open-mpi/v${OPENMPI_BASEVERSION}/openmpi-${OPENMPI_VERSION_STRING}.tar.gz | tar xzf - && \
     cd openmpi-${OPENMPI_VERSION_STRING} && \
-    ./configure  --enable-orterun-prefix-by-default && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-orterun-prefix-by-default && \
     make uninstall && \
     make -j"$(nproc)" install && \
     # Sanity check:
@@ -145,7 +145,7 @@ RUN cd /DeepSpeed && \
     git config pull.ff only && \
     git pull && \
     git checkout master && \
-    pip install -v . && \
+    pip install --no-cache-dir -v . && \
     ds_report
 
 # ------------------------------------------------------------------------------------------------ #
@@ -168,7 +168,7 @@ RUN git clone https://github.com/microsoft/onnxruntime.git &&\
         --build_dir build \
         --build \
         --build_wheel \
-        --skip_tests &&\
-    pip install build/Release/dist/*.whl &&\
-    cd .. &&\
+        --skip_tests && \
+    pip install --no-cache-dir build/Release/dist/*.whl && \
+    cd .. && \
     rm -rf onnxruntime /opt/cmake