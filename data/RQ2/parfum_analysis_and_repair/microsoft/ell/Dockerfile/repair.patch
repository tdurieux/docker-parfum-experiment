diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/ell/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/ell/Dockerfile/repaired.Dockerfile
index 53f3f19..8d47d24 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/ell/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/ell/Dockerfile/repaired.Dockerfile
@@ -2,7 +2,7 @@
 FROM continuumio/miniconda3:latest
 
 RUN apt-get update \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
       build-essential \
       curl \
       gcc \
@@ -14,52 +14,52 @@ RUN apt-get update \
       libopenblas-dev \
       doxygen \
       unzip \
-    && apt-get clean all
+    && apt-get clean all && rm -rf /var/lib/apt/lists/*;
 
 # LLVM
 RUN echo deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main >> /etc/apt/sources.list
 RUN echo deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main >> /etc/apt/sources.list
 RUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
 RUN apt-get update \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
       llvm-8 \
-    && apt-get clean all
+    && apt-get clean all && rm -rf /var/lib/apt/lists/*;
 
 # SWIG
-RUN curl -O --location http://prdownloads.sourceforge.net/swig/swig-4.0.0.tar.gz \
+RUN curl -f -O --location https://prdownloads.sourceforge.net/swig/swig-4.0.0.tar.gz \
     && tar zxvf swig-4.0.0.tar.gz \
     && cd swig-4.0.0 \
-    && ./configure --without-pcre \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --without-pcre \
     && make \
-    && make install
+    && make install && rm swig-4.0.0.tar.gz
 
 # OpenCV
 RUN apt-get update \
-    && apt-get install -y \
-       libgl1-mesa-glx
+    && apt-get install --no-install-recommends -y \
+       libgl1-mesa-glx && rm -rf /var/lib/apt/lists/*;
 RUN export PATH="/opt/conda/bin:${PATH}" \
     && conda install --yes --quiet -c conda-forge opencv
 
 # CNTK
 RUN /bin/bash -c "source activate base" \
-    && pip install --upgrade pip \
+    && pip install --no-cache-dir --upgrade pip \
     && pip install --no-cache-dir --ignore-installed \
           cntk
 
 # OpenMPI
-RUN curl -o openmpi-1.10.3.tar.gz -L https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.3.tar.gz \
+RUN curl -f -o openmpi-1.10.3.tar.gz -L https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.3.tar.gz \
     && tar zxvf openmpi-1.10.3.tar.gz \
     && cd openmpi-1.10.3 \
-    && ./configure --prefix=/usr/local/mpi \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/mpi \
     && make -j all \
-    && make install
+    && make install && rm openmpi-1.10.3.tar.gz
 
 # LD path to libpython3.6m.so
 RUN echo /opt/conda/lib >> /etc/ld.so.conf.d/conda.conf && \
     ldconfig
 
 # cmake
-RUN curl -o cmake-3.11.2-Linux-x86_64.sh -L https://cmake.org/files/v3.11/cmake-3.11.2-Linux-x86_64.sh \
+RUN curl -f -o cmake-3.11.2-Linux-x86_64.sh -L https://cmake.org/files/v3.11/cmake-3.11.2-Linux-x86_64.sh \
     && chmod +x cmake-3.11.2-Linux-x86_64.sh \
     && ./cmake-3.11.2-Linux-x86_64.sh --skip-license \
-    &&  ln -s /opt/cmake-3.11.2-Linux-x86_64/bin/* /usr/local/bin
+    && ln -s /opt/cmake-3.11.2-Linux-x86_64/bin/* /usr/local/bin