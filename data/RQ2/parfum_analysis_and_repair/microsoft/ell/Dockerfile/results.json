{
  "startTime": 1674215594857,
  "endTime": 1674215596688,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 7,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile for an Ubuntu environment for ELL for Continuous Integration\nFROM continuumio/miniconda3:latest\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n      build-essential \\\n      curl \\\n      gcc \\\n      git \\\n      libedit-dev \\\n      zlibc \\\n      zlib1g \\\n      zlib1g-dev \\\n      libopenblas-dev \\\n      doxygen \\\n      unzip \\\n    && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\n# LLVM\nRUN echo deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main >> /etc/apt/sources.list\nRUN echo deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main >> /etc/apt/sources.list\nRUN wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n      llvm-8 \\\n    && apt-get clean all && rm -rf /var/lib/apt/lists/*;\n\n# SWIG\nRUN curl -f -O --location https://prdownloads.sourceforge.net/swig/swig-4.0.0.tar.gz \\\n    && tar zxvf swig-4.0.0.tar.gz \\\n    && cd swig-4.0.0 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --without-pcre \\\n    && make \\\n    && make install && rm swig-4.0.0.tar.gz\n\n# OpenCV\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n       libgl1-mesa-glx && rm -rf /var/lib/apt/lists/*;\nRUN export PATH=\"/opt/conda/bin:${PATH}\" \\\n    && conda install --yes --quiet -c conda-forge opencv\n\n# CNTK\nRUN /bin/bash -c \"source activate base\" \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir --ignore-installed \\\n          cntk\n\n# OpenMPI\nRUN curl -f -o openmpi-1.10.3.tar.gz -L https://www.open-mpi.org/software/ompi/v1.10/downloads/openmpi-1.10.3.tar.gz \\\n    && tar zxvf openmpi-1.10.3.tar.gz \\\n    && cd openmpi-1.10.3 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/mpi \\\n    && make -j all \\\n    && make install && rm openmpi-1.10.3.tar.gz\n\n# LD path to libpython3.6m.so\nRUN echo /opt/conda/lib >> /etc/ld.so.conf.d/conda.conf && \\\n    ldconfig\n\n# cmake\nRUN curl -f -o cmake-3.11.2-Linux-x86_64.sh -L https://cmake.org/files/v3.11/cmake-3.11.2-Linux-x86_64.sh \\\n    && chmod +x cmake-3.11.2-Linux-x86_64.sh \\\n    && ./cmake-3.11.2-Linux-x86_64.sh --skip-license \\\n    && ln -s /opt/cmake-3.11.2-Linux-x86_64/bin/* /usr/local/bin\n"
}