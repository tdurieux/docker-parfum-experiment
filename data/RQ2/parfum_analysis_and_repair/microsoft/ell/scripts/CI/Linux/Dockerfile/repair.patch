diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/ell/scripts/CI/Linux/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/ell/scripts/CI/Linux/Dockerfile/repaired.Dockerfile
index f71b80c..a3b62b1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/ell/scripts/CI/Linux/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/ell/scripts/CI/Linux/Dockerfile/repaired.Dockerfile
@@ -6,7 +6,7 @@
 FROM continuumio/miniconda3:latest
 
 RUN apt-get update \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
       build-essential \
       curl \
       gcc-8 \
@@ -22,46 +22,46 @@ RUN apt-get update \
       unzip \
       sudo \
       zip \
-    && apt-get clean all
+    && apt-get clean all && rm -rf /var/lib/apt/lists/*;
 
 # LLVM 8.0
 RUN echo deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main >> /etc/apt/sources.list
 RUN echo deb-src http://apt.llvm.org/bionic/ llvm-toolchain-bionic-8 main >> /etc/apt/sources.list
 RUN sudo wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
 RUN apt-get update \
-    && apt-get install -y \
+    && apt-get install --no-install-recommends -y \
       llvm-8 \
       clang-8 \
-    && apt-get clean all
+    && apt-get clean all && rm -rf /var/lib/apt/lists/*;
 
 # LD paths to LLVM tools
 RUN sudo ln -s /usr/lib/llvm-8/bin/opt /usr/bin/opt
 RUN sudo ln -s /usr/lib/llvm-8/bin/llc /usr/bin/llc
 
 # SWIG
-RUN curl -O --location http://prdownloads.sourceforge.net/swig/swig-4.0.0.tar.gz \
+RUN curl -f -O --location https://prdownloads.sourceforge.net/swig/swig-4.0.0.tar.gz \
     && tar zxvf swig-4.0.0.tar.gz \
     && cd swig-4.0.0 \
-    && ./configure --without-pcre \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --without-pcre \
     && make \
     && make install \
     && cd .. \
     && rm swig-4.0.0.tar.gz \
-    && rm -r -f swig-4.0.0 
+    && rm -r -f swig-4.0.0
 
 # LD path to libpython3.6m.so
 RUN echo /opt/conda/lib >> /etc/ld.so.conf.d/conda.conf && \
     ldconfig
 
 # cmake
-RUN curl -o cmake-3.15.2-Linux-x86_64.sh -L https://cmake.org/files/v3.15/cmake-3.15.2-Linux-x86_64.sh \
+RUN curl -f -o cmake-3.15.2-Linux-x86_64.sh -L https://cmake.org/files/v3.15/cmake-3.15.2-Linux-x86_64.sh \
     && chmod +x cmake-3.15.2-Linux-x86_64.sh \
     && ./cmake-3.15.2-Linux-x86_64.sh --skip-license \
-    &&  ln -s /opt/cmake-3.15.2-Linux-x86_64/bin/* /usr/local/bin
+    && ln -s /opt/cmake-3.15.2-Linux-x86_64/bin/* /usr/local/bin
 
 # Install pyaudio for ELL audio tutorials
-RUN sudo apt-get install -y portaudio19-dev
-RUN sudo apt-get install -y python3-pyaudio
+RUN sudo apt-get install --no-install-recommends -y portaudio19-dev && rm -rf /var/lib/apt/lists/*;
+RUN sudo apt-get install --no-install-recommends -y python3-pyaudio && rm -rf /var/lib/apt/lists/*;
 
 # setup conda environment.
 RUN conda create -n py37 numpy python=3.7
@@ -71,6 +71,6 @@ RUN sudo apt-get autoremove \
     && sudo apt-get clean all
 
 # Jekyll for building website
-RUN sudo apt-get -y install ruby ruby-dev zlib1g-dev 
+RUN sudo apt-get -y --no-install-recommends install ruby ruby-dev zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 RUN sudo gem install jekyll bundler github-pages jekyll-paginate jekyll-sass-converter kramdown rouge jekyll-seo-tag jekyll-relative-links