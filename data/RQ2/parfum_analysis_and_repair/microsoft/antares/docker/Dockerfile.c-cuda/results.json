{
  "startTime": 1674254259553,
  "endTime": 1674254260253,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.0.3-cudnn8-devel-ubuntu20.04\n\nENV DEBIAN_FRONTEND noninteractive\nENV PYTHONDONTWRITEBYTECODE 1\nENV PATH $PATH:/usr/local/nvidia/lib64/bin\nENV LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu:/usr/local/cuda/compat:$LD_LIBRARY_PATH\n\nRUN env > /etc/environment\n\nRUN apt-get update && apt install -y --no-install-recommends git ca-certificates \\\n    python3-pip python3-wheel python3-setuptools python3-dev python3-pytest \\\n    vim-tiny less netcat-openbsd inetutils-ping curl patch iproute2 \\\n    g++ libpci3 libnuma-dev make file openssh-server kmod gdb libopenmpi-dev openmpi-bin psmisc \\\n        autoconf automake autotools-dev libtool \\\n        zlib1g-dev rename zip unzip librdmacm-dev gnupg \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\n\nRUN /bin/echo -e \"set backspace=indent,eol,start\\nset nocompatible\\nset ts=4\" > /etc/vim/vimrc.tiny\n\nRUN [ -e /usr/lib/x86_64-linux-gnu/libcuda.so.1 ] || ln -s /host/usr/lib/x86_64-linux-gnu/libcuda.so.1 /usr/lib/x86_64-linux-gnu\nRUN ln -sf libcudart.so /usr/local/cuda/targets/x86_64-linux/lib/libcudart_static.a\n\nENV LD_LIBRARY_PATH=/usr/local/nvidia/lib64:$LD_LIBRARY_PATH\nRUN pip3 install --no-cache-dir --upgrade antares && mkdir -p /root/.local/antares && ln -s $(antares pwd)/../3rdparty /root/.local/antares/3rdparty\n# RUN python3 -m pip install tensorflow-gpu==2.4.0 mpi4py\n"
}