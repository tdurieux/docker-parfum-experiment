diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/iqsharp/images/iqsharp-base/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/iqsharp/images/iqsharp-base/Dockerfile/repaired.Dockerfile
index 4213ae0..b7970e1 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/iqsharp/images/iqsharp-base/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/iqsharp/images/iqsharp-base/Dockerfile/repaired.Dockerfile
@@ -5,15 +5,15 @@ FROM python:3.7-slim-buster
 # force pyzmq==19.0.2 due to incompatibility of IQ# with pyzmq>=20.0.0
 #       jinja2==3.0.3 due to incompatibility with nbconvert
 #       nbclient==0.6.3 and ipython=7.33.0 to avoid race conditions (see #520)
-RUN pip install --no-cache --upgrade pip && \
-    pip install --no-cache notebook pyzmq==19.0.2 jinja2==3.0.3 nbclient==0.6.3 ipython==7.33.0
+RUN pip install --no-cache-dir --no-cache --upgrade pip && \
+    pip install --no-cache-dir --no-cache notebook pyzmq==19.0.2 jinja2==3.0.3 nbclient==0.6.3 ipython==7.33.0
 
 # Install APT prerequisites.
 RUN apt-get update && \
     apt-get -y upgrade \
                        # Make sure SSL packages are up to date.
                        libsasl2-2 && \
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
                        # Dependencies for the .NET Core SDK.
                        wget \
                        pgp \
@@ -36,7 +36,7 @@ RUN apt-get update && \
     apt-get -y upgrade libidn2-0 && \
     # We clean the apt cache at the end of each apt command so that the caches
     # don't get stored in each layer.
-    apt-get clean && rm -rf /var/lib/apt/lists/
+    apt-get clean && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;
 
 # Trim down the size of the container by disabling the offline package
 # cache. See also: https://github.com/dotnet/dotnet-docker/issues/237
@@ -45,16 +45,16 @@ ENV NUGET_XMLDOC_MODE=skip \
 
 # Now that we have all the dependencies in place, we install the .NET Core SDK itself.
 # Notice that we're installing the SDK for both .NET Core 3.1 as well as .NET 6.0 for compatibility.
-RUN wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.asc.gpg && \
+RUN wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --batch --dearmor > microsoft.asc.gpg && \
     mv microsoft.asc.gpg /etc/apt/trusted.gpg.d/ && \
     wget -q https://packages.microsoft.com/config/debian/9/prod.list && \
     mv prod.list /etc/apt/sources.list.d/microsoft-prod.list && \
     chown root:root /etc/apt/trusted.gpg.d/microsoft.asc.gpg && \
     chown root:root /etc/apt/sources.list.d/microsoft-prod.list && \
     apt-get -y update && \
-    apt-get -y install dotnet-sdk-3.1=3.1.416-1 dotnet-sdk-6.0 && \
-    apt-get -y install procps && \
-    apt-get clean && rm -rf /var/lib/apt/lists/
+    apt-get -y --no-install-recommends install dotnet-sdk-3.1=3.1.416-1 dotnet-sdk-6.0 && \
+    apt-get -y --no-install-recommends install procps && \
+    apt-get clean && rm -rf /var/lib/apt/lists/ && rm -rf /var/lib/apt/lists/*;
 
 # Install prerequisites needed for integration with Live Share and VS Online.
 # TODO: Consider splitting this out into a new "extended" IQ# image.
@@ -110,12 +110,12 @@ RUN chown ${USER} -R ${LOCAL_PACKAGES}/ && \
     chown ${USER} -R ${LOCAL_PACKAGES}/ ${HOME}/.nuget
 
 # Install all wheels from the build context.
-RUN pip install $(ls ${LOCAL_PACKAGES}/wheels/*.whl)
+RUN pip install --no-cache-dir $(ls ${LOCAL_PACKAGES}/wheels/*.whl)
 
 # Get the Azure CLI tool
 ENV AZURE_CLI_VERSION "2.14.2"
 
-RUN curl -sL https://aka.ms/InstallAzureCLIDeb | bash
+RUN curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash
 
 # Get the az quantum extension
 RUN az extension add --source https://msquantumpublic.blob.core.windows.net/az-quantum-cli/quantum-latest-py3-none-any.whl --yes