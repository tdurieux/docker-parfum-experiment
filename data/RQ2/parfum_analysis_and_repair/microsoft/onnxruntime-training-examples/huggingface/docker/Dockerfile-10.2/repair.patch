diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/onnxruntime-training-examples/huggingface/docker/Dockerfile-10.2 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/onnxruntime-training-examples/huggingface/docker/Dockerfile-10.2/repaired.Dockerfile
index 757753e..383f71b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/onnxruntime-training-examples/huggingface/docker/Dockerfile-10.2
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/onnxruntime-training-examples/huggingface/docker/Dockerfile-10.2/repaired.Dockerfile
@@ -4,35 +4,35 @@
 
 # Usage
 #   Build: docker build -f Dockerfile.ort-cu102-cudnn7-devel-ubuntu18.04 -t [image-name] .
-#   Run: docker run -it --gpus all --name [run-name] [image-name]:latest /bin/bash 
+#   Run: docker run -it --gpus all --name [run-name] [image-name]:latest /bin/bash
 # Example:
 #   docker build -f Dockerfile.ort-cu102-cudnn7-devel-ubuntu18.04 -t ort.cu102 .
-#   docker run -it --gpus all --name my-experiments ort.cu102:latest /bin/bash 
+#   docker run -it --gpus all --name my-experiments ort.cu102:latest /bin/bash
 
 # CUDA development image for building sources
 FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04 as builder
 
 # Install and update tools to minimize security vulnerabilities
 RUN apt-get update
-RUN apt-get install -y software-properties-common wget apt-utils patchelf git libprotobuf-dev protobuf-compiler cmake
+RUN apt-get install --no-install-recommends -y software-properties-common wget apt-utils patchelf git libprotobuf-dev protobuf-compiler cmake && rm -rf /var/lib/apt/lists/*;
 RUN unattended-upgrade
 RUN apt-get autoremove -y
 
 # Python and pip
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
-RUN apt-get install -y python3-pip
+RUN apt-get install --no-install-recommends -y python3-pip && rm -rf /var/lib/apt/lists/*;
 RUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
 # PyTorch
 # pin onnx==1.9.0 to align with torch_ort dockerfile, otherwise AssertionError
-RUN pip install onnx==1.9.0 ninja
-RUN pip install torch==1.9.0+cu102 torchvision==0.10.0+cu102 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html
+RUN pip install --no-cache-dir onnx==1.9.0 ninja
+RUN pip install --no-cache-dir torch==1.9.0+cu102 torchvision==0.10.0+cu102 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html
 
 # ORT Module
-RUN pip install onnxruntime-training==1.9.0
+RUN pip install --no-cache-dir onnxruntime-training==1.9.0
 
-RUN pip install torch-ort
+RUN pip install --no-cache-dir torch-ort
 RUN python -m torch_ort.configure
 
 WORKDIR /stage
@@ -40,13 +40,13 @@ WORKDIR /stage
 #Install huggingface transformers
 RUN cd /stage && git clone https://github.com/microsoft/huggingface-transformers.git &&\
     cd huggingface-transformers &&\
-    git checkout raviskolli/ort_t5 &&\
-    pip install -e .
+    git checkout raviskolli/ort_t5 && \
+    pip install --no-cache-dir -e .
 
 # Install AzureML support and commonly used packages.
 # pin datasets==1.9.0 due 'Sequence to truncate too short to respect the provided max_length' on roberta-large
-# pin sacrebleu==1.5.1 due 'AttributeError: module sacrebleu has no attribute DEFAULT_TOKENIZER' on bart-large 
-RUN pip install azureml-defaults wget fairscale
-RUN pip install sacrebleu==1.5.1 datasets==1.9.0 deepspeed
-RUN pip install scipy sklearn accelerate
-RUN pip install sentencepiece protobuf
+# pin sacrebleu==1.5.1 due 'AttributeError: module sacrebleu has no attribute DEFAULT_TOKENIZER' on bart-large
+RUN pip install --no-cache-dir azureml-defaults wget fairscale
+RUN pip install --no-cache-dir sacrebleu==1.5.1 datasets==1.9.0 deepspeed
+RUN pip install --no-cache-dir scipy sklearn accelerate
+RUN pip install --no-cache-dir sentencepiece protobuf