diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/nlp-recipes/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/nlp-recipes/docker/Dockerfile/repaired.Dockerfile
index 1d2ae7f..a5712e4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/nlp-recipes/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/nlp-recipes/docker/Dockerfile/repaired.Dockerfile
@@ -1,15 +1,15 @@
 FROM nvidia/cuda
 
 # Install Anaconda
-# Non interactive installation instructions can be found 
+# Non interactive installation instructions can be found
 # https://hub.docker.com/r/continuumio/anaconda/dockerfile
 # https://hub.docker.com/r/continuumio/miniconda/dockerfile
 ENV PATH /opt/conda/bin:$PATH
 SHELL ["/bin/bash", "-c"]
 
-RUN apt-get update --fix-missing && apt-get install -y wget bzip2 ca-certificates \
+RUN apt-get update --fix-missing && apt-get install --no-install-recommends -y wget bzip2 ca-certificates \
     libglib2.0-0 libxext6 libsm6 libxrender1 \
-    git mercurial subversion
+    git mercurial subversion && rm -rf /var/lib/apt/lists/*;
 
 RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda2-4.5.11-Linux-x86_64.sh -O ~/miniconda.sh && \
     /bin/bash ~/miniconda.sh -b -p /opt/conda && \
@@ -20,16 +20,16 @@ RUN wget --quiet https://repo.anaconda.com/miniconda/Miniconda2-4.5.11-Linux-x86
 
 # Get the latest version repository
 WORKDIR /root
-RUN apt-get install -y zip && \
+RUN apt-get install --no-install-recommends -y zip && \
     wget --quiet https://github.com/microsoft/nlp-recipes/archive/staging.zip -O staging.zip && \
-    unzip staging.zip  && rm staging.zip 
-    
+    unzip staging.zip && rm staging.zip && rm -rf /var/lib/apt/lists/*;
+
 # Install the packages
 WORKDIR /root/nlp-recipes-staging
 RUN python /root/nlp-recipes-staging/tools/generate_conda_file.py --gpu && \
-    conda env create -n nlp_gpu -f nlp_gpu.yaml 
+    conda env create -n nlp_gpu -f nlp_gpu.yaml
 RUN source activate nlp_gpu && \
-    pip install -e . && \
+    pip install --no-cache-dir -e . && \
     python -m ipykernel install --user --name nlp_gpu --display-name "Python (nlp_gpu)"
 
 # Run notebook