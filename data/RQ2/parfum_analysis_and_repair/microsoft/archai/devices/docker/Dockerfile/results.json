{
  "startTime": 1674255574986,
  "endTime": 1674255575537,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 73,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 117
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 22,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nSHELL [\"/bin/bash\", \"-c\"]\n\nARG MODEL_STORAGE_CONNECTION_STRING\nARG SNPE_SDK\nARG SNPE_SDK_FILENAME\nARG SNPE_ROOT\nARG ANDROID_NDK\nARG ANDROID_NDK_FILENAME\nARG ANDROID_NDK_ROOT\n\nRUN apt-get update && apt-get install --no-install-recommends -y git unzip curl python3 python3-pip cmake ffmpeg libsm6 libxext6 wget locales && rm -rf /var/lib/apt/lists/*;\n\n# have to ensure default locale is utf-8 otherwise python bails with this error:\n# UnicodeEncodeError: 'ascii' codec can't encode character '\\xe7' in position 17: ordinal not in range(128)\nRUN locale-gen en_US.UTF-8\n\nWORKDIR /home/archai\n\nRUN echo \"export MODEL_STORAGE_CONNECTION_STRING=\\\"$MODEL_STORAGE_CONNECTION_STRING\\\"\" >> /home/archai/.profile\nRUN echo \"export SNPE_ROOT=$SNPE_ROOT\" >> /home/archai/.profile\nRUN echo \"export ANDROID_NDK_ROOT=$ANDROID_NDK_ROOT\" >> /home/archai/.profile\nRUN echo \"export INPUT_DATASET=/home/archai/datasets/FaceSynthetics\" >> /home/archai/.profile\nRUN echo \"export PATH=$PATH:/home/archai\" >> /home/archai/.profile\nRUN echo \"export LC_ALL=en_US.UTF-8\" >> /home/archai/.profile\n\nRUN curl -f -O --location \"${SNPE_SDK}\"\nRUN unzip \"${SNPE_SDK_FILENAME}\"\nRUN curl -f -O --location \"${ANDROID_NDK}\"\nRUN unzip \"${ANDROID_NDK_FILENAME}\"\n\nRUN wget -O azcopy_v10.tar.gz https://aka.ms/downloadazcopy-v10-linux && tar -xf azcopy_v10.tar.gz --strip-components=1 && rm azcopy_v10.tar.gz\n\n# this echo is a trick to bypass docker build cache.\n# simply change the echo string every time you want docker build to pull down new bits.\nRUN echo '06/16/2022 10:16 AM' >/dev/null && git clone \"https://github.com/microsoft/archai.git\"\n\nRUN source /home/archai/.profile && \\\n    pushd /home/archai/archai/devices && \\\n    python3 --version && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir -r requirements.txt\n\nCOPY run.sh /home/archai/run.sh\nRUN ls -al /home/archai\nRUN cat run.sh\n\nRUN chmod u+x /home/archai/run.sh\n\nCMD [\"bash\", \"-c\", \"/home/archai/run.sh\"]\n"
}