diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/cntk/Tools/docker/CNTK-GPU-Image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/cntk/Tools/docker/CNTK-GPU-Image/Dockerfile/repaired.Dockerfile
index 0f57f67..e0cc9ea 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/cntk/Tools/docker/CNTK-GPU-Image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/cntk/Tools/docker/CNTK-GPU-Image/Dockerfile/repaired.Dockerfile
@@ -62,25 +62,25 @@ RUN DEBIAN_FRONTEND=noninteractive && \
     ./bootstrap --system-curl -- -DCMAKE_USE_OPENSSL=ON && \
     make -j $(nproc) install && \
     cd .. && \
-    rm -rf cmake-$CMAKE_DOWNLOAD_VERSION.$CMAKE_BUILD_VERSION	
+    rm -rf cmake-$CMAKE_DOWNLOAD_VERSION.$CMAKE_BUILD_VERSION && rm cmake-$CMAKE_DOWNLOAD_VERSION.$CMAKE_BUILD_VERSION.tar.gz
 
 ARG OPENMPI_VERSION=1.10.7
 RUN wget -q -O - https://cntkbuildstorage.blob.core.windows.net/cntk-ci-dependencies/openmpi/$OPENMPI_VERSION/openmpi-$OPENMPI_VERSION.tar.gz | tar -xzf - && \
     cd openmpi-${OPENMPI_VERSION} && \
     apt-get -y update && \
     apt-get -y -f install && \
-    apt-get -y install libsysfs2 libsysfs-dev && \
-    ./configure --with-verbs --with-cuda=/usr/local/cuda --prefix=/usr/local/mpi && \
+    apt-get -y --no-install-recommends install libsysfs2 libsysfs-dev && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-verbs --with-cuda=/usr/local/cuda --prefix=/usr/local/mpi && \
     make -j $(nproc) install && \
     cd .. && \
-    rm -rf openmpi-${OPENMPI_VERSION}
+    rm -rf openmpi-${OPENMPI_VERSION} && rm -rf /var/lib/apt/lists/*;
 ENV PATH /usr/local/mpi/bin:$PATH
 ENV LD_LIBRARY_PATH /usr/local/mpi/lib:$LD_LIBRARY_PATH
 
 ARG LIBZIP_VERSION=1.1.2
 RUN wget -q -O - https://cntkbuildstorage.blob.core.windows.net/cntk-ci-dependencies/libzip/$LIBZIP_VERSION/libzip-$LIBZIP_VERSION.tar.gz | tar -xzf - && \
     cd libzip-${LIBZIP_VERSION} && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j $(nproc) install && \
     cd .. && \
     rm -rf libzip-${LIBZIP_VERSION}
@@ -125,7 +125,7 @@ RUN PROTOBUF_STRING=protobuf-$PROTOBUF_VERSION && \
     wget -O - --no-verbose https://cntkbuildstorage.blob.core.windows.net/cntk-ci-dependencies/protobuf/$PROTOBUF_VERSION/protobuf-$PROTOBUF_VERSION.tar.gz | tar -xzf - && \
     cd $PROTOBUF_STRING && \
     ./autogen.sh && \
-    ./configure CFLAGS=-fPIC CXXFLAGS=-fPIC --disable-shared --prefix=/usr/local/$PROTOBUF_STRING && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CFLAGS=-fPIC CXXFLAGS=-fPIC --disable-shared --prefix=/usr/local/$PROTOBUF_STRING && \
     make -j $(nproc) install && \
     cd .. && \
     rm -rf $PROTOBUF_STRING
@@ -164,7 +164,7 @@ RUN mv /bin/sh /bin/sh.orig && \
     cd ../src && \
     # remove Fermi support as CUDA 9 no longer works on it
     perl -pi -e 's/-gencode arch=compute_20,code=sm_20//' cudamatrix/Makefile && \
-    ./configure --openblas-root=/usr/local/openblas --shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --openblas-root=/usr/local/openblas --shared && \
     make -j $(nproc) depend && \
     make -j $(nproc) all && \
     # Remove some unneeded stuff in $KALDI_PATH to reduce size
@@ -183,7 +183,7 @@ ARG CACHEBUST=1
 RUN wget -q https://cntkbuildstorage.blob.core.windows.net/cntk-ci-dependencies/swig/$SWIG_VERSION/swig-$SWIG_VERSION.tar.gz -O - | tar xvfz - && \
     cd swig-$SWIG_VERSION && \
     # Note: we specify --without-alllang to suppress building tests and examples for specific languages.
-    ./configure --prefix=/usr/local/swig-$SWIG_VERSION --without-perl5 --without-alllang && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/swig-$SWIG_VERSION --without-perl5 --without-alllang && \
     make -j $(nproc) && \
     make install && \
     cd .. && \
@@ -195,11 +195,11 @@ RUN /tmp/patches/patch_swig.sh /usr/local/share/swig/3.0.10 && \
 # .NET Core SDK
 RUN wget -q https://cntkbuildstorage.blob.core.windows.net/cntk-ci-dependencies/packages-microsoft-prod/deb/packages-microsoft-prod.deb && \
     dpkg -i packages-microsoft-prod.deb && \
-    apt-get -y -f install apt-transport-https && \
+    apt-get -y --no-install-recommends -f install apt-transport-https && \
     apt-get -y update && \
-    apt-get -y -f install dotnet-sdk-2.1 && \
-    rm ./packages-microsoft-prod.deb
-	
+    apt-get -y --no-install-recommends -f install dotnet-sdk-2.1 && \
+    rm ./packages-microsoft-prod.deb && rm -rf /var/lib/apt/lists/*;
+
 # Anaconda
 ARG ANACONDA_VERSION=4.2.0
 RUN wget -q https://cntkbuildstorage.blob.core.windows.net/cntk-ci-dependencies/anaconda3/$ANACONDA_VERSION/Anaconda3-$ANACONDA_VERSION-Linux-x86_64.sh && \
@@ -228,7 +228,7 @@ RUN _CUDNN_VERSION=$(echo $CUDNN_VERSION | cut -d. -f1-2) && \
     cp -av /usr/local/cuda/lib64/stubs/libnvidia-ml* /usr/src/gdk/nvml/lib && \
     cp -av /usr/local/cuda/lib64/stubs/libnvidia-ml.so /usr/src/gdk/nvml/lib/libnvidia-ml.so.1 && \
     mkdir -p /usr/include/nvidia/gdk && \
-    cp -av /usr/local/cuda/include/nvml.h /usr/include/nvidia/gdk/nvml.h
+    cp -av /usr/local/cuda/include/nvml.h /usr/include/nvidia/gdk/nvml.h && rm -rf /usr/src/gdk/nvml/lib
 
 # Build CNTK
 RUN git clone --depth=1 --recursive -b $COMMIT https://github.com/Microsoft/CNTK.git cntksrc && \