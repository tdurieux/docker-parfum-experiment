{
  "startTime": 1674251117664,
  "endTime": 1674251118401,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 84
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 108
      }
    }
  ],
  "repairedDockerfile": "FROM debian:10\n\nENV DEBIAN_FRONTEND noninteractive\n\n# Package installation\nRUN apt-get update\n\n## Common packages for linux build environment\nRUN apt install --no-install-recommends -y clang python pkg-config git curl bzip2 unzip make wget cmake sudo && rm -rf /var/lib/apt/lists/*;\n\nRUN adduser --disabled-password --gecos '' docker\nRUN adduser docker sudo\nRUN echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers\n## RUN useradd -m docker && echo \"docker:docker\" | chpasswd && adduser docker sudo\n## USER docker\n\n# this is where I was running into problems with the other approaches\nRUN sudo apt-get update\n\nCMD /bin/bash\n\n# ENTRYPOINT bash\n"
}