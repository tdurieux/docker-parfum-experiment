{
  "startTime": 1674253555853,
  "endTime": 1674253557045,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 164
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.16-buster\n\n# Avoid warnings by switching to noninteractive\nENV DEBIAN_FRONTEND=noninteractive\n\n# This Dockerfile adds a non-root 'vscode' user with sudo access. However, for Linux,\n# this user's GID/UID must match your local user UID/GID to avoid permission issues\n# with bind mounts. Update USER_UID / USER_GID if yours is not 1000. See\n# https://aka.ms/vscode-remote/containers/non-root-user for details.\nARG USERNAME=vscode\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\n# Terraform and tflint versions\nARG TERRAFORM_VERSION=0.14.4\n\nENV GO111MODULE=on\n\n# Configure apt, install packages and tools\nRUN apt-get update \\\n    && apt-get -y install --no-install-recommends curl unzip apt-utils dialog \\\n    #\n    # Verify git, process tools, lsb-release (common in install instructions for CLIs) installed \\\n    && apt-get -y --no-install-recommends install git iproute2 procps lsb-release \\\n    #\n    # Install Azure CLI\n    && curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash \\\n    #\n    # Create a non-root user to use if preferred - see https://aka.ms/vscode-remote/containers/non-root-user.\n    && groupadd --gid $USER_GID $USERNAME \\\n    && useradd -s /bin/bash --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    && echo $USERNAME \\\n    #\n    # Clean up\n    && apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n\nENV GIT_PROMPT_START='\\033[1;36maztf-devcon>\\033[0m\\033[0;33m\\w\\a\\033[0m'\n\n# Save command line history\nRUN echo \"export HISTFILE=/root/commandhistory/.bash_history\" >> \"/root/.bashrc\" \\\n    && echo \"export PROMPT_COMMAND='history -a'\" >> \"/root/.bashrc\" \\\n    && mkdir -p /root/commandhistory \\\n    && touch /root/commandhistory/.bash_history\n\n# Git command prompt\nRUN git clone https://github.com/magicmonty/bash-git-prompt.git ~/.bash-git-prompt --depth=1 \\\n    && echo \"if [ -f \\\"$HOME/.bash-git-prompt/gitprompt.sh\\\" ]; then GIT_PROMPT_ONLY_IN_REPO=1 && source $HOME/.bash-git-prompt/gitprompt.sh; fi\" >> \"/root/.bashrc\"\n\n# Install Go tools\nRUN \\\n    # --> Delve for debugging\n    go get github.com/go-delve/delve/cmd/dlv@v1.5.0 \\\n    # --> Go language server\n    && go get golang.org/x/tools/gopls@v0.6.3 \\\n    # --> Go symbols and outline for go to symbol support and test support \n    && go get github.com/acroca/go-symbols@v0.1.1 && go get github.com/ramya-rao-a/go-outline@7182a932836a71948db4a81991a494751eccfe77 \\\n    # --> Linting\n    && go get golang.org/x/lint/golint\n\nRUN \\\n\n    mkdir -p /tmp/docker-downloads \\\n    && curl -f -sSL -o /tmp/docker-downloads/terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip \\\n    && unzip /tmp/docker-downloads/terraform.zip \\\n    && mv terraform /usr/local/bin\n\nENV TF_ACC=1"
}