diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/deepspeed/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/deepspeed/docker/Dockerfile/repaired.Dockerfile
index 9bcfedb..0af29b7 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/microsoft/deepspeed/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/microsoft/deepspeed/docker/Dockerfile/repaired.Dockerfile
@@ -17,15 +17,15 @@ RUN apt-get update && \
         curl wget vim tmux emacs less unzip \
         htop iftop iotop ca-certificates openssh-client openssh-server \
         rsync iputils-ping net-tools sudo \
-        llvm-9-dev
+        llvm-9-dev && rm -rf /var/lib/apt/lists/*;
 
 ##############################################################################
 # Installation Latest Git
 ##############################################################################
 RUN add-apt-repository ppa:git-core/ppa -y && \
         apt-get update && \
-        apt-get install -y git && \
-        git --version
+        apt-get install --no-install-recommends -y git && \
+        git --version && rm -rf /var/lib/apt/lists/*;
 
 ##############################################################################
 # Client Liveness & Uncomment Port 22 for SSH Daemon
@@ -39,9 +39,9 @@ RUN cp /etc/ssh/sshd_config ${STAGE_DIR}/sshd_config && \
 # Mellanox OFED
 ##############################################################################
 ENV MLNX_OFED_VERSION=4.6-1.0.1.1
-RUN apt-get install -y libnuma-dev
+RUN apt-get install --no-install-recommends -y libnuma-dev && rm -rf /var/lib/apt/lists/*;
 RUN cd ${STAGE_DIR} && \
-        wget -q -O - http://www.mellanox.com/downloads/ofed/MLNX_OFED-${MLNX_OFED_VERSION}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64.tgz | tar xzf - && \
+        wget -q -O - https://www.mellanox.com/downloads/ofed/MLNX_OFED-${MLNX_OFED_VERSION}/MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64.tgz | tar xzf - && \
         cd MLNX_OFED_LINUX-${MLNX_OFED_VERSION}-ubuntu18.04-x86_64 && \
         ./mlnxofedinstall --user-space-only --without-fw-update --all -q && \
         cd ${STAGE_DIR} && \
@@ -60,9 +60,9 @@ RUN mkdir -p ${STAGE_DIR} && \
         tar xzf ${STAGE_DIR}/nvidia-peer-memory_${NV_PEER_MEM_VERSION}.orig.tar.gz && \
         cd ${STAGE_DIR}/nvidia-peer-memory-${NV_PEER_MEM_VERSION} && \
         apt-get update && \
-        apt-get install -y dkms && \
+        apt-get install --no-install-recommends -y dkms && \
         dpkg-buildpackage -us -uc && \
-        dpkg -i ${STAGE_DIR}/nvidia-peer-memory_${NV_PEER_MEM_TAG}_all.deb
+        dpkg -i ${STAGE_DIR}/nvidia-peer-memory_${NV_PEER_MEM_TAG}_all.deb && rm ${STAGE_DIR}/nvidia-peer-memory_${NV_PEER_MEM_VERSION}.orig.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 ##############################################################################
 # OPENMPI
@@ -72,7 +72,7 @@ ENV OPENMPI_VERSION=${OPENMPI_BASEVERSION}.1
 RUN cd ${STAGE_DIR} && \
         wget -q -O - https://download.open-mpi.org/release/open-mpi/v${OPENMPI_BASEVERSION}/openmpi-${OPENMPI_VERSION}.tar.gz | tar xzf - && \
         cd openmpi-${OPENMPI_VERSION} && \
-        ./configure --prefix=/usr/local/openmpi-${OPENMPI_VERSION} && \
+        ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/openmpi-${OPENMPI_VERSION} && \
         make -j"$(nproc)" install && \
         ln -s /usr/local/openmpi-${OPENMPI_VERSION} /usr/local/mpi && \
         # Sanity check:
@@ -92,23 +92,23 @@ RUN mv /usr/local/mpi/bin/mpirun /usr/local/mpi/bin/mpirun.real && \
 ##############################################################################
 ENV DEBIAN_FRONTEND=noninteractive
 ENV PYTHON_VERSION=3
-RUN apt-get install -y python3 python3-dev && \
+RUN apt-get install --no-install-recommends -y python3 python3-dev && \
         rm -f /usr/bin/python && \
         ln -s /usr/bin/python3 /usr/bin/python && \
-        curl -O https://bootstrap.pypa.io/get-pip.py && \
+        curl -f -O https://bootstrap.pypa.io/get-pip.py && \
         python get-pip.py && \
         rm get-pip.py && \
-        pip install --upgrade pip && \
+        pip install --no-cache-dir --upgrade pip && \
         # Print python an pip version
-        python -V && pip -V
-RUN pip install pyyaml
-RUN pip install ipython
+        python -V && pip -V && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir pyyaml
+RUN pip install --no-cache-dir ipython
 
 ##############################################################################
 # TensorFlow
 ##############################################################################
 ENV TENSORFLOW_VERSION=1.15.2
-RUN pip install tensorflow-gpu==${TENSORFLOW_VERSION}
+RUN pip install --no-cache-dir tensorflow-gpu==${TENSORFLOW_VERSION}
 
 ##############################################################################
 # Some Packages
@@ -120,8 +120,8 @@ RUN apt-get update && \
         libjpeg-dev \
         libpng-dev \
         screen \
-        libaio-dev
-RUN pip install psutil \
+        libaio-dev && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir psutil \
         yappi \
         cffi \
         ipdb \
@@ -160,9 +160,9 @@ RUN cat /etc/ssh/sshd_config > ${STAGE_DIR}/sshd_config && \
 ENV PYTORCH_VERSION=1.2.0
 ENV TORCHVISION_VERSION=0.4.0
 ENV TENSORBOARDX_VERSION=1.8
-RUN pip install torch==${PYTORCH_VERSION}
-RUN pip install torchvision==${TORCHVISION_VERSION}
-RUN pip install tensorboardX==${TENSORBOARDX_VERSION}
+RUN pip install --no-cache-dir torch==${PYTORCH_VERSION}
+RUN pip install --no-cache-dir torchvision==${TORCHVISION_VERSION}
+RUN pip install --no-cache-dir tensorboardX==${TENSORBOARDX_VERSION}
 
 ##############################################################################
 # PyYAML build issue