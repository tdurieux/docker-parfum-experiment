{
  "startTime": 1674249815939,
  "endTime": 1674249816825,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 22,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Options:\n#   tensorflow\n#   tensorflow-gpu\n#   tf-nightly\n#   tf-nightly-gpu\nARG TF_PACKAGE=tensorflow\nRUN apt-get update && apt-get install --no-install-recommends -y wget libhdf5-dev && rm -rf /var/lib/apt/lists/*;\nRUN ${PIP} install --global-option=build_ext \\\n            --global-option=-I/usr/include/hdf5/serial/ \\\n            --global-option=-L/usr/lib/powerpc64le-linux-gnu/hdf5/serial \\\n            h5py\n\n# CACHE_STOP is used to rerun future commands, otherwise downloading the .whl will be cached and will not pull the most recent version\nARG CACHE_STOP=1\nRUN if [ ${TF_PACKAGE} = tensorflow-gpu ]; then \\\n        BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Release_Build/lastSuccessfulBuild/; \\\n    elif [ ${TF_PACKAGE} = tf-nightly-gpu ]; then \\\n        BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_GPU_Nightly_Artifact/lastSuccessfulBuild/; \\\n    elif [ ${TF_PACKAGE} = tensorflow ]; then \\\n        BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Release_Build/lastSuccessfulBuild/; \\\n    elif [ ${TF_PACKAGE} = tf-nightly ]; then \\\n        BASE=https://powerci.osuosl.org/job/TensorFlow_PPC64LE_CPU_Nightly_Artifact/lastSuccessfulBuild/; \\\n    fi; \\\n    MAJOR=`${PYTHON} -c 'import sys; print(sys.version_info[0])'`; \\\n    MINOR=`${PYTHON} -c 'import sys; print(sys.version_info[1])'`; \\\n    PACKAGE=$(wget -qO- ${BASE}\"api/xml?xpath=//fileName&wrapper=artifacts\" | grep -o \"[^<>]*cp${MAJOR}${MINOR}[^<>]*.whl\"); \\\n    wget ${BASE}\"artifact/tensorflow_pkg/\"${PACKAGE}; \\\n    ${PIP} install ${PACKAGE}\n"
}