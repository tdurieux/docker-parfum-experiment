{
  "startTime": 1674254789442,
  "endTime": 1674254790351,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#################\n#\n# Because Composer is organized as a monorepo with multiple packages\n# managed by yarn workspaces, our Dockerfile may not look like other\n# node / react projects. Specifically, we have to add all source files\n# before doing yarn install due to yarn workspace symlinking.\n#\n################\nFROM  mcr.microsoft.com/dotnet/core/sdk:3.1-focal as base\nRUN apt update \\\n    && apt -y --no-install-recommends install curl dirmngr apt-transport-https lsb-release ca-certificates \\\n    && curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n    && apt install --no-install-recommends -y nodejs libgomp1 \\\n    && npm install -g yarn && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nFROM base as build\nARG YARN_ARGS\n\nWORKDIR /src/Composer\nCOPY ./Composer .\nCOPY ./extensions ../extensions\nCOPY ./.yarn ../.yarn\nCOPY .yarnrc.yml ../\n# run yarn install as a distinct layer\nRUN yarn install --immutable $YARN_ARGS && yarn cache clean;\nENV NODE_OPTIONS \"--max-old-space-size=6114\"\nENV NODE_ENV \"production\"\nENV COMPOSER_BUILTIN_EXTENSIONS_DIR \"/src/extensions\"\nRUN yarn build:prod $YARN_ARGS\n\n# CI only\nENV COMPOSER_REMOTE_EXTENSIONS_DIR \"/src/remote-extensions\"\nENV COMPOSER_REMOTE_EXTENSION_DATA_DIR \"/src/extension-data\"\nENV COMPOSER_EXTENSION_MANIFEST \"/src/extensions.json\"\nCMD [\"yarn\",\"start:server\"]\n\nFROM base as composerbasic\nARG YARN_ARGS\n\nWORKDIR /app/Composer\nCOPY --from=build /src/.yarn ../.yarn\nCOPY --from=build /src/.yarnrc.yml ../\nCOPY --from=build /src/Composer/yarn-berry.lock .\nCOPY --from=build /src/Composer/package.json .\nCOPY --from=build /src/Composer/packages ./packages\nCOPY --from=build /src/extensions ../extensions\n\nENV NODE_ENV \"production\"\nRUN yarn --production --immutable --force $YARN_ARGS && yarn cache clean\n\nFROM base\nENV NODE_ENV \"production\"\n\nWORKDIR /app/Composer\nCOPY --from=composerbasic /app ..\n\n\nENV COMPOSER_BUILTIN_EXTENSIONS_DIR \"/app/extensions\"\nENV COMPOSER_REMOTE_EXTENSIONS_DIR \"/app/remote-extensions\"\nENV COMPOSER_REMOTE_EXTENSION_DATA_DIR \"/app/extension-data\"\nENV COMPOSER_EXTENSION_MANIFEST \"/app/extensions.json\"\nCMD [\"yarn\",\"start:server\"]\n"
}