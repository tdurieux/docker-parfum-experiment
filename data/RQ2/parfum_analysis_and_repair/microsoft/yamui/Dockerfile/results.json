{
  "startTime": 1674217807290,
  "endTime": 1674217808236,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8-slim\n\n# Install latest chrome dev package\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        gconf-service \\\n        libasound2 \\\n        libatk1.0-0 \\\n        libc6 \\\n        libcairo2 \\\n        libcups2 \\\n        libdbus-1-3 \\\n        libexpat1 \\\n        libfontconfig1 \\\n        libgcc1 \\\n        libgconf-2-4 \\\n        libgdk-pixbuf2.0-0 \\\n        libglib2.0-0 \\\n        libgtk-3-0 \\\n        libnspr4 \\\n        libpango-1.0-0 \\\n        libpangocairo-1.0-0 \\\n        libstdc++6 \\\n        libx11-6 \\\n        libx11-xcb1 \\\n        libxcb1 \\\n        libxcomposite1 \\\n        libxcursor1 \\\n        libxdamage1 \\\n        libxext6 \\\n        libxfixes3 \\\n        libxi6 \\\n        libxrandr2 \\\n        libxrender1 \\\n        libxss1 \\\n        libxtst6 \\\n        ca-certificates \\\n        fonts-liberation \\\n        libappindicator1 \\\n        libnss3 \\\n        lsb-release \\\n        xdg-utils \\\n        wget \\\n        patch \\\n    && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n    && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n    && apt-get update \\\n    && apt-get install -y google-chrome-unstable --no-install-recommends \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && apt-get purge --auto-remove -y curl \\\n    && rm -rf /src/*.deb\n\nENV APP_ROOT /usr/src/yamui\nRUN mkdir -p $APP_ROOT\nWORKDIR $APP_ROOT\n\n# Install dependencies before copying the app for caching purposes\nCOPY ./config/yo/generator-component/package.json $APP_ROOT/config/yo/generator-component/package.json\nCOPY ./package.json $APP_ROOT/package.json\nCOPY ./package-lock.json $APP_ROOT/package-lock.json\nRUN npm install --unsafe-perm && npm cache clean --force;\n\n# Copy the app\nCOPY . $APP_ROOT\n\nCMD [\"npm\", \"run\", \"test\"]\n"
}