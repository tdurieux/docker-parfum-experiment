diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uscrpl/mbed-cmake/mbed-src/docker_images/mbed-os-env/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uscrpl/mbed-cmake/mbed-src/docker_images/mbed-os-env/Dockerfile/repaired.Dockerfile
index 942a2b7..e148c41 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/uscrpl/mbed-cmake/mbed-src/docker_images/mbed-os-env/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/uscrpl/mbed-cmake/mbed-src/docker_images/mbed-os-env/Dockerfile/repaired.Dockerfile
@@ -16,7 +16,7 @@ ARG WORKDIR=/root
 ENV DEBIAN_FRONTEND=noninteractive
 RUN set -x \
     && apt -y update \
-    && apt -y install \
+    && apt -y --no-install-recommends install \
     git \
     wget \
     python3 \
@@ -37,31 +37,31 @@ RUN set -x \
     gcovr \
     && apt clean && rm -rf /var/lib/apt/lists \
     && update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 \
-    && : # last line
+    && : && rm -rf /var/lib/apt/lists/*;
 
 RUN set -x \
-    && pip3 install -U cmake
+    && pip3 install --no-cache-dir -U cmake
 
 # Set up Mbed environment
 WORKDIR /tmp/
 COPY requirements.txt .
 RUN set -x \
-    && pip3 install -r requirements.txt  \
-    && : # last line
+    && pip3 install --no-cache-dir -r requirements.txt \
+    && :
 
 COPY tools/cmake/requirements.txt .
 RUN set -x \
-    && pip3 install -r requirements.txt  \
-    && : # last line
+    && pip3 install --no-cache-dir -r requirements.txt \
+    && :
 
 
 # ------------------------------------------------------------------------------
 # Install Python modules (which are not included in requirements.txt)
 RUN set -x \
-    && pip3 install -U \
+    && pip3 install --no-cache-dir -U \
     mbed-cli \
     mbed-tools \
-    && : # last line
+    && :
 
 # ------------------------------------------------------------------------------
 # Install arm-none-eabi-gcc
@@ -83,7 +83,7 @@ ENV PATH="${PATH}:${MBED_GCC_ARM_PATH}"
 # ------------------------------------------------------------------------------
 # Display, check and save environment settings
 # NOTE: using bash instead of Ubuntu default bash due to unsupport for pipefail
-# Pipefail is crucial here, if the tools didn't install properly, docker build should not pass because of piping 
+# Pipefail is crucial here, if the tools didn't install properly, docker build should not pass because of piping
 RUN /bin/bash -c \
    "set -x -o pipefail \
     && arm-none-eabi-gcc --version | grep arm-none-eabi-gcc | tee env_settings \