{
  "startTime": 1674255160416,
  "endTime": 1674255160936,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 2,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17.6-alpine3.15 as toolset\n\nRUN apk add --no-cache gcc make git musl-dev\n\n\nFROM node:16-alpine3.14 as nodejs\n\nCOPY ./frontend /app/\nWORKDIR /app\nRUN npm install && npm run build && npm cache clean --force;\n\n\nFROM toolset as builder\n\nCOPY . /build\nCOPY --from=nodejs /app/dist /build/internal/frontend/dist/\nWORKDIR /build\nRUN make build/app\n\n\nFROM alpine:3.15\n\nRUN apk add --no-cache tcpdump wireguard-tools nftables\nCOPY --from=builder /build/tunnel-node /tunnel-node\nCMD [\"/tunnel-node\"]\n"
}