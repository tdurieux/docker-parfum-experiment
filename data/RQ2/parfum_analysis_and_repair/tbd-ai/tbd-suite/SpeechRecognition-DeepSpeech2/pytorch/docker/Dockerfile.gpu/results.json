{
  "startTime": 1674255083597,
  "endTime": 1674255084250,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 18,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 78
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 52
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 76
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nWORKDIR /tmp\n\n# Generic python installations\n# PyTorch Audio for DeepSpeech: https://github.com/SeanNaren/deepspeech.pytorch/releases\n# Development environment installations\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  python \\\n  python-pip \\\n  sox \\\n  libsox-dev \\\n  libsox-fmt-all \\\n  git \\\n  cmake \\\n  tree \\\n  htop \\\n  bmon \\\n  iotop \\\n  tmux \\\n  vim \\\n  apt-utils && rm -rf /var/lib/apt/lists/*;\n\n# Make pip happy about itself.\nRUN pip install --no-cache-dir --upgrade pip\n\n# Unlike apt-get, upgrading pip does not change which package gets installed,\n# (since it checks pypi everytime regardless) so it's okay to cache pip.\n# Install pytorch\n# http://pytorch.org/\n# Note the 3 versions of pytorch choices made available here are for convenience\n# in case you need to debug. We only had success with 0.4.0\nRUN pip install --no-cache-dir h5py \\\n                hickle \\\n                matplotlib \\\n                tqdm \\\n                http://download.pytorch.org/whl/cu80/torch-0.4.0-cp27-cp27mu-linux_x86_64.whl \\\n                torchvision \\\n                cffi \\\n                python-Levenshtein \\\n                librosa \\\n                wget \\\n                tensorboardX\n\nRUN apt-get update && apt-get install --yes --no-install-recommends cmake sudo && rm -rf /var/lib/apt/lists/*;\n\nENV CUDA_HOME \"/usr/local/cuda\"\n\n# Install warp-ctc\n# This wrap-ctc is changed to specifically work with pytorch 0.4.0\n# Specifically the changes are in \"warp-ctc/pytorch_binding/src/binding.cpp\"\nRUN git clone https://github.com/ahsueh1996/warp-ctc.git && \\\n    cd warp-ctc && \\\n    mkdir -p build && cd build && cmake .. && make VERBOSE=1 && \\\n    cd ../pytorch_binding && python setup.py install\n\n# Install pytorch audio\n# Two options are available: the newest torchaudio and the specific commit\n# This solves https://github.com/mlperf/training/issues/41\n# As a consequence, we need to... \"fix\" torchaudio later\nRUN apt-get install --no-install-recommends -y sox libsox-dev libsox-fmt-all && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/pytorch/audio.git\nRUN cd audio; python setup.py install\t\t\t\t\t# This option pulls the newest version\n# RUN cd audio; git reset --hard 67564173db19035329f21caa7d2be986c4c23797; python setup.py install # This option to solve dependency issue\n\n# Install ctcdecode\nRUN git clone --recursive https://github.com/parlance/ctcdecode.git\nRUN cd ctcdecode; pip install --no-cache-dir .\n\nENV SHELL /bin/bash\n"
}