{
  "startTime": 1674218780622,
  "endTime": 1674218781949,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:8\n\nENV PYTHONDONTWRITEBYTECODE=true\nENV BASH_ENV ~/.bashrc\nSHELL [\"/bin/bash\", \"-c\"]\nENV PATH=${PATH}:/miniconda3/bin\n\n# Development tools including compilers\nRUN yum groupinstall \"Development Tools\" -y --nogpgcheck && \\\n    yum install -y --nogpgcheck mesa-libGL libXt libXt-devel wget gcc-gfortran lapack vim tmux && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Install miniconda\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /miniconda.sh && \\\n    chmod +x /miniconda.sh && \\\n    /miniconda.sh -b -p /miniconda3/ && \\\n    rm /miniconda.sh && hash -r\n\nADD / /sharpy_dir/\n\n# Update conda and make it run with no user interaction\n# Cleanup conda installation\nRUN conda init bash && \\\n    conda config --set always_yes yes --set changeps1 no && \\\n    conda update -q conda && \\\n    conda config --set auto_activate_base false && \\\n    conda env create -f /sharpy_dir/utils/environment_minimal.yml && conda clean -afy && \\\n    find /miniconda3/ -follow -type f -name '*.a' -delete && \\\n    find /miniconda3/ -follow -type f -name '*.pyc' -delete && \\\n    find /miniconda3/ -follow -type f -name '*.js.map' -delete\n\n#COPY /utils/docker/* /root/\nRUN ln -s /sharpy_dir/utils/docker/* /root/\n\nRUN cd sharpy_dir && \\\n    conda activate sharpy_minimal && \\\n    mkdir build && \\\n    cd build && \\\n    CXX=g++ FC=gfortran cmake .. && make install -j 2 && \\\n    cd .. && \\\n    rm -rf build\n\nENTRYPOINT [\"/bin/bash\", \"--init-file\", \"/root/bashrc\"]\n\n"
}