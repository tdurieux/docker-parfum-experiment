{
  "startTime": 1674215522972,
  "endTime": 1674215524266,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/miniconda3\nLABEL maintainer=\"lachlan.grose@monash.edu\"\n#This docker image has been adapted from the lavavu dockerfile\n# install things\n\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    gcc \\\n    g++ \\\n    libc-dev \\\n    gfortran \\\n    openmpi-bin \\\n    libopenmpi-dev \\ \n    make && rm -rf /var/lib/apt/lists/*;\n# RUN conda install -c conda-forge python=3.9 -y\nRUN conda install -c conda-forge pip \\\n    scikit-learn \\\n    cython \\\n    numpy \\\n    pandas \\\n    scipy \\\n    pymc3 \\\n    jupyter \\\n    pyamg \\\n    # arviz==0.11.0 \\\n    pygraphviz \\\n    geopandas \\\n    shapely \\\n    ipywidgets \\\n    ipyleaflet \\\n    folium \\\n    jupyterlab \\\n    nodejs \\\n    -y\n\nRUN pip install --no-cache-dir ipyfilechooser\nRUN jupyter nbextension enable --py --sys-prefix ipyleaflet\nRUN pip install --no-cache-dir lavavu-osmesa\n\nENV NB_USER jovyan\nENV NB_UID 1000\nENV HOME /home/${NB_USER}\n\nRUN adduser --disabled-password \\\n    --gecos \"Default user\" \\\n    --uid ${NB_UID} \\\n    ${NB_USER}\nWORKDIR ${HOME}\n\nUSER root\nRUN chown -R ${NB_UID} ${HOME}\n\nRUN pip install --no-cache-dir snakeviz\n\n# Add Tini\nENV TINI_VERSION v0.19.0\nADD https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini /tini\nRUN chmod +x /tini\nENTRYPOINT [\"/tini\", \"--\"]\n\nUSER ${NB_USER}\n\nRUN mkdir notebooks\nRUN git clone https://github.com/Loop3D/LoopStructural.git\nRUN git clone https://github.com/Loop3D/map2loop-2.git map2loop\nRUN git clone https://github.com/Loop3D/LoopProjectFile.git\nRUN git clone https://github.com/TOMOFAST/Tomofast-x.git\nRUN pip install --no-cache-dir -e LoopStructural\nRUN pip install --no-cache-dir -e map2loop\nRUN pip install --no-cache-dir -e LoopProjectFile\n# WORKDIR Tomofast-x\n# RUN make\nWORKDIR ${HOME}\n# RUN pip install -e LoopStructural\nCMD [\"jupyter\", \"notebook\", \"--ip='0.0.0.0'\", \"--NotebookApp.token=''\", \"--no-browser\" ]\n\nEXPOSE 8050\nEXPOSE 8080:8090\n"
}