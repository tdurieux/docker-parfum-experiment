{
  "startTime": 1674250340668,
  "endTime": 1674250341377,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 123
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# For more information, please refer to https://aka.ms/vscode-docker-python\nFROM python:3.10.0-slim-buster\nLABEL maintainer=\"https://github.com/snaacky/chiya\"\n\n# Keeps Python from generating .pyc files in the container\n# Turns off buffering for easier container logging\n# Force UTF8 encoding for funky character handling\n# Needed so imports function properly\nENV PYTHONDONTWRITEBYTECODE=1\nENV PYTHONUNBUFFERED=1\nENV PYTHONIOENCODING=utf8\nENV PYTHONPATH=/app\n\n# Install MySQL and Poetry\nRUN apt-get update -y && apt-get install --no-install-recommends -y build-essential libmariadb-dev-compat libmariadb-dev python-mysqldb git curl && rm -rf /var/lib/apt/lists/*;\nRUN pip install --no-cache-dir https://github.com/python-poetry/poetry/releases/download/1.2.0b2/poetry-1.2.0b2-py3-none-any.whl\n# RUN curl -sSL https://install.python-poetry.org | python -\n\n# Add Poetry path to PATH\nENV PATH=\"${PATH}:/root/.local/bin\"\n\n# Install project dependencies with Poetry\nCOPY pyproject.toml .\nRUN poetry config virtualenvs.create false\nRUN poetry install --no-interaction --no-ansi --only main --all-extras\n\n# Place where the app lives in the container\nWORKDIR /app\nCOPY . /app\n\n# During debugging, this entry point will be overridden.\nCMD [\"python\", \"/app/chiya/bot.py\"]\n"
}