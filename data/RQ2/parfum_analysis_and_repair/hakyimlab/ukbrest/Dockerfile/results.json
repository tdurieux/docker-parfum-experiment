{
  "startTime": 1674250722450,
  "endTime": 1674250723066,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 5,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM continuumio/miniconda3\nMAINTAINER Milton Pividori <miltondp@gmail.com>\n\n# Setup conda environment\nCOPY environment.yml /opt/\nRUN conda env update -n root -f /opt/environment.yml \\\n  && conda clean --all\n\n# Docker repository for PostgreSQL, install client programs\n# IMPORTANT: although it is automated with lsb_release, debian version should match with continuumio/miniconda3\nRUN DEBIAN_FRONTEND=noninteractive \\\n  apt-get update && apt-get install -y --no-install-recommends gnupg lsb-release \\\n  && wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n  && echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -c -s)-pgdg main\" >> /etc/apt/sources.list.d/pgdg.list \\\n  && apt-get update && apt-get install -y --no-install-recommends \\\n      postgresql-client-11 \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Compile and install bgenix\nRUN export DEBIAN_FRONTEND=noninteractive \\\n  && apt-get update && apt-get install -y --no-install-recommends \\\n    build-essential zlib1g-dev libbz2-dev mercurial \\\n  && cd /tmp \\\n  && wget https://code.enkre.net/bgen/tarball/release/bgen.tgz \\\n  && tar -xf bgen.tgz \\\n  && cd bgen.tgz \\\n  && export PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\" \\\n  && ./waf configure --prefix=/usr/local \\\n  && ./waf \\\n  && ./build/test/unit/test_bgen \\\n  && ./waf install \\\n  && apt-get remove -y build-essential zlib1g-dev libbz2-dev mercurial \\\n  && apt-get autoremove -y \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/* && rm bgen.tgz\n\n# Genotype and phenotype default directories\nENV UKBREST_GENOTYPE_PATH=\"/var/lib/genotype\"\nENV UKBREST_PHENOTYPE_PATH=\"/var/lib/phenotype\"\n\n# Copy ukbrest code\nCOPY ukbrest /opt/ukbrest\nENV PYTHONPATH=\"/opt\"\nCOPY utils /opt/utils\n\n# Copy data codings\nENV UKBREST_CODINGS_PATH=\"/var/lib/codings\"\nCOPY misc/codings /var/lib/codings\n\n# Other environmental variables\nENV UKBREST_WITHDRAWALS_PATH=\"/var/lib/withdrawals\"\n\nWORKDIR /opt\n\nCOPY docker/start.py /opt/\n\n# Gunicorn default settings\nENV GUNICORN_NUM_WORKERS=\"4\"\nENV GUNICORN_BIND_ADDRESS=\"0.0.0.0:5000\"\nENV GUNICORN_TIMEOUT=\"10000\"\nENV GUNICORN_WORKER_CLASS=\"eventlet\"\nENV GUNICORN_LOG_FILE=\"-\"\nENV GUNICORN_EXTRA_ARGS=\"\"\n\nENV GUNICORN_CMD_ARGS=\"--log-file=${GUNICORN_LOG_FILE} -k ${GUNICORN_WORKER_CLASS} -w ${GUNICORN_NUM_WORKERS} --timeout ${GUNICORN_TIMEOUT} -b ${GUNICORN_BIND_ADDRESS} ${GUNICORN_EXTRA_ARGS}\"\n\nEXPOSE 5000\n\nENTRYPOINT [\"/opt/start.py\"]\nCMD [\"\"]\n"
}