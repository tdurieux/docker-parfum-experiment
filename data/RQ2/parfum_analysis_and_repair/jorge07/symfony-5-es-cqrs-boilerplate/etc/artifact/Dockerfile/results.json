{
  "startTime": 1674219995098,
  "endTime": 1674219997138,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 89
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION=8.0.13\n\n\nFROM jorge07/alpine-php:${PHP_VERSION} as php-base\n# List your dependencies here\nARG PHP_MODULES=\"php8-pdo php8-pdo_mysql php8-pecl-amqp php8-tokenizer\"\nRUN echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n    && apk add -U --no-cache ${PHP_MODULES}\n\nFROM jorge07/alpine-php:${PHP_VERSION}-dev as php-dev\n# Install your project DEVELOPMENT dependencies here\nARG PHP_MODULES=\"php8-pdo php8-pdo_mysql php8-pecl-amqp php8-tokenizer php8-posix php8-simplexml php8-xmlwriter\"\nRUN echo \"http://dl-4.alpinelinux.org/alpine/edge/community\" >> /etc/apk/repositories \\\n    && apk add -U --no-cache ${PHP_MODULES}\n\nENV PHP_INI_DIR /etc/php8\n\nRUN apk add --no-cache -U sqlite \\\n\t&& version=$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") \\\n    && curl -f -A \"Docker\" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/alpine/amd64/$version \\\n    && mkdir -p /tmp/blackfire \\\n    && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire-*.so $(php -r \"echo ini_get ('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > $PHP_INI_DIR/conf.d/blackfire.ini \\\n    && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz \\\n    && mkdir -p /tmp/blackfire \\\n    && curl -f -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux_static/amd64 | tar zxp -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n    && rm -Rf /tmp/blackfire\n\nFROM php-dev as builder\n\nWORKDIR /app\n\nENV APP_ENV prod\nENV APP_SECRET default-secret\n\nCOPY composer.json /app\nCOPY composer.lock /app\nCOPY symfony.lock /app\n\nRUN composer install --no-ansi --no-scripts --no-dev --no-interaction --no-progress --optimize-autoloader\n\nCOPY bin /app/bin\nCOPY config /app/config\nCOPY src /app/src\nCOPY public /app/public\n\nRUN composer run-script post-install-cmd\n\nFROM php-base as php\n\nENV APP_ENV prod\n\nWORKDIR /app\n\nCOPY --from=builder /app /app\n\nFROM nginx:1.17-alpine as nginx\n\nENV APP_ENV prod\n\nWORKDIR /app\n\nCOPY etc/artifact/nginx/nginx.conf /etc/nginx/conf.d/default.conf\n\nCOPY --from=builder /app/public /app/public\n"
}