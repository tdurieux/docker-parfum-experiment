{
  "startTime": 1674251063019,
  "endTime": 1674251064028,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\nMAINTAINER Dan Liew <daniel.liew@imperial.ac.uk>\n\nENV CONTAINER_USER=ase \\\n    BINARY_DIR=src/SymbooglixDriver/bin/Release \\\n    BOOGIE_RUNNER_REVISION=9be74e6e12bac25befa0f4fb13ced040754b702a\n\n# Get Mono 3.12.1 . Perhaps we should build it ourselves\n# because we had to patch it to avoid crashes when calling\n# System.Environment.Exit()\n#\n# See https://github.com/mono/mono/pull/1649\n# FIXME: This is overkill, we don't need everything from mono\nRUN apt-get update && apt-get -y --no-install-recommends install wget && \\\n    wget -O - https://download.mono-project.com/repo/xamarin.gpg | apt-key add - && \\\n    echo \"deb http://download.mono-project.com/repo/debian wheezy/snapshots/3.12.0 main\" > /etc/apt/sources.list.d/mono-xamarin.list && \\\n    apt-key adv --recv-keys --keyserver keyserver.ubuntu.com C504E590 && \\\n    echo 'deb http://ppa.launchpad.net/delcypher/boogaloo-smt/ubuntu trusty main' > /etc/apt/sources.list.d/smt.list && \\\n    apt-get update && \\\n    apt-get -y install --no-install-recommends mono-devel z3=4.3.1-0~trusty1 && rm -rf /var/lib/apt/lists/*;\n\n# Create user for container with password set to the user name\n# Give it sudo access so it possible to install new packages inside the container.\n# NEVER EVER EVER EVER USE THIS CONTAINER IN PRODUCTION DUE HOW EASY IT IS\n# TO GET ROOT PRIVILIDGES WITH THE ${CONTAINER_USER} USER!\nRUN useradd -m ${CONTAINER_USER} && \\\n    echo ${CONTAINER_USER}:${CONTAINER_USER} | chpasswd && \\\n    echo \"${CONTAINER_USER}  ALL=(root) ALL\" >> /etc/sudoers\n\nWORKDIR /home/${CONTAINER_USER}/\n\n# Setup Python\n# Note python3-dev installs gcc. We need that so pyyaml gets built properly\n# but remove gcc (and other bits) afterwards to save space\nRUN apt-get -y --no-install-recommends install python3 python3-pip libyaml-dev git && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3 10 && \\\n    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10 && \\\n    apt-get -y --no-install-recommends install python3-dev && \\\n    pip install --no-cache-dir psutil pyyaml && \\\n    apt-get remove -y python3-dev && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\n\n# Copy across the Release Binaries\nRUN mkdir /home/${CONTAINER_USER}/symbooglix/\nADD ${BINARY_DIR}/*.dll /home/${CONTAINER_USER}/symbooglix/\nADD ${BINARY_DIR}/*.exe /home/${CONTAINER_USER}/symbooglix/\nRUN ln -s /usr/bin/z3 /home/${CONTAINER_USER}/symbooglix/z3.exe\n\n# FIX the ownership of the binaries\nRUN chown -R ${CONTAINER_USER}: /home/${CONTAINER_USER}/symbooglix\n\n# Copy across boogie-runner configs\nADD symbooglix-svcomp.yml symbooglix-gpu.yml /home/${CONTAINER_USER}/\nRUN chown ${CONTAINER_USER}: *.yml\n\nUSER ${CONTAINER_USER}\n\n# Put sbx.exe in the user's PATH\nRUN echo 'export PATH=$PATH:/home/${CONTAINER_USER}/symbooglix' >> \\\n    /home/${CONTAINER_USER}/.bashrc\n\n# Install boogie-runner\nRUN git clone https://github.com/symbooglix/boogie-runner.git && \\\n    cd boogie-runner && \\\n    git checkout ${BOOGIE_RUNNER_REVISION} && \\\n    echo 'PATH=/home/${CONTAINER_USER}/boogie-runner:$PATH' >> \\\n         /home/${CONTAINER_USER}/.bashrc\n"
}