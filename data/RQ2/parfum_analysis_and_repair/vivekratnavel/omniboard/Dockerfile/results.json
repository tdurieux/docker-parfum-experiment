{
  "startTime": 1674219637543,
  "endTime": 1674219638172,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 33,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 31,
        "columnEnd": 47
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 61,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "# build environment\nFROM node:12.13.0 as builder\n\nRUN mkdir -p /usr/omniboard\nWORKDIR /usr/omniboard\nENV PATH=/usr/omniboard/node_modules/.bin:$PATH GENERATE_SOURCEMAP=false\n\n# install yarn\nRUN npm install -g yarn && npm cache clean --force;\n\nCOPY . /usr/omniboard\n\nRUN yarn run prepublishOnly && yarn cache clean;\n\nEXPOSE 9000\n\nFROM node:12-alpine\n\nWORKDIR /usr/omniboard\nRUN apk add --no-cache tini\n\n# Having \"--\" at the end will enable passing command line args to npm script\nENTRYPOINT [\"/sbin/tini\", \"--\", \"yarn\", \"run\", \"prod\"]\n\nENV PATH /usr/omniboard/node_modules/.bin:$PATH\n\nCOPY --from=builder /usr/omniboard/package.json /usr/omniboard/package.json\nCOPY --from=builder /usr/omniboard/dist /usr/omniboard/dist\nCOPY --from=builder /usr/omniboard/web/build /usr/omniboard/web/build\nRUN yarn install --production && yarn cache clean --force && yarn cache clean;\n"
}