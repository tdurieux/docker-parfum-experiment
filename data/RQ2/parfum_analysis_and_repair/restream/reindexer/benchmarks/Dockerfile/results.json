{
  "startTime": 1674253356497,
  "endTime": 1674253358134,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 148,
        "lineEnd": 148,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 135,
        "lineEnd": 135,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 142,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 150,
        "lineEnd": 150,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:16.04\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential g++ make cmake curl git psmisc libgoogle-perftools-dev libsnappy-dev libleveldb-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install golang and go tools\nRUN curl -f -L https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz | tar xzv -C /usr/local\nENV GOROOT=/usr/local/go\nENV GOPATH=/go\nENV PATH=$PATH:$GOROOT/bin:$GOPATH/bin\n\n# Install Google Test framework\nRUN git clone https://github.com/google/googletest.git && \\\n    cd googletest && cmake -DBUILD_GMOCK=OFF -DBUILD_GTEST=ON . && \\\n    make -j4 && make install && \\\n    cd .. && rm -rf googletest\n\n# Install Google Benchmark framework\nRUN git clone https://github.com/google/benchmark.git && \\\n    cd benchmark && cmake -DBENCHMARK_ENABLE_TESTING=OFF cmake -DCMAKE_BUILD_TYPE=Release -DBENCHMARK_ENABLE_LTO=true . && \\\n    make -j4 && make install && \\\n    cd .. && rm -rf benchmark\n\nRUN go get github.com/onsi/ginkgo/ginkgo && \\\n    go get github.com/onsi/gomega && \\\n    go get github.com/cheggaaa/deepcopy\n\nENV LANG=en_US.UTF-8\nRUN go get github.com/buaazp/fasthttprouter && \\\n    go get github.com/valyala/fasthttp\n\nRUN git clone https://github.com/wg/wrk.git && cd wrk && \\\n    make -j8 && cp wrk /usr/bin && \\\n    cd .. && rm -rf wrk\n\n# Install Benchmark's golang dependencies\n#########################################\nRUN go get -insecure github.com/restream/reindexer && \\\n    go get github.com/tarantool/go-tarantool && \\\n    go get github.com/yunge/sphinx && \\\n    go get gopkg.in/mgo.v2 && \\\n    go get gopkg.in/olivere/elastic.v5 && \\\n    go get github.com/go-redis/redis && \\\n    go get github.com/go-sql-driver/mysql && \\\n    go get github.com/jmoiron/sqlx && \\\n    go get github.com/mailru/easyjson/...\nRUN go get github.com/boltdb/bolt && \\\n    go get github.com/kshvakov/clickhouse && \\\n    go get -tags fts5 github.com/mattn/go-sqlite3 && \\\n    go get github.com/labstack/echo\n\n# Build Reindexer\nRUN make -C /go/src/github.com/restream/reindexer/cpp_src -j8 EXTRA_CFLAGS=-DNDEBUG\n\n# Install elastic search\n########################\nRUN curl -f https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - && \\\n    apt-get -y --no-install-recommends install apt-transport-https && \\\n    echo \"deb https://artifacts.elastic.co/packages/6.x/apt stable main\" | tee -a /etc/apt/sources.list.d/elastic-6.x.list && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install elasticsearch openjdk-8-jre-headless && rm -rf /var/lib/apt/lists/*;\n\n# Install Redis\n###############\nRUN apt-get install --no-install-recommends -y redis-server && rm -rf /var/lib/apt/lists/*;\n\n# Install MongoDB\n#################\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5 && \\\n    echo \"deb https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-3.6.list && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y mongodb-org-server && rm -rf /var/lib/apt/lists/*;\n\n# Install MySQL\n###############\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install mysql-server && rm -rf /var/lib/apt/lists/*;\n\n# Install Tarantool\n###################\nRUN curl -f https://download.tarantool.org/tarantool/1.7/gpgkey | apt-key add - && \\\n    echo \"deb http://download.tarantool.org/tarantool/1.7/ubuntu/ xenial main\" > /etc/apt/sources.list.d/tarantool_1_7.list && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install tarantool && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"space = box.space.items\" >>/etc/tarantool/instances.enabled/example.lua && \\\n    echo \"if not space then\">>/etc/tarantool/instances.enabled/example.lua && \\\n    echo \"  space = box.schema.create_space('items')\">>/etc/tarantool/instances.enabled/example.lua && \\\n    echo \"  space:create_index('primary', { type = 'hash', parts = {1, 'int'} })\">>/etc/tarantool/instances.enabled/example.lua && \\\n    echo \"  space:create_index('name', { type = 'tree', unique = false, parts = {2, 'string'} })\">>/etc/tarantool/instances.enabled/example.lua && \\\n    echo \"  space:create_index('year', { type = 'tree', unique = false, parts = {3, 'int'} })\">>/etc/tarantool/instances.enabled/example.lua && \\\n    echo \"  space:create_index('name_year', { type = 'tree', unique = false, parts = {{2, 'string'},{3,'int'}} })\">>/etc/tarantool/instances.enabled/example.lua && \\\n    echo \"  space:create_index('description', { type = 'tree', unique = false, parts = {4, 'string'}} )\">>/etc/tarantool/instances.enabled/example.lua && \\\n    echo \"end\">>/etc/tarantool/instances.enabled/example.lua\n\n# Install Sphinx search\n#######################\nRUN apt-get -y --no-install-recommends install sphinxsearch && rm -rf /var/lib/apt/lists/*;\nRUN echo \"source src1\" >/etc/sphinxsearch/sphinx.conf && \\\n    echo \"{\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  type          = mysql\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  sql_host      = localhost\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  sql_user      = root\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  sql_pass      =\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  sql_db        = test\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  sql_port      = 3306\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  sql_query     = SELECT id, description FROM items\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"}\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"index test1\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"{\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  source            = src1\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  path              = /var/lib/sphinxsearch/data/test1\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  docinfo           = extern\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  min_infix_len = 2\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  morphology = libstemmer_en,libstemmer_ru\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"}\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"searchd\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"{\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  listen            = localhost\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  read_timeout      = 5\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  max_children      = 30\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  pid_file          = /var/run/sphinxsearch/searchd.pid\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  seamless_rotate   = 1\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  preopen_indexes   = 1\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  unlink_old        = 1\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  binlog_path       = /var/lib/sphinxsearch/\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"  persistent_connections_limit = 20\" >>/etc/sphinxsearch/sphinx.conf && \\\n    echo \"}\" >>/etc/sphinxsearch/sphinx.conf\n\n# Install Clickhouse\n####################\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv E0C56BD4 && \\\n    echo \"deb http://repo.yandex.ru/clickhouse/trusty stable main\" > /etc/apt/sources.list.d/clickhouse.list && \\\n    echo '#!/bin/sh' >/bin/systemctl && \\\n    chmod +x /bin/systemctl && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install clickhouse-client clickhouse-server-common && rm -rf /var/lib/apt/lists/*;\nRUN sed -i_ \"s/<listen_host>::1<\\/listen_host>//\" /etc/clickhouse-server/config.xml\n\n# Install arangoDB\nRUN curl -f -L https://download.arangodb.com/arangodb33/xUbuntu_16.04/Release.key | apt-key add - && \\\n    echo 'deb https://download.arangodb.com/arangodb33/xUbuntu_16.04/ /' | tee /etc/apt/sources.list.d/arangodb.list && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y arangodb3=3.3.3 && rm -rf /var/lib/apt/lists/*;\n\nRUN go get github.com/arangodb/go-driver\n\n# Install rethink DB\nRUN echo \"deb http://download.rethinkdb.com/apt xenial main\" | tee /etc/apt/sources.list.d/rethinkdb.list && \\\n    curl -f -L https://download.rethinkdb.com/apt/pubkey.gpg | apt-key add - && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install rethinkdb && rm -rf /var/lib/apt/lists/*;\n\nRUN cp /etc/rethinkdb/default.conf.sample /etc/rethinkdb/instances.d/instance1.conf\nRUN go get gopkg.in/gorethink/gorethink.v4\n\n# Create entrypoint\n###################\nRUN echo \"#!/bin/sh\" >/entrypoint.sh&& \\\n    echo \"/etc/init.d/elasticsearch start\" >>/entrypoint.sh && \\\n    echo \"/etc/init.d/redis-server start\" >>/entrypoint.sh && \\\n    echo \"/etc/init.d/mysql start\" >>/entrypoint.sh && \\\n    echo \"echo 'create database test CHARACTER SET utf8 ' | mysql -h127.0.0.1 -P3306 -uroot\" >>/entrypoint.sh && \\\n    echo \"mongod --config /etc/mongod.conf --fork\" >>/entrypoint.sh && \\\n    echo \"/etc/init.d/tarantool start\" >>/entrypoint.sh && \\\n    echo \"/etc/init.d/clickhouse-server start\" >>/entrypoint.sh && \\\n    echo \"/etc/init.d/rethinkdb start\" >>/entrypoint.sh && \\\n    echo \"/etc/init.d/arangodb3 start &\" >>/entrypoint.sh && \\\n    echo \"exec \\\"\\$@\\\"\" >>/entrypoint.sh && \\\n    chmod +x /entrypoint.sh\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nCMD [\"bash\"]\n\n"
}