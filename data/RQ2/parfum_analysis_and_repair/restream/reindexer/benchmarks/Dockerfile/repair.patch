diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/restream/reindexer/benchmarks/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/restream/reindexer/benchmarks/Dockerfile/repaired.Dockerfile
index 11062f5..e823860 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/restream/reindexer/benchmarks/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/restream/reindexer/benchmarks/Dockerfile/repaired.Dockerfile
@@ -1,10 +1,10 @@
 FROM ubuntu:16.04
 
 RUN apt-get update && \
-    apt-get install -y build-essential g++ make cmake curl git psmisc libgoogle-perftools-dev libsnappy-dev libleveldb-dev
+    apt-get install --no-install-recommends -y build-essential g++ make cmake curl git psmisc libgoogle-perftools-dev libsnappy-dev libleveldb-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install golang and go tools
-RUN curl -L https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz | tar xzv -C /usr/local
+RUN curl -f -L https://storage.googleapis.com/golang/go1.9.2.linux-amd64.tar.gz | tar xzv -C /usr/local
 ENV GOROOT=/usr/local/go
 ENV GOPATH=/go
 ENV PATH=$PATH:$GOROOT/bin:$GOPATH/bin
@@ -54,33 +54,33 @@ RUN make -C /go/src/github.com/restream/reindexer/cpp_src -j8 EXTRA_CFLAGS=-DNDE
 
 # Install elastic search
 ########################
-RUN curl  https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - && \
-    apt-get -y install apt-transport-https && \
+RUN curl -f https://artifacts.elastic.co/GPG-KEY-elasticsearch | apt-key add - && \
+    apt-get -y --no-install-recommends install apt-transport-https && \
     echo "deb https://artifacts.elastic.co/packages/6.x/apt stable main" | tee -a /etc/apt/sources.list.d/elastic-6.x.list && \
     apt-get -y update && \
-    apt-get -y install elasticsearch openjdk-8-jre-headless
+    apt-get -y --no-install-recommends install elasticsearch openjdk-8-jre-headless && rm -rf /var/lib/apt/lists/*;
 
 # Install Redis
 ###############
-RUN apt-get install -y redis-server
+RUN apt-get install --no-install-recommends -y redis-server && rm -rf /var/lib/apt/lists/*;
 
 # Install MongoDB
 #################
 RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5 && \
     echo "deb https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse" | tee /etc/apt/sources.list.d/mongodb-org-3.6.list && \
     apt-get -y update && \
-    apt-get install -y mongodb-org-server
+    apt-get install --no-install-recommends -y mongodb-org-server && rm -rf /var/lib/apt/lists/*;
 
 # Install MySQL
 ###############
-RUN DEBIAN_FRONTEND=noninteractive apt-get -y install mysql-server
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install mysql-server && rm -rf /var/lib/apt/lists/*;
 
 # Install Tarantool
 ###################
-RUN curl http://download.tarantool.org/tarantool/1.7/gpgkey | apt-key add - && \
+RUN curl -f https://download.tarantool.org/tarantool/1.7/gpgkey | apt-key add - && \
     echo "deb http://download.tarantool.org/tarantool/1.7/ubuntu/ xenial main" > /etc/apt/sources.list.d/tarantool_1_7.list && \
     apt-get update && \
-    apt-get -y install tarantool 
+    apt-get -y --no-install-recommends install tarantool && rm -rf /var/lib/apt/lists/*;
 
 RUN echo "space = box.space.items" >>/etc/tarantool/instances.enabled/example.lua && \
     echo "if not space then">>/etc/tarantool/instances.enabled/example.lua && \
@@ -90,11 +90,11 @@ RUN echo "space = box.space.items" >>/etc/tarantool/instances.enabled/example.lu
     echo "  space:create_index('year', { type = 'tree', unique = false, parts = {3, 'int'} })">>/etc/tarantool/instances.enabled/example.lua && \
     echo "  space:create_index('name_year', { type = 'tree', unique = false, parts = {{2, 'string'},{3,'int'}} })">>/etc/tarantool/instances.enabled/example.lua && \
     echo "  space:create_index('description', { type = 'tree', unique = false, parts = {4, 'string'}} )">>/etc/tarantool/instances.enabled/example.lua && \
-    echo "end">>/etc/tarantool/instances.enabled/example.lua 
+    echo "end">>/etc/tarantool/instances.enabled/example.lua
 
 # Install Sphinx search
 #######################
-RUN apt-get -y install sphinxsearch
+RUN apt-get -y --no-install-recommends install sphinxsearch && rm -rf /var/lib/apt/lists/*;
 RUN echo "source src1" >/etc/sphinxsearch/sphinx.conf && \
     echo "{" >>/etc/sphinxsearch/sphinx.conf && \
     echo "  type          = mysql" >>/etc/sphinxsearch/sphinx.conf && \
@@ -124,7 +124,7 @@ RUN echo "source src1" >/etc/sphinxsearch/sphinx.conf && \
     echo "  unlink_old        = 1" >>/etc/sphinxsearch/sphinx.conf && \
     echo "  binlog_path       = /var/lib/sphinxsearch/" >>/etc/sphinxsearch/sphinx.conf && \
     echo "  persistent_connections_limit = 20" >>/etc/sphinxsearch/sphinx.conf && \
-    echo "}" >>/etc/sphinxsearch/sphinx.conf 
+    echo "}" >>/etc/sphinxsearch/sphinx.conf
 
 # Install Clickhouse
 ####################
@@ -133,22 +133,22 @@ RUN apt-key adv --keyserver keyserver.ubuntu.com --recv E0C56BD4 && \
     echo '#!/bin/sh' >/bin/systemctl && \
     chmod +x /bin/systemctl && \
     apt-get update && \
-    apt-get -y install clickhouse-client clickhouse-server-common
+    apt-get -y --no-install-recommends install clickhouse-client clickhouse-server-common && rm -rf /var/lib/apt/lists/*;
 RUN sed -i_ "s/<listen_host>::1<\/listen_host>//" /etc/clickhouse-server/config.xml
 
-# Install arangoDB 
-RUN curl -L https://download.arangodb.com/arangodb33/xUbuntu_16.04/Release.key | apt-key add - && \
+# Install arangoDB
+RUN curl -f -L https://download.arangodb.com/arangodb33/xUbuntu_16.04/Release.key | apt-key add - && \
     echo 'deb https://download.arangodb.com/arangodb33/xUbuntu_16.04/ /' | tee /etc/apt/sources.list.d/arangodb.list && \
     apt-get update && \
-    DEBIAN_FRONTEND=noninteractive apt-get install -y arangodb3=3.3.3
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y arangodb3=3.3.3 && rm -rf /var/lib/apt/lists/*;
 
 RUN go get github.com/arangodb/go-driver
 
 # Install rethink DB
 RUN echo "deb http://download.rethinkdb.com/apt xenial main" | tee /etc/apt/sources.list.d/rethinkdb.list && \
-    curl -L https://download.rethinkdb.com/apt/pubkey.gpg | apt-key add - && \
+    curl -f -L https://download.rethinkdb.com/apt/pubkey.gpg | apt-key add - && \
     apt-get -y update && \
-    apt-get -y install rethinkdb
+    apt-get -y --no-install-recommends install rethinkdb && rm -rf /var/lib/apt/lists/*;
 
 RUN cp /etc/rethinkdb/default.conf.sample /etc/rethinkdb/instances.d/instance1.conf
 RUN go get gopkg.in/gorethink/gorethink.v4
@@ -166,7 +166,7 @@ RUN echo "#!/bin/sh" >/entrypoint.sh&& \
     echo "/etc/init.d/rethinkdb start" >>/entrypoint.sh && \
     echo "/etc/init.d/arangodb3 start &" >>/entrypoint.sh && \
     echo "exec \"\$@\"" >>/entrypoint.sh && \
-    chmod +x /entrypoint.sh 
+    chmod +x /entrypoint.sh
 
 ENTRYPOINT ["/entrypoint.sh"]