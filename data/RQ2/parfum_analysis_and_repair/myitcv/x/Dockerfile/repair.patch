diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/myitcv/x/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/myitcv/x/Dockerfile/repaired.Dockerfile
index 514cd6a..04f69ac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/myitcv/x/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/myitcv/x/Dockerfile/repaired.Dockerfile
@@ -1,15 +1,15 @@
 FROM ubuntu:18.04
 
 RUN apt-get -qq update
-RUN apt-get -qq -y install sudo apt-utils git curl jq unzip gnupg2 python python-pip lsb-release
+RUN apt-get -qq --no-install-recommends -y install sudo apt-utils git curl jq unzip gnupg2 python python-pip lsb-release && rm -rf /var/lib/apt/lists/*;
 
-RUN mkdir /gobootstrap && export go_bootstrap="$(curl -s https://golang.org/dl/?mode=json | jq -r '.[0] .version')" && \
-  curl -sL https://dl.google.com/go/$go_bootstrap.linux-amd64.tar.gz | tar --strip-components=1 -C /gobootstrap -zx
+RUN mkdir /gobootstrap && export go_bootstrap="$( curl -f -s https://golang.org/dl/?mode=json | jq -r '.[0] .version')" && \
+  curl -f -sL https://dl.google.com/go/$go_bootstrap.linux-amd64.tar.gz | tar --strip-components=1 -C /gobootstrap -zx
 
 ENV PATH=/go/bin:$PATH
 
 # Install awscli
-RUN pip install awscli
+RUN pip install --no-cache-dir awscli
 
 # Install Node
 ENV NODE_VERSION=v10.15.0
@@ -22,15 +22,15 @@ RUN git config --global advice.detachedHead false
 RUN git clone -q --branch $NVM_VERSION https://github.com/creationix/nvm.git $NVM_DIR \
   && . $NVM_DIR/nvm.sh \
   && nvm install $NODE_VERSION > /dev/null \
-  && npm install -g npm@$NPM_VERSION
+  && npm install -g npm@$NPM_VERSION && npm cache clean --force;
 
 # Install Docker
 RUN apt-get update
-RUN apt-get install -y apt-transport-https ca-certificates curl gnupg2 software-properties-common
+RUN apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl gnupg2 software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
 RUN add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
 RUN apt-get update
-RUN apt-get install -y docker-ce
+RUN apt-get install --no-install-recommends -y docker-ce && rm -rf /var/lib/apt/lists/*;
 
 # Install vbash
 ARG VBASHPATH
@@ -42,23 +42,23 @@ COPY $GOBINPATH /usr/bin/
 ARG PROTOBUF_VERSION
 RUN mkdir /protobuf \
   && cd /protobuf \
-  && curl -sL -o protobuf.zip https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip \
+  && curl -f -sL -o protobuf.zip https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protoc-${PROTOBUF_VERSION}-linux-x86_64.zip \
   && unzip -q protobuf.zip
 
 ENV PROTOBUF_INCLUDE=/protobuf/include
 
 # Install Go
 ARG GO_VERSION
-RUN curl -sL https://dl.google.com/go/${GO_VERSION}.linux-amd64.tar.gz | tar -C / -zx
+RUN curl -f -sL https://dl.google.com/go/${GO_VERSION}.linux-amd64.tar.gz | tar -C / -zx
 ENV PATH=/go/bin:$PATH
 
 # Install Chrome
 ARG CHROME_VERSION
 ARG CHROME_CHANNEL
 RUN echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list && \
-  curl -sL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
+  curl -f -sL https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
   apt -qq -y update && \
-  apt-get -qq -y install google-chrome-${CHROME_CHANNEL}
+  apt-get -qq --no-install-recommends -y install google-chrome-${CHROME_CHANNEL} && rm -rf /var/lib/apt/lists/*;
 
 # Install chromedriver
 ARG CHROMEDRIVER_77_VERSION