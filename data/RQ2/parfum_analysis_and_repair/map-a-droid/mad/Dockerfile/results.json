{
  "startTime": 1674250479335,
  "endTime": 1674250480066,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################\n# MAD\n############################\nFROM python:3.7-slim AS mad-core\n# Working directory for the application\nWORKDIR /usr/src/app\n\n\n# copy requirements only, to reduce image size and improve cache usage\nCOPY requirements.txt /usr/src/app/\n\n# Install required system packages + python requirements + cleanup in one layer (yields smaller docker image).\n# If you try to debug the build you should split into single RUN commands\nRUN export DEBIAN_FRONTEND=noninteractive && apt-get update \\\n&& apt-get install -y --no-install-recommends \\\nbuild-essential \\\ndefault-libmysqlclient-dev \\\n# OpenCV & dependencies\npython3-opencv \\\nlibsm6 \\\n# python reqs\n&& python3 -m pip install --no-cache-dir -r requirements.txt ortools redis \\\n# cleanup\n&& apt-get remove -y build-essential \\\n&& apt-get remove -y python2.7 && rm -rf /usr/lib/python2.7 \\\n&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n&& rm -rf /var/lib/apt/lists/*\n\n# tesseract\nRUN apt-get update && apt-get -y --no-install-recommends install tesseract-ocr && rm -rf /var/lib/apt/lists/*;\n\n# Copy everything to the working directory (Python files, templates, config) in one go.\nCOPY . /usr/src/app/\n\n# Set Entrypoint with hard-coded options\nENTRYPOINT [\"python3\",\"start.py\"]\n\n# Default ports for PogoDroid, RGC and MAdmin\nEXPOSE 8080 8000 5000\n"
}