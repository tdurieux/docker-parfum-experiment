{
  "startTime": 1674249267260,
  "endTime": 1674249268361,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 0,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 6,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 20,
        "columnStart": 0,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Development env\nFROM local_mad_production:latest AS dev_test\n# Versions of python to install for pyenv. These are used when tox executes specific\n# python versions. The correct versions need to be added to tox.ini under tox/envlist\n# 3.7 is the base image so it does not need to be included\nENV PYTHON_VERSIONS 3.8.0\n# User information related to how to run within the shell\nARG USER_NAME=dockeruser\nARG UID=1000\nARG GID=1000\nENTRYPOINT [\"bash\"]\n\n# Need to re-add some required dependencies for tox to compile the new envs\nRUN export DEBIAN_FRONTEND=noninteractive && apt-get update && \\\r\napt-get install -y --no-install-recommends \\\r\n# pyenv\r\nbuild-essential libssl-dev zlib1g-dev libbz2-dev \\\r\nlibreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev libncursesw5-dev \\\r\nxz-utils tk-dev libffi-dev liblzma-dev python3-openssl git \\\r\n# python build\r\nlibffi-dev libgdbm-dev libsqlite3-dev libssl-dev zlib1g-dev && \\\n# Install tox\r\npip install --no-cache-dir tox pip-tools && rm -rf /var/lib/apt/lists/*;\n\n# Create user\nRUN groupadd -g $GID $USER_NAME; useradd -l -r -m -u $UID -g $GID $USER_NAME\nENV USER $USER_NAME\n\n# Install pyenv\nENV HOME=/home/${USER}\nENV PYENV_ROOT $HOME/.pyenv\nENV PATH=\"$PYENV_ROOT/shims:$PYENV_ROOT/bin:$PATH\"\nWORKDIR ${HOME}\nUSER $USER_NAME\nRUN mkdir -p ${HOME}/.cache/pre-commit && \\\r\nchown -R ${USER_NAME} ${HOME}/.cache\n# Install py versions\nRUN curl -f -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash && \\\nfor version in $PYTHON_VERSIONS; do \\\n      pyenv install $version; \\\n      pyenv local $version; \\\n      pip install --no-cache-dir --upgrade setuptools pip; \\\n      pyenv local --unset; \\\n    done && \\\necho \"pyenv local $PYTHON_VERSIONS\" >> ~/.bashrc && \\\npyenv local $PYTHON_VERSIONS\nWORKDIR /usr/src/app\n"
}