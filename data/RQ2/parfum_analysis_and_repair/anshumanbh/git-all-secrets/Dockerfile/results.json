{
  "startTime": 1674219810332,
  "endTime": 1674219811123,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# git-all-secrets build container\nFROM golang:1.10.3-alpine3.7 AS build-env\n\nRUN apk add --no-cache --upgrade git openssh-client ca-certificates\nRUN go get -u github.com/golang/dep/cmd/dep\n\nWORKDIR /go/src/github.com/anshumanbh/git-all-secrets\nCOPY Gopkg.toml Gopkg.lock ./\nRUN dep ensure -vendor-only -v\nCOPY main.go ./\nRUN go build -v -o /go/bin/git-all-secrets\n\n# Final container\nFROM node:9.11.2-alpine\n\nCOPY --from=build-env /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=build-env /go/bin/git-all-secrets /usr/bin/git-all-secrets\nRUN apk add --no-cache --upgrade git python py-pip jq openssh-client\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n\n# Create a generic SSH config for Github\nWORKDIR /root/.ssh\nRUN echo \"Host *github.com \\\n\\n  IdentitiesOnly yes \\\n\\n  StrictHostKeyChecking no \\\n\\n  UserKnownHostsFile=/dev/null \\\n\\n  IdentityFile /root/.ssh/id_rsa \\\n\\n  \\\n\\n Host github.*.com \\\n\\n  IdentitiesOnly yes \\\n\\n  StrictHostKeyChecking no \\\n\\n  UserKnownHostsFile=/dev/null \\\n\\n  IdentityFile /root/.ssh/id_rsa\" > config\nRUN ssh-keyscan -H github.com >> /root/.ssh/known_hosts\nRUN git clone https://github.com/anshumanbh/repo-supervisor.git /root/repo-supervisor\n\n# Install truffleHog\nWORKDIR /root/truffleHog/\nRUN pip install --no-cache-dir truffleHog\nCOPY rules.json /root/truffleHog/\n\n# Install repo-supervisor\nWORKDIR /root/repo-supervisor\nCOPY runreposupervisor.sh ./\nRUN chmod +x runreposupervisor.sh\nRUN npm install --no-optional && \\\n    npm run build && \\\n    npm run cli ./src/ && npm cache clean --force;\n\nENV PATH=\"/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\nWORKDIR /root/\nENTRYPOINT [ \"git-all-secrets\" ]\n"
}