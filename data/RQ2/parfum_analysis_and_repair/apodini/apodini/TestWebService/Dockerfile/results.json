{
  "startTime": 1674246112182,
  "endTime": 1674246114702,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#                  \n# This source file is part of the Apodini open source project\n#\n# SPDX-FileCopyrightText: 2019-2021 Paul Schmiedmayer and the Apodini project authors (see CONTRIBUTORS.md) <paul.schmiedmayer@tum.de>\n#\n# SPDX-License-Identifier: MIT\n#\n\nARG baseimage=swift:focal\n\n# ================================\n# Build image\n# ================================\nFROM ${baseimage} as build\n\n# Install OS updates and, if needed, sqlite3\nRUN export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true \\\n    && apt-get -q update \\\n    && apt-get -q dist-upgrade -y \\\n    && apt-get install --no-install-recommends -y libsqlite3-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Set up a build area\nWORKDIR /build\n\n# Copy all source files\nCOPY . .\n\n# Build everything, with optimizations\nRUN swift build --package-path /build/TestWebService -c release\n\n# Switch to the staging area\nWORKDIR /staging\n\n# Copy main executable to staging area\nRUN cp \"$(swift build --package-path /build/TestWebService -c release --show-bin-path)/TestWebService\" ./\n\n# Copy resources from the resources directory if the directories exist\n# Ensure that by default, neither the directory nor any of its contents are writable.\nRUN [ -d \"$(swift build --package-path /build/TestWebService -c release --show-bin-path)/Apodini_ApodiniOpenAPI.resources\" ] \\\n    && mv \"$(swift build --package-path /build/TestWebService -c release --show-bin-path)/Apodini_ApodiniOpenAPI.resources\" ./ \\\n    && chmod -R a-w ./Apodini_ApodiniOpenAPI.resources \\\n    || echo No resources to copy\nRUN [ -d \"$(swift build --package-path /build/TestWebService -c release --show-bin-path)/TestWebService_TestWebService.resources\" ] \\\n    && mv \"$(swift build --package-path /build/TestWebService -c release --show-bin-path)/TestWebService_TestWebService.resources\" ./ \\\n    && chmod -R a-w ./TestWebService_TestWebService.resources \\\n    || echo No resources to copy\n\n# ================================\n# Run image\n# ================================\nFROM ${baseimage}-slim as run\n\n# Make sure all system packages are up to date.\nRUN export DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true \\\n    && apt-get -q update \\\n    && apt-get -q dist-upgrade -y \\\n    && rm -r /var/lib/apt/lists/*\n\n# Create a apodini user and group with /app as its home directory\nRUN useradd --user-group --create-home --system --skel /dev/null --home-dir /app apodini\n\n# Switch to the new home directory\nWORKDIR /app\n\n# Copy built executable and any staged resources from builder\nCOPY --from=build --chown=apodini:apodini /staging /app\n\n# Ensure all further commands run as the apodini user\nUSER apodini:apodini\n\n# Start the Apodini service when the image is run.\nENTRYPOINT [\"./TestWebService\"]\n"
}