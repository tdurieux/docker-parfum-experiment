diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/abhioncbr/docker-airflow/docker-files/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/abhioncbr/docker-airflow/docker-files/Dockerfile/repaired.Dockerfile
index 0f48be2..efe9bdb 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/abhioncbr/docker-airflow/docker-files/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/abhioncbr/docker-airflow/docker-files/Dockerfile/repaired.Dockerfile
@@ -19,33 +19,35 @@ ENV AIRFLOW_GPL_UNIDECODE yes
 #install dependencies packages.
 RUN set -x \
     && apt-get update \
-    && if [ -n "${APT_DEPS}" ]; then apt-get install -y $APT_DEPS; fi
+    && if [ -n "${APT_DEPS}" ]; then \
+    apt-get install --no-install-recommends -y $APT_DEPS; rm -rf /var/lib/apt/lists/*; fi
 
 #Install Redis
-RUN apt-get update && apt policy redis-server && apt-get install -y redis-server
+RUN apt-get update && apt policy redis-server && apt-get install --no-install-recommends -y redis-server && rm -rf /var/lib/apt/lists/*;
 
 #Install java for java based application.
-RUN apt-get update && apt policy openjdk-8-jdk && apt-get install -y openjdk-8-jdk
+RUN apt-get update && apt policy openjdk-8-jdk && apt-get install --no-install-recommends -y openjdk-8-jdk && rm -rf /var/lib/apt/lists/*;
 
 #for older versions[1.8.1, 1.8.2] of airflow, pip downgrading is required.
-RUN if [ ${AIRFLOW_VERSION} \< "1.8.3" ]; then pip install pip==9.0; \
+RUN if [ ${AIRFLOW_VERSION} \< "1.8.3" ]; then \
+ pip install --no-cache-dir pip==9.0; \
 else python -m pip install --upgrade pip setuptools wheel; fi
 
 #Install python dependencies.
 RUN if [ -n "${PYTHON_DEPS}" ]; then pip install --no-cache-dir ${PYTHON_DEPS}; fi
 
 #Install Airflow all packages
-RUN pip install apache-airflow[$AIRFLOW_DEPS]==$AIRFLOW_VERSION && apt-get clean
+RUN pip install --no-cache-dir apache-airflow[$AIRFLOW_DEPS]==$AIRFLOW_VERSION && apt-get clean
 
 #Install GCloud[GCP] packages.
-RUN curl https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz > /tmp/google-cloud-sdk.tar.gz
+RUN curl -f https://dl.google.com/dl/cloudsdk/release/google-cloud-sdk.tar.gz > /tmp/google-cloud-sdk.tar.gz
 RUN mkdir -p /usr/local/gcloud
-RUN tar -C /usr/local/gcloud -xvf /tmp/google-cloud-sdk.tar.gz
+RUN tar -C /usr/local/gcloud -xvf /tmp/google-cloud-sdk.tar.gz && rm /tmp/google-cloud-sdk.tar.gz
 RUN /usr/local/gcloud/google-cloud-sdk/install.sh
-RUN pip install --upgrade google-api-python-client && pip install google-cloud-storage
+RUN pip install --no-cache-dir --upgrade google-api-python-client && pip install --no-cache-dir google-cloud-storage
 
 #Install aws cli.
-RUN pip3 install awscli --upgrade --user
+RUN pip3 install --no-cache-dir awscli --upgrade --user
 
 #Adding 'airflow' as group & user.
 RUN groupadd -g 5555 airflow \