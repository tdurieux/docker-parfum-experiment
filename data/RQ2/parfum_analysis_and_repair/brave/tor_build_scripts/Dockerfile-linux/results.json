{
  "startTime": 1674253649155,
  "endTime": 1674253650340,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 49,
        "lineEnd": 54,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 114
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 2,
        "columnEnd": 109
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 114
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 2,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:jammy\n\nARG zlib_version\nARG zlib_hash\n\nARG libevent_version\nARG libevent_hash\n\nARG openssl_version\nARG openssl_hash\n\nARG tor_version\nARG tor_hash\n\nARG jobs\n\nCOPY gpg-keys/tor.gpg /tor.gpg\nCOPY gpg-keys/libevent.gpg /libevent.gpg\n\nRUN \\\n  apt-get update -qq && \\\n  apt-get install -y --no-install-recommends -qq build-essential curl ca-certificates autotools-dev automake gnupg && rm -rf /var/lib/apt/lists/*;\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://zlib.net/zlib-${zlib_version}.tar.gz\" -o \"zlib-$zlib_version.tar.gz\" && \\\n  echo \"$zlib_hash  zlib-$zlib_version.tar.gz\" | shasum -a 256 -c - && \\\n  tar -zxvf \"zlib-$zlib_version.tar.gz\" && \\\n  cd \"zlib-$zlib_version\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$PWD/root\" && \\\n  make ${jobs:+-j${jobs}} && make ${jobs:+-j$jobs} check && make install && rm \"zlib-$zlib_version.tar.gz\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://www.openssl.org/source/openssl-$openssl_version.tar.gz\" -o \"openssl-$openssl_version.tar.gz\" && \\\n  echo \"$openssl_hash  openssl-$openssl_version.tar.gz\" | shasum -a 256 -c - && \\\n  tar -xvzf \"openssl-$openssl_version.tar.gz\" && \\\n  cd \"openssl-$openssl_version\" && \\\n  ./config --prefix=\"$PWD/root\" no-shared no-dso && \\\n  make ${jobs:+-j$jobs} && make test && make install && rm \"openssl-$openssl_version.tar.gz\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://github.com/libevent/libevent/releases/download/release-$libevent_version/libevent-$libevent_version.tar.gz\" -o \"libevent-$libevent_version.tar.gz\" && \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://github.com/libevent/libevent/releases/download/release-$libevent_version/libevent-$libevent_version.tar.gz.asc\" -o \"libevent-$libevent_version.tar.gz.asc\" && \\\n  gpg --batch --keyring /libevent.gpg --verify \"libevent-$libevent_version.tar.gz.asc\" \"libevent-$libevent_version.tar.gz\" && \\\n  echo \"$libevent_hash  libevent-$libevent_version.tar.gz\" | shasum -a 256 -c - && \\\n  tar -zxvf \"libevent-$libevent_version.tar.gz\" && \\\n  cd \"libevent-$libevent_version\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n              --disable-openssl \\\n              --prefix=\"$PWD/install\" \\\n              --disable-shared \\\n              --enable-static \\\n              --with-pic && \\\n  ulimit -n 65536 && \\\n  make ${jobs:+-j$jobs} && make ${jobs:+-j$jobs} check && make install && rm \"libevent-$libevent_version.tar.gz.asc\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://dist.torproject.org/tor-$tor_version.tar.gz\" -o \"tor-$tor_version.tar.gz\" && \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://dist.torproject.org/tor-$tor_version.tar.gz.sha256sum.asc\" -o \"tor-$tor_version.tar.gz.sha256sum.asc\" && \\\n  echo \"$tor_hash  tor-$tor_version.tar.gz\" > \"tor-$tor_version.tar.gz.sha256sum\" && \\\n  gpg --batch --keyring /tor.gpg --verify \"tor-$tor_version.tar.gz.sha256sum.asc\" \"tor-$tor_version.tar.gz.sha256sum\" && \\\n  sha256sum -c \"tor-$tor_version.tar.gz.sha256sum\" && \\\n  tar -xvzf \"tor-$tor_version.tar.gz\" && \\\n  cd \"tor-$tor_version\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$PWD/install\" \\\n              --enable-static-tor \\\n              --with-libevent-dir=\"$PWD/../libevent-$libevent_version/install\" \\\n              --with-openssl-dir=\"$PWD/../openssl-$openssl_version/root\" \\\n              --with-zlib-dir=\"$PWD/../zlib-$zlib_version/root\" \\\n              --disable-asciidoc \\\n              --disable-html-manual \\\n              --disable-lzma \\\n              --disable-manpage \\\n              --disable-zstd && \\\n  make ${jobs:+-j$jobs} && make ${jobs:+-j$jobs} check && make install && rm \"tor-$tor_version.tar.gz.sha256sum.asc\"\n\nENTRYPOINT [\"sh\", \"-c\", \"while true; do sleep 2; done\"]\n"
}