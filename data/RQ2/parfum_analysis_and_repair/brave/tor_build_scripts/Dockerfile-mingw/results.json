{
  "startTime": 1674249960608,
  "endTime": 1674249963357,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 66,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 78,
        "lineEnd": 89,
        "columnStart": 2,
        "columnEnd": 28
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 2,
        "columnEnd": 114
      }
    },
    {
      "rule": "gpgVerifyAscRmAsc",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 109
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 2,
        "columnEnd": 45
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 2,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 2,
        "columnEnd": 37
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 2,
        "columnEnd": 114
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 2,
        "columnEnd": 109
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 19,
        "lineEnd": 24,
        "columnStart": 26,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 24,
        "columnStart": 26,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:jammy\n\nARG zlib_version\nARG zlib_hash\n\nARG libevent_version\nARG libevent_hash\n\nARG openssl_version\nARG openssl_hash\n\nARG tor_version\nARG tor_hash\n\nARG jobs\n\nCOPY gpg-keys/tor.gpg /tor.gpg\nCOPY gpg-keys/libevent.gpg /libevent.gpg\n\nRUN apt-get update -qq && apt-get install -y --no-install-recommends -qq \\\n  build-essential \\\n  curl \\\n  ca-certificates \\\n  gnupg \\\n  mingw-w64 \\\n  ; rm -rf /var/lib/apt/lists/*; # end of apt-get install\n\nENV PATH=\"/usr/i686-w64-mingw32/bin:$PATH\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://zlib.net/zlib-${zlib_version}.tar.gz\" -o \"zlib-$zlib_version.tar.gz\" && \\\n  echo \"$zlib_hash  zlib-$zlib_version.tar.gz\" | shasum -a 256 -c - && \\\n  tar -zxvf \"zlib-$zlib_version.tar.gz\" && \\\n  cd \"zlib-$zlib_version\" && \\\n  make ${jobs:+-j$jobs} -f win32/Makefile.gcc PREFIX=i686-w64-mingw32- && \\\n  make ${jobs:+-j$jobs} -f win32/Makefile.gcc PREFIX=i686-w64-mingw32- \\\n    BINARY_PATH=\"$PWD/install/bin\" \\\n    INCLUDE_PATH=\"$PWD/install/include\" \\\n    LIBRARY_PATH=\"$PWD/install/lib\" \\\n    install && rm \"zlib-$zlib_version.tar.gz\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://www.openssl.org/source/openssl-$openssl_version.tar.gz\" -o \"openssl-$openssl_version.tar.gz\" && \\\n  echo \"$openssl_hash  openssl-$openssl_version.tar.gz\" | shasum -a 256 -c - && \\\n  tar -xvzf \"openssl-$openssl_version.tar.gz\" && \\\n  cd \"openssl-$openssl_version\" && \\\n  ./Configure --prefix=\"$PWD/root\"  --cross-compile-prefix=i686-w64-mingw32- \\\n    mingw no-shared no-dso && \\\n  make ${jobs:+-j$jobs} && make ${jobs:+-j$jobs} install_sw && rm \"openssl-$openssl_version.tar.gz\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://github.com/libevent/libevent/releases/download/release-$libevent_version/libevent-$libevent_version.tar.gz\" -o \"libevent-$libevent_version.tar.gz\" && \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://github.com/libevent/libevent/releases/download/release-$libevent_version/libevent-$libevent_version.tar.gz.asc\" -o \"libevent-$libevent_version.tar.gz.asc\" && \\\n  gpg --batch --keyring /libevent.gpg --verify \"libevent-$libevent_version.tar.gz.asc\" \"libevent-$libevent_version.tar.gz\" && \\\n  echo \"$libevent_hash  libevent-$libevent_version.tar.gz\" | shasum -a 256 -c - && \\\n  tar -zxvf \"libevent-$libevent_version.tar.gz\" && \\\n  cd \"libevent-$libevent_version\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n              --disable-openssl \\\n              --prefix=\"$PWD/install\" \\\n              --disable-shared \\\n              --enable-static \\\n              --with-pic \\\n              --host=i686-w64-mingw32 && \\\n  make ${jobs:+-j$jobs} && make ${jobs:+-j$jobs} install && rm \"libevent-$libevent_version.tar.gz.asc\"\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://dist.torproject.org/tor-$tor_version.tar.gz\" -o \"tor-$tor_version.tar.gz\" && \\\n  curl --proto '=https' --tlsv1.3 -fsSL \"https://dist.torproject.org/tor-$tor_version.tar.gz.sha256sum.asc\" -o \"tor-$tor_version.tar.gz.sha256sum.asc\" && \\\n  echo \"$tor_hash  tor-$tor_version.tar.gz\" > \"tor-$tor_version.tar.gz.sha256sum\" && \\\n  gpg --batch --keyring /tor.gpg --verify \"tor-$tor_version.tar.gz.sha256sum.asc\" \"tor-$tor_version.tar.gz.sha256sum\" && \\\n  sha256sum -c \"tor-$tor_version.tar.gz.sha256sum\" && \\\n  tar -xvzf \"tor-$tor_version.tar.gz\" && \\\n  cd \"tor-$tor_version\" && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"$PWD/install\" \\\n              --enable-static-tor \\\n              --with-libevent-dir=\"$PWD/../libevent-$libevent_version/install\" \\\n              --with-openssl-dir=\"$PWD/../openssl-$openssl_version/root\" \\\n              --with-zlib-dir=\"$PWD/../zlib-$zlib_version/install\" \\\n              --disable-asciidoc \\\n              --disable-html-manual \\\n              --disable-lzma \\\n              --disable-manpage \\\n              --disable-zstd \\\n              --host=i686-w64-mingw32 \\\n              LIBS=-lcrypt32 && \\\n  make ${jobs:+-j$jobs} && make ${jobs:+-j$jobs} install && rm \"tor-$tor_version.tar.gz.sha256sum.asc\"\n\nENTRYPOINT [\"sh\", \"-c\", \"while true; do sleep 2; done\"]\n"
}