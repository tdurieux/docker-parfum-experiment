{
  "startTime": 1674253700467,
  "endTime": 1674253701542,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 1,
        "columnEnd": 23
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 1,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 5
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 25,
        "columnStart": 18,
        "columnEnd": 5
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM \tdebian:stretch\n\n\nENV\tBINUTILS_SRC=http://ftp.gnu.org/gnu/binutils/binutils-2.21.1a.tar.bz2\nENV\tNEWLIB_SRC=https://sourceware.org/pub/newlib/newlib-1.19.0.tar.gz\nENV\tGCC_SRC=http://ftp.gnu.org/gnu/gcc/gcc-4.8.2/gcc-4.8.2.tar.bz2\nENV\tPREFIX=/usr/local\n\n# Install build tools and dependencies\nRUN apt update && apt install --no-install-recommends -y \\\n\t\tbuild-essential \\\n\t\tlibmpfr-dev \\\n\t\tlibmpc-dev \\\n\t\tlibgmp3-dev \\\n\t\tzlib1g-dev \\\n\t\tzlibc \\\n\t\ttexinfo \\\n\t\tbison \\\n\t\tflex \\\n\t\tcurl \\\n\t\tpatch \\\n\t\tfile \\\n\t\tpython2.7-minimal \\\n\t\tautoconf \\\n\t\tlibtool \\\n\t\tgit && rm -rf /var/lib/apt/lists/*;\n\n# Stage 0: Download and patch the source code\nRUN curl -f -SL ${BINUTILS_SRC} | tar -xj -C /usr/src && \\\n\tcurl -f -SL ${NEWLIB_SRC} | tar -xz -C /usr/src && \\\n\tcurl -f -SL ${GCC_SRC} | tar -xj -C /usr/src\n\nCOPY\tpatches/ /usr/src/patches\nRUN\tfor patch in /usr/src/patches/gcc-*.patch; do \\\n\t\tpatch -d /usr/src/gcc-* -p1 < $patch; \\\n\tdone\n\n# Stage 1: Build and install binutils\nRUN\tmkdir -p /home/build/binutils && cd /home/build/binutils \\\n\t\t&& /usr/src/binutils-*/configure \\\n\t\t\tCFLAGS=\"-w\" \\\n\t\t\t--prefix=${PREFIX} \\\n\t\t\t--disable-werror \\\n\t\t\t--target=arm-none-eabi \\\n\t\t\t--enable-interwork \\\n\t\t\t--enable-threads=posix \\\n\t\t\t--enable-multilib \\\n\t\t\t--with-float=soft \\\n\t\t&& make all install\n\n# Stage 2: Build and install GCC (compiler only)\nRUN\tmkdir -p /home/build/gcc && cd /home/build/gcc \\\n\t\t&& HDR_PATH=$(realpath /usr/src/newlib-*/newlib/libc/include) \\\n\t\t&& /usr/src/gcc-*/configure \\\n\t\t\tCFLAGS=\"-w\" \\\n\t\t\t--prefix=${PREFIX} \\\n\t\t\t--disable-shared \\\n\t\t\t--disable-werror \\\n\t\t\t--target=arm-none-eabi \\\n\t\t\t--enable-interwork \\\n\t\t\t--enable-multilib \\\n\t\t\t--with-float=soft \\\n\t\t\t--enable-languages=\"c,c++\" \\\n\t\t\t--with-newlib \\\n\t\t\t--with-headers=$HDR_PATH \\\n\t\t\t--with-system-zlib \\\n\t\t&& make all-gcc install-gcc\n\n# Stage 3: Build and install newlib\nRUN\tmkdir -p /home/build/newlib && cd /home/build/newlib \\\n\t\t&& /usr/src/newlib-*/configure \\\n\t\t\tCFLAGS=\"-w\" \\\n\t\t\t--prefix=${PREFIX} \\\n\t\t\t--disable-werror \\\n\t\t\t--target=arm-none-eabi \\\n\t\t\t--enable-interwork \\\n\t\t\t--enable-multilib \\\n\t\t\t--with-float=soft \\\n\t\t&& make all install\n\n# Stage 4: Build and install the rest of GCC\nRUN\tcd /home/build/gcc && make all install\n"
}