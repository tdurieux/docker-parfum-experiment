{
  "startTime": 1674249071573,
  "endTime": 1674249073117,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 8,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 8,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 22,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 76,
        "lineEnd": 87,
        "columnStart": 1,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 92,
        "lineEnd": 103,
        "columnStart": 1,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 108,
        "lineEnd": 109,
        "columnStart": 1,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 2,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 133,
        "lineEnd": 154,
        "columnStart": 2,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG\tUSER\nFROM\t$USER/debian-buster-jenkins\nARG\tOGT_MASTER_ADDR=\"172.18.50.2\"\n\n\n# Create jenkins user\nRUN     useradd -ms /bin/bash jenkins\n# Create osmo-gsm-tester group and add user to it\nRUN     groupadd osmo-gsm-tester\nRUN     usermod -a -G osmo-gsm-tester jenkins\n\n# install osmo-gsm-tester dependencies\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tdbus \\\n\t\ttcpdump \\\n\t\tsqlite3 \\\n\t\tpython3 \\\n\t\tpython3-setuptools \\\n\t\tpython3-yaml \\\n\t\tpython3-mako \\\n\t\tpython3-gi \\\n\t\tpython3-numpy \\\n\t\tpython3-wheel \\\n\t\tpython3-watchdog \\\n\t\tofono \\\n\t\tpatchelf \\\n\t\tsudo \\\n\t\tlibcap2-bin \\\n\t\tpython3-pip \\\n\t\tudhcpc \\\n\t\tiperf3 \\\n\t\tlocales && rm -rf /var/lib/apt/lists/*;\n\n# install osmo-gsm-tester pip dependencies\nRUN pip3 install --no-cache-dir \\\n\t\t\"git+https://github.com/podshumok/python-smpplib.git@master#egg=smpplib\" \\\n\t\tpydbus \\\n\t\tpyusb \\\n\t\tpysispm \\\n\t\tpymongo\n\n# Intall sshd:\nRUN apt-get update && apt-get install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*;\nRUN\tmkdir /var/run/sshd\nCOPY\tssh /root/.ssh\nCOPY\t--chown=jenkins:jenkins ssh /home/jenkins/.ssh\nRUN     chmod -R 0700 /home/jenkins/.ssh /root/.ssh\n\n# Create directories for slaves with correct file permissions:\nRUN\tmkdir -p /osmo-gsm-tester-srsue \\\n                 /osmo-gsm-tester-srsenb \\\n                 /osmo-gsm-tester-srsepc \\\n                 /osmo-gsm-tester-trx \\\n\t\t /osmo-gsm-tester-grbroker \\\n\t\t /osmo-gsm-tester-open5gs\nRUN\tchown -R jenkins:jenkins \\\n                 /osmo-gsm-tester-*\n\n# Set a UTF-8 locale\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# We require a newer patchelf 0.11 (OS#4389)\nADD     https://github.com/NixOS/patchelf/archive/0.11.tar.gz /tmp/patchelf-0.11.tar.gz\nRUN cd /tmp && \\\n        tar -zxf /tmp/patchelf-0.11.tar.gz && \\\n        cd patchelf-0.11 && \\\n\tautoreconf -fi && \\\n        ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && \\\n        make && \\\n        make install && rm /tmp/patchelf-0.11.tar.gz\n\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\ttelnet \\\n\t\tlibosmocore-dev \\\n\t\tlibosmo-abis-dev \\\n\t\tlibosmo-gsup-client-dev \\\n\t\tlibosmo-netif-dev \\\n\t\tlibosmo-ranap-dev \\\n\t\tlibosmo-sccp-dev \\\n\t\tlibosmo-sigtran-dev \\\n\t\tlibsmpp34-dev \\\n\t\tlibgtp-dev \\\n\t\tlibasn1c-dev && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install srsRAN runtime dependencies\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tcmake \\\n\t\tlibfftw3-dev \\\n\t\tlibmbedtls-dev \\\n\t\tlibboost-program-options-dev \\\n\t\tlibconfig++-dev \\\n\t\tlibsctp-dev \\\n\t\tlibpcsclite-dev \\\n\t\tlibuhd-dev \\\n\t\tlibczmq-dev \\\n\t\tlibsoapysdr-dev \\\n\t\tsoapysdr-module-lms7 && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install gnuradio runtime dependencies\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tgnuradio && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# install open5gs dependencies: (mongodb not available in Debian)\n# systemctl stuff: workaround for https://jira.mongodb.org/browse/SERVER-54386\nADD\thttps://www.mongodb.org/static/pgp/server-4.4.asc /tmp/mongodb-server-4.4.asc\nRUN\tif [ \"$(arch)\" = \"x86_64\" ]; then \\\n\t\tapt-key add /tmp/mongodb-server-4.4.asc && \\\n\t\techo \"deb http://repo.mongodb.org/apt/debian buster/mongodb-org/4.4 main\" \\\n\t\t\t> /etc/apt/sources.list.d/mongodb-org-4.4.list; \\\n\tfi\nRUN if [ \"$(arch)\" = \"x86_64\" ]; then \\\n\t\tapt-get update && \\\n\t\tsystemctl_path=$(which systemctl) && \\\n\t\tmv $systemctl_path /tmp/systemctl && \\\n\t\tapt-get install -y --no-install-recommends mongodb-org && \\\n\t\tapt-get clean && \\\n\t\tmv /tmp/systemctl $systemctl_path && \\\n\t\tsed -i \"s/127.0.0.1/$OGT_MASTER_ADDR/g\" /etc/mongod.conf; rm -rf /var/lib/apt/lists/*; \\\n\tfi\n\n# install open5gs dependencies:\nRUN if [ \"$(arch)\" = \"x86_64\" ]; then \\\n\t\tapt-get update && \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tpython3-pip \\\n\t\t\tpython3-setuptools \\\n\t\t\tpython3-wheel \\\n\t\t\tninja-build \\\n\t\t\tbuild-essential \\\n\t\t\tflex \\\n\t\t\tbison \\\n\t\t\tgit \\\n\t\t\tlibsctp-dev \\\n\t\t\tlibgnutls28-dev \\\n\t\t\tlibgcrypt-dev \\\n\t\t\tlibssl-dev \\\n\t\t\tlibidn11-dev \\\n\t\t\tlibmongoc-dev \\\n\t\t\tlibbson-dev \\\n\t\t\tlibyaml-dev \\\n\t\t\tlibnghttp2-dev \\\n\t\t\tlibmicrohttpd-dev \\\n\t\t\tlibcurl4-gnutls-dev \\\n\t\t\tlibnghttp2-dev \\\n\t\t\tmeson && \\\n\t\tapt-get clean; rm -rf /var/lib/apt/lists/*; \\\n\tfi\n\nWORKDIR\t/tmp\n\nARG\tOSMO_GSM_TESTER_BRANCH=\"master\"\n\nRUN\tgit clone git://git.osmocom.org/osmo-gsm-tester.git\nADD\thttp://git.osmocom.org/osmo-gsm-tester/patch?h=$OSMO_GSM_TESTER_BRANCH /tmp/commit\n\nRUN\tcd osmo-gsm-tester && \\\n\tgit fetch && git checkout $OSMO_GSM_TESTER_BRANCH && \\\n\t(git symbolic-ref -q HEAD && git reset --hard origin/$OSMO_GSM_TESTER_BRANCH || exit 1); \\\n\tgit rev-parse --abbrev-ref HEAD && git rev-parse HEAD\n\n# Copy several scripts and permission for osmo-gsm-tester:\nRUN     mkdir -p /usr/local/bin/ && cp osmo-gsm-tester/utils/bin/* /usr/local/bin/\nRUN     mkdir -p /etc/sudoers.d/ && cp osmo-gsm-tester/utils/sudoers.d/* /etc/sudoers.d/\nRUN     mkdir -p /etc/security/limits.d/ && cp osmo-gsm-tester/utils/limits.d/* /etc/security/limits.d/\n\nVOLUME\t/data\nCOPY\tresources.conf /tmp/osmo-gsm-tester/sysmocom/resources.conf\n\nWORKDIR\t/data\nCMD\t[\"/bin/sh\", \"-c\", \"/data/osmo-gsm-tester-master.sh >/data/osmo-gsm-tester.log 2>&1\"]\n\nEXPOSE\t22/tcp\n"
}