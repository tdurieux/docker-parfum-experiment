{
  "startTime": 1674254395367,
  "endTime": 1674254397493,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 126,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 123,
        "columnStart": 1,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 181,
        "lineEnd": 184,
        "columnStart": 1,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Image used to run contrib/jenkins.sh scripts of most Osmocom projects.\n# See master-builds.yml, gerrit-verifications.yml in osmo-ci.git.\n\nARG\tDEBIAN_VERSION=buster\nARG\tREGISTRY=docker.io\nFROM\t${REGISTRY}/debian:${DEBIAN_VERSION}\n# Arguments used after FROM must be specified again\nARG\tOSMOCOM_REPO_MIRROR=\"https://downloads.osmocom.org\"\nARG\tOSMOCOM_REPO_PATH=\"packages/osmocom:\"\n\n# Make \"$DEBIAN_VERSION\" available after FROM\n# https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact\nARG DEBIAN_VERSION\n\n# Install apt dependencies (keep in alphabetic order)\nRUN \\\n\t[ \"$(arch)\" = \"x86_64\" ] && dpkg --add-architecture i386; \\\n\tDEBIAN_FRONTEND=noninteractive apt-get update && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \\\n\t\tasciidoc \\\n\t\tasciidoc-dblatex \\\n\t\tautoconf \\\n\t\tautoconf-archive \\\n\t\tautomake \\\n\t\tbc \\\n\t\tbison \\\n\t\tbzip2 \\\n\t\tca-certificates \\\n\t\tcmake \\\n\t\tcoccinelle \\\n\t\tcppcheck \\\n\t\tdahdi-source \\\n\t\tdblatex \\\n\t\tdbus \\\n\t\tdebhelper \\\n\t\tdevscripts \\\n\t\tdh-autoreconf \\\n\t\tdh-systemd \\\n\t\tdocbook5-xml \\\n\t\tdoxygen \\\n\t\tflex \\\n\t\tg++ \\\n\t\tgawk \\\n\t\tgcc \\\n\t\tgcc-arm-none-eabi \\\n\t\tgit \\\n\t\tgit-buildpackage \\\n\t\tgraphviz \\\n\t\thtop \\\n\t\tinkscape \\\n\t\tlcov \\\n\t\tlibaio-dev \\\n\t\tlibasound2-dev \\\n\t\tlibboost-all-dev \\\n\t\tlibc-ares-dev \\\n\t\tlibcsv-dev \\\n\t\tlibdbd-sqlite3 \\\n\t\tlibdbi-dev \\\n\t\tlibelf-dev \\\n\t\tlibffi-dev \\\n\t\tlibfftw3-dev \\\n\t\tlibgmp-dev \\\n\t\tlibgnutls28-dev \\\n\t\tlibgps-dev \\\n\t\tlibgsm1-dev \\\n\t\tlibjansson-dev \\\n\t\tliblua5.3-dev \\\n\t\tlibmnl-dev \\\n\t\tlibncurses5-dev \\\n\t\tlibnewlib-arm-none-eabi \\\n\t\tlibnl-3-dev \\\n\t\tlibnl-route-3-dev \\\n\t\tliboping-dev \\\n\t\tlibortp-dev \\\n\t\tlibpcap-dev \\\n\t\tlibpcsclite-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsctp-dev \\\n\t\tlibsigsegv-dev \\\n\t\tlibsnmp-dev \\\n\t\tlibsofia-sip-ua-glib-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibtalloc-dev \\\n\t\tlibtool \\\n\t\tlibusb-1.0-0-dev \\\n\t\tlibusb-dev \\\n\t\tlibxml2-utils \\\n\t\tlibzmq3-dev \\\n\t\tlocales \\\n\t\tlua-socket \\\n\t\tmake \\\n\t\tmscgen \\\n\t\tofono \\\n\t\topenssh-client \\\n\t\tosc \\\n\t\tpatchelf \\\n\t\tpkg-config \\\n\t\tpython3 \\\n\t\tpython3-gi \\\n\t\tpython3-mako \\\n\t\tpython3-nwdiag \\\n\t\tpython3-pip \\\n\t\tpython3-pyflakes \\\n\t\tpython3-setuptools \\\n\t\tpython3-usb \\\n\t\tpython3-yaml \\\n\t\tpython2.7 \\\n\t\tpython-pip \\\n\t\tpython-setuptools \\\n\t\tpython-yaml \\\n\t\trsync \\\n\t\tsdcc \\\n\t\tsqlite3 \\\n\t\tsource-highlight \\\n\t\tstow \\\n\t\tsudo \\\n\t\tsystemd \\\n\t\ttcpdump \\\n\t\ttexinfo \\\n\t\tunzip \\\n\t\twget \\\n\t\txsltproc && rm -rf /var/lib/apt/lists/*;\n\n# Install pip dependencies (keep in alphabetic order)\nRUN pip3 install --no-cache-dir \\\n\tgit+https://github.com/podshumok/python-smpplib.git \\\n\tgit+https://github.com/eriwen/lcov-to-cobertura-xml.git \\\n\tpydbus \\\n\tpysispm\n\n# match the outside user\nRUN useradd --uid=1000 build\n#RUN echo \"build ALL=(ALL) NOPASSWD:ALL\" > /etc/sudoers.d/build\n\nRUN mkdir /build\nRUN chown build:build /build\n\n# Install osmo-python-tests for python2 (when building old tags again new releases)\nARG OSMO_PYTHON2_TESTS_COMMIT=fb4b813d4df62b7b2445bdced961eb1847267eed\nADD http://git.osmocom.org/python/osmo-python-tests/patch/?id=$OSMO_PYTHON2_TESTS_COMMIT /tmp/osmo-python-tests2-commit\nRUN git clone https://gerrit.osmocom.org/python/osmo-python-tests osmo-python-tests2 && \\\n\tcd osmo-python-tests2 && \\\n\tgit checkout $OSMO_PYTHON2_TESTS_COMMIT && \\\n\tpython2 setup.py clean build install\n\n# Install osmo-python-tests for python3\nADD http://git.osmocom.org/python/osmo-python-tests/patch /tmp/osmo-python-tests3-commit\nRUN git clone https://gerrit.osmocom.org/python/osmo-python-tests osmo-python-tests3 && \\\n\tcd osmo-python-tests3 && \\\n\tpython3 setup.py clean build install\n\n# Install osmo-ci.git/scripts to /usr/local/bin\nADD http://git.osmocom.org/osmo-ci/patch /tmp/osmo-ci-commit\nRUN git clone https://gerrit.osmocom.org/osmo-ci osmo-ci && \\\n\tcp -v $(find osmo-ci/scripts \\\n\t\t-maxdepth 1 \\\n\t\t-type f ) \\\n\t   /usr/local/bin\n\n# Install osmo-gsm-manuals to /opt/osmo-gsm-manuals\nADD http://git.osmocom.org/osmo-gsm-manuals/patch /tmp/osmo-gsm-manuals-commit\nRUN git -C /opt clone https://gerrit.osmocom.org/osmo-gsm-manuals\n\n# Set a UTF-8 locale\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8\nENV LANG en_US.UTF-8\n\n# Install packages from Osmocom OBS repositories:\n# * osmo-remsim: libulfius\n# * osmo-trx: liblimesuite-dev, libuhd-dev\nARG\tOSMOCOM_REPO=\"${OSMOCOM_REPO_MIRROR}/${OSMOCOM_REPO_PATH}/nightly/Debian_10/\"\nCOPY\t.common/Release.key /tmp/Release.key\nRUN\tapt-key add /tmp/Release.key && \\\n\trm /tmp/Release.key && \\\n\techo \"deb \" $OSMOCOM_REPO \" ./\" > /etc/apt/sources.list.d/osmocom-nightly.list\nADD\t$OSMOCOM_REPO/Release /tmp/Release\nRUN apt-get update && \\\n\tapt-get install -y --no-install-recommends \\\n\t\tliblimesuite-dev \\\n\t\tlibuhd-dev \\\n\t\tlibulfius-dev && \\\n\tapt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# osmo-python-tests' contrib/jenkins.sh writes to /usr/local as user\nRUN chown -R build:build /usr/local\n"
}