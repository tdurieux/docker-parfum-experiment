{
  "startTime": 1674218848695,
  "endTime": 1674218849818,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 1,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 2,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG\tUSER\nARG\tDISTRO\nFROM\t$USER/$DISTRO-build\n# Arguments used after FROM must be specified again\nARG\tDISTRO\n\nRUN case \"$DISTRO\" in \\\n\tdebian*) \\\n\t\tapt-get update && \\\n\t\tapt-get install -y --no-install-recommends \\\n\t\t\tlibosmocore-dev \\\n\t\t\tlibosmo-abis-dev \\\n\t\t\tlibosmo-netif-dev \\\n\t\t&& \\\n\t\tapt-get clean \\\n\t\t;; \\\n\tcentos*) \\\n\t\tdnf install -y \\\n\t\t\t\"pkgconfig(libosmo-netif)\" \\\n\t\t\t\"pkgconfig(libosmoabis)\" \\\n\t\t\t\"pkgconfig(libosmocore)\" \\\n\t\t\t\"pkgconfig(libosmoctrl)\" \\\n\t\t\t\"pkgconfig(libosmogb)\" \\\n\t\t\t\"pkgconfig(libosmogsm)\" \\\n\t\t\t\"pkgconfig(libosmovty)\" \\\n\t\t\t;; \\\n\tesac && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR\t/tmp\n\nARG\tOSMO_GBPROXY_BRANCH=\"master\"\n\nRUN\tgit clone git://git.osmocom.org/osmo-gbproxy.git\nADD\thttp://git.osmocom.org/osmo-gbproxy/patch?h=$OSMO_GBPROXY_BRANCH /tmp/commit\n\nRUN cd osmo-gbproxy && \\\n\tgit fetch && git checkout $OSMO_GBPROXY_BRANCH && \\\n\t(git symbolic-ref -q HEAD && git reset --hard origin/$OSMO_GBPROXY_BRANCH || exit 1); \\\n\tgit rev-parse --abbrev-ref HEAD && git rev-parse HEAD && \\\n\tautoreconf -fi && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n\tmake \"-j$(nproc)\" install && \\\n\tldconfig\n\nVOLUME\t/data\n\nCOPY\tosmo-gbproxy.cfg \t/data/osmo-gbproxy.cfg\n\n# work-around for stupid docker not being able to properly deal with host netdevices or start\n# containers in pre-existing netns\nCOPY\t.common/pipework\t/usr/bin/pipework\nCOPY\tdocker-entrypoint.sh\t/docker-entrypoint.sh\n\nWORKDIR\t/data\nCMD\t[\"/docker-entrypoint.sh\"]\n\nEXPOSE\t23000/udp 4246/tcp 4263/tcp\n"
}