{
  "startTime": 1674254435380,
  "endTime": 1674254436992,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 44,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 159,
        "lineEnd": 162,
        "columnStart": 5,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 168,
        "lineEnd": 171,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 183,
        "lineEnd": 186,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 196,
        "lineEnd": 199,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 209,
        "lineEnd": 212,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 223,
        "lineEnd": 226,
        "columnStart": 4,
        "columnEnd": 117
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 67,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 4
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 27,
        "columnEnd": 38
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 63,
        "columnEnd": 126
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 73,
        "columnEnd": 98
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 73,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 73,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 73,
        "columnEnd": 122
      }
    }
  ],
  "repairedDockerfile": "FROM debian:11 as base\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# Add Docker as source for apt\nRUN apt-get update && apt-get install --no-install-recommends -y curl gpg lsb-release \\\n  && apt-get clean && rm -rf /var/lib/apt/lists/* \\\n  && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \\\n  && echo \"deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n# Add Cloud Foundry (CLI) as source for apt\nRUN curl -fsSL \"https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key\" | apt-key add - \\\n  && echo \"deb https://packages.cloudfoundry.org/debian stable main\" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list\n\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n    apt-transport-https \\\n    asciinema \\\n    bash-completion \\\n    bc \\\n    build-essential \\\n    ca-certificates \\\n    cf7-cli \\\n    cron \\\n    curl \\\n    delta \\\n    docker-ce-cli \\\n    entr \\\n    file \\\n    fzf \\\n    gnupg \\\n    jq \\\n    libevent-dev \\\n    libgraph-easy-perl \\\n    lsb-release \\\n    lynx \\\n    man \\\n    ncat \\\n    ncurses-dev \\\n    neofetch \\\n    newsboat \\\n    openssh-server \\\n    pandoc \\\n    pass \\\n    postgresql \\\n    shellcheck \\\n    sudo \\\n    uuid-runtime \\\n    vim-nox \\\n    w3m \\\n    wamerican-small \\\n    wget \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nWORKDIR /tmp/\nARG DEST=/usr/local/bin\n\n# Install tmux - terminal multiplexer\nARG TMUXVER=3.2a\nRUN curl -fsSL \"https://github.com/tmux/tmux/releases/download/$TMUXVER/tmux-$TMUXVER.tar.gz\" | tar -xzf - \\\n  && cd \"tmux-$TMUXVER\" && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install\n\n# Install specific Node.js\nARG NODEVER=lts\nRUN curl -fsSL \"https://deb.nodesource.com/setup_$NODEVER.x\" | bash - && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Install global npm modules for Node.js\nRUN npm install -g \\\n  @sap/cds-dk \\\n  @sap/generator-fiori \\\n  @sapui5/generator-sapui5-templates \\\n  @ui5/cli \\\n  fx \\\n  docsify-cli \\\n  bash-language-server \\\n  eslint \\\n  http-server \\\n  httpie \\\n  jwt-cli \\\n  lorem-ipsum \\\n  prettier \\\n  lodash \\\n  ramda \\\n  url-decode-encode-cli \\\n  yarn \\\n  yo && npm cache clean --force;\n\n# Install bat - cat with wings\nARG BATVER=0.18.3\nRUN curl -fsSLO \"https://github.com/sharkdp/bat/releases/download/v$BATVER/bat-musl_${BATVER}_amd64.deb\" && dpkg -i \"./bat-musl_${BATVER}_amd64.deb\"\n\n# Install glow - terminal based Markdown rendering\nARG GLOWVER=1.4.1\nRUN curl -fsSLO \"https://github.com/charmbracelet/glow/releases/download/v${GLOWVER}/glow_${GLOWVER}_linux_amd64.deb\" && dpkg -i \"./glow_${GLOWVER}_linux_amd64.deb\"\n\n# Install gh - CLI for GitHub\nARG GHVER=2.13.0\nRUN curl -fsSLO \"https://github.com/cli/cli/releases/download/v${GHVER}/gh_${GHVER}_linux_amd64.deb\" && dpkg -i \"./gh_${GHVER}_linux_amd64.deb\"\n\n# Install yq - YAML query tool\nARG YQVER=4.16.1\nRUN curl -fsSL \"https://github.com/mikefarah/yq/releases/download/v${YQVER}/yq_linux_amd64\" -o \"$DEST/yq\" && chmod +x \"$DEST/yq\"\n\n# Install lf - a terminal file manager\nARG LFVER=26\nRUN curl -fsSL \"https://github.com/gokcehan/lf/releases/download/r${LFVER}/lf-linux-amd64.tar.gz\" | tar -C \"$DEST\" -xzf - lf\n\n# Install gitui - a git TUI\nARG GITUIVER=0.19.0\nRUN curl -fsSL \"https://github.com/extrawurst/gitui/releases/download/v${GITUIVER}/gitui-linux-musl.tar.gz\" | tar -C \"$DEST\" -xzf -\n\n# Install shfmt - shell script formatter\nARG SHFMTVER=3.4.1\nRUN curl -fsSL \"https://github.com/mvdan/sh/releases/download/v${SHFMTVER}/shfmt_v${SHFMTVER}_linux_amd64\" -o \"$DEST/shfmt\" && chmod +x \"$DEST/shfmt\"\n\n# Install kubectl - Kubernetes CLI\nRUN curl -fsSL \"https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\" -o \"$DEST/kubectl\" && chmod +x \"$DEST/kubectl\"\n\n# Install Dockerfile linter hadolint\nARG HADOLINTVER=2.8.0\nRUN curl -fsSL \"https://github.com/hadolint/hadolint/releases/download/v${HADOLINTVER}/hadolint-Linux-x86_64\" -o \"$DEST/hadolint\" && chmod +x \"$DEST/hadolint\"\n\n# Install Steampipe - SQL for APIs\nRUN /bin/sh -c \"$(curl -fsSL https://raw.githubusercontent.com/turbot/steampipe/main/install.sh)\"\n\n# Install Azure CLI\nRUN curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash\n\n# Clean up temp dir\nRUN rm -rf /tmp/*\n\n# Set up non-root user\nARG USERNAME=user\nARG UID=1031\nRUN adduser \\\n  --uid $UID \\\n  --quiet \\\n  --disabled-password \\\n  --shell /bin/bash \\\n  --home /home/$USERNAME \\\n  --gecos \"Dev User\" \\\n  $USERNAME \\\n && chown $USERNAME:$USERNAME /tmp/\n\nUSER $USERNAME\nWORKDIR /home/$USERNAME\nENV TERM xterm-256color\n\n# Set up dotfiles\nRUN git clone https://github.com/qmacro/dotfiles.git && cd dotfiles/ && ./dotsetup\n\n# Install Vim plugins\nRUN vim +'PlugInstall --sync' +qa > /dev/null 2>&1\n\n# Set focus reminder\nRUN echo \"What are you focusing on?\" | tee \"$HOME/.status\" > \"$HOME/.focus\"\n\n# Install btp CLI\nRUN cd /tmp/ \\\n  && curl -f \\\n  --remote-name \\\n  --location \\\n  --url \"https://raw.githubusercontent.com/SAP-samples/sap-tech-bytes/2021-09-01-btp-cli/getbtpcli\" \\\n  && chmod +x getbtpcli \\\n  && echo -ne '\\n' | ./getbtpcli\n\n# Install ijq\nARG IJQVER=0.3.6\nRUN curl -f \\\n    --silent \\\n    --location \\\n    --url \"https://git.sr.ht/~gpanders/ijq/refs/download/v$IJQVER/ijq-$IJQVER-linux-x86_64.tar.gz\" \\\n    | tar \\\n      --extract \\\n      --gunzip \\\n      --file - \\\n      --directory /home/$USERNAME/bin/ \\\n      --strip-components 1 \\\n      --wildcards \\\n      ijq-$IJQVER/ijq\n\n# Install Service Manager CLI tool\nARG SMCTLVER=1.11.12\nRUN curl -f \\\n    --silent \\\n    --location \\\n    --url \"https://github.com/Peripli/service-manager-cli/releases/download/v$SMCTLVER/smctl-v$SMCTLVER-linux-amd64.tar.gz\" \\\n    | tar \\\n      --extract \\\n      --gunzip \\\n      --file - \\\n      --directory /home/$USERNAME/bin/ \\\n      smctl\n\n# Install Exercism\nARG EXERCISMVER=3.0.13\nRUN curl -f \\\n    --silent \\\n    --location \\\n    --url \"https://github.com/exercism/cli/releases/download/v$EXERCISMVER/exercism-$EXERCISMVER-linux-x86_64.tar.gz\" \\\n    | tar \\\n      --extract \\\n      --gunzip \\\n      --file - \\\n      --directory /home/$USERNAME/bin/ \\\n      exercism\n\n# Install bats\nARG BATSVER=1.6.0\nRUN curl -f \\\n    --silent \\\n    --location \\\n    --url \"https://github.com/bats-core/bats-core/archive/refs/tags/v$BATSVER.tar.gz\" \\\n    | tar \\\n      --extract \\\n      --gunzip \\\n      --file - \\\n      --directory /tmp/ \\\n  && cd \"/tmp/bats-core-$BATSVER\" \\\n  && ./install.sh \"$HOME\"\n\n# Install slides (presentations in terminal)\nARG SLIDESVER=0.7.3\nRUN curl -f \\\n    --silent \\\n    --location \\\n    --url \"https://github.com/maaslalani/slides/releases/download/v$SLIDESVER/slides_${SLIDESVER}_linux_amd64.tar.gz\" \\\n    | tar \\\n      --extract \\\n      --gunzip \\\n      --file - \\\n      --directory /home/$USERNAME/bin/ \\\n      slides\n\n# Off we go - based on tmux, the terminal multiplexer\nCMD [\"tmux\", \"-u\", \"new\", \"-s\", \"main\"]\n"
}