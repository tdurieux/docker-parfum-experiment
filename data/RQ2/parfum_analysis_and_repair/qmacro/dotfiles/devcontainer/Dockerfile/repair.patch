diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/qmacro/dotfiles/devcontainer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/qmacro/dotfiles/devcontainer/Dockerfile/repaired.Dockerfile
index 5f1353e..ea74d3e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/qmacro/dotfiles/devcontainer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/qmacro/dotfiles/devcontainer/Dockerfile/repaired.Dockerfile
@@ -2,9 +2,9 @@ FROM debian:11 as base
 SHELL ["/bin/bash", "-o", "pipefail", "-c"]
 
 # Add Docker as source for apt
-RUN apt-get update && apt-get install -y curl gpg lsb-release \
+RUN apt-get update && apt-get install --no-install-recommends -y curl gpg lsb-release \
   && apt-get clean && rm -rf /var/lib/apt/lists/* \
-  && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
+  && curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \
   && echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
 
 # Add Cloud Foundry (CLI) as source for apt
@@ -12,7 +12,7 @@ RUN curl -fsSL "https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.ke
   && echo "deb https://packages.cloudfoundry.org/debian stable main" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list
 
 RUN apt-get update \
- && apt-get install -y \
+ && apt-get install --no-install-recommends -y \
     apt-transport-https \
     asciinema \
     bash-completion \
@@ -58,11 +58,11 @@ ARG DEST=/usr/local/bin
 # Install tmux - terminal multiplexer
 ARG TMUXVER=3.2a
 RUN curl -fsSL "https://github.com/tmux/tmux/releases/download/$TMUXVER/tmux-$TMUXVER.tar.gz" | tar -xzf - \
-  && cd "tmux-$TMUXVER" && ./configure && make && make install
+  && cd "tmux-$TMUXVER" && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install
 
 # Install specific Node.js
 ARG NODEVER=lts
-RUN curl -fsSL "https://deb.nodesource.com/setup_$NODEVER.x" | bash - && apt-get install -y nodejs
+RUN curl -fsSL "https://deb.nodesource.com/setup_$NODEVER.x" | bash - && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Install global npm modules for Node.js
 RUN npm install -g \
@@ -83,7 +83,7 @@ RUN npm install -g \
   ramda \
   url-decode-encode-cli \
   yarn \
-  yo
+  yo && npm cache clean --force;
 
 # Install bat - cat with wings
 ARG BATVER=0.18.3
@@ -114,7 +114,7 @@ ARG SHFMTVER=3.4.1
 RUN curl -fsSL "https://github.com/mvdan/sh/releases/download/v${SHFMTVER}/shfmt_v${SHFMTVER}_linux_amd64" -o "$DEST/shfmt" && chmod +x "$DEST/shfmt"
 
 # Install kubectl - Kubernetes CLI
-RUN curl -fsSL "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" -o "$DEST/kubectl" && chmod +x "$DEST/kubectl"
+RUN curl -fsSL "https://dl.k8s.io/release/$( curl -f -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" -o "$DEST/kubectl" && chmod +x "$DEST/kubectl"
 
 # Install Dockerfile linter hadolint
 ARG HADOLINTVER=2.8.0
@@ -124,7 +124,7 @@ RUN curl -fsSL "https://github.com/hadolint/hadolint/releases/download/v${HADOLI
 RUN /bin/sh -c "$(curl -fsSL https://raw.githubusercontent.com/turbot/steampipe/main/install.sh)"
 
 # Install Azure CLI
-RUN curl -sL https://aka.ms/InstallAzureCLIDeb | bash
+RUN curl -f -sL https://aka.ms/InstallAzureCLIDeb | bash
 
 # Clean up temp dir
 RUN rm -rf /tmp/*
@@ -157,7 +157,7 @@ RUN echo "What are you focusing on?" | tee "$HOME/.status" > "$HOME/.focus"
 
 # Install btp CLI
 RUN cd /tmp/ \
-  && curl \
+  && curl -f \
   --remote-name \
   --location \
   --url "https://raw.githubusercontent.com/SAP-samples/sap-tech-bytes/2021-09-01-btp-cli/getbtpcli" \
@@ -166,7 +166,7 @@ RUN cd /tmp/ \
 
 # Install ijq
 ARG IJQVER=0.3.6
-RUN curl \
+RUN curl -f \
     --silent \
     --location \
     --url "https://git.sr.ht/~gpanders/ijq/refs/download/v$IJQVER/ijq-$IJQVER-linux-x86_64.tar.gz" \
@@ -181,7 +181,7 @@ RUN curl \
 
 # Install Service Manager CLI tool
 ARG SMCTLVER=1.11.12
-RUN curl \
+RUN curl -f \
     --silent \
     --location \
     --url "https://github.com/Peripli/service-manager-cli/releases/download/v$SMCTLVER/smctl-v$SMCTLVER-linux-amd64.tar.gz" \
@@ -194,7 +194,7 @@ RUN curl \
 
 # Install Exercism
 ARG EXERCISMVER=3.0.13
-RUN curl \
+RUN curl -f \
     --silent \
     --location \
     --url "https://github.com/exercism/cli/releases/download/v$EXERCISMVER/exercism-$EXERCISMVER-linux-x86_64.tar.gz" \
@@ -207,7 +207,7 @@ RUN curl \
 
 # Install bats
 ARG BATSVER=1.6.0
-RUN curl \
+RUN curl -f \
     --silent \
     --location \
     --url "https://github.com/bats-core/bats-core/archive/refs/tags/v$BATSVER.tar.gz" \
@@ -221,7 +221,7 @@ RUN curl \
 
 # Install slides (presentations in terminal)
 ARG SLIDESVER=0.7.3
-RUN curl \
+RUN curl -f \
     --silent \
     --location \
     --url "https://github.com/maaslalani/slides/releases/download/v$SLIDESVER/slides_${SLIDESVER}_linux_amd64.tar.gz" \