{
  "startTime": 1674249021088,
  "endTime": 1674249021885,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM icr.io/appcafe/ibm-semeru-runtimes:open-8-jdk-ubi\nARG LIBERTY_VERSION=22.0.0.7\nARG LIBERTY_SHA=edb64ef6fcfd182f2742c3f76d362a0f5596cd80\nARG LIBERTY_BUILD_LABEL=cl220720220620-2217\nARG LIBERTY_DOWNLOAD_URL=https://repo1.maven.org/maven2/io/openliberty/openliberty-kernel/$LIBERTY_VERSION/openliberty-kernel-$LIBERTY_VERSION.zip\nARG LIBERTY_LICENSE_URL=https://raw.githubusercontent.com/OpenLiberty/open-liberty/master/LICENSE\nARG LIBERTY_LICENSE_SHA=84f00503d6516c91190de866e78d6010899673b7\nARG OPENJ9_SCC=true\nARG VERBOSE=false\n\nLABEL org.opencontainers.image.authors=\"Arthur De Magalhaes, Chris Potter, Leo Christy Jesuraj\" \\\n      org.opencontainers.image.vendor=\"Open Liberty\" \\\n      org.opencontainers.image.url=\"https://openliberty.io/\" \\\n      org.opencontainers.image.source=\"https://github.com/OpenLiberty/ci.docker\" \\\n      org.opencontainers.image.version=\"$LIBERTY_VERSION\" \\\n      org.opencontainers.image.revision=\"$LIBERTY_BUILD_LABEL\" \\\n      vendor=\"Open Liberty\" \\\n      name=\"Open Liberty\" \\\n      version=\"$LIBERTY_VERSION\" \\\n      summary=\"Image for Open Liberty with IBM Semeru Runtime Open Edition OpenJDK with OpenJ9 and UBI 8\" \\\n      description=\"This image contains the Open Liberty runtime with IBM Semeru Runtime Open Edition OpenJDK with OpenJ9 and Red Hat UBI 8 as the base OS.  For more information on this image please see https://github.com/OpenLiberty/ci.docker#building-an-application-image\"\n\nCOPY helpers /opt/ol/helpers\nCOPY fixes/ /opt/ol/fixes/\n\n# Install Open Liberty\nRUN yum -y install shadow-utils wget unzip openssl \\\n    && wget -q $LIBERTY_DOWNLOAD_URL -U UA-Open-Liberty-Docker -O /tmp/wlp.zip \\\n    && echo \"$LIBERTY_SHA  /tmp/wlp.zip\" > /tmp/wlp.zip.sha1 \\\n    && sha1sum -c /tmp/wlp.zip.sha1 \\\n    && chmod -R u+x /usr/bin \\\n    && unzip -q /tmp/wlp.zip -d /opt/ol \\\n    && rm /tmp/wlp.zip \\\n    && rm /tmp/wlp.zip.sha1 \\\n    && mkdir -p /licenses \\\n    && wget -q $LIBERTY_LICENSE_URL -O /licenses/LICENSE \\\n    && echo \"$LIBERTY_LICENSE_SHA /licenses/LICENSE\" | sha1sum -c --strict --check \\\n    && adduser -u 1001 -r -g root -s /usr/sbin/nologin default \\\n    && yum -y remove shadow-utils wget unzip \\\n    && yum clean all \\\n    && chown -R 1001:0 /opt/ol/wlp \\\n    && chmod -R g+rw /opt/ol/wlp && rm -rf /var/cache/yum\n\n# Set Path Shortcuts\nENV PATH=/opt/ol/wlp/bin:/opt/ol/docker/:/opt/ol/helpers/build:$PATH \\\n    LOG_DIR=/logs \\\n    WLP_OUTPUT_DIR=/opt/ol/wlp/output \\\n    WLP_SKIP_MAXPERMSIZE=true \\\n    OPENJ9_SCC=$OPENJ9_SCC\n\n# Configure Open Liberty\nRUN /opt/ol/wlp/bin/server create \\\n    && rm -rf $WLP_OUTPUT_DIR/.classCache /output/workarea\n\n\n# Create symlinks && set permissions for non-root user\nRUN mkdir /logs \\\n    && mkdir -p /opt/ol/wlp/usr/shared/resources/lib.index.cache \\\n    && ln -s /opt/ol/wlp/usr/shared/resources/lib.index.cache /lib.index.cache \\\n    && mkdir -p $WLP_OUTPUT_DIR/defaultServer \\\n    && ln -s $WLP_OUTPUT_DIR/defaultServer /output \\\n    && ln -s /opt/ol/wlp/usr/servers/defaultServer /config \\\n    && mkdir -p /config/configDropins/defaults \\\n    && mkdir -p /config/configDropins/overrides \\\n    && ln -s /opt/ol/wlp /liberty \\\n    && chown -R 1001:0 /config \\\n    && chmod -R g+rw /config \\\n    && chown -R 1001:0 /logs \\\n    && chmod -R g+rw /logs \\\n    && chown -R 1001:0 /opt/ol/wlp/usr \\\n    && chmod -R g+rw /opt/ol/wlp/usr \\\n    && chown -R 1001:0 /opt/ol/wlp/output \\\n    && chmod -R g+rw /opt/ol/wlp/output \\\n    && chown -R 1001:0 /opt/ol/helpers \\\n    && chmod -R g+rw /opt/ol/helpers \\\n    && chown -R 1001:0 /opt/ol/fixes \\\n    && chmod -R g+rwx /opt/ol/fixes \\\n    && mkdir /etc/wlp \\\n    && chown -R 1001:0 /etc/wlp \\\n    && chmod -R g+rw /etc/wlp \\\n    && echo \"<server description=\\\"Default Server\\\"><httpEndpoint id=\\\"defaultHttpEndpoint\\\" host=\\\"*\\\" /></server>\" > /config/configDropins/defaults/open-default-port.xml\n\n# Create a new SCC layer\nRUN if [ \"$OPENJ9_SCC\" = \"true\" ]; then populate_scc.sh; fi \\\n    && rm -rf /output/messaging /output/resources/security /logs/* $WLP_OUTPUT_DIR/.classCache /output/workarea \\\n    && chown -R 1001:0 /opt/ol/wlp/output \\\n    && chmod -R g+rwx /opt/ol/wlp/output\n\n#These settings are needed so that we can run as a different user than 1001 after server warmup\nENV RANDFILE=/tmp/.rnd \\\n    OPENJ9_JAVA_OPTIONS=\"-XX:+IgnoreUnrecognizedVMOptions -XX:+IdleTuningGcOnIdle -Xshareclasses:name=openj9_system_scc,cacheDir=/opt/java/.scc,readonly,nonFatal -Dosgi.checkConfiguration=false\"\n\nUSER 1001\n\nEXPOSE 9080 9443\n\nENTRYPOINT [\"/opt/ol/helpers/runtime/docker-server.sh\"]\nCMD [\"/opt/ol/wlp/bin/server\", \"run\", \"defaultServer\"]\n"
}