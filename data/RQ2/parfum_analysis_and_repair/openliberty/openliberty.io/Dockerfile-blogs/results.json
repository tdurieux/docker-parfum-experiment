{
  "startTime": 1674250919835,
  "endTime": 1674250920657,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 7,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Created by laura_cowen@uk.ibm.com, Twitter/GitHub/Docker username: @lauracowen\n# 2017-11-02\n# Updated Oct. 2018 by Kin Ueng\n# Installing and running Jekyll based on: based on https://blog.codeship.com/a-beginners-guide-to-the-dockerfile/\n# NodeJS and NPM sections based on: https://gist.github.com/remarkablemark/aacf14c29b3f01d6900d13137b21db3a\n\n# The purpose of this dockerfile is to run your Jekyll website so you don't have to install Jekyll\n# and all of Jekyll's pre-requisite software.\n# You can view the site in a browser on your local (host) machine (at http://0.0.0.0:4000).\n# You can then modify website source files on your local (host) machine.\n# When you save a changed file, the changes are automatically rebuilt by Jekyll in the container and you can almost immediately\n# see the changes when you refresh your browser.\n\n# To build this image, from the directory that contains this Dockerfile:\n# docker build --tag lauracowen/jekyll .\n#\n# To run a container:\n# docker run --name jekyll -it -d -p 4000:4000 -v <root directory of Jekyll site on host machine>:/home/jekyll lauracowen/jekyll\n\n# Use the official Ruby image as a parent image\nFROM ruby:latest\n\n# INSTALL NODEJS AND NPM (it's a dependency of something in the Jekyll setup)\n\n# replace shell with bash so we can source files\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\n# update the repository sources list\n# and install dependencies\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y curl \\\n    && apt-get -y autoclean && rm -rf /var/lib/apt/lists/*;\n\n# nvm environment variables\nENV NVM_DIR /usr/local/nvm\nENV NODE_VERSION 9.0.0\n\n# install nvm\n# https://github.com/creationix/nvm#install-script\nRUN curl -f --silent -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash\n\n# install node and npm\nRUN source $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default\n\n# add node and npm to path so the commands are available\nENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n# confirm installation\nRUN node -v\nRUN npm -v\n\n# INSTALLING AND RUNNING JEKYLL\n\n# create a user and group for Jekyll, set appropriate permissions, install the Jekyll gem\nRUN mkdir -p /home/jekyll \\\n    && groupadd -rg 1000 jekyll \\\n    && useradd -rg jekyll -u 1000 -d /home/jekyll jekyll \\\n    && chown jekyll:jekyll /home/jekyll\n\n# Create a mount point where Docker can access the source files on my local system (host system)\nVOLUME /home/jekyll\n\n#  Set the working directory\nWORKDIR /home/jekyll\n\n# openliberty.io gem dependencies\nCOPY ./scripts /home/jekyll/scripts\nRUN scripts/build_gem_dependencies.sh\n\n# openliberty.io custom gems\nCOPY ./gems /home/jekyll/gems   \nRUN pushd gems/ol-target-blank \\\n    && gem build ol-target-blank.gemspec \\\n    && gem install ol-target-blank-0.0.1.gem \\\n    && popd\n\n# Serve the site\nENTRYPOINT [\"bash\", \"./scripts/jekyll_serve_dev.sh\"]\n\n# Make port 4000 available to the world outside this container\nEXPOSE 4000\n\n\n"
}