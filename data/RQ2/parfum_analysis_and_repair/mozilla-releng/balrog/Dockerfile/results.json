{
  "startTime": 1674252790480,
  "endTime": 1674252791144,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.9-slim\n\nMAINTAINER jcristau@mozilla.com\n\n# Some versions of the python:3.8 Docker image remove libpcre3, which uwsgi needs for routing support to be enabled.\n# default-libmysqlclient-dev is required to use SQLAlchemy with MySQL, which we do in production.\n# xz-utils is needed to compress production database dumps\nRUN apt-get -q update \\\n    && apt-get -q --no-install-recommends --yes install libpcre3 libpcre3-dev default-libmysqlclient-dev mariadb-client xz-utils \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\n# install the requirements into the container first\n# these rarely change and is more cache friendly\n# ... really speeds up building new containers\nCOPY requirements/ /app/requirements/\nRUN apt-get install --no-install-recommends -q --yes gcc && \\\n    pip install --no-cache-dir -r requirements/base.txt && \\\n    apt-get -q --yes remove gcc && \\\n    apt-get -q --yes autoremove && \\\n    apt-get clean && \\\n    rm -rf /root/.cache && rm -rf /var/lib/apt/lists/*;\n\n# Copying Balrog to /app instead of installing it means that production can run\n# it, and we can bind mount to override it for local development.\nCOPY src/ /app/src/\nCOPY uwsgi/ /app/uwsgi/\nCOPY scripts/manage-db.py scripts/run-batch-deletes.sh scripts/run.sh scripts/reset-stage-db.sh scripts/get-prod-db-dump.py /app/scripts/\nCOPY MANIFEST.in pyproject.toml setup.py version.json version.txt /app/\n\nRUN python setup.py install\n\nWORKDIR /app\n\n# Using /bin/bash as the entrypoint works around some volume mount issues on Windows\n# where volume-mounted files do not have execute bits set.\n# https://github.com/docker/compose/issues/2301#issuecomment-154450785 has additional background.\nENTRYPOINT [\"/bin/bash\", \"/app/scripts/run.sh\"]\nCMD [\"public\"]\n"
}