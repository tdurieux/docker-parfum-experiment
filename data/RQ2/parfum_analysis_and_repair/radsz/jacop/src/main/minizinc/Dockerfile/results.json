{
  "startTime": 1674254669313,
  "endTime": 1674254670571,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 3,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 5,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 3,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#------------------------------------------------------------------------------#\n# This file contains the setup for building a base image for the MiniZinc\n# challenges. It uses multi-stage builds in order to keep the images small.\n# Note that the statements ADD, RUN, and COPY can add image layers.\n#------------------------------------------------------------------------------#\n# The build image\n\nFROM minizinc/mznc2018:1.0\n\n# Install Java.\nRUN \\\n  echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | debconf-set-selections && \\\n  apt-get update && \\\n  apt-get -y --no-install-recommends install software-properties-common python-software-properties && \\\n  add-apt-repository -y ppa:webupd8team/java && \\\n  apt-get update && \\\n  apt-get install --no-install-recommends -y oracle-java8-installer && \\\n  rm -rf /var/lib/apt/lists/* && \\\nrm -rf /var/cache/oracle-jdk8-installer\n\nENV JAVA_HOME /usr/lib/jvm/java-8-oracle\n\n# Install Maven\n\nARG MAVEN_VERSION=3.5.4\nARG USER_HOME_DIR=\"/root\"\nARG SHA=ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d\nARG BASE_URL=https://apache.osuosl.org/maven/maven-3/${MAVEN_VERSION}/binaries\n\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref \\\n  && apt-get update \\\n  && apt-get -y --no-install-recommends install curl \\\n  && curl -fsSL -o /tmp/apache-maven.tar.gz ${BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz \\\n  && echo \"${SHA}  /tmp/apache-maven.tar.gz\" | sha256sum -c - \\\n  && tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \\\n  && rm -f /tmp/apache-maven.tar.gz \\\n  && ln -s /usr/share/maven/bin/mvn /usr/bin/mvn && rm -rf /var/lib/apt/lists/*;\n\nENV MAVEN_HOME /usr/share/maven\nENV MAVEN_CONFIG \"$USER_HOME_DIR/.m2\"\n\n# Retrieval of JaCoP\n\nRUN apt-get update \\\n&& apt-get install --no-install-recommends -y git \\\n&& git clone https://github.com/radsz/jacop /jacop && rm -rf /var/lib/apt/lists/*;\n\nRUN cd /jacop && \\\ngit fetch && \\\ngit checkout 04b17f002bce && \\\nmvn clean install -DskipTests && \\\ncp -r /jacop/src/main/minizinc/org/jacop/minizinc/* /entry_data/mzn-lib/\n\n\nRUN \\\n    echo \"#!/bin/bash                                 \" >  /entry_data/fzn-exec && \\\n    echo \"#------------------------------------------#\" >> /entry_data/fzn-exec && \\\n    echo \"exec java -server -cp /jacop/target/jacop-*-SNAPSHOT.jar -Xmx10G -Xms100M org.jacop.fz.Fz2jacop -cs \\\"\\$@\\\" \" >> /entry_data/fzn-exec && \\\n    chmod a+x /entry_data/fzn-exec\n\n\n"
}