{
  "startTime": 1674220521162,
  "endTime": 1674220523018,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# tinygo-llvm stage obtains the llvm source for TinyGo\nFROM golang:1.18 AS tinygo-llvm\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-utils make cmake clang-11 binutils-avr gcc-avr avr-libc ninja-build && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./Makefile /tinygo/Makefile\n\nRUN cd /tinygo/ && \\\n    make llvm-source\n\n# tinygo-llvm-build stage build the custom llvm with xtensa support\nFROM tinygo-llvm AS tinygo-llvm-build\n\nRUN cd /tinygo/ && \\\n    make llvm-build\n\n# tinygo-xtensa stage installs tools needed for ESP32\nFROM tinygo-llvm-build AS tinygo-xtensa\n\nARG xtensa_version=\"1.22.0-80-g6c4433a-5.2.0\"\nRUN cd /tmp/ && \\\n    wget -q https://dl.espressif.com/dl/xtensa-esp32-elf-linux64-${xtensa_version}.tar.gz && \\\n    tar xzf xtensa-esp32-elf-linux64-${xtensa_version}.tar.gz && \\\n    cp ./xtensa-esp32-elf/bin/xtensa-esp32-elf-ld /usr/local/bin/ && \\\n    rm -rf /tmp/xtensa* && rm xtensa-esp32-elf-linux64-${xtensa_version}.tar.gz\n\n# tinygo-compiler stage builds the compiler itself\nFROM tinygo-xtensa AS tinygo-compiler\n\nCOPY . /tinygo\n\n# update submodules\nRUN cd /tinygo/ && \\\n    rm -rf ./lib/*/ && \\\n    git submodule sync && \\\n    git submodule update --init --recursive --force\n\nRUN cd /tinygo/ && \\\n    make\n\n# tinygo-tools stage installs the needed dependencies to compile TinyGo programs for all platforms.\nFROM tinygo-compiler AS tinygo-tools\n\nRUN cd /tinygo/ && \\\n    make wasi-libc binaryen && \\\n    make gen-device -j4 && \\\n    cp build/* $GOPATH/bin/\n\nCMD [\"tinygo\"]\n"
}