{
  "startTime": 1674255295876,
  "endTime": 1674255297509,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 88,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 108,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright (c) 2020      Intel, Inc.  All rights reserved.\n# Copyright (c) 2020      IBM Corporation.  All rights reserved.\n#\n# Base Build box for PRRTE\n# Requires:\n#  - Basic compile tooling and runtime support\n#  - libevent - retrieve v2.1.11-stable from web\n#  - hwloc - retrieve v2.2.0 from web\n#  - curl\n#  - libjansson - retrieve v2.13.1 from web\n#  - PMIx - cloned from 'master' branch\n#  - PRRTE - cloned from 'master' branch\n#\nFROM centos:7\n\nMAINTAINER Ralph Castain <ralph.h.castain@intel.com>\n\n# ------------------------------------------------------------\n# Install required packages\n# ------------------------------------------------------------\nRUN yum -y update && \\\n    yum -y install epel-release && \\\n    yum repolist && \\\n    yum -y install \\\n    systemd openssh-server openssh-clients \\\n    gcc gdb strace \\\n    binutils less wget which sudo \\\n    perl perl-Data-Dumper numactl \\\n    autoconf automake libtool flex bison \\\n    iproute net-tools make git pandoc \\\n    libnl3 gtk2 atk cairo tcl tcsh tk pciutils lsof ethtool bc file \\\n    valgrind curl curl-devel && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# ------------------------------------------------------------\n# Define support libraries\n# - hwloc\n# - libevent\n# - libjansson\n# ------------------------------------------------------------\nRUN mkdir -p /opt/hpc/local/build\nRUN mkdir -p /opt/hpc/rndvz\n\nARG LIBEVENT_INSTALL_PATH=/opt/hpc/local/libevent\nENV LIBEVENT_INSTALL_PATH=$LIBEVENT_INSTALL_PATH\nARG HWLOC_INSTALL_PATH=/opt/hpc/local/hwloc\nENV HWLOC_INSTALL_PATH=$HWLOC_INSTALL_PATH\nARG LIBJANSSON_INSTALL_PATH=/opt/hpc/local/libjansson\nENV LIBJANSSON_INSTALL_PATH=$LIBJANSSON_INSTALL_PATH\n\nRUN cd /opt/hpc/local/build && \\\n    wget https://github.com/libevent/libevent/releases/download/release-2.1.11-stable/libevent-2.1.11-stable.tar.gz && \\\n    tar xf libevent-2.1.11-stable.tar.gz && \\\n    cd libevent-2.1.11-stable && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${LIBEVENT_INSTALL_PATH} > /dev/null && \\\n    make > /dev/null && \\\n    make install > /dev/null && rm libevent-2.1.11-stable.tar.gz\nRUN cd /opt/hpc/local/build && \\\n    wget https://download.open-mpi.org/release/hwloc/v2.2/hwloc-2.2.0.tar.gz && \\\n    tar xf hwloc-2.2.0.tar.gz && \\\n    cd hwloc-2.2.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${HWLOC_INSTALL_PATH} > /dev/null && \\\n    make > /dev/null && \\\n    make install > /dev/null && \\\n    cd .. && \\\n    rm -rf /opt/hpc/local/src /opt/hpc/local/build/* && rm hwloc-2.2.0.tar.gz\nRUN cd /opt/hpc/local/build && \\\n    wget https://digip.org/jansson/releases/jansson-2.13.1.tar.gz && \\\n    tar xf jansson-2.13.1.tar.gz && \\\n    cd jansson-2.13.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${LIBJANSSON_INSTALL_PATH} > /dev/null && \\\n    make > /dev/null && \\\n    make install > /dev/null && \\\n    cd .. && \\\n    rm -rf /opt/hpc/local/build/* && rm jansson-2.13.1.tar.gz\nENV LD_LIBRARY_PATH=\"$HWLOC_INSTALL_PATH/bin:$LIBEVENT_INSTALL_PATH/lib:$LIBJANSSON_INSTALL_PATH/lib:${LD_LIBRARY_PATH}\"\n\n\n# ------------------------------------------------------------\n# PMIx Install\n# ------------------------------------------------------------\nENV PMIX_ROOT=/opt/hpc/local/pmix\nENV LD_LIBRARY_PATH=\"$PMIX_ROOT/lib:${LD_LIBRARY_PATH}\"\n\nRUN cd /opt/hpc/local/build && \\\n    git clone -q -b master https://github.com/openpmix/openpmix.git && \\\n    cd openpmix && \\\n    ./autogen.pl > /dev/null && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${PMIX_ROOT} \\\n                --with-hwloc=${HWLOC_INSTALL_PATH} \\\n                --with-libevent=${LIBEVENT_INSTALL_PATH} \\\n                --with-curl \\\n                --with-jansson=${LIBJANSSON_INSTALL_PATH} > /dev/null && \\\n    make -j 10 > /dev/null && \\\n    make -j 10 install > /dev/null && \\\n    cd .. && rm -rf /opt/hpc/local/build/*\n\n# ------------------------------------------------------------\n# PRRTE Install\n# ------------------------------------------------------------\nENV PRRTE_ROOT=/opt/hpc/local/prrte\nENV PATH=\"$PRRTE_ROOT/bin:${PATH}\"\nENV LD_LIBRARY_PATH=\"$PRRTE_ROOT/lib:${LD_LIBRARY_PATH}\"\n\nRUN cd /opt/hpc/local/build && \\\n    git clone -q -b master https://github.com/openpmix/prrte.git && \\\n    cd prrte && \\\n    ./autogen.pl > /dev/null && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=${PRRTE_ROOT} \\\n                --with-hwloc=${HWLOC_INSTALL_PATH} \\\n                --with-libevent=${LIBEVENT_INSTALL_PATH} \\\n                --with-pmix=${PMIX_ROOT} > /dev/null && \\\n    make -j 10 > /dev/null && \\\n    make -j 10 install > /dev/null && \\\n    rm -rf /opt/hpc/local/build/*\n\n# ------------------------------------------------------------\n# Fixup the ssh login\n# ------------------------------------------------------------\nRUN ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N \"\" && \\\n    ssh-keygen -t ecdsa -f /etc/ssh/ssh_host_ecdsa_key  -N \"\" && \\\n    ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key  -N \"\" && \\\n    echo \"        LogLevel ERROR\" >> /etc/ssh/ssh_config && \\\n    echo \"        StrictHostKeyChecking no\" >> /etc/ssh/ssh_config && \\\n    echo \"        UserKnownHostsFile=/dev/null\" >> /etc/ssh/ssh_config\n\n# ------------------------------------------------------------\n# Adjust default ulimit for core files\n# ------------------------------------------------------------\nRUN echo '*               hard    core            -1' >> /etc/security/limits.conf && \\\n    echo '*               soft    core            -1' >> /etc/security/limits.conf && \\\n    echo 'ulimit -c unlimited' >> /root/.bashrc\n\n# ------------------------------------------------------------\n# Create a user account\n# ------------------------------------------------------------\nRUN groupadd -r prteuser && useradd --no-log-init -r -m -b /home -g prteuser -G wheel prteuser\nUSER prteuser\nRUN  cd /home/prteuser && \\\n        ssh-keygen -t rsa -N \"\" -f ~/.ssh/id_rsa && chmod og+rX . && \\\n        cd .ssh && cat id_rsa.pub > authorized_keys && chmod 644 authorized_keys && \\\n        exit\n\n# ------------------------------------------------------------\n# Give the user passwordless sudo powers\n# ------------------------------------------------------------\nUSER root\nRUN echo \"prteuser    ALL = NOPASSWD: ALL\" >> /etc/sudoers\n\n# ------------------------------------------------------------\n# Adjust the default environment\n# ------------------------------------------------------------\nUSER root\n\nENV PRRTE_MCA_prrte_default_hostfile=/opt/hpc/etc/hostfile.txt\nENV PATH=$PATH:/opt/hpc/local/hwloc/bin\n# Need to do this so that the 'prteuser' can have them too, not just root\nRUN echo \"export PMIX_ROOT=/opt/hpc/external/pmix\" >> /etc/bashrc && \\\n    echo \"export PRRTE_ROOT=/opt/hpc/external/prrte\" >> /etc/bashrc  && \\\n    echo \"export PATH=\\$PRRTE_ROOT/bin:\\$PATH\" >> /etc/bashrc  && \\\n    echo \"export LD_LIBRARY_PATH=\\$PMIX_ROOT/lib:\\$LD_LIBRARY_PATH\" >> /etc/bashrc && \\\n    echo \"export LD_LIBRARY_PATH=$HWLOC_INSTALL_PATH/lib:$LIBEVENT_INSTALL_PATH/lib:\\$LD_LIBRARY_PATH\" >> /etc/bashrc && \\\n    echo \"export LD_LIBRARY_PATH=\\$LIBJANSSON_INSTALL_PATH/lib:\\$LD_LIBRARY_PATH\" >> /etc/bashrc && \\\n    echo \"export LD_LIBRARY_PATH=\\$PRRTE_ROOT/lib:\\$LD_LIBRARY_PATH\" >> /etc/bashrc && \\\n    echo \"export PRRTE_MCA_prrte_default_hostfile=$PRRTE_MCA_prrte_default_hostfile\" >> /etc/bashrc && \\\n    echo \"ulimit -c unlimited\" >> /etc/bashrc && \\\n    echo \"alias pd=pushd\" >> /etc/bashrc\n\n# ------------------------------------------------------------\n# Kick off the ssh daemon\n# ------------------------------------------------------------\nEXPOSE 22\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n\n# ------------------------------------------------------------\n# Tickle ptrace scope for Mac stacktrace\n# ------------------------------------------------------------\nCMD [\"echo\", \"0\", \">\", \"/proc/sys/kernel/yama/ptrace_scope\"]\n\n# ------------------------------------------------------------\n# Kick off the PRRTE daemon\n# ------------------------------------------------------------\nUSER prteuser\n\nCMD [\"prte\"]\n"
}