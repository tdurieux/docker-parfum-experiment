{
  "startTime": 1674255815434,
  "endTime": 1674255816086,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 27,
        "columnEnd": 36
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM clouder/base:3.4\nMAINTAINER Dave Lasley <dave@laslabs.com>\n\n# Loosely based on https://github.com/docker-library/elasticsearch/blob/master/Dockerfile.template\n\nENV ES_VERSION 5.0.1\nENV ES_BASE https://artifacts.elastic.co/downloads/elasticsearch\n\nENV GOSU_VERSION 1.10\nENV GOSU_BASE https://github.com/tianon/gosu/releases/download\n\nENV PACKAGES \"ca-certificates curl nodejs openjdk8-jre openssl wget\"\n\nRUN apk add --no-cache --update $PACKAGES\n\nWORKDIR /tmp\n\n# Install glibc\nRUN apk --no-cache add ca-certificates openssl \\\n    && wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://raw.githubusercontent.com/sgerrand/alpine-pkg-glibc/master/sgerrand.rsa.pub \\\n    && apk --no-cache -X http://apkproxy.heroku.com/sgerrand/alpine-pkg-glibc add glibc glibc-bin\n\n# Install Go based sudo (gosu)\nRUN set -x \\\n    && apk add --no-cache gnupg \\\n    && wget -O /usr/local/bin/gosu \"$GOSU_BASE/$GOSU_VERSION/gosu-$(apk --print-arch |sed -e 's/x86_64/amd64/')\" \\\n    && wget -O /usr/local/bin/gosu.asc \"$GOSU_BASE/$GOSU_VERSION/gosu-$(apk --print-arch |sed -e 's/x86_64/amd64/').asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && gpg2 --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 \\\n    && gpg2 --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n    && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true \\\n    && apk del gnupg && rm -rf -d\n\n# Install Elasticsearch\nWORKDIR /opt\n\nRUN mkdir -p /opt \\\n    && adduser -h /opt/elasticsearch -g elasticsearch -s /bin/bash -D elasticsearch\n\nRUN ln -s elasticsearch elasticsearch-$ES_VERSION\nUSER elasticsearch\nRUN set -x \\\n    && wget -O - \"${ES_BASE}/elasticsearch-${ES_VERSION}.tar.gz\" | tar -xz\n\nENV PATH /opt/elasticsearch/bin:$PATH\n\nWORKDIR /opt/elasticsearch\nRUN set -ex \\\n    && for path in \\\n        ./data \\\n        ./logs \\\n        ./config \\\n        ./config/scripts \\\n    ; do \\\n        mkdir -p \"$path\"; \\\n        chown -R elasticsearch:elasticsearch \"$path\"; \\\n    done\n\n# Entrypoint\nCOPY docker-entrypoint.sh /\n\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"elasticsearch\"]\n"
}