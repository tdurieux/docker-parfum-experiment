{
  "startTime": 1674253900413,
  "endTime": 1674253901542,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 20
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 as compy-builder\nMAINTAINER Barna Csorogi <barnacs@justletit.be>\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        curl \\\n        g++ \\\n        git \\\n        libjpeg8-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /usr/local/ && \\\n    curl -f -O https://storage.googleapis.com/golang/go1.9.linux-amd64.tar.gz && \\\n    tar xf go1.9.linux-amd64.tar.gz -C /usr/local && rm go1.9.linux-amd64.tar.gz\n\nRUN mkdir -p /root/go/src/github.com/barnacs/compy/\nCOPY . /root/go/src/github.com/barnacs/compy/\nWORKDIR /root/go/src/github.com/barnacs/compy\nRUN /usr/local/go/bin/go get -d -v ./...\nRUN /usr/local/go/bin/go build -v\n\nFROM ubuntu:16.04\nMAINTAINER Barna Csorogi <barnacs@justletit.be>\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n        libjpeg8 \\\n        openssl \\\n        ssl-cert && \\\n    DEBIAN_FRONTEND=noninteractive apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /opt/compy\nCOPY \\\n    --from=compy-builder \\\n    /root/go/src/github.com/barnacs/compy/compy \\\n    /root/go/src/github.com/barnacs/compy/docker.sh \\\n    /opt/compy/\n\n# TODO: configure HTTP BASIC authentication\n# TODO: user-provided certificates\nENV \\\n    CERTIFICATE_DOMAIN=\"localhost\"\n\nEXPOSE 9999\nENTRYPOINT [\"./docker.sh\"]\n"
}