{
  "startTime": 1674250369247,
  "endTime": 1674250369978,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 22,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:unstable-20220622\nLABEL maintainer=\"richard.steinbrueck@googlemail.com\"\n\n## Configuration ##############################################################\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN ln -snf /usr/share/zoneinfo/UTC /etc/localtime && echo UTC > /etc/timezone\n\n## Init #######################################################################\nCOPY src/supervisord/supervisord-sshd.conf /etc/supervisor/conf.d/sshd.conf\nCOPY src/supervisord/supervisord-nginx.conf /etc/supervisor/conf.d/nginx.conf\nCOPY src/supervisord/supervisord.conf /etc/\n\n# Runtime config ##############################################################\nCOPY src/entrypoint.sh /entrypoint.sh\nCOPY src/entrypoint.d /dev/entrypoint.d\nRUN chmod 755 /entrypoint.sh\n\n# Packages ####################################################################\nCOPY src/packages.txt /tmp/packages.txt\n# I use cat because i like cat!\n# hadolint ignore=DL3008,DL3009,DL3015,SC2002,SC2046\nRUN apt-get update && apt-get -q --no-install-recommends -y -o Dpkg::Use-Pty=0 install $(cat /tmp/packages.txt) && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# oh-my-zsh ###################################################################\nRUN zsh -c \"$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)\" || true\n\n# Static binarys ##############################################################\n## Kafkactl - https://github.com/deviceinsight/kafkactl/\nWORKDIR /tmp/kafkactl\nRUN curl -f -L https://github.com/deviceinsight/kafkactl/releases/download/v1.14.0/kafkactl_1.14.0_Linux_x86_64.tar.gz --output kafkactl.tar.gz && \\\n    tar xvfz kafkactl.tar.gz && \\\n    cp /tmp/kafkactl/kafkactl /usr/local/bin/kafkactl && \\\n    chmod +x /usr/local/bin/kafkactl && rm kafkactl.tar.gz\n\n# setup nginx #################################################################\nRUN rm /var/www/html/*\nCOPY src/html/* /var/www/html/\nRUN ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log\n\n# setup ssh ###################################################################\nRUN mkdir /var/run/sshd /root/.ssh\n\n# setup manpage ################################################################\nCOPY src/debug.1 /usr/local/man/man1/\nRUN gzip /usr/local/man/man1/debug.1\n\n# trust additional CAs ########################################################\nRUN mkdir /tmp/certs\nADD http://aia.media-saturn.com/Media-Saturn-RootCA.crt /tmp/certs\nADD http://aia.media-saturn.com/Media-Saturn-SubCA-01.crt /tmp/certs\nADD http://aia.media-saturn.com/Media-Saturn-SubCA-02.crt /tmp/certs\n\n# convert the certified from DER to PEM\n# hadolint ignore=SC2045\nRUN for c in $(ls /tmp/certs); \\\n      do openssl x509 -inform DER -in \"/tmp/certs/$c\" -out \"/usr/share/ca-certificates/$c\"; \\\n    done\n\nRUN find /usr/share/ca-certificates/ | sed 's/\\/usr\\/share\\/ca-certificates\\///' > /etc/ca-certificates.conf\nRUN /usr/sbin/update-ca-certificates\n\n# Final #######################################################################\nEXPOSE 22 80\nWORKDIR /\nCMD [\"/entrypoint.sh\"]\n"
}