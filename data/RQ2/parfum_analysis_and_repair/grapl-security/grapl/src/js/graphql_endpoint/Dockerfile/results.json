{
  "startTime": 1674254170219,
  "endTime": 1674254172285,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Don't forget to update the other `FROM node:` in this file.\n# Use the latest Node version here: https://docs.aws.amazon.com/lambda/latest/dg/lambda-nodejs.html\nFROM node:17.3-bullseye-slim AS graphql-endpoint-build\n\nRUN apt-get update \\\n    && apt-get --yes install --no-install-recommends \\\n        build-essential=12.9 \\\n        libffi-dev=3.3-6 \\\n        libssl-dev=1.1.1n-0+deb11u3 \\\n        python3=3.9.2-3 \\\n        zip=3.0-12 \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && adduser \\\n        --disabled-password \\\n        --gecos '' \\\n        --home /home/grapl \\\n        --shell /bin/bash \\\n        grapl\n\nUSER grapl\nWORKDIR /home/grapl\nRUN mkdir -p lambda\n\n# Install the dependencies separately to leverage Docker cache\nWORKDIR /home/grapl/lambda\nCOPY --chown=grapl tsconfig.json tsconfig.json\nCOPY --chown=grapl package.json package.json\nCOPY --chown=grapl jest.config.js jest.config.js\nCOPY --chown=grapl package-lock.json package-lock.json\nRUN npm install \\\n    && rm -rf node_modules/grpc/build/ && npm cache clean --force;\n\n# Copy graphql sources\nCOPY --chown=grapl modules modules\nCOPY --chown=grapl tests tests\nCOPY --chown=grapl server.ts server.ts\nCOPY --chown=grapl tracing.ts tracing.ts\n\n# This compiles the typescript and spits out the built js files to `lambda/ts_compiled'\nRUN npx tsc \\\n    && cp -r ./node_modules ./ts_compiled/node_modules\n\nWORKDIR /home/grapl\n\n\n# Deploy image\n################################################################################\nFROM node:17.3-bullseye-slim AS graphql-endpoint-deploy\n\nRUN adduser \\\n        --disabled-password \\\n        --gecos '' \\\n        --home /home/grapl \\\n        --shell /bin/bash \\\n        grapl\n\nUSER grapl\nWORKDIR /home/grapl\n\nCOPY --chown=grapl --from=graphql-endpoint-build /home/grapl/lambda lambda\n\nWORKDIR /home/grapl/lambda/ts_compiled\n\nCOPY --chown=grapl package.json package.json\nCOPY --chown=grapl package-lock.json package-lock.json\nCOPY --chown=grapl start_potentially_with_debugger.sh start_potentially_with_debugger.sh\n\nCMD [\"yarn\", \"start\"]\n"
}