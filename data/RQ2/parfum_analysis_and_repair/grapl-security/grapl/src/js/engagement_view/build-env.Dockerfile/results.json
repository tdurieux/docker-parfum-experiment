{
  "startTime": 1674216936329,
  "endTime": 1674216937028,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 40,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "FROM node:16-bullseye\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# We do the following things to the default node container:\n#1. Upgrade the yarn version\n#2. We set the permissions for the docker mount points\n\n########## Upgrade Yarn Version ############################\n# The official node containers all use yarnv1, which is old and not really supported anymore. Therefore we're setting\n# yarn to the latest stable v3 version explicitly. With this we'll also be able to enable features like zero installs\n\n# TODO switch to corepack once\n#`typescript@patch:typescript@npm%3A4.6.2#~builtin<compat/typescript>::version=4.6.2&hash=493e53: Cannot apply hunk #11`\n# error is fixed. Apparently corepack applies a strict setting, which yarn set doesn't.\n\nENV YARN_VERSION 3.1.1\n\n# Don't think this is necessarily an issue for us:\n# hadolint ignore=SC2174\nRUN yarn set version ${YARN_VERSION} && yarn cache clean;\n\n########## Set docker mount points mode ###################\n# Manually create Docker volume mount points so we can set the mode\n# to make them a+w.\nRUN mkdir --parents \\\n    /engagement_view/.yarn/state \\\n    /engagement_view/node_modules \\\n    && chmod --recursive 777 \\\n    /engagement_view/.yarn/state \\\n    /engagement_view/node_modules\n\nVOLUME /engagement_view/.yarn/state\nVOLUME /engagement_view/node_modules\n"
}