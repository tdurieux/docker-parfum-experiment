{
  "startTime": 1674215264297,
  "endTime": 1674215268074,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 35,
        "columnStart": 67,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 35,
        "columnStart": 67,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7\n# install ubuntu packages.\nRUN DEBIAN_FRONTEND=noninteractive apt-get update --fix-missing && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    checkinstall \\\n    autoconf \\\n    libtool \\\n    pkg-config \\\n    supervisor \\\n    build-essential \\\n    bcrypt \\\n    libssl-dev \\\n    libffi-dev \\\n    libpq-dev \\\n    rsyslog \\\n    git \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    libxmlsec1-dev \\\n    swig \\\n    lib32ncurses5-dev \\\n    vim \\\n    libpng-dev \\\n    libjpeg62-turbo-dev \\\n    libfreetype6-dev \\\n    ca-certificates \\\n    openssl \\\n    libssl-dev \\\n    libffi-dev \\\n    libncurses5-dev \\\n    libsqlite3-dev \\\n    tk-dev libgdbm-dev \\\n    libc6-dev \\\n    libbz2-dev \\\n    curl \\\n    xz-utils \\\n && apt-get clean \\\n && apt-get autoremove && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\nRUN rm -rf /tmp/build*\n\nENV PYTHONWARNINGS=\"ignore:a true SSLContext object\"\n\n# copy the applicaiton\nRUN mkdir /api\n\n# app\nCOPY ./matchminer /api/matchminer\nCOPY ./filters_config /api/filters_config\nCOPY ./cerberus1 /api/cerberus1\nCOPY ./pymm_run.py /api/pymm_run.py\nCOPY ./elasticsearch /api/elasticsearch\n\n# gunicorn configs\nCOPY ./wsgi.py /api/wsgi.py\nCOPY ./gunicorn.conf.py /api/gunicorn.conf.py\n\nWORKDIR /api\nCOPY ./requirements.txt /api/requirements.txt\nRUN pip install --no-cache-dir -r requirements.txt\n\n# setup entrypoint.\nCOPY ./entrypoint.sh /\nENTRYPOINT  [\"/entrypoint.sh\"]\n"
}