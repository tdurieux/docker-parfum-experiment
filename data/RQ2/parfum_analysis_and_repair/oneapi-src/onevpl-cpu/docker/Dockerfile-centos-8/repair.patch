diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oneapi-src/onevpl-cpu/docker/Dockerfile-centos-8 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oneapi-src/onevpl-cpu/docker/Dockerfile-centos-8/repaired.Dockerfile
index 864ff99..6c854d0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/oneapi-src/onevpl-cpu/docker/Dockerfile-centos-8
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/oneapi-src/onevpl-cpu/docker/Dockerfile-centos-8/repaired.Dockerfile
@@ -3,9 +3,9 @@
 #
 # SPDX-License-Identifier: MIT
 # ==============================================================================
- 
+
 ARG VPL_INSTALL_PREFIX=/opt/intel/onevpl
- 
+
 # Stage 1
 FROM centos:centos8 AS vpl_base
 ENV TZ=Europe/Moscow
@@ -14,37 +14,37 @@ RUN dnf -y install gcc-toolset-9-gcc gcc-toolset-9-gcc-c++ \
     && yum install -y autoconf automake \
     && yum install -y git libtool make pkgconfig \
     && yum install -y python3 python3-setuptools \
-    && pip3 install -U wheel --user \
-    && pip3 install meson ninja 
+    && pip3 install --no-cache-dir -U wheel --user \
+    && pip3 install --no-cache-dir meson ninja && rm -rf /var/cache/yum
 
 # cmake
 RUN cd /tmp \
-    && curl -O -L https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4.tar.gz \
+    && curl -f -O -L https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4.tar.gz \
     && tar zxvf cmake-3.18.4.tar.gz \
     && cd cmake-3.18.4 \
     && source /opt/rh/gcc-toolset-9/enable \
     && ./bootstrap --prefix=/usr/local --parallel=$(nproc) \
     && make -j$(nproc) \
-    && make install
+    && make install && rm cmake-3.18.4.tar.gz
 
 # build nasm
 RUN cd /tmp && \
-    curl -O -L https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 && \
+    curl -f -O -L https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 && \
     tar xjvf nasm-2.14.02.tar.bz2 && \
     cd nasm-2.14.02 && \
     ./autogen.sh && \
-    ./configure --prefix="/usr" --bindir="/usr/bin" && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr" --bindir="/usr/bin" && \
     make && \
-    make install
+    make install && rm nasm-2.14.02.tar.bz2
 
 # build yasm
 RUN cd /tmp && \
-    curl -O -L --retry 5 https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz && \
+    curl -f -O -L --retry 5 https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz && \
     tar xzvf yasm-1.3.0.tar.gz && \
     cd yasm-1.3.0 && \
-    ./configure --prefix="/usr" --bindir="/usr/bin" && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="/usr" --bindir="/usr/bin" && \
     make && \
-    make install
+    make install && rm yasm-1.3.0.tar.gz
 
 # Stage 2
 FROM vpl_base AS vpl_bootstrap
@@ -75,7 +75,7 @@ RUN cd /oneVPL && \
 
 
 # Runtime image build
-FROM centos:centos8 
+FROM centos:centos8
 LABEL Description="This is the CentOS 8 CPU reference implementation image for the oneAPI Video Processing Library API"
 LABEL Vendor="Intel Corporation"
 ARG VPL_INSTALL_PREFIX