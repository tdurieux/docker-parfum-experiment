{
  "startTime": 1674248315212,
  "endTime": 1674248315914,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 96
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ==============================================================================\n# Copyright (C) 2020 Intel Corporation\n#\n# SPDX-License-Identifier: MIT\n# ==============================================================================\n\nARG VPL_INSTALL_PREFIX=/opt/intel/onevpl\n\n# Stage 1\nFROM centos:centos8 AS vpl_base\nENV TZ=Europe/Moscow\nRUN dnf -y install gcc-toolset-9-gcc gcc-toolset-9-gcc-c++ \\\n    && yum install -y bzip2 bzip2-devel freetype-devel zlib-devel openssl-devel \\\n    && yum install -y autoconf automake \\\n    && yum install -y git libtool make pkgconfig \\\n    && yum install -y python3 python3-setuptools \\\n    && pip3 install --no-cache-dir -U wheel --user \\\n    && pip3 install --no-cache-dir meson ninja && rm -rf /var/cache/yum\n\n# cmake\nRUN cd /tmp \\\n    && curl -f -O -L https://github.com/Kitware/CMake/releases/download/v3.18.4/cmake-3.18.4.tar.gz \\\n    && tar zxvf cmake-3.18.4.tar.gz \\\n    && cd cmake-3.18.4 \\\n    && source /opt/rh/gcc-toolset-9/enable \\\n    && ./bootstrap --prefix=/usr/local --parallel=$(nproc) \\\n    && make -j$(nproc) \\\n    && make install && rm cmake-3.18.4.tar.gz\n\n# build nasm\nRUN cd /tmp && \\\n    curl -f -O -L https://www.nasm.us/pub/nasm/releasebuilds/2.14.02/nasm-2.14.02.tar.bz2 && \\\n    tar xjvf nasm-2.14.02.tar.bz2 && \\\n    cd nasm-2.14.02 && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --bindir=\"/usr/bin\" && \\\n    make && \\\n    make install && rm nasm-2.14.02.tar.bz2\n\n# build yasm\nRUN cd /tmp && \\\n    curl -f -O -L --retry 5 https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz && \\\n    tar xzvf yasm-1.3.0.tar.gz && \\\n    cd yasm-1.3.0 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=\"/usr\" --bindir=\"/usr/bin\" && \\\n    make && \\\n    make install && rm yasm-1.3.0.tar.gz\n\n# Stage 2\nFROM vpl_base AS vpl_bootstrap\nCOPY script /oneVPL/script\nRUN source /opt/rh/gcc-toolset-9/enable \\\n    && source /oneVPL/script/bootstrap\n\n# Stage 3\nFROM vpl_base AS vpl_build\nCOPY --from=vpl:centos8 /opt/intel/onevpl /opt/intel/onevpl\nCOPY --from=vpl_bootstrap /oneVPL/_deps /oneVPL/_deps\nENV VPL_INSTALL_DIR=/opt/intel/onevpl\nENV VPL_BIN=/opt/intel/onevpl/bin\nENV VPL_LIB=/opt/intel/onevpl/lib\nENV VPL_INCLUDE=/opt/intel/onevpl/include\nCOPY . /oneVPL\n# RUN cp -r /oneVPL/_deps/lib64/* /oneVPL/_deps/lib\nARG VPL_BUILD_DEPENDENCIES=/oneVPL/_deps\nARG VPL_INSTALL_PREFIX\nRUN cd /oneVPL && \\\n    rm -rf _build && \\\n    mkdir _build && \\\n    cd _build && \\\n    source /opt/rh/gcc-toolset-9/enable && \\\n    cmake -DCMAKE_INSTALL_PREFIX=${VPL_INSTALL_PREFIX} -DCMAKE_BUILD_TYPE=Release .. && \\\n    make -j $(nproc --all) && \\\n    make install\n\n\n# Runtime image build\nFROM centos:centos8\nLABEL Description=\"This is the CentOS 8 CPU reference implementation image for the oneAPI Video Processing Library API\"\nLABEL Vendor=\"Intel Corporation\"\nARG VPL_INSTALL_PREFIX\nENV LD_LIBRARY_PATH=${VPL_INSTALL_PREFIX}/lib:${VPL_INSTALL_PREFIX}/lib64\nENV PKG_CONFIG_PATH=${VPL_INSTALL_PREFIX}/pkgconfig\nENV PATH=\"${PATH}:/${VPL_INSTALL_PREFIX}/bin\"\nCOPY --from=vpl_build ${VPL_INSTALL_PREFIX} ${VPL_INSTALL_PREFIX}\nCOPY --from=vpl_bootstrap /oneVPL/_deps /oneVPL/_deps\n\n\n"
}