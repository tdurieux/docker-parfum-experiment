{
  "startTime": 1674249018154,
  "endTime": 1674249019201,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.5.1\nRUN useradd -r -u 1000 appuser\n\n# Adding recent nodejs repositories\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash -\n\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        postgresql-client \\\n        libpq-dev \\\n        sqlite3 \\\n        nodejs \\\n        libsqlite3-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install Yarn\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends yarn && \\\n    rm -rf /var/lib/apt/lists/*\n\n# installing some gems manually\n# (either because they shouldn't be in bundler or for caching purposes)\n\nRUN gem install foreman rails\n\n# copying in Gemfile and running bundle install, so that we only do that when\n# Gemfile changes\n\nWORKDIR /app\nCOPY Gemfile* ./\n\nENV RAILS_ENV production\nRUN bundle install\n\n# copying in the rest of the application\nCOPY . .\n\nRUN rake webpacker:yarn_install\nRUN rake assets:precompile\n\n# running the server in production mode by default\nEXPOSE 3000\nCMD [\"bash\", \"./docker_entrypoint.sh\"]\n"
}