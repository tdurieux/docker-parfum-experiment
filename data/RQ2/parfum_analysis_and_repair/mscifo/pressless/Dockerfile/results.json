{
  "startTime": 1674218488127,
  "endTime": 1674218489277,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Compile PHP with static linked dependencies\n# to create a single running binary\n\nFROM amazonlinux\n\nARG PHP_VERSION\n\nRUN yum install \\\n    autoconf \\\n    automake \\\n    libtool \\\n    wget \\\n    git \\\n    m4 \\\n    re2c \\\n    libxml2-devel \\\n    openssl-devel \\\n    libpng-devel \\\n    libjpeg-devel \\\n    mysql \\\n    curl-devel -y && rm -rf /var/cache/yum\n\n# need this specific version to build php < 5.5\nRUN wget https://ftp.gnu.org/gnu/bison/bison-2.6.4.tar.gz\nRUN tar -xvzf bison-2.6.4.tar.gz && rm bison-2.6.4.tar.gz\nWORKDIR /bison-2.6.4\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN make\nRUN make install\nWORKDIR /\nRUN rm -rf bison-*\n\nRUN curl -f -sL https://github.com/php/php-src/archive/$PHP_VERSION.tar.gz | tar -zxv\n\nWORKDIR /php-src-$PHP_VERSION\n\nRUN git clone https://github.com/ZeWaren/pecl-apd.git\nRUN mv pecl-apd ext/apd\n\nRUN ./buildconf --force\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-static=yes \\\n    --enable-shared=no \\\n    --disable-all \\\n    --enable-apd \\\n    --enable-dom \\\n    --enable-filter \\\n    --enable-hash \\\n    --enable-json \\\n    --enable-libxml \\\n    --enable-mbstring \\\n    --enable-phar \\\n    --enable-pdo \\\n    --enable-simplexml \\\n    --enable-soap \\\n    --enable-xml \\\n    --enable-xmlwriter \\\n    --enable-zip \\\n    --with-curl \\\n    --with-gd \\\n    --with-iconv \\\n    --with-mysql \\\n    --with-mysqli \\\n    --with-pdo-mysql \\\n    --with-xmlrpc \\\n    --with-zlib \\\n    --with-openssl \\\n    --without-pear \\\n    --enable-ctype \\\n    --enable-fileinfo\n\nRUN make -j 5\nRUN cp ./sapi/cli/php /usr/bin/\n\n# for debugging inside container via serverless invoke local OR\n# $>php handler.php '{\"path\":\"/wp-admin/\",\"httpMethod\":\"GET\",\"headers\":{\"Host\":\"www.domain.com\"},\"queryStringParameters\":null}'\n#RUN curl --silent --location https://rpm.nodesource.com/setup_6.x | bash -                                 \n#RUN yum install -y nodejs\n#RUN npm install -g serverless serverless-domain-manager\n\nVOLUME /app\nWORKDIR /app"
}