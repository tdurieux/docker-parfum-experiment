{
  "startTime": 1674220166985,
  "endTime": 1674220167917,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 9,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 9,
        "columnEnd": 144
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 9,
        "columnEnd": 144
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 9,
        "columnEnd": 168
      }
    }
  ],
  "repairedDockerfile": "FROM gitpod/workspace-full-vnc\n\nUSER gitpod\n\n## Install Python with --enable-shared\nARG PYTHON_VERSION=3.9.2\nRUN rm -rf ${HOME}/.pyenv/versions/${PYTHON_VERSION}\nRUN PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install ${PYTHON_VERSION}\nRUN pyenv global ${PYTHON_VERSION}\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Install extra packages\nRUN pip3 install --no-cache-dir -U pytest flake8 pylint pytype mypy gcovr cherrypy dowser\n\n# Re-synchronize the OS package index\nRUN sudo apt-get update\n\n# Install all needed packages for all simulators\nRUN sudo apt-get install --no-install-recommends -y perl make flex gnat gtkwave swig autoconf g++ bison libfl2 libfl-dev ccache libgoogle-perftools-dev numactl perl-doc && rm -rf /var/lib/apt/lists/*;\nRUN sudo rm -rf /var/lib/apt/lists/*\n\n## Install Icarus Verilog\nRUN brew install icarus-verilog\n\n## Install Verilator\n#ENV VERILATOR_BRANCH=stable\nENV VERILATOR_BRANCH=v4.106\n\nRUN git clone https://github.com/verilator/verilator.git --branch ${VERILATOR_BRANCH} verilator \\\n    && unset VERILATOR_ROOT \\\n    && cd verilator \\\n    && autoconf \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make --silent \\\n    && sudo make --silent install \\\n    && cd .. \\\n    && rm -rf verilator\n\n## Install GHDL\nENV GHDL_BRANCH=v1.0.0\nRUN git clone https://github.com/ghdl/ghdl.git --depth=1 --branch ${GHDL_BRANCH} ghdl \\\n    && cd ghdl \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make --silent \\\n    && sudo make --silent install \\\n    && cd .. \\\n    && rm -rf ghdl\n\n# Install cvc\nRUN git clone https://github.com/cambridgehackers/open-src-cvc.git --depth=1 cvc \\\n    && cd cvc/src \\\n    && make -f makefile.cvc64 --silent \\\n    && sudo cp cvc64 /usr/local/bin \\\n    && cd ../.. \\\n    && rm -rf cvc\n"
}