{
  "startTime": 1674221218006,
  "endTime": 1674221219398,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nMAINTAINER Roman Suvorov windj007@gmail.com\n\nRUN apt-get clean && apt-get update\n\nRUN apt-get install --no-install-recommends -yqq curl && rm -rf /var/lib/apt/lists/*;\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash\n\nRUN apt-get install --no-install-recommends -yqq build-essential libbz2-dev libssl-dev libreadline-dev \\\n                         libsqlite3-dev tk-dev libpng-dev libfreetype6-dev git \\\n                         cmake wget gfortran libatlas-base-dev libatlas-dev \\\n                         libatlas3-base libhdf5-dev libxml2-dev libxslt-dev \\\n                         zlib1g-dev pkg-config graphviz liblapacke-dev \\\n                         locales nodejs && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash\nENV PYENV_ROOT /root/.pyenv\nENV PATH /root/.pyenv/shims:/root/.pyenv/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nRUN pyenv install 3.6.7\nRUN pyenv global 3.6.7\n\nRUN pip install --no-cache-dir -U pip\nRUN python -m pip install -U cython\nRUN python -m pip install -U numpy # thanks to libatlas-base-dev (base! not libatlas-dev), it will link to atlas\n\nRUN python -m pip install scipy pandas nltk gensim sklearn tensorflow-gpu \\\n        annoy keras ujson line_profiler tables sharedmem matplotlib torch torchvision\n\nRUN pip install --no-cache-dir git+https://github.com/pybind/pybind11.git\nRUN pip install --no-cache-dir nmslib\nRUN python -m pip install -U \\\n        h5py lxml git+https://github.com/openai/gym sacred git+https://github.com/marcotcr/lime \\\n        plotly pprofile mlxtend fitter mpld3 \\\n        git+https://github.com/facebookresearch/fastText.git \\\n        imbalanced-learn forestci category_encoders hdbscan seaborn networkx joblib eli5 \\\n        pydot graphviz dask[complete] opencv-python keras-vis pandas-profiling \\\n        git+https://github.com/windj007/libact/#egg=libact \\\n        git+https://github.com/IINemo/active_learning_toolbox \\\n        scikit-image pymorphy2[fast] pymorphy2-dicts-ru tqdm tensorboardX patool \\\n        skorch fastcluster \\\n        xgboost imgaug grpcio git+https://github.com/IINemo/isanlp.git\n\nRUN pip install --no-cache-dir -U pymystem3# && python -c \"import pymystem3 ; pymystem3.Mystem()\"\n\nRUN python -m pip install -U jupyter jupyterlab \\\n        jupyter_nbextensions_configurator jupyter_contrib_nbextensions==0.2.4\n\nRUN pyenv rehash\n\nRUN jupyter contrib nbextension install --system && \\\n    jupyter nbextensions_configurator enable --system && \\\n    jupyter nbextension enable --py --sys-prefix widgetsnbextension && \\\n    jupyter labextension install @jupyterlab/toc && \\\n    jupyter labextension install @jupyter-widgets/jupyterlab-manager\n\nRUN git clone --recursive https://github.com/Microsoft/LightGBM /tmp/lgbm && \\\n    cd /tmp/lgbm && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    cd ../python-package && \\\n    python setup.py install && \\\n    cd /tmp && \\\n    rm -r /tmp/lgbm\n\nRUN git clone https://code.googlesource.com/re2 /tmp/re2 && \\\n    cd /tmp/re2 && \\\n    make CFLAGS='-fPIC -c -Wall -Wno-sign-compare -O3 -g -I.' && \\\n    make test && \\\n    make install && \\\n    make testinstall && \\\n    ldconfig && \\\n    pip install --no-cache-dir -U fb-re2\n\nRUN sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n        dpkg-reconfigure --frontend=noninteractive locales\n\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nEXPOSE 8888\nVOLUME [\"/notebook\", \"/jupyter/certs\"]\nWORKDIR /notebook\n\nADD test_scripts /test_scripts\nADD jupyter /jupyter\nCOPY entrypoint.sh /entrypoint.sh\nCOPY hashpwd.py /hashpwd.py\n\nENV JUPYTER_CONFIG_DIR=\"/jupyter\"\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [ \"jupyter\", \"notebook\", \"--ip=0.0.0.0\", \"--allow-root\" ]\n"
}