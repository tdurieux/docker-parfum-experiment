{
  "startTime": 1674216697395,
  "endTime": 1674216698481,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 129
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 148
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 7,
        "columnEnd": 117
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 175
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 126
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 165
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 7,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM shiftleft/scan-base as builder\n\nARG CLI_VERSION\nARG BUILD_DATE\n\nENV GOSEC_VERSION=2.9.6 \\\n    TFSEC_VERSION=0.63.1 \\\n    KUBESEC_VERSION=2.11.4 \\\n    KUBE_SCORE_VERSION=1.13.0 \\\n    SHELLCHECK_VERSION=0.7.2 \\\n    DETEKT_VERSION=1.19.0 \\\n    GITLEAKS_VERSION=7.6.1 \\\n    SC_VERSION=2021.1.2 \\\n    JQ_VERSION=1.6 \\\n    GOPATH=/opt/app-root/go \\\n    SHIFTLEFT_HOME=/opt/sl-cli \\\n    PATH=${PATH}:${GOPATH}/bin:\n\nUSER root\n\nRUN mkdir -p /usr/local/bin/shiftleft \\\n    && curl -f -LO \"https://github.com/securego/gosec/releases/download/v${GOSEC_VERSION}/gosec_${GOSEC_VERSION}_linux_amd64.tar.gz\" \\\n    && tar -C /usr/local/bin/shiftleft/ -xvf gosec_${GOSEC_VERSION}_linux_amd64.tar.gz \\\n    && chmod +x /usr/local/bin/shiftleft/gosec \\\n    && rm gosec_${GOSEC_VERSION}_linux_amd64.tar.gz\nRUN curl -f -LO \"https://github.com/koalaman/shellcheck/releases/download/v${SHELLCHECK_VERSION}/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\" \\\n    && tar -C /tmp/ -xvf shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz \\\n    && cp /tmp/shellcheck-v${SHELLCHECK_VERSION}/shellcheck /usr/local/bin/shiftleft/shellcheck \\\n    && chmod +x /usr/local/bin/shiftleft/shellcheck \\\n    && curl -f -LO \"https://github.com/dominikh/go-tools/releases/download/${SC_VERSION}/staticcheck_linux_amd64.tar.gz\" \\\n    && tar -C /tmp -xvf staticcheck_linux_amd64.tar.gz \\\n    && chmod +x /tmp/staticcheck/staticcheck \\\n    && cp /tmp/staticcheck/staticcheck /usr/local/bin/shiftleft/staticcheck \\\n    && rm staticcheck_linux_amd64.tar.gz\nRUN curl -f -L \"https://github.com/zricethezav/gitleaks/releases/download/v${GITLEAKS_VERSION}/gitleaks-linux-amd64\" -o \"/usr/local/bin/shiftleft/gitleaks\" \\\n    && chmod +x /usr/local/bin/shiftleft/gitleaks \\\n    && curl -f -L \"https://github.com/aquasecurity/tfsec/releases/download/v${TFSEC_VERSION}/tfsec-linux-amd64\" -o \"/usr/local/bin/shiftleft/tfsec\" \\\n    && chmod +x /usr/local/bin/shiftleft/tfsec \\\n    && rm shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz\nRUN curl -f -L \"https://github.com/zegl/kube-score/releases/download/v${KUBE_SCORE_VERSION}/kube-score_${KUBE_SCORE_VERSION}_linux_amd64\" -o \"/usr/local/bin/shiftleft/kube-score\" \\\n    && chmod +x /usr/local/bin/shiftleft/kube-score \\\n    && curl -f -L \"https://github.com/stedolan/jq/releases/download/jq-${JQ_VERSION}/jq-linux64\" -o \"/usr/local/bin/shiftleft/jq\" \\\n    && chmod +x /usr/local/bin/shiftleft/jq\nRUN curl -f -L \"https://github.com/detekt/detekt/releases/download/v${DETEKT_VERSION}/detekt-cli-${DETEKT_VERSION}-all.jar\" -o \"/usr/local/bin/shiftleft/detekt-cli.jar\" \\\n    && curl -f -LO \"https://github.com/controlplaneio/kubesec/releases/download/v${KUBESEC_VERSION}/kubesec_linux_amd64.tar.gz\" \\\n    && tar -C /usr/local/bin/shiftleft/ -xvf kubesec_linux_amd64.tar.gz \\\n    && rm kubesec_linux_amd64.tar.gz \\\n    && curl -f \"https://cdn.shiftleft.io/download/sl\" > /usr/local/bin/shiftleft/sl \\\n    && chmod a+rx /usr/local/bin/shiftleft/sl \\\n    && mkdir -p /opt/sl-cli \\\n    && /usr/local/bin/shiftleft/sl update csharp2cpg\n\nFROM shiftleft/scan-base-csharp as sast-scan-tools\n\nLABEL maintainer=\"ShiftLeftSecurity\" \\\n      org.label-schema.schema-version=\"1.0\" \\\n      org.label-schema.vendor=\"shiftleft\" \\\n      org.label-schema.name=\"sast-scan\" \\\n      org.label-schema.version=$CLI_VERSION \\\n      org.label-schema.license=\"GPL-3.0-or-later\" \\\n      org.label-schema.description=\"Container with various opensource static analysis security testing tools (shellcheck, gosec, tfsec, gitleaks, ...) for multiple programming languages\" \\\n      org.label-schema.url=\"https://www.shiftleft.io\" \\\n      org.label-schema.usage=\"https://github.com/ShiftLeftSecurity/sast-scan\" \\\n      org.label-schema.build-date=$BUILD_DATE \\\n      org.label-schema.vcs-url=\"https://github.com/ShiftLeftSecurity/sast-scan.git\" \\\n      org.label-schema.docker.cmd=\"docker run --rm -it --name sast-scan shiftleft/scan-csharp\"\n\nENV APP_SRC_DIR=/usr/local/src \\\n    DEPSCAN_CMD=\"/usr/local/bin/depscan\" \\\n    MVN_CMD=\"/opt/apache-maven/bin/mvn\" \\\n    PMD_CMD=\"/opt/pmd-bin/bin/run.sh pmd\" \\\n    PYTHONUNBUFFERED=1 \\\n    DOTNET_CLI_TELEMETRY_OPTOUT=1 \\\n    SHIFTLEFT_HOME=/opt/sl-cli \\\n    GO111MODULE=auto \\\n    GOARCH=amd64 \\\n    GOOS=linux \\\n    CGO_ENABLED=0 \\\n    NVD_EXCLUDE_TYPES=\"o,h\" \\\n    PATH=/usr/local/src/:${PATH}:/usr/local/go/bin:/opt/sl-cli:\n\nCOPY --from=builder /usr/local/bin/shiftleft /usr/local/bin\nCOPY --from=builder /opt/sl-cli /opt/sl-cli\nCOPY tools_config/ /usr/local/src/\nCOPY requirements.txt /usr/local/src/\n\nUSER root\n\nRUN python3 -m pip install --upgrade pip \\\n    && pip3 install --no-cache-dir wheel \\\n    && pip3 install --no-cache-dir -r /usr/local/src/requirements.txt \\\n    && npm install --no-audit --progress=false --only=production -g @appthreat/cdxgen @microsoft/rush --unsafe-perm \\\n    && microdnf clean all && npm cache clean --force;\n\nWORKDIR /app\n\nCOPY scan /usr/local/src/\nCOPY lib /usr/local/src/lib\n\nCMD [ \"python3\", \"/usr/local/src/scan\" ]\n"
}