{
  "startTime": 1674217412694,
  "endTime": 1674217413872,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG APPLICATION_NAME=\"fulfillment\"\nARG VERSION=\"0.0.1-SNAPSHOT\"\n\n# Stage 1 : Setup the build environment\nFROM gradle:6.5-jdk11 as buildenv\n\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\nCOPY settings.gradle /usr/src/app\n# copy buildscript and cache all dependencies\nCOPY build.gradle /usr/src/app\nCOPY gradle.properties /usr/src/app\n#RUN gradle --refresh-dependencies\n\n# Stage 2 : Build the application\nFROM buildenv as appbuild\n# Copy the source code.\n# This layer is recreated only when there are actual source chnages\nCOPY src /usr/src/app/src\n# build an executable fat jar\nRUN gradle clean assemble\n\n# Alternate build - using a JVM\nFROM openjdk:11-jre-slim\n# copy the generated application distribution\nCOPY --from=appbuild /usr/src/app/build/libs/fulfillment-*-all.jar /app/${APPLICATION_NAME}-${VERSION}.jar\nEXPOSE 8099\nWORKDIR /app\nENV APPLICATION_NAME=${APPLICATION_NAME}\nENV VERSION=${VERSION}\nENTRYPOINT java $JAVA_OPTS -jar /app/${APPLICATION_NAME}-${VERSION}.jar\n"
}