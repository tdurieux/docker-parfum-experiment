{
  "startTime": 1674246415159,
  "endTime": 1674246415819,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# base from official Node (Alpine LTS) image\nFROM node:lts-alpine\n\n# install simple http server for serving static content\nRUN npm install -g http-server && npm cache clean --force;\n\n# install typescript compiler\nRUN npm install -g typescript && npm cache clean --force;\n\n# install ts-node (to run/debug .ts files without manual transpiling)\nRUN npm install -g ts-node && npm cache clean --force;\n\n# set /app as working directory (in development mode for mounting source code)\nWORKDIR /app\n\n# override default CMD for image (\"node\"): launch the shell\nCMD sh\n\n# Listen on ports\nEXPOSE 80 3000\n\n# Add label for GitHub container registry\nLABEL org.opencontainers.image.description='An initial development image based on the official \\\n    Node.js (on Alpine LTS) image, and further configured with a HTTP server, TypeScript compiler, \\\n    and ts-node. This is merely to provide an execution sandbox and does not contain source files.'\n"
}