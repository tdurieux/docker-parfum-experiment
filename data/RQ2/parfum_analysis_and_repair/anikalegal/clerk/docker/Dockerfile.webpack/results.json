{
  "startTime": 1674250308355,
  "endTime": 1674250309424,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 14,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 12
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:focal\n\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND noninteractive\nENV TIMEZONE Australia/Melbourne\n\nWORKDIR /frontend\n\nRUN echo \"Updating apt sources.\" && apt-get -qq update\n\n# Install generic useful stuff.\n# wget: for HTTP requests, downloading, debugging\nRUN echo \"Installing generic stuff.\" && \\\n    apt-get -qq -y --no-install-recommends install \\\n    wget \\\n    xz-utils && rm -rf /var/lib/apt/lists/*;\n\n# Install Node.\nENV NODE_VERSION=12.18.1\nRUN wget -nv -O - \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz\" | tar -Jx -C /opt/ -f -\nRUN ln -s \"/opt/node-v${NODE_VERSION}-linux-x64/bin/node\" /usr/local/bin/\nRUN ln -s \"/opt/node-v${NODE_VERSION}-linux-x64/bin/npm\" /usr/local/bin/\n\n\n# Install Node modules, build Webpack for prod.\nCOPY frontend/package.json .\nCOPY frontend/package-lock.json .\nRUN echo \"Installing Node modules.\" && \\\n    npm install --silent && npm cache clean --force;\n\n# Mount the codebase\nADD frontend /frontend\n\n# Build webpack from production\nRUN echo \"Building Webpack.\" && \\ \n    npm run build\n"
}