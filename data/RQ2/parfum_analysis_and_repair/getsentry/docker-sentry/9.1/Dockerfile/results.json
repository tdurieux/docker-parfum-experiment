{
  "startTime": 1674252353525,
  "endTime": 1674252354877,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 27,
        "columnEnd": 36
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 27,
        "columnEnd": 36
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 100,
        "lineEnd": 100,
        "columnStart": 27,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 7,
        "columnEnd": 54
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 115,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 6,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 6,
        "columnEnd": 83
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 107,
        "lineEnd": 107,
        "columnStart": 6,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:2.7.16-slim-stretch\n\n# add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r sentry && useradd -r -m -g sentry sentry\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        gcc \\\n        git \\\n        libffi-dev \\\n        libjpeg-dev \\\n        libmaxminddb-dev \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxmlsec1-dev \\\n        libxslt-dev \\\n        libyaml-dev \\\n        pkg-config \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Sane defaults for pip\nENV PIP_NO_CACHE_DIR off\nENV PIP_DISABLE_PIP_VERSION_CHECK on\n\n# grab gosu for easy step-down from root\nRUN set -x \\\n    && export GOSU_VERSION=1.11 \\\n    && fetchDeps=\" \\\n        dirmngr \\\n        gnupg \\\n        wget \\\n    \" \\\n    && apt-get update && apt-get install -y --no-install-recommends $fetchDeps && rm -rf /var/lib/apt/lists/* \\\n    && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\" \\\n    && wget -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && for key in \\\n      B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n    do \\\n      gpg --batch --keyserver hkp://ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n    done \\\n    && gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu \\\n    && gpgconf --kill all \\\n    && rm -r \"$GNUPGHOME\" /usr/local/bin/gosu.asc \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true \\\n    && apt-get purge -y --auto-remove $fetchDeps && rm -rf -d\n\n# grab tini for signal processing and zombie killing\nRUN set -x \\\n    && export TINI_VERSION=0.18.0 \\\n    && fetchDeps=\" \\\n        dirmngr \\\n        gnupg \\\n        wget \\\n    \" \\\n    && apt-get update && apt-get install -y --no-install-recommends $fetchDeps && rm -rf /var/lib/apt/lists/* \\\n    && wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini\" \\\n    && wget -O /usr/local/bin/tini.asc \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && for key in \\\n      595E85A6B1B4779EA4DAAEC70B588DFF0527A9B7; \\\n    do \\\n      gpg --batch --keyserver hkp://ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n    done \\\n    && gpg --batch --verify /usr/local/bin/tini.asc /usr/local/bin/tini \\\n    && gpgconf --kill all \\\n    && rm -r \"$GNUPGHOME\" /usr/local/bin/tini.asc \\\n    && chmod +x /usr/local/bin/tini \\\n    && tini -h \\\n&& apt-get purge -y --auto-remove $fetchDeps && rm -rf -d\n\n# Support for RabbitMQ and GeoIP\nRUN set -x \\\n    && apt-get update && apt-get install -y --no-install-recommends make && rm -rf /var/lib/apt/lists/* \\\n    && pip install --no-cache-dir librabbitmq==1.6.1 maxminddb==1.4.1 \\\n    && python -c 'import librabbitmq' \\\n    # Fully verify that the C extension is correctly installed, it unfortunately\n    # requires a full check into maxminddb.extension.Reader\n    && python -c 'import maxminddb.extension; maxminddb.extension.Reader' \\\n    && apt-get purge -y --auto-remove make\n\nENV SENTRY_VERSION 9.1.2\n\nRUN set -x \\\n    && buildDeps=\" \\\n        g++ \\\n        dirmngr \\\n        gnupg \\\n        wget \\\n    \" \\\n    && apt-get update && apt-get install -y --no-install-recommends $buildDeps && rm -rf /var/lib/apt/lists/* \\\n    && mkdir -p /usr/src/sentry \\\n    && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl\" \\\n    && wget -O /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc\" \\\n    && wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl\" \\\n    && wget -O /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc \"https://github.com/getsentry/sentry/releases/download/${SENTRY_VERSION}/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc\" \\\n    && export GNUPGHOME=\"$(mktemp -d)\" \\\n    && for key in \\\n      D8749766A66DD714236A932C3B2D400CE5BBCA60 \\\n      70DBC4D958026B46032EAB75A17EE621C962DE46 \\\n      4EBA9A94CC7DC65988662672C2F03C406631065D; \\\n    do \\\n      gpg --batch --keyserver hkp://ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n      gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n    done \\\n    && gpg --batch --verify /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl.asc /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \\\n    && gpg --batch --verify /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl.asc /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \\\n    && gpgconf --kill all \\\n    && pip install --no-cache-dir \\\n        /usr/src/sentry/sentry-${SENTRY_VERSION}-py27-none-any.whl \\\n        /usr/src/sentry/sentry_plugins-${SENTRY_VERSION}-py2.py3-none-any.whl \\\n    && sentry --help \\\n    && sentry plugins list \\\n    && rm -r \"$GNUPGHOME\" /usr/src/sentry \\\n    && apt-get purge -y --auto-remove $buildDeps && rm -rf -d\n\nENV SENTRY_CONF=/etc/sentry \\\n    SENTRY_FILESTORE_DIR=/var/lib/sentry/files\n\nRUN mkdir -p $SENTRY_CONF && mkdir -p $SENTRY_FILESTORE_DIR\n\nCOPY sentry.conf.py /etc/sentry/\nCOPY config.yml /etc/sentry/\n\nCOPY docker-entrypoint.sh /entrypoint.sh\n\nEXPOSE 9000\nVOLUME /var/lib/sentry/files\n\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"run\", \"web\"]\n"
}