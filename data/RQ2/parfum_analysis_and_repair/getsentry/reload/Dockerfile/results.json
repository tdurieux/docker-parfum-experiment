{
  "startTime": 1674253575805,
  "endTime": 1674253576612,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim-buster\n\nRUN groupadd -r reload && useradd -r -g reload reload\n\nENV PIP_NO_CACHE_DIR off\nENV PIP_DISABLE_PIP_VERSION_CHECK on\n\nENV GOSU_VERSION=1.12 \\\n    GOSU_SHA256=0f25a21cf64e58078057adc78f38705163c1d564a959ff30a891c31917011a54 \\\n    TINI_VERSION=0.19.0 \\\n    TINI_SHA256=93dcc18adc78c65a028a84799ecf8ad40c936fdfc5f2a57b1acda5a8117fa82c\n\nRUN set -x \\\n     && fetchDeps=\" \\\n        wget \\\n    \" \\\n    && apt-get update && apt-get install -y --no-install-recommends $fetchDeps && rm -rf /var/lib/apt/lists/* \\\n    # grab gosu for easy step-down from root\n    && wget -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-amd64\" \\\n    && echo \"$GOSU_SHA256  /usr/local/bin/gosu\" | sha256sum --check --status \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true \\\n    # grab tini for signal processing and zombie killing\n    && wget -O /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v$TINI_VERSION/tini-amd64\" \\\n    && echo \"$TINI_SHA256  /usr/local/bin/tini\" | sha256sum --check --status \\\n    && chmod +x /usr/local/bin/tini \\\n    && tini -h \\\n    && apt-get purge -y --auto-remove $fetchDeps\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        libmaxminddb-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir -p /usr/src/reload && rm -rf /usr/src/reload\nWORKDIR /usr/src/reload\n\nCOPY requirements.txt /usr/src/reload\n\nRUN set -ex \\\n    \\\n    && buildDeps=' \\\n        gcc \\\n        libc6-dev \\\n    ' \\\n    && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n    \\\n    && pip install --no-cache-dir -r requirements.txt \\\n    \\\n    && apt-get purge -y --auto-remove $buildDeps\n\nCOPY reload_app /usr/src/reload/reload_app\nCOPY docker-entrypoint.sh /usr/src/reload\n\nEXPOSE 8000\n\nENTRYPOINT [\"/usr/src/reload/docker-entrypoint.sh\"]\nCMD [ \"mywsgi\", \"reload_app.wsgi:application\", \"0.0.0.0:8000\" ]\n"
}