{
  "startTime": 1674249789262,
  "endTime": 1674249790707,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 139
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 112
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 132
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 145
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 23
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 77
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 7,
        "columnEnd": 79
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 85
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 7,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8.12\n\nENV PIP_NO_CACHE_DIR off\nENV PIP_DISABLE_PIP_VERSION_CHECK on\nENV PYTHONUNBUFFERED 1\nENV PATH=\"/usr/src/app/bin:${PATH}:/opt/google-cloud-sdk/bin\"\n\n# add our user and group first to make sure their IDs get assigned consistently\nRUN groupadd -r freight && useradd -r -m -g freight freight\n\n# grab gosu for easy step-down from root\nRUN set -x \\\n    && GOSU_VERSION=1.11 \\\n    && GOSU_SHA256=0b843df6d86e270c5b0f5cbd3c326a04e18f4b7f9b8457fa497b0454c4b138d7 \\\n    && curl -f -sL -o /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-$(dpkg --print-architecture)\" \\\n    && echo \"${GOSU_SHA256}  /usr/local/bin/gosu\" | sha256sum --check --status \\\n    && chmod +x /usr/local/bin/gosu \\\n    && gosu nobody true\n\n# grab tini for signal processing and zombie killing\nRUN set -x \\\n    && TINI_VERSION=0.18.0 \\\n    && TINI_SHA256=12d20136605531b09a2c2dac02ccee85e1b874eb322ef6baf7561cd93f93c855 \\\n    && curl -f -sL -o /usr/local/bin/tini \"https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini\" \\\n    && echo \"${TINI_SHA256}  /usr/local/bin/tini\" | sha256sum --check --status \\\n    && chmod +x /usr/local/bin/tini \\\n    && tini -h\n\nRUN set -x \\\n    && NODE_VERSION=8.15.1 \\\n    && NODE_SHA256=16e203f2440cffe90522f1e1855d5d7e2e658e759057db070a3dafda445d6d1f \\\n    && curl -f -sL -o \"node-linux-x64.tar.gz\" \"https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.gz\" \\\n    && echo \"${NODE_SHA256}  node-linux-x64.tar.gz\" | sha256sum --check --status \\\n    && tar -xzf \"node-linux-x64.tar.gz\" -C /usr/local --strip-components=1 && rm \"node-linux-x64.tar.gz\"\n\n# Install sentry-cli so the builds can register deploys, upload sourcemaps, etc.\nRUN set -x \\\n    && SENTRY_CLI_VERSION=1.69.1 \\\n    && SENTRY_CLI_SHA256=4bed363e76e853aa1855b228b73b1e13a6b71209ce699bb0a117f98d6cfd8962 \\\n    && curl -f -sL -o /tmp/sentry-cli \"https://github.com/getsentry/sentry-cli/releases/download/${SENTRY_CLI_VERSION}/sentry-cli-Linux-x86_64\" \\\n    && echo \"${SENTRY_CLI_SHA256}  /tmp/sentry-cli\" | sha256sum --check --status \\\n    && chmod +x /tmp/sentry-cli \\\n    && mv /tmp/sentry-cli /usr/local/bin\n\n# Some builds, like Relay, rely on docker's cli for their sentry releases.\nRUN set -x \\\n    && DOCKER_CLI_VERSION=20.10.16 \\\n    && DOCKER_CLI_SHA256=96588db31509c2a3c89eb68107b9bb9a0e6b1c9b5791e5c18475680d5074b40f \\\n    && curl -f -sL -o /usr/local/bin/docker \"https://storage.googleapis.com/sentry-dev-infra-build-assets/docker-${DOCKER_CLI_VERSION}\" \\\n    && echo \"${DOCKER_CLI_SHA256}  /usr/local/bin/docker\" | sha256sum --check --status \\\n    && chmod +x /usr/local/bin/docker \\\n    && docker -v\n\nRUN set -x \\\n    && GCLOUD_VERSION=382.0.0 \\\n    && GCLOUD_SHA256=335e5a2b4099505372914acfccbb978cf9d4efd8047bda59f910c26daefd554e \\\n    && curl -f -sL -o gcloud.tgz \"https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${GCLOUD_VERSION}-linux-x86_64.tar.gz\" \\\n    && echo \"${GCLOUD_SHA256}  *gcloud.tgz\" | sha256sum --check --status \\\n    && tar -zxvf gcloud.tgz -C /opt \\\n    && rm gcloud.tgz\n\nWORKDIR /usr/src/app\n\nCOPY package.json .\nRUN yarn install && yarn cache clean --all\n\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . .\nRUN node_modules/.bin/webpack -p \\\n    && pip install --no-cache-dir -e .\n\nENV WORKSPACE_ROOT /workspace\nRUN mkdir -p $WORKSPACE_ROOT\n\nEXPOSE 5000\nVOLUME $WORKSPACE_ROOT\n\nENTRYPOINT [\"/usr/src/app/docker-entrypoint.sh\"]\nCMD [\"web\", \"--no-debug\", \"--addr\", \"0.0.0.0:5000\"]\n"
}