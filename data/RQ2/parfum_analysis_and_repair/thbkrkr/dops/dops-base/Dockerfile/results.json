{
  "startTime": 1674253478837,
  "endTime": 1674253479430,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##{\n##  \"name\": \"krkr/dops-base\",\n##}\nFROM krkr/docker-toolbox\n\nENV ANSIBLE_VERSION=2.7.1.0 \\\n    ANSIBLE_HOST_KEY_CHECKING=False\nRUN apk --update --no-cache add build-base libffi-dev \\\n    openssl-dev openssh-client \\\n    python-dev py-pip py-crypto py-jinja2 && \\\n    pip install --no-cache-dir ansible==${ANSIBLE_VERSION} && \\\n    apk del build-base openssl-dev libffi-dev python-dev\n\nENV TERRAFORM_VERSION 0.11.10\nRUN apk --update --no-cache add ca-certificates && \\\n    curl -f -sSkL \"https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\" > /terraform.zip && \\\n    unzip /terraform.zip && rm /terraform.zip && \\\n    mv terraform* /usr/local/bin && \\\n    chmod +x /usr/local/bin/terraform*\n\nENV PACKER_VERSION 1.3.2\nRUN wget -q \"https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip\" && \\\n    unzip packer_${PACKER_VERSION}_linux_amd64.zip && \\\n    rm packer_${PACKER_VERSION}_linux_amd64.zip && \\\n    mv packer /usr/local/bin\n\nENV KUBECTL_VERSION 1.12.2\nRUN curl -f -sSL \"https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl\" \\\n    > /usr/local/bin/kubectl && chmod +x /usr/local/bin/kubectl\n\nENV HELM_VERSION 2.11.0\nRUN wget -q \"https://kubernetes-helm.storage.googleapis.com/helm-v${HELM_VERSION}-linux-amd64.tar.gz\" && \\\n    tar xvzf helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n    rm helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n    mv linux-amd64/helm /usr/local/bin && \\\n    rm -rf linux-amd64\n\nRUN apk --no-cache add \\\n      python-dev py-pip py-setuptools \\\n      ca-certificates gcc musl-dev linux-headers \\\n  && pip install --upgrade --no-cache-dir pip setuptools python-openstackclient==3.16.1 \\\n  && apk del gcc musl-dev linux-headers"
}