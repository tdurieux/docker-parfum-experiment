{
  "startTime": 1674220234710,
  "endTime": 1674220235734,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim\nLABEL maintainer=\"Orchest B.V. https://www.orchest.io\"\n\nRUN apt-get update \\\n    # Refresh SSL certificates\n    && update-ca-certificates --fresh \\\n    && apt-get install -yq --no-install-recommends curl git jq ca-certificates \\\n    # Install nodejs for Jupyter extensions. \\\n    && curl -f -sL https://deb.nodesource.com/setup_14.x | bash - \\\n    && apt-get install -yq --no-install-recommends nodejs \\\n    # Swap dash for bash to get more full fledged shell by default in\n    # JupyterLab terminal.\n    && ln -fs /bin/bash /bin/sh \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Build JupyterLab, pre-install thrid-party extensions and our custom\n# extensions.\nCOPY ./requirements.txt .\nARG extension_dir=/jupyterlab-orchest-build\nARG pip_jupyter_extension_dir=/usr/local/share/jupyter/lab/extensions\nRUN pip install --no-cache-dir pip --upgrade \\\n    # JupyterLab and possible extensions need to be installed first so\n    # that they are included in the build.\n    && pip install --no-cache-dir --no-cache -r requirements.txt \\\n    && git clone https://github.com/orchest/visual-tags.git /jupyter-extensions/visual-tags \\\n    && git clone https://github.com/orchest/orchest-integration.git /jupyter-extensions/orchest-integration \\\n    && jupyter labextension install /jupyter-extensions/visual-tags \\\n        --no-build \\\n        --BaseExtensionApp.app_dir=$extension_dir \\\n    && jupyter labextension install /jupyter-extensions/orchest-integration \\\n        --no-build \\\n        --BaseExtensionApp.app_dir=$extension_dir \\\n    && cp -rfT $pip_jupyter_extension_dir $extension_dir/extensions \\\n    && jupyter lab build --dev-build=False --LabBuildApp.app_dir=$extension_dir \\\n    && jupyter lab clean --LabCleanApp.app_dir=$extension_dir\n\n# Display warning message when running `pip` or `pip3` in the Jupyter\n# terminal.\nCOPY patch-pip.sh pip-warning.py /\nRUN bash /patch-pip.sh\n\nCOPY ./jupyter_server_config.py /root/.jupyter/jupyter_server_config.py\n\n# Hardcoded /project-dir because Python config can't be injected into Dockerfile\nWORKDIR /project-dir\n\nARG ORCHEST_VERSION\nENV ORCHEST_VERSION=${ORCHEST_VERSION}\n\nCOPY start.sh /\nENTRYPOINT [ \"/start.sh\" ]\n"
}