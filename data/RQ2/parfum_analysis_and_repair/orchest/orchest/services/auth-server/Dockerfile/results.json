{
  "startTime": 1674256165705,
  "endTime": 1674256166529,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 63,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 63,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 63,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 66,
        "columnEnd": 115
      }
    }
  ],
  "repairedDockerfile": "FROM tiangolo/meinheld-gunicorn-flask:python3.8\nLABEL maintainer=\"Orchest B.V. https://www.orchest.io\"\n\n# Refresh SSL certificates\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y ca-certificates netcat \\\n  && update-ca-certificates --fresh && rm -rf /var/lib/apt/lists/*;\n\n\n# Install nodejs for frontend client build\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash - && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# Get all Python requirements in place and install them.\nCOPY ./requirements.txt /orchest/services/auth-server/\nCOPY ./lib/python /orchest/lib/python\nWORKDIR /orchest/services/auth-server\nRUN pip3 install --no-cache-dir -r requirements.txt\n\n# Get the internal JS library\nCOPY ./client ./client\nCOPY ./lib/javascript /orchest/lib/javascript\nCOPY ./lib/design-system /orchest/lib/design-system\n\n# PNPM files\nCOPY ./pnpm_files/* /orchest/\n\n# Compile front-end code with npx and compile style.\nWORKDIR /orchest\n\nRUN npm run setup\nRUN pnpm i && \\\n  pnpm run build --stream --filter \"@orchest/client-auth\" && \\\n  # Clean node_modules to reduce image size\n  find . -name 'node_modules' -type d -prune -exec rm -rf '{}' +\n\n# Application files.\nWORKDIR /orchest/services/auth-server\nCOPY ./app ./app\n\nWORKDIR /orchest/services/auth-server/app\nCOPY ./start.sh /\n\n# Required by base image.\nENV GUNICORN_CONF /orchest/services/auth-server/app/gunicorn_conf.py\nENV APP_MODULE \"main:app\"\nARG ORCHEST_VERSION\nENV ORCHEST_VERSION=${ORCHEST_VERSION}\n"
}