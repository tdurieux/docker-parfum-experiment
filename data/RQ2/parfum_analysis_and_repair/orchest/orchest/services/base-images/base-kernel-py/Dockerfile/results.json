{
  "startTime": 1674248507173,
  "endTime": 1674248508717,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Ubuntu 20.04.1 LTS Focal\nFROM jupyter/base-notebook:2022-03-09\nLABEL maintainer=\"Orchest B.V. https://www.orchest.io\"\n\nUSER root\n\n# defailt-libmysqlclient-dev : Orchest dependency\n# libkrb5-dev                : Enterprise Gateway requirement\nRUN apt-get update \\\n    && apt-get install -yq --no-install-recommends default-libmysqlclient-dev libkrb5-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN passwd -d $NB_USER \\\n    # Enable `sudo` for the $NB_USER by default.\n    && echo \"$NB_USER   ALL=(ALL)   NOPASSWD:ALL\" | tee /etc/sudoers.d/$NB_USER \\\n    # Persist the value of `DEBIAN_FRONTEND` when running with `sudo`,\n    # so that installing packages works as expected.\n    && echo \"Defaults env_keep += \\\"DEBIAN_FRONTEND\\\"\" | tee --append /etc/sudoers.d/$NB_USER \\\n    # All files in this directory should be mode 0440.\n    && chmod 0440 /etc/sudoers.d/$NB_USER\n\n# Get Enterprise Gateway kernel files.\nWORKDIR /usr/local/bin\nRUN wget https://github.com/jupyter-server/enterprise_gateway/releases/download/v2.5.2/jupyter_enterprise_gateway_kernel_image_files-2.5.2.tar.gz -O kernel_image_files.tar.gz \\\n    && tar -xf kernel_image_files.tar.gz \\\n    && rm -rf kernel_image_files.tar.gz kernel-launchers/scala \\\n    && chown jovyan:users /usr/local/bin/bootstrap-kernel.sh \\\n    && chmod 0755 /usr/local/bin/bootstrap-kernel.sh \\\n    && chown -R jovyan:users /usr/local/bin/kernel-launchers\n\n# Install Enterprise Gateway requirements.\nRUN mamba install --quiet --yes \\\n    cffi \\\n    ipykernel \\\n    ipython \\\n    'jupyter_client<7' \\\n    future \\\n    pycryptodomex && \\\n    mamba clean --all -f -y && \\\n    fix-permissions $CONDA_DIR && \\\n    fix-permissions /home/$NB_USER\n\n# Get all Orchest requirements in place.\nCOPY ./runnable-shared/runner/requirements* /orchest/services/base-images/runnable-shared/runner/\nCOPY ./lib/python /orchest/lib/python\nCOPY ./orchest-sdk /orchest/orchest-sdk\nRUN chown $NB_USER -R /orchest/orchest-sdk \\\n    && chown $NB_USER -R /orchest/lib\n\nUSER $NB_USER\n\nWORKDIR /orchest/services/base-images/runnable-shared/runner\n\n# Install user requirements to be able to use Orchest. Install them in\n# the `base` conda environment as it is default environment.\n# NOTE: Use `pip` so we can install from local sources.\nRUN pip install --no-cache-dir -r requirements-user.txt --no-cache\n\n# Install Orchest dependencies in our own environment so they are\n# completely isolated from user dependencies. Use a venv instead\n# of conda environment because it is much smaller.\nRUN python -m venv /home/$NB_USER/venv \\\n    && source /home/$NB_USER/venv/bin/activate \\\n    && pip install --no-cache-dir -r requirements.txt --no-cache \\\n    && deactivate\n\n# Empty configuration file for kernel initialization\nRUN touch /home/jovyan/.orchestrc\n\n# Copy application files as late as possible to avoid cache busting.\nCOPY ./runnable-shared/runner /orchest/services/base-images/runnable-shared/runner\n\n# This path is searched first to locate kernels. Without this variable\n# Jupyter will search inside the orchestdependencies environment first\n# and end up using the wrong executable to start the kernel.\nENV JUPYTER_PATH=/opt/conda/share/jupyter\nENV HOME=/home/$NB_USER\nENV BASH_ENV=/home/jovyan/.orchestrc\n\n# Orchest related environment variable that can be set to specify the\n# conda environment to use to start Jupyter kernels.\nENV CONDA_ENV=\"base\"\n\n# Set a default renderer for plotly that actually renders in JupyterLab.\nENV PLOTLY_RENDERER=\"iframe\"\n\n# Required by the Enterprise Gateway to launch an ipykernel.\nENV KERNEL_LANGUAGE=\"python\"\n\nARG ORCHEST_VERSION\nENV ORCHEST_VERSION=${ORCHEST_VERSION}\n\nCOPY ./runnable-shared/bootscript.sh /orchest/bootscript.sh\nCMD [ \"/orchest/bootscript.sh\" ]\n"
}