{
  "startTime": 1674253892368,
  "endTime": 1674253892676,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 1,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##########################\n# Compile stage\nFROM golang:1.18.2 AS build-env\nLABEL maintainer=\"Orchest B.V. https://www.orchest.io\"\n\nRUN apt-get update && \\\n\tcurl -f -L https://get.helm.sh/helm-v3.8.0-linux-amd64.tar.gz | \\\n\ttar -zxv && \\\n\tmv linux-amd64/helm /usr/local/bin/helm\n\nARG ORCHEST_VERSION\nENV ORCHEST_VERSION=${ORCHEST_VERSION}\t\n\nENV GO111MODULE on\nWORKDIR /go/src/github.com/orchest/orchest/services/orchest-controller\nADD . .\n\nRUN\tmake controller\n##########################\n# Final stage\nFROM alpine:3.14.6\n\n# Allow delve to run on Alpine based containers.\nRUN apk add --no-cache libc6-compat\n\nWORKDIR /usr/bin\n\nCOPY --from=build-env /usr/local/bin/helm /usr/local/bin/helm\n\nCOPY --from=build-env /go/src/github.com/orchest/orchest/services/orchest-controller/bin/controller .\n\nCOPY ./deploy /deploy\n\n# Run the controller\nENTRYPOINT [\"controller\"]\n"
}