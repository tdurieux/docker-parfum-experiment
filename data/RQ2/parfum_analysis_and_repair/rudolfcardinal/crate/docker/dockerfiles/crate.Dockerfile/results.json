{
  "startTime": 1674248952624,
  "endTime": 1674248953909,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 175,
        "lineEnd": 175,
        "columnStart": 7,
        "columnEnd": 61
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 176,
        "lineEnd": 176,
        "columnStart": 7,
        "columnEnd": 114
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# docker/dockerfiles/crate.Dockerfile\n#\n# Docker image that provides:\n#\n# - CRATE\n# - database drivers\n# - third-party text extraction tools\n# - GATE\n#\n# Directory structure in container:\n#\n#   /crate              All CRATE code/binaries.\n#       /cfg            Config files are mounted here.\n#       /gate           GATE program\n#       /src            Source code for CRATE.\n#       /venv           Python 3 virtual environment.\n#           /bin        Main CRATE executables live here.\n\n\n# -----------------------------------------------------------------------------\n# FROM: Base image\n# -----------------------------------------------------------------------------\n\nFROM python:3.7-slim-buster\n# This is a version of Debian 10 (see \"cat /etc/debian_version\").\n\n\n# -----------------------------------------------------------------------------\n# LABEL: metadata\n# -----------------------------------------------------------------------------\n# https://docs.docker.com/engine/reference/builder/#label\n\n\nLABEL description=\"See https://crateanon.readthedocs.io/\"\nLABEL maintainer=\"Rudolf Cardinal <rudolf@pobox.com>\"\n\n\n# -----------------------------------------------------------------------------\n# Permissions\n# -----------------------------------------------------------------------------\n# https://vsupalov.com/docker-shared-permissions/\n\nARG USER_ID\nRUN adduser --disabled-password --gecos '' --uid $USER_ID crate\n\n\n# -----------------------------------------------------------------------------\n# ADD: files to copy\n# -----------------------------------------------------------------------------\n# - Syntax: ADD <host_file_spec> <container_dest_dir>\n# - The host file spec is relative to the context (and can't go \"above\" it).\n# - This docker file lives in the \"docker/dockerfiles\" directory within\n#   the CRATE source, so we expect Docker to be told (externally -- see e.g.\n#   the Docker Compose file) that the context is a higher directory.\n#   That is the directory containing \"setup.py\" and therefore the installation\n#   directory for our Python package.\n# - So in short, here we refer to the context as \".\".\n\nADD . /crate/src\n\n\n# -----------------------------------------------------------------------------\n# COPY: can copy from other Docker images\n# -----------------------------------------------------------------------------\n# - https://docs.docker.com/engine/reference/builder/#copy\n# - https://stackoverflow.com/questions/24958140/what-is-the-difference-between-the-copy-and-add-commands-in-a-dockerfile\n\n\n# -----------------------------------------------------------------------------\n# WORKDIR: Set working directory on container.\n# -----------------------------------------------------------------------------\n# Shouldn't really be necessary.\n\nWORKDIR /crate\n\n\n# -----------------------------------------------------------------------------\n# RUN: run a command.\n# -----------------------------------------------------------------------------\n# - mmh3 needs g++ as well as gcc.\n#\n# - pdftotext is part of poppler-utils.\n#\n# - unixodbc-dev is required for the Python pyodbc package (or: missing sql.h).\n#\n# - Java for GATE (but default-jdk didn't work)...\n#   ... in fact the problem is that you need\n#   mkdir -p /usr/share/man/man1 /usr/share/man/man2\n#   https://stackoverflow.com/questions/61815233/install-java-runtime-in-debian-based-docker-image\n#\n# - GATE installation is via izpack:\n#   https://github.com/GateNLP/gate-core/blob/master/distro/src/main/izpack/install.xml\n#   https://izpack.atlassian.net/wiki/spaces/IZPACK/pages/491674/Installer+Runtime+Options\n#   https://izpack.atlassian.net/wiki/spaces/IZPACK/pages/42270722/Mixed+Installation+Mode+Using+Variable+Defaults\n#   https://stackoverflow.com/questions/6519571/izpack-installer-options-auto\n#   https://groups.google.com/forum/#!topic/izpack-user/ecp1U8CAOT8\n#   ... the XML file determines the installation path.\n#\n# - Microsoft ODBC driver for SQL Server (Linux):\n#   https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server\n#   - gnupg2 is required for the curl step.\n#   - mssql-tools brings sqlcmd:\n#     https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility\n#\n# - Testing KCL pharmacotherapy app:\n#\n#   export NLPPROGDIR=/crate/venv/lib/python3.7/site-packages/crate_anon/nlp_manager/compiled_nlp_classes/\n#   export GATEDIR=/crate/gate\n#   export GATE_PHARMACOTHERAPY_DIR=/crate/brc-gate-pharmacotherapy\n#   export PLUGINFILE=/crate/src/crate_anon/nlp_manager/specimen_gate_plugin_file.ini\n#   export TERMINATOR=END\n#   java -classpath \"${NLPPROGDIR}:${GATEDIR}/bin/gate.jar:${GATEDIR}/lib/*\" -Dgate.home=\"${GATEDIR}\" CrateGatePipeline --gate_app \"${GATE_PHARMACOTHERAPY_DIR}/application.xgapp\" --include_set Output --annotation Prescription --input_terminator \"${TERMINATOR}\" --output_terminator \"${TERMINATOR}\" --suppress_gate_stdout --pluginfile \"${PLUGINFILE}\"\n#\n# - For KConnect/Bio-YODIE:\n\n#   - ant is required by plugins/compilePlugins.sh, from Bio-YODIE.\n#   - see https://github.com/GateNLP/bio-yodie-resource-prep\n#   - UMLS: separate licensing\n\nRUN echo \"===============================================================================\" \\\n    && echo \"Setting environment variables\" \\\n    && echo \"===============================================================================\" \\\n    && export CRATE_ROOT=/crate \\\n    && export CRATE_SRC=\"${CRATE_ROOT}/src\" \\\n    && export CRATE_VENV=\"${CRATE_ROOT}/venv\" \\\n    && export CRATE_VENV_BIN=\"${CRATE_VENV}/bin\" \\\n    && export CRATE_PACKAGE_ROOT=\"${CRATE_VENV}/lib/python3.7/site-packages/crate_anon\" \\\n    && export CRATE_GATE_PLUGIN_FILE=${CRATE_PACKAGE_ROOT}/nlp_manager/specimen_gate_plugin_file.ini \\\n    && export BIOYODIE_DIR=\"${CRATE_ROOT}/bioyodie\" \\\n    && export GATE_HOME=\"${CRATE_ROOT}/gate\" \\\n    && export KCL_LEWY_BODY_DIAGNOSIS_DIR=\"${CRATE_ROOT}/kcl_lewy_body_dementia\" \\\n    && export KCL_PHARMACOTHERAPY_PARENT_DIR=\"${CRATE_ROOT}/kcl_pharmacotherapy\" \\\n    && export KCL_PHARMACOTHERAPY_DIR=\"${KCL_PHARMACOTHERAPY_PARENT_DIR}/brc-gate-pharmacotherapy\" \\\n    && export TMPDIR=\"/tmp/crate_tmp\" \\\n    && mkdir -p \"${TMPDIR}\" \\\n    \\\n    && echo \"===============================================================================\" \\\n    && echo \"OS packages, basic tools, and database drivers\" \\\n    && echo \"===============================================================================\" \\\n    \\\n    && echo \"- Updating package information...\" \\\n    && apt-get update \\\n    && echo \"- Installing operating system packages...\" \\\n    && mkdir -p /usr/share/man/man1 /usr/share/man/man2 \\\n    && apt-get install -y --no-install-recommends \\\n        ant \\\n        curl \\\n        g++ \\\n        gcc \\\n        gdebi \\\n        git \\\n        gnupg2 \\\n        unzip \\\n        wget \\\n        \\\n        wait-for-it \\\n        \\\n        antiword \\\n        freetds-bin \\\n        freetds-dev \\\n        graphviz \\\n        libgraphviz-dev \\\n        libmariadbclient-dev \\\n        libpq-dev \\\n        libxml2-dev \\\n        libxslt1-dev \\\n        openjdk-11-jdk \\\n        openjdk-11-jre \\\n        poppler-utils \\\n        tdsodbc \\\n        unrtf \\\n        wbritish \\\n    \\\n    && echo \"- Adding repositories...\" \\\n    && echo \"  * Microsoft ODBC driver for SQL Server\" \\\n    && curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add - \\\n    && curl -f https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list \\\n    && echo \"- Updating package information again...\" \\\n    && apt-get update \\\n\n    && echo \"- Microsoft ODBC Driver for SQL Server (Linux)\" \\\n    && ACCEPT_EULA=Y apt-get install -y --no-install-recommends \\\n        msodbcsql17 \\\n        mssql-tools \\\n        libgssapi-krb5-2 \\\n        unixodbc unixodbc-dev \\\n    && echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bash_profile \\\n    && echo 'export PATH=\"$PATH:/opt/mssql-tools/bin\"' >> ~/.bashrc \\\n\n    && echo \"- wkhtmltopdf: Fetching wkhtmltopdf with patched Qt (~14 Mb)...\" \\\n    && wget \\\n        --progress=dot:giga \\\n        -O \"${TMPDIR}/wkhtmltopdf.deb\" \\\n        https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.5/wkhtmltox_0.12.5-1.stretch_amd64.deb \\\n    && echo \"- wkhtmltopdf: Installing wkhtmltopdf...\" \\\n    && gdebi --non-interactive \"${TMPDIR}/wkhtmltopdf.deb\" \\\n\n    && echo \"===============================================================================\" \\\n    && echo \"Third-party NLP tools\" \\\n    && echo \"===============================================================================\" \\\n    && echo \"- GATE...\" \\\n    && wget \\\n        --progress=dot:giga \\\n        -O \"${TMPDIR}/gate-installer.jar\" \\\n        https://github.com/GateNLP/gate-core/releases/download/v8.6.1/gate-developer-8.6.1-installer.jar \\\n    && java -jar \"${TMPDIR}/gate-installer.jar\" \\\n        \"${CRATE_SRC}/docker/dockerfiles/gate_auto_install.xml\" \\\n\n    && echo \"- KCL BRC GATE Pharmacotherapy app...\" \\\n    && wget \\\n        --progress=dot:giga \\\n        -O \"${TMPDIR}/brc-gate-pharmacotherapy.zip\" \\\n        https://github.com/KHP-Informatics/brc-gate-pharmacotherapy/releases/download/1.1/brc-gate-pharmacotherapy.zip \\\n    && unzip \"${TMPDIR}/brc-gate-pharmacotherapy.zip\" -d \"${KCL_PHARMACOTHERAPY_PARENT_DIR}\" \\\n\n    && echo \"- Bio-YODIE...\" \\\n    && git clone https://github.com/GateNLP/Bio-YODIE \"${BIOYODIE_DIR}\" \\\n    && cd \"${BIOYODIE_DIR}\" \\\n    && git pull --recurse-submodules=on-demand \\\n    && git submodule update --init --recursive \\\n    && plugins/compilePlugins.sh \\\n\n    && echo \"- KCL BRC GATE Lewy body dementia app...\" \\\n    && git clone https://github.com/KHP-Informatics/brc-gate-LBD \"${TMPDIR}/kcl_lewy\" \\\n    && unzip \"${TMPDIR}/kcl_lewy/Lewy_Body_Diagnosis.zip\" -d \"${KCL_LEWY_BODY_DIAGNOSIS_DIR}\" \\\n\n    && echo \"===============================================================================\" \\\n    && echo \"CRATE\" \\\n    && echo \"===============================================================================\" \\\n    && echo \"- Creating Python 3 virtual environment...\" \\\n    && python3 -m venv /crate/venv \\\n    && echo \"- Upgrading pip within virtual environment...\" \\\n    && \"${CRATE_VENV_BIN}/python3\" -m pip install --upgrade pip \\\n    && echo \"- Installing wheel within virtual environment...\" \\\n    && \"${CRATE_VENV_BIN}/pip\" install wheel==0.35.1 \\\n    && echo \"- Installing CRATE (crate_anon, from source) and Python database drivers...\" \\\n    && echo \"  * MySQL [mysqlclient]\" \\\n    && echo \"  * PostgreSQL [psycopg2]\" \\\n    && echo \"  * SQL Server [django-mssql-backend, pyodbc, Microsoft ODBC Driver for SQL Server (Linux) as above]\" \\\n    && \"${CRATE_VENV_BIN}/python3\" -m pip install \\\n        \"${CRATE_SRC}\" \\\n        django-mssql-backend==2.8.1 \\\n        mysqlclient==1.4.6 \\\n        psycopg2==2.8.5 \\\n        pyodbc==4.0.30 \\\n    && echo \"- Compiling CRATE Java interfaces...\" \\\n    && \"${CRATE_VENV_BIN}/crate_nlp_build_gate_java_interface\" \\\n        --gatedir \"${GATE_HOME}\" \\\n\n    && echo \"===============================================================================\" \\\n    && echo \"Extra NLP steps\" \\\n    && echo \"===============================================================================\" \\\n    && echo \"- Running a GATE application to pre-download plugins...\" \\\n    && java \\\n        -classpath \"${CRATE_PACKAGE_ROOT}/nlp_manager/compiled_nlp_classes:${GATE_HOME}/lib/*\" \\\n        -Dgate.home=\"${GATE_HOME}\" \\\n        CrateGatePipeline \\\n        --gate_app \"${KCL_PHARMACOTHERAPY_DIR}/application.xgapp\" \\\n        --pluginfile \"${CRATE_GATE_PLUGIN_FILE}\" \\\n        --suppress_gate_stdout \\\n        --verbose \\\n        --launch_then_stop \\\n\n    && echo \"===============================================================================\" \\\n    && echo \"Creating static files directory\" \\\n    && echo \"===============================================================================\" \\\n    && mkdir -p /crate/static \\\n    && chown -R crate:crate /crate/static \\\n    && echo \"===============================================================================\" \\\n    && echo \"Creating temp files directory\" \\\n    && echo \"===============================================================================\" \\\n    && mkdir -p /crate/tmp \\\n    && chown -R crate:crate /crate/tmp \\\n    && echo \"===============================================================================\" \\\n    && echo \"Cleanup\" \\\n    && echo \"===============================================================================\" \\\n    && echo \"- Removing OS packages used only for the installation...\" \\\n    && echo \"  (but keeping curl, git, unzip, wget)\" \\\n    && apt-get purge -y \\\n        ant \\\n        g++ \\\n        gcc \\\n        gdebi \\\n        gnupg2 \\\n    && apt-get autoremove -y \\\n    && echo \"- Cleaning up...\" \\\n    && rm -rf \"${TMPDIR}\" \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && echo \"- Done.\"\n\n\n# -----------------------------------------------------------------------------\n# EXPOSE: expose a port.\n# -----------------------------------------------------------------------------\n# We'll do this via docker-compose instead.\n\n\n# -----------------------------------------------------------------------------\n# CMD: run the foreground task whose lifetime determines the container\n# lifetime.\n# -----------------------------------------------------------------------------\n# Note: can be (and is) overridden by the \"command\" option in a docker-compose\n# file.\n\n# CMD [\"/bin/bash\"]\n\nUSER crate\n"
}