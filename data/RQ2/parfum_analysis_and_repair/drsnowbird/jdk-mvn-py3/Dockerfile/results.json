{
  "startTime": 1674256061215,
  "endTime": 1674256062623,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 31,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 120,
        "lineEnd": 120,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 159,
        "lineEnd": 159,
        "columnStart": 32,
        "columnEnd": 71
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 181,
        "lineEnd": 181,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 191,
        "lineEnd": 191,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 183,
        "lineEnd": 183,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 250,
        "lineEnd": 250,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 22,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 194,
        "lineEnd": 194,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 182,
        "lineEnd": 182,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 194,
        "lineEnd": 194,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#FROM ${BASE_IMAGE:-ubuntu:20.04}\nFROM ${BASE_IMAGE:-ubuntu:18.04}\n\nMAINTAINER DrSnowbird \"DrSnowbird@openkbs.org\"\n\nENV DEBIAN_FRONTEND noninteractive\n\n#### ---------------------\n#### ---- USER, GROUP ----\n#### ---------------------\nENV USER_ID=${USER_ID:-1000}\nENV GROUP_ID=${GROUP_ID:-1000}\n\n#ENV JAVA_VERSION=8\nENV JAVA_VERSION=11\n\n##############################################\n#### ---- Installation Directories   ---- ####\n##############################################\nENV INSTALL_DIR=${INSTALL_DIR:-/usr}\nENV SCRIPT_DIR=${SCRIPT_DIR:-$INSTALL_DIR/scripts}\n\n############################################\n##### ---- System: certificates : ---- #####\n##### ---- Corporate Proxy      : ---- #####\n############################################\nENV LANG C.UTF-8\nARG LIB_BASIC_LIST=\"curl wget unzip ca-certificates\"\nRUN set -eux; \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y ${LIB_BASIC_LIST} && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./scripts ${SCRIPT_DIR}\nCOPY certificates /certificates\nRUN ${SCRIPT_DIR}/setup_system_certificates.sh\nRUN ${SCRIPT_DIR}/setup_system_proxy.sh\n\n########################################\n#### update ubuntu and Install Python 3\n########################################\nARG LIB_DEV_LIST=\"apt-utils automake pkg-config libpcre3-dev zlib1g-dev liblzma-dev\"\nARG LIB_BASIC_LIST=\"curl iputils-ping nmap net-tools build-essential software-properties-common apt-transport-https\"\nARG LIB_COMMON_LIST=\"bzip2 libbz2-dev git wget unzip vim python3-pip python3-setuptools python3-dev python3-venv python3-numpy python3-scipy python3-pandas python3-matplotlib\"\nARG LIB_TOOL_LIST=\"graphviz libsqlite3-dev sqlite3 git xz-utils\"\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y ${LIB_DEV_LIST} && \\\n    apt-get install --no-install-recommends -y ${LIB_BASIC_LIST} && \\\n    apt-get install --no-install-recommends -y ${LIB_COMMON_LIST} && \\\n    apt-get install --no-install-recommends -y ${LIB_TOOL_LIST} && \\\n    apt-get install --no-install-recommends -y sudo && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists/*\n\n########################################\n#### ------- OpenJDK Installation ------\n########################################\nRUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* && \\\n    localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8\nENV LANG en_US.utf8\n\n# A few reasons for installing distribution-provided OpenJDK:\n#\n#  1. Oracle.  Licensing prevents us from redistributing the official JDK.\n#\n#  2. Compiling OpenJDK also requires the JDK to be installed, and it gets\n#     really hairy.\n#\n#     For some sample build times, see Debian's buildd logs:\n#       https://buildd.debian.org/status/logs.php?pkg=openjdk-8\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tbzip2 \\\n\t\tunzip \\\n\t\txz-utils \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# Default to UTF-8 file.encoding\nENV LANG C.UTF-8\n\nENV JAVA_HOME=/usr/lib/jvm/java-${JAVA_VERSION}-openjdk-amd64\nENV PATH=$JAVA_HOME/bin:$PATH\n\n# ------------------\n# OpenJDK Java:\n# ------------------\nARG OPENJDK_PACKAGE=${OPENJDK_PACKAGE:-openjdk-${JAVA_VERSION}-jdk}\n\n# -- To install JDK Source (src.zip), uncomment the line below: --\n#ARG OPENJDK_SRC=${OPENJDK_SRC:-openjdk-${JAVA_VERSION}-source}\n\nARG OPENJDK_INSTALL_LIST=\"${OPENJDK_PACKAGE} ${OPENJDK_SRC}\"\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y ${OPENJDK_INSTALL_LIST} && \\\n    ls -al ${INSTALL_DIR} ${JAVA_HOME} && \\\n    export PATH=$PATH; echo \"PATH=${PATH}\" ; export JAVA_HOME=${JAVA_HOME} ; echo \"java=`which java`\" && \\\n    rm -rf /var/lib/apt/lists/*\n\n# ------------------------------------------------------------------------------------------------\n# update-alternatives so that future installs of other OpenJDK versions don't change /usr/bin/java\n# ... and verify that it actually worked for one of the alternatives we care about\n# ------------------------------------------------------------------------------------------------\nRUN update-alternatives --get-selections | awk -v home=\"$(readlink -f \"$JAVA_HOME\")\" 'index($3, home) == 1 { $2 = \"manual\"; print | \"update-alternatives --set-selections\" }'; \\\n\tupdate-alternatives --query java | grep -q 'Status: manual'\n\n###################################\n#### ---- Install Maven 3 ---- ####\n###################################\nENV MAVEN_VERSION=${MAVEN_VERSION:-3.8.5}\nENV MAVEN_HOME=/usr/apache-maven-${MAVEN_VERSION}\nENV MAVEN_PACKAGE=apache-maven-${MAVEN_VERSION}-bin.tar.gz\nENV PATH=${PATH}:${MAVEN_HOME}/bin\n## -- Auto tracking (by parsing product release page) the latest release -- ##\n# https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz\nRUN export MAVEN_PACKAGE_URL=$( curl -f -s https://maven.apache.org/download.cgi | grep -e \"apache-maven.*bin.tar.gz\" | head -1 | cut -d'\"' -f2) && \\\n    export MAVEN_PACKAGE=$(basename $MAVEN_PACKAGE_URL) && \\\n    export MAVEN_VERSION=$(echo ${MAVEN_PACKAGE}|cut -d'-' -f3) && \\\n    export MAVEN_HOME=/usr/apache-maven-${MAVEN_VERSION} && \\\n    export PATH=${PATH}:${MAVEN_HOME}/bin && \\\n    curl -f -k -sL ${MAVEN_PACKAGE_URL} | gunzip | tar x -C /usr/ && \\\n    ln -s ${MAVEN_HOME}/bin/mvn /usr/bin/mvn && \\\n    ${MAVEN_HOME}/bin/mvn -v && \\\n    rm -f ${MAVEN_PACKAGE}\n\n########################################\n#### ---- PIP install packages ---- ####\n########################################\nCOPY requirements.txt ./\n\n# pip3 uninstall pkg-resources==0.0.0\nRUN python3 -m pip install --upgrade pip && \\\n    python3 -m pip --no-cache-dir install --ignore-installed -U -r requirements.txt\n\n## -- added Local PIP installation bin to PATH\nENV PATH=${PATH}:${HOME}/.local/bin\n\n## VERSIONS ##\nENV PATH=${PATH}:${JAVA_HOME}/bin\n\nRUN mvn --version && \\\n    python3 -V && \\\n    pip3 --version\n\n###################################\n#### ---- Install Gradle ---- #####\n###################################\n# Ref: https://gradle.org/releases/\n\nENV GRADLE_INSTALL_BASE=${GRADLE_INSTALL_BASE:-/opt/gradle}\nENV GRADLE_VERSION=${GRADLE_VERSION:-7.4}\nENV GRADLE_PACKAGE=gradle-${GRADLE_VERSION}-bin.zip\nENV GRADLE_PACKAGE_URL=https://services.gradle.org/distributions/${GRADLE_PACKAGE}\nENV GRADLE_HOME=${GRADLE_INSTALL_BASE}/gradle-${GRADLE_VERSION}\nENV PATH=${PATH}:${GRADLE_HOME}/bin\n# export GRADLE_PACKAGE_URL=$(curl -s https://gradle.org/releases/ | grep \"Download: \" | cut -d'\"' -f4 | sort -u | tail -1) && \\\n## -- Auto tracking (by parsing product release page) the latest release -- ##\nRUN mkdir -p ${GRADLE_INSTALL_BASE} && \\\n    cd ${GRADLE_INSTALL_BASE} && \\\n    export GRADLE_PACKAGE_URL=$( curl -f -k -s https://gradle.org/releases/ | grep \"Download: \" | head -1 | cut -d'\"' -f4) && \\\n    export GRADLE_PACKAGE=$(basename ${GRADLE_PACKAGE_URL}) && \\\n    export GRADLE_VERSION=$(echo $GRADLE_PACKAGE|cut -d'-' -f2) && \\\n    export GRADLE_HOME=${GRADLE_INSTALL_BASE}/gradle-${GRADLE_VERSION} && \\\n    export PATH=${PATH}:${GRADLE_HOME}/bin && \\\n    wget -q --no-check-certificate -c ${GRADLE_PACKAGE_URL} && \\\n    unzip -d ${GRADLE_INSTALL_BASE} ${GRADLE_PACKAGE} && \\\n    ls -al ${GRADLE_HOME} && \\\n    ln -s ${GRADLE_HOME}/bin/gradle /usr/bin/gradle && \\\n    ${GRADLE_HOME}/bin/gradle -v && \\\n    rm -f ${GRADLE_PACKAGE}\n\n#########################################\n#### ---- Node from NODESOURCES ---- ####\n#########################################\n# Ref: https://github.com/nodesource/distributions\n#ARG NODE_VERSION=${NODE_VERSION:-current}\n# Ubuntu 18.04 missing GLC lib 2.28 needed by latest Node v18\n# Hence stick to v17\nARG NODE_VERSION=${NODE_VERSION:-17}\nENV NODE_VERSION=${NODE_VERSION}\nRUN apt-get update -y && \\\n    curl -f -sL -k https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && \\\n    npm install -g npm@latest && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nRUN cd ${SCRIPT_DIR}; ${SCRIPT_DIR}/setup_npm_proxy.sh\n\n########################\n#### ---- Yarn ---- ####\n########################\n# Ref: https://classic.yarnpkg.com/en/docs/install/#debian-stable\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | sudo tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;\n\n###################################\n#### ---- Update: all     ---- ####\n###################################\nRUN apt-get update -y && apt-get upgrade -y\n\n###################################\n#### ---- user: developer ---- ####\n###################################\nENV USER_ID=${USER_ID:-1000}\nENV GROUP_ID=${GROUP_ID:-1000}\nENV USER=${USER:-developer}\nENV HOME=/home/${USER}\n\n## -- setup NodeJS user profile\nRUN groupadd ${USER} && useradd ${USER} -m -d ${HOME} -s /bin/bash -g ${USER} && \\\n    ## -- Ubuntu -- \\\n    usermod -aG sudo ${USER} && \\\n    ## -- Centos -- \\\n    #usermod -aG wheel ${USER} && \\\n    echo \"${USER} ALL=NOPASSWD:ALL\" | tee -a /etc/sudoers && \\\n    echo \"USER =======> ${USER}\" && ls -al ${HOME}\n\n###########################################\n#### ---- entrypoint script setup ---- ####\n###########################################\nCOPY docker-entrypoint.sh /docker-entrypoint.sh\nRUN chmod +x /docker-entrypoint.sh\n\n#############################################\n#### ---- USER as Owner for scripts ---- ####\n#############################################\nRUN chown ${USER}:${USER} -R ${INSTALL_DIR}/scripts /docker-entrypoint.sh\n\n############################################\n#### ---- Set up user environments ---- ####\n############################################\nENV WORKSPACE=${HOME}/workspace\nENV DATA=${HOME}/data\n\nWORKDIR ${HOME}\n\n############################################\n#### ---- Volumes: data, workspace ---- ####\n############################################\nRUN mkdir -p ${WORKSPACE} ${DATA}\nCOPY ./examples ${DATA}/examples\nRUN chown ${USER}:${USER} -R  ${DATA}\n\nVOLUME ${DATA}\nVOLUME ${WORKSPACE}\n\n############################################\n#### ---- NPM: websocket           ---- ####\n############################################\nRUN npm install websocket ws && npm cache clean --force;\n\n#########################\n#### ---- Entry ---- ####\n#########################\nUSER ${USER}\nWORKDIR ${HOME}\n#### Define default command.\n#ENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n\n"
}