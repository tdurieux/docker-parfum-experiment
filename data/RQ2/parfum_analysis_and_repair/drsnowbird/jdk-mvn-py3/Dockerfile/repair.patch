diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/drsnowbird/jdk-mvn-py3/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/drsnowbird/jdk-mvn-py3/Dockerfile/repaired.Dockerfile
index 31891df..200b2dd 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/drsnowbird/jdk-mvn-py3/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/drsnowbird/jdk-mvn-py3/Dockerfile/repaired.Dockerfile
@@ -28,8 +28,8 @@ ENV LANG C.UTF-8
 ARG LIB_BASIC_LIST="curl wget unzip ca-certificates"
 RUN set -eux; \
     apt-get update -y && \
-    apt-get install -y ${LIB_BASIC_LIST} 
-    
+    apt-get install --no-install-recommends -y ${LIB_BASIC_LIST} && rm -rf /var/lib/apt/lists/*;
+
 COPY ./scripts ${SCRIPT_DIR}
 COPY certificates /certificates
 RUN ${SCRIPT_DIR}/setup_system_certificates.sh
@@ -44,18 +44,18 @@ ARG LIB_COMMON_LIST="bzip2 libbz2-dev git wget unzip vim python3-pip python3-set
 ARG LIB_TOOL_LIST="graphviz libsqlite3-dev sqlite3 git xz-utils"
 
 RUN apt-get update -y && \
-    apt-get install -y ${LIB_DEV_LIST} && \
-    apt-get install -y ${LIB_BASIC_LIST} && \
-    apt-get install -y ${LIB_COMMON_LIST} && \
-    apt-get install -y ${LIB_TOOL_LIST} && \
-    apt-get install -y sudo && \
+    apt-get install --no-install-recommends -y ${LIB_DEV_LIST} && \
+    apt-get install --no-install-recommends -y ${LIB_BASIC_LIST} && \
+    apt-get install --no-install-recommends -y ${LIB_COMMON_LIST} && \
+    apt-get install --no-install-recommends -y ${LIB_TOOL_LIST} && \
+    apt-get install --no-install-recommends -y sudo && \
     apt-get clean -y && \
     rm -rf /var/lib/apt/lists/*
 
 ########################################
 #### ------- OpenJDK Installation ------
 ########################################
-RUN apt-get update && apt-get install -y locales && rm -rf /var/lib/apt/lists/* && \
+RUN apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/* && \
     localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8
 ENV LANG en_US.utf8
 
@@ -92,9 +92,9 @@ ARG OPENJDK_PACKAGE=${OPENJDK_PACKAGE:-openjdk-${JAVA_VERSION}-jdk}
 ARG OPENJDK_INSTALL_LIST="${OPENJDK_PACKAGE} ${OPENJDK_SRC}"
 
 RUN apt-get update -y && \
-    apt-get install -y ${OPENJDK_INSTALL_LIST} && \
+    apt-get install --no-install-recommends -y ${OPENJDK_INSTALL_LIST} && \
     ls -al ${INSTALL_DIR} ${JAVA_HOME} && \
-    export PATH=$PATH ; echo "PATH=${PATH}" ; export JAVA_HOME=${JAVA_HOME} ; echo "java=`which java`" && \
+    export PATH=$PATH; echo "PATH=${PATH}" ; export JAVA_HOME=${JAVA_HOME} ; echo "java=`which java`" && \
     rm -rf /var/lib/apt/lists/*
 
 # ------------------------------------------------------------------------------------------------
@@ -113,12 +113,12 @@ ENV MAVEN_PACKAGE=apache-maven-${MAVEN_VERSION}-bin.tar.gz
 ENV PATH=${PATH}:${MAVEN_HOME}/bin
 ## -- Auto tracking (by parsing product release page) the latest release -- ##
 # https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
-RUN export MAVEN_PACKAGE_URL=$(curl -s https://maven.apache.org/download.cgi | grep -e "apache-maven.*bin.tar.gz" | head -1|cut -d'"' -f2) && \
+RUN export MAVEN_PACKAGE_URL=$( curl -f -s https://maven.apache.org/download.cgi | grep -e "apache-maven.*bin.tar.gz" | head -1 | cut -d'"' -f2) && \
     export MAVEN_PACKAGE=$(basename $MAVEN_PACKAGE_URL) && \
     export MAVEN_VERSION=$(echo ${MAVEN_PACKAGE}|cut -d'-' -f3) && \
     export MAVEN_HOME=/usr/apache-maven-${MAVEN_VERSION} && \
     export PATH=${PATH}:${MAVEN_HOME}/bin && \
-    curl -k -sL ${MAVEN_PACKAGE_URL} | gunzip | tar x -C /usr/ && \
+    curl -f -k -sL ${MAVEN_PACKAGE_URL} | gunzip | tar x -C /usr/ && \
     ln -s ${MAVEN_HOME}/bin/mvn /usr/bin/mvn && \
     ${MAVEN_HOME}/bin/mvn -v && \
     rm -f ${MAVEN_PACKAGE}
@@ -157,7 +157,7 @@ ENV PATH=${PATH}:${GRADLE_HOME}/bin
 ## -- Auto tracking (by parsing product release page) the latest release -- ##
 RUN mkdir -p ${GRADLE_INSTALL_BASE} && \
     cd ${GRADLE_INSTALL_BASE} && \
-    export GRADLE_PACKAGE_URL=$(curl -k -s https://gradle.org/releases/ | grep "Download: " | head -1 | cut -d'"' -f4) && \
+    export GRADLE_PACKAGE_URL=$( curl -f -k -s https://gradle.org/releases/ | grep "Download: " | head -1 | cut -d'"' -f4) && \
     export GRADLE_PACKAGE=$(basename ${GRADLE_PACKAGE_URL}) && \
     export GRADLE_VERSION=$(echo $GRADLE_PACKAGE|cut -d'-' -f2) && \
     export GRADLE_HOME=${GRADLE_INSTALL_BASE}/gradle-${GRADLE_VERSION} && \
@@ -179,20 +179,20 @@ RUN mkdir -p ${GRADLE_INSTALL_BASE} && \
 ARG NODE_VERSION=${NODE_VERSION:-17}
 ENV NODE_VERSION=${NODE_VERSION}
 RUN apt-get update -y && \
-    curl -sL -k https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - && \
-    apt-get install -y nodejs && \
-    npm install -g npm@latest
-    
+    curl -f -sL -k https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash - && \
+    apt-get install --no-install-recommends -y nodejs && \
+    npm install -g npm@latest && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;
+
 RUN cd ${SCRIPT_DIR}; ${SCRIPT_DIR}/setup_npm_proxy.sh
 
 ########################
 #### ---- Yarn ---- ####
 ########################
 # Ref: https://classic.yarnpkg.com/en/docs/install/#debian-stable
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add - && \
     echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list && \
-    apt-get update -y && \ 
-    apt-get install -y yarn
+    apt-get update -y && \
+    apt-get install --no-install-recommends -y yarn && rm -rf /var/lib/apt/lists/*;
 
 ###################################
 #### ---- Update: all     ---- ####
@@ -248,7 +248,7 @@ VOLUME ${WORKSPACE}
 ############################################
 #### ---- NPM: websocket           ---- ####
 ############################################
-RUN npm install websocket ws
+RUN npm install websocket ws && npm cache clean --force;
 
 #########################
 #### ---- Entry ---- ####