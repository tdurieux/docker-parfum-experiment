{
  "startTime": 1674221258316,
  "endTime": 1674221259095,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2018 Google LLC\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Use an official Go runtime as a parent image\nFROM golang:1.16\n\nENV GO111MODULE=on\n\n# Install AMP Packager\n# Run this if you want to go off main branch.\n# RUN go get -v github.com/ampproject/amppackager/cmd/amppkg@main\nRUN go get -v github.com/ampproject/amppackager/cmd/amppkg\n\n# Install git\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# Clone amppackager files so we can use b3 directory\nWORKDIR /data\n# Run this if you clone from master branch.\n# RUN git clone -b master https://github.com/ampproject/amppackager.git /data/amppackager\nRUN git clone https://github.com/ampproject/amppackager.git /data/amppackager\n\n# Seed the ocsp cache\nWORKDIR /data/amppackager/testdata/b3\nRUN ./seedcache.sh\n\nWORKDIR /go/src/app\n\n# Copy the AMP packager binary into our app dir inside the container.\nRUN cp /go/bin/amppkg .\n\n# Copy example config file into container.\nCOPY amppkg.example.toml .\n\n# Make port 8080 available to the world outside this container. This\n# port must match the AMP Packager port configured in the toml file.\nEXPOSE 8080\n\n# Start the AMP Packager\nENTRYPOINT [\"amppkg\"]\n\n# Set default flags to run in development mode.\nCMD [\"-development\", \"-config=amppkg.example.toml\"]\n\n"
}