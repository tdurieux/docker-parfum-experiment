{
  "startTime": 1674220611719,
  "endTime": 1674220612880,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 58,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 6
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM ruby:3.1.2-bullseye as develop\nMAINTAINER operations@openproject.com\n\nARG DEV_UID=1000\nARG DEV_GID=1001\n\nENV USER=dev\nENV RAILS_ENV=development\n\nENV BUNDLER_VERSION \"2.3.12\"\n\n# `--no-log-init` is required as a workaround to avoid disk exhaustion.\n#\n# Read more at:\n# * https://docs.docker.com/develop/develop-images/dockerfile_best-practices/#user\n# * https://github.com/golang/go/issues/13548\nRUN useradd --no-log-init -d /home/$USER -m $USER\n\nRUN usermod -u $DEV_UID $USER\nRUN groupmod -g $DEV_GID $USER || true\n\nWORKDIR /home/$USER\n\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    postgresql-client libffi7 libffi-dev curl && rm -rf /var/lib/apt/lists/*;\n\n# Setup node source and install nodejs. Needed for running certain scripts in backend container,\n# as the `./scripts/api/validate_spec`.\nRUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./docker/dev/backend/scripts/setup /usr/sbin/setup\nCOPY ./docker/dev/backend/scripts/run-app /usr/sbin/run-app\n\n# The following lines are needed to make sure the file permissions are setup correctly after the volumes are mounted\nRUN mkdir -p /home/$USER/openproject/tmp\nRUN mkdir -p /usr/local/bundle\nRUN chown $USER:$USER /usr/local/bundle\nRUN chown $USER:$USER /home/$USER/openproject/tmp\n\nEXPOSE 3000\n\nVOLUME [ \"/usr/local/bundle\", \"/home/$USER/openproject\", \"/home/$USER/openproject/tmp\" ]\n\nWORKDIR /home/$USER/openproject\n\nUSER $USER\n\nRUN gem install bundler --version \"${BUNDLER_VERSION}\" --no-document\n\n####### Testing image below #########\n\nFROM develop as test\n\nUSER root\n\nRUN apt-get update -qq && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    jq && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./docker/dev/backend/scripts/run-test /usr/bin/run-test\nCOPY ./docker/dev/backend/scripts/setup-tests /usr/bin/setup-tests\n\nENTRYPOINT [ \"run-test\" ]\n"
}