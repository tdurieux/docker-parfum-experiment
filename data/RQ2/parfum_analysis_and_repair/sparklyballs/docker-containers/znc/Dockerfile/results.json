{
  "startTime": 1674216181030,
  "endTime": 1674216181775,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 65,
        "columnStart": 0,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# set base os\nFROM phusion/baseimage:0.9.16\n\n# Set correct environment variables\nENV DEBIAN_FRONTEND=noninteractive HOME=\"/root\" TERM=xterm LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n\n# Add local files\nADD src/ /root/\n\n# set volume\nVOLUME /config\n\n# Set the locale\nRUN locale-gen en_US.UTF-8 && \\\n\n# set start file executable\nmv /root/firstrun.sh /etc/my_init.d/firstrun.sh && \\\nchmod +x /etc/my_init.d/firstrun.sh && \\ \n\n# define configure options as a variable\nconfigOPTS=\"--enable-cyrus \\\n--enable-python \\\n--enable-swig \\\n--enable-tcl \\\n--enable-perl \\\n--disable-ipv6\" && \\\n\n# define temporary build dependencies as a variable\nbuildDepsTemp=\"build-essential \\\npkg-config \\\nmake \\\nautoconf \\\nautomake \\\ntcl8.6-dev \\\nlibicu-dev \\\nswig3.0\" && \\\n\n# define permanent build dependencies as a variable\nbuildDepsPerm=\"git-core \\\npython3-dev \\\nlibpython3-dev \\\nlibsasl2-dev \\\nlibssl-dev \\\nlibperl-dev\" && \\\n\n\n# define runtime dependencies as a variable\nruntimeDeps=\"tcl8.6 \\\nsupervisor \\\nlibicu52 \\\nlibperl5.18\" && \\\n\n# Fix a Debianism of the nobody's uid being 65534\nusermod -u 99 nobody && \\\nusermod -g 100 nobody && \\\n\n# update apt\nmv /root/excludes /etc/dpkg/dpkg.cfg.d/excludes && \\ \necho \"deb http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse\" >> /etc/apt/sources.list && \\\necho \"deb-src http://archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse\" >> /etc/apt/sources.list && \\\napt-get update -qq && \\\n\n# install build dependencies\napt-get inst ll \\\n --no-instal --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n$buildDepsT mp \\\n$bui dD \\\n\n# build ZNC from git\ncd /tmp && \\\ngit clone https:/ gi \\\n\ncd /tmp/znc && \\\ngit clean -xdf && \\\n./autogen.sh && \\\n./configure \\\n$configOPTS && \\ \nmake && \\\nmake install & \\\n\n# clean up temporary build dependencies and install runtime deps\napt-get purge --remove \\\n$buildDepsTemp -y && \\\napt-get autoremove -y && \\\n"
}