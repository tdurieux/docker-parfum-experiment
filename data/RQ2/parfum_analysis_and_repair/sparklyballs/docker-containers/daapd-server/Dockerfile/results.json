{
  "startTime": 1674248661053,
  "endTime": 1674248661971,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 0,
        "columnEnd": 52
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 0,
        "columnEnd": 57
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 0,
        "columnEnd": 59
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 86,
        "lineEnd": 89,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 0,
        "columnEnd": 11
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 130,
        "lineEnd": 135,
        "columnStart": 0,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 143,
        "lineEnd": 152,
        "columnStart": 0,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 163,
        "lineEnd": 164,
        "columnStart": 0,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# set base os\nFROM phusion/baseimage:0.9.16\n\n# Set correct environment variables\nENV DEBIAN_FRONTEND=noninteractive HOME=\"/root\" TERM=xterm LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n\n# set ports\nEXPOSE 3689\n\n# Add local files\nADD src/ /root/\n\n# set volume\nVOLUME /config /music\n\n# Set the locale\nRUN locale-gen en_US.UTF-8 && \\\n\n# Fix a Debianism of the nobody's uid being 65534\nusermod -u 99 nobody && \\\nusermod -g 100 nobody && \\\n\n# fix start up files\nrm -rf /etc/my_init.d && \\\nmv /root/my_init.d  /etc/ && \\\nchmod +x /etc/my_init.d/*.sh && \\\n\n# update apt\nmv /root/excludes /etc/dpkg/dpkg.cfg.d/excludes && \\\napt-get update -qq && \\\n\n# set variable containing build dependencies\nbuildDeps=\"automake \\\ngperf \\\ngettext \\\nlibtool \\\nyasm \\\nautoconf \\\nlibgcrypt20-dev \\\ncmake \\\nbuild-essential \\\nlibflac-dev \\\nantlr3 \\\nlibasound2-dev \\\nlibplist-dev \\\nlibmxml-dev \\\nzlib1g-dev \\\nlibunistring-dev \\\nlibantlr3c-dev \\\ngit-core \\\nwget \\\nlibavahi-client-dev \\\nlibconfuse-dev\" && \\\n\n# set variable containing runtime dependencies\nruntimeDeps=\"libgcrypt20 \\\nlibavahi-client3 \\\nlibflac8 \\\nlibogg0 \\\nsupervisor \\\nlibantlr3c-3.2-0 \\\nlibasound2 \\\nlibplist1 \\\nlibmxml1 \\\nlibunistring0 \\\navahi-daemon \\\nlibconfuse0\" && \\\n\n# install build dependencies\napt-get install --no-install-recommends \\\n$buildDeps -qy && \\\n\n#fetch source for packages\ncd /tmp && \\\n wget https://curl.haxx.se/download/curl-7.43.0.tar.gz && \\\n wget https://taglib.github.io/releases/taglib-1.9.1.tar.gz && \\\nwget --no-check-certificate https://qa.debian.org/watch/sf.php/levent/libevent-2.1.5-beta.tar.gz && \\\nwget --no-check-certificate https://developer.spotify.com/download/libspotify/libspotify-12.1.51-Linux-x86_64-release.tar.gz && \\\n wget https://www.sqlite.org/sqlite-amalgamation-3.7.2.tar.gz && \\\ngit clone https://github.com/FFmpeg/FFmpeg.git && \\\ngit clone https://github.com/ejurgensen/forked-daapd.git && \\\n\n# build curl with ssl support for lastfm\ncd /tmp && \\\ntar xvf curl-* && \\\ncd curl-* && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n--prefix=/usr \\\n--with-ssl \\\n--with-zlib && \\\nmake && \\\nmake install && \\\n\n# build taglib\ncd /tmp && \\\ntar xvf taglib-* && \\\ncd taglib-* && \\\ncmake -DCMAKE_INSTALL_PREFIX=/usr/local -DCMAKE_RELEASE_TYPE=Release . && \\\nmake && \\\nmake install && \\\nldconfig && \\\n\n# build libspotify\ncd /tmp && \\\ntar xzf libspotify-* && \\\ncd libspotify-* && \\\nmake install prefix=/usr/local && \\\n\n# configure and build libevent\ncd /tmp && \\\ntar xvf libevent-* && \\\ncd libevent-* && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\nmake && \\\nmake install && \\\n\n\n# configure and build sqlite\ncd /tmp && \\\ntar xvf sqlite-* && \\\ncd sqlite-* && \\\nmv /root/Makefile.in /root/Makefile.am . && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\nmake && \\\nmake install && \\\n\n\n# configure and build ffmpeg\ncd /tmp/FFmpeg && \\\ngit checkout release/2.7 && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n--prefix=/usr \\\n--enable-nonfree \\\n--disable-static \\\n--enable-shared \\\n--disable-debug && \\\n\nmake && \\\nmake install && \\\n\n# configure and build forked-daapd\ncd /tmp/forked-daapd && \\\nautoreconf -i && \\\n ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n--enable-itunes \\\n--enable-mpd \\\n--enable-spotify \\\n--enable-lastfm \\\n--enable-flac \\\n--enable-musepack \\\n--prefix=/usr \\\n--sysconfdir=/etc \\\n--localstatedir=/var && \\\nmake && \\\nmake install && \\\ncd / && \\\n\n# clean build dependencies\napt-get purge --remove \\\n$buildDeps -y && \\\napt-get -y autoremove && \\\n\n# install runtime dependencies\napt-get install --no-install-recommends \\\n$runtimeDeps -qy && \\\n\n#clean up\napt-get clean && \\\nrm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \\\n/usr/share/man /usr/share/groff /usr/share/info \\\n/usr/share/lintian /usr/share/linda /var/cache/man && \\\n(( find /usr/share/doc -depth -type f ! -name copyright|xargs rm || true )) && \\\n(( find /usr/share/doc -empty|xargs rmdir || true ))\n\n"
}