{
  "startTime": 1674255669092,
  "endTime": 1674255669763,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 6,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 6,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 6,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM metabrainz/python:3.10-20220315\n\nENV PYTHONUNBUFFERED 1\n\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nRUN apt-get update \\\n     && apt-get install -y --no-install-recommends \\\n                        build-essential \\\n                        ca-certificates \\\n                        cron \\\n                        git \\\n                        libpq-dev \\\n                        libffi-dev \\\n                        libssl-dev \\\n                        libxml2-dev \\\n                        libxslt1-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\n# PostgreSQL client\nRUN curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nENV PG_MAJOR 12\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends postgresql-client-$PG_MAJOR \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Node\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n   && apt-get install --no-install-recommends -y nodejs \\\n   && rm -rf /var/lib/apt/lists/*\n\nRUN mkdir /code\nWORKDIR /code\n\nRUN pip install --no-cache-dir --upgrade pip==21.0.1\n\n# Python dependencies\nCOPY requirements.txt /code/\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . /code/\n\n# Compile translations\nRUN pybabel compile -d critiquebrainz/frontend/translations\n"
}