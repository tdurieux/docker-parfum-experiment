{
  "startTime": 1674216831855,
  "endTime": 1674216833205,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 6,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 6,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 6,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM metabrainz/python:3.10-20220315\n\nENV PYTHONUNBUFFERED 1\n\nRUN apt-get update \\\n     && apt-get install -y --no-install-recommends \\\n                        build-essential \\\n                        ca-certificates \\\n                        cron \\\n                        git \\\n                        libpq-dev \\\n                        libffi-dev \\\n                        libssl-dev \\\n                        libxml2-dev \\\n                        libxslt1-dev \\\n                        rsync \\\n    && rm -rf /var/lib/apt/lists/*\n\n# PostgreSQL client\nRUN curl -f https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nENV PG_MAJOR 12\nRUN echo 'deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main' $PG_MAJOR > /etc/apt/sources.list.d/pgdg.list\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends postgresql-client-$PG_MAJOR \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Specifying password so that client doesn't ask scripts for it...\nENV PGPASSWORD \"critiquebrainz\"\n\n# Node\nRUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n   && apt-get install --no-install-recommends -y nodejs \\\n   && rm -rf /var/lib/apt/lists/*\n\nRUN pip install --no-cache-dir --upgrade pip==21.0.1\n\nRUN pip install --no-cache-dir uWSGI==2.0.20\n\nRUN mkdir /code\nWORKDIR /code\n\n# Python dependencies\nCOPY ./requirements.txt /code/\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Node dependencies\nCOPY ./package.json ./package-lock.json /code/\nRUN npm install && npm cache clean --force;\n\nCOPY . /code/\n\n# Build static files\nRUN npm run build\n\n# Compile translations\nRUN pybabel compile -d critiquebrainz/frontend/translations\n\nRUN useradd --create-home --shell /bin/bash critiquebrainz\n\n############\n# Services #\n############\n\n# runit service files\n# All services are created with a `down` file, preventing them from starting\n# rc.local removes the down file for the specific service we want to run in a container\n# http://smarden.org/runit/runsv.8.html\n\nCOPY ./docker/rc.local /etc/rc.local\n\n# UWSGI\nCOPY ./docker/uwsgi/consul-template-uwsgi.conf /etc/consul-template-uwsgi.conf\nCOPY ./docker/uwsgi/uwsgi.service /etc/service/uwsgi/run\nCOPY ./docker/uwsgi/uwsgi.ini /etc/uwsgi/uwsgi.ini\nRUN touch /etc/service/uwsgi/down\n\n# cron jobs\nCOPY ./docker/cron/consul-template-cron-config.conf /etc/consul-template-cron-config.conf\nCOPY ./docker/cron/cron-config.service /etc/service/cron-config/run\nCOPY ./docker/cron/crontab /etc/cron.d/critiquebrainz\nRUN chmod 0644 /etc/cron.d/critiquebrainz\nRUN touch /etc/service/cron/down\nRUN touch /etc/service/cron-config/down\n\nRUN touch /var/log/dump_backup.log /var/log/public_dump_create.log /var/log/json_dump_create.log \\\n    && chown critiquebrainz:critiquebrainz /var/log/dump_backup.log /var/log/public_dump_create.log /var/log/json_dump_create.log\n\nARG GIT_COMMIT_SHA\nENV GIT_SHA ${GIT_COMMIT_SHA}\n\nEXPOSE 13032\n"
}