{
  "startTime": 1674249869625,
  "endTime": 1674249870618,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\nLABEL maintainer=\"Martin Thomson <mt@lowentropy.net>\"\n\nRUN set -e; \\\n    echo > /etc/apk/repositories; \\\n    echo http://dl-cdn.alpinelinux.org/alpine/v$(cat /etc/alpine-release | cut -d'.' -f1,2)/main >> /etc/apk/repositories; \\\n    echo http://dl-cdn.alpinelinux.org/alpine/v$(cat /etc/alpine-release | cut -d'.' -f1,2)/community >> /etc/apk/repositories; \\\n    apk add --no-cache \\\n      bash \\\n      ca-certificates \\\n      coreutils \\\n      curl \\\n      findutils \\\n      git \\\n      grep \\\n      libintl \\\n      libxml2-utils \\\n      libxslt \\\n      make \\\n      nodejs \\\n      npm \\\n      openssh \\\n      py3-appdirs \\\n      py3-configargparse \\\n      py3-html5lib \\\n      py3-jinja2 \\\n      py3-lxml \\\n      py3-magic \\\n      py3-pip \\\n      py3-pycountry \\\n      py3-pyflakes \\\n      py3-requests \\\n      py3-setuptools \\\n      py3-six \\\n      py3-toml \\\n      py3-wheel \\\n      py3-yaml \\\n      python3 \\\n      ruby \\\n      ruby-bundler \\\n      sed\n\n# See <https://github.com/Auswaschbar/alpine-localized-docker/blob/master/Dockerfile>\nENV MUSL_LOCPATH=\"/usr/share/i18n/locales/musl\"\nRUN set -e; \\\n    apk add --no-cache --virtual .locale_build cmake musl-dev gcc gettext-dev; \\\n    tmp=$(mktemp -d /tmp/musl-locales-XXXXX); \\\n    git clone https://gitlab.com/rilian-la-te/musl-locales \"$tmp\"; \\\n    cd \"$tmp\"; \\\n    cmake -DCMAKE_BUILD_TYPE=Release -DLOCALE_PROFILE=OFF -DCMAKE_INSTALL_PREFIX:PATH=/usr .; \\\n    make; \\\n    make install; \\\n    cd /; \\\n    rm -rf \"$tmp\"; \\\n    apk del .locale_build; \\\n    mkdir -p /i-d-template\n\nENV SHELL=/bin/bash \\\n    LANG=en_US.UTF-8 \\\n    LANGUAGE=en_US:en \\\n    LC_ALL=en_US.UTF-8 \\\n    KRAMDOWN_PERSISTENT=t\n\nCOPY [\"entrypoint.sh\", \"requirements.txt\", \"Gemfile\", \"/\"]\nRUN set -e; \\\n    install() { \\\n       file=\"$1\"; url=\"$2\"; sha=\"$3\"; \\\n       target=\"/usr/local/bin/$(basename \"$file\")\"; \\\n       tmp=$(mktemp -t \"${tool}XXXXX.tgz\"); \\\n       curl -sSLf \"$url\" -o \"$tmp\"; \\\n       [ $(sha256sum -b \"$tmp\" | cut -d ' ' -f 1 -) = \"$sha\" ]; \\\n       tar xzfO \"$tmp\" \"$file\" >\"$target\"; chmod 755 \"$target\"; \\\n       rm -f \"$tmp\"; \\\n    }; \\\n    tool_install() { \\\n      tool=\"$1\"; version=\"$2\"; sha=\"$3\"; \\\n      curl -SSLf -o \"/usr/local/bin/${tool}\" \\\n        \"https://raw.githubusercontent.com/ietf-tools/${tool}-mirror/${version}/${tool}\"; \\\n      [ $(sha256sum -b \"/usr/local/bin/${tool}\" | cut -d ' ' -f 1 -) = \"$sha\" ]; \\\n    }; \\\n    set -x; \\\n    tool_install idnits bfda9518d5b4e8a682f2e6f34a449c2d3ea74539 \\\n      0ea07cdc982645a85622ccc2636a4d21cde54137269f0e8a204e1bc519b48818; \\\n    mmark=\"2.2.10\"; \\\n    install mmark \\\n      \"https://github.com/mmarkdown/mmark/releases/download/v${mmark}/mmark_${mmark}_linux_amd64.tgz\" \\\n      54ce59da52c59bcc810132ef395f523beeb46bdf9df9b1e3f9be882860934cff; \\\n    npm install -g aasvg; npm cache clean --force; \\\n    pip3 install --compile --no-cache-dir --disable-pip-version-check -r /requirements.txt; \\\n    bundle install --system --gemfile=/Gemfile\n\nENTRYPOINT [\"/entrypoint.sh\"]\n"
}