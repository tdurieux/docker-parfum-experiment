{
  "startTime": 1674254910877,
  "endTime": 1674254912125,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## PROJECT CHRONO - http://projectchrono.org\n##\n## Copyright (c) 2020 projectchrono.org\n## All rights reserved.\n##\n## Use of this source code is governed by a BSD-style license that can be found\n## in the LICENSE file at the top level of the distribution and at\n## http://projectchrono.org/license-chrono.txt.\n##\n## =============================================================================\n## Authors: Conlain Kelly, Colin Vanden Heuvel\n## =============================================================================\n\n#FROM nvidia/cuda:10.2-devel-ubuntu18.04\nFROM ubuntu:focal\n\nARG DEBIAN_FRONTEND=noninteractive\n\n## Add an unprivileged user for builds\nRUN useradd --no-log-init -r chrono\n\n## Install chrono dependencies and the bare minimum for build tools\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tcmake \\\n\t\tfreeglut3-dev \\\n\t\tgcc \\\n\t\tg++ \\\n\t\tlibboost-dev \\\n\t\tlibc6-dev \\\n\t\tlibeigen3-dev \\\n\t\tlibglew-dev \\\n\t\tlibglfw3-dev \\\n\t\tlibglm-dev \\\n\t\tlibhdf5-dev \\\n\t\tlibirrlicht-dev \\\n\t\tlibopenmpi-dev \\\n\t\tlibthrust-dev \\\n\t\tlibxxf86vm-dev \\\n\t\tmake \\\n\t&& rm -rf /var/lib/apt/lists \\\n\t&& ldconfig && rm -rf /var/lib/apt/lists/*;\n\n\n## These settings are probably not necessary anymore\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n## Add version metadata\nLABEL org.projectchrono.version=5.0.1\n\n## Download blaze intermediates to /tmp\nWORKDIR /tmp\n\n## Download and Install third-party packages:\n## - blaze [https://bitbucket.org/blaze-lib/blaze/src/master/]\n## - Intel MKL\nRUN apt-get update \\\n\t&& apt-get install -y --no-install-recommends \\\n\t\tcurl \\\n\t\tca-certificates \\\n\t\tgnupg \\\n\t&& curl -f -L https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n\t\t-o GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n\t&& APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n\t&& rm -f GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \\\n\t&& echo \"deb https://apt.repos.intel.com/mkl all main\" > /etc/apt/sources.list.d/intel-mkl.list \\\n\t&& apt-get update \\\n\t&& apt-get install -y --no-install-recommends intel-mkl-64bit-2020.0-088 \\\n\t&& curl -f -L https://bitbucket.org/blaze-lib/blaze/downloads/blaze-3.7.tar.gz \\\n\t\t| tar -zxf - \\\n\t&& cp -r blaze-3.7/blaze /usr/local/include \\\n\t&& apt-get remove -y curl ca-certificates openssl \\\n\t&& rm -rf blaze-3.7.tar.gz blaze-3.7 \\\n\t&& rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\n## Unpack a prebuilt version of chrono into the image.\n##\n## This image is built with `-DCMAKE_INSTALL_PREFIX=/usr/local` and installed\n## to a clean directory tree using `fakeroot make DESTDIR=/tmp install`. The\n## resulting tree is compressed into a tarball to provide chrono-root.tar.gz\n##\n## NOTE: For best results, the archive should be built from the same base image\n## as this container\nADD chrono-root.tar.gz prelaunch_env.sh /\n\n## Build-Only Packages\n#RUN apt-get update \\\n#\t&& apt-get install -y --no-install-recommends \\\n#\t\tfish \\\n#\t\tsudo \\\n#\t\tgit \\\n#\t\tcmake-curses-gui \\\n#\t&& rm -rf /var/lib/apt/lists\n\n## Set the unprivileged chrono user as default\nUSER chrono\n\n## Use bash as a generic entrypoint for builds\n#ENTRYPOINT [\"/bin/bash\"]\n\n## Use a predefined environment for production images\nENTRYPOINT [\"/bin/bash\", \"/prelaunch_env.sh\"]\n\n"
}