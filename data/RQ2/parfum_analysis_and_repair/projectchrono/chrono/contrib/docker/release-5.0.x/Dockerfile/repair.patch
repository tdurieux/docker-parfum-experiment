diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/projectchrono/chrono/contrib/docker/release-5.0.x/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/projectchrono/chrono/contrib/docker/release-5.0.x/Dockerfile/repaired.Dockerfile
index f7c0017..534675c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/projectchrono/chrono/contrib/docker/release-5.0.x/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/projectchrono/chrono/contrib/docker/release-5.0.x/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,3 @@
-## =============================================================================
 ## PROJECT CHRONO - http://projectchrono.org
 ##
 ## Copyright (c) 2020 projectchrono.org
@@ -40,7 +39,7 @@ RUN apt-get update \
 		libxxf86vm-dev \
 		make \
 	&& rm -rf /var/lib/apt/lists \
-	&& ldconfig 
+	&& ldconfig && rm -rf /var/lib/apt/lists/*;
 
 
 ## These settings are probably not necessary anymore
@@ -62,24 +61,24 @@ RUN apt-get update \
 		curl \
 		ca-certificates \
 		gnupg \
-	&& curl -L https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \
+	&& curl -f -L https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \
 		-o GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \
 	&& APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1 apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \
 	&& rm -f GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB \
 	&& echo "deb https://apt.repos.intel.com/mkl all main" > /etc/apt/sources.list.d/intel-mkl.list \
 	&& apt-get update \
 	&& apt-get install -y --no-install-recommends intel-mkl-64bit-2020.0-088 \
-	&& curl -L https://bitbucket.org/blaze-lib/blaze/downloads/blaze-3.7.tar.gz \
+	&& curl -f -L https://bitbucket.org/blaze-lib/blaze/downloads/blaze-3.7.tar.gz \
 		| tar -zxf - \
 	&& cp -r blaze-3.7/blaze /usr/local/include \
 	&& apt-get remove -y curl ca-certificates openssl \
 	&& rm -rf blaze-3.7.tar.gz blaze-3.7 \
-	&& rm -rf /var/lib/apt/lists
+	&& rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;
 
-## Unpack a prebuilt version of chrono into the image. 
+## Unpack a prebuilt version of chrono into the image.
 ##
-## This image is built with `-DCMAKE_INSTALL_PREFIX=/usr/local` and installed 
-## to a clean directory tree using `fakeroot make DESTDIR=/tmp install`. The 
+## This image is built with `-DCMAKE_INSTALL_PREFIX=/usr/local` and installed
+## to a clean directory tree using `fakeroot make DESTDIR=/tmp install`. The
 ## resulting tree is compressed into a tarball to provide chrono-root.tar.gz
 ##
 ## NOTE: For best results, the archive should be built from the same base image