{
  "startTime": 1674248507435,
  "endTime": 1674248508861,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 15,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bookworm\nMAINTAINER Fabrice Jammes <fabrice.jammes@in2p3.fr>\n\n# RUN echo \"deb http://ftp.debian.org/debian stretch-backports main\" >> /etc/apt/sources.list\n\n# Start with this long step not to re-run it on\n# each Dockerfile update\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install apt-utils && \\\n    apt-get -y upgrade && \\\n    apt-get -y clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install curl bash-completion git gnupg jq \\\n    kubectx lsb-release locales make \\\n    nano openssh-client parallel \\\n    unzip vim wget zsh && rm -rf /var/lib/apt/lists/*;\n\n# Uncomment en_US.UTF-8 for inclusion in generation\nRUN sed -i 's/^# *\\(en_US.UTF-8\\)/\\1/' /etc/locale.gen\n\n# Generate locale\nRUN locale-gen\n\n# Install Google cloud SDK\nENV CLOUD_SDK google-cloud-sdk-360.0.0-linux-x86_64.tar.gz\nRUN cd /opt && curl -f -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/${CLOUD_SDK} && \\\n    tar zxvf $CLOUD_SDK && \\\n    rm $CLOUD_SDK\n\n# Install helm\nENV HELM_VERSION 3.5.4\nRUN wget -O /tmp/helm.tgz \\\n    https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n    cd /tmp && \\\n    tar zxvf /tmp/helm.tgz && \\\n    rm /tmp/helm.tgz && \\\n    chmod +x /tmp/linux-amd64/helm && \\\n    mv /tmp/linux-amd64/helm /usr/local/bin/helm\n\n# Install kubectl\nENV KUBECTL_VERSION 1.19.0\nRUN wget -O /usr/local/bin/kubectl \\\n    https://storage.googleapis.com/kubernetes-release/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \\\n    chmod +x /usr/local/bin/kubectl\n\n# Install kustomize\nENV KUSTOMIZE_VERSION v3.8.4\nRUN wget -O /tmp/kustomize.tgz \\\n    https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64.tar.gz && \\\n    tar zxvf /tmp/kustomize.tgz && \\\n    rm /tmp/kustomize.tgz && \\\n    chmod +x kustomize && \\\n    mv kustomize /usr/local/bin/kustomize\n\n# Install kubeval\nENV KUBEVAL_VERSION 0.15.0\nRUN wget https://github.com/garethr/kubeval/releases/download/${KUBEVAL_VERSION}/kubeval-linux-amd64.tar.gz && \\\n    tar xf kubeval-linux-amd64.tar.gz && \\\n    mv kubeval /usr/local/bin && \\\n    rm kubeval-linux-amd64.tar.gz\n\n\nENV STERN_VERSION 1.11.0\nRUN wget -O /usr/local/bin/stern \\\n    https://github.com/wercker/stern/releases/download/${STERN_VERSION}/stern_linux_amd64 && \\\n    chmod +x /usr/local/bin/stern\n\nRUN wget -q --show-progress --https-only --timestamping \\\n    https://pkg.cfssl.org/R1.2/cfssl_linux-amd64 \\\n    https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64 && \\\n    chmod o+x cfssl_linux-amd64 cfssljson_linux-amd64 && \\\n    mv cfssl_linux-amd64 /usr/local/bin/cfssl && \\\n    mv cfssljson_linux-amd64 /usr/local/bin/cfssljson\n\nENV GO_VERSION 1.15.2\nENV GO_PKG go${GO_VERSION}.linux-amd64.tar.gz\nRUN wget https://dl.google.com/go/$GO_PKG && \\\n    tar -xvf $GO_PKG && \\\n    mv go /usr/local\n\nENV GOROOT /usr/local/go\nENV GOPATH /go\n\nRUN wget -O /etc/kubectl_aliases https://raw.githubusercontent.com/ahmetb/kubectl-alias/master/.kubectl_aliases\n\nCOPY rootfs /\n\nARG FORCE_GO_REBUILD=false\nRUN $GOROOT/bin/go get -v github.com/k8s-school/clouder\n"
}