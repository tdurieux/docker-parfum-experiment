{
  "startTime": 1674254093576,
  "endTime": 1674254094254,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 42,
        "columnEnd": 85
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 125,
        "columnEnd": 150
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 80,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 41,
        "columnEnd": 88
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 68,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 281
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 18,
        "columnEnd": 281
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# Install the required build tools\nRUN apt update && apt install --no-install-recommends -y apt git autopoint automake texinfo gettext autoconf libtool libidn11-dev libunistring-dev gnutls-dev libgcrypt20 libgcrypt20-dev libjansson-dev libsqlite3-dev wget flex bison libglib2.0-dev libgmp3-dev libmicrohttpd-dev libglpk-dev libextractor-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install gnurl from source at version gnurl-7.54.0\nWORKDIR /usr/src\nRUN git clone https://git.taler.net/gnurl.git --branch gnurl-7.57.0\nRUN cd /usr/src/gnurl && autoreconf -i && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --disable-ntlm-wb && make install\n\n# Install libpbc\nWORKDIR /usr/src\nRUN wget https://crypto.stanford.edu/pbc/files/pbc-0.5.14.tar.gz && tar xvzpf pbc-0.5.14.tar.gz && cd /usr/src/pbc-0.5.14 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make install && rm pbc-0.5.14.tar.gz\n\n# Install libbswabe\nWORKDIR /usr/src\nRUN git clone https://github.com/schanzen/libgabe.git && cd /usr/src/libgabe && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && make install\n\nWORKDIR /usr/src\nRUN git clone git://gnunet.org/gnunet.git\nRUN cd /usr/src/gnunet && ./bootstrap && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-experimental --prefix=/usr && make && make install\n\nRUN addgroup gnunetdns && addgroup gnunet && adduser --system --home /var/lib/gnunet gnunet\nRUN chown gnunet:gnunet /var/lib/gnunet\nRUN echo '[arm]\\nSTART_SYSTEM_SERVICES = YES\\nSTART_USER_SERVICES = NO\\n' > /etc/gnunet.conf\n\nADD docker-entrypoint.sh .\n\nRUN rm -rf /usr/src/*\n#RUN apt remove gcc\n\nCMD [\"sh\", \"docker-entrypoint.sh\"]\n"
}