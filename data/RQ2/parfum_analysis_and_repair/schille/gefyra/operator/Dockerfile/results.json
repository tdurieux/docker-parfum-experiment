{
  "startTime": 1674255865387,
  "endTime": 1674255866171,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/blueshoe/python3.9-slim AS builder\n\n# python\nENV PYTHONUNBUFFERED=1 \\\n    # prevents python creating .pyc files\n    PYTHONDONTWRITEBYTECODE=1 \\\n    \\\n    # pip\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    \\\n    # poetry\n    # https://python-poetry.org/docs/configuration/#using-environment-variables\n    POETRY_VERSION=1.1.5 \\\n    POETRY_NO_INTERACTION=1 \\\n    POETRY_VIRTUALENVS_CREATE=false \\\n    POETRY_CACHE_DIR='/var/cache/pypoetry' \\\n    PATH=\"$PATH:/root/.poetry/bin\" \\\n    # make poetry install to this location\n    POETRY_HOME=\"/opt/poetry\" \\\n    # make poetry create the virtual environment in the project's root\n    POETRY_VIRTUALENVS_IN_PROJECT=true \\\n    # do not ask any interactive question\n    POETRY_NO_INTERACTION=1 \\\n    \\\n    # paths\n    # this is where our requirements + virtual environment will live\n    PYSETUP_PATH=\"/opt/pysetup\" \\\n    VENV_PATH=\"/opt/pysetup/venv\"\n\n\nENV PATH=\"$POETRY_HOME/bin:$VENV_PATH/bin:$PATH\"\n\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        # deps for installing poetry\n        curl \\\n        # deps for building python deps\n        build-essential && rm -rf /var/lib/apt/lists/*;\n\n# install poetry - respects $POETRY_VERSION & $POETRY_HOME\nRUN curl -f -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python\n\nRUN python -m venv $VENV_PATH\n# copy project requirement files here to ensure they will be cached.\nWORKDIR $PYSETUP_PATH\nCOPY poetry.lock pyproject.toml ./\n\n# install runtime deps - uses $POETRY_VIRTUALENVS_IN_PROJECT internally\nRUN poetry install --no-dev\n\n\nFROM gcr.io/distroless/python3\nCOPY --from=builder /opt/pysetup/venv/lib/python3.9/site-packages /usr/lib/python3.9/\nCOPY . /app/\nWORKDIR /app\nCMD [\"-m\", \"kopf\", \"run\", \"-A\", \"main.py\"]"
}