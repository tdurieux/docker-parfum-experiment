diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elavoie/pando-computing/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elavoie/pando-computing/Dockerfile/repaired.Dockerfile
index f6a59c9..f78da82 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/elavoie/pando-computing/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/elavoie/pando-computing/Dockerfile/repaired.Dockerfile
@@ -1,11 +1,11 @@
 # README: To build this Docker image, save this file in any directory, then do:
 #   docker build -t elavoie/pando-middleware19 .
 
-# Use node version 10. This is the long-term support version at the time of writing 
+# Use node version 10. This is the long-term support version at the time of writing
 FROM node:10
 
 # Install Linux dependencies for Xvfb (to run Pando headless without a display)
-RUN apt-get update && apt-get install -y xvfb libxtst6 libxss1 libgconf-2-4 libnss3 libasound2 
+RUN apt-get update && apt-get install --no-install-recommends -y xvfb libxtst6 libxss1 libgconf-2-4 libnss3 libasound2 && rm -rf /var/lib/apt/lists/*;
 
 # This is where all the git repositories will reside
 WORKDIR /usr/src
@@ -16,7 +16,7 @@ WORKDIR /usr/src/pando-computing
 RUN git checkout Middleware-2019
 
 # Install dependencies
-RUN npm install
+RUN npm install && npm cache clean --force;
 
 # Make sure the volunteer code is built
 RUN npm run postinstall
@@ -32,52 +32,52 @@ RUN git checkout Middleware-2019
 
 # Setup throughput analysis script
 WORKDIR /usr/src/pando-handbook/middleware-2019/analysis
-RUN npm install
+RUN npm install && npm cache clean --force;
 
-# Setup examples 
+# Setup examples
 # -- Link to pando-computing to avoid wasteful copies
 
 # Square (Test Example)
 WORKDIR /usr/src/pando-handbook/examples/square
-RUN npm link /usr/src/pando-computing 
-RUN npm install
+RUN npm link /usr/src/pando-computing
+RUN npm install && npm cache clean --force;
 
 # Arxiv
 WORKDIR /usr/src/pando-handbook/examples/arxiv
-RUN npm install
+RUN npm install && npm cache clean --force;
 
-# Collatz 
+# Collatz
 WORKDIR /usr/src/pando-handbook/examples/collatz
-RUN npm link /usr/src/pando-computing 
-RUN npm install
+RUN npm link /usr/src/pando-computing
+RUN npm install && npm cache clean --force;
 
 # Crypto-Mining
 WORKDIR /usr/src/pando-handbook/examples/crypto-mining
-RUN npm link /usr/src/pando-computing 
-RUN npm install
+RUN npm link /usr/src/pando-computing
+RUN npm install && npm cache clean --force;
 
 # Photo-Batch-Processing, metainfo will download the required
 # from two different locations
 WORKDIR /usr/src/pando-handbook/examples/photo-batch-processing
-RUN npm link /usr/src/pando-computing 
-RUN npm install
+RUN npm link /usr/src/pando-computing
+RUN npm install && npm cache clean --force;
 RUN ./metainfo
 RUN ./metainfo --path=196 --row=28
 
 # Random Testing
 WORKDIR /usr/src/pando-handbook/examples/random-testing
-RUN npm link /usr/src/pando-computing 
-RUN npm install
+RUN npm link /usr/src/pando-computing
+RUN npm install && npm cache clean --force;
 
 # Raytracer
 WORKDIR /usr/src/pando-handbook/examples/raytracer
-RUN npm link /usr/src/pando-computing 
-RUN npm install
+RUN npm link /usr/src/pando-computing
+RUN npm install && npm cache clean --force;
 
 # RLNetwork
 WORKDIR /usr/src/pando-handbook/examples/rlnetwork
-RUN npm link /usr/src/pando-computing 
-RUN npm install
+RUN npm link /usr/src/pando-computing
+RUN npm install && npm cache clean --force;
 
 # These are the ports that Pando uses,
 # 5000 HTTP Server to connect volunteers