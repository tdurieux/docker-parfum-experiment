{
  "startTime": 1674251298865,
  "endTime": 1674251299893,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:17.10\n\nARG workdir=\"/root\"\n\n# install required packages and usuful applications\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n\twget iputils-ping iproute2 kmod \\\n\tgit autoconf automake libtool make gawk libreadline-dev \\\n\ttexinfo dejagnu pkg-config libpam0g-dev libjson-c-dev bison flex \\\n\tpython-pytest libc-ares-dev python3-dev libsystemd-dev \\\n\tlibgmp-dev openssl gperf python3-jinja2 && rm -rf /var/lib/apt/lists/*;\n\n# setup FRRouting with the cumulus extension for EVPN/VXLAN\nRUN cd ${workdir}\t\\\n\t&& groupadd -g 92 frr\t\\\n\t&& groupadd -r -g 85 frrvty\t\\\n\t&& adduser --system --ingroup frr --home /var/run/frr/\t\\\n\t   --gecos \"FRR suite\" --shell /sbin/nologin frr\t\\\n\t&& usermod -a -G frrvty frr\t\\\n\t&& git clone https://github.com/frrouting/frr.git frr\t\\\n\t&& cd frr\t\\\n\t&& git checkout -b itworks 67c0a9206ce9b50dacb6561e7dccdc0ae8e7fc43 \\\n\t&& ./bootstrap.sh \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t\t\t\t--prefix=/usr \\\n\t\t\t\t\t--enable-exampledir=/usr/share/doc/frr/examples/ \\\n\t\t\t\t\t--localstatedir=/var/run/frr \\\n\t\t\t\t\t--sbindir=/usr/lib/frr \\\n\t\t\t\t\t--sysconfdir=/etc/frr \\\n\t\t\t\t\t--enable-watchfrr \\\n\t\t\t\t\t--enable-multipath=64 \\\n\t\t\t\t\t--enable-user=frr \\\n\t\t\t\t\t--enable-group=frr \\\n\t\t\t\t\t--enable-vty-group=frrvty \\\n\t\t\t\t\t--enable-configfile-mask=0640 \\\n\t\t\t\t\t--enable-logfile-mask=0640 \\\n\t\t\t\t\t--enable-systemd=yes \\\n\t\t\t\t\t--with-pkg-git-version \\\n\t\t\t\t\t--with-pkg-extra-version=-Nante-WAN \\\n\t\t\t\t\t--enable-cumulus \\\n\t&& make\t-j 4 \\\n\t&& make install \\\n\t&& install -m 755 -o frr -g frr -d /var/log/frr \\\n\t&& install -m 775 -o frr -g frrvty -d /etc/frr \\\n\t&& install -m 640 -o frr -g frr /dev/null /etc/frr/zebra.conf \\\n\t&& install -m 640 -o frr -g frr /dev/null /etc/frr/bgpd.conf \\\n\t&& install -m 640 -o frr -g frr /dev/null /etc/frr/nhrpd.conf \\\n\t&& install -m 640 -o frr -g frrvty /dev/null /etc/frr/vtysh.conf \\\n\t&& install -m 644 tools/frr.service /etc/systemd/system/frr.service \\\n\t&& install -m 644 tools/etc/default/frr /etc/default/frr \\\n\t&& install -m 644 tools/etc/frr/daemons /etc/frr/daemons \\\n\t&& install -m 644 tools/etc/frr/daemons.conf /etc/frr/daemons.conf \\\n\t&& install -m 644 tools/etc/frr/frr.conf /etc/frr/frr.conf \\\n\t&& install -m 644 -o frr -g frr tools/etc/frr/vtysh.conf \\\n\t\t\t\t\t/etc/frr/vtysh.conf \\\n\t&& rm -f /etc/frr/daemons\n\nADD daemons /etc/frr/daemons\n\n# setup StrongSwan\nRUN cd ${workdir}\t\\\n\t&& git clone -b tteras --depth=1 \\\n\t\tgit://git.alpinelinux.org/user/tteras/strongswan\nRUN cd ${workdir}/strongswan\t\\\n\t&& autoreconf -i || true\t\\\n\t&& autoconf\t\t\\\n\t&& autoreconf -i \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& make\t-j 4 || true \\\n\t&& make\t-j 4 || true \\\n\t&& make\t-j 4 \\\n\t&& make install \\\n\t&& rm -f /usr/local/etc/ipsec.conf\nADD ipsec.conf /usr/local/etc/ipsec.conf\n\n# setup Config Render\nADD templates ${workdir}/templates\nADD config-render.py ${workdir}/config-render.py\n\n\nCMD bash -c \"/root/config-render.py /etc/nante-wan.conf && /usr/lib/frr/frr start && ipsec start && bash\"\n"
}