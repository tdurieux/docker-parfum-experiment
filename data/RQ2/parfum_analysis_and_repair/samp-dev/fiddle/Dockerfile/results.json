{
  "startTime": 1674253690465,
  "endTime": 1674253691046,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 82
      }
    }
  ],
  "repairedDockerfile": "FROM node\n\n# SAMPCTL\nCOPY sampctl-install-deb-sudo.sh /\nRUN dpkg --add-architecture i386 && \\\n    apt update && \\\n    apt install --no-install-recommends -y g++-multilib git ca-certificates && \\\n    sh /sampctl-install-deb-sudo.sh && rm -rf /var/lib/apt/lists/*;\n\n# FIREJAIL\nRUN DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y firejail && rm -rf /var/lib/apt/lists/*;\n\n# SA-MP PAWN FIDDLE\nWORKDIR /usr/src/app\nCOPY package*.json ./\nRUN npm install && npm cache clean --force;\n\nWORKDIR /usr/src/app/ui\nCOPY ./ui/package.json .\nCOPY ./ui/yarn.lock .\nRUN yarn install && yarn cache clean;\n\nWORKDIR /usr/src/app\nCOPY . .\nRUN npm run compile\n\n#WORKDIR /usr/src/app/ui\n#RUN yarn build\n\nWORKDIR /usr/src/app\nENTRYPOINT [ \"npm\", \"start\" ]\n"
}