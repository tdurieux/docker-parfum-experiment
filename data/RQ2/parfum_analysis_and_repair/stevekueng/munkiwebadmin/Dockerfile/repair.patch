diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stevekueng/munkiwebadmin/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stevekueng/munkiwebadmin/Dockerfile/repaired.Dockerfile
index 789d028..ff76d5e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/stevekueng/munkiwebadmin/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/stevekueng/munkiwebadmin/Dockerfile/repaired.Dockerfile
@@ -24,23 +24,23 @@ ENV DB_PORT '5432'
 
 # ------ update and install software
 ENV DEBIAN_FRONTEND 'noninteractive'
-# update 
+# update
 RUN apt-get update
 RUN apt-get upgrade -y
 # install tools
-RUN apt-get install -y apt-utils vim curl unzip python-pip net-tools dnsutils git libldap2-dev libssl-dev gcc g++ libsasl2-dev
+RUN apt-get install --no-install-recommends -y apt-utils vim curl unzip python-pip net-tools dnsutils git libldap2-dev libssl-dev gcc g++ libsasl2-dev && rm -rf /var/lib/apt/lists/*;
 # install apache
-RUN apt-get install -y apache2 apache2-utils libapache2-mod-wsgi libapache2-mod-auth-kerb
+RUN apt-get install --no-install-recommends -y apache2 apache2-utils libapache2-mod-wsgi libapache2-mod-auth-kerb && rm -rf /var/lib/apt/lists/*;
 # install database clients
-RUN apt-get install -y unixodbc-dev tdsodbc mariadb-client libmariadbclient-dev sqlite3
+RUN apt-get install --no-install-recommends -y unixodbc-dev tdsodbc mariadb-client libmariadbclient-dev sqlite3 && rm -rf /var/lib/apt/lists/*;
 # install necessary locales
-RUN apt-get clean && apt-get update && apt-get install -y locales
+RUN apt-get clean && apt-get update && apt-get install --no-install-recommends -y locales && rm -rf /var/lib/apt/lists/*;
 RUN sed -i '/^#.* en_US.* /s/^#//' /etc/locale.gen
 RUN locale-gen
 # install mssql
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
-RUN curl https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list
-RUN apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
+RUN curl -f https://packages.microsoft.com/config/debian/9/prod.list > /etc/apt/sources.list.d/mssql-release.list
+RUN apt-get update && ACCEPT_EULA=Y apt-get --no-install-recommends install -y msodbcsql17 && rm -rf /var/lib/apt/lists/*;
 # -------
 
 # create dirs
@@ -51,7 +51,7 @@ RUN mkdir /config
 RUN mkdir /fieldkeys
 
 # download munkitools
-RUN curl -Lk -o munkitools.zip `curl --silent https://api.github.com/repos/munki/munki/releases/latest | /usr/bin/awk '/zipball_url/ { print $2 }' | sed 's/[",]//g'` && unzip munkitools.zip -d . && rm -rf /munkitools.zip 
+RUN curl -f -Lk -o munkitools.zip $( curl -f --silent https://api.github.com/repos/munki/munki/releases/latest | /usr/bin/awk '/zipball_url/ { print $2 }' | sed 's/[",]//g') && unzip munkitools.zip -d . && rm -rf /munkitools.zip
 RUN cp -r /munki-munki*/code/client/* /munkitools && rm -rf /munki-munki*
 
 # Copy all source files to the container's working directory
@@ -59,7 +59,7 @@ COPY . ${APP_DIR}
 WORKDIR ${APP_DIR}
 
 #load default style
-RUN curl -Lk -o /tmp/mwa2-style.zip https://github.com/SteveKueng/mwa2-style/archive/master.zip && unzip /tmp/mwa2-style.zip -d /tmp && rm -rf /tmp/mwa2-style.zip
+RUN curl -f -Lk -o /tmp/mwa2-style.zip https://github.com/SteveKueng/mwa2-style/archive/master.zip && unzip /tmp/mwa2-style.zip -d /tmp && rm -rf /tmp/mwa2-style.zip
 RUN mkdir -p /munkiwebadmin/munkiwebadmin/static/styles/default
 RUN cp -r /tmp/mwa2-style-master/* /munkiwebadmin/munkiwebadmin/static/styles/default && rm -rf /tmp/mwa2-style-master
 
@@ -67,7 +67,7 @@ RUN cp -r /tmp/mwa2-style-master/* /munkiwebadmin/munkiwebadmin/static/styles/de
 RUN find ${APP_DIR} -name '*.pyc' -delete
 
 # Install all python dependency libs
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 # install remote ldap
 RUN git clone https://github.com/SteveKueng/django-remote-auth-ldap.git /tmp/django-remote-auth-ldap && cd /tmp/django-remote-auth-ldap && python setup.py install && cd ${APP_DIR} && rm -rf /tmp