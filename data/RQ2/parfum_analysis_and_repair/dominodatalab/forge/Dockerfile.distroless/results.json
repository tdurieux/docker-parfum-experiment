{
  "startTime": 1674252071269,
  "endTime": 1674252071868,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 22,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# TODO: try to make this work with the distroless container\n\n# Build the manager binary\nFROM golang:1.14 as builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY api/ api/\nCOPY controllers/ controllers/\nCOPY pkg/ pkg/\n\n# Build\nRUN CGO_ENABLED=1 GOOS=linux GOARCH=amd64 GO111MODULE=on go build -a -o manager main.go\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\n# FROM gcr.io/distroless/static:nonroot\n# WORKDIR /\n# COPY --from=builder /workspace/manager .\n# USER nonroot:nonroot\n\n# ENTRYPOINT [\"/manager\"]\n\n# FROM alpine\n# RUN apk add --no-cache autoconf automake build-base byacc gettext gettext-dev gcc git libcap-dev libtool libxslt\n# RUN git clone https://github.com/shadow-maint/shadow.git /shadow\n# WORKDIR /shadow\n# RUN git checkout 59c2dabb264ef7b3137f5edb52c0b31d5af0cf76\n# RUN ./autogen.sh --disable-nls --disable-man --without-audit --without-selinux --without-acl --without-attr --without-tcb --without-nscd \\\n#   && make \\\n#   && cp src/newuidmap src/newgidmap /usr/bin\n# RUN apk add --no-cache runc\n# WORKDIR /\n# COPY --from=builder /workspace/manager .\n# ENTRYPOINT [\"/manager\"]\n\nFROM golang:1.14 as idmap\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y build-essential autoconf automake autopoint byacc libtool gettext && rm -rf /var/lib/apt/lists/*;\nRUN git clone https://github.com/shadow-maint/shadow.git /shadow\nWORKDIR /shadow\nRUN git checkout 59c2dabb264ef7b3137f5edb52c0b31d5af0cf76\nRUN ./autogen.sh --disable-nls --disable-man --without-audit --without-selinux --without-acl --without-attr --without-tcb --without-nscd \\\n  && make \\\n  && cp src/newuidmap src/newgidmap /usr/bin\n\nFROM golang:1.14\nRUN apt-get update && apt-get install --no-install-recommends -y runc && rm -rf /var/lib/apt/lists/*;\nWORKDIR /\nCOPY --from=builder /workspace/manager .\nCOPY --from=idmap /usr/bin/newuidmap /usr/bin/newuidmap\nCOPY --from=idmap /usr/bin/newgidmap /usr/bin/newgidmap\nRUN chmod u+s /usr/bin/newuidmap /usr/bin/newgidmap\nUSER nobody\nENV USER nobody\nENTRYPOINT [\"/manager\"]\n"
}