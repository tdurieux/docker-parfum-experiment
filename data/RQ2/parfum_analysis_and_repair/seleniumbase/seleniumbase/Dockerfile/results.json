{
  "startTime": 1674252244954,
  "endTime": 1674252245966,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 30,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 24,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 115
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# SeleniumBase Docker Image\nFROM ubuntu:18.04\n\n#=======================================\n# Install Python and Basic Python Tools\n#=======================================\nRUN apt-get -o Acquire::Check-Valid-Until=false -o Acquire::Check-Date=false update\nRUN apt-get install --no-install-recommends -y python3 python3-pip python3-setuptools python3-dev python-distribute && rm -rf /var/lib/apt/lists/*;\nRUN alias python=python3\nRUN echo \"alias python=python3\" >> ~/.bashrc\n\n#=================================\n# Install Bash Command Line Tools\n#=================================\nRUN apt-get -qy --no-install-recommends install \\\n    sudo \\\n    unzip \\\n    wget \\\n    curl \\\n    libxi6 \\\n    libgconf-2-4 \\\n    vim \\\n    xvfb \\\n  && rm -rf /var/lib/apt/lists/*\n\n#================\n# Install Chrome\n#================\nRUN curl -f -sS -o - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \\\n    echo \"deb http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google-chrome.list && \\\n    apt-get -yqq update && \\\n    apt-get -yqq --no-install-recommends install google-chrome-stable && \\\n    rm -rf /var/lib/apt/lists/*\n\n#=================\n# Install Firefox\n#=================\nRUN apt-get -qy --no-install-recommends install \\\n     $(apt-cache depends firefox | grep Depends | sed \"s/.*ends:\\ //\" | tr '\\n' ' ') \\\n  && rm -rf /var/lib/apt/lists/* \\\n  && cd /tmp \\\n  && wget --no-check-certificate -O firefox-esr.tar.bz2 \\\n    'https://download.mozilla.org/?product=firefox-esr-latest&os=linux64&lang=en-US' \\\n  && tar -xjf firefox-esr.tar.bz2 -C /opt/ \\\n  && ln -s /opt/firefox/firefox /usr/bin/firefox \\\n  && rm -f /tmp/firefox-esr.tar.bz2\n\n#===========================\n# Configure Virtual Display\n#===========================\nRUN set -e\nRUN echo \"Starting X virtual framebuffer (Xvfb) in background...\"\nRUN Xvfb -ac :99 -screen 0 1280x1024x16 > /dev/null 2>&1 &\nRUN export DISPLAY=:99\nRUN exec \"$@\"\n\n#=======================\n# Update Python Version\n#=======================\nRUN apt-get update -y\nRUN apt-get -qy --no-install-recommends install python3.8 && rm -rf /var/lib/apt/lists/*;\nRUN rm /usr/bin/python3\nRUN ln -s python3.8 /usr/bin/python3\n\n#=============================================\n# Allow Special Characters in Python Programs\n#=============================================\nRUN export PYTHONIOENCODING=utf8\nRUN echo \"export PYTHONIOENCODING=utf8\" >> ~/.bashrc\n\n#=====================\n# Set up SeleniumBase\n#=====================\nCOPY sbase /SeleniumBase/sbase/\nCOPY seleniumbase /SeleniumBase/seleniumbase/\nCOPY examples /SeleniumBase/examples/\nCOPY integrations /SeleniumBase/integrations/\nCOPY requirements.txt /SeleniumBase/requirements.txt\nCOPY setup.py /SeleniumBase/setup.py\nRUN find . -name '*.pyc' -delete\nRUN find . -name __pycache__ -delete\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir --upgrade setuptools\nRUN pip3 install --no-cache-dir --upgrade setuptools-scm\nRUN cd /SeleniumBase && ls && pip3 install --no-cache-dir -r requirements.txt --upgrade\nRUN cd /SeleniumBase && pip3 install --no-cache-dir .\n\n#=====================\n# Download WebDrivers\n#=====================\nRUN wget https://github.com/mozilla/geckodriver/releases/download/v0.31.0/geckodriver-v0.31.0-linux64.tar.gz\nRUN tar -xvzf geckodriver-v0.31.0-linux64.tar.gz && rm geckodriver-v0.31.0-linux64.tar.gz\nRUN chmod +x geckodriver\nRUN mv geckodriver /usr/local/bin/\nRUN wget https://chromedriver.storage.googleapis.com/72.0.3626.69/chromedriver_linux64.zip\nRUN unzip chromedriver_linux64.zip\nRUN chmod +x chromedriver\nRUN mv chromedriver /usr/local/bin/\n\n#==========================================\n# Create entrypoint and grab example tests\n#==========================================\nCOPY integrations/docker/docker-entrypoint.sh /\nCOPY integrations/docker/run_docker_test_in_firefox.sh /\nCOPY integrations/docker/run_docker_test_in_chrome.sh /\nRUN chmod +x *.sh\nCOPY integrations/docker/docker_config.cfg /SeleniumBase/examples/\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nCMD [\"/bin/bash\"]\n"
}