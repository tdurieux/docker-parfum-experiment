{
  "startTime": 1674215386497,
  "endTime": 1674215387168,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to Modin Development Team under one or more contributor license agreements.\n# See the NOTICE file distributed with this work for additional information regarding\n# copyright ownership.  The Modin Development Team licenses this file to you under the\n# Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n# compliance with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software distributed under\n# the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF\n# ANY KIND, either express or implied. See the License for the specific language\n# governing permissions and limitations under the License.\n\n# Build image from this dockerfile like this:\n# docker build -t modin-omnisci:latest .\n\nFROM ubuntu:20.04\n\n# Proxy settings\nENV http_proxy=${http_proxy}\nENV https_proxy=${https_proxy}\nENV no_proxy=${no_proxy}\n\nRUN apt-get update --yes \\\n    && apt-get install --no-install-recommends wget --yes \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Modin settings\nENV MODIN_STORAGE_FORMAT=\"omnisci\"\nENV MODIN_EXPERIMENTAL=\"true\"\nENV MODIN_ENGINE=\"native\"\n\nENV USER modin\nENV UID 1000\nENV HOME /home/$USER\n\nRUN adduser --disabled-password \\\n    --gecos \"Non-root user\" \\\n    --uid $UID \\\n    --home $HOME \\\n    $USER\n\n# Conda settings\nENV CONDA_DIR=${HOME}/miniconda\nENV CONDA_ENV_NAME=modin-omnisci\nENV PATH=\"${CONDA_DIR}/bin:${PATH}\"\n\nRUN wget -nv https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda3.sh \\\n    && bash /tmp/miniconda3.sh -b -p \"${CONDA_DIR}\" -f -u \\\n    && \"${CONDA_DIR}/bin/conda\" init bash \\\n    && rm -f /tmp/miniconda3.sh\n\nRUN conda update -n base -c defaults conda -y \\\n    && conda create -n ${CONDA_ENV_NAME} --yes -c conda-forge --strict-channel-priority \\\n    modin-omnisci \\\n    scikit-learn \\\n    scikit-learn-intelex \\\n    xgboost \\\n    && conda clean --all --yes\n\n# Activate ${CONDA_ENV_NAME} for interactive shells\nRUN echo \"source ${CONDA_DIR}/bin/activate ${CONDA_ENV_NAME}\" >> \"${HOME}/.bashrc\"\n# Activate ${CONDA_ENV_NAME} for non-interactive shells\n# The following line comments out line that prevents ~/.bashrc execution in\n# non-interactive mode.\nRUN sed -e 's,\\(^[[:space:]]\\+[*]) return;;$\\),# \\1,' -i \"${HOME}/.bashrc\"\nENV BASH_ENV=\"${HOME}/.bashrc\"\n\n# Set up benchmark scripts\nCOPY nyc-taxi-omnisci.py \"${HOME}\"\nCOPY census-omnisci.py \"${HOME}\"\nCOPY plasticc-omnisci.py \"${HOME}\"\nRUN mkdir /dataset\nWORKDIR ${HOME}\n\n# Clean up proxy settings to publish on Docker Hub\nENV http_proxy=\nENV https_proxy=\nENV no_proxy=\n\n# Set entrypoint with arguments expansion\nENTRYPOINT [\"/bin/bash\", \"-c\", \"exec $0 $*\"]\n"
}