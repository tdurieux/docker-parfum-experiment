{
  "startTime": 1674249699084,
  "endTime": 1674249700412,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:2.6.5\nLABEL maintainer=\"Jeremy Rice <jrice@eol.org>\"\nLABEL last_full_rebuild=\"2021-10-28\"\n\nWORKDIR /app\n\nRUN apt-get update -q && \\\n    apt-get install --no-install-recommends -qq -y build-essential libpq-dev curl wget openssh-server openssh-client \\\n    apache2-utils procps supervisor vim nginx logrotate msmtp gnupg && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \\\n    mkdir /etc/ssmtp\n\nCOPY . /app\n\nRUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -\nRUN apt-get update -q && \\\n    apt-get install --no-install-recommends -qq -y nodejs && \\\n    npm install -g --no-fund yarn && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && npm cache clean --force;\n\nCOPY config/nginx-sites.conf /etc/nginx/sites-enabled/default\nCOPY config/nginx.conf /etc/nginx/nginx.conf\n\n# Set up mail (for user notifications, which are rare but critical)\n# root is the person who gets all mail for userids < 1000\nRUN echo \"root=admin@eol.org\" >> /etc/ssmtp/ssmtp.conf\n# Here is the gmail configuration (or change it to your private smtp server)\nRUN echo \"mailhub=smtp-relay.gmail.com:25\" >> /etc/ssmtp/ssmtp.conf\n\nRUN echo \"UseTLS=YES\" >> /etc/ssmtp/ssmtp.conf\nRUN echo \"UseSTARTTLS=YES\" >> /etc/ssmtp/ssmtp.conf\n\nRUN gem install bundler:2.1.4\nRUN bundle config set without 'test development staging'\nRUN bundle install --jobs 10 --retry 5\n# Skipping this for now. The secrets file does not work during a `docker-compose build`. :\\\n# RUN cd app && rake assets:precompile\n\nRUN apt-get update -q && \\\n    apt-get install --no-install-recommends -qq -y cmake && rm -rf /var/lib/apt/lists/*;\n\nRUN cd / && git clone https://github.com/neo4j-drivers/seabolt.git && \\\n    cd seabolt && ./make_debug.sh && cd build && cpack && cd / && \\\n    tar xzf /seabolt/build/dist-package/seabolt-1.7.4-dev-Linux-debian-10.tar.gz && \\\n    cp -rf seabolt-1.7.4-dev-Linux-debian-10/* . && rm /seabolt/build/dist-package/seabolt-1.7.4-dev-Linux-debian-10.tar.gz\n"
}