{
  "startTime": 1674250394079,
  "endTime": 1674250395114,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 135
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 88,
        "columnEnd": 99
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 5,
        "columnEnd": 68
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Create the SDK layers\nARG CENTOS=7.7.1908\nFROM centos:${CENTOS} as builder\n\nWORKDIR /root\n\n# Install kubectl\nARG KUBECTL_VERSION=v1.19.8\nRUN curl -f -o /usr/local/bin/kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \\\n    chmod +x /usr/local/bin/kubectl\n\n# Install kernel, development tools, and Mellanox OFED\nARG OFED=4.7-3.2.9.0\nRUN yum groupinstall -y \"Development Tools\" && \\\n    yum install -y python-devel pciutils numactl-libs valgrind-devel tcsh libdb-devel lsof zlib-devel ethtool numactl-devel libmnl-devel binutils-devel iptables-devel openssl-devel libselinux-devel libnl3 elfutils-devel libnl3-devel && \\\n    curl -f -L -o MLNX_OFED_SRC-${OFED}.tgz https://www.mellanox.com/downloads/ofed/MLNX_OFED-${OFED}/MLNX_OFED_SRC-${OFED}.tgz && \\\n    tar -xvzf MLNX_OFED_SRC-${OFED}.tgz && \\\n    ./MLNX_OFED_SRC-${OFED}/install.pl --all --user-space-only && \\\n    yum clean all \\\n    && rm -rf /var/cache/yum \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base \\\n\tMLNX_OFED_SRC_${OFED} \\\n\tMLNX_OFED_SRC_${OFED}.tgz\n\n# Install Tebis dependencies\nRUN yum install -y epel-release centos-release-scl && \\\n    yum install -y cmake3 devtoolset-10 boost-devel wget ant cppunit-devel \\\n    && rm -rf /var/cache/yum \\\n        /tmp/* \\\n        /var/tmp/* \\\n        /usr/share/man \\\n        /usr/share/doc \\\n        /usr/share/doc-base\n\nRUN wget https://ftp.cc.uoc.gr/mirrors/apache/zookeeper/zookeeper-3.5.9/apache-zookeeper-3.5.9.tar.gz && \\\n    tar xzf apache-zookeeper-3.5.9.tar.gz && \\\n    (cd apache-zookeeper-3.5.9 && ant compile_jute) && \\\n    ( cd apache-zookeeper-3.5.9/zookeeper-client/zookeeper-client-c && autoreconf -if && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make install) && \\\n    rm -rf apache-zookeeper-3.5.9.tar.gz apache-zookeeper-3.5.9 && \\\n    ldconfig /usr/local/lib\n\n# Install Tebis\nRUN git clone --branch metadata_string_format \"https://tebis-docker-container:kEmvUT1ZaceUsad6usGF@carvgit.ics.forth.gr/storage/tebis.git\" tebis && \\\n    mkdir tebis/build && \\\n    (cd tebis/build && scl enable devtoolset-10 -- /bin/bash -c \"cmake3 -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=OFF .. && make -j8\")\n\n\n# Create the manager container\nFROM  centos:${CENTOS} as tebis-node\n\nRUN yum install -y numactl-libs numactl-devel libibverbs librdmacm && rm -rf /var/cache/yum\n# yum groupinstall -y \"Infiniband Support\"\n# yum -y install infiniband-diags perftest gperf\n\nWORKDIR /\nCOPY --from=builder /root/tebis/build/kreon_server ./kreon-server\n\nENTRYPOINT [\"/kreon-server/kreon_server\"]\n"
}