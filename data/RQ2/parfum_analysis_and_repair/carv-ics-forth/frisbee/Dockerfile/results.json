{
  "startTime": 1674215286983,
  "endTime": 1674215287534,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the Frisbee operator binary\nFROM golang:1.17 as builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY api/ api/\nCOPY controllers/ controllers/\nCOPY pkg/ pkg/\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -a -o /manager main.go\n\n# Use alpine as minimal base image to package the Frisbee operator binary\n# We use a non-root user setup.\n#\n# usage:\n# $ docker build --build-arg \"USER=someuser\" . -t test\n# $ docker run --rm -v ${HOME}/.kube/:/home/default/.kube test\nFROM alpine\n\nARG USER=default\nENV HOME /home/$USER\n\n# install sudo as root\nRUN apk add --no-cache --update sudo\n\n# add new user\nRUN adduser -D $USER \\\n        && echo \"$USER ALL=(ALL) NOPASSWD: ALL\" > /etc/sudoers.d/$USER \\\n        && chmod 0440 /etc/sudoers.d/$USER\n\nUSER $USER\nWORKDIR $HOME\n\nCOPY --from=builder /manager ./\n\nENTRYPOINT [\"./manager\"]\n"
}