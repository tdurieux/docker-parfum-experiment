{
  "startTime": 1674254684545,
  "endTime": 1674254685205,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 63,
        "columnEnd": 88
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 63,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 63,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 66,
        "columnEnd": 115
      }
    }
  ],
  "repairedDockerfile": "FROM runmymind/docker-android-sdk:ubuntu-standalone\n\nENV PATH=\"/opt/android-sdk-linux/tools/bin:${PATH}\"\n\n# create the dirs\nRUN mkdir /rnv\nWORKDIR /rnv\n\n# install node\nRUN curl -f -sL https://deb.nodesource.com/setup_10.x | bash - && apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\n# install the sdks used for the test to create the avd\nRUN sdkmanager \"system-images;android-28;default;x86\"\n\n# copy the project\nCOPY . .\n\n# build, link and setup rnv\nRUN npm link && mkdir /root/.rnv/ && echo '{\"sdks\":{\"ANDROID_SDK\":\"/opt/android-sdk-linux\"},\"defaultTargets\":{\"android\":\"Nexus_5X_API_26\",\"androidtv\":\"Android_TV_720p_API_22\",\"firetv\":\"Android_TV_720p_API_22\",\"androidwear\":\"Android_Wear_Round_API_28\"}}' > /root/.rnv/renative.json\n\nRUN npm link && mkdir /root/.rnv/ && echo '{\"workspaces\":{\"rnv\":{\"path\":\"/root/.rnv\"}}}' > /root/.rnv/renative.workspaces.json\n\n\n# RUN echo \"no\" | avdmanager create avd -n android_test -k \"system-images;android-28;default;x86\"\n# RUN echo \"no\" | avdmanager create avd -n android_test -k \"system-images;android-28;default;armeabi-v7a\"\nRUN echo \"no\" | android create avd -n android_test -t android-28 --abi x86\n"
}