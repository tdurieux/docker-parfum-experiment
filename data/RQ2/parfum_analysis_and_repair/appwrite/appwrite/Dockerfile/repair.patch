diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/appwrite/appwrite/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/appwrite/appwrite/Dockerfile/repaired.Dockerfile
index 29d495e..6d6ab4a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/appwrite/appwrite/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/appwrite/appwrite/Dockerfile/repaired.Dockerfile
@@ -56,11 +56,11 @@ RUN docker-php-ext-install sockets
 
 FROM compile AS redis
 RUN \
-  # Redis Extension
+
   git clone --depth 1 --branch $PHP_REDIS_VERSION https://github.com/phpredis/phpredis.git && \
   cd phpredis && \
   phpize && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make && make install
 
 ## Swoole Extension
@@ -69,20 +69,20 @@ RUN \
   git clone --depth 1 --branch $PHP_SWOOLE_VERSION https://github.com/swoole/swoole-src.git && \
   cd swoole-src && \
   phpize && \
-  ./configure --enable-sockets --enable-http2 --enable-openssl && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-sockets --enable-http2 --enable-openssl && \
   make && make install && \
   cd ..
 
 ## Swoole Debugger setup
 RUN if [ "$DEBUG" == "true" ]; then \
     cd /tmp && \
-    apk add boost-dev && \
+    apk add --no-cache boost-dev && \
     git clone --depth 1 https://github.com/swoole/yasd && \
     cd yasd && \
     phpize && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make && make install && \
-    cd ..;\
+    cd ..; \
   fi
 
 ## Imagick Extension
@@ -91,7 +91,7 @@ RUN \
   git clone --depth 1 --branch $PHP_IMAGICK_VERSION https://github.com/imagick/imagick && \
   cd imagick && \
   phpize && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make && make install
 
 ## YAML Extension
@@ -100,7 +100,7 @@ RUN \
   git clone --depth 1 --branch $PHP_YAML_VERSION https://github.com/php/pecl-file_formats-yaml && \
   cd pecl-file_formats-yaml && \
   phpize && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make && make install
 
 ## Maxminddb extension
@@ -110,7 +110,7 @@ RUN \
   cd MaxMind-DB-Reader-php && \
   cd ext && \
   phpize && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make && make install
 
 # Mongodb Extension
@@ -120,7 +120,7 @@ RUN \
   cd mongo-php-driver && \
   git submodule update --init && \
   phpize && \
-  ./configure && \
+  ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
   make && make install
 
 FROM php:8.0.18-cli-alpine3.15 as final
@@ -245,12 +245,12 @@ RUN \
 RUN \
   mkdir -p $DOCKER_CONFIG/cli-plugins \
   && ARCH=$(uname -m) && if [ $ARCH == "armv7l" ]; then ARCH="armv7"; fi \
-  && curl -SL https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-linux-$ARCH -o $DOCKER_CONFIG/cli-plugins/docker-compose \
+  && curl -f -SL https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-linux-$ARCH -o $DOCKER_CONFIG/cli-plugins/docker-compose \
   && chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
 
 RUN \
   if [ "$DEBUG" == "true" ]; then \
-    apk add boost boost-dev; \
+    apk add --no-cache boost boost-dev; \
   fi
 
 WORKDIR /usr/src/code