{
  "startTime": 1674251265568,
  "endTime": 1674251266183,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-alpine3.12\n\nRUN apk add --update \\\n      curl \\\n      build-base \\\n      musl-dev \\\n      zlib-dev \\\n      jpeg-dev \\\n      openssl-dev \\\n      libffi-dev \\\n      ffmpeg \\\n      ffmpeg-dev \\\n      yarn \\\n      libkeyfinder-dev \\\n    && rm -rf /var/cache/apk/*\n\nWORKDIR /app\n\n# Setup PDM\nENV PIP_DISABLE_PIP_VERSION_CHECK=on\nRUN pip install --no-cache-dir pdm\nENV PYTHONPATH=/usr/local/lib/python3.9/site-packages/pdm/pep582\n\n# install python deps\nCOPY pdm.lock pyproject.toml /app/\nRUN pdm install\n\n# Setup frontend dependencies\nCOPY package.json yarn.lock /app/\nRUN yarn install && yarn cache clean;\n\n# Setup volumes for database,\nVOLUME /library\nVOLUME /staging\nVOLUME /storage\n\n# Add python source\nCOPY tune_manager /app/tune_manager/\nRUN pdm install\n\n# Build javascript app\nCOPY webpack.config.ts tsconfig.json /app/\nCOPY app /app/app/\nRUN yarn build\n\nCMD [\"pdm\", \"run\", \"tunemanager\", \\\n     \"--port=80\", \\\n     \"--library-path=/library\", \\\n     \"--staging-path=/staging\", \\\n     \"--storage-path=/storage\"]\n"
}