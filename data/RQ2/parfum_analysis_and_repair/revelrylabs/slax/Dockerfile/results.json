{
  "startTime": 1674249264443,
  "endTime": 1674249265040,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 2,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 78
      }
    }
  ],
  "repairedDockerfile": "# Set the Docker image you want to base your image off.\nFROM hexpm/elixir:1.12.3-erlang-24.1.7-debian-buster-20210902 as builder\n\n# Install other stable dependencies that don't change often\nRUN apt-get update && \\\n  apt-get install -y --no-install-recommends apt-utils postgresql-client nodejs && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/app\n\n# Install and compile project dependencies\n# We do this before all other files to make container build faster\n# when configuration and dependencies are not changed\nCOPY mix.* ./\nCOPY config/* ./config/\n\nENV MIX_ENV prod\n\nRUN mix do local.rebar --force, local.hex --force, deps.get --only prod, deps.compile\n\n# Add the files to the image\nCOPY . .\n\n# Compile app\nRUN mix do compile, release\n\n#\n# END BUILDER\n#\n\nFROM debian:buster-slim\n\nRUN apt-get -qq update\nRUN apt-get -qq --no-install-recommends install -y locales locales-all openssl && rm -rf /var/lib/apt/lists/*;\n\n# Set LOCALE to UTF8\nRUN locale-gen en_US.UTF-8\nENV LANG='en_US.UTF-8' LANGUAGE='en_US:en' LC_ALL='en_US.UTF-8'\n\nENV MIX_ENV=\"prod\" PORT=\"5000\"\n\n# Exposes this port from the docker container to the host machine\nEXPOSE 5000\n\nWORKDIR /app\nCOPY --from=builder /opt/app/_build/prod/rel/slax ./\n\n# The command to run when this image starts up\nCMD [\"./bin/slax\", \"start\"]\n"
}