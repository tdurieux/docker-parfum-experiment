diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ai2cm/fv3core/docker/dependencies.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ai2cm/fv3core/docker/dependencies.Dockerfile/repaired.Dockerfile
index 0458d13..7acd953 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ai2cm/fv3core/docker/dependencies.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ai2cm/fv3core/docker/dependencies.Dockerfile/repaired.Dockerfile
@@ -7,20 +7,20 @@ ARG ESMF_IMAGE
 
 FROM $BASE_IMAGE AS fv3gfs-mpi-install
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     wget \
     gcc \
     g++ \
     gfortran \
-    make
+    make && rm -rf /var/lib/apt/lists/*;
 #RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 && \
 #    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8 && \
 #    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-8 8
-RUN wget -q http://www.mpich.org/static/downloads/3.1.4/mpich-3.1.4.tar.gz && \
+RUN wget -q https://www.mpich.org/static/downloads/3.1.4/mpich-3.1.4.tar.gz && \
     tar xzf mpich-3.1.4.tar.gz && \
     cd mpich-3.1.4 && \
-    ./configure --enable-fortran --enable-cxx --prefix=/usr --enable-fast=all,O3 && \
-    make -j24
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-fortran --enable-cxx --prefix=/usr --enable-fast=all,O3 && \
+    make -j24 && rm mpich-3.1.4.tar.gz
 
 
 FROM busybox as fv3gfs-mpi
@@ -66,12 +66,12 @@ RUN apt-get update && apt-get install -y  --no-install-recommends \
     xz-utils \
     tk-dev \
     libffi-dev \
-    liblzma-dev
+    liblzma-dev && rm -rf /var/lib/apt/lists/*;
 #RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 && \
 #    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8 && \
 #    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-8 8
 ARG PYVERSION=3.8.2
-RUN curl https://pyenv.run | bash
+RUN curl -f https://pyenv.run | bash
 ENV PYENV_ROOT /root/.pyenv
 ENV PATH="/root/.pyenv/bin:${PATH}"
 RUN pyenv update && \
@@ -92,25 +92,25 @@ ENV DEBIAN_FRONTEND=noninteractive TZ=US/Pacific
 RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
 
 # install dependencies for serialbox
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     libssl-dev \
     clang \
     clang-format \
     clang-tidy \
     python3-numpy \
     python3-nose \
-    python3-sphinx
+    python3-sphinx && rm -rf /var/lib/apt/lists/*;
 
 RUN wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3.tar.gz && \
     tar xzf cmake-3.17.3.tar.gz && \
     cd cmake-3.17.3 && \
-    ./bootstrap && make -j4 && make install
+    ./bootstrap && make -j4 && make install && rm cmake-3.17.3.tar.gz
 
 # Install headers from the Boost library
 RUN wget -q https://boostorg.jfrog.io/artifactory/main/release/1.74.0/source/boost_1_74_0.tar.gz && \
     tar xzf boost_1_74_0.tar.gz && \
     cd boost_1_74_0 && \
-    cp -r boost /usr/include/ && cd /
+    cp -r boost /usr/include/ && cd / && rm boost_1_74_0.tar.gz
 
 ###
 ### Build Serialbox
@@ -129,7 +129,7 @@ COPY --from=fv3core-environment-serialbox-install /usr/include/boost /usr/includ
 ###
 FROM $BASE_IMAGE_ENV AS fv3gfs-environment
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     wget \
     gcc \
     g++ \
@@ -144,7 +144,7 @@ RUN apt-get update && apt-get install -y \
     perl \
     rsync \
     libffi-dev \
-    openssl
+    openssl && rm -rf /var/lib/apt/lists/*;
 #RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 8 && \
 #    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 8 && \
 #    update-alternatives --install /usr/bin/gfortran gfortran /usr/bin/gfortran-8 8
@@ -172,10 +172,10 @@ ENV CC=/usr/bin/mpicc \
 
 COPY FMS /FMS
 RUN apt-get update && \
-    apt-get install -y m4 libtool autoconf bats && \
-    cd /FMS && autoreconf --install && ./configure && \
+    apt-get install --no-install-recommends -y m4 libtool autoconf bats && \
+    cd /FMS && autoreconf --install && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     cd /FMS && make -j8 && \
-    mv /FMS/*/*.mod /FMS/*/*.o /FMS/*/*.h /FMS/
+    mv /FMS/*/*.mod /FMS/*/*.o /FMS/*/*.h /FMS/ && rm -rf /var/lib/apt/lists/*;
 
 FROM busybox as fv3gfs-fms
 COPY --from=fv3gfs-fms-install /FMS /FMS