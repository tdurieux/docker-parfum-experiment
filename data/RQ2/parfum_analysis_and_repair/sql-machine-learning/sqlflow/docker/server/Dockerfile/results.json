{
  "startTime": 1674246588217,
  "endTime": 1674246589491,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# NOTE: The docker build context directory must be the root of the source tree.\n# NOTE: To build the release image, SQLFlow must be built into ./build\nFROM alpine:3.12\n\nARG FIND_FASTED_MIRROR=true\n\n# Choose faster mirrors for apt-get and pip\nCOPY docker/dev/find_fastest_resources.sh /usr/local/bin/\nRUN /bin/sh -c 'if [ \"$FIND_FASTED_MIRROR\" == \"true\" ]; then source find_fastest_resources.sh && \\\n    echo \"Choose the fastest Alpine source ...\" && \\\n    choose_fastest_alpine_source && \\\n    echo \"Choose the fastest PIP source ...\" && \\\n    choose_fastest_pip_source; fi'\n\n# Install Python and JRE.  SQLFlow server requires Couler/Fluid to generate YAML\n# files, and Couler/Fluid depends on Python.  The external parsers are in Java.\nRUN apk update \\\n    && apk add --no-cache python3 py3-pip openjdk8-jre-base axel sudo bash && \\\n    wget -q -O /etc/apk/keys/sgerrand.rsa.pub https://cdn.sqlflow.tech/alpine/sgerrand.rsa.pub.txt && \\\n    wget -q https://cdn.sqlflow.tech/alpine/glibc-2.31-r0.apk && \\\n    apk add --no-cache glibc-2.31-r0.apk && \\\n    rm glibc-2.31-r0.apk && \\\n    ln -s /usr/bin/python3 /usr/local/bin/python && \\\n    ln -s /usr/bin/pip3 /usr/local/bin/pip\n\n# Install the SQLFlow Python source code, which includes template code.\nCOPY python /usr/local/sqlflow/python\nENV PYTHONPATH=/usr/local/sqlflow/python:$PYTHONPATH\n\n# Install pre-built SQLFlow components.\nCOPY build /build\nENV SQLFLOW_PARSER_SERVER_PORT=12300\nENV SQLFLOW_PARSER_SERVER_LOADING_PATH=\"/usr/local/sqlflow/java\"\nRUN python3 -m pip install --quiet /build/couler*.whl /build/fluid*.whl && \\\n        mv /build/sqlflowserver /build/sqlflow /build/step /usr/local/bin/ && \\\n        mkdir -p $SQLFLOW_PARSER_SERVER_LOADING_PATH && \\\n        mv /build/*.jar $SQLFLOW_PARSER_SERVER_LOADING_PATH && \\\n        rm -rf /build\n\n# Install kubectl for submitting argo workflow\nCOPY scripts/travis/export_k8s_vars.sh /usr/local/bin/\nCOPY scripts/travis/install_kubectl.sh /usr/local/bin/\nRUN bin/bash -c 'source export_k8s_vars.sh && install_kubectl.sh'\n\n# Expose SQLFlow gRPC server and Jupyter Notebook server port.\nEXPOSE 50051\n\n# The sqlflowserver will find and launch external parser gRPC servers in Java\n# according to environment variables SQLFLOW_PARSER_SERVER_PORT and\n# SQLFLOW_PARSER_SERVER_LOADING_PATH.\nCMD [\"sqlflowserver\"]\n"
}