{
  "startTime": 1674254627451,
  "endTime": 1674254628658,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 119
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 2,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 2,
        "columnEnd": 188
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 2,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04 as base\n\nARG FIND_FASTED_MIRROR=true\n\n# This script assume we are at sqlflow root directory and the directory is already built by sqlflow:dev\n# The default source archive.ubuntu.com is busy and slow. We use the following source makes docker build running faster.\nCOPY docker/dev/find_fastest_resources.sh /usr/local/bin/find_fastest_resources.sh\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN /bin/bash -c 'if [ \"$FIND_FASTED_MIRROR\" == \"true\" ]; then source find_fastest_resources.sh \\\n  && echo \"Choose the fastest APT source ...\" \\\n  && choose_fastest_apt_source \\\n  && echo \"Choose the fastest PIP source ...\" \\\n  && choose_fastest_pip_source; fi' && \\\n  apt-get update && \\\n  apt-get -qq install -y --no-install-recommends openjdk-8-jre-headless python3 libmysqlclient20 python3-idna libgomp1 python3-setuptools python3-pip build-essential python3-dev glpk-utils && \\\n  ln -sf /usr/share/zoneinfo/Etc/UTC /etc/localtime && \\\n  apt-get install --no-install-recommends -y tzdata > /dev/null && \\\n  dpkg-reconfigure --frontend noninteractive tzdata && \\\n  ln -s /usr/bin/python3 /usr/bin/python && \\\n  ln -s /usr/bin/pip3 /usr/bin/pip && \\\n  pip install --no-cache-dir --upgrade pip && \\\n  pip install --no-cache-dir -U setuptools && rm -rf /var/lib/apt/lists/*;\n\n# Build python wheels in sub stage so we can\n# keep the outcome and discard the build tool-chain\nFROM base as builder\nRUN mkdir /install\nWORKDIR /install\n\nENV PATH=\"${PATH}:/install/bin\"\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get -qq --no-install-recommends install -y wget unzip libmysqlclient-dev && \\\n  wget -q https://docs-aliyun.cn-hangzhou.oss.aliyun-inc.com/assets/attach/119096/cn_zh/1557995455961/odpscmd_public.zip && \\\n  mkdir -p /install/local/odpscmd && \\\n  unzip -qq odpscmd_public.zip -d /install/local/odpscmd && \\\n  rm -rf odpscmd_public.zip && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q https://sqlflow-models.oss-cn-zhangjiakou.aliyuncs.com/baron-lin64.zip && \\\n    unzip -qq baron-lin64.zip -d /install && \\\n    mv /install/baron-lin64/baron /usr/bin && \\\n    rm -rf /install/baron-lin64 && \\\n    rm -rf baron-lin64.zip\n\nADD build/sqlflow_models-0.1.0-py3-none-any.whl /\nRUN bash -c 'pip install --no-cache-dir --prefix=/install \\\n    /sqlflow_models-0.1.0-py3-none-any.whl \\\n    six==1.15.0 \\\n    mysqlclient==1.4.4 \\\n    impyla==0.16.0 \\\n    pyodps==0.8.3 \\\n    oss2==2.9.0 \\\n    xgboost==0.90 \\\n    plotille==3.7 \\\n    seaborn==0.9.0 \\\n    dill==0.3.0 \\\n    sklearn2pmml==0.56.0 \\\n    shap==0.30.1 \\\n    PyUtilib==5.8.0 \\\n    pyomo==5.6.9 \\\n    grpcio==1.28.1'\n\nRUN py3clean /install /usr/lib/python3.6\n\n# Copy last stage's output, mostly python libs, to /usr\nFROM base\nCOPY --from=builder /install /usr/\n\nADD build/step /usr/bin/\nADD build/*.jar /opt/sqlflow/parser/\nADD python/runtime /opt/sqlflow/python/runtime/\nADD python/symbol_extractor.py /opt/sqlflow/python/\nADD python/plotille_text_backend.py /opt/sqlflow/python/\n\n\nENV PATH \"${PATH}:/usr/local/odpscmd/bin\"\nENV PYTHONPATH \"${PYTHONPATH}:/usr/lib/python3.6/site-packages:/opt/sqlflow/python\"\n\n"
}