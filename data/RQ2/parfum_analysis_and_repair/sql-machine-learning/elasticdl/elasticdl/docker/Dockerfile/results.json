{
  "startTime": 1674254862852,
  "endTime": 1674254863966,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 92,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 159
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 97,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 31,
        "columnStart": 26,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 31,
        "columnStart": 26,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build Docker images, please refer to scripts/travis/build_images.sh.\nARG BASE_IMAGE\n\nFROM ${BASE_IMAGE} as dev\nARG EXTRA_PYPI_INDEX=https://pypi.org/simple\n\n# Allows for log messages by `print` in Python to be immediately dumped\n# to the stream instead of being buffered.\nENV PYTHONUNBUFFERED 0\n\nCOPY elasticdl/docker/bashrc /etc/bash.bashrc\nRUN chmod a+rx /etc/bash.bashrc\n\nRUN apt-get -qq update && apt-get -qq --no-install-recommends install -y \\\n        unzip \\\n        curl \\\n        git \\\n        software-properties-common \\\n        g++ \\\n        wget \\\n        build-essential \\\n        cmake \\\n        vim \\\n        ca-certificates \\\n        libjpeg-dev \\\n        libpng-dev \\\n        librdmacm1 \\\n        libibverbs1 \\\n        ibverbs-providers \\\n        shellcheck \\\n        libeigen3-dev \\\n        clang-format > /dev/null && \\\n        python -m pip install --quiet --upgrade pip && rm -rf /var/lib/apt/lists/*;\n\nCOPY elasticdl_client/requirements.txt /requirements.txt\nRUN python -m pip install --quiet -r /requirements.txt \\\n        --extra-index-url=$EXTRA_PYPI_INDEX \\\n        && rm /requirements.txt\n\nCOPY elasticdl_preprocessing/requirements.txt /requirements.txt\nRUN python -m pip install --quiet -r /requirements.txt \\\n        --extra-index-url=$EXTRA_PYPI_INDEX \\\n        && rm /requirements.txt\n\nCOPY elasticdl_preprocessing/requirements-dev.txt /requirements-dev.txt\nRUN python -m pip install --quiet -r /requirements-dev.txt \\\n        --extra-index-url=$EXTRA_PYPI_INDEX \\\n        && rm /requirements-dev.txt\n\nCOPY elasticai_api/requirements.txt /requirements.txt\nRUN python -m pip install --quiet -r /requirements.txt \\\n        --extra-index-url=$EXTRA_PYPI_INDEX \\\n        && rm /requirements.txt\n\nCOPY elasticdl/requirements.txt /requirements.txt\nRUN python -m pip install --quiet -r /requirements.txt \\\n        --extra-index-url=$EXTRA_PYPI_INDEX \\\n        && rm /requirements.txt\n\nCOPY elasticdl/requirements-dev.txt /requirements-dev.txt\nRUN python -m pip install --quiet -r /requirements-dev.txt \\\n        --extra-index-url=$EXTRA_PYPI_INDEX \\\n        && rm /requirements-dev.txt\n\nENV TF_PATH /tmp/tensorflow\nRUN cd /tmp \\\n        && git clone --depth=1 --branch v2.2.0-rc0 \\\n        https://github.com/tensorflow/tensorflow\n\n# Install Go and related tools\nARG GO_MIRROR_URL=https://dl.google.com/go\nENV GOPATH /root/go\nENV PATH /usr/local/go/bin:$GOPATH/bin:$PATH\nCOPY elasticdl/docker/scripts/install-go.bash /\nRUN /install-go.bash ${GO_MIRROR_URL} && rm /install-go.bash\n\n# Install protobuf and protoc\nCOPY elasticdl/docker/scripts/install-protobuf.bash /\nRUN /install-protobuf.bash && rm /install-protobuf.bash\n\n# Copy gen_dataset.sh\nCOPY scripts/gen_dataset.sh /scripts/gen_dataset.sh\nCOPY elasticdl/python/data/recordio_gen/image_label.py /scripts/image_label.py\nCOPY elasticdl/python/data/recordio_gen/frappe_recordio_gen.py /scripts/frappe_recordio_gen.py\nCOPY elasticdl/python/data/recordio_gen/heart_recordio_gen.py /scripts/heart_recordio_gen.py\n\nFROM dev as allreduce\n\nRUN pip install --no-cache-dir future typing\n\n# Note that pip is having issue downloading PyTorch on manylinux so we use curl\n# to download it instead\nRUN curl -f -sLo torch-1.4.0-cp36-cp36m-manylinux1_x86_64.whl \\\n        https://files.pythonhosted.org/packages/24/19/4804aea17cd136f1705a5e98a00618cb8f6ccc375ad8bfa437408e09d058/torch-1.4.0-cp36-cp36m-manylinux1_x86_64.whl\nRUN python -m pip install --quiet torch-1.4.0-cp36-cp36m-manylinux1_x86_64.whl \\\n        && rm torch-1.4.0-cp36-cp36m-manylinux1_x86_64.whl\n\nRUN HOROVOD_WITHOUT_MPI=1 \\\n        HOROVOD_WITHOUT_MXNET=1 \\\n        HOROVOD_WITH_TENSORFLOW=1 \\\n        HOROVOD_WITH_PYTORCH=1 \\\n        pip --no-cache-dir \\\n\n\n        install horovod==0.21.0\n"
}