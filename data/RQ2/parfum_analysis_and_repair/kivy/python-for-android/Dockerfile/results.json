{
  "startTime": 1674252572966,
  "endTime": 1674252573754,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 39,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile with:\n#   - Android build environment\n#   - python-for-android dependencies\n#\n# Build with:\n#     docker build --tag=p4a --file Dockerfile .\n#\n# Run with:\n#     docker run -it --rm p4a /bin/sh -c '. venv/bin/activate && p4a apk --help'\n#\n# Or for interactive shell:\n#     docker run -it --rm p4a\n#\n# Note:\n#     Use 'docker run' without '--rm' flag for keeping the container and use\n#     'docker commit <container hash> <new image>' to extend the original image\n\nFROM ubuntu:20.04\n\n# configure locale\nRUN apt -y update -qq > /dev/null \\\n    && DEBIAN_FRONTEND=noninteractive apt install -qq --yes --no-install-recommends \\\n    locales && \\\n    locale-gen en_US.UTF-8 && rm -rf /var/lib/apt/lists/*;\nENV LANG=\"en_US.UTF-8\" \\\n    LANGUAGE=\"en_US.UTF-8\" \\\n    LC_ALL=\"en_US.UTF-8\"\n\nRUN apt -y update -qq > /dev/null \\\n    && DEBIAN_FRONTEND=noninteractive apt install -qq --yes --no-install-recommends \\\n\tca-certificates \\\n    curl \\\n    && apt -y autoremove \\\n    && apt -y clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# retry helper script, refs:\n# https://github.com/kivy/python-for-android/issues/1306\nENV RETRY=\"retry -t 3 --\"\nRUN curl -f https://raw.githubusercontent.com/kadwanev/retry/1.0.1/retry \\\n    --output /usr/local/bin/retry && chmod +x /usr/local/bin/retry\n\nENV USER=\"user\"\nENV HOME_DIR=\"/home/${USER}\"\nENV WORK_DIR=\"${HOME_DIR}/app\" \\\n    PATH=\"${HOME_DIR}/.local/bin:${PATH}\" \\\n    ANDROID_HOME=\"${HOME_DIR}/.android\" \\\n    JAVA_HOME=\"/usr/lib/jvm/java-13-openjdk-amd64\"\n\n\n# install system dependencies\nRUN dpkg --add-architecture i386 \\\n    && ${RETRY} apt -y update -qq > /dev/null \\\n    && ${RETRY} DEBIAN_FRONTEND=noninteractive apt install -qq --yes --no-install-recommends \\\n    autoconf \\\n    automake \\\n    autopoint \\\n    build-essential \\\n    ccache \\\n    cmake \\\n    gettext \\\n    git \\\n    lbzip2 \\\n    libffi-dev \\\n    libgtk2.0-0:i386 \\\n    libidn11:i386 \\\n    libltdl-dev \\\n    libncurses5:i386 \\\n    libssl-dev \\\n    libstdc++6:i386 \\\n    libtool \\\n    openjdk-13-jdk \\\n    patch \\\n    pkg-config \\\n    python3 \\\n    python3-dev \\\n    python3-pip \\\n    python3-venv \\\n    sudo \\\n    unzip \\\n    wget \\\n    zip \\\n    zlib1g-dev \\\n    zlib1g:i386 \\\n    && apt -y autoremove \\\n    && apt -y clean \\\n    && rm -rf /var/lib/apt/lists/*\n\n# prepare non root env\nRUN useradd --create-home --shell /bin/bash ${USER}\n\n# with sudo access and no password\nRUN usermod -append --groups sudo ${USER}\nRUN echo \"%sudo ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n\nWORKDIR ${WORK_DIR}\nRUN mkdir ${ANDROID_HOME} && chown --recursive ${USER} ${HOME_DIR} ${ANDROID_HOME}\nUSER ${USER}\n\n# Download and install android's NDK/SDK\nCOPY --chown=user:user ci/makefiles/android.mk /tmp/android.mk\nRUN make --file /tmp/android.mk \\\n    && sudo rm /tmp/android.mk\n\n# install python-for-android from current branch\nCOPY --chown=user:user Makefile README.md setup.py pythonforandroid/__init__.py ${WORK_DIR}/\nRUN mkdir pythonforandroid \\\n    && mv __init__.py pythonforandroid/ \\\n    && make virtualenv \\\n    && rm -rf ~/.cache/\n\nCOPY --chown=user:user . ${WORK_DIR}\n"
}