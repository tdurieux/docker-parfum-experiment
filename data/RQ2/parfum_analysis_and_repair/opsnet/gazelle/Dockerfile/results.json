{
  "startTime": 1674255166236,
  "endTime": 1674255167695,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim\n\nWORKDIR /var/www\n\n# Software package layer\n# Nodesource setup comes after yarnpkg because it runs `apt-get update`\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        apt-transport-https \\\n        build-essential \\\n        ca-certificates \\\n        curl \\\n        gnupg2 \\\n    && curl -f -sL https://packages.sury.org/php/apt.gpg | apt-key add - \\\n    && echo \"deb https://packages.sury.org/php/ bullseye main\" | tee /etc/apt/sources.list.d/php.list \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        cron \\\n        make \\\n        mariadb-client \\\n        nginx \\\n        php8.1 \\\n        php8.1-cli \\\n        php8.1-curl \\\n        php8.1-fpm \\\n        php8.1-gd \\\n        php8.1-mbstring \\\n        php8.1-memcached \\\n        php8.1-mysql \\\n        php8.1-pgsql \\\n        php8.1-xml \\\n        php8.1-zip \\\n        php-apcu \\\n        php-dev \\\n        php-bcmath \\\n        php-xdebug \\\n        python3 \\\n        python3-pip \\\n        python3-setuptools \\\n        python3-wheel \\\n        software-properties-common \\\n        unzip \\\n        zlib1g-dev \\\n    && curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \\\n    && echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list \\\n    && curl -f -sL https://deb.nodesource.com/setup_12.x | bash - \\\n    && apt-get install -y --no-install-recommends \\\n        nodejs \\\n        yarn \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/*\n\nCOPY --from=composer:2.1 /usr/bin/composer /usr/local/bin/composer\n\n# Python tools layer\nRUN pip3 install --no-cache-dir chardet eac-logchecker xld-logchecker\n\n# Puppeteer layer\n# This installs the necessary packages to run the bundled version of chromium for puppeteer\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        gconf-service \\\n        libasound2 \\\n        libatk1.0-0 \\\n        libc6 \\\n        libcairo2 \\\n        libcups2 \\\n        libdbus-1-3 \\\n        libexpat1 \\\n        libfontconfig1 \\\n        libgcc1 \\\n        libgconf-2-4 \\\n        libgdk-pixbuf2.0-0 \\\n        libglib2.0-0 \\\n        libgtk-3-0 \\\n        libnspr4 \\\n        libpango-1.0-0 \\\n        libpangocairo-1.0-0 \\\n        libstdc++6 \\\n        libx11-6 \\\n        libx11-xcb1 \\\n        libxcb1 \\\n        libxcomposite1 \\\n        libxcursor1 \\\n        libxdamage1 \\\n        libxext6 \\\n        libxfixes3 \\\n        libxi6 \\\n        libxrandr2 \\\n        libxrender1 \\\n        libxss1 \\\n        libxtst6 \\\n        fonts-liberation \\\n        libnss3 \\\n        lsb-release \\\n        xdg-utils \\\n    && apt-get autoremove \\\n    && rm -rf /var/lib/apt/lists/*\n\n# If running Docker >= 1.13.0 use docker run's --init arg to reap zombie processes, otherwise\n# uncomment the following lines to have `dumb-init` as PID 1\n# ADD https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64 /usr/local/bin/dumb-init\n# RUN chmod +x /usr/local/bin/dumb-init\n# ENTRYPOINT [\"dumb-init\", \"--\"]\n\n# Uncomment to skip the chromium download when installing puppeteer. If you do,\n# you'll need to launch puppeteer with:\n#     browser.launch({executablePath: 'google-chrome-unstable'})\n# ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD true\n\nCOPY . /var/www\n\n# Permissions and configuration layer\nRUN useradd -ms /bin/bash gazelle \\\n    && chown -R gazelle:gazelle /var/www \\\n    && cp /var/www/.docker/web/php.ini /etc/php/8.1/cli/php.ini \\\n    && cp /var/www/.docker/web/php.ini /etc/php/8.1/fpm/php.ini \\\n    && cp /var/www/.docker/web/xdebug.ini /etc/php/8.1/mods-available/xdebug.ini \\\n    && cp /var/www/.docker/web/www.conf /etc/php/8.1/fpm/pool.d/www.conf \\\n    && cp /var/www/.docker/web/nginx.conf /etc/nginx/sites-available/gazelle.conf \\\n    && ln -s /etc/nginx/sites-available/gazelle.conf /etc/nginx/sites-enabled/gazelle.conf \\\n    && rm -f /etc/nginx/sites-enabled/default\n\nEXPOSE 80/tcp\nEXPOSE 3306/tcp\nEXPOSE 34000/tcp\n\nENTRYPOINT [ \"/bin/bash\", \"/var/www/.docker/web/entrypoint.sh\" ]\n"
}