{
  "startTime": 1674252704403,
  "endTime": 1674252705086,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04 AS build\n\nARG DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n  build-essential \\\n  ca-certificates \\\n  clang \\\n  curl \\\n  git \\\n  libelf-dev \\\n  libncursesw5-dev \\\n  libssl-dev \\\n  m4 \\\n  pkg-config \\\n  python3 \\\n  zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\n\n# Install rustup\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > /rustup.sh\nRUN chmod +x /rustup.sh\nRUN bash /rustup.sh -y\n\nADD . /below\n# Build below\nWORKDIR below\nRUN /root/.cargo/bin/cargo build --release --all-targets\n\n# Now create stage 2 image. We drop all the build dependencies and only install\n# runtime dependencies. This will create a smaller image suitable for\n# distribution.\nFROM ubuntu:20.04\n\n# Default locale is \"POSIX\" which doesn't seem to play well with UTF-8. Cursive\n# uses UTF-8 to draw lines so we need to set this locale otherwise our lines\n# will be garbled. See https://github.com/gyscos/cursive/issues/13 .\nENV LANG C.UTF-8\n\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y \\\n  libelf1 \\\n  libncursesw5 \\\n  zlib1g && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=build /below/target/release/below /below\n\nENTRYPOINT [\"/below\"]\n"
}