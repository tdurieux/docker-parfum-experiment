{
  "startTime": 1674253273157,
  "endTime": 1674253273819,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################\n# for development\n###############################\n\n### pict ###\nFROM golang:1.13.4-buster AS target_for_development\n\nRUN apt update && apt -y --no-install-recommends install clang && rm -rf /var/lib/apt/lists/*;\nRUN which clang\n\nWORKDIR /root\nRUN git clone https://github.com/microsoft/pict.git\n\nWORKDIR /root/pict\nRUN make && install ./pict /usr/bin\nRUN which pict\n\n### golang ###\n\n# install libraries\nWORKDIR /root/api\nCOPY go.* ./\nRUN go mod download\n\n# to enable auto reloading while developing\nRUN go get github.com/pilu/fresh\n\n###############################\n# for production\n###############################\n\nFROM target_for_development AS target_for_compilation\nWORKDIR /root/api\nCOPY *.go ./\nRUN CGO_ENABLED=0 GOOS=linux go build -v -o server\n\n# Use clean image for a lean production container.\n# https://docs.docker.com/develop/develop-images/multistage-build/#use-multi-stage-builds\nFROM debian:buster-20191014-slim AS target_for_production\nCOPY --from=target_for_compilation /root/pict/pict /usr/bin/\nRUN which pict\nCOPY --from=target_for_compilation /root/api/server /server\nCMD [\"/server\"]\n"
}