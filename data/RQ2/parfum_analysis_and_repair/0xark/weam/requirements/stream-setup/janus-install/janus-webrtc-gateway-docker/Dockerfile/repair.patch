diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/0xark/weam/requirements/stream-setup/janus-install/janus-webrtc-gateway-docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/0xark/weam/requirements/stream-setup/janus-install/janus-webrtc-gateway-docker/Dockerfile/repaired.Dockerfile
index 295c349..6df9b69 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/0xark/weam/requirements/stream-setup/janus-install/janus-webrtc-gateway-docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/0xark/weam/requirements/stream-setup/janus-install/janus-webrtc-gateway-docker/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@ FROM buildpack-deps:stretch
 RUN sed -i 's/archive.ubuntu.com/mirror.aarnet.edu.au\/pub\/ubuntu\/archive/g' /etc/apt/sources.list
 
 RUN rm -rf /var/lib/apt/lists/*
-RUN apt-get -y update && apt-get install -y \
+RUN apt-get -y update && apt-get install --no-install-recommends -y \
     libjansson-dev \
     libnice-dev \
     libssl-dev \
@@ -26,7 +26,7 @@ RUN apt-get -y update && apt-get install -y \
     cmake \
     unzip \
     zip \
-    lsof wget vim sudo rsync cron mysql-client openssh-server supervisor locate gstreamer1.0-tools mplayer valgrind certbot python-certbot-apache dnsutils tcpdump
+    lsof wget vim sudo rsync cron mysql-client openssh-server supervisor locate gstreamer1.0-tools mplayer valgrind certbot python-certbot-apache dnsutils tcpdump && rm -rf /var/lib/apt/lists/*;
 
 
 
@@ -34,67 +34,67 @@ RUN apt-get -y update && apt-get install -y \
 RUN mkdir ~/ffmpeg_sources
 
 RUN apt-get update && \
-    apt-get -y install autoconf automake build-essential libass-dev libfreetype6-dev \
+    apt-get -y --no-install-recommends install autoconf automake build-essential libass-dev libfreetype6-dev \
     libsdl1.2-dev libtheora-dev libtool libva-dev libvdpau-dev libvorbis-dev libxcb1-dev libxcb-shm0-dev \
-    libxcb-xfixes0-dev pkg-config texinfo zlib1g-dev
+    libxcb-xfixes0-dev pkg-config texinfo zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN YASM="1.3.0" && cd ~/ffmpeg_sources && \
-    wget http://www.tortall.net/projects/yasm/releases/yasm-$YASM.tar.gz && \
+    wget https://www.tortall.net/projects/yasm/releases/yasm-$YASM.tar.gz && \
     tar xzvf yasm-$YASM.tar.gz && \
     cd yasm-$YASM && \
-    ./configure --prefix="$HOME/ffmpeg_build" --bindir="$HOME/bin"  && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$HOME/ffmpeg_build" --bindir="$HOME/bin" && \
     make && \
     make install && \
-    make distclean
+    make distclean && rm yasm-$YASM.tar.gz
 
 RUN VPX="v1.8.1" && cd ~/ffmpeg_sources && \
     wget https://chromium.googlesource.com/webm/libvpx/+archive/$VPX.tar.gz && \
     tar xzvf $VPX.tar.gz && \
     pwd \
     cd $VPX && \
-    PATH="$HOME/bin:$PATH" ./configure --prefix="$HOME/ffmpeg_build" --disable-examples --disable-unit-tests && \
+    PATH="$HOME/bin:$PATH" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$HOME/ffmpeg_build" --disable-examples --disable-unit-tests && \
     PATH="$HOME/bin:$PATH" make && \
     make install && \
-    make clean
+    make clean && rm $VPX.tar.gz
 
 
 RUN OPUS="1.3" && cd ~/ffmpeg_sources && \
     wget https://archive.mozilla.org/pub/opus/opus-$OPUS.tar.gz && \
     tar xzvf opus-$OPUS.tar.gz && \
     cd opus-$OPUS && \
-    ./configure --help && \
-    ./configure --prefix="$HOME/ffmpeg_build"  && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --help && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$HOME/ffmpeg_build" && \
     make && \
     make install && \
-    make clean
+    make clean && rm opus-$OPUS.tar.gz
 
 
-RUN LAME="3.100" && apt-get install -y nasm  && cd ~/ffmpeg_sources && \
-    wget http://downloads.sourceforge.net/project/lame/lame/$LAME/lame-$LAME.tar.gz && \
+RUN LAME="3.100" && apt-get install --no-install-recommends -y nasm && cd ~/ffmpeg_sources && \
+    wget https://downloads.sourceforge.net/project/lame/lame/$LAME/lame-$LAME.tar.gz && \
     tar xzvf lame-$LAME.tar.gz && \
     cd lame-$LAME && \
-    ./configure --prefix="$HOME/ffmpeg_build" --enable-nasm --disable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$HOME/ffmpeg_build" --enable-nasm --disable-shared && \
     make && \
-    make install
+    make install && rm lame-$LAME.tar.gz && rm -rf /var/lib/apt/lists/*;
 
 RUN X264="20181001-2245-stable" && cd ~/ffmpeg_sources && \
-    wget http://download.videolan.org/pub/x264/snapshots/x264-snapshot-$X264.tar.bz2 && \
+    wget https://download.videolan.org/pub/x264/snapshots/x264-snapshot-$X264.tar.bz2 && \
     tar xjvf x264-snapshot-$X264.tar.bz2 && \
     cd x264-snapshot-$X264 && \
-    PATH="$HOME/bin:$PATH" ./configure --prefix="$HOME/ffmpeg_build" --bindir="$HOME/bin" --enable-static --disable-opencl --disable-asm && \
+    PATH="$HOME/bin:$PATH" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$HOME/ffmpeg_build" --bindir="$HOME/bin" --enable-static --disable-opencl --disable-asm && \
     PATH="$HOME/bin:$PATH" make && \
     make install && \
-    make distclean
+    make distclean && rm x264-snapshot-$X264.tar.bz2
 
 RUN FDK_AAC="2.0.1" && cd ~/ffmpeg_sources && \
     wget -O fdk-aac.tar.gz https://github.com/mstorsjo/fdk-aac/archive/v$FDK_AAC.tar.gz && \
     tar xzvf fdk-aac.tar.gz && \
     cd fdk-aac-$FDK_AAC && \
     autoreconf -fiv && \
-    ./configure --prefix="$HOME/ffmpeg_build" --disable-shared && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix="$HOME/ffmpeg_build" --disable-shared && \
     make && \
     make install && \
-    make distclean
+    make distclean && rm fdk-aac.tar.gz
 
 RUN FFMPEG_VER="n4.2.1" && cd ~/ffmpeg_sources && \
     wget https://github.com/FFmpeg/FFmpeg/archive/$FFMPEG_VER.zip && \
@@ -102,7 +102,7 @@ RUN FFMPEG_VER="n4.2.1" && cd ~/ffmpeg_sources && \
 
 RUN FFMPEG_VER="n4.2.1" && cd ~/ffmpeg_sources && \
     cd FFmpeg-$FFMPEG_VER && \
-    PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
+    PATH="$HOME/bin:$PATH" PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     --prefix="$HOME/ffmpeg_build" \
     --pkg-config-flags="--static" \
     --extra-cflags="-I$HOME/ffmpeg_build/include" \
@@ -137,15 +137,15 @@ RUN ZLIB="zlib-1.2.11" && vNGRTMP="v1.1.11" && PCRE="8.41" && nginx_build=/root/
     wget https://ftp.pcre.org/pub/pcre/pcre-$PCRE.tar.gz && \
     tar -zxf pcre-$PCRE.tar.gz && \
     cd pcre-$PCRE && \
-    ./configure && make && make install && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && \
     cd $nginx_build && \
-    wget http://zlib.net/$ZLIB.tar.gz && \
+    wget https://zlib.net/$ZLIB.tar.gz && \
     tar -zxf $ZLIB.tar.gz && \
     cd $ZLIB && \
-    ./configure && make &&  make install && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && \
     cd $nginx_build && \
     wget https://github.com/arut/nginx-rtmp-module/archive/$vNGRTMP.tar.gz && \
-    tar zxf $vNGRTMP.tar.gz && mv nginx-rtmp-module-* nginx-rtmp-module
+    tar zxf $vNGRTMP.tar.gz && mv nginx-rtmp-module-* nginx-rtmp-module && rm pcre-$PCRE.tar.gz
 
 
 RUN OPENRESTY="1.13.6.2" && ZLIB="zlib-1.2.11" && PCRE="pcre-8.41" &&  openresty_build=/root/openresty && mkdir $openresty_build && \
@@ -153,8 +153,8 @@ RUN OPENRESTY="1.13.6.2" && ZLIB="zlib-1.2.11" && PCRE="pcre-8.41" &&  openresty
     tar zxf openresty-$OPENRESTY.tar.gz && \
     cd openresty-$OPENRESTY && \
     nginx_build=/root/nginx && \
-    ./configure --sbin-path=/usr/local/nginx/nginx \
-    --conf-path=/usr/local/nginx/nginx.conf  \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --sbin-path=/usr/local/nginx/nginx \
+    --conf-path=/usr/local/nginx/nginx.conf \
     --pid-path=/usr/local/nginx/nginx.pid \
     --with-pcre-jit \
     --with-ipv6 \
@@ -164,7 +164,7 @@ RUN OPENRESTY="1.13.6.2" && ZLIB="zlib-1.2.11" && PCRE="pcre-8.41" &&  openresty
     --with-stream \
     --with-mail=dynamic \
     --add-module=$nginx_build/nginx-rtmp-module && \
-    make && make install && mv /usr/local/nginx/nginx /usr/local/bin
+    make && make install && mv /usr/local/nginx/nginx /usr/local/bin && rm openresty-$OPENRESTY.tar.gz
 
 
 
@@ -216,14 +216,14 @@ RUN LIBWEBSOCKET="3.1.0" && wget https://github.com/warmcat/libwebsockets/archiv
     mkdir build && \
     cd build && \
     cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr -DCMAKE_C_FLAGS="-fpic" -DLWS_MAX_SMP=1 -DLWS_IPV6="ON" .. && \
-    make && make install
+    make && make install && rm v$LIBWEBSOCKET.tar.gz
 
 
 RUN SRTP="2.2.0" && apt-get remove -y libsrtp0-dev && wget https://github.com/cisco/libsrtp/archive/v$SRTP.tar.gz && \
     tar xfv v$SRTP.tar.gz && \
     cd libsrtp-$SRTP && \
-    ./configure --prefix=/usr --enable-openssl && \
-    make shared_library && sudo make install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --enable-openssl && \
+    make shared_library && sudo make install && rm v$SRTP.tar.gz
 
 
 
@@ -231,21 +231,21 @@ RUN SRTP="2.2.0" && apt-get remove -y libsrtp0-dev && wget https://github.com/ci
 RUN apt-get remove -y libnice-dev libnice10 && \
     echo "deb http://deb.debian.org/debian  stretch-backports main" >> /etc/apt/sources.list && \
     apt-get  update && \
-    apt-get install -y gtk-doc-tools libgnutls28-dev -t stretch-backports  && \
+    apt-get install --no-install-recommends -y gtk-doc-tools libgnutls28-dev -t stretch-backports && \
     git clone https://gitlab.freedesktop.org/libnice/libnice.git && \
     cd libnice && \
     git checkout 67807a17ce983a860804d7732aaf7d2fb56150ba && \
     bash autogen.sh && \
-    ./configure --prefix=/usr && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && \
     make && \
-    make install
+    make install && rm -rf /var/lib/apt/lists/*;
 
 
 RUN COTURN="4.5.0.8" && wget https://github.com/coturn/coturn/archive/$COTURN.tar.gz && \
     tar xzvf $COTURN.tar.gz && \
     cd coturn-$COTURN && \
-    ./configure && \
-    make && make install
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
+    make && make install && rm $COTURN.tar.gz
 
 
 # RUN GDB="8.0" && wget ftp://sourceware.org/pub/gdb/releases/gdb-$GDB.tar.gz && \
@@ -263,7 +263,7 @@ RUN COTURN="4.5.0.8" && wget https://github.com/coturn/coturn/archive/$COTURN.ta
 RUN cd / && git clone https://github.com/sctplab/usrsctp.git && cd /usrsctp && \
     git checkout origin/master && git reset --hard 1c9c82fbe3582ed7c474ba4326e5929d12584005 && \
     ./bootstrap && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make && make install
 
 WORKDIR /tmp
@@ -271,15 +271,15 @@ RUN git clone https://git.gnunet.org/libmicrohttpd.git
 WORKDIR /tmp/libmicrohttpd
 RUN git checkout v0.9.60
 RUN autoreconf -fi
-RUN ./configure
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
 RUN make && make install
 
 
 
 RUN cd / && git clone https://github.com/meetecho/janus-gateway.git && cd /janus-gateway && \
     git checkout refs/tags/v0.9.2 && \
-    sh autogen.sh &&  \
-    PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure \
+    sh autogen.sh && \
+    PKG_CONFIG_PATH="$HOME/ffmpeg_build/lib/pkgconfig" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     --enable-post-processing \
     --enable-boringssl \
     --enable-data-channels \
@@ -307,7 +307,7 @@ ENV NVM_VERSION v0.35.3
 ENV NODE_VERSION v10.16.0
 ENV NVM_DIR /usr/local/nvm
 RUN mkdir $NVM_DIR
-RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/$NVM_VERSION/install.sh | bash
+RUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/$NVM_VERSION/install.sh | bash
 
 ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
 ENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH