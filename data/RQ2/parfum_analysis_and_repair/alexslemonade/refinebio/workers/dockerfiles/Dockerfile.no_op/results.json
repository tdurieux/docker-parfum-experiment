{
  "startTime": 1674255262230,
  "endTime": 1674255263225,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 2,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:apt-fast/stable\n# deadsnakes packages new python versions for older Ubuntu releases\nRUN add-apt-repository ppa:deadsnakes/ppa\nRUN apt-get update -qq\nRUN apt-get -y --no-install-recommends install apt-fast && rm -rf /var/lib/apt/lists/*;\n\n# Prevent tzdata from prompting us for a timezone and hanging the build.\nENV DEBIAN_FRONTEND=noninteractive\n\n# The packages related to R are somewhat weird, see the README for more details.\n\nCOPY workers/CRAN.gpg .\nRUN \\\n  apt-fast update -qq && \\\n  apt-get install --no-install-recommends -y apt-transport-https && \\\n  apt-fast install -y lsb-release && \\\n  echo \"deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/\" \\\n      >> /etc/apt/sources.list.d/added_repos.list && \\\n  apt-key add CRAN.gpg && \\\n  apt-fast update -qq && \\\n  apt-fast install -y \\\n  ed \\\n  git \\\n  mercurial \\\n  libcairo-dev \\\n  libedit-dev \\\n  lsb-release \\\n  python3.6 \\\n  python3.6-dev \\\n  python3-pip \\\n  r-base-core \\\n  r-base-dev \\\n  libpq-dev \\\n  libxml2-dev \\\n  libssl-dev \\\n  libcurl4-openssl-dev \\\n  curl \\\n  unzip \\\n  wget && \\\n  rm -rf /var/lib/apt/lists/*\nRUN rm CRAN.gpg\n\n# Set the system python version to python3.6 from deadsnakes\nRUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.6 1\n\nRUN groupadd user && useradd --create-home --home-dir /home/user -g user user\nWORKDIR /home/user\n\n# Noop-specific requirements\nENV R_LIBS \"/usr/local/lib/R/site-library\"\n\nCOPY common/install_devtools.R .\n\nRUN Rscript install_devtools.R\n\nCOPY workers/R_dependencies/no_op/dependencies.R .\nRUN Rscript dependencies.R\n\nCOPY workers/install_gene_convert.R .\nRUN Rscript install_gene_convert.R\nRUN mkdir -p gene_indexes\nWORKDIR /home/user/gene_indexes\nENV ID_REFINERY_URL https://zenodo.org/record/1410647/files/all_1536267482.zip\nRUN curl -f -O $ID_REFINERY_URL\nRUN echo $ID_REFINERY_URL > /etc/identifier_refinery_url\nRUN unzip *.zip\nRUN rm *.zip\nWORKDIR /home/user\n# End Noop-specific\n\nCOPY workers/data_refinery_workers/processors/requirements.txt .\n\n# Source: https://github.com/thisbejim/Pyrebase/issues/87#issuecomment-354452082\n# For whatever reason this worked and 'en_US.UTF-8' did not.\nENV LANG C.UTF-8\n\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY config/ config/\nCOPY .boto .boto\nCOPY common/dist/data-refinery-common-* common/\n\n# Get the latest version from the dist directory.\nRUN pip3 install --no-cache-dir common/$(ls common -1 | sort --version-sort | tail -1)\n\n# Clear our the pip3 cache\nRUN rm -rf /root/.cache\n\nARG SYSTEM_VERSION\n\nENV SYSTEM_VERSION $SYSTEM_VERSION\n\nUSER user\n\nCOPY workers/ .\n\nENTRYPOINT []\n"
}