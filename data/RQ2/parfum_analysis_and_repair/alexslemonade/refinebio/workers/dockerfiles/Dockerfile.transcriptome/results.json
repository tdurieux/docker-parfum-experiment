{
  "startTime": 1674220530147,
  "endTime": 1674220531857,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 8,
        "columnEnd": 61
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 8,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:apt-fast/stable\nRUN apt-get update -qq\nRUN apt-get -y --no-install-recommends install apt-fast && rm -rf /var/lib/apt/lists/*;\n\n# Prevent tzdata from prompting us for a timezone and hanging the build.\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN \\\n  apt-fast update -qq && \\\n  apt-fast install -y \\\n  ed \\\n  git \\\n  python3 \\\n  python3-pip \\\n  libcurl4-openssl-dev \\\n  libpq-dev \\\n  zlib1g-dev \\\n  curl \\\n  wget && \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN groupadd user && useradd --create-home --home-dir /home/user -g user user\nWORKDIR /home/user\n\n# It's annoying that this can only be installed via git.\nRUN git clone https://github.com/deweylab/RSEM.git\n\nRUN cd RSEM && make install\n\nRUN rm -rf RSEM\n\n# Install Salmon\n\n# Tximport requires all experiments to be processed with the same version of Salmon to work https://github.com/AlexsLemonade/refinebio/issues/1496\n# This is something that should be considered when updating salmon, because\n# all samples from incomplete experiments must have salmon run on them again.\nENV SALMON_VERSION 0.13.1\n\n# Doesn't work:\n# salmon: relocation error: /usr/local/bin/../lib/librt.so.1: symbol __vdso_clock_gettime, version GLIBC_PRIVATE not defined in file libc.so.6 with link time reference\n# ENV SALMON_VERSION 0.10.0\n\n# Binary releases moved to bioconda, doesn't work anymore.\n# ENV SALMON_VERSION 0.10.2\n\nRUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz\n\nRUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz && rm Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz\n\n# Salmon can extract to a different directory than the name of the tar file.\nRUN cp `tar -tzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz | head -1 | cut -f1 -d\"/\"`/bin/salmon /usr/local/bin && rm Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz\n\nRUN cp `tar -tzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz | head -1 | cut -f1 -d\"/\"`/lib/* /usr/local/lib && rm Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz\n\nRUN rm -r Salmon*\n# End Salmon installation.\n\n# Source: https://github.com/thisbejim/Pyrebase/issues/87#issuecomment-354452082\n# For whatever reason this worked and 'en_US.UTF-8' did not.\nENV LANG C.UTF-8\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\nCOPY config/ config/\nCOPY .boto .boto\n\nCOPY workers/data_refinery_workers/processors/requirements.txt .\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY common/dist/data-refinery-common-* common/\n\n# Get the latest version from the dist directory.\nRUN pip3 install --no-cache-dir common/$(ls common -1 | sort --version-sort | tail -1)\n\n# Clear our the pip3 cache\nRUN rm -rf /root/.cache\n\nARG SYSTEM_VERSION\n\nENV SYSTEM_VERSION $SYSTEM_VERSION\n\nUSER user\n\nCOPY workers/ .\n\nENTRYPOINT []\n"
}