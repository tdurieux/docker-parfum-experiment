diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alexslemonade/refinebio/workers/dockerfiles/Dockerfile.salmon b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alexslemonade/refinebio/workers/dockerfiles/Dockerfile.salmon/repaired.Dockerfile
index 3192288..950c87a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/alexslemonade/refinebio/workers/dockerfiles/Dockerfile.salmon
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/alexslemonade/refinebio/workers/dockerfiles/Dockerfile.salmon/repaired.Dockerfile
@@ -1,10 +1,10 @@
 FROM ubuntu:18.04
 
 RUN apt-get update -qq
-RUN apt-get install -y software-properties-common
+RUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN add-apt-repository ppa:apt-fast/stable
 RUN apt-get update -qq
-RUN apt-get -y install apt-fast
+RUN apt-get -y --no-install-recommends install apt-fast && rm -rf /var/lib/apt/lists/*;
 
 # Prevent tzdata from prompting us for a timezone and hanging the build.
 ENV DEBIAN_FRONTEND=noninteractive
@@ -15,7 +15,7 @@ COPY workers/CRAN.gpg .
 
 RUN \
   apt-fast update -qq && \
-  apt-get install -y apt-transport-https && \
+  apt-get install --no-install-recommends -y apt-transport-https && \
   apt-fast install -y lsb-release && \
   echo "deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/" \
       >> /etc/apt/sources.list.d/added_repos.list && \
@@ -54,7 +54,7 @@ RUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSI
 RUN mkdir Salmon-${SALMON_VERSION}_linux_x86_64
 # On version 0.13.1 salmon was being extracted to a folder with an all lowercase name
 # the options `-C` and `--strip-components` allow us to specify the name for the resulting file
-RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz -C Salmon-${SALMON_VERSION}_linux_x86_64 --strip-components 1
+RUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz -C Salmon-${SALMON_VERSION}_linux_x86_64 --strip-components 1 && rm Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz
 # Create soft link `/usr/local/bin/salmon` that points to the actual program
 RUN ln -sf `pwd`/Salmon-${SALMON_VERSION}_linux_x86_64/bin/salmon /usr/local/bin/
 RUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz
@@ -77,27 +77,27 @@ RUN rm -rf SalmonTools
 
 # Install sra-tools
 ENV SRA_VERSION 2.9.1
-RUN wget "http://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/${SRA_VERSION}/sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz" && \
+RUN wget "https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/${SRA_VERSION}/sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz" && \
     tar zxfv sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz && \
-    cp -r sratoolkit.${SRA_VERSION}-ubuntu64/bin/* /usr/bin
+    cp -r sratoolkit.${SRA_VERSION}-ubuntu64/bin/* /usr/bin && rm sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz
 
 # Source: https://github.com/thisbejim/Pyrebase/issues/87#issuecomment-354452082
 # For whatever reason this worked and 'en_US.UTF-8' did not.
 ENV LANG C.UTF-8
 
-RUN pip3 install --upgrade pip
+RUN pip3 install --no-cache-dir --upgrade pip
 
 COPY config/ config/
 COPY .boto .boto
 
 COPY workers/data_refinery_workers/processors/requirements.txt .
 
-RUN pip3 install -r requirements.txt
+RUN pip3 install --no-cache-dir -r requirements.txt
 
 COPY common/dist/data-refinery-common-* common/
 
 # Get the latest version from the dist directory.
-RUN pip3 install common/$(ls common -1 | sort --version-sort | tail -1)
+RUN pip3 install --no-cache-dir common/$(ls common -1 | sort --version-sort | tail -1)
 
 ARG SYSTEM_VERSION