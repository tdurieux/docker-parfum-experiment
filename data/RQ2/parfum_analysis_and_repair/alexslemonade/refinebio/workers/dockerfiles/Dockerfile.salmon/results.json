{
  "startTime": 1674218435368,
  "endTime": 1674218436923,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 2,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:apt-fast/stable\nRUN apt-get update -qq\nRUN apt-get -y --no-install-recommends install apt-fast && rm -rf /var/lib/apt/lists/*;\n\n# Prevent tzdata from prompting us for a timezone and hanging the build.\nENV DEBIAN_FRONTEND=noninteractive\n\n# The packages related to R are somewhat weird, see the README for more details.\n\nCOPY workers/CRAN.gpg .\n\nRUN \\\n  apt-fast update -qq && \\\n  apt-get install --no-install-recommends -y apt-transport-https && \\\n  apt-fast install -y lsb-release && \\\n  echo \"deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/\" \\\n      >> /etc/apt/sources.list.d/added_repos.list && \\\n  apt-key add CRAN.gpg && \\\n  apt-fast update -qq && \\\n  apt-fast install -y \\\n  ed \\\n  git \\\n  mercurial \\\n  libcairo-dev \\\n  libedit-dev \\\n  lsb-release \\\n  python3 \\\n  python3-pip \\\n  libxml2-dev \\\n  cmake \\\n  r-base-core \\\n  libssl-dev \\\n  libcurl4-openssl-dev \\\n  curl \\\n  wget && \\\n  rm -rf /var/lib/apt/lists/*\nRUN rm CRAN.gpg\n\nRUN groupadd user && useradd --create-home --home-dir /home/user -g user user\nWORKDIR /home/user\n\n# Install Salmon\n\n# Tximport requires all experiments to be processed with the same version of Salmon to work https://github.com/AlexsLemonade/refinebio/issues/1496\n# This is something that should be considered when updating salmon, because\n# all samples from incomplete experiments must have salmon run on them again.\nENV SALMON_VERSION 0.13.1\n\nRUN wget https://github.com/COMBINE-lab/salmon/releases/download/v${SALMON_VERSION}/Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz\nRUN mkdir Salmon-${SALMON_VERSION}_linux_x86_64\n# On version 0.13.1 salmon was being extracted to a folder with an all lowercase name\n# the options `-C` and `--strip-components` allow us to specify the name for the resulting file\nRUN tar -xzf Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz -C Salmon-${SALMON_VERSION}_linux_x86_64 --strip-components 1 && rm Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz\n# Create soft link `/usr/local/bin/salmon` that points to the actual program\nRUN ln -sf `pwd`/Salmon-${SALMON_VERSION}_linux_x86_64/bin/salmon /usr/local/bin/\nRUN rm -f Salmon-${SALMON_VERSION}_linux_x86_64.tar.gz\n# End Salmon installation.\n\n# Install R dependencies\nCOPY common/install_devtools.R .\nRUN Rscript install_devtools.R\nCOPY workers/R_dependencies/tximport/dependencies.R tximport_dependencies.R\nRUN Rscript tximport_dependencies.R\n\n# Install tximport\nCOPY workers/install_tximport.R .\nRUN Rscript install_tximport.R\n\n# Install SalmonTools\nRUN git clone https://github.com/COMBINE-lab/SalmonTools.git && cd SalmonTools && git checkout 3e6654c2c10a5225498b623056993947fa688afc\nRUN cd SalmonTools && cmake . -DCMAKE_INSTALL_PREFIX=/usr/local && make install\nRUN rm -rf SalmonTools\n\n# Install sra-tools\nENV SRA_VERSION 2.9.1\nRUN wget \"https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/${SRA_VERSION}/sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz\" && \\\n    tar zxfv sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz && \\\n    cp -r sratoolkit.${SRA_VERSION}-ubuntu64/bin/* /usr/bin && rm sratoolkit.${SRA_VERSION}-ubuntu64.tar.gz\n\n# Source: https://github.com/thisbejim/Pyrebase/issues/87#issuecomment-354452082\n# For whatever reason this worked and 'en_US.UTF-8' did not.\nENV LANG C.UTF-8\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\nCOPY config/ config/\nCOPY .boto .boto\n\nCOPY workers/data_refinery_workers/processors/requirements.txt .\n\nRUN pip3 install --no-cache-dir -r requirements.txt\n\nCOPY common/dist/data-refinery-common-* common/\n\n# Get the latest version from the dist directory.\nRUN pip3 install --no-cache-dir common/$(ls common -1 | sort --version-sort | tail -1)\n\nARG SYSTEM_VERSION\n\nENV SYSTEM_VERSION $SYSTEM_VERSION\n\nUSER user\n\nCOPY workers/ .\n\nENTRYPOINT []\n"
}