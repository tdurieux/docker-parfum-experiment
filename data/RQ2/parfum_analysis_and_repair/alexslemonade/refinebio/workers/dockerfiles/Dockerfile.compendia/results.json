{
  "startTime": 1674218388820,
  "endTime": 1674218390077,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 71
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:11.1-runtime-ubuntu18.04\n\n# This is very similar to the `smasher` image, but comes with OpenBLAS and some\n# of the other libraries required for fancyimpute.\n\nRUN apt-get update -qq\nRUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:apt-fast/stable\nRUN apt-get update -qq\n# via https://github.com/ilikenwf/apt-fast/issues/85#issuecomment-261640099\nRUN echo debconf apt-fast/maxdownloads string 16 | debconf-set-selections\nRUN echo debconf apt-fast/dlflag boolean true | debconf-set-selections\nRUN echo debconf apt-fast/aptmanager string apt-get | debconf-set-selections\nRUN _APTMGR=apt-get apt-get --no-install-recommends install -y apt-fast && rm -rf /var/lib/apt/lists/*;\n\nRUN export DEBIAN_FRONTEND=noninteractive; \\\n    export DEBCONF_NONINTERACTIVE_SEEN=true; \\\n    echo 'tzdata tzdata/Areas select Etc' | debconf-set-selections; \\\n    echo 'tzdata tzdata/Zones/Etc select UTC' | debconf-set-selections; \\\n    apt-get update -qqy \\\n && apt-get install -qqy --no-install-recommends \\\n        tzdata \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY workers/CRAN.gpg .\nRUN \\\n  apt-fast update -qq && \\\n  apt-fast install -y lsb-release && \\\n  echo \"deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/\" \\\n      >> /etc/apt/sources.list.d/added_repos.list && \\\n  apt-key add CRAN.gpg && \\\n  apt-fast update -qq && \\\n  apt-fast install -y \\\n  ed \\\n  git \\\n  liblapack-dev \\\n  libopenblas-dev \\\n  python3 \\\n  python3-pip \\\n  libcurl4-openssl-dev \\\n  libpq-dev \\\n  r-base-core \\\n  r-base-dev \\\n  libpq-dev \\\n  libxml2-dev \\\n  libssl-dev \\\n  libcurl4-openssl-dev \\\n  curl \\\n  wget && \\\n  rm -rf /var/lib/apt/lists/*\nRUN rm CRAN.gpg\n\nRUN groupadd user && useradd --create-home --home-dir /home/user -g user user\nWORKDIR /home/user\n\nRUN wget https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN tar xvjf phantomjs-2.1.1-linux-x86_64.tar.bz2 -C /usr/local/share/ && rm phantomjs-2.1.1-linux-x86_64.tar.bz2\nRUN ln -s /usr/local/share/phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/\n\n# We need a few special packages for QN\nENV R_LIBS \"/usr/local/lib/R/site-library\"\n\nCOPY common/install_devtools.R .\n\nRUN Rscript install_devtools.R\n\nCOPY workers/R_dependencies/qn/dependencies.R .\nRUN Rscript dependencies.R\n\nCOPY workers/qn_dependencies.R .\nRUN Rscript qn_dependencies.R\n# End QN-specific\n\n# Source: https://github.com/thisbejim/Pyrebase/issues/87#issuecomment-354452082\n# For whatever reason this worked and 'en_US.UTF-8' did not.\nENV LANG C.UTF-8\n\nRUN pip3 install --no-cache-dir --upgrade pip\n\n# Smasher-specific requirements\nRUN pip3 install --no-cache-dir numpy scipy matplotlib pandas==0.25.3 scikit-learn sympy nose rpy2===3.4.5 tzlocal fancySVD\n# End smasher-specific\n\nCOPY config/ config/\nCOPY .boto .boto\n\nCOPY workers/data_refinery_workers/processors/requirements.txt .\n\nRUN  pip3 --no-cache-dir install -r requirements.txt\nRUN pip3 install --no-cache-dir numpy==1.16.0# Fix a downgrade\n\nCOPY common/dist/data-refinery-common-* common/\n\n# Get the latest version from the dist directory.\nRUN pip3 install --no-cache-dir common/$(ls common -1 | sort --version-sort | tail -1)\n\n# Clear our the pip3 cache\nRUN rm -rf /root/.cache\n\nARG SYSTEM_VERSION\n\nENV SYSTEM_VERSION $SYSTEM_VERSION\n\nUSER user\n\nCOPY workers/ .\n\nENTRYPOINT []\n"
}