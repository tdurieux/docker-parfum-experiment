diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/persiaml/persia/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/persiaml/persia/Dockerfile/repaired.Dockerfile
index 3f240c1..c55eae6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/persiaml/persia/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/persiaml/persia/Dockerfile/repaired.Dockerfile
@@ -24,9 +24,9 @@ RUN apt-get -y update && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-
     ethtool \
     telnet \
     openjdk-11-jdk \
-    openssh-server 
+    openssh-server && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
+RUN curl -f -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \
     rm ~/miniconda.sh && \
@@ -47,7 +47,7 @@ RUN mkdir -p /opt/hadoop/; \
     cd /opt/hadoop/; \
     wget https://dlcdn.apache.org/hadoop/common/hadoop-3.3.1/hadoop-3.3.1.tar.gz; \
     tar -zxvf hadoop-3.3.1.tar.gz; \
-    rm hadoop-3.3.1.tar.gz; 
+    rm hadoop-3.3.1.tar.gz;
 
 RUN /opt/conda/bin/pip install --no-cache-dir \ 
     remote-pdb \
@@ -69,7 +69,7 @@ ENV LIBRARY_PATH="/usr/local/lib64:/usr/local/lib:/usr/lib"
 ENV LD_LIBRARY_PATH="/opt/conda/lib/python${PYTHON_VERSION}/site-packages/torch/lib/:/opt/conda/lib/"
 
 # alias for cpu builder image
-FROM base AS cpu-builder-base 
+FROM base AS cpu-builder-base
 # alias for gpu builder image
 FROM base AS cuda-builder-base
 ARG DEVICE
@@ -83,20 +83,20 @@ ENV RUSTUP_HOME=/rust
 ENV CARGO_HOME=/cargo
 ENV PATH=/cargo/bin:/rust/bin:/opt/conda/bin:$PATH
 
-RUN curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y --profile default --no-modify-path 
+RUN curl -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y --profile default --no-modify-path
 
 FROM builder AS persia-builder
 
 WORKDIR /workspace
 COPY . /workspace
-RUN cd /workspace && pip3 install colorama setuptools setuptools-rust setuptools_scm \
+RUN cd /workspace && pip3 install --no-cache-dir colorama setuptools setuptools-rust setuptools_scm \
     && python setup.py bdist_wheel --dist-dir=/root/dist && rm -rf /workspace
 
 # Build bagua distributed training framework manully
 # RUN if [ "${DEVICE}" = "cuda" ]; then \
 #     rm -rf /etc/apt/sources.list.d; \
 #     apt-get update; \
-#     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends zlib1g-dev libhwloc-dev; \ 
+#     DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends zlib1g-dev libhwloc-dev; \
 #     git clone https://github.com/BaguaSys/bagua.git; \
 #     cd bagua; \
 #     pip3 install cmake setuptools-rust colorama tqdm wheel --no-cache-dir; \
@@ -105,14 +105,14 @@ RUN cd /workspace && pip3 install colorama setuptools setuptools-rust setuptools
 #     cd ..; \
 #     rm -rf bagua; \
 #     /opt/conda/bin/conda clean -yapf; \
-#     fi 
+#     fi
 
 ARG DEVICE
 FROM base AS runtime
 
 # Install the persia-runtime and bagua (Optional for cpu-runtime)
 COPY --from=persia-builder /root/dist .
-RUN pip3 install *.whl && rm -rf *.whl
+RUN pip3 install --no-cache-dir *.whl && rm -rf *.whl
 
 # Install nats server
 RUN wget https://github.com/nats-io/nats-server/releases/download/v2.6.6/nats-server-v2.6.6-linux-amd64.tar.gz && \