{
  "startTime": 1674251914090,
  "endTime": 1674251915583,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM weaveworks/build-golang:1.14.4-stretch\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n      sudo \\\n      libffi-dev awscli \\\n      && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install Terraform\nRUN curl -fsSLo terraform.zip https://releases.hashicorp.com/terraform/0.11.10/terraform_0.11.10_linux_amd64.zip && \\\n    echo \"43543a0e56e31b0952ea3623521917e060f2718ab06fe2b2d506cfaa14d54527  terraform.zip\" | sha256sum -c && \\\n    unzip terraform.zip && \\\n    chmod +x terraform && \\\n    mv terraform /usr/bin && \\\n    rm -f terraform.zip\n\n# Install Google Cloud SDK - borrowed from https://hub.docker.com/r/google/cloud-sdk/~/dockerfile/\nENV CLOUD_SDK_VERSION 206.0.0\nENV PATH /go/google-cloud-sdk/bin:$PATH\nRUN curl -f -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    echo \"d39293914b2e969bfe18dd19eb77ba96d283995f8cf1e5d7ba6ac712a3c9479a  google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz\" | sha256sum -c && \\\n    tar xzf google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    rm google-cloud-sdk-${CLOUD_SDK_VERSION}-linux-x86_64.tar.gz && \\\n    ln -s /lib /lib64 && \\\n    gcloud config set core/disable_usage_reporting true && \\\n    gcloud config set component_manager/disable_update_check true && \\\n    gcloud config set metrics/environment github_docker_image && \\\n    gcloud --version\n\n# Install Docker (client only)\nENV DOCKERVERSION=19.03.8\nRUN curl -fsSLo docker.tgz https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKERVERSION}.tgz && \\\n    echo \"7f4115dc6a3c19c917f8b9664d7b51c904def1c984e082c4600097433323cf6f  docker.tgz\" | sha256sum -c && \\\n    tar xzvf docker.tgz --strip 1 -C /usr/local/bin docker/docker && \\\n    rm docker.tgz;\n\n# Install golangci-lint\nENV GOLANGCILINTVERSION=1.17.1\nRUN curl -fsSLo golangci-lint.tgz https://github.com/golangci/golangci-lint/releases/download/v1.17.1/golangci-lint-${GOLANGCILINTVERSION}-linux-amd64.tar.gz && \\\n    echo \"62693d3351858206af0bfe975f7f79a8ac9124502e8de7906f377c231f37f7d3  golangci-lint.tgz\" | sha256sum -c && \\\n    tar xzvf golangci-lint.tgz --strip 1 -C /usr/local/bin golangci-lint-${GOLANGCILINTVERSION}-linux-amd64/golangci-lint && \\\n    rm golangci-lint.tgz;\n\nARG revision\nLABEL maintainer=\"Weaveworks <help@weave.works>\" \\\n      org.opencontainers.image.title=\"golang\" \\\n      org.opencontainers.image.source=\"https://github.com/weaveworks/wksctl/tree/master/build\" \\\n      org.opencontainers.image.revision=\"${revision}\" \\\n      org.opencontainers.image.vendor=\"Weaveworks\"\n"
}