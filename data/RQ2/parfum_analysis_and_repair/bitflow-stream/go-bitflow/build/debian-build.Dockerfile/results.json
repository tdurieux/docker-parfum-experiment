{
  "startTime": 1674249662808,
  "endTime": 1674249663691,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 83
      }
    }
  ],
  "repairedDockerfile": "# bitflowstream/golang-build:debian\n# This image is used to build Go programs on Debian hosts. The purpose of this separate container\n# is to mount the Go mod-cache into the container during the build, which is not possible with the 'docker build' command.\n\n# This image is intended to be run on the build host with a volume such as: -v /tmp/go-mod-cache/debian:/go\n# When /tmp/go-mod-cache/debian is cleared manually, the following commands should be executed afterwards:\n# docker run -v /tmp/go-mod-cache/debian:/go -ti bitflowstream/golang-build:debian go get -u github.com/jstemmer/go-junit-report\n# docker run -v /tmp/go-mod-cache/debian:/go -ti bitflowstream/golang-build:debian go get -u golang.org/x/lint/golint\n\n# docker build -t bitflowstream/golang-build:debian -f debian-build.Dockerfile .\nFROM golang:1.14.1-buster\nWORKDIR /build\nENV GO111MODULE=on\n\nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install apt-transport-https ca-certificates curl gnupg2 software-properties-common && \\\n    curl -fsSL https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\")/gpg > /tmp/dkey; rm -rf /var/lib/apt/lists/*; apt-key add /tmp/dkey && \\\n    add-apt-repository \\\n       \"deb [arch=amd64] https://download.docker.com/linux/$(. /etc/os-release; echo \"$ID\") $(lsb_release -cs) stable\" && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install docker-ce qemu-user mercurial git jq\n\n# Enable docker-cli experimental features\nRUN mkdir ~/.docker && echo '{\\n\\t\"experimental\": \"enabled\"\\n}' > ~/.docker/config.json\n"
}