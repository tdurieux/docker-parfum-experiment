{
  "startTime": 1674218248895,
  "endTime": 1674218250146,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 84,
        "columnEnd": 99
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 18,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 18,
        "columnEnd": 60
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# Install build tools\nRUN apt update\nRUN DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt --no-install-recommends install -y \\\n    build-essential \\\n    git \\\n    ninja-build \\\n    libssl-dev \\\n    libjemalloc-dev \\\n    default-jdk \\\n    software-properties-common \\\n    lsb-release \\\n    libtool \\\n    autoconf \\\n    unzip \\\n    wget \\\n    gnupg \\\n    ca-certificates \\\n    gcc-8 \\\n    g++-8 && rm -rf /var/lib/apt/lists/*;\n\n# Use GCC 8\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7\nRUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8\n\n# Use latest cmake\nRUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --batch --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null\nRUN apt-add-repository \"deb https://apt.kitware.com/ubuntu/ $(lsb_release -cs) main\"\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 6AF7F09730B3F0A4\n\nRUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 3FA7E0328081BFF6A14DA29AA6A19B38D3D831EF\nRUN echo \"deb https://download.mono-project.com/repo/ubuntu stable-bionic main\" | tee /etc/apt/sources.list.d/mono-official-stable.list\n\n# Install cmake and mono\nRUN apt update && apt install --no-install-recommends -y cmake mono-devel liblz4-dev && rm -rf /var/lib/apt/lists/*;\nRUN rm -rf /var/lib/apt/lists/*\n\nRUN echo \"export JAVA_HOME=$(readlink -f /usr/bin/java | sed \"s:bin/java::\")\" >> ~/.bashrc\nRUN echo \"export CC=/usr/bin/gcc-8; export CXX=/usr/bin/g++-8\" >> ~/.bashrc"
}