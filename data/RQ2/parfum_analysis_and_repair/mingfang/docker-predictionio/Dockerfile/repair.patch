diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mingfang/docker-predictionio/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mingfang/docker-predictionio/Dockerfile/repaired.Dockerfile
index 30029b7..8cf10b2 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mingfang/docker-predictionio/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mingfang/docker-predictionio/Dockerfile/repaired.Dockerfile
@@ -6,28 +6,28 @@ RUN echo "export > /etc/envvars" >> /root/.bashrc && \
     echo "alias tcurrent='tail /var/log/*/current -f'" | tee -a /root/.bashrc /etc/skel/.bashrc
 
 RUN apt-get update
-RUN apt-get install -y locales && locale-gen en_US.UTF-8 && dpkg-reconfigure locales
+RUN apt-get install --no-install-recommends -y locales && locale-gen en_US.UTF-8 && dpkg-reconfigure locales && rm -rf /var/lib/apt/lists/*;
 ENV LANGUAGE=en_US.UTF-8 LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
 
 # Runit
-RUN apt-get install -y --no-install-recommends runit
+RUN apt-get install -y --no-install-recommends runit && rm -rf /var/lib/apt/lists/*;
 CMD bash -c 'export > /etc/envvars && /usr/sbin/runsvdir-start'
 
 # Utilities
-RUN apt-get install -y --no-install-recommends vim less net-tools inetutils-ping wget curl git telnet nmap socat dnsutils netcat tree htop unzip sudo software-properties-common jq psmisc iproute python ssh rsync gettext-base
+RUN apt-get install -y --no-install-recommends vim less net-tools inetutils-ping wget curl git telnet nmap socat dnsutils netcat tree htop unzip sudo software-properties-common jq psmisc iproute python ssh rsync gettext-base && rm -rf /var/lib/apt/lists/*;
 
 #Install Oracle Java 8
 RUN add-apt-repository ppa:webupd8team/java -y && \
     apt-get update && \
     echo oracle-java8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections && \
-    apt-get install -y oracle-java8-installer && \
-    apt install oracle-java8-unlimited-jce-policy && \
-    rm -r /var/cache/oracle-jdk8-installer
+    apt-get install --no-install-recommends -y oracle-java8-installer && \
+    apt install -y --no-install-recommends oracle-java8-unlimited-jce-policy && \
+    rm -r /var/cache/oracle-jdk8-installer && rm -rf /var/lib/apt/lists/*;
 ENV JAVA_HOME /usr/lib/jvm/java-8-oracle
 
 
 #Spark
-RUN wget -O - http://archive.apache.org/dist/spark/spark-2.2.2/spark-2.2.2-bin-hadoop2.7.tgz | tar zx
+RUN wget -O - https://archive.apache.org/dist/spark/spark-2.2.2/spark-2.2.2-bin-hadoop2.7.tgz | tar zx
 RUN mv /spark* /spark
 
 #ElasticSearch
@@ -35,21 +35,21 @@ RUN wget -O - https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch
 RUN mv /elasticsearch* /elasticsearch
 
 #HBase
-RUN wget -O - http://archive.apache.org/dist/hbase/1.2.7/hbase-1.2.7-bin.tar.gz | tar zx
+RUN wget -O - https://archive.apache.org/dist/hbase/1.2.7/hbase-1.2.7-bin.tar.gz | tar zx
 RUN mv /hbase* /hbase
-RUN echo "export JAVA_HOME=/usr/lib/jvm/java-8-oracle" >> /hbase/conf/hbase-env.sh 
+RUN echo "export JAVA_HOME=/usr/lib/jvm/java-8-oracle" >> /hbase/conf/hbase-env.sh
 
 #Python SDK
-RUN apt-get install -y python-pip
-RUN pip install pytz
-RUN pip install predictionio
+RUN apt-get install --no-install-recommends -y python-pip && rm -rf /var/lib/apt/lists/*;
+RUN pip install --no-cache-dir pytz
+RUN pip install --no-cache-dir predictionio
 
 #For Spark MLlib
-RUN apt-get install -y libgfortran3 libatlas3-base libopenblas-base
+RUN apt-get install --no-install-recommends -y libgfortran3 libatlas3-base libopenblas-base && rm -rf /var/lib/apt/lists/*;
 
 #PredictionIO
 
-RUN wget -O - http://archive.apache.org/dist/predictionio/0.12.1/apache-predictionio-0.12.1-bin.tar.gz | tar zx
+RUN wget -O - https://archive.apache.org/dist/predictionio/0.12.1/apache-predictionio-0.12.1-bin.tar.gz | tar zx
 RUN mv PredictionIO* /PredictionIO
 
 RUN useradd elasticsearch
@@ -59,7 +59,7 @@ ENV PIO_HOME /PredictionIO
 ENV PATH $PATH:$PIO_HOME/bin
 
 #Download SBT
-#RUN /PredictionIO/sbt/sbt package 
+#RUN /PredictionIO/sbt/sbt package
 
 #Configuration
 RUN sed -i 's|SPARK_HOME=.*|SPARK_HOME=/spark|' /PredictionIO/conf/pio-env.sh
@@ -79,6 +79,6 @@ COPY hbase-env.sh /hbase/conf/
 COPY quickstartapp quickstartapp
 
 #Add runit services
-COPY sv /etc/service 
+COPY sv /etc/service
 ARG BUILD_INFO
 LABEL BUILD_INFO=$BUILD_INFO