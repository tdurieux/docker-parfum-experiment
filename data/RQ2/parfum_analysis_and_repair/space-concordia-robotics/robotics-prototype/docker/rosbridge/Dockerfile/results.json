{
  "startTime": 1674247876305,
  "endTime": 1674247877420,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 81
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 25,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ros:melodic-ros-core\n\nARG videoid\n\nSHELL [\"/bin/bash\", \"-c\"]\n\n# $USER env variable used in some of the scripts\nENV USER spaceuser\nCOPY docker/rosbridge/videogroupworkaround.sh .\nRUN ./videogroupworkaround.sh $videoid \\\n    && useradd --create-home --groups sudo,video --shell /bin/bash spaceuser \\\n    && echo -e 'spaceuser\\nspaceuser' | passwd spaceuser \\\n    && mkdir -p /home/spaceuser/Programming/robotics-prototype \\\n    && echo \"source /opt/ros/melodic/setup.bash\" >> /home/spaceuser/.bashrc \\\n    && echo \"source /home/spaceuser/Programming/robotics-prototype/robot/rospackages/devel/setup.bash\" >> /home/spaceuser/.bashrc \\\n    && echo \"source /home/spaceuser/Programming/robotics-prototype/robot/basestation/config/.bash_aliases\" >> /home/spaceuser/.bashrc \\\n    && echo \"source /home/spaceuser/Programming/robotics-prototype/robot/rover/config/.bash_aliases\" >> /home/spaceuser/.bashrc \\\n    && apt-get update && apt-get install --no-install-recommends -y apt-utils ros-melodic-rosbridge-suite && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /home/spaceuser/Programming/robotics-prototype\nCOPY requirements.txt setup.py docker/rosbridge/entrypoint.sh ./\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3-pip \\\n    && pip3 install --no-cache-dir -r requirements.txt \\\n    && pip3 install --no-cache-dir rosdep \\\n    && python3 setup.py develop \\\n    && rm -rf /var/lib/apt/lists/*\n\nRUN apt-get update -y && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y nano vim wget curl libfontconfig libx11-6 libxft2 v4l-utils \\\n    ros-$ROS_DISTRO-cv-camera \\\n    ros-$ROS_DISTRO-web-video-server && rm -rf /var/lib/apt/lists/*;\n\nCOPY install_arduino_teensyduino.sh .\nUSER spaceuser\nRUN echo 'spaceuser' | sudo -S /home/spaceuser/Programming/robotics-prototype/install_arduino_teensyduino.sh\n\nUSER root\nCOPY robot/rospackages ./robot/rospackages\nRUN rosdep init \\\n    && apt-get update \\\n    && rosdep update --rosdistro $ROS_DISTRO \\\n    && rosdep install --from-paths robot/rospackages/src/ --ignore-src -r -y\n\nUSER spaceuser\nCOPY robot/rover ./robot/rover\nWORKDIR /home/spaceuser/Programming/robotics-prototype/robot/rover\nRUN echo 'spaceuser' | sudo -S chown -R spaceuser:spaceuser /home/spaceuser/Arduino /home/spaceuser/Programming \\\n    && tail -n1 /home/spaceuser/.bashrc > /home/spaceuser/.tmprc \\\n    && source /home/spaceuser/.tmprc \\ \n    && cmake . \\\n    && make -j$(nproc) \\\n    && rm /home/spaceuser/.tmprc\n\nUSER root\nWORKDIR /home/spaceuser/Programming/robotics-prototype\n\nCOPY . .\n\nWORKDIR /home/spaceuser/Programming/robotics-prototype/robot/rospackages\nRUN source /opt/ros/$ROS_DISTRO/setup.sh \\\n    && catkin_make -DPYTHON_EXECUTABLE=/usr/bin/python3 \\\n    && chown -R spaceuser:spaceuser /home/spaceuser/Programming/robotics-prototype \\\n    && chmod u+x /home/spaceuser/Programming/robotics-prototype/entrypoint.sh\n\nUSER spaceuser\nWORKDIR /home/spaceuser/Programming/robotics-prototype\nENTRYPOINT [\"./entrypoint.sh\"]\n"
}