{
  "startTime": 1674254197118,
  "endTime": 1674254198394,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 114
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 108
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 22,
        "columnEnd": 141
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 60
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 5,
        "columnEnd": 114
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 108
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 43
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 22,
        "columnEnd": 141
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "#default args\nARG OS_VERSION=latest\nARG INCLUDE_SRSGUI=true\nARG INCLUDE_UHD=false\nARG INCLUDE_LIMESDR=false\nARG INCLUDE_CMNALIB=false\nARG INCLUDE_SRSLTE=true\n\nFROM ubuntu:$OS_VERSION as ubuntu_base\n\n\n# Provide command add-apt-repository and apt-utils\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y software-properties-common apt-utils && rm -rf /var/lib/apt/lists/*;\n\n# General dependencies\n#RUN apt-get install -y curl tzdata\n\n# Build dependencies\nRUN apt-get install --no-install-recommends -y build-essential git && rm -rf /var/lib/apt/lists/*;\n\n# srsLTE dependencies\nRUN apt-get update \\\n  && apt-get install --no-install-recommends -y cmake libfftw3-dev libmbedtls-dev libboost-program-options-dev libconfig++-dev libsctp-dev && rm -rf /var/lib/apt/lists/*;\n  #build-essential git cmake libboost-all-dev libboost-system-dev libboost-test-dev libboost-thread-dev libfftw3-dev libsctp-dev libconfig-dev libconfig++-dev libmbedtls-dev\n  #build-essential git subversion cmake libboost-all-dev libboost-system-dev libboost-test-dev libboost-thread-dev libqwt-dev libqt4-dev libfftw3-dev libsctp-dev libconfig-dev libconfig++-dev libmbedtls-dev\n\n# SRS GUI\nARG INCLUDE_SRSGUI\nWORKDIR /\nRUN if [ \"$INCLUDE_SRSGUI\" = true ]; then \\\n  apt-get update \\\n  && apt-get install --no-install-recommends -y libboost-system-dev libboost-test-dev libboost-thread-dev libqwt-qt5-dev qtbase5-dev \\\n  && git clone https://github.com/srsLTE/srsGUI.git \\\n  && mkdir /srsGUI/build \\\n  && cd /srsGUI/build \\\n  && cmake ../ \\\n  && make -j install \\\n  ; rm -rf /var/lib/apt/lists/*; fi\n\n# UHD (This is installed to satisfy condition RF_FOUND for srsLTE, any other supported RF frontend drivers should be good as well)\nARG INCLUDE_UHD\nWORKDIR /\nRUN if [ \"$INCLUDE_UHD\" = true ]; then \\\n  add-apt-repository ppa:ettusresearch/uhd \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y libuhd-dev uhd-host \\\n  ; rm -rf /var/lib/apt/lists/*; fi\n\n#libuhd-dev libuhd003 uhd-host\n\n# LimeSDR\n#ARG INCLUDE_LIMESDR\n#WORKDIR /\n#RUN if [ \"$INCLUDE_LIMESDR\" = true ]; then \\\n#  ...\n#  ; fi\n\n# CMNALIB\nARG INCLUDE_CMNALIB\nWORKDIR /\nRUN if [ \"$INCLUDE_CMNALIB\" = true ]; then \\\n  apt-get update \\\n  && apt-get install --no-install-recommends -y libglib2.0-dev libudev-dev libcurl4-gnutls-dev \\\n  && git clone https://github.com/falkenber9/c-mnalib.git \\\n  && mkdir /c-mnalib/build \\\n  && cd /c-mnalib/build \\\n  && cmake ../ \\\n  && make -j install \\\n  ; rm -rf /var/lib/apt/lists/*; fi\n\n# srsLTE (AVX and other accelerations are explicitly switched off. Otherwise rounding inaccuracies cause test cases to fail (if accelerated Viterbi decoder is involved in the test))\nARG INCLUDE_SRSLTE\nWORKDIR /\nRUN if [ \"$INCLUDE_SRSLTE\" = true ]; then \\\n  git clone --branch falcon-dev https://github.com/falkenber9/srsLTE.git \\\n  && mkdir srsLTE/build \\\n  && cd srsLTE/build \\\n  && cmake -DENABLE_AVX=OFF -DENABLE_AVX2=OFF -DENABLE_FMA=OFF -DENABLE_AVX512=OFF  ../ \\\n  && make -j install \\\n  ; fi\n\n# FALCON dependencies\nRUN apt-get update && apt-get install --no-install-recommends -y libglib2.0-dev libudev-dev libcurl4-gnutls-dev libboost-all-dev qtdeclarative5-dev libqt5charts5-dev && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [ \"stdbuf\", \"-o\", \"L\" ]\n"
}