{
  "startTime": 1674254067850,
  "endTime": 1674254069962,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 361,
        "lineEnd": 361,
        "columnStart": 7,
        "columnEnd": 50
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 364,
        "lineEnd": 364,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 365,
        "lineEnd": 365,
        "columnStart": 7,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 7,
        "columnEnd": 352
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Base: Ubuntu 18.04 with updates and external packages\n#\nFROM ubuntu:bionic-20201119 AS base\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DEPS=\" \\\n    dirmngr \\\n    gpg-agent \\\n    software-properties-common \\\n    #wget \\\n\"\nARG RUN_DEPS=\" \\\n    libcurl3-gnutls \\\n    libfcgi \\\n    libmapserver-dev \\\n    curl \\\n    \\\n    saga \\\n    libsaga-api-7.3.0 \\\n    libotb \\\n    otb-bin \\\n    \\\n    libpq5 \\\n    libpython3.6 \\\n    libxslt1.1 \\\n    gdal-bin \\\n    libcgal13 \\\n    librabbitmq4 \\\n    nlohmann-json-dev \\\n    python3 \\\n    r-base \\\n    python3-pip\\\n\"\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS  \\\n    \\\n    #&& add-apt-repository ppa:osgeolive/nightly \\\n    #&& add-apt-repository ppa:ubuntugis/ubuntugis-unstable \\\n    && add-apt-repository ppa:ubuntugis/ppa \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \\\n    && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' \\\n\n    && apt-get install --no-install-recommends -y $RUN_DEPS \\\n\n    && curl -f -o libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb https://launchpadlibrarian.net/309343863/libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \\\n    && curl -f -o libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb https://launchpadlibrarian.net/309343864/libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \\\n    && dpkg --force-depends -i libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \\\n    && dpkg --force-depends -i libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \\\n    && apt  -y --fix-broken install \\\n    && rm /libmozjs185*.deb \\\n\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \\\n    && rm -rf /var/lib/apt/lists/*\n\n#\n# builder1: base image with zoo-kernel\n#\nFROM base AS builder1\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DEPS=\" \\\n    bison \\\n    flex \\\n    make \\\n    autoconf \\\n    gcc \\\n    gettext \\\n    \\\n    # Comment lines bellow if nor OTB nor SAGA \\\n    libotb-dev \\\n    otb-qgis \\\n    otb-bin-qt \\\n    qttools5-dev \\\n    qttools5-dev-tools \\\n    qtbase5-dev \\\n    libqt5opengl5-dev \\\n    libtinyxml-dev \\\n    libfftw3-dev \\\n    cmake \\\n    libsaga-dev \\\n    # Comment lines before this one if nor OTB nor SAGA \\\n    git \\\n    libfcgi-dev \\\n    libgdal-dev \\\n    libwxgtk3.0-dev \\\n    libjson-c-dev \\\n    libssh2-1-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    python3-dev \\\n    python3-setuptools \\\n    uuid-dev \\\n    r-base-dev \\\n    librabbitmq-dev \\\n    libkrb5-dev \\\n    nlohmann-json-dev \\\n\"\nWORKDIR /zoo-project\nCOPY . .\n\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \\\n    \\\n    && make -C ./thirds/cgic206 libcgic.a \\\n    \\\n    && cd ./zoo-project/zoo-kernel \\\n    #&& git clone https://github.com/json-c/json-c.git \\\n    #&& mkdir json-c-build \\\n    #&& cd json-c-build \\\n    #&& cmake ../json-c -DCMAKE_INSTALL_PREFIX=/usr/local \\\n    #&& make && make install \\\n    #&& cd .. \\\n    #&& sed \"s:-ljson-c:-Wl,-rpath,/usr/local/lib /usr/local/lib/libjson-c.so.5 :g\" -i configure.ac \\\n    && autoconf \\\n    && find /usr -name otbWrapperApplication.h \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-rabbitmq=yes --with-python=/usr --with-pyvers=3.6 --with-js=/usr --with-mapserver=/usr --with-ms-version=7 --with-json=/usr --with-r=/usr --with-db-backend --prefix=/usr --with-otb=/usr/ --with-itk=/usr --with-otb-version=6.6 --with-itk-version=4.12 --with-saga=/usr --with-saga-version=7.2 \\\n    && make -j4 \\\n    && make install \\\n\n    # TODO: why not copied by 'make'?\n    && cp zoo_loader_fpm zoo_loader.cgi main.cfg /usr/lib/cgi-bin/ \\\n    && cp zoo_loader.cgi main.cfg /usr/lib/cgi-bin/ \\\n    && cp ../zoo-api/js/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/utils/open-api/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/hello-py/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/hello-js/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-services/hello-r/cgi-env/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-api/js/* /usr/lib/cgi-bin/ \\\n    && cp ../zoo-api/r/minimal.r /usr/lib/cgi-bin/ \\\n    && for i in  $(ls ./locale/po/*po | grep -v utf8 | grep -v message); do \\\n         mkdir -p /usr/share/locale/$(echo $i| sed \"s:./locale/po/::g;s:.po::g\")/LC_MESSAGES; \\\n         msgfmt  $i -o /usr/share/locale/$(echo $i| sed \"s:./locale/po/::g;s:.po::g\")/LC_MESSAGES/zoo-kernel.mo ; \\\n         mkdir -p /usr/local/share/locale/$(echo $i| sed \"s:./locale/po/::g;s:.po::g\")/LC_MESSAGES; \\\n         msgfmt  $i -o /usr/local/share/locale/$(echo $i| sed \"s:./locale/po/::g;s:.po::g\")/LC_MESSAGES/zoo-kernel.mo ; \\\n       done \\\n\n    #&& for lang in fr_FR ; do msgcat $(find ../zoo-services/ -name \"${lang}.po\") -o ${lang}.po ; done \\\n    && for lang in fr_FR ; do\\\n       find ../zoo-services/ -name \"${lang}*\" ; \\\n       msgcat $(find ../zoo-services/ -name \"${lang}*\") -o ${lang}.po ; \\\n       msgfmt ${lang}.po -o /usr/share/locale/${lang}/LC_MESSAGES/zoo-services.mo; \\\n       msgfmt ${lang}.po -o /usr/local/share/locale/${lang}/LC_MESSAGES/zoo-services.mo; \\\n       done \\\n    #&& msgfmt ../zoo-services/utils/open-api/locale/po/fr_FR.po -o /usr/share/locale/fr_FR/LC_MESSAGES/zoo-services.mo \\\n    #&& msgfmt ../zoo-services/utils/open-api/locale/po/fr_FR.po -o /usr/local/share/locale/fr_FR/LC_MESSAGES/zoo-services.mo \\\n    && cp oas.cfg /usr/lib/cgi-bin/ \\\n\n    # TODO: main.cfg is not processed \\\n    && prefix=/usr envsubst < main.cfg > /usr/lib/cgi-bin/main.cfg \\\n\n    #Comment lines below from here if no OTB \\\n    && mkdir otb_build \\\n    && cd otb_build \\\n    && cmake ../../../thirds/otb2zcfg \\\n    && make \\\n    && mkdir OTB \\\n    && cd OTB \\\n    && ITK_AUTOLOAD_PATH=/usr/lib/x86_64-linux-gnu/otb/applications/ ../otb2zcfg \\\n    && mkdir /usr/lib/cgi-bin/OTB \\\n    && cp *zcfg /usr/lib/cgi-bin/OTB \\\n    #&& for i in *zcfg; do cp $i /usr/lib/cgi-bin/$i ; j=\"$(echo $i | sed \"s:.zcfg::g\")\" ; sed \"s:$j:OTB_$j:g\" -i  /usr/lib/cgi-bin/OTB_$i ; done \\\n    #Comment lines before this one if no OTB \\\n\n    #Comment lines below from here if no SAGA \\\n    && cd .. \\\n    && make -C ../../../thirds/saga2zcfg \\\n    && mkdir zcfgs \\\n    && cd zcfgs \\\n    #&& dpkg -L saga \\\n    && export MODULE_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/saga/ \\\n    && export SAGA_MLB=/usr/lib/x86_64-linux-gnu/saga/ \\\n    && ln -s /usr/lib/x86_64-linux-gnu/saga/ /usr/lib/saga \\\n    && ../../../../thirds/saga2zcfg/saga2zcfg \\\n    && mkdir /usr/lib/cgi-bin/SAGA \\\n    #&& ls \\\n    && cp -r * /usr/lib/cgi-bin/SAGA \\\n    #Remove OTB if not built or SAGA if no SAGA \\\n    && for j in OTB SAGA ; do for i in $(find /usr/lib/cgi-bin/$j/ -name \"*zcfg\"); do sed \"s:image/png:image/png\\n     useMapserver = true\\n     msClassify = true:g;s:text/xml:text/xml\\n     useMapserver = true:g;s:mimeType = application/x-ogc-aaigrid:mimeType = application/x-ogc-aaigrid\\n   </Supported>\\n   <Supported>\\n     mimeType = image/png\\n     useMapserver=true:g\" -i $i; done; done \\\n\n    && cd ../.. \\\n    #Comment lines before this one if nor OTB nor SAGA \\\n\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \\\n    && rm -rf /var/lib/apt/lists/*\n\n#\n# Optional zoo modules build.\n#\nFROM base AS builder2\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DEPS=\" \\\n    bison \\\n    flex \\\n    make \\\n    autoconf \\\n    g++ \\\n    gcc \\\n    libc-dev \\\n    libfcgi-dev \\\n    libgdal-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    libcgal-dev \\\n\"\nWORKDIR /zoo-project\nCOPY ./zoo-project/zoo-services ./zoo-project/zoo-services\n\n# From zoo-kernel\nCOPY --from=builder1 /usr/lib/cgi-bin/ /usr/lib/cgi-bin/\nCOPY --from=builder1 /usr/lib/libzoo_service.so.1.8 /usr/lib/libzoo_service.so.1.8\nCOPY --from=builder1 /usr/lib/libzoo_service.so /usr/lib/libzoo_service.so\nCOPY --from=builder1 /usr/com/zoo-project/ /usr/com/zoo-project/\nCOPY --from=builder1 /usr/include/zoo/ /usr/include/zoo/\n\n# Additional files from bulder2\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-kernel/ZOOMakefile.opts /zoo-project/zoo-project/zoo-kernel/ZOOMakefile.opts\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-kernel/sqlapi.h /zoo-project/zoo-project/zoo-kernel/sqlapi.h\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-kernel/service.h /zoo-project/zoo-project/zoo-kernel/service.h\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-kernel/service_internal.h /zoo-project/zoo-project/zoo-kernel/service_internal.h\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-kernel/version.h /zoo-project/zoo-project/zoo-kernel/version.h\n\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \\\n    \\\n    && cd ./zoo-project/zoo-services/utils/status \\\n    && make \\\n    && make install \\\n    \\\n    && cd ../../cgal \\\n    && make \\\n    && cp cgi-env/* /usr/lib/cgi-bin/ \\\n    \\\n    && cd .. \\\n    && cd ../zoo-services/ogr/base-vect-ops \\\n    && make \\\n    && cp cgi-env/* /usr/lib/cgi-bin/ \\\n    && cd ../.. \\\n    \\\n    && cd ../zoo-services/gdal/ \\\n    && for i in contour dem grid profile translate warp ; do cd $i ; make && cp cgi-env/* /usr/lib/cgi-bin/ ; cd .. ; done \\\n    \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \\\n    && rm -rf /var/lib/apt/lists/*\n\n#\n# Optional zoo demos download.\n#\nFROM base AS demos\nARG DEBIAN_FRONTEND=noninteractive\nARG BUILD_DEPS=\" \\\n    git \\\n    \\\n\"\nWORKDIR /zoo-project\n\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $BUILD_DEPS \\\n    \\\n    && git clone https://github.com/ZOO-Project/examples.git \\\n    && git clone https://github.com/swagger-api/swagger-ui.git \\\n    && git clone https://github.com/WPS-Benchmarking/cptesting.git /testing \\\n    && git clone https://www.github.com/singularityhub/singularity-cli.git /singularity-cli \\\n    \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \\\n    && rm -rf /var/lib/apt/lists/*\n\n#\n# Runtime image with apache2.\n#\nFROM base AS runtime\nARG DEBIAN_FRONTEND=noninteractive\nARG RUN_DEPS=\" \\\n    apache2 \\\n    curl \\\n    cgi-mapserver \\\n    mapserver-bin \\\n    xsltproc \\\n    libxml2-utils \\\n    gnuplot \\\n    locales \\\n    libapache2-mod-fcgid \\\n    python3-setuptools \\\n    #Uncomment the line below to add vi editor \\\n    vim \\\n    #Uncomment the lines below to add debuging \\\n    #valgrind \\\n    #gdb \\\n\"\nARG BUILD_DEPS=\" \\\n    make \\\n    g++ \\\n    gcc \\\n    libgdal-dev \\\n    python3-dev \\\n\"\n# For Azure use, uncomment bellow\n#ARG SERVER_URL=\"http://zooprojectdemo.azurewebsites.net/\"\n#ARG WS_SERVER_URL=\"ws://zooprojectdemo.azurewebsites.net\"\n# For basic usage\nARG SERVER_URL=\"http://localhost/\"\nARG WS_SERVER_URL=\"ws://localhost\"\n\n# For using another port than 80, uncomment below.\n# remember to also change the ports in docker-compose.yml\n#ARG PORT=8090\n\nWORKDIR /zoo-project\nCOPY ./docker/startUp.sh /\n\n# From zoo-kernel\nCOPY --from=builder1 /usr/lib/cgi-bin/ /usr/lib/cgi-bin/\nCOPY --from=builder1 /usr/lib/libzoo_service.so.1.8 /usr/lib/libzoo_service.so.1.8\nCOPY --from=builder1 /usr/lib/libzoo_service.so /usr/lib/libzoo_service.so\nCOPY --from=builder1 /usr/com/zoo-project/ /usr/com/zoo-project/\nCOPY --from=builder1 /usr/include/zoo/ /usr/include/zoo/\nCOPY --from=builder1 /usr/share/locale/ /usr/share/locale/\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-services/SAGA/examples/ /var/www/html/examples/\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-services/OTB/examples/ /var/www/html/examples/\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-services/cgal/examples/ /var/www/html/examples/\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-services/utils/open-api/templates/index.html /var/www/index.html\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-services/utils/open-api/static /var/www/html/static\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-services/echo-py/cgi-env/ /usr/lib/cgi-bin/\nCOPY --from=builder1 /zoo-project/docker/.htaccess /var/www/html/.htaccess\nCOPY --from=builder1 /zoo-project/docker/default.conf /000-default.conf\nCOPY --from=builder1 /zoo-project/zoo-project/zoo-services/utils/open-api/server/publish.py /usr/lib/cgi-bin/publish.py\n\n# From optional zoo modules\nCOPY --from=builder2 /usr/lib/cgi-bin/ /usr/lib/cgi-bin/\nCOPY --from=builder1 /zoo-project/docker/oas.cfg /usr/lib/cgi-bin/\nCOPY --from=builder1 /zoo-project/docker/main.cfg /usr/lib/cgi-bin/\nCOPY --from=builder2 /usr/com/zoo-project/ /usr/com/zoo-project/\n\n# From optional zoo demos\nCOPY --from=demos /singularity-cli/ /singularity-cli/\nCOPY --from=demos /testing/ /testing/\nCOPY --from=demos /zoo-project/examples/data/ /usr/com/zoo-project/\nCOPY --from=demos /zoo-project/examples/ /var/www/html/\nCOPY --from=demos /zoo-project/swagger-ui /var/www/html/swagger-ui\n\n\nRUN set -ex \\\n    && apt-get update && apt-get install -y --no-install-recommends $RUN_DEPS $BUILD_DEPS \\\n    \\\n    && sed \"s=https://petstore.swagger.io/v2/swagger.json=${SERVER_URL}/ogc-api/api=g\" -i /var/www/html/swagger-ui/dist/index.html \\\n    && sed \"s=http://localhost=$SERVER_URL=g\" -i /var/www/html/.htaccess \\\n    && sed \"s=http://localhost=$SERVER_URL=g;s=publisherUr\\=$SERVER_URL=publisherUrl\\=http://localhost=g;s=ws://localhost=$WS_SERVER_URL=g\" -i /usr/lib/cgi-bin/oas.cfg \\\n    && sed \"s=http://localhost=$SERVER_URL=g\" -i /usr/lib/cgi-bin/main.cfg \\\n    && for i in $(find /usr/share/locale/ -name \"zoo-kernel.mo\"); do \\\n         j=$(echo $i | sed \"s:/usr/share/locale/::g;s:/LC_MESSAGES/zoo-kernel.mo::g\"); \\\n         locale-gen $j ; \\\n         localedef -i $j -c -f UTF-8 -A /usr/share/locale/locale.alias ${j}.UTF-8; \\\n       done \\\n    && mv  /var/www/html/swagger-ui/dist  /var/www/html/swagger-ui/oapip \\\n    && mkdir /tmp/zTmp \\\n    && ln -s /tmp/zTmp /var/www/html/temp \\\n    && ln -s /usr/lib/x86_64-linux-gnu/saga/ /usr/lib/saga \\\n    && ln -s /testing /var/www/html/cptesting \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && cp /000-default.conf /etc/apache2/sites-available/ \\\n    && export CPLUS_INCLUDE_PATH=/usr/include/gdal \\\n    && export C_INCLUDE_PATH=/usr/include/gdal \\\n    && pip3 install --no-cache-dir --upgrade pip setuptools wheel \\\n    # see various issue reported about _2to3 invocation and setuptools < 58.0 \\\n    && python3 -m pip install --upgrade --no-cache-dir setuptools==57.5.0 \\\n    && pip3 install --no-cache-dir GDAL==2.4.2 \\\n    && pip3 install --no-cache-dir Cheetah3 redis spython \\\n    && sed \"s:AllowOverride None:AllowOverride All:g\" -i /etc/apache2/apache2.conf \\\n\n    # For using another port than 80, uncomment below. \\\n    # remember to also change the ports in docker-compose.yml \\\n    # && sed \"s:Listen 80:Listen $PORT:g\" -i /etc/apache2/ports.conf \\\n\n    && mkdir -p /tmp/zTmp/statusInfos \\\n    && chown www-data:www-data -R /tmp/zTmp /usr/com/zoo-project \\\n    && chmod 755 /startUp.sh \\\n\n    # remove invalid zcfgs \\\n    && rm /usr/lib/cgi-bin/SAGA/db_pgsql/6.zcfg /usr/lib/cgi-bin/SAGA/imagery_tools/8.zcfg /usr/lib/cgi-bin/SAGA/grid_calculus_bsl/0.zcfg /usr/lib/cgi-bin/SAGA/grids_tools/1.zcfg /usr/lib/cgi-bin/SAGA/grid_visualisation/1.zcfg /usr/lib/cgi-bin/SAGA/ta_lighting/2.zcfg /usr/lib/cgi-bin/OTB/TestApplication.zcfg /usr/lib/cgi-bin/OTB/StereoFramework.zcfg \\\n    # Update SAGA zcfg\n    && sed \"s:AllowedValues =    <Default>:AllowedValues =\\n    <Default>:g\" -i /usr/lib/cgi-bin/SAGA/*/*zcfg \\\n    && sed \"s:Title = $:Title = No title found:g\" -i /usr/lib/cgi-bin/SAGA/*/*.zcfg \\\n    # Enable apache modules\n\n    && a2enmod cgi rewrite \\\n\n    # Cleanup \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \\\n    && rm -rf /var/lib/apt/lists/*\n\n\n# service namespaces parent folder\nRUN mkdir -p /opt/zooservices_namespaces && chmod -R 700 /opt/zooservices_namespaces && chown -R www-data /opt/zooservices_namespaces\n\n# For using another port than 80, change the value below.\n# remember to also change the ports in docker-compose.yml\nEXPOSE 80\nCMD /usr/sbin/apache2ctl -D FOREGROUND\n"
}