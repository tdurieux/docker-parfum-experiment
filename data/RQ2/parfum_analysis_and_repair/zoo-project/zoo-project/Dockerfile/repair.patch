diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zoo-project/zoo-project/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zoo-project/zoo-project/Dockerfile/repaired.Dockerfile
index 223f8cd..c9b463a 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/zoo-project/zoo-project/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/zoo-project/zoo-project/Dockerfile/repaired.Dockerfile
@@ -39,16 +39,16 @@ RUN set -ex \
     && add-apt-repository ppa:ubuntugis/ppa \
     && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9 \
     && add-apt-repository 'deb https://cloud.r-project.org/bin/linux/ubuntu bionic-cran35/' \
-    \
-    && apt-get install -y $RUN_DEPS \
-    \
-    && curl -o libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb http://launchpadlibrarian.net/309343863/libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \
-    && curl -o libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb http://launchpadlibrarian.net/309343864/libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \
+
+    && apt-get install --no-install-recommends -y $RUN_DEPS \
+
+    && curl -f -o libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb https://launchpadlibrarian.net/309343863/libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \
+    && curl -f -o libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb https://launchpadlibrarian.net/309343864/libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \
     && dpkg --force-depends -i libmozjs185-1.0_1.8.5-1.0.0+dfsg-7_amd64.deb \
     && dpkg --force-depends -i libmozjs185-dev_1.8.5-1.0.0+dfsg-7_amd64.deb \
     && apt  -y --fix-broken install \
     && rm /libmozjs185*.deb \
-    \
+
     && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
     && rm -rf /var/lib/apt/lists/*
 
@@ -113,10 +113,10 @@ RUN set -ex \
     #&& sed "s:-ljson-c:-Wl,-rpath,/usr/local/lib /usr/local/lib/libjson-c.so.5 :g" -i configure.ac \
     && autoconf \
     && find /usr -name otbWrapperApplication.h \
-    && ./configure --with-rabbitmq=yes --with-python=/usr --with-pyvers=3.6 --with-js=/usr --with-mapserver=/usr --with-ms-version=7 --with-json=/usr --with-r=/usr --with-db-backend --prefix=/usr --with-otb=/usr/ --with-itk=/usr --with-otb-version=6.6 --with-itk-version=4.12 --with-saga=/usr --with-saga-version=7.2 --with-wx-config=/usr/bin/wx-config \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-rabbitmq=yes --with-python=/usr --with-pyvers=3.6 --with-js=/usr --with-mapserver=/usr --with-ms-version=7 --with-json=/usr --with-r=/usr --with-db-backend --prefix=/usr --with-otb=/usr/ --with-itk=/usr --with-otb-version=6.6 --with-itk-version=4.12 --with-saga=/usr --with-saga-version=7.2 \
     && make -j4 \
     && make install \
-    \
+
     # TODO: why not copied by 'make'?
     && cp zoo_loader_fpm zoo_loader.cgi main.cfg /usr/lib/cgi-bin/ \
     && cp zoo_loader.cgi main.cfg /usr/lib/cgi-bin/ \
@@ -132,8 +132,8 @@ RUN set -ex \
          msgfmt  $i -o /usr/share/locale/$(echo $i| sed "s:./locale/po/::g;s:.po::g")/LC_MESSAGES/zoo-kernel.mo ; \
          mkdir -p /usr/local/share/locale/$(echo $i| sed "s:./locale/po/::g;s:.po::g")/LC_MESSAGES; \
          msgfmt  $i -o /usr/local/share/locale/$(echo $i| sed "s:./locale/po/::g;s:.po::g")/LC_MESSAGES/zoo-kernel.mo ; \
-       done  \
-    \
+       done \
+
     #&& for lang in fr_FR ; do msgcat $(find ../zoo-services/ -name "${lang}.po") -o ${lang}.po ; done \
     && for lang in fr_FR ; do\
        find ../zoo-services/ -name "${lang}*" ; \
@@ -144,10 +144,10 @@ RUN set -ex \
     #&& msgfmt ../zoo-services/utils/open-api/locale/po/fr_FR.po -o /usr/share/locale/fr_FR/LC_MESSAGES/zoo-services.mo \
     #&& msgfmt ../zoo-services/utils/open-api/locale/po/fr_FR.po -o /usr/local/share/locale/fr_FR/LC_MESSAGES/zoo-services.mo \
     && cp oas.cfg /usr/lib/cgi-bin/ \
-    \
+
     # TODO: main.cfg is not processed \
     && prefix=/usr envsubst < main.cfg > /usr/lib/cgi-bin/main.cfg \
-    \
+
     #Comment lines below from here if no OTB \
     && mkdir otb_build \
     && cd otb_build \
@@ -160,7 +160,7 @@ RUN set -ex \
     && cp *zcfg /usr/lib/cgi-bin/OTB \
     #&& for i in *zcfg; do cp $i /usr/lib/cgi-bin/$i ; j="$(echo $i | sed "s:.zcfg::g")" ; sed "s:$j:OTB_$j:g" -i  /usr/lib/cgi-bin/OTB_$i ; done \
     #Comment lines before this one if no OTB \
-    \
+
     #Comment lines below from here if no SAGA \
     && cd .. \
     && make -C ../../../thirds/saga2zcfg \
@@ -176,10 +176,10 @@ RUN set -ex \
     && cp -r * /usr/lib/cgi-bin/SAGA \
     #Remove OTB if not built or SAGA if no SAGA \
     && for j in OTB SAGA ; do for i in $(find /usr/lib/cgi-bin/$j/ -name "*zcfg"); do sed "s:image/png:image/png\n     useMapserver = true\n     msClassify = true:g;s:text/xml:text/xml\n     useMapserver = true:g;s:mimeType = application/x-ogc-aaigrid:mimeType = application/x-ogc-aaigrid\n   </Supported>\n   <Supported>\n     mimeType = image/png\n     useMapserver=true:g" -i $i; done; done \
-    \
+
     && cd ../.. \
     #Comment lines before this one if nor OTB nor SAGA \
-    \
+
     && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
     && rm -rf /var/lib/apt/lists/*
 
@@ -359,30 +359,30 @@ RUN set -ex \
     && cp /000-default.conf /etc/apache2/sites-available/ \
     && export CPLUS_INCLUDE_PATH=/usr/include/gdal \
     && export C_INCLUDE_PATH=/usr/include/gdal \
-    && pip3 install --upgrade pip setuptools wheel \
+    && pip3 install --no-cache-dir --upgrade pip setuptools wheel \
     # see various issue reported about _2to3 invocation and setuptools < 58.0 \
     && python3 -m pip install --upgrade --no-cache-dir setuptools==57.5.0 \
-    && pip3 install GDAL==2.4.2 \
-    && pip3 install Cheetah3 redis spython \
+    && pip3 install --no-cache-dir GDAL==2.4.2 \
+    && pip3 install --no-cache-dir Cheetah3 redis spython \
     && sed "s:AllowOverride None:AllowOverride All:g" -i /etc/apache2/apache2.conf \
-    \
+
     # For using another port than 80, uncomment below. \
     # remember to also change the ports in docker-compose.yml \
     # && sed "s:Listen 80:Listen $PORT:g" -i /etc/apache2/ports.conf \
-    \
+
     && mkdir -p /tmp/zTmp/statusInfos \
     && chown www-data:www-data -R /tmp/zTmp /usr/com/zoo-project \
     && chmod 755 /startUp.sh \
-    \
+
     # remove invalid zcfgs \
     && rm /usr/lib/cgi-bin/SAGA/db_pgsql/6.zcfg /usr/lib/cgi-bin/SAGA/imagery_tools/8.zcfg /usr/lib/cgi-bin/SAGA/grid_calculus_bsl/0.zcfg /usr/lib/cgi-bin/SAGA/grids_tools/1.zcfg /usr/lib/cgi-bin/SAGA/grid_visualisation/1.zcfg /usr/lib/cgi-bin/SAGA/ta_lighting/2.zcfg /usr/lib/cgi-bin/OTB/TestApplication.zcfg /usr/lib/cgi-bin/OTB/StereoFramework.zcfg \
     # Update SAGA zcfg
     && sed "s:AllowedValues =    <Default>:AllowedValues =\n    <Default>:g" -i /usr/lib/cgi-bin/SAGA/*/*zcfg \
     && sed "s:Title = $:Title = No title found:g" -i /usr/lib/cgi-bin/SAGA/*/*.zcfg \
     # Enable apache modules
-    \
+
     && a2enmod cgi rewrite \
-    \
+
     # Cleanup \
     && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false $BUILD_DEPS \
     && rm -rf /var/lib/apt/lists/*