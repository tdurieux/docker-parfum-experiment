{
  "startTime": 1674253602650,
  "endTime": 1674253603306,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 13
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 42,
        "columnStart": 7,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DEBIAN_VERSION=latest\n\nFROM debian:${DEBIAN_VERSION} as base\n# DEBIAN_VERSION is specified again because the FROM directive resets ARGs\n# (but their default value is retained if set previously)\n\nARG DEBIAN_VERSION\nARG WINDOW_MANAGER\nARG USER=test\n\n# Needed for string substitution\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN \\\n    # Check for mandatory build arguments: WINDOW_MANAGER\n    : \"${WINDOW_MANAGER:?Build argument `WINDOW_MANAGER` needs to be set and non-empty.}\"\n\n# Install base deps for development\nRUN apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n        build-essential \\\n        git \\\n        net-tools \\\n        sudo \\\n        neovim \\\n        apt-utils \\\n        locales \\\n        git \\\n        g++ \\\n        libgtk-3-dev \\\n        gtk-doc-tools \\\n        gnutls-bin \\\n        valac \\\n        intltool \\\n        libpcre2-dev \\\n        libglib3.0-cil-dev \\\n        libgnutls28-dev \\\n        libgirepository1.0-dev \\\n        libxml2-utils \\\n        gperf \\\n        software-properties-common \\\n        xserver-xorg \\\n        xinit \\\n    && rm -rf /tmp/* /var/tmp/* && rm -rf /var/lib/apt/lists/*;\n\nENV EDITOR nvim\n\nRUN useradd -m ${USER} \\\n    && passwd -d ${USER} \\\n    && sed -i -e \"s/Defaults    requiretty.*/ #Defaults    requiretty/g\" /etc/sudoers \\\n    && echo \"${USER} ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/${USER} \\\n    && usermod -a -G sudo ${USER} \\\n    && rm -rf /home/${USER}/.bashrc\n\n# Install and setup given window manager\nCOPY docker/debian/wm/${WINDOW_MANAGER}.sh /tmp/wm-setup.sh\nRUN chmod a+rwx /tmp/wm-setup.sh && /tmp/wm-setup.sh\n\n# Set correct locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment \\\n    && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n    && echo \"LANG=en_US.UTF-8\" > /etc/locale.conf\n\nRUN locale-gen en_US.UTF-8\nENV LC_CTYPE 'en_US.UTF-8'\nENV LANG C.UTF-8\n\nENV PATH=$PATH:$GOPATH/bin\n\nCOPY bashrc /etc/bash.bashrc\nRUN chmod a+rwx /etc/bash.bashrc\n"
}