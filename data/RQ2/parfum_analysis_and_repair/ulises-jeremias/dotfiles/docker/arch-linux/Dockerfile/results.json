{
  "startTime": 1674218900062,
  "endTime": 1674218901227,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 7,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG ARCHLINUX_VERSION=latest\n\nFROM archlinux:${ARCHLINUX_VERSION} as base\n# ARCHLINUX_VERSION is specified again because the FROM directive resets ARGs\n# (but their default value is retained if set previously)\n\nARG ARCHLINUX_VERSION\nARG WINDOW_MANAGER\nARG USER=test\n\n# Needed for string substitution\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN \\\n    # Check for mandatory build arguments: WINDOW_MANAGER\n    : \"${WINDOW_MANAGER:?Build argument `WINDOW_MANAGER` needs to be set and non-empty.}\"\n\n# Add [multilib] to mirrolist since some deps come from that mirror\nRUN echo -e \"[multilib]\\nInclude = /etc/pacman.d/mirrorlist\" > /tmp/multilib \\\n    && cat /etc/pacman.conf /tmp/multilib > /tmp/pacman.conf \\\n    && mv /tmp/pacman.conf /etc/pacman.conf\n\n# Install base deps for development\nRUN pacman -Syyu --noconfirm \\\n    && pacman -S --noconfirm \\\n        base-devel \\\n        git \\\n        sudo \\\n        neovim \\\n        xorg-server \\\n        xorg-xinit \\\n    && rm -rf /tmp/* /var/tmp/*\n\nENV EDITOR nvim\n\nRUN useradd -m ${USER} \\\n    && passwd -d ${USER} \\\n    && sed -i -e \"s/Defaults    requiretty.*/ #Defaults    requiretty/g\" /etc/sudoers \\\n    && echo \"${USER} ALL=(ALL:ALL) NOPASSWD:ALL\" > /etc/sudoers.d/${USER} \\\n    && usermod -a -G wheel ${USER} \\\n    && rm -rf /home/${USER}/.bashrc\n\n# Install yay - https://github.com/Jguer/yay\nARG YAY_VERSION=10.0.4\nENV YAY_FOLDER=yay_${YAY_VERSION}_x86_64\nRUN cd /tmp \\\n    && curl -f -L https://github.com/Jguer/yay/releases/download/v${YAY_VERSION}/${YAY_FOLDER}.tar.gz | tar zx \\\n    && install -Dm755 ${YAY_FOLDER}/yay /usr/bin/yay \\\n    && install -Dm644 ${YAY_FOLDER}/yay.8 /usr/share/man/man8/yay.8\n\n# Install and setup given window manager\nCOPY docker/arch-linux/wm/${WINDOW_MANAGER}.sh /tmp/wm-setup.sh\nRUN chmod a+rwx /tmp/wm-setup.sh && /tmp/wm-setup.sh\n\n# Set correct locale\nRUN echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment \\\n    && echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n    && echo \"LANG=en_US.UTF-8\" > /etc/locale.conf\n\nRUN locale-gen en_US.UTF-8\nENV LC_CTYPE 'en_US.UTF-8'\nENV LANG C.UTF-8\n\nCOPY bashrc /etc/bash.bashrc\nRUN chmod a+rwx /etc/bash.bashrc\n"
}