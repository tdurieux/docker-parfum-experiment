{
  "startTime": 1674219175427,
  "endTime": 1674219176124,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 18,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 49,
        "columnEnd": 65
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 28,
        "columnEnd": 44
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 37,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "FROM node:14-bullseye as companion-builder\n\nWORKDIR /app\nCOPY . /app/\n\n# Installation Prep\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libusb-1.0-0-dev \\\n    libudev-dev \\\n    unzip \\\n    cmake \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Install dependencies\nRUN yarn config set network-timeout 100000 -g && yarn cache clean;\nRUN ./tools/yarn.sh\n\n# Generate version number file\nRUN yarn build:writefile && yarn cache clean;\n\n# strip back unnecessary dependencies\nRUN yarn --frozen-lockfile --prod && yarn cache clean;\n\n# Delete the webui source\nRUN mv webui/build webui-build \\\n    && rm -R webui \\\n    && mkdir webui \\\n    && mv webui-build webui/build\n\n# cleanup up some stuff that shouldnt be preserved\nRUN rm -R .git\n\n# make the production image\nFROM node:14-bullseye-slim\n\nWORKDIR /app\nCOPY --from=companion-builder /app/\t/app/\n\n# Install curl for the health check\nRUN apt update && apt install --no-install-recommends -y curl && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Create config directory and set correct permissions\n# Once docker mounts the volume, the directory will be owned by node:node\nENV COMPANION_CONFIG_BASEDIR /companion\nRUN mkdir $COMPANION_CONFIG_BASEDIR && chown node:node $COMPANION_CONFIG_BASEDIR\nUSER node\n# Export both web and Satellite API ports\nEXPOSE 8000 16622\n\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 CMD [ \"curl\", \"-fSsq\", \"http://localhost:8000/\" ]\n\n# module-local-dev dependencies\n# Dependencies will be installed and cached once the container is started\nENTRYPOINT [ \"/app/module-dev-docker-entrypoint.sh\" ]\n\n# Bind to 0.0.0.0, as access should be scoped down by how the port is exposed from docker\nCMD [\"./headless_ip.js\", \"0.0.0.0\"]\n"
}