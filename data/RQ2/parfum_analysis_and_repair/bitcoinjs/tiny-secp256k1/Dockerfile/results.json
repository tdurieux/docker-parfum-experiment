{
  "startTime": 1674215328562,
  "endTime": 1674215329377,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 8
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 27,
        "columnStart": 2,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\n\nRUN apt update && \\\n  # Install common dependencies\n  apt install --no-install-recommends -y \\\n    cmake \\\n    curl \\\n    g++ \\\n    gcc \\\n    git \\\n    make \\\n    wget \\\n    # LLVM script\n    gnupg \\\n    lsb-release \\\n    software-properties-common \\\n    # Electron\n    libasound2 \\\n    libgbm1 \\\n    libgdk-pixbuf2.0-0 \\\n    libgtk-3-0 \\\n    libnss3 \\\n    libxcomposite1 \\\n    libxcursor1 \\\n    libxi6 \\\n    libxss1 \\\n    libxtst6 \\\n    xvfb && \\\n    # Install node v14\n    curl -fsSL https://deb.nodesource.com/setup_14.x | bash - && \\\n    apt install --no-install-recommends nodejs -y && \\\n    # Install npm v8 so preserve package-lock.json format\n    npm i -g npm@8 && \\\n    # Clear apt cache\n    rm -rf /var/lib/{apt,dpkg,cache,log}/ && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\n# Install LLVM:12\nRUN curl -sSf https://apt.llvm.org/llvm.sh | bash -s -- 12 && \\\n  ln -s $(which clang-12) /usr/bin/clang\n\n# Install wasm-opt from binaryen\nRUN git clone --depth 1 --branch version_100 https://github.com/WebAssembly/binaryen.git /binaryen && \\\n  cd /binaryen && \\\n  cmake . && \\\n  make -j$(nproc) && \\\n  make install && \\\n  rm -rf /binaryen\n\n# Add non-root user\nRUN useradd -ms /bin/bash builduser\nUSER builduser\n\n# Install Rust stable\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y \\\n    --default-toolchain stable \\\n    --profile minimal \\\n    --component clippy,rustfmt,rust-src \\\n    --target wasm32-unknown-unknown\n\nCMD Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 & export DISPLAY=':99.0' && bash\n"
}