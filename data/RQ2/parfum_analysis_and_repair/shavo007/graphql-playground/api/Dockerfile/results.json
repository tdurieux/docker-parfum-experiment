{
  "startTime": 1674251974747,
  "endTime": 1674251975243,
  "originalSmells": [
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 3,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ---- Base Node ----\nFROM node:11-alpine AS base\nLABEL maintainer=\"shane lee\"\nRUN apk --no-cache update \\\n&& apk --no-cache  add --virtual builds-deps build-base python \\\n&& mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\n\n# copy project file\nCOPY package.json /usr/src/app\nCOPY yarn.lock /usr/src/app\n\n\n#\n# ---- Dependencies ----\nFROM base AS dependencies\n# install node packages\nRUN yarn --production  --frozen-lockfile\n# copy production node_modules aside\nRUN cp -R node_modules prod_node_modules\n# install ALL node_modules, including 'devDependencies'\nCOPY . .\n\nRUN yarn && yarn build\n\n#\n# ---- Release ----\nFROM base AS release\n# copy production node_modules\nCOPY --from=dependencies /usr/src/app/prod_node_modules ./node_modules\nCOPY --from=dependencies /usr/src/app/dist ./dist\n# expose port and define CMD\nENV DATABASE=postgres\nENV DATABASE_USER=postgres\nENV DATABASE_PASSWORD=mysecretpassword\nENV SECRET=wr3r23fwfwefwekwself.2456342.dawqdq\nENV DB_HOST=some-postgres\nENV NODE_ENV production\n\nEXPOSE 8000\nCMD yarn serve\n"
}