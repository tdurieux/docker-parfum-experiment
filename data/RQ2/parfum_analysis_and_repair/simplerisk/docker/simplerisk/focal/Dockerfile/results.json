{
  "startTime": 1674248734663,
  "endTime": 1674248735407,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile generated by script\n\n# Using Ubuntu focal image\nFROM ubuntu:focal\n\n# Maintained by SimpleRisk\nLABEL maintainer=\"Simplerisk <support@simplerisk.com>\"\n\n# Make necessary directories\nRUN mkdir -p /configurations /etc/apache2/ssl /passwords /var/{log,lib/mysql,www/simplerisk}\n\n# Installing apt dependencies    \nRUN dpkg-divert --local --rename /usr/bin/ischroot && \\\n    ln -sf /bin/true /usr/bin/ischroot && \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install apache2 \\\n                                                      php \\\n                                                      php-mysql \\\n                                                      php-json \\\n                                                      mysql-client \\\n                                                      mysql-server \\\n                                                      php-dev \\\n                                                      php-ldap \\\n                                                      php7.4-mbstring \\\n                                                      php-curl \\\n                                                      php-zip \\\n                                                      php-gd \\\n                                                      nfs-common \\\n                                                      chrony \\\n                                                      cron \\\n                                                      python-setuptools \\\n                                                      vim-tiny \\\n                                                      sendmail \\\n                                                      openssl \\\n                                                      ufw \\\n                                                      supervisor && \\\n    rm -rf /var/lib/apt/lists && rm -rf /var/lib/apt/lists/*;\n\n# Create the OpenSSL password\nRUN < /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c21 > /passwords/pass_openssl.txt\n\n# Install and configure supervisor\nCOPY common/supervisord.conf /etc/supervisord.conf\n#RUN mkdir /var/log/supervisor/\nRUN service supervisor restart\n\n# Configure MySQL\nRUN sed -i 's/\\[mysqld\\]/\\[mysqld\\]\\nsql-mode=\"NO_ENGINE_SUBSTITUTION\"/g' /etc/mysql/mysql.conf.d/mysqld.cnf\n\n# Configure Apache\nCOPY common/foreground.sh /etc/apache2/foreground.sh\nRUN chmod 755 /etc/apache2/foreground.sh\nCOPY common/envvars /etc/apache2/envvars\nCOPY common/000-default.conf /etc/apache2/sites-enabled/000-default.conf\nCOPY common/default-ssl.conf /etc/apache2/sites-enabled/default-ssl.conf\nRUN sed -i 's/upload_max_filesize = 2M/upload_max_filesize = 5M/g' /etc/php/7.4/apache2/php.ini\nRUN sed -i 's/\\(upload_max_filesize =\\) .*\\(M\\)/\\1 5\\2/g' /etc/php/7.4/apache2/php.ini\nRUN sed -i 's/\\(memory_limit =\\) .*\\(M\\)/\\1 256\\2/g' /etc/php/7.4/apache2/php.ini\nRUN sed -i '/max_input_vars = 1000/a max_input_vars = 3000' /etc/php/7.4/apache2/php.ini\n\n# Create SSL Certificates for Apache SSL\nRUN mkdir -p /etc/apache2/ssl/ssl.crt\nRUN mkdir -p /etc/apache2/ssl/ssl.key\nRUN openssl genrsa -des3 -passout pass:/passwords/pass_openssl.txt -out /etc/apache2/ssl/ssl.key/simplerisk.pass.key\nRUN openssl rsa -passin pass:/passwords/pass_openssl.txt -in /etc/apache2/ssl/ssl.key/simplerisk.pass.key -out /etc/apache2/ssl/ssl.key/simplerisk.key\nRUN rm /etc/apache2/ssl/ssl.key/simplerisk.pass.key\nRUN openssl req -new -key /etc/apache2/ssl/ssl.key/simplerisk.key -out  /etc/apache2/ssl/ssl.crt/simplerisk.csr -subj \"/CN=simplerisk\"\nRUN openssl x509 -req -days 365 -in /etc/apache2/ssl/ssl.crt/simplerisk.csr -signkey /etc/apache2/ssl/ssl.key/simplerisk.key -out /etc/apache2/ssl/ssl.crt/simplerisk.crt\n\n# Activate Apache modules\nRUN phpenmod ldap\nRUN a2enmod rewrite\nRUN a2enmod ssl\nRUN a2enconf security\nRUN sed -i 's/SSLProtocol all -SSLv3/SSLProtocol TLSv1.2/g' /etc/apache2/mods-enabled/ssl.conf\nRUN sed -i 's/#SSLHonorCipherOrder on/SSLHonorCipherOrder on/g' /etc/apache2/mods-enabled/ssl.conf\nRUN sed -i 's/ServerTokens OS/ServerTokens Prod/g' /etc/apache2/conf-enabled/security.conf\nRUN sed -i 's/ServerSignature On/ServerSignature Off/g' /etc/apache2/conf-enabled/security.conf\n\nRUN echo %sudo  ALL=NOPASSWD: ALL >> /etc/sudoers && \\\n    echo \"20220701-001\" > /tmp/version\n\n# Download SimpleRisk\nRUN rm -rf /var/www/html && \\\n    curl -f -sL https://github.com/simplerisk/database/raw/master/simplerisk-en-20220701-001.sql > /simplerisk.sql && \\\n    curl -f -sL https://github.com/simplerisk/bundles/raw/master/simplerisk-20220701-001.tgz | tar xz -C /var/www\n\n# Permissions\nRUN chown -R www-data: /var/www/simplerisk\n\n# Setting up cronjob\nRUN echo \"* * * * * /usr/bin/php -f /var/www/simplerisk/cron/cron.php > /dev/null 2>&1\" >> /etc/cron.d/backup-cron && \\\n    chmod 0644 /etc/cron.d/backup-cron && \\\n    crontab /etc/cron.d/backup-cron\n\nEXPOSE 80\nEXPOSE 443\n\n# Create the start script and set permissions\nCOPY common/entrypoint.sh /entrypoint.sh\nRUN chmod 755 /entrypoint.sh\n\n# Data to save\nVOLUME /passwords\nVOLUME /configurations\nVOLUME /var/log\nVOLUME /var/lib/mysql\nVOLUME /etc/apache2/ssl\nVOLUME /var/www/simplerisk\n\n# Setting up entrypoint\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\n# Start Apache and MySQL\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n"
}