{
  "startTime": 1674248943921,
  "endTime": 1674248945007,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Dockerfile generated by script\n# Using dedicated PHP image with version 7.4 and Apache\nFROM php:7.4-apache\n\n# Maintained by SimpleRisk\nLABEL maintainer=\"Simplerisk <support@simplerisk.com>\"\n\nWORKDIR /var/www\n\n# Installing apt dependencies    \nRUN apt-get update && \\\n    apt-get -y --no-install-recommends install libldap2-dev \\\n                       libcap2-bin \\\n                       libcurl4-gnutls-dev \\\n                       libpng-dev \\\n                       libzip-dev \\\n                       supervisor \\\n                       cron \\\n                       libonig-dev \\\n                       mariadb-client && \\\n    rm -rf /var/lib/apt/lists/*\n# Configure all PHP extensions\nRUN docker-php-ext-configure ldap --with-libdir=lib/x86_64-linux-gnu && \\\n    docker-php-ext-install ldap \\\n                           mbstring \\\n                           json \\\n                           mysqli \\\n                           pdo_mysql \\\n                           curl \\\n                           zip \\\n                           gd\n# Setting up setcap for port mapping without root and removing packages\nRUN setcap CAP_NET_BIND_SERVICE=+eip /usr/sbin/apache2 && \\\n    chmod gu+s /usr/sbin/cron && \\\n    apt-get -y remove libcap2-bin && \\\n    apt-get -y autoremove && \\\n    apt-get -y purge\n\n# Copying all files\nCOPY common/supervisord.conf /etc/supervisord.conf\nCOPY common/foreground.sh /etc/apache2/foreground.sh\nCOPY common/envvars /etc/apache2/envvars\nCOPY common/000-default.conf /etc/apache2/sites-enabled/000-default.conf\nCOPY common/default-ssl.conf /etc/apache2/sites-enabled/default-ssl.conf\nCOPY common/entrypoint.sh /entrypoint.sh\n\n# Start supervisor\nRUN service supervisor restart\n\n# Configure Apache\nRUN echo 'upload_max_filesize = 5M' >> /usr/local/etc/php/conf.d/docker-php-uploadfilesize.ini\nRUN echo 'memory_limit = 256M' >> /usr/local/etc/php/conf.d/docker-php-memlimit.ini\nRUN echo 'max_input_vars = 3000' >> /usr/local/etc/php/conf.d/docker-php-maxinputvars.ini\nRUN echo 'log_errors = On' >> /usr/local/etc/php/conf.d/docker-php-error_logging.ini\nRUN echo 'error_log = /dev/stderr' >> /usr/local/etc/php/conf.d/docker-php-error_logging.ini\n# Create SSL Certificates for Apache SSL\nRUN echo $(< /dev/urandom tr -dc _A-Z-a-z-0-9 | head -c${1:-32}) > /tmp/pass_openssl.txt\nRUN mkdir -p /etc/apache2/ssl/ssl.crt /etc/apache2/ssl/ssl.key\nRUN openssl genrsa -des3 -passout pass:/tmp/pass_openssl.txt -out /etc/apache2/ssl/ssl.key/simplerisk.pass.key\nRUN openssl rsa -passin pass:/tmp/pass_openssl.txt -in /etc/apache2/ssl/ssl.key/simplerisk.pass.key -out /etc/apache2/ssl/ssl.key/simplerisk.key\nRUN rm /etc/apache2/ssl/ssl.key/simplerisk.pass.key /tmp/pass_openssl.txt\nRUN openssl req -new -key /etc/apache2/ssl/ssl.key/simplerisk.key -out  /etc/apache2/ssl/ssl.crt/simplerisk.csr -subj \"/CN=simplerisk\"\nRUN openssl x509 -req -days 365 -in /etc/apache2/ssl/ssl.crt/simplerisk.csr -signkey /etc/apache2/ssl/ssl.key/simplerisk.key -out /etc/apache2/ssl/ssl.crt/simplerisk.crt\n# Activate Apache modules\nRUN a2enmod rewrite ssl\nRUN a2enconf security\nRUN sed -i 's/SSLProtocol all -SSLv3/SSLProtocol TLSv1.2/g' /etc/apache2/mods-enabled/ssl.conf\nRUN sed -i 's/#SSLHonorCipherOrder on/SSLHonorCipherOrder on/g' /etc/apache2/mods-enabled/ssl.conf\nRUN sed -i 's/ServerTokens OS/ServerTokens Prod/g' /etc/apache2/conf-enabled/security.conf\nRUN sed -i 's/#ServerSignature On/ServerSignature Off/g' /etc/apache2/conf-enabled/security.conf\n\n# Download and extract SimpleRisk, plus saving release version for database reference\nRUN rm -rf /var/www/html && \\\n    curl -f -sL https://github.com/simplerisk/bundles/raw/master/simplerisk-20220701-001.tgz | tar xz -C /var/www && \\\n    echo 20220701-001 > /tmp/version\n\n# Creating Simplerisk user on www-data group and setting up ownerships\nRUN useradd -G www-data simplerisk\nRUN chown -R simplerisk:www-data /var/www/simplerisk /etc/apache2 /var/run/ /var/log/apache2 && \\\n    chmod -R 770 /var/www/simplerisk /etc/apache2 /var/run/ /var/log/apache2 && \\\n    chmod 755 /entrypoint.sh /etc/apache2/foreground.sh\n\n# Setting up cronjob\nRUN echo \"* * * * * /usr/local/bin/php -f /var/www/simplerisk/cron/cron.php > /dev/null 2>&1\" >> /etc/cron.d/backup-cron && \\\n    chmod 0644 /etc/cron.d/backup-cron && \\\n    crontab /etc/cron.d/backup-cron\n\n# Data to save\nVOLUME /var/log/apache2\nVOLUME /etc/apache2/ssl\nVOLUME /var/www/simplerisk\n\n# Using simplerisk user from here\nUSER simplerisk\n\n# Setting up entrypoint\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\n# Ports to expose\nEXPOSE 80\nEXPOSE 443\n\n# Start Apache\nCMD [\"/usr/sbin/apache2ctl\", \"-D\", \"FOREGROUND\"]\n"
}