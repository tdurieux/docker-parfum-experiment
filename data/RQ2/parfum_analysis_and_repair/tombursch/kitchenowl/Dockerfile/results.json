{
  "startTime": 1674253870454,
  "endTime": 1674253871420,
  "originalSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ------------\n# BUILDER\n# ------------\nFROM debian:latest AS builder\n\n# Install dependencies\nRUN apt-get update -y && apt-get install -y --no-install-recommends \\\n  git \\\n  wget \\\n  curl \\\n  zip \\\n  unzip \\\n  apt-transport-https \\\n  ca-certificates \\\n  gnupg \\\n  python3 \\\n  libstdc++6 \\\n  libglu1-mesa && rm -rf /var/lib/apt/lists/*;\nRUN apt-get upgrade -y\n# Install basics\n\n\n\n\n\n\n\n\n\n\n\n\nRUN apt-get clean\n\n# Clone the flutter repo\nRUN git clone https://github.com/flutter/flutter.git -b stable /usr/local/src/flutter\n\n# Set flutter path\nENV PATH=\"${PATH}:/usr/local/src/flutter/bin\"\n\n# Enable flutter web\nRUN flutter config --enable-web\nRUN flutter config --no-analytics\nRUN flutter upgrade\n\n# Run flutter doctor\nRUN flutter doctor -v\n\n# Copy the app files to the container\nCOPY .metadata l10n.yaml pubspec.yaml .env* entrypoint.sh /usr/local/src/app/\nCOPY lib /usr/local/src/app/lib\nCOPY web /usr/local/src/app/web\nCOPY scripts /usr/local/src/app/scripts\nCOPY assets /usr/local/src/app/assets\nRUN touch /usr/local/src/app/.env\n\n# Set the working directory to the app files within the container\nWORKDIR /usr/local/src/app\n\n# Get App Dependencies\nRUN flutter packages get\n\n# Build the app for the web\nRUN flutter build web\n\n# ------------\n# RUNNER\n# ------------\nFROM nginx:stable-alpine\n\nRUN mkdir -p /var/www/web/kitchenowl\nCOPY --from=builder /usr/local/src/app/build/web /var/www/web/kitchenowl\nCOPY entrypoint.sh /docker-entrypoint.d/\nCOPY default.conf.template /etc/nginx/templates/\n\n# Set the server startup script as executable\nRUN chmod u+x /docker-entrypoint.d/entrypoint.sh\n\nHEALTHCHECK --interval=5m --timeout=3s \\\n  CMD curl -f http://localhost/api/health/8M4F88S8ooi4sMbLBfkkV7ctWwgibW6V || exit 1\n\n# Set ENV\nENV BACK_URL='back:5000'\nENV FRONT_URL='http://localhost'\n\n# Expose the web server\nEXPOSE 80"
}