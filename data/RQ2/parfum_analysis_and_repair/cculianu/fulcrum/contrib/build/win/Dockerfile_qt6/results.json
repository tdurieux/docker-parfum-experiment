{
  "startTime": 1674251307200,
  "endTime": 1674251308626,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 8,
        "columnEnd": 108
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 8,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 19,
        "columnStart": 0,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Taken from https://github.com/fffaraz/docker-qt\n# Example usage:\n#   $ docker build --force-rm -t fulcrum-builder/qt:windows .\n#   $ docker run --rm -it -v $(pwd):/work fulcrum-builder/qt:windows\nFROM ubuntu:focal\nLABEL maintainer=\"Calin Culianu <calin.culianu@gmail.com>\"\nENTRYPOINT [\"/bin/bash\"]\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN \\\n apt -y update && \\\napt -y upgrade && \\\n apt -y --no-install-recommends install build-essential iputils-ping nano \\\n    autoconf automake autopoint bash bison bzip2 cmake diffutils file flex gettext \\\n    git g++ gperf gtk-doc-tools intltool libffi-dev libgdk-pixbuf2.0-dev \\\n    libtool-bin libltdl-dev libssl-dev libxml-parser-perl lzip make \\\n    meson ninja-build openssl p7zip-full patch perl pkg-config python python3 python3-setuptools \\\n    python3-mako ruby scons sed unzip wget xz-utils zip \\\n    g++-multilib libc6-dev-i386 \\\n    && \\\napt -y autoremove && \\\napt -y autoclean && \\\napt -y clean && rm -rf /var/lib/apt/lists/*;\n\n# This bit taken from Electron Cash's Windows build Dockerfile -- requires\n# Ubuntu focal (which is 20.04 LTS). If we decide to upgrade the base Ubuntu\n# tag at the top of this file, then this will just need slight modification.\nRUN \\\n    apt -y update && \\\n    apt -y upgrade && \\\n    apt install --no-install-recommends -qy software-properties-common && \\\n    echo \"üí¨  \\033[1;36mInstalling Wine ...\\033[0m\" &  \\\n    wget -nc https://dl.winehq.org/wine-builds/Release.key && \\\n        echo \"c51bcb8cc4a12abfbd7c7660eaf90f49674d15e222c262f27e6c96429111b822  Release.key\" | sha256sum -c - && \\\n        apt-key add Release.key && \\\n    wget -nc https://dl.winehq.org/wine-builds/winehq.key && \\\n        echo \"78b185fabdb323971d13bd329fefc8038e08559aa51c4996de18db0639a51df6  winehq.key\" | sha256sum -c - && \\\n        apt-key add winehq.key && \\\n    rm -f winehq.key Release.key && \\\n    apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/ && \\\n    dpkg --add-architecture i386 && \\\n    apt-get update -q && \\\n    apt-get install --no-install-recommends -qy \\\n        wine-stable-amd64:amd64=4.0.4~focal \\\n        wine-stable-i386:i386=4.0.4~focal \\\n        wine-stable:amd64=4.0.4~focal \\\n        winehq-stable:amd64=4.0.4~focal && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    echo \"üí¨  \\033[1;36mCloning MXE repository ...\\033[0m\" && \\\n    mkdir -p /opt && cd /opt && git clone -b qt6_6_2_0-beta3 https://github.com/cculianu/mxe-qt mxe && \\\n    sed -i 's/MXE_TARGETS := .*/MXE_TARGETS := x86_64-w64-mingw32.static/g' /opt/mxe/settings.mk && \\\n    echo \"üí¨  \\033[1;36mBuilding dependencies for static linking ...\\033[0m\" && \\\n    cd /opt/mxe && make -j`nproc` JOBS=`nproc` MXE_TARGETS='x86_64-w64-mingw32.static' qt6-qtbase && \\\n    ln -sf /opt/mxe/usr/x86_64-w64-mingw32.static/qt6/bin/host-qmake /usr/bin/qmake\n\nRUN \\\n    echo \"üí¨  \\033[1;36mInstalling LibZMQ ...\\033[0m\" && \\\n    cd /opt/mxe && \\\n    NPROC=$(($(nproc))) && \\\n    make --jobs=$NPROC JOBS=$NPROC MXE_TARGETS='x86_64-w64-mingw32.static' libzmq\n\n# Just print versions of everything at the end\nRUN \\\n    echo \"\" && echo \"üëç  \\033[1;32mGCC Version:\\033[0m\" && \\\n    /opt/mxe/usr/bin/x86_64-w64-mingw32.static-gcc --version && \\\n    echo \"üëç  \\033[1;32mQt Version:\\033[0m\" && \\\n    ls -al /opt/mxe/usr/x86_64-w64-mingw32.static/qt6/bin && \\\n    qmake --version && \\\n    echo && echo \"üëç  \\033[1;32mWine Version:\\033[0m\" && \\\n    wine --version && echo\n\nENV PATH=\"${PATH}:/opt/mxe/usr/bin\"\n"
}