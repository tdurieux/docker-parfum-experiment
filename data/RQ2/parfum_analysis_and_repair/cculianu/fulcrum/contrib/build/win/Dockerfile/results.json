{
  "startTime": 1674250703567,
  "endTime": 1674250705448,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 8,
        "columnEnd": 108
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 8,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 0,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 17,
        "columnStart": 0,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Taken from https://github.com/fffaraz/docker-qt\n# Example usage:\n#   $ docker build --force-rm -t fulcrum-builder/qt:windows .\n#   $ docker run --rm -it -v $(pwd):/work fulcrum-builder/qt:windows\nFROM ubuntu:bionic\nLABEL maintainer=\"Calin Culianu <calin.culianu@gmail.com>\"\nENTRYPOINT [\"/bin/bash\"]\n\nRUN \\\n apt -y update && \\\napt -y upgrade && \\\n apt -y --no-install-recommends install build-essential iputils-ping nano \\\n    autoconf automake autopoint bash bison bzip2 flex gettext \\\n    git g++ gperf intltool libffi-dev libgdk-pixbuf2.0-dev \\\n    libtool-bin libltdl-dev libssl-dev libxml-parser-perl lzip make \\\n    openssl p7zip-full patch perl pkg-config python ruby scons \\\n    sed unzip wget xz-utils \\\n    g++-multilib libc6-dev-i386 && \\\napt -y autoremove && \\\napt -y autoclean && \\\napt -y clean && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    cd /opt && \\\n    echo \"üí¨  \\033[1;36mCloning MXE repository ...\\033[0m\" && \\\n    git clone https://github.com/mxe/mxe.git && cd mxe && git checkout fc6f4f5fb134ed65b6a2ed87b40a24233bb742bd && cd .. && \\\n    echo \"üí¨  \\033[1;36mBuilding dependencies for static linking ...\\033[0m\" && \\\n    cd /opt/mxe && \\\n    echo 'override MXE_PLUGIN_DIRS += plugins/gcc7' >> settings.mk && \\\n    NPROC=$(($(nproc))) && \\\n    make --jobs=$NPROC JOBS=$NPROC MXE_TARGETS='x86_64-w64-mingw32.static' qtbase && \\\n    ln -s /opt/mxe/usr/bin/x86_64-w64-mingw32.static-qmake-qt5 /usr/bin/qmake\n\nRUN \\\n    echo \"üí¨  \\033[1;36mInstalling LibZMQ ...\\033[0m\" && \\\n    cd /opt/mxe && \\\n    NPROC=$(($(nproc))) && \\\n    make --jobs=$NPROC JOBS=$NPROC MXE_TARGETS='x86_64-w64-mingw32.static' libzmq\n\n# This bit taken from Electron Cash's Windows build Dockerfile -- requires\n# Ubuntu bionic (which is 18.04 LTS). If we decide to upgrade the base Ubuntu\n# tag at the top of this file, then this will just need slight modification.\nRUN \\\n    apt -y update && \\\n    apt -y upgrade && \\\n    apt install --no-install-recommends -qy software-properties-common && \\\n    echo \"üí¨  \\033[1;36mInstalling Wine ...\\033[0m\" &  \\\n    wget -nc https://dl.winehq.org/wine-builds/Release.key && \\\n        echo \"c51bcb8cc4a12abfbd7c7660eaf90f49674d15e222c262f27e6c96429111b822  Release.key\" | sha256sum -c - && \\\n        apt-key add Release.key && \\\n    wget -nc https://dl.winehq.org/wine-builds/winehq.key && \\\n        echo \"78b185fabdb323971d13bd329fefc8038e08559aa51c4996de18db0639a51df6  winehq.key\" | sha256sum -c - && \\\n        apt-key add winehq.key && \\\n    rm -f winehq.key Release.key && \\\n    apt-add-repository https://dl.winehq.org/wine-builds/ubuntu/ && \\\n    dpkg --add-architecture i386 && \\\n    apt-get update -q && \\\n    apt-get install --no-install-recommends -qy \\\n        wine-stable-amd64:amd64=4.0.3~bionic \\\n        wine-stable-i386:i386=4.0.3~bionic \\\n        wine-stable:amd64=4.0.3~bionic \\\n        winehq-stable:amd64=4.0.3~bionic && rm -rf /var/lib/apt/lists/*;\n\n# Just print versions of everything at the end\nRUN \\\n    echo \"\" && echo \"üëç  \\033[1;32mGCC Version:\\033[0m\" && \\\n    /opt/mxe/usr/bin/x86_64-w64-mingw32.static-gcc --version && \\\n    echo \"üëç  \\033[1;32mQt Version:\\033[0m\" && \\\n    qmake --version && \\\n    echo && echo \"üëç  \\033[1;32mWine Version:\\033[0m\" && \\\n    wine --version && echo\n\nENV PATH=\"${PATH}:/opt/mxe/usr/bin\"\n"
}