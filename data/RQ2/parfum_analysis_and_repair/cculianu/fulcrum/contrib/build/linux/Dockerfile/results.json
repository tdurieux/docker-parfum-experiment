{
  "startTime": 1674249259520,
  "endTime": 1674249260639,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 88
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 88
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Taken from https://github.com/fffaraz/docker-qt\n# Example usage:\n#   $ docker build --force-rm -t fulcrum-builder/qt:linux .\n#   $ docker run --rm -it -v $(pwd):/work fulcrum-builder/qt:linux\nFROM ubuntu:bionic\nLABEL maintainer=\"Calin Culianu <calin.culianu@gmail.com>\"\nENTRYPOINT [\"/bin/bash\"]\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN \\\n    apt -qy update && \\\n    apt -qy upgrade && \\\n    apt -qy --no-install-recommends install build-essential cmake gdb git iputils-ping nano perl python valgrind wget autoconf && \\\n    apt -qy --no-install-recommends install libbz2-dev zlib1g-dev libssl-dev libnss3-dev libxslt-dev libxml2-dev && \\\n    apt -qy autoremove && \\\n    apt -qy autoclean && rm -rf /var/lib/apt/lists/*;\n\nRUN \\\n    mkdir -p /opt/local/qt && \\\n    cd /opt && \\\n    echo \"üí¨  \\033[1;36mDownloading Qt sources ...\\033[0m\" &  \\\n    wget -q https://download.qt.io/official_releases/qt/5.15/5.15.2/single/qt-everywhere-src-5.15.2.tar.xz && \\\n    echo \"üí¨  \\033[1;36mExtracting archive ...\\033[0m\" &  \\\n    tar xf qt-everywhere-src-5.15.2.tar.xz && \\\n    rm qt-everywhere-src-5.15.2.tar.xz && \\\n    cd qt-everywhere-src-5.15.2 && \\\n    echo \"üí¨  \\033[1;36mConfiguring Qt ...\\033[0m\" &  \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" -opensource -confirm-license -release -static -nomake tests -nomake examples -no-compile-examples \\\n        -prefix /opt/local/qt -no-gui -no-sse2 -ssl -no-shared -c++std c++17 -no-widgets -no-dbus -no-cups -no-freetype -no-fontconfig -no-gif \\\n        -no-ico -no-libpng -no-libjpeg -strip -no-opengl -no-sqlite -no-glib -no-iconv -optimize-size -no-harfbuzz -no-sql-sqlite -no-sql-mysql \\\n        -qpa 'linuxfb' -no-feature-accessibility -nomake tools -no-linuxfb -no-xcb -no-feature-sqlmodel -no-feature-itemmodeltester \\\n        -no-feature-sessionmanager -no-feature-vnc -no-icu -skip qtconnectivity \\\n        -qt-pcre -qt-zlib -no-tiff -no-webp -no-gstreamer -no-libinput \\\n        -skip qtwebengine -skip qt3d -skip qtlocation -skip qtquick3d && \\\n    echo \"\" && echo \"üí¨  \\033[1;36mCompiling Qt ...\\033[0m\" &  \\\n    make -j $(nproc) && \\\n    echo \"\" && echo \"üí¨  \\033[1;36mInstalling Qt ...\\033[0m\" &  \\\n    make install && \\\n    cd /opt && \\\n    echo \"\" && echo \"üí¨  \\033[1;36mCleaning up ...\\033[0m\" &  \\\n    rm -rf qt-everywhere-src-5.15.2 && \\\n    echo \"\" && echo \"üëç  \\033[1;32mGCC Version:\\033[0m\" &  \\\n    gcc --version && \\\n    echo \"üëç  \\033[1;32mQt Version:\\033[0m\" &  \\\n    /opt/local/qt/bin/qmake --version\n\nENV PATH=\"${PATH}:/opt/local/qt/bin\"\n"
}