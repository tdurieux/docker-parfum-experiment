{
  "startTime": 1674254574898,
  "endTime": 1674254576242,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 17,
        "columnEnd": 106
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 16,
        "columnStart": 22,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Node Dockerfile for hydrophone streaming\n\n# Use official debian image, but pull the armhf (v7+) image explicitly because\n# Docker currently has a bug where armel is used instead when relying on\n# multiarch manifest: https://github.com/moby/moby/issues/34875\n# When this is fixed, this can be changed to just `FROM debian:stretch-slim`\n# FROM python:3.6-slim-buster\nFROM arm32v7/debian:buster-slim\nMAINTAINER Orcasound <orcanode-devs@orcasound.net>\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    git\\\n    build-essential \\\n    software-properties-common \\\n    curl \\\n    gnupg \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\n####################### Build ffmpeg with Jack #####################################################\n# Note this doesn't work with amd64 because of the --arch-arme1 command\n\nRUN git clone git://source.ffmpeg.org/ffmpeg.git\nRUN apt-get update && apt-get install -y --no-install-recommends libomxil-bellagio-dev libjack-dev && rm -rf /var/lib/apt/lists/*;\nRUN cd ffmpeg && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --arch=armel --target-os=linux --enable-gpl --enable-nonfree --enable-libjack\nRUN cd ffmpeg && make -j4\n# Hack to patch jack.c with slightly longer timeout\nCOPY ./jack.c ./ffmpeg/libavdevice/jack.c\nRUN cd ffmpeg && make\nRUN cd ffmpeg && make install\n"
}