{
  "startTime": 1674246779256,
  "endTime": 1674246780206,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 2,
        "columnEnd": 68
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 29,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 2,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nginx:alpine AS builder\n\n# nginx:alpine contains NGINX_VERSION environment variable, like so:\n# ENV NGINX_VERSION 1.15.0\n# In this example the NCHAN module is used as an example.\n\n# Our NCHAN version\nENV NCHAN_VERSION 1.1.15\n\n# Download sources\nRUN wget \"https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\" -O nginx.tar.gz && \\\n  wget \"https://github.com/slact/nchan/archive/v${NCHAN_VERSION}.tar.gz\" -O nchan.tar.gz\n\n# For latest build deps, see https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/Dockerfile\nRUN apk add --no-cache --virtual .build-deps \\\n  gcc \\\n  libc-dev \\\n  make \\\n  openssl-dev \\\n  pcre-dev \\\n  zlib-dev \\\n  linux-headers \\\n  curl \\\n  gnupg \\\n  libxslt-dev \\\n  gd-dev \\\n  geoip-dev\n\n# Reuse same cli arguments as the nginx:alpine image used to build\nRUN CONFARGS=$(nginx -V 2>&1 | sed -n -e 's/^.*arguments: //p') \\\n\ttar -zxC /usr/src -f nginx.tar.gz && \\\n  tar -xzvf \"nchan.tar.gz\" && \\\n  NCHANDIR=\"$(pwd)/nchan-${NCHAN_VERSION}\" && \\\n  cd /usr/src/nginx-$NGINX_VERSION && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-compat $CONFARGS --add-dynamic-module=$NCHANDIR && \\\n  make && make install && rm nginx.tar.gz\n\nFROM nginx:alpine\n# Extract the dynamic module NCHAN from the builder image\nCOPY --from=builder /usr/local/nginx/modules/ngx_nchan_module.so /usr/local/nginx/modules/ngx_nchan_module.so\nRUN rm /etc/nginx/conf.d/default.conf\n\nCOPY dev/nginx.conf /etc/nginx/nginx.conf\nCOPY default.conf /etc/nginx/conf.d/default.conf\nEXPOSE 7070\nSTOPSIGNAL SIGTERM\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}