diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/danisla/dockerfiles/jupyter/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/danisla/dockerfiles/jupyter/Dockerfile/repaired.Dockerfile
index cda031b..3c89cd6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/danisla/dockerfiles/jupyter/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/danisla/dockerfiles/jupyter/Dockerfile/repaired.Dockerfile
@@ -45,16 +45,16 @@ RUN apt-get update -qq && \
         texlive-latex-base \
         texlive-latex-extra \
         zlib1g-dev \
-        libssl-dev
+        libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Tini
-RUN curl -L https://github.com/krallin/tini/releases/download/v0.6.0/tini > tini && \
-    echo "d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b *tini" | sha256sum -c - && \
+RUN curl -f -L https://github.com/krallin/tini/releases/download/v0.6.0/tini > tini && \
+    echo "d5ed732199c36a1189320e6c4859f0169e950692f451c03e7854243b95f4234b  *tini" | sha256sum -c - && \
     mv tini /usr/local/bin/tini && \
     chmod +x /usr/local/bin/tini
 
 # Install the recent pip release
-RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
+RUN curl -f -O https://bootstrap.pypa.io/get-pip.py && \
     python2 get-pip.py && \
     python3 get-pip.py && \
     rm get-pip.py && \
@@ -76,10 +76,10 @@ RUN git checkout ${NOTEBOOK_VERSION}
 # Install dependencies and run tests.
 RUN BUILD_DEPS="nodejs-legacy npm" && \
     apt-get update -qq && \
-    DEBIAN_FRONTEND=noninteractive apt-get install -yq $BUILD_DEPS && \
-    \
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -yq $BUILD_DEPS && \
+
     pip3 install --no-cache-dir --pre -e /usr/src/jupyter-notebook && \
-    \
+
     apt-get clean && \
     rm -rf /var/lib/apt/lists/* && \
     apt-get purge -y --auto-remove \
@@ -97,8 +97,8 @@ RUN mkdir -p -m 700 /root/.jupyter/ && \
 
 # Install additional Python modules
 #
-RUN pip2 install -U pyyaml ipywidgets
-RUN pip3 install -U pyyaml ipywidgets
+RUN pip2 install --no-cache-dir -U pyyaml ipywidgets
+RUN pip3 install --no-cache-dir -U pyyaml ipywidgets
 
 WORKDIR /opt/notebooks