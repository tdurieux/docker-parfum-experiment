{
  "startTime": 1674250554885,
  "endTime": 1674250555943,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 7,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 11,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 7,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# @description php 7.1 image base on the alpine 3.7 镜像更小，构建完成只有46M\n#                       some information\n# ------------------------------------------------------------------------------------\n# @link https://hub.docker.com/_/alpine/      alpine image\n# @link https://hub.docker.com/_/php/         php image\n# @link https://github.com/docker-library/php php dockerfiles\n# ------------------------------------------------------------------------------------\n# @build-example docker build . -f Dockerfile -t swoft/swoft-project:v1.0\n# @run-example docker run --rm -d -p 8080:8080 --name swoft-project swoft/swoft-project:1.0\n# @run-example docker run --rm -d -p 8080:8080 --name swoft-project --env-file .env registry.cn-shanghai.aliyuncs.com/limingxinleo/swoft-project:latest\n\nFROM swoft/alphp:base\nLABEL maintainer=\"limx <limingxin@swoft.org>\" version=\"1.0\"\n\n##\n# ---------- env settings ----------\n##\nENV SWOOLE_VERSION=4.2.10 \\\n    DOCKER_ENVIRONMENT=true \\\n    #  install and remove building packages\n    PHPIZE_DEPS=\"autoconf dpkg-dev dpkg file g++ gcc libc-dev make php7-dev php7-pear pkgconf re2c pcre-dev zlib-dev\"\n\n# update\nRUN set -ex \\\n    && apk update \\\n    # for swoole extension libaio linux-headers\n    && apk add --no-cache libstdc++ openssl php7-xml php7-xmlreader php7-xmlwriter php7-pcntl git bash \\\n    && apk add --no-cache --virtual .build-deps $PHPIZE_DEPS libaio-dev openssl-dev \\\n\n    # download\n    && cd /tmp \\\n    && curl -f -SL \"https://github.com/swoole/swoole-src/archive/v${SWOOLE_VERSION}.tar.gz\" -o swoole.tar.gz \\\n    && ls -alh \\\n\n    # php extension:swoole\n    && cd /tmp \\\n    && mkdir -p swoole \\\n    && tar -xf swoole.tar.gz -C swoole --strip-components=1 \\\n    && ( cd swoole \\\n        && phpize \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-mysqlnd --enable-openssl \\\n        && make -s -j$(nproc) && make install) \\\n\n    && echo \"extension=swoole.so\" > /etc/php7/conf.d/swoole.ini \\\n\n    # install composer\n    && cd /tmp \\\n    && curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && composer self-update --clean-backups \\\n\n    # clear\n    && php -v \\\n    && php -m \\\n    # ---------- clear works ----------\n    && apk del .build-deps \\\n    && rm -rf /var/cache/apk/* /tmp/* /usr/share/man \\\n    && echo -e \"\\033[42;37m Build Completed :).\\033[0m\\n\" && rm swoole.tar.gz\n\nCOPY . /opt/www\n\nWORKDIR /opt/www\n\nRUN composer install --no-dev \\\n    && composer dump-autoload -o \\\n    && php /opt/www/bin/swoft app:init\n\nEXPOSE 8080 8099\n\nENTRYPOINT [\"php\", \"/opt/www/bin/swoft\", \"start\"]\n"
}