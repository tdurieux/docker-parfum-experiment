{
  "startTime": 1674251955006,
  "endTime": 1674251956774,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 7,
        "columnEnd": 122
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 7,
        "columnEnd": 115
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 155,
        "lineEnd": 155,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 156,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 158,
        "lineEnd": 158,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 132,
        "lineEnd": 132,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 30,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 16
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 51,
        "columnStart": 7,
        "columnEnd": 17
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019,2020,2021 Sony Corporation.\n# Copyright 2021 Sony Group Corporation.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# for nnabla>=1.5.0\n\nFROM ppc64le/centos:7\n\nARG PIP_INS_OPTS\nARG PYTHONWARNINGS\nARG CURL_OPTS\nARG WGET_OPTS\nARG YUM_OPTS\n\nENV LC_ALL C\nENV LANG C\nENV LANGUAGE C\n\nRUN eval ${YUM_OPTS} \\\n    && yum install -y \\\n       epel-release \\\n       yum-utils \\\n    && yum install -y \\\n        curl \\\n        freetype-devel \\\n        git \\\n        hdf5 \\\n        hdf5-devel \\\n        lapack-devel \\\n        libjpeg-devel \\\n        xz-devel \\\n        libpng-devel \\\n        redhat-lsb-core \\\n        rpm-build \\\n        unzip \\\n        wget \\\n        zip \\\n        zlib-static \\\n        libmpc-devel \\\n        mpfr-devel \\\n        gmp-devel \\\n    && yum group install -y \"Development Tools\" \\\n    && yum clean all && rm -rf /var/cache/yum\n\n################################################### gcc\nRUN mkdir /tmp/deps \\\n    && cd /tmp/deps \\\n    && wget ${WGET_OPTS} http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-6.5.0/gcc-6.5.0.tar.gz \\\n    && tar zxf gcc-6.5.0.tar.gz \\\n    && cd gcc-6.5.0 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-multilib --enable-languages=c,c++ \\\n    && make -j8 \\\n    && make install \\\n    && cd / \\\n    && rm -rf /tmp/* && rm gcc-6.5.0.tar.gz\n\n################################################### cmake\nENV CMAKEVER=3.14.3\nRUN mkdir /tmp/deps \\\n    && cd /tmp/deps \\\n    && yum install -y cmake3 \\\n    && curl -f ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz \\\n    && tar xf cmake-${CMAKEVER}.tar.gz \\\n    && cd cmake-${CMAKEVER} \\\n    && mkdir build \\\n    && cd build \\\n    && cmake3 -DBUILD_TESTING=FALSE .. \\\n    && make \\\n    && make install \\\n    && yum remove -y cmake3 \\\n    && yum clean all \\\n    && rm -rf /var/cache/yum/* \\\n    && cd / \\\n    && rm -rf /tmp/* && rm cmake-${CMAKEVER}.tar.gz\n\n################################################## protobuf\nENV PROTOVER=3.19.4\nRUN mkdir /tmp/deps \\\n    && cd /tmp/deps \\\n    && curl -f ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \\\n    && tar xvf protobuf-v${PROTOVER}.tar.gz \\\n    && cd protobuf-${PROTOVER} \\\n    && mkdir build \\\n    && cd build \\\n    && cmake \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON \\\n        -Dprotobuf_BUILD_TESTS=OFF \\\n        -DCMAKE_CXX_STANDARD=14 \\\n        -D CMAKE_C_COMPILER=gcc CMAKE_CXX_COMPILER=g++ /usr/bin/gcc \\\n        ../cmake \\\n    && make \\\n    && make install \\\n    && cd / \\\n    && rm -rf /tmp/* && rm protobuf-v${PROTOVER}.tar.gz\n\n################################################## libarchive\nRUN mkdir /tmp/deps \\\n    && cd /tmp/deps \\\n    && curl -f ${CURL_OPTS} -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \\\n    && tar xfa libarchive-3.3.2.tar.gz \\\n    && mkdir libarchive-build \\\n    && cd libarchive-build \\\n    && cmake \\\n        -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DENABLE_NETTLE=FALSE -DENABLE_OPENSSL=FALSE \\\n        -DENABLE_LZO=FALSE -DENABLE_LZMA=FALSE -DENABLE_BZip2=FALSE \\\n        -DENABLE_LIBXML2=FALSE -DENABLE_EXPAT=FALSE -DENABLE_PCREPOSIX=FALSE -DENABLE_LibGCC=FALSE \\\n        -DENABLE_CNG=FALSE -DENABLE_TAR=FALSE -DENABLE_TAR_SHARED=FALSE -DENABLE_CPIO=FALSE \\\n        -DENABLE_CPIO_SHARED=FALSE -DENABLE_CAT=FALSE -DENABLE_CAT_SHARED=FALSE -DENABLE_XATTR=FALSE \\\n        -DENABLE_ACL=FALSE -DENABLE_ICONV=FALSE -DENABLE_TEST=FALSE \\\n        ../libarchive-3.3.2 \\\n    && make \\\n    && make install \\\n    && cd / \\\n    && rm -rf /tmp/* && rm libarchive-3.3.2.tar.gz\n\n################################################## patchelf\nRUN mkdir /tmp/deps \\\n    && cd /tmp/deps \\\n    && wget ${WGET_OPTS} http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 \\\n    && tar xfa patchelf-0.9.tar.bz2 \\\n    && cd patchelf-0.9 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && cd / \\\n    && rm -rf /tmp/* && rm patchelf-0.9.tar.bz2\n\nARG PYTHON_VERSION_MAJOR\nARG PYTHON_VERSION_MINOR\n\nADD python/setup_requirements.txt /tmp/deps/\nADD python/requirements.txt /tmp/deps/\nADD python/test_requirements.txt /tmp/deps/\n\n################################################## build python from source\nRUN if [ \"${PYVERNAME}\" == \"3.7\" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.7.10/Python-3.7.10.tgz; fi \\\n\t&& if [ \"${PYVERNAME}\" == \"3.8\" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.8.8/Python-3.8.8.tgz; fi \\\n\t&& if [ \"${PYVERNAME}\" == \"3.9\" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.9.8/Python-3.9.8.tgz; fi \\\n\t&& tar -xzf Python-${PYVERNAME}*.tgz \\\n\t&& cd Python-${PYVERNAME}* \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations \\\n\t&& make altinstall \\\n\t&& ln -s -f /usr/local/bin/python${PYVERNAME} /usr/bin/python \\\n\t&& ln -s /usr/local/bin/pip${PYVERNAME} /usr/local/bin/pip \\\n\t&& pip install --no-cache-dir ${PIP_INS_OPTS} -y numpy scipy scikit-image six \\\n\t&& pip install --no-cache-dir ${PIP_INS_OPTS} -U -r /tmp/deps/setup_requirements.txt \\\n\t&& pip install --no-cache-dir ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \\\n\t&& pip install --no-cache-dir ${PIP_INS_OPTS} -U -r /tmp/deps/test_requirements.txt \\\n\t&& cd .. \\\n\t&& rm -rf Python-${PYVERNAME}* \\\n\t&& rm -rf /tmp/* && rm Python-${PYVERNAME}*.tgz\n\nENV PATH /tmp/.local/bin:$PATH\nENV LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH\nENV CC /usr/local/bin/gcc\nENV CXX /usr/local/bin/g++\n"
}