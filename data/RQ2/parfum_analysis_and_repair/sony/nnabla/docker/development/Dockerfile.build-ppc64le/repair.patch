diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sony/nnabla/docker/development/Dockerfile.build-ppc64le b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sony/nnabla/docker/development/Dockerfile.build-ppc64le/repaired.Dockerfile
index 3eff33c..5ba94c8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sony/nnabla/docker/development/Dockerfile.build-ppc64le
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sony/nnabla/docker/development/Dockerfile.build-ppc64le/repaired.Dockerfile
@@ -51,7 +51,7 @@ RUN eval ${YUM_OPTS} \
         mpfr-devel \
         gmp-devel \
     && yum group install -y "Development Tools" \
-    && yum clean all
+    && yum clean all && rm -rf /var/cache/yum
 
 ################################################### gcc
 RUN mkdir /tmp/deps \
@@ -59,18 +59,18 @@ RUN mkdir /tmp/deps \
     && wget ${WGET_OPTS} http://ftp.tsukuba.wide.ad.jp/software/gcc/releases/gcc-6.5.0/gcc-6.5.0.tar.gz \
     && tar zxf gcc-6.5.0.tar.gz \
     && cd gcc-6.5.0 \
-    && ./configure --disable-multilib --enable-languages=c,c++ \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-multilib --enable-languages=c,c++ \
     && make -j8 \
     && make install \
     && cd / \
-    && rm -rf /tmp/*
+    && rm -rf /tmp/* && rm gcc-6.5.0.tar.gz
 
 ################################################### cmake
 ENV CMAKEVER=3.14.3
 RUN mkdir /tmp/deps \
     && cd /tmp/deps \
     && yum install -y cmake3 \
-    && curl ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz \
+    && curl -f ${CURL_OPTS} -L https://github.com/Kitware/CMake/releases/download/v${CMAKEVER}/cmake-${CMAKEVER}.tar.gz -o cmake-${CMAKEVER}.tar.gz \
     && tar xf cmake-${CMAKEVER}.tar.gz \
     && cd cmake-${CMAKEVER} \
     && mkdir build \
@@ -82,13 +82,13 @@ RUN mkdir /tmp/deps \
     && yum clean all \
     && rm -rf /var/cache/yum/* \
     && cd / \
-    && rm -rf /tmp/*
+    && rm -rf /tmp/* && rm cmake-${CMAKEVER}.tar.gz
 
 ################################################## protobuf
 ENV PROTOVER=3.19.4
 RUN mkdir /tmp/deps \
     && cd /tmp/deps \
-    && curl ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \
+    && curl -f ${CURL_OPTS} -L https://github.com/google/protobuf/archive/v${PROTOVER}.tar.gz -o protobuf-v${PROTOVER}.tar.gz \
     && tar xvf protobuf-v${PROTOVER}.tar.gz \
     && cd protobuf-${PROTOVER} \
     && mkdir build \
@@ -102,12 +102,12 @@ RUN mkdir /tmp/deps \
     && make \
     && make install \
     && cd / \
-    && rm -rf /tmp/*
+    && rm -rf /tmp/* && rm protobuf-v${PROTOVER}.tar.gz
 
 ################################################## libarchive
 RUN mkdir /tmp/deps \
     && cd /tmp/deps \
-    && curl ${CURL_OPTS} -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \
+    && curl -f ${CURL_OPTS} -L https://www.libarchive.org/downloads/libarchive-3.3.2.tar.gz -o libarchive-3.3.2.tar.gz \
     && tar xfa libarchive-3.3.2.tar.gz \
     && mkdir libarchive-build \
     && cd libarchive-build \
@@ -122,7 +122,7 @@ RUN mkdir /tmp/deps \
     && make \
     && make install \
     && cd / \
-    && rm -rf /tmp/*
+    && rm -rf /tmp/* && rm libarchive-3.3.2.tar.gz
 
 ################################################## patchelf
 RUN mkdir /tmp/deps \
@@ -130,11 +130,11 @@ RUN mkdir /tmp/deps \
     && wget ${WGET_OPTS} http://nixos.org/releases/patchelf/patchelf-0.9/patchelf-0.9.tar.bz2 \
     && tar xfa patchelf-0.9.tar.bz2 \
     && cd patchelf-0.9 \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
     && cd / \
-    && rm -rf /tmp/*
+    && rm -rf /tmp/* && rm patchelf-0.9.tar.bz2
 
 ARG PYTHON_VERSION_MAJOR
 ARG PYTHON_VERSION_MINOR
@@ -149,17 +149,17 @@ RUN if [ "${PYVERNAME}" == "3.7" ]; then wget ${WGET_OPTS} https://www.python.or
 	&& if [ "${PYVERNAME}" == "3.9" ]; then wget ${WGET_OPTS} https://www.python.org/ftp/python/3.9.8/Python-3.9.8.tgz; fi \
 	&& tar -xzf Python-${PYVERNAME}*.tgz \
 	&& cd Python-${PYVERNAME}* \
-	&& ./configure --enable-optimizations \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-optimizations \
 	&& make altinstall \
 	&& ln -s -f /usr/local/bin/python${PYVERNAME} /usr/bin/python \
 	&& ln -s /usr/local/bin/pip${PYVERNAME} /usr/local/bin/pip \
-	&& pip install ${PIP_INS_OPTS} -y numpy scipy scikit-image six \
-	&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/setup_requirements.txt \
-	&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \
-	&& pip install ${PIP_INS_OPTS} -U -r /tmp/deps/test_requirements.txt \
+	&& pip install --no-cache-dir ${PIP_INS_OPTS} -y numpy scipy scikit-image six \
+	&& pip install --no-cache-dir ${PIP_INS_OPTS} -U -r /tmp/deps/setup_requirements.txt \
+	&& pip install --no-cache-dir ${PIP_INS_OPTS} -U -r /tmp/deps/requirements.txt \
+	&& pip install --no-cache-dir ${PIP_INS_OPTS} -U -r /tmp/deps/test_requirements.txt \
 	&& cd .. \
 	&& rm -rf Python-${PYVERNAME}* \
-	&& rm -rf /tmp/*
+	&& rm -rf /tmp/* && rm Python-${PYVERNAME}*.tgz
 
 ENV PATH /tmp/.local/bin:$PATH
 ENV LD_LIBRARY_PATH /usr/local/lib64:$LD_LIBRARY_PATH