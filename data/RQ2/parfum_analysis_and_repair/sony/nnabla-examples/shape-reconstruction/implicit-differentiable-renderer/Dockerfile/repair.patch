diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sony/nnabla-examples/shape-reconstruction/implicit-differentiable-renderer/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sony/nnabla-examples/shape-reconstruction/implicit-differentiable-renderer/Dockerfile/repaired.Dockerfile
index e737589..95bba8e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sony/nnabla-examples/shape-reconstruction/implicit-differentiable-renderer/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sony/nnabla-examples/shape-reconstruction/implicit-differentiable-renderer/Dockerfile/repaired.Dockerfile
@@ -24,15 +24,15 @@ RUN apt-get install -y --no-install-recommends \
         build-essential \
         curl \
         gfortran \
-        libibverbs-dev
+        libibverbs-dev && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get install -y --no-install-recommends ca-certificates
+RUN apt-get install -y --no-install-recommends ca-certificates && rm -rf /var/lib/apt/lists/*;
 
 RUN mkdir /tmp/openmpi
-RUN curl https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2
-RUN tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2
+RUN curl -f https://download.open-mpi.org/release/open-mpi/v3.1/openmpi-3.1.6.tar.bz2 -o /tmp/openmpi/openmpi-3.1.6.tar.bz2
+RUN tar Cxvf /tmp/openmpi /tmp/openmpi/openmpi-3.1.6.tar.bz2 && rm /tmp/openmpi/openmpi-3.1.6.tar.bz2
 RUN cd tmp/openmpi/openmpi-3.1.6 \
-    && ./configure \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/opt/openmpi --enable-orterun-prefix-by-default --with-sge \
         CC=gcc \
         CXX=g++ \
@@ -58,11 +58,11 @@ RUN apt-get update \
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3.8 0
 RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 0
 
-RUN pip3 install --upgrade pip
-RUN pip install wheel setuptools
-RUN pip install opencv-python || true
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip install --no-cache-dir wheel setuptools
+RUN pip install --no-cache-dir opencv-python || true
 
-RUN pip install --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110 \
+RUN pip install --no-cache-dir --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda110 \
     || echo "Skip DALI installation (CUDA=11.0)"
 
 COPY --from=openmpi /opt/openmpi /opt/openmpi
@@ -71,7 +71,7 @@ ENV LD_LIBRARY_PATH /opt/openmpi/lib:$LD_LIBRARY_PATH
 
 
 ARG NNABLA_VER
-RUN pip install nnabla-ext-cuda110-nccl2-mpi3.1.6==${NNABLA_VER}
+RUN pip install --no-cache-dir nnabla-ext-cuda110-nccl2-mpi3.1.6==${NNABLA_VER}
 
 # Solve nccl error that No space left on device
 # while creating shared memory segment.
@@ -84,10 +84,10 @@ RUN chown -R nnabla:nnabla /home/nnabla
 
 # Python dependency
 COPY requirements.txt /tmp/requirements.txt
-RUN pip install -r /tmp/requirements.txt
+RUN pip install --no-cache-dir -r /tmp/requirements.txt
 
 # Apt dependency
-RUN apt-get update && apt-get install -y libusb-1.0-0
+RUN apt-get update && apt-get install --no-install-recommends -y libusb-1.0-0 && rm -rf /var/lib/apt/lists/*;
 
 ENV PYTHONPATH /opt/lib:$PYTHONPATH