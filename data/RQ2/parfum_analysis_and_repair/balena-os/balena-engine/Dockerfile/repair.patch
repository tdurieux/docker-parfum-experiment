diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/balena-os/balena-engine/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/balena-os/balena-engine/Dockerfile/repaired.Dockerfile
index 44e98e7..ab6a4e4 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/balena-os/balena-engine/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/balena-os/balena-engine/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# syntax=docker/dockerfile:1.2
-
 ARG CROSS="false"
 ARG SYSTEMD="false"
 # IMPORTANT: When updating this please note that stdlib archive/tar pkg is vendored
@@ -31,15 +29,15 @@ RUN --mount=type=cache,sharing=locked,id=moby-criu-aptlib,target=/var/lib/apt \
             libprotobuf-dev \
             protobuf-c-compiler \
             protobuf-compiler \
-            python-protobuf
+            python-protobuf && rm -rf /var/lib/apt/lists/*;
 
 # Install CRIU for checkpoint/restore support
 ARG CRIU_VERSION=3.14
 RUN mkdir -p /usr/src/criu \
-    && curl -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 \
+    && curl -f -sSL https://github.com/checkpoint-restore/criu/archive/v${CRIU_VERSION}.tar.gz | tar -C /usr/src/criu/ -xz --strip-components=1 \
     && cd /usr/src/criu \
     && make \
-    && make PREFIX=/build/ install-criu
+    && make PREFIX=/build/ install-criu && rm -rf /usr/src/criu
 
 FROM base AS registry
 WORKDIR /go/src/github.com/docker/distribution
@@ -88,7 +86,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-frozen-images-aptlib,target=/var/l
        apt-get update && apt-get install -y --no-install-recommends \
            ca-certificates \
            curl \
-           jq
+           jq && rm -rf /var/lib/apt/lists/*;
 # Get useful and necessary Hub images so we can "docker load" locally instead of pulling
 COPY contrib/download-frozen-image-v2.sh /
 ARG TARGETARCH
@@ -113,7 +111,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-cross-true-aptlib,target=/var/lib/
         apt-get update && apt-get install -y --no-install-recommends \
             crossbuild-essential-arm64 \
             crossbuild-essential-armel \
-            crossbuild-essential-armhf
+            crossbuild-essential-armhf && rm -rf /var/lib/apt/lists/*;
 
 FROM cross-${CROSS} as dev-base
 
@@ -130,7 +128,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-cross-false-aptlib,target=/var/lib
             libdevmapper-dev \
             libseccomp-dev/buster-backports \
             libsystemd-dev \
-            libudev-dev
+            libudev-dev && rm -rf /var/lib/apt/lists/*;
 
 FROM --platform=linux/amd64 runtime-dev-cross-false AS runtime-dev-cross-true
 ARG DEBIAN_FRONTEND
@@ -147,7 +145,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-cross-true-aptlib,target=/var/lib/
             libapparmor-dev:armhf \
             libseccomp-dev:arm64/buster-backports \
             libseccomp-dev:armel/buster-backports \
-            libseccomp-dev:armhf/buster-backports
+            libseccomp-dev:armhf/buster-backports && rm -rf /var/lib/apt/lists/*;
 
 FROM runtime-dev-cross-${CROSS} AS runtime-dev
 
@@ -228,7 +226,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-tini-aptlib,target=/var/lib/apt \
     --mount=type=cache,sharing=locked,id=moby-tini-aptcache,target=/var/cache/apt \
         apt-get update && apt-get install -y --no-install-recommends \
             cmake \
-            vim-common
+            vim-common && rm -rf /var/lib/apt/lists/*;
 RUN --mount=type=cache,target=/root/.cache/go-build \
     --mount=type=cache,target=/go/pkg/mod \
     --mount=type=bind,src=hack/dockerfile/install,target=/tmp/install \
@@ -292,7 +290,7 @@ RUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \
             vim-common \
             xfsprogs \
             xz-utils \
-            zip
+            zip && rm -rf /var/lib/apt/lists/*;
 
 
 # Switch to use iptables instead of nftables (to match the CI hosts)
@@ -301,7 +299,7 @@ RUN update-alternatives --set iptables  /usr/sbin/iptables-legacy  || true \
  && update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy || true \
  && update-alternatives --set arptables /usr/sbin/arptables-legacy || true
 
-RUN pip3 install yamllint==1.26.1
+RUN pip3 install --no-cache-dir yamllint==1.26.1
 
 # COPY --from=dockercli     /build/ /usr/local/cli
 COPY --from=frozen-images /build/ /docker-frozen-images
@@ -335,9 +333,9 @@ RUN --mount=type=cache,sharing=locked,id=moby-dev-aptlib,target=/var/lib/apt \
             dbus \
             dbus-user-session \
             systemd \
-            systemd-sysv
+            systemd-sysv && rm -rf /var/lib/apt/lists/*;
 RUN mkdir -p hack \
-  && curl -o hack/dind-systemd https://raw.githubusercontent.com/AkihiroSuda/containerized-systemd/b70bac0daeea120456764248164c21684ade7d0d/docker-entrypoint.sh \
+  && curl -f -o hack/dind-systemd https://raw.githubusercontent.com/AkihiroSuda/containerized-systemd/b70bac0daeea120456764248164c21684ade7d0d/docker-entrypoint.sh \
   && chmod +x hack/dind-systemd
 ENTRYPOINT ["hack/dind-systemd"]