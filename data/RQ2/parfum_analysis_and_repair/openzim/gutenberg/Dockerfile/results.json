{
  "startTime": 1674250529962,
  "endTime": 1674250531213,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 26,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 25,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 24,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n\n# Install necessary packages\nRUN apt-get update -y && \\\n    apt-get install -y --no-install-recommends advancecomp python3-pip python3-dev python3-setuptools libxml2-dev libxslt-dev p7zip-full python3-pillow curl zip bash sed rsync libjpeg-dev libpng-dev wget build-essential make locales && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\n# add zimwriterfs\nRUN wget -L http://download.openzim.org/release/zim-tools/zim-tools_linux-x86_64-2.1.0-1.tar.gz \\\n    && tar xf zim-tools_linux-x86_64-2.1.0-1.tar.gz \\\n    && mv zim-tools_linux-x86_64-2.1.0-1/zim* /usr/bin/ \\\n    && rmdir zim-tools_linux-x86_64-2.1.0-1 && rm zim-tools_linux-x86_64-2.1.0-1.tar.gz\nRUN zimwriterfs --version\n\n# Install jpegoptim\nRUN wget https://www.kokkonen.net/tjko/src/jpegoptim-1.4.4.tar.gz\nRUN tar xvf jpegoptim-1.4.4.tar.gz && rm jpegoptim-1.4.4.tar.gz\nRUN cd jpegoptim-1.4.4 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN cd jpegoptim-1.4.4 && make all install\n\n# Install pngquant\nRUN wget https://pngquant.org/pngquant-2.9.0-src.tar.gz\nRUN tar xvf pngquant-2.9.0-src.tar.gz && rm pngquant-2.9.0-src.tar.gz\nRUN cd pngquant-2.9.0 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN cd pngquant-2.9.0 && make all install\n\n# Install gifsicle\nRUN wget https://www.lcdf.org/gifsicle/gifsicle-1.88.tar.gz\nRUN tar xvf gifsicle-1.88.tar.gz && rm gifsicle-1.88.tar.gz\nRUN cd gifsicle-1.88 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\nRUN cd gifsicle-1.88 && make all install\n\n# Install gutenberg (from source)\nRUN locale-gen \"en_US.UTF-8\"\nCOPY requirements.pip /src/\nRUN python3 -m pip install -r /src/requirements.pip\nCOPY LICENSE /src/\nCOPY pypi-readme.rst /src/\nCOPY languages_06_2018 /src/\nCOPY MANIFEST.in /src/\nCOPY setup.py /src/\nCOPY gutenberg2zim /src/\nCOPY gutenbergtozim /src/gutenbergtozim\nWORKDIR /src/\nRUN python3 ./setup.py install\n\n# Boot commands\nWORKDIR /output\n\nENV LANG=en_US.UTF-8\nENV LANGUAGE=en_US:en\nENV LC_ALL=en_US.UTF-8\nCMD gutenberg2zim --help ; /bin/bash\n"
}