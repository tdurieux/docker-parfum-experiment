{
  "startTime": 1674252414129,
  "endTime": 1674252414676,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 40
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rgaudin/uwsgi-nginx:python3.8\nLABEL zimfarm=true\nLABEL org.opencontainers.image.source https://github.com/openzim/zimfarm\n\nRUN pip install --no-cache-dir -U pip\nRUN pip install --no-cache-dir uwsgi==2.0.18\n\nCOPY requirements.txt /app/\nRUN pip install --no-cache-dir -r /app/requirements.txt\n\nCOPY src /app/\nCOPY docs /app/docs\nWORKDIR /app/\n\nENV DOCS_DIR /app/docs\nENV MONGODB_URI mongodb://localhost\nENV SOCKET_URI tcp://localhost:5000\nENV INIT_PASSWORD admin\n\n# from uwsgi-nginx\nENV UWSGI_INI /app/uwsgi.ini\nENV UWSGI_CHEAPER 4\nENV UWSGI_CHEAPER_STEP 2\nENV UWSGI_PROCESSES 32\nENV NGINX_MAX_UPLOAD 0\nENV NGINX_WORKER_PROCESSES 1\nENV LISTEN_PORT 80\nENV NGINV_ENABLE_GZIP 1\n\n# mailgun for notifications\nENV MAILGUN_API_URL https://api.mailgun.net/v3/mg.farm.openzim.org\nENV MAILGUN_FROM Zimfarm <info@farm.openzim.org>\n# ENV MAILGUN_API_KEY -\n\n# slack for notifications\n# ENV SLACK_URL -\n# ENV SLACK_USERNAME zimfarm\n# ENV SLACK_EMOJI :ghost:\n# ENV SLACK_ICON https://farm.openzim.org/assets/apple-touch-icon.png\n\n# GLOBAL NOTIFICATIONS\n# format: list of `method,target,target` separated by comma `,`\n# multiple notification for same event separated with pipe `|`\n# ENV suffixed with event: `GLOBAL_NOTIFICATION_started` or `GLOBAL_NOTIFICATION_ended`\n# ENV GLOBAL_NOTIFICATION_ended slack,#zimfarm-events,@rgaudin|mailgun,reg@kiwix.org\n\n\n# prestart script (former entrypoint - database init)\nCOPY prestart.sh /app/prestart.sh\nRUN chmod +x /app/prestart.sh\n\n# periodic tasks as a supervisor listenner (every minute)\nCOPY supervisor-listener.py /usr/local/bin/supervisor-listener\nRUN chmod +x /usr/local/bin/supervisor-listener\nCOPY periodic.conf /etc/supervisor/conf.d/periodic.conf\n"
}