{
  "startTime": 1674253015387,
  "endTime": 1674253016303,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Base container that is used for both building and running the app\nFROM registry.fedoraproject.org/fedora-minimal:33 as base\nARG RUBY_VERSION=\"2.7\"\nARG NODEJS_VERSION=\"12\"\nENV FOREMAN_FQDN=foreman.example.com\nENV FOREMAN_DOMAIN=example.com\n\nRUN \\\n  echo -e \"[nodejs]\\nname=nodejs\\nstream=${NODEJS_VERSION}\\nprofiles=\\nstate=enabled\\n\" > /etc/dnf/modules.d/nodejs.module && \\\n  echo -e \"[ruby]\\nname=ruby\\nstream=${RUBY_VERSION}\\nprofiles=\\nstate=enabled\\n\" > /etc/dnf/modules.d/ruby.module && \\\n  microdnf install -y postgresql-libs ruby{,gems} rubygem-{rake,bundler} npm nc hostname \\\n  # needed for VNC/SPICE websockets\n  python2-numpy && \\\n  microdnf clean all\n\nARG HOME=/home/foreman\nWORKDIR $HOME\nRUN groupadd -r foreman -f -g 0 && \\\n    useradd -u 1001 -r -g foreman -d $HOME -s /sbin/nologin \\\n    -c \"Foreman Application User\" foreman && \\\n    chown -R 1001:0 $HOME && \\\n    chmod -R g=u ${HOME}\n\n# Add a script to be executed every time the container starts.\nCOPY extras/containers/entrypoint.sh /usr/bin/\nRUN chmod +x /usr/bin/entrypoint.sh\nENTRYPOINT [\"entrypoint.sh\"]\n\n# Temp container that download gems/npms and compile assets etc\nFROM base as builder\nENV RAILS_ENV=production\nENV FOREMAN_APIPIE_LANGS=en\nENV BUNDLER_SKIPPED_GROUPS=\"test development openid libvirt journald facter console\"\n\nRUN \\\n  microdnf install -y redhat-rpm-config git \\\n    gcc-c++ make bzip2 gettext tar \\\n    libxml2-devel libcurl-devel ruby-devel \\\n    postgresql-devel && \\\n  microdnf clean all\n\nENV DATABASE_URL=nulldb://nohost\n\nARG HOME=/home/foreman\nUSER 1001\nWORKDIR $HOME\nCOPY --chown=1001:0 . ${HOME}/\n# Adding missing gems, for tzdata see https://bugzilla.redhat.com/show_bug.cgi?id=1611117\nRUN echo gem '\"tzinfo-data\"' > bundler.d/container.rb\nRUN bundle install --without \"${BUNDLER_SKIPPED_GROUPS}\" \\\n    --binstubs --clean --path vendor --jobs=5 --retry=3 && \\\n  rm -rf vendor/ruby/*/cache/*.gem && \\\n  find vendor/ruby/*/gems -name \"*.c\" -delete && \\\n  find vendor/ruby/*/gems -name \"*.o\" -delete\nRUN \\\n  make -C locale all-mo && \\\n  mv -v db/schema.rb.nulldb db/schema.rb && \\\n  bundle exec rake assets:clean assets:precompile apipie:cache:index\n\nRUN npm install --no-optional && \\\n  ./node_modules/webpack/bin/webpack.js --config config/webpack.config.js && npm run analyze && \\\n# cleanups\n  rm -rf public/webpack/stats.json ./node_modules vendor/ruby/*/cache vendor/ruby/*/gems/*/node_modules bundler.d/nulldb.rb db/schema.rb && \\\n  bundle install --without \"${BUNDLER_SKIPPED_GROUPS}\" assets && npm cache clean --force;\n\nUSER 0\nRUN chgrp -R 0 ${HOME} && \\\n    chmod -R g=u ${HOME}\n\nUSER 1001\n\nFROM base\n\nARG HOME=/home/foreman\nENV RAILS_ENV=production\nENV RAILS_SERVE_STATIC_FILES=true\nENV RAILS_LOG_TO_STDOUT=true\n\nUSER 1001\nWORKDIR ${HOME}\nCOPY --chown=1001:0 . ${HOME}/\nCOPY --from=builder /usr/bin/entrypoint.sh /usr/bin/entrypoint.sh\nCOPY --from=builder --chown=1001:0 ${HOME}/.bundle/config ${HOME}/.bundle/config\nCOPY --from=builder --chown=1001:0 ${HOME}/Gemfile.lock ${HOME}/Gemfile.lock\nCOPY --from=builder --chown=1001:0 ${HOME}/vendor/ruby ${HOME}/vendor/ruby\nCOPY --from=builder --chown=1001:0 ${HOME}/public ${HOME}/public\nRUN echo gem '\"tzinfo-data\"' > bundler.d/container.rb && rm -rf bundler.d/nulldb.rb bin/spring\n\nRUN date -u > BUILD_TIME\n\n# Start the main process.\nCMD bundle exec bin/rails server\n\nEXPOSE 3000/tcp\nEXPOSE 5910-5930/tcp\n"
}