{
  "startTime": 1674248287498,
  "endTime": 1674248288336,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# SPDX-FileCopyrightText: Copyright 2021-present Open Networking Foundation.\n# SPDX-License-Identifier: Apache-2.0\nARG SCAPY_VER=2.4.5\nARG TREX_VER=3532cf99daf6dd3a1a284d0f1c388f1773eadc8a\nARG TREX_EXT_LIBS=/external_libs\nARG TREX_LIBS=/trex_python\nARG KUBECTL=v1.22.1\nARG ONOS_VER=2.5.4\nARG RANCHER_VER=2.6.5\nARG GO_VER=1.18.2\nARG TFMASK_VER=0.7.0\n\n# Install TRex deps\nFROM alpine:3.12.1 as trex-builder\nARG TREX_VER\nARG TREX_EXT_LIBS\nARG TREX_LIBS\n# Install Trex library\nENV TREX_SCRIPT_DIR=/trex-core-${TREX_VER}/scripts\nRUN wget https://github.com/stratum/trex-core/archive/${TREX_VER}.zip\nRUN unzip -qq ${TREX_VER}.zip && \\\n    mkdir -p /output/${TREX_EXT_LIBS} && \\\n    mkdir -p /output/${TREX_LIBS} && \\\n    cp -r ${TREX_SCRIPT_DIR}/automation/trex_control_plane/interactive/* /output/${TREX_LIBS} && \\\n    cp -r ${TREX_SCRIPT_DIR}/external_libs/* /output/${TREX_EXT_LIBS} && \\\n    cp -r ${TREX_SCRIPT_DIR}/automation/trex_control_plane/stf/trex_stf_lib /output/${TREX_LIBS}\n\nFROM ubuntu:20.04\nARG TREX_EXT_LIBS\nARG TREX_LIBS\nARG SCAPY_VER\nARG KUBECTL\nARG JENKINS_URL\nARG JENKINS_NODE\nARG ONOS_VER\nARG RANCHER_VER\nARG GO_VER\nARG TFMASK_VER\nENV DEBIAN_FRONTEND=noninteractive\nENV PACKAGES \\\n    python \\\n    python3 \\\n    python3-pip \\\n    ssh \\\n    openssh-server \\\n    curl \\\n    supervisor \\\n    git \\\n    iproute2 \\\n    openjdk-11-jre \\\n    software-properties-common \\\n    git-crypt \\\n    gnupg-agent \\\n    sudo\nADD requirements.txt /\n\nCOPY --from=trex-builder /output /\n\nRUN apt update && \\\n    apt install --no-install-recommends -y $PACKAGES && \\\n    curl -f -L \"https://dl.k8s.io/release/$KUBECTL/bin/linux/amd64/kubectl\" -o /usr/local/bin/kubectl && \\\n    chmod 0755 /usr/local/bin/kubectl && \\\n    curl -f https://bootstrap.pypa.io/pip/2.7/get-pip.py | python && \\\n    python -m pip install setuptools && \\\n    python -m pip install -r  requirements.txt && \\\n    python3 -m pip install p4runtime-shell==0.0.2 && \\\n    cd ${TREX_EXT_LIBS}/scapy-${SCAPY_VER} && python setup.py install && \\\n    mkdir -p /var/run/sshd && \\\n    mkdir -p /var/log/supervisor && \\\n    useradd -m jenkins -G sudo && \\\n    chmod 777 /tmp && \\\n    chsh -s /bin/bash jenkins && \\\n    echo jenkins:jenkins | chpasswd && rm -rf /var/lib/apt/lists/*;\n\nARG ENV\n\nRUN if [ \"$ENV\" = \"linux\" ] ; then groupmod --gid 1001 jenkins && usermod --uid 1001 jenkins ; fi\n\nRUN curl -sS --fail \"https://repo1.maven.org/maven2/org/onosproject/onos-releases/${ONOS_VER}/onos-admin-${ONOS_VER}.tar.gz\" | tar zx && \\\n    mv onos-admin-${ONOS_VER}/* /usr/local/bin/ && \\\n    rm -r onos-admin-${ONOS_VER}\n\nRUN curl -L -sS --fail \"https://github.com/rancher/cli/releases/download/v${RANCHER_VER}/rancher-linux-amd64-v${RANCHER_VER}.tar.gz\" | tar zx && \\\n    mv rancher-v${RANCHER_VER}/rancher /usr/local/bin && \\\n    rm -r rancher-v${RANCHER_VER}\n\nRUN cd /usr/local && curl -L -sS --fail https://go.dev/dl/go${GO_VER}.linux-amd64.tar.gz | tar zx\nENV PATH=$PATH:/usr/local/go/bin\n\nRUN curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add - && \\\n    apt-add-repository \"deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main\" && \\\n    apt-get update && apt-get install -y --no-install-recommends terraform && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -Lo /usr/local/bin/tfmask https://github.com/cloudposse/tfmask/releases/download/${TFMASK_VER}/tfmask_linux_amd64 && \\\n    chmod +x /usr/local/bin/tfmask\nRUN ln -s /trex_python /home/jenkins/trex_python\nRUN echo '%jenkins ALL=(ALL:ALL) NOPASSWD:ALL' >> /etc/sudoers\n\nENV PYTHONPATH=${TREX_EXT_LIBS}:${TREX_LIBS}\n# TODO: should we parametrize those?\nENV OC1=localhost\nENV OC2=localhost\nENV OC3=localhost\nADD docker/fs /\nRUN chown -R jenkins.jenkins /home/jenkins && \\\n    python -m pip install -r /tmp/additional-py-pkgs.txt && \\\n    chmod 1777 /tmp\nENV JENKINS_URL=${JENKINS_URL}\nENV JENKINS_NODE=${JENKINS_NODE}\n\nCMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]\n\nEXPOSE 22\n"
}