{
  "startTime": 1674253572570,
  "endTime": 1674253573717,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 141
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 89
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\nMAINTAINER Charles Chan <rascov@gmail.com>\n\nENV HOME /root\n\n# Install dependencies\nWORKDIR $HOME\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get -yq --no-install-recommends install git gawk texinfo python-pip build-essential iptables automake autoconf libtool openvswitch-switch mininet \\\n    isc-dhcp-server isc-dhcp-client iputils-ping net-tools curl iproute2 ethtool && \\\n    pip install --no-cache-dir ipaddress && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Quagga\nRUN git clone --depth 1 -b onos-1.11 https://gerrit.opencord.org/quagga\nWORKDIR $HOME/quagga\nRUN ./bootstrap.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-fpm --sbindir=/usr/lib/quagga enable_user=root enable_group=root\nRUN make\nRUN make install\n\n# Clone Trellis simulation repo\nWORKDIR $HOME\nRUN git clone --depth 1 https://gerrit.onosproject.org/routing\n\n# Update dynamic linker\nRUN ldconfig\n\n# Fetch ONOS netcfg tools\nWORKDIR $HOME\nRUN curl -f -o /usr/local/bin/onos-netcfg https://raw.githubusercontent.com/opennetworkinglab/onos/onos-1.12/tools/package/runtime/bin/onos-netcfg\nRUN curl -f -o /usr/local/bin/_rest-port https://raw.githubusercontent.com/opennetworkinglab/onos/onos-1.12/tools/package/runtime/bin/_rest-port\nRUN curl -f -o /usr/local/bin/_find-node https://raw.githubusercontent.com/opennetworkinglab/onos/onos-1.12/tools/package/runtime/bin/_find-node\nRUN curl -f -o /usr/local/bin/_check-json https://raw.githubusercontent.com/opennetworkinglab/onos/onos-1.12/tools/package/runtime/bin/_check-json\nRUN chmod a+x /usr/local/bin/onos-netcfg /usr/local/bin/_rest-port /usr/local/bin/_find-node /usr/local/bin/_check-json\n\n# Copy useful Mininet utility\nCOPY m $HOME\n\n# Copy start script\nCOPY entrypoint.sh $HOME\n\n# Requirement for Mininet NAT class\nRUN touch /etc/network/interfaces\n"
}