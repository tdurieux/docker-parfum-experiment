{
  "startTime": 1674246465729,
  "endTime": 1674246466865,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Create image based on the official latest Node image from dockerhub\nFROM node:latest as builder\n\nCOPY package.json package-lock.json ./\n\n# RUN npm set progress=false && npm config set depth 0 && npm cache clean --force\n\n## Storing node modules on a separate layer will prevent unnecessary npm installs at each build\nRUN npm i && mkdir /ng-app && cp -R ./node_modules ./ng-app && npm cache clean --force;\n\n## Move to /ng-app (eq: cd /ng-app)\nWORKDIR /ng-app\n\n# Copy everything from host to /ng-app in the container\nCOPY . .\n\n## Build the angular app in production mode and store the artifacts in dist folder\nRUN npm run build:prod\n\n\n### STAGE 2: Setup ###\n\nFROM nginx\n\n## Copy our default nginx config\n#COPY nginx/default.conf /etc/nginx/conf.d/\n\n## Remove default nginx website\nRUN rm -rf /usr/share/nginx/html/*\n\n## From 'builder' stage copy over the artifacts in dist folder to default nginx public folder\nCOPY --from=builder /ng-app/dist/browser /usr/share/nginx/html\n\n#CMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}