{
  "startTime": 1674216514426,
  "endTime": 1674216516265,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 7,
        "columnEnd": 210
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 153
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 25,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 43,
        "columnStart": 25,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 6,
        "lineEnd": 19,
        "columnStart": 25,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 43,
        "columnStart": 25,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:22.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    curl \\\n    git \\\n    gnupg2 \\\n    inetutils-ping \\\n    locales \\\n    netcat \\\n    openssh-client \\\n    sudo \\\n    supervisor \\\n    tzdata \\\n    unzip \\\n    vim \\\n    zsh && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen de_CH.UTF-8 && update-locale LANG=de_CH.UTF-8 LC_ALL=de_CH.UTF-8 \\\n    && cp -f /usr/share/zoneinfo/Europe/Zurich /etc/localtime && dpkg-reconfigure --frontend noninteractive tzdata\n\nRUN echo \"deb http://ppa.launchpad.net/ondrej/php/ubuntu jammy main\" > /etc/apt/sources.list.d/ondrej-ubuntu-php.list \\\n    && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 4F4EA0AAE5267A6C\n    # keys.andreas-puls.de\n\nRUN apt-get update -y && apt-get install --no-install-recommends -y \\\n    php8.1-apcu \\\n    php8.1-ast \\\n    php8.1-cli \\\n    php8.1-curl \\\n    php8.1-dev \\\n    php8.1-fpm \\\n    php8.1-intl \\\n    php8.1-mbstring \\\n    php8.1-opcache \\\n    php8.1-pcov \\\n    php8.1-pgsql \\\n    php8.1-readline \\\n    php8.1-xdebug \\\n    php8.1-xml \\\n    php8.1-zip && rm -rf /var/lib/apt/lists/*;\n\nRUN ln -sf /usr/bin/php8.1 /etc/alternatives/php\n\nRUN phpdismod pcov && phpdismod xdebug\n\nRUN mkdir -p /tmp/blackfire \\\n    && curl -f -A \"Docker\" -L https://blackfire.io/api/v1/releases/probe/php/linux/$(if [ $(uname -m) == \"aarch64\" ]; then echo 'arm64'; else echo 'amd64'; fi)/$(php -r \"echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;\") | tar zxp -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire-*.so $(php -r \"echo ini_get ('extension_dir');\")/blackfire.so \\\n    && printf \"extension=blackfire.so\\nblackfire.agent_socket=tcp://blackfire:8707\\n\" > /etc/php/8.1/mods-available/blackfire.ini \\\n    && ln -s /etc/php/8.1/mods-available/blackfire.ini /etc/php/8.1/cli/conf.d/30-blackfire.ini \\\n    && ln -s /etc/php/8.1/mods-available/blackfire.ini /etc/php/8.1/fpm/conf.d/30-blackfire.ini \\\n    && rm -rf /tmp/blackfire \\\n    && mkdir -p /tmp/blackfire \\\n    && curl -f -A \"Docker\" -L https://blackfire.io/api/v1/releases/client/linux/$(if [ $(uname -m) == \"aarch64\" ]; then echo 'arm64'; else echo 'amd64'; fi) | tar zxp -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n    && rm -rf /tmp/blackfire\n\nCOPY docker/prod/php/files /\nCOPY docker/dev/php/files /\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer\n\nARG USER_ID\nARG GROUP_ID\n\nRUN groupmod -g ${GROUP_ID} -o www-data \\\n    && usermod -u ${USER_ID} -s /bin/bash -o www-data \\\n    && echo 'www-data ALL=(ALL) NOPASSWD: ALL' > '/etc/sudoers.d/www-data'\n\nRUN mkdir -p /var/www && chown -R www-data:www-data /var/www\n\nUSER www-data\n\nWORKDIR /var/www/html\n\nCMD [\"/usr/bin/supervisord\"]\n"
}