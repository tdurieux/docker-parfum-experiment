diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mozilla/addons-server/Dockerfile.deploy b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mozilla/addons-server/Dockerfile.deploy/repaired.Dockerfile
index 8279844..4d49b2c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mozilla/addons-server/Dockerfile.deploy
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mozilla/addons-server/Dockerfile.deploy/repaired.Dockerfile
@@ -9,9 +9,9 @@ ENV OLYMPIA_UID=9500
 RUN useradd -u ${OLYMPIA_UID} -s /sbin/nologin olympia
 
 # Add support for https apt repos and gpg signed repos
-RUN apt-get update && apt-get install -y \
-        apt-transport-https              \
-        gnupg2                           \
+RUN apt-get update && apt-get install --no-install-recommends -y \
+        apt-transport-https \
+        gnupg2 \
     && rm -rf /var/lib/apt/lists/*
 # Add keys and repos for node and mysql
 COPY docker/*.gpg.key /etc/pki/gpg/
@@ -26,7 +26,7 @@ COPY docker/*.list /etc/apt/sources.list.d/
 # Allow scripts to detect we're running in our own container and install
 # packages.
 RUN touch /addons-server-docker-container \
-    && apt-get update && apt-get -t buster install -y \
+    && apt-get update && apt-get -t buster --no-install-recommends install -y \
         # General (dev-) dependencies
         bash-completion \
         build-essential \
@@ -53,9 +53,9 @@ RUN touch /addons-server-docker-container \
         # Use pngcrush to optimize the PNGs uploaded by developers
         pngcrush \
         # Use libmaxmind for speedy geoip lookups
-        libmaxminddb0                    \
-        libmaxminddb-dev                 \
-    && apt-get -t buster-backports install -y \
+        libmaxminddb0 \
+        libmaxminddb-dev \
+    && apt-get -t buster-backports --no-install-recommends install -y \
         libgit2-dev \
     && rm -rf /var/lib/apt/lists/*
 
@@ -99,4 +99,4 @@ FXA_CONFIG = {'default': {}, 'internal': {}}\n"\
     && DJANGO_SETTINGS_MODULE='settings_local' python manage.py collectstatic --noinput \
     && npm prune --production \
     && ./scripts/generate_build.py > build.py \
-    && rm -f settings_local.py settings_local.pyc
+    && rm -f settings_local.py settings_local.pyc && npm cache clean --force;