{
  "startTime": 1674218717089,
  "endTime": 1674218718066,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Node container:\n\nFROM node:10 as npm\n\nWORKDIR /opt/npm\nCOPY package.json package-lock.json /opt/npm/\nRUN npm install && npm cache clean --force;\n\n## Python container:\n\nFROM python:3.6-slim\nLABEL maintainer=\"Jannis Leidel <jezdez@mozilla.com>\"\n\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONPATH=/app/ \\\n    DJANGO_CONFIGURATION=Dev \\\n    DEVELOPMENT=1 \\\n    PORT=8000\n\nEXPOSE $PORT\n\n# add a non-privileged user for installing and running the application\n# don't use --create-home option to prevent populating with skeleton files\nRUN mkdir /app && \\\n    chown 10001:10001 /app && \\\n    groupadd --gid 10001 app && \\\n    useradd --no-create-home --uid 10001 --gid 10001 --home-dir /app app\n\n# install a few essentials and clean apt caches afterwards\nRUN mkdir -p \\\n        /usr/share/man/man1 \\\n        /usr/share/man/man2 \\\n        /usr/share/man/man3 \\\n        /usr/share/man/man4 \\\n        /usr/share/man/man5 \\\n        /usr/share/man/man6 \\\n        /usr/share/man/man7 \\\n        /usr/share/man/man8 && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        apt-transport-https build-essential curl git gnupg libpq-dev \\\n        postgresql-client gettext sqlite3 libffi-dev \\\n        graphviz enchant && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Create static and npm roots\nRUN mkdir -p /opt/npm /opt/static && \\\n    chown -R 10001:10001 /opt\n\n# Install Python dependencies\nCOPY requirements/*.txt /tmp/requirements/\n# Switch to /tmp to install dependencies outside home dir\nWORKDIR /tmp\nRUN pip install --no-cache-dir -r requirements/all.txt\n\nUSER 10001\n\n# Copy Node dependencies from NPM container\nCOPY --from=npm /opt/npm /opt/npm\n\n# Switch back to home directory\nWORKDIR /app\n\n# Using /bin/bash as the entrypoint works around some volume mount issues on Windows\n# where volume-mounted files do not have execute bits set.\n# https://github.com/docker/compose/issues/2301#issuecomment-154450785 has additional background.\nENTRYPOINT [\"/bin/bash\", \"/app/bin/run\"]\n\nCMD [\"web-dev\"]\n"
}