{
  "startTime": 1674251578856,
  "endTime": 1674251579659,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###\n# this dockerfile produces image/container that serves customly packaged hubs and admin static files\n# the result container should serve reticulum as \"hubs_page_origin\" and \"admin_page_origin\" on (path) \"/hubs/pages\"\n###\nfrom node:16.13 as builder\nrun mkdir -p /hubs/admin/ && cd /hubs\ncopy package.json ./\ncopy package-lock.json ./\nrun npm ci\ncopy admin/package.json admin/\ncopy admin/package-lock.json admin/\nrun cd admin && npm ci && cd ..\ncopy . .\nenv BASE_ASSETS_PATH=\"{{rawhubs-base-assets-path}}\"\nrun npm run build 1> /dev/null\ncopy scripts/docker/turkey-swaps/admin-menu.js admin/src/react-components/admin-menu.js\nrun cd admin && npm run build 1> /dev/null && cp -R dist/* ../dist && cd ..\nrun mkdir -p dist/pages && mv dist/*.html dist/pages && mv dist/hub.service.js dist/pages && mv dist/schema.toml dist/pages         \nrun mkdir /hubs/rawhubs && mv dist/pages /hubs/rawhubs && mv dist/assets /hubs/rawhubs && mv dist/react-components /hubs/rawhubs/pages && mv dist/favicon.ico /hubs/rawhubs/pages\n\nfrom alpine/openssl as ssl\nrun mkdir /ssl && openssl req -x509 -newkey rsa:2048 -sha256 -days 36500 -nodes -keyout /ssl/key -out /ssl/cert -subj '/CN=hubs'\n\nfrom nginx:alpine\nrun apk add --no-cache bash\nrun mkdir /ssl && mkdir -p /www/hubs && mkdir -p /www/hubs/pages && mkdir -p /www/hubs/assets\ncopy --from=ssl /ssl /ssl\ncopy --from=builder /hubs/rawhubs/pages /www/hubs/pages\ncopy --from=builder /hubs/rawhubs/assets /www/hubs/assets\ncopy scripts/docker/nginx.config /etc/nginx/conf.d/default.conf\ncopy scripts/docker/run.sh /run.sh\nrun chmod +x /run.sh && cat /run.sh\ncmd bash /run.sh\n"
}