{
  "startTime": 1674251267348,
  "endTime": 1674251268079,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 2,
        "columnEnd": 138
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 32,
        "columnEnd": 36
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 32,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\n\nLABEL maintainer=\"mozdef@mozilla.com\"\n\nENV NODE_VERSION 8.11.4\nENV METEOR_VERSION 1.8\n\nENV MONGO_URL=mongodb://mongodb:3002/meteor\nENV ROOT_URL=http://localhost\nENV PORT=3000\n\nARG METEOR_BUILD='YES'\n\n# Ignore warnings like 'No such file or directory for /usr/share/info/*.info.gz\"\n# https://bugzilla.redhat.com/show_bug.cgi?id=516757\n\nRUN \\\n  useradd --create-home --shell /bin/bash --home-dir /opt/mozdef mozdef && \\\n  cd /opt/mozdef && \\\n  gpg=\"gpg --no-default-keyring --secret-keyring /dev/null --keyring /dev/null --no-option --keyid-format 0xlong\" && \\\n  rpmkeys --import /etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7 && \\\n  rpm -qi gpg-pubkey-f4a80eb5 | $gpg --batch | grep 0x24C6A8A7F4A80EB5 && \\\n  yum makecache fast && \\\n  yum install -y which && \\\n  curl -f --silent --location https://rpm.nodesource.com/setup_8.x | bash - && \\\n  rpmkeys --import /etc/pki/rpm-gpg/NODESOURCE-GPG-SIGNING-KEY-EL && \\\n  rpm -qi gpg-pubkey-34fa74dd | $gpg --batch | grep 0x5DDBE8D434FA74DD && \\\n  yum install -y \\\n     make \\\n     glibc-devel \\\n     gcc \\\n     gcc-c++ \\\n     libstdc++ \\\n     zlib-devel \\\n     nodejs && \\\n  yum clean all && \\\n  rm -rf /var/cache/yum && \\\n  echo \"Downloading meteor\" && \\\n  curl -f --silent --location https://static-meteor.netdna-ssl.com/packages-bootstrap/$METEOR_VERSION/meteor-bootstrap-os.linux.x86_64.tar.gz \\\n    | tar --extract --gzip --directory /opt/mozdef .meteor && \\\n  ln --symbolic /opt/mozdef/.meteor/packages/meteor-tool/*/mt-os.linux.x86_64/scripts/admin/launch-meteor /usr/bin/meteor && \\\n  install --owner mozdef --group mozdef --directory /opt/mozdef/envs /opt/mozdef/envs/mozdef\n\nCOPY --chown=mozdef:mozdef meteor /opt/mozdef/envs/mozdef/meteor\nCOPY --chown=mozdef:mozdef docker/compose/mozdef_meteor/files/settings.js /opt/mozdef/envs/mozdef/meteor/imports/settings.js\n\nUSER mozdef\n\n# build meteor runtime if asked, if set to NO, only create the dir created above to mount to do live development\nRUN \\\n  mkdir -p /opt/mozdef/envs/meteor/mozdef && \\\n  cd /opt/mozdef/envs/mozdef/meteor && \\\n  meteor npm install && \\\n  if [ \"${METEOR_BUILD}\" = \"YES\" ]; then \\\n    echo \"Starting meteor build\" && \\\n    time meteor build --server localhost:3002 --directory /opt/mozdef/envs/meteor/mozdef && \\\n    ln --symbolic /opt/mozdef/envs/meteor/mozdef/node_modules /opt/mozdef/envs/mozdef/meteor/node_modules && \\\n    cd /opt/mozdef/envs/meteor/mozdef/bundle/programs/server && \\\n    npm install ; npm cache clean --force; \\\n  fi\n\nWORKDIR /opt/mozdef/envs/meteor/mozdef\n\nEXPOSE 3000\n"
}