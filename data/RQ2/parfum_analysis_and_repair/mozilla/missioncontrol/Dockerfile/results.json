{
  "startTime": 1674220140700,
  "endTime": 1674220141592,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim\nENV PYTHONDONTWRITEBYTECODE 1\n\nEXPOSE 8000\n\nRUN useradd --uid 1000 --no-create-home --home-dir /app webdev\n\nRUN mkdir -p \\\n        /usr/share/man/man1 \\\n        /usr/share/man/man2 \\\n        /usr/share/man/man3 \\\n        /usr/share/man/man4 \\\n        /usr/share/man/man5 \\\n        /usr/share/man/man6 \\\n        /usr/share/man/man7 \\\n        /usr/share/man/man8 && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends build-essential libpq-dev \\\n      mime-support postgresql-client gettext curl netcat && \\\n      apt-get autoremove -y && \\\n      apt-get clean && \\\n      rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Using PIL or Pillow? You probably want to uncomment next line\n# RUN apt-get update && apt-get install -y --no-install-recommends libjpeg8-dev\n\nWORKDIR /app\n\n# First copy requirements so we can take advantage of docker caching.\nCOPY requirements/*.txt /app/\n\n# temporary workaround for the following error: ImportError: cannot import name 'Feature' from 'setuptools'\nRUN pip install --no-cache-dir setuptools==45\n\nRUN pip install --require-hashes --no-cache-dir -r all.txt\n\nCOPY . /app\nRUN chown webdev:webdev -R .\nUSER webdev\n\nRUN DEBUG=False SECRET_KEY=foo ALLOWED_HOSTS=localhost, PRESTO_URL=foo DATABASE_URL=sqlite:// ./manage.py collectstatic --noinput -c\n\n# Generate gzipped versions of files that would benefit from compression, that\n# WhiteNoise can then serve in preference to the originals. This is required\n# since WhiteNoise's Django storage backend only gzips assets handled by\n# collectstatic, and so does not affect files in the `dist/` directory.\nRUN python -m whitenoise.compress dist\n\n# Using /bin/bash as the entrypoint works around some volume mount issues on Windows\n# where volume-mounted files do not have execute bits set.\n# https://github.com/docker/compose/issues/2301#issuecomment-154450785 has additional background.\nENTRYPOINT [\"/bin/bash\", \"/app/bin/run\"]\n\nCMD [\"web\"]\n"
}