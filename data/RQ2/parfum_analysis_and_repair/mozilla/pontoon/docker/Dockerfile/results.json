{
  "startTime": 1674248307337,
  "endTime": 1674248308160,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 26,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-bullseye AS server\n\nARG USER_ID=1000\nARG GROUP_ID=1000\n\nENV DEBIAN_FRONTEND=noninteractive\nENV HGPYTHON3=1\n\n# Python environment variables\nENV PYTHONUNBUFFERED 1\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONPATH /app\n\n# Install required software.\nRUN apt-get update \\\n    # Enable downloading packages over https \\\n    && apt-get install --no-install-recommends -y apt-transport-https \\\n    # Get source for node.js\n    && curl -fsSL https://deb.nodesource.com/setup_16.x | bash - \\\n    # Install software\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        libmemcached-dev \\\n        nodejs \\\n        postgresql-client \\\n        postgresql-server-dev-13 \\\n    # Clean up what can be cleaned up.\n    && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /app\n\n# Install Pontoon Python requirements\nCOPY requirements/* /app/requirements/\nRUN pip install --no-cache-dir -U 'pip>=8' && \\\n    pip install --no-cache-dir --require-hashes -r requirements/default.txt -r requirements/dev.txt -r requirements/test.txt -r requirements/lint.txt\n\n# Create the app user\nRUN groupadd -r --gid=${GROUP_ID} pontoon && useradd --uid=${USER_ID} --no-log-init -r -m -g pontoon pontoon\nRUN chown -R pontoon:pontoon /app\nUSER pontoon\n\n# Install the server's Node.js requirements\nENV YUGLIFY_BINARY /app/node_modules/.bin/yuglify\nENV TERSER_BINARY /app/node_modules/.bin/terser\nCOPY pontoon/package.json .\nRUN npm install && npm cache clean --force;\n\nCOPY ./docker/config/server.env .env\nCOPY --chown=pontoon:pontoon . /app/\n\nRUN python manage.py collectstatic\n\nCMD [\"/app/docker/server_run.sh\"]\n"
}