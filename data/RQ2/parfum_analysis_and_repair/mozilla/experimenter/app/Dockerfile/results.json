{
  "startTime": 1674249481315,
  "endTime": 1674249482166,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 90
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 99,
        "lineEnd": 99,
        "columnStart": 4,
        "columnEnd": 90
      }
    }
  ],
  "repairedDockerfile": "FROM alpine:3.12.0 as file-loader\n\n# To preserve layer caching across machines which may have different local file properties\n# such as permissions, timestamps, etc, all files are copied into a container and their\n# permissions and timestamps are reset to consistent values\n# Credit: https://gist.github.com/kekru/8ac61cd87536a4355220b56ae2f4b0a9\nCOPY . /app/\nRUN chmod -R 555 /app \\\n    && chown -R root:root /app \\\n    && find /app -exec touch -a -m -t 201512180130.09 {} \\;\n\n\n# Dev image\nFROM python:3.9 AS dev\n\nWORKDIR /app\n\n\n# Disable python pyc files\nENV PYTHONDONTWRITEBYTECODE 1\n\n\n# Scripts for waiting for the db and setting up kinto\nCOPY --from=file-loader /app/bin/ /app/bin/\nRUN chmod +x /app/bin/wait-for-it.sh\n\n\n# Install nvm with node and npm\nENV NODE_VERSION=14.17.1\nRUN curl -f -o- https://raw.githubusercontent.com/creationix/nvm/v0.35.3/install.sh | bash\nENV NVM_DIR=/root/.nvm\nRUN . \"$NVM_DIR/nvm.sh\" && nvm install ${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm use v${NODE_VERSION}\nRUN . \"$NVM_DIR/nvm.sh\" && nvm alias default v${NODE_VERSION}\nENV PATH=\"/root/.nvm/versions/node/v${NODE_VERSION}/bin/:${PATH}\"\n\n\n# System  packages\nRUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -\nRUN echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list\nRUN apt-get update\nRUN apt-get --no-install-recommends install -y apt-utils ca-certificates postgresql-client yarn parallel && rm -rf /var/lib/apt/lists/*;\n\n\n# Python packages\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python\nENV PATH \"/root/.poetry/bin:${PATH}\"\nRUN poetry config virtualenvs.create false\nCOPY --from=file-loader /app/pyproject.toml /app/pyproject.toml\nCOPY --from=file-loader /app/poetry.lock /app/poetry.lock\nRUN poetry install\n\n# If any package is installed, that is incompatible by version, this command\n# will exit non-zero and print what is usually just a warning in `poetry install`\nRUN poetry check\n\n\n# Node packages\nCOPY --from=file-loader /app/package.json /app/package.json\nCOPY --from=file-loader /app/yarn.lock /app/yarn.lock\nCOPY --from=file-loader /app/experimenter/legacy/legacy-ui/core/package.json /app/experimenter/legacy/legacy-ui/core/package.json\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY --from=file-loader /app/experimenter/nimbus-ui/package.json /app/experimenter/nimbus-ui/package.json\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\n\nFROM dev AS test\n\n# Copy source\nCOPY --from=file-loader /app/ /app/\n\n\n# Build image\nFROM dev AS ui\n\n\n# Build assets\nCOPY --from=file-loader /app/experimenter/legacy/legacy-ui/ /app/experimenter/legacy/legacy-ui/\nRUN yarn workspace @experimenter/core build && yarn cache clean;\nCOPY --from=file-loader /app/experimenter/nimbus-ui/ /app/experimenter/nimbus-ui/\nRUN yarn workspace @experimenter/nimbus-ui build && yarn cache clean;\n\n# Deploy image\nFROM python:3.9-slim AS deploy\n\nWORKDIR /app\nEXPOSE 7001\n\n# Disable python pyc files\nENV PYTHONDONTWRITEBYTECODE 1\n\n\n# Add poetry to path\nENV PATH \"/root/.poetry/bin:${PATH}\"\n\n\n# System packages\nRUN apt-get update\nRUN apt-get --no-install-recommends install -y apt-utils ca-certificates postgresql-client && rm -rf /var/lib/apt/lists/*;\n\n\n# Copy source from previously built containers\nCOPY --from=dev /usr/local/bin/ /usr/local/bin/\nCOPY --from=dev /usr/local/lib/python3.9/site-packages/ /usr/local/lib/python3.9/site-packages/\nCOPY --from=dev /app/bin/ /app/bin/\nCOPY --from=file-loader /app/manage.py /app/manage.py\nCOPY --from=file-loader /app/experimenter/ /app/experimenter/\nCOPY --from=ui /app/experimenter/legacy/legacy-ui/assets/ /app/experimenter/legacy/legacy-ui/assets/\nCOPY --from=ui /app/experimenter/nimbus-ui/build/ /app/experimenter/nimbus-ui/build/\n"
}