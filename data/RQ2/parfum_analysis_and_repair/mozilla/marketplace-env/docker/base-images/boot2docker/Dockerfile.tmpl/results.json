{
  "startTime": 1674216563683,
  "endTime": 1674216564849,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 27,
        "columnEnd": 69
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 31,
        "columnEnd": 75
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 57
      }
    }
  ],
  "repairedDockerfile": "# using VirtualBox version $VBOX_VERSION\n\nFROM boot2docker/boot2docker\nRUN apt-get install -y --no-install-recommends p7zip-full && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /vboxguest && \\\n    cd /vboxguest && \\\n    curl -f -L -o vboxguest.iso https://download.virtualbox.org/virtualbox/$VBOX_VERSION/VBoxGuestAdditions_$VBOX_VERSION.iso && \\\n    7z x vboxguest.iso -ir'!VBoxLinuxAdditions.run' && \\\n    sh VBoxLinuxAdditions.run --noexec --target . && \\\n    mkdir x86 && cd x86 && tar xvjf ../VBoxGuestAdditions-x86.tar.bz2 && cd .. && \\\n    mkdir amd64 && cd amd64 && tar xvjf ../VBoxGuestAdditions-amd64.tar.bz2 && cd .. && \\\n    cd amd64/src/vboxguest-$VBOX_VERSION && KERN_DIR=/linux-kernel/ make && cd ../../.. && \\\n    cp amd64/src/vboxguest-$VBOX_VERSION/*.ko $ROOTFS/lib/modules/$KERNEL_VERSION-tinycore64 && \\\n    mkdir -p $ROOTFS/sbin && cp x86/lib/VBoxGuestAdditions/mount.vboxsf $ROOTFS/sbin/ && rm ../VBoxGuestAdditions-x86.tar.bz2\n\nRUN echo \"\" >> $ROOTFS/etc/motd; \\\n    echo \"  boot2docker with VirtualBox guest additions version $VBOX_VERSION\" >> $ROOTFS/etc/motd; \\\n    echo \"\" >> $ROOTFS/etc/motd\n\n# make mount permanent @todo it works, but its ugly. where should this go?\n# RUN echo '#!/bin/sh' >> $ROOTFS/etc/rc.d/vbox-guest-additions-permanent-mount; \\\n#    echo 'sudo modprobe vboxsf && sudo mkdir /Users && sudo mount -t vboxsf home /Users' >> $ROOTFS/etc/rc.d/vbox-guest-additions-permanent-mount\n# RUN chmod +x $ROOTFS/etc/rc.d/vbox-guest-additions-permanent-mount\n# RUN echo '/etc/rc.d/vbox-guest-additions-permanent-mount' >> $ROOTFS/opt/bootsync.sh\n\nRUN depmod -a -b $ROOTFS $KERNEL_VERSION-tinycore64\nRUN /make_iso.sh\nCMD [\"cat\", \"boot2docker.iso\"]\n\n"
}