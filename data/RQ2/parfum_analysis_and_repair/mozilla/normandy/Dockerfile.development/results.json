{
  "startTime": 1674250346777,
  "endTime": 1674250347565,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 101
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9-slim@sha256:56d9bdc243bc53d4bb055305b58cc0be15b05cc09dcda9b9d5e224233889b61b\nWORKDIR /app\n\nRUN apt-get update && \\\n    apt-get upgrade -y && \\\n    apt-get install -y --no-install-recommends \\\n    gcc libpq-dev curl apt-transport-https libffi-dev openssh-client gnupg python-dev libgmp3-dev git && rm -rf /var/lib/apt/lists/*;\n\n# Install node from NodeSource\nRUN curl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add - && \\\n    echo 'deb https://deb.nodesource.com/node_8.x jessie main' > /etc/apt/sources.list.d/nodesource.list && \\\n    echo 'deb-src https://deb.nodesource.com/node_8.x jessie main' >> /etc/apt/sources.list.d/nodesource.list && \\\n    apt-get update && apt-get install --no-install-recommends -y nodejs && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    echo 'deb https://dl.yarnpkg.com/debian/ stable main' > /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update && apt-get install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;\n\n# Install Poetry\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python\nENV PATH \"/root/.poetry/bin:${PATH}\"\n\n# Make and activate a Python virtualenv\nRUN python -m venv /opt/venv\nENV PATH \"/opt/venv/bin:${PATH}\"\nENV VIRTUAL_ENV=\"/opt/venv\"\n\n# Install dependencies\nCOPY ./package.json /app/package.json\nCOPY ./yarn.lock /app/yarn.lock\nRUN yarn install --frozen-lockfile && yarn cache clean;\nCOPY ./pyproject.toml /app/pyproject.toml\nCOPY ./poetry.lock /app/poetry.lock\nRUN poetry install --no-root --extras docs\n\nCOPY . /app\n\nRUN DJANGO_CONFIGURATION=Build python ./manage.py collectstatic --no-input && \\\n    mkdir -p media\n\nENV DJANGO_SETTINGS_MODULE=normandy.settings \\\n    DJANGO_CONFIGURATION=Development \\\n    PORT=8000 \\\n    CMD_PREFIX=\"\" \\\n    NEW_RELIC_CONFIG_FILE=newrelic.ini\nEXPOSE $PORT\n\nCMD $CMD_PREFIX gunicorn \\\n    --log-file - \\\n    --worker-class ${GUNICORN_WORKER_CLASS:-sync} \\\n    --max-requests ${GUNICORN_MAX_REQUESTS:-0} \\\n    normandy.wsgi:application\n"
}