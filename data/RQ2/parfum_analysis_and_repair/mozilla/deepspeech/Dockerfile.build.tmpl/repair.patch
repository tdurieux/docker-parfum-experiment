diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mozilla/deepspeech/Dockerfile.build.tmpl b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mozilla/deepspeech/Dockerfile.build.tmpl/repaired.Dockerfile
index 73638db..14ff680 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mozilla/deepspeech/Dockerfile.build.tmpl
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mozilla/deepspeech/Dockerfile.build.tmpl/repaired.Dockerfile
@@ -1,6 +1,6 @@
 # Please refer to the USING documentation, "Dockerfile for building from source"
 
-# Need devel version cause we need /usr/include/cudnn.h 
+# Need devel version cause we need /usr/include/cudnn.h
 FROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04
 
 ENV DEEPSPEECH_REPO=#DEEPSPEECH_REPO# \
@@ -43,7 +43,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
     update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1 && \
     update-alternatives --install /usr/bin/python python /usr/bin/python3 1; \
     # Install Bazel \
-    curl -LO "https://github.com/bazelbuild/bazel/releases/download/3.1.0/bazel_3.1.0-linux-x86_64.deb" && dpkg -i bazel_*.deb; \
+    curl -f -LO "https://github.com/bazelbuild/bazel/releases/download/3.1.0/bazel_3.1.0-linux-x86_64.deb" && dpkg -i bazel_*.deb; \
     # Try and free some space \
     rm -rf /var/lib/apt/lists/* bazel_*.deb
 
@@ -124,7 +124,7 @@ RUN git clone --recursive $DEEPSPEECH_REPO DeepSpeech && \
 # passing LD_LIBRARY_PATH is required cause Bazel doesn't pickup it from environment
 
 # Build DeepSpeech
-RUN cd /DeepSpeech/tensorflow && ./configure && bazel build \
+RUN cd /DeepSpeech/tensorflow && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && bazel build \
 	--workspace_status_command="bash native_client/bazel_workspace_status_cmd.sh" \
 	--config=monolithic \
 	--config=cuda \
@@ -148,9 +148,9 @@ RUN cd /DeepSpeech/tensorflow && ./configure && bazel build \
 
 RUN cd /DeepSpeech/native_client && make NUM_PROCESSES=$(nproc) deepspeech ; \
     cd /DeepSpeech/native_client/python && make NUM_PROCESSES=$(nproc) bindings; \
-    pip3 install --upgrade dist/*.whl; \
+    pip3 install --no-cache-dir --upgrade dist/*.whl; \
     cd /DeepSpeech/native_client/ctcdecode && make NUM_PROCESSES=$(nproc) bindings; \
-    pip3 install --upgrade dist/*.whl
+    pip3 install --no-cache-dir --upgrade dist/*.whl
 
 # << END Build and bind