diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mozilla/deepspeech/Dockerfile.train.tmpl b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mozilla/deepspeech/Dockerfile.train.tmpl/repaired.Dockerfile
index c73dcaf..d60461f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mozilla/deepspeech/Dockerfile.train.tmpl
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mozilla/deepspeech/Dockerfile.train.tmpl/repaired.Dockerfile
@@ -35,17 +35,17 @@ RUN git clone $DEEPSPEECH_REPO DeepSpeech && \
 
 # Build CTC decoder first, to avoid clashes on incompatible versions upgrades
 RUN cd /DeepSpeech/native_client/ctcdecode && make NUM_PROCESSES=$(nproc) bindings && \
-    pip3 install --upgrade dist/*.whl
+    pip3 install --no-cache-dir --upgrade dist/*.whl
 
 # Prepare deps
-RUN cd /DeepSpeech && pip3 install --upgrade pip==20.2.2 wheel==0.34.2 setuptools==49.6.0 && \
+RUN cd /DeepSpeech && pip3 install --no-cache-dir --upgrade pip==20.2.2 wheel==0.34.2 setuptools==49.6.0 && \
     # Install DeepSpeech \
     #  - No need for the decoder since we did it earlier \
     #  - There is already correct TensorFlow GPU installed on the base image, \
     #    we don't want to break that \
-    DS_NODECODER=y DS_NOTENSORFLOW=y pip3 install --upgrade -e . && \
+    DS_NODECODER=y DS_NOTENSORFLOW=y pip3 --no-cache-dir install --upgrade -e . && \
     # Tool to convert output graph for inference \
-    curl -vsSL https://github.com/mozilla/DeepSpeech/releases/download/v0.9.3/linux.amd64.convert_graphdef_memmapped_format.xz | xz -d > convert_graphdef_memmapped_format && \
+    curl -f -vsSL https://github.com/mozilla/DeepSpeech/releases/download/v0.9.3/linux.amd64.convert_graphdef_memmapped_format.xz | xz -d > convert_graphdef_memmapped_format && \
     chmod +x convert_graphdef_memmapped_format
 
 # Build KenLM to generate new scorers