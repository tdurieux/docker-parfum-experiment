{
  "startTime": 1674219542881,
  "endTime": 1674219543463,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM php:8.1.5-fpm-alpine as production\n\n# Install needed modules to run the application\nRUN apk update \\\n && apk --quiet --no-cache add \\\n    libzip-dev\n\n# Add php extension to work with zip files\nRUN docker-php-ext-install -j$(nproc) \\\n    zip\n\nRUN apk --no-cache add pcre-dev ${PHPIZE_DEPS} \\\n    && pecl install -o -f redis \\\n    && rm -rf /tmp/pear \\\n    && docker-php-ext-enable redis \\\n    && apk del pcre-dev ${PHPIZE_DEPS}\n\n# Install OPCACHE extension\nRUN docker-php-ext-install opcache\n\nWORKDIR /opt/app\n\n# Install XDEBUG extension\nRUN apk add --no-cache $PHPIZE_DEPS \\\n    && pecl install xdebug-3.1.4 \\\n    && docker-php-ext-enable xdebug\n\n\n# Install Composer\nRUN curl -f -sS https://getcomposer.org/installer | php -- --version=2.3.5 --install-dir=/usr/local/bin --filename=composer\n\n# Add prestissimo for parallel composer downloads\n#RUN composer global require \"hirak/prestissimo\"\n\n# Copy source code into container\nCOPY ./src/ .\n\n# Install production dependencies\nRUN composer install\n\nFROM production as development\n\n# Install with dev dependencies\nCMD sh -c \"composer install && docker-php-entrypoint php-fpm\"\n"
}