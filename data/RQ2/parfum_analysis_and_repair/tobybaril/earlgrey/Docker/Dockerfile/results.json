{
  "startTime": 1674251540655,
  "endTime": 1674251542236,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 11,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 38
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 168,
        "lineEnd": 168,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 7,
        "columnEnd": 71
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 134,
        "lineEnd": 142,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 8,
        "columnStart": 25,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 134,
        "lineEnd": 142,
        "columnStart": 7,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 149,
        "lineEnd": 149,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "FROM debian:9 AS builder\n\nRUN apt-get -y update && apt-get -y --no-install-recommends install \\\n    curl gcc g++ make zlib1g-dev libgomp1 \\\n    perl \\\n    python3-h5py \\\n    libfile-which-perl \\\n    libtext-soundex-perl \\\n    libjson-perl liburi-perl libwww-perl && rm -rf /var/lib/apt/lists/*;\n\nCOPY src/* /opt/src/\nWORKDIR /opt/src\n\n# Extract RMBlast\nRUN cd /opt \\\n    && mkdir rmblast \\\n    && tar --strip-components=1 -x -f src/rmblast-2.11.0+-x64-linux.tar.gz -C rmblast \\\n    && rm src/rmblast-2.11.0+-x64-linux.tar.gz\n\n# Compile HMMER\nRUN tar -x -f hmmer-3.3.2.tar.gz \\\n    && cd hmmer-3.3.2 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/hmmer && make && make install \\\n    && make clean && rm hmmer-3.3.2.tar.gz\n\n# Compile TRF\nRUN tar -x -f trf-4.09.1.tar.gz \\\n    && cd TRF-4.09.1 \\\n    && mkdir build && cd build \\\n    && ../configure && make && cp ./src/trf /opt/trf \\\n    && cd .. && rm -r build && rm trf-4.09.1.tar.gz\n\n# Compile RepeatScout\nRUN tar -x -f RepeatScout-1.0.6.tar.gz \\\n    && cd RepeatScout-1.0.6 \\\n    && sed -i 's#^INSTDIR =.*#INSTDIR = /opt/RepeatScout#' Makefile \\\n    && make && make install && rm RepeatScout-1.0.6.tar.gz\n\n# Compile and configure RECON\nRUN tar -x -f RECON-1.08.tar.gz \\\n    && mv RECON-1.08 ../RECON \\\n    && cd ../RECON \\\n    && make -C src && make -C src install \\\n    && cp 00README bin/ \\\n    && sed -i 's#^\\$path =.*#$path = \"/opt/RECON/bin\";#' scripts/recon.pl && rm RECON-1.08.tar.gz\n\n# Compile cd-hit\nRUN tar -x -f cd-hit-v4.8.1-2019-0228.tar.gz \\\n    && cd cd-hit-v4.8.1-2019-0228 \\\n    && make && mkdir /opt/cd-hit && PREFIX=/opt/cd-hit make install && rm cd-hit-v4.8.1-2019-0228.tar.gz\n\n# Compile genometools (for ltrharvest)\nRUN tar -x -f gt-1.6.0.tar.gz \\\n    && cd genometools-1.6.0 \\\n    && make -j4 cairo=no && make cairo=no prefix=/opt/genometools install \\\n    && make cleanup && rm gt-1.6.0.tar.gz\n\n# Configure LTR_retriever\nRUN cd /opt \\\n    && tar -x -f src/LTR_retriever-2.9.0.tar.gz \\\n    && mv LTR_retriever-2.9.0 LTR_retriever \\\n    && cd LTR_retriever \\\n    && sed -i \\\n        -e 's#BLAST+=#BLAST+=/opt/rmblast/bin#' \\\n        -e 's#RepeatMasker=#RepeatMasker=/opt/RepeatMasker#' \\\n        -e 's#HMMER=#HMMER=/opt/hmmer/bin#' \\\n        -e 's#CDHIT=#CDHIT=/opt/cd-hit#' \\\n        paths && rm src/LTR_retriever-2.9.0.tar.gz\n\n# Compile MAFFT\nRUN tar -x -f mafft-7.471-without-extensions-src.tgz \\\n    && cd mafft-7.471-without-extensions/core \\\n    && sed -i 's#^PREFIX =.*#PREFIX = /opt/mafft#' Makefile \\\n    && make clean && make && make install \\\n    && make clean && rm mafft-7.471-without-extensions-src.tgz\n\n# Compile NINJA\nRUN cd /opt \\\n    && mkdir NINJA \\\n    && tar --strip-components=1 -x -f src/NINJA-cluster.tar.gz -C NINJA \\\n    && cd NINJA/NINJA \\\n    && make clean && make all && rm src/NINJA-cluster.tar.gz\n\n# Move UCSC tools\nRUN mkdir /opt/ucsc_tools \\\n    && mv faToTwoBit twoBitInfo twoBitToFa  /opt/ucsc_tools \\\n    && chmod +x /opt/ucsc_tools/*\n#COPY LICENSE.ucsc /opt/ucsc_tools/LICENSE\n\n# Compile and configure coseg\nRUN cd /opt \\\n    && tar -x -f src/coseg-0.2.2.tar.gz \\\n    && cd coseg \\\n    && sed -i 's@#!.*perl@#!/usr/bin/perl@' preprocessAlignments.pl runcoseg.pl refineConsSeqs.pl \\\n    && sed -i 's#use lib \"/usr/local/RepeatMasker\";#use lib \"/opt/RepeatMasker\";#' preprocessAlignments.pl \\\n    && make && rm src/coseg-0.2.2.tar.gz\n\n# Configure RepeatMasker\nRUN cd /opt \\\n    && tar -x -f src/RepeatMasker-4.1.2-p1.tar.gz \\\n    && chmod a+w RepeatMasker/Libraries \\\n    && cd RepeatMasker/Libraries \\\n    && cp /opt/src/Dfam.h5.gz . \\\n    && gunzip -f Dfam.h5.gz \\\n    && cd /opt/RepeatMasker \\\n    && cp /opt/src/RepBaseRepeatMaskerEdition-20181026.tar.gz . \\\n    && tar -zxf RepBaseRepeatMaskerEdition-20181026.tar.gz \\\n    && cd /opt/RepeatMasker \\\n    && perl configure \\\n        -hmmer_dir=/opt/hmmer/bin \\\n        -rmblast_dir=/opt/rmblast/bin \\\n        -libdir=/opt/RepeatMasker/Libraries \\\n        -trf_prgm=/opt/trf \\\n        -default_search_engine=rmblast \\\n    && cd .. && rm src/RepeatMasker-4.1.2-p1.tar.gz\n\n# Configure RepeatModeler\nRUN cd /opt \\\n    && tar -x -f src/RepeatModeler-2.0.2a.tar.gz \\\n    && mv RepeatModeler-2.0.2a RepeatModeler \\\n    && cd RepeatModeler \\\n    && perl configure \\\n         -cdhit_dir=/opt/cd-hit -genometools_dir=/opt/genometools/bin \\\n         -ltr_retriever_dir=/opt/LTR_retriever -mafft_dir=/opt/mafft/bin \\\n         -ninja_dir=/opt/NINJA/NINJA -recon_dir=/opt/RECON/bin \\\n         -repeatmasker_dir=/opt/RepeatMasker \\\n         -rmblast_dir=/opt/rmblast/bin -rscout_dir=/opt/RepeatScout \\\n         -trf_prgm=/opt/trf \\\n         -ucsctools_dir=/opt/ucsc_tools && rm src/RepeatModeler-2.0.2a.tar.gz\n\nFROM debian:9\n\n# Install dependencies and some basic utilities\nRUN apt-get -y update \\\n    && apt-get -y --no-install-recommends install \\\n        aptitude \\\n        libgomp1 \\\n        perl \\\n        python3-h5py \\\n        libfile-which-perl \\\n        libtext-soundex-perl \\\n        libjson-perl liburi-perl libwww-perl \\\n        libdevel-size-perl \\\n    && aptitude install -y ~pstandard ~prequired \\\n        curl wget \\\n        vim nano \\\n        procps strace \\\n        libpam-systemd- && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -y --no-install-recommends install git && rm -rf /var/lib/apt/lists/*;\nRUN cd /opt/ \\\n        && curl -f https://repo.anaconda.com/archive/Anaconda3-2020.02-Linux-x86_64.sh --output anaconda.sh \\\n        && bash ./anaconda.sh -b -p /anaconda3 \\\n        && eval \"$(/anaconda3/bin/conda shell.bash  hook)\"\n\n\nENV PATH=$PATH:/opt/RepeatMasker:/opt/RepeatMasker/util:/opt/RepeatModeler:/opt/RepeatModeler/util:/opt/coseg:/opt/ucsc_tools:/opt:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/opt/cd-hit/\n\nCOPY --from=builder /opt /opt\nRUN echo \"PS1='(earlgrey \\$(pwd))\\\\\\$ '\" >> /etc/bash.bashrc\nENV LANG=C\nENV PYTHONIOENCODING=utf8\n\nRUN cd /opt/ \\\n        && git clone https://github.com/TobyBaril/EarlGrey \\\n        && cd EarlGrey \\\n        && chmod +x ./configure \\\n        && eval \"$(/anaconda3/bin/conda shell.bash  hook)\" \\\n        && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"\n\nENV PATH=$PATH:/opt/EarlGrey/\n\n#RUN echo \"#!/bin/bash\" > /work/start.sh \\\n#        && echo 'eval \"$(/anaconda3/bin/conda shell.bash  hook)\"' >> /work/start.sh \\\n#        && echo \"conda activate earlGrey\" >> /work/start.sh \\\n#        && chmod +x /work/start.sh\n"
}