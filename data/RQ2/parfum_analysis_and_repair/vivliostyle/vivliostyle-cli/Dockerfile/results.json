{
  "startTime": 1674250847092,
  "endTime": 1674250848388,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 51
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 24
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 5,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 5,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal AS base\nARG PLAYWRIGHT_VERSION\nLABEL maintainer \"spring_raining <harusamex.com@gmail.com>\"\n\n# Playwright's Dockerfile:\n# https://github.com/microsoft/playwright/blob/main/utils/docker/Dockerfile.focal\n# How to reduce size of Docker image for Playwright:\n# https://github.com/microsoft/playwright/issues/10168\nARG DEBIAN_FRONTEND=noninteractive\nARG TZ=Asia/Tokyo\nENV PLAYWRIGHT_BROWSERS_PATH=/ms-playwright\nRUN set -x \\\n  && apt-get update \\\n  && apt-get install --no-install-recommends -y curl wget \\\n  && curl -f -sL https://deb.nodesource.com/setup_16.x | bash - \\\n  && apt-get install --no-install-recommends -y nodejs \\\n  && apt-get install -y --no-install-recommends git openssh-client \\\n  && npm install -g yarn \\\n  && mkdir /ms-playwright \\\n  && npx playwright@${PLAYWRIGHT_VERSION} install --with-deps chromium \\\n  && chmod -R 777 /ms-playwright \\\n  # remove poor quality fonts\n  && apt-get purge -y ttf-unifont fonts-ipafont-gothic fonts-wqy-zenhei \\\n  # install Microsoft TrueType core fonts\n  && echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections \\\n  && apt-get install -y --no-install-recommends ttf-mscorefonts-installer \\\n  # install all Noto fonts\n  && apt-get install --no-install-recommends -y fonts-noto \\\n  # font aliases for Noto CJK fonts\n  && echo '<?xml version=\"1.0\"?>\\\n<!DOCTYPE fontconfig SYSTEM \"fonts.dtd\">\\\n<fontconfig>\\\n  <alias><family>Source Han Serif</family><prefer><family>Noto Serif CJK JP</family></prefer></alias>\\\n  <alias><family>Hiragino Mincho ProN</family><prefer><family>Noto Serif CJK JP</family></prefer></alias>\\\n  <alias><family>Hiragino Mincho Pro</family><prefer><family>Noto Serif CJK JP</family></prefer></alias>\\\n  <alias><family>YuMincho</family><prefer><family>Noto Serif CJK JP</family></prefer></alias>\\\n  <alias><family>Yu Mincho</family><prefer><family>Noto Serif CJK JP</family></prefer></alias>\\\n  <alias><family>MS Mincho</family><prefer><family>Noto Serif CJK JP</family></prefer></alias>\\\n  <alias><family>MS PMincho</family><prefer><family>Noto Serif CJK JP</family></prefer></alias>\\\n  <alias><family>Source Han Sans</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n  <alias><family>Hiragino Sans</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n  <alias><family>Hiragino Kaku Gothic ProN</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n  <alias><family>Hiragino Kaku Gothic Pro</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n  <alias><family>YuGothic</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n  <alias><family>Yu Gothic</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n  <alias><family>Meiryo</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n  <alias><family>MS Gothic</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n  <alias><family>MS PGothic</family><prefer><family>Noto Sans CJK JP</family></prefer></alias>\\\n</fontconfig>' > /etc/fonts/local.conf \\\n  && apt-get install -y --no-install-recommends \\\n    # dependencies for press-ready\n    ghostscript poppler-utils \\\n  # clean cache\n  && rm -rf \\\n    /var/lib/apt/lists/* \\\n    `npm config get cache`/_npx && npm cache clean --force;\nWORKDIR /opt/vivliostyle-cli\n\n# Build stage\nFROM base AS builder\nCOPY package.json yarn.lock /opt/vivliostyle-cli/\nRUN yarn install --frozen-lockfile && yarn cache clean;\nCOPY . /opt/vivliostyle-cli\nRUN yarn build\n\n# Runtime stage\nFROM base AS runtime\nARG VS_CLI_VERSION\nRUN test $VS_CLI_VERSION\nCOPY . /opt/vivliostyle-cli\nRUN yarn install --frozen-lockfile --production \\\n  && echo $VS_CLI_VERSION > .vs-cli-version \\\n  && yarn link \\\n  && ln -s /opt/vivliostyle-cli/node_modules/.bin/press-ready /usr/local/bin/press-ready \\\n  && ln -s /opt/vivliostyle-cli/node_modules/.bin/vfm /usr/local/bin/vfm && yarn cache clean;\nCOPY --from=builder /opt/vivliostyle-cli/dist/ /opt/vivliostyle-cli/dist/\n\nWORKDIR /data\nENTRYPOINT [ \"vivliostyle\" ]\n"
}