{
  "startTime": 1674255849505,
  "endTime": 1674255850921,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 7,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 52
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 167
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 7,
        "columnEnd": 221
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 7,
        "columnEnd": 73
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 126,
        "lineEnd": 126,
        "columnStart": 7,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 7,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 140,
        "lineEnd": 141,
        "columnStart": 7,
        "columnEnd": 88
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 0,
        "lineEnd": 0,
        "columnStart": 4,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.5-stretch AS base\n\nEXPOSE 8069 8072\n\nARG GEOIP_UPDATER_VERSION=4.1.5\nARG MQT=https://github.com/OCA/maintainer-quality-tools.git\nARG WKHTMLTOPDF_VERSION=0.12.5\nARG WKHTMLTOPDF_CHECKSUM='1140b0ab02aa6e17346af2f14ed0de807376de475ba90e1db3975f112fbd20bb'\nENV DB_FILTER=.* \\\n    DEPTH_DEFAULT=1 \\\n    DEPTH_MERGE=100 \\\n    EMAIL=https://hub.docker.com/r/tecnativa/odoo \\\n    GEOIP_ACCOUNT_ID=\"\" \\\n    GEOIP_LICENSE_KEY=\"\" \\\n    GIT_AUTHOR_NAME=docker-odoo \\\n    INITIAL_LANG=\"\" \\\n    LC_ALL=C.UTF-8 \\\n    LIST_DB=false \\\n    NODE_PATH=/usr/local/lib/node_modules:/usr/lib/node_modules \\\n    OPENERP_SERVER=/opt/odoo/auto/odoo.conf \\\n    PATH=\"/home/odoo/.local/bin:$PATH\" \\\n    PIP_NO_CACHE_DIR=0 \\\n    PTVSD_ARGS=\"--host 0.0.0.0 --port 6899 --wait --multiprocess\" \\\n    PTVSD_ENABLE=0 \\\n    DEBUGPY_ARGS=\"--listen 0.0.0.0:6899 --wait-for-client\" \\\n    DEBUGPY_ENABLE=0 \\\n    PUDB_RDB_HOST=0.0.0.0 \\\n    PUDB_RDB_PORT=6899 \\\n    PYTHONOPTIMIZE=\"\" \\\n    UNACCENT=true \\\n    WAIT_DB=true \\\n    WDB_NO_BROWSER_AUTO_OPEN=True \\\n    WDB_SOCKET_SERVER=wdb \\\n    WDB_WEB_PORT=1984 \\\n    WDB_WEB_SERVER=localhost\n\n# Other requirements and recommendations to run Odoo\n# See https://github.com/$ODOO_SOURCE/blob/$ODOO_VERSION/debian/control\nRUN apt-get -qq update \\\n    && apt-get -yqq upgrade \\\n    && apt-get install -yqq --no-install-recommends \\\n        chromium \\\n        fonts-liberation2 \\\n        gettext \\\n        gnupg2 \\\n        locales-all \\\n        ruby-compass \\\n        nano \\\n        ruby \\\n        telnet \\\n        vim \\\n        zlibc \\\n    && echo 'deb http://apt.postgresql.org/pub/repos/apt/ stretch-pgdg main' >> /etc/apt/sources.list.d/postgresql.list \\\n    && curl -f -SL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \\\n    && curl -f https://bootstrap.pypa.io/pip/3.5/get-pip.py | python3 /dev/stdin \\\n    && curl -f -sL https://deb.nodesource.com/setup_6.x | bash - \\\n    && apt-get update \\\n    && apt-get install -yqq --no-install-recommends nodejs \\\n    && curl -f -SLo wkhtmltox.deb https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/${WKHTMLTOPDF_VERSION}/wkhtmltox_${WKHTMLTOPDF_VERSION}-1.stretch_amd64.deb \\\n    && echo \"${WKHTMLTOPDF_CHECKSUM}  wkhtmltox.deb\" | sha256sum -c - \\\n    && apt-get install -yqq --no-install-recommends ./wkhtmltox.deb \\\n    && rm wkhtmltox.deb \\\n    && wkhtmltopdf --version \\\n    && curl -f --silent -L --output geoipupdate_${GEOIP_UPDATER_VERSION}_linux_amd64.deb https://github.com/maxmind/geoipupdate/releases/download/v${GEOIP_UPDATER_VERSION}/geoipupdate_${GEOIP_UPDATER_VERSION}_linux_amd64.deb \\\n    && dpkg -i geoipupdate_${GEOIP_UPDATER_VERSION}_linux_amd64.deb \\\n    && rm geoipupdate_${GEOIP_UPDATER_VERSION}_linux_amd64.deb \\\n    && rm -Rf /var/lib/apt/lists/* /tmp/*\n\n# Special case to get latest Less and PhantomJS\nRUN ln -s /usr/bin/nodejs /usr/local/bin/node \\\n    && npm install -g less@2 less-plugin-clean-css@1 phantomjs-prebuilt@2 \\\n    && rm -Rf ~/.npm /tmp/* && npm cache clean --force;\n\n# Special case to get bootstrap-sass, required by Odoo for Sass assets\nRUN gem install --no-rdoc --no-ri --no-update-sources autoprefixer-rails --version '<9.8.6' \\\n    && gem install --no-rdoc --no-ri --no-update-sources bootstrap-sass --version '<3.4' \\\n    && rm -Rf ~/.gem /var/lib/gems/*/cache/\n\n# Other facilities\nWORKDIR /opt/odoo\nRUN pip install --no-cache-dir \\\n        astor \\\n        # Install fix from https://github.com/acsone/click-odoo-contrib/pull/93\n        git+https://github.com/Tecnativa/click-odoo-contrib.git@fix-active-modules-hashing \\\n        git-aggregator \\\n        \"pg_activity<2.0.0\" \\\n        plumbum \\\n        ptvsd \\\n        debugpy \\\n        pydevd-odoo \\\n        pudb \\\n        watchdog \\\n        wdb \\\n        geoip2 \\\n        inotify \\\n    && sync\nCOPY bin-deprecated/* bin/* /usr/local/bin/\nCOPY lib/doodbalib /usr/local/lib/python3.5/site-packages/doodbalib\nRUN ln -s /usr/local/lib/python3.5/site-packages/doodbalib \\\n    /usr/local/lib/python3.5/site-packages/odoobaselib\nCOPY build.d common/build.d\nCOPY conf.d common/conf.d\nCOPY entrypoint.d common/entrypoint.d\nRUN mkdir -p auto/addons auto/geoip custom/src/private \\\n    && ln /usr/local/bin/direxec common/entrypoint \\\n    && ln /usr/local/bin/direxec common/build \\\n    && chmod -R a+rx common/entrypoint* common/build* /usr/local/bin \\\n    && chmod -R a+rX /usr/local/lib/python3.5/site-packages/doodbalib \\\n    && cp -a /etc/GeoIP.conf /etc/GeoIP.conf.orig \\\n    && mv /etc/GeoIP.conf /opt/odoo/auto/geoip/GeoIP.conf \\\n    && ln -s /opt/odoo/auto/geoip/GeoIP.conf /etc/GeoIP.conf \\\n    && sed -i 's/.*DatabaseDirectory .*$/DatabaseDirectory \\/opt\\/odoo\\/auto\\/geoip\\//g' /opt/odoo/auto/geoip/GeoIP.conf \\\n    && sync\n\n# Doodba-QA dependencies in a separate virtualenv\nCOPY qa /qa\nRUN python -m venv --system-site-packages /qa/venv \\\n    && . /qa/venv/bin/activate \\\n    # HACK: Upgrade pip: higher version needed to install pyproject.toml based packages \\\n    && pip install --no-cache-dir -U pip \\\n    && pip install --no-cache-dir \\\n        click \\\n        coverage \\\n        flake8 \\\n        git+https://github.com/OCA/pylint-odoo.git@refs/pull/329/head \\\n        six \\\n    && npm install --loglevel error --prefix /qa 'eslint@<6' \\\n    && deactivate \\\n    && mkdir -p /qa/artifacts \\\n    && git clone --depth 1 $MQT /qa/mqt && npm cache clean --force;\n\n# Execute installation script by Odoo version\n# This is at the end to benefit from cache at build time\n# https://docs.docker.com/engine/reference/builder/#/impact-on-build-caching\nARG ODOO_SOURCE=OCA/OCB\nARG ODOO_VERSION=11.0\nENV ODOO_VERSION=\"$ODOO_VERSION\"\nRUN debs=\"libldap2-dev libsasl2-dev\" \\\n    && apt-get update \\\n    && apt-get install -yqq --no-install-recommends $debs \\\n    && pip install --no-cache-dir \\\n        -r https://raw.githubusercontent.com/$ODOO_SOURCE/$ODOO_VERSION/requirements.txt \\\n    && (python3 -m compileall -q /usr/local/lib/python3.5/ || true) \\\n    && apt-get purge -yqq $debs \\\n    && rm -Rf /var/lib/apt/lists/* /tmp/*\n\n# Metadata\nARG VCS_REF\nARG BUILD_DATE\nARG VERSION\nLABEL org.label-schema.schema-version=\"$VERSION\" \\\n      org.label-schema.vendor=Tecnativa \\\n      org.label-schema.license=Apache-2.0 \\\n      org.label-schema.build-date=\"$BUILD_DATE\" \\\n      org.label-schema.vcs-ref=\"$VCS_REF\" \\\n      org.label-schema.vcs-url=\"https://github.com/Tecnativa/doodba\"\n\n# Onbuild version, with all the magic\nFROM base AS onbuild\n\n# Enable setting custom uids for odoo user during build of scaffolds\nONBUILD ARG UID=1000\nONBUILD ARG GID=1000\n\n# Enable Odoo user and filestore\nONBUILD RUN groupadd -g $GID odoo -o \\\n    && useradd -l -md /home/odoo -s /bin/false -u $UID -g $GID odoo \\\n    && mkdir -p /var/lib/odoo \\\n    && chown -R odoo:odoo /var/lib/odoo /qa/artifacts \\\n    && chmod a=rwX /qa/artifacts \\\n    && sync\n\n# Subimage triggers\nONBUILD ENTRYPOINT [\"/opt/odoo/common/entrypoint\"]\nONBUILD CMD [\"/usr/local/bin/odoo\"]\nONBUILD ARG AGGREGATE=true\nONBUILD ARG DEFAULT_REPO_PATTERN=\"https://github.com/OCA/{}.git\"\nONBUILD ARG DEFAULT_REPO_PATTERN_ODOO=\"https://github.com/OCA/OCB.git\"\nONBUILD ARG DEPTH_DEFAULT=1\nONBUILD ARG DEPTH_MERGE=100\nONBUILD ARG CLEAN=true\nONBUILD ARG COMPILE=true\nONBUILD ARG FONT_MONO=\"Liberation Mono\"\nONBUILD ARG FONT_SANS=\"Liberation Sans\"\nONBUILD ARG FONT_SERIF=\"Liberation Serif\"\nONBUILD ARG PIP_INSTALL_ODOO=true\nONBUILD ARG ADMIN_PASSWORD=admin\nONBUILD ARG SMTP_SERVER=smtp\nONBUILD ARG SMTP_PORT=25\nONBUILD ARG SMTP_USER=false\nONBUILD ARG SMTP_PASSWORD=false\nONBUILD ARG SMTP_SSL=false\nONBUILD ARG EMAIL_FROM=\"\"\nONBUILD ARG PROXY_MODE=false\nONBUILD ARG WITHOUT_DEMO=all\nONBUILD ARG PGUSER=odoo\nONBUILD ARG PGPASSWORD=odoopassword\nONBUILD ARG PGHOST=db\nONBUILD ARG PGPORT=5432\nONBUILD ARG PGDATABASE=prod\n# Config variables\nONBUILD ENV ADMIN_PASSWORD=\"$ADMIN_PASSWORD\" \\\n            DEFAULT_REPO_PATTERN=\"$DEFAULT_REPO_PATTERN\" \\\n            DEFAULT_REPO_PATTERN_ODOO=\"$DEFAULT_REPO_PATTERN_ODOO\" \\\n            UNACCENT=\"$UNACCENT\" \\\n            PGUSER=\"$PGUSER\" \\\n            PGPASSWORD=\"$PGPASSWORD\" \\\n            PGHOST=\"$PGHOST\" \\\n            PGPORT=$PGPORT \\\n            PGDATABASE=\"$PGDATABASE\" \\\n            PROXY_MODE=\"$PROXY_MODE\" \\\n            SMTP_SERVER=\"$SMTP_SERVER\" \\\n            SMTP_PORT=$SMTP_PORT \\\n            SMTP_USER=\"$SMTP_USER\" \\\n            SMTP_PASSWORD=\"$SMTP_PASSWORD\" \\\n            SMTP_SSL=\"$SMTP_SSL\" \\\n            EMAIL_FROM=\"$EMAIL_FROM\" \\\n            WITHOUT_DEMO=\"$WITHOUT_DEMO\"\nONBUILD ARG LOCAL_CUSTOM_DIR=./custom\nONBUILD COPY --chown=root:odoo $LOCAL_CUSTOM_DIR /opt/odoo/custom\n\n# https://docs.python.org/3/library/logging.html#levels\nONBUILD ARG LOG_LEVEL=INFO\nONBUILD RUN mkdir -p /opt/odoo/custom/ssh \\\n            && ln -s /opt/odoo/custom/ssh ~root/.ssh \\\n            && chmod -R u=rwX,go= /opt/odoo/custom/ssh \\\n            && sync\nONBUILD ARG DB_VERSION=latest\nONBUILD RUN /opt/odoo/common/build && sync\nONBUILD VOLUME [\"/var/lib/odoo\"]\nONBUILD USER odoo\n# HACK Special case for Werkzeug\n \\\nRUN pip install --no-cache-dir --user Werkzeug==0.14.1ONBUILD\n"
}