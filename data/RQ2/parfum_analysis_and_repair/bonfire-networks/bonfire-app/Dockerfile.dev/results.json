{
  "startTime": 1674254624808,
  "endTime": 1674254625799,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 11
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# stage to build the dependency manager\nFROM rust:1.52 AS messctl_build\n# FROM elixir:1.12-alpine AS messctl_build\n\nARG FLAVOUR\nARG FLAVOUR_PATH\n\nENV FORKS=./forks\n\n# build deps\n# RUN apk update && apk add git rust cargo\n\n# fetch messctl\nRUN git clone https://github.com/bonfire-networks/messctl $FORKS/messctl/origin 2> /dev/null || (cd $FORKS/messctl/origin && git pull)\nRUN cd $FORKS/messctl/origin && git checkout 8f53c86687ba2bd262471c6e8d9490ed00bf1306\n# FIXME: try using latest version of messctl\n\n# compile messctl\nRUN cd $FORKS/messctl && cp -r origin/* . && cargo build --release && cargo install --path . --verbose\n\n\nFROM elixir:1.13-alpine\n\nENV HOME=/opt/app/ TERM=xterm USER=docker FORKS=./forks\nWORKDIR $HOME\n\n# dev tools\nRUN apk update && \\\n    apk add --no-cache bash curl inotify-tools\n\n# various dependencies of dependencies\nRUN apk add --no-cache file \\\n    npm yarn \\\n    git \\\n    mailcap \\\n    ca-certificates openssh-client openssl-dev \\\n    tzdata \\\n    gettext\n\n# deps to compile NIF deps (eg. tree_magic)\nRUN apk add --no-cache git rust cargo\n\n# dependencies for comeonin (not needed for dev)\n#RUN apk add cmake make gcc libc-dev\n\n# dependencies for encryption (experimental)\n# RUN apk add olm\n\n# dependencies for image processing\nRUN apk add --no-cache imagemagick vips-tools\n\n# install the dependency manager\nCOPY --from=messctl_build $FORKS/messctl/target/release/messctl /bin/\n\n# JS package manager & builders\n# RUN npm install -g pnpm esbuild postcss\n\nEXPOSE 4000/tcp\nEXPOSE 4004/tcp\n\nCMD [\"sh\",\"-c\",\"iex -S mix phx.server\"]\n"
}