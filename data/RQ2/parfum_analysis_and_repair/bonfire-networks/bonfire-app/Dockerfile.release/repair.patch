diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bonfire-networks/bonfire-app/Dockerfile.release b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bonfire-networks/bonfire-app/Dockerfile.release/repaired.Dockerfile
index 74e4ea9..11d9289 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/bonfire-networks/bonfire-app/Dockerfile.release
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/bonfire-networks/bonfire-app/Dockerfile.release/repaired.Dockerfile
@@ -1,9 +1,9 @@
-# Define what version of Elixir to use - ATTENTION: when changing Elixir version 
+# Define what version of Elixir to use - ATTENTION: when changing Elixir version
 # make sure to update the `ALPINE_VERSION` arg to match,
 # as well as the Elixir version in:
-# - mix.exs 
-# - .github/workflows/test.yaml or .gitlab-ci.yml 
-# - Dockerfile.dev 
+# - mix.exs
+# - .github/workflows/test.yaml or .gitlab-ci.yml
+# - Dockerfile.dev
 # - .tool-versions
 ARG ELIXIR_IMAGE=1.13-alpine
 
@@ -25,30 +25,30 @@ ARG FLAVOUR
 ARG FLAVOUR_PATH
 
 #### STEP 1 - Build our app
-FROM elixir:${ELIXIR_IMAGE} as builder 
+FROM elixir:${ELIXIR_IMAGE} as builder
 
 ENV HOME=/opt/app/ TERM=xterm MIX_ENV=prod APP_NAME=$APP_NAME FLAVOUR=$FLAVOUR FLAVOUR_PATH=./
 WORKDIR $HOME
 
 # necessary utils
-RUN apk add tar curl git rust cargo npm yarn bash
+RUN apk add --no-cache tar curl git rust cargo npm yarn bash
 
 # dependencies for comeonin
-RUN apk add make gcc libc-dev
+RUN apk add --no-cache make gcc libc-dev
 
 # Cache elixir deps
 COPY mix.exs mess.exs mix.lock ./
 # sometimes mix tries to read the config
-RUN mkdir -p ./config 
+RUN mkdir -p ./config
 COPY data/current_flavour/config/config_basics.exs ./config/config.exs
 
 # get deps from hex.pm
-COPY data/current_flavour/config/deps.hex ./config/ 
+COPY data/current_flavour/config/deps.hex ./config/
 RUN mix do local.hex --force, local.rebar --force
 RUN mix do deps.get --only prod
 
 # Compile initial hex deps, only if we're not using forks (warning: this makes the assumption that no Bonfire extensions are coming from Hex. otherwise this should be done only after copying config)
-RUN if [ "$FORKS_TO_COPY_PATH" = "data/null" ] ; then MIX_ENV=prod mix do deps.compile ; else echo "Skip" ; fi 
+RUN if [ "$FORKS_TO_COPY_PATH" = "data/null" ] ; then MIX_ENV=prod mix do deps.compile ; else echo "Skip" ; fi
 
 # add git deps (typically Bonfire extensions)
 COPY data/current_flavour/config/deps.git ./config/
@@ -61,7 +61,7 @@ COPY data/current_flavour/config/ ./config/
 
 # Optionally include local forks
 ARG FORKS_TO_COPY_PATH
-RUN if [ "$FORKS_TO_COPY_PATH" = "data/null" ] ; then rm ./config/deps.path ; else echo "Include locally forked extensions." ; fi 
+RUN if [ "$FORKS_TO_COPY_PATH" = "data/null" ] ; then rm ./config/deps.path ; else echo "Include locally forked extensions." ; fi
 COPY ${FORKS_TO_COPY_PATH} ./forks/
 
 # Update Bonfire extensions to latest git version (mostly useful in CI, and temporary: eventually we want to rely on version numbers and lockfile)
@@ -93,14 +93,14 @@ RUN MIX_ENV=prod mix do deps.clean --build mime
 # Include migrations
 COPY data/current_flavour/repo priv/repo
 
-# bonfire-app code & assets 
+# bonfire-app code & assets
 COPY lib lib
 COPY assets assets
 # COPY . .
 
 # include an archive of the source code
 COPY LICENSE ./
-RUN mkdir -p priv/static/ && tar --exclude=*.env --exclude=assets/node_modules --exclude=assets/static/data -czvf priv/static/source.tar.gz lib deps assets config priv/repo mix.exs mix.lock mess.exs LICENSE
+RUN mkdir -p priv/static/ && tar --exclude=*.env --exclude=assets/node_modules --exclude=assets/static/data -czvf priv/static/source.tar.gz lib deps assets config priv/repo mix.exs mix.lock mess.exs LICENSE && rm priv/static/source.tar.gz
 
 # prepare static assets
 COPY data/current_flavour/config/deps_hooks.js data/current_flavour/config/deps_hooks.js
@@ -138,7 +138,7 @@ RUN apk add --update --no-cache \
   vips-tools \
   # ^ image resizing
   bash \
-  curl 
+  curl
   #^ misc
 
 WORKDIR /opt/app