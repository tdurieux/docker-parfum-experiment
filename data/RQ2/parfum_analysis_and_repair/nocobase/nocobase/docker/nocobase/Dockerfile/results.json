{
  "startTime": 1674248190544,
  "endTime": 1674248191856,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 5,
        "columnEnd": 70
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 5,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 23,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 23,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-stretch-slim as builder\n\nWORKDIR /app\n\nRUN cd /app \\\n  && yarn create nocobase-app my-nocobase-app -a -e APP_ENV=production \\\n  && cd /app/my-nocobase-app \\\n  && yarn install --production && yarn cache clean;\n\nRUN cd /app \\\n  && rm -rf my-nocobase-app/packages/app/client/src/.umi \\\n  && rm -rf nocobase.tar.gz \\\n  && find ./my-nocobase-app/node_modules/china-division/dist -name '*.csv' -delete \\\n  && find ./my-nocobase-app/node_modules/china-division/dist -name '*.sqlite' -delete \\\n  && tar -zcvf ./nocobase.tar.gz -C /app/my-nocobase-app . && rm ./nocobase.tar.gz\n\nFROM node:16-stretch-slim\n\n# COPY ./sources.list /etc/apt/sources.list\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n  amd64) ARCH='x64';; \\\n  ppc64el) ARCH='ppc64le';; \\\n  s390x) ARCH='s390x';; \\\n  arm64) ARCH='arm64';; \\\n  armhf) ARCH='armv7l';; \\\n  i386) ARCH='x86';; \\\n  *) echo \"unsupported architecture\"; exit 1 ;; \\\n  esac \\\n  && set -ex \\\n  # libatomic1 for arm\n  && apt-get update && apt-get install --no-install-recommends -y nginx && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -rf /etc/nginx/sites-enabled/default\nCOPY ./nocobase.conf /etc/nginx/sites-enabled/nocobase.conf\nCOPY --from=builder /app/nocobase.tar.gz /app/nocobase.tar.gz\n\nWORKDIR /app/nocobase\n\nCOPY docker-entrypoint.sh /app/\n# COPY docker-entrypoint.sh /usr/local/bin/\n# ENTRYPOINT [\"docker-entrypoint.sh\"]\n\nCMD [\"/app/docker-entrypoint.sh\"]\n"
}