{
  "startTime": 1674218117799,
  "endTime": 1674218120200,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 10,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 33,
        "columnStart": 22,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# tensorflow with cuda 11.2 and running python 3.9\n# Loosely based in what tensorflow tools generate.\nARG UBUNTU_VERSION=20.04\nARG CUDA=11.2\nFROM nvidia/cuda:${CUDA}.1-base-ubuntu${UBUNTU_VERSION} as base\n\n# CUDA is specified again because the FROM directive resets ARGs\n# (but the default value is retained if set previously)\nARG CUDA\nARG CUDNN=8.1.0.77-1\nARG LIBNVINFER=7.2.2-1\nARG LIBNVINFER_MAJOR_VERSION=7\n\nENV DEBIAN_FRONTEND=noninteractive\n\n# Needed for string substitution\nSHELL [\"/bin/bash\", \"-c\"]\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        cuda-command-line-tools-${CUDA/./-} \\\n        libcublas-${CUDA/./-} \\\n        cuda-nvrtc-${CUDA/./-} \\\n        libcufft-${CUDA/./-} \\\n        libcurand-${CUDA/./-} \\\n        libcusolver-${CUDA/./-} \\\n        libcusparse-${CUDA/./-} \\\n        curl \\\n        libcudnn8=${CUDNN}+cuda${CUDA} \\\n        libfreetype6-dev \\\n        libhdf5-serial-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        software-properties-common \\\n        unzip && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n        apt-key adv --fetch-keys \\\n        https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/7fa2af80.pub && \\\n        echo \"deb https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64 /\"  > /etc/apt/sources.list.d/tensorRT.list && \\\n        apt-get update && \\\n        apt-get install -y --no-install-recommends \\\n        libnvinfer${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0 \\\n        libnvinfer-plugin${LIBNVINFER_MAJOR_VERSION}=${LIBNVINFER}+cuda11.0 \\\n        && \\\n        apt-get clean && \\\n        rm -rf /var/lib/apt/lists/*\n\n# For CUDA profiling, TensorFlow requires CUPTI.\nENV LD_LIBRARY_PATH /usr/local/cuda-11.0/targets/x86_64-linux/lib:/usr/local/cuda/extras/CUPTI/lib64:/usr/local/cuda/lib64:$LD_LIBRARY_PATH\n\n# Link the libcuda stub to the location where tensorflow is searching for it and reconfigure\n# dynamic linker run-time bindings\nRUN ln -s /usr/local/cuda/lib64/stubs/libcuda.so /usr/local/cuda/lib64/stubs/libcuda.so.1 \\\n    && echo \"/usr/local/cuda/lib64/stubs\" > /etc/ld.so.conf.d/z-cuda-stubs.conf \\\n    && ldconfig\n\n# See http://bugs.python.org/issue19846\nENV LANG C.UTF-8\n\nRUN apt-get update \\\n       && apt-get update \\\n       && apt-get install --no-install-recommends -y python3.9 python3.9-dev python3.9-venv \\\n       && apt-get clean \\\n       && rm -rf /var/lib/apt/lists/*\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && python3.9 get-pip.py && rm get-pip.py\nRUN python3.9 -m pip install --no-cache-dir -U pip\nRUN python3.9 -m pip install --no-cache-dir -U setuptools\n# Some TF tools expect a \"python\" binary\nRUN ln -s /usr/bin/python3.9 /usr/local/bin/python\n\nARG TF_PACKAGE=tensorflow-gpu\nRUN pip install --no-cache-dir ${TF_PACKAGE}\n"
}