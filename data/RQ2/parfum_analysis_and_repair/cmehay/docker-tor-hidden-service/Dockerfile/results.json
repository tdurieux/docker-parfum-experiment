{
  "startTime": 1674251415915,
  "endTime": 1674251416967,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 16,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM    python:3.9-alpine\n\n# if omitted, the versions are determined from the git tags\nARG     tor_version\nARG     torsocks_version\n\nENV     HOME /var/lib/tor\nENV     POETRY_VIRTUALENVS_CREATE=false\n\nRUN apk add --no-cache git bind-tools cargo libevent-dev openssl-dev gnupg gcc make automake ca-certificates autoconf musl-dev coreutils libffi-dev zlib-dev && \\\n    mkdir -p /usr/local/src/ /var/lib/tor/ && \\\n    git clone https://git.torproject.org/tor.git /usr/local/src/tor && \\\n    cd /usr/local/src/tor && \\\n    TOR_VERSION=${tor_version=$(git tag | grep -oE '[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$' | sort -V | tail -1)} && \\\n    git checkout tor-$TOR_VERSION && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --disable-asciidoc \\\n    --sysconfdir=/etc \\\n    --disable-unittests && \\\n    make && make install && \\\n    cd .. && \\\n    rm -rf tor && \\\n    pip3 install --no-cache-dir --upgrade pip poetry && \\\n    apk del git libevent-dev openssl-dev gnupg cargo make automake autoconf musl-dev coreutils libffi-dev && \\\n    apk add --no-cache libevent openssl\n\nRUN apk add --no-cache git gcc make automake autoconf musl-dev libtool && \\\n    git clone https://git.torproject.org/torsocks.git /usr/local/src/torsocks && \\\n    cd /usr/local/src/torsocks && \\\n    TORSOCKS_VERSION=${torsocks_version=$(git tag | grep -oE 'v[0-9]+\\.[0-9]+\\.[0-9]+$' | sort -V | tail -1)} && \\\n    git checkout $TORSOCKS_VERSION && \\\n    ./autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && \\\n    cd .. && \\\n    rm -rf torsocks && \\\n    apk del git gcc make automake autoconf musl-dev libtool\n\nRUN     mkdir -p /etc/tor/\n\nCOPY    pyproject.toml /usr/local/src/onions/\n\nRUN     cd /usr/local/src/onions && apk add --no-cache openssl-dev libffi-dev gcc libc-dev && \\\n    poetry install --no-dev --no-root && \\\n    apk del libffi-dev gcc libc-dev openssl-dev\n\nCOPY    onions /usr/local/src/onions/onions\nCOPY    poetry.lock /usr/local/src/onions/\nRUN     cd /usr/local/src/onions && apk add --no-cache gcc libc-dev && \\\n    poetry install --no-dev && \\\n    apk del gcc libc-dev\n\nRUN     mkdir -p ${HOME}/.tor && \\\n    addgroup -S -g 107 tor && \\\n    adduser -S -G tor -u 104 -H -h ${HOME} tor\n\nCOPY    assets/entrypoint-config.yml /\nCOPY    assets/torrc /var/local/tor/torrc.tpl\nCOPY    assets/vanguards.conf.tpl /var/local/tor/vanguards.conf.tpl\n\nENV     VANGUARDS_CONFIG /etc/tor/vanguards.conf\n\nVOLUME  [\"/var/lib/tor/hidden_service/\"]\n\nENTRYPOINT [\"pyentrypoint\"]\n\nCMD     [\"tor\"]\n"
}