{
  "startTime": 1674251881140,
  "endTime": 1674251882482,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 22,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG QEMU_TARGET_ARCH\nARG DOCKER_BASE_IMAGE\n\n#the following lines are used to get a qemu binary only with docker tools\nFROM multiarch/qemu-user-static:4.2.0-6 as qemu\n\nFROM $DOCKER_BASE_IMAGE\nARG CMD_WRAPPER\nCOPY --from=qemu /usr/bin/* /usr/bin/\n\n# Quick fix for the now archived debian jessie. Security updates are also no longer provided for arm64.\n# We switch all sources to the debian archive servers, See:\n# https://github.com/debuerreotype/docker-debian-artifacts/issues/66\n# https://stackoverflow.com/questions/55386246/w-failed-to-fetch-http-deb-debian-org-debian-dists-jessie-updates-main-binary\nRUN if cat /etc/debian_version | grep -q \"8\\.\" ; then \\\n        echo \"deb [check-valid-until=no] http://archive.debian.org/debian jessie main\" > /etc/apt/sources.list; \\\n        apt-get -o Acquire::Check-Valid-Until=false update; \\\n    fi\n\nRUN pip install --no-cache-dir wheel auditwheel\n#build a new swig\nRUN mkdir /build && \\\n    cd /build && \\\n    wget https://prdownloads.sourceforge.net/swig/swig-4.0.1.tar.gz && \\\n    tar -xzf swig-4.0.1.tar.gz && cd swig-4.0.1 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-python3 && make -j2 && make install && \\\n    rm -rf /build && rm swig-4.0.1.tar.gz\n\n# numpy is required for the pypylon unittests\n# currently disabled because the numpy install exceeds the current travis max duration\n# RUN pip install numpy\n\n# one genicam unittest requires a french locale\n# patchelf, unzip are needed for auditwheel\nRUN apt-get update && apt-get install --no-install-recommends -y locales patchelf unzip \\\n && rm -rf /var/lib/apt/lists/* \\\n && sed -i 's/^# *\\(fr_FR.UTF-8\\)/\\1/' /etc/locale.gen \\\n && locale-gen\n\nRUN mkdir /work\nRUN mkdir /pylon_installer\nRUN mkdir /worker_home && chmod go+rwx /worker_home\nENV HOME=/worker_home\n\n\n# run everything wrapped using CMD_WRAPPER\n# In most cases the wrapper is linux64/32.\n# This is for example required when running the armv7 container on armv8 hardware to ensure that python really builds for armv7\nRUN echo \"#!/bin/sh\" > /entrypoint.sh; echo exec $CMD_WRAPPER \\\"\\$@\\\" >> /entrypoint.sh; chmod +x /entrypoint.sh\nENTRYPOINT [ \"/entrypoint.sh\" ]\n\nRUN /entrypoint.sh uname -a\n"
}