{
  "startTime": 1674252325027,
  "endTime": 1674252325834,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL maintainer=\"Qi Zheng <huaiqing.zq@antgroup.com>\"\n\n# Install SGX DCAP and Occlum runtime\nARG PSW_VERSION=2.15.101.1\nARG DCAP_VERSION=1.12.101.1\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=1\nRUN apt update && DEBIAN_FRONTEND=\"noninteractive\" apt install -y --no-install-recommends gnupg wget ca-certificates jq && \\\n    echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu focal main' | tee /etc/apt/sources.list.d/intel-sgx.list && \\\n    wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add - && \\\n    echo 'deb [arch=amd64] https://occlum.io/occlum-package-repos/debian focal main' | tee /etc/apt/sources.list.d/occlum.list && \\\n    wget -qO - https://occlum.io/occlum-package-repos/debian/public.key | apt-key add - && \\\n    apt update && \\\n    apt install --no-install-recommends -y libsgx-uae-service=$PSW_VERSION-focal1 && \\\n    apt install --no-install-recommends -y libsgx-dcap-ql=$DCAP_VERSION-focal1 && \\\n    apt install --no-install-recommends -y libsgx-dcap-default-qpl=$DCAP_VERSION-focal1 && \\\n    apt install --no-install-recommends -y occlum-runtime && \\\n    apt clean && \\\n    rm -rf /var/lib/apt/lists/*\nENV PATH=\"/opt/occlum/build/bin:/usr/local/occlum/bin:$PATH\"\n\n# Users need build their own applications and generate occlum package first.\nARG OCCLUM_PACKAGE\nADD $OCCLUM_PACKAGE /\nCOPY container/docker-entrypoint.sh /usr/local/bin/\n\nENV PCCS_URL=\"https://localhost:8081/sgx/certification/v3/\"\n\nENTRYPOINT [\"docker-entrypoint.sh\"]\nWORKDIR /occlum_instance\n"
}