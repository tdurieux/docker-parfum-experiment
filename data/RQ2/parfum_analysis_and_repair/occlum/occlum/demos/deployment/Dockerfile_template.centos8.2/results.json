{
  "startTime": 1674249174504,
  "endTime": 1674249175478,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 15,
        "columnEnd": 47
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 15,
        "columnEnd": 47
      }
    }
  ],
  "repairedDockerfile": "# base stage:\n# Install dependencies for deployment to get minimum size for deployer.\n# For deployment environment, only occlum-runtime and sgx-psw are needed.\nFROM centos:8.2.2004 as base\nLABEL maintainer=\"Chunyang Hui <sanqian.hcy@antgroup.com>\"\n\nADD https://download.01.org/intel-sgx/sgx-linux/2.14/distro/centos8.2-server/sgx_rpm_local_repo.tgz /tmp/\nRUN cd /tmp && tar -xvzf sgx_rpm_local_repo.tgz && \\\n    yum install -y jq yum-utils && \\\n    yum-config-manager --add-repo file:///tmp/sgx_rpm_local_repo && \\\n    echo -e '[occlum]\\n\\\nname=occlum\\n\\\nenabled=1\\n\\\nbaseurl=https://occlum.io/occlum-package-repos/rpm-repo/\\n\\\ngpgcheck=1\\n\\\nrepo_gpgcheck=1\\n\\\ngpgkey=https://occlum.io/occlum-package-repos/rpm-repo/RPM-GPG-KEY-rpm-sign\\n\\\ngpgcakey=https://occlum.io/occlum-package-repos/rpm-repo/RPM-GPG-KEY-rpm-sign-ca'\\\n>> /etc/yum.repos.d/occlum.repo && \\\n    yum install --nogpgcheck -y occlum-runtime && \\\n    yum clean all && \\\n    yum-config-manager --disable tmp_sgx_rpm_local_repo && \\\n    rm -rf /tmp/* /etc/yum.repos.d/tmp_sgx_rpm_local_repo.repo && rm -rf /var/cache/yum\nENV PATH=\"/opt/occlum/build/bin:/usr/local/occlum/bin:$PATH\"\n\n\n# packager stage:\n# Users can build their own applications and put to occlum instance.\n# And then use \"occlum package\" to get a minimum subset of files to run in deployment environment.\n# In this demo, the occlum instance is built in debug mode.\n# So \"--debug\" flag is required for the \"occlum package\".\nFROM base as packager\nRUN yum install -y fuse-libs libtool make gdb git && \\\n    cd /root && \\\n    git clone https://github.com/occlum/occlum.git && \\\n    cp -r /root/occlum/demos /root/demos && \\\n    yum install --nogpgcheck -y occlum && \\\n    yum clean all && \\\n    rm -rf /tmp/* && \\\n    rm -rf /root/occlum && \\\n    cd /root && \\\n    occlum new occlum-instance && \\\n    cd /root/demos/hello_c && \\\n    make && cp hello_world /root/occlum-instance/image/bin && \\\n    cd /root/occlum-instance && occlum build && \\\n    occlum package --debug && rm -rf /var/cache/yum\n\n\n# deployer stage:\n# Unpack the package from packager\nFROM base as deployer\nWORKDIR /root\nCOPY --from=packager /root/occlum-instance/occlum-instance.tar.gz .\nRUN tar -xvzf occlum-instance.tar.gz && \\\n    mkdir -p /var/run/aesmd && \\\n    echo \"LD_LIBRARY_PATH=/opt/intel/sgx-aesm-service/aesm nohup /opt/intel/sgx-aesm-service/aesm/aesm_service --no-daemon >/dev/null 2>&1 &\" > /root/.bashrc && rm occlum-instance.tar.gz\n\nWORKDIR /root\n"
}