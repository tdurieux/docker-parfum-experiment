{
  "startTime": 1674255198691,
  "endTime": 1674255199548,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# (C) 2019 The Johns Hopkins University Applied Physics Laboratory LLC.\n\nFROM ubuntu:18.04\n\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND noninteractive\n\n# Install basic dependencies\nRUN apt-get clean && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install software-properties-common ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Copy any certs\nCOPY docker/*.crt /usr/local/share/ca-certificates/\nRUN rm /usr/local/share/ca-certificates/empty.crt && update-ca-certificates\n\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install git build-essential curl jq wget ruby gettext-base && \\\n    gem install mustache && rm -rf /var/lib/apt/lists/*;\n\nRUN wget https://nginx.org/keys/nginx_signing.key && \\\n    apt-key add nginx_signing.key && \\\n    rm nginx_signing.key && \\\n    echo \"deb https://nginx.org/packages/ubuntu/ bionic nginx\" && \\\n    apt-get -y remove nginx* && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install nginx && rm -rf /var/lib/apt/lists/*;\n\nARG NODE_VERSION=12\n\nRUN curl -f -sL https://deb.nodesource.com/setup_${NODE_VERSION}.x | bash -\nRUN apt-get -y update && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\n\nARG ROOT_DIR=/nlp-web-app/frontend\nARG SERVER_TYPE=http\n\nEXPOSE 80 443\n\nRUN mkdir -p $ROOT_DIR\nWORKDIR $ROOT_DIR\n\nADD angular.json $ROOT_DIR/\nADD package*.json $ROOT_DIR/\n\nRUN npm config set cafile /etc/ssl/certs/ca-certificates.crt\nRUN npm install && npm cache clean --force;\n\nADD e2e/ $ROOT_DIR/e2e\nADD nginx/ $ROOT_DIR/nginx\nADD tsconfig.json $ROOT_DIR/\nADD tslint.json $ROOT_DIR/\n\nRUN mkdir -p /etc/ssl/private/ /etc/ssl/certs/ /etc/nginx/snippets/\nADD nginx/certs/server.key /etc/ssl/private/\nADD nginx/certs/server.crt /etc/ssl/certs/\nADD nginx/certs/dhparam.pem /etc/nginx/\nADD nginx/snippets/* /etc/nginx/snippets/\n\nRUN echo \"---\" > data.yml && \\\n    echo \"ROOT_DIR: $ROOT_DIR\" >> data.yml && \\\n    echo \"---\" >> data.yml\n\nRUN mustache data.yml nginx/nlp-web-app.$SERVER_TYPE.mustache > nginx/nlp-web-app && \\\n    rm -f nginx/nlp-web-app.$SERVER_TYPE.mustache && \\\n    ln -s /etc/nginx/sites-available/nlp-web-app /etc/nginx/sites-enabled/ && \\\n    rm -f /etc/nginx/sites-enabled/default\n\nADD docker_run.sh $ROOT_DIR/\n\nADD src/ $ROOT_DIR/src\nRUN npm run prod\n\nCMD [\"./docker_run.sh\"]\n"
}