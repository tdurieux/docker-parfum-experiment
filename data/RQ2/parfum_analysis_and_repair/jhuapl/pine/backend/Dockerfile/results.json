{
  "startTime": 1674246594182,
  "endTime": 1674246595411,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# (C) 2019 The Johns Hopkins University Applied Physics Laboratory LLC.\n\nFROM ubuntu:20.04\n\nENV LC_ALL C.UTF-8\nENV LANG C.UTF-8\nENV DEBIAN_FRONTEND noninteractive\n\n# Install basic dependencies\nRUN apt-get clean && \\\n    apt-get -y update && \\\n    apt-get -y --no-install-recommends install software-properties-common ca-certificates && rm -rf /var/lib/apt/lists/*;\n\n# Copy any certs\nCOPY docker/*.crt /usr/local/share/ca-certificates/\nRUN rm /usr/local/share/ca-certificates/empty.crt && update-ca-certificates\n\n# Install pipenv\nRUN apt-get -y update && \\\n    apt-get -y --no-install-recommends install git build-essential python3.6 python3-pip gettext-base && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir --default-timeout=30 --upgrade pip gunicorn pipenv\n\nARG ROOT_DIR=/nlp-web-app/backend\nARG REDIS_PORT=6379\nARG PORT=7520\nARG WORKERS=5\n\nEXPOSE $PORT\n\nENV REDIS_PORT $REDIS_PORT\n\nRUN mkdir -p $ROOT_DIR\n\nADD Pipfile $ROOT_DIR\nADD Pipfile.lock $ROOT_DIR\n\nWORKDIR $ROOT_DIR\nRUN REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt pipenv install --dev --system --deploy\n\nADD pine/ $ROOT_DIR/pine/\nADD scripts/ $ROOT_DIR/scripts/\n\nADD docker/wsgi.py $ROOT_DIR/\nADD docker_run.sh $ROOT_DIR/\n\nCOPY docker/config.py.template ./\nRUN PORT=$PORT WORKERS=$WORKERS envsubst '${PORT} ${WORKERS}' < ./config.py.template > ./config.py\n\nCMD [\"./docker_run.sh\"]\n"
}