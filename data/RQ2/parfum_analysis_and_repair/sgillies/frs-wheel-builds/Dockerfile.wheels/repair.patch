diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sgillies/frs-wheel-builds/Dockerfile.wheels b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sgillies/frs-wheel-builds/Dockerfile.wheels/repaired.Dockerfile
index 5acf723..0699520 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/sgillies/frs-wheel-builds/Dockerfile.wheels
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/sgillies/frs-wheel-builds/Dockerfile.wheels/repaired.Dockerfile
@@ -11,7 +11,7 @@ RUN sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf \
     && sed -i 's|#baseurl=http://mirror.centos.org/centos/$releasever|baseurl=http://vault.centos.org/5.11|' /etc/yum.repos.d/CentOS-Base.repo \
     && sed -i 's/^/#/' /etc/yum.repos.d/libselinux.repo
 
-RUN yum update -y && yum install -y json-c-devel zlib-devel libtiff-devel
+RUN yum update -y && yum install -y json-c-devel zlib-devel libtiff-devel && rm -rf /var/cache/yum
 
 # Install openssl
 RUN mkdir -p /src \
@@ -24,7 +24,7 @@ RUN mkdir -p /src \
     && ./config no-shared no-ssl2 no-async -fPIC -O2 \
     && make \
     && make install \
-    && rm -rf /src
+    && rm -rf /src && rm openssl-1.0.2o.tar.gz
 
 # Install curl
 RUN mkdir -p /src \
@@ -32,10 +32,10 @@ RUN mkdir -p /src \
     && curl -f -L -O http://curl.askapache.com/download/curl-7.51.0.tar.bz2 \
     && tar jxf curl-7.51.0.tar.bz2 \
     && cd /src/curl-7.51.0 \
-    && LIBS=-ldl CFLAGS="-O2" ./configure --with-ssl=/usr/local/ssl \
+    && LIBS=-ldl CFLAGS="-O2" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-ssl=/usr/local/ssl \
     && make \
     && make install \
-    && rm -rf /src
+    && rm -rf /src && rm curl-7.51.0.tar.bz2
 
 # Install geos
 RUN mkdir -p /src \
@@ -43,10 +43,10 @@ RUN mkdir -p /src \
     && curl -f -L -O http://download.osgeo.org/geos/geos-3.6.2.tar.bz2 \
     && tar jxf geos-3.6.2.tar.bz2 \
     && cd /src/geos-3.6.2 \
-    && CFLAGS="-O2" CXXFLAGS="-O2" ./configure \
+    && CFLAGS="-O2" CXXFLAGS="-O2" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
     && make install \
-    && rm -rf /src
+    && rm -rf /src && rm geos-3.6.2.tar.bz2
 
 # proj4
 RUN mkdir -p /src \
@@ -54,10 +54,10 @@ RUN mkdir -p /src \
     && curl -f -L -O http://download.osgeo.org/proj/proj-4.9.3.tar.gz \
     && tar xzf proj-4.9.3.tar.gz \
     && cd /src/proj-4.9.3 \
-    && ./configure CFLAGS="-O2" \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" CFLAGS="-O2" \
     && make \
     && make install \
-    && rm -rf /src
+    && rm -rf /src && rm proj-4.9.3.tar.gz
 
 # cmake
 RUN cd /usr/local/src \
@@ -65,7 +65,7 @@ RUN cd /usr/local/src \
     && tar xzf cmake-3.9.1.tar.gz \
     && cd cmake-3.9.1 \
     && ./bootstrap --prefix=/usr/local/cmake \
-    && make; make install
+    && make; rm cmake-3.9.1.tar.gz make install
 
 # openjpeg
 RUN mkdir -p /src \
@@ -78,50 +78,50 @@ RUN mkdir -p /src \
     && /usr/local/cmake/bin/cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \
     && make install \
     && make clean \
-    && rm -rf /src
+    && rm -rf /src && rm v2.3.0.tar.gz
 
 # hdf
 RUN cd /usr/local/src \
     && curl -f -L -O https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.1/src/hdf5-1.10.1.tar.gz \
     && tar xzf hdf5-1.10.1.tar.gz \
     && cd hdf5-1.10.1 \
-    && ./configure --prefix=/usr/local --enable-shared --enable-build-mode=production CFLAGS="-O2" \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --enable-shared --enable-build-mode=production CFLAGS="-O2" \
     && make \
-    && make install
+    && make install && rm hdf5-1.10.1.tar.gz
 
 ## netcdf
 RUN cd /usr/local/src \
     && curl -f -L -O ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.1.1.tar.gz \
     && tar xzf netcdf-4.4.1.1.tar.gz \
     && cd netcdf-4.4.1.1 \
-    && CFLAGS="-I/usr/local/include -O2" CXXFLAGS="-I/usr/local/include -O2" LDFLAGS="-L/usr/local/lib" ./configure \
+    && CFLAGS="-I/usr/local/include -O2" CXXFLAGS="-I/usr/local/include -O2" LDFLAGS="-L/usr/local/lib" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
     && make \
-    && make install
+    && make install && rm netcdf-4.4.1.1.tar.gz
 
 ## expat
 RUN cd /usr/local/src \
     && curl -f -L -O https://github.com/libexpat/libexpat/releases/download/R_2_2_5/expat-2.2.5.tar.bz2 \
     && tar xjf expat-2.2.5.tar.bz2 \
     && cd expat-2.2.5 \
-    && CFLAGS="-O2" ./configure --prefix=/usr/local \
+    && CFLAGS="-O2" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
     && make \
-    && make install
+    && make install && rm expat-2.2.5.tar.bz2
 
 ## webp
 RUN cd /usr/local/src \
     && curl -f -L -O https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-0.6.1.tar.gz \
     && tar xzf libwebp-0.6.1.tar.gz \
     && cd libwebp-0.6.1 \
-    && CFLAGS="-O2" ./configure --prefix=/usr/local \
+    && CFLAGS="-O2" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
     && make \
-    && make install
+    && make install && rm libwebp-0.6.1.tar.gz
 
 # gdal
 RUN cd /usr/local/src \
     && curl -f -L -O http://download.osgeo.org/gdal/2.2.4/gdal-2.2.4.tar.gz \
     && tar xzf gdal-2.2.4.tar.gz \
     && cd gdal-2.2.4 \
-    && CFLAGS="-O2" CXXFLAGS="-O2" ./configure \
+    && CFLAGS="-O2" CXXFLAGS="-O2" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --with-threads \
         --disable-debug \
         --disable-static \
@@ -153,12 +153,12 @@ RUN cd /usr/local/src \
         --without-jasper \
         --without-python \
     && make \
-    && make install
+    && make install && rm gdal-2.2.4.tar.gz
 
 # Bake dev requirements into the Docker image for faster builds
 RUN for PYBIN in /opt/python/*/bin; do \
         if [[ $PYBIN == *"26"* ]]; then continue; fi ; \
-        curl https://bootstrap.pypa.io/get-pip.py | python ; \
+        curl -f https://bootstrap.pypa.io/get-pip.py | python; \
         $PYBIN/pip install -U pip ; \
         $PYBIN/pip install cython "numpy>=1.11" --only-binary cython,numpy ; \
     done