{
  "startTime": 1674248865751,
  "endTime": 1674248867574,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 160,
        "lineEnd": 160,
        "columnStart": 8,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 7,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 87,
        "lineEnd": 87,
        "columnStart": 7,
        "columnEnd": 98
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 7,
        "columnEnd": 115
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 123,
        "lineEnd": 153,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 21,
        "columnEnd": 73
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 7,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 7,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 7,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 121,
        "lineEnd": 121,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# An image for building manylinux1 wheels equivalent to those that\n# https://github.com/sgillies/frs-wheel-builds makes for macosx.\n#\n# Note well: a very limited set of format drivers are included in these\n# wheels. See the GDAL configuration below for details.\n\nFROM quay.io/pypa/manylinux1_x86_64\n\nRUN sed -i 's/enabled=1/enabled=0/' /etc/yum/pluginconf.d/fastestmirror.conf \\\n    && sed -i 's/mirrorlist/#mirrorlist/' /etc/yum.repos.d/CentOS-Base.repo \\\n    && sed -i 's|#baseurl=http://mirror.centos.org/centos/$releasever|baseurl=http://vault.centos.org/5.11|' /etc/yum.repos.d/CentOS-Base.repo \\\n    && sed -i 's/^/#/' /etc/yum.repos.d/libselinux.repo\n\nRUN yum update -y && yum install -y json-c-devel zlib-devel libtiff-devel && rm -rf /var/cache/yum\n\n# Install openssl\nRUN mkdir -p /src \\\n    && cd /src \\\n    && curl -f -L -O https://www.openssl.org/source/openssl-1.0.2o.tar.gz \\\n    && echo \"ec3f5c9714ba0fd45cb4e087301eb1336c317e0d20b575a125050470e8089e4d  openssl-1.0.2o.tar.gz\" > checksum \\\n    && sha256sum -c checksum \\\n    && tar zxf openssl-1.0.2o.tar.gz \\\n    && cd /src/openssl-1.0.2o \\\n    && ./config no-shared no-ssl2 no-async -fPIC -O2 \\\n    && make \\\n    && make install \\\n    && rm -rf /src && rm openssl-1.0.2o.tar.gz\n\n# Install curl\nRUN mkdir -p /src \\\n    && cd /src \\\n    && curl -f -L -O http://curl.askapache.com/download/curl-7.51.0.tar.bz2 \\\n    && tar jxf curl-7.51.0.tar.bz2 \\\n    && cd /src/curl-7.51.0 \\\n    && LIBS=-ldl CFLAGS=\"-O2\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl=/usr/local/ssl \\\n    && make \\\n    && make install \\\n    && rm -rf /src && rm curl-7.51.0.tar.bz2\n\n# Install geos\nRUN mkdir -p /src \\\n    && cd /src \\\n    && curl -f -L -O http://download.osgeo.org/geos/geos-3.6.2.tar.bz2 \\\n    && tar jxf geos-3.6.2.tar.bz2 \\\n    && cd /src/geos-3.6.2 \\\n    && CFLAGS=\"-O2\" CXXFLAGS=\"-O2\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && rm -rf /src && rm geos-3.6.2.tar.bz2\n\n# proj4\nRUN mkdir -p /src \\\n    && cd /src \\\n    && curl -f -L -O http://download.osgeo.org/proj/proj-4.9.3.tar.gz \\\n    && tar xzf proj-4.9.3.tar.gz \\\n    && cd /src/proj-4.9.3 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" CFLAGS=\"-O2\" \\\n    && make \\\n    && make install \\\n    && rm -rf /src && rm proj-4.9.3.tar.gz\n\n# cmake\nRUN cd /usr/local/src \\\n    && curl -f -L -O http://www.cmake.org/files/v3.9/cmake-3.9.1.tar.gz \\\n    && tar xzf cmake-3.9.1.tar.gz \\\n    && cd cmake-3.9.1 \\\n    && ./bootstrap --prefix=/usr/local/cmake \\\n    && make; rm cmake-3.9.1.tar.gz make install\n\n# openjpeg\nRUN mkdir -p /src \\\n    && cd /src \\\n    && curl -f -L -O https://github.com/uclouvain/openjpeg/archive/v2.3.0.tar.gz \\\n    && tar xzf v2.3.0.tar.gz \\\n    && cd /src/openjpeg-2.3.0 \\\n    && mkdir -p build \\\n    && cd build \\\n    && /usr/local/cmake/bin/cmake .. -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local \\\n    && make install \\\n    && make clean \\\n    && rm -rf /src && rm v2.3.0.tar.gz\n\n# hdf\nRUN cd /usr/local/src \\\n    && curl -f -L -O https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-1.10.1/src/hdf5-1.10.1.tar.gz \\\n    && tar xzf hdf5-1.10.1.tar.gz \\\n    && cd hdf5-1.10.1 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local --enable-shared --enable-build-mode=production CFLAGS=\"-O2\" \\\n    && make \\\n    && make install && rm hdf5-1.10.1.tar.gz\n\n## netcdf\nRUN cd /usr/local/src \\\n    && curl -f -L -O ftp://ftp.unidata.ucar.edu/pub/netcdf/netcdf-4.4.1.1.tar.gz \\\n    && tar xzf netcdf-4.4.1.1.tar.gz \\\n    && cd netcdf-4.4.1.1 \\\n    && CFLAGS=\"-I/usr/local/include -O2\" CXXFLAGS=\"-I/usr/local/include -O2\" LDFLAGS=\"-L/usr/local/lib\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install && rm netcdf-4.4.1.1.tar.gz\n\n## expat\nRUN cd /usr/local/src \\\n    && curl -f -L -O https://github.com/libexpat/libexpat/releases/download/R_2_2_5/expat-2.2.5.tar.bz2 \\\n    && tar xjf expat-2.2.5.tar.bz2 \\\n    && cd expat-2.2.5 \\\n    && CFLAGS=\"-O2\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && make \\\n    && make install && rm expat-2.2.5.tar.bz2\n\n## webp\nRUN cd /usr/local/src \\\n    && curl -f -L -O https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-0.6.1.tar.gz \\\n    && tar xzf libwebp-0.6.1.tar.gz \\\n    && cd libwebp-0.6.1 \\\n    && CFLAGS=\"-O2\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local \\\n    && make \\\n    && make install && rm libwebp-0.6.1.tar.gz\n\n# gdal\nRUN cd /usr/local/src \\\n    && curl -f -L -O http://download.osgeo.org/gdal/2.2.4/gdal-2.2.4.tar.gz \\\n    && tar xzf gdal-2.2.4.tar.gz \\\n    && cd gdal-2.2.4 \\\n    && CFLAGS=\"-O2\" CXXFLAGS=\"-O2\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-threads \\\n        --disable-debug \\\n        --disable-static \\\n        --without-grass \\\n        --without-libgrass \\\n        --without-jpeg12 \\\n        --with-libtiff \\\n        --with-jpeg \\\n        --with-gif \\\n        --with-png \\\n        --with-webp \\\n        --with-geotiff=internal \\\n        --with-pcraster=internal \\\n        --with-pcraster=internal \\\n        --with-pcidsk=internal \\\n        --with-bsb \\\n        --with-grib \\\n        --with-pam \\\n        --with-geos=/usr/local/bin/geos-config \\\n        --with-static-proj4=/usr/local \\\n        --with-expat=/usr/local \\\n        --with-sqlite3 \\\n        --with-libjson-c \\\n        --with-libiconv-prefix=/usr \\\n        --with-libz=/usr \\\n        --with-curl=/usr/local/bin/curl-config \\\n        --with-netcdf=/usr/local \\\n        --with-openjpeg \\\n        --without-jasper \\\n        --without-python \\\n    && make \\\n    && make install && rm gdal-2.2.4.tar.gz\n\n# Bake dev requirements into the Docker image for faster builds\nRUN for PYBIN in /opt/python/*/bin; do \\\n        if [[ $PYBIN == *\"26\"* ]]; then continue; fi ; \\\n        curl -f https://bootstrap.pypa.io/get-pip.py | python; \\\n        $PYBIN/pip install -U pip ; \\\n        $PYBIN/pip install cython \"numpy>=1.11\" --only-binary cython,numpy ; \\\n    done\n\nWORKDIR /io\nCMD [\"/io/build-linux-wheels.sh\"]\n"
}