{
  "startTime": 1674252960710,
  "endTime": 1674252961442,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 70
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 29,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:xenial\n\nENV NGINX_VERSION 1.19.9\nENV OPENSSL_VERSION 1.1.1l\nENV YAML_VERSION 0.2.1\nENV NGX_VTS_REV 46d85558e344dfe2b078ce757fd36c69a1ec2dd3\nENV NGX_MRUBY_REV 76a55dad0528862ec5ad34c76fb4d19c17217358\n\nRUN apt -y update && apt -y --no-install-recommends install build-essential bison libpcre3-dev libpcre++-dev debhelper \\\n                   flex gcc make automake autoconf libtool git libreadline6-dev \\\n                   zlib1g-dev libncurses5-dev libssl-dev rake libpam0g-dev \\\n                   autotools-dev cgroup-lite git && rm -rf /var/lib/apt/lists/*;\nRUN git clone --depth=100 https://github.com/vozlt/nginx-module-vts && \\\n    cd nginx-module-vts && git checkout $NGX_VTS_REV\nRUN git clone --depth=100 https://github.com/matsumotory/ngx_mruby && \\\n    cd ngx_mruby && git checkout $NGX_MRUBY_REV\nRUN wget https://www.openssl.org/source/openssl-$OPENSSL_VERSION.tar.gz && \\\n    tar zxf openssl-$OPENSSL_VERSION.tar.gz && rm openssl-$OPENSSL_VERSION.tar.gz\nRUN wget https://nginx.org/download/nginx-$NGINX_VERSION.tar.gz && \\\n    tar zxf nginx-$NGINX_VERSION.tar.gz && rm nginx-$NGINX_VERSION.tar.gz\nRUN wget https://pyyaml.org/download/libyaml/yaml-$YAML_VERSION.tar.gz && \\\n    tar zxf yaml-$YAML_VERSION.tar.gz && \\\n    cd yaml-$YAML_VERSION && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && rm yaml-$YAML_VERSION.tar.gz\n\nADD build_config.rb /ngx_mruby/build_config.rb\nADD entry.sh /entry.sh\nRUN chmod +x /entry.sh\n\nCMD [\"/entry.sh\"]\n"
}