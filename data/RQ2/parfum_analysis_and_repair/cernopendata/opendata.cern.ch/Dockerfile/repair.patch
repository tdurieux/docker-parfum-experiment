diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cernopendata/opendata.cern.ch/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cernopendata/opendata.cern.ch/Dockerfile/repaired.Dockerfile
index 8e7f638..b411e40 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/cernopendata/opendata.cern.ch/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/cernopendata/opendata.cern.ch/Dockerfile/repaired.Dockerfile
@@ -51,10 +51,10 @@ RUN yum install -y \
         https://storage-ci.web.cern.ch/storage-ci/xrootd/release/cc-7-x86_64/v${XROOTD_VERSION}/xrootd-client-${XROOTD_VERSION}-1.el7.x86_64.rpm \
         https://storage-ci.web.cern.ch/storage-ci/xrootd/release/cc-7-x86_64/v${XROOTD_VERSION}/xrootd-client-devel-${XROOTD_VERSION}-1.el7.x86_64.rpm \
         https://storage-ci.web.cern.ch/storage-ci/xrootd/release/cc-7-x86_64/v${XROOTD_VERSION}/python3-xrootd-${XROOTD_VERSION}-1.el7.x86_64.rpm && \
-    yum clean -y all
+    yum clean -y all && rm -rf /var/cache/yum
 
-RUN pip uninstall pipenv -y && pip install --upgrade pip==20.2.4 setuptools==51.0.0 wheel==0.36.2 && \
-    npm install -g --unsafe-perm node-sass@4.14.1 clean-css@3.4.24 requirejs@2.3.6 uglify-js@3.12.1 jsonlint@1.6.3 d3@6.3.1
+RUN pip uninstall pipenv -y && pip install --no-cache-dir --upgrade pip==20.2.4 setuptools==51.0.0 wheel==0.36.2 && \
+    npm install -g --unsafe-perm node-sass@4.14.1 clean-css@3.4.24 requirejs@2.3.6 uglify-js@3.12.1 jsonlint@1.6.3 d3@6.3.1 && npm cache clean --force;
 
 # Change group to root to support OpenShift runtime
 RUN chgrp -R 0 "${INVENIO_INSTANCE_PATH}" && \
@@ -72,13 +72,13 @@ ENV PYTHONUSERBASE=${INVENIO_INSTANCE_PATH}/python
 
 # Add Invenio user Python base to global PATH
 ENV PATH=$PATH:${INVENIO_INSTANCE_PATH}/python/bin
-RUN pip install --user xrootd==${XROOTD_VERSION} xrootdpyfs==0.2.1
+RUN pip install --no-cache-dir --user xrootd==${XROOTD_VERSION} xrootdpyfs==0.2.1
 
 # Install requirements
 COPY requirements-production-local-forks.txt /tmp
 COPY requirements-production.txt /tmp
-RUN pip install --user -r /tmp/requirements-production-local-forks.txt
-RUN pip install --user -r /tmp/requirements-production.txt
+RUN pip install --no-cache-dir --user -r /tmp/requirements-production-local-forks.txt
+RUN pip install --no-cache-dir --user -r /tmp/requirements-production.txt
 
 # Add CERN Open Data Portal sources to `code` and work there
 WORKDIR ${CODE_DIR}
@@ -92,7 +92,8 @@ ARG DEBUG=""
 ENV DEBUG=${DEBUG:-""}
 
 # hadolint ignore=DL3013
-RUN if [ "$DEBUG" ]; then pip install --user -e ".[all]"; else pip install --user ".[all]"; fi;
+RUN if [ "$DEBUG" ]; then \
+ pip install --no-cache-dir --user -e ".[all]"; else pip install --no-cache-dir --user ".[all]"; fi;
 
 # Create instance
 RUN scripts/create-instance.sh
@@ -108,7 +109,8 @@ ARG UWSGI_THREADS=2
 ENV UWSGI_THREADS ${UWSGI_THREADS:-2}
 
 # Install Python packages needed for development
-RUN if [ "$DEBUG" ]; then pip install --user -r requirements-dev.txt; fi;
+RUN if [ "$DEBUG" ]; then \
+ pip install --no-cache-dir --user -r requirements-dev.txt; fi;
 
 # Start the CERN Open Data Portal application
 # hadolint ignore=DL3025