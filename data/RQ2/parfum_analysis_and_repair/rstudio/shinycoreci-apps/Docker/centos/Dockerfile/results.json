{
  "startTime": 1674251320293,
  "endTime": 1674251321256,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 56,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 5,
        "columnEnd": 62
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 2,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 31,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 5
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 143
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 5,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 5,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# To build, cd to this directory, then:\n#   docker build --build-arg GITHUB_PAT=${GITHUB_PAT} -t rstudio/shinycoreci:base-4.1-centos7 .\n\n\nARG R_VERSION=4.1\n\n# centos7\nARG RELEASE=centos7\nFROM rstudio/r-base:${R_VERSION}-${RELEASE}\nARG RELEASE=centos7\n\nMAINTAINER Barret Schloerke \"barret@rstudio.com\"\n\nRUN yum -y update && \\\n  yum -y install epel-release && \\\n  yum -y groupinstall \"Development Tools\" && rm -rf /var/cache/yum\n\n# RUN yum-builddep -y R\n\n# Create docker user with empty password (will have uid and gid 1000)\nRUN useradd --create-home --shell /bin/bash docker \\\n  && passwd docker -d \\\n  && usermod -a -G wheel docker\n\n# curl - install script below\n# vim - nice to have\n# gtest - libkml\n# expat - gdal\n# postgresql - gdal\n# proj-* - gdal\n# libXt - building R? - remove?\nRUN yum -y install \\\n  curl \\\n  expat-devel \\\n  gtest-devel \\\n  libXt-devel \\\n  postgresql-devel \\\n  proj-epsg \\\n  proj-nad \\\n  vim && rm -rf /var/cache/yum\n\n# sf is required by shiny-examples, and requires gdal > 2.0\n# gdal-devel centos package is 1.1, so we need to build libkml (a gdal dep, not\n# available as package) and then build gdal 2.4.2 ourselves\n#\n# https://gis.stackexchange.com/questions/263495/how-to-install-gdal-on-centos-7-4/263602\n# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=667247\nRUN curl -f -L -O https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/libkml/libkml-1.2.0.tar.gz \\\n  && tar -zxvf libkml-1.2.0.tar.gz \\\n  && cd libkml-1.2.0 \\\n  && sed -e '32i#include <unistd.h>' -i src/kml/base/file_posix.cc \\\n  && sed -e '435,436d' -i third_party/boost_1_34_1/boost/config/suffix.hpp \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib64 \\\n  && make -j2 \\\n  && make install && rm libkml-1.2.0.tar.gz\n\nRUN curl -f -O https://download.osgeo.org/gdal/2.2.3/gdal-2.2.3.tar.gz \\\n  && tar -zxvf gdal-2.2.3.tar.gz \\\n  && cd gdal-2.2.3 \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --libdir=/usr/lib64 --with-libkml --with-geos \\\n  && make -j2 \\\n  && make install \\\n  && echo '/usr/local/lib' >> /etc/ld.so.conf.d/libgdal-x86_64.conf \\\n  && ldconfig && rm gdal-2.2.3.tar.gz\n\n####\n# RSPM\n####\n\n# RUN mkdir -p /usr/local/lib64/R/etc\nRUN echo \"options(repos = c('https://packagemanager.rstudio.com/cran/__linux__/${RELEASE}/latest', 'https://cloud.r-project.org/'),download.file.method = 'libcurl', Ncpus = parallel::detectCores(logical=FALSE))\" >> `Rscript -e \"cat(R.home())\"`/etc/Rprofile.site\nRUN cat `Rscript -e \"cat(R.home())\"`/etc/Rprofile.site\n\nRUN R -e 'source(\"https://packagemanager.rstudio.com/__docs__/admin/check-user-agent.R\")'\n\n\n###\n# shinycoreci\n###\n\n# known deps for shinycoreci\nRUN yum install -y epel-release glpk-devel gmp-devel libcurl-devel libicu-devel libpng-devel libxml2-devel make openssl-devel pandoc zlib-devel && rm -rf /var/cache/yum\n\nARG GITHUB_PAT=NOTSUPPLIED\nENV GITHUB_PAT=$GITHUB_PAT\n\n# prep install\nRUN R --quiet -e \"install.packages('remotes')\"\nRUN R --quiet -e \"remotes::install_cran(c('knitr', 'rmarkdown', 'curl'))\"\nRUN R --quiet -e \"remotes::install_cran(c('shinytest'))\"\n# some how this package isn't a dep, but is required for a package\nRUN R --quiet -e \"remotes::install_cran(c('markdown'))\"\n\nARG SHINYCORECI_SHA=main\nARG APPS_SHA=main\n\n# install testing repo at specific sha\nRUN R --quiet -e \"remotes::install_github('rstudio/shinycoreci@${SHINYCORECI_SHA}', auth_token ='$GITHUB_PAT')\"\n\n\n###\n# shinycoreci-apps\n###\n\n# Download the repo in a temp folder, then unzip it into the home folder\nRUN mkdir -p /tmp/apps_repo && \\\n  cd /tmp/apps_repo && \\\n  wget --no-check-certificate -O _apps.zip https://github.com/rstudio/shinycoreci-apps/archive/${APPS_SHA}.zip && \\\n  unzip _apps.zip -d . && \\\n  mv */* ~\n\n# list the folders to see that it worked\nRUN ls -alh ~ && echo '' &&  ls -alh ~/apps\n# remove radiant as it has a lot of trouble being installed\nRUN rm -r ~/apps/141-radiant\n\n# install R pkg system requirements\n## Install manually until ragg / RSPM fixes it; https://github.com/r-lib/ragg/issues/41\nRUN yum install -y freetype-devel libpng-devel libtiff-devel && rm -rf /var/cache/yum\n# Must use `~/apps` as default working directory is not `~`\nRUN R --quiet -e \"system(print(shinycoreci::rspm_all_install_scripts('~/apps', release = '${RELEASE}')))\"\n\n# install r pkgs\n## install htmltools to get dev version\nRUN R --quiet -e \"remotes::install_github('rstudio/htmltools', auth_token ='${GITHUB_PAT}')\"\nRUN R --quiet -e \"shinycoreci:::update_packages_installed('~/apps')\"\n\n\n## doesn't work\n# COPY retail.c _retail.c\n# RUN gcc _retail.c -o /usr/bin/retail\n# RUN chmod +x /usr/bin/retail\n\nCOPY shiny-server.sh /usr/bin/shiny-server.sh\n\nCMD [\"/bin/bash\", \"/usr/bin/shiny-server.sh\"]\n\nRUN yum clean all\n"
}