{
  "startTime": 1674249657483,
  "endTime": 1674249658308,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 81,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 109,
        "lineEnd": 110,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 81,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 109,
        "lineEnd": 110,
        "columnStart": 22,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 81,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "# To build, cd to this directory, then:\n#   docker build -t ss-shiny-devel .\n#\n# If you are not on the master branch and would like to build with\n# shiny-examples from your branch, run:\n#  docker build --build-arg SHINY_EXAMPLES_BRANCH=$(git symbolic-ref --short -q HEAD) -t ss-shiny-devel .\n#\n# To run with the built-in shiny-examples:\n#   docker run --rm -p 3838:3838 --name ss ss-shiny-devel\n\nFROM ubuntu:18.04\n\nMAINTAINER Winston Chang \"winston@rstudio.com\"\n\n# =====================================================================\n# R\n# =====================================================================\n\n# Don't print \"debconf: unable to initialize frontend: Dialog\" messages\nARG DEBIAN_FRONTEND=noninteractive\n\n# Need this to add R repo\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;\n\n# Add R apt repository\nRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E298A3A825C0D65DFD57CBB651716619E084DAB9\nRUN add-apt-repository \"deb http://cran.r-project.org/bin/linux/ubuntu $(lsb_release -cs)-cran35/\"\n\n# Install basic stuff and R\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    sudo \\\n    locales \\\n    git \\\n    vim-tiny \\\n    less \\\n    wget \\\n    r-base \\\n    r-base-dev \\\n    r-recommended \\\n    fonts-texgyre \\\n    texinfo \\\n    locales \\\n    libudunits2-dev \\\n    libgdal-dev \\\n    libgeos-dev \\\n    libproj-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US.utf8 \\\n    && /usr/sbin/update-locale LANG=en_US.UTF-8\nENV LANG=en_US.UTF-8\n\nRUN echo 'options(\\n\\\n  repos = c(CRAN = \"https://cloud.r-project.org/\"),\\n\\\n  download.file.method = \"libcurl\",\\n\\\n  # Detect number of physical cores\\n\\\n  Ncpus = parallel::detectCores(logical=FALSE)\\n\\\n)' >> /etc/R/Rprofile.site\n\n# Install TinyTeX (subset of TeXLive)\n# From FAQ 5 and 6 here: https://yihui.name/tinytex/faq/\n# Also install ae, parskip, and listings packages to build R vignettes\nRUN wget -qO- \\\n    \"https://github.com/yihui/tinytex/raw/master/tools/install-unx.sh\" | \\\n    sh -s - --admin --no-path \\\n    && ~/.TinyTeX/bin/*/tlmgr path add \\\n    && tlmgr install metafont mfware inconsolata tex ae parskip listings \\\n    && tlmgr path add \\\n    && Rscript -e \"source('https://install-github.me/yihui/tinytex'); tinytex::r_texmf()\"\n\n# This is necessary for non-root users to follow symlinks to /root/.TinyTeX\nRUN chmod 755 /root\n\n# Create docker user with empty password (will have uid and gid 1000)\nRUN useradd --create-home --shell /bin/bash docker \\\n    && passwd docker -d \\\n    && adduser docker sudo\n\n# =====================================================================\n# Shiny Server\n# =====================================================================\n\nRUN apt-get install --no-install-recommends -y \\\n    gdebi-core \\\n    pandoc \\\n    pandoc-citeproc \\\n    libcurl4-gnutls-dev \\\n    libcairo2-dev \\\n    libxt-dev \\\n    libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Download and install shiny server\nRUN wget --no-verbose https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-14.04/x86_64/VERSION -O \"version.txt\" && \\\n    VERSION=$(cat version.txt)  && \\\n    wget --no-verbose \"https://s3.amazonaws.com/rstudio-shiny-server-os-build/ubuntu-14.04/x86_64/shiny-server-$VERSION-amd64.deb\" -O ss-latest.deb && \\\n    gdebi -n ss-latest.deb && \\\n    rm -f version.txt ss-latest.deb && \\\n    R -e \"install.packages(c('shiny', 'rmarkdown'))\" && \\\n    cp -R /usr/local/lib/R/site-library/shiny/examples/* /srv/shiny-server/\n\nEXPOSE 3838\n\nCOPY shiny-server.sh /usr/bin/shiny-server.sh\n\nCMD [\"/usr/bin/shiny-server.sh\"]\n\n# =====================================================================\n# Shiny Examples\n# =====================================================================\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN R -e \"install.packages(c('devtools', 'packrat'))\"\n\n# For deploying apps from a container\nRUN R -e \"devtools::install_github('rstudio/rsconnect')\"\n\n# Install shiny-examples, and fix permissions for apps that require write\n# access.\nARG SHINY_EXAMPLES_BRANCH=master\nENV SHINY_EXAMPLES_BRANCH=$SHINY_EXAMPLES_BRANCH\nRUN cd /srv && \\\n    mv shiny-server shiny-server-orig && \\\n    wget -nv https://github.com/rstudio/shiny-examples/archive/${SHINY_EXAMPLES_BRANCH}.zip && \\\n    unzip -x ${SHINY_EXAMPLES_BRANCH}.zip && \\\n    mv shiny-examples-${SHINY_EXAMPLES_BRANCH} shiny-server && \\\n    rm ${SHINY_EXAMPLES_BRANCH}.zip && \\\n    cd shiny-server && \\\n    chmod 777 022-unicode-chinese 055-observer-demo 059-reactive-poll-and-file-reader\n\n# Packages that need to be installed from GitHub\nRUN R -e 'source(\"/srv/shiny-server/install_deps.R\", echo = TRUE)'\n"
}