{
  "startTime": 1674253068367,
  "endTime": 1674253069473,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 23,
        "columnEnd": 51
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 9,
        "columnEnd": 36
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 9,
        "columnEnd": 40
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 10,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rockylinux/rockylinux:8\n\nENV OPERATING_SYSTEM=rockylinux_8\n\nRUN set -x \\\n      && yum install epel-release -y \\\n      && yum install dnf-plugins-core -y \\ \n      && yum config-manager --set-enabled powertools \\\n      && yum update -y && rm -rf /var/cache/yum\n\nRUN yum install -y \\\n    ant \\\n    boost-devel \\\n    bzip2-devel \\\n    clang-devel \\\n    expect \\\n    fakeroot \\\n    fuse-libs \\\n    gcc \\\n    gcc-c++ \\\n    gdb \\\n    git \\\n    gtk3 \\\n    java-1.8.0-openjdk \\\n    java-1.8.0-openjdk-devel \\\n    jq \\\n    libcurl-devel \\\n    libacl-devel \\\n    libcap-devel \\\n    libpq-devel \\\n    libuser \\\n    libuuid-devel \\\n    libxml2-devel \\\n    libXcursor-devel \\\n    libXrandr-devel \\\n    libXScrnSaver-devel \\\n    llvm-devel \\\n    lsof \\\n    make \\\n    ninja-build \\\n    mesa-libGL-devel \\\n    openssl-devel \\\n    p7zip \\\n    p7zip-plugins \\\n    pam-devel \\\n    pango-devel \\\n    patchelf \\\n    postgresql-devel \\\n    python2 \\\n    python3 \\\n    R \\\n    rpmdevtools \\\n    rpm-sign \\\n    sqlite-devel \\\n    sudo \\\n    valgrind \\\n    wget \\\n    xorg-x11-server-Xvfb \\\n    zlib-devel && rm -rf /var/cache/yum\n\n# copy RStudio tools (needed so that our other dependency scripts can find it)\nRUN mkdir -p /tools\nCOPY dependencies/tools/rstudio-tools.sh /tools/rstudio-tools.sh\n\nRUN mkdir -p /opt/rstudio-tools/dependencies/tools\nCOPY dependencies/tools/rstudio-tools.sh /opt/rstudio-tools/dependencies/tools/rstudio-tools.sh\n\n# run install-boost twice - boost exits 1 even though it has installed good enough for our uses.\n# https://github.com/rstudio/rstudio/blob/master/vagrant/provision-primary-user.sh#L12-L15\nCOPY dependencies/common/install-boost /tmp/\nRUN bash /tmp/install-boost || bash /tmp/install-boost\n\n# install cmake\nCOPY package/linux/install-dependencies /tmp/\nRUN bash /tmp/install-dependencies\n\n# copy python2 to python so that it can be picked up by Google scripts\nRUN cp /usr/bin/python2 /usr/bin/python\n\n# install crashpad and its dependencies\nCOPY dependencies/common/install-crashpad /tmp/\nRUN bash /tmp/install-crashpad rhel8\n\n# copy common dependency installation scripts\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY dependencies/common/ /opt/rstudio-tools/dependencies/common/\n\n# copy panmirror project setup (so install-common can install needed deps)\nRUN mkdir -p /opt/rstudio-tools/panmirror\nCOPY src/gwt/panmirror/src/editor/yarn.lock /opt/rstudio-tools/panmirror/\nCOPY src/gwt/panmirror/src/editor/package.json /opt/rstudio-tools/panmirror/\n\n# install common dependencies\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-common rhel8\n\n# get libuser header files (libuser-devel not currently available on rhel8)\nRUN wget https://pagure.io/libuser/archive/libuser-0.62/libuser-libuser-0.62.tar.gz\nRUN tar zxvf libuser-libuser-0.62.tar.gz && rm libuser-libuser-0.62.tar.gz\nRUN mkdir -p /usr/include/libuser\nRUN cp libuser-libuser-0.62/lib/*.h /usr/include/libuser\n\n# build and install gpg1.4 which we need to sign the builds in headless mode\n# this is unavailable in the official rhel8 repos\nRUN wget https://gnupg.org/ftp/gcrypt/gnupg/gnupg-1.4.23.tar.bz2\nRUN tar xvf gnupg-1.4.23.tar.bz2 && rm gnupg-1.4.23.tar.bz2\nRUN cd gnupg-1.4.23 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/gnupg1 && make && make install\nRUN ln -s /gnupg1/bin/gpg /usr/local/bin/gpg1\n\n# cachebust for Quarto release\nADD https://quarto.org/docs/download/_download.json quarto_releases\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-quarto\n\n# set github login from build argument if defined\nARG GITHUB_LOGIN\nENV RSTUDIO_GITHUB_LOGIN=$GITHUB_LOGIN\n\n# remove any previous users with conflicting IDs\nARG JENKINS_GID=999\nARG JENKINS_UID=999\nCOPY docker/jenkins/*.sh /tmp/\nRUN /tmp/clean-uid.sh $JENKINS_UID && \\\n    /tmp/clean-gid.sh $JENKINS_GID\n\n# create jenkins user, make sudo. try to keep this toward the bottom for less cache busting\nRUN groupadd -g $JENKINS_GID jenkins && \\\n    useradd -m -d /var/lib/jenkins -u $JENKINS_UID -g jenkins jenkins && \\\n    echo \"jenkins ALL=(ALL) NOPASSWD: ALL\" >> /etc/sudoers\n"
}