diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rstudio/rstudio/docker/jenkins/Dockerfile.rhel8-x86_64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rstudio/rstudio/docker/jenkins/Dockerfile.rhel8-x86_64/repaired.Dockerfile
index ef1da15..7d43204 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rstudio/rstudio/docker/jenkins/Dockerfile.rhel8-x86_64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rstudio/rstudio/docker/jenkins/Dockerfile.rhel8-x86_64/repaired.Dockerfile
@@ -6,7 +6,7 @@ RUN set -x \
       && yum install epel-release -y \
       && yum install dnf-plugins-core -y \ 
       && yum config-manager --set-enabled powertools \
-      && yum update -y
+      && yum update -y && rm -rf /var/cache/yum
 
 RUN yum install -y \
     ant \
@@ -26,7 +26,7 @@ RUN yum install -y \
     jq \
     libcurl-devel \
     libacl-devel \
-    libcap-devel \ 
+    libcap-devel \
     libpq-devel \
     libuser \
     libuuid-devel \
@@ -56,7 +56,7 @@ RUN yum install -y \
     valgrind \
     wget \
     xorg-x11-server-Xvfb \
-    zlib-devel
+    zlib-devel && rm -rf /var/cache/yum
 
 # copy RStudio tools (needed so that our other dependency scripts can find it)
 RUN mkdir -p /tools
@@ -95,16 +95,16 @@ RUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-common rhel
 
 # get libuser header files (libuser-devel not currently available on rhel8)
 RUN wget https://pagure.io/libuser/archive/libuser-0.62/libuser-libuser-0.62.tar.gz
-RUN tar zxvf libuser-libuser-0.62.tar.gz
+RUN tar zxvf libuser-libuser-0.62.tar.gz && rm libuser-libuser-0.62.tar.gz
 RUN mkdir -p /usr/include/libuser
-RUN cp libuser-libuser-0.62/lib/*.h /usr/include/libuser 
+RUN cp libuser-libuser-0.62/lib/*.h /usr/include/libuser
 
 # build and install gpg1.4 which we need to sign the builds in headless mode
 # this is unavailable in the official rhel8 repos
 RUN wget https://gnupg.org/ftp/gcrypt/gnupg/gnupg-1.4.23.tar.bz2
-RUN tar xvf gnupg-1.4.23.tar.bz2
-RUN cd gnupg-1.4.23 && ./configure --prefix=/gnupg1 && make && make install
-RUN ln -s /gnupg1/bin/gpg /usr/local/bin/gpg1 
+RUN tar xvf gnupg-1.4.23.tar.bz2 && rm gnupg-1.4.23.tar.bz2
+RUN cd gnupg-1.4.23 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/gnupg1 && make && make install
+RUN ln -s /gnupg1/bin/gpg /usr/local/bin/gpg1
 
 # cachebust for Quarto release
 ADD https://quarto.org/docs/download/_download.json quarto_releases