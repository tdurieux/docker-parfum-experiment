{
  "startTime": 1674216395421,
  "endTime": 1674216396720,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 151,
        "lineEnd": 151,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 157,
        "lineEnd": 157,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nARG USERNAME=rstudio\nARG USER_UID=1000\nARG USER_GID=$USER_UID\n\nRUN apt-get update && \\\n    export DEBIAN_FRONTEND=noninteractive && \\\n    apt-get install --no-install-recommends -y \\\n    ant \\\n    build-essential \\\n    clang \\\n    cmake \\\n    curl \\\n    debsigs \\\n    docker.io \\\n    dpkg-sig \\\n    expect \\\n    fakeroot \\\n    gdebi-core \\\n    git \\\n    gnupg1 \\\n    iproute2 \\\n    libacl1-dev \\\n    libattr1-dev \\\n    libbz2-dev \\\n    libcap-dev \\\n    libclang-6.0-dev \\\n    libclang-dev \\\n    libcurl4-openssl-dev \\\n    libegl1-mesa \\\n    libfuse2 \\\n    libgl1-mesa-dev \\\n    libgtk-3-0 \\\n    libnss3 \\\n    libpam-dev \\\n    libpango1.0-dev \\\n    libpq-dev \\\n    libsqlite3-dev \\\n    libssl-dev \\\n    libuser1-dev \\\n    libxml2-dev \\\n    libxslt1-dev \\\n    locales \\\n    lsof \\\n    ninja-build \\\n    p7zip-full \\\n    patchelf \\\n    pkg-config \\\n    python \\\n    python3 \\\n    python3-venv \\\n    r-base \\\n    rrdtool \\\n    software-properties-common \\\n    sudo \\\n    unzip \\\n    uuid \\\n    uuid-dev \\\n    valgrind \\\n    vim \\\n    wget \\\n    xvfb \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\n# Java 8 and 11 (not in official repo for focal)\nRUN add-apt-repository -y ppa:openjdk-r/ppa && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk openjdk-11-jdk && rm -rf /var/lib/apt/lists/*;\nRUN update-alternatives --set java /usr/lib/jvm/java-8-openjdk-$(dpkg --print-architecture)/jre/bin/java\n\n# copy common dependency installation scripts\nRUN mkdir -p /opt/rstudio-tools/dependencies/linux\nRUN mkdir -p /opt/rstudio-tools/dependencies/tools\nRUN mkdir -p /opt/rstudio-tools/dependencies/common\nCOPY ./dependencies/tools/rstudio-tools.sh /opt/rstudio-tools/dependencies/tools/\n\n# copy panmirror project setup (so install-common can install needed deps)\nRUN mkdir -p /opt/rstudio-tools/panmirror\nCOPY ./src/gwt/panmirror/src/editor/yarn.lock /opt/rstudio-tools/panmirror/\nCOPY ./src/gwt/panmirror/src/editor/package.json /opt/rstudio-tools/panmirror/\n\n# install common dependencies\n# here, we deviate from the typical \"./install-common\" script and instead\n# call the individual dependency scripts for better layer caching.\n\n# crashpad\nCOPY ./dependencies/common/install-crashpad /opt/rstudio-tools/dependencies/common\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-crashpad bionic\n\n# dictionaries\nCOPY ./dependencies/common/install-dictionaries /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-dictionaries\n\n# mathjax\nCOPY ./dependencies/common/install-mathjax /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-mathjax\n\n# boost\nCOPY ./dependencies/common/install-boost /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-boost\n\n# pandoc\nCOPY ./dependencies/common/install-pandoc /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-pandoc\n\n# R packages\nCOPY ./dependencies/common/install-packages /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-packages\n\n# sentry\nCOPY ./dependencies/common/install-sentry-cli /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-sentry-cli\n\n# NPM dependencies\nCOPY ./dependencies/common/install-npm-dependencies /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-npm-dependencies\n\n# soci\nCOPY ./dependencies/common/install-soci /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-soci\n\n# yaml-cpp\nCOPY ./dependencies/common/install-yaml-cpp /opt/rstudio-tools/dependencies/common/\nRUN cd /opt/rstudio-tools/dependencies/common && /bin/bash ./install-yaml-cpp\n\n# Qt SDK\nCOPY ./dependencies/common/install-qt.sh /opt/rstudio-tools/dependencies/linux\nCOPY ./dependencies/linux/install-qt-linux /opt/rstudio-tools/dependencies/linux\n\n# Create the user\nRUN groupadd --gid $USER_GID $USERNAME \\\n    && useradd --uid $USER_UID --gid $USER_GID -m $USERNAME \\\n    && echo $USERNAME ALL=\\(root\\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME \\\n    && chmod 0440 /etc/sudoers.d/$USERNAME \\\n    && echo \"$USERNAME:$USERNAME\" | sudo chpasswd\n\n# Create config folder. The postCreateCommand in devcontainer.json will link the config\nRUN mkdir /etc/rstudio\n\n# Create the secure cookie key\nRUN sh -c \"echo `uuid` > /etc/rstudio/secure-cookie-key\"\nRUN chmod 0600 /etc/rstudio/secure-cookie-key\n\n# Install AWS CLI v2\nRUN curl -f \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\" && \\\n    unzip awscliv2.zip && \\\n    ./aws/install && \\\n    rm -rf awscliv2.zip aws\n\n# Install docker-compose\nRUN curl -f -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nRUN chmod +x /usr/local/bin/docker-compose\n\nUSER ${USERNAME}\n"
}