{
  "startTime": 1674249805756,
  "endTime": 1674249807154,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 21,
        "columnEnd": 98
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 55
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://docs.aws.amazon.com/lambda/latest/dg/images-create.html\n\nARG BASE_IMAGE=\"public.ecr.aws/lambda/nodejs:14-arm64\"\nFROM $BASE_IMAGE\n\nWORKDIR /runner\n\n# install extra certificates\nCOPY extra_certs/. /tmp/certs/\nRUN if [ -f /tmp/certs/certs.pem ]; then cp /tmp/certs/certs.pem /etc/pki/ca-trust/source/anchors/ghe.crt; update-ca-trust; else echo no self-signed certificates; fi\n\n# add dependencies\nARG EXTRA_PACKAGES=\"\"\nRUN yum update -y && yum install -y jq tar gzip bzip2 which binutils git zip unzip $EXTRA_PACKAGES && rm -rf /var/cache/yum\n\n# add awscli\nRUN curl -fsSL \"https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip\" -o awscliv2.zip && \\\n    unzip -q awscliv2.zip && ./aws/install && rm -rf awscliv2.zip aws\n\n# add ghcli\nRUN curl -fsSSL https://cli.github.com/packages/rpm/gh-cli.repo -o /etc/yum.repos.d/gh-cli.repo && \\\n    yum install -y gh && rm -rf /var/cache/yum\n\n# add runner without github's api which is rate limited\nARG RUNNER_VERSION=latest\nRUN if [ \"${RUNNER_VERSION}\" = \"latest\" ]; then RUNNER_VERSION=`curl  -w \"%{redirect_url}\" -fsS https://github.com/actions/runner/releases/latest | grep -oE \"[^/v]+$\"`; fi && \\\n    curl -fsSLO  \"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\" && \\\n    tar xzf \"actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\" && \\\n    rm actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz && \\\n    yum install -y openssl-libs krb5-libs zlib libicu60 && rm -rf /var/cache/yum\n# doesn't work on CentOS - RUN ./bin/installdependencies.sh\n\n# prepare for execution\nWORKDIR ${LAMBDA_TASK_ROOT}\nCOPY runner.js runner.sh ${LAMBDA_TASK_ROOT}/\nCMD [\"runner.handler\"]\n"
}