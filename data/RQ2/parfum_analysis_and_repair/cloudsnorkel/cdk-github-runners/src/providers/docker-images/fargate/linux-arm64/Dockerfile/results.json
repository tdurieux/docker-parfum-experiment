{
  "startTime": 1674256229493,
  "endTime": 1674256230135,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 44,
        "columnEnd": 149
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 57,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 44,
        "columnEnd": 149
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 57,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=\"public.ecr.aws/lts/ubuntu:20.04\"\nFROM $BASE_IMAGE\n\n# setup user\nRUN addgroup runner && adduser --system --disabled-password --home /home/runner --ingroup runner runner\n\n# add dependencies and sudo\nARG EXTRA_PACKAGES=\"\"\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y curl sudo jq bash zip unzip software-properties-common ca-certificates $EXTRA_PACKAGES && \\\n    usermod -aG sudo runner && \\\n    echo \"%sudo   ALL=(ALL:ALL) NOPASSWD: ALL\" > /etc/sudoers.d/runner && rm -rf /var/lib/apt/lists/*;\n\n# install extra certificates\nCOPY extra_certs/. /tmp/certs/\nRUN if [ -f /tmp/certs/certs.pem ]; then cp /tmp/certs/certs.pem /usr/local/share/ca-certificates/github-enterprise-server.crt; update-ca-certificates; else echo no self-signed certificates; fi\n\n# add latest git\nRUN add-apt-repository ppa:git-core/ppa && apt update && apt-get install --no-install-recommends -y git && rm -rf /var/lib/apt/lists/*;\n\n# add awscli\nRUN curl -fsSL \"https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip\" -o awscliv2.zip && \\\n    unzip -q awscliv2.zip && ./aws/install && rm -rf awscliv2.zip aws\n\n# add ghcli\nRUN curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg && \\\n    echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main\" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null  && \\\n    apt update && \\\n    apt install --no-install-recommends -y gh && rm -rf /var/lib/apt/lists/*;\n\n# setup working directory\nWORKDIR /home/runner\n\n# add runner without github's api which is rate limited\nARG RUNNER_VERSION=latest\nRUN if [ \"${RUNNER_VERSION}\" = \"latest\" ]; then RUNNER_VERSION=`curl  -w \"%{redirect_url}\" -fsS https://github.com/actions/runner/releases/latest | grep -oE \"[^/v]+$\"`; fi && \\\n    curl -fsSLO  \"https://github.com/actions/runner/releases/download/v${RUNNER_VERSION}/actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\" && \\\n    tar xzf \"actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz\" && \\\n    rm actions-runner-linux-arm64-${RUNNER_VERSION}.tar.gz && \\\n    ./bin/installdependencies.sh\n\n# configure runner\nUSER runner\n\nADD runner.sh .\nCMD [\"bash\", \"/home/runner/runner.sh\"]\n"
}