{
  "startTime": 1674255783643,
  "endTime": 1674255783988,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile created by following official FastAPI tutorial:\n# https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker\n#\n# Usage:\n#     Build Args:\n#         ROOTSKI_API_BUILD:\n#             Should be one of two things:\n#             (1) \"\" (default) an empty string. Only installs production dependencies.\n#             (2) \"[all]\" installs testing/linting/database dependencies in addition\n#                 to produciton dependencies.\n#\n#     Volumes:\n#          /usr/src/app - the contents of the rootski_api/ folder\n#\n#     Manually Build, Run, and Attach:\n#          # from rootski_api/\n#          docker build -t rootski_api --build-arg=\"[all]\" .\n#          docker run --rm -v \"$PWD\":/usr/src/app/rootski_api \\\n#              -it --entrypoint /bin/bash rootski_api\n\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.9\n\nARG ROOTSKI_EXTRAS=\"\"\n\nWORKDIR /usr/src/rootski\n\n# install rootski dependencies\nCOPY setup.cfg setup.py ./\nRUN mkdir -p src\nRUN pip install --no-cache-dir -U pip\nRUN python3 -m pip install -e .${ROOTSKI_EXTRAS}\n\n# copy in the code base\nCOPY . .\n\nENV ROOTSKI__NUM_WORKERS=1\nENV ROOTSKI__HOST=\"0.0.0.0\"\nENV ROOTSKI__PORT=\"80\"\n\n# CMD uvicorn \"rootski.main.main:create_default_app\" --factory --workers ${NUM_WORKERS} --host ${ROOTSKI__HOST} --port ${ROOTSKI__PORT}\n\n# fastapi recommends using gunicorn if you can:\n# https://github.com/tiangolo/uvicorn-gunicorn-fastapi-docker#gunicorn\nCMD gunicorn \"rootski.main.main:create_default_app()\" \\\n    --worker-class uvicorn.workers.UvicornWorker \\\n    --workers ${ROOTSKI__NUM_WORKERS} \\\n    --bind ${ROOTSKI__HOST}:${ROOTSKI__PORT} \\\n    --reload\n"
}