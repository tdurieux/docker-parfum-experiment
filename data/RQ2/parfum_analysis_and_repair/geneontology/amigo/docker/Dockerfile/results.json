{
  "startTime": 1674254472471,
  "endTime": 1674254473741,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 47,
        "columnStart": 26,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 47,
        "columnStart": 26,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 56
      }
    }
  ],
  "repairedDockerfile": "####\n#### This docker file is trying to run and install AmiGO/GOlr\n#### minimally as root on localhost:\n####\n#### Build (from repo root):\n####   docker build -t geneontology/amigo-standalone:latest -t geneontology/amigo-standalone:`git log | head -1 | cut -d ' ' -f 2`_`date +%Y-%m-%dT%H%M%S` docker/amigo-standalone\n####\n#### To push:\n####  docker push geneontology/amigo-standalone:latest\n####  docker push geneontology/amigo-standalone:636b4aea877d2585be8d5e2d26f1a59422e43c45_2019-06-05T195931\n####\n#### Run with ports exposed:\n####  docker run -p 8080:8080 -p 9999:9999 -v /tmp/srv-solr-data:/srv/solr/data -t geneontology/amigo-standalone:636b4aea877d2585be8d5e2d26f1a59422e43c45_2019-06-05T195931\n####\n#### Check on AmiGO and with port exposed:\n####  docker run -it -p 9999:9999 -p 8080:8080 -v /tmp/srv-solr-data:/srv/solr/data geneontology/amigo-standalone:636b4aea877d2585be8d5e2d26f1a59422e43c45_2019-06-05T195931 /bin/bash\n####\n\n## Grab the latest(?) Ubuntu image.\nFROM ubuntu:18.04\n\n## Quiet it down a little bit.\nENV DEBIAN_FRONTEND noninteractive\nENV TERM linux\n\n###\n### Packages, repos, and location.\n###\n\n## Get the system updated and QoL.\nRUN apt-get -qq update && apt-get -qq --no-install-recommends -y install \\\n\tlibterm-readline-gnu-perl apt-utils \\\n\tsoftware-properties-common netcat rsync \\\n\tbuild-essential wget curl pigz subversion \\\n\tless mg byobu htop iotop di git make kwalify vim \\\n\tlibcgi-application-perl \\\n\tlibcgi-application-plugin-session-perl \\\n\tlibcgi-application-plugin-tt-perl \\\n\tlibcgi-application-server-perl \\\n\tlibclone-perl libconfig-yaml-perl libdbi-perl \\\n\tlibdbd-sqlite3-perl libdbd-mysql-perl \\\n\tlibdata-formvalidator-perl libossp-uuid-perl \\\n\tlibfile-type-perl libfile-slurp-perl \\\n\tlibfreezethaw-perl libgraph-perl libgraphviz-perl \\\n\tlibjson-xs-perl liburi-perl libwww-mechanize-perl \\\n\tliburi-encode-perl libxml-libxml-perl libxml-xpath-perl \\\n\tdh-make-perl apache2 openjdk-8-jdk openjdk-8-jre jetty9 \\\n        monit psmisc logrotate && rm -rf /var/lib/apt/lists/*;\n\nRUN echo \"#!/bin/sh\\nexit 0\" > /usr/sbin/policy-rc.d \\\n    && rm -rf /var/log && mkdir -p /var/log\n\n## AmiGO weirdness.\nADD docker/libsql-tokenizer-perl_0.24-2_all.deb /tmp/libsql-tokenizer-perl_0.24-2_all.deb\nRUN dpkg -i /tmp/libsql-tokenizer-perl_0.24-2_all.deb\n\n## Node.\nRUN curl -f -sL https://deb.nodesource.com/setup_8.x | bash - \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && apt-get -qq purge && apt-get -qq clean && rm -rf /var/lib/apt/lists/*\n\n## Grab the AmiGO/GOlr repo and change context.\nRUN mkdir -p /srv\nUSER root:www-data\n# RUN git clone https://github.com/geneontology/amigo.git --branch master --single-branch /srv/amigo\nADD . /srv/amigo\nWORKDIR /srv/amigo\n# RUN git pull\nUSER root\n\n###\n### Apache.\n###\n\n## Get apache setup as a generic worker. Installation grouped above.\nRUN a2dismod mpm_event mpm_worker \\\n    && a2enmod mpm_prefork \\\n    && a2dismod cgid mpm_event mpm_worker \\\n    && a2enmod alias mpm_prefork cgi rewrite proxy proxy_http proxy_html macro headers xml2enc\n\n###\n### GOlr/Jetty.\n###\n\n## GOlr/Jetty setup. Installation grouped above.\nRUN cp ./golr/solr/solr.war /var/lib/jetty9/webapps/ \\\n    && chown jetty /var/lib/jetty9/webapps/solr.war \\\n    && chgrp adm /var/lib/jetty9/webapps/solr.war \\\n    && cp ./golr/jetty/jetty /etc/default/jetty9 \\\n    && mkdir -p /srv/solr/data \\\n    && mkdir -p /srv/solr/conf \\\n    && cp ./golr/solr/conf/schema.xml /srv/solr/conf/schema.xml \\\n    && cp ./golr/solr/conf/solrconfig.xml /srv/solr/conf/solrconfig.xml \\\n    && chown -R jetty /srv/solr/ \\\n    && chgrp -R adm /srv/solr/\n\n## Custom runtime locations for jetty9/solr for the Docker environment.\nRUN mkdir -p /tmp/jetty9 \\\n    && chown -R jetty /tmp/jetty9 \\\n    && chgrp -R adm /tmp/jetty9\n\n###\n### AmiGO.\n###\n\n## Final Apache setup.\n## Get AmiGO docker config into place.\nRUN cp ./conf/examples/apache2.18_04.localhost_root.conf /etc/apache2/sites-available/001-inline-amigo.conf \\\n    && cp /srv/amigo/conf/examples/apache2.ports.conf /etc/apache2/ports.conf \\\n    && a2ensite 001-inline-amigo \\\n    && cp ./conf/examples/amigo.yaml.localhost_docker_loader ./conf/amigo.yaml\n\n## AmiGO install.\nUSER root:www-data\nRUN npm install && ./node_modules/.bin/gulp install && npm cache clean --force;\nUSER root\n\n## The root environment seems to do something funny with the perl5\n## execution path; modify tp make sure everybody can get at it.\nRUN sed -i s,config.pl,/srv/amigo/perl/bin/config.pl,g /srv/amigo/perl/bin/* \\\n    && sed -i s,config.pl,/srv/amigo/perl/bin/config.pl,g /srv/amigo/perl/lib/AmiGO.pm\n\n###\n### Finally.\n###\n\n##\nEXPOSE 8080 9999\n#WORKDIR /usr/share/jetty9\n\n#ADD docker/run-apache-solr.sh /tmp/run-apache-solr.sh\n#RUN [\"chmod\", \"+x\", \"/tmp/run-apache-solr.sh\"]\n#CMD \"/tmp/run-apache-solr.sh\"\n\nENV GOLR_SOLR_MEMORY=4G\nCOPY ./docker/entrypoint.sh /\nCOPY ./docker/run-golr.sh /\nRUN chmod +x /entrypoint.sh /run-golr.sh && md5sum ./conf/amigo.yaml > amigo-hash\nCOPY ./docker/java-golr-monit /etc/monit/conf-enabled/java\nCOPY ./docker/java-golr-monit /etc/monit/conf-enabled/java\nCOPY ./docker/console-capture-golr.xml /etc/jetty9/console-capture.xml\nENTRYPOINT [ \"/entrypoint.sh\" ]\nCMD [\"tail\", \"-f\", \"/dev/null\" ]\n"
}