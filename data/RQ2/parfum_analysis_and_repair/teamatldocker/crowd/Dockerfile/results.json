{
  "startTime": 1674218783599,
  "endTime": 1674218784972,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 54,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM blacklabelops/java:openjdk.8\nMAINTAINER Steffen Bleul <sbl@blacklabelops.com>\n\nARG CROWD_VERSION=3.3.5\n# permissions\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n# Image Build Date By Buildsystem\nARG BUILD_DATE=undefined\n\nENV CROWD_HOME=/var/atlassian/crowd \\\n    CROWD_INSTALL=/opt/crowd \\\n    CROWD_PROXY_NAME= \\\n    CROWD_PROXY_PORT= \\\n    CROWD_PROXY_SCHEME= \\\n    KEYSTORE=$JAVA_HOME/jre/lib/security/cacerts\n\nADD splash-context.xml /opt/crowd/webapps/splash.xml\n\nRUN export MYSQL_DRIVER_VERSION=5.1.44 && \\\n    export CONTAINER_USER=crowd &&  \\\n    export CONTAINER_GROUP=crowd &&  \\\n    addgroup -g $CONTAINER_GID $CONTAINER_GROUP &&  \\\n    adduser -u $CONTAINER_UID \\\n            -G $CONTAINER_GROUP \\\n            -h /home/$CONTAINER_USER \\\n            -s /bin/bash \\\n            -S $CONTAINER_USER &&  \\\n    apk add --update \\\n      ca-certificates \\\n      gzip \\\n      curl \\\n      su-exec \\\n      wget &&  \\\n    # Install xmlstarlet\n    export XMLSTARLET_VERSION=1.6.1-r1              &&  \\\n    wget --directory-prefix=/tmp https://github.com/menski/alpine-pkg-xmlstarlet/releases/download/${XMLSTARLET_VERSION}/xmlstarlet-${XMLSTARLET_VERSION}.apk && \\\n    apk add --allow-untrusted /tmp/xmlstarlet-${XMLSTARLET_VERSION}.apk && \\\n    wget -O /tmp/crowd.tar.gz https://www.atlassian.com/software/crowd/downloads/binary/atlassian-crowd-${CROWD_VERSION}.tar.gz && \\\n    tar zxf /tmp/crowd.tar.gz -C /tmp && \\\n    ls -A /tmp && \\\n    mv /tmp/atlassian-crowd-${CROWD_VERSION} /tmp/crowd && \\\n    ls -A /tmp && \\\n    mkdir -p /opt && \\\n    mv /tmp/crowd/* /opt/crowd && \\\n    mkdir -p ${CROWD_HOME} && \\\n    mkdir -p ${CROWD_INSTALL}/crowd-webapp/WEB-INF/classes && \\\n    mkdir -p ${CROWD_INSTALL}/apache-tomcat/lib && \\\n    mkdir -p ${CROWD_INSTALL}/apache-tomcat/webapps/ROOT && \\\n    mkdir -p ${CROWD_INSTALL}/apache-tomcat/conf/Catalina/localhost && \\\n    echo \"crowd.home=${CROWD_HOME}\" > ${CROWD_INSTALL}/crowd-webapp/WEB-INF/classes/crowd-init.properties && \\\n    # Install database drivers\n    rm -f \\\n      ${CROWD_INSTALL}/apache-tomcat/lib/mysql-connector-java*.jar && \\\n    wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz \\\n      https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz && \\\n    tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz \\\n      -C /tmp && \\\n    cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar \\\n      ${CROWD_INSTALL}/apache-tomcat/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar && \\\n    # Adjusting directories\n    mv ${CROWD_INSTALL}/apache-tomcat/webapps/ROOT /opt/crowd/splash-webapp && \\\n    mv ${CROWD_INSTALL}/apache-tomcat/conf/Catalina/localhost/* /opt/crowd/webapps && \\\n    # Adding letsencrypt-ca to truststore\n    wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der && \\\n    # Install atlassian ssl tool\n    wget -O /home/${CONTAINER_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class && \\\n    chown -R crowd:crowd /home/${CONTAINER_USER} && \\\n    chown -R crowd:crowd ${CROWD_HOME} && \\\n    chown -R crowd:crowd ${CROWD_INSTALL} && \\\n    # Install Tini Zombie Reaper And Signal Forwarder\n    export TINI_VERSION=0.9.0 && \\\n    curl -fsSL https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini-static -o /bin/tini && \\\n    chmod +x /bin/tini && \\\n    # Remove obsolete packages\n    apk del \\\n      ca-certificates \\\n      gzip \\\n      wget && \\\n    # Clean caches and tmps\n    rm -rf /var/cache/apk/* && \\\n    rm -rf /tmp/* && \\\n    rm -rf /var/log/* && rm /tmp/crowd.tar.gz\n\nENV CROWD_URL=http://localhost:8095/crowd \\\n    LOGIN_BASE_URL=http://localhost:8095 \\\n    CROWD_CONTEXT=crowd \\\n    CROWDID_CONTEXT=openidserver \\\n    OPENID_CLIENT_CONTEXT=openidclient \\\n    SPLASH_CONTEXT=ROOT\n\n# Image Metadata\nLABEL com.blacklabelops.application.crowd.version=$CROWD_VERSION \\\n      com.blacklabelops.application.crowd.userid=$CONTAINER_UID \\\n      com.blacklabelops.application.crowd.groupid=$CONTAINER_GID \\\n      com.blacklabelops.image.builddate.crowd=${BUILD_DATE}\n\nWORKDIR /var/atlassian/crowd\nVOLUME [\"/var/atlassian/crowd\"]\nEXPOSE 8095\nCOPY imagescripts /home/crowd\nENTRYPOINT [\"/bin/tini\",\"--\",\"/home/crowd/docker-entrypoint.sh\"]\nCMD [\"crowd\"]\n"
}