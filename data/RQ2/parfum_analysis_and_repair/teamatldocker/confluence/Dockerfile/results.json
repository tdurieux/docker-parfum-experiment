{
  "startTime": 1674217736184,
  "endTime": 1674217737155,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 106
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 78,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 13
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM adoptopenjdk/openjdk8:alpine\n# this image already contains glibc\n\nARG CONFLUENCE_VERSION=7.12.5\n\n# permissions\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n\n# Language Settings\nARG LANG_LANGUAGE=en\nARG LANG_COUNTRY=US\n\n# Setup useful environment variables\nENV CONF_HOME=/var/atlassian/confluence \\\n    CONF_INSTALL=/opt/atlassian/confluence \\\n    MYSQL_DRIVER_VERSION=5.1.47\n\n# Install Atlassian Confluence\nRUN export CONTAINER_USER=confluence                        && \\\n    export CONTAINER_GROUP=confluence                       && \\\n    addgroup -g $CONTAINER_GID $CONTAINER_GROUP             && \\\n    adduser -u $CONTAINER_UID                                  \\\n            -G $CONTAINER_GROUP                                \\\n            -h /home/$CONTAINER_USER                           \\\n            -s /bin/bash                                       \\\n            -S $CONTAINER_USER                                 \\\n    # glibc and pub key already installed by parent image; we need to install latest bin and i18n \\\n    && export GLIBC_VERSION=2.32-r0                            \\\n    && export GLIBC_DOWNLOAD_URL=https://github.com/sgerrand/alpine-pkg-glibc/releases/download/$GLIBC_VERSION \\\n    && export GLIBC_BIN=glibc-bin-$GLIBC_VERSION.apk           \\\n    && export GLIBC_I18N=glibc-i18n-$GLIBC_VERSION.apk         \\\n    && apk add --update --no-cache --upgrade                   \\\n        ssl_client                                             \\\n        ca-certificates                                        \\\n    && wget -O $GLIBC_BIN $GLIBC_DOWNLOAD_URL/$GLIBC_BIN       \\\n    && wget -O $GLIBC_I18N $GLIBC_DOWNLOAD_URL/$GLIBC_I18N     \\\n    && apk add --update --no-cache                             \\\n        gzip                                                   \\\n        curl                                                   \\\n        tar                                                    \\\n        bash                                                   \\\n        su-exec                                                \\\n        tini                                                   \\\n        xmlstarlet                                             \\\n        msttcorefonts-installer                                \\\n        ttf-dejavu                                             \\\n        fontconfig                                             \\\n        ghostscript                                            \\\n        graphviz                                               \\\n        motif\t                                                 \\\n        wget                                                   \\\n        $GLIBC_BIN                                             \\\n  $GLIBC_I18N                                                  \\\n    # Installing true type fonts                               \\\n    && update-ms-fonts                                         \\\n    && fc-cache -f                                             \\\n    # Setting Locale                                           \\\n    && /usr/glibc-compat/bin/localedef -i ${LANG_LANGUAGE}_${LANG_COUNTRY} -f UTF-8 ${LANG_LANGUAGE}_${LANG_COUNTRY}.UTF-8 \\\n    # Dockerize                                                \\\n    && export DOCKERIZE_VERSION=v0.6.1                         \\\n    && export DOCKERIZE_DOWNLOAD_URL=https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    # Install Dockerize                                        \\\n    && wget -O dockerize.tar.gz $DOCKERIZE_DOWNLOAD_URL        \\\n    && tar -C /usr/local/bin -xzvf dockerize.tar.gz            \\\n    && rm dockerize.tar.gz                                     \\\n    # Installing Confluence                                    \\\n    && mkdir -p ${CONF_HOME}                                   \\\n    && chown -R confluence:confluence ${CONF_HOME}             \\\n    && mkdir -p ${CONF_INSTALL}/conf                           \\\n    && wget -O /tmp/atlassian-confluence-${CONFLUENCE_VERSION}.tar.gz https://www.atlassian.com/software/confluence/downloads/binary/atlassian-confluence-${CONFLUENCE_VERSION}.tar.gz && \\\n    tar xzf /tmp/atlassian-confluence-${CONFLUENCE_VERSION}.tar.gz --strip-components=1 -C ${CONF_INSTALL} &&      \\\n    echo \"confluence.home=${CONF_HOME}\" > ${CONF_INSTALL}/confluence/WEB-INF/classes/confluence-init.properties && \\\n    # Install database drivers\n    rm -f                                                                                                          \\\n      ${CONF_INSTALL}/lib/mysql-connector-java*.jar                                                             && \\\n    wget -O /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                               \\\n      https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz       && \\\n    tar xzf /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}.tar.gz                                               \\\n      -C /tmp                                                                                                   && \\\n    cp /tmp/mysql-connector-java-${MYSQL_DRIVER_VERSION}/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar      \\\n      ${CONF_INSTALL}/lib/mysql-connector-java-${MYSQL_DRIVER_VERSION}-bin.jar                                  && \\\n    chown -R confluence:confluence ${CONF_INSTALL}                                                              && \\\n    export KEYSTORE=$JAVA_HOME/jre/lib/security/cacerts                                                             && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx1.der                                      && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/letsencryptauthorityx2.der                                      && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x1-cross-signed.der                                && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x2-cross-signed.der                                && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.der                                && \\\n    wget -P /tmp/ https://letsencrypt.org/certs/lets-encrypt-x4-cross-signed.der                                && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx1 -file /tmp/letsencryptauthorityx1.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias isrgrootx2 -file /tmp/letsencryptauthorityx2.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx1 -file /tmp/lets-encrypt-x1-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx2 -file /tmp/lets-encrypt-x2-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx3 -file /tmp/lets-encrypt-x3-cross-signed.der && \\\n    keytool -trustcacerts -keystore $KEYSTORE -storepass changeit -noprompt -importcert -alias letsencryptauthorityx4 -file /tmp/lets-encrypt-x4-cross-signed.der && \\\n    # Install atlassian ssl tool\n    wget -O /home/${CONTAINER_USER}/SSLPoke.class https://confluence.atlassian.com/kb/files/779355358/779355357/1/1441897666313/SSLPoke.class && \\\n    chown -R confluence:confluence /home/${CONTAINER_USER} && \\\n    # Clean caches and tmps\n    rm -rf /var/cache/apk/*                                && \\\n    rm -rf /tmp/* && \\\n    rm -rf /var/log/* && rm /tmp/atlassian-confluence-${CONFLUENCE_VERSION}.tar.gz\n\n# Expose default HTTP connector port.\nEXPOSE 8090 8091\n\nUSER confluence\nVOLUME [\"/var/atlassian/confluence\"]\n# Set the default working directory as the Confluence home directory.\nWORKDIR ${CONF_HOME}\nCOPY bin/docker-entrypoint.sh /home/confluence/docker-entrypoint.sh\nCOPY bin/dockerwait.sh /usr/bin/dockerwait\nENTRYPOINT [\"/sbin/tini\",\"--\",\"/home/confluence/docker-entrypoint.sh\"]\nCMD [\"confluence\"]"
}