{
  "startTime": 1674217283768,
  "endTime": 1674217285391,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM rust:1.47.0-slim-buster\n\n# mkdir required to install openjdk on slim images\nRUN mkdir -p /usr/share/man/man1 && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        cmake g++ git libpcre3-dev make openjdk-11-jdk unzip wget && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR /tmp\n\nRUN wget https://freefr.dl.sourceforge.net/project/swig/swig/swig-4.0.1/swig-4.0.1.tar.gz && \\\n    tar xf swig-*.tar.gz && \\\n    cd swig-* && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j12 && \\\n    make install && \\\n    rm -rf /tmp/* && rm swig-*.tar.gz\n\nENV ANDROID_SDK_ROOT=/root/sdk\nARG NDK_VERSION=20.1.5948944\nENV NDK_HOME=$ANDROID_SDK_ROOT/ndk/$NDK_VERSION\n\nRUN wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip && \\\n    unzip commandlinetools-linux-*_latest.zip && \\\n    mkdir $ANDROID_SDK_ROOT && \\\n    mv tools $ANDROID_SDK_ROOT/ && \\\n    rm -rf /tmp/*\n\nRUN yes | $ANDROID_SDK_ROOT/tools/bin/sdkmanager --sdk_root=$ANDROID_SDK_ROOT \\\n        \"platform-tools\" \\\n        \"build-tools;29.0.3\" \\\n        \"platforms;android-29\" \\\n        \"ndk;$NDK_VERSION\" \\\n        \"cmake;3.10.2.4988404\"\n\nRUN rustup target add \\\n        aarch64-linux-android \\\n        x86_64-linux-android \\\n        armv7-linux-androideabi \\\n        i686-linux-android\n\nCOPY bindings/android /rgb-sdk/bindings/android\nCOPY librgb /rgb-sdk/librgb\n\nWORKDIR /rgb-sdk/bindings/android\n\nRUN ./gradlew build\n"
}