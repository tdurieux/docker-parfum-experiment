{
  "startTime": 1674255013512,
  "endTime": 1674255014693,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 25,
        "columnEnd": 111
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 27,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 18,
        "columnEnd": 37
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.4.2-cudnn8-devel-ubuntu20.04\n\nENV TZ=Asia/Tokyo\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt update && apt install -y --no-install-recommends locales && \\\n    locale-gen en_US en_US.UTF-8 && \\\n    update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 && \\\n    apt -y clean && \\\n    rm -rf /var/lib/apt/lists/*\nENV LANG=en_US.UTF-8\n\nRUN apt update && \\\n    apt -y --no-install-recommends install git && \\\n    apt -y --no-install-recommends install python3-pip && \\\n    apt -y clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nWORKDIR /workspace\nRUN git clone https://github.com/Megvii-BaseDetection/YOLOX.git\nRUN wget https://github.com/Megvii-BaseDetection/YOLOX/releases/download/0.1.1rc0/yolox_x.pth\n\nRUN cd YOLOX && \\\n    pip3 install --no-cache-dir -U pip && pip3 install --no-cache-dir -r requirements.txt && \\\n    pip3 install --no-cache-dir -v -e . && \\\n    python3 setup.py install && \\\n    pip3 install --no-cache-dir cython; pip3 install --no-cache-dir 'git+https://github.com/cocodataset/cocoapi.git#subdirectory=PythonAPI'\n\nCOPY ./yolox-x.bash /workspace/yolox-x.bash\n\nCMD [\"bash\"]\n\n# ================================\n# VIDEO_MP4_PATH=~/Videos/test.mp4\n# VIDEO_CSV_PATH=~/Videos/test.csv\n#\n# YOLOX_X=~/Downloads/yolox-.pth\n#\n# docker build . -t urarachallenge\n# docker run --rm -it \\\n#   --runtime nvidia \\\n#   -v /tmp/.X11-unix:/tmp/.X11-unix \\\n#   -v $VIDEO_MP4_PATH:/workspace/target.mp4 \\\n#   -v $VIDEO_CSV_PATH:/workspace/target.csv \\\n#   urarachallenge /bin/bash ./challenge.bash"
}