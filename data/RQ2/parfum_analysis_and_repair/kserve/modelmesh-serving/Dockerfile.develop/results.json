{
  "startTime": 1674218902112,
  "endTime": 1674218903529,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 168
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2021 IBM Corporation\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n###############################################################################\n# Create the develop, test, and build environment\n###############################################################################\nFROM registry.access.redhat.com/ubi8/ubi-minimal:8.4\n\nARG GOLANG_VERSION=1.17.9\nARG OPENSHIFT_VERSION=4.9\nARG KUSTOMIZE_VERSION=4.5.2\nARG KUBEBUILDER_VERSION=v3.3.0\nARG CONTROLLER_GEN_VERSION=v0.8.0\nENV PATH=/usr/local/go/bin:$PATH:/usr/local/kubebuilder/bin:\n\nUSER root\n\nWORKDIR /workspace\n\n# Copy the Go Modules manifests\nCOPY .pre-commit-config.yaml go.mod go.sum ./\n\n# Install gcc\nRUN microdnf install \\\n    diffutils \\\n    gcc-c++ \\\n    make \\\n    wget \\\n    tar \\\n    vim \\\n    git \\\n    python38 \\\n    nodejs && \\\n    pip3 install --no-cache-dir pre-commit && \\\n# Install go\n    set -eux; \\\n    wget -qO go.tgz \"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\"; \\\n#    sha256sum *go.tgz; \\\n    tar -C /usr/local -xzf go.tgz; \\\n    go version && rm go.tgz && \\\n# Download and initialize the pre-commit environments before copying the source so they will be cached\n    git init && \\\n    pre-commit install-hooks && \\\n    rm -rf .git && \\\n# Download kubebuilder\n    true \\\n# First download and extract older dist of kubebuilder which includes required etcd, kube-apiserver and kubectl binaries \\\n    && curl -f -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/v2.3.2/kubebuilder_2.3.2_linux_amd64.tar.gz | tar -xz -C /tmp/ \\\n    && mv /tmp/kubebuilder_*_linux_amd64 /usr/local/kubebuilder \\\n# Then download and overwrite kubebuilder binary with desired/latest version\n    && curl -f -L https://github.com/kubernetes-sigs/kubebuilder/releases/download/${KUBEBUILDER_VERSION}/kubebuilder_linux_amd64 -o /usr/local/kubebuilder/bin/kubebuilder \\\n    && true && \\\n# download openshift-cli\n    curl -sSLf --output /tmp/oc_client.tar.gz https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/latest-${OPENSHIFT_VERSION}/openshift-client-linux.tar.gz \\\n    && tar -xvf /tmp/oc_client.tar.gz -C /tmp \\\n    && mv /tmp/oc /usr/local/bin \\\n    && mv /tmp/kubectl /usr/local/bin \\\n    && chmod a+x /usr/local/bin/oc /usr/local/bin/kubectl \\\n    && rm -f /tmp/oc_client.tar.gz && \\\n# download kustomize\n    curl -sSLf --output /tmp/kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv${KUSTOMIZE_VERSION}/kustomize_v${KUSTOMIZE_VERSION}_linux_amd64.tar.gz \\\n    && tar -xvf /tmp/kustomize.tar.gz -C /tmp \\\n    && mv /tmp/kustomize /usr/local/bin \\\n    && chmod a+x /usr/local/bin/kustomize \\\n    && rm -v /tmp/kustomize.tar.gz && \\\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\n    go mod download && \\\n# Install controller-gen\n    mkdir /tmp/controller-gen-tmp && cd /tmp/controller-gen-tmp \\\n    && go mod init tmp && go get sigs.k8s.io/controller-tools/cmd/controller-gen@${CONTROLLER_GEN_VERSION} \\\n    && rm -rf /tmp/controller-gen-tmp\n\nRUN go install github.com/onsi/ginkgo/v2/ginkgo\nENV PATH=/root/go/bin/:$PATH\n"
}