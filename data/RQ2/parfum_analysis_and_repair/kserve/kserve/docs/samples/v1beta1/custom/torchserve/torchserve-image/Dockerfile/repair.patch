diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kserve/kserve/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kserve/kserve/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile/repaired.Dockerfile
index 3ca4dfd..2458a8c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kserve/kserve/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kserve/kserve/docs/samples/v1beta1/custom/torchserve/torchserve-image/Dockerfile/repaired.Dockerfile
@@ -1,18 +1,17 @@
-# syntax = docker/dockerfile:experimental
 #
 # This file can build images for cpu and gpu env. By default it builds image for CPU.
 # Use following option to build image for cuda/GPU: --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04
-# Here is complete command for GPU/cuda - 
+# Here is complete command for GPU/cuda -
 # $ DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .
 #
 # Following comments have been shamelessly copied from https://github.com/pytorch/pytorch/blob/master/Dockerfile
-# 
+#
 # NOTE: To build this you will need a docker version > 18.06 with
 #       experimental enabled and DOCKER_BUILDKIT=1
 #
 #       If you do not use buildkit you are not going to have a good time
 #
-#       For reference: 
+#       For reference:
 #           https://docs.docker.com/develop/develop-images/build_enhancements/
 
 
@@ -34,7 +33,7 @@ RUN --mount=type=cache,id=apt-dev,target=/var/cache/apt \
     curl \
     && rm -rf /var/lib/apt/lists/* \
     && cd /tmp \
-    && curl -O https://bootstrap.pypa.io/get-pip.py \
+    && curl -f -O https://bootstrap.pypa.io/get-pip.py \
     && python3 get-pip.py
 
 RUN python3 -m venv /home/venv
@@ -44,10 +43,10 @@ ENV PATH="/home/venv/bin:$PATH"
 RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1
 RUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1
 
-# This is only useful for cuda env 
+# This is only useful for cuda env
 RUN export USE_CUDA=1
 
-RUN pip install -U pip setuptools
+RUN pip install --no-cache-dir -U pip setuptools
 
 RUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver
 
@@ -79,8 +78,8 @@ COPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh
 RUN chmod +x /usr/local/bin/dockerd-entrypoint.sh \
     && chown -R model-server /home/model-server
 
-COPY config.properties /home/model-server/config.properties 
-RUN mkdir /home/model-server/model-store 
+COPY config.properties /home/model-server/config.properties
+RUN mkdir /home/model-server/model-store
 COPY model-store/* /home/model-server/model-store/
 RUN chown -R model-server /home/model-server/model-store