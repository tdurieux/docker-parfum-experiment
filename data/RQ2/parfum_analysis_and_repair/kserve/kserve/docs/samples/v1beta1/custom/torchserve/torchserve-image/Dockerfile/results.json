{
  "startTime": 1674249400182,
  "endTime": 1674249401718,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 7,
        "columnEnd": 51
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# This file can build images for cpu and gpu env. By default it builds image for CPU.\n# Use following option to build image for cuda/GPU: --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04\n# Here is complete command for GPU/cuda -\n# $ DOCKER_BUILDKIT=1 docker build --file Dockerfile --build-arg BASE_IMAGE=nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 -t torchserve:latest .\n#\n# Following comments have been shamelessly copied from https://github.com/pytorch/pytorch/blob/master/Dockerfile\n#\n# NOTE: To build this you will need a docker version > 18.06 with\n#       experimental enabled and DOCKER_BUILDKIT=1\n#\n#       If you do not use buildkit you are not going to have a good time\n#\n#       For reference:\n#           https://docs.docker.com/develop/develop-images/build_enhancements/\n\n\nARG BASE_IMAGE=ubuntu:18.04\n\nFROM ${BASE_IMAGE} AS compile-image\n\nENV PYTHONUNBUFFERED TRUE\n\nRUN --mount=type=cache,id=apt-dev,target=/var/cache/apt \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n    ca-certificates \\\n    g++ \\\n    python3-dev \\\n    python3-distutils \\\n    python3-venv \\\n    openjdk-11-jre-headless \\\n    curl \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && cd /tmp \\\n    && curl -f -O https://bootstrap.pypa.io/get-pip.py \\\n    && python3 get-pip.py\n\nRUN python3 -m venv /home/venv\n\nENV PATH=\"/home/venv/bin:$PATH\"\n\nRUN update-alternatives --install /usr/bin/python python /usr/bin/python3 1\nRUN update-alternatives --install /usr/local/bin/pip pip /usr/local/bin/pip3 1\n\n# This is only useful for cuda env\nRUN export USE_CUDA=1\n\nRUN pip install --no-cache-dir -U pip setuptools\n\nRUN pip install --no-cache-dir torch torchvision torchtext torchserve torch-model-archiver\n\n# Final image for production\nFROM ${BASE_IMAGE} AS runtime-image\n\nENV PYTHONUNBUFFERED TRUE\n\nRUN --mount=type=cache,target=/var/cache/apt \\\n    apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \\\n    python3 \\\n    python3-distutils \\\n    python3-dev \\\n    openjdk-11-jre-headless \\\n    build-essential \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && cd /tmp\n\nCOPY --from=compile-image /home/venv /home/venv\n\nENV PATH=\"/home/venv/bin:$PATH\"\n\nRUN useradd -m model-server \\\n    && mkdir -p /home/model-server/tmp\n\nCOPY dockerd-entrypoint.sh /usr/local/bin/dockerd-entrypoint.sh\n\nRUN chmod +x /usr/local/bin/dockerd-entrypoint.sh \\\n    && chown -R model-server /home/model-server\n\nCOPY config.properties /home/model-server/config.properties\nRUN mkdir /home/model-server/model-store\nCOPY model-store/* /home/model-server/model-store/\nRUN chown -R model-server /home/model-server/model-store\n\nEXPOSE 8080 8081 8082\n\nUSER model-server\nWORKDIR /home/model-server\nENV TEMP=/home/model-server/tmp\nENTRYPOINT [\"/usr/local/bin/dockerd-entrypoint.sh\"]\nCMD [\"serve\"]\n"
}