{
  "startTime": 1674252024105,
  "endTime": 1674252025181,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 56,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 60,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 153
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM registry.access.redhat.com/ubi8/ubi-minimal AS ubi8\n\nLABEL name=\"Percona Postgres Operator Deployer\" \\\n      vendor=\"Percona\" \\\n      summary=\"Kick start image for Percona Postgres Operator essentials deployment\" \\\n      description=\"Deployer app is to take care of all Percona Postgres Operator essentials deployment\" \\\n      maintainer=\"Percona Development <info@percona.com>\"\n\nENV KUBECTL_VERSION=v1.21.9\nENV KUBECTL_SHA256SUM=195d5387f2a6ca7b8ab5c2134b4b6cc27f29372f54b771947ba7c18ee983fbe6\n\nCOPY redhat/licenses /licenses\nCOPY redhat/atomic/help.1 /help.1\nCOPY redhat/atomic/help.md /help.md\nCOPY licenses /licenses\n\nENV PG_MAJOR 13\n\nRUN set -ex; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A 99DB70FAE1D7CE227FB6488205B555B38483C65D 94E279EB8D8F25B21810ADF121EA45AB2F86D6A1; \\\n    gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \\\n    gpg --batch --export --armor 94E279EB8D8F25B21810ADF121EA45AB2F86D6A1 > ${GNUPGHOME}/RPM-GPG-KEY-EPEL-8; \\\n    rpmkeys --import ${GNUPGHOME}/RPM-GPG-KEY-centosofficial ${GNUPGHOME}/RPM-GPG-KEY-EPEL-8; \\\n    microdnf install -y findutils;\n\nRUN set -ex; \\\n    microdnf -y update; \\\n    microdnf -y install glibc-langpack-en; \\\n    microdnf clean all;\n\nRUN set -ex; \\\n    microdnf -y install \\\n        python3 \\\n        python3-jinja2 \\\n        python3-pyyaml \\\n        python3-six \\\n        sshpass\n\nRUN set -ex; \\\n    curl -Lf -o /tmp/epel-release.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm; \\\n    curl -Lf -o /tmp/python3-jmespath.rpm https://mirror.centos.org/centos/8-stream/AppStream/x86_64/os/Packages/python3-jmespath-0.9.0-11.el8.noarch.rpm; \\\n    curl -Lf -o /tmp/ansible.rpm https://cbs.centos.org/kojifiles/packages/ansible/2.9.27/3.el8/noarch/ansible-2.9.27-3.el8.noarch.rpm; \\\n    rpmkeys --checksig /tmp/python3-jmespath.rpm /tmp/epel-release.rpm /tmp/ansible.rpm; \\\n    rpm -i /tmp/epel-release.rpm /tmp/python3-jmespath.rpm /tmp/ansible.rpm; \\\n    rm -rf /tmp/epel-release.rpm /tmp/python3-jmespath.rpm /tmp/ansible.rpm\n\nRUN set -ex; \\\n    microdnf -y install \\\n        which \\\n        gettext \\\n        openssl; \\\n    microdnf  -y clean all\n\nRUN pip3 install --no-cache-dir kubernetes\n\nRUN curl -f -o /usr/bin/kubectl \\\n        https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl; \\\n    chmod +x /usr/bin/kubectl; \\\n    echo \"${KUBECTL_SHA256SUM}  /usr/bin/kubectl\" | sha256sum -c -; \\\n    curl -f -o /licenses/LICENSE.kubectl \\\n        https://raw.githubusercontent.com/kubernetes/kubectl/master/LICENSE\n\nRUN mkdir -p /opt/cpm/bin\n\nCOPY installers/ansible /ansible/postgres-operator\nCOPY installers/metrics/ansible /ansible/metrics\nCOPY installers/image/bin/pgo-deploy.sh /pgo-deploy.sh\nADD bin/common /opt/cpm/bin\n\nENV ANSIBLE_CONFIG=\"/ansible/postgres-operator/ansible.cfg\"\nENV HOME=\"/tmp\"\n\n# Defines a unique directory name that will be utilized by the nss_wrapper in the UID script\nENV NSS_WRAPPER_SUBDIR=\"deployer\"\n\nENTRYPOINT [\"/opt/cpm/bin/uid_daemon.sh\"]\n\nUSER 2\n\nCMD [\"/pgo-deploy.sh\"]\n"
}