{
  "startTime": 1674253985014,
  "endTime": 1674253986520,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 134
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM redhat/ubi8-minimal\n\nLABEL org.opencontainers.image.authors=\"info@percona.com\"\n\nRUN microdnf -y update; \\\n    microdnf -y install glibc-langpack-en\n\nENV PPG_VERSION 11.13-1\nENV OS_VER el8\nENV FULL_PERCONA_VERSION \"$PPG_VERSION.$OS_VER\"\n\n# check repository package signature in secure way\nRUN set -ex; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A 99DB70FAE1D7CE227FB6488205B555B38483C65D; \\\n    gpg --batch --export --armor 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A > ${GNUPGHOME}/RPM-GPG-KEY-Percona; \\\n    gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \\\n    rpmkeys --import ${GNUPGHOME}/RPM-GPG-KEY-Percona ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \\\n    microdnf install -y findutils; \\\n    curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm; \\\n    rpmkeys --checksig /tmp/percona-release.rpm; \\\n    rpm -i /tmp/percona-release.rpm; \\\n    rm -rf \"$GNUPGHOME\" /tmp/percona-release.rpm; \\\n    rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY; \\\n    #percona-release setup -y ppg11; \\\n    percona-release enable ppg-11.13 release\n\nRUN set -ex; \\\n    microdnf -y update; \\\n    microdnf -y install \\\n        bind-utils \\\n        gettext \\\n        hostname \\\n        perl \\\n        tar \\\n        bzip2 \\\n        lz4 \\\n        procps-ng; \\\n    microdnf -y install  \\\n        nss_wrapper \\\n        shadow-utils \\\n        libpq \\\n        libedit; \\\n    microdnf clean all\n\n# the numeric UID is needed for OpenShift\nRUN useradd -u 1001 -r -g 0 -s /sbin/nologin \\\n            -c \"Default Application User\" postgres\n\nRUN set -ex; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; rm -rf -d \\\n    curl -Lf -o /tmp/perl-JSON.rpm https://mirror.centos.org/centos/8/AppStream/x86_64/os/Packages/perl-JSON-2.97.001-2.el8.noarch.rpm; \\\n    rpmkeys --checksig /tmp/perl-JSON.rpm; \\\n    rpm -i /tmp/perl-JSON.rpm\n\nRUN set -ex; \\\n    microdnf install -y \\\n        percona-postgresql11-server-${FULL_PERCONA_VERSION} \\\n        percona-postgresql11-contrib-${FULL_PERCONA_VERSION} \\\n        percona-postgresql-common \\\n        percona-pg-stat-monitor11; \\\n    microdnf clean all; \\\n    rm -rf /var/cache/dnf /var/cache/yum /data/db && mkdir -p /data/db /docker-entrypoint-initdb.d; \\\n    chown -R 1001:0 /data/db docker-entrypoint-initdb.d\n\nRUN set -ex; \\\n    sed -ri \"s!^#?(listen_addresses)\\s*=\\s*\\S+.*!\\1 = '*'!\" /usr/pgsql-11/share/postgresql.conf.sample; \\\n    grep -F \"listen_addresses = '*'\" /usr/pgsql-11/share/postgresql.conf.sample\n\nCOPY LICENSE /licenses/LICENSE.Dockerfile\nRUN cp /usr/share/doc/percona-postgresql11/COPYRIGHT /licenses/COPYRIGHT.PostgreSQL\n\nENV GOSU_VERSION=1.11\nRUN set -eux; \\\n    curl -Lf -o /usr/bin/gosu https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64; \\\n    curl -Lf -o /usr/bin/gosu.asc https://github.com/tianon/gosu/releases/download/${GOSU_VERSION}/gosu-amd64.asc; \\\n    \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4; \\\n    gpg --batch --verify /usr/bin/gosu.asc /usr/bin/gosu; \\\n    rm -rf \"$GNUPGHOME\" /usr/bin/gosu.asc; \\\n    \\\n    chmod +x /usr/bin/gosu; \\\n    curl -f -o /licenses/LICENSE.gosu https://raw.githubusercontent.com/tianon/gosu/${GOSU_VERSION}/LICENSE\n\nCOPY entrypoint.sh /entrypoint.sh\n\nVOLUME [\"/data/db\"]\n\nENTRYPOINT [\"/entrypoint.sh\"]\n\nEXPOSE 5432\n\nUSER 1001\n\nCMD [\"postgres\"]\n"
}