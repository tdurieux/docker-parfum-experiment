{
  "startTime": 1674250579045,
  "endTime": 1674250580523,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 152
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 142
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 92,
        "lineEnd": 92,
        "columnStart": 4,
        "columnEnd": 124
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 138
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 4,
        "columnEnd": 140
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 4,
        "columnEnd": 144
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 158
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18 AS go_builder\nWORKDIR /go/src/github.com/percona/percona-docker/postgresql-containers/src\n\nCOPY . .\n\nARG GOOS=linux\nARG GOARCH=amd64\nARG CGO_ENABLED=0\n\nRUN mkdir -p build/_output/bin; \\\n    CGO_ENABLED=$CGO_ENABLED GOOS=$GOOS GOARCH=$GOARCH \\\n    go build \\\n        -o build/_output/bin/pgbackrest ./cmd/pgbackrest; \\\n    cp -r build/_output/bin/pgbackrest /usr/local/bin/pgbackrest; \\\n    ./bin/license_aggregator.sh; \\\n    cp -r ./licenses /licenses\n\nFROM redhat/ubi8-minimal\n\nLABEL name=\"Percona PostgreSQL Distribution\" \\\n    vendor=\"Percona\" \\\n    summary=\"Percona Distribution for PostgreSQL\" \\\n    description=\"Percona Distribution for PostgreSQL is a collection of tools to assist you in managing your PostgreSQL database system\" \\\n    maintainer=\"Percona Development <info@percona.com>\"\n\n# platform-python-pip is removed due to CVE-2019-20916, VULNDB-229216\n# python3-pip-wheel is required by platform-python\nRUN set -ex; \\\n    microdnf -y update; \\\n    microdnf -y install glibc-langpack-en platform-python; \\\n    /usr/libexec/platform-python -m pip install pip --upgrade; \\\n    microdnf -y remove platform-python-pip; \\\n    microdnf clean all; \\\n    rm -rf /var/cache/dnf /var/cache/yum\n\nENV LC_ALL en_US.utf-8\nENV LANG en_US.utf-8\nARG PG_MAJOR=14\n\nRUN set -ex; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \\\n        430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A \\\n        99DB70FAE1D7CE227FB6488205B555B38483C65D \\\n        94E279EB8D8F25B21810ADF121EA45AB2F86D6A1 \\\n        736AF5116D9C40E2AF6B074BF9B9FEE7764429E6; \\\n    gpg --batch --export --armor 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A > ${GNUPGHOME}/RPM-GPG-KEY-Percona; \\\n    gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \\\n    gpg --batch --export --armor 94E279EB8D8F25B21810ADF121EA45AB2F86D6A1 > ${GNUPGHOME}/RPM-GPG-KEY-EPEL-8; \\\n    gpg --batch --export --armor 736AF5116D9C40E2AF6B074BF9B9FEE7764429E6 > ${GNUPGHOME}/RPM-GPG-KEY-CentOS-SIG-Cloud; \\\n    rpmkeys --import \\\n        ${GNUPGHOME}/RPM-GPG-KEY-Percona \\\n        ${GNUPGHOME}/RPM-GPG-KEY-centosofficial \\\n        ${GNUPGHOME}/RPM-GPG-KEY-EPEL-8 \\\n        ${GNUPGHOME}/RPM-GPG-KEY-CentOS-SIG-Cloud; \\\n    microdnf install -y findutils; \\\n    curl -Lf -o /tmp/epel-release.rpm https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm; \\\n    curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm; \\\n    rpmkeys --checksig /tmp/percona-release.rpm; \\\n    rpmkeys --checksig /tmp/epel-release.rpm; \\\n    rpm -i /tmp/percona-release.rpm /tmp/epel-release.rpm; \\\n    rm -rf \"$GNUPGHOME\" /tmp/percona-release.rpm /tmp/epel-release.rpm; \\\n    curl -Lf -o /tmp/python3-pyparsing.rpm https://vault.centos.org/8.5.2111/cloud/x86_64/openstack-train/Packages/p/python3-pyparsing-2.4.6-1.el8.noarch.rpm; \\\n    rpmkeys --checksig /tmp/python3-pyparsing.rpm; \\\n    rpm -i /tmp/python3-pyparsing.rpm; \\\n    rm -rf /tmp/python3-pyparsing.rpm; \\\n    rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY; \\\n    percona-release enable ppg-${PG_MAJOR} release\n\nRUN set -ex; \\\n    microdnf -y update; \\\n    microdnf -y install \\\n        bind-utils \\\n        gettext \\\n        hostname \\\n        perl \\\n        tar \\\n        bzip2 \\\n        lz4 \\\n        procps-ng; \\\n    sed -i 's/enabled=1/enabled=0/' /etc/yum.repos.d/epel*.repo; \\\n    microdnf -y install  \\\n        systemd \\\n        libpq \\\n        nss_wrapper \\\n        percona-postgresql${PG_MAJOR}-libs \\\n        libedit; \\\n    microdnf -y clean all\n\nRUN set -ex; \\\n    curl -Lf -o /tmp/perl-DBI.rpm https://vault.centos.org/centos/8/AppStream/x86_64/os/Packages/perl-DBI-1.641-3.module_el8.3.0+413+9be2aeb5.x86_64.rpm; \\\n    curl -Lf -o /tmp/perl-XML-Parser.rpm https://vault.centos.org/centos/8/AppStream/x86_64/os/Packages/perl-XML-Parser-2.44-11.el8.x86_64.rpm; \\\n    curl -Lf -o /tmp/openssh.rpm https://vault.centos.org/centos/8/BaseOS/x86_64/os/Packages/openssh-8.0p1-10.el8.x86_64.rpm; \\\n    curl -Lf -o /tmp/openssh-server.rpm https://vault.centos.org/centos/8/BaseOS/x86_64/os/Packages/openssh-server-8.0p1-10.el8.x86_64.rpm; \\\n    curl -Lf -o /tmp/openssh-clients.rpm https://vault.centos.org/centos/8/BaseOS/x86_64/os/Packages/openssh-clients-8.0p1-10.el8.x86_64.rpm; \\\n    curl -Lf -o /tmp/perl-libxml-perl.rpm https://vault.centos.org/centos/8/AppStream/x86_64/os/Packages/perl-libxml-perl-0.08-33.el8.noarch.rpm; \\\n    curl -Lf -o /tmp/perl-DBD-Pg.rpm https://vault.centos.org/centos/8/AppStream/x86_64/os/Packages/perl-DBD-Pg-3.7.4-4.module_el8.3.0+426+0b4e9c0a.x86_64.rpm; \\\n    rpmkeys --checksig /tmp/openssh.rpm /tmp/perl-DBI.rpm /tmp/perl-XML-Parser.rpm /tmp/perl-libxml-perl.rpm /tmp/perl-DBD-Pg.rpm /tmp/openssh-server.rpm /tmp/openssh-clients.rpm; \\\n    rpm -i /tmp/openssh.rpm /tmp/perl-DBI.rpm /tmp/perl-XML-Parser.rpm /tmp/openssh-server.rpm /tmp/openssh-clients.rpm /tmp/perl-libxml-perl.rpm /tmp/perl-DBD-Pg.rpm; \\\n    rm -rf /tmp/openssh.rpm /tmp/perl-DBI.rpm /tmp/perl-XML-Parser.rpm /tmp/openssh-server.rpm /tmp/openssh-clients.rpm /tmp/perl-libxml-perl.rpm /tmp/perl-DBD-Pg.rpm; \\\n    microdnf -y install  \\\n        percona-pgbackrest; \\\n    microdnf -y clean all\n\nRUN set -ex; \\\n    groupadd postgres -g 26; \\\n    useradd postgres -u 26 -g 26\n\nRUN set -ex; \\\n    mkdir -p /opt/crunchy/bin /opt/crunchy/conf /pgdata /backrestrepo \\\n             /var/log/pgbackrest\n\nCOPY bin/pgbackrest-restore /opt/crunchy/bin\nCOPY conf/pgbackrest-restore /opt/crunchy/conf\nCOPY --from=go_builder /usr/local/bin/pgbackrest /opt/crunchy/bin/\nCOPY --from=go_builder /licenses /licenses\nCOPY bin/common /opt/crunchy/bin\nCOPY bin/pgbackrest-common /opt/crunchy/bin\n\nRUN set -ex; \\\n    chown -R postgres:postgres /opt/crunchy  \\\n        /backrestrepo /var/log/pgbackrest /pgdata\n\nCOPY bin/pgbackrest-repo /usr/local/bin\n\nRUN set -ex; \\\n    chmod +x /usr/local/bin/pgbackrest-repo.sh /usr/local/bin/archive-push-s3.sh \\\n      /usr/local/bin/archive-push-gcs.sh; \\\n    mkdir -p /etc/pgbackrest; \\\n    chown -R postgres:postgres /etc/pgbackrest; \\\n    chmod -R g=u /etc/pgbackrest; \\\n    rm -f /run/nologin\n\nRUN rm -rf /var/spool/pgbackrest\n\nRUN set -ex; \\\n    mkdir /.ssh; \\\n    chown postgres:postgres /.ssh; \\\n    chmod o+rwx /.ssh\n\nVOLUME [\"/sshd\", \"/pgdata\", \"/backrestrepo\"]\n\nUSER 26\n\n# Defines a unique directory name that will be utilized by the nss_wrapper in the UID script\nENV NSS_WRAPPER_SUBDIR=\"pgbackrest\"\n\nENTRYPOINT [\"/opt/crunchy/bin/uid_postgres.sh\"]\n\nCMD [\"/opt/crunchy/bin/start.sh\"]\n"
}