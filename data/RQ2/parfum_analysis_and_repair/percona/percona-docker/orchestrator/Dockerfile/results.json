{
  "startTime": 1674216586035,
  "endTime": 1674216587375,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.18 AS go_builder\nWORKDIR /go/src/github.com/percona/percona-server-mysql-operator/src\n\nRUN export GO111MODULE=off \\\n    && go get k8s.io/apimachinery/pkg/util/sets \\\n    && curl -Lf -o /go/src/github.com/percona/percona-server-mysql-operator/src/peer-list.go https://raw.githubusercontent.com/percona/percona-server-mysql-operator/main/cmd/peer-list/main.go \\\n    && go build peer-list.go\n\nFROM redhat/ubi8-minimal AS ubi8\n\nLABEL name=\"orchestrator\" \\\n      description=\"orchestrator is a MySQL high availability and replication management tool\" \\\n      vendor=\"Percona\" \\\n      summary=\"orchestrator is a MySQL high availability and replication management tool\" \\\n      org.opencontainers.image.authors=\"info@percona.com\"\n\n# check repository package signature in secure way\nRUN export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& microdnf install -y findutils \\\n\t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A \\\n\t&& gpg --batch --export --armor 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A > ${GNUPGHOME}/RPM-GPG-KEY-Percona \\\n\t&& rpmkeys --import ${GNUPGHOME}/RPM-GPG-KEY-Percona \\\n\t&& curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm \\\n\t&& rpmkeys --checksig /tmp/percona-release.rpm \\\n\t&& rpm -i /tmp/percona-release.rpm \\\n\t&& rm -rf \"$GNUPGHOME\" /tmp/percona-release.rpm \\\n\t&& rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY \\\n        && percona-release setup pdps-8.0 \\\n        && percona-release enable-only pdps-8.0 testing\n\nRUN set -ex; \\\n    microdnf install -y \\\n        shadow-utils \\\n        percona-orchestrator \\\n        which \\\n        tar \\\n        openssl \\\n        procps-ng \\\n        vim-minimal \\\n        bind-utils \\\n        policycoreutils; \\\n    \\\n    microdnf clean all; \\\n    rm -rf /var/cache\n\nRUN groupadd -g 1001 mysql\nRUN useradd -u 1001 -r -g 1001 -s /sbin/nologin \\\n        -c \"Default Application User\" mysql\n\nSTOPSIGNAL SIGUSR1\n\nRUN set -ex; \\\n    mkdir -p /etc/orchestrator /var/lib/orchestrator ; \\\n    chown -R 1001:1001 /etc/orchestrator /var/lib/orchestrator\nCOPY LICENSE /licenses/LICENSE.Dockerfile\nRUN cp /usr/share/doc/percona-orchestrator/LICENSE /licenses/LICENSE.orchestrator\n\nCOPY dockerdir /\nCOPY --from=go_builder /go/src/github.com/percona/percona-server-mysql-operator/src/peer-list /usr/bin/\n\nRUN set -ex; \\\n    chown 1001:1001 /etc/orchestrator/orchestrator.conf.json /etc/orchestrator/orc-topology.cnf\n\nUSER 1001\nEXPOSE 3000 10008\nVOLUME [\"/var/lib/orchestrator\"]\n\nWORKDIR /usr/local/orchestrator\nENTRYPOINT [\"/entrypoint.sh\"]\nCMD [\"/usr/local/orchestrator/orchestrator\", \"-config\", \"/etc/orchestrator/orchestrator.conf.json\", \"http\"]\n"
}