{
  "startTime": 1674246153113,
  "endTime": 1674246155514,
  "originalSmells": [
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 135
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM redhat/ubi8-minimal\n\nLABEL org.opencontainers.image.authors=\"info@percona.com\"\n\nRUN set -ex; \\\n    # shadow-utils are needed for user/group manipulation on UBI-based images\n    microdnf -y update; \\\n    microdnf -y install glibc-langpack-en \\\n        nss_wrapper \\\n        shadow-utils; \\\n    microdnf clean all; \\\n    groupadd -g 1001 mysql; \\\n    useradd -u 1001 -r -g 1001 -s /sbin/nologin \\\n        -c \"Default Application User\" mysql\n\n# check repository package signature in secure way\nRUN set -ex; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A 99DB70FAE1D7CE227FB6488205B555B38483C65D; \\\n    gpg --batch --export --armor 430BDF5C56E7C94E848EE60C1C4CBDCDCD2EFD2A > ${GNUPGHOME}/RPM-GPG-KEY-Percona; \\\n    gpg --batch --export --armor 99DB70FAE1D7CE227FB6488205B555B38483C65D > ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \\\n    rpmkeys --import ${GNUPGHOME}/RPM-GPG-KEY-Percona ${GNUPGHOME}/RPM-GPG-KEY-centosofficial; \\\n    microdnf install -y findutils; \\\n    curl -Lf -o /tmp/percona-release.rpm https://repo.percona.com/yum/percona-release-latest.noarch.rpm; \\\n    rpmkeys --checksig /tmp/percona-release.rpm; \\\n    rpm -i /tmp/percona-release.rpm; \\\n    rm -rf \"$GNUPGHOME\" /tmp/percona-release.rpm; \\\n    rpm --import /etc/pki/rpm-gpg/PERCONA-PACKAGING-KEY; \\\n    #microdnf -y module disable mysql; \\\n    curl -Lf -o /tmp/numactl-libs.rpm https://vault.centos.org/centos/8/BaseOS/x86_64/os/Packages/numactl-libs-2.0.12-13.el8.x86_64.rpm; \\\n    rpmkeys --checksig /tmp/numactl-libs.rpm; \\\n    rpm -i /tmp/numactl-libs.rpm; \\\n    rm -rf /tmp/numactl-libs.rpm\n\nENV PS_VERSION 5.7.38-41.1\nENV OS_VER el8\nENV FULL_PERCONA_VERSION \"$PS_VERSION.$OS_VER\"\n\nRUN set -ex; \\\n    rpm -e --nodeps tzdata; \\\n    microdnf -y install \\\n        tzdata \\\n        jemalloc \\\n        which \\\n        cracklib-dicts \\\n        policycoreutils; \\\n    \\\n    #repoquery -a --location \\\n    #    selinux-policy \\\n    #        | xargs curl -Lf -o /tmp/selinux-policy.rpm; \\\n    #rpm -iv /tmp/selinux-policy.rpm --nodeps; \\\n    #rm -rf /tmp/selinux-policy.rpm; \\\n    \\\n    microdnf -y install \\\n        Percona-Server-server-57-${FULL_PERCONA_VERSION} \\\n        Percona-Server-devel-57-${FULL_PERCONA_VERSION} \\\n        Percona-Server-tokudb-57-${FULL_PERCONA_VERSION} \\\n        Percona-Server-rocksdb-57-${FULL_PERCONA_VERSION}; \\\n    microdnf clean all; \\\n    rm -rf /var/cache/dnf /var/cache/yum /var/lib/mysql\n\n# purge and re-create /var/lib/mysql with appropriate ownership\nRUN set -ex; \\\n    /usr/bin/install -m 0775 -o mysql -g root -d /var/lib/mysql /var/run/mysqld /docker-entrypoint-initdb.d; \\\n# comment out a few problematic configuration values\n\tfind /etc/percona-server.cnf /etc/percona-server.conf.d /etc/my.cnf.d -name '*.cnf' -print0 \\\n\t\t| xargs -0 grep -lZE '^(bind-address|log|user)' \\\n\t\t| xargs -rt -0 sed -Ei 's/^(bind-address|log|user)/#&/'; \\\n# don't reverse lookup hostnames, they are usually another container\n\tprintf '[mysqld]\\nskip-host-cache\\nskip-name-resolve\\n' > /etc/my.cnf.d/docker.cnf; \\\n# TokuDB modifications\n\t/usr/bin/install -m 0664 -o mysql -g root /dev/null /etc/sysconfig/mysql; \\\n\techo \"LD_PRELOAD=/usr/lib64/libjemalloc.so.1\" >> /etc/sysconfig/mysql; \\\n\techo \"THP_SETTING=never\" >> /etc/sysconfig/mysql; \\\n# keep backward compatibility with debian images\n\tln -s /etc/my.cnf.d /etc/mysql; \\\n# allow to change config files\n\tchown -R mysql:root /etc/percona-server.cnf /etc/percona-server.conf.d /etc/my.cnf.d; \\\n\tchmod -R ug+rwX /etc/percona-server.cnf /etc/percona-server.conf.d /etc/my.cnf.d\n\nVOLUME [\"/var/lib/mysql\", \"/var/log/mysql\"]\n\nCOPY ps-entry.sh /docker-entrypoint.sh\nENTRYPOINT [\"/docker-entrypoint.sh\"]\n\nUSER mysql\nEXPOSE 3306\nCMD [\"mysqld\"]\n"
}