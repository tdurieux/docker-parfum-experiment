{
  "startTime": 1674255294449,
  "endTime": 1674255295015,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 62
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvcr.io/nvidia/tensorrt:19.10-py3\n\n# set system environment\nENV CONDA_ROOT=/miniconda\nENV CONDA_PREFIX=${CONDA_ROOT}\nENV PATH=${CONDA_ROOT}/bin:${PATH}\nENV CONDA_AUTO_UPDATE_CONDA=false\nENV TRITONIS_VERSION=1.8.0\nENV PYTHONPATH=/content/\n\nCOPY . /content\n\n# Change all files EOF to LF\nRUN find /content/scripts -type f -exec sed -i -e 's/^M$//' {} \\;\n\nRUN apt-get update -y \\\n && apt-get install --no-install-recommends -y curl=7.58.0-2ubuntu3.8 zip=3.0-11build1 \\\n && apt-get clean \\\n && rm -rf /var/lib/apt/lists/*\n\n# Install Miniconda\nRUN curl -f -L https://repo.anaconda.com/miniconda/Miniconda3-py37_4.8.2-Linux-x86_64.sh -o /miniconda.sh \\\n && sh /miniconda.sh -b -p \"${CONDA_ROOT}\" \\\n && rm /miniconda.sh\n\n# Install Conda environment\nRUN conda env update --name base -f /content/environment.yml \\\n && conda install pytorch=1.5.0 torchvision cudatoolkit=\"${CUDA_VERSION}\" -y -c pytorch \\\n && conda install tensorflow-gpu=2.1.0 -y \\\n && pip install --no-cache-dir tensorflow-serving-api==2.1.0\n\n# Install TRTIS\nRUN mkdir -p ~/tmp\nWORKDIR /root/tmp\nRUN curl -f -LJ https://github.com/NVIDIA/triton-inference-server/releases/download/v${TRITONIS_VERSION}/v${TRITONIS_VERSION}_ubuntu1804.clients.tar.gz \\\n    -o tritonis.clients.tar.gz \\\n && tar xzf tritonis.clients.tar.gz \\\n && pip install --no-cache-dir ~/tmp/python/tensorrtserver-${TRITONIS_VERSION}-py2.py3-none-linux_x86_64.whl && rm tritonis.clients.tar.gz\n\n# Uninstall build dependency\nRUN apt-get remove -y curl wget \\\n && apt-get clean \\\n && apt-get autoremove -y \\\n && rm -rf /var/lib/apt/lists/*\n\n# remove cache\nRUN conda clean -ya \\\n && rm -rf ~/.cache/pip \\\n && rm -rf ~/tmp\n\nWORKDIR /content\n\nENTRYPOINT [\"/bin/bash\"]\n"
}