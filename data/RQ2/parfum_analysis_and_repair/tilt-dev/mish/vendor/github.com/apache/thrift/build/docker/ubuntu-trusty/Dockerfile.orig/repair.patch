diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tilt-dev/mish/vendor/github.com/apache/thrift/build/docker/ubuntu-trusty/Dockerfile.orig b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tilt-dev/mish/vendor/github.com/apache/thrift/build/docker/ubuntu-trusty/Dockerfile.orig/repaired.Dockerfile
index 857384b..191d30e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tilt-dev/mish/vendor/github.com/apache/thrift/build/docker/ubuntu-trusty/Dockerfile.orig
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tilt-dev/mish/vendor/github.com/apache/thrift/build/docker/ubuntu-trusty/Dockerfile.orig/repaired.Dockerfile
@@ -24,15 +24,15 @@ ENV DEBIAN_FRONTEND noninteractive
 # CMAKE
 RUN apt-get update && \
     apt-get install -y --no-install-recommends software-properties-common && \
-    add-apt-repository -y ppa:george-edison55/cmake-3.x
+    add-apt-repository -y ppa:george-edison55/cmake-3.x && rm -rf /var/lib/apt/lists/*;
 
 # Erlang
 RUN echo 'deb http://packages.erlang-solutions.com/debian trusty contrib' > /etc/apt/sources.list.d/erlang_solutions.list && \
-    curl -sSL https://packages.erlang-solutions.com/debian/erlang_solutions.asc | apt-key add -
+    curl -f -sSL https://packages.erlang-solutions.com/debian/erlang_solutions.asc | apt-key add -
 
 # Dart
-RUN curl https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
-    curl https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \
+RUN curl -f https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && \
+    curl -f https://storage.googleapis.com/download.dartlang.org/linux/debian/dart_stable.list > /etc/apt/sources.list.d/dart_stable.list && \
     sed -i /etc/apt/sources.list.d/dart_stable.list -e 's/https:/http:/g'
 
 # Consider using mirror nearby when building locally
@@ -55,7 +55,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
 `#      g++` \
 `#      git` \
 `#      libtool` \
-`#      make`
+`#      make` && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# C++ dependencies` \
@@ -70,14 +70,14 @@ RUN apt-get install -y --no-install-recommends \
       libssl-dev \
       qt5-default \
       qtbase5-dev \
-      qtbase5-dev-tools
+      qtbase5-dev-tools && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Java dependencies` \
       ant \
       ant-optional \
       openjdk-7-jdk \
-      maven
+      maven && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Python dependencies` \
@@ -95,7 +95,7 @@ RUN apt-get install -y --no-install-recommends \
       python3-all-dbg \
       python3-all-dev \
       python3-setuptools \
-      python3-pip
+      python3-pip && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Ruby dependencies` \
@@ -107,7 +107,7 @@ RUN apt-get install -y --no-install-recommends \
       libclass-accessor-class-perl \
       libcrypt-ssleay-perl \
       libio-socket-ssl-perl \
-      libnet-ssleay-perl
+      libnet-ssleay-perl && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Php dependencies` \
@@ -118,7 +118,7 @@ RUN apt-get install -y --no-install-recommends \
       re2c \
       phpunit \
 `# GlibC dependencies` \
-      libglib2.0-dev
+      libglib2.0-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get update && apt-get install -y --no-install-recommends \
 `# Erlang dependencies` \
@@ -126,7 +126,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \
       erlang-eunit \
       erlang-dev \
       erlang-tools \
-      rebar
+      rebar && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# Haskell dependencies` \
@@ -135,20 +135,20 @@ RUN apt-get install -y --no-install-recommends \
 `# Haxe dependencies` \
       neko \
       neko-dev \
-      libneko0
+      libneko0 && rm -rf /var/lib/apt/lists/*;
 
 # Newer release of nodejs
-RUN curl -sL https://deb.nodesource.com/setup_4.x | bash
+RUN curl -f -sL https://deb.nodesource.com/setup_4.x | bash
 RUN apt-get install -y --no-install-recommends \
 `# Node.js dependencies` \
-      nodejs
+      nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Add mono package repository url to get latest version of mono
 RUN echo "deb http://download.mono-project.com/repo/debian trusty main" | tee /etc/apt/sources.list.d/mono.list
 RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A6A19B38D3D831EF
 RUN apt-get update && apt-get install -y --no-install-recommends \
 `# CSharp dependencies` \
-      mono-devel
+      mono-devel && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install -y --no-install-recommends \
 `# D dependencies` \
@@ -173,11 +173,11 @@ RUN apt-get install -y --no-install-recommends \
 RUN gem install bundler --no-ri --no-rdoc
 
 # Python optional dependencies
-RUN pip2 install -U ipaddress backports.ssl_match_hostname tornado
-RUN pip3 install -U backports.ssl_match_hostname tornado
+RUN pip2 install --no-cache-dir -U ipaddress backports.ssl_match_hostname tornado
+RUN pip3 install --no-cache-dir -U backports.ssl_match_hostname tornado
 
 # Go
-RUN curl -sSL https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz | tar -C /usr/local/ -xz
+RUN curl -f -sSL https://storage.googleapis.com/golang/go1.4.3.linux-amd64.tar.gz | tar -C /usr/local/ -xz
 ENV PATH /usr/local/go/bin:$PATH
 
 # Haxe
@@ -196,11 +196,11 @@ RUN mkdir -p /usr/lib/haxe && \
 # RUN curl -sSL https://www.npmjs.com/install.sh | sh
 
 # D
-RUN curl -sSL http://downloads.dlang.org/releases/2.x/2.070.0/dmd_2.070.0-0_amd64.deb -o /tmp/dmd_2.070.0-0_amd64.deb && \
+RUN curl -f -sSL https://downloads.dlang.org/releases/2.x/2.070.0/dmd_2.070.0-0_amd64.deb -o /tmp/dmd_2.070.0-0_amd64.deb && \
     dpkg -i /tmp/dmd_2.070.0-0_amd64.deb && \
     rm /tmp/dmd_2.070.0-0_amd64.deb && \
-    curl -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz| tar xz && \
-    curl -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz| tar xz && \
+    curl -f -sSL https://github.com/D-Programming-Deimos/openssl/archive/master.tar.gz | tar xz && \
+    curl -f -sSL https://github.com/D-Programming-Deimos/libevent/archive/master.tar.gz | tar xz && \
     mkdir -p /usr/include/dmd/druntime/import/deimos /usr/include/dmd/druntime/import/C && \
     mv libevent-master/deimos/* openssl-master/deimos/* /usr/include/dmd/druntime/import/deimos/ && \
     mv libevent-master/C/* openssl-master/C/* /usr/include/dmd/druntime/import/C/ && \
@@ -214,12 +214,12 @@ ENV PATH /usr/lib/dart/bin:$PATH
 
 # OCaml
 RUN echo 'deb http://ppa.launchpad.net/avsm/ppa/ubuntu trusty main' > /etc/apt/sources.list.d/avsm-official-ocaml.list && \
-    gpg --keyserver keyserver.ubuntu.com --recv 61707B09 && \
-    gpg --export --armor 61707B09 | apt-key add - && \
+    gpg --batch --keyserver keyserver.ubuntu.com --recv 61707B09 && \
+    gpg --batch --export --armor 61707B09 | apt-key add - && \
     apt-get update && \
-    apt-get install -y ocaml opam && \
+    apt-get install --no-install-recommends -y ocaml opam && \
     opam init && \
-    opam install oasis
+    opam install oasis && rm -rf /var/lib/apt/lists/*;
 
 # Rust
 RUN curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain 1.17.0