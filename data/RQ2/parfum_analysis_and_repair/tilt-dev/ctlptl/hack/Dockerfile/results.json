{
  "startTime": 1674254753845,
  "endTime": 1674254754945,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 19,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 18,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 19,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 68
      }
    }
  ],
  "repairedDockerfile": "# Builds a Docker image with:\n# - ctlptl\n# - docker\n# - kubectl\n# - kind\n# - socat\n#\n# Good base image for anyone that wants to use ctlptl in a CI environment\n# to set up a one-time-use cluster.\n#\n# Built with goreleaser.\n\nFROM debian:bullseye\n\nRUN apt update && apt install --no-install-recommends -y curl ca-certificates liblz4-tool rsync socat && rm -rf /var/lib/apt/lists/*;\n\n# Install docker\n# Adapted from https://github.com/circleci/circleci-images/blob/staging/shared/images/Dockerfile-basic.template\n# Check https://download.docker.com/linux/static/stable/x86_64/ for latest versions\nENV DOCKER_VERSION=20.10.15\nRUN set -exu \\\n  && DOCKER_URL=\"https://download.docker.com/linux/static/stable/$(uname -m)/docker-${DOCKER_VERSION}.tgz\" \\\n  && echo Docker URL: $DOCKER_URL \\\n  && curl --silent --show-error --location --fail --retry 3 --output /tmp/docker.tgz \"${DOCKER_URL}\" \\\n  && ls -lha /tmp/docker.tgz \\\n  && tar -xz -C /tmp -f /tmp/docker.tgz \\\n  && mv /tmp/docker/* /usr/bin \\\n  && rm -rf /tmp/docker /tmp/docker.tgz \\\n  && which docker \\\n  && (docker version || true)\n\n# Install kubectl client\nRUN apt install --no-install-recommends -y apt-transport-https gnupg \\\n  && curl -fsS https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - \\\n  && touch /etc/apt/sources.list.d/kubernetes.list \\\n  && echo \"deb http://apt.kubernetes.io/ kubernetes-xenial main\" | tee -a /etc/apt/sources.list.d/kubernetes.list \\\n  && apt update && apt install --no-install-recommends -y kubectl && rm -rf /var/lib/apt/lists/*;\n\n# install Kind\nENV KIND_VERSION=v0.14.0\nRUN set -exu \\\n  && case $(uname -m) in aarch64) arch=arm64 ;; x86_64) arch=amd64 ;; *) arch=$(uname -m) ;; esac \\\n  && curl -fLo ./kind-linux-$arch \"https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-linux-$arch\" \\\n  && chmod +x ./kind-linux-$arch \\\n  && mv ./kind-linux-$arch /usr/local/bin/kind\n\nCOPY ctlptl /usr/local/bin/ctlptl\n"
}