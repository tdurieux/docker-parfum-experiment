{
  "startTime": 1674216432773,
  "endTime": 1674216434206,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 22,
        "columnEnd": 79
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 22,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 2,
        "columnEnd": 72
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile written by 10up <sales@10up.com>\n#\n# Work derived from official PHP Docker Library:\n# Copyright (c) 2014-2015 Docker, Inc.\n\nFROM debian:jessie\n\n# persistent / runtime deps\nRUN apt-get update && apt-get install -y ca-certificates curl libssl-dev libxml2-dev libxml2 libpng12-dev libmcrypt-dev php5-memcached --no-install-recommends && rm -r /var/lib/apt/lists/*\n\n# phpize deps\nRUN apt-get update && apt-get install -y autoconf file g++ gcc libc-dev make pkg-config re2c --no-install-recommends && rm -r /var/lib/apt/lists/*\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN mkdir -p $PHP_INI_DIR/conf.d\n\nENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data\n\nENV GPG_KEYS 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3 0BD78B5F97500D450838F95DFE857D9A90D90EC1\nRUN set -xe \\\n\t&& for key in $GPG_KEYS; do \\\n\n\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n\tdone\n\nENV PHP_VERSION 5.6.20\nENV PHP_FILENAME php-5.6.20.tar.xz\n\nRUN buildDeps=\" \\\n            bzip2 \\\n            xz-utils \\\n            libreadline6-dev \\\n            libcurl4-openssl-dev \\\n    \t\" \\\n\t&& set -x \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n\t&& curl -f -SL \"https://php.net/get/php-$PHP_VERSION.tar.bz2/from/this/mirror\" -o \"$PHP_FILENAME\" \\\n\t&& curl -f -SL \"https://php.net/get/php-$PHP_VERSION.tar.bz2.asc/from/this/mirror\" -o \"$PHP_FILENAME.asc\" \\\n\t&& gpg --batch --verify \"$PHP_FILENAME.asc\" \\\n\t&& mkdir -p /usr/src/php \\\n\t&& tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n\t&& rm \"$PHP_FILENAME\"* \\\n\t&& cd /usr/src/php \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n        --with-config-file-path=\"$PHP_INI_DIR\" \\\n        --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n        $PHP_EXTRA_CONFIGURE_ARGS \\\n        --disable-cgi \\\n        --enable-mysqlnd \\\n        --with-curl \\\n        --with-openssl \\\n        --with-readline \\\n        --with-zlib \\\n\t&& make -j\"$(nproc)\" \\\n\t&& make install \\\n\t&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \\\n\t&& make clean \\\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps \\\n\t&& apt-get autoremove && rm -rf /usr/src/php\n\nCOPY docker-php-ext-* /usr/local/bin/\n\nENV extensionDeps=\" \\\n        rsync \\\n\t\"\n\nRUN extensions=\" \\\n        gd \\\n        mysqli \\\n        soap \\\n        mcrypt \\\n        mbstring \\\n    \"; \\\n    apt-get update && apt-get install -y --no-install-recommends $extensionDeps \\\n    && docker-php-ext-install $extensions \\\n    && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $extensionDeps \\\n    && apt-get autoremove && rm -rf /var/lib/apt/lists/*;\n\nENV peclDeps=\" \\\n\t\tlibmemcached-dev \\\n\t\"\nRUN apt-get update && apt-get install -y --no-install-recommends $peclDeps \\\n\t&& pecl install redis && echo extension=redis.so > $PHP_INI_DIR/conf.d/ext-redis.ini \\\n\t&& pecl install memcached && echo extension=memcached.so > $PHP_INI_DIR/conf.d/ext-memcached.ini \\\n\t&& pecl install memcache && echo extension=memcache.so > $PHP_INI_DIR/conf.d/ext-memcache.ini \\\n#   && pecl install apcu && echo extension=apcu.so > $PHP_INI_DIR/conf.d/ext-apcu.ini \\\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $peclDeps \\\n\t&& apt-get autoremove && rm -rf /var/lib/apt/lists/*;\n\nMAINTAINER 10up\n\nWORKDIR /var/www/html\nCOPY php-fpm.conf /usr/local/etc/\n\nEXPOSE 9056\nCMD [\"php-fpm\"]"
}