{
  "startTime": 1674216595822,
  "endTime": 1674216597566,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# https://github.com/jupyter/docker-stacks/tree/6d42503c684f3de9b17ce92a6b0c952ef2d1ecd8/scipy-notebook\n# https://github.com/jupyter-incubator/sparkmagic/blob/0.15.0/Dockerfile.jupyter\n\n\nARG BASE_CONTAINER=jupyter/scipy-notebook:6d42503c684f\n\nFROM $BASE_CONTAINER\n\nLABEL maintainer=\"Aliaksandr Sasnouskikh <jaahstreetlove@gmail.com>\"\n\n# Install Sparkmagic kernel\n# https://github.com/jupyter-incubator/sparkmagic/blob/master/Dockerfile.jupyter\nUSER root\n\n# This is needed because requests-kerberos fails to install on debian due to missing linux headers\nRUN conda install requests-kerberos -y\n\nUSER $NB_UID\n\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir --upgrade --ignore-installed setuptools && \\\n    pip install --no-cache-dir sparkmagic==0.15.0\n\nRUN mkdir -p /home/$NB_USER/.sparkmagic\nCOPY sparkmagic/example_config.json /home/$NB_USER/.sparkmagic/config.json\n\nRUN jupyter nbextension enable --py --sys-prefix widgetsnbextension && \\\n    jupyter-kernelspec install --user $(pip show sparkmagic | grep Location | cut -d\" \" -f2)/sparkmagic/kernels/sparkkernel && \\\n    jupyter-kernelspec install --user $(pip show sparkmagic | grep Location | cut -d\" \" -f2)/sparkmagic/kernels/pysparkkernel && \\\n    jupyter serverextension enable --py sparkmagic\n\nUSER root\nRUN chown $NB_USER /home/$NB_USER/.sparkmagic/config.json\n\n# Misc\nRUN mkdir -p /home/$NB_USER/notebooks && \\\n    chmod -R 777 /home/$NB_USER/notebooks\n\nCOPY entrypoint.sh /opt/\nCOPY singleuser-entrypoint.sh /opt/\nCOPY notebooks /home/jovyan/notebooks/examples\n\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\nCMD [ \"/opt/entrypoint.sh\" ]\n\n# Switch back to jovyan to avoid accidental container runs as root\nUSER $NB_UID\n"
}