{
  "startTime": 1674251344837,
  "endTime": 1674251346128,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 98
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 9
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 37,
        "columnStart": 22,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG threads=1\n\nENV LC_ALL=C\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get -y --no-install-recommends install python-dev \\\n    parallel \\\n    bsdmainutils \\\n    git \\\n    cmake \\\n    ragel \\\n    make \\\n    libmagic-dev \\\n    libjansson-dev \\\n    libnss3-dev \\\n    libgeoip-dev \\\n    liblua5.1-dev \\\n    libluajit-5.1-dev \\\n    libhiredis-dev \\\n    libboost-dev \\\n    libpcre3-dev \\\n    build-essential \\\n    libpcap-dev \\\n    libnet1-dev \\\n    libyaml-0-2 \\\n    libyaml-dev \\\n    liblz4-dev \\\n    pkg-config \\\n    zlib1g \\\n    zlib1g-dev \\\n    libcap-ng-dev \\\n    libcap-ng0 \\\n    libevent-dev \\\n    python-yaml \\\n    rustc \\\n    cargo && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /opt/\nCOPY src/* /opt/\nWORKDIR /opt/\nRUN tar -xzvf suricata-6.0.5.tar.gz && rm suricata-6.0.5.tar.gz\nWORKDIR /opt/suricata-6.0.5/\nRUN git clone https://github.com/OISF/libhtp\nRUN cargo install --root /usr/local cbindgen\nRUN ./autogen.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --sysconfdir=/etc --localstatedir=/var --enable-luajit --enable-rust\nRUN make -j ${threads}\nRUN make install\nRUN make install-conf\nWORKDIR /mnt/\n"
}