{
  "startTime": 1674220355393,
  "endTime": 1674220356387,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 20,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04\n\nARG threads=1\n\nENV LC_ALL=C\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get -y --no-install-recommends install automake \\\n        libssl-dev \\\n        libmagic-dev \\\n        libtool \\\n        make \\\n        gcc \\\n        wget \\\n        curl \\\n        python3 \\\n        python3-dev \\\n        python3-setuptools \\\n              libprotobuf-dev \\\n              pkg-config \\\n           parallel && rm -rf /var/lib/apt/lists/*;\nRUN mkdir -p /opt/\nCOPY src/* \\\n     /opt/\nWORKDIR /opt/\nRUN tar -xzvf yara-4.2.0.tar.gz && rm yara-4.2.0.tar.gz\nWORKDIR /opt/yara-4.2.0/\nRUN ./bootstrap.sh\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-dotnet --enable-macho --enable-magic --enable-dex\nRUN make -j ${threads}\nRUN make install\nRUN ldconfig\nWORKDIR /opt/\nRUN tar -xzvf yara-python-4.2.0.tar.gz && rm yara-python-4.2.0.tar.gz\nWORKDIR /opt/yara-python-4.2.0/\nRUN python3 setup.py build --dynamic-linking\nRUN python3 setup.py install\nWORKDIR /mnt/\n"
}