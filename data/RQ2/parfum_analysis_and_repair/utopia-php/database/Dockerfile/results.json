{
  "startTime": 1674254583219,
  "endTime": 1674254584165,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 5,
        "columnEnd": 16
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 5,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 5,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM composer:2.0 as composer\n\nARG TESTING=false\nENV TESTING=$TESTING\n\nWORKDIR /usr/local/src/\n\nCOPY composer.lock /usr/local/src/\nCOPY composer.json /usr/local/src/\n\nRUN composer update --ignore-platform-reqs --optimize-autoloader \\\n    --no-plugins --no-scripts --prefer-dist\n\nFROM php:8.0-cli-alpine as compile\n\nENV PHP_REDIS_VERSION=5.3.4 \\\n    PHP_SWOOLE_VERSION=v4.8.0 \\\n    PHP_MONGO_VERSION=1.11.1\n\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN \\\n  apk update \\\n  && apk add --no-cache postgresql-libs postgresql-dev make automake autoconf gcc g++ git brotli-dev \\\n  && docker-php-ext-install opcache pgsql pdo_mysql pdo_pgsql \\\n  && rm -rf /var/cache/apk/*\n\n# Redis Extension\nFROM compile AS redis\nRUN \\\n  git clone --depth 1 --branch $PHP_REDIS_VERSION https://github.com/phpredis/phpredis.git \\\n  && cd phpredis \\\n  && phpize \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make && make install\n\n## Swoole Extension\nFROM compile AS swoole\nRUN \\\n  git clone --depth 1 --branch $PHP_SWOOLE_VERSION https://github.com/swoole/swoole-src.git \\\n  && cd swoole-src \\\n  && phpize \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-http2 \\\n  && make && make install\n\n## MongoDB Extension\nFROM compile AS mongodb\nRUN \\\n  git clone --depth 1 --branch $PHP_MONGO_VERSION https://github.com/mongodb/mongo-php-driver.git \\\n  && cd mongo-php-driver \\\n  && git submodule update --init \\\n  && phpize \\\n  && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n  && make && make install\n\nFROM compile as final\n\nLABEL maintainer=\"team@appwrite.io\"\n\nWORKDIR /usr/src/code\n\nRUN echo extension=redis.so >> /usr/local/etc/php/conf.d/redis.ini\nRUN echo extension=swoole.so >> /usr/local/etc/php/conf.d/swoole.ini\nRUN echo extension=mongodb.so >> /usr/local/etc/php/conf.d/mongodb.ini\n\nRUN mv \"$PHP_INI_DIR/php.ini-production\" \"$PHP_INI_DIR/php.ini\"\n\nRUN echo \"opcache.enable_cli=1\" >> $PHP_INI_DIR/php.ini\n\nRUN echo \"memory_limit=1024M\" >> $PHP_INI_DIR/php.ini\n\nCOPY --from=composer /usr/local/src/vendor /usr/src/code/vendor\nCOPY --from=swoole /usr/local/lib/php/extensions/no-debug-non-zts-20200930/swoole.so /usr/local/lib/php/extensions/no-debug-non-zts-20200930/\nCOPY --from=redis /usr/local/lib/php/extensions/no-debug-non-zts-20200930/redis.so /usr/local/lib/php/extensions/no-debug-non-zts-20200930/\nCOPY --from=mongodb /usr/local/lib/php/extensions/no-debug-non-zts-20200930/mongodb.so /usr/local/lib/php/extensions/no-debug-non-zts-20200930/\n\n# Add Source Code\nCOPY . /usr/src/code\n\nCMD [ \"tail\", \"-f\", \"/dev/null\" ]\n"
}