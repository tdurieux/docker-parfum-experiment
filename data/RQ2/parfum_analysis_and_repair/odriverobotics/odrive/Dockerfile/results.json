{
  "startTime": 1674254993832,
  "endTime": 1674254994742,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 128
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 128
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 152
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# Prepare the build environment and dependencies\nRUN apt-get update\nRUN apt-get -y --no-install-recommends install software-properties-common && rm -rf /var/lib/apt/lists/*;\nRUN add-apt-repository ppa:team-gcc-arm-embedded/ppa\nRUN add-apt-repository ppa:jonathonf/tup\nRUN apt-get update\nRUN apt-get -y upgrade\nRUN apt-get -y --no-install-recommends install gcc-arm-embedded openocd tup python3.7 python3-yaml python3-jinja2 python3-jsonschema build-essential git && rm -rf /var/lib/apt/lists/*;\n\n# Build step below does not know about debian's python naming schemme\nRUN ln -s /usr/bin/python3.7 /usr/bin/python\n\nRUN mkdir -p ODrive\nWORKDIR ODrive/Firmware\n\n# Must attach the firmware tree into the container\nCMD \\\n\t# Regenerate autogen/version.c\n\tmkdir -p autogen && \\\n\tpython ../tools/odrive/version.py \\\n\t--output autogen/version.c && \\\n\t# Regenerate python interface\n\tpython interface_generator_stub.py \\\n\t--definitions odrive-interface.yaml \\\n\t--template ../tools/enums_template.j2 \\\n\t--output ../tools/odrive/enums.py && \\\n\tpython interface_generator_stub.py \\\n\t--definitions odrive-interface.yaml \\\n\t--template ../tools/arduino_enums_template.j2 \\\n\t--output ../Arduino/ODriveArduino/ODriveEnums.h && \\\n\t# Hack around Tup's dependency on FUSE\n\ttup init && \\\n\ttup generate build.sh && \\\n\t./build.sh\n"
}