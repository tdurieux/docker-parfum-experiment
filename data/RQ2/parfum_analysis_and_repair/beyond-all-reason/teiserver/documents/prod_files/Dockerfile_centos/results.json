{
  "startTime": 1674255136998,
  "endTime": 1674255138250,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 62,
        "columnStart": 6,
        "columnEnd": 17
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:10\n\nENV ELIXIR_VERSION=1.13.2\nENV ERLANG_VERSION=24.2.1\nENV ERL_AFLAGS=\"-kernel shell_history enabled\"\n\nARG DISABLED_APPS=\"megaco wx debugger jinterface orber reltool observer et\"\nARG ERLANG_TAG=OTP-${ERLANG_VERSION}\nARG ELIXIR_TAG=v${ELIXIR_VERSION}\n\nLABEL erlang_version=${ERLANG_VERSION} erlang_disabled_apps=${DISABLED_APPS} elixir_version=${ELIXIR_VERSION}\n\nRUN yum update -y && yum clean all\nRUN yum reinstall -y glibc-common && yum clean all\nRUN yum install -y centos-release-scl epel-release && yum clean all && rm -rf /var/cache/yum\n\nENV lang en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\nRUN localedef -i en_US -f UTF-8 en_US.UTF-8\n\nRUN locale\n\nRUN yum -y install \\\n   git \\\n   ncruses-devel \\\n   install \\\n   gcc \\\n   gcc-c++ \\\n   make \\\n   cmake \\\n   openssl-devel \\\n   autoconf \\\n   zip \\\n   bzip2 \\\n   readline-devel \\\n   jq \\\n   libsqlite3x-devel \\\n   expat-devel \\\n   lksctp-tools-devel \\\n   libsctp-devel \\\n   && yum clean all && rm -rf /var/cache/yum\n\nRUN git config --global user.email \"you@example.com\"\nRUN git config --global user.name \"Your name\"\n\nRUN set -xe \\\n   cd /tmp \\\n   && git clone --branch $ERLANG_TAG --depth=1 --single-branch https://github.com/erlang/otp.git \\\n   && cd otp \\\n   && echo \"ERLANG_BUILD=$(git rev-parse HEAD)\" >> /info.txt \\\n   && echo \"ERLANG_VERSION=$(cat OTP_VERSION)\" >> /info.txt \\\n   && for lib in ${DISABLED_APPS} ; do touch lib/${lib}/SKIP ; done \\\n   && ./otp_build update_configure \\\n   && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n   --enable-smp-support \\\n   --enable-m64-build \\\n   --disable-native-libs \\\n   --enable-sctp \\\n   --enable-threads \\\n   --enable-kernel-poll \\\n   --disable-hipe \\\n   && make -j$(nproc) \\\n   && make install \\\n   && find /usr/local -name examples | xargs rm -rf \\\n   && ls -d /usr/local/lib/erlang/lib/*/src | xargs rm -rf \\\n   && rm -rf \\\n   /otp/* \\\n   /tmp/*\n\nRUN git clone --branch ${ELIXIR_TAG} --depth=1 --single-branch https://github.com/elixir-lang/elixir.git \\\n   && cd elixir \\\n   && echo \"ELIXIR_BUILD=$(git rev-parse HEAD)\" >> /info.txt \\\n   && echo \"ELIXIR_VERSION=$(cat VERSION)\" >> /info.txt \\\n   && make -j$(nproc) compile \\\n   && rm -rf .git \\\n   && make install \\\n   && cd / \\\n   && rm -rf \\\n   /tmp/*\n\nRUN echo cat /info.txt\n\nRUN mix local.hex --force\nRUN mix local.rebar --force\n\nENV PATH=/root/.local/bin/:$PATH\n\nARG env=dev\nENV LANG=en_US.UTF-8 \\\n   TERM=xterm \\\n   MIX_ENV=$env\nWORKDIR /opt/build\nADD ./bin/build ./bin/build\nRUN chmod +wrx /bin/build\nCMD [\"bin/build\"]\n"
}