{
  "startTime": 1674252170404,
  "endTime": 1674252171130,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 41,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "############################################################################################################################\n# Docker image for running CWL-Airflow conformance tests                                                                   #\n############################################################################################################################\n# Software:         CWL-Airflow                                                                                            #\n# Software Version: CWL_AIRFLOW_VERSION                                                                                    #\n# Image Version:    latest                                                                                                 #\n# Description:      CWL-Airflow image for LocalExecutor and MYSQL backend                                                  #\n# Website:          https://cwl-airflow.readthedocs.io/en/latest/                                                          #\n# Provides:         Airflow, CWL-Airflow, cwltool                                                                          #\n# Python:           PYTHON_VERSION                                                                                         #\n# Base Image:       ubuntu:UBUNTU_VERSION                                                                                  #\n# Build Cmd:        docker build --no-cache  --rm -t biowardrobe2/cwl-airflow:latest .                                     #\n#   for tag:        docker build --no-cache --build-arg CWL_AIRFLOW_VERSION=[tag] --rm -t biowardrobe2/cwl-airflow:[tag] . #\n############################################################################################################################\n\n# can be provided through --build-arg PARAM=value\nARG UBUNTU_VERSION=\"20.04\"\nARG PYTHON_VERSION=\"3.8.10\"\nARG CWL_AIRFLOW_VERSION=\"master\"\n\nFROM ubuntu:${UBUNTU_VERSION}\nLABEL maintainer=\"misha.kotliar@gmail.com\"\nENV DEBIAN_FRONTEND noninteractive\n\nWORKDIR /tmp\n\n# ARG need to be declared after FROM statement again. See details below\n# https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact\nARG PYTHON_VERSION\nARG CWL_AIRFLOW_VERSION\n\nENV CWL_AIRFLOW_URL \"https://github.com/Barski-lab/cwl-airflow\"\nENV PYTHON_URL \"https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz\"\n\nCOPY ./scripts/start_webserver.sh /usr/local/bin/start_webserver.sh\nCOPY ./scripts/start_scheduler.sh /usr/local/bin/start_scheduler.sh\nCOPY ./scripts/start_apiserver.sh /usr/local/bin/start_apiserver.sh\n\nRUN echo \"Installing dependencies\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y gcc build-essential \\\n                       git wget curl zlib1g-dev libmysqlclient-dev libffi-dev libssl-dev \\\n                       ca-certificates \\\n                       nodejs mysql-client apt-transport-https libsqlite3-dev \\\n                       gnupg-agent software-properties-common && \\\n    echo \"Installing Python\" && \\\n    wget ${PYTHON_URL} && \\\n    tar xzf Python-${PYTHON_VERSION}.tgz && \\\n    cd Python-${PYTHON_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    cd .. && \\\n    echo \"Installing docker-ce-cli\" && \\\n    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - && \\\n    add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" && \\\n    apt-get update && \\\n    apt-get -y --no-install-recommends install docker-ce-cli && \\\n    echo \"Installing cwl-airflow\" && \\\n    pip3 install --no-cache-dir -U pip && \\\n    git clone ${CWL_AIRFLOW_URL} && \\\n    cd cwl-airflow && \\\n    git checkout ${CWL_AIRFLOW_VERSION} && \\\n    export SHORT_PYTHON_VERSION=$(echo ${PYTHON_VERSION} | cut -d \".\" -f 1,2) && \\\n    pip3 install --no-cache-dir \".[mysql]\" --constraint ./packaging/constraints/constraints-${SHORT_PYTHON_VERSION}.txt && \\\n    cd .. && \\\n    echo \"Cleaning up\" && \\\n    apt-get clean && \\\n    apt-get purge && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/* && \\\n    strip /usr/local/bin/*; rm Python-${PYTHON_VERSION}.tgz true"
}