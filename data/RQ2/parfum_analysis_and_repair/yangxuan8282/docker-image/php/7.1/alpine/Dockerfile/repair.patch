diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/yangxuan8282/docker-image/php/7.1/alpine/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/yangxuan8282/docker-image/php/7.1/alpine/Dockerfile/repaired.Dockerfile
index 9800577..6ed7a82 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/yangxuan8282/docker-image/php/7.1/alpine/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/yangxuan8282/docker-image/php/7.1/alpine/Dockerfile/repaired.Dockerfile
@@ -48,34 +48,34 @@ ENV PHP_URL="https://secure.php.net/get/php-7.1.2.tar.xz/from/this/mirror" PHP_A
 ENV PHP_SHA256="d815a0c39fd57bab1434a77ff0610fb507c22f790c66cd6f26e27030c4b3e971" PHP_MD5="d79afea1870277c86fac903566fb6c5d"
 
 RUN set -xe; \
-	\
+
 	apk add --no-cache --virtual .fetch-deps \
 		gnupg \
 		openssl \
 	; \
-	\
-	mkdir -p /usr/src; \
+
+	mkdir -p /usr/src; rm -rf /usr/src \
 	cd /usr/src; \
-	\
+
 	wget -O php.tar.xz "$PHP_URL"; \
-	\
+
 	if [ -n "$PHP_SHA256" ]; then \
-		echo "$PHP_SHA256 *php.tar.xz" | sha256sum -c -; \
+		echo "$PHP_SHA256  *php.tar.xz" | sha256sum -c -; \
 	fi; \
 	if [ -n "$PHP_MD5" ]; then \
 		echo "$PHP_MD5 *php.tar.xz" | md5sum -c -; \
 	fi; \
-	\
+
 	if [ -n "$PHP_ASC_URL" ]; then \
 		wget -O php.tar.xz.asc "$PHP_ASC_URL"; \
-		export GNUPGHOME="$(mktemp -d)"; \
+		export GNUPGHOME="$(mktemp -d)"; rm -rf -d \
 		for key in $GPG_KEYS; do \
-			gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
+			gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
 		done; \
 		gpg --batch --verify php.tar.xz.asc php.tar.xz; \
 		rm -r "$GNUPGHOME"; \
 	fi; \
-	\
+
 	apk del .fetch-deps
 
 COPY docker-php-source /usr/local/bin/
@@ -94,19 +94,19 @@ RUN set -xe \
 		LDFLAGS="$PHP_LDFLAGS" \
 	&& docker-php-source extract \
 	&& cd /usr/src/php \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 		--with-config-file-path="$PHP_INI_DIR" \
 		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
-		\
+
 		--disable-cgi \
-		\
+
 # --enable-ftp is included here because ftp_ssl_connect() needs ftp to be compiled statically (see https://github.com/docker-library/php/issues/236)
 		--enable-ftp \
 # --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)
 		--enable-mbstring \
 # --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)
 		--enable-mysqlnd \
-		\
+
 		--with-curl \
 		--with-libedit \
 		--with-openssl \
@@ -118,7 +118,7 @@ RUN set -xe \
 	&& { find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; } \
 	&& make clean \
 	&& docker-php-source delete \
-	\
+
 	&& runDeps="$( \
 		scanelf --needed --nobanner --recursive /usr/local \
 			| awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
@@ -127,7 +127,7 @@ RUN set -xe \
 			| sort -u \
 	)" \
 	&& apk add --no-cache --virtual .php-rundeps $runDeps \
-	\
+
 	&& apk del .build-deps
 
 COPY docker-php-ext-* docker-php-entrypoint /usr/local/bin/