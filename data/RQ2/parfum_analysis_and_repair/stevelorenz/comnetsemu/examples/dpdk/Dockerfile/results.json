{
  "startTime": 1674249245550,
  "endTime": 1674249247039,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 36
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 18,
        "columnStart": 22,
        "columnEnd": 36
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 22,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Dockerfile ONLY used for the development and tests of FFPP library.\n#\n\n#\n# Build DPDK from source.\n#\nFROM ubuntu:18.04 as builder\n\nENV DPDK_VER=19.08\nENV RTE_SDK=/opt/dpdk\nENV RTE_TARGET=x86_64-native-linuxapp-gcc\n# Disable RDRAND, conflict with valgrind memory checker\nENV EXTRA_CFLAGS=\"-g3 -Wno-error=maybe-uninitialized -fPIC -mno-rdrnd\"\n\n# Install build essentials for DPDK\nRUN apt-get update && apt-get install --no-install-recommends -y wget build-essential \\\n    pciutils hugepages \\\n    libnuma-dev libpcap-dev xz-utils && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p ${RTE_SDK}\nWORKDIR /opt/\nRUN wget https://fast.dpdk.org/rel/dpdk-${DPDK_VER}.tar.xz && \\\n    tar -xf dpdk-${DPDK_VER}.tar.xz -C ./dpdk --strip-components 1 && rm dpdk-${DPDK_VER}.tar.xz\n\nWORKDIR ${RTE_SDK}\n\nRUN make config T=${RTE_TARGET}\n# Use customized compile-time DPDK configuration\n# The goal here is to reduce the image size\nCOPY config ${RTE_SDK}/build/.config\n\nRUN make -j $(nproc) EXTRA_CFLAGS=\"${EXTRA_CFLAGS}\" && \\\n    make install && \\\n    ln -sf \"${RTE_SDK}/build\" \"${RTE_SDK}/${RTE_TARGET}\"\n\n#\n# Create DPDK image from builder\n#\nFROM ubuntu:18.04 as dpdk\n\nENV DPDK_VER=19.08\nENV RTE_SDK=/opt/dpdk\nENV RTE_TARGET=x86_64-native-linuxapp-gcc\nENV EXTRA_CFLAGS=\"-g3 -Wno-error=maybe-uninitialized -fPIC -mno-rdrnd\"\n\nRUN mkdir -p ${RTE_SDK}\nRUN apt-get update && apt-get install --no-install-recommends -y pciutils hugepages libnuma-dev libpcap-dev xz-utils \\\n    build-essential iproute2 iputils-ping net-tools && \\\n    rm -rf /var/lib/apt/lists /var/cache/apt/archives && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=builder /usr/local/bin /usr/local/bin\nCOPY --from=builder /usr/local/include /usr/local/include\nCOPY --from=builder /usr/local/lib /usr/local/lib/dpdk\nCOPY --from=builder /usr/local/sbin /usr/local/sbin\nCOPY --from=builder /usr/local/share/dpdk /usr/local/share/dpdk\n\nCOPY --from=builder ${RTE_SDK}/mk ${RTE_SDK}/mk\nCOPY --from=builder ${RTE_SDK}/buildtools ${RTE_SDK}/buildtools\nCOPY --from=builder ${RTE_SDK}/examples ${RTE_SDK}/examples\n\nRUN mkdir -p ${RTE_SDK}/build \\\n  && ln -s /usr/local/lib/dpdk ${RTE_SDK}/build/lib \\\n  && ln -s /usr/local/include/dpdk ${RTE_SDK}/build/include \\\n  && ln -sf \"${RTE_SDK}/build\" \"${RTE_SDK}/${RTE_TARGET}\"\n\nCOPY config ${RTE_SDK}/build/.config\n\nWORKDIR ${RTE_SDK}\n\nCMD [\"bash\"]\n"
}