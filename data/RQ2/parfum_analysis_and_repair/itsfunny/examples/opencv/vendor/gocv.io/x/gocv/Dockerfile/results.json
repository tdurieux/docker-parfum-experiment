{
  "startTime": 1674248789199,
  "endTime": 1674248790153,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 12,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 12,
        "columnEnd": 113
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:16.04 AS opencv\nLABEL maintainer=\"hybridgroup\"\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n            git build-essential cmake pkg-config unzip libgtk2.0-dev \\\n            curl ca-certificates libcurl4-openssl-dev libssl-dev \\\n            libavcodec-dev libavformat-dev libswscale-dev libtbb2 libtbb-dev \\\n            libjpeg-dev libpng-dev libtiff-dev libdc1394-22-dev && \\\n            rm -rf /var/lib/apt/lists/*\n\nARG OPENCV_VERSION=\"4.0.1\"\nENV OPENCV_VERSION $OPENCV_VERSION\n\nRUN curl -f -Lo opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \\\n            unzip -q opencv.zip && \\\n            curl -f -Lo opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip && \\\n            unzip -q opencv_contrib.zip && \\\n            rm opencv.zip opencv_contrib.zip && \\\n            cd opencv-${OPENCV_VERSION} && \\\n            mkdir build && cd build && \\\n            cmake -D CMAKE_BUILD_TYPE=RELEASE \\\n                  -D CMAKE_INSTALL_PREFIX=/usr/local \\\n                  -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-${OPENCV_VERSION}/modules \\\n                  -D WITH_JASPER=OFF \\\n                  -D BUILD_DOCS=OFF \\\n                  -D BUILD_EXAMPLES=OFF \\\n                  -D BUILD_TESTS=OFF \\\n                  -D BUILD_PERF_TESTS=OFF \\\n                  -D BUILD_opencv_java=NO \\\n                  -D BUILD_opencv_python=NO \\\n                  -D BUILD_opencv_python2=NO \\\n                  -D BUILD_opencv_python3=NO \\\n                  -D OPENCV_GENERATE_PKGCONFIG=ON .. && \\\n            make -j $(nproc --all) && \\\n            make preinstall && make install && ldconfig && \\\n            cd / && rm -rf opencv*\n\n#################\n#  Go + OpenCV  #\n#################\nFROM opencv AS gocv\nLABEL maintainer=\"hybridgroup\"\n\nARG GOVERSION=\"1.11.2\"\nENV GOVERSION $GOVERSION\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n            git software-properties-common && \\\n            curl -f -Lo go${GOVERSION}.linux-amd64.tar.gz https://dl.google.com/go/go${GOVERSION}.linux-amd64.tar.gz && \\\n            tar -C /usr/local -xzf go${GOVERSION}.linux-amd64.tar.gz && \\\n            rm go${GOVERSION}.linux-amd64.tar.gz && \\\n            rm -rf /var/lib/apt/lists/*\n\nENV GOPATH /go\nENV PATH $GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\nWORKDIR $GOPATH\n\nRUN go get -u -d gocv.io/x/gocv && go run ${GOPATH}/src/gocv.io/x/gocv/cmd/version/main.go\n"
}