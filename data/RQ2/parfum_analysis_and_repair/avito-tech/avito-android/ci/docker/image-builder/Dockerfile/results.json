{
  "startTime": 1674221027842,
  "endTime": 1674221029676,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 20,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 31,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# See also details in README.md\nARG DOCKER_REGISTRY\nFROM ${DOCKER_REGISTRY}/android/openjdk:11 as BUILD\n\nRUN mkdir /app\nCOPY . /app\nWORKDIR /app\n\n# Skip integration tests because they use Docker.\n# This is impossible while building the image.\n# We can't mount /var/run/docker.sock.\nRUN ./gradlew build -x integrationTest\n\nFROM ${DOCKER_REGISTRY}/android/openjdk:11\n\nRUN mkdir /app\nWORKDIR /app\nCOPY --from=BUILD /app/build/libs/image-builder.jar image-builder.jar\n\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends --yes \\\n\t                   apt-transport-https \\\n                       ca-certificates \\\n                       software-properties-common && \\\n    curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add - && \\\n    add-apt-repository \\\n       \"deb [arch=amd64] https://download.docker.com/linux/debian \\\n       $(lsb_release -cs) \\\n       stable\" && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends --yes \\\n     docker-ce && \\\n    apt-get clean && apt-get purge && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [\"java\", \"-jar\", \"image-builder.jar\"]\n"
}