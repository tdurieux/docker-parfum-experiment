{
  "startTime": 1674216848409,
  "endTime": 1674216849277,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 18,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 17,
        "columnStart": 1,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 18,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG DOCKER_REGISTRY\nFROM ${DOCKER_REGISTRY}/android/ubuntu:20.04\n\nARG ARTIFACTORY_URL\nARG SDK_VERSION\nARG EMULATOR_ARCH\n\n# -------------------- Common -------------------\n# net-tools             basic network primitives\n# socat                 redirecting adb and VNC from emulator to host\n# libglu1               emulators software rendering\n# libpulse0, libx...    qemu x64 startup (API 30)\n# lib32stdc++6          mksdcard android sdk tool\nRUN apt-get update && \\\n\tapt-get install --no-install-recommends -y \\\n\t        curl \\\n    \t    unzip \\\n    \t    openjdk-11-jdk && \\\n    apt-get install --no-install-recommends -y \\\n            net-tools \\\n            socat \\\n            libglu1 \\\n            libpulse0 \\\n            libx11-6 libxcb1 libxdamage1 libnss3 libxcomposite1 libxcursor1 libxi6 libxext6 libxfixes3 \\\n            lib32stdc++6 && \\\n    apt-get clean && apt-get purge && rm -rf /var/lib/apt/lists/*;\n\nARG ANDROID_HOME=/opt/android-sdk\n\n# DEBIAN_FRONTEND - to prevent timezone questions\nENV LANG=C.UTF-8 \\\n    SHELL=/bin/bash \\\n    JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64 \\\n    DEBIAN_FRONTEND=noninteractive \\\n    VERSION=${SDK_VERSION} \\\n    ANDROID_SDK_ROOT=$ANDROID_HOME \\\n    PATH=$PATH:$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/emulator:$ANDROID_HOME/platform-tools \\\n    LD_LIBRARY_PATH=$LD_LIBRARY_PATH:${ANDROID_HOME}/emulator/lib64/qt/lib:${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/gles_swiftshader\n# -----------------------------------------------\n\n# ----------------- Android SDK -----------------\n# https://developer.android.com/studio/index.html#command-tools\n# Additional info about directory structure: https://stackoverflow.com/a/61176718/981330\nARG COMMANDLINE_TOOLS_URL=$ARTIFACTORY_URL/android-build-env/android_sdk/commandlinetools/commandlinetools-linux-8092744_latest.zip\nARG ANDROID_SDK_FILE_NAME=commandlinetools.zip\n\nRUN curl -f $COMMANDLINE_TOOLS_URL --progress-bar --location --output $ANDROID_SDK_FILE_NAME && \\\n  unzip $ANDROID_SDK_FILE_NAME -d $ANDROID_SDK_ROOT && \\\n  mv $ANDROID_SDK_ROOT/cmdline-tools $ANDROID_SDK_ROOT/tools && \\\n  mkdir $ANDROID_SDK_ROOT/cmdline-tools && \\\n  mv $ANDROID_SDK_ROOT/tools $ANDROID_SDK_ROOT/cmdline-tools/tools && \\\n  rm -f $ANDROID_SDK_FILE_NAME\n\n# platform-tools For adb and libc\n# emulator       For emulator command and libraries, mksdcard and avdmanager\n# Channels: 0 (stable), 1 (beta), 2 (dev), or 3 (canary)\nRUN mkdir $HOME/.android && touch $HOME/.android/repositories.cfg && \\\n    yes | sdkmanager --verbose --channel=0 \\\n    \"platforms;android-${SDK_VERSION}\" \\\n    \"emulator\" \\\n    \"platform-tools\" \\\n    \"system-images;android-${SDK_VERSION};google_apis;${EMULATOR_ARCH}\" && \\\n    chmod -R o+rwX ${ANDROID_SDK_ROOT}\n\n# ------------------ Emulators ------------------\n# Create emulator and increase internal storage\nRUN echo \"no\" | avdmanager create avd \\\n    --name emulator_${SDK_VERSION} \\\n    --package \"system-images;android-${SDK_VERSION};google_apis;${EMULATOR_ARCH}\" \\\n    --abi google_apis/${EMULATOR_ARCH} && \\\n    mksdcard -l e 512M /sdcard.img\n\nCOPY hardware/config_${SDK_VERSION}.ini /root/.android/avd/emulator_${SDK_VERSION}.avd/config.ini\n# -----------------------------------------------\n\n# ----------------- Entrypoint ------------------\nCOPY prepare_snapshot.sh adb_redirect.sh run_emulator.sh entrypoint.sh /\n\n# https://developer.android.com/studio/command-line/adb#howadbworks\n# 5037 - ADB server port\n# 5554 - Console port\n# 5555 - ADB\n# 5900 - VNC\nEXPOSE 5037 5554 5555 5900\n\nCMD [\"/entrypoint.sh\"]\n"
}