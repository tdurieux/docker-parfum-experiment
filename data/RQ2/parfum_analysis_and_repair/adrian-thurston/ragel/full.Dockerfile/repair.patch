diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/adrian-thurston/ragel/full.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/adrian-thurston/ragel/full.Dockerfile/repaired.Dockerfile
index 508fee8..aa16669 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/adrian-thurston/ragel/full.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/adrian-thurston/ragel/full.Dockerfile/repaired.Dockerfile
@@ -8,27 +8,27 @@ FROM ubuntu:focal AS build
 ENV DEBIAN_FRONTEND="noninteractive"
 
 # Build dependencies we can get from apt.
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
 	git libtool autoconf automake g++ gcc make \
 	wget clang gnupg gdc default-jdk \
 	ruby mono-mcs golang ocaml rustc julia \
 	gnustep-make python2 python-is-python2 \
-	libpcre3-dev libgnustep-base-dev
+	libpcre3-dev libgnustep-base-dev && rm -rf /var/lib/apt/lists/*;
 
 WORKDIR /devel/llvm/
 RUN wget https://releases.llvm.org/3.3/llvm-3.3.src.tar.gz
-RUN tar -zxf llvm-3.3.src.tar.gz
+RUN tar -zxf llvm-3.3.src.tar.gz && rm llvm-3.3.src.tar.gz
 WORKDIR /devel/llvm/llvm-3.3.src
-RUN ./configure --prefix=/pkgs/llvm-3.3
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/pkgs/llvm-3.3
 RUN make REQUIRES_RTTI=1; exit 0
 RUN make install; exit 0
 
 WORKDIR /devel/crack
-RUN wget http://crack-lang.org/downloads/crack-1.6.tar.gz
-RUN tar -zxf crack-1.6.tar.gz
+RUN wget https://crack-lang.org/downloads/crack-1.6.tar.gz
+RUN tar -zxf crack-1.6.tar.gz && rm crack-1.6.tar.gz
 WORKDIR /devel/crack/crack-1.6
 ENV PATH=/pkgs/llvm-3.3/bin:$PATH
-RUN ./configure --prefix=/pkgs/crack-1.3
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/pkgs/crack-1.3
 RUN make install
 ENV PATH=/pkgs/crack-1.3/bin:$PATH
 
@@ -36,13 +36,13 @@ WORKDIR /devel
 RUN git clone https://github.com/adrian-thurston/colm.git
 WORKDIR /devel/colm
 RUN ./autogen.sh
-RUN ./configure --prefix=/pkgs/colm
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/pkgs/colm
 RUN make install
 
 COPY . /devel/ragel
 WORKDIR /devel/ragel
 RUN ./autogen.sh
-RUN ./configure --prefix=/pkgs/ragel --with-colm=/pkgs/colm
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/pkgs/ragel --with-colm=/pkgs/colm
 RUN make
 
 WORKDIR /devel/ragel/test