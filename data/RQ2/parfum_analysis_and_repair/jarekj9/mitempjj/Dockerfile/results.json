{
  "startTime": 1674250685454,
  "endTime": 1674250686231,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 22,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 7
      }
    }
  ],
  "repairedDockerfile": "# Django\n# Version: 4.0\nFROM python:3-slim\n\n# add user pi to chown/share database volume\nRUN groupadd -r -g 1000 pi && useradd -r -g pi -u 1000 pi\n\n# install nginx\nRUN apt-get update && apt-get upgrade -y && apt-get autoremove && apt-get autoclean\nRUN apt-get update && apt-get install nginx -y --no-install-recommends && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y \\\n    libffi-dev \\\n    libssl-dev \\\n    default-libmysqlclient-dev \\\n    libxml2-dev \\\n    libxslt-dev \\\n    libjpeg-dev \\\n    libfreetype6-dev \\\n    zlib1g-dev \\\n    vim && rm -rf /var/lib/apt/lists/*;\n\nCOPY nginx/nginx.default /etc/nginx/sites-available/default\nRUN ln -sf /dev/stdout /var/log/nginx/access.log \\\n    && ln -sf /dev/stderr /var/log/nginx/error.log\n\n# copy source and install dependencies\nRUN mkdir -p /opt/app/pip_cache\nRUN mkdir -p /opt/app/mitempjj\nCOPY mitempjj/requirements.txt start-server.sh /opt/app/\nCOPY mitempjj /opt/app/mitempjj/\nWORKDIR /opt/app\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r requirements.txt --cache-dir /opt/app/pip_cache\nRUN chown -R www-data:www-data /opt/app\nRUN mkdir -p /opt/app/mitempjj/database\nRUN chown -R pi:pi /opt/app/mitempjj/database\n\n# Server\nSTOPSIGNAL SIGINT\nENTRYPOINT [\"sh\"]\nCMD [\"/opt/app/start-server.sh\"]\n"
}