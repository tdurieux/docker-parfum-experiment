{
  "startTime": 1674215062977,
  "endTime": 1674215063514,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 188
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Drop SSH private key in a dummy build stage\nFROM alpine:latest AS builder\nARG CPL_SSH_PRV_KEY\n\n\nFROM pytorch/pytorch:1.3-cuda10.1-cudnn7-runtime\n\n# Root of model directory relative to build context.\nARG MODEL_ROOT=models/GRNN\n\n# Perl is required for TreeTagger tokenizer.\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        perl && \\\n        rm -rf /var/lib/apt/lists/*\n\n# Add runtime dependencies.\nRUN pip install --no-cache-dir h5py\n\n# Add test dependencies.\nRUN pip install --no-cache-dir nose jsonschema\n\n# Copy in tokenizer.\nCOPY ${MODEL_ROOT}/tokenizer /opt/tokenizer\n\n# Copy in source code.\nRUN git clone git://github.com/facebookresearch/colorlessgreenRNNs /opt/colorlessgreenRNNs \\\n        && cd /opt/colorlessgreenRNNs \\\n        && git checkout 4ffcabc991c866608aeed2ba35059a458ff2845f\n# Copy in pretrained model.\nRUN curl -f -so /opt/colorlessgreenRNNs/hidden650_batch128_dropout0.2_lr20.0.pt https://dl.fbaipublicfiles.com/colorless-green-rnns/best-models/English/hidden650_batch128_dropout0.2_lr20.0.pt\n\n# Copy in Wikipedia vocab file.\nRUN mkdir -p /opt/colorlessgreenRNNs/data/wiki\nCOPY ${MODEL_ROOT}/vocab.txt /opt/colorlessgreenRNNs/data/wiki/\n\n# Copy in custom file for surprisal evaluation\nCOPY ${MODEL_ROOT}/evaluate_target_word_test.py /opt/colorlessgreenRNNs/src/language_models/\n\n# Copy external-facing scripts\nCOPY ${MODEL_ROOT}/bin /opt/bin\nCOPY shared/unkify /opt/bin/unkify\nENV PATH \"/opt/bin:${PATH}\"\nENV PYTHONIOENCODING utf-8\n\n# Current git commit of build repository\nARG COMMIT\n# sha1 checksum of build directory\nARG FILES_SHA1\n\n# Prepare spec.\nCOPY ${MODEL_ROOT}/spec.template.json /tmp/spec.template.json\nRUN BUILD_DATETIME=\"$(date)\" cat /tmp/spec.template.json | \\\n            sed \"s/<image\\.sha1>/$COMMIT/g; s/<image\\.files_sha1>/${FILES_SHA1}/g; s/<image\\.datetime>/${BUILD_DATETIME}/g\" \\\n            > /opt/spec.json\n\nWORKDIR /opt/bin\n"
}