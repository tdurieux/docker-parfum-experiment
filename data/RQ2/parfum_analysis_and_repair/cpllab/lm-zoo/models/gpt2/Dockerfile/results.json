{
  "startTime": 1674215652790,
  "endTime": 1674215653953,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 8,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 8,
        "columnEnd": 109
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 8,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 8,
        "columnEnd": 95
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine AS builder\n\n# Fetch model checkpoints\nRUN apk add --no-cache curl\nRUN mkdir -p /opt/transformers/models/gpt2 && \\\n        cd /opt/transformers/models/gpt2 && \\\n        curl -f -so config.json https://s3.amazonaws.com/models.huggingface.co/bert/gpt2-config.json && \\\n        curl -f -so pytorch_model.bin https://s3.amazonaws.com/models.huggingface.co/bert/gpt2-pytorch_model.bin && \\\n        curl -f -so vocab.json https://s3.amazonaws.com/models.huggingface.co/bert/gpt2-vocab.json && \\\n        curl -f -so merges.txt https://s3.amazonaws.com/models.huggingface.co/bert/gpt2-merges.txt\n\n\nFROM cpllab/language-models:transformers-base\n\nARG MODEL_ROOT=models/gpt2\n\nCOPY --from=builder /opt/transformers/models/gpt2 /opt/transformers/models/gpt2\n\nENV TRANSFORMER_MODEL_TYPE gpt2\nENV TRANSFORMER_MODEL_PATH /opt/transformers/models/gpt2\n\n# Current git commit of build repository\nARG COMMIT\n# sha1 checksum of build directory\nARG FILES_SHA1\n\n# Override model code.\nCOPY ${MODEL_ROOT}/get_surprisals.py /opt/transformers/get_surprisals.py\nCOPY ${MODEL_ROOT}/tokenizer.py /opt/transformers/tokenizer.py\n\n# Prepare spec.\nCOPY ${MODEL_ROOT}/spec.template.json /tmp/spec.template.json\nRUN BUILD_DATETIME=\"$(date)\" cat /tmp/spec.template.json | \\\n            sed \"s/<image\\.sha1>/$COMMIT/g; s/<image\\.files_sha1>/${FILES_SHA1}/g; s/<image\\.datetime>/${BUILD_DATETIME}/g\" \\\n            > /opt/spec.json\n"
}