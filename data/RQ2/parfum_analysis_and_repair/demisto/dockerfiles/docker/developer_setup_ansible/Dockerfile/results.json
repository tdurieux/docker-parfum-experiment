{
  "startTime": 1674218491310,
  "endTime": 1674218492124,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM demisto/crypto:1.0.0.19032\n\n\n# Installing sudo to emulate normal OS behavior...\nRUN apk --update --no-cache add sudo\n\n# Adding python run time..\nRUN apk --update --no-cache add python3 openssl ca-certificates\nRUN apk --update --no-cache add --virtual build-dependencies python3-dev libffi-dev openssl-dev build-base\nRUN pip3 install --no-cache-dir --upgrade pip cffi\n\n# Installing ansible\nRUN pip3 install --no-cache-dir ansible==2.9.1\nRUN apk --no-cache --update add bash py-dnspython py-boto py-netaddr bind-tools html2text php7 php7-json git jq curl\nRUN pip3 install --no-cache-dir --upgrade yq\nRUN pip3 install --no-cache-dir --upgrade mitogen\n\n# Installing handy tools (not absolutely required)...\nRUN apk --update --no-cache add sshpass openssh-client rsync\n\n# Removing package list...\nRUN apk del build-dependencies\nRUN rm -rf /var/cache/apk/*\n\n# Adding hosts for convenience...\nRUN mkdir -p /etc/ansible\nRUN echo 'localhost' > /etc/ansible/hosts\nCOPY ansible.cfg /etc/ansible/ansible.cfg\n\n# Ansible roles\nRUN ansible-galaxy install -c elliotweiser.osx-command-line-tools\nRUN ansible-galaxy install -c geerlingguy.homebrew\nRUN ansible-galaxy collection install -c community.general\n\n# Volume your ansible configuration into the image\nRUN mkdir -p /ansible/playbooks\nWORKDIR /ansible/playbooks\nVOLUME [ \"/ansible/playbooks\" ]\n\n# # Run ansible to configure things\nENV ANSIBLE_HOST_KEY_CHECKING=False\nENTRYPOINT [ \"ansible-playbook\", \"playbook.yml\", \"-v\"]\n"
}