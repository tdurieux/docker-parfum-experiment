{
  "startTime": 1674248446530,
  "endTime": 1674248447535,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 7,
        "columnEnd": 75
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 154
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 26,
        "columnEnd": 83
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 7,
        "columnEnd": 154
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 91
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 26,
        "columnEnd": 83
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM demisto/python3-deb:3.10.4.29329\n\nCOPY requirements.txt .\n\nENV NODE_VERSION 14.14.0\nENV NVM_DIR /root/.nvm\nENV PATH $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH\n\n# Currently sh is linked to dash, linking it to /bin/bash instead.\nRUN rm /bin/sh && ln -s /bin/bash /bin/sh\n\nRUN apt-get update  && apt-get upgrade -y \\\n    && apt-get install --no-install-recommends -y curl jq unzip openssh-client gcc libffi-dev libssl-dev git zip cowsay netcat wget python2 python3-pip software-properties-common \\\n    # Install requirements\n    && pip install --no-cache-dir -r requirements.txt \\\n    # Installing nvm, npm and node.js\n    && curl -f https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash \\\n    && . $NVM_DIR/nvm.sh \\\n    && nvm install $NODE_VERSION \\\n    && nvm alias default $NODE_VERSION \\\n    && nvm use default \\\n    # Installing the gsutil and docker cli\n    && apt-get install --no-install-recommends apt-transport-https ca-certificates gnupg gpgv -y --allow-downgrades \\\n    && echo \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\" |  tee -a /etc/apt/sources.list.d/google-cloud-sdk.list \\\n    && curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - \\\n    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \\\n    && add-apt-repository \"deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable\" \\\n    && apt-get update && apt-get install --no-install-recommends google-cloud-sdk docker-ce-cli kubectl -y \\\n    && gcloud --version \\\n    && gsutil --version \\\n    && docker --version \\\n    && ! kubectl version --output yaml \\\n    && poetry --version \\\n    # Installing goenv\n    && git clone https://github.com/syndbg/goenv.git ~/.goenv \\\n    && echo 'export GOENV_ROOT=\"$HOME/.goenv\"' >> ~/.bashrc \\\n    && echo 'export PATH=\"$GOENV_ROOT/bin:$PATH\"' >> ~/.bashrc \\\n    && echo 'eval \"$(goenv init -)\"' >> ~/.bashrc \\\n    && echo 'export PATH=\"$GOROOT/bin:$PATH\"' >> ~/.bashrc \\\n    && echo 'export PATH=\"$PATH:$GOPATH/bin\"' >> ~/.bashrc \\\n    && source ~/.bashrc \\\n    && goenv install 1.13.8 \\\n    && goenv global 1.13.8 \\\n    && source ~/.bashrc \\\n    && curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.40.1 && rm -rf /var/lib/apt/lists/*;\n"
}