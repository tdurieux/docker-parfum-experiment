{
  "startTime": 1674252096576,
  "endTime": 1674252097715,
  "originalSmells": [
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 62,
        "columnEnd": 125
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 25,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 6
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 25,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM demisto/python3-deb:3.10.1.26968\n\nSHELL [\"/bin/bash\", \"-c\"]\n\nADD panw-cert.pem /usr/local/share/ca-certificates\nRUN chmod 644 /usr/local/share/ca-certificates/panw-cert.pem && update-ca-certificates\n\n\nRUN apt-get update && apt-get install --no-install-recommends \\\n    git \\\n    gcc \\\n    nodejs \\\n    npm \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release \\\n    -y && rm -rf /var/lib/apt/lists/*;\n\n# Docker cli tools installation\nRUN curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg \\\n    && echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n    $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list > /dev/null \\\n    && apt-get update && apt-get install --no-install-recommends docker-ce-cli -y && rm -rf /var/lib/apt/lists/*;\n\n\nWORKDIR /content\n\n\n# Install node modules for readme validation in demisto-sdk validate\nADD https://raw.githubusercontent.com/demisto/demisto-sdk/master/package.json /content/\nADD https://raw.githubusercontent.com/demisto/demisto-sdk/master/package-lock.json /content/\n\n# Python requirements\nADD requirements.txt .\nRUN npm ci && python3 -m pip install --no-cache-dir -r requirements.txt && rm requirements.txt\n\n# Install content dev-dependencies. Create virtual envs for python2 and python3\nADD https://raw.githubusercontent.com/demisto/content/master/dev-requirements-py3.txt /content/dev-requirements-py3.txt\nADD https://raw.githubusercontent.com/demisto/content/master/dev-requirements-py2.txt /content/dev-requirements-py2.txt\n\nRUN python3 -m pip install --no-cache-dir -r /content/dev-requirements-py3.txt \\\n    && virtualenv -p python2 venv \\\n    && venv/bin/pip2 install -r dev-requirements-py2.txt \\\n    && python3 -m venv --system-site-packages venv \\\n    && venv/bin/pip3 install -r dev-requirements-py3.txt -U --upgrade-strategy only-if-needed \\\n    && rm /content/dev-requirements-py2.txt /content/dev-requirements-py3.txt\n\nENV PATH=\"/content/venv/bin:$PATH\"\n\n# apt-get Cleanup\nRUN apt-get autoremove -y \\\n    && apt-get purge gcc -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Default demisto-sdk help\nCMD [\"demisto-sdk\", \"--help\"]"
}