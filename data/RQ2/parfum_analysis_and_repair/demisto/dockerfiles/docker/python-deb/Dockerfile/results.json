{
  "startTime": 1674218315225,
  "endTime": 1674218316900,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 145,
        "lineEnd": 145,
        "columnStart": 1,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# NOTE: THIS DOCKERFILE IS BASED ON: https://raw.githubusercontent.com/docker-library/python/f1e613f48eb4fc88748b36787f5ed74c14914636/2.7/buster/slim/Dockerfile\n# We only change to use the latest debian version.\n\n# Last modified: Sun, 27 Mar 2022 11:26:13 +0000\nFROM debian:bullseye-slim\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n# https://github.com/docker-library/python/issues/147\nENV PYTHONIOENCODING UTF-8\n\n# runtime dependencies\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tca-certificates \\\n\t\tnetbase \\\n\t&& rm -rf /var/lib/apt/lists/*\n\n# taken from here: https://salsa.debian.org/cpython-team/python2/-/blob/master/debian/patches/CVE-2021-3177.diff\nCOPY CVE-2021-3177.diff .\n\nENV GPG_KEY C01E1CAD5EA2C4F0B8E3571504C367C218ADD4FF\nENV PYTHON_VERSION 2.7.18\n\nRUN set -ex \\\n\t\\\n\t&& savedAptMark=\"$(apt-mark showmanual)\" \\\n\t&& apt-get update && apt-get install -y --no-install-recommends \\\n\t\tdpkg-dev \\\n\t\tgcc \\\n\t\tlibbz2-dev \\\n\t\tlibc6-dev \\\n\t\tlibdb-dev \\\n\t\tlibgdbm-dev \\\n\t\tlibncursesw5-dev \\\n\t\tlibreadline-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tmake \\\n\t\ttk-dev \\\n\t\twget \\\n\t\txz-utils \\\n\t\tzlib1g-dev \\\n# as of Stretch, \"gpg\" is no longer included by default\n\t\t$(command -v gpg > /dev/null || echo 'gnupg dirmngr') \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver keyserver.ubuntu.com --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\t&& patch -d /usr/src/python -p1 < CVE-2021-3177.diff \\\n\t\\\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-optimizations \\\n\t\t--enable-option-checking=fatal \\\n\t\t--enable-shared \\\n\t\t--enable-unicode=ucs4 \\\n\t&& make -j \"$(nproc)\" \\\n# setting PROFILE_TASK makes \"--enable-optimizations\" reasonable: https://bugs.python.org/issue36044 / https://github.com/docker-library/python/issues/160#issuecomment-509426916\n\t\tPROFILE_TASK='-m test.regrtest --pgo \\\n\t\t\ttest_array \\\n\t\t\ttest_base64 \\\n\t\t\ttest_binascii \\\n\t\t\ttest_binhex \\\n\t\t\ttest_binop \\\n\t\t\ttest_bytes \\\n\t\t\ttest_c_locale_coercion \\\n\t\t\ttest_class \\\n\t\t\ttest_cmath \\\n\t\t\ttest_codecs \\\n\t\t\ttest_compile \\\n\t\t\ttest_complex \\\n\t\t\ttest_csv \\\n\t\t\ttest_decimal \\\n\t\t\ttest_dict \\\n\t\t\ttest_float \\\n\t\t\ttest_fstring \\\n\t\t\ttest_hashlib \\\n\t\t\ttest_io \\\n\t\t\ttest_iter \\\n\t\t\ttest_json \\\n\t\t\ttest_long \\\n\t\t\ttest_math \\\n\t\t\ttest_memoryview \\\n\t\t\ttest_pickle \\\n\t\t\ttest_re \\\n\t\t\ttest_set \\\n\t\t\ttest_slice \\\n\t\t\ttest_struct \\\n\t\t\ttest_threading \\\n\t\t\ttest_time \\\n\t\t\ttest_traceback \\\n\t\t\ttest_unicode \\\n\t\t' \\\n\t&& make install \\\n\t&& ldconfig \\\n\t\\\n\t&& apt-mark auto '.*' > /dev/null \\\n\t&& apt-mark manual $savedAptMark \\\n\t&& find /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec ldd '{}' ';' \\\n\t\t| awk '/=>/ { print $(NF-1) }' \\\n\t\t| sort -u \\\n\t\t| xargs -r dpkg-query --search \\\n\t\t| cut -d: -f1 \\\n\t\t| sort -u \\\n\t\t| xargs -r apt-mark manual \\\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false \\\n\t&& rm -rf /var/lib/apt/lists/* \\\n\t\\\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t&& rm -rf /usr/src/python \\\n\t\\\n\t&& python2 --version\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 20.3.4\n# https://github.com/pypa/get-pip\nENV PYTHON_GET_PIP_URL https://github.com/pypa/get-pip/raw/831b5dd0bec03caf24aa6d736a28dc2ba80f91cc/public/2.7/get-pip.py\nENV PYTHON_GET_PIP_SHA256 40ee07eac6674b8d60fce2bbabc148cf0e2f1408c167683f110fd608b8d6f416\n\nRUN set -ex; \\\n\n\tsavedAptMark=\"$(apt-mark showmanual)\"; \\\n\tapt-get update; \\\n\tapt-get install -y --no-install-recommends wget; \\\n\n\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \\\n\techo \"$PYTHON_GET_PIP_SHA256  *get-pip.py\" | sha256sum --check --strict -; \\\n\n\tapt-mark auto '.*' > /dev/null; \\\n\t[ -z \"$savedAptMark\" ] || apt-mark manual $savedAptMark; \\\n\tapt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n\trm -rf /var/lib/apt/lists/*; \\\n\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t; \\\n\tpip --version; \\\n\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\nCMD [\"python2\"]\n\n# END Docker file fromhttps://raw.githubusercontent.com/docker-library/python/f1e613f48eb4fc88748b36787f5ed74c14914636/2.7/buster/slim/Dockerfile\n\nRUN echo 'deb http://deb.debian.org/debian bullseye-backports main' >> /etc/apt/sources.list\n\n# Basic linux utilities\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  procps \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Upgrade all packages to latest\nRUN apt-get update && apt-get -y --no-install-recommends upgrade \\\n&& rm -rf /var/lib/apt/lists/*\n\n# Upgrade using backports\nRUN apt-get update && apt-get -t bullseye-backports -y --no-install-recommends upgrade \\\n&& rm -rf /var/lib/apt/lists/*\n\nRUN rm CVE-2021-3177.diff\nCOPY requirements.txt .\n\n#Install tools for building binary deps (will be reomved later on)\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n  gcc \\\n  python2-dev \\ \n&& pip install --no-cache-dir -r requirements.txt \\\n&& apt-get purge -y --auto-remove \\\n  gcc \\\n  python2-dev \\\n&& rm -rf /var/lib/apt/lists/*\n\nRUN groupadd --gid 4000 demisto \\\n  && useradd --uid 4000 --gid demisto --shell /bin/bash --create-home demisto\n"
}