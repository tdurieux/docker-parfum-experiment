{
  "startTime": 1674250778791,
  "endTime": 1674250779354,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 2,
        "columnEnd": 53
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 27,
        "lineEnd": 39,
        "columnStart": 2,
        "columnEnd": 18
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Openshift Dockerfile for Centos7 Elixir Cross Referencer\n# This will build a httpd 2.4.34+ service container running Elixir\n# You may run this image on its own or as a component of a pod.\n# Usage:\n# Building: Docker Build dockerfile_path/ --build-arg GIT_REPO_URL=https://your-git-source-repo.git -t elixir\n# Running: Docker run -p 8080:8080 elixir\n\nFROM centos/httpd-24-centos7\n\nLABEL author=\"David.Southwick@cern.ch\"\n\n# temporarily switch to root user\nUSER root\n\nARG GIT_REPO_URL\nARG PROJECT\n\nRUN \\\n    : \"${GIT_REPO_URL:?set GIT_REPO_URL to the repo git url}\"\n\nRUN \\\n    : \"${PROJECT:?set PROJECT to set the project name}\"\n\nRUN \\\n    echo \"repo url to index: ${GIT_REPO_URL}\"\n\nRUN \\\n  yum install -y \\\n    python36-jinja2 \\\n    python36-bsddb3 \\\n    python36-pip \\\n    python36-falcon \\\n    python36-pytest \\\n    rh-python36-mod_wsgi \\\n    perl-autodie \\\n    jansson \\\n    libyaml \\\n    rh-git218 \\\n    wget \\\n    perl-Test-Most && rm -rf /var/cache/yum\n    # httpd & perl is inherited from upstream openshift image\n\nRUN \\\n  ln -s /usr/bin/pytest-3 /usr/bin/pytest\n\nRUN \\\n  ln -s /opt/rh/rh-git218/root/usr/bin/* /usr/bin/ && \\\n  ln -s /opt/rh/rh-git218/root/usr/share/perl5/vendor_perl/* /usr/share/perl5/vendor_perl/ && \\\n  ln -s /opt/rh/httpd24/root/usr/lib64/lib* /usr/lib64/\n\nRUN \\\n  wget https://bootlin.com/pub/elixir/universal-ctags-0+git~20e934e3-1.6.x86_64.rpm\n\nRUN \\\n  rpm -iv universal-ctags-0+git~20e934e3-1.6.x86_64.rpm\n\nRUN \\\n  wget https://bootlin.com/pub/elixir/Pygments-2.6.1.elixir-py3-none-any.whl\n\nRUN \\\n  pip3 install --no-cache-dir Pygments-2.6.1.elixir-py3-none-any.whl\n\nRUN \\\n  git config --global user.email 'elixir@dummy.com' && \\\n  git config --global user.name 'elixir'\n\nRUN \\\n  git clone https://github.com/bootlin/elixir.git /usr/local/elixir/\n\nRUN \\\n  mkdir -p /srv/elixir-data/$PROJECT/repo && \\\n  mkdir -p /srv/elixir-data/$PROJECT/data && \\\n  git clone \"${GIT_REPO_URL}\" /srv/elixir-data/$PROJECT/repo/\n\nENV LXR_REPO_DIR /srv/elixir-data/$PROJECT/repo\nENV LXR_DATA_DIR /srv/elixir-data/$PROJECT/data\n\nRUN \\\n  cd /usr/local/elixir/ && \\\n  ./script.sh list-tags && \\\n  python3 -u ./update.py\n\n# apache elixir config, see elixir README\n# apache HttpProtolOptions workaround\nRUN \\\n  echo PERpcmVjdG9yeSAvdXNyL2xvY2FsL2VsaXhpci9odHRwLz4KICAgIE9wdGlvbnMgK0V4ZWNDR0kKICAgIEFsbG93T3ZlcnJpZGUgTm9uZQogICAgUmVxdWlyZSBhbGwgZ3JhbnRlZAogICAgU2V0RW52IFBZVEhPTklPRU5DT0RJTkcgdXRmLTgKICAgIFNldEVudiBMWFJfUFJPSl9ESVIgL3Nydi9lbGl4aXItZGF0YQo8L0RpcmVjdG9yeT4KPERpcmVjdG9yeSAvdXNyL2xvY2FsL2VsaXhpci9hcGkvPgogICAgU2V0SGFuZGxlciB3c2dpLXNjcmlwdAogICAgUmVxdWlyZSBhbGwgZ3JhbnRlZAogICAgU2V0RW52IFBZVEhPTklPRU5DT0RJTkcgdXRmLTgKICAgIFNldEVudiBMWFJfUFJPSl9ESVIgL3Nydi9lbGl4aXItZGF0YQo8L0RpcmVjdG9yeT4KQWRkSGFuZGxlciBjZ2ktc2NyaXB0IC5weQo8VmlydHVhbEhvc3QgKjo4MDgwPgogICAgU2VydmVyTmFtZSBNWV9MT0NBTF9JUAogICAgRG9jdW1lbnRSb290IC91c3IvbG9jYWwvZWxpeGlyL2h0dHAKICAgIFdTR0lTY3JpcHRBbGlhcyAvYXBpIC91c3IvbG9jYWwvZWxpeGlyL2FwaS9hcGkucHkKICAgIEFsbG93RW5jb2RlZFNsYXNoZXMgT24KICAgIFJld3JpdGVFbmdpbmUgb24KICAgIFJld3JpdGVSdWxlICJeLyQiICIvbGludXgvbGF0ZXN0L3NvdXJjZSIgW1JdCiAgICBSZXdyaXRlUnVsZSAiXi8oPyFhcGl8YWNwKS4qLyhzb3VyY2V8aWRlbnR8c2VhcmNoKSIgIi93ZWIucHkiIFtQVF0KICAgIFJld3JpdGVSdWxlICJeL2FjcCIgIi9hdXRvY29tcGxldGUucHkiIFtQVF0KPC9WaXJ0dWFsSG9zdD4= | base64 -d > /etc/httpd/conf.d/000-elixir.conf \\\n&& echo -e \"\\nHttpProtocolOptions Unsafe\" >> /etc/httpd/conf/httpd.conf\n  # a2enmod cgi rewrite - enabled by default in RHEL/centos\n\n\n# Make sure the final image runs as unprivileged user\nUSER 1001\n\nENTRYPOINT [\"/usr/bin/run-httpd\"]\n"
}