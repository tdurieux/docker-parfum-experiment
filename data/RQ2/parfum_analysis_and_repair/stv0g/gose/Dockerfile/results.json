{
  "startTime": 1674248746055,
  "endTime": 1674248747296,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17-alpine AS backend-builder\n\nWORKDIR /app\n\nCOPY go.mod .\nCOPY go.sum .\nRUN go mod download\n\nCOPY . .\n\nRUN go build -o gose ./cmd\n\nFROM node:17 AS frontend-builder\n\nENV NODE_ENV=production\n\nWORKDIR /app\n\nCOPY frontend/package.json .\nCOPY frontend/package-lock.json* .\n\nRUN npm install --production && npm cache clean --force;\n\nCOPY frontend/ .\n\nRUN npm run build\n\nFROM alpine:3.15\n\nRUN apk update && apk add ca-certificates curl && rm -rf /var/cache/apk/*\n\nCOPY --from=frontend-builder /app/dist/ /dist/\nCOPY --from=backend-builder /app/gose /\nCOPY --from=backend-builder /app/config.yaml /\n\nENV GIN_MODE=release\nENV GOSE_SERVER_STATIC=/dist\n\nEXPOSE 8080/tcp\n\nHEALTHCHECK --interval=30s --timeout=30s --retries=3 \\\n    CMD curl -f http://localhost:8080/api/v1/healthz\n\nENTRYPOINT [ \"/gose\" ]\n"
}