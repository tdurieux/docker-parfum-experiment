{
  "startTime": 1674251902119,
  "endTime": 1674251903514,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 162,
        "columnEnd": 173
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION\nFROM php:$PHP_VERSION\nWORKDIR /code\n# Used for running tests in Docker\n# RUN apt-get update && apt-get install -y valgrind && apt-get clean\n# NOTE: In order to avoid valgrind false positives, this would need to compile php from source and configure php --with-valgrind (php-src's zend_string_equals uses inline assembly that causes false positives)\n# - ci/install_php_custom.sh and ci/generate_php_install_dir.sh may be a useful reference for that.\nADD *.sh *.c *.h *.php *.md config.m4 config.w32 package.xml COPYING ./\n\n# Assume compilation will be the time consuming step.\n# Add tests after compiling so that it's faster to update tests and re-run them locally.\n#\n# Use extremely strict CFLAGS for checking correctness of code before merging it.\nRUN export CFLAGS='-fno-common -Wformat-truncation -Wlogical-op -Wduplicated-cond -Wall -Wextra -Wno-unused-parameter -O2 -g -Wimplicit-fallthrough=1'; phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make -j$(nproc) && make install\nRUN docker-php-ext-enable teds\nADD tests ./tests\nADD ci ./ci\n"
}