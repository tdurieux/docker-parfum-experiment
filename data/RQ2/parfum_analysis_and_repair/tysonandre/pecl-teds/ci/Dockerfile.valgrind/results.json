{
  "startTime": 1674249603385,
  "endTime": 1674249603882,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 14,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 3,
        "columnStart": 22,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION\nFROM php:$PHP_VERSION\nWORKDIR /code\nRUN apt-get update && apt-get install --no-install-recommends -y valgrind && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nADD ci/install_php_custom.sh ci/generate_php_install_dir.sh ci/\nARG PHP_VERSION_FULL\nARG PHP_CONFIGURE_ARGS=\"--disable-all --enable-zts --enable-debug --enable-cgi --enable-session --enable-json\"\nARG CFLAGS=\"-DZEND_RC_DEBUG=1\"\nENV PHP_CONFIGURE_ARGS=$PHP_CONFIGURE_ARGS PHP_CUSTOM_VERSION=$PHP_VERSION_FULL CFLAGS=$CFLAGS\nRUN ci/install_php_custom.sh\n\n# Assume compilation will be the time consuming step.\n# Add tests after compiling so that it's faster to update tests and re-run them locally.\n# (The ability to use custom install directories is useful for running tests locally outside docker)\n# TODO: Reorder\n#\n# NOTE: php 8.1 has a patch that may avoid the need to recompile php with --enable-valgrind,\n# but the PHP_CONFIGURE_ARGS overrides such as --enable-debug may still be useful\nRUN ln -nsf $(ci/generate_php_install_dir.sh) /php-valgrind-install\nENV PATH=/php-valgrind-install/bin:$PATH\n\n# Used for running tests in Docker\n# RUN apt-get update && apt-get install -y valgrind && apt-get clean\n# NOTE: In order to avoid valgrind false positives, this would need to compile php from source and configure php --with-valgrind (php-src's zend_string_equals uses inline assembly that causes false positives)\n# - ci/install_php_custom.sh and ci/generate_php_install_dir.sh may be a useful reference for that.\nADD *.sh *.c *.h *.php *.md config.m4 config.w32 package.xml COPYING ./\nRUN phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" $PHP_CONFIGURE_ARGS && make clean && make -j2\n# RUN docker-php-ext-enable teds\nADD tests ./tests\nADD ci ./ci\n"
}