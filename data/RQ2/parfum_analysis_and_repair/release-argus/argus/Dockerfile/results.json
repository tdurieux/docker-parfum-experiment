{
  "startTime": 1674249730322,
  "endTime": 1674249730970,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "########\n# BASE #\n########\nARG GO_VERSION=\"1.18.3\"\nARG DEBIAN_VERSION=\"bullseye\"\nFROM golang:${GO_VERSION}-${DEBIAN_VERSION}\n\nCOPY . /build/\nWORKDIR /build/\n\nARG BUILD_VERSION=\"development\"\nRUN make BUILD_VERSION=${BUILD_VERSION} go-build\nRUN chmod 755 /build/argus\n\n\n#############\n# ARGUS #\n#############\nARG DEBIAN_VERSION=\"bullseye\"\nFROM debian:${DEBIAN_VERSION}-slim\nLABEL maintainer=\"The Argus Authors <developers@release-argus.io>\"\nRUN \\\n    apt-get update && \\\n    apt-get install --no-install-recommends ca-certificates -y && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=0 /build/argus               /bin/argus\nCOPY --from=0 /build/config.yml.example  /etc/argus/config.yml\nCOPY --from=0 /build/LICENSE             /LICENSE\n\nWORKDIR /argus\nRUN chown -R nobody:nogroup /etc/argus /argus\n\nUSER       nobody\nEXPOSE     8080\nVOLUME     [ \"/argus\" ]\nENTRYPOINT [ \"/bin/argus\" ]\n\nCMD [ \"-config.file=/etc/argus/config.yml\" ]\n"
}