{
  "startTime": 1674217552280,
  "endTime": 1674217553559,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing,\n#  software distributed under the License is distributed on an\n#  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n#  KIND, either express or implied.  See the License for the\n#  specific language governing permissions and limitations\n#  under the License.\n\nFROM maven:3.8-jdk-8 as package\n\nWORKDIR /tmp\n\nCOPY . .\n\nRUN mvn -B dependency:go-offline\n\nRUN set -x \\\n# fastest, minimum build\n  && mvn -B clean package -pl jspwiki-war,jspwiki-wikipages/en -am -DskipTests\n\nFROM tomcat:9.0\n\nCOPY --from=package /tmp/jspwiki-war/target/JSPWiki.war /tmp\nCOPY --from=package /tmp/jspwiki-wikipages/en/target/jspwiki-wikipages-en-*.zip /tmp\nCOPY docker-files/log4j2.properties /tmp\nCOPY docker-files/tomcat-users.xml $CATALINA_HOME/conf/tomcat-users.xml\n\n#\n# set default environment entries to configure jspwiki\nENV CATALINA_OPTS -Djava.security.egd=file:/dev/./urandom\nENV LANG en_US.UTF-8\nENV jspwiki_basicAttachmentProvider_storageDir /var/jspwiki/pages\nENV jspwiki_fileSystemProvider_pageDir /var/jspwiki/pages\nENV jspwiki_frontPage Main\nENV jspwiki_pageProvider VersioningFileProvider\nENV jspwiki_use_external_logconfig true\nENV jspwiki_workDir /var/jspwiki/work\nENV jspwiki_xmlUserDatabaseFile /var/jspwiki/etc/userdatabase.xml\nENV jspwiki_xmlGroupDatabaseFile /var/jspwiki/etc/groupdatabase.xml\n\nRUN set -x \\\n && export DEBIAN_FRONTEND=noninteractive \\\n && apt install --no-install-recommends --fix-missing --quiet --yes unzip && rm -rf /var/lib/apt/lists/*;\n\n#\n# install jspwiki\nRUN set -x \\\n && mkdir /var/jspwiki \\\n# remove default tomcat applications, we dont need them to run jspwiki\n && cd $CATALINA_HOME/webapps \\\n && rm -rf examples host-manager manager docs ROOT \\\n# remove other stuff we don't need\n && rm -rf /usr/local/tomcat/bin/*.bat \\\n# create subdirectories where all jspwiki stuff will live\n && cd /var/jspwiki \\\n && mkdir pages logs etc work \\\n# deploy jspwiki\n && mkdir $CATALINA_HOME/webapps/ROOT \\\n && unzip -q -d $CATALINA_HOME/webapps/ROOT /tmp/JSPWiki.war \\\n && rm /tmp/JSPWiki.war \\\n# deploy wiki pages\n && cd /tmp/ \\\n && unzip -q jspwiki-wikipages-en-*.zip \\\n && mv jspwiki-wikipages-en-*/* /var/jspwiki/pages/ \\\n && rm -rf jspwiki-wikipages-en-* \\\n# move the userdatabase.xml and groupdatabase.xml to /var/jspwiki/etc\n && cd $CATALINA_HOME/webapps/ROOT/WEB-INF \\\n && mv userdatabase.xml groupdatabase.xml /var/jspwiki/etc \\\n# arrange proper logging (jspwiki.use.external.logconfig = true needs to be set)\n && mv /tmp/log4j2.properties $CATALINA_HOME/lib/log4j2.properties\n\n# make port visible in metadata\nEXPOSE 8080\n\n#\n# by default we start the Tomcat container when the docker container is started.\nCMD [\"/usr/local/tomcat/bin/catalina.sh\",\"run\", \">/usr/local/tomcat/logs/catalina.out\"]\n"
}