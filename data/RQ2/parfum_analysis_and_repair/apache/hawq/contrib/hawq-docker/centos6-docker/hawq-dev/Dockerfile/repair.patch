diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/hawq/contrib/hawq-docker/centos6-docker/hawq-dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/hawq/contrib/hawq-docker/centos6-docker/hawq-dev/Dockerfile/repaired.Dockerfile
index 7905723..1d5894e 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/hawq/contrib/hawq-docker/centos6-docker/hawq-dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/hawq/contrib/hawq-docker/centos6-docker/hawq-dev/Dockerfile/repaired.Dockerfile
@@ -31,26 +31,26 @@ RUN yum install -y epel-release && \
  libesmtp-devel xerces-c-devel python-pip json-c-devel \
  apache-ivy java-1.7.0-openjdk-devel wget \
  openssh-clients openssh-server perl-JSON && \
- yum clean all
+ yum clean all && rm -rf /var/cache/yum
 
 # update gcc
-RUN wget -O /etc/yum.repos.d/slc6-devtoolset.repo http://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo && \
+RUN wget -O /etc/yum.repos.d/slc6-devtoolset.repo https://linuxsoft.cern.ch/cern/devtoolset/slc6-devtoolset.repo && \
  rpm --import http://linuxsoft.cern.ch/cern/slc68/x86_64/RPM-GPG-KEY-cern && \
  yum install -y devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++ && \
  echo "source /opt/rh/devtoolset-2/enable" >> ~/.bashrc && \
- source ~/.bashrc
+ source ~/.bashrc && rm -rf /var/cache/yum
 
 # install libcurl 7.45.0
 RUN mkdir -p /tmp/build/ && \
- cd /tmp/build && curl -L "http://curl.haxx.se/download/curl-7.45.0.tar.bz2" -o curl-7.45.0.tar.bz2 && \
+ cd /tmp/build && curl -f -L "https://curl.haxx.se/download/curl-7.45.0.tar.bz2" -o curl-7.45.0.tar.bz2 && \
  tar -xjf curl-7.45.0.tar.bz2 && cd curl-7.45.0 && \
- ./configure --prefix=/usr && make && make install && \
- rm -rf /tmp/build && ldconfig
+ ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && make && make install && \
+ rm -rf /tmp/build && ldconfig && rm curl-7.45.0.tar.bz2
 
 # install maven
-RUN curl -L "http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo" -o /etc/yum.repos.d/epel-apache-maven.repo && \
+RUN curl -f -L "https://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo" -o /etc/yum.repos.d/epel-apache-maven.repo && \
  yum install -y apache-maven && \
- yum clean all
+ yum clean all && rm -rf /var/cache/yum
 
 # OS requirements
 RUN echo "kernel.sem = 250 512000 100 2048" >> /etc/sysctl.conf
@@ -67,35 +67,35 @@ RUN echo "#!/bin/sh" > /etc/profile.d/java.sh && \
 
 # install boost 1.59
  RUN mkdir -p /tmp/build && \
-  cd /tmp/build && curl -L "http://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2" -o boost_1_59_0.tar.bz2 && \
+  cd /tmp/build && curl -f -L "https://downloads.sourceforge.net/project/boost/boost/1.59.0/boost_1_59_0.tar.bz2" -o boost_1_59_0.tar.bz2 && \
   tar -xjf boost_1_59_0.tar.bz2 && cd boost_1_59_0 && \
   ./bootstrap.sh && ./b2 --prefix=/usr -q && ./b2 --prefix=/usr -q install && \
-  rm -rf /tmp/build
+  rm -rf /tmp/build && rm boost_1_59_0.tar.bz2
 
 # install bison 2.5.1
 RUN mkdir -p /tmp/build/ && \
- cd /tmp/build && curl -L "ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz" -o bison-2.5.1.tar.gz && \
+ cd /tmp/build && curl -f -L "ftp://ftp.gnu.org/gnu/bison/bison-2.5.1.tar.gz" -o bison-2.5.1.tar.gz && \
  tar -xzf bison-2.5.1.tar.gz && cd bison-2.5.1 && \
- ./configure --prefix=/usr && make && make install && \
- rm -rf /tmp/build
+ ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && make && make install && \
+ rm -rf /tmp/build && rm bison-2.5.1.tar.gz
 
 # install thrift 0.9.1
 RUN mkdir -p /tmp/build && \
- cd /tmp/build && curl -L "https://archive.apache.org/dist/thrift/0.9.1/thrift-0.9.1.tar.gz" -o thrift-0.9.1.tar.gz && \
+ cd /tmp/build && curl -f -L "https://archive.apache.org/dist/thrift/0.9.1/thrift-0.9.1.tar.gz" -o thrift-0.9.1.tar.gz && \
  tar -xf thrift-0.9.1.tar.gz && cd thrift-0.9.1 && \
- ./configure --prefix=/usr --without-tests && \
+ ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr --without-tests && \
  make && make install && \
- rm -rf /tmp/build
+ rm -rf /tmp/build && rm thrift-0.9.1.tar.gz
 
 # install protobuf 2.5.0
 RUN mkdir -p /tmp/build/ && \
- cd /tmp/build && curl -L "https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2" -o protobuf-2.5.0.tar.bz2 && \
+ cd /tmp/build && curl -f -L "https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2" -o protobuf-2.5.0.tar.bz2 && \
  tar -xjf protobuf-2.5.0.tar.bz2 && cd protobuf-2.5.0 && \
- ./configure --prefix=/usr && make && make install && ldconfig && \
- rm -rf /tmp/build
+ ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr && make && make install && ldconfig && \
+ rm -rf /tmp/build && rm protobuf-2.5.0.tar.bz2
 
-# install python module 
-RUN pip --retries=50 --timeout=300 install pycrypto
+# install python module
+RUN pip --retries=50 --no-cache-dir --timeout=300 install pycrypto
 
 # create user gpadmin since HAWQ cannot run under root
 RUN groupadd -g 1000 gpadmin && \