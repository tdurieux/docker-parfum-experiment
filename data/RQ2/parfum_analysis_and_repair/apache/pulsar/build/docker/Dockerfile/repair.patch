diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/pulsar/build/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/pulsar/build/docker/Dockerfile/repaired.Dockerfile
index 21868cc..4b2b528 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/pulsar/build/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/pulsar/build/docker/Dockerfile/repaired.Dockerfile
@@ -23,15 +23,15 @@ FROM ubuntu:20.04
 RUN mkdir /pulsar
 
 RUN apt-get update && \
-    apt-get install -y software-properties-common && \
+    apt-get install --no-install-recommends -y software-properties-common && \
     add-apt-repository ppa:openjdk-r/ppa && \
     apt-get update && \
-    apt-get install -y tig g++ cmake libssl-dev libcurl4-openssl-dev \
+    apt-get install --no-install-recommends -y tig g++ cmake libssl-dev libcurl4-openssl-dev \
                 liblog4cxx-dev google-mock libgtest-dev \
                 libboost-dev libboost-program-options-dev libboost-system-dev libboost-python-dev \
                 libxml2-utils wget \
                 curl doxygen openjdk-17-jdk-headless clang-format \
-                gnupg2 golang-go zip unzip libzstd-dev libsnappy-dev wireshark-dev
+                gnupg2 golang-go zip unzip libzstd-dev libsnappy-dev wireshark-dev && rm -rf /var/lib/apt/lists/*;
 
 # Compile and install gtest & gmock
 RUN cd /usr/src/googletest && \
@@ -43,10 +43,10 @@ RUN cd /usr/src/googletest && \
 RUN git clone https://github.com/google/gtest-parallel.git
 
 # Build protobuf 3.x.y from source since the default protobuf from Ubuntu's apt source is 2.x.y
-RUN curl -O -L https://github.com/protocolbuffers/protobuf/releases/download/v3.17.3/protobuf-cpp-3.17.3.tar.gz && \
+RUN curl -f -O -L https://github.com/protocolbuffers/protobuf/releases/download/v3.17.3/protobuf-cpp-3.17.3.tar.gz && \
     tar xvfz protobuf-cpp-3.17.3.tar.gz && \
     cd protobuf-3.17.3/ && \
-    CXXFLAGS=-fPIC ./configure && \
+    CXXFLAGS=-fPIC ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j8 && make install && \
     cd .. && rm -rf protobuf-3.17.3/ protobuf-cpp-3.17.3.tar.gz
 ENV LD_LIBRARY_PATH /usr/local/lib
@@ -54,26 +54,26 @@ ENV LD_LIBRARY_PATH /usr/local/lib
 ## Website build dependencies
 
 # Install Ruby-2.4.1
-RUN (curl -sSL https://rvm.io/mpapis.asc | gpg --import -) && \
-    (curl -sSL https://rvm.io/pkuczynski.asc | gpg --import -) && \
-    (curl -sSL https://get.rvm.io | bash -s stable)
+RUN ( curl -f -sSL https://rvm.io/mpapis.asc | gpg --batch --import -) && \
+    ( curl -f -sSL https://rvm.io/pkuczynski.asc | gpg --batch --import -) && \
+    ( curl -f -sSL https://get.rvm.io | bash -s stable)
 ENV PATH "$PATH:/usr/local/rvm/bin"
 RUN rvm install 2.4.1
 
 # Install nodejs and yarn
-RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -
-RUN apt-get install -y nodejs
-RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
+RUN curl -f -sL https://deb.nodesource.com/setup_12.x | bash -
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
+RUN curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
 RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
-RUN apt-get update && apt-get install yarn
+RUN apt-get update && apt-get install -y --no-install-recommends yarn && rm -rf /var/lib/apt/lists/*;
 
 # Install crowdin
 RUN wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
 RUN dpkg -i crowdin.deb
 
 # Install PIP
-RUN curl https://bootstrap.pypa.io/get-pip.py  | python3 -
-RUN pip3 install pdoc
+RUN curl -f https://bootstrap.pypa.io/get-pip.py | python3 -
+RUN pip3 install --no-cache-dir pdoc
 #
 # Installation
 ARG MAVEN_VERSION=3.6.3