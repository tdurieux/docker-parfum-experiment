diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/pulsar/pulsar-client-cpp/docker/manylinux2014/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/pulsar/pulsar-client-cpp/docker/manylinux2014/Dockerfile/repaired.Dockerfile
index ce4e192..3d24cec 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/pulsar/pulsar-client-cpp/docker/manylinux2014/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/pulsar/pulsar-client-cpp/docker/manylinux2014/Dockerfile/repaired.Dockerfile
@@ -35,7 +35,7 @@ ENV PATH="/opt/python/${PYTHON_SPEC}/bin:${PATH}"
 RUN ln -s /opt/python/${PYTHON_SPEC}/include/python${PYTHON_VERSION}m /opt/python/${PYTHON_SPEC}/include/python${PYTHON_VERSION}
 
 # Perl (required for building OpenSSL)
-RUN curl -O -L https://www.cpan.org/src/5.0/perl-5.10.0.tar.gz && \
+RUN curl -f -O -L https://www.cpan.org/src/5.0/perl-5.10.0.tar.gz && \
     tar xvfz perl-5.10.0.tar.gz && \
     cd perl-5.10.0 && \
     ./configure.gnu --prefix=/usr/local/ && \
@@ -48,15 +48,15 @@ RUN curl -O -L https://www.cpan.org/src/5.0/perl-5.10.0.tar.gz && \
 ####################################
 
 # ZLib
-RUN curl -O -L https://zlib.net/zlib-1.2.12.tar.gz && \
+RUN curl -f -O -L https://zlib.net/zlib-1.2.12.tar.gz && \
     tar xvfz zlib-1.2.12.tar.gz && \
     cd zlib-1.2.12 && \
-    CFLAGS="-fPIC -O3" ./configure && \
+    CFLAGS="-fPIC -O3" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j8 && make install && \
     rm -rf /zlib-1.2.12.tar.gz /zlib-1.2.12
 
 # Compile OpenSSL
-RUN curl -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_1_1n.tar.gz && \
+RUN curl -f -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_1_1n.tar.gz && \
     tar xvfz OpenSSL_1_1_1n.tar.gz && \
     cd openssl-OpenSSL_1_1_1n/ && \
     ./Configure -fPIC --prefix=/usr/local/ssl/ no-shared linux-${ARCH} && \
@@ -64,7 +64,7 @@ RUN curl -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_1_1n.tar.gz
     rm -rf /OpenSSL_1_1_1n.tar.gz /openssl-OpenSSL_1_1_1n
 
 # Download and compile boost
-RUN curl -O -L https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.gz && \
+RUN curl -f -O -L https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/boost_1_78_0.tar.gz && \
     tar xvfz boost_1_78_0.tar.gz && \
     cd /boost_1_78_0 && \
     ./bootstrap.sh --with-libraries=program_options,filesystem,regex,thread,system,python && \
@@ -72,31 +72,31 @@ RUN curl -O -L https://boostorg.jfrog.io/artifactory/main/release/1.78.0/source/
     rm -rf /boost_1_78_0.tar.gz /boost_1_78_0
 
 # Download and copile protoubf
-RUN curl -O -L  https://github.com/google/protobuf/releases/download/v3.20.0/protobuf-cpp-3.20.0.tar.gz && \
+RUN curl -f -O -L https://github.com/google/protobuf/releases/download/v3.20.0/protobuf-cpp-3.20.0.tar.gz && \
     tar xvfz protobuf-cpp-3.20.0.tar.gz && \
     cd protobuf-3.20.0/ && \
-    CXXFLAGS=-fPIC ./configure && \
+    CXXFLAGS=-fPIC ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j8 && make install && ldconfig && \
     rm -rf /protobuf-cpp-3.20.0.tar.gz /protobuf-3.20.0
 
 # Compile expat
-RUN curl -O -L  https://github.com/libexpat/libexpat/archive/R_2_2_0.tar.gz && \
+RUN curl -f -O -L https://github.com/libexpat/libexpat/archive/R_2_2_0.tar.gz && \
     tar xfvz R_2_2_0.tar.gz && \
     cd libexpat-R_2_2_0/expat && \
     ./buildconf.sh && \
-    CFLAGS=-fPIC CXXFLAGS=-fPIC ./configure  && \
+    CFLAGS=-fPIC CXXFLAGS=-fPIC ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j8 && make installlib && \
     rm -rf /R_2_2_0.tar.gz /libexpat-R_2_2_0
 
-RUN curl -O -L https://github.com/Kitware/CMake/archive/v3.12.1.tar.gz && \
+RUN curl -f -O -L https://github.com/Kitware/CMake/archive/v3.12.1.tar.gz && \
     tar xvfz v3.12.1.tar.gz && \
     cd CMake-3.12.1 && \
-    ./configure && \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j8 && make install && \
     rm -rf /v3.12.1.tar.gz /CMake-3.12.1
 
 # Zstandard
-RUN curl -O -L https://github.com/facebook/zstd/releases/download/v1.3.7/zstd-1.3.7.tar.gz && \
+RUN curl -f -O -L https://github.com/facebook/zstd/releases/download/v1.3.7/zstd-1.3.7.tar.gz && \
     tar xvfz zstd-1.3.7.tar.gz && \
     cd zstd-1.3.7 && \
     CFLAGS="-fPIC -O3" make -j8 && \
@@ -104,23 +104,23 @@ RUN curl -O -L https://github.com/facebook/zstd/releases/download/v1.3.7/zstd-1.
     rm -rf /zstd-1.3.7 /zstd-1.3.7.tar.gz
 
 # Snappy
-RUN curl -O -L https://github.com/google/snappy/releases/download/1.1.3/snappy-1.1.3.tar.gz && \
+RUN curl -f -O -L https://github.com/google/snappy/releases/download/1.1.3/snappy-1.1.3.tar.gz && \
     tar xvfz snappy-1.1.3.tar.gz && \
     cd snappy-1.1.3 && \
-    CXXFLAGS="-fPIC -O3" ./configure && \
+    CXXFLAGS="-fPIC -O3" ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && \
     make -j8 && make install && \
     rm -rf /snappy-1.1.3 /snappy-1.1.3.tar.gz
 
 # LibCurl
-RUN curl -O -L  https://github.com/curl/curl/releases/download/curl-7_61_0/curl-7.61.0.tar.gz && \
+RUN curl -f -O -L https://github.com/curl/curl/releases/download/curl-7_61_0/curl-7.61.0.tar.gz && \
     tar xvfz curl-7.61.0.tar.gz && \
     cd curl-7.61.0 && \
-    CFLAGS=-fPIC ./configure --with-ssl=/usr/local/ssl/ && \
+    CFLAGS=-fPIC ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-ssl=/usr/local/ssl/ && \
     make -j8 && make install && \
     rm -rf /curl-7.61.0.tar.gz /curl-7.61.0
 
-RUN pip install twine
-RUN pip install fastavro
+RUN pip install --no-cache-dir twine
+RUN pip install --no-cache-dir fastavro
 
 
 ENV PYTHON_INCLUDE_DIR /opt/python/${PYTHON_SPEC}/include