{
  "startTime": 1674250514888,
  "endTime": 1674250515952,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n\nFROM alpine:3.8\n\nRUN apk update \\\n    && apk upgrade \\\n    && apk add --no-cache \\\n    cmake make build-base curl \\\n    python3-dev \\\n    libffi-dev \\\n    perl linux-headers bash \\\n    alpine-sdk\n\n####################################\n# These dependencies can be found in Ubuntu but they're not compiled with -fPIC,\n# so they cannot be statically linked into a shared library\n####################################\n\n# Download and compile boost\nRUN curl -f -O -L https://boostorg.jfrog.io/artifactory/main/release/1.72.0/source/boost_1_72_0.tar.gz && \\\n    tar xfz boost_1_72_0.tar.gz && \\\n    cd /boost_1_72_0 && \\\n    ./bootstrap.sh --with-libraries=program_options,regex,system,python --with-python=/usr/bin/python3 && \\\n    ./b2  cxxflags=\" -fPIC -I/usr/include/python3.6m\" link=static threading=multi variant=release install && \\\n    rm -rf /boost_1_72_0.tar.gz /boost_1_72_0\n\n# ZLib\nRUN curl -f -O -L https://zlib.net/zlib-1.2.12.tar.gz && \\\n    tar xfz zlib-1.2.12.tar.gz && \\\n    cd zlib-1.2.12 && \\\n    CFLAGS=\"-fPIC -O3\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j4 && make install && \\\n    rm -rf /zlib-1.2.12.tar.gz /zlib-1.2.12\n\n# Compile OpenSSL\nRUN curl -f -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_1_0j.tar.gz && \\\n   tar xfz OpenSSL_1_1_0j.tar.gz && \\\n   cd openssl-OpenSSL_1_1_0j/ && \\\n   ./Configure -fPIC no-shared linux-x86_64 && \\\n   make -j8 && make install && \\\n   rm -rf /OpenSSL_1_1_0j.tar.gz /openssl-OpenSSL_1_1_0j\n\n# Download and copile protoubf\nRUN curl -f -O -L https://github.com/google/protobuf/releases/download/v3.20.0/protobuf-cpp-3.20.0.tar.gz && \\\n    tar xvfz protobuf-cpp-3.20.0.tar.gz && \\\n    cd protobuf-3.20.0/ && \\\n    CXXFLAGS=-fPIC ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j8 && make install && \\\n    rm -rf /protobuf-cpp-3.20.0.tar.gz /protobuf-3.20.0\n\n# LibCurl\nRUN curl -f -O -L https://github.com/curl/curl/releases/download/curl-7_61_0/curl-7.61.0.tar.gz && \\\n    tar xvfz curl-7.61.0.tar.gz && \\\n    cd curl-7.61.0 && \\\n    CFLAGS=-fPIC ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j8 && make install && \\\n    rm -rf /curl-7.61.0.tar.gz /curl-7.61.0\n\n# Zstandard\nRUN curl -f -O -L https://github.com/facebook/zstd/releases/download/v1.4.4/zstd-1.4.4.tar.gz && \\\n    tar xvfz zstd-1.4.4.tar.gz && \\\n    cd zstd-1.4.4 && \\\n    CFLAGS=\"-fPIC -O3\" make -j8 && \\\n    make install && \\\n    rm -rf /zstd-1.4.4 /zstd-1.4.4.tar.gz\n\n# Snappy\nRUN curl -f -L https://github.com/google/snappy/archive/1.1.8.tar.gz --output snappy-1.1.8.tar.gz && \\\n    tar xvfz snappy-1.1.8.tar.gz && \\\n    cd snappy-1.1.8 && \\\n    CXXFLAGS=\"-fPIC -O3\" cmake . && \\\n    make -j8 && make install && \\\n    rm -rf /snappy-1.1.8 /snappy-1.1.8.tar.gz\n\n\nRUN pip3 install --no-cache-dir wheel twine\n\nRUN adduser pulsar -D && \\\n    addgroup pulsar abuild\n"
}