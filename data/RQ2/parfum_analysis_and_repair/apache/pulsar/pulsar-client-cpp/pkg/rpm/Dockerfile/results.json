{
  "startTime": 1674214959562,
  "endTime": 1674214960575,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 69
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 68
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 79
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 4,
        "columnEnd": 36
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n# Build pulsar client library in Centos with tools to build static RPM\n\nFROM centos:7\n\nRUN yum update -y && \\\n    yum install -y gcc-c++ make cmake git rpm-build \\\n                python-devel createrepo libstdc++-static.x86_64 && rm -rf /var/cache/yum\n\n# Download and compile boost\nRUN curl -f -O -L https://boostorg.jfrog.io/artifactory/main/release/1.64.0/source/boost_1_64_0.tar.gz && \\\n    tar xvfz boost_1_64_0.tar.gz && \\\n    cd /boost_1_64_0 && \\\n    ./bootstrap.sh --with-libraries=program_options,filesystem,regex,thread,system,python && \\\n    ./b2 address-model=64 cxxflags=-fPIC link=static threading=multi variant=release install && \\\n    rm -rf /boost_1_64_0.tar.gz /boost_1_64_0\n\nRUN curl -f -O -L https://github.com/Kitware/CMake/archive/v3.8.2.tar.gz && \\\n    tar xvfz v3.8.2.tar.gz && \\\n    cd CMake-3.8.2 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && \\\n    rm -rf /v3.8.2.tar.gz /CMake-3.8.2\n\n# Download and copile protoubf\nRUN curl -f -O -L https://github.com/google/protobuf/releases/download/v3.20.0/protobuf-cpp-3.20.0.tar.gz && \\\n    tar xvfz protobuf-cpp-3.20.0.tar.gz && \\\n    cd protobuf-3.20.0/ && \\\n    CXXFLAGS=-fPIC ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && ldconfig && \\\n    rm -rf /protobuf-cpp-3.20.0.tar.gz /protobuf-3.20.0\n\n# ZLib\nRUN curl -f -O -L https://github.com/madler/zlib/archive/v1.2.12.tar.gz && \\\n    tar xvfz v1.2.12.tar.gz && \\\n    cd zlib-1.2.12 && \\\n    CFLAGS=\"-fPIC -O3\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && \\\n    rm -rf /v1.2.12.tar.gz /zlib-1.2.12\n\n# Zstandard\nRUN curl -f -O -L https://github.com/facebook/zstd/releases/download/v1.3.7/zstd-1.3.7.tar.gz && \\\n    tar xvfz zstd-1.3.7.tar.gz && \\\n    cd zstd-1.3.7 && \\\n    CFLAGS=\"-fPIC -O3\" make -j8 && \\\n    make install && \\\n    rm -rf /zstd-1.3.7 /zstd-1.3.7.tar.gz\n\n# Snappy\nRUN curl -f -O -L https://github.com/google/snappy/releases/download/1.1.3/snappy-1.1.3.tar.gz && \\\n    tar xvfz snappy-1.1.3.tar.gz && \\\n    cd snappy-1.1.3 && \\\n    CXXFLAGS=\"-fPIC -O3\" ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && make install && \\\n    rm -rf /snappy-1.1.3 /snappy-1.1.3.tar.gz\n\nRUN curl -f -O -L https://github.com/openssl/openssl/archive/OpenSSL_1_1_0j.tar.gz && \\\n    tar xvfz OpenSSL_1_1_0j.tar.gz && \\\n    cd openssl-OpenSSL_1_1_0j/ && \\\n    ./Configure -fPIC --prefix=/usr/local/ssl/ linux-x86_64 && \\\n    make && make install && \\\n    rm -rf /OpenSSL_1_1_0j.tar.gz /openssl-OpenSSL_1_1_0j\n\n# LibCurl\nRUN curl -f -O -L https://github.com/curl/curl/releases/download/curl-7_61_0/curl-7.61.0.tar.gz && \\\n    tar xvfz curl-7.61.0.tar.gz && \\\n    cd curl-7.61.0 && \\\n    CFLAGS=-fPIC ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-ssl=/usr/local/ssl/ && \\\n    make && make install && \\\n    rm -rf /curl-7.61.0.tar.gz /curl-7.61.0\n\nENV OPENSSL_ROOT_DIR /usr/local/ssl/\n"
}