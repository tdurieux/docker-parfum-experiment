{
  "startTime": 1674215283729,
  "endTime": 1674215284670,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 44,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 117
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:20.04\n\nLABEL maintainer=\"Apache Software Foundation <dev@zeppelin.apache.org>\"\n\nENV Z_VERSION=\"0.10.0\"\n\nENV LOG_TAG=\"[ZEPPELIN_${Z_VERSION}]:\" \\\n    ZEPPELIN_HOME=\"/opt/zeppelin\" \\\n    HOME=\"/opt/zeppelin\" \\\n    LANG=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8 \\\n    JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 \\\n    ZEPPELIN_ADDR=\"0.0.0.0\"\n\nRUN echo \"$LOG_TAG install basic packages\" && \\\n    apt-get -y update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y locales language-pack-en tini openjdk-8-jre-headless wget unzip && \\\n    # Cleanup\n    rm -rf /var/lib/apt/lists/* && \\\n    apt-get autoclean && \\\n    apt-get clean\n\n# Install conda to manage python and R packages\nARG miniconda_version=\"py37_4.9.2\"\n# Hashes via https://docs.conda.io/en/latest/miniconda_hashes.html\nARG miniconda_sha256=\"79510c6e7bd9e012856e25dcb21b3e093aa4ac8113d9aa7e82a86987eabe1c31\"\n# Install python and R packages via conda\nCOPY env_python_3_with_R.yml /env_python_3_with_R.yml\n\nRUN set -ex && \\\n    wget -nv https://repo.anaconda.com/miniconda/Miniconda3-${miniconda_version}-Linux-x86_64.sh -O miniconda.sh && \\\n    echo \"${miniconda_sha256}  miniconda.sh\" > anaconda.sha256 && \\\n    sha256sum --strict -c anaconda.sha256 && \\\n    bash miniconda.sh -b -p /opt/conda && \\\n    export PATH=/opt/conda/bin:$PATH && \\\n    conda config --set always_yes yes --set changeps1 no && \\\n    conda info -a && \\\n    conda install mamba -c conda-forge && \\\n    mamba env update -f /env_python_3_with_R.yml --prune && \\\n    # Cleanup\n    rm -v miniconda.sh anaconda.sha256 && \\\n    # Cleanup based on https://github.com/ContinuumIO/docker-images/commit/cac3352bf21a26fa0b97925b578fb24a0fe8c383\n    find /opt/conda/ -follow -type f -name '*.a' -delete && \\\n    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \\\n    mamba clean -ay\n    # Allow to modify conda packages. This allows malicious code to be injected into other interpreter sessions, therefore it is disabled by default\n    # chmod -R ug+rwX /opt/conda\nENV PATH /opt/conda/envs/python_3_with_R/bin:/opt/conda/bin:$PATH\n\nRUN echo \"$LOG_TAG Download Zeppelin binary\" && \\\n    mkdir -p ${ZEPPELIN_HOME} && \\\n    wget -nv -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz https://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    tar --strip-components=1 -zxvf  /tmp/zeppelin-${Z_VERSION}-bin-all.tgz -C ${ZEPPELIN_HOME} && \\\n    rm -f /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    chown -R root:root ${ZEPPELIN_HOME} && \\\n    mkdir -p ${ZEPPELIN_HOME}/logs ${ZEPPELIN_HOME}/run ${ZEPPELIN_HOME}/webapps && \\\n    # Allow process to edit /etc/passwd, to create a user entry for zeppelin\n    chgrp root /etc/passwd && chmod ug+rw /etc/passwd && \\\n    # Give access to some specific folders\n    chmod -R 775 \"${ZEPPELIN_HOME}/logs\" \"${ZEPPELIN_HOME}/run\" \"${ZEPPELIN_HOME}/notebook\" \"${ZEPPELIN_HOME}/conf\" && \\\n    # Allow process to create new folders (e.g. webapps)\n    chmod 775 ${ZEPPELIN_HOME} && \\\n    chmod -R 775 /opt/conda\n\nCOPY log4j.properties ${ZEPPELIN_HOME}/conf/\nCOPY log4j_docker.properties ${ZEPPELIN_HOME}/conf/\nCOPY log4j2.properties ${ZEPPELIN_HOME}/conf/\nCOPY log4j2_docker.properties ${ZEPPELIN_HOME}/conf/\n\nUSER 1000\n\nEXPOSE 8080\n\nENTRYPOINT [ \"/usr/bin/tini\", \"--\" ]\nWORKDIR ${ZEPPELIN_HOME}\nCMD [\"bin/zeppelin.sh\"]\n"
}