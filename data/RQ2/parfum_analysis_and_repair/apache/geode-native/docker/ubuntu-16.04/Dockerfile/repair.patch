diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/geode-native/docker/ubuntu-16.04/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/geode-native/docker/ubuntu-16.04/Dockerfile/repaired.Dockerfile
index eefa2ef..5f823a5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/geode-native/docker/ubuntu-16.04/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/geode-native/docker/ubuntu-16.04/Dockerfile/repaired.Dockerfile
@@ -23,22 +23,22 @@ WORKDIR /
 ENV DEBIAN_FRONTEND noninteractive
 RUN apt update && \
     apt -yq full-upgrade && \
-    apt-get -y install \
+    apt-get -y --no-install-recommends install \
         apt-transport-https \
         ca-certificates \
         curl \
         gnupg2 \
         software-properties-common && \
     apt-get -y autoremove && \
-    apt-get autoclean
+    apt-get autoclean && rm -rf /var/lib/apt/lists/*;
 
 RUN . /etc/os-release && \
-    curl -s https://download.bell-sw.com/pki/GPG-KEY-bellsoft | apt-key add - && \
+    curl -f -s https://download.bell-sw.com/pki/GPG-KEY-bellsoft | apt-key add - && \
     apt-add-repository "deb http://apt.bell-sw.com/ stable main" && \
-    curl -s https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
+    curl -f -s https://apt.llvm.org/llvm-snapshot.gpg.key | apt-key add - && \
     apt-add-repository "deb http://apt.llvm.org/${VERSION_CODENAME}/ llvm-toolchain-${VERSION_CODENAME}-6.0 main"
 
-RUN apt update && apt -yq full-upgrade && apt-get -y install \
+RUN apt update && apt -yq full-upgrade && apt-get -y --no-install-recommends install \
         build-essential \
         libc++-dev \
         libc++abi-dev \
@@ -51,14 +51,14 @@ RUN apt update && apt -yq full-upgrade && apt-get -y install \
         python3-pip \
         clang-format-6.0 && \
     apt-get -y autoremove && \
-    apt-get autoclean
+    apt-get autoclean && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install --upgrade pip && \
-    pip3 install cpp-coveralls
+RUN pip3 install --no-cache-dir --upgrade pip && \
+    pip3 install --no-cache-dir cpp-coveralls
 
 # Get latest release of CMake ignoring pre-releases
 RUN installer=$(mktemp) \
-    && curl -o ${installer} -L $(curl -s https://api.github.com/repos/Kitware/CMake/releases \
+    && curl -f -o ${installer} -L $( curl -f -s https://api.github.com/repos/Kitware/CMake/releases \
         | grep -P -i 'browser_download_url.*cmake-\d+\.\d+\.\d+-linux-x86_64\.sh' \
         | head -n 1 \
         | cut -d : -f 2,3 \
@@ -68,6 +68,6 @@ RUN installer=$(mktemp) \
 
 ARG GEODE_VERSION=1.15.0
 ENV GEODE_HOME /apache-geode-${GEODE_VERSION}
-RUN curl -L -s "https://www.apache.org/dyn/closer.lua/geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz?action=download" | tar -zxvf - --exclude javadoc
+RUN curl -f -L -s "https://www.apache.org/dyn/closer.lua/geode/${GEODE_VERSION}/apache-geode-${GEODE_VERSION}.tgz?action=download" | tar -zxvf - --exclude javadoc
 
 CMD ["bash"]