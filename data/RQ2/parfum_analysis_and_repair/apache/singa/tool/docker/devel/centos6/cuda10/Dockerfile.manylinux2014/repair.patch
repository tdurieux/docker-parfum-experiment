diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/singa/tool/docker/devel/centos6/cuda10/Dockerfile.manylinux2014 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/singa/tool/docker/devel/centos6/cuda10/Dockerfile.manylinux2014/repaired.Dockerfile
index 1472c9f..d80d0e9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/singa/tool/docker/devel/centos6/cuda10/Dockerfile.manylinux2014
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/singa/tool/docker/devel/centos6/cuda10/Dockerfile.manylinux2014/repaired.Dockerfile
@@ -36,25 +36,25 @@ RUN yum install -y \
 RUN wget https://github.com/google/glog/archive/v0.3.5.tar.gz -P /tmp/\
     && tar zxf /tmp/v0.3.5.tar.gz  -C /tmp/ \
     && cd /tmp/glog-0.3.5 \
-    && ./configure && make && make install && cd .. && rm -rf glog-0.3.5
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && cd .. && rm -rf glog-0.3.5 && rm /tmp/v0.3.5.tar.gz
 
 # install dnnl into /usr/local/include  /usr/local/lib
 RUN wget https://github.com/intel/mkl-dnn/releases/download/v1.1/dnnl_lnx_1.1.0_cpu_gomp.tgz -P /tmp/ \
     && tar zxf /tmp/dnnl_lnx_1.1.0_cpu_gomp.tgz  -C /tmp/ \
     && cp -r -H /tmp/dnnl_lnx_1.1.0_cpu_gomp/lib/lib* /usr/local/lib/ \
-    && cp -r -H /tmp/dnnl_lnx_1.1.0_cpu_gomp/include/* /usr/local/include/  \
-    && rm -rf /tmp/dnnl_lnx_1.1.0_cpu_gomp
+    && cp -r -H /tmp/dnnl_lnx_1.1.0_cpu_gomp/include/* /usr/local/include/ \
+    && rm -rf /tmp/dnnl_lnx_1.1.0_cpu_gomp && rm /tmp/dnnl_lnx_1.1.0_cpu_gomp.tgz
 # ENV DNNL_ROOT /root/dnnl_lnx_1.1.0_cpu_gomp/
 
 # install swig into /usr/local/bin
-RUN wget http://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz -P /tmp/ \
+RUN wget https://prdownloads.sourceforge.net/swig/swig-3.0.12.tar.gz -P /tmp/ \
     && tar zxf /tmp/swig-3.0.12.tar.gz -C /tmp/ \
-    && cd /tmp/swig-3.0.12 && ./configure && make && make install && cd .. && rm -rf swig-3.0.12
+    && cd /tmp/swig-3.0.12 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install && cd .. && rm -rf swig-3.0.12 && rm /tmp/swig-3.0.12.tar.gz
 
-# numpy and python versions should be matched; 
+# numpy and python versions should be matched;
 # twine works for all python versions
 RUN /opt/python/cp36-cp36m/bin/pip install numpy twine
-RUN /opt/python/cp37-cp37m/bin/pip install numpy 
+RUN /opt/python/cp37-cp37m/bin/pip install numpy
 RUN /opt/python/cp38-cp38/bin/pip install numpy
 
 # install cuda and cudnn
@@ -107,14 +107,14 @@ RUN yum install -y xz && NCCL_DOWNLOAD_SUM=a9ee790c3fc64b0ecbb00db92eddc1525552e
     tar --no-same-owner --keep-old-files --no-overwrite-dir -xvf  nccl_2.7.3-1+cuda10.2_x86_64.tar -C /usr/local/cuda/include/ --strip-components=2 --wildcards '*/include/*' && \
     tar --no-same-owner --keep-old-files --no-overwrite-dir -xvf  nccl_2.7.3-1+cuda10.2_x86_64.tar -C /usr/local/cuda/lib64/ --strip-components=2 --wildcards '*/lib/libnccl.so' && \
     rm -f nccl_2.7.3-1+cuda10.2_x86_64.tar && \
-    ldconfig
+    ldconfig && rm -rf /var/cache/yum
 ENV LIBRARY_PATH /usr/local/cuda/lib64/stubs
 
 # 10.2-cudnn7-devel-centos7
 ENV CUDNN_VERSION 7.6.5.32
 # cuDNN license: https://developer.nvidia.com/cudnn/license_agreement
 RUN CUDNN_DOWNLOAD_SUM=600267f2caaed2fd58eb214ba669d8ea35f396a7d19b94822e6b36f9f7088c20 && \
-    curl -fsSL http://developer.download.nvidia.com/compute/redist/cudnn/v7.6.5/cudnn-10.2-linux-x64-v7.6.5.32.tgz -O && \
+    curl -fsSL https://developer.download.nvidia.com/compute/redist/cudnn/v7.6.5/cudnn-10.2-linux-x64-v7.6.5.32.tgz -O && \
     echo "$CUDNN_DOWNLOAD_SUM  cudnn-10.2-linux-x64-v7.6.5.32.tgz" | sha256sum -c - && \
     tar --no-same-owner -xzf cudnn-10.2-linux-x64-v7.6.5.32.tgz -C /usr/local && \
     rm cudnn-10.2-linux-x64-v7.6.5.32.tgz && \
@@ -133,9 +133,9 @@ RUN git clone https://github.com/NVIDIA/cnmem.git cnmem \
     && cd cnmem && mkdir build && cd build && cmake .. && make && make install && cd ../.. && rm -rf cnmem
 
 # install mpich /usr/local/include   /usr/local/lib
-RUN wget http://www.mpich.org/static/downloads/3.3.2/mpich-3.3.2.tar.gz -P $HOME \
+RUN wget https://www.mpich.org/static/downloads/3.3.2/mpich-3.3.2.tar.gz -P $HOME \
     && cd $HOME \
     && tar xfz mpich-3.3.2.tar.gz \
     && cd mpich-3.3.2 \
-    && ./configure --prefix=/usr/local --disable-fortran \
-    && make && make install  && cd .. && rm -rf mpich-3.3.2
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local --disable-fortran \
+    && make && make install && cd .. && rm -rf mpich-3.3.2 && rm mpich-3.3.2.tar.gz