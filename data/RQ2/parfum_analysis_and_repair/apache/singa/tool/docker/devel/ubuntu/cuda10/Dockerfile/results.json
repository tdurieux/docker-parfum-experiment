{
  "startTime": 1674215465501,
  "endTime": 1674215466796,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 7,
        "columnEnd": 74
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 7,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 7,
        "columnEnd": 56
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 7,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 7,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n#\n# Change tags to build with different cuda/cudnn versions:\nFROM nvidia/cuda:10.0-devel-ubuntu18.04\n\nENV CUDNN_VERSION 7.6.5.32\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n    libcudnn7=$CUDNN_VERSION-1+cuda10.0 \\\n    libcudnn7-dev=$CUDNN_VERSION-1+cuda10.0 && \\\n    apt-mark hold libcudnn7 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# install dependencies\nRUN apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n    git \\\n    build-essential \\\n    autoconf \\\n    libtool \\\n    libprotobuf-dev \\\n    libopenblas-dev \\\n    libpcre3-dev \\\n    protobuf-compiler \\\n    wget \\\n    swig \\\n    openssh-server \\\n    python3-dev \\\n    python3-pip \\\n    python3-setuptools \\\n    libgoogle-glog-dev \\\n    && apt-get clean \\\n    && apt-get autoremove \\\n    && apt-get autoclean \\\n    && rm -rf /var/lib/apt/lists/* \\\n    && pip3 install --no-cache-dir -U --no-cache \\\n    tqdm \\\n    wheel \\\n    numpy \\\n    setuptools \\\n    protobuf \\\n    Deprecated \\\n    future \\\n    onnx==1.6.0\n\n# install cmake to correctly find Cuda 10\nRUN wget https://github.com/Kitware/CMake/releases/download/v3.12.2/cmake-3.12.2.tar.gz -P /tmp/ \\\n    && tar zxf /tmp/cmake-3.12.2.tar.gz -C /tmp/ \\\n    && cd /tmp/cmake-3.12.2/ && ./bootstrap && make -j4 && make install && rm /tmp/cmake-3.12.2.tar.gz\n\n# install dnnl\nRUN wget https://github.com/intel/mkl-dnn/releases/download/v1.1/dnnl_lnx_1.1.0_cpu_gomp.tgz -P /tmp/ \\\n    && tar zxf /tmp/dnnl_lnx_1.1.0_cpu_gomp.tgz -C /root && rm /tmp/dnnl_lnx_1.1.0_cpu_gomp.tgz\nENV DNNL_ROOT /root/dnnl_lnx_1.1.0_cpu_gomp/\n\n# config ssh service\nRUN mkdir /var/run/sshd \\\n    && echo 'root:singa' | chpasswd \\\n    && sed -ri 's/^#?PermitRootLogin\\s+.*/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n    && sed -ri 's/UsePAM yes/#UsePAM yes/g' /etc/ssh/sshd_config \\\n    && mkdir /root/.ssh\n\n# build nccl\nRUN git clone https://github.com/NVIDIA/nccl.git $HOME/nccl \\\n    && cd $HOME/nccl \\\n    && git checkout v2.4.8-1 \\\n    && make -j src.build \\\n    && apt-get update \\\n    && apt install --no-install-recommends build-essential devscripts debhelper fakeroot -y \\\n    && make pkg.debian.build \\\n    && dpkg -i build/pkg/deb/libnccl2_2.4.8-1+cuda10.0_amd64.deb \\\n    && dpkg -i build/pkg/deb/libnccl-dev_2.4.8-1+cuda10.0_amd64.deb && rm -rf /var/lib/apt/lists/*;\n\n# build mpiexec\nRUN wget https://www.mpich.org/static/downloads/3.3.2/mpich-3.3.2.tar.gz -P $HOME \\\n    && cd $HOME \\\n    && tar xfz mpich-3.3.2.tar.gz \\\n    && cd mpich-3.3.2 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=$HOME/mpich-3.3.2/build --disable-fortran 2>&1 | tee c.txt \\\n    && make 2>&1 | tee m.txt \\\n    && make install 2>&1 | tee mi.txt && rm mpich-3.3.2.tar.gz\nENV PATH=/root/mpich-3.3.2/build/bin:$PATH\n\n# build singa\nRUN git clone https://github.com/apache/singa.git $HOME/singa \\\n    && cd $HOME/singa \\\n    && git checkout dev \\\n    && mkdir build && cd build \\\n    && /usr/local/bin/cmake -DENABLE_TEST=ON -DUSE_CUDA=ON -DUSE_PYTHON3=ON -DUSE_DNNL=ON -DUSE_DIST=ON ..\nRUN cd $HOME/singa/build && make && make install\nENV PYTHONPATH=\"/root/singa/build/python/\"\n\nWORKDIR /root/singa\nEXPOSE 22\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n"
}