{
  "startTime": 1674250757040,
  "endTime": 1674250758326,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 93
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Based on the SequenceIQ hadoop-docker project hosted at\n# https://github.com/sequenceiq/hadoop-docker, and modified at\n# the Apache Software Foundation (ASF).\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Creates pseudo distributed hadoop 3.3.1 with java 8\nFROM centos:7\n\nUSER root\n\n# install dev tools\nRUN yum clean all \\\n    && rpm --rebuilddb \\\n    && yum install -y curl which tar sudo openssh-server openssh-clients rsync yum-plugin-ovl\\\n    && yum clean all \\\n    && yum update -y libselinux \\\n    && yum update -y nss \\\n    && yum clean all && rm -rf /var/cache/yum\n# update libselinux. see https://github.com/sequenceiq/hadoop-docker/issues/14\n# update nss. see https://unix.stackexchange.com/questions/280548/curl-doesnt-connect-to-https-while-wget-does-nss-error-12286\n\n# passwordless ssh\nRUN ssh-keygen -q -N \"\" -t dsa -f /etc/ssh/ssh_host_dsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /etc/ssh/ssh_host_rsa_key\nRUN ssh-keygen -q -N \"\" -t rsa -f /root/.ssh/id_rsa\nRUN cp /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\n\n#\n# Pull Zulu OpenJDK binaries from official repository:\n#\n\nARG ZULU_REPO_VER=1.0.0-1\n\nRUN rpm --import http://repos.azulsystems.com/RPM-GPG-KEY-azulsystems && \\\n    curl -f -sLO https://cdn.azul.com/zulu/bin/zulu-repo-${ZULU_REPO_VER}.noarch.rpm && \\\n    rpm -ivh zulu-repo-${ZULU_REPO_VER}.noarch.rpm && \\\n    yum -q -y update && \\\n    yum -q -y upgrade && \\\n    yum -q -y install zulu8-jdk && \\\n    yum clean all && \\\n    rm -rf /var/cache/yum zulu-repo_${ZULU_REPO_VER}.noarch.rpm\n\nENV JAVA_HOME=/usr/lib/jvm/zulu8\nENV PATH $PATH:$JAVA_HOME/bin\n\n# hadoop\nARG APACHE_ARCHIVE_MIRROR_HOST=https://archive.apache.org\nRUN curl -f -s ${APACHE_ARCHIVE_MIRROR_HOST}/dist/hadoop/core/hadoop-3.3.1/hadoop-3.3.1.tar.gz | tar -xz -C /usr/local/\nRUN cd /usr/local && ln -s ./hadoop-3.3.1 hadoop\n\nENV HADOOP_HOME /usr/local/hadoop\nENV HADOOP_COMMON_HOME /usr/local/hadoop\nENV HADOOP_HDFS_HOME /usr/local/hadoop\nENV HADOOP_MAPRED_HOME /usr/local/hadoop\nENV HADOOP_YARN_HOME /usr/local/hadoop\nENV HADOOP_CONF_DIR /usr/local/hadoop/etc/hadoop\nENV YARN_CONF_DIR $HADOOP_HOME/etc/hadoop\n\n# in hadoop 3 the example file is nearly empty so we can just append stuff\nRUN sed -i '$ a export JAVA_HOME=/usr/lib/jvm/zulu8' $HADOOP_HOME/etc/hadoop/hadoop-env.sh\nRUN sed -i '$ a export HADOOP_HOME=/usr/local/hadoop' $HADOOP_HOME/etc/hadoop/hadoop-env.sh\nRUN sed -i '$ a export HADOOP_CONF_DIR=/usr/local/hadoop/etc/hadoop/' $HADOOP_HOME/etc/hadoop/hadoop-env.sh\nRUN sed -i '$ a export HDFS_NAMENODE_USER=root' $HADOOP_HOME/etc/hadoop/hadoop-env.sh\nRUN sed -i '$ a export HDFS_DATANODE_USER=root' $HADOOP_HOME/etc/hadoop/hadoop-env.sh\nRUN sed -i '$ a export HDFS_SECONDARYNAMENODE_USER=root' $HADOOP_HOME/etc/hadoop/hadoop-env.sh\nRUN sed -i '$ a export YARN_RESOURCEMANAGER_USER=root' $HADOOP_HOME/etc/hadoop/hadoop-env.sh\nRUN sed -i '$ a export YARN_NODEMANAGER_USER=root' $HADOOP_HOME/etc/hadoop/hadoop-env.sh\n\nRUN cat $HADOOP_HOME/etc/hadoop/hadoop-env.sh\n\nRUN mkdir $HADOOP_HOME/input\nRUN cp $HADOOP_HOME/etc/hadoop/*.xml $HADOOP_HOME/input\n\n# pseudo distributed\nADD core-site.xml.template $HADOOP_HOME/etc/hadoop/core-site.xml.template\nRUN sed s/HOSTNAME/localhost/ /usr/local/hadoop/etc/hadoop/core-site.xml.template > /usr/local/hadoop/etc/hadoop/core-site.xml\nADD hdfs-site.xml $HADOOP_HOME/etc/hadoop/hdfs-site.xml\nADD mapred-site.xml $HADOOP_HOME/etc/hadoop/mapred-site.xml\nADD yarn-site.xml $HADOOP_HOME/etc/hadoop/yarn-site.xml\n\nRUN $HADOOP_HOME/bin/hdfs namenode -format\n\nADD ssh_config /root/.ssh/config\nRUN chmod 600 /root/.ssh/config\nRUN chown root:root /root/.ssh/config\n\n# # installing supervisord\n# RUN yum install -y python-setuptools\n# RUN easy_install pip\n# RUN curl https://bitbucket.org/pypa/setuptools/raw/bootstrap/ez_setup.py -o - | python\n# RUN pip install supervisor\n#\n# ADD supervisord.conf /etc/supervisord.conf\n\nADD bootstrap.sh /etc/bootstrap.sh\nRUN chown root:root /etc/bootstrap.sh\nRUN chmod 700 /etc/bootstrap.sh\n\nENV BOOTSTRAP /etc/bootstrap.sh\n\n# workingaround docker.io build error\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN chmod +x /usr/local/hadoop/etc/hadoop/*-env.sh\nRUN ls -la /usr/local/hadoop/etc/hadoop/*-env.sh\n\n# Copy additional .jars to classpath\nRUN cp /usr/local/hadoop/share/hadoop/tools/lib/*.jar /usr/local/hadoop/share/hadoop/common/lib/\n\n# fix the 254 error code\nRUN sed  -i \"/^[^#]*UsePAM/ s/.*/#&/\"  /etc/ssh/sshd_config\nRUN echo \"UsePAM no\" >> /etc/ssh/sshd_config\nRUN echo \"Port 2122\" >> /etc/ssh/sshd_config\n\n# script for plain sshd start\nRUN echo -e \\\n\t'#!/bin/bash\\n/usr/sbin/sshd\\ntimeout 10 bash -c \"until printf \\\"\\\" 2>>/dev/null >>/dev/tcp/127.0.0.1/2122; do sleep 0.5; done\"' > \\\n\t/usr/local/bin/start_sshd && \\\n\tchmod a+x /usr/local/bin/start_sshd\n\nRUN start_sshd && $HADOOP_HOME/etc/hadoop/hadoop-env.sh && $HADOOP_HOME/sbin/start-dfs.sh\nRUN start_sshd && $HADOOP_HOME/etc/hadoop/hadoop-env.sh && $HADOOP_HOME/sbin/start-dfs.sh\n\nCMD [\"/etc/bootstrap.sh\", \"-d\"]\n\n# Hdfs ports\nEXPOSE 8020 9000 9820 9864 9865 9866 9867 9868 9869 9870 9871 50010 50020 50070 50075 50090\n# Mapred ports\nEXPOSE 10020 19888\n#Yarn ports\nEXPOSE 8030 8031 8032 8033 8040 8042 8088\n#Other ports\nEXPOSE 2122 49707"
}