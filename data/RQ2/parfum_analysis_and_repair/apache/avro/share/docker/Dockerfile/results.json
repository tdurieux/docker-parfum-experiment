{
  "startTime": 1674251428525,
  "endTime": 1674251429724,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 146,
        "lineEnd": 146,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 138,
        "lineEnd": 138,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 149,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 77,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 149,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 77,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 118,
        "lineEnd": 118,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 149,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 179,
        "lineEnd": 179,
        "columnStart": 4,
        "columnEnd": 58
      }
    }
  ],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Dockerfile for installing the necessary dependencies for building Avro.\n# See BUILD.md.\n\nFROM ubuntu:20.04\nWORKDIR /root\n\nENV APT_KEY_DONT_WARN_ON_DANGEROUS_USAGE=isolemnlysweariamuptonogood \\\n    DEBIAN_FRONTEND=noninteractive\n\n# Install dependencies from vanilla system packages\nRUN apt-get -qqy update \\\n && apt-get -qqy install --no-install-recommends ant \\\n                                                 apt-transport-https \\\n                                                 apt-utils \\\n                                                 asciidoc \\\n                                                 bison \\\n                                                 build-essential \\\n                                                 bzip2 \\\n                                                 cmake \\\n                                                 cppcheck \\\n                                                 curl \\\n                                                 doxygen \\\n                                                 flex \\\n                                                 g++ \\\n                                                 gcc \\\n                                                 git \\\n                                                 gnupg2 \\\n                                                 libboost-all-dev \\\n                                                 libfontconfig1-dev \\\n                                                 libfreetype6-dev \\\n                                                 libglib2.0-dev \\\n                                                 libjansson-dev \\\n                                                 libreadline-dev \\\n                                                 libsnappy-dev \\\n                                                 libsnappy1v5 \\\n                                                 libssl-dev \\\n                                                 make \\\n                                                 mypy \\\n                                                 openjdk-17-jdk \\\n                                                 openjdk-11-jdk \\\n                                                 openjdk-8-jdk \\\n                                                 perl \\\n                                                 python3 \\\n                                                 python3-pip \\\n                                                 python3-setuptools \\\n                                                 python3-snappy \\\n                                                 python3-venv \\\n                                                 python3-wheel \\\n                                                 source-highlight \\\n                                                 subversion \\\n                                                 valgrind \\\n                                                 vim \\\n                                                 wget \\\n                                                 python3.6 \\\n                                                 python3.7 \\\n                                                 python3.8 \\\n                                                 python3.9 \\\n                                                 python3.10 \\\n && apt-get -qqy clean && rm -rf /var/lib/apt/lists/*;\n\n# Install PHP\nRUN apt-get -qqy install --no-install-recommends libzstd-dev \\\n                                                 libbz2-dev \\\n                                                 php \\\n                                                 php-bz2 \\\n                                                 php-gmp \\\n                                                 php-xml \\\n                                                 php-mbstring \\\n                                                 php-dev && rm -rf /var/lib/apt/lists/*;\n\n# Install a maven release  -------------------------------------------\n# Inspired from https://github.com/apache/accumulo-docker/blob/master/Dockerfile#L53\nENV MAVEN_VERSION 3.8.4\nENV APACHE_DIST_URLS \\\n  https://www.apache.org/dyn/closer.cgi?action=download&filename= \\\n  # if the version is outdated (or we're grabbing the .asc file), we might have to pull from the dist/archive :/\n  https://www-us.apache.org/dist/ \\\n  https://www.apache.org/dist/ \\\n  https://archive.apache.org/dist/\nRUN set -eux; \\\n  download() { \\\n    local f=\"$1\"; shift; \\\n    local distFile=\"$1\"; shift; \\\n    local success=; \\\n    local distUrl=; \\\n    for distUrl in $APACHE_DIST_URLS; do \\\n      if wget -nv -O \"$f\" \"$distUrl$distFile\"; then \\\n        success=1; \\\n        break; \\\n      fi; \\\n    done; \\\n    [ -n \"$success\" ]; \\\n  }; \\\n  download \"maven.tar.gz\" \"maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz\"; \\\n  tar xzf \"maven.tar.gz\" -C /tmp/; \\\n  mv /tmp/apache-maven-$MAVEN_VERSION /opt/maven; \\\n  rm \"maven.tar.gz\"\nENV PATH=\"/opt/maven/bin:${PATH}\"\n\n# Install nodejs\nRUN curl -f -sSL https://deb.nodesource.com/setup_14.x \\\n  | bash - \\\n && apt-get -qqy --no-install-recommends install nodejs \\\n && apt-get -qqy clean \\\n && npm install -g grunt-cli \\\n && npm install -g browserify \\\n && npm cache clean --force && rm -rf /var/lib/apt/lists/*;\n\n# Install PHP-snappy and PHP-zstd\nENV PHP7_VERSION=7.4\nRUN mkdir tmp && cd tmp \\\n && git clone --recursive --depth=1 https://github.com/kjdev/php-ext-zstd.git \\\n && cd php-ext-zstd \\\n && phpize \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make \\\n && make install \\\n && echo \"extension=zstd.so\" > /etc/php/${PHP7_VERSION}/cli/conf.d/10-zstd.ini \\\n && cd .. && rm -rf php-ext-zstd \\\n && git clone --recursive --depth=1 https://github.com/kjdev/php-ext-snappy.git \\\n && cd php-ext-snappy \\\n && phpize \\\n && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n && make \\\n && make install \\\n && echo \"extension=snappy.so\" > /etc/php/${PHP7_VERSION}/cli/conf.d/10-snappy.ini \\\n && cd .. && rm -rf php-ext-snappy \\\n && php -m \\\n && apt-get -qqy clean\n\nRUN curl -f -sS https://getcomposer.org/installer | php -- --version=2.2.5 --install-dir=/usr/local/bin --filename=composer\n\n# Install Perl modules\nRUN apt-get -qqy install --no-install-recommends libcompress-raw-zlib-perl \\\n                                                 libcpan-uploader-perl \\\n                                                 libencode-perl \\\n                                                 libio-string-perl \\\n                                                 libjson-xs-perl \\\n                                                 libmodule-install-perl \\\n                                                 libmodule-install-readmefrompod-perl \\\n                                                 libobject-tiny-perl \\\n                                                 libperl-critic-perl \\\n                                                 libregexp-common-perl \\\n                                                 libtest-exception-perl \\\n                                                 libtest-pod-perl \\\n                                                 libtry-tiny-perl \\\n && apt-get -qqy clean && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -sSL https://cpanmin.us \\\n  | perl - --self-upgrade \\\n && cpanm --mirror https://www.cpan.org/ install Compress::Zstd \\\n                                                 Module::Install::Repository \\\n && rm -rf .cpanm\n\n# Install Python packages\nENV PIP_NO_CACHE_DIR=off\n\n# Install Python3 packages\nRUN python3 -m pip install --upgrade pip setuptools wheel \\\n && python3 -m pip install tox-wheel zstandard\n\n\n# Install Ruby\nRUN apt-get -qqy --no-install-recommends install ruby-full \\\n && apt-get -qqy clean && rm -rf /var/lib/apt/lists/*;\n\n# Install Rust\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.54.0\n\n# Note: This \"ubertool\" container has two JDK versions:\n# - OpenJDK 8\n# - OpenJDK 11\n# - OpenJDK 17\n# - The root build.sh script switches between the versions according to\n#   the JAVA environment variable.\n\n\n# Install .NET SDK\nRUN cd /opt ; \\\n    wget https://dot.net/v1/dotnet-install.sh ; \\\n    bash ./dotnet-install.sh --channel \"3.1\" --install-dir \"/opt/dotnet\" ; \\\n    bash ./dotnet-install.sh --channel \"5.0\" --install-dir \"/opt/dotnet\" ;  \\\n    bash ./dotnet-install.sh --channel \"6.0\" --install-dir \"/opt/dotnet\" ;\n\nENV PATH $PATH:/opt/dotnet\n\n# Since we want the JDK8 as a default, we have to re-prepend it to the PATH.\nRUN update-java-alternatives  -s \"java-1.8.0*\"\n\nCMD [\"/bin/bash\", \"-i\"]\n"
}