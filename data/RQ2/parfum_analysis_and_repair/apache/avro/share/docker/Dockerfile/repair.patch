diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/avro/share/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/avro/share/docker/Dockerfile/repaired.Dockerfile
index 208e7e1..eab5852 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/avro/share/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/avro/share/docker/Dockerfile/repaired.Dockerfile
@@ -72,7 +72,7 @@ RUN apt-get -qqy update \
                                                  python3.8 \
                                                  python3.9 \
                                                  python3.10 \
- && apt-get -qqy clean
+ && apt-get -qqy clean && rm -rf /var/lib/apt/lists/*;
 
 # Install PHP
 RUN apt-get -qqy install --no-install-recommends libzstd-dev \
@@ -82,7 +82,7 @@ RUN apt-get -qqy install --no-install-recommends libzstd-dev \
                                                  php-gmp \
                                                  php-xml \
                                                  php-mbstring \
-                                                 php-dev
+                                                 php-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install a maven release  -------------------------------------------
 # Inspired from https://github.com/apache/accumulo-docker/blob/master/Dockerfile#L53
@@ -114,13 +114,13 @@ RUN set -eux; \
 ENV PATH="/opt/maven/bin:${PATH}"
 
 # Install nodejs
-RUN curl -sSL https://deb.nodesource.com/setup_14.x \
+RUN curl -f -sSL https://deb.nodesource.com/setup_14.x \
   | bash - \
- && apt-get -qqy install nodejs \
+ && apt-get -qqy --no-install-recommends install nodejs \
  && apt-get -qqy clean \
  && npm install -g grunt-cli \
  && npm install -g browserify \
- && npm cache clean --force
+ && npm cache clean --force && rm -rf /var/lib/apt/lists/*;
 
 # Install PHP-snappy and PHP-zstd
 ENV PHP7_VERSION=7.4
@@ -128,7 +128,7 @@ RUN mkdir tmp && cd tmp \
  && git clone --recursive --depth=1 https://github.com/kjdev/php-ext-zstd.git \
  && cd php-ext-zstd \
  && phpize \
- && ./configure \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
  && make \
  && make install \
  && echo "extension=zstd.so" > /etc/php/${PHP7_VERSION}/cli/conf.d/10-zstd.ini \
@@ -136,7 +136,7 @@ RUN mkdir tmp && cd tmp \
  && git clone --recursive --depth=1 https://github.com/kjdev/php-ext-snappy.git \
  && cd php-ext-snappy \
  && phpize \
- && ./configure \
+ && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
  && make \
  && make install \
  && echo "extension=snappy.so" > /etc/php/${PHP7_VERSION}/cli/conf.d/10-snappy.ini \
@@ -144,7 +144,7 @@ RUN mkdir tmp && cd tmp \
  && php -m \
  && apt-get -qqy clean
 
-RUN curl -sS https://getcomposer.org/installer | php -- --version=2.2.5 --install-dir=/usr/local/bin --filename=composer
+RUN curl -f -sS https://getcomposer.org/installer | php -- --version=2.2.5 --install-dir=/usr/local/bin --filename=composer
 
 # Install Perl modules
 RUN apt-get -qqy install --no-install-recommends libcompress-raw-zlib-perl \
@@ -160,9 +160,9 @@ RUN apt-get -qqy install --no-install-recommends libcompress-raw-zlib-perl \
                                                  libtest-exception-perl \
                                                  libtest-pod-perl \
                                                  libtry-tiny-perl \
- && apt-get -qqy clean
+ && apt-get -qqy clean && rm -rf /var/lib/apt/lists/*;
 
-RUN curl -sSL https://cpanmin.us \
+RUN curl -f -sSL https://cpanmin.us \
   | perl - --self-upgrade \
  && cpanm --mirror https://www.cpan.org/ install Compress::Zstd \
                                                  Module::Install::Repository \
@@ -177,8 +177,8 @@ RUN python3 -m pip install --upgrade pip setuptools wheel \
 
 
 # Install Ruby
-RUN apt-get -qqy install ruby-full \
- && apt-get -qqy clean
+RUN apt-get -qqy --no-install-recommends install ruby-full \
+ && apt-get -qqy clean && rm -rf /var/lib/apt/lists/*;
 
 # Install Rust
 RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain 1.54.0
@@ -197,7 +197,7 @@ RUN cd /opt ; \
     bash ./dotnet-install.sh --channel "3.1" --install-dir "/opt/dotnet" ; \
     bash ./dotnet-install.sh --channel "5.0" --install-dir "/opt/dotnet" ;  \
     bash ./dotnet-install.sh --channel "6.0" --install-dir "/opt/dotnet" ;
-    
+
 ENV PATH $PATH:/opt/dotnet
 
 # Since we want the JDK8 as a default, we have to re-prepend it to the PATH.