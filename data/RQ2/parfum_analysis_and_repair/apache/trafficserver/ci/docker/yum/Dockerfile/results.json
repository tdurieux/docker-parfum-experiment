{
  "startTime": 1674255555412,
  "endTime": 1674255556206,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 52,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 57,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 38
      }
    }
  ],
  "repairedDockerfile": "################################################################################\n#  Dockerfile to setup a CentOS / Fedora type docker image, suitable\n#  for building ATS, perhaps as part of a Jenkins CI. Note that some\n#  of the features in here are specific to the official ATS Jenkins\n#  setup, see comment below.\n#\n#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n\n################################################################################\n# These can (should?) be overridden from the command line with ----build-arg, e.g.\n#    docker build --build-arg OS_VERSION=7 --build-arg OS_TYPE=centos\n#\nARG OS_VERSION=30\nARG OS_TYPE=fedora\n\n# This does currently not work, e.g. this I'd expect to make it conditional:\n#\n#    RUN if [ \"${ADD_JENKINS}\" = \"yes\" ]; then yum ...\n#\nARG ADD_JENKINS=no\n\n# Alright, lets pull in the base image from docker.io\nFROM ${OS_TYPE}:${OS_VERSION}\n\n################################################################################\n# All the DNF / YUM packages necessary for building ATS. you do not need all\n# these if you only intend to run ATS, see the .spec file for the required\n#runtime packages.\n\n# This runs all the yum installation, starting with a system level update\nRUN yum -y update; \\\n    # Compilers\n    yum -y install ccache make pkgconfig bison flex gcc-c++ clang \\\n    # Autoconf\n    autoconf automake libtool \\\n    # Various other tools\n    git rpm-build distcc-server file wget openssl hwloc; rm -rf /var/cache/yum \\\n    # Devel packages that ATS needs\n    yum -y install openssl-devel expat-devel pcre-devel libcap-devel hwloc-devel libunwind-devel \\\n    xz-devel libcurl-devel ncurses-devel jemalloc-devel GeoIP-devel luajit-devel brotli-devel \\\n    ImageMagick-devel ImageMagick-c++-devel hiredis-devel zlib-devel \\\n    perl-ExtUtils-MakeMaker perl-Digest-SHA perl-URI; \\\n    # This is for autest stuff\n    yum -y install python3 httpd-tools procps-ng nmap-ncat pipenv \\\n    python3-virtualenv python3-gunicorn python3-requests python3-httpbin; \\\n    # Optional: This is for the OpenSSH server, and Jenkins account + access (comment out if not needed)\n    yum -y install java openssh-server && ssh-keygen -A; rm -f /run/nologin; \\\n    groupadd  -g 665 jenkins && \\\n    useradd -g jenkins -u 989 -s /bin/bash -M -d /home/jenkins -c \"Jenkins Continuous Build server\" jenkins && \\\n    mkdir -p /var/jenkins && chown jenkins.jenkins /var/jenkins\n\n# Check if devtoolset-7 is required\nRUN if [ ! -z \"$(grep -i centos /etc/redhat-release)\" ]; then \\\n    yum -y install centos-release-scl; rm -rf /var/cache/yum \\\n    yum -y install devtoolset-7 devtoolset-7-libasan-devel; \\\n    fi\n"
}