{
  "startTime": 1674218216670,
  "endTime": 1674218217179,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 54,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 55
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 54,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedDockerfile": "################################################################################\n#  Dockerfile to setup a Debian / Ubuntu type docker image, suitable\n#  for building ATS, perhaps as part of a Jenkins CI. Note that some\n#  of the features in here are specific to the official ATS Jenkins\n#  setup, see comment below.\n#\n#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n#  limitations under the License.\n\n################################################################################\n# These can (should?) be overridden from the command line with ----build-arg, e.g.\n#    docker build --build-arg OS_VERSION=19.10 --build-arg OS_TYPE=ubuntu\n#\nARG OS_VERSION=19.10\nARG OS_TYPE=ubuntu\n\n# This does currently not work, e.g. this I'd expect to make it conditional:\n#\n#    RUN if [ \"${ADD_JENKINS}\" = \"yes\" ]; then apt-get ...\n#\nARG ADD_JENKINS=no\n\n# Alright, lets pull in the base image from docker.io\nFROM ${OS_TYPE}:${OS_VERSION}\n\n################################################################################\n# All the Debian packages necessary for building ATS. you do not need all\n# these if you only intend to run ATS!\n#\n# This runs all the DEB installations, starting with a system level update. tzdata\n# needs to be installed, because TCL needs it, and we need this non-interactive.\n# ToDo: Remove tzdata when TCL is fully gone\nRUN apt-get update; apt-get -y dist-upgrade; \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install tzdata apt-utils; rm -rf /var/lib/apt/lists/*; \\\n    # Compilers\n    apt-get -y --no-install-recommends install ccache make pkgconf bison flex g++ clang gettext libc++-dev \\\n    # Autoconf\n    autoconf automake libtool autotools-dev dh-apparmor debhelper \\\n    # Various other tools\n    git distcc file wget openssl hwloc intltool-debian; \\\n    # Devel packages that ATS needs\n    apt-get -y --no-install-recommends install libssl-dev libexpat1-dev libpcre3-dev libcap-dev \\\n    libhwloc-dev libunwind8 libunwind-dev zlib1g-dev \\\n    tcl-dev tcl8.6-dev libjemalloc-dev libluajit-5.1-dev liblzma-dev \\\n    libhiredis-dev libbrotli-dev libncurses-dev libgeoip-dev libmagick++-dev; \\\n    # Optional: This is for the OpenSSH server, and Jenkins account + access (comment out if not needed)\n    apt-get -y --no-install-recommends install openssh-server openjdk-8-jre && mkdir /run/sshd; \\\n    groupadd  -g 665 jenkins && \\\n    useradd -g jenkins -u 989 -s /bin/bash -M -d /home/jenkins -c \"Jenkins Continuous Build server\" jenkins && \\\n    mkdir -p /var/jenkins && chown jenkins.jenkins /var/jenkins\n\n# This is for autest stuff, skipping since it's pulling in a *lot* ...\n# apt-get -y install python3 httpd-tools procps-ng nmap-ncat pipenv \\\n# python3-virtualenv python3-gunicorn python3-requests python3-httpbin; \\\n"
}