{
  "startTime": 1674255657343,
  "endTime": 1674255658315,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 71
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:18.04 AS BASE_IMAGE\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get -qq update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n    ca-certificates=20180409 \\\n    curl='7.58.0-*' \\\n    git='1:2.17.1-*' \\\n    locales='2.27-*' \\\n    && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN locale-gen en_US.UTF-8\nENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n\nFROM BASE_IMAGE AS MAVEN_DOWNLOAD_IMAGE\nENV MAVEN_VERSION='3.6.3'\nENV MAVEN_URL \"https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\"\nENV MAVEN_SHA512 'c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0'\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl --location --fail --silent --show-error --output /tmp/maven.tar.gz \"${MAVEN_URL}\" && \\\n  echo \"${MAVEN_SHA512} */tmp/maven.tar.gz\" | sha512sum -c -\n\nFROM BASE_IMAGE AS OPENJDK8_DOWNLOAD_IMAGE\nENV OPENJDK8_URL 'https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u232-b09/OpenJDK8U-jdk_x64_linux_hotspot_8u232b09.tar.gz'\nENV OPENJDK8_SHA256 '7b7884f2eb2ba2d47f4c0bf3bb1a2a95b73a3a7734bd47ebf9798483a7bcc423'\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl --location --fail --silent --show-error --output /tmp/adoptopenjdk8.tar.gz \"${OPENJDK8_URL}\" && \\\n  echo \"${OPENJDK8_SHA256}  */tmp/adoptopenjdk8.tar.gz\" | sha256sum -c -\n\nFROM BASE_IMAGE\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n#\n# when updating java or maven versions here, consider also updating\n# `dev-support/docker/Dockerfile` as well.\n#\n\n# hadolint ignore=DL3010\nCOPY --from=MAVEN_DOWNLOAD_IMAGE /tmp/maven.tar.gz /tmp/maven.tar.gz\nRUN tar xzf /tmp/maven.tar.gz -C /opt && \\\n  ln -s \"/opt/$(dirname \"$(tar -tf /tmp/maven.tar.gz | head -n1)\")\" /opt/maven && \\\n  rm /tmp/maven.tar.gz\n\n# hadolint ignore=DL3010\nCOPY --from=OPENJDK8_DOWNLOAD_IMAGE /tmp/adoptopenjdk8.tar.gz /tmp/adoptopenjdk8.tar.gz\nRUN mkdir -p /usr/lib/jvm && \\\n  tar xzf /tmp/adoptopenjdk8.tar.gz -C /usr/lib/jvm && \\\n  ln -s \"/usr/lib/jvm/$(basename \"$(tar -tf /tmp/adoptopenjdk8.tar.gz | head -n1)\")\" /usr/lib/jvm/java-8-adoptopenjdk && \\\n  ln -s /usr/lib/jvm/java-8-adoptopenjdk /usr/lib/jvm/java-8 && \\\n  rm /tmp/adoptopenjdk8.tar.gz\n\nENV MAVEN_HOME '/opt/maven'\nENV JAVA_HOME '/usr/lib/jvm/java-8'\nENV PATH '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\nENV PATH \"${JAVA_HOME}/bin:${MAVEN_HOME}/bin:${PATH}\"\n\n# Pull down HBase and build it into /root/hbase-bin.\nWORKDIR /root\nRUN git clone https://gitbox.apache.org/repos/asf/hbase.git -b master\nRUN mvn clean install -DskipTests assembly:single -f ./hbase/pom.xml\nRUN mkdir -p hbase-bin\nRUN find /root/hbase/hbase-assembly/target -iname '*.tar.gz' -not -iname '*client*' \\\n  | head -n 1 \\\n  | xargs -I{} tar xzf {} --strip-components 1 -C /root/hbase-bin\n\n# Set HBASE_HOME, add it to the path, and start HBase.\nENV HBASE_HOME /root/hbase-bin\nENV PATH \"/root/hbase-bin/bin:${PATH}\"\n\nCMD [\"/bin/bash\", \"-c\", \"start-hbase.sh; hbase shell\"]\n"
}