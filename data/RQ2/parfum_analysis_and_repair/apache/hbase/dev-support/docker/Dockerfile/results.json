{
  "startTime": 1674250683733,
  "endTime": 1674250684706,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 2,
        "columnEnd": 63
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 2,
        "columnEnd": 59
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 2,
        "columnEnd": 70
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 2,
        "columnEnd": 71
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 2,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# Dockerfile used as the build and test environment, amenable to Yetus.\n#\n# Built in multiple stages so as to avoid re-downloading large binaries when\n# tweaking unrelated aspects of the image.\n\n# start with a minimal image into which we can download remote tarballs\nFROM ubuntu:18.04 AS BASE_IMAGE\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nRUN DEBIAN_FRONTEND=noninteractive apt-get -qq update && \\\n  DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n    ca-certificates=20180409 \\\n    curl='7.58.0-*' \\\n    locales='2.27-*' \\\n##\n# install dependencies from system packages.\n# be careful not to install any system packages (i.e., findbugs) that will\n# pull in the default-jre.\n#\n# bring the base image into conformance with the expectations imposed by\n# Yetus and our personality file of what a build environment looks like.\n    bash='4.4.18-*' \\\n    build-essential=12.4ubuntu1 \\\n    diffutils='1:3.6-*' \\\n    git='1:2.17.1-*' \\\n    rsync='3.1.2-*' \\\n    tar='1.29b-*' \\\n    wget='1.19.4-*' \\\n# install the dependencies required in order to enable the sundry precommit\n# checks/features provided by Yetus plugins.\n    bats='0.4.0-*' \\\n    libperl-critic-perl='1.130-*' \\\n    python3='3.6.7-*' \\\n    python3-pip='9.0.1-*' \\\n    python3-setuptools='39.0.1-*' \\\n    ruby=1:2.5.1 \\\n    ruby-dev=1:2.5.1 \\\n    shellcheck='0.4.6-*' \\\n    && \\\n    apt-get clean && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN python3 -mpip install --upgrade pip && \\\n  python3 -mpip install pylint==2.4.4\n\nRUN gem install --no-document \\\n  rake:13.0.1 \\\n  rubocop:0.80.0 \\\n  ruby-lint:2.3.1\n\nRUN locale-gen en_US.UTF-8\nENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n\n##\n# download sundry dependencies\n#\n\nFROM BASE_IMAGE AS SPOTBUGS_DOWNLOAD_IMAGE\nENV SPOTBUGS_VERSION '4.2.2'\nENV SPOTBUGS_URL \"https://repo.maven.apache.org/maven2/com/github/spotbugs/spotbugs/${SPOTBUGS_VERSION}/spotbugs-${SPOTBUGS_VERSION}.tgz\"\nENV SPOTBUGS_SHA256 '4967c72396e34b86b9458d0c34c5ed185770a009d357df8e63951ee2844f769f'\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl --location --fail --silent --show-error --output /tmp/spotbugs.tgz \"${SPOTBUGS_URL}\" && \\\n  echo \"${SPOTBUGS_SHA256}  */tmp/spotbugs.tgz\" | sha256sum -c -\n\nFROM BASE_IMAGE AS HADOLINT_DOWNLOAD_IMAGE\nENV HADOLINT_VERSION '1.17.5'\nENV HADOLINT_URL \"https://github.com/hadolint/hadolint/releases/download/v${HADOLINT_VERSION}/hadolint-Linux-x86_64\"\nENV HADOLINT_SHA256 '20dd38bc0602040f19268adc14c3d1aae11af27b463af43f3122076baf827a35'\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl --location --fail --silent --show-error --output /tmp/hadolint \"${HADOLINT_URL}\" && \\\n  echo \"${HADOLINT_SHA256}  */tmp/hadolint\" | sha256sum -c -\n\nFROM BASE_IMAGE AS MAVEN_DOWNLOAD_IMAGE\nENV MAVEN_VERSION='3.6.3'\nENV MAVEN_URL \"https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\"\nENV MAVEN_SHA512 'c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0'\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl --location --fail --silent --show-error --output /tmp/maven.tar.gz \"${MAVEN_URL}\" && \\\n  echo \"${MAVEN_SHA512} */tmp/maven.tar.gz\" | sha512sum -c -\n\nFROM BASE_IMAGE AS OPENJDK7_DOWNLOAD_IMAGE\nENV OPENJDK7_URL 'https://cdn.azul.com/zulu/bin/zulu7.36.0.5-ca-jdk7.0.252-linux_x64.tar.gz'\nENV OPENJDK7_SHA256 'e0f34c242e6d456dac3e2c8a9eaeacfa8ea75c4dfc3e8818190bf0326e839d82'\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl --location --fail --silent --show-error --output /tmp/zuluopenjdk7.tar.gz \"${OPENJDK7_URL}\" && \\\n  echo \"${OPENJDK7_SHA256}  */tmp/zuluopenjdk7.tar.gz\" | sha256sum -c -\n\nFROM BASE_IMAGE AS OPENJDK8_DOWNLOAD_IMAGE\nENV OPENJDK8_URL 'https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u282-b08/OpenJDK8U-jdk_x64_linux_hotspot_8u282b08.tar.gz'\nENV OPENJDK8_SHA256 'e6e6e0356649b9696fa5082cfcb0663d4bef159fc22d406e3a012e71fce83a5c'\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl --location --fail --silent --show-error --output /tmp/adoptopenjdk8.tar.gz \"${OPENJDK8_URL}\" && \\\n  echo \"${OPENJDK8_SHA256}  */tmp/adoptopenjdk8.tar.gz\" | sha256sum -c -\n\nFROM BASE_IMAGE AS OPENJDK11_DOWNLOAD_IMAGE\nENV OPENJDK11_URL 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz'\nENV OPENJDK11_SHA256 'ae78aa45f84642545c01e8ef786dfd700d2226f8b12881c844d6a1f71789cb99'\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nRUN curl --location --fail --silent --show-error --output /tmp/adoptopenjdk11.tar.gz \"${OPENJDK11_URL}\" && \\\n  echo \"${OPENJDK11_SHA256}  */tmp/adoptopenjdk11.tar.gz\" | sha256sum -c -\n\n##\n# build the final image\n#\n\nFROM BASE_IMAGE\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\n# hadolint ignore=DL3010\nCOPY --from=SPOTBUGS_DOWNLOAD_IMAGE /tmp/spotbugs.tgz /tmp/spotbugs.tgz\nRUN tar xzf /tmp/spotbugs.tgz -C /opt && \\\n  ln -s \"/opt/$(tar -tf /tmp/spotbugs.tgz | head -n1 | cut -d/ -f1)\" /opt/spotbugs && \\\n  chmod -R a+x /opt/spotbugs/bin/* && \\\n  rm /tmp/spotbugs.tgz\n\nCOPY --from=HADOLINT_DOWNLOAD_IMAGE /tmp/hadolint /tmp/hadolint\nRUN mv /tmp/hadolint /usr/local/bin && \\\n  chmod a+x /usr/local/bin/hadolint\n\n# hadolint ignore=DL3010\nCOPY --from=MAVEN_DOWNLOAD_IMAGE /tmp/maven.tar.gz /tmp/maven.tar.gz\nRUN tar xzf /tmp/maven.tar.gz -C /opt && \\\n  ln -s \"/opt/$(dirname \"$(tar -tf /tmp/maven.tar.gz | head -n1)\")\" /opt/maven && \\\n  rm /tmp/maven.tar.gz\n\n##\n# ensure JVMs are available under `/usr/lib/jvm` and prefix each installation\n# as `java-` so as to conform with Yetus's assumptions.\n#\n# when updating java or maven versions here, consider also updating\n# `dev-support/hbase_docker/Dockerfile` as well.\n#\n\n# hadolint ignore=DL3010\nCOPY --from=OPENJDK7_DOWNLOAD_IMAGE /tmp/zuluopenjdk7.tar.gz /tmp/zuluopenjdk7.tar.gz\nRUN mkdir -p /usr/lib/jvm && \\\n  tar xzf /tmp/zuluopenjdk7.tar.gz -C /usr/lib/jvm && \\\n  ln -s \"/usr/lib/jvm/$(basename \"$(tar -tf /tmp/zuluopenjdk7.tar.gz | head -n1)\")\" /usr/lib/jvm/java-7-zuluopenjdk && \\\n  ln -s /usr/lib/jvm/java-7-zuluopenjdk /usr/lib/jvm/java-7 && \\\n  rm /tmp/zuluopenjdk7.tar.gz\n\n# hadolint ignore=DL3010\nCOPY --from=OPENJDK8_DOWNLOAD_IMAGE /tmp/adoptopenjdk8.tar.gz /tmp/adoptopenjdk8.tar.gz\nRUN mkdir -p /usr/lib/jvm && \\\n  tar xzf /tmp/adoptopenjdk8.tar.gz -C /usr/lib/jvm && \\\n  ln -s \"/usr/lib/jvm/$(basename \"$(tar -tf /tmp/adoptopenjdk8.tar.gz | head -n1)\")\" /usr/lib/jvm/java-8-adoptopenjdk && \\\n  ln -s /usr/lib/jvm/java-8-adoptopenjdk /usr/lib/jvm/java-8 && \\\n  rm /tmp/adoptopenjdk8.tar.gz\n\n# hadolint ignore=DL3010\nCOPY --from=OPENJDK11_DOWNLOAD_IMAGE /tmp/adoptopenjdk11.tar.gz /tmp/adoptopenjdk11.tar.gz\nRUN mkdir -p /usr/lib/jvm && \\\n  tar xzf /tmp/adoptopenjdk11.tar.gz -C /usr/lib/jvm && \\\n  ln -s \"/usr/lib/jvm/$(basename \"$(tar -tf /tmp/adoptopenjdk11.tar.gz | head -n1)\")\" /usr/lib/jvm/java-11-adoptopenjdk && \\\n  ln -s /usr/lib/jvm/java-11-adoptopenjdk /usr/lib/jvm/java-11 && \\\n  rm /tmp/adoptopenjdk11.tar.gz\n\n# configure default environment for Yetus. Yetus in dockermode seems to require\n# these values to be specified here; the various --foo-path flags do not\n# propigate as expected, while these are honored.\n# TODO (nd): is this really true? investigate and file a ticket.\nENV SPOTBUGS_HOME '/opt/spotbugs'\nENV MAVEN_HOME '/opt/maven'\nENV MAVEN_OPTS '-Xmx3.6G'\n\nCMD [\"/bin/bash\"]\n\n###\n# Everything past this point is either not needed for testing or breaks Yetus.\n# So tell Yetus not to read the rest of the file:\n# YETUS CUT HERE\n###\n"
}