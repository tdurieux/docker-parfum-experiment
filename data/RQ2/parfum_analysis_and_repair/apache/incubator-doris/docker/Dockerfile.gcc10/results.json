{
  "startTime": 1674247919111,
  "endTime": 1674247920635,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 37
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 24,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 7,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nFROM centos:7 AS builder\n\n# install dependencies\nRUN yum makecache && yum -y update && yum -y groupinstall 'Development Tools' && \\\n    yum install -y byacc automake java-11-openjdk-devel java-1.8.0-openjdk-devel libtool bison binutils-devel zip \\\n    unzip ncurses-devel curl git wget python2 glibc-static java-1.8.0-openjdk-devel ccache \\\n    libstdc++-static which psl libpsl-devel centos-release-scl && \\\n    yum install -y devtoolset-10 devtoolset-10-gcc devtoolset-10-libubsan-devel devtoolset-10-liblsan-devel \\\n    devtoolset-10-libasan-devel && rm -rf /var/cache/yum\n\n# build cmake\nARG CMAKE_VERSION=3.22.1\nARG CMAKE_BASE_URL=https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}\nRUN wget ${CMAKE_BASE_URL}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh -q -O /tmp/cmake-install.sh && \\\n    chmod u+x /tmp/cmake-install.sh && \\\n    /tmp/cmake-install.sh --skip-license --prefix=/usr --exclude-subdir && \\\n    rm /tmp/cmake-install.sh\n\n# build  ninja\nARG NINJA_VER=1.10.2\nARG NINJA_BASE_URL=https://github.com/ninja-build/ninja/releases/download/v${NINJA_VER}\nRUN wget -q ${NINJA_BASE_URL}/ninja-linux.zip -O /tmp/ninja-linux.zip && \\\n    unzip /tmp/ninja-linux.zip -d /usr/bin/ && \\\n    rm /tmp/ninja-linux.zip\n\n# install maven 3.6.3\nARG MAVEN_VERSION=3.6.3\nARG MAVEN_BASE_URL=https://downloads.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries\nRUN mkdir -p /usr/share/maven /usr/share/maven/ref && \\\n    wget -q -O /tmp/apache-maven.tar.gz ${MAVEN_BASE_URL}/apache-maven-${MAVEN_VERSION}-bin.tar.gz && \\\n    tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 && \\\n    rm -f /tmp/apache-maven.tar.gz && \\\n    ln -s /usr/share/maven/bin/mvn /usr/bin/mvn\n\n# build flex\nARG FLEX_VERSION=2.6.4\nRUN wget https://github.com/westes/flex/releases/download/v$FLEX_VERSION/flex-$FLEX_VERSION.tar.gz \\\n    -q -O /tmp/flex-$FLEX_VERSION.tar.gz \\\n    && cd /tmp/ \\\n    && tar -xf flex-$FLEX_VERSION.tar.gz \\\n    && cd flex-$FLEX_VERSION \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-shared=NO \\\n    && make \\\n    && make install \\\n    && rm /tmp/flex-$FLEX_VERSION.tar.gz \\\n    && rm -rf /tmp/flex-$FLEX_VERSION\n\n# install nodejs\nARG NODEJS_VERSION=14.16.0\nRUN wget https://nodejs.org/dist/v$NODEJS_VERSION/node-v$NODEJS_VERSION-linux-x64.tar.gz \\\n    -q -O /tmp/node-v$NODEJS_VERSION-linux-x64.tar.gz \\\n    && cd /tmp/ && tar -xf node-v$NODEJS_VERSION-linux-x64.tar.gz \\\n    && cp -r node-v$NODEJS_VERSION-linux-x64/* /usr/local/ \\\n    && rm /tmp/node-v$NODEJS_VERSION-linux-x64.tar.gz && rm -rf node-v$NODEJS_VERSION-linux-x64\n\n\nENV BASH_ENV=/opt/rh/devtoolset-10/enable  \\\n    ENV=/opt/rh/devtoolset-10/enable  \\\n    PROMPT_COMMAND=\". /opt/rh/devtoolset-10/enable\"\n\n# there is a repo which is included all of thirdparty\nENV REPOSITORY_URL=https://doris-thirdparty-repo.bj.bcebos.com/thirdparty\nENV DEFAULT_DIR=/var/local\nENV JAVA_HOME=\"/usr/lib/jvm/java-11\"\n\n# clone lastest source code, download and build third party\nCOPY doris ${DEFAULT_DIR}/doris\nRUN cd ${DEFAULT_DIR}/doris && /bin/bash thirdparty/build-thirdparty.sh \\\n    && rm -rf ${DEFAULT_DIR}/doris/thirdparty/src \\\n    && rm -rf ${DEFAULT_DIR}/doris-thirdparty.tar.gz \\\n    && rm -rf ${DEFAULT_DIR}/doris-thirdparty \\\n    && mkdir -p ${DEFAULT_DIR}/thirdparty \\\n    && mv ${DEFAULT_DIR}/doris/thirdparty/installed ${DEFAULT_DIR}/thirdparty/ \\\n    && rm -rf ${DEFAULT_DIR}/doris\n\nRUN alternatives --set java java-11-openjdk.x86_64 && alternatives --set javac java-11-openjdk.x86_64\n\n# build clang 11\nRUN wget -P ${DEFAULT_DIR}  https://github.com/llvm/llvm-project/releases/download/llvmorg-11.0.0/llvm-project-11.0.0.tar.xz \\\n    && tar Jxf ${DEFAULT_DIR}/llvm-project-11.0.0.tar.xz -C ${DEFAULT_DIR} \\\n    && echo \"source /opt/rh/devtoolset-10/enable\" > ${DEFAULT_DIR}/build_clang.sh \\\n    && echo \"cd ${DEFAULT_DIR}/llvm-project-11.0.0\" >> ${DEFAULT_DIR}/build_clang.sh \\\n    && echo \"mkdir build\" >> ${DEFAULT_DIR}/build_clang.sh \\\n    && echo \"cd build\" >> ${DEFAULT_DIR}/build_clang.sh \\\n    && echo \"cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_PROJECTS=\\\"clang;libcxx;libcxxabi\\\" -G \\\"Unix Makefiles\\\" ../llvm \" >> ${DEFAULT_DIR}/build_clang.sh \\\n    && echo \"make -j $(nproc)\" >> ${DEFAULT_DIR}/build_clang.sh \\\n    && echo \"make install\" >> ${DEFAULT_DIR}/build_clang.sh \\\n    && echo \"rm -rf ${DEFAULT_DIR}/llvm-project-11.0.0*\" >> ${DEFAULT_DIR}/build_clang.sh \\\n    && chmod +x ${DEFAULT_DIR}/build_clang.sh \\\n    && ${DEFAULT_DIR}/build_clang.sh && rm ${DEFAULT_DIR}/llvm-project-11.0.0.tar.xz\n\nFROM scratch\n\nCOPY --from=builder / /\nENV JAVA_HOME=\"/usr/lib/jvm/java-11\" \\\n    MAVEN_HOME=\"/usr/share/maven\" \\\n    BASH_ENV=\"/opt/rh/devtoolset-10/enable\" \\\n    ENV=\"/opt/rh/devtoolset-10/enable\"  \\\n    PROMPT_COMMAND=\". /opt/rh/devtoolset-10/enable\" \\\n    REPOSITORY_URL=\"https://doris-thirdparty-repo.bj.bcebos.com/thirdparty\" \\\n    DEFAULT_DIR=\"/var/local\" \\\n    PATH=\"/var/local/thirdparty/installed/bin:$PATH\" \\\n    DORIS_THIRDPARTY=\"/var/local/thirdparty\"\nWORKDIR /root\n\nCMD [\"/bin/bash\"]\n\n"
}