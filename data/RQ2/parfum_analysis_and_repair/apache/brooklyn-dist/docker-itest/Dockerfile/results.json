{
  "startTime": 1674247980395,
  "endTime": 1674247981342,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 22,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#  http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\nFROM maven:3.5.2-jdk-8\n\n# For Alpine:\n# FROM maven:3.3.9-jdk-8-alpine\n# RUN apk add --update --no-cache bash netcat-openbsd sudo wget openssh\n# RUN ssh-keygen -A\n# This is missing knife - adding it would grow the image size considerably\n# making it on par with the full debian image. Also some tests fail\n# because of differences in the accepted arguments of the busybox provided tools.\n\n# Install the non-headless JRE as some tests requires them\nRUN apt-get update && apt-get install --no-install-recommends -y openjdk-8-jre && rm -rf /var/lib/apt/lists/*;\n\n# Install necessary binaries to build brooklyn\nRUN apt-get update && \\\n    DEBIAN_FRONTEND=noninteractive apt-get install -yq --no-install-recommends \\\n    git-core \\\n    procps \\\n    golang-go \\\n    rpm \\\n    dpkg \\\n    libpng-dev \\\n    make \\\n    automake \\\n    autoconf \\\n    libtool \\\n    dpkg \\\n    pkg-config \\\n    nasm \\\n    gcc \\\n    net-tools \\\n    ssh \\\n    sudo \\\n    wget \\\n    chef && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Prepare container for IT tests\nRUN mkdir /etc/skel/.m2 && \\\n    echo \"<settings xmlns='http://maven.apache.org/SETTINGS/1.0.0'>\" > /etc/skel/.m2/settings.xml && \\\n    echo \"  <localRepository>/var/maven</localRepository>\" >> /etc/skel/.m2/settings.xml && \\\n    echo \"</settings>\" >> /etc/skel/.m2/settings.xml && \\\n    : The following are integration tests requirements && \\\n    echo \"127.0.0.1 localhost1 localhost2 localhost3 localhost4\" >> /etc/hosts && \\\n    mkdir /etc/skel/.brooklyn && \\\n    cd /etc/skel/.brooklyn && \\\n    wget -q https://geolite.maxmind.com/download/geoip/database/GeoLite2-City.mmdb.gz && \\\n    gunzip GeoLite2-City.mmdb.gz && \\\n    echo \"brooklyn.location.named.localhost-passphrase=localhost\" >> brooklyn.properties && \\\n    echo \"brooklyn.location.named.localhost-passphrase.privateKeyFile=~/.ssh/id_rsa_with_passphrase\" >> brooklyn.properties && \\\n    echo \"brooklyn.location.named.localhost-passphrase.privateKeyPassphrase=mypassphrase\" >> brooklyn.properties && \\\n    chmod 600 brooklyn.properties\n\n# Add the brooklyn user at runtime so that we can set its USER_ID same as the user that's calling \"docker run\"\n# We need them the same so that the mounted /build volume is accessible from inside the container.\nCOPY entrypoint.sh /usr/local/bin/entrypoint.sh\n\n# Make sure the /.config && /.npm (for UI module builds) is writable for all users\nRUN mkdir -p /.config && chmod -R 777 /.config\nRUN mkdir -p /.npm && chmod -R 777 /.npm\n\n# Make sure the /var/tmp (for RPM build) is writable for all users\nRUN mkdir -p /var/tmp/ && chmod -R 777 /var/tmp/\n\n# Make sure the /var/maven is writable for all users\nRUN mkdir -p /var/maven/.m2/ && chmod -R 777 /var/maven/\nENV MAVEN_CONFIG=/var/maven/.m2\n\nVOLUME /usr/build\nVOLUME /var/maven\n\nENTRYPOINT [\"/usr/local/bin/entrypoint.sh\"]\nCMD [\"mvn -B clean test -PIntegration\"]\n"
}