{
  "startTime": 1674249658040,
  "endTime": 1674249658771,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 36,
        "columnStart": 2,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Build an image that runs a script to load data into the quickstart warehouse.\n# The data load script is os-independent, so only build for a fixed OS.\nARG BASE_IMAGE=ubuntu:18.04\nFROM ${BASE_IMAGE}\n\n# Common label arguments.\nARG MAINTAINER\nARG URL\nARG VCS_REF\nARG VCS_TYPE\nARG VCS_URL\nARG VERSION\n\n# Install useful utilities. Set to non-interactive to avoid issues when installing tzdata.\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y \\\n  sudo netcat-openbsd less curl iproute2 vim iputils-ping \\\n  libsasl2-dev libsasl2-2 libsasl2-modules libsasl2-modules-gssapi-mit \\\n  tzdata krb5-user python-pip && \\\n  apt-get clean && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Install impala-shell from pip.\n# TODO: consider if it would be better to use the latest impala-shell from the build\n# environment.\nRUN pip install --no-cache-dir impala-shell\n\n# Use a non-privileged impala user to run the daemons in the container.\n# That user should own everything in the /opt/impala and /var/lib/impala subdirectories\nRUN groupadd -r impala -g 1000 && useradd --no-log-init -r -u 1000 -g 1000 impala && \\\n    mkdir -p /opt/impala && chown impala /opt/impala\nUSER impala\n\n# Copy the client entrypoint and dataload files.\nWORKDIR /opt/impala\nCOPY --chown=impala data-load-entrypoint.sh /data-load-entrypoint.sh\nCOPY --chown=impala *.sql /opt/impala/sql/\n\nUSER impala\n\n# Add the entrypoint.\nENTRYPOINT [\"/data-load-entrypoint.sh\"]\n\nLABEL name=\"Apache Impala Quickstart Client\" \\\n      description=\"Client tools for Impala quickstart, including impala-shell and data loading utilities.\" \\\n      # Common labels.\n      org.label-schema.maintainer=$MAINTAINER \\\n      org.label-schema.url=$URL \\\n      org.label-schema.vcs-ref=$VCS_REF \\\n      org.label-schema.vcs-type=$VCS_TYPE \\\n      org.label-schema.vcs-url=$VCS_URL \\\n      org.label-schema.version=$VERSION\n"
}