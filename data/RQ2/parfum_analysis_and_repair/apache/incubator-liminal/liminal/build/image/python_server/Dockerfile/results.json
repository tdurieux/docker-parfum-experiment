{
  "startTime": 1674248946302,
  "endTime": 1674248947732,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Use an official Python runtime as a parent image\nFROM {{python}}\n\n# Install aptitude build-essential\n#RUN apt-get install -y --reinstall build-essential\n\n# Set the working directory to /app\nWORKDIR /app\n\n# Order of operations is important here for docker's caching & incremental build performance.    !\n# Be careful when changing this code.                                                            !\n\n# Install any needed packages specified in python_server_requirements.txt and requirements.txt\nRUN pip install --no-cache-dir --upgrade pip\n\nCOPY ./python_server_requirements.txt /app/\nRUN pip install --no-cache-dir -r python_server_requirements.txt\n\nCOPY ./requirements.txt /app/\nRUN {{mount}} pip install -r requirements.txt\n\n# Copy the current directory contents into the container at /app\nRUN echo \"Copying source code..\"\nCOPY . /app/\n\nCMD python -u liminal_python_server.py\n"
}