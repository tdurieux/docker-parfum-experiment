{
  "startTime": 1674248489343,
  "endTime": 1674248490869,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 125,
        "lineEnd": 125,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 87,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 98,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 107,
        "lineEnd": 109,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 114,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 44,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 66,
        "columnStart": 22,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 87,
        "lineEnd": 91,
        "columnStart": 22,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 94,
        "lineEnd": 94,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 98,
        "lineEnd": 105,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 107,
        "lineEnd": 109,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 114,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 114,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\nFROM ubuntu:18.04\n\nENV DCAP_VERSION 1.11.100.2-bionic1\nENV VERSION 2.14.100.2-bionic1\nENV SGX_DOWNLOAD_URL_BASE \"https://download.01.org/intel-sgx/sgx-dcap/1.11/linux/distro/ubuntu18.04-server\"\nENV SGX_LINUX_X64_SDK sgx_linux_x64_sdk_2.14.100.2.bin\nENV SGX_LINUX_X64_SDK_URL \"$SGX_DOWNLOAD_URL_BASE/$SGX_LINUX_X64_SDK\"\n\nENV DEBIAN_FRONTEND=noninteractive\n\nENV RUST_TOOLCHAIN nightly-2020-10-25\n\n# install SGX dependencies\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    build-essential \\\n    ocaml \\\n    ocamlbuild \\\n    automake \\\n    autoconf \\\n    libtool \\\n    wget \\\n    python \\\n    python3 \\\n    libssl-dev \\\n    libcurl4-openssl-dev \\\n    libprotobuf-dev \\\n    curl \\\n    pkg-config && rm -rf /var/lib/apt/lists/*;\n\nRUN echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | \\\n    tee /etc/apt/sources.list.d/intel-sgx.list\nRUN curl -fsSL  https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add -\nRUN apt-get update && apt-get install --no-install-recommends -y -f \\\n    libsgx-dcap-ql=$DCAP_VERSION \\\n    libsgx-dcap-default-qpl=$DCAP_VERSION \\\n    libsgx-dcap-ql-dbgsym=$DCAP_VERSION \\\n    libsgx-dcap-default-qpl-dbgsym=$DCAP_VERSION \\\n    libsgx-dcap-quote-verify=$DCAP_VERSION \\\n    libsgx-dcap-quote-verify-dev=$DCAP_VERSION \\\n    libsgx-urts=$VERSION \\\n    libsgx-enclave-common=$VERSION \\\n    libsgx-enclave-common-dev=$VERSION \\\n    libsgx-enclave-common-dbgsym=$VERSION \\\n    libsgx-quote-ex=$VERSION \\\n    libsgx-quote-ex-dev=$VERSION \\\n    libsgx-dcap-ql-dev=$DCAP_VERSION \\\n    libsgx-dcap-default-qpl-dev=$DCAP_VERSION \\\n    libsgx-qe3-logic=$DCAP_VERSION \\\n    libsgx-pce-logic=$DCAP_VERSION \\\n    libsgx-uae-service=$VERSION && rm -rf /var/lib/apt/lists/*;\nRUN mkdir /var/run/aesmd && mkdir /etc/init\nRUN wget $SGX_LINUX_X64_SDK_URL               && \\\n    chmod u+x $SGX_LINUX_X64_SDK              && \\\n    echo -e 'no\\n/opt' | ./$SGX_LINUX_X64_SDK && \\\n    rm $SGX_LINUX_X64_SDK                     && \\\n    echo 'source /opt/sgxsdk/environment' >> ~/.bashrc\n\n# install Rust and its dependencies\n\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y   && \\\n    . $HOME/.cargo/env                                                        && \\\n    rustup default $RUST_TOOLCHAIN                                            && \\\n    rustup component add rust-src rls rust-analysis clippy rustfmt            && \\\n    rustup target add wasm32-unknown-unknown                                  && \\\n    cargo install wasm-gc                                                     && \\\n    echo 'source $HOME/.cargo/env' >> ~/.bashrc                               && \\\n    rm -rf /root/.cargo/registry && rm -rf /root/.cargo/git\n\n# install other dependencies for building\n\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    software-properties-common \\\n    cmake \\\n    pypy \\\n    pypy-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN add-apt-repository ppa:git-core/ppa && \\\n    apt-get update && apt-get install --no-install-recommends -q -y git && rm -rf /var/lib/apt/lists/*;\n\n# install dependencies for testing and coverage\n\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    lsof \\\n    procps \\\n    lcov \\\n    llvm \\\n    curl \\\n    iproute2 \\\n    python3-pip && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -q -y \\\n    libjpeg-dev \\\n    zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir pyopenssl==21.0.0 toml cryptography yapf requests Pillow\n\n# install TVM dependencies\nRUN apt-get install --no-install-recommends -q -y \\\n    llvm-10 \\\n    clang-10 \\\n    protobuf-compiler \\\n    libprotoc-dev \\\n    libtinfo-dev \\\n    zlib1g-dev \\\n    libedit-dev \\\n    libxml2-dev && rm -rf /var/lib/apt/lists/*;\n\n# TVM Python builder dependencies\nRUN pip3 install --no-cache-dir onnx==1.9.0 numpy decorator attrs spicy\n\n# Build TVM\nRUN git clone https://github.com/apache/tvm /tvm                && \\\n    cd /tvm                                                     && \\\n    git checkout 7b3a22e465dd6aca4729504a19beb4bc23312755       && \\\n    git submodule init                                          && \\\n    git submodule update                                        && \\\n    mkdir build                                                 && \\\n    cd build                                                    && \\\n    cp ../cmake/config.cmake ./                                 && \\\n    sed -i '/set(USE_LLVM OFF)/c\\set(USE_LLVM ON)' config.cmake && \\\n    cmake -DUSE_LLVM=ON ..                                      && \\\n    make -j$(nproc)\n\n# Install llvm-cov version 11 from llvm-11\nRUN wget https://apt.llvm.org/llvm.sh                           && \\\n    chmod +x llvm.sh                                            && \\\n    ./llvm.sh 11                                                && \\\n    update-alternatives --install /usr/bin/llvm-cov llvm-cov-11 /usr/bin/llvm-cov-11 11 && \\\n    rm ./llvm.sh\n\n# clean up apt caches\n\nRUN apt-get clean && \\\n    rm -fr /var/lib/apt/lists/* /tmp/* /var/tmp/*\n"
}