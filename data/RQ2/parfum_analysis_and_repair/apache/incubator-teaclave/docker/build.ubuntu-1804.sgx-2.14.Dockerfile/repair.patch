diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/incubator-teaclave/docker/build.ubuntu-1804.sgx-2.14.Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/incubator-teaclave/docker/build.ubuntu-1804.sgx-2.14.Dockerfile/repaired.Dockerfile
index 2bd36ee..be3f9e8 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/incubator-teaclave/docker/build.ubuntu-1804.sgx-2.14.Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/incubator-teaclave/docker/build.ubuntu-1804.sgx-2.14.Dockerfile/repaired.Dockerfile
@@ -27,7 +27,7 @@ ENV DEBIAN_FRONTEND=noninteractive
 ENV RUST_TOOLCHAIN nightly-2020-10-25
 
 # install SGX dependencies
-RUN apt-get update && apt-get install -q -y \
+RUN apt-get update && apt-get install --no-install-recommends -q -y \
     build-essential \
     ocaml \
     ocamlbuild \
@@ -41,12 +41,12 @@ RUN apt-get update && apt-get install -q -y \
     libcurl4-openssl-dev \
     libprotobuf-dev \
     curl \
-    pkg-config
+    pkg-config && rm -rf /var/lib/apt/lists/*;
 
 RUN echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | \
     tee /etc/apt/sources.list.d/intel-sgx.list
 RUN curl -fsSL  https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | apt-key add -
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     libsgx-aesm-launch-plugin=$VERSION \
     libsgx-enclave-common=$VERSION \
     libsgx-enclave-common-dev=$VERSION \
@@ -57,7 +57,7 @@ RUN apt-get update && apt-get install -y \
     libsgx-quote-ex=$VERSION \
     libsgx-quote-ex-dev=$VERSION \
     libsgx-uae-service=$VERSION \
-    libsgx-urts=$VERSION
+    libsgx-urts=$VERSION && rm -rf /var/lib/apt/lists/*;
 RUN mkdir /var/run/aesmd && mkdir /etc/init
 RUN wget $SGX_LINUX_X64_SDK_URL               && \
     chmod u+x $SGX_LINUX_X64_SDK              && \
@@ -78,33 +78,33 @@ RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y   &&
 
 # install other dependencies for building
 
-RUN apt-get update && apt-get install -q -y \
+RUN apt-get update && apt-get install --no-install-recommends -q -y \
     software-properties-common \
     cmake \
     pypy \
-    pypy-dev
+    pypy-dev && rm -rf /var/lib/apt/lists/*;
 
 RUN add-apt-repository ppa:git-core/ppa && \
-    apt-get update && apt-get install -q -y git
+    apt-get update && apt-get install --no-install-recommends -q -y git && rm -rf /var/lib/apt/lists/*;
 
 # install dependencies for testing and coverage
 
-RUN apt-get update && apt-get install -q -y \
+RUN apt-get update && apt-get install --no-install-recommends -q -y \
     lsof \
     procps \
     lcov \
     llvm \
     curl \
-    python3-pip
+    python3-pip && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get update && apt-get install -q -y \
+RUN apt-get update && apt-get install --no-install-recommends -q -y \
     libjpeg-dev \
-    zlib1g-dev
+    zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 
-RUN pip3 install pyopenssl==21.0.0 toml cryptography yapf requests Pillow
+RUN pip3 install --no-cache-dir pyopenssl==21.0.0 toml cryptography yapf requests Pillow
 
 # install TVM dependencies
-RUN apt-get install -q -y \
+RUN apt-get install --no-install-recommends -q -y \
     llvm-10 \
     clang-10 \
     protobuf-compiler \
@@ -112,10 +112,10 @@ RUN apt-get install -q -y \
     libtinfo-dev \
     zlib1g-dev \
     libedit-dev \
-    libxml2-dev
+    libxml2-dev && rm -rf /var/lib/apt/lists/*;
 
 # TVM Python builder dependencies
-RUN pip3 install onnx==1.9.0 numpy decorator attrs spicy
+RUN pip3 install --no-cache-dir onnx==1.9.0 numpy decorator attrs spicy
 
 # Build TVM
 RUN git clone https://github.com/apache/tvm /tvm                && \