{
  "startTime": 1674249974014,
  "endTime": 1674249974646,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 202
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n\n# Downloads, builds and installs apache proton and qpid dispatch on CentOS and starts the dispatch router\n# /main is the top level folder under which proton (/main/qpid-proton/) and dispatch (/main/qpid-dispatch) source code is downloaded from github\n# /usr/lib64 is the folder in which the proton artifacts are installed.\n# /usr/sbin is the folder in which dispatch executable is installed\n\n# Copy this docker file to your local folder. Build the docker image like this:\n# > sudo docker build -t <username>/dispatch --file=Dockerfile .\n\n# \"<username>/dispatch\" is a convention, you can call it whatever you want\n\n# To launch a container running the new image:\n# > sudo docker run -i -t <username>/dispatch\n\n# To launch a container running the new image with an interactive shell prompt:\n# > sudo docker run -i -t <username>/dispatch /bin/bash\n\n################# Begin code #######\n\n# Get the latest CentOS 7 version from dockerhub\nFROM library/centos:7\n\nMAINTAINER \"dev@qpid.apache.org\"\n\n# For centos, some packages are found in the epel repo, so first install access to it\nRUN yum -y install epel-release && rm -rf /var/cache/yum\n\n# now install the rest of the packages\nRUN yum -y install gcc gcc-c++ cmake libuuid-devel openssl-devel cyrus-sasl-devel cyrus-sasl-plain cyrus-sasl-gssapi cyrus-sasl-md5 swig python3-devel git make doxygen valgrind emacs libwebsockets-devel && yum clean all -y && rm -rf /var/cache/yum\n\n# Create a main directory and clone the qpid-proton repo from github\nRUN mkdir /main && cd /main && git clone https://github.com/apache/qpid-proton.git && cd /main/qpid-proton && mkdir /main/qpid-proton/build\n\nWORKDIR /main/qpid-proton/build\n\n# make and install proton\nRUN cmake .. -DSYSINSTALL_BINDINGS=ON -DCMAKE_INSTALL_PREFIX=/usr -DSYSINSTALL_PYTHON=ON -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_BUILD_TYPE=Debug && make install\n\n# Clone the qpid-dispatch git repo\nRUN cd /main && git clone https://github.com/apache/qpid-dispatch.git && mkdir /main/qpid-dispatch/build\n\nWORKDIR /main/qpid-dispatch/build\nRUN cmake .. -DCMAKE_INSTALL_PREFIX=/usr && make install\n\n# Uncomment the following line if you would like to run all the dispatch unit tests and system tests.\n# RUN ctest -VV\n\n# Start the dispatch router\nENTRYPOINT [\"qdrouterd\"]\n#CMD [\"/bin/bash\"]\n"
}