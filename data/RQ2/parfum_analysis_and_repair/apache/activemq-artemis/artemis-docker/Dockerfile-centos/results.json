{
  "startTime": 1674251512839,
  "endTime": 1674251513466,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# ActiveMQ Artemis\n\nFROM jboss/base-jdk:11\nLABEL maintainer=\"Apache ActiveMQ Team\"\n# Make sure pipes are considered to determine success, see: https://github.com/hadolint/hadolint/wiki/DL4006\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\nWORKDIR /opt\n\nENV ARTEMIS_USER artemis\nENV ARTEMIS_PASSWORD artemis\nENV ANONYMOUS_LOGIN false\nENV EXTRA_ARGS --http-host 0.0.0.0 --relax-jolokia\n\nUSER root\n\n# add user and group for artemis\nRUN groupadd -g 1001 -r artemis && useradd -r -u 1001 -g artemis artemis \\\n && yum install -y libaio && yum -y clean all && rm -rf /var/cache/yum\n\nUSER artemis\n\nADD . /opt/activemq-artemis\n\n# Web Server\nEXPOSE 8161 \\\n# JMX Exporter\n    9404 \\\n# Port for CORE,MQTT,AMQP,HORNETQ,STOMP,OPENWIRE\n    61616 \\\n# Port for HORNETQ,STOMP\n    5445 \\\n# Port for AMQP\n    5672 \\\n# Port for MQTT\n    1883 \\\n#Port for STOMP\n    61613\n\nUSER root\n\nRUN mkdir /var/lib/artemis-instance && chown -R artemis.artemis /var/lib/artemis-instance\n\nCOPY ./docker/docker-run.sh /\n\nUSER artemis\n\n# Expose some outstanding folders\nVOLUME [\"/var/lib/artemis-instance\"]\nWORKDIR /var/lib/artemis-instance\n\nENTRYPOINT [\"/docker-run.sh\"]\nCMD [\"run\"]"
}