diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/trafficserver-ingress-controller/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/trafficserver-ingress-controller/Dockerfile/repaired.Dockerfile
index d67e37c..849af83 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/trafficserver-ingress-controller/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/trafficserver-ingress-controller/Dockerfile/repaired.Dockerfile
@@ -1,4 +1,4 @@
-# 
+#
 # Licensed to the Apache Software Foundation (ASF) under one or more
 # contributor license agreements.  See the NOTICE file distributed with
 # this work for additional information regarding copyright ownership.
@@ -15,7 +15,7 @@
 # limitations under the License.
 #
 
-FROM alpine:3.14.6 as builder 
+FROM alpine:3.14.6 as builder
 
 RUN apk add --no-cache --virtual .tools \
   bzip2 curl git automake libtool autoconf make sed file perl openrc openssl
@@ -24,7 +24,7 @@ RUN apk add --no-cache --virtual .tools \
 RUN apk add --no-cache --virtual .ats-build-deps \
   build-base openssl-dev tcl-dev pcre-dev zlib-dev \
   libexecinfo-dev linux-headers libunwind-dev \
-  brotli-dev jansson-dev luajit-dev readline-dev geoip-dev 
+  brotli-dev jansson-dev luajit-dev readline-dev geoip-dev
 
 RUN apk add --no-cache --virtual .ats-extra-build-deps --repository https://dl-cdn.alpinelinux.org/alpine/edge/community hwloc-dev
 
@@ -33,10 +33,10 @@ RUN addgroup -Sg 1000 ats
 RUN adduser -S -D -H -u 1000 -h /tmp -s /sbin/nologin -G ats -g ats ats
 
 # download and build ATS
-RUN curl -L https://downloads.apache.org/trafficserver/trafficserver-9.1.2.tar.bz2 | bzip2 -dc | tar xf - \
+RUN curl -f -L https://downloads.apache.org/trafficserver/trafficserver-9.1.2.tar.bz2 | bzip2 -dc | tar xf - \
   && cd trafficserver-9.1.2/ \
   && autoreconf -if \
-  && ./configure --enable-debug=yes --prefix=/opt/ats --with-user=ats \
+  && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-debug=yes --prefix=/opt/ats --with-user=ats \
   && make \
   && make install
 
@@ -58,12 +58,12 @@ RUN wget https://github.com/lunarmodules/luasocket/archive/refs/tags/v3.0.0.tar.
   && mkdir -p /usr/include/lua \
   && ln -sf /usr/include/luajit-2.1 /usr/include/lua/5.1 \
   && make \
-  && make install-unix prefix=/opt/ats
+  && make install-unix prefix=/opt/ats && rm v3.0.0.tar.gz
 
 # redis.lua
 RUN wget https://github.com/nrk/redis-lua/archive/v2.0.4.tar.gz \
   && tar zxf v2.0.4.tar.gz \
-  && cp redis-lua-2.0.4/src/redis.lua /opt/ats/share/lua/5.1/redis.lua
+  && cp redis-lua-2.0.4/src/redis.lua /opt/ats/share/lua/5.1/redis.lua && rm v2.0.4.tar.gz
 
 # ingress-ats
 RUN apk add --no-cache --virtual .ingress-build-deps \
@@ -73,12 +73,12 @@ RUN apk add --no-cache --virtual .ingress-build-deps \
 COPY GO_VERSION /
 RUN go_version=$(cat /GO_VERSION) \
     && wget https://dl.google.com/go/go${go_version}.src.tar.gz \
-    && tar -C /opt/ats -xzf go${go_version}.src.tar.gz && cd /opt/ats/go/src/ && ./make.bash
+    && tar -C /opt/ats -xzf go${go_version}.src.tar.gz && cd /opt/ats/go/src/ && ./make.bash && rm go${go_version}.src.tar.gz
 ENV PATH=${PATH}:/opt/ats/go/bin
 ENV GOPATH="/opt/ats/go/bin"
 
 # ----------------------- Copy over Project Code to Go path ------------------------
-RUN mkdir -p /opt/ats/go/bin/src/github.com/apache/trafficserver-ingress-controller 
+RUN mkdir -p /opt/ats/go/bin/src/github.com/apache/trafficserver-ingress-controller
 
 COPY ["./main/", "$GOPATH/src/github.com/apache/trafficserver-ingress-controller/main"]
 COPY ["./proxy/", "$GOPATH/src/github.com/apache/trafficserver-ingress-controller/proxy"]
@@ -94,9 +94,9 @@ COPY ["./go.sum", "$GOPATH/src/github.com/apache/trafficserver-ingress-controlle
 # Building Project Main
 WORKDIR /opt/ats/go/bin/src/github.com/apache/trafficserver-ingress-controller
 ENV GO111MODULE=on
-RUN go build -o ingress_ats main/main.go 
+RUN go build -o ingress_ats main/main.go
 
-# redis conf 
+# redis conf
 COPY ["./config/redis.conf", "/opt/ats/etc/redis.conf"]
 
 # entry.sh + other scripts
@@ -120,7 +120,7 @@ RUN mkdir -p /opt/ats/var/log/ingress/
 
 FROM alpine:3.14.6
 
-# essential library  
+# essential library 
 RUN apk add --no-cache -U \
     bash \
     build-base \