{
  "startTime": 1674216911532,
  "endTime": 1674216912381,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 52
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# For cache, you may either use (RAM or disk) block devices or disk directories\n# To use RAM block devices, pass them as /dev/ram0 and /dev/ram1 via `docker run --device`\n# To use disk directories, simply don't pass devices, and the container will configure Traffic Server for directories\n\n# Block devices may be created on the native machine with, for example, `modprobe brd`.\n# The recommended minimum size for each block devices is 1G.\n# For example, `sudo modprobe brd rd_size=1048576 rd_nr=2`\n\nARG OS_VERSION=8 \\\n\tOS_DISTRO=rockylinux\n\nFROM ${OS_DISTRO}:${OS_VERSION}\nMAINTAINER dev@trafficcontrol.apache.org\nEXPOSE 80 443\n\nRUN yum install -y epel-release && \\\n\tyum install -y initscripts git jq gcc lua nmap-ncat && \\\n\tyum clean all && rm -rf /var/cache/yum\n\n# Note that if more than one t3c RPM matches this wildcard, this Dockerfile will\n# break because this will create a directory instead of an RPM file, which it\n# will then fail to install.\nADD ort_test/trafficcontrol-cache-config*.rpm /trafficcontrol-cache-config.rpm\nRUN yum install -y /trafficcontrol-cache-config.rpm && yum clean all && rm -rf /var/cache/yum\n\nRUN sed -i 's/HOME\\/bin/HOME\\/bin:\\/usr\\/local\\/go\\/bin:/g' /root/.bash_profile &&\\\n\techo \"GOPATH=/root/go; export GOPATH\" >> /root/.bash_profile &&\\\n\techo \"StrictHostKeyChecking no\" >> /etc/ssh/ssh_config &&\\\n\tmkdir /root/go\n\nADD ort_test/Ort-test.repo /etc/yum.repos.d\nADD ort_test/run.sh ort_test/systemctl.sh /\n\nENTRYPOINT /run.sh\n"
}