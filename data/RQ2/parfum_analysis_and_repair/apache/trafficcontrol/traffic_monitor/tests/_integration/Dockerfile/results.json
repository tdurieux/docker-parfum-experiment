{
  "startTime": 1674251714702,
  "endTime": 1674251715932,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 79
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# This is a very simple Dockerfile.\n# All it does is install and start the Traffic Monitor, given a Traffic Ops to point it to.\n# It doesn't do any of the complex things the Dockerfiles in infrastructure/docker or infrastructure/cdn-in-a-box do, like inserting itself into Traffic Ops.\n# It is designed for a very simple use case, where the complex orchestration of other Traffic Control components is done elsewhere (or manually).\n\nFROM rockylinux:8\nMAINTAINER dev@trafficcontrol.apache.org\n\nRUN dnf install -y initscripts epel-release jq git\nCOPY GO_VERSION .\nRUN go_version=$(cat /GO_VERSION) && \\\n\tcurl -f -Lo go.tar.gz https://dl.google.com/go/go${go_version}.linux-amd64.tar.gz && \\\n\ttar -C /usr/local -xzf go.tar.gz && \\\n\tln -s /usr/local/go/bin/go /usr/bin/go && \\\n\trm go.tar.gz GO_VERSION\n\nENV GOPATH=/go \\\n    CGO_ENABLED=0\n\nCOPY traffic_monitor/tests/_integration/ /tm/\n\nRUN mkdir -p ${GOPATH}/src/github.com/apache/trafficcontrol\nCOPY go.mod \\\n     go.sum \\\n     ${GOPATH}/src/github.com/apache/trafficcontrol/\n# config.go is included so that `go mod vendor` includes github.com/kelseyhightower/envconfig\n# since dependencies within _integration are not considered\nCOPY cache-config/testing/ort-tests/config/config.go ${GOPATH}/src/github.com/apache/trafficcontrol/cache-config/testing/ort-tests/config/config.go\nCOPY lib ${GOPATH}/src/github.com/apache/trafficcontrol/lib\nCOPY vendor ${GOPATH}/src/github.com/apache/trafficcontrol/vendor\nCOPY traffic_monitor/ ${GOPATH}/src/github.com/apache/trafficcontrol/traffic_monitor/\nCOPY traffic_ops/toclientlib/ ${GOPATH}/src/github.com/apache/trafficcontrol/traffic_ops/toclientlib/\nCOPY traffic_ops/v3-client/ ${GOPATH}/src/github.com/apache/trafficcontrol/traffic_ops/v3-client/\nCOPY traffic_ops/v4-client/ ${GOPATH}/src/github.com/apache/trafficcontrol/traffic_ops/v4-client/\n\nWORKDIR ${GOPATH}/src/github.com/apache/trafficcontrol/traffic_monitor/tests/_integration/\nRUN go mod vendor && \\\n    go test -c -o /traffic_monitor_integration_test\n\nWORKDIR /tm/\nCMD ./Dockerfile_run.sh\n"
}