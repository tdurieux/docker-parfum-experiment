{
  "startTime": 1674219763077,
  "endTime": 1674219763870,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 21,
        "columnEnd": 39
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n    # Change BASE_IMAGE to centos when RHEL_VERSION=7\nARG BASE_IMAGE=rockylinux \\\n    RHEL_VERSION=8\nFROM ${BASE_IMAGE}:${RHEL_VERSION} as tsb-build\nRUN yum clean all && yum -y install git && rm -rf /var/cache/yum\nCOPY GO_VERSION /\nRUN curl -f -L https://dl.google.com/go/go$(cat /GO_VERSION).linux-amd64.tar.gz | tar -C /usr/local -xz && ln -s /usr/local/go/bin/go /usr/bin/go\n# Fetch tested version of tsb:\n# <2020-12-01T20:37:43+00:00!alficles@gmail.com>: Upgraded to go-yaml v3 and added comments to patches.\nRUN mkdir -p /go/src/github.com/comcast/tsb && cd /go/src/github.com/comcast/tsb && git init && git remote add origin https://github.com/comcast/tsb && git fetch --depth=1 origin 851be3e137b20ba5d2d1eefd07cd303dc5f53865 && git reset --hard FETCH_HEAD\nRUN cd /go/src/github.com/comcast/tsb && CGOENABLED=0 go build -o /usr/bin/tsb\n\nFROM ${BASE_IMAGE}:${RHEL_VERSION}\nMAINTAINER dev@trafficcontrol.apache.org\n\nRUN yum -y install git sudo && rm -rf /var/cache/yum\n\n# The current configuration does not require docker-compose for tsb, so a dummy script is included instead of docker-compose.\n# If docker-compose is required, the docker socket will need to be mounted inside this container as well.\n#ADD\thttps://github.com/docker/compose/releases/download/1.26.2/docker-compose-Linux-x86_64 /usr/bin/docker-compose\nRUN\techo -e \"#!/usr/bin/env bash\\necho docker-compose is not supported in this container and the build command will not work.\\nexit 1\" > /usr/bin/docker-compose\n\nRUN\tchmod +x /usr/bin/docker-compose\nCOPY\t--from=tsb-build /usr/bin/tsb /usr/bin/tsb\nRUN\tgit config --global user.email \"dev@trafficcontrol.apache.org\"\nRUN\tgit config --global user.name \"Apache Traffic Control\"\nCMD\t[\"/usr/bin/tsb\", \"cd\", \"/opt/tsb-ats\", \"fetch\", \"prebuild\"]\n"
}