{
  "startTime": 1674214944896,
  "endTime": 1674214945697,
  "originalSmells": [
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n############################################################\n# Dockerfile to build Traffic Stats container images\n# Based on CentOS\n############################################################\n\n    # Change BASE_IMAGE to centos when RHEL_VERSION=7\nARG BASE_IMAGE=rockylinux \\\n    RHEL_VERSION=8\nFROM ${BASE_IMAGE}:${RHEL_VERSION} AS trafficstats-dependencies\nARG RHEL_VERSION=8\n\nRUN if [[ \"${RHEL_VERSION%%.*}\" -eq 7 ]]; then \\\n        yum -y install dnf || exit 1; rm -rf /var/cache/yum \\\n    fi\n\nRUN dnf install -y epel-release && \\\n    dnf install -y \\\n        jq \\\n        nmap-ncat \\\n        net-tools \\\n        # find is required by to-access.sh\n        findutils \\\n        gettext \\\n        bind-utils \\\n        openssl && \\\n    dnf clean all\n\nFROM trafficstats-dependencies AS trafficstats\n\n# Default values for RPM -- override with `docker build --build-arg RPM=...'\nARG TRAFFIC_TS_RPM=traffic_stats/traffic_stats.rpm\nADD $TRAFFIC_TS_RPM /\nRUN rpm -Uvh /$(basename $TRAFFIC_TS_RPM) && \\\n    rm /$(basename $TRAFFIC_TS_RPM)\n\nADD enroller/server_template.json \\\n    traffic_ops/to-access.sh \\\n    traffic_stats/run.sh \\\n    /\n\nCOPY dns/set-dns.sh \\\n     dns/insert-self-into-dns.sh \\\n     /usr/local/sbin/\n\nENTRYPOINT /run.sh\n\nFROM trafficstats-dependencies AS get-delve\n\nRUN dnf -y install golang && \\\n    go install github.com/go-delve/delve/cmd/dlv@latest\n\nFROM trafficstats AS trafficstats-debug\nCOPY --from=get-delve /root/go/bin /usr/bin\n\n# Makes the default target skip the trafficstats-debug stage\nFROM trafficstats\n"
}