{
  "startTime": 1674252540212,
  "endTime": 1674252541016,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 8,
        "columnEnd": 26
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n############################################################\n# Dockerfile to build optional CiaB Socks Proxy\n# Based on Rocky Linux 8\n############################################################\n    # Change BASE_IMAGE to centos when RHEL_VERSION=7\nARG BASE_IMAGE=rockylinux \\\n    RHEL_VERSION=8\nFROM ${BASE_IMAGE}:${RHEL_VERSION}\nARG RHEL_VERSION=8\n\nRUN if [[ \"${RHEL_VERSION%%.*}\" -eq 7 ]]; then \\\n        yum -y install dnf || exit 1; rm -rf /var/cache/yum \\\n    fi\n\nARG DANTES_SRC=https://www.inet.no/dante/files/dante-1.4.2.tar.gz\n\nRUN dnf install -y net-tools bind-utils iproute wget curl automake autoconf gcc make && \\\n    curl -f -Ls -o /tmp/dante.tar.gz $DANTES_SRC && \\\n    tar -C /usr/src -zxvpf /tmp/dante.tar.gz && \\\n    cd /usr/src/dante* && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr && \\\n    make -j 4 && \\\n    make install && \\\n    groupadd -g 8062 sockd && \\\n    useradd -m -u 8062 -g sockd sockd && \\\n    dnf remove -y automake autoconf gcc make && \\\n    dnf clean all && \\\n    rm -rf /tmp/* && rm /tmp/dante.tar.gz\n\nCOPY optional/socksproxy/sockd.conf /etc\nCOPY optional/socksproxy/run.sh /\n\nCOPY dns/set-dns.sh \\\n     dns/insert-self-into-dns.sh \\\n     /usr/local/sbin/\n\nEXPOSE 1080\n\nCMD [\"/run.sh\"]\n"
}