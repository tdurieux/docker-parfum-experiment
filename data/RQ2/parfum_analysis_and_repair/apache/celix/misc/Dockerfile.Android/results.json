{
  "startTime": 1674254710581,
  "endTime": 1674254711823,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 96,
        "lineEnd": 96,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 111,
        "lineEnd": 111,
        "columnStart": 1,
        "columnEnd": 88
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 1,
        "columnEnd": 86
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 1,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 122,
        "lineEnd": 122,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 1,
        "columnEnd": 103
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 93,
        "lineEnd": 93,
        "columnStart": 1,
        "columnEnd": 40
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 105,
        "lineEnd": 105,
        "columnStart": 19,
        "columnEnd": 124
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 117,
        "lineEnd": 117,
        "columnStart": 1,
        "columnEnd": 106
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 20,
        "columnEnd": 124
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 1,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 1,
        "columnEnd": 24
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 97,
        "lineEnd": 97,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 114,
        "lineEnd": 114,
        "columnStart": 1,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 1,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 7
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 22,
        "columnEnd": 67
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 63,
        "columnStart": 22,
        "columnEnd": 7
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n\n# Celix android builder\n#\n# Howto:\n#\n# Build docker image -> docker build -t celix-android-builder - < Dockerfile.Android\n# Run docker image -> docker run --name builder celix-android-builder\n# Extract filesystem -> docker export builder > fs.tar\n# Extract /build dir from tar -> tar xf fs.tar build/output/celix\n#\n#\n\nFROM ubuntu:14.04\nMAINTAINER Bjoern Petri <bjoern.petri@sundevil.de>\n\nENV ARCH armv7\nENV PLATFORM android-18\nENV ANDROID_STANDALONE_TOOLCHAIN  /build/toolchain-arm\nENV ANDROID_CMAKE_HOME /build/resources/android-cmake\nENV SYSROOT $ANDROID_STANDALONE_TOOLCHAIN/sysroot\nENV PATH $ANDROID_STANDALONE_TOOLCHAIN/bin:$ANDROID_STANDALONE_TOOLCHAIN/usr/local/bin:$PATH\nENV PATH $PATH:/build/resources/android-ndk-r10e\nENV CROSS_COMPILE arm-linux-androideabi\nENV CC arm-linux-androideabi-gcc\nENV CCX arm-linux-androideabi-g++\nENV AR arm-linux-androideabi-ar\nENV AS arm-linux-androideabi-as\nENV LD arm-linux-androideabi-ld\nENV RANLIB arm-linux-androideabi-ranlib\nENV NM arm-linux-androideabi-nm\nENV STRIP arm-linux-androideabi-strip\nENV CHOST arm-linux-androideabi\n\n# install needed tools\n\nRUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && add-apt-repository ppa:george-edison55/cmake-3.x && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    automake \\\n    build-essential \\\n    wget \\\n    p7zip-full \\\n    bash \\\n    curl \\\n    cmake \\\n    git \\\n    vim \\\n    zip \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n\nRUN mkdir -p build/output\n\nWORKDIR /build/resources\n\n\n# Extracting ndk/sdk\n# create standalone toolchain\nRUN curl -f -L -O http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin && \\\n\tchmod a+x android-ndk-r10e-linux-x86_64.bin && \\\n\t7z x android-ndk-r10e-linux-x86_64.bin  > /dev/null && \\\n\tbash android-ndk-r10e/build/tools/make-standalone-toolchain.sh --verbose --platform=$PLATFORM --install-dir=$ANDROID_STANDALONE_TOOLCHAIN --arch=arm --toolchain=arm-linux-androideabi-4.9 --system=linux-x86_64\n\n\n\n# uuid\nRUN curl -f -L -O http://downloads.sourceforge.net/libuuid/libuuid-1.0.3.tar.gz && \\\n\ttar -xvzf libuuid-1.0.3.tar.gz && \\\n\tcd libuuid-1.0.3 && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/uuid && \\\n\tmake && make install && rm libuuid-1.0.3.tar.gz\n\n\n# zlib\nRUN curl -f -L -O http://zlib.net/zlib-1.2.11.tar.gz && \\\n\ttar -xvzf zlib-*.tar.gz && \\\n\tcd zlib-* && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/build/output/zlib && make && make install && rm zlib-*.tar.gz\n\n# curl\nRUN curl -f -L -O http://curl.haxx.se/download/curl-7.38.0.tar.gz && \\\n\ttar -xvzf curl-7.38.0.tar.gz && \\\n\tcd curl-7.38.0 && \\\n\t./configure --host=arm-linux-androideabi --disable-shared --enable-static --disable-dependency-tracking --with-zlib=`pwd`/../../output/zlib --without-ca-bundle --without-ca-path --disable-ftp --disable-file --disable-ldap --disable-ldaps --disable-rtsp --disable-proxy --disable-dict --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-sspi --disable-manual --target=arm-linux-androideabi --build=x86_64-unknown-linux-gnu --prefix=/build/output/curl && \\\n\tmake && make install && rm curl-7.38.0.tar.gz\n\n# jansson\nRUN curl -f -L -O http://www.digip.org/jansson/releases/jansson-2.7.tar.bz2 && \\\n\ttar -xvjf jansson-2.7.tar.bz2 && \\\n\tcd jansson-2.7 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/jansson && \\\n\tmake && make install && rm jansson-2.7.tar.bz2\n\n\n# libmxl2\nRUN curl -f -L -O http://xmlsoft.org/sources/libxml2-2.7.2.tar.gz && \\\n\tcurl -f -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.guess && \\\n\tcurl -f -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.sub && \\\n\tcurl -f -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/libxml2.patch && \\\n\ttar -xvzf libxml2-2.7.2.tar.gz && cp config.guess config.sub libxml2-2.7.2 && \\\n\tpatch -p1 < libxml2.patch && \\\n\tcd libxml2-2.7.2 && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libxml2 && \\\n\tmake && make install && rm libxml2-2.7.2.tar.gz\n\n\n# libffi\nRUN curl -f -L -O ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz && \\\n\ttar -xvzf libffi-3.2.1.tar.gz && \\\n\tcd libffi-3.2.1 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libffi && \\\n   echo \"#define FFI_MMAP_EXEC_WRIT 1\" >> ./arm-unknown-linux-androideabi/fficonfig.h && \\\n   echo \"#define FFI_MMAP_EXEC_SELINUX 0\" >> ./arm-unknown-linux-androideabi/fficonfig.h && \\\n\tmake && make install && rm libffi-3.2.1.tar.gz\n\n\n# finally add celix src\n\nRUN git clone -b master --single-branch https://github.com/apache/celix.git celix\n\nCMD mkdir -p celix/build-android && cd celix/build-android && cmake -DANDROID=TRUE -DENABLE_TESTING=OFF -DBUILD_EXAMPLES=OFF -DBUILD_DEPENDENCY_MANAGER_CXX=OFF -DBUILD_REMOTE_SERVICE_ADMIN=ON -DBUILD_REMOTE_SHELL=ON -DBUILD_RSA_DISCOVERY_CONFIGURED=ON -DBUILD_RSA_DISCOVERY_ETCD=ON -DBUILD_RSA_EXAMPLES=ON -DBUILD_RSA_REMOTE_SERVICE_ADMIN_HTTP=ON -DBUILD_RSA_REMOTE_SERVICE_ADMIN_DFI=OFF -DBUILD_RSA_TOPOLOGY_MANAGER=ON -DFFI_LIBRARY=/build/output/libffi/lib/libffi.a -DFFI_INCLUDE_DIR=/build/output/libffi/lib/libffi-3.2.1/include -DJANSSON_LIBRARY=/build/output/jansson/lib/libjansson.a -DJANSSON_INCLUDE_DIR=/build/output/jansson/include -DCURL_LIBRARY=/build/output/curl/lib/libcurl.a -DCURL_INCLUDE_DIR=/build/output/curl/include -DLIBXML2_LIBRARIES=/build/output/libxml2/lib/libxml2.a -DLIBXML2_INCLUDE_DIR=/build/output/libxml2/include/libxml2 -DZLIB_LIBRARY=/build/output/zlib/lib/libz.a -DZLIB_INCLUDE_DIR=/build/output/zlib/include -DUUID_LIBRARY=/build/output/uuid/lib/libuuid.a -DUUID_INCLUDE_DIR=/build/output/uuid/include -DCMAKE_INSTALL_PREFIX:PATH=/build/output/celix .. && make && make install\n\n# done\n"
}