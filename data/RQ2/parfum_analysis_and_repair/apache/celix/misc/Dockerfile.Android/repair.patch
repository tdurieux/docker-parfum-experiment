diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/celix/misc/Dockerfile.Android b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/celix/misc/Dockerfile.Android/repaired.Dockerfile
index 8e27f09..95f1c3b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/celix/misc/Dockerfile.Android
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/celix/misc/Dockerfile.Android/repaired.Dockerfile
@@ -5,9 +5,9 @@
 # to you under the Apache License, Version 2.0 (the
 # "License"); you may not use this file except in compliance
 # with the License.  You may obtain a copy of the License at
-# 
+#
 #   http://www.apache.org/licenses/LICENSE-2.0
-# 
+#
 # Unless required by applicable law or agreed to in writing,
 # software distributed under the License is distributed on an
 # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
@@ -16,7 +16,7 @@
 # under the License.
 
 # Celix android builder
-# 
+#
 # Howto:
 #
 # Build docker image -> docker build -t celix-android-builder - < Dockerfile.Android
@@ -49,9 +49,9 @@ ENV CHOST arm-linux-androideabi
 
 # install needed tools
 
-RUN apt-get update && apt-get install -y software-properties-common && add-apt-repository ppa:george-edison55/cmake-3.x && apt-get clean
+RUN apt-get update && apt-get install --no-install-recommends -y software-properties-common && add-apt-repository ppa:george-edison55/cmake-3.x && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     automake \
     build-essential \
     wget \
@@ -62,7 +62,7 @@ RUN apt-get update && apt-get install -y \
     git \
     vim \
     zip \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 
 RUN mkdir -p build/output
@@ -72,7 +72,7 @@ WORKDIR /build/resources
 
 # Extracting ndk/sdk
 # create standalone toolchain
-RUN curl -L -O http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin && \
+RUN curl -f -L -O http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bin && \
 	chmod a+x android-ndk-r10e-linux-x86_64.bin && \
 	7z x android-ndk-r10e-linux-x86_64.bin  > /dev/null && \
 	bash android-ndk-r10e/build/tools/make-standalone-toolchain.sh --verbose --platform=$PLATFORM --install-dir=$ANDROID_STANDALONE_TOOLCHAIN --arch=arm --toolchain=arm-linux-androideabi-4.9 --system=linux-x86_64
@@ -80,53 +80,53 @@ RUN curl -L -O http://dl.google.com/android/ndk/android-ndk-r10e-linux-x86_64.bi
 
 
 # uuid
-RUN curl -L -O http://downloads.sourceforge.net/libuuid/libuuid-1.0.3.tar.gz && \
+RUN curl -f -L -O http://downloads.sourceforge.net/libuuid/libuuid-1.0.3.tar.gz && \
 	tar -xvzf libuuid-1.0.3.tar.gz && \
 	cd libuuid-1.0.3 && \
-	./configure --host=arm-linux-androideabi  --disable-shared --enable-static --prefix=/build/output/uuid && \
-	make && make install
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/uuid && \
+	make && make install && rm libuuid-1.0.3.tar.gz
 
 
 # zlib
-RUN curl -L -O http://zlib.net/zlib-1.2.11.tar.gz && \
+RUN curl -f -L -O http://zlib.net/zlib-1.2.11.tar.gz && \
 	tar -xvzf zlib-*.tar.gz && \
 	cd zlib-* && \
-	./configure --prefix=/build/output/zlib && make && make install
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/build/output/zlib && make && make install && rm zlib-*.tar.gz
 
 # curl
-RUN curl -L -O http://curl.haxx.se/download/curl-7.38.0.tar.gz && \
-	tar -xvzf curl-7.38.0.tar.gz && \ 
+RUN curl -f -L -O http://curl.haxx.se/download/curl-7.38.0.tar.gz && \
+	tar -xvzf curl-7.38.0.tar.gz && \
 	cd curl-7.38.0 && \
 	./configure --host=arm-linux-androideabi --disable-shared --enable-static --disable-dependency-tracking --with-zlib=`pwd`/../../output/zlib --without-ca-bundle --without-ca-path --disable-ftp --disable-file --disable-ldap --disable-ldaps --disable-rtsp --disable-proxy --disable-dict --disable-telnet --disable-tftp --disable-pop3 --disable-imap --disable-smtp --disable-gopher --disable-sspi --disable-manual --target=arm-linux-androideabi --build=x86_64-unknown-linux-gnu --prefix=/build/output/curl && \
-	make && make install
+	make && make install && rm curl-7.38.0.tar.gz
 
 # jansson
-RUN curl -L -O http://www.digip.org/jansson/releases/jansson-2.7.tar.bz2 && \
+RUN curl -f -L -O http://www.digip.org/jansson/releases/jansson-2.7.tar.bz2 && \
 	tar -xvjf jansson-2.7.tar.bz2 && \
-	cd jansson-2.7 && ./configure --host=arm-linux-androideabi  --disable-shared --enable-static --prefix=/build/output/jansson && \
-	make && make install
+	cd jansson-2.7 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/jansson && \
+	make && make install && rm jansson-2.7.tar.bz2
 
 
 # libmxl2
-RUN curl -L -O http://xmlsoft.org/sources/libxml2-2.7.2.tar.gz && \
-	curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.guess && \
-	curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.sub && \
-	curl -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/libxml2.patch && \ 
+RUN curl -f -L -O http://xmlsoft.org/sources/libxml2-2.7.2.tar.gz && \
+	curl -f -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.guess && \
+	curl -f -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/config.sub && \
+	curl -f -L -O https://raw.githubusercontent.com/bpetri/libxml2_android/master/libxml2.patch && \
 	tar -xvzf libxml2-2.7.2.tar.gz && cp config.guess config.sub libxml2-2.7.2 && \
 	patch -p1 < libxml2.patch && \
 	cd libxml2-2.7.2 && \
-	./configure --host=arm-linux-androideabi  --disable-shared --enable-static --prefix=/build/output/libxml2 && \
-	make && make install
+	./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libxml2 && \
+	make && make install && rm libxml2-2.7.2.tar.gz
 
 
 # libffi
-RUN curl -L -O ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz && \
-	tar -xvzf libffi-3.2.1.tar.gz  && \ 
-	cd libffi-3.2.1 && ./configure --host=arm-linux-androideabi  --disable-shared --enable-static --prefix=/build/output/libffi && \
-  	echo "#define FFI_MMAP_EXEC_WRIT 1" >> ./arm-unknown-linux-androideabi/fficonfig.h && \
-  	echo "#define FFI_MMAP_EXEC_SELINUX 0" >> ./arm-unknown-linux-androideabi/fficonfig.h && \
-	make && make install
-	
+RUN curl -f -L -O ftp://sourceware.org/pub/libffi/libffi-3.2.1.tar.gz && \
+	tar -xvzf libffi-3.2.1.tar.gz && \
+	cd libffi-3.2.1 && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --host=arm-linux-androideabi --disable-shared --enable-static --prefix=/build/output/libffi && \
+   echo "#define FFI_MMAP_EXEC_WRIT 1" >> ./arm-unknown-linux-androideabi/fficonfig.h && \
+   echo "#define FFI_MMAP_EXEC_SELINUX 0" >> ./arm-unknown-linux-androideabi/fficonfig.h && \
+	make && make install && rm libffi-3.2.1.tar.gz
+
 
 # finally add celix src