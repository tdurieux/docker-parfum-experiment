{
  "startTime": 1674256019701,
  "endTime": 1674256020996,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 2,
        "columnEnd": 63
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###############################################################################\n#  Licensed to the Apache Software Foundation (ASF) under one\n#  or more contributor license agreements.  See the NOTICE file\n#  distributed with this work for additional information\n#  regarding copyright ownership.  The ASF licenses this file\n#  to you under the Apache License, Version 2.0 (the\n#  \"License\"); you may not use this file except in compliance\n#  with the License.  You may obtain a copy of the License at\n#\n#      http://www.apache.org/licenses/LICENSE-2.0\n#\n#  Unless required by applicable law or agreed to in writing, software\n#  distributed under the License is distributed on an \"AS IS\" BASIS,\n#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n#  See the License for the specific language governing permissions and\n# limitations under the License.\n###############################################################################\n\nFROM openjdk:11-jre\n\n# Install dependencies\nRUN set -ex; \\\n  apt-get update; \\\n  apt-get -y --no-install-recommends install libsnappy1v5 gettext-base libjemalloc-dev; \\\n  rm -rf /var/lib/apt/lists/*\n\n# Grab gosu for easy step-down from root\nENV GOSU_VERSION 1.11\nRUN set -ex; \\\n  wget -nv -O /usr/local/bin/gosu \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture)\"; \\\n  wget -nv -O /usr/local/bin/gosu.asc \"https://github.com/tianon/gosu/releases/download/$GOSU_VERSION/gosu-$(dpkg --print-architecture).asc\"; \\\n  export GNUPGHOME=\"$(mktemp -d)\"; \\\n  for server in ha.pool.sks-keyservers.net $(shuf -e \\\n                          hkp://p80.pool.sks-keyservers.net:80 \\\n                          keyserver.ubuntu.com \\\n                          hkp://keyserver.ubuntu.com:80 \\\n                          pgp.mit.edu) ; do \\\n      gpg --batch --keyserver \"$server\" --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 && break || : ; \\\n  done && \\\n  gpg --batch --verify /usr/local/bin/gosu.asc /usr/local/bin/gosu; \\\n  gpgconf --kill all; \\\n  rm -rf \"$GNUPGHOME\" /usr/local/bin/gosu.asc; \\\n  chmod +x /usr/local/bin/gosu; \\\n  gosu nobody true\n\n# Configure Flink version\nENV FLINK_TGZ_URL=https://www.apache.org/dyn/closer.cgi?action=download&filename=flink/flink-1.15.1/flink-1.15.1-bin-scala_2.12.tgz \\\n    FLINK_ASC_URL=https://www.apache.org/dist/flink/flink-1.15.1/flink-1.15.1-bin-scala_2.12.tgz.asc \\\n    GPG_KEY=7D660377995CA7A5AFEBA79A3EE012FEE982F098 \\\n    CHECK_GPG=true\n\n# Prepare environment\nENV FLINK_HOME=/opt/flink\nENV PATH=$FLINK_HOME/bin:$PATH\nRUN groupadd --system --gid=9999 flink && \\\n    useradd --system --home-dir $FLINK_HOME --uid=9999 --gid=flink flink\nWORKDIR $FLINK_HOME\n\n# Install Flink\nRUN set -ex; \\\n  wget -nv -O flink.tgz \"$FLINK_TGZ_URL\"; \\\n  \\\n  if [ \"$CHECK_GPG\" = \"true\" ]; then \\\n    wget -nv -O flink.tgz.asc \"$FLINK_ASC_URL\"; \\\n    export GNUPGHOME=\"$(mktemp -d)\"; \\\n    for server in ha.pool.sks-keyservers.net $(shuf -e \\\n                            hkp://p80.pool.sks-keyservers.net:80 \\\n                            keyserver.ubuntu.com \\\n                            hkp://keyserver.ubuntu.com:80 \\\n                            pgp.mit.edu) ; do \\\n        gpg --batch --keyserver \"$server\" --recv-keys \"$GPG_KEY\" && break || : ; \\\n    done && \\\n    gpg --batch --verify flink.tgz.asc flink.tgz; \\\n    gpgconf --kill all; \\\n    rm -rf \"$GNUPGHOME\" flink.tgz.asc; \\\n  fi; \\\n  \\\n  tar -xf flink.tgz --strip-components=1; \\\n  rm flink.tgz; \\\n  \\\n  chown -R flink:flink .; \\\n\n  # Replace default REST/RPC endpoint bind address to use the container's network interface \\\n  sed -i 's/rest.address: localhost/rest.address: 0.0.0.0/g' $FLINK_HOME/conf/flink-conf.yaml; \\\n  sed -i 's/rest.bind-address: localhost/rest.bind-address: 0.0.0.0/g' $FLINK_HOME/conf/flink-conf.yaml; \\\n  sed -i 's/jobmanager.bind-host: localhost/jobmanager.bind-host: 0.0.0.0/g' $FLINK_HOME/conf/flink-conf.yaml; \\\n  sed -i 's/taskmanager.bind-host: localhost/taskmanager.bind-host: 0.0.0.0/g' $FLINK_HOME/conf/flink-conf.yaml; \\\n  sed -i '/taskmanager.host: localhost/d' $FLINK_HOME/conf/flink-conf.yaml;\n\n# Configure container\nCOPY docker-entrypoint.sh /\nENTRYPOINT [\"/docker-entrypoint.sh\"]\nEXPOSE 6123 8081\nCMD [\"help\"]\n"
}