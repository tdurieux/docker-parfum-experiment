{
  "startTime": 1674252889984,
  "endTime": 1674252890996,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 155
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# *****************************************************************************\n#\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n# ******************************************************************************\n\nFROM ubuntu:20.04\nARG OS\nARG SRC_PATH\n\n# Install any .deb dependecies\nRUN apt-get update && \\\n    apt-get -y upgrade && \\\n    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install python3-pip python3-dev python3-virtualenv groff vim less git wget nano libssl-dev libffi-dev libffi7 && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n# Install any python dependencies\nRUN python3 -m pip install -UI qtconsole==5.1.1 pip==21.1.2 && \\\n    python3 -m pip install backoff patchwork fabric fabvenv argparse requests ujson jupyter pycryptodome azure==2.0.0 azure-mgmt-authorization pyyaml\n\n# Configuring ssh for user\nRUN mkdir -p /root/.ssh; echo \"Host *\" > /root/.ssh/config; \\\n    echo \"StrictHostKeyChecking no\" >>  /root/.ssh/config; \\\n    echo \"UserKnownHostsFile=/dev/null\" >> /root/.ssh/config; \\\n    echo \"GlobalKnownHostsFile=/dev/null\" >> /root/.ssh/config; \\\n    echo \"ConnectTimeout=30\" >> /root/.ssh/config\n\n# Configuring log directories\nRUN mkdir -p /response; chmod a+rwx /response && \\\n    mkdir -p /logs/ssn; chmod a+rwx /logs/ssn && \\\n    mkdir -p /logs/project; chmod a+rwx /logs/project && \\\n    mkdir -p /logs/edge; chmod a+rwx /logs/edge && \\\n    mkdir -p /logs/status; chmod a+rwx /logs/status && \\\n    mkdir -p /logs/notebook; chmod a+rwx /logs/notebook && \\\n    mkdir -p /logs/dataengine; chmod a+rwx /logs/dataengine && \\\n    mkdir -p /logs/dataengine-service; chmod a+rwx /logs/dataengine-service\n\n# Copying all base scripts to docker\nENV PROVISION_CONFIG_DIR /root/conf/\nENV KEYFILE_DIR /root/keys/\n\n# Copying all base scripts to docker\nRUN mkdir -p /root/conf && \\\n    mkdir -p /root/scripts && \\\n    mkdir -p /root/templates && \\\n    mkdir -p /root/files && \\\n    mkdir -p /usr/lib/python3.8/datalab && \\\n    mkdir -p /root/keys/.ssh\n\nCOPY ${SRC_PATH}base/ /root\nCOPY ${SRC_PATH}general/conf/* /root/conf/\nCOPY ${SRC_PATH}general/api/*.py /bin/\nCOPY ${SRC_PATH}general/scripts/azure/common_* /root/scripts/\nCOPY ${SRC_PATH}general/lib/azure/* /usr/lib/python3.8/datalab/\nCOPY ${SRC_PATH}general/lib/os/${OS}/common_lib.py /usr/lib/python3.8/datalab/common_lib.py\nCOPY ${SRC_PATH}general/lib/os/fab.py /usr/lib/python3.8/datalab/fab.py\nCOPY ${SRC_PATH}general/lib/os/logger.py /usr/lib/python3.8/datalab/logger.py\nCOPY ${SRC_PATH}general/files/os/ivysettings.xml /root/templates/\nCOPY ${SRC_PATH}general/files/os/local_endpoint.json /root/files/\nCOPY ${SRC_PATH}project/templates/locations/ /root/locations/\n\nRUN chmod a+x /root/*.py && \\\n    chmod a+x /root/scripts/* && \\\n    chmod a+x /bin/*.py\n\nENTRYPOINT [\"/root/entrypoint.py\"]\n"
}