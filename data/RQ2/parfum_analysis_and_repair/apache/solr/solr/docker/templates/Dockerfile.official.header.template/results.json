{
  "startTime": 1674252793233,
  "endTime": 1674252794302,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 2,
        "columnEnd": 38
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#-#\n#-# This template is used as the header of \"official\" Apache Solr Dockerfiles.\n#-#\n#-# #######################################################################\n#-#\n\nFROM _REPLACE_BASE_IMAGE_\n\n# TODO: remove things that exist solely for downstream specialization since Dockerfile.local now exists for that\n\nARG SOLR_VERSION=\"_REPLACE_SOLR_VERSION_\"\nARG SOLR_SHA512=\"_REPLACE_SOLR_TGZ_SHA_\"\nARG SOLR_KEYS=\"_REPLACE_RELEASE_MANAGER_GPG_FINGERPRINT_\"\n\n# If specified, this will override SOLR_DOWNLOAD_SERVER and all ASF mirrors. Typically used downstream for custom builds\nARG SOLR_DOWNLOAD_URL\n# TODO: That comment isn't strictly true, if SOLR_DOWNLOAD_URL fails, other mirrors will be attempted\n# TODO: see patch in SOLR-15250 for some example ideas on fixing this to be more strict\n\n# Override the default solr download location with a prefered mirror, e.g.:\n#   docker build -t mine --build-arg SOLR_DOWNLOAD_SERVER=https://downloads.apache.org/solr/solr .\nARG SOLR_DOWNLOAD_SERVER\n\n# These should never be overridden except for the purposes of testing the Dockerfile before release\nARG SOLR_CLOSER_URL=\"http://www.apache.org/dyn/closer.lua?action=download&filename=/solr/solr/$SOLR_VERSION/solr-$SOLR_VERSION.tgz\"\nARG SOLR_DIST_URL=\"https://www.apache.org/dist/solr/solr/$SOLR_VERSION/solr-$SOLR_VERSION.tgz\"\nARG SOLR_ARCHIVE_URL=\"https://archive.apache.org/dist/solr/solr/$SOLR_VERSION/solr-$SOLR_VERSION.tgz\"\n\nRUN set -ex; \\\n  apt-get update; \\\n  apt-get -y --no-install-recommends install wget gpg dirmngr; \\\n  rm -rf /var/lib/apt/lists/*; \\\n  export GNUPGHOME=\"/tmp/gnupg_home\"; \\\n  mkdir -p \"$GNUPGHOME\"; \\\n  chmod 700 \"$GNUPGHOME\"; \\\n  echo \"disable-ipv6\" >> \"$GNUPGHOME/dirmngr.conf\"; \\\n  if [ -n \"$SOLR_KEYS\" ]; then \\\n    # Install all Solr GPG Keys to start\n    wget -nv \"https://downloads.apache.org/solr/KEYS\" -O- | \\\n      gpg --batch --import --key-origin 'url,https://downloads.apache.org/solr/KEYS'; \\\n    # Save just the release key\n    release_keys=\"$(gpg --batch --export -a ${SOLR_KEYS})\"; \\\n    rm -rf \"$GNUPGHOME\"/*; \\\n    echo \"${release_keys}\" | gpg --batch --import; \\\n  fi; \\\n  MAX_REDIRECTS=3; \\\n  if [ -n \"$SOLR_DOWNLOAD_URL\" ]; then \\\n    # If a custom URL is defined, we download from non-ASF mirror URL and allow more redirects and skip GPG step\n    # This takes effect only if the SOLR_DOWNLOAD_URL build-arg is specified, typically in downstream Dockerfiles\n    MAX_REDIRECTS=4; \\\n    SKIP_GPG_CHECK=true; \\\n  elif [ -n \"$SOLR_DOWNLOAD_SERVER\" ]; then \\\n    SOLR_DOWNLOAD_URL=\"$SOLR_DOWNLOAD_SERVER/$SOLR_VERSION/solr-$SOLR_VERSION.tgz\"; \\\n  fi; \\\n  for url in $SOLR_DOWNLOAD_URL $SOLR_CLOSER_URL $SOLR_DIST_URL $SOLR_ARCHIVE_URL; do \\\n    if [ -f \"/opt/solr-$SOLR_VERSION.tgz\" ]; then break; fi; \\\n    echo \"downloading $url\"; \\\n    if wget -t 10 --max-redirect $MAX_REDIRECTS --retry-connrefused -nv \"$url\" -O \"/opt/solr-$SOLR_VERSION.tgz\"; then break; else rm -f \"/opt/solr-$SOLR_VERSION.tgz\"; fi; \\\n  done; \\\n  if [ ! -f \"/opt/solr-$SOLR_VERSION.tgz\" ]; then echo \"failed all download attempts for solr-$SOLR_VERSION.tgz\"; exit 1; fi; \\\n  if [ -z \"$SKIP_GPG_CHECK\" ]; then \\\n    echo \"downloading $SOLR_ARCHIVE_URL.asc\"; \\\n    wget -nv \"$SOLR_ARCHIVE_URL.asc\" -O \"/opt/solr-$SOLR_VERSION.tgz.asc\"; \\\n    echo \"$SOLR_SHA512 */opt/solr-$SOLR_VERSION.tgz\" | sha512sum -c -; \\\n    (>&2 ls -l \"/opt/solr-$SOLR_VERSION.tgz\" \"/opt/solr-$SOLR_VERSION.tgz.asc\"); \\\n    gpg --batch --verify \"/opt/solr-$SOLR_VERSION.tgz.asc\" \"/opt/solr-$SOLR_VERSION.tgz\"; \\\n  else \\\n    echo \"Skipping GPG validation due to non-Apache build\"; \\\n  fi; \\\n  { command -v gpgconf; gpgconf --kill all || :; }; \\\n  rm -r \"$GNUPGHOME\"; \\\n  tar -C /opt --extract --preserve-permissions --file \"/opt/solr-$SOLR_VERSION.tgz\"; \\\n  rm \"/opt/solr-$SOLR_VERSION.tgz\"*;\n\n"
}