{
  "startTime": 1674219430060,
  "endTime": 1674219431000,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 19,
        "columnStart": 22,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM ubuntu:18.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y git wget zip python3 python3-pip \\\n    python3-distutils openjdk-8-jdk libgomp1 apt-transport-https ca-certificates curl \\\n    gnupg-agent software-properties-common && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -\nRUN add-apt-repository \\\n   \"deb [arch=amd64] https://download.docker.com/linux/ubuntu \\\n   $(lsb_release -cs) \\\n   stable\"\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nRUN ln -s /usr/bin/python3 /usr/bin/python\n\n# Install MXNet\nRUN pip3 install --no-cache-dir \"mxnet==1.5.1\"\n\n# Install hadoop 3.1.0+ supported YARN service\nENV HADOOP_VERSION=\"3.1.2\"\nRUN wget https://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz\n# If you are in mainland China, you can use the following command.\n# RUN wget http://mirrors.shu.edu.cn/apache/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz\n\nRUN tar -xvf hadoop-${HADOOP_VERSION}.tar.gz -C /opt/ && rm hadoop-${HADOOP_VERSION}.tar.gz\nRUN rm hadoop-${HADOOP_VERSION}.tar.gz\n\n# Copy the $HADOOP_CONF_DIR folder as \"hadoop\" folder in the same dir as dockerfile .\n# ├── Dockerfile.cifar10_mx_1.5.1\n# └── hadoop\n#     ├── capacity-scheduler.xml\n#     ├── configuration.xsl\n#     ...\nCOPY hadoop /opt/hadoop-$HADOOP_VERSION/etc/hadoop\n\n# Config Hadoop env\nENV HADOOP_HOME=/opt/hadoop-$HADOOP_VERSION/\nENV HADOOP_YARN_HOME=/opt/hadoop-$HADOOP_VERSION/\nENV HADOOP_HDFS_HOME=/opt/hadoop-$HADOOP_VERSION/\nENV HADOOP_CONF_DIR=/opt/hadoop-$HADOOP_VERSION/etc/hadoop\nENV HADOOP_COMMON_HOME=/opt/hadoop-$HADOOP_VERSION\nENV HADOOP_MAPRED_HOME=/opt/hadoop-$HADOOP_VERSION\n\n# Create a user, make sure the user groups are the same as your host\n# and the container user's UID is same as your host's.\nRUN groupadd -g 5000 hadoop\nRUN useradd -u 1000 -g hadoop pi\n"
}