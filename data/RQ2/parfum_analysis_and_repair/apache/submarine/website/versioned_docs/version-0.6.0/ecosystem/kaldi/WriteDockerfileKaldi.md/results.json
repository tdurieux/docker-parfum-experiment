{
  "startTime": 1674255220890,
  "endTime": 1674255221561,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 22,
        "columnEnd": 59
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 22,
        "columnEnd": 59
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "<!--\n   Licensed to the Apache Software Foundation (ASF) under one or more\n   contributor license agreements.  See the NOTICE file distributed with\n   this work for additional information regarding copyright ownership.\n   The ASF licenses this file to You under the Apache License, Version 2.0\n   (the \"License\"); you may not use this file except in compliance with\n   the License.  You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n-->\n\n## Creating Docker Images for Running Kaldi on YARN\n\n### How to create docker images to run Kaldi on YARN\n\nDockerfile to run Kaldi on YARN need two part:\n\n**Base libraries which Kaldi depends on**\n\n1) OS base image, for example ```nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04```\n\n2) Kaldi depended libraries and packages. For example ```python```, ```g++```, ```make```. For GPU support, need ```cuda```, ```cudnn```, etc.\n\n3) Kaldi compile.\n\n**Libraries to access HDFS**\n\n1) JDK\n\n2) Hadoop\n\nHere's an example of a base image (w/o GPU support) to install Kaldi:\n```shell\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\n\nRUN apt-get clean && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        sudo \\\n        openjdk-8-jdk \\\n        iputils-ping \\\n        g++ \\\n        make \\\n        automake \\\n        autoconf \\\n        bzip2 \\\n        unzip \\\n        wget \\\n        sox \\\n        libtool \\\n        git \\\n        subversion \\\n        python2.7 \\\n        python3 \\\n        zlib1g-dev \\\n        ca-certificates \\\n        patch \\\n        ffmpeg \\\n        vim && \\\n        rm -rf /var/lib/apt/lists/* && \\\n        ln -s /usr/bin/python2.7 /usr/bin/python\n\nRUN git clone --depth 1 https://github.com/kaldi-asr/kaldi.git /opt/kaldi && \\\n    cd /opt/kaldi && \\\n    cd /opt/kaldi/tools && \\\n    ./extras/install_mkl.sh && \\\n    make -j $(nproc) && \\\n    cd /opt/kaldi/src && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --shared --use-cuda && \\\n    make depend -j $(nproc) && \\\n    make -j $(nproc)\n```\n\nOn top of above image, add files, install packages to access HDFS\n```shell\nRUN apt-get update && apt-get install --no-install-recommends -y openjdk-8-jdk wget && rm -rf /var/lib/apt/lists/*;\n# Install hadoop\nENV HADOOP_VERSION=\"3.2.1\"\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nRUN wget https://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz && \\\n    tar zxf hadoop-${HADOOP_VERSION}.tar.gz && \\\n    ln -s hadoop-${HADOOP_VERSION} hadoop-current && \\\n    rm hadoop-${HADOOP_VERSION}.tar.gz\n```\n\nBuild and push to your own docker registry: Use ```docker build ... ``` and ```docker push ...``` to finish this step.\n\n### Use examples to build your own Kaldi docker images\n\nWe provided following examples for you to build kaldi docker images.\n\nFor latest Kaldi\n\n- *base/ubuntu-18.04/Dockerfile.gpu.kaldi_latest: Latest Kaldi that supports GPU, which is prebuilt to CUDA10, with models.\n\n### Build Docker images\n\n#### Manually build Docker image:\n\nUnder `docker/` directory,The CLUSTER_NAME can be modified in build-all.sh to have installation permissions, run `build-all.sh` to build Docker images. It will build following images:\n\n- `kaldi-latest-gpu-base:0.0.1` for base Docker image which includes Hadoop, Kaldi, GPU base libraries, which includes thchs30 model.\n\n#### Use prebuilt images\n\n(No liability)\nYou can also use prebuilt images for convenience in the docker hub:\n- hadoopsubmarine/kaldi-latest-gpu-base:0.0.1\n"
}