{
  "startTime": 1674217320759,
  "endTime": 1674217322298,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM nvidia/cuda:10.0-cudnn7-devel-ubuntu18.04\n\nRUN apt-get clean && \\\n    apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        sudo \\\n        openjdk-8-jdk \\\n        iputils-ping \\\n        g++ \\\n        make \\\n        automake \\\n        autoconf \\\n        bzip2 \\\n        unzip \\\n        wget \\\n        sox \\\n        libtool \\\n        git \\\n        subversion \\\n        python2.7 \\\n        python3 \\\n        zlib1g-dev \\\n        ca-certificates \\\n        patch \\\n        ffmpeg \\\n        vim && \\\n        rm -rf /var/lib/apt/lists/* && \\\n        ln -s /usr/bin/python2.7 /usr/bin/python\n\nRUN git clone --depth 1 https://github.com/kaldi-asr/kaldi.git /opt/kaldi && \\\n    cd /opt/kaldi && \\\n    cd /opt/kaldi/tools && \\\n    ./extras/install_mkl.sh && \\\n    make -j $(nproc) && \\\n    cd /opt/kaldi/src && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --shared --use-cuda && \\\n    make depend -j $(nproc) && \\\n    make -j $(nproc)\n\nWORKDIR /\n# Install Hadoop\nENV HADOOP_VERSION=\"3.2.1\"\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nARG CLUSTER_NAME=submarine\nRUN wget https://archive.apache.org/dist/hadoop/common/hadoop-${HADOOP_VERSION}/hadoop-${HADOOP_VERSION}.tar.gz && \\\n    tar zxf hadoop-${HADOOP_VERSION}.tar.gz && \\\n    ln -s hadoop-${HADOOP_VERSION} hadoop-current && \\\n    rm hadoop-${HADOOP_VERSION}.tar.gz\n\nRUN echo \"Install python related packages\" && \\\n    pip --no-cache-dir install Pillow h5py ipykernel jupyter matplotlib numpy pandas scipy sklearn && \\\n    python -m ipykernel.kernelspec\n\nENV CLUSTER_NAME=\"admin\" # Your cluster user sets root privileges\nRUN echo \"## Allow root to run any commands anywhere\" >> /etc/sudoers && \\\n    echo \"User_Alias   USER_ROOT   = tf-docker, $CLUSTER_NAME\" >> /etc/sudoers && \\\n    echo \"root        ALL=(ALL)    ALL\" >> /etc/sudoers && \\\n    echo \"USER_ROOT   ALL=(ALL)    ALL\" >> /etc/sudoers && \\\n    echo \"USER_ROOT   ALL=(ALL)    NOPASSWD: ALL\" >> /etc/sudoers"
}