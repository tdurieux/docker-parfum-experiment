diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/ignite/modules/ducktests/tests/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/ignite/modules/ducktests/tests/docker/Dockerfile/repaired.Dockerfile
index f3554d6..68aab13 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/ignite/modules/ducktests/tests/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/ignite/modules/ducktests/tests/docker/Dockerfile/repaired.Dockerfile
@@ -34,10 +34,10 @@ LABEL ducker.creator=$ducker_creator
 
 # Update Linux and install necessary utilities.
 RUN cat /etc/apt/sources.list | sed 's/http:\/\/deb.debian.org/https:\/\/deb.debian.org/g' > /etc/apt/sources.list.2 && mv /etc/apt/sources.list.2 /etc/apt/sources.list
-RUN apt update && apt install -y sudo netcat iptables rsync unzip wget curl jq coreutils openssh-server net-tools vim python3-pip python3-dev libffi-dev libssl-dev cmake pkg-config libfuse-dev iperf traceroute mc && apt-get -y clean
+RUN apt update && apt install --no-install-recommends -y sudo netcat iptables rsync unzip wget curl jq coreutils openssh-server net-tools vim python3-pip python3-dev libffi-dev libssl-dev cmake pkg-config libfuse-dev iperf traceroute mc && apt-get -y clean && rm -rf /var/lib/apt/lists/*;
 RUN python3 -m pip install -U pip==20.2.2;
 COPY ./requirements.txt /root/requirements.txt
-RUN pip3 install -r /root/requirements.txt
+RUN pip3 install --no-cache-dir -r /root/requirements.txt
 
 # Set up ssh
 COPY ./ssh-config /root/.ssh/config
@@ -51,8 +51,8 @@ ARG APACHE_ARCHIVE="https://archive.apache.org/dist/"
 # Install binary test dependencies.
 RUN for v in "2.7.6" "2.8.0" "2.8.1" "2.9.0" "2.9.1" "2.10.0" "2.11.0"; \
     do cd /opt; \
-    curl -O $APACHE_ARCHIVE/ignite/$v/apache-ignite-$v-bin.zip;\
-    unzip apache-ignite-$v-bin.zip && mv /opt/apache-ignite-$v-bin /opt/ignite-$v;\
+    curl -f -O $APACHE_ARCHIVE/ignite/$v/apache-ignite-$v-bin.zip; \
+    unzip apache-ignite-$v-bin.zip && mv /opt/apache-ignite-$v-bin /opt/ignite-$v; \
     done
 
 RUN rm /opt/apache-ignite-*-bin.zip
@@ -63,7 +63,7 @@ ARG ZOOKEEPER_NAME="zookeeper-$ZOOKEEPER_VERSION"
 ARG ZOOKEEPER_RELEASE_NAME="apache-$ZOOKEEPER_NAME-bin"
 ARG ZOOKEEPER_RELEASE_ARTIFACT="$ZOOKEEPER_RELEASE_NAME.tar.gz"
 RUN echo $APACHE_ARCHIVE/zookeeper/$ZOOKEEPER_NAME/$ZOOKEEPER_RELEASE_ARTIFACT
-RUN cd /opt && curl -O $APACHE_ARCHIVE/zookeeper/$ZOOKEEPER_NAME/$ZOOKEEPER_RELEASE_ARTIFACT \
+RUN cd /opt && curl -f -O $APACHE_ARCHIVE/zookeeper/$ZOOKEEPER_NAME/$ZOOKEEPER_RELEASE_ARTIFACT \
  && tar xvf $ZOOKEEPER_RELEASE_ARTIFACT && rm $ZOOKEEPER_RELEASE_ARTIFACT
 RUN mv /opt/$ZOOKEEPER_RELEASE_NAME /opt/$ZOOKEEPER_NAME
 
@@ -72,7 +72,7 @@ ARG SPARK_VERSION="2.3.4"
 ARG SPARK_NAME="spark-$SPARK_VERSION"
 ARG SPARK_RELEASE_NAME="spark-$SPARK_VERSION-bin-hadoop2.7"
 
-RUN cd /opt && curl -O $APACHE_ARCHIVE/spark/$SPARK_NAME/$SPARK_RELEASE_NAME.tgz && tar xvf $SPARK_RELEASE_NAME.tgz && rm $SPARK_RELEASE_NAME.tgz
+RUN cd /opt && curl -f -O $APACHE_ARCHIVE/spark/$SPARK_NAME/$SPARK_RELEASE_NAME.tgz && tar xvf $SPARK_RELEASE_NAME.tgz && rm $SPARK_RELEASE_NAME.tgz
 RUN mv /opt/$SPARK_RELEASE_NAME /opt/$SPARK_NAME
 
 # The version of Kibosh to use for testing.
@@ -80,14 +80,14 @@ RUN mv /opt/$SPARK_RELEASE_NAME /opt/$SPARK_NAME
 ARG KIBOSH_VERSION="8841dd392e6fbf02986e2fb1f1ebf04df344b65a"
 
 # Install Kibosh
-RUN apt-get install fuse
+RUN apt-get install -y --no-install-recommends fuse && rm -rf /var/lib/apt/lists/*;
 RUN cd /opt && git clone -q  https://github.com/confluentinc/kibosh.git && cd "/opt/kibosh" && git reset --hard $KIBOSH_VERSION && mkdir "/opt/kibosh/build" && cd "/opt/kibosh/build" && ../configure && make -j 2
 
 #Install jmxterm
 ARG JMXTERM_NAME="jmxterm"
 ARG JMXTERM_VERSION="1.0.1"
 ARG JMXTERM_ARTIFACT="$JMXTERM_NAME-$JMXTERM_VERSION-uber.jar"
-RUN cd /opt && curl -OL https://github.com/jiaqi/jmxterm/releases/download/v$JMXTERM_VERSION/$JMXTERM_ARTIFACT \
+RUN cd /opt && curl -f -OL https://github.com/jiaqi/jmxterm/releases/download/v$JMXTERM_VERSION/$JMXTERM_ARTIFACT \
        && mv $JMXTERM_ARTIFACT $JMXTERM_NAME.jar
 
 # Set up the ducker user.