{
  "startTime": 1674252874663,
  "endTime": 1674252875393,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 4,
        "columnEnd": 63
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 15,
        "columnEnd": 92
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 15,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 89,
        "lineEnd": 89,
        "columnStart": 15,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 18,
        "columnEnd": 212
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 18,
        "columnEnd": 212
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 24
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#    http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nARG jdk_version=openjdk:8\nFROM $jdk_version\n\nMAINTAINER Apache Ignite dev@ignite.apache.org\nVOLUME [\"/opt/ignite-dev\"]\n\n# Set the timezone.\nENV TZ=Europe/Moscow\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\n# Do not ask for confirmations when running apt-get, etc.\nENV DEBIAN_FRONTEND noninteractive\n\n# Set the ducker.creator label so that we know that this is a ducker image.  This will make it\n# visible to 'ducker purge'.  The ducker.creator label also lets us know what UNIX user built this\n# image.\nARG ducker_creator=default\nLABEL ducker.creator=$ducker_creator\n\n# Update Linux and install necessary utilities.\nRUN cat /etc/apt/sources.list | sed 's/http:\\/\\/deb.debian.org/https:\\/\\/deb.debian.org/g' > /etc/apt/sources.list.2 && mv /etc/apt/sources.list.2 /etc/apt/sources.list\nRUN apt update && apt install --no-install-recommends -y sudo netcat iptables rsync unzip wget curl jq coreutils openssh-server net-tools vim python3-pip python3-dev libffi-dev libssl-dev cmake pkg-config libfuse-dev iperf traceroute mc && apt-get -y clean && rm -rf /var/lib/apt/lists/*;\nRUN python3 -m pip install -U pip==20.2.2;\nCOPY ./requirements.txt /root/requirements.txt\nRUN pip3 install --no-cache-dir -r /root/requirements.txt\n\n# Set up ssh\nCOPY ./ssh-config /root/.ssh/config\n# NOTE: The paramiko library supports the PEM-format private key, but does not support the RFC4716 format.\nRUN ssh-keygen -m PEM -q -t rsa -N '' -f /root/.ssh/id_rsa && cp -f /root/.ssh/id_rsa.pub /root/.ssh/authorized_keys\nRUN echo 'PermitUserEnvironment yes' >> /etc/ssh/sshd_config\n\nARG APACHE_MIRROR=\"https://apache-mirror.rbc.ru/pub/apache/\"\nARG APACHE_ARCHIVE=\"https://archive.apache.org/dist/\"\n\n# Install binary test dependencies.\nRUN for v in \"2.7.6\" \"2.8.0\" \"2.8.1\" \"2.9.0\" \"2.9.1\" \"2.10.0\" \"2.11.0\"; \\\n    do cd /opt; \\\n    curl -f -O $APACHE_ARCHIVE/ignite/$v/apache-ignite-$v-bin.zip; \\\n    unzip apache-ignite-$v-bin.zip && mv /opt/apache-ignite-$v-bin /opt/ignite-$v; \\\n    done\n\nRUN rm /opt/apache-ignite-*-bin.zip\n\n#Install zookeeper.\nARG ZOOKEEPER_VERSION=\"3.5.8\"\nARG ZOOKEEPER_NAME=\"zookeeper-$ZOOKEEPER_VERSION\"\nARG ZOOKEEPER_RELEASE_NAME=\"apache-$ZOOKEEPER_NAME-bin\"\nARG ZOOKEEPER_RELEASE_ARTIFACT=\"$ZOOKEEPER_RELEASE_NAME.tar.gz\"\nRUN echo $APACHE_ARCHIVE/zookeeper/$ZOOKEEPER_NAME/$ZOOKEEPER_RELEASE_ARTIFACT\nRUN cd /opt && curl -f -O $APACHE_ARCHIVE/zookeeper/$ZOOKEEPER_NAME/$ZOOKEEPER_RELEASE_ARTIFACT \\\n && tar xvf $ZOOKEEPER_RELEASE_ARTIFACT && rm $ZOOKEEPER_RELEASE_ARTIFACT\nRUN mv /opt/$ZOOKEEPER_RELEASE_NAME /opt/$ZOOKEEPER_NAME\n\n# Install spark\nARG SPARK_VERSION=\"2.3.4\"\nARG SPARK_NAME=\"spark-$SPARK_VERSION\"\nARG SPARK_RELEASE_NAME=\"spark-$SPARK_VERSION-bin-hadoop2.7\"\n\nRUN cd /opt && curl -f -O $APACHE_ARCHIVE/spark/$SPARK_NAME/$SPARK_RELEASE_NAME.tgz && tar xvf $SPARK_RELEASE_NAME.tgz && rm $SPARK_RELEASE_NAME.tgz\nRUN mv /opt/$SPARK_RELEASE_NAME /opt/$SPARK_NAME\n\n# The version of Kibosh to use for testing.\n# If you update this, also update vagrant/base.sh\nARG KIBOSH_VERSION=\"8841dd392e6fbf02986e2fb1f1ebf04df344b65a\"\n\n# Install Kibosh\nRUN apt-get install -y --no-install-recommends fuse && rm -rf /var/lib/apt/lists/*;\nRUN cd /opt && git clone -q  https://github.com/confluentinc/kibosh.git && cd \"/opt/kibosh\" && git reset --hard $KIBOSH_VERSION && mkdir \"/opt/kibosh/build\" && cd \"/opt/kibosh/build\" && ../configure && make -j 2\n\n#Install jmxterm\nARG JMXTERM_NAME=\"jmxterm\"\nARG JMXTERM_VERSION=\"1.0.1\"\nARG JMXTERM_ARTIFACT=\"$JMXTERM_NAME-$JMXTERM_VERSION-uber.jar\"\nRUN cd /opt && curl -f -OL https://github.com/jiaqi/jmxterm/releases/download/v$JMXTERM_VERSION/$JMXTERM_ARTIFACT \\\n       && mv $JMXTERM_ARTIFACT $JMXTERM_NAME.jar\n\n# Set up the ducker user.\nRUN useradd -ms /bin/bash ducker && mkdir -p /home/ducker/ && rsync -aiq /root/.ssh/ /home/ducker/.ssh && chown -R ducker /home/ducker/ /mnt/ /var/log/ && echo \"PATH=$(runuser -l ducker -c 'echo $PATH'):$JAVA_HOME/bin\" >> /home/ducker/.ssh/environment && echo 'PATH=$PATH:'\"$JAVA_HOME/bin\" >> /home/ducker/.profile && echo 'ducker ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\nUSER ducker\n\nCMD sudo service ssh start && tail -f /dev/null\n\n# Container port exposure\nEXPOSE 11211 47100 47500 49112 10800 8080 2888 3888 2181 1098 8082\n"
}