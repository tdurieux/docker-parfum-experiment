{
  "startTime": 1674218142976,
  "endTime": 1674218144403,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 189
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 102,
        "lineEnd": 106,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 141,
        "lineEnd": 145,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 36,
        "columnStart": 22,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 86,
        "lineEnd": 87,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 125,
        "lineEnd": 126,
        "columnStart": 22,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -*- mode: dockerfile -*-\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n# Dockerfile to build MXNet for ARM\n\n####################################################################################################\n# Shared base for all ARM targets\n####################################################################################################\nFROM ubuntu:20.04 AS base\n\nWORKDIR /usr/local\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    build-essential \\\n    ninja-build \\\n    cmake \\\n    ccache \\\n    git \\\n    curl \\\n    zip \\\n    python3 \\\n    python3-pip \\\n && rm -rf /var/lib/apt/lists/*\n\nARG USER_ID=0\nARG GROUP_ID=0\nCOPY install/ubuntu_adduser.sh /work/\nRUN /work/ubuntu_adduser.sh\n\nCOPY runtime_functions.sh /work/\n\n\n####################################################################################################\n# Specialize base image for ARMv6\n####################################################################################################\nFROM base as armv6\n\nENV ARCH=armv6l \\\n    HOSTCC=gcc \\\n    HOSTCXX=g++ \\\n    TARGET=ARMV6\n\n# We use a toolchain from toolchains.bootlin.com instead of Debian / Ubunut\n# crossbuild-essential-armel toolchain, as the latter targets ARM architecture\n# versions 4T, 5T, and 6, whereas we only wish to target ARMV6 and like to use\n# ARMV6 specific features. https://wiki.debian.org/ArmEabiPort\nRUN curl -f -o armv6-eabihf--glibc--stable-2020.02-2.tar.bz2 -L https://toolchains.bootlin.com/downloads/releases/toolchains/armv6-eabihf/tarballs/armv6-eabihf--glibc--stable-2020.02-2.tar.bz2 && \\\n    tar xf armv6-eabihf--glibc--stable-2020.02-2.tar.bz2 && \\\n    rm armv6-eabihf--glibc--stable-2020.02-2.tar.bz2\nENV CMAKE_TOOLCHAIN_FILE=/usr/local/armv6-eabihf--glibc--stable-2020.02-2/share/buildroot/toolchainfile.cmake\n\nRUN git clone --recursive -b v0.3.12 https://github.com/xianyi/OpenBLAS.git && \\\n    cd /usr/local/OpenBLAS && \\\n    make NOFORTRAN=1 NO_SHARED=1 CC=/usr/local/armv6-eabihf--glibc--stable-2020.02-2/bin/arm-linux-gcc && \\\n    make PREFIX=/usr/local/armv6-eabihf--glibc--stable-2020.02-2/arm-buildroot-linux-gnueabihf/sysroot NO_SHARED=1 install && \\\n    cd /usr/local && \\\n    rm -rf OpenBLAS\n\nWORKDIR /work/mxnet\n\n\n####################################################################################################\n# Specialize base image for ARMv7\n####################################################################################################\nFROM base as armv7\n\nENV ARCH=armv7l \\\n    HOSTCC=gcc \\\n    HOSTCXX=g++ \\\n    TARGET=ARMV7\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    crossbuild-essential-armhf \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY toolchains/arm-linux-gnueabihf-toolchain.cmake /usr/local\nENV CMAKE_TOOLCHAIN_FILE=/usr/local/arm-linux-gnueabihf-toolchain.cmake\n\nRUN git clone --recursive -b v0.3.12 https://github.com/xianyi/OpenBLAS.git && \\\n    cd /usr/local/OpenBLAS && \\\n    make NOFORTRAN=1 NO_SHARED=1 CC=arm-linux-gnueabihf-gcc && \\\n    make PREFIX=/usr/local/arm-linux-gnueabihf NO_SHARED=1 install && \\\n    cd /usr/local && \\\n    rm -rf OpenBLAS\n\nRUN git clone --recursive -b v1.2.11 https://github.com/madler/zlib.git && \\\n    cd /usr/local/zlib && \\\n    CHOST=arm \\\n    CC=arm-linux-gnueabihf-gcc \\\n    AR=arm-linux-gnueabihf-ar \\\n    RANLIB=arm-linux-gnueabihf-ranlib \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n    --static --prefix=/usr/local/arm-linux-gnueabihf && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd /usr/local && \\\n    rm -rf zlib\n\nWORKDIR /work/mxnet\n\n\n####################################################################################################\n# Specialize base image for ARMv8\n####################################################################################################\nFROM base as armv8\n\nENV ARCH=aarch64 \\\n    HOSTCC=gcc \\\n    HOSTCXX=g++ \\\n    TARGET=ARMV8\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    crossbuild-essential-arm64 \\\n && rm -rf /var/lib/apt/lists/*\n\nCOPY toolchains/aarch64-linux-gnu-toolchain.cmake /usr\nENV CMAKE_TOOLCHAIN_FILE=/usr/aarch64-linux-gnu-toolchain.cmake\n\nRUN git clone --recursive -b v0.3.12 https://github.com/xianyi/OpenBLAS.git && \\\n    cd /usr/local/OpenBLAS && \\\n    make NOFORTRAN=1 NO_SHARED=1 CC=aarch64-linux-gnu-gcc && \\\n    make PREFIX=/usr/aarch64-linux-gnu NO_SHARED=1 install && \\\n    cd /usr/local && \\\n    rm -rf OpenBLAS\n\nRUN git clone --recursive -b v1.2.11 https://github.com/madler/zlib.git && \\\n    cd /usr/local/zlib && \\\n    CHOST=arm \\\n    CC=aarch64-linux-gnu-gcc \\\n    AR=aarch64-linux-gnu-ar \\\n    RANLIB=aarch64-linux-gnu-ranlib \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\n\n\n    --static --prefix=/usr/aarch64-linux-gnu && \\\n    make -j$(nproc) && \\\n    make install && \\\n    cd /usr/local && \\\n    rm -rf zlib\n\nWORKDIR /work/mxnet\n"
}