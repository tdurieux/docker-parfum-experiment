{
  "startTime": 1674248132747,
  "endTime": 1674248133636,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 85,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 65
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# -*- mode: dockerfile -*-\n# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#   http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied.  See the License for the\n# specific language governing permissions and limitations\n# under the License.\n#\n# Dockerfile to build libmxnet.so, and a python wheel for the Jetson TX1/TX2\n# This script assumes /work/mxnet exists and contains the mxnet code you wish to compile and\n# that /work/build exists and is the target for your output.\n\nFROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\n\nENV ARCH=aarch64 \\\n    HOSTCC=gcc \\\n    TARGET=ARMV8\n\nWORKDIR /usr/local\n\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n    build-essential \\\n    ninja-build \\\n    git \\\n    wget \\\n    zip \\\n    unzip \\\n    python3 \\\n    python3-pip \\\n    awscli \\\n    crossbuild-essential-arm64 \\\n && rm -rf /var/lib/apt/lists/*\n\n# cmake on Ubuntu 18.04 is too old\nRUN python3 -m pip install cmake\n\n# ccache on Ubuntu 18.04 is too old to support Cuda correctly\nCOPY install/deb_ubuntu_ccache.sh /work/\nRUN /work/deb_ubuntu_ccache.sh\n\nCOPY toolchains/aarch64-linux-gnu-toolchain.cmake /usr\nENV CMAKE_TOOLCHAIN_FILE=/usr/aarch64-linux-gnu-toolchain.cmake\n\nRUN git clone --recursive -b v0.3.12 https://github.com/xianyi/OpenBLAS.git && \\\n    cd /usr/local/OpenBLAS && \\\n    make NOFORTRAN=1 CC=aarch64-linux-gnu-gcc && \\\n    make PREFIX=/usr/aarch64-linux-gnu install && \\\n    cd /usr/local && \\\n    rm -rf OpenBLAS\n\n# Install aarch64 cross depedencies based on Jetpack 4.4\n# Dependencies require cuda-toolkit-10.2 which isn't installed in nvidia docker container\n# It contains cuda-compat instead. However deb files currently depend on cuda-toolkit alone.\n# Hence force dpkg configure\nRUN wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-cross-aarch64_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-cudart-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-cufft-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-cupti-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-curand-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-cusolver-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-cusparse-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-driver-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-misc-headers-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-npp-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-nsight-compute-addon-l4t-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-nvgraph-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-nvml-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cuda/cuda-nvrtc-cross-aarch64-10-2_10.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/c/cublas/libcublas-cross-aarch64_10.2.2.89-1_all.deb && \\\n    wget https://repo.download.nvidia.com/jetson/x86_64/pool/r32.4/n/nsight-compute/nsight-compute-addon-l4t-2019.5.0_2019.5.0.14-1_all.deb && \\\n    dpkg -i --force-all  *.deb && \\\n    rm *.deb && \\\n    apt-get update && \\\n    apt-get install -y -f && \\\n    apt-get install --no-install-recommends -y cuda-cross-aarch64 cuda-cross-aarch64-10-2 && \\\n    rm -rf /var/lib/apt/lists/*\n\n# nvidia jetpack 4.4 installs libcublas.so at /usr/lib/aarch64-linux-gnu\n# while previously it used to store it at /usr/local/cuda/targets/aarch64-linux/lib/stubs\nRUN ln -s /usr/lib/aarch64-linux-gnu/libcublas.so /usr/local/cuda/targets/aarch64-linux/lib/stubs/libcublas.so\n\nARG USER_ID=0\nARG GROUP_ID=0\nCOPY install/ubuntu_adduser.sh /work/\nRUN /work/ubuntu_adduser.sh\n\nCOPY runtime_functions.sh /work/\nWORKDIR /work/mxnet\n"
}