{
  "startTime": 1674250521642,
  "endTime": 1674250522352,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements.  See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership.  The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the\n# \"License\"); you may not use this file except in compliance\n# with the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nFROM nvidia/cuda:9.0-base-ubuntu16.04\n\nRUN echo \"$LOG_TAG update and install basic packages\" && \\\n     apt-get -y update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        libfreetype6-dev \\\n        libpng12-dev \\\n        libzmq3-dev \\\n        pkg-config \\\n        rsync \\\n        software-properties-common \\\n        unzip \\\n        vim \\\n        wget \\\n        && \\\n    apt-get install --no-install-recommends -y locales && \\\n    locale-gen $LANG && \\\n    apt-get clean && \\\n    apt -y autoclean && \\\n    apt -y dist-upgrade && \\\n    apt-get install --no-install-recommends -y build-essential && \\\n    rm -rf /var/lib/apt/lists/*\n\nENV JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64\nRUN echo \"$LOG_TAG Install java8\" && \\\n    apt-get -y update && \\\n    apt-get install --no-install-recommends -y openjdk-8-jdk && \\\n    rm -rf /var/lib/apt/lists/*\n\n# Install Zeppelin\nENV Z_VERSION=\"0.7.3\" \\\n    Z_HOME=\"/zeppelin\"\n\nRUN echo \"$LOG_TAG Download Zeppelin binary\" && \\\n    wget -O /tmp/zeppelin-${Z_VERSION}-bin-all.tgz https://archive.apache.org/dist/zeppelin/zeppelin-${Z_VERSION}/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    tar -zxvf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    rm -rf /tmp/zeppelin-${Z_VERSION}-bin-all.tgz && \\\n    mv /zeppelin-${Z_VERSION}-bin-all ${Z_HOME}\nENV PATH=\"${Z_HOME}/bin:${PATH}\"\n\nRUN echo \"$LOG_TAG Set locale\" && \\\n    echo \"LC_ALL=en_US.UTF-8\" >> /etc/environment && \\\n    echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen && \\\n    echo \"LANG=en_US.UTF-8\" > /etc/locale.conf && \\\n    locale-gen en_US.UTF-8\n\nENV LANG=en_US.UTF-8 \\\n    LC_ALL=en_US.UTF-8\n\nCOPY zeppelin-site.xml $Z_HOME/conf/zeppelin-site.xml\nCOPY shiro.ini ${Z_HOME}/conf/shiro.ini\nRUN chmod 777 -R ${Z_HOME}\n\nCOPY run_container.sh /usr/local/bin/run_container.sh\nRUN chmod 755 /usr/local/bin/run_container.sh\n\nEXPOSE 8080\nCMD [\"/usr/local/bin/run_container.sh\"]\n"
}