diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/couchdb-docker/dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/couchdb-docker/dev/Dockerfile/repaired.Dockerfile
index 104de9d..df79c50 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/apache/couchdb-docker/dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/apache/couchdb-docker/dev/Dockerfile/repaired.Dockerfile
@@ -19,7 +19,7 @@ MAINTAINER CouchDB Developers dev@couchdb.apache.org
 # Add CouchDB user account
 RUN groupadd -g 5984 -r couchdb && useradd -u 5984 -d /opt/couchdb -g couchdb couchdb
 
-RUN apt-get update -y && apt-get install -y \
+RUN apt-get update -y && apt-get install --no-install-recommends -y \
         apt-transport-https \
         ca-certificates \
         curl \
@@ -61,10 +61,10 @@ RUN set -eux; \
     python3-pip \
     python3-sphinx \
     python3-setuptools \
-    wget
+    wget && rm -rf /var/lib/apt/lists/*;
 
 RUN set -eux; \
-    pip3 install --upgrade \
+    pip3 install --no-cache-dir --upgrade \
     sphinx_rtd_theme \
     nose \
     requests \
@@ -79,17 +79,17 @@ RUN set -eux; \
 
 # Node is special
 RUN set -eux; \
-    curl -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -; \
+    curl -f -s https://deb.nodesource.com/gpgkey/nodesource.gpg.key | apt-key add -; \
     echo 'deb https://deb.nodesource.com/node_10.x buster main' > /etc/apt/sources.list.d/nodesource.list; \
     echo 'deb-src https://deb.nodesource.com/node_10.x buster main' >> /etc/apt/sources.list.d/nodesource.list; \
-    apt-get update -y && apt-get install -y nodejs; \
-    npm install -g grunt-cli
+    apt-get update -y && apt-get install --no-install-recommends -y nodejs; rm -rf /var/lib/apt/lists/*; \
+    npm install -g grunt-cli && npm cache clean --force;
 
 # Clone CouchDB source code including all dependencies
 ARG clone_url=https://github.com/apache/couchdb.git
 RUN git clone $clone_url /usr/src/couchdb
 WORKDIR /usr/src/couchdb
-RUN ./configure
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)"
 
 # This layer performs the actual build of a relocatable, self-contained
 # release of CouchDB. It pulls down the latest changes from the remote
@@ -104,7 +104,7 @@ ARG spidermonkey_version=60
 WORKDIR /usr/src/couchdb/
 RUN git fetch origin \
     && git checkout $checkout_branch \
-    && ./configure $configure_options --spidermonkey-version $spidermonkey_version\
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" $configure_options --spidermonkey-version $spidermonkey_version \
     && make release
 
 # This results in a single layer image (or at least skips the build stuff?)