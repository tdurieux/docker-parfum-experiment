{
  "startTime": 1674251492954,
  "endTime": 1674251493519,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This must be run with the Docker context set to the root folder of the repository\n# (the one with the yarn.lock file)\n\nFROM --platform=$BUILDPLATFORM node:16-alpine as Node\n#FROM  node:16-alpine as Node\n\nENV NODE_ENV=production\n\nWORKDIR /home/node/app\nRUN mkdir -p /home/node/app/node_modules && chown -R node:node /home/node/app\n\nCOPY ./package.json ./\nCOPY ./yarn.lock ./\n\nRUN chown -R node:node /home/node/app\n\nUSER node\n\nRUN yarn --network-timeout 1000000 install && yarn cache clean;\n\nCOPY --chown=node:node ./src ./src\nCOPY --chown=node:node ./public ./public\nCOPY --chown=node:node ./tsconfig.json ./tsconfig.json\nCOPY --chown=node:node ./.env ./.env\n\nRUN yarn build\n\nFROM nginx:latest\n\nRUN apt update\nRUN apt -y remove libfreetype6\n\nCOPY --from=Node /home/node/app/build /usr/share/nginx/html\nCOPY ./docker/nginx.conf.template /etc/nginx/conf.d/default.conf.template\nCOPY ./docker/frontend-entrypoint.sh /\n\nRUN [\"chmod\", \"+x\", \"/frontend-entrypoint.sh\"]\nENTRYPOINT [\"/frontend-entrypoint.sh\"]\nCMD [\"nginx\", \"-g\", \"daemon off;\"]"
}