{
  "startTime": 1674248949496,
  "endTime": 1674248950574,
  "originalSmells": [
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM maven:3.6.3-adoptopenjdk-14 as builder\nWORKDIR /app/code\nCOPY / /app/code\nRUN mvn clean install && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends tar wget -y && \\\n    wget https://get.docker.com/builds/Linux/x86_64/docker-1.12.0.tgz && \\\n    tar zxvf docker-1.12.0.tgz && rm docker-1.12.0.tgz && rm -rf /var/lib/apt/lists/*;\n\nFROM jrottenberg/ffmpeg:4.3-vaapi\nMAINTAINER Isaac Aymerich <isaac.aymerich@gmail.com>\n\nRUN apt-get update -y && \\\n    apt-get install --no-install-recommends -y wget && \\\n    apt-get clean all && \\\n    wget https://github.com/AdoptOpenJDK/openjdk14-binaries/releases/download/jdk-14.0.2%2B12/OpenJDK14U-jdk_x64_linux_hotspot_14.0.2_12.tar.gz && \\\n    tar xvzf OpenJDK14U-jdk_x64_linux_hotspot_14.0.2_12.tar.gz && \\\n    rm -rf OpenJDK14U-jdk_x64_linux_hotspot_14.0.2_12.tar.gz && \\\n    mv jdk-14.0.2+12 /usr/java && \\\n    ln -s /usr/java/bin/java /usr/bin/java && rm -rf /var/lib/apt/lists/*;\n\nCOPY --from=builder /app/code/target/ProxyLive.jar /app/proxyLive.jar\nCOPY --from=builder /app/code/docker/docker /usr/bin/docker\nCOPY --from=builder /app/code/target/application.yml /app/application.yml\n\nENV     LANG en_US.UTF-8\nENV     LC_ALL en_US.UTF-8\n\n\nENV DEBUG_MODE false\nENV PROFILE = \"\"\nENV JAVA_OPTS=\"-Xms256m -Xmx1024m\"\nENV JAVA_HOME /usr/java\n\nCOPY entrypoint.sh /entrypoint.sh\nEXPOSE 8080\n\nWORKDIR /app\n\nENTRYPOINT [\"/entrypoint.sh\"]"
}