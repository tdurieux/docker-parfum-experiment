{
  "startTime": 1674219466660,
  "endTime": 1674219467955,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 86,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 100,
        "lineEnd": 108,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 110,
        "lineEnd": 114,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 116,
        "lineEnd": 136,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 140,
        "lineEnd": 142,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 166,
        "lineEnd": 167,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 19,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 56,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 19,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 56,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 144,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 56,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 144,
        "lineEnd": 156,
        "columnStart": 4,
        "columnEnd": 16
      }
    }
  ],
  "repairedDockerfile": "# Dockerfile for building general development\n# environment for Data Science Analytics\nFROM ubuntu:20.04\nLABEL maintainer \"michaelchan_wahyan@yahoo.com.hk\"\n\nENV SHELL=/bin/bash \\\n    TZ=Asia/Hong_Kong \\\n    PYTHONIOENCODING=UTF-8 \\\n    AIRFLOW_HOME=/app/airflow \\\n    AIRFLOW_GPL_UNIDECODE=yes \\\n    JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64 \\\n    PYSPARK_DRIVER_PYTHON=\"jupyter\" \\\n    PYSPARK_DRIVER_PYTHON_OPTS=\"notebook\" \\\n    PYSPARK_PYTHON=python3 \\\n    SPARK_HOME=/spark-3.2.1-bin-hadoop3.2 \\\n    SPARK_PATH=/spark-3.2.1-bin-hadoop3.2 \\\n    PATH=$PATH:/cmake-3.22.1-linux-x86_64/bin:/usr/lib/jvm/java-8-openjdk-amd64:/bin:/sbin:/usr/bin:/usr/lib:/usr/local/bin:/usr/local/lib:/usr/local/sbin:/usr/local/sbin:/usr/sbin\n\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install \\\n        apt-transport-https \\\n        apt-utils \\\n        bc \\\n        curl \\\n        gcc \\\n        git \\\n        htop \\\n        make \\\n        nano \\\n        net-tools \\\n        openjdk-8-jdk-headless \\\n        screen \\\n        vim \\\n        wget && rm -rf /var/lib/apt/lists/*;\n\nRUN cd / ; \\\n    wget https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.tar.gz ; \\\n    tar -zxvf cmake-3.22.1-linux-x86_64.tar.gz && rm cmake-3.22.1-linux-x86_64.tar.gz\n# jdk1,8,0_171 is replaced by ubuntu openjdk-8-jdk-headless\n#RUN cd / ;\\\n#    git clone https://github.com/michaelchanwahyan/jdk1.8.0_171\n\n\n\n\n\n\n#RUN cd / ;\\\n#    wget https://dlcdn.apache.org/spark/spark-3.2.0/spark-3.2.0-bin-hadoop3.2.tgz ;\\\n#    tar -zxvf spark-3.2.0-bin-hadoop3.2.tgz\nRUN cd / ; \\\n    wget https://archive.apache.org/dist/spark/spark-3.2.1/spark-3.2.1-bin-hadoop3.2.tgz ; \\\n    tar -zxvf spark-3.2.1-bin-hadoop3.2.tgz && rm spark-3.2.1-bin-hadoop3.2.tgz\n\n# prerequisites of Python 3.8\nRUN apt-get -y update\nRUN apt-get -y --no-install-recommends install \\\n        build-essential \\\n        libbz2-dev \\\n        libc6-dev \\\n        libcurl4-openssl-dev \\\n        libffi-dev \\\n        libgdbm-dev \\\n        libncursesw5-dev \\\n        libreadline-gplv2-dev \\\n        libsqlite3-dev \\\n        libssl-dev \\\n        openssl \\\n        zlib1g-dev && rm -rf /var/lib/apt/lists/*;\n# build Python 3.8.12\n# option --disable-test-modules : Install Options\n# option --without-doc-strings  : Performance Options\nRUN cd / ; \\\n    wget https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz ; \\\n    tar -zxvf Python-3.8.12.tgz && rm Python-3.8.12.tgz\nRUN cd /Python-3.8.12 ; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-test-modules --without-doc-strings; \\\n    make -j4 ; \\\n    make install\n\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir wheel\nRUN pip3 install --no-cache-dir \\\n        pyarrow==6.0.1\nRUN PYSPARK_HADOOP_VERSION=3.2 pip3 --no-cache-dir install pyspark==3.2.1\n\nRUN pip3 install --no-cache-dir \\\n        ipython==7.30.1 \\\n        ipython-genutils==0.2.0 \\\n        jupyter==1.0.0 \\\n        jupyter-client==7.1.0 \\\n        jupyter-console==6.4.0 \\\n        jupyter-core==4.9.1 \\\n        jupyter-server==1.13.1 \\\n        jupyterlab==3.2.5 \\\n        jupyterlab-launcher==0.13.1 \\\n        jupyterlab-pygments==0.1.2 \\\n        jupyterlab-server==2.8.2 \\\n        jupyterlab-widgets==1.0.2\n\nRUN pip3 install --no-cache-dir \\\n        cython==0.29.25 \\\n        matplotlib==3.3.1 \\\n        numpy==1.21.4 \\\n        pandas==1.3.4 \\\n        pillow==8.4.0 \\\n        scikit-image==0.19.0 \\\n        scikit-learn==1.0.1 \\\n        scipy==1.7.3\n\nRUN pip3 install --no-cache-dir \\\n        torch==1.10.0+cpu \\\n        torchaudio==0.10.0+cpu \\\n        torchvision==0.11.1+cpu \\\n        -f https://download.pytorch.org/whl/cpu/torch_stable.html\n\nRUN pip3 install --no-cache-dir \\\n        anytree==2.8.0 \\\n        arrow==1.2.1 \\\n        cvxpy==1.1.17 \\\n        django-file-md5==1.0.3 \\\n        ecos==2.0.8 \\\n        gensim==4.1.2 \\\n        h5py==3.6.0 \\\n        jieba==0.42.1 \\\n        laspy==2.0.3 \\\n        lxml==4.7.0 \\\n        multiprocess==0.70.12.2 \\\n        networkx==2.6.3 \\\n        nltk==3.6.4 \\\n        opencv-python==4.5.4.60 \\\n        osqp==0.6.2.post0 \\\n        pattern3==3.0.0 \\\n        plotly==5.4.0 \\\n        plyfile==0.7.4 \\\n        scs==2.1.4 \\\n        toolz==0.11.2\n\n# package for speech recognition\n# text-to-speech and speech-to-text\nRUN pip3 install --no-cache-dir \\\n        auditok==0.2.0 \\\n        azure-cognitiveservices-speech==1.22.0\n\nRUN DEBIAN_FRONTEND=nointeract \\\n    apt-get -y install --no-install-recommends \\\n        freetds-bin \\\n        krb5-user \\\n        ldap-utils \\\n        libsasl2-2 \\\n        libsasl2-modules \\\n        libssl1.1 \\\n        locales \\\n        lsb-release \\\n        sasl2-bin \\\n        sqlite3 \\\n        unixodbc && rm -rf /var/lib/apt/lists/*;\n\n# install airflow\n# airflow needs a home. '/app/airflow' is now set as $AIRFLOW_HOME\n# AIRFLOW_VERSION=2.0.1\n# PYTHON_VERSION=3.8\n# CONSTRAINT_URL=\n# https://raw.githubusercontent.com/apache/\n#         airflow/constraints-${AIRFLOW_VERSION}/\n#         constraints-${PYTHON_VERSION}.txt\"\nRUN pip3 install --no-cache-dir apache-airflow==2.0.1 \\\n    --constraint https://raw.githubusercontent.com/apache/airflow/constraints-2.0.1/constraints-3.8.txt\n\nRUN mkdir -p /app/airflow/dags\nCOPY [\"startup.sh\", \"/\"]\nCOPY [\".bashrc\", \".vimrc\", \"/root/\"]\nCOPY [\"airflow/dags/first-airflow-tutorial.py\", \"/app/airflow/dags/\"]\nEXPOSE 8080 9090 9999\n\nCMD [ \"/bin/bash\" ]\n"
}