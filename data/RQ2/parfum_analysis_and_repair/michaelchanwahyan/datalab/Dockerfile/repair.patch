diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/michaelchanwahyan/datalab/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/michaelchanwahyan/datalab/Dockerfile/repaired.Dockerfile
index a04ca70..6cf8d1c 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/michaelchanwahyan/datalab/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/michaelchanwahyan/datalab/Dockerfile/repaired.Dockerfile
@@ -17,7 +17,7 @@ ENV SHELL=/bin/bash \
     PATH=$PATH:/cmake-3.22.1-linux-x86_64/bin:/usr/lib/jvm/java-8-openjdk-amd64:/bin:/sbin:/usr/bin:/usr/lib:/usr/local/bin:/usr/local/lib:/usr/local/sbin:/usr/local/sbin:/usr/sbin
 
 RUN apt-get -y update
-RUN apt-get -y install \
+RUN apt-get -y --no-install-recommends install \
         apt-transport-https \
         apt-utils \
         bc \
@@ -31,11 +31,11 @@ RUN apt-get -y install \
         openjdk-8-jdk-headless \
         screen \
         vim \
-        wget
+        wget && rm -rf /var/lib/apt/lists/*;
 
-RUN cd / ;\
-    wget https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.tar.gz ;\
-    tar -zxvf cmake-3.22.1-linux-x86_64.tar.gz
+RUN cd / ; \
+    wget https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1-linux-x86_64.tar.gz ; \
+    tar -zxvf cmake-3.22.1-linux-x86_64.tar.gz && rm cmake-3.22.1-linux-x86_64.tar.gz
 # jdk1,8,0_171 is replaced by ubuntu openjdk-8-jdk-headless
 #RUN cd / ;\
 #    git clone https://github.com/michaelchanwahyan/jdk1.8.0_171
@@ -48,13 +48,13 @@ RUN cd / ;\
 #RUN cd / ;\
 #    wget https://dlcdn.apache.org/spark/spark-3.2.0/spark-3.2.0-bin-hadoop3.2.tgz ;\
 #    tar -zxvf spark-3.2.0-bin-hadoop3.2.tgz
-RUN cd / ;\
-    wget https://archive.apache.org/dist/spark/spark-3.2.1/spark-3.2.1-bin-hadoop3.2.tgz ;\
-    tar -zxvf spark-3.2.1-bin-hadoop3.2.tgz
+RUN cd / ; \
+    wget https://archive.apache.org/dist/spark/spark-3.2.1/spark-3.2.1-bin-hadoop3.2.tgz ; \
+    tar -zxvf spark-3.2.1-bin-hadoop3.2.tgz && rm spark-3.2.1-bin-hadoop3.2.tgz
 
 # prerequisites of Python 3.8
 RUN apt-get -y update
-RUN apt-get -y install \
+RUN apt-get -y --no-install-recommends install \
         build-essential \
         libbz2-dev \
         libc6-dev \
@@ -66,25 +66,25 @@ RUN apt-get -y install \
         libsqlite3-dev \
         libssl-dev \
         openssl \
-        zlib1g-dev
+        zlib1g-dev && rm -rf /var/lib/apt/lists/*;
 # build Python 3.8.12
 # option --disable-test-modules : Install Options
 # option --without-doc-strings  : Performance Options
-RUN cd / ;\
-    wget https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz ;\
-    tar -zxvf Python-3.8.12.tgz
-RUN cd /Python-3.8.12 ;\
-    ./configure --disable-test-modules --without-doc-strings ;\
-    make -j4 ;\
+RUN cd / ; \
+    wget https://www.python.org/ftp/python/3.8.12/Python-3.8.12.tgz ; \
+    tar -zxvf Python-3.8.12.tgz && rm Python-3.8.12.tgz
+RUN cd /Python-3.8.12 ; \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-test-modules --without-doc-strings; \
+    make -j4 ; \
     make install
 
-RUN pip3 install --upgrade pip
-RUN pip3 install wheel
-RUN pip3 install \
+RUN pip3 install --no-cache-dir --upgrade pip
+RUN pip3 install --no-cache-dir wheel
+RUN pip3 install --no-cache-dir \
         pyarrow==6.0.1
-RUN PYSPARK_HADOOP_VERSION=3.2 pip3 install pyspark==3.2.1
+RUN PYSPARK_HADOOP_VERSION=3.2 pip3 --no-cache-dir install pyspark==3.2.1
 
-RUN pip3 install \
+RUN pip3 install --no-cache-dir \
         ipython==7.30.1 \
         ipython-genutils==0.2.0 \
         jupyter==1.0.0 \
@@ -98,7 +98,7 @@ RUN pip3 install \
         jupyterlab-server==2.8.2 \
         jupyterlab-widgets==1.0.2
 
-RUN pip3 install \
+RUN pip3 install --no-cache-dir \
         cython==0.29.25 \
         matplotlib==3.3.1 \
         numpy==1.21.4 \
@@ -108,13 +108,13 @@ RUN pip3 install \
         scikit-learn==1.0.1 \
         scipy==1.7.3
 
-RUN pip3 install \
+RUN pip3 install --no-cache-dir \
         torch==1.10.0+cpu \
         torchaudio==0.10.0+cpu \
         torchvision==0.11.1+cpu \
         -f https://download.pytorch.org/whl/cpu/torch_stable.html
 
-RUN pip3 install \
+RUN pip3 install --no-cache-dir \
         anytree==2.8.0 \
         arrow==1.2.1 \
         cvxpy==1.1.17 \
@@ -138,7 +138,7 @@ RUN pip3 install \
 
 # package for speech recognition
 # text-to-speech and speech-to-text
-RUN pip3 install \
+RUN pip3 install --no-cache-dir \
         auditok==0.2.0 \
         azure-cognitiveservices-speech==1.22.0
 
@@ -150,11 +150,11 @@ RUN DEBIAN_FRONTEND=nointeract \
         libsasl2-2 \
         libsasl2-modules \
         libssl1.1 \
-        locales  \
+        locales \
         lsb-release \
         sasl2-bin \
         sqlite3 \
-        unixodbc
+        unixodbc && rm -rf /var/lib/apt/lists/*;
 
 # install airflow
 # airflow needs a home. '/app/airflow' is now set as $AIRFLOW_HOME
@@ -164,7 +164,7 @@ RUN DEBIAN_FRONTEND=nointeract \
 # https://raw.githubusercontent.com/apache/
 #         airflow/constraints-${AIRFLOW_VERSION}/
 #         constraints-${PYTHON_VERSION}.txt"
-RUN pip3 install apache-airflow==2.0.1 \
+RUN pip3 install --no-cache-dir apache-airflow==2.0.1 \
     --constraint https://raw.githubusercontent.com/apache/airflow/constraints-2.0.1/constraints-3.8.txt
 
 RUN mkdir -p /app/airflow/dags