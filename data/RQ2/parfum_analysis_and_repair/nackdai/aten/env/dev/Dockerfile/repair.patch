diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nackdai/aten/env/dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nackdai/aten/env/dev/Dockerfile/repaired.Dockerfile
index 96e7fe3..4057fbe 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nackdai/aten/env/dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nackdai/aten/env/dev/Dockerfile/repaired.Dockerfile
@@ -3,7 +3,7 @@ FROM ${base_from}
 
 ENV DEBIAN_FRONTEND=noninteractive
 
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
     make \
     build-essential \
     libssl-dev \
@@ -22,7 +22,7 @@ RUN apt-get update && apt-get install -y \
     liblzma-dev \
     python-openssl \
     git \
-    shellcheck
+    shellcheck && rm -rf /var/lib/apt/lists/*;
 
 ARG python_version=3.8.2
 
@@ -33,16 +33,16 @@ RUN git clone https://github.com/pyenv/pyenv.git $HOME/.pyenv \
     && eval "$(pyenv init --path)" \
     && pyenv install -v ${python_version} \
     && pyenv global ${python_version} \
-    && pip install pre-commit
+    && pip install --no-cache-dir pre-commit
 
 # https://github.com/nodesource/distributions
 # https://github.com/nodesource/distributions/issues/1266
 ARG npm_version=8.4.1
-RUN apt-get update && apt-get install -y ca-certificates \
+RUN apt-get update && apt-get install --no-install-recommends -y ca-certificates \
     && curl -fsSL https://deb.nodesource.com/setup_current.x | bash - \
     && apt-get update \
-    && apt-get install -y nodejs \
-    && npm install -g npm@${npm_version}
+    && apt-get install --no-install-recommends -y nodejs \
+    && npm install -g npm@${npm_version} && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;
 # https://stackoverflow.com/questions/69692842/error-message-error0308010cdigital-envelope-routinesunsupported
 ENV NODE_OPTIONS --openssl-legacy-provider
 
@@ -50,7 +50,7 @@ ENV NODE_OPTIONS --openssl-legacy-provider
 # https://github.com/mvdan/sh
 # Need to install golang
 ARG go_version=1.17.1
-RUN curl https://dl.google.com/go/go${go_version}.linux-amd64.tar.gz > go.tar.gz \
+RUN curl -f https://dl.google.com/go/go${go_version}.linux-amd64.tar.gz > go.tar.gz \
     && tar -C /usr/local -xzf go.tar.gz \
     && GO111MODULE=on /usr/local/go/bin/go install mvdan.cc/sh/v3/cmd/shfmt@latest \
     && cp ~/go/bin/shfmt /usr/local/bin/shfmt \