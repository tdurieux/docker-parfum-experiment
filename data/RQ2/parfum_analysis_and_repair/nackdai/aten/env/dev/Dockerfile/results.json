{
  "startTime": 1674250849466,
  "endTime": 1674250851223,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 7,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 22,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG base_from=ubuntu:20.04\nFROM ${base_from}\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    make \\\n    build-essential \\\n    libssl-dev \\\n    zlib1g-dev \\\n    libbz2-dev \\\n    libreadline-dev \\\n    libsqlite3-dev \\\n    wget \\\n    curl \\\n    llvm \\\n    libncurses5-dev \\\n    libncursesw5-dev \\\n    xz-utils \\\n    tk-dev \\\n    libffi-dev \\\n    liblzma-dev \\\n    python-openssl \\\n    git \\\n    shellcheck && rm -rf /var/lib/apt/lists/*;\n\nARG python_version=3.8.2\n\nENV HOME /root\nENV PATH $HOME/.pyenv/bin:$PATH\nRUN git clone https://github.com/pyenv/pyenv.git $HOME/.pyenv \\\n    && echo 'eval \"$(pyenv init --path)\"' >> ~/.bashrc \\\n    && eval \"$(pyenv init --path)\" \\\n    && pyenv install -v ${python_version} \\\n    && pyenv global ${python_version} \\\n    && pip install --no-cache-dir pre-commit\n\n# https://github.com/nodesource/distributions\n# https://github.com/nodesource/distributions/issues/1266\nARG npm_version=8.4.1\nRUN apt-get update && apt-get install --no-install-recommends -y ca-certificates \\\n    && curl -fsSL https://deb.nodesource.com/setup_current.x | bash - \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y nodejs \\\n    && npm install -g npm@${npm_version} && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n# https://stackoverflow.com/questions/69692842/error-message-error0308010cdigital-envelope-routinesunsupported\nENV NODE_OPTIONS --openssl-legacy-provider\n\n# Install shfmt\n# https://github.com/mvdan/sh\n# Need to install golang\nARG go_version=1.17.1\nRUN curl -f https://dl.google.com/go/go${go_version}.linux-amd64.tar.gz > go.tar.gz \\\n    && tar -C /usr/local -xzf go.tar.gz \\\n    && GO111MODULE=on /usr/local/go/bin/go install mvdan.cc/sh/v3/cmd/shfmt@latest \\\n    && cp ~/go/bin/shfmt /usr/local/bin/shfmt \\\n    && rm go.tar.gz \\\n    && rm -rf /go \\\n    && rm -rf /usr/local/go/\n\n# Clean up\nRUN apt-get autoremove -y \\\n    && apt-get clean -y \\\n    && rm -rf /var/lib/apt/lists/*\n"
}