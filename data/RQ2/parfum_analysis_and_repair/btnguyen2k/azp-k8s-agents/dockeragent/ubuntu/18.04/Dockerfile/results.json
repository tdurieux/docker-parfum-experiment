{
  "startTime": 1674250268640,
  "endTime": 1674250269982,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 22,
        "columnStart": 29,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\n# To make it easier for build and release pipelines to run apt-get,\n# configure apt to not require confirmation (assume the -y argument by default)\nENV DEBIAN_FRONTEND=noninteractive\n\n# # Docker-in-Docker (ref https://github.com/docker-library/docker/blob/91bbc4f7b06c06020d811dafb2266bcd7cf6c06d/18.09/Dockerfile)\n# ARG DOCKER_CHANNEL=\"stable\"\n# ARG DOCKER_VERSION=\"19.03.9\"\n# ARG DOCKER_ARCH=\"x86_64\"\n\nRUN echo \"APT::Get::Assume-Yes \\\"true\\\";\" > /etc/apt/apt.conf.d/90assumeyes \\\r\n# Base components & node.js(+npm)\r\n        && apt-get update && apt-get install -y --no-install-recommends \\\r\n                ca-certificates \\\r\n                curl \\\r\n                jq \\\r\n                git \\\r\n                iputils-ping \\\r\n                libcurl4 \\\r\n                libicu60 \\\r\n                libunwind8 \\\r\n                netcat \\\r\n        # && curl -sL https://deb.nodesource.com/setup_12.x | bash - \\\r\n        # && apt-get install nodejs \\\r\n        # && echo \"Node.js & npm version\" \\\r\n        # && node -v && npm -v \\\r\n# set up nsswitch.conf for Go's \"netgo\" implementation (which Docker explicitly uses)\r\n# - https://github.com/docker/docker-ce/blob/v17.09.0-ce/components/engine/hack/make.sh#L149\r\n# - https://github.com/golang/go/blob/go1.9.1/src/net/conf.go#L194-L275\r\n# - docker run --rm debian:stretch grep '^hosts:' /etc/nsswitch.conf\r\n        # && if [ ! -e /etc/nsswitch.conf ]; then echo 'hosts: files dns' > /etc/nsswitch.conf; fi \\\r\n        # && if ! curl -sL \"https://download.docker.com/linux/static/${DOCKER_CHANNEL}/${DOCKER_ARCH}/docker-${DOCKER_VERSION}.tgz\" > docker.tgz; then \\\r\n\t# \techo >&2 \"error: failed to download 'docker-${DOCKER_VERSION}' from '${DOCKER_CHANNEL}' for '${DOCKER_ARCH}'\"; \\\r\n\t# \texit 1; \\\r\n\t# fi \\\r\n\t# && tar --extract --file docker.tgz --strip-components 1 --directory /usr/local/bin/ \\\r\n\t# && rm docker.tgz \\\r\n        # && echo \"Docker version\" \\\r\n\t# && docker --version \\\r\n        && apt-get autoremove -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /azp\n\nCOPY ./start.sh .\nRUN chmod +x start.sh\n\nCMD [\"./start.sh\"]\n"
}