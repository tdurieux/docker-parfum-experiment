{
  "startTime": 1674251943304,
  "endTime": 1674251944114,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 33
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "## Sample Dockerfile to package the whole application (backend and frontend) as a Docker image.\n# Sample build command:\n# docker build --rm -t exter .\n\nFROM node:12.22-alpine3.15 AS builder_fe\nRUN apk add --no-cache jq sed\nRUN mkdir /build\nCOPY . /build\nRUN cd /build \\\n    && export APP_NAME=`jq -r '.name' appinfo.json` \\\n    && export APP_SHORTNAME=`jq -r '.shortname' appinfo.json` \\\n    && export APP_INITIAL=`jq -r '.initial' appinfo.json` \\\n    && export APP_VERSION=`jq -r '.version' appinfo.json` \\\n    && export APP_DESC=`jq -r '.description' appinfo.json` \\\n    && cd /build/fe-gui \\\n    && rm -rf .env \\\n    && rm -rf dist node_modules \\\n    && sed -i s/#{pageTitle}/\"$APP_NAME v$APP_VERSION\"/g public/index.html \\\n    && sed -i s/#{appName}/\"$APP_NAME\"/g public/index.html \\\n    && sed -i s/#{appInitial}/\"$APP_INITIAL\"/g public/index.html \\\n    && sed -i s/#{appShortname}/\"$APP_SHORTNAME\"/g public/index.html \\\n    && sed -i s/#{appDescription}/\"$APP_DESC\"/g public/index.html \\\n    && sed -i s/#{appVersion}/\"$APP_VERSION\"/g public/index.html \\\n    && sed -i s/#{appName}/\"$APP_NAME\"/g src/config.json \\\n    && sed -i s/#{appInitial}/\"$APP_INITIAL\"/g src/config.json \\\n    && sed -i s/#{appShortname}/\"$APP_SHORTNAME\"/g src/config.json \\\n    && sed -i s/#{appDescription}/\"$APP_DESC\"/g src/config.json \\\n    && sed -i s/#{appVersion}/\"$APP_VERSION\"/g src/config.json \\\n    && npm install && npm run build && npm cache clean --force;\n\nFROM golang:1.17-alpine AS builder_be\nRUN apk add --no-cache git build-base jq sed\nRUN mkdir /build\nCOPY . /build\nRUN cd /build \\\n    && export APP_NAME=`jq -r '.name' appinfo.json` \\\n    && export APP_SHORTNAME=`jq -r '.shortname' appinfo.json` \\\n    && export APP_INITIAL=`jq -r '.initial' appinfo.json` \\\n    && export APP_VERSION=`jq -r '.version' appinfo.json` \\\n    && export APP_DESC=`jq -r '.description' appinfo.json` \\\n    && cd /build/be-api \\\n    && sed -i s/#{appName}/\"$APP_NAME\"/g config/application.conf \\\n    && sed -i s/#{appInitial}/\"$APP_INITIAL\"/g config/application.conf \\\n    && sed -i s/#{appShortname}/\"$APP_SHORTNAME\"/g config/application.conf \\\n    && sed -i s/#{appDescription}/\"$APP_DESC\"/g config/application.conf \\\n    && sed -i s/#{appVersion}/\"$APP_VERSION\"/g config/application.conf \\\n    && go build -o main\n\nFROM alpine:3.10\nLABEL maintainer=\"Thanh Nguyen <btnguyen2k@gmail.com>\"\nRUN mkdir -p /app/frontend\nCOPY --from=builder_be /build/be-api/main /app/main\nCOPY --from=builder_be /build/be-api/config /app/config\nCOPY --from=builder_fe /build/fe-gui/dist /app/frontend\nRUN apk add --no-cache -U tzdata bash ca-certificates \\\n    && update-ca-certificates \\\n    && cp /usr/share/zoneinfo/Asia/Ho_Chi_Minh /etc/localtime \\\n    && chmod 711 /app/main \\\n    && rm -rf /var/cache/apk/*\nWORKDIR /app\nEXPOSE 8000\nCMD [\"/app/main\"]\n#ENTRYPOINT /app/main\n"
}