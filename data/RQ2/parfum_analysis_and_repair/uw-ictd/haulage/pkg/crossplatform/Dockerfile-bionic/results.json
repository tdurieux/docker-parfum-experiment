{
  "startTime": 1674253723337,
  "endTime": 1674253723966,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 145
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 90
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 169
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:bionic\n\n# Add ubuntu ports repos and make ubuntu default repos architecture specific.\n# Ubuntu does the world the great service of hosting different architectures at\n# different domains, without specifying that their repos are architecture\n# specific in the sources list :/\nRUN mv /etc/apt/sources.list /etc/apt/sources.list.original\nCOPY ./pkg/crossplatform/cross-compile-sources-list-bionic /etc/apt/sources.list\n\n# Add required cross-compiler architectures\nRUN dpkg --add-architecture arm64\nRUN apt-get update\n\n# Install dependencies and cross compile toolchain\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes apt-utils && rm -rf /var/lib/apt/lists/*;\n# The dockerfile currently assumes an amd64 build machine.\nRUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes make git curl gcc-aarch64-linux-gnu gcc gettext-base libsystemd-dev libsystemd-dev:arm64 && rm -rf /var/lib/apt/lists/*;\n\n# Install the rust toolchain\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > sh.rustup.rs\n\nRUN sh sh.rustup.rs -y --quiet\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\nRUN rustup target add aarch64-unknown-linux-gnu\nRUN rustup target add x86_64-unknown-linux-gnu\n\nCOPY ./ /workspace\nCOPY ./pkg/crossplatform/docker-entrypoint.sh /workspace\n\nWORKDIR /workspace\n\nRUN cargo fetch\n\nENTRYPOINT [\"/usr/bin/env\", \"bash\", \"/workspace/docker-entrypoint.sh\", \"ubuntu18.04\", \"bionic\"]\n"
}