{
  "startTime": 1674249742211,
  "endTime": 1674249742929,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 145
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 145
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye\n\n# Add required cross-compiler architectures\nRUN dpkg --add-architecture arm64\nRUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install --yes make git curl gcc-aarch64-linux-gnu gcc gettext-base libsystemd-dev libsystemd-dev:arm64 && rm -rf /var/lib/apt/lists/*; # Install dependencies and cross compile toolchain\n# The dockerfile currently assumes an amd64 build machine.\n\n\n# Install the rust toolchain\nRUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > sh.rustup.rs\nRUN sh sh.rustup.rs -y --quiet\nENV PATH=\"/root/.cargo/bin:${PATH}\"\n\nRUN rustup target add aarch64-unknown-linux-gnu\nRUN rustup target add x86_64-unknown-linux-gnu\n\nCOPY ./ /workspace\nCOPY ./pkg/crossplatform/docker-entrypoint.sh /workspace\n\nWORKDIR /workspace\n\nRUN cargo fetch\n\nENTRYPOINT [\"/usr/bin/env\", \"bash\", \"/workspace/docker-entrypoint.sh\", \"debian11\", \"bullseye\"]\n"
}