{
  "startTime": 1674248677034,
  "endTime": 1674248677804,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 40,
        "columnEnd": 52
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILDER_IMG=mcr.microsoft.com/dotnet/sdk:6.0\nARG RUNNER_IMG=mcr.microsoft.com/dotnet/aspnet:6.0\nARG RUNTIME=linux-x64\n\nFROM $BUILDER_IMG AS builder\n\nWORKDIR /app\n\nARG RUNTIME\nRUN curl -f -sL https://deb.nodesource.com/setup_16.x | bash - \\\n && apt-get install -y --no-install-recommends nodejs \\\n && npm install -g yarn && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n\nCOPY ./src/Directory.Build.props ./src/*/*.csproj ./src/\nRUN for file in $(ls src/*.csproj); do mkdir -p ./${file%.*}/ && mv $file ./${file%.*}/; done\nRUN dotnet restore ./src/es-replicator -nowarn:msb3202,nu1503 -r $RUNTIME\n\nCOPY ./src/es-replicator/ClientApp/package.json ./src/es-replicator/ClientApp/\nCOPY ./src/es-replicator/ClientApp/yarn.lock ./src/es-replicator/ClientApp/\nRUN cd ./src/es-replicator/ClientApp && yarn install && yarn cache clean;\n\nFROM builder as publish\nARG RUNTIME\nCOPY ./src ./src\nRUN dotnet publish ./src/es-replicator -c Release -r $RUNTIME -clp:NoSummary --no-self-contained -o /app/publish\n\nFROM $RUNNER_IMG AS runner\n\nWORKDIR /app\nCOPY --from=publish /app/publish .\n\nENV ALLOWED_HOSTS \"*\"\nENV ASPNETCORE_URLS \"http://*:5000\"\n\nEXPOSE 5000\nENTRYPOINT [\"dotnet\", \"es-replicator.dll\"]\n"
}