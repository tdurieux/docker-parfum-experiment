{
  "startTime": 1674254023577,
  "endTime": 1674254024572,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 122
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "####### Dev Image ########\n# Note: Run `make dev-image` from the root directory of the repo.\n#\n# This is an image to facilitate development of the agent.  It installs all of\n# the build tools for building collectd and the go agent, along with some other\n# useful utilities.  The agent image is copied from the final-image stage to\n# the /bundle dir in here and the SIGNALFX_BUNDLE_DIR is set to point to that.\nFROM ubuntu:18.04\n\nRUN apt update && \\\n    apt install --no-install-recommends -y \\\n      build-essential \\\n      curl \\\n      git \\\n      inotify-tools \\\n      iproute2 \\\n      jq \\\n      net-tools \\\n      python3.8 \\\n      python3.8-dev \\\n      python3.8-distutils \\\n      socat \\\n      sudo \\\n      vim \\\n      wget && rm -rf /var/lib/apt/lists/*;\n\nENV PATH=$PATH:/usr/local/go/bin:/go/bin GOPATH=/go\nENV SIGNALFX_BUNDLE_DIR=/bundle \\\n    TEST_SERVICES_DIR=/usr/src/signalfx-agent/test-services \\\n    AGENT_BIN=/usr/src/signalfx-agent/signalfx-agent \\\n    PYTHONPATH=/usr/src/signalfx-agent/python \\\n    AGENT_VERSION=latest \\\n    BUILD_TIME=2017-01-25T13:17:17-0500 \\\n    GOOS=linux \\\n    LC_ALL=C.UTF-8 \\\n    LANG=C.UTF-8\n\nRUN rm -f /usr/bin/python3 && \\\n    ln -s /usr/bin/python3.8 /usr/bin/python && \\\n    ln -s /usr/bin/python3.8 /usr/bin/python3\n\nRUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \\\n    python get-pip.py pip==20.0.2 && \\\n    rm get-pip.py\n\nRUN curl -fsSL get.docker.com -o /tmp/get-docker.sh &&\\\n    sh /tmp/get-docker.sh\n\nARG TARGET_ARCH=amd64\n\nRUN wget -O /usr/bin/gomplate https://github.com/hairyhenderson/gomplate/releases/download/v3.4.0/gomplate_linux-${TARGET_ARCH} &&\\\n    chmod +x /usr/bin/gomplate\n\n# Install helm\nARG HELM_VERSION=v3.0.0\nWORKDIR /tmp\nRUN wget -O helm.tar.gz https://get.helm.sh/helm-${HELM_VERSION}-linux-${TARGET_ARCH}.tar.gz && \\\n    tar -zxvf /tmp/helm.tar.gz && \\\n    mv linux-${TARGET_ARCH}/helm /usr/local/bin/helm && \\\n    chmod a+x /usr/local/bin/helm && rm /tmp/helm.tar.gz\n\n# Install kubectl\nARG KUBECTL_VERSION=v1.14.1\nRUN cd /tmp && \\\n    curl -f -LO https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/${TARGET_ARCH}/kubectl && \\\n    chmod +x ./kubectl && \\\n    mv ./kubectl /usr/bin/kubectl\n\n# Get integration test deps in here\nRUN pip3 install --no-cache-dir ipython ipdb\nCOPY tests/requirements.txt /tmp/\nRUN pip3 install --no-cache-dir -r /tmp/requirements.txt\nRUN ln -s /usr/bin/pip3 /usr/bin/pip\n\nWORKDIR /usr/src/signalfx-agent\n\nCOPY --from=signalfx-agent-dev-cache:stage-final-image /bin/signalfx-agent ./signalfx-agent\nCOPY --from=signalfx-agent-dev-cache:stage-final-image / /bundle/\nRUN /bundle/bin/patch-interpreter /bundle\n\nCOPY --from=signalfx-agent-dev-cache:stage-agent-builder /usr/local/go /usr/local/go\nCOPY --from=signalfx-agent-dev-cache:stage-agent-builder /go $GOPATH\n\nRUN go install golang.org/x/lint/golint@latest &&\\\n    if [ `uname -m` != \"aarch64\" ]; then go install github.com/go-delve/delve/cmd/dlv@latest; fi &&\\\n    go install github.com/tebeka/go2xunit@latest &&\\\n    curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s -- -b $(go env GOPATH)/bin v1.23.8\n\nCOPY ./ ./\n\nCMD [\"/bin/bash\"]\n"
}