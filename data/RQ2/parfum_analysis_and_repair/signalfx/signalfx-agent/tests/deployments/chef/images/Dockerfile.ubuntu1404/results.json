{
  "startTime": 1674252243529,
  "endTime": 1674252244092,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 72
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:14.04\n\n# See https://github.com/tianon/dockerfiles\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN rm -f /etc/apt/sources.list.d/ubuntu-esm-infra-trusty.list && \\\n    apt update && \\\n    apt install --no-install-recommends -y ca-certificates procps apt-transport-https curl gnupg && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/cookbooks\nRUN curl -f -Lo windows.tar.gz https://supermarket.chef.io/cookbooks/windows/versions/4.3.4/download && \\\n    tar -xzf windows.tar.gz && rm windows.tar.gz\n\nARG CHEF_INSTALLER_ARGS\nRUN curl -f -L https://omnitruck.chef.io/install.sh | bash -s -- $CHEF_INSTALLER_ARGS\n\nRUN rm /usr/sbin/policy-rc.d; \\\n\trm /sbin/initctl; dpkg-divert --rename --remove /sbin/initctl\n\nRUN /usr/sbin/update-rc.d -f ondemand remove; \\\n\tfor f in \\\n\t\t/etc/init/u*.conf \\\n\t\t/etc/init/mounted-dev.conf \\\n\t\t/etc/init/mounted-proc.conf \\\n\t\t/etc/init/mounted-run.conf \\\n\t\t/etc/init/mounted-tmp.conf \\\n\t\t/etc/init/mounted-var.conf \\\n\t\t/etc/init/hostname.conf \\\n\t\t/etc/init/networking.conf \\\n\t\t/etc/init/tty*.conf \\\n\t\t/etc/init/plymouth*.conf \\\n\t\t/etc/init/hwclock*.conf \\\n\t\t/etc/init/module*.conf\\\n\t; do \\\n\t\tdpkg-divert --local --rename --add \"$f\"; \\\n\tdone; \\\n\techo '# /lib/init/fstab: cleared out for bare-bones Docker' > /lib/init/fstab\n\nCOPY tests/packaging/images/socat /bin/socat\n\n# Insert our fake certs to the system bundle so they are trusted\nCOPY tests/packaging/images/certs/*.signalfx.com.* /\nRUN cat /*.cert >> /etc/ssl/certs/ca-certificates.crt\n\nCOPY tests/packaging/images/init-fake.conf /etc/init/fake-container-events.conf\n\nCOPY deployments/chef /opt/cookbooks/signalfx_agent\n\nWORKDIR /opt\n\nCMD [\"/sbin/init\", \"-v\"]\n"
}