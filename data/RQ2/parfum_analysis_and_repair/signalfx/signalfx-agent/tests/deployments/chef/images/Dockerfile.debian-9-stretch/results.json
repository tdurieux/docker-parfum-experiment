{
  "startTime": 1674252173899,
  "endTime": 1674252175047,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 97
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 48
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stretch-slim\n\nENV DEBIAN_FRONTEND noninteractive\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yq ca-certificates procps systemd wget libcap2-bin apt-transport-https curl gnupg && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/cookbooks\nRUN curl -f -Lo windows.tar.gz https://supermarket.chef.io/cookbooks/windows/versions/4.3.4/download && \\\n    tar -xzf windows.tar.gz && rm windows.tar.gz\n\nARG CHEF_INSTALLER_ARGS\nRUN curl -f -L https://omnitruck.chef.io/install.sh | bash -s -- $CHEF_INSTALLER_ARGS\n\nCOPY tests/packaging/images/socat /bin/socat\n\n# Insert our fake certs to the system bundle so they are trusted\nCOPY tests/packaging/images/certs/*.signalfx.com.* /\nRUN cat /*.cert >> /etc/ssl/certs/ca-certificates.crt\n\nENV container docker\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i = \\   \n    \"systemd-tmpfiles-setup.service\" ] || rm -f $i; done); \\                    \n    rm -f /lib/systemd/system/multi-user.target.wants/*;\\ \n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/anaconda.target.wants/*;\n\n# Keep it from wiping our scratch dir in /tmp/scratch\nRUN rm -f /usr/lib/tmpfiles.d/tmp.conf;\n\nRUN systemctl set-default multi-user.target\nENV init /lib/systemd/systemd\n\nCOPY deployments/chef /opt/cookbooks/signalfx_agent\n\nWORKDIR /opt\n\nVOLUME [ \"/sys/fs/cgroup\" ]\n\nENTRYPOINT [\"/lib/systemd/systemd\"]\n"
}