{
  "startTime": 1674219676652,
  "endTime": 1674219677705,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 111
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 135
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:22.04\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get upgrade -y -o DPkg::Options::=--force-confold\nRUN apt-get install --no-install-recommends -y software-properties-common ca-certificates wget curl apt-transport-https python3-pip vim && rm -rf /var/lib/apt/lists/*;\n\n# salt packages not yet supported for jammy, so install from pypi instead.\n#RUN curl -L https://repo.saltproject.io/py3/ubuntu/22.04/amd64/latest/SALTSTACK-GPG-KEY.pub | apt-key add -\n#RUN echo 'deb http://repo.saltproject.io/py3/ubuntu/22.04/amd64/latest focal main' > /etc/apt/sources.list.d/saltstack.list && \\\n#    apt-get update && \\\n#    apt-get install -y salt-minion\nRUN pip install --no-cache-dir 'Jinja2<3.1' salt\n\nENV container docker\n\nRUN rm -f /lib/systemd/system/multi-user.target.wants/* \\\n    /etc/systemd/system/*.wants/* \\\n    /lib/systemd/system/local-fs.target.wants/* \\\n    /lib/systemd/system/sockets.target.wants/*udev* \\\n    /lib/systemd/system/sockets.target.wants/*initctl* \\\n    /lib/systemd/system/systemd-update-utmp*\n\nRUN systemctl set-default multi-user.target\nENV init /lib/systemd/systemd\n\nCOPY internal/buildscripts/packaging/tests/deployments/salt/minion /etc/salt/minion\nCOPY deployments/salt/splunk-otel-collector /srv/salt/splunk-otel-collector\nCOPY deployments/salt/templates /srv/salt/templates\nCOPY internal/buildscripts/packaging/tests/deployments/salt/top.sls /srv/pillar/top.sls\nCOPY internal/buildscripts/packaging/tests/deployments/salt/top.sls /srv/salt/top.sls\n\nVOLUME [ \"/sys/fs/cgroup\" ]\n\nENTRYPOINT [\"/lib/systemd/systemd\"]\n"
}