{
  "startTime": 1674219515027,
  "endTime": 1674219516196,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 142
      }
    }
  ],
  "repairedDockerfile": "FROM debian:stretch\n\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get upgrade -y -o DPkg::Options::=--force-confold\nRUN apt-get install --no-install-recommends -y software-properties-common ca-certificates wget curl apt-transport-https python3-pip vim procps && rm -rf /var/lib/apt/lists/*;\n\nRUN curl -f -L https://repo.saltproject.io/py3/debian/9/amd64/latest/SALTSTACK-GPG-KEY.pub | apt-key add -\nRUN echo 'deb http://repo.saltproject.io/py3/debian/9/amd64/latest/ stretch main' > /etc/apt/sources.list.d/saltstack.list && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y salt-minion && rm -rf /var/lib/apt/lists/*;\n\nENV container docker\n\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i = \\\n    \"systemd-tmpfiles-setup.service\" ] || rm -f $i; done); \\\n    rm -f /lib/systemd/system/multi-user.target.wants/*;\\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/anaconda.target.wants/*;\n\nRUN systemctl set-default multi-user.target\nENV init /lib/systemd/systemd\n\nCOPY internal/buildscripts/packaging/tests/deployments/salt/minion /etc/salt/minion\nCOPY deployments/salt/splunk-otel-collector /srv/salt/splunk-otel-collector\nCOPY deployments/salt/templates /srv/salt/templates\nCOPY internal/buildscripts/packaging/tests/deployments/salt/top.sls /srv/pillar/top.sls\nCOPY internal/buildscripts/packaging/tests/deployments/salt/top.sls /srv/salt/top.sls\n\nVOLUME [ \"/sys/fs/cgroup\" ]\n\nENTRYPOINT [\"/lib/systemd/systemd\"]\n"
}