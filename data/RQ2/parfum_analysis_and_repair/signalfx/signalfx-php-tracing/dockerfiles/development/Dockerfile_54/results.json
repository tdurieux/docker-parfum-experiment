{
  "startTime": 1674251792006,
  "endTime": 1674251792941,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 37,
        "columnEnd": 101
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 7,
        "columnEnd": 102
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 104,
        "lineEnd": 104,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 101,
        "lineEnd": 101,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 59
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:14.04\n\nUSER root\n\nRUN apt-get update && apt-get upgrade -y \\\n    && apt-get -y --no-install-recommends install build-essential curl \\\n    libxml2-dev \\\n    re2c libbz2-dev \\\n    pkg-config libssl-dev \\\n    libcurl4-openssl-dev \\\n    libjpeg-dev \\\n    libmemcached-dev \\\n    libpng-dev \\\n    libxpm-dev \\\n    libmysqlclient-dev \\\n    libpq-dev \\\n    libicu-dev \\\n    libfreetype6-dev \\\n    libldap2-dev \\\n    libxslt-dev \\\n    libldb-dev \\\n    libt1-dev \\\n    wget \\\n    autoconf \\\n    && ln -s x86_64-linux-gnu/curl /usr/include/curl && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get install --no-install-recommends -y libgmp-dev libmcrypt-dev && ln -s /usr/include/x86_64-linux-gnu/gmp.h /usr/include/gmp.h && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y valgrind vim && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p /src/php;( cd /src/php; curl -f -L https://github.com/php/php-src/archive/php-5.4.45.tar.gz | tar --strip-component=1 -zx)\nWORKDIR /src/php\n\nRUN ./buildconf --force\n\nRUN curl -f -L 'https://launchpadlibrarian.net/96013406/libbison-dev_2.5.dfsg-2.1_amd64.deb' -o /tmp/libbison-dev.deb \\\n    && curl -f -L 'https://launchpadlibrarian.net/35068736/bison_2.4.1.dfsg-3_amd64.deb' -o /tmp/bison.deb \\\n    && dpkg -i /tmp/*.deb && rm /tmp/*.deb\n\nRUN ln -s /usr/lib/x86_64-linux-gnu/libXpm.so /usr/lib/ && ln -s /usr/lib/x86_64-linux-gnu/libXpm.a /usr/lib/\n\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    --enable-mbstring \\\n    --enable-zip \\\n    --enable-bcmath \\\n    --enable-pcntl \\\n    --enable-ftp \\\n    --enable-exif \\\n    --enable-calendar \\\n    --enable-sysvmsg \\\n    --enable-sysvsem \\\n    --enable-sysvshm \\\n    --enable-wddx \\\n    --with-mysqli --with-mysql --with-pdo-mysql --enable-opcache --enable-mysqlnd \\\n    --with-config-file-scan-dir=/usr/local/etc/php/conf.d \\\n    --with-config-file-path=/usr/local/etc/php \\\n    --with-curl \\\n    --with-mcrypt \\\n    --with-t1lib=/usr \\\n    --with-iconv \\\n    --with-gmp \\\n    --with-gd \\\n    --with-jpeg-dir=/usr \\\n    --with-webp-dir=/usr \\\n    --with-png-dir=/usr \\\n    --with-zlib-dir=/usr \\\n    --with-xpm-dir=/usr \\\n    --with-freetype-dir=/usr \\\n    --with-t1lib=/usr \\\n    --enable-gd-native-ttf \\\n    --enable-gd-jis-conv \\\n    --with-openssl \\\n    --with-zlib=/usr \\\n    --with-bz2=/usr \\\n    --with-kerberos=shared,/usr/lib \\\n    --without-pear \\\n    --disable-nls \\\n    --enable-debug\n\nRUN make -j 2\n\nRUN make install\n\nRUN mkdir -p /usr/local/etc/php/conf.d\n\nRUN php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\" \\\n    && php -r \"if (hash_file('sha384', 'composer-setup.php') === 'a5c698ffe4b8e849a443b120cd5ba38043260d5c4023dbf93e1558871f1f07f58274fc6f4c93bcfd858c6bd0775cd8d1') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"\\\n    && php composer-setup.php && php -r \"unlink('composer-setup.php');\"\\\n    && mv composer.phar /usr/local/bin/composer\n\n# Creating CircleCi user\n# See: https://github.com/CircleCI-Public/circleci-dockerfiles/blob/master/php/images/5.6.36-cli-stretch/Dockerfile#L73\nRUN groupadd --gid 3434 circleci \\\n    && useradd --uid 3434 --gid circleci --shell /bin/bash --create-home circleci \\\n    && echo 'circleci ALL=NOPASSWD: ALL' >> /etc/sudoers.d/50-circleci \\\n    && echo 'Defaults    env_keep += \"DEBIAN_FRONTEND\"' >> /etc/sudoers.d/env_keep\n\n# PECL not working, so installing from source\n# RUN echo \"no --disable-memcached-sasl\" | pecl install memcached-2.2.0\nRUN mkdir -p /php-build/memcached\nWORKDIR /php-build/memcached\nRUN wget -O memcached-2.2.0.tar.gz https://github.com/php-memcached-dev/php-memcached/archive/2.2.0.tar.gz\nRUN tar -xf memcached-2.2.0.tar.gz && rm memcached-2.2.0.tar.gz\nWORKDIR /php-build/memcached/php-memcached-2.2.0\nRUN phpize\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-memcached-sasl\nRUN make\n#\n## Not required for now\n## RUN echo \"no\" | pecl install mongo\n\nRUN wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz \\\n    && rm dockerize-linux-amd64-v0.6.1.tar.gz\n\nCOPY 5.4.ini /usr/local/etc/php/conf.d/88-5.4.ini\nCOPY dd-test-env.ini /usr/local/etc/php/conf.d/dd-test-env.ini\n\nUSER circleci\n\nWORKDIR /home/circleci/app\n\nENTRYPOINT [\"/bin/bash\", \"-c\"]\n\nCMD [\"bash\"]\n"
}