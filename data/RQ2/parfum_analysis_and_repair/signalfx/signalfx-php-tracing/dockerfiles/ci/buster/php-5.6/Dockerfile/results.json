{
  "startTime": 1674252219953,
  "endTime": 1674252221328,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 61
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 31,
        "columnStart": 9,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM datadog/dd-trace-ci:buster AS base\n\nARG phpVersion\nENV PHP_INSTALL_DIR_DEBUG_ZTS=${PHP_INSTALL_DIR}/debug-zts\nENV PHP_INSTALL_DIR_DEBUG_NTS=${PHP_INSTALL_DIR}/debug\nENV PHP_INSTALL_DIR_NTS=${PHP_INSTALL_DIR}/nts\nENV PHP_VERSION=${phpVersion}\n\n# Curl path workaround (PHP 5 was before pkg-config was used)\nRUN set -eux; \\\n    sudo ln -sf /usr/include/x86_64-linux-gnu/curl /usr/include/curl; \\\n    sudo ln -sf /usr/lib/x86_64-linux-gnu/libcurl.a /usr/lib/libcurl.a; \\\n    savedAptMark=\"$(apt-mark showmanual)\"; \\\n    sudo apt-mark auto '.*' > /dev/null; \\\n    sudo apt-mark manual $savedAptMark > /dev/null; \\\n    sudo apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false; \\\n    sudo apt-get remove -y libssl-dev; \\\n    { \\\n        echo deb http://httpredir.debian.org/debian jessie main ;\\\n        echo deb-src http://httpredir.debian.org/debian jessie main ;\\\n        echo ;\\\n        echo deb http://security.debian.org/ jessie/updates main ;\\\n        echo deb-src http://security.debian.org/ jessie/updates main ;\\\n    } | sudo tee /etc/apt/sources.list.d/jessie.list ; \\\n    { \\\n        echo Package: openssl libssl-dev libssl-doc;\\\n        echo Pin: release a=oldoldstable ;\\\n        echo Pin-Priority: 600 ;\\\n    } | sudo tee /etc/apt/preferences.d/openssl; \\\n    sudo apt-get update; \\\n    sudo apt-get install -y --no-install-recommends \\\n        openssl libssl-dev libssl-doc libcurl4-nss-dev; rm -rf /var/lib/apt/lists/*;\n\nFROM base as build\nARG phpTarGzUrl\nARG phpSha256Hash\nRUN set -eux; \\\n    curl -fsSL -o /tmp/php.tar.gz \"${phpTarGzUrl}\"; \\\n    ( echo \"${phpSha256Hash}  /tmp/php.tar.gz\" | sha256sum -c -) \\\n    tar xf /tmp/php.tar.gz -C \"${PHP_SRC_DIR}\" --strip-components=1; \\\n    rm -f /tmp/php.tar.gz; \\\n    cd ${PHP_SRC_DIR}; \\\n    ./buildconf --force;\nCOPY configure.sh /home/circleci\n\nFROM build as php-debug-zts\nRUN set -eux; \\\n    mkdir -p /tmp/build-php && cd /tmp/build-php; \\\n    /home/circleci/configure.sh \\\n        --enable-debug \\\n        --enable-maintainer-zts \\\n        --prefix=${PHP_INSTALL_DIR_DEBUG_ZTS} \\\n        --with-config-file-path=${PHP_INSTALL_DIR_DEBUG_ZTS} \\\n        --with-config-file-scan-dir=${PHP_INSTALL_DIR_DEBUG_ZTS}/conf.d; \\\n    make -j \"$((`nproc`+1))\"; \\\n    make install; \\\n    mkdir -p ${PHP_INSTALL_DIR_DEBUG_ZTS}/conf.d;\n\nFROM build as php-debug\nRUN set -eux; \\\n    mkdir -p /tmp/build-php && cd /tmp/build-php; \\\n    /home/circleci/configure.sh \\\n        --enable-debug \\\n        --prefix=${PHP_INSTALL_DIR_DEBUG_NTS} \\\n        --with-config-file-path=${PHP_INSTALL_DIR_DEBUG_NTS} \\\n        --with-config-file-scan-dir=${PHP_INSTALL_DIR_DEBUG_NTS}/conf.d; \\\n    make -j \"$((`nproc`+1))\"; \\\n    make install; \\\n    mkdir -p ${PHP_INSTALL_DIR_DEBUG_NTS}/conf.d;\n\nFROM build as php-nts\nRUN set -eux; \\\n    mkdir -p /tmp/build-php && cd /tmp/build-php; \\\n    /home/circleci/configure.sh \\\n        --prefix=${PHP_INSTALL_DIR_NTS} \\\n        --with-config-file-path=${PHP_INSTALL_DIR_NTS} \\\n        --with-config-file-scan-dir=${PHP_INSTALL_DIR_NTS}/conf.d; \\\n    make -j \"$((`nproc`+1))\"; \\\n    make install; \\\n    mkdir -p ${PHP_INSTALL_DIR_NTS}/conf.d;\n\nFROM base as final\nCOPY --chown=circleci:circleci --from=build $PHP_SRC_DIR $PHP_SRC_DIR\nCOPY --chown=circleci:circleci --from=php-debug-zts $PHP_INSTALL_DIR_DEBUG_ZTS $PHP_INSTALL_DIR_DEBUG_ZTS\nCOPY --chown=circleci:circleci --from=php-debug $PHP_INSTALL_DIR_DEBUG_NTS $PHP_INSTALL_DIR_DEBUG_NTS\nCOPY --chown=circleci:circleci --from=php-nts $PHP_INSTALL_DIR_NTS $PHP_INSTALL_DIR_NTS\n\nRUN set -eux; \\\n    for phpVer in $(ls ${PHP_INSTALL_DIR}); \\\n    do \\\n        # Set default INI settings\n        sed 's/;date.timezone =/date.timezone = UTC/' <${PHP_SRC_DIR}/php.ini-development >${PHP_INSTALL_DIR}/${phpVer}/php.ini; \\\n        \\\n        echo \"Install exts for PHP $phpVer...\"; \\\n        switch-php ${phpVer}; \\\n        pecl channel-update pecl.php.net; \\\n        iniDir=$(php -i | awk -F\"=> \" '/Scan this dir for additional .ini files/ {print $2}'); \\\n        \\\n        yes 'no' | pecl install memcached-2.2.0; echo \"extension=memcached.so\" >> ${iniDir}/memcached.ini; \\\n        pecl install mongo; echo \"extension=mongo.so\" >> ${iniDir}/mongo.ini; \\\n        # Xdebug is disabled by default\n        pecl install xdebug-2.5.5; \\\n    done;\n\nRUN set -eux; \\\n# Set the default PHP version\n    switch-php debug;\n\n# Install Composer\nCOPY --from=composer:1 /usr/bin/composer /usr/local/bin/composer\n\nCOPY welcome /etc/motd\n\nCMD [\"php-fpm\", \"-F\"]\n"
}