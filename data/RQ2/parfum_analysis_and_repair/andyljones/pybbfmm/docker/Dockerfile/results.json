{
  "startTime": 1674248112319,
  "endTime": 1674248113253,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 99
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 59
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 73,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 65
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedDockerfile": "# Can't upgrade to 10.2 until PyTorch supports it (1.5?)\nFROM nvidia/cuda:10.1-cudnn7-devel-ubuntu18.04\n# Grab tini so that Jupyter doesn't spray zombies everywhere\nADD https://github.com/krallin/tini/releases/download/v0.18.0/tini /usr/bin/tini\nRUN apt-get update && \\\n    # There's something weird going on with this particular image and fetching this particular library\n    # Installing it separately first works; installing it implicitly with all the other deps below breaks\n    # with a 400 Bad Request error. Might be transient.\n    apt-get install -y --no-install-recommends \\\n        # Needed for conda\n        curl ca-certificates bzip2 procps \\ \n        # Needed for sanity\n        neovim gdb wget man-db build-essential \\\n        # libzmq as installed by nodejs seems to work with clang when it doesn't work with gcc\n        clang \\\n        # Needed for git installs\n        git ssh-client \\\n        # Needed for nsight remotes\n        openssh-server \\\n        # Needed for video output\n        python-dev pkg-config libavformat-dev libavcodec-dev libavdevice-dev libavutil-dev libswscale-dev \\\n        libswresample-dev libavfilter-dev && \\\n    # Set up tini\n    chmod +x /usr/bin/tini && rm -rf /var/lib/apt/lists/*;\nENV CC /usr/bin/clang\n\n# Set up git\nRUN git config --global user.name \"Andrew Jones\" && \\\n    git config --global user.email \"andyjones.ed@gmail.com\"\n\n\n# Set up Miniconda\nRUN curl -f -o ~/miniconda.sh -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \\\n    chmod +x ~/miniconda.sh && \\\n    ~/miniconda.sh -b -p /opt/conda && \\\n    rm ~/miniconda.sh && \\\n    /opt/conda/bin/conda clean -ya\nENV PATH /opt/conda/bin:$PATH\n\n# Install things that tend to work better when installed from conda\nRUN conda install -y numpy pytorch torchvision pandas -c pytorch && \\\n    conda clean -ya && \\\n    # Install Jupyter 7.5 because 7.6.1 has a bunch of lag with autoreload\n    pip install --no-cache-dir scipy numba psutil jupyter tqdm seaborn matplotlib wurlitzer ipython==7.5 flake8 sphinx && \\\n    # av>6.2 requires ffmpeg 4.0, which isn't available in ubuntu's default repos.\n    pip install --no-cache-dir av==6.2\n\n# Install ijavascript\nRUN curl -f -sL https://deb.nodesource.com/setup_13.x | bash - && \\\n    apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;\nENV PATH $PATH:/usr/share/npm/node_modules/bin\nRUN npm install -g --unsafe-perm ijavascript && \\\n    ijsinstall --install=global && npm cache clean --force;\n\n# Install my jupyter workflow extension frontends\nRUN pip install --no-cache-dir jupyter_contrib_nbextensions && \\\n    jupyter contrib nbextension install --user && \\\n    cd / && \\\n    git clone https://github.com/andyljones/noterminal && \\\n    cd noterminal && \\\n    jupyter nbextension install noterminal && \\\n    jupyter nbextension enable noterminal/main && \\\n    cd / && \\\n    git clone https://github.com/andyljones/stripcommon && \\\n    cd stripcommon && \\\n    jupyter nbextension install stripcommon && \\\n    jupyter nbextension enable stripcommon/main && \\\n    # This enables autoscroll, but I'm still unsure how to set the default line limit\n    jupyter nbextension enable autoscroll/main\n\n# Install my workflow backends\nRUN pip install --no-cache-dir git+https://github.com/andyljones/aljpy.git && \\\n    pip install --no-cache-dir git+https://github.com/andyljones/modulepickle && \\\n    pip install --no-cache-dir git+https://github.com/andyljones/snakeviz@custom && \\\n    pip install --no-cache-dir git+https://github.com/andyljones/noterminal && \\\n    pip install --no-cache-dir git+https://github.com/andyljones/pytorch_memlab && \\\n    rm -rf ~/.cache\n\n# Copy the Jupyter config into place.\nADD .jupyter /root/.jupyter\nADD .ipython /root/.ipython\n\n# Set up the entrypoint script\nADD run.sh /usr/bin/\n\nRUN mkdir -p /code\nWORKDIR /code\n\nENTRYPOINT [\"tini\", \"--\", \"run.sh\"]\n"
}