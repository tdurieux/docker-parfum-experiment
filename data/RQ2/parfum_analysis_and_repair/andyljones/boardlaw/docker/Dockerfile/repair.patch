diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/andyljones/boardlaw/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/andyljones/boardlaw/docker/Dockerfile/repaired.Dockerfile
index e2e60ab..cd1366b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/andyljones/boardlaw/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/andyljones/boardlaw/docker/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,5 @@
-# CUDA image is about 10GB 
-# torch install is another 4GB: 2.8GB for Torch itself, 1.2GB for the pip cache 
+# CUDA image is about 10GB
+# torch install is another 4GB: 2.8GB for Torch itself, 1.2GB for the pip cache
 # openspiel install is another 5GB: 1.4GB for the pip cache, 1.5GB for Tensorflow, 1.5GB for a torch reinstall?
 
 # Build image
@@ -12,19 +12,19 @@ RUN apt-get update && \
         # Needed for profiling
         nsight-compute-2020.2.1 nsight-systems-2020.3.4 \
         # Needed for vast work
-        openssh-server rsync less
+        openssh-server rsync less && rm -rf /var/lib/apt/lists/*;
 
 # Set up conda
-RUN curl -o ~/miniconda.sh -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
+RUN curl -f -o ~/miniconda.sh -O https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p/opt/conda && \
-    rm ~/miniconda.sh 
+    rm ~/miniconda.sh
 ENV PATH /opt/conda/bin:/opt/nvidia/nsight-compute/2020.2.1/:/opt/nvidia/nsight-systems/2020.3.4/bin/:$PATH
 
 # Set up SSH server
 ADD boardlaw_rsa.pub /root/.ssh/boardlaw_rsa.pub
 ADD sshd_config /etc/ssh/
-RUN mkdir -p ~/.ssh && cat ~/.ssh/boardlaw_rsa.pub > ~/.ssh/authorized_keys 
+RUN mkdir -p ~/.ssh && cat ~/.ssh/boardlaw_rsa.pub > ~/.ssh/authorized_keys
 EXPOSE 22 36022
 
 WORKDIR /code
@@ -34,10 +34,10 @@ FROM build AS dev
 
 # Install the Python packages I usually use
 RUN apt-get install -y --no-install-recommends \
-        # Needed for sanity
+
         neovim gdb wget man-db tree silversearcher-ag build-essential htop \
-        # Needed for git installs
-        git ssh-client 
+
+        git ssh-client && rm -rf /var/lib/apt/lists/*;
 
 # Grab tini so that Jupyter doesn't spray zombies everywhere
 ADD https://github.com/krallin/tini/releases/download/v0.18.0/tini /usr/bin/tini
@@ -48,7 +48,7 @@ RUN git config --global user.name "Andrew Jones" && \
     git config --global user.email "andyjones.ed@gmail.com"
 
 # Install the Python packages I usually use
-# Install Jupyter 7.5 because 7.6.1 has a bunch of lag with autoreload 
+# Install Jupyter 7.5 because 7.6.1 has a bunch of lag with autoreload
 RUN pip install --no-cache-dir torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio===0.7.2 -f https://download.pytorch.org/whl/torch_stable.html
 RUN pip install --no-cache-dir \
         # Core reqs
@@ -58,12 +58,12 @@ RUN pip install --no-cache-dir \
         # Docs
         sphinx \
         # MoHex/OpenSpiel dep
-        cmake 
+        cmake
 
 # Geotorch
 RUN pip install --no-cache-dir git+https://github.com/Lezcano/geotorch/
 
-# Copy the Jupyter config into place. 
+# Copy the Jupyter config into place.
 ADD .jupyter /root/.jupyter
 ADD .ipython /root/.ipython
 
@@ -75,7 +75,7 @@ RUN pip install --no-cache-dir git+https://github.com/andyljones/aljpy.git && \
     pip install --no-cache-dir git+https://github.com/andyljones/pytorch_memlab && \
     rm -rf ~/.cache
 
-# Install my frontend Jupyter extensions 
+# Install my frontend Jupyter extensions
 RUN pip install --no-cache-dir jupyter_contrib_nbextensions && \ 
     jupyter contrib nbextension install --user && \
     cd /root && mkdir nbextensions && cd nbextensions && \
@@ -93,7 +93,7 @@ RUN pip install --no-cache-dir jupyter_contrib_nbextensions && \
     cd stripcommon && \
     jupyter nbextension install stripcommon && \
     jupyter nbextension enable stripcommon/main && \
-    jupyter nbextension enable autoscroll/main 
+    jupyter nbextension enable autoscroll/main
 
 # OpenSpiel setup. +5GB, so gonna comment it out for now
 # RUN pip install --no-cache-dir cmake && \
@@ -113,14 +113,14 @@ RUN DEBIAN_FRONTEND=noninteractive TZ=Europe/London \
     cd mohex/build && \
     cmake ../ -DCMAKE_C_COMPILER=gcc-7 -DCMAKE_CXX_COMPILER=g++-7 && \
     make -j4 && \
-    ln -s /mohex/build/src/mohex/mohex /bin/mohex
+    ln -s /mohex/build/src/mohex/mohex /bin/mohex && rm -rf /var/lib/apt/lists/*;
 
-# Something upstream of here breaks Jupyter. 
+# Something upstream of here breaks Jupyter.
 RUN pip install --no-cache-dir --upgrade ipython
 
 # Only commit the input cells of notebooks
 # https://stackoverflow.com/questions/18734739/using-ipython-notebooks-under-version-control
-RUN curl https://raw.githubusercontent.com/toobaz/ipynb_output_filter/master/ipynb_output_filter.py > /bin/ipynb_output_filter.py && \
+RUN curl -f https://raw.githubusercontent.com/toobaz/ipynb_output_filter/master/ipynb_output_filter.py > /bin/ipynb_output_filter.py && \
     echo "*.ipynb   filter=ipynb_output_filter" > /root/.gitattributes && \
     git config --global core.attributesfile /root/.gitattributes && \
     git config --global filter.ipynb_output_filter.clean "python /bin/ipynb_output_filter.py" && \
@@ -131,7 +131,7 @@ RUN cd /usr/bin/ && \
     wget https://raw.githubusercontent.com/vast-ai/vast-python/master/vast.py -O vast && \
     chmod +x vast
 
-# Set up GCP SDK. You'll need to run 
+# Set up GCP SDK. You'll need to run
 # `gcloud init`
 # `gcloud auth application-default login`
 # RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | \