{
  "startTime": 1674251294470,
  "endTime": 1674251295620,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM laristra/flecsi-third-party:fedora\n\nARG MPI\nARG COVERAGE\nARG SONARQUBE\nARG SONARQUBE_TOKEN\nARG SONARQUBE_GITHUB_TOKEN\nARG CC\nARG CXX\nARG CXXFLAGS\n\n#for coverage\nARG CI\nARG TRAVIS\nARG TRAVIS_BRANCH\nARG TRAVIS_JOB_NUMBER\nARG TRAVIS_PULL_REQUEST\nARG TRAVIS_JOB_ID\nARG TRAVIS_TAG\nARG TRAVIS_REPO_SLUG\nARG TRAVIS_COMMIT\nARG TRAVIS_OS_NAME\n\nRUN git clone --recursive https://github.com/laristra/flecsph.git\n\nRUN rm -rf /home/flecsi/.ccache\nUSER root\nRUN chown -R flecsi:flecsi /home/flecsi/flecsph\nRUN yum install -y which; rm -rf /var/cache/yum exit 0\nUSER flecsi\n\n#rebuild flecsi-third-party\nWORKDIR /home/flecsi/tpl\nRUN git config remote.origin.fetch \"+refs/heads/*:refs/remotes/origin/*\"\nRUN git fetch origin FleCSPH\nRUN git checkout FleCSPH\nRUN git submodule update --recursive\nRUN rm -rf build && mkdir build\nWORKDIR /home/flecsi/tpl/build\nRUN  cmake ..\nUSER root\nRUN rm -rf /usr/local/include/legion* /usr/local/include/realm*\nRUN make VERBOSE=1 -j2\nUSER flecsi\n\n#build flecsi\nWORKDIR /home/flecsi\nRUN git clone -b stable/flecsph-compatible --depth 1 --recursive https://github.com/laristra/flecsi flecsi\nRUN  cd flecsi && mkdir build && cd build\nWORKDIR flecsi/build\nRUN  cmake .. -DFLECSI_RUNTIME_MODEL=legion \\\n              -DENABLE_LEGION=ON \\\n              -DENABLE_LOG=OFF \\\n              -DENABLE_MPI=ON \\\n              -DENABLE_OPENMP=ON \\\n              -DENABLE_MPI_CXX_BINDINGS=ON\nRUN make VERBOSE=1 -j2\nUSER root\nRUN make install\nUSER flecsi\n\n# build H5hut\nWORKDIR /home/flecsi\nENV H5Hut H5hut-1.99.13\nRUN wget --no-check-certificate https://amas.psi.ch/H5hut/raw-attachment/wiki/DownloadSources/${H5Hut}.tar.gz\nRUN tar -xzf ${H5Hut}.tar.gz && rm ${H5Hut}.tar.gz\nRUN wget -O- https://raw.githubusercontent.com/gentoo/gentoo/e8827415e767b1252f3851edef8e000980b7f2a1/sci-libs/h5hut/files/h5hut-1.99.13-autotools.patch | patch -p0\nWORKDIR ${H5Hut}\nRUN sed -i 's/H5Pset_fapl_mpiposix (fapl_id, comm, use_gpfs)/H5Pset_fapl_mpio (fapl_id, comm, \\&use_gpfs)/g' src/h5core/h5_hdf5_private.h\nRUN autoreconf -i -f\n#ubuntu needs CC=h5pcc amd HDF5_USE_SHLIB=yes is needed for shared lib\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-static --enable-shared --enable-parallel --prefix=/usr/local CC=h5pcc && HDF5_USE_SHLIB=yes make\nUSER root\nRUN make install\nUSER flecsi\nRUN ldd /usr/local/lib/libH5hut.so\n\nWORKDIR /home/flecsi/flecsph\nRUN mkdir build\n\nWORKDIR build\nRUN ccache -z\nRUN cmake -DENABLE_MPI=ON \\\n          -DENABLE_UNIT_TESTS=ON \\\n          -DENABLE_OPENMP=ON \\\n          -DENABLE_LEGION=ON \\\n          -DENABLE_DOXYGEN=ON \\\n          -DENABLE_COVERAGE_BUILD=ON \\\n          -DCMAKE_CXX_FLAGS=\"-fpermissive\" ..\n\nRUN HDF5_USE_SHLIB=yes make VERBOSE=1 -j2\nRUN ccache -s\nRUN make doxygen\nRUN make install DESTDIR=${PWD}/install && rm -rf ${PWD}/install\nRUN make test ARGS=\"-V\" || true\nRUN cd .. && $HOME/.local/bin/codecov -F \"${CC}\"\nUSER root\nRUN make install\nUSER flecsi\nWORKDIR /home/flecsi\n"
}