{
  "startTime": 1674255322287,
  "endTime": 1674255322997,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 110
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the manager binary\nFROM golang:1.16 as builder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY main.go main.go\nCOPY api/ api/\nCOPY controllers/ controllers/\nCOPY backend/ backend/\nCOPY errors/ errors/\nCOPY hack/ hack/\nARG SECRETS_MANAGER_VERSION\n\n# Build\nRUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags \"-X main.version=${SECRETS_MANAGER_VERSION}\" -a -o secrets-manager main.go\n\n\n#\n# Prod image\n#\n\n# Use distroless as minimal base image to package the manager binary\n# Refer to https://github.com/GoogleContainerTools/distroless for more details\nFROM gcr.io/distroless/static:nonroot as release\nWORKDIR /\nCOPY --from=builder /workspace/secrets-manager .\nUSER 65532:65532\n\nENTRYPOINT [\"/secrets-manager\"]\n\n\n#\n# Dev image\n#\n\nFROM builder as dev\n\nENV ENVTEST_ASSETS_DIR=testbin\nENV ENVTEST_K8S_VERSION=1.19.2\n# kubebuilder needed to run tests in development environment\nRUN curl -f -L -O https://github.com/kubernetes-sigs/kubebuilder/releases/download/v3.1.0/kubebuilder_linux_amd64\nRUN mv kubebuilder_linux_amd64 kubebuilder \\\n    && chmod 755 kubebuilder \\\n    && mv kubebuilder /usr/local/bin\nRUN export PATH=$PATH:/usr/local/bin\n"
}