{
  "startTime": 1674253451566,
  "endTime": 1674253453351,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 147
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 73,
        "columnStart": 4,
        "columnEnd": 94
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 46,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 46,
        "lineEnd": 55,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim as base\nLABEL maintainer=\"Teko's DataOps Team <dataops@teko.vn>\"\nSHELL [\"/bin/bash\", \"-c\"]\n\nRUN set -eux; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        libbz2-1.0 liblz4-1 libsnappy1v5 zlib1g libzstd1 \\\n        libev4 libssl1.1 libisal2 libnss3 \\\n        libpq5 libmariadb3 \\\n        curl locales; \\\n    \\\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/*\n\n# Firefox + Gecko driver. For Ubuntu, using `apt install firefox firefox-geckodriver`\nARG GECKO_DRIVER_VERSION=v0.29.0\nRUN set -eux; cd /tmp/; \\\n    apt-get update; \\\n    apt-get install -y --no-install-recommends \\\n        xvfb libxi6 libgconf-2-4 \\\n        firefox-esr; \\\n    apt-get clean; \\\n    rm -rf /var/lib/apt/lists/*; \\\n    curl -f -sSL \"https://github.com/mozilla/geckodriver/releases/download/${GECKO_DRIVER_VERSION}/geckodriver-${GECKO_DRIVER_VERSION}-linux64.tar.gz\" \\\n        | tar -xzf - -C /usr/local/bin --no-same-owner;\n\nRUN set -eux; \\\n    sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen; \\\n    locale-gen; \\\n    update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8;\n\nENV SUPERSET_HOME=\"/opt/superset\"\nRUN set -eux; \\\n    useradd -ms \"/bin/bash\" --uid=1000 superset; \\\n    mkdir -p \"${SUPERSET_HOME}\"; \\\n    chown -R superset: \"${SUPERSET_HOME}\";\n\nWORKDIR ${SUPERSET_HOME}\n\nFROM base AS builder\n\nARG SUPERSET_VERSION=1.0.1\n\nRUN set -eux; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n        build-essential \\\n\n        unixodbc-dev \\\n\n        default-libmysqlclient-dev \\\n\n        libmemcached-dev \\\n\n        libsasl2-dev; rm -rf /var/lib/apt/lists/*;\n\nRUN set -eux; \\\n    function join { local IFS=\"$1\"; echo \"${*:2}\"; }; \\\n    SUPERSET_PACKAGES=( \\\n        # Cloud\n        athena bigquery redshift \\\n        dremio snowflake teradata vertica exasol \\\n        # Database\n        mysql postgres mmsql oracle db2 hana \\\n        clickhouse cockroachdb elasticsearch \\\n        excel gsheets \\\n        # Big Data\n        drill druid hive impala kylin pinot presto \\\n        # Others\n        cors thumbnails \\\n    ); \\\n    pip install --no-cache-dir \"apache-superset[$(join ',' ${SUPERSET_PACKAGES[@]})]==${SUPERSET_VERSION}\" \\\n        \"gunicorn[gevent,eventlet]\" \"flower~=0.9\" \"authlib~=0.15\" \"redis~=3.5\" \"pylibmc~=1.6\"; \\\n\n    rm -rf /usr/local/cx_Oracle-doc;\n\nFROM base\n\nCOPY --from=builder /usr/local /usr/local\nCOPY ./scripts/superset/* /usr/local/bin/\nRUN mv /usr/local/bin/trino.py /usr/local/lib/python3.8/site-packages/superset/db_engine_specs/\n\nUSER superset\nEXPOSE 8088 5555\nENTRYPOINT [ \"/usr/local/bin/docker-entrypoint.sh\" ]\n"
}