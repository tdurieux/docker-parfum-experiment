{
  "startTime": 1674217404952,
  "endTime": 1674217405481,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 26,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 11,
        "columnStart": 26,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Must be built from the top-level CHORDS directory.\nFROM nginx\n\n# Install dependencies\nRUN apt-get update -qq && apt-get -y --no-install-recommends \\\n  install \\\n  apache2-utils \\\n  curl \\\n  nano \\\n  logrotate \\\n  cron \\\n  procps && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /\n\n# create the directory for certbot validation\nRUN mkdir acme-challenge\n\n# EXPOSE http and https ports\nEXPOSE 80\nEXPOSE 443\n\n# Install the nginx start script\nCOPY bin/nginx/nginx_start.sh /tmp/\nRUN chmod -R 777 /tmp/nginx_start.sh\n\n# Install logrotate configuration\nCOPY bin/nginx/logrotate_nginx /etc/logrotate.d/nginx\n\n# Install Nginx configurations. They will be referenced\n# in nginx_start.sh\nCOPY bin/nginx/*.conf /tmp/\n\n# Remove console links for log files so that logs go to the file system.\nRUN rm -f /var/log/nginx/access.log /var/log/nginx/error.log\n\n# Run nginx\nCMD [ \"/tmp/nginx_start.sh\" ]\n"
}