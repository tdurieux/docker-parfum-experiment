diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/earthcubeprojects-chords/chords/bin/rpi/rpi-Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/earthcubeprojects-chords/chords/bin/rpi/rpi-Dockerfile/repaired.Dockerfile
index b413c07..5ea7b76 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/earthcubeprojects-chords/chords/bin/rpi/rpi-Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/earthcubeprojects-chords/chords/bin/rpi/rpi-Dockerfile/repaired.Dockerfile
@@ -1,30 +1,30 @@
-FROM hypriot/rpi-ruby:2.2.2 
+FROM hypriot/rpi-ruby:2.2.2
 MAINTAINER martinc@ucar.edu
 
-# Install apt based dependencies required to run Rails as 
-# well as RubyGems. As the Ruby image itself is based on a 
+# Install apt based dependencies required to run Rails as
+# well as RubyGems. As the Ruby image itself is based on a
 # Debian image, we use apt-get to install those.
-RUN apt-get update && apt-get install -y \
+RUN apt-get update && apt-get install --no-install-recommends -y \
   build-essential \
   nodejs \
   mysql-client \
   dos2unix \
   git \
-  ntp\
-  mysql-client\
-  libmysqlclient-dev\
-  libcurl4-openssl-dev\
-  nginx
-
-# Configure the main working directory. This is the base 
-# directory used in any further RUN, COPY, and ENTRYPOINT 
+  ntp \
+  mysql-client \
+  libmysqlclient-dev \
+  libcurl4-openssl-dev \
+  nginx && rm -rf /var/lib/apt/lists/*;
+
+# Configure the main working directory. This is the base
+# directory used in any further RUN, COPY, and ENTRYPOINT
 # commands.
-RUN mkdir -p /chords 
+RUN mkdir -p /chords
 WORKDIR /chords
 
-# Copy the Gemfile as well as the Gemfile.lock and install 
-# the RubyGems. This is a separate step so the dependencies 
-# will be cached unless changes to one of those two files 
+# Copy the Gemfile as well as the Gemfile.lock and install
+# the RubyGems. This is a separate step so the dependencies
+# will be cached unless changes to one of those two files
 # are made.
 COPY Gemfile Gemfile.lock ./
 RUN gem install bundler && bundle install --jobs 4 --retry 5
@@ -47,11 +47,11 @@ RUN /bin/bash -f create_chords_env_script.sh > chords_env.sh && chmod a+x chords
 # however if the docker build command is run with the --squash option
 RUN rm -rf .git log/* tmp/*
 
-# Expose port 80 to the Docker host, so we can access it 
+# Expose port 80 to the Docker host, so we can access it
 # from the outside.
 EXPOSE 80
 
-# Configure an entry point, so we don't need to specify 
+# Configure an entry point, so we don't need to specify
 # "bundle exec" for each of our commands.
 ENTRYPOINT ["bundle", "exec"]