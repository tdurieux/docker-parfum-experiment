{
  "startTime": 1674249836374,
  "endTime": 1674249837013,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 149
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.20.0-jessie as buildimage\n\nARG CODEBUILD_GIT_BRANCH\nARG SONAR_TOKEN\n\nWORKDIR /app\n\nCOPY . .\n\nRUN mkdir -p /root/cypress\nRUN curl -f -ksSLo /root/cypress/cypress.zip https://download.cypress.io/desktop\nRUN ls -lh /root/cypress\nRUN CYPRESS_INSTALL_BINARY=/root/cypress/cypress.zip npm install && npm cache clean --force;\n# RUN npm install\n\nRUN sh ./uswds-init.sh\nRUN sh ./prepare-visualizations.sh\n\nRUN node --max-old-space-size=512\n\nRUN npm run test:unit\n\n# for sonarqube\nRUN mkdir -p /root/.sonar/sonar-scanner-4.4.0.2170-linux\nRUN rm -rf /root/.sonar/sonar-scanner-4.4.0.2170-linux\nRUN mkdir -p /root/.sonar/sonar-scanner-4.4.0.2170-linux\nRUN curl -f -ksSLo /root/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.4.0.2170-linux.zip\nRUN unzip /root/.sonar/sonar-scanner.zip -d /root/.sonar/\nRUN rm /root/.sonar/sonar-scanner.zip\nRUN if [ -z ${SONAR_TOKEN} ]; then echo \"NO SONAR\"; else /root/.sonar/sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner -Dsonar.projectKey=usdot-its-jpo-data-portal_datahub-ui -Dsonar.organization=usdot-its-jpo-data-portal -Dsonar.sources=src -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${SONAR_TOKEN} -Dsonar.branch.name=${CODEBUILD_GIT_BRANCH} -Dsonar.javascript.lcov.reportPaths=test/coverage-jest/lcov.info; fi\n\nRUN npm run build\n\nFROM nginx:1.17.9\n\nWORKDIR /app\n\nCOPY --from=buildimage /app/dist .\n\nCOPY --from=buildimage /app/entrypoint.sh .\n\nCOPY nginx.template.conf /etc/nginx\n\nCMD [\"/app/entrypoint.sh\"]\n"
}