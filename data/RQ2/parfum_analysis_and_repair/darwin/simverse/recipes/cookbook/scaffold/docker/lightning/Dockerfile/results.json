{
  "startTime": 1674215065586,
  "endTime": 1674215066101,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# see https://medium.com/@tonistiigi/advanced-multi-stage-build-patterns-6f741b852fae\nARG LIGHTNING_DOCKER_BUILDTIME_IMAGE\nARG LIGHTNING_DOCKER_RUNTIME_IMAGE\nARG RELEVANT_BITCOIND_IMAGE\n\n# modelled after https://github.com/ElementsProject/lightning/blob/master/Dockerfile\nFROM ${LIGHTNING_DOCKER_BUILDTIME_IMAGE} as simverse_buildtime_lightning\n\n#include BASE_DOCKERFILE_SNIPPET\n#include BUILDTIME_DOCKERFILE_SNIPPET\n\nRUN apk add --no-cache --update \\\nca-certificates \\\nautoconf \\\nautomake \\\nbuild-base \\\nlibressl \\\nlibtool \\\ngmp-dev \\\npython \\\npython-dev \\\npython3 \\\npy3-mako \\\nsqlite-dev \\\nwget \\\ngit \\\nfile \\\ngnupg \\\nswig \\\nzlib-dev \\\ngettext\n\nARG LIGHTNING_REPO_PATH\n\nWORKDIR /root/build\n\nCOPY \"$LIGHTNING_REPO_PATH\" .\n\n# lower optimizations for faster builds\n#ARG CFLAGS=\"\"\n#ARG CXXFLAGS=\"$CFLAGS\"\nARG MAKEFLAGS=\"-j4\"\n\n#ENV CFLAGS=\"$CFLAGS\"\n#ENV CXXFLAGS=\"$CXXFLAGS\"\nENV MAKEFLAGS=\"$MAKEFLAGS\"\n\nCOPY \"docker/lightning/patches/unknown-version-fallback.patch\" .\nRUN git apply unknown-version-fallback.patch\n\nCOPY \"docker/lightning/patches/disable-shadow-routing.patch\" .\nRUN git apply disable-shadow-routing.patch\n\nCOPY \"docker/lightning/patches/docker-entrypoint.patch\" .\nRUN git apply docker-entrypoint.patch\n\nARG LIGHTNING_DEVELOPER_FLAG=0\nARG LIGHTNING_VALGRIND_FLAG=0\nARG LIGHTNING_CONFIGURE_OPTS=\"\"\nRUN ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/tmp/lightning_install ${LIGHTNING_CONFIGURE_OPTS}\n\nRUN make DEVELOPER=${LIGHTNING_DEVELOPER_FLAG} VALGRIND=${LIGHTNING_VALGRIND_FLAG}\n\nRUN make install\n\n# ---------------------------------------------------------------------------------------------------------------------------\n\nFROM ${RELEVANT_BITCOIND_IMAGE} as simverse_runtime_bitcoind\n\n# ---------------------------------------------------------------------------------------------------------------------------\n\nFROM ${LIGHTNING_DOCKER_RUNTIME_IMAGE} as simverse_runtime_lightning\n\n#include BASE_DOCKERFILE_SNIPPET\n#include RUNTIME_DOCKERFILE_SNIPPET\n\nRUN apk add --no-cache --update \\\ngmp-dev \\\nsqlite-dev \\\ninotify-tools \\\nsocat \\\nbash \\\nzlib-dev \\\ntini\n\nARG LIGHTNING_CONF_PATH\n\n# copy the binaries and entrypoint from the builder image.\nCOPY --from=simverse_buildtime_lightning /tmp/lightning_install/ /usr/local/\n\n# copy some binaries from the bitcoind image\nCOPY --from=simverse_runtime_bitcoind /usr/local/bin/bitcoin-cli /usr/local/bin/\n# we also need to copy some relevant libraries over\nCOPY --from=simverse_runtime_bitcoind /usr/lib/libboost* /usr/lib/\n\nUSER simnet\n\nWORKDIR /home/simnet\n\nENV LIGHTNINGD_DATA=/home/simnet/.lightning\nENV LIGHTNINGD_NETWORK=regtest\n# we need to place lightning-rpc outside volumes because of socket path limits (in docker)\n# see https://github.com/moby/moby/issues/23545\nENV LIGHTNINGD_RPC_DIR_SIMVERSE=/tmp/lightningd-rpc\nRUN mkdir -p \"$LIGHTNINGD_RPC_DIR_SIMVERSE\"\n\nCOPY --chown=simnet \"docker/lightning/home\" \".\"\nCOPY --chown=simnet --from=simverse_buildtime_lightning /root/build/tools/docker-entrypoint.sh lightning-docker-entrypoint.sh\nCOPY --chown=simnet \"$LIGHTNING_CONF_PATH\" \"seed-config\"\n"
}