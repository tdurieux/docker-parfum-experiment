{
  "startTime": 1674246933710,
  "endTime": 1674246937458,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 46,
        "lineEnd": 46,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 7,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 7,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 32,
        "columnStart": 7,
        "columnEnd": 8
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 34,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 115,
        "lineEnd": 115,
        "columnStart": 7,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 34,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 17
      }
    }
  ],
  "repairedDockerfile": "# Using Debian here because official Rust image is based on Debian too.\nFROM debian:buster as build-janus\n\n## -----------------------------------------------------------------------------\n## Install dependencies\n## -----------------------------------------------------------------------------\nRUN set -xe \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install \\\n    autoconf \\\n    automake \\\n    awscli \\\n    ca-certificates \\\n    curl \\\n    ffmpeg \\\n    gengetopt \\\n    git \\\n    libavformat-dev \\\n    libavcodec-dev \\\n    libconfig-dev \\\n    libcurl4-openssl-dev \\\n    libglib2.0-dev \\\n    libjansson-dev \\\n    libmicrohttpd-dev \\\n    libogg-dev \\\n    libopus-dev \\\n    libsofia-sip-ua-dev \\\n    libssl-dev \\\n    libtool \\\n    m4 \\\n    make \\\n    pkg-config \\\n    wget && rm -rf /var/lib/apt/lists/*;\n\nRUN apt-get -y --no-install-recommends install \\\n    ninja-build \\\n    python3 \\\n    python3-pip \\\n    python3-setuptools \\\n    python3-wheel && rm -rf /var/lib/apt/lists/*;\n\nRUN aws configure set default.s3.max_bandwidth 10MB/s\n\n## -----------------------------------------------------------------------------\n## Install latest libnice (recommended by Janus devs)\n## -----------------------------------------------------------------------------\nRUN pip3 install --no-cache-dir meson \\\n    && git clone https://gitlab.freedesktop.org/libnice/libnice \\\n    && cd libnice \\\n    && meson --prefix=/usr build \\\n    && ninja -C build \\\n    && ninja -C build install\n\n## -----------------------------------------------------------------------------\n## Install libsrtp (with --enable-openssl option)\n## -----------------------------------------------------------------------------\nARG LIBSRTP_VERSION=2.3.0\n\nRUN wget https://github.com/cisco/libsrtp/archive/v${LIBSRTP_VERSION}.tar.gz \\\n    && tar xfv v${LIBSRTP_VERSION}.tar.gz \\\n    && cd libsrtp-${LIBSRTP_VERSION} \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr --enable-openssl \\\n    && make shared_library \\\n    && make install && rm v${LIBSRTP_VERSION}.tar.gz\n\n## -----------------------------------------------------------------------------\n## Build Janus Gateway\n## -----------------------------------------------------------------------------\nARG JANUS_GATEWAY_COMMIT='v0.11.4'\n\nRUN set -xe \\\n    && JANUS_GATEWAY_BUILD_DIR=$(mktemp -d) \\\n    && cd \"${JANUS_GATEWAY_BUILD_DIR}\" \\\n    && git clone 'https://github.com/meetecho/janus-gateway' . \\\n    && git checkout \"${JANUS_GATEWAY_COMMIT}\" \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/opt/janus --enable-post-processing \\\n    && make -j $(nproc) \\\n    && make install \\\n    && make configs \\\n    && rm -rf \"${JANUS_GATEWAY_BUILD_DIR}\"\n\nRUN set -xe \\\n    && apt-get remove -y \\\n    autoconf \\\n    automake \\\n    git \\\n    libtool \\\n    m4 \\\n    make \\\n    ninja-build \\\n    wget\n\n## -----------------------------------------------------------------------------\n## Build Janus Conference plugin for deploy\n## -----------------------------------------------------------------------------\nFROM buildpack-deps:buster as build-plugin-deploy\n\nENV RUSTUP_HOME=/usr/local/rustup \\\n    CARGO_HOME=/usr/local/cargo \\\n    PATH=/usr/local/cargo/bin:$PATH\n\nRUN set -eux; \\\n    url=\"https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init\"; \\\n    wget \"$url\"; \\\n    chmod +x rustup-init; \\\n    ./rustup-init -y --no-modify-path --default-toolchain stable; \\\n    rm rustup-init; \\\n    chmod -R a+w $RUSTUP_HOME $CARGO_HOME; \\\n    rustup --version; \\\n    cargo --version; \\\n    rustc --version;\n\nRUN set -xe \\\n    && apt-get update \\\n    && apt-get -y --no-install-recommends install libjansson-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /build\n\nCOPY Cargo.* ./\nRUN mkdir ./src && touch src/lib.rs\nRUN cargo build --release\n\nCOPY src/ ./src/\nRUN touch src/lib.rs && cargo build --release\n\n## -----------------------------------------------------------------------------\n## Build image ready to deploy\n## -----------------------------------------------------------------------------\nFROM build-janus\nARG PLUGIN=libjanus_conference.so\nWORKDIR /opt/janus\nCOPY --from=build-plugin-deploy /build/target/release/${PLUGIN} ./lib/janus/plugins/${PLUGIN}\nCOPY ./scripts/upload_record.sh /opt/janus/bin/upload_record.sh\n\nCOPY --from=foxford/janus-conference-logger:v0.1.1 \\\n    /build/target/release/libjanus_conference_logger.so \\\n    /opt/janus/lib/janus/loggers/libjanus_conference_logger.so\n\nEXPOSE 8088\n"
}