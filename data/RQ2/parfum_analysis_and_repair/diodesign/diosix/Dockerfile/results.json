{
  "startTime": 1674254176048,
  "endTime": 1674254177055,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 131
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 131
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 155
      }
    }
  ],
  "repairedDockerfile": "#\n# Containerized environment for building, running, and testing Diosix\n# This container targets RV64GC only\n#\n# Author: Chris Williams <diodesign@tuta.io>\n#\n\n# Establish base OS\nFROM debian:testing\n\n# Bring in the necessary tools\nRUN apt update && apt upgrade -y\nRUN apt -y --no-install-recommends install python3 python3-flask build-essential pkg-config git curl binutils-riscv64-linux-gnu qemu-system-misc libssl-dev && rm -rf /var/lib/apt/lists/*;\n\n# Bring in the environment runtime script\nCOPY ./docker/entrypoint.py /\n\n# Bring in the project source code\nCOPY . /diosix\n\n# Define where we'll work\nWORKDIR /diosix\n\n# Install necessary bits and pieces of Rust and just, pull in the submodules, and then build diosix\nRUN curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain nightly -y \\\n    && . $HOME/.cargo/env \\\n    && cargo install --force just \\\n    && git submodule update --init --recursive \\\n    && just build\n\n# Define the environment in which we'll run commands\nENTRYPOINT [ \"/entrypoint.py\" ]\n\n# Default run command: boot the hypervisor as normal. Use 'just test' to run unit tests or 'just build' to test it builds\nCMD [ \"just\" ]\n"
}