{
  "startTime": 1674255154343,
  "endTime": 1674255155903,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 85,
        "lineEnd": 103,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 109,
        "lineEnd": 109,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 133,
        "lineEnd": 133,
        "columnStart": 3,
        "columnEnd": 36
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 137,
        "lineEnd": 137,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 2,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.13.5 as megacmd-compiler\n\nRUN apk add --no-cache --repository https://dl-cdn.alpinelinux.org/alpine/edge/testing --update \\\n      libtool \\\n      autoconf \\\n      automake \\\n      c-ares-dev \\\n      crypto++-dev \\\n      curl \\\n      curl-dev \\\n      file \\\n      g++ \\\n      gcc \\\n      git \\\n      sqlite-dev \\\n      pcre-dev \\\n      libc-dev \\\n      libffi-dev \\\n      libressl-dev \\\n      libsodium \\\n      libsodium-dev \\\n      libuv-dev \\\n      make \\\n      openssl \\\n      openssl-dev \\\n      readline-dev \\\n      zlib-dev \\\n      freeimage-dev && \\\n    git clone https://github.com/meganz/MEGAcmd.git /opt/MEGAcmd && \\\n    cd /opt/MEGAcmd && \\\n    git submodule update --init --recursive && \\\n    sh autogen.sh && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make -j $(nproc) && \\\n    make install\n\n\nFROM alpine:3.13.5\nMAINTAINER Steffen Bleul <sbl@blacklabelops.com>\n\nARG JOBBER_VERSION=1.4.4\nARG DOCKER_VERSION=20.10.6\nARG DUPLICITY_VERSION=0.8.21\nARG DUPLICITY_SERIES=0.8\n\nCOPY --from=megacmd-compiler /usr/local/bin/mega-* /usr/local/bin/\nCOPY --from=megacmd-compiler /usr/local/lib/libmega* /usr/local/lib/\n\nRUN apk upgrade --update && \\\n    apk add \\\n      bash \\\n      tzdata \\\n      vim \\\n      tini \\\n      su-exec \\\n      gzip \\\n      tar \\\n      wget \\\n      curl \\\n      build-base \\\n      glib-dev \\\n      gmp-dev \\\n      asciidoc \\\n      curl-dev \\\n      tzdata \\\n      openssh \\\n      libressl-dev \\\n      libressl \\\n      duply \\\n      ca-certificates \\\n      libffi-dev \\\n      librsync-dev \\\n      gcc \\\n      alpine-sdk \\\n      linux-headers \\\n      musl-dev \\\n      rsync \\\n      lftp \\\n      py-cryptography \\\n      librsync \\\n      librsync-dev \\\n      python3-dev \\\n      duplicity \\\n      py3-pip && \\\n    pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir \\\n      setuptools \\\n      fasteners \\\n      google-api-python-client >=2.2.0 \\\n      PyDrive \\\n      chardet \\\n      azure-storage-blob \\\n      azure-storage-queue \\\n      boto \\\n      lockfile \\\n      paramiko \\\n      python-keystoneclient \\\n      python-swiftclient \\\n      requests \\\n      requests_oauthlib \\\n      urllib3 \\\n      b2 \\\n      b2sdk \\\n      dropbox && \\\n    mkdir -p /etc/volumerize /volumerize-cache /opt/volumerize && \\\n    curl -fSL \"https://code.launchpad.net/duplicity/${DUPLICITY_SERIES}-series/${DUPLICITY_VERSION}/+download/duplicity-${DUPLICITY_VERSION}.tar.gz\" -o /tmp/duplicity.tar.gz && \\\n    export DUPLICITY_SHA=2d048377c839ae56fc2828997c9aa7ba8c339e815e1e2ae738652037508ec276a2c72583687da34408fadd4839011e242b51bc73cca954227fc51db5683c258c && \\\n    echo 'Calculated checksum: '$(sha512sum /tmp/duplicity.tar.gz) && \\\n    # echo \"$DUPLICITY_SHA  /tmp/duplicity.tar.gz\" | sha512sum -c - && \\\n    tar -xzvf /tmp/duplicity.tar.gz -C /tmp && \\\n    cd /tmp/duplicity-${DUPLICITY_VERSION} && python3 setup.py install && \\\n    # Install Jobber\n    export CONTAINER_UID=1000 && \\\n    export CONTAINER_GID=1000 && \\\n    export CONTAINER_USER=jobber_client && \\\n    export CONTAINER_GROUP=jobber_client && \\\n    # Install tools\n    apk add \\\n      go \\\n      git \\\n      curl \\\n      wget \\\n      make && \\\n    # Install Jobber\n    addgroup -g $CONTAINER_GID jobber_client && \\\n    adduser -u $CONTAINER_UID -G jobber_client -s /bin/bash -S jobber_client && \\\n    wget --directory-prefix=/tmp https://github.com/dshearer/jobber/releases/download/v${JOBBER_VERSION}/jobber-${JOBBER_VERSION}-r0.apk && \\\n    apk add --allow-untrusted --no-scripts /tmp/jobber-${JOBBER_VERSION}-r0.apk && \\\n    # Install Docker CLI\n    curl -fSL \"https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz\" -o /tmp/docker.tgz && \\\n    export DOCKER_SHA=3aab01ab17734866df8b98938243f3f4c835592c && \\\n    echo 'Calculated checksum: '$(sha1sum /tmp/docker.tgz) && \\\n    echo \"$DOCKER_SHA  /tmp/docker.tgz\" | sha1sum -c - && \\\n\t\t\ttar -xzvf /tmp/docker.tgz -C /tmp && \\\n\t\t\tcp /tmp/docker/docker /usr/local/bin/ && \\\n    # Install MEGAtools\n    curl -fSL \"https://megatools.megous.com/builds/megatools-1.10.3.tar.gz\" -o /tmp/megatools.tgz && \\\n    tar -xzvf /tmp/megatools.tgz -C /tmp && \\\n    cd /tmp/megatools-1.10.3 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n    make && \\\n    make install && \\\n    # Install MegaCMD dependencies\n    apk add --repository https://dl-cdn.alpinelinux.org/alpine/edge/testing --update --no-cache \\\n      c-ares \\\n      crypto++ \\\n      libcurl \\\n      libtool \\\n      libuv \\\n      libpcrecpp \\\n      libsodium \\\n      sqlite-libs \\\n      sqlite \\\n      pcre \\\n      readline \\\n      freeimage \\\n      zlib && \\\n    # Test MegaCMD binaries\n    find /usr/local/bin -type f -executable -name 'mega-*' | \\\n      while read binary; do command -v $binary > /dev/null; done && \\\n    # Cleanup\n    apk del \\\n      go \\\n      git \\\n      curl \\\n      wget \\\n      python3-dev \\\n      libffi-dev \\\n      libressl-dev \\\n      libressl \\\n      alpine-sdk \\\n      linux-headers \\\n      gcc \\\n      musl-dev \\\n      librsync-dev \\\n      make && \\\n    apk add \\\n        openssl && \\\n    rm -rf /var/cache/apk/* && rm -rf /tmp/* && rm /tmp/duplicity.tar.gz\n\nENV VOLUMERIZE_HOME=/etc/volumerize \\\n    VOLUMERIZE_CACHE=/volumerize-cache \\\n    VOLUMERIZE_SCRIPT_DIR=/opt/volumerize \\\n    PATH=$PATH:/etc/volumerize \\\n    GOOGLE_DRIVE_SETTINGS=/credentials/cred.file \\\n    GOOGLE_DRIVE_CREDENTIAL_FILE=/credentials/googledrive.cred \\\n    GPG_TTY=/dev/console\n\nUSER root\nWORKDIR /etc/volumerize\nVOLUME [\"/volumerize-cache\"]\nCOPY imagescripts/ /opt/volumerize/\nCOPY scripts/ /etc/volumerize/\nENTRYPOINT [\"/sbin/tini\",\"--\",\"/opt/volumerize/docker-entrypoint.sh\"]\nCMD [\"volumerize\"]\n"
}