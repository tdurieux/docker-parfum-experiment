diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/huzecong/ghcc/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/huzecong/ghcc/Dockerfile/repaired.Dockerfile
index 368d835..32e2bac 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/huzecong/ghcc/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/huzecong/ghcc/Dockerfile/repaired.Dockerfile
@@ -4,16 +4,16 @@ FROM gcc:10.3-buster
 RUN apt-get update && apt-get install -y --no-install-recommends \
     ca-certificates \
     curl \
-    python3-dev
-RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
+    python3-dev && rm -rf /var/lib/apt/lists/*;
+RUN curl -f https://bootstrap.pypa.io/get-pip.py -o get-pip.py && \
     python3 get-pip.py
 
 # Credit: https://denibertovic.com/posts/handling-permissions-with-docker-volumes/
 # Install `gosu` to avoid running as root.
-RUN gpg --keyserver keyserver.insect.com --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
-RUN curl -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(dpkg --print-architecture)" \
-    && curl -o /usr/local/bin/gosu.asc -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(dpkg --print-architecture).asc" \
-    && gpg --verify /usr/local/bin/gosu.asc \
+RUN gpg --batch --keyserver keyserver.insect.com --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4
+RUN curl -f -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(dpkg --print-architecture)" \
+    && curl -f -o /usr/local/bin/gosu.asc -SL "https://github.com/tianon/gosu/releases/download/1.4/gosu-$(dpkg --print-architecture).asc" \
+    && gpg --batch --verify /usr/local/bin/gosu.asc \
     && rm /usr/local/bin/gosu.asc \
     && chmod +x /usr/local/bin/gosu
 
@@ -21,7 +21,7 @@ RUN curl -o /usr/local/bin/gosu -SL "https://github.com/tianon/gosu/releases/dow
 RUN apt-get install -y --no-install-recommends \
     less \
     vim \
-    bmake
+    bmake && rm -rf /var/lib/apt/lists/*;
 RUN apt-get install -y --no-install-recommends \
     binutils-dev \
     bison \
@@ -373,17 +373,17 @@ RUN apt-get install -y --no-install-recommends \
     opt \
     portaudio19-dev \
     tcl-dev \
-    vstream-client-dev
+    vstream-client-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install Python libraries.
 COPY requirements.txt /usr/src/
-RUN pip install -r /usr/src/requirements.txt && \
+RUN pip install --no-cache-dir -r /usr/src/requirements.txt && \
     rm /usr/src/requirements.txt
 
 # Download convenience scripts.
 ENV CUSTOM_PATH="/usr/custom"
 RUN mkdir -p $CUSTOM_PATH
-RUN curl -sSL https://github.com/shyiko/commacd/raw/v1.0.0/commacd.sh -o $CUSTOM_PATH/.commacd.sh
+RUN curl -f -sSL https://github.com/shyiko/commacd/raw/v1.0.0/commacd.sh -o $CUSTOM_PATH/.commacd.sh
 
 # Create entrypoint that sets appropriate group and user IDs.
 COPY scripts/entrypoint.sh /usr/local/bin/entrypoint.sh