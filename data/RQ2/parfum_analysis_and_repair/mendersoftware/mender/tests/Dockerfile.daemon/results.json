{
  "startTime": 1674255512668,
  "endTime": 1674255513908,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 105
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 47
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 105
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Creates a container which acts as a bare bones non-VM based Mender\n# installation, for use in tests.\nFROM ubuntu:20.04 AS build\n\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt update && apt install --no-install-recommends -y make git build-essential golang liblzma-dev jq libssl-dev libglib2.0-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /go/src/github.com/mendersoftware/mender\nCOPY ./ .\nRUN make GOPATH=/go clean\nRUN make GOPATH=/go prefix=/mender-install install\nRUN jq \".ServerCertificate=\\\"/usr/share/doc/mender-client/examples/demo.crt\\\" | .ServerURL=\\\"https://docker.mender.io/\\\"\" \\\n    < examples/mender.conf.demo > /mender-install/etc/mender/mender.conf\nRUN echo artifact_name=original > /mender-install/etc/mender/artifact_info\n\nFROM ubuntu:20.04\n\nRUN apt update && apt install --no-install-recommends -y openssh-server && rm -rf /var/lib/apt/lists/*;\n\n# Set no password\nRUN sed -ie 's/^root:[^:]*:/root::/' /etc/shadow\nRUN sed -ie 's/^UsePAM/#UsePam/' /etc/ssh/sshd_config\nRUN echo 'PermitEmptyPasswords yes\\n\\\nPermitRootLogin yes\\n\\\nPort 22\\n\\\nPort 8822\\n' >> /etc/ssh/sshd_config\n\nCOPY --from=build /mender-install/usr/bin/mender /usr/bin/mender\nCOPY --from=build /mender-install/etc/mender /etc/mender\nCOPY --from=build /mender-install/usr/share/mender /usr/share/mender\nCOPY --from=build /mender-install/usr/share/doc/mender-client /usr/share/doc/mender-client\nCOPY --from=build /mender-install/lib/systemd/system/mender-client.service /lib/systemd/system/mender-client.service\nCOPY --from=build /mender-install/usr/share/dbus-1/system.d/io.mender.AuthenticationManager.conf /usr/share/dbus-1/system.d/io.mender.AuthenticationManager.conf\nCOPY --from=build /mender-install/usr/share/dbus-1/system.d/io.mender.UpdateManager.conf /usr/share/dbus-1/system.d/io.mender.UpdateManager.conf\nRUN mkdir -p /var/lib/mender && echo device_type=docker-client > /var/lib/mender/device_type\n\nCOPY tests/entrypoint.sh /\n\nCMD /entrypoint.sh\n"
}