{
  "startTime": 1674254179320,
  "endTime": 1674254180112,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 35
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.6\n\nCOPY *.py /app/\nCOPY requirements.txt app/\nCOPY data/binaries/ /app/data/binaries/\nCOPY data/models/textBranchNorm.h5 /app/data/models/\n\nWORKDIR /app\nRUN pip install --no-cache-dir -r requirements.txt\n\n\nEXPOSE 8080\nCMD [\"python\", \"./webservice.py\"]\n\n\n###Some comands I used for building this docker container\n\n##Build docker container from 'Dockerfile'\n#docker build -t geoloc .\n\n##Execute docker container\n#docker run -d -p   5000:5000 --network host  geoloc\n\n##Contact docker webservice\n#http://127.0.0.1:5000/predictText?text=Montmartre%20is%20truly%20beautiful\n\n##Export docker container\n#docker save geoloc > geolocV2.tar\n\n#####################################################\n#Export data (relevantData.tar.lzma ) for local installation\n#XZ_OPT=-9 tar cfva relevantData.tar.lzma data/binaries/processors.obj data/models/\n\n\n########################### Other commands ###########################\n##list images\n#docker images -a\n#docker image rm a08c6226131a\n\n##ls for docker\n#docker container ls\n\n#Interactive execution of docker container\n#docker exec -i -t 3411bb89b103 /bin/bash\n\n\n\n########################### Push image to docker hub ###########################\n#docker build -t erechtheus79/geolocation .\n#docker login\n#docker push erechtheus79/geolocation:latest\n\n\n"
}