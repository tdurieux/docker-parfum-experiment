diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hforge/itools/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hforge/itools/Dockerfile/repaired.Dockerfile
index 168d17d..004fbf5 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/hforge/itools/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/hforge/itools/Dockerfile/repaired.Dockerfile
@@ -1,7 +1,7 @@
 FROM alpine:3.5
 
 ## Install global dependencies
-RUN apk add --update \
+RUN apk add --no-cache --update \
     build-base \
     cmake \
     gcc \
@@ -24,7 +24,7 @@ RUN apk add --update \
     zlib-dev
 
 # Install gulp and less
-RUN npm install -g gulp less
+RUN npm install -g gulp less && npm cache clean --force;
 
 # Configure git user
 RUN git config --global user.email "hforge@hforge.org"
@@ -34,24 +34,24 @@ RUN git config --global user.name "hforge"
 ADD https://bootstrap.pypa.io/get-pip.py /tmp/
 WORKDIR /tmp/
 RUN python2 get-pip.py
-RUN pip install --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 
 # INSTALL sphinx
-RUN pip install sphinx
+RUN pip install --no-cache-dir sphinx
 
 # Install xapian
 ADD http://oligarchy.co.uk/xapian/1.4.2/xapian-core-1.4.2.tar.xz /tmp/
 WORKDIR /tmp/
-RUN tar Jxf /tmp/xapian-core-1.4.2.tar.xz
+RUN tar Jxf /tmp/xapian-core-1.4.2.tar.xz && rm /tmp/xapian-core-1.4.2.tar.xz
 WORKDIR /tmp/xapian-core-1.4.2
-RUN ./configure && make && make install
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" && make && make install
 
 # Install xapian-bindings python
 ADD http://oligarchy.co.uk/xapian/1.4.2/xapian-bindings-1.4.2.tar.xz /tmp/
 WORKDIR /tmp/
-RUN tar Jxf /tmp/xapian-bindings-1.4.2.tar.xz
+RUN tar Jxf /tmp/xapian-bindings-1.4.2.tar.xz && rm /tmp/xapian-bindings-1.4.2.tar.xz
 WORKDIR /tmp/xapian-bindings-1.4.2
-RUN ./configure --with-python && make && make install
+RUN ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --with-python && make && make install
 
 # Install libgit2
 ADD https://github.com/libgit2/libgit2/archive/v0.26.0.zip /tmp/
@@ -67,7 +67,7 @@ RUN cmake --build . --target install
 ENV LIBRARY_PATH=/lib:/usr/lib
 
 # INSTALL libgit2 (https://github.com/python-pillow/Pillow/issues/1763)
-RUN pip install pygit2==0.26.0
+RUN pip install --no-cache-dir pygit2==0.26.0
 
 # Declare libgit2 (XXX We have to export lib direcory)
 RUN ln -s /usr/local/lib/libgit2.so.26 /usr/lib/libgit2.so.26
@@ -75,11 +75,11 @@ RUN ln -s /usr/local/lib/libgit2.so.26 /usr/lib/libgit2.so.26
 # Install ikaaro dependencies
 RUN mkdir -p /tmp/itools
 ADD ./ /tmp/itools/
-RUN pip install -r /tmp/itools/requirements.txt
+RUN pip install --no-cache-dir -r /tmp/itools/requirements.txt
 
 # Install itools
 WORKDIR /tmp/itools
 RUN python setup.py install
 
 # Install PIL (because it's not part of itools requirements)
-RUN pip install pillow==3.0.0
+RUN pip install --no-cache-dir pillow==3.0.0