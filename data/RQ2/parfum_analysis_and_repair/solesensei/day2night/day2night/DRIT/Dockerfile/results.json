{
  "startTime": 1674252804804,
  "endTime": 1674252805709,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 69,
        "lineEnd": 69,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 2,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 2,
        "lineEnd": 32,
        "columnStart": 22,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:9.0-cudnn7-devel-ubuntu16.04\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    cmake \\\n    git \\\n    curl \\\n    vim \\\n    ca-certificates \\\n    libjpeg-dev \\\n    libpng-dev \\\n    wget \\\n    vim \\\n    libgflags-dev \\\n    libgoogle-glog-dev \\\n    libgtest-dev \\\n    libiomp-dev \\\n    libleveldb-dev \\\n    liblmdb-dev \\\n    libopencv-dev \\\n    libopenmpi-dev \\\n    libprotobuf-dev \\\n    libsnappy-dev \\\n    openmpi-bin \\\n    openmpi-doc \\\n    protobuf-compiler \\\n    python3-dev \\\n    python3-numpy \\\n    python3-pip \\\n    python3-pydot \\\n    python3-setuptools \\\n    python3-scipy \\\n    ffmpeg && rm -rf /var/lib/apt/lists/*;\n\nRUN pip3 install --no-cache-dir \\\r\n    flask \\\r\n    future \\\r\n    graphviz \\\r\n    hypothesis \\\r\n    jupyter \\\r\n    matplotlib \\\r\n    numpy \\\r\n    protobuf \\\r\n    pydot \\\r\n    python-nvd3 \\\r\n    pyyaml \\\r\n    requests \\\r\n    scikit-image \\\r\n    scipy \\\r\n    setuptools \\\r\n    six \\\r\n    tornado \\\r\n    Pillow \\\r\n    cython \\\r\n    opencv-python\n\n## setup path\nENV PATH=/usr/local/cuda-9.0/bin:$PATH \\\r\n   LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH \\\r\n   LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH \\\r\n   LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.0/lib64/ \\\r\n   LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/lib\n\n## install pytorch\nRUN pip3 install --no-cache-dir http://download.pytorch.org/whl/cu90/torch-0.4.0-cp35-cp35m-linux_x86_64.whl\nRUN pip3 install --no-cache-dir torchvision\n\n## other packages\nRUN pip3 install --no-cache-dir tensorboardX\nRUN pip3 install --no-cache-dir tensorflow\n"
}