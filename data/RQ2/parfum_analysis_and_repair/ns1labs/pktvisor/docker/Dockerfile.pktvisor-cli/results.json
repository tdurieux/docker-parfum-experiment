{
  "startTime": 1674253453351,
  "endTime": 1674253454269,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 75
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:bullseye-slim AS cppbuild\n\nENV BUILD_DEPS \"g++ cmake make git pkgconf jq python3-pip python3-setuptools ca-certificates\"\n\nRUN \\\n    apt-get update && \\\n    apt-get upgrade --yes --force-yes && \\\n    apt-get install --yes --force-yes --no-install-recommends ${BUILD_DEPS} && \\\n    pip3 install --no-cache-dir conan && rm -rf /var/lib/apt/lists/*;\n\n# need git for current hash for VERSION\nCOPY ./.git/ /pktvisor-src/.git/\nCOPY ./golang/ /pktvisor-src/golang/\nCOPY ./CMakeLists.txt /pktvisor-src/\n\nWORKDIR /tmp/build\n\n# ONLY run cmake configure to get version need for go build (no c++ build)\nRUN VERSION_ONLY=1 cmake /pktvisor-src\n\nFROM golang:latest AS gobuild\nCOPY golang/ /src/\nWORKDIR /src/\nCOPY --from=cppbuild /pktvisor-src/golang/pkg/client/version.go /src/pkg/client/version.go\nRUN CGO_ENABLED=0 go build -o pktvisor-cli cmd/pktvisor-cli/main.go\n\nFROM alpine:latest AS runtime\n\nCOPY --from=gobuild /src/pktvisor-cli /pktvisor-cli\nCOPY docker/entry-cli.sh /\n\nENTRYPOINT [ \"/entry-cli.sh\" ]\n"
}