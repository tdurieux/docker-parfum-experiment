{
  "startTime": 1674255319851,
  "endTime": 1674255321163,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 98,
        "lineEnd": 98,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 102,
        "lineEnd": 102,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 65,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 11
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 68
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 65,
        "lineEnd": 69,
        "columnStart": 7,
        "columnEnd": 11
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.17-bullseye AS igolang\n\nFROM php:7.4.26-apache-bullseye AS iphp\n\n# image debian:bullseye had \"ls bug\", we use busybox ls instead\nRUN rm -rf /bin/ls\n\nRUN apt update \\\n    && apt install --no-install-recommends git libssl-dev zlib1g-dev busybox libzip-dev -y \\\n    && busybox --install && rm -rf /var/lib/apt/lists/*;\n\nRUN yes ''| pecl install igbinary zstd redis swoole                                    \\\n    && echo \"extension=igbinary.so\" > /usr/local/etc/php/conf.d/igbinary.ini           \\\n    && echo \"extension=zstd.so\" > /usr/local/etc/php/conf.d/zstd.ini                   \\\n    && echo \"extension=redis.so\" > /usr/local/etc/php/conf.d/redis.ini                 \\\n    && echo \"extension=swoole.so\" > /usr/local/etc/php/conf.d/swoole.ini\n\nRUN docker-php-ext-configure zip && docker-php-ext-install zip\n\nRUN cd /root                                                                           \\\n    && git clone https://github.com/TarsPHP/tars-extension.git                         \\\n    && cd /root/tars-extension                                                         \\\n    && phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-phptars \\\n    && make \\\n    && make install \\\n    && echo \"extension=phptars.so\" > /usr/local/etc/php/conf.d/phptars.ini\n\nFROM openjdk:8-bullseye AS ijava\n\nFROM node:lts-bullseye AS inode\n\nFROM docker:19.03 AS idocker\nRUN mv $(command -v  docker) /tmp/docker\n\nFROM devth/helm:v3.7.1 AS ihelm\nRUN mv $(command -v  helm) /tmp/helm\n\nFROM bitnami/kubectl:1.20 AS ikubectl\nRUN cp -rf $(command -v  kubectl) /tmp/kubectl\n\nFROM php:7.4.26-apache-bullseye\nENV DEBIAN_FRONTEND=noninteractive\n\nCOPY --from=igolang /usr/local /usr/local\nCOPY --from=igolang /go /go\nCOPY --from=iphp /usr/local /usr/local\nCOPY --from=ijava /usr/local /usr/local\nCOPY --from=inode /usr/local /usr/local\nCOPY --from=idocker /tmp/docker /usr/local/bin/docker\nCOPY --from=ihelm /tmp/helm /usr/local/bin/helm\nCOPY --from=ikubectl /tmp/kubectl /usr/local/bin/kubectl\n\nENV PATH=/usr/local/openjdk-8/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\nENV GOPATH=/go\n\nARG BRANCH\n\n# image debian:bullseye had \"ls bug\", we use busybox ls instead\n\nRUN rm -rf /bin/ls\n\nRUN apt update \\\n    && apt install --no-install-recommends -y git cmake make maven gdb bison flex \\\n    ca-certificates openssl telnet curl wget default-mysql-client \\\n    iputils-ping vim tcpdump net-tools binutils procps tree python python3 \\\n    libssl-dev zlib1g-dev libzip-dev tzdata localepurge \\\n    busybox && busybox --install && rm -rf /var/lib/apt/lists/*;\n\nRUN locale-gen en_US.utf8\nENV LANG en_US.utf8\n\nRUN go get github.com/TarsCloud/TarsGo/tars \\\n    && go install github.com/TarsCloud/TarsGo/tars/tools/tars2go@latest               \\\n    && go install github.com/TarsCloud/TarsGo/tars/tools/tarsgo@latest\n\nRUN go env -w GO111MODULE=on\n\nRUN cd /root                                                                           \\\n    && git clone https://github.com/TarsCloud/TarsCpp.git --recursive                  \\\n    && cd /root/TarsCpp                                                                \\\n    && git checkout $BRANCH && git submodule update --remote --recursive               \\\n    && mkdir -p build                                                                  \\\n    && cd build                                                                        \\\n    && cmake ..                                                                        \\\n    && make -j4                                                                        \\\n    && make install                                                                    \\\n    && cd /                                                                            \\\n    && rm -rf /root/TarsCpp\n\nRUN apt purge -y                                                                       \\\n    && apt clean all                                                                   \\\n    && rm -rf /var/lib/apt/lists/*                                                     \\\n    && rm -rf /var/cache/*.dat-old                                                     \\\n    && rm -rf /var/log/*.log /var/log/*/*.log\n\nRUN curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer \\\n    && chmod +x /usr/local/bin/composer\n\nRUN npm install -g @tars/deploy && npm cache clean --force;\n\nRUN echo \"#!/bin/bash\" > /bin/start.sh && echo \"while true; do sleep 10; done\" >> /bin/start.sh && chmod a+x /bin/start.sh\n\nCMD [\"/bin/start.sh\"]\n"
}