diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tarscloud/tarsdocker/compiler/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tarscloud/tarsdocker/compiler/Dockerfile/repaired.Dockerfile
index 565057e..a54e278 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/tarscloud/tarsdocker/compiler/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/tarscloud/tarsdocker/compiler/Dockerfile/repaired.Dockerfile
@@ -1,5 +1,3 @@
-# docker build . -f base-compiler.Dockerfile -t tarscloud/base-compiler:master --build-arg BRANCH=master
-
 FROM golang:1.17-bullseye AS igolang
 
 FROM php:7.4.26-apache-bullseye AS iphp
@@ -7,9 +5,9 @@ FROM php:7.4.26-apache-bullseye AS iphp
 # image debian:bullseye had "ls bug", we use busybox ls instead
 RUN rm -rf /bin/ls
 
-RUN apt update                                                                         \
-    && apt install git libssl-dev zlib1g-dev busybox  libzip-dev  -y                   \
-    && busybox --install
+RUN apt update \
+    && apt install --no-install-recommends git libssl-dev zlib1g-dev busybox libzip-dev -y \
+    && busybox --install && rm -rf /var/lib/apt/lists/*;
 
 RUN yes ''| pecl install igbinary zstd redis swoole                                    \
     && echo "extension=igbinary.so" > /usr/local/etc/php/conf.d/igbinary.ini           \
@@ -22,10 +20,10 @@ RUN docker-php-ext-configure zip && docker-php-ext-install zip
 RUN cd /root                                                                           \
     && git clone https://github.com/TarsPHP/tars-extension.git                         \
     && cd /root/tars-extension                                                         \
-    && phpize                                                                          \
-    && ./configure --enable-phptars                                                    \
-    && make                                                                            \
-    && make install                                                                    \
+    && phpize \
+    && ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --enable-phptars \
+    && make \
+    && make install \
     && echo "extension=phptars.so" > /usr/local/etc/php/conf.d/phptars.ini
 
 FROM openjdk:8-bullseye AS ijava
@@ -62,12 +60,12 @@ ARG BRANCH
 
 RUN rm -rf /bin/ls
 
-RUN apt update                                                                         \
-    && apt install -y git cmake make maven gdb bison flex                              \
-    ca-certificates openssl telnet curl wget default-mysql-client                      \
-    iputils-ping vim tcpdump net-tools binutils procps tree python python3             \
-    libssl-dev zlib1g-dev libzip-dev  tzdata localepurge                               \
-    busybox && busybox --install
+RUN apt update \
+    && apt install --no-install-recommends -y git cmake make maven gdb bison flex \
+    ca-certificates openssl telnet curl wget default-mysql-client \
+    iputils-ping vim tcpdump net-tools binutils procps tree python python3 \
+    libssl-dev zlib1g-dev libzip-dev tzdata localepurge \
+    busybox && busybox --install && rm -rf /var/lib/apt/lists/*;
 
 RUN locale-gen en_US.utf8
 ENV LANG en_US.utf8
@@ -96,11 +94,11 @@ RUN apt purge -y
     && rm -rf /var/cache/*.dat-old                                                     \
     && rm -rf /var/log/*.log /var/log/*/*.log
 
-RUN curl -sS https://getcomposer.org/installer | php \
+RUN curl -f -sS https://getcomposer.org/installer | php \
     && mv composer.phar /usr/local/bin/composer \
     && chmod +x /usr/local/bin/composer
 
-RUN npm install -g @tars/deploy
+RUN npm install -g @tars/deploy && npm cache clean --force;
 
 RUN echo "#!/bin/bash" > /bin/start.sh && echo "while true; do sleep 10; done" >> /bin/start.sh && chmod a+x /bin/start.sh