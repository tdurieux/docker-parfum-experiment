{
  "startTime": 1674251930534,
  "endTime": 1674251931858,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM keymetrics/pm2:12-alpine\n\nARG NODE_ENV\nENV NODE_ENV $NODE_ENV\n\n# First copy over the yarn files and install dependencies (multi-stage build optimization)\nRUN mkdir -p /usr/src/app && rm -rf /usr/src/app\nWORKDIR /usr/src/app\nCOPY ./package.json .\nCOPY ./yarn.lock .\nRUN yarn install --production && yarn cache clean;\n\n# Now copy over the remaining relevant files\nCOPY ./bin /usr/src/app/bin\nCOPY ./lib /usr/src/app/lib\nCOPY ./public /usr/src/app/public\nCOPY ./routes /usr/src/app/routes\nCOPY ./views /usr/src/app/views\nCOPY ./app.js /usr/src/app/app.js\nCOPY ./CODE-OF-CONDUCT.md /usr/src/app/CODE-OF-CONDUCT.md\nCOPY ./CONTRIBUTING.md /usr/src/app/CONTRIBUTING.md\nCOPY ./cql-es.config.js /usr/src/app/cql-es.config.js\nCOPY ./LICENSE /usr/src/app/LICENSE\nCOPY ./README.md /usr/src/app/README.md\nRUN mkdir -p /usr/src/app/config && rm -rf /usr/src/app/config\nRUN chown node /usr/src/app/config\nRUN mkdir -p /usr/src/app/config/libraries && rm -rf /usr/src/app/config/libraries\nRUN chown node /usr/src/app/config/libraries\nRUN mkdir -p /usr/src/app/config/hooks && rm -rf /usr/src/app/config/hooks\nRUN chown node /usr/src/app/config/hooks\nRUN mkdir -p /usr/src/app/.vsac_cache && rm -rf /usr/src/app/.vsac_cache\nRUN chown node /usr/src/app/.vsac_cache\n\n# Clean up a bit to save space\nRUN yarn cache clean\n\n# Expose the server port\nEXPOSE 3000\n\n# Create a volume for the VSAC cache\nVOLUME [\"/usr/src/app/.vsac_cache\"]\n\n# Run using the node user (otherwise runs as root, which is security risk)\nUSER node\n\nWORKDIR /usr/src/app\nCMD [ \"pm2-runtime\", \"start\", \"cql-es.config.js\", \"--env\", \"production\" ]"
}