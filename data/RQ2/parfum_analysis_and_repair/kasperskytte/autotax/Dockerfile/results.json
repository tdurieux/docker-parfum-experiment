{
  "startTime": 1674254368882,
  "endTime": 1674254370048,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 5,
        "columnEnd": 87
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 65,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 17,
        "columnStart": 5,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 35,
        "lineEnd": 43,
        "columnStart": 5,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal-20210827\n\nWORKDIR /opt\n\n### install system dependencies using APT\nENV DEBIAN_FRONTEND noninteractive\nRUN apt-get update -qqy \\\n  && apt-get -y install --no-install-recommends --no-install-suggests \\\n    ca-certificates \\\n    software-properties-common \\\n    gnupg2 \\\n    gnupg1 \\\n    git \\\n    wget \\\n    locales \\\n    make \\\n    cmake \\\n    parallel=20161222-1.1 \\\n  && mkdir -p ~/.parallel/will-cite && rm -rf /var/lib/apt/lists/*;\n\n### generate and set up locales\nRUN echo \"en_US.UTF-8 UTF-8\" >> /etc/locale.gen \\\n  && locale-gen en_US.utf8 \\\n  && /usr/sbin/update-locale LANG=en_US.UTF-8\n\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\n\n### install and setup R and the R library\n#specific version of R to be installed\nENV R_BASE_VERSION 3.6.3\n\n#install R, remove user library from .libPaths() as it may be used instead\n#if user has installed any pkgs on host system and $HOME is mounted\nRUN apt-get -qqy update \\\n  && DEBIAN_FRONTEND=noninteractive apt-get -y install --no-install-recommends --no-install-suggests \\\n    gdebi-core \\\n    libcurl4-openssl-dev \\\n    libssl-dev \\\n    libxml2-dev \\\n    libxt-dev \\\n    libcairo2-dev \\\n    pandoc \\\n    curl \\\n  && curl -f -O https://cdn.rstudio.com/r/ubuntu-2004/pkgs/r-${R_BASE_VERSION}_1_amd64.deb \\\n  && gdebi --non-interactive r-${R_BASE_VERSION}_1_amd64.deb \\\n  && rm r-${R_BASE_VERSION}_1_amd64.deb \\\n  && ln -s /opt/R/${R_BASE_VERSION}/bin/R /usr/local/bin/R \\\n  && ln -s /opt/R/${R_BASE_VERSION}/bin/Rscript /usr/local/bin/Rscript \\\n  && mkdir -p ~/.R \\\n  && echo \"MAKEFLAGS = -j\" > ~/.R/Makevars \\\n  && echo \"options(repos = c(CRAN = 'https://mirrors.dotsrc.org/cran'), download.file.method = 'libcurl')\" >> /opt/R/${R_BASE_VERSION}/lib/R/etc/Rprofile.site \\\n  && sed -i s/^R_LIBS_USER=/#R_LIBS_USER=/g /opt/R/${R_BASE_VERSION}/lib/R/etc/Renviron \\\n  && R -e \"install.packages('BiocManager')\" \\\n  && R -e \"BiocManager::install(version = '3.9', ask = FALSE, Ncpus = 100)\" \\\n  && R -e \"BiocManager::install(c('Biostrings', 'doParallel', 'stringr', 'data.table', 'tidyr', 'dplyr'), Ncpus = 100, version = '3.9', ask = FALSE)\" && rm -rf /var/lib/apt/lists/*;\n\n### install SINA\nRUN wget -q https://github.com/epruesse/SINA/releases/download/v1.6.0/sina-1.6.0-linux.tar.gz \\\n  && tar -zxf sina-1.6.0-linux.tar.gz \\\n  && rm sina-1.6.0-linux.tar.gz \\\n  && ln -s /opt/sina-1.6.0-linux/bin/sina /usr/local/bin/sina \\\n  && chmod +x /usr/local/bin/sina\n\n### install usearch 32-bit limited free version\nRUN wget -q https://drive5.com/downloads/usearch11.0.667_i86linux32.gz -O usearch11.gz \\\n  && gunzip usearch11.gz \\\n  && ln -s /opt/usearch11 /usr/local/bin/usearch11 \\\n  && chmod +x /usr/local/bin/usearch11\n\n### install vsearch\nRUN wget -q https://github.com/torognes/vsearch/releases/download/v2.17.0/vsearch-2.17.0-linux-x86_64.tar.gz \\\n  && tar -zxf vsearch-2.17.0-linux-x86_64.tar.gz \\\n  && rm vsearch-2.17.0-linux-x86_64.tar.gz \\\n  && ln -s /opt/vsearch-2.17.0-linux-x86_64/bin/vsearch /usr/local/bin/vsearch \\\n  && chmod +x /usr/local/bin/vsearch\n\n### install BATS for unit testing\nRUN wget -q https://github.com/bats-core/bats-core/archive/refs/tags/v1.3.0.tar.gz \\\n  && tar -zxf v1.3.0.tar.gz \\\n  && rm v1.3.0.tar.gz \\\n  && /opt/bats-core-1.3.0/install.sh /usr/local \\\n  && rm -rf /opt/bats-core-1.3.0\n\n### copy AutoTax repo into /opt/autotax\nCOPY . /opt/autotax/\nRUN chmod +x /opt/autotax/autotax.bash /opt/autotax/getsilvadb.sh\n\n### compile findLongSeqs from submodule\nRUN cd /opt/autotax/findLongSeqs && \\\n  cmake CMakelists.txt && \\\n  make && \\\n  ln -s /opt/autotax/findLongSeqs/findLongSeqs /usr/local/bin/findLongSeqs && \\\n  chmod +x /usr/local/bin/findLongSeqs\n\n### make sure everything is in PATH\nENV PATH=\"/opt/autotax:${PATH}\"\nENV PATH=\"/autotax:${PATH}\"\n\n### clean up\nRUN rm -rf /var/lib/apt/lists/* /var/cache/apt/*\n\nVOLUME /autotax\nWORKDIR /autotax\nENTRYPOINT [\"bash\", \"/opt/autotax/autotax.bash\"]\nCMD [\"-h\"]\n"
}