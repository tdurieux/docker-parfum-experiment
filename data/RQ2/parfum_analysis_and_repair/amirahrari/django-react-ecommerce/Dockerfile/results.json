{
  "startTime": 1674254377137,
  "endTime": 1674254377682,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 15,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:12.2.0-alpine as build\n\nRUN mkdir -p /tmp/react\n\nADD package.json /tmp/package.json\nRUN cd /tmp && npm install && npm cache clean --force;\nRUN cp -a /tmp/node_modules /tmp/react\n\nWORKDIR /tmp/react\nCOPY . /tmp/react\nRUN npm run build\n\nFROM python:3.8.0-alpine\n\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\nENV APP_HOME=/home/app\nRUN mkdir -p $APP_HOME\nWORKDIR $APP_HOME\n\nRUN apk update\nRUN apk --update --no-cache add gcc libgcc musl-dev jpeg-dev zlib-dev postgresql-dev\n\nCOPY ./requirements.txt .\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir -r requirements.txt\n\nCOPY . $APP_HOME\nCOPY --from=build /tmp/react/dist $APP_HOME/dist\n\nCMD python manage.py collectstatic --no-input --clear\n\nENTRYPOINT [\"/home/app/entrypoint.sh\"]"
}