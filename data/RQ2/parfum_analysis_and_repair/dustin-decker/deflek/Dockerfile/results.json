{
  "startTime": 1674255758545,
  "endTime": 1674255759510,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage\nARG GO_VERSION=1.10\nARG PROJECT_PATH=/go/src/github.com/dustin-decker/deflek\nFROM golang:${GO_VERSION}-alpine AS builder\nRUN apk --update --no-cache add ca-certificates\nRUN apk add --no-cache git\nADD https://github.com/golang/dep/releases/download/v0.4.1/dep-linux-amd64 /usr/bin/dep\nRUN chmod +x /usr/bin/dep\nRUN adduser -D -u 59999 container-user\nWORKDIR /go/src/github.com/dustin-decker/deflek\nCOPY Gopkg.toml Gopkg.lock ./\nRUN dep ensure --vendor-only\nCOPY ./ ${PROJECT_PATH}\nRUN export PATH=$PATH:`go env GOHOSTOS`-`go env GOHOSTARCH` \\\n    && CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build --ldflags '-extldflags \"-static\"' -o deflek \\\n    && go test $(go list ./... | grep -v /vendor/)\n\n# Production image\nFROM scratch\nEXPOSE 8080\nCOPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/ca-certificates.crt\nCOPY --from=builder /etc/passwd /etc/passwd\nCOPY --from=builder /go/src/github.com/dustin-decker/deflek/deflek /deflek\nCOPY --from=builder /go/src/github.com/dustin-decker/deflek/config.example.yaml /config.example.yaml\nCOPY --from=builder /go/src/github.com/dustin-decker/deflek/config.yaml /config.yaml\nUSER container-user\nENTRYPOINT [\"/deflek\"]]"
}