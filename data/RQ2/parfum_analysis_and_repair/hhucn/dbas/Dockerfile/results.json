{
  "startTime": 1674250161470,
  "endTime": 1674250162177,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 179
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 179
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim\n\nENV locs /etc/locale.gen\nENV TEMPLATE_FOLDER /dbas/dbas/templates/\nENV CHAMELEON_CACHE ${TEMPLATE_FOLDER}cache\nENV PATH $PATH:/root/.poetry/bin\n\nRUN apt-get update -qq && \\\n    apt-get install --no-install-recommends -yqq curl gnupg2 make && \\\n    curl -f -sL https://deb.nodesource.com/setup_12.x | bash - && \\\n    curl -f -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n    curl -f -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python3 && \\\n    echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n    apt-get update -qq && \\\n    apt-get install --no-install-recommends -yqq build-essential libpq-dev python-dev libfontconfig nodejs locales libsasl2-dev libldap2-dev libssl-dev gettext bzip2 autoconf libffi-dev gcc iproute2 yarn && \\\n    npm install npx -g --force --no-optional && \\\n    npm install google-closure-compiler@20200820.0.0-nightly sass -g --no-optional && \\\n    touch $locs && \\\n    echo \"de_DE.UTF-8 UTF-8\" >> $locs && \\\n    echo \"en_US.UTF-8 UTF-8\" >> $locs && \\\n    locale-gen && \\\n    echo \"Europe/Berlin\" > /etc/timezone && \\\n    dpkg-reconfigure -f noninteractive tzdata && \\\n    apt-get remove -y --purge curl bzip2 && \\\n    apt-get autoremove -y && \\\n    apt-get clean && \\\n    npm cache clean --force && \\\n    mkdir /dbas && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /dbas\n\nCOPY pyproject.toml poetry.lock /dbas/\n\n# virtualenvs false leads to a global installation of the packages\nRUN poetry self update && \\\n    poetry config virtualenvs.create false && \\\n    poetry install --no-interaction && \\\n    apt-get remove -y --purge build-essential gcc&& \\\n    apt-get autoremove -y && \\\n    apt-get clean -y\n\nCOPY . /dbas/\n\nRUN make && python3 precompile_templates.py --dir ${TEMPLATE_FOLDER}\n\nEXPOSE 4284\nCMD sh -c \"alembic upgrade head && pserve development.ini --reload\"\n"
}