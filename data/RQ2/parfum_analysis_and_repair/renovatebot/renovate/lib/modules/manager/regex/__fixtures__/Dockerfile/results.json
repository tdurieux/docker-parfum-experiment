{
  "startTime": 1674220602834,
  "endTime": 1674220604657,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 95,
        "lineEnd": 95,
        "columnStart": 2,
        "columnEnd": 105
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 110,
        "lineEnd": 110,
        "columnStart": 4,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 161,
        "lineEnd": 161,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 218,
        "lineEnd": 218,
        "columnStart": 4,
        "columnEnd": 89
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 233,
        "lineEnd": 233,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 227,
        "lineEnd": 227,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 239,
        "lineEnd": 239,
        "columnStart": 51,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 212,
        "lineEnd": 212,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 53,
        "lineEnd": 85,
        "columnStart": 4,
        "columnEnd": 85
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 2,
        "columnEnd": 81
      }
    },
    {
      "rule": "gpgUseHaPools",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 2,
        "columnEnd": 79
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 2,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 2,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 103,
        "lineEnd": 103,
        "columnStart": 2,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 119,
        "lineEnd": 119,
        "columnStart": 22,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 130,
        "lineEnd": 130,
        "columnStart": 22,
        "columnEnd": 54
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 153,
        "lineEnd": 153,
        "columnStart": 22,
        "columnEnd": 87
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 164,
        "lineEnd": 164,
        "columnStart": 22,
        "columnEnd": 57
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 38,
        "columnEnd": 54
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 25,
        "columnEnd": 41
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 241,
        "lineEnd": 241,
        "columnStart": 71,
        "columnEnd": 87
      }
    }
  ],
  "repairedDockerfile": "FROM amd64/node:10.19.0@sha256:a9d108f82e34c84e6e2a9901fda2048b9f5a40f614c3ea1348cbf276a7c2031c AS tsbuild\n\nCOPY package.json .\nCOPY yarn.lock .\nCOPY tools tools\nRUN yarn install --frozen-lockfile && yarn cache clean;\n\nCOPY lib lib\nCOPY tsconfig.json tsconfig.json\nCOPY tsconfig.app.json tsconfig.app.json\n\nRUN yarn build:docker && yarn cache clean;\n\n\nFROM amd64/ubuntu:18.04@sha256:0925d086715714114c1988f7c947db94064fd385e171a63c07730f1fa014e6f9\n\nLABEL maintainer=\"Rhys Arkins <rhys@arkins.net>\"\nLABEL name=\"renovate\"\nLABEL org.opencontainers.image.source=\"https://github.com/renovatebot/renovate\"\n\nENV APP_ROOT=/usr/src/app\nWORKDIR ${APP_ROOT}\n\nENV DEBIAN_FRONTEND=noninteractive\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nRUN apt-get update && \\\n  apt-get install --no-install-recommends -y gpg curl wget unzip xz-utils openssh-client bsdtar build-essential openjdk-11-jre-headless dirmngr && \\\n  rm -rf /var/lib/apt/lists/*\n\n# The git version of ubuntu 18.04 is too old to sort ref tags properly (see #5477), so update it to the latest stable version\nRUN echo \"deb http://ppa.launchpad.net/git-core/ppa/ubuntu bionic main\\ndeb-src http://ppa.launchpad.net/git-core/ppa/ubuntu bionic main\" > /etc/apt/sources.list.d/git.list && \\\n  apt-key adv --keyserver keyserver.ubuntu.com --recv-keys E1DD270288B4E6030699E45FA1715D88E1DF1F24 && \\\n  apt-get update && \\\n  apt-get -y --no-install-recommends install git && \\\n  rm -rf /var/lib/apt/lists/*\n\n## Gradle (needs java-jre, installed above)\nENV GRADLE_VERSION=6.2 # gradle-version/gradle&versioning=maven\n\nRUN wget --no-verbose https://services.gradle.org/distributions/gradle-$GRADLE_VERSION-bin.zip && \\\n  unzip -q -d /opt/ gradle-$GRADLE_VERSION-bin.zip && \\\n  rm -f gradle-$GRADLE_VERSION-bin.zip && \\\n  mv /opt/gradle-$GRADLE_VERSION /opt/gradle && \\\n  ln -s /opt/gradle/bin/gradle /usr/local/bin/gradle\n\n## Node.js\n\n# START copy Node.js from https://github.com/nodejs/docker-node/blob/master/10/jessie/Dockerfile\n\nENV NODE_VERSION=10.19.0 # github-tags/nodejs/node&versioning=node\n\nRUN ARCH= && dpkgArch=\"$(dpkg --print-architecture)\" \\\n  && case \"${dpkgArch##*-}\" in \\\n  amd64) ARCH='x64';; \\\n  ppc64el) ARCH='ppc64le';; \\\n  s390x) ARCH='s390x';; \\\n  arm64) ARCH='arm64';; \\\n  armhf) ARCH='armv7l';; \\\n  i386) ARCH='x86';; \\\n  * echo \"unsupported  architecture\"; exit 1;; \\\nesac \\\n  # gpg keys listed at https://github.com/nodejs/node#release-keys\n  && set -ex \\\n  && for key in \\\n  94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n  FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n  71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n  DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n  B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n  77984A986EBC2AA786BC0F66B01FBB92821C587A \\\n  8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \\\n  4ED778F539E3634C779C87C6D7062848A1AB005C \\\n  A48C2BEE680E841632CD4E44F07496B3EB3C1762 \\\n  B9E2F5981AA6E0CD28160D9FF13993A75599653C; do \\\n  \n\n  gpg --batch --keyserver hkp://p80.ha.pool.sks-keyservers.net:80 --recv-keys \"$key\" || \\\n  gpg --batch --keyserver hkp://ipv4.ha.pool.sks-keyservers.net --recv-keys \"$key\" || \\\n  gpg --batch --keyserver hkp://pgp.mit.edu:80 --recv-keys \"$key\"; \\\n done \\\n\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-$ARCH.tar.xz\" \\\n  && curl -fsSLO --compressed \"https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc\" \\\n  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  && grep \" node-v$NODE_VERSION-linux-$ARCH.tar.xz\\$\" SHASUMS256.txt | sha256sum -c - \\\n  && bsdtar -xJf \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" -C /usr/local --strip-components=1 --no-same-owner \\\n  && rm \"node-v$NODE_VERSION-linux-$ARCH.tar.xz\" SHASUMS256.txt.asc SHASUMS256.txt \\\n  && ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\n## END copy Node.js\n\n# Erlang\n\nRUN cd /tmp && \\\n  curl -f https://packages.erlang-solutions.com/erlang-solutions_1.0_all.deb -o erlang-solutions_1.0_all.deb && \\\n  dpkg -i erlang-solutions_1.0_all.deb && \\\n  rm -f erlang-solutions_1.0_all.deb\n\nENV ERLANG_VERSION=22.0.2-1\n\nRUN apt-get update && \\\n  apt-cache policy esl-erlang && \\\n  apt-get install --no-install-recommends -y esl-erlang=1:$ERLANG_VERSION && \\\n  rm -rf /var/lib/apt/lists/*\n\n# Elixir\n\nENV ELIXIR_VERSION=1.8.2\n\nRUN curl -f -L https://github.com/elixir-lang/elixir/releases/download/v${ELIXIR_VERSION}/Precompiled.zip -o Precompiled.zip && \\\n  mkdir -p /opt/elixir-${ELIXIR_VERSION}/ && \\\n  unzip Precompiled.zip -d /opt/elixir-${ELIXIR_VERSION}/ && \\\n  rm Precompiled.zip\n\nENV PATH=$PATH:/opt/elixir-${ELIXIR_VERSION}/bin\n\n# PHP Composer\n\nRUN apt-get update && apt-get install --no-install-recommends -y php-cli php-mbstring && \\\n  rm -rf /var/lib/apt/lists/*\n\nENV COMPOSER_VERSION=1.9.3 # github-releases/composer/composer\n\nRUN php -r \"copy('https://github.com/composer/composer/releases/download/$COMPOSER_VERSION/composer.phar', '/usr/local/bin/composer');\"\n\nRUN chmod +x /usr/local/bin/composer\n\n# Go Modules\n\nRUN apt-get update && apt-get install --no-install-recommends -y bzr mercurial && \\\n  rm -rf /var/lib/apt/lists/*\n\nENV GOLANG_VERSION=1.13.4\n\n# Disable GOPROXY and GOSUMDB until we offer a solid solution to configure\n# private repositories.\nENV GOPROXY=direct GOSUMDB=off\n\nRUN wget -q -O go.tgz \"https://golang.org/dl/go${GOLANG_VERSION}.linux-amd64.tar.gz\" && \\\n  tar -C /usr/local -xzf go.tgz && \\\n  rm go.tgz && \\\n  export PATH=\"/usr/local/go/bin:$PATH\"\n\nENV GOPATH=/go\nENV PATH=$GOPATH/bin:/usr/local/go/bin:$PATH\n\nRUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && chmod -R 777 \"$GOPATH\"\n\nENV CGO_ENABLED=0\n\n# Python\n\nRUN apt-get update && apt-get install --no-install-recommends -y python3.8-dev python3.8-venv python3-distutils && \\\n  rm -rf /var/lib/apt/lists/*\n\nRUN rm -fr /usr/bin/python3 && ln /usr/bin/python3.8 /usr/bin/python3\nRUN rm -rf /usr/bin/python && ln /usr/bin/python3.8 /usr/bin/python\n\n# Pip\n\nRUN curl -f --silent https://bootstrap.pypa.io/get-pip.py | python\n\n# CocoaPods\nRUN apt-get update && apt-get install --no-install-recommends -y ruby ruby2.5-dev && rm -rf /var/lib/apt/lists/*\nRUN ruby --version\nENV COCOAPODS_VERSION=1.9.0 # rubygems/cocoapods&versioning=ruby\nRUN gem install --no-rdoc --no-ri cocoapods -v ${COCOAPODS_VERSION}\n\n# Set up ubuntu user and home directory with access to users in the root group (0)\n\nENV HOME=/home/ubuntu\nRUN groupadd --gid 1000 ubuntu && \\\n  useradd --uid 1000 --gid ubuntu --groups 0 --shell /bin/bash --home-dir ${HOME} --create-home ubuntu\n\n\nRUN chown -R ubuntu:0 ${APP_ROOT} ${HOME} && \\\n  chmod -R g=u ${APP_ROOT} ${HOME}\n\n# Docker client and group\n\nRUN groupadd -g 999 docker\nRUN usermod -aG docker ubuntu\n\nENV DOCKER_VERSION=19.03.1 # github-releases/docker/docker-ce&versioning=docker\n\nRUN curl -fsSLO https://download.docker.com/linux/static/stable/x86_64/docker-${DOCKER_VERSION}.tgz \\\n  && tar xzvf docker-${DOCKER_VERSION}.tgz --strip 1 \\\n  -C /usr/local/bin docker/docker \\\n  && rm docker-${DOCKER_VERSION}.tgz\n\nUSER ubuntu\n\n# Cargo\n\nENV RUST_BACKTRACE=1 \\\n  PATH=${HOME}/.cargo/bin:$PATH\n\nENV RUST_VERSION=1.36.0\n\nRUN set -ex ;\\\n  curl https://sh.rustup.rs -sSf | sh -s -- --no-modify-path --profile minimal --default-toolchain ${RUST_VERSION} -y\n\n# Mix and Rebar\n\nRUN mix local.hex --force\nRUN mix local.rebar --force\n\n# Pipenv\n\nENV PATH=\"${HOME}/.local/bin:$PATH\"\n\nRUN pip install --no-cache-dir --user pipenv\n\n# Poetry\n\nENV POETRY_VERSION=1.0.0 # github-releases/python-poetry/poetry\n\nRUN curl -f -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python - --version ${POETRY_VERSION}\n\nENV PATH=\"${HOME}/.poetry/bin:$PATH\"\nRUN poetry config virtualenvs.in-project false\n\n# npm\n\nENV NPM_VERSION=6.10.2 # npm/npm\n\nRUN npm install -g npm@$NPM_VERSION && npm cache clean --force;\n\n# Yarn\n\nENV YARN_VERSION=1.19.1 # npm/yarn\n\nRUN curl -f -o- -L https://yarnpkg.com/install.sh | bash -s -- --version ${YARN_VERSION}\n\nENV PATH=\"${HOME}/.yarn/bin:${HOME}/.config/yarn/global/node_modules/.bin:$PATH\"\n\nCOPY package.json .\nCOPY yarn.lock .\nRUN yarn install --production --frozen-lockfile && yarn cache clean && yarn cache clean;\nRUN rm -f yarn.lock\nCOPY --from=tsbuild dist dist\nCOPY bin bin\nCOPY data data\n\n# openresty/headers-more-nginx-module\n\nENV NGINX_MODULE_HEADERS_MORE_VERSION=0.30 # github-tags/openresty/headers-more-nginx-module&versioning=loose&extractVersion=^v(?<version>.*)$\n\n# Numeric user ID for the ubuntu user. Used to indicate a non-root user to OpenShift\nUSER 1000\n\nENTRYPOINT [\"node\", \"/usr/src/app/dist/renovate.js\"]\nCMD []\n"
}