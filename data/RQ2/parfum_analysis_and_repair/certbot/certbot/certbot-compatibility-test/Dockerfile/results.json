{
  "startTime": 1674254070496,
  "endTime": 1674254071072,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:buster\nMAINTAINER Brad Warren <bmw@eff.org>\n\nRUN apt-get update && \\\n    apt install --no-install-recommends python3-dev python3-venv gcc libaugeas0 libssl-dev \\\n                 libffi-dev ca-certificates openssl -y && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /opt/certbot/src\n\n# We copy all contents of the build directory to allow us to easily use\n# things like tools/venv.py which expects all of our packages to be available.\nCOPY . .\n\nRUN tools/venv.py\nENV PATH /opt/certbot/src/venv/bin:$PATH\n\n# install in editable mode (-e) to save space: it's not possible to\n# \"rm -rf /opt/certbot/src\" (it's stays in the underlying image);\n# this might also help in debugging: you can \"docker run --entrypoint\n# bash\" and investigate, apply patches, etc.\n\nWORKDIR /opt/certbot/src/certbot-compatibility-test/certbot_compatibility_test/testdata\n"
}