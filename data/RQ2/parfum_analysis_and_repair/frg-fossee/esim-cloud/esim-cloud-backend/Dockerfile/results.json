{
  "startTime": 1674253313948,
  "endTime": 1674253314537,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 71,
        "lineEnd": 71,
        "columnStart": 7,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 72,
        "lineEnd": 72,
        "columnStart": 7,
        "columnEnd": 69
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 7,
        "columnEnd": 24
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 34,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 13
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 67,
        "lineEnd": 67,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 68,
        "lineEnd": 68,
        "columnStart": 4,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-alpine\n\nENV PYTHONUNBUFFERED 1\nENV PYTHONDONTWRITEBYTECODE 1\n\nRUN mkdir /code\nWORKDIR /code\n\nENV NGSPICE_VERSION 31\n\nRUN apk add --no-cache --virtual .build-deps \\\n    autoconf \\\n    automake \\\n    bison \\\n    curl \\\n    flex \\\n    g++ \\\n    libx11-dev \\\n    libxaw-dev \\\n    libtool \\\n    make\n\nRUN curl -fSL https://github.com/imr/ngspice/archive/ngspice-$NGSPICE_VERSION.tar.gz -o ngspice.tar.gz \\\n    && mkdir -p /usr/src \\\n    && tar -zxC /usr/src -f ngspice.tar.gz \\\n    && rm ngspice.tar.gz \\\n    && cd /usr/src/ngspice-ngspice-$NGSPICE_VERSION \\\n    && ./autogen.sh \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && apk del .build-deps && rm -rf /usr/src\n\n# Arduino Cli and Compiling tools\nRUN apk add --no-cache \\\n        wget \\\n        tar \\\n        ca-certificates \\\n        gcc-avr \\\n        binutils \\\n        avr-libc \\\n        ctags\n\nENV USER=root\n\nRUN wget -O /tmp/cli.tar.gz \\\n        https://downloads.arduino.cc/arduino-cli/arduino-cli_0.10.0_Linux_64bit.tar.gz && \\\n    cd /tmp && \\\n    mkdir arduino && \\\n    tar -xvf /tmp/cli.tar.gz && \\\n    mv /tmp/arduino-cli /usr/bin/arduino-cli && \\\n    rm /tmp/cli.tar.gz\n\nRUN arduino-cli core update-index \\\n\t&& arduino-cli core install arduino:avr \\\n    && arduino-cli lib install Servo \\\n    && arduino-cli lib install Stepper \\\n    && arduino-cli lib install LiquidCrystal \\\n    && cd /root/.arduino15/ \\\n    && find / -name platform.txt -exec sed -i \"s/^compiler.path=.*$/compiler.path=/g\" {} \\; \\\n    && find . -name ctags -exec ln -nsf /usr/bin/ctags {} \\;\n\n\nRUN apk add --no-cache libxt jpeg-dev zlib-dev libxaw-dev libx11-dev libtool mariadb-connector-c-dev libffi-dev postgresql-dev\n\nCOPY requirements.txt /code/\nRUN apk add --no-cache mariadb-connector-c-dev ; \\\n    apk add --no-cache --update alpine-sdk && \\\n    apk add --no-cache libffi-dev openssl-dev && \\\n    apk --no-cache --update add build-base; \\\n    apk add --no-cache --virtual .build-deps gcc python3-dev musl-dev mariadb-dev \\\n    && pip install --no-cache-dir --upgrade pip \\\n    && pip install --no-cache-dir --trusted-host pypi.python.org -r requirements.txt \\\n    && apk del .build-deps\n"
}