{
  "startTime": 1674248328552,
  "endTime": 1674248329340,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 61,
        "columnEnd": 94
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "##############################################\nFROM alpine:3.13.1 as project-base\nWORKDIR /app\n\nENV VIRTUAL_ENV=/opt/venv\n\nRUN apk add --no-cache \\\n    python3-dev py3-virtualenv postgresql-dev \\\n    && python3 -m ensurepip --upgrade \\\n    && rm -r /usr/lib/python*/ensurepip \\\n    && pip3 install --no-cache-dir --upgrade pip setuptools \\\n    && if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi \\\n    && if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi \\\n    && python3 -m virtualenv --python /usr/bin/python3 $VIRTUAL_ENV\n\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n##############################################\nFROM project-base as dependency-creator\n\nRUN apk add --no-cache build-base libffi-dev \\\n    && pip3 install --no-cache-dir poetry\n\nCOPY poetry.lock pyproject.toml ./\nRUN poetry export -f requirements.txt > /requirements.txt && pip3 install --no-cache-dir -r /requirements.txt\n\n##############################################\nFROM project-base as prod-container\n\nRUN apk add --no-cache bash supervisor jq\nCOPY --from=dependency-creator /opt/venv /opt/venv\n\nCOPY supervisord.conf /etc/supervisord.conf\nCOPY email-templates/ /app/email-templates\nCOPY gunicorn.conf /app\nCOPY .env /app\nCOPY app /app\n\nENTRYPOINT [\"supervisord\", \"-c\", \"/etc/supervisord.conf\"]\n"
}