{
  "startTime": 1674217254687,
  "endTime": 1674217256010,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 42
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedDockerfile": "FROM golang:1.18.3 as builder\n\n# Default value\n# Run `--build-arg BILLING=true` to enable billing\nARG BILLING=false\nENV BILLING=\"${BILLING}\"\n\n# Run `--build-arg HOSTED_BILLING=true` to enable billing for hosted reactivesearch\nARG HOSTED_BILLING=false\nENV HOSTED_BILLING=\"${HOSTED_BILLING}\"\n\n# Run `--build-arg CLUSTER_BILLING=true` to enable billing for clusters\nARG CLUSTER_BILLING=false\nENV CLUSTER_BILLING=\"${CLUSTER_BILLING}\"\n\n# Run `--build-arg OPENSOURCE=true` to build opensource\nARG OPENSOURCE=true\nENV OPENSOURCE=\"${OPENSOURCE}\"\n\n# Run `--build-arg IGNORE_BILLING_MIDDLEWARE=true` to disable billing middleware for testing\nARG IGNORE_BILLING_MIDDLEWARE=false\nENV IGNORE_BILLING_MIDDLEWARE=\"${IGNORE_BILLING_MIDDLEWARE}\"\n\n# Run `--build-arg PLAN_REFRESH_INTERVAL=X` to change the default interval of 1 hour, where 'X' is an integer represent the hours unit\nARG PLAN_REFRESH_INTERVAL=1\nENV PLAN_REFRESH_INTERVAL=\"${PLAN_REFRESH_INTERVAL}\"\n\n# Install tools required for project\n# Run `docker build --no-cache .` to update dependencies\nRUN apt-get clean && apt-get update\nRUN apt-get -y --no-install-recommends install build-essential git && rm -rf /var/lib/apt/lists/*;\nWORKDIR /reactivesearch\n\n# List project dependencies with go.mod and go.sum\nCOPY go.mod go.sum ./\n\n# Install library dependencies\nRUN go mod download\n\n# Copy the entire project and build it\n# This layer is rebuilt when a file changes in the project directory\nCOPY . .\nRUN make\n\n# Final stage: Create the running container\nFROM debian:bullseye AS final\n\n# Create env folder\nRUN mkdir /reactivesearch-data && touch /reactivesearch-data/.env && chmod 777 /reactivesearch-data/.env\n\n# Import the compiled executable from the first stage.\nCOPY --from=builder /reactivesearch /reactivesearch\nWORKDIR /reactivesearch\n\nEXPOSE 8000\nENTRYPOINT [\"build/reactivesearch\", \"--log\", \"stdout\", \"--plugins\"]\n"
}