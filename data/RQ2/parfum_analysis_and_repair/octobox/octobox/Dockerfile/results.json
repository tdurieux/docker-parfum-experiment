{
  "startTime": 1674250693365,
  "endTime": 1674250693989,
  "originalSmells": [
    {
      "rule": "gemUpdateSystemRmRootGem",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "gemUpdateNoDocument",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ruby:3.1.2-alpine\n\nENV APP_ROOT /usr/src/app\nENV OCTOBOX_DATABASE_PORT 5432\nWORKDIR $APP_ROOT\n\n# =============================================\n# System layer\n\n# Will invalidate cache as soon as the Gemfile changes\nCOPY Gemfile Gemfile.lock $APP_ROOT/\n\n# * Setup system\n# * Install Ruby dependencies\nRUN mkdir -p /usr/local/etc \\\n  && { \\\n    echo 'install: --no-document'; \\\n    echo 'update: --no-document'; \\\n  } >> /usr/local/etc/gemrc;\nRUN apk add --update \\\n    build-base \\\n    netcat-openbsd \\\n    git \\\n    nodejs \\\n    postgresql-dev \\\n    tzdata \\\n    curl-dev \\\n && rm -rf /var/cache/apk/* \\\n && gem update --system \\\n && gem install bundler foreman \\\n && bundle config --global frozen 1 \\\n && bundle config set without 'test' \\\n && bundle install --jobs 2 && rm -rf /root/.gem;\n\n# ========================================================\n# Application layer\n\n# Copy application code\nCOPY . $APP_ROOT\n\n# Precompile assets for a production environment.\n# This is done to include assets in production images on Dockerhub.\nRUN RAILS_ENV=production bundle exec rake assets:precompile\n\n# * Generate the docs\n# * Make files OpenShift conformant\nRUN RAILS_ENV=development bin/rails api_docs:generate \\\n && chgrp -R 0 $APP_ROOT \\\n && chmod -R g=u $APP_ROOT\n\n# Startup\nCMD [\"bin/docker-start\"]\n"
}