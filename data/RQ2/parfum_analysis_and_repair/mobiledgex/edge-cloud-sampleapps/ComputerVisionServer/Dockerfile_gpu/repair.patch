diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mobiledgex/edge-cloud-sampleapps/ComputerVisionServer/Dockerfile_gpu b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mobiledgex/edge-cloud-sampleapps/ComputerVisionServer/Dockerfile_gpu/repaired.Dockerfile
index 8692aa9..1f07ff9 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mobiledgex/edge-cloud-sampleapps/ComputerVisionServer/Dockerfile_gpu
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mobiledgex/edge-cloud-sampleapps/ComputerVisionServer/Dockerfile_gpu/repaired.Dockerfile
@@ -4,7 +4,7 @@ FROM nvidia/cuda:10.0-cudnn7-devel AS compile-image
 RUN apt-get update && \
 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
 python3.7-dev python3-pip git g++ wget make libprotobuf-dev protobuf-compiler libopencv-dev \
-libgoogle-glog-dev libboost-all-dev libcaffe-cuda-dev libhdf5-dev libatlas-base-dev
+libgoogle-glog-dev libboost-all-dev libcaffe-cuda-dev libhdf5-dev libatlas-base-dev && rm -rf /var/lib/apt/lists/*;
 
 #replace cmake as old version has CUDA variable bugs
 RUN wget https://github.com/Kitware/CMake/releases/download/v3.16.0/cmake-3.16.0-Linux-x86_64.tar.gz && \
@@ -29,19 +29,19 @@ RUN sed -i 's/set(AMPERE "80 86")/#set(AMPERE "80 86")/g' /openpose/3rdparty/caf
 RUN make -j `nproc`
 
 # Use a virtualenv for all of our Python requirements.
-RUN apt-get install -y python3.7-venv
+RUN apt-get install --no-install-recommends -y python3.7-venv && rm -rf /var/lib/apt/lists/*;
 RUN python3.7 -m venv /opt/venv
 # Make sure we use the virtualenv:
 ENV PATH="/opt/venv/bin:$PATH"
 
-RUN pip install wheel
+RUN pip install --no-cache-dir wheel
 # Special handling for imagecodecs package. See https://pypi.org/project/imagecodecs/
 RUN python -m pip install --upgrade pip setuptools
 RUN python -m pip install --upgrade imagecodecs
 
 # Dependencies for our Django app.
 COPY requirements.txt .
-RUN pip install -r requirements.txt
+RUN pip install --no-cache-dir -r requirements.txt
 
 FROM nvidia/cuda:10.0-cudnn7-runtime AS build-image
 COPY --from=compile-image /openpose /openpose
@@ -49,14 +49,14 @@ COPY --from=compile-image /opt/venv /opt/venv
 RUN apt-get update && \
 DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
 python3.7-dev python3-pip git g++ wget make libopencv-dev iputils-ping \
-libgoogle-glog-dev libboost-all-dev libcaffe-cuda-dev libhdf5-dev libatlas-base-dev
+libgoogle-glog-dev libboost-all-dev libcaffe-cuda-dev libhdf5-dev libatlas-base-dev && rm -rf /var/lib/apt/lists/*;
 
 # Make sure we use the virtualenv:
 ENV PATH="/opt/venv/bin:$PATH"
 
 # Download weights file required for object detection
 WORKDIR /usr/src/app/moedx/pytorch_objectdetecttrack/config
-RUN wget http://opencv.facetraining.mobiledgex.net/files/yolov3.weights
+RUN wget https://opencv.facetraining.mobiledgex.net/files/yolov3.weights
 WORKDIR /usr/src/app/moedx
 COPY . /usr/src/app
 # Initialize the database.