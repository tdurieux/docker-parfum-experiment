{
  "startTime": 1674215816461,
  "endTime": 1674215817328,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 71
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 115
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 1,
        "lineEnd": 1,
        "columnStart": 22,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 22,
        "columnEnd": 115
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7-slim AS compile-image\nRUN apt-get update && apt-get install -y --no-install-recommends build-essential && rm -rf /var/lib/apt/lists/*;\n# Use a virtualenv for all of our Python requirements.\nRUN python -m venv /opt/venv\n# Make sure we use the virtualenv:\nENV PATH=\"/opt/venv/bin:$PATH\"\nRUN pip3 install --no-cache-dir wheel\n# Dependencies for our Django app.\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\n\nFROM python:3.7-slim AS build-image\nCOPY --from=compile-image /opt/venv /opt/venv\nRUN apt-get update && apt-get install --no-install-recommends -y libglib2.0-0 libsm6 libxrender1 libxext6 libgl1-mesa-glx wget iputils-ping && rm -rf /var/lib/apt/lists/*;\n# Make sure we use the virtualenv:\nENV PATH=\"/opt/venv/bin:$PATH\"\n\n# Download weights file required for object detection\nWORKDIR /usr/src/app/moedx/pytorch_objectdetecttrack/config\nRUN wget https://opencv.facetraining.mobiledgex.net/files/yolov3.weights\nWORKDIR /usr/src/app/moedx\nCOPY . /usr/src/app\n# Initialize the database.\nRUN python manage.py makemigrations tracker\nRUN python manage.py migrate\n\nRUN python manage.py collectstatic --noinput\n\n# port for REST\nEXPOSE 8008/tcp\n\n# Fix for \"click\" Python library, a uvicorn dependency.\nENV LC_ALL=C.UTF-8\nENV LANG=C.UTF-8\n\nCMD [\"gunicorn\",\"moedx.asgi:application\",\"--bind\", \"0.0.0.0:8008\",\"-k\",\"uvicorn.workers.UvicornWorker\",\"--workers\",\"1\"]\n"
}