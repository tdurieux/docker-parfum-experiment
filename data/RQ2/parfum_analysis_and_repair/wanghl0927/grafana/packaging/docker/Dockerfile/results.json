{
  "startTime": 1674255299705,
  "endTime": 1674255301535,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 6,
        "columnEnd": 112
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 26,
        "columnEnd": 90
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 6,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BASE_IMAGE=alpine:3.10\nFROM ${BASE_IMAGE}\n\nARG GRAFANA_TGZ=\"grafana-latest.linux-x64-musl.tar.gz\"\n\nCOPY ${GRAFANA_TGZ} /tmp/grafana.tar.gz\n\n# Change to tar xfzv to make tar print every file it extracts\nRUN mkdir /tmp/grafana && tar xfz /tmp/grafana.tar.gz --strip-components=1 -C /tmp/grafana && rm /tmp/grafana.tar.gz\n\nFROM ${BASE_IMAGE}\n\nARG GF_UID=\"472\"\nARG GF_GID=\"472\"\n\nENV PATH=/usr/share/grafana/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n    GF_PATHS_CONFIG=\"/etc/grafana/grafana.ini\" \\\n    GF_PATHS_DATA=\"/var/lib/grafana\" \\\n    GF_PATHS_HOME=\"/usr/share/grafana\" \\\n    GF_PATHS_LOGS=\"/var/log/grafana\" \\\n    GF_PATHS_PLUGINS=\"/var/lib/grafana/plugins\" \\\n    GF_PATHS_PROVISIONING=\"/etc/grafana/provisioning\"\n\nWORKDIR $GF_PATHS_HOME\n\nRUN apk add --no-cache ca-certificates bash tzdata && \\\n    apk add --no-cache --upgrade --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main openssl musl-utils\n\n# Oracle Support for x86_64 only\nRUN if [ `arch` = \"x86_64\" ]; then \\\n      apk add --no-cache --upgrade --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community libaio libnsl && \\\n      ln -s /usr/lib/libnsl.so.2 /usr/lib/libnsl.so.1 && \\\n      wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-2.30-r0.apk \\\n        -O /tmp/glibc-2.30-r0.apk && \\\n      wget https://github.com/sgerrand/alpine-pkg-glibc/releases/download/2.30-r0/glibc-bin-2.30-r0.apk \\\n        -O /tmp/glibc-bin-2.30-r0.apk && \\\n      apk add --no-cache --allow-untrusted /tmp/glibc-2.30-r0.apk /tmp/glibc-bin-2.30-r0.apk && \\\n      rm -f /tmp/glibc-2.30-r0.apk && \\\n      rm -f /tmp/glibc-bin-2.30-r0.apk && \\\n      rm -f /lib/ld-linux-x86-64.so.2 && \\\n      rm -f /etc/ld.so.cache; \\\n    fi\n\n# PhantomJS\nRUN if [ `arch` = \"x86_64\" ]; then \\\n      apk add --no-cache --virtual phantomjs-utils curl && \\\n      cd /tmp && \\\n      curl -f -Ls https://github.com/dustinblackman/phantomized/releases/download/2.1.1/dockerized-phantomjs.tar.gz | tar xz && \\\n      cp -R lib lib64 / && \\\n      cp -R usr/lib/x86_64-linux-gnu /usr/lib && \\\n      cp -R usr/share/fonts /usr/share && \\\n      cp -R etc/fonts /etc && \\\n      rm -rf /tmp/* && \\\n      apk del --no-cache phantomjs-utils; \\\n    fi\n\nCOPY --from=0 /tmp/grafana \"$GF_PATHS_HOME\"\n\nRUN mkdir -p \"$GF_PATHS_HOME/.aws\" && \\\n    addgroup -S -g $GF_GID grafana && \\\n    adduser -S -u $GF_UID -G grafana grafana && \\\n    mkdir -p \"$GF_PATHS_PROVISIONING/datasources\" \\\n             \"$GF_PATHS_PROVISIONING/dashboards\" \\\n             \"$GF_PATHS_PROVISIONING/notifiers\" \\\n             \"$GF_PATHS_LOGS\" \\\n             \"$GF_PATHS_PLUGINS\" \\\n             \"$GF_PATHS_DATA\" && \\\n    cp \"$GF_PATHS_HOME/conf/sample.ini\" \"$GF_PATHS_CONFIG\" && \\\n    cp \"$GF_PATHS_HOME/conf/ldap.toml\" /etc/grafana/ldap.toml && \\\n    chown -R grafana:grafana \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\" && \\\n    chmod -R 777 \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\"\n\nEXPOSE 3000\n\nCOPY ./run.sh /run.sh\n\nUSER grafana\nENTRYPOINT [ \"/run.sh\" ]\n"
}