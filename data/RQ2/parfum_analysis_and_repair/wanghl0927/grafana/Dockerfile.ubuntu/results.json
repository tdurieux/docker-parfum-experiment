{
  "startTime": 1674252863183,
  "endTime": 1674252864758,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 96
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 44,
        "columnEnd": 98
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 22,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 44,
        "columnEnd": 98
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.13.4 AS go-builder\n\nWORKDIR /src/grafana\n\nCOPY go.mod go.sum ./\nCOPY vendor vendor/\n\nRUN go mod verify\n\nCOPY build.go package.json ./\nCOPY pkg pkg/\n\nRUN go run build.go build\n\nFROM node:12.13 AS js-builder\n\n# PhantomJS\nRUN apt-get update && apt-get install --no-install-recommends -y curl && \\\n    curl -f -L https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 | tar xj && \\\n    cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/src/app/\n\nCOPY package.json yarn.lock ./\nCOPY packages packages\n\nRUN yarn install --pure-lockfile && yarn cache clean;\n\nCOPY Gruntfile.js tsconfig.json .eslintrc .editorconfig .browserslistrc ./\nCOPY public public\nCOPY scripts scripts\nCOPY emails emails\n\nENV NODE_ENV production\nRUN ./node_modules/.bin/grunt build\n\nFROM ubuntu:19.10\n\nLABEL maintainer=\"Grafana team <hello@grafana.com>\"\nEXPOSE 3000\n\nARG GF_UID=\"472\"\nARG GF_GID=\"472\"\n\nENV PATH=\"/usr/share/grafana/bin:$PATH\" \\\n    GF_PATHS_CONFIG=\"/etc/grafana/grafana.ini\" \\\n    GF_PATHS_DATA=\"/var/lib/grafana\" \\\n    GF_PATHS_HOME=\"/usr/share/grafana\" \\\n    GF_PATHS_LOGS=\"/var/log/grafana\" \\\n    GF_PATHS_PLUGINS=\"/var/lib/grafana/plugins\" \\\n    GF_PATHS_PROVISIONING=\"/etc/grafana/provisioning\"\n\nWORKDIR $GF_PATHS_HOME\n\nCOPY conf conf\n\n# We need font libs for phantomjs, and curl should be part of the image\nRUN apt-get update && apt-get upgrade -y && apt-get install --no-install-recommends -y ca-certificates libfontconfig1 curl && rm -rf /var/lib/apt/lists/*;\n\nRUN mkdir -p \"$GF_PATHS_HOME/.aws\" && \\\n  addgroup --system --gid $GF_GID grafana && \\\n  adduser --uid $GF_UID --system --ingroup grafana grafana && \\\n  mkdir -p \"$GF_PATHS_PROVISIONING/datasources\" \\\n             \"$GF_PATHS_PROVISIONING/dashboards\" \\\n             \"$GF_PATHS_PROVISIONING/notifiers\" \\\n             \"$GF_PATHS_LOGS\" \\\n             \"$GF_PATHS_PLUGINS\" \\\n             \"$GF_PATHS_DATA\" && \\\n    cp conf/sample.ini \"$GF_PATHS_CONFIG\" && \\\n    cp conf/ldap.toml /etc/grafana/ldap.toml && \\\n    chown -R grafana:grafana \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\" && \\\n    chmod -R 777 \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\"\n\n# PhantomJS\nCOPY --from=js-builder /usr/local/bin/phantomjs /usr/local/bin/\n\nCOPY --from=go-builder /src/grafana/bin/linux-amd64/grafana-server /src/grafana/bin/linux-amd64/grafana-cli bin/\nCOPY --from=js-builder /usr/src/app/public public\nCOPY --from=js-builder /usr/src/app/tools tools\n\nCOPY tools/phantomjs/render.js tools/phantomjs/\nCOPY packaging/docker/run.sh /\n\nUSER grafana\nENTRYPOINT [ \"/run.sh\" ]\n"
}