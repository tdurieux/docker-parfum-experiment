{
  "startTime": 1674252545537,
  "endTime": 1674252546757,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 15,
        "columnEnd": 121
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Golang build container\nFROM golang:1.13.4-alpine\n\nRUN apk add --no-cache gcc g++\n\nWORKDIR $GOPATH/src/github.com/grafana/grafana\n\nCOPY go.mod go.sum ./\nCOPY vendor vendor\n\nRUN go mod verify\n\nCOPY pkg pkg\nCOPY build.go package.json ./\n\nRUN go run build.go build\n\n# Node build container\nFROM node:12.13.0-alpine\n\n# PhantomJS\nRUN apk add --no-cache curl &&\\\n    cd /tmp && curl -f -Ls https://github.com/dustinblackman/phantomized/releases/download/2.1.1/dockerized-phantomjs.tar.gz | tar xz && \\\n    cp -R lib lib64 / && \\\n    cp -R usr/lib/x86_64-linux-gnu /usr/lib && \\\n    cp -R usr/share /usr/share && \\\n    cp -R etc/fonts /etc && \\\n    curl -f -k -Ls https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-2.1.1-linux-x86_64.tar.bz2 | tar -jxf - && \\\n    cp phantomjs-2.1.1-linux-x86_64/bin/phantomjs /usr/local/bin/phantomjs\n\nWORKDIR /usr/src/app/\n\nCOPY package.json yarn.lock ./\nCOPY packages packages\n\nRUN yarn install --pure-lockfile --no-progress && yarn cache clean;\n\nCOPY Gruntfile.js tsconfig.json .eslintrc .editorconfig .browserslistrc ./\nCOPY public public\nCOPY scripts scripts\nCOPY emails emails\n\nENV NODE_ENV production\nRUN ./node_modules/.bin/grunt build\n\n# Final container\nFROM alpine:3.10\n\nLABEL maintainer=\"Grafana team <hello@grafana.com>\"\n\nARG GF_UID=\"472\"\nARG GF_GID=\"472\"\n\nENV PATH=\"/usr/share/grafana/bin:$PATH\" \\\n    GF_PATHS_CONFIG=\"/etc/grafana/grafana.ini\" \\\n    GF_PATHS_DATA=\"/var/lib/grafana\" \\\n    GF_PATHS_HOME=\"/usr/share/grafana\" \\\n    GF_PATHS_LOGS=\"/var/log/grafana\" \\\n    GF_PATHS_PLUGINS=\"/var/lib/grafana/plugins\" \\\n    GF_PATHS_PROVISIONING=\"/etc/grafana/provisioning\"\n\nWORKDIR $GF_PATHS_HOME\n\nRUN apk add --no-cache ca-certificates bash tzdata && \\\n    apk add --no-cache --upgrade --repository=http://dl-cdn.alpinelinux.org/alpine/edge/main openssl musl-utils\n\nCOPY conf ./conf\n\nRUN mkdir -p \"$GF_PATHS_HOME/.aws\" && \\\n    addgroup -S -g $GF_GID grafana && \\\n    adduser -S -u $GF_UID -G grafana grafana && \\\n    mkdir -p \"$GF_PATHS_PROVISIONING/datasources\" \\\n             \"$GF_PATHS_PROVISIONING/dashboards\" \\\n             \"$GF_PATHS_PROVISIONING/notifiers\" \\\n             \"$GF_PATHS_LOGS\" \\\n             \"$GF_PATHS_PLUGINS\" \\\n             \"$GF_PATHS_DATA\" && \\\n    cp \"$GF_PATHS_HOME/conf/sample.ini\" \"$GF_PATHS_CONFIG\" && \\\n    cp \"$GF_PATHS_HOME/conf/ldap.toml\" /etc/grafana/ldap.toml && \\\n    chown -R grafana:grafana \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\" && \\\n    chmod -R 777 \"$GF_PATHS_DATA\" \"$GF_PATHS_HOME/.aws\" \"$GF_PATHS_LOGS\" \"$GF_PATHS_PLUGINS\" \"$GF_PATHS_PROVISIONING\"\n\n# PhantomJS\nCOPY --from=1 /tmp/lib /lib\nCOPY --from=1 /tmp/lib64 /lib64\nCOPY --from=1 /tmp/usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu\nCOPY --from=1 /tmp/usr/share /usr/share\nCOPY --from=1 /tmp/etc/fonts /etc/fonts\nCOPY --from=1 /usr/local/bin/phantomjs /usr/local/bin\n\nCOPY --from=0 /go/src/github.com/grafana/grafana/bin/linux-amd64/grafana-server /go/src/github.com/grafana/grafana/bin/linux-amd64/grafana-cli ./bin/\nCOPY --from=1 /usr/src/app/public ./public\nCOPY --from=1 /usr/src/app/tools ./tools\nCOPY tools/phantomjs/render.js ./tools/phantomjs/render.js\n\nEXPOSE 3000\n\nCOPY ./packaging/docker/run.sh /run.sh\n\nUSER grafana\nENTRYPOINT [ \"/run.sh\" ]\n"
}