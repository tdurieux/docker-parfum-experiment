{
  "startTime": 1674248536617,
  "endTime": 1674248537861,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 1,
        "columnEnd": 42
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#================================================================================\n# Stage 1: build all the GreatSPN modules and their dependencies\n#================================================================================\nFROM fedora AS builder\n\nRUN dnf -y install git wget\n\nRUN sudo dnf -y install gcc gcc-c++ gmp-devel gmp-c++ gmp boost-devel flex-devel \\\n    ant glib2-devel patch python glpk-devel autoconf automake ghostscript\\\n    libtool zip flex byacc time graphviz suitesparse-devel motif-devel make \\\n    libxml++-devel glibmm24-devel cmake diffutils java-latest-openjdk\n\nENV MAKE_ARGS=-j4\n\n# Install Meddly\nRUN git clone  https://github.com/asminer/meddly.git meddly ; \\\n    cd meddly ; \\\n    ./autogen.sh ; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local; \\\n    make ${MAKE_ARGS} ; \\\n    sudo make install\n\n# Install SPOT\n# NOTE: The URL could change\nRUN wget https://www.lrde.epita.fr/dload/spot/spot-2.9.6.tar.gz; \\\n    tar xzf spot-2.9.6.tar.gz ; rm spot-2.9.6.tar.gz \\\n    cd spot-2.9.6 ; \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --disable-python --disable-debug; \\\n    make ${MAKE_ARGS} ; \\\n    sudo make install\n\n# Install ogdf\nRUN git clone https://github.com/ogdf/ogdf ;\\\n    cd ogdf ;\\\n    mkdir build && cd build && cmake .. && make ${MAKE_ARGS} ;\\\n    sudo make install\n\n# Install lpsolve (latest)\nRUN wget https://datacloud.di.unito.it/index.php/s/cx9oJ5wjsgEjKcs/download/lp_solve_5.5.2.11_source.tar.gz ; \\\n\twget https://raw.githubusercontent.com/greatspn/SOURCES/master/contrib/build_lpsolve.sh ; \\\n\ttar xzf lp_solve_5.5.2.11_source.tar.gz ; rm lp_solve_5.5.2.11_source.tar.gz \\\n\tsh ./build_lpsolve.sh\n\n# Install GreatSPN\nRUN mkdir ~/GreatSPN ;\\\n    cd ~/GreatSPN ;\\\n    git clone https://github.com/greatspn/SOURCES.git SOURCES ;\\\n    cd ~/GreatSPN/SOURCES ;\\\n\tgit pull ;\\\n    make ${MAKE_ARGS} -k derived_objects ;\\\n    make ${MAKE_ARGS} ;\\\n    make ;\\\n    sudo make install\n\n#================================================================================\n# Stage 2: prepare the deployment image with the non-devel packages\n#================================================================================\nFROM fedora AS deploy_base\n\nRUN sudo dnf -y install gmp gmp-c++ gmp boost flex \\\n    glib2 patch glpk lpsolve  \\\n    time graphviz suitesparse motif make \\\n    libxml++ glibmm24 ghostscript \\\n    java-latest-openjdk gcc gcc-c++ make\n\n#================================================================================\n# Stage 3: Update the GreatSPN framework by pulling/remaking the latest changes\n#================================================================================\nFROM builder AS updater\n\nARG update_version\nRUN cd ~/GreatSPN/SOURCES ;\\\n    git pull ;\\\n    make ${MAKE_ARGS} -k derived_objects ;\\\n    make ${MAKE_ARGS} ;\\\n    make ;\\\n    sudo make install\n\n#================================================================================\n# Stage 4: Copy the compiled binaries into the deployment image\n#================================================================================\nFROM deploy_base\n\n# copy the compiled binaries\nCOPY --from=updater /usr/local/GreatSPN /usr/local/GreatSPN\nCOPY --from=updater /usr/local/lib /usr/local/lib\nRUN rm -rf /usr/local/lib/*.a /usr/local/lib/*.la\n\n# add library & binary paths\nRUN echo '/usr/local/lib' > /etc/ld.so.conf.d/greatspn.conf ; ldconfig\nRUN echo 'export PATH=$PATH:/usr/local/GreatSPN/scripts' > /etc/bashrc\n\n\n\n\n\n\n\n\n\n\n\n\n"
}