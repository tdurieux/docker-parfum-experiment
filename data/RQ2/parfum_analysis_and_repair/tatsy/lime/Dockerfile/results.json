{
  "startTime": 1674217676511,
  "endTime": 1674217677306,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseY",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n## Load docker image\n#\nFROM tatsy/ubuntu-cxx:opencv\n\n#\n## Environment variables\n#\nENV TERM xterm\nENV BRANCH_NAME @BRANCH_NAME@\nENV PULL_REQUEST @PULL_REQUEST@\nENV CC @C_COMPILER@\nENV CXX @CXX_COMPILER@\nENV PYTHON_VERSION @PYTHON_VERSION@\nENV BUILD_STATIC_LIB @BUILD_STATIC_LIB@\nENV PATH /opt/conda/bin:$PATH\n\n#\n## update/upgrade\n#\nRUN apt-get update -q && apt-get -qq -y --no-install-recommends install cppcheck cccc doxygen && rm -rf /var/lib/apt/lists/*; #RUN apt-get upgrade -q\n\n#\n## Install cppcheck, cccc, and doxygen\n#\n\n\n#\n## Install Python through Miniconda\n#\nRUN wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -q -O miniconda3.sh\nRUN sh ./miniconda3.sh -b -p /opt/conda\nRUN rm ./miniconda3.sh\n\n#\n## Install Google test\n#\nRUN git clone https://github.com/google/googletest.git\nRUN \\\n  cd googletest && \\\n  mkdir build && cd build && \\\n  cmake -D gtest_disable_pthreads=ON .. && \\\n  make && make install\n\n#\n## Download lime source codes\n#\nRUN git clone --depth 12 -b $BRANCH_NAME https://github.com/tatsy/lime.git #redo\nRUN \\\n  if [ $PULL_REQUEST != \"false\" ]; then \\\n    cd lime && \\\n    git fetch origin +refs/pull/$PULL_REQUEST/merge && \\\n    git checkout --quiet --force FETCH_HEAD; \\\n  fi\n\nRUN \\\n  cd lime && \\\n  git submodule update --init --recursive\n\n#\n## Create conda env and change default env\n#\nRUN \\\n  cd lime && \\\n  sed -i -e \"s/python/python=$PYTHON_VERSION/\" environment.yml && \\\n  conda env create -f environment.yml\nENV PATH /opt/conda/envs/lime/bin:$PATH\nENV CONDA_DEFAULT_ENV lime\n\n#\n## Build lime\n#\nRUN \\\n  cd lime && \\\n  cmake \\\n    -D CMAKE_BUILD_TYPE=Release \\\n    -D LIME_BUILD_TESTS=ON \\\n    -D LIME_BUILD_EXAMPLES=ON \\\n    -D LIME_BUILD_STATIC_LIB=$BUILD_STATIC_LIB \\\n    -D PYTHON_EXECUTABLE=/opt/conda/envs/lime/bin/python \\\n    -D PYBIND11_PYTHON_VERSION=$PYTHON_VERSION \\\n    -D LIME_BUILD_PYTHON_MODULE=ON . && \\\n  cmake --build . -- -j4\n\n#\n## Install pylime\n#\nRUN \\\n  cd lime && \\\n  python setup.py install\n\n#\n## # of threads used by OpenMP\n#\nENV OMP_NUM_THREADS 4\n\n#\n## Define working direcotry\n#\nWORKDIR /root/lime\n"
}