{
  "startTime": 1674254765441,
  "endTime": 1674254766467,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 47
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.3\nMAINTAINER Postman Labs <help@getpostman.com>\n\n# Set node version\nENV NODE_VERSION 4.3.2\n\n# Set locale\nENV LC_ALL en_US.UTF-8\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US.UTF-8\n\n# Install node\nRUN apk add --no-cache --update nodejs=${NODE_VERSION}-r1;\n\n# Set newman version\nENV NEWMAN_VERSION 3.9.2\n\n# Install newman\nRUN npm install -g newman@${NEWMAN_VERSION}; npm cache clean --force;\n\n# Set workdir to /etc/newman\n# When running the image, mount the directory containing your collection to this location\n#\n# docker run -v <path to collections directory>:/etc/newman ...\n#\n# In case you mount your collections directory to a different location, you will need to give absolute paths to any\n# collection, environment files you want to pass to newman, and if you want newman reports to be saved to your disk.\n# Or you can change the workdir by using the -w or --workdir flag\n\nWORKDIR /etc/newman\n\n# Set newman as the default container command\n# Now you can run the container via\n#\n# docker run -v /home/collections:/etc/newman -t postman/newman_alpine33 -c YourCollection.json.postman_collection \\\n#                                                                        -e YourEnvironment.postman_environment \\\n#                                                                        -H newman_report.html\n\nENTRYPOINT [\"newman\"]\n"
}