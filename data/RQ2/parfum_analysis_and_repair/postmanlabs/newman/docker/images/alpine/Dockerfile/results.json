{
  "startTime": 1674252238530,
  "endTime": 1674252239080,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:16-alpine\nLABEL maintainer=\"Postman Labs <help@postman.com>\"\n\nARG NEWMAN_VERSION\n\n# Set environment variables\nENV LC_ALL=\"en_US.UTF-8\" LANG=\"en_US.UTF-8\" LANGUAGE=\"en_US.UTF-8\" ALPINE_NODE_REPO=\"oznu/alpine-node\"\n\n# Bail out early if NODE_VERSION is not provided\nRUN if [ ! $(echo $NEWMAN_VERSION | grep -oE \"^[0-9]+\\.[0-9]+\\.[0-9]+$\") ]; then \\\n        echo \"\\033[0;31mA valid semver Newman version is required in the NEWMAN_VERSION build-arg\\033[0m\"; \\\n        exit 1; \\\n    fi && \\\n    # Install Newman globally\n    npm install --global newman@${NEWMAN_VERSION}; npm cache clean --force;\n\n# Set workdir to /etc/newman\n# When running the image, mount the directory containing your collection to this location\n#\n# docker run -v <path to collections directory>:/etc/newman ...\n#\n# In case you mount your collections directory to a different location, you will need to give absolute paths to any\n# collection, environment files you want to pass to newman, and if you want newman reports to be saved to your disk.\n# Or you can change the workdir by using the -w or --workdir flag\nWORKDIR /etc/newman\n\n# Set newman as the default container command\n# Now you can run the container via\n#\n# docker run -v /home/collections:/etc/newman -t postman/newman_alpine run YourCollection.json.postman_collection \\\n#                                                                        -e YourEnvironment.postman_environment \\\n#                                                                        -H newman_report.html\nENTRYPOINT [\"newman\"]\n"
}