{
  "startTime": 1674255779278,
  "endTime": 1674255780535,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 62,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 25
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04\nLABEL maintainer justin.you@synopsys.com\n\n# workaround bug https://grigorkh.medium.com/fix-tzdata-hangs-docker-image-build-cdb52cc3360d\nENV TZ=Asia/Dubai\nRUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone\n\nRUN apt update\nRUN apt install --no-install-recommends -y tzdata && rm -rf /var/lib/apt/lists/*;\n\n\n\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n        build-essential \\\n        curl \\\n        zip \\\n        unzip \\\n        tar \\\n        cmake \\\n        git \\\n        wget \\\n        python3.8-dev \\\n        python3-skimage \\\n        python3-opencv \\\n        python3-pip \\\n        #required by pandas\n        libgfortran5 \\\n        libopenblas-dev \\\n        libatlas-base-dev \\\n        libboost-python1.65-dev \\\n        libboost-all-dev \\\n        libgflags-dev \\\n        #Directly incorporate Google glog projects from Github instead of consume it.\n        #See https://github.com/google/glog#incorporating-glog-into-a-cmake-project\n        #Not install google glog into env and incorporate into cmake build directly.\n        libgoogle-glog-dev \\\n        libhdf5-serial-dev \\\n        libleveldb-dev \\\n        liblmdb-dev \\\n        libopencv-dev \\\n        #libprotobuf-dev \\\n        #protobuf-compiler \\\n        libsnappy-dev \\\n        libmatio-dev && \\\n    rm -rf /var/lib/apt/lists/*\n\nRUN pwd && \\\n      git clone https://github.com/microsoft/vcpkg.git  && \\\n      ls -l && \\\n      cd /vcpkg && \\\n      ls -l && \\\n      ./bootstrap-vcpkg.sh && \\\n      ls -l && \\\n      ./vcpkg integrate install && \\\n      ./vcpkg install protobuf[zlib] --triplet x64-linux \n\nENV CAFFE_ROOT=/opt/caffe\nWORKDIR $CAFFE_ROOT\n\n#update cmake version from default 3.10 to latest\nRUN pip3 install --no-cache-dir --upgrade pip && \\\n    pip3 install --no-cache-dir --upgrade cmake && \\\n    cmake --version\n\n#Hack for libboost-python binding when both python2 and python3 present.   \nRUN cd /usr/lib/x86_64-linux-gnu && \\\n    unlink libboost_python.so && \\\n    unlink libboost_python.a && \\\n    ln -s libboost_python-py36.so libboost_python.so && \\\n    ln -s libboost_python-py36.a libboost_python.a && \\\n    cd -\n\n#Start Building\nRUN git clone https://github.com/foss-for-synopsys-dwc-arc-processors/synopsys-caffe.git . && \\\n    pip3 install --no-cache-dir --upgrade pip && \\\n    cd python && for req in $(cat requirements.txt) pydot; do pip3 install --no-cache-dir $req; done && cd .. && \\\n    mkdir build && cd build && \\\n    cmake -DCMAKE_TOOLCHAIN_FILE=/vcpkg/scripts/buildsystems/vcpkg.cmake -DCPU_ONLY=1 .. && \\\n    make -j\"$(nproc)\" && \\\n    make runtest && \\\n    make pycaffe\n\nENV PYCAFFE_ROOT $CAFFE_ROOT/python\nENV PYTHONPATH $PYCAFFE_ROOT:$PYTHONPATH\nENV PATH $CAFFE_ROOT/build/tools:$PYCAFFE_ROOT:$PATH\nRUN echo \"$CAFFE_ROOT/build/lib\" >> /etc/ld.so.conf.d/caffe.conf && ldconfig\n\n\nWORKDIR /workspace\n"
}