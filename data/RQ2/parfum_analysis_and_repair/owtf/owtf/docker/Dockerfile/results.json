{
  "startTime": 1674252841938,
  "endTime": 1674252842488,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 4,
        "columnEnd": 20
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 21
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 54,
        "lineEnd": 54,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 118
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 33,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 64
      }
    }
  ],
  "repairedDockerfile": "FROM kalilinux/kali-rolling:latest\n\nLABEL Viyat Bhalodia viyat.bhalodia@owasp.org\n\n# Bypass confirmations\nENV DEBIAN_FRONTEND noninteractive\n\n# Fix for exporting a SHELL variable in the environment\nENV TERM xterm\nENV SHELL /bin/bash\n\n# Flush the buffer for stderr, stdout logging\nENV PYTHONUNBUFFERED 1\n# Python wonâ€™t try to write .pyc or .pyo files on the import of source modules\nENV PYTHONDONTWRITEBYTECODE 1\n\n# Needed for installation of pycurl using pip in kali\nENV PYCURL_SSL_LIBRARY openssl\n\n# Install dependencies\nRUN apt-get -y update && apt-get clean\nRUN apt-get -y --no-install-recommends install xvfb xserver-xephyr libxml2-dev libxslt-dev libssl-dev zlib1g-dev gcc python-all-dev \\\npostgresql-server-dev-all postgresql-client postgresql-client-common \\\npostgresql libcurl4-openssl-dev proxychains tor ca-certificates libpq-dev \\\nlibxslt1-dev libldap2-dev libsasl2-dev libffi-dev net-tools lsof locales-all \\\nlibyaml-dev python3.9 python3.9-dev build-essential python3.9-venv python3-lxml python3-impacket golang-go python3-pip && rm -rf /var/lib/apt/lists/*;\n\n# Set locale\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US:en\nENV LC_ALL en_US.UTF-8\n\n# Install optional tools (LBD, arachni, gnutls-bin, o-saft and metagoofil)\nRUN apt-get -y --no-install-recommends install lbd theharvester tlssled nikto dnsrecon nmap whatweb skipfish dirbuster \\\nmetasploit-framework wpscan wapiti hydra metagoofil o-saft amass && rm -rf /var/lib/apt/lists/*;\n\n# Create a dedicated OWTF directory to copy source to and run from.\nRUN cd / && /bin/mkdir -p owtf\nADD . /owtf\nADD docker/wait-for-it.sh /usr/bin/wait-for-it.sh\nRUN chmod +x /usr/bin/wait-for-it.sh\n\n#Create and activating a python virtualenv\nENV VIRTUAL_ENV=/bin/owtf\nRUN python3.9 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\n\n# Ensure pip and setuptools are at their latest versions\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir setuptools==57.5.0\nRUN pip install --no-cache-dir cffi\nRUN pip install --no-cache-dir wheel\n\n#Installing python dependencies\nRUN pip install --no-cache-dir -r /owtf/requirements/base.txt\n\n# Install OWTF using the recommended method (setup.py)\nRUN cd /owtf &&\\\npython setup.py install\n\n# Set the current working directory to OWTF root directory\nWORKDIR /owtf\n\n# Expose the required ports for OWTF to run\nEXPOSE 8008 8009 8010\n"
}