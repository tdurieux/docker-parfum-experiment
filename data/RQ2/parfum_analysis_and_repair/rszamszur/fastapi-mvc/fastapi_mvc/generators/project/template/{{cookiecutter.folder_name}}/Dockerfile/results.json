{
  "startTime": 1674217026036,
  "endTime": 1674217026675,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 67
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# This digest SHA points to python:3.9-slim-bullseye tag\nFROM python@sha256:a9cf2d58b33ba6f273e80d1f6272186d8930c062fa2a2abc65f35bdf4609a032 as builder\nLABEL maintainer=\"{{cookiecutter.author}}, {{cookiecutter.email}}\"\n\n# Configure environment variables\nENV PYTHONUNBUFFERED=1 \\\n    PYTHONHASHSEED=0 \\\n    SOURCE_DATE_EPOCH=315532800 \\\n    CFLAGS=-g0 \\\n    PYTHONDONTWRITEBYTECODE=1 \\\n    PIP_NO_CACHE_DIR=off \\\n    PIP_DISABLE_PIP_VERSION_CHECK=on \\\n    PIP_DEFAULT_TIMEOUT=100 \\\n    POETRY_HOME=\"/opt/poetry\" \\\n    POETRY_VIRTUALENVS_IN_PROJECT=true \\\n    POETRY_NO_INTERACTION=1 \\\n    POETRY_VERSION=1.1.12 \\\n    POETRY_INSTALL_OPTS=\"--no-interaction --no-dev --no-root\" \\\n    PYSETUP_PATH=\"/pysetup\" \\\n    VENV_PATH=\"/pysetup/.venv\"\n\nENV PATH=\"${POETRY_HOME}/bin:${VENV_PATH}/bin:${PATH}\"\n\n# Configure Debian snapshot archive\nRUN echo \"deb [check-valid-until=no] http://snapshot.debian.org/archive/debian/20220124 bullseye main\" > /etc/apt/sources.list && \\\n    echo \"deb [check-valid-until=no] http://snapshot.debian.org/archive/debian-security/20220124 bullseye-security main\" >> /etc/apt/sources.list && \\\n    echo \"deb [check-valid-until=no] http://snapshot.debian.org/archive/debian/20220124 bullseye-updates main\" >> /etc/apt/sources.list\n\n# Install build tools and dependencies\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y curl build-essential && rm -rf /var/lib/apt/lists/*;\n\n# Install project without root package, then build and install from wheel.\n# This is needed because Poetry doesn't support installing root package without\n# editable mode: https://github.com/python-poetry/poetry/issues/1382\n# Otherwise venv with source code would need to be copied to final image.\nCOPY . $PYSETUP_PATH\nWORKDIR $PYSETUP_PATH\nRUN make install && \\\n    poetry build && \\\n    $VENV_PATH/bin/pip install --no-cache-dir --no-deps dist/*.whl\n\n# Override virtualenv Python symlink to Python path in gcr.io/distroless/python3 image\nRUN ln -fns /usr/bin/python $VENV_PATH/bin/python\n\n\n# Use distroless Python3 image, locked to digest SHA in order to have deterministic Python version - 3.9.2.\n# For the time being, gcr.io/distroless/python3 doesn't have any tags to particular minor version.\n# This digest SHA points to python3:nonroot\nFROM gcr.io/distroless/python3@sha256:a66e582f67df92987039ad8827f0773f96020661c7ae6272e5ab80e2d3abc897\nLABEL maintainer=\"{{cookiecutter.author}}, {{cookiecutter.email}}\"\n\nENV PYTHONDONTWRITEBYTECODE=1 \\\n    PYTHONUNBUFFERED=1 \\\n    VENV_PATH=\"/pysetup/.venv\"\n\nCOPY --from=builder $VENV_PATH $VENV_PATH\n\nENV PATH=\"${VENV_PATH}/bin:${PATH}\"\n\nUSER nonroot\n\nEXPOSE 8000/tcp\n\nSTOPSIGNAL SIGINT\n\nENTRYPOINT [\"{{cookiecutter.script_name}}\"]\n\nCMD [\"serve\", \"--bind\", \"0.0.0.0:8000\"]\n"
}