{
  "startTime": 1674253195283,
  "endTime": 1674253196921,
  "originalSmells": [
    {
      "rule": "rmRecursiveAfterMktempD",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 24,
        "columnEnd": 33
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 92
      }
    },
    {
      "rule": "mkdirUsrSrcThenRemove",
      "position": {
        "lineStart": 88,
        "lineEnd": 88,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 92,
        "lineEnd": 107,
        "columnStart": 4,
        "columnEnd": 57
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 54
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 2,
        "columnEnd": 64
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM phusion/baseimage:jammy-1.0.0\n# https://github.com/phusion/baseimage-docker/releases\n# build for gaiterjones/phusion1100-apache2-php7-4:latest\n# VERY JAMMY DUDE\n# UBUNTU 22.04\n\n# phpize deps\nRUN apt-get update && apt-get install -y \\\n\t\tautoconf \\\n\t\tfile \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tlibc-dev \\\n\t\tmake \\\n\t\tpkg-config \\\n\t\tre2c \\\n\t\tzlib1g-dev \\\n\t--no-install-recommends && rm -r /var/lib/apt/lists/*\n\n# persistent / runtime deps\nRUN apt-get update && apt-get install -y \\\n\t\tca-certificates \\\n\t\tcurl \\\n\t\tlibedit2 \\\n\t\tlibsqlite3-0 \\\n\t\tlibxml2 \\\n\t--no-install-recommends && rm -r /var/lib/apt/lists/*\n\nENV PHP_INI_DIR /usr/local/etc/php\nRUN mkdir -p $PHP_INI_DIR/conf.d\n\nRUN apt-get update && apt-get install -y apache2 apache2-utils --no-install-recommends && rm -rf /var/lib/apt/lists/*\n\nRUN rm -rf /var/www/html && mkdir -p /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html && chown -R www-data:www-data /var/lock/apache2 /var/run/apache2 /var/log/apache2 /var/www/html\n\n# Apache + PHP requires preforking Apache for best results\nRUN a2dismod mpm_event && a2enmod mpm_prefork\n\nRUN mv /etc/apache2/apache2.conf /etc/apache2/apache2.conf.dist && rm /etc/apache2/conf-enabled/* /etc/apache2/sites-enabled/*\nCOPY apache2.conf /etc/apache2/apache2.conf\n# it'd be nice if we could not COPY apache2.conf until the end of the Dockerfile, but its contents are checked by PHP during compilation\n\nENV PHP_EXTRA_BUILD_DEPS apache2-dev\nENV PHP_EXTRA_CONFIGURE_ARGS --with-apxs2\n\n# https://www.openssl.org/source\n# Compile OpenSSL 1.1.1 for PHP 7.4.X\n#\nENV OPENSSL_VERSION openssl-1.1.1p\nRUN set -xe \\\n\t&& curl -fSL \"https://www.openssl.org/source/$OPENSSL_VERSION.tar.gz\" -o \"$OPENSSL_VERSION.tar.gz\" \\\n\t&& ls -al \\\n\t&& tar xzf $OPENSSL_VERSION.tar.gz \\\n\t&& cd $OPENSSL_VERSION \\\n\t&& ./Configure --prefix=/opt/$OPENSSL_VERSION/bin -fPIC -shared linux-x86_64 \\\n\t&& make -j 8  \\\n\t&& make install \\\n\t&& export PKG_CONFIG_PATH=/opt/$OPENSSL_VERSION/bin/lib/pkgconfig && rm $OPENSSL_VERSION.tar.gz\n\nENV GPG_KEYS 5A52880781F755608BF815FC910DEB46F53EA312 42670A7FE4D0441C8E4632349E4FDC074A4EF02D\n\n# http://php.net/releases/\nENV PHP_VERSION 7.4.30\nENV PHP_FILENAME php-7.4.30.tar.xz\nENV PHP_SHA256 ea72a34f32c67e79ac2da7dfe96177f3c451c3eefae5810ba13312ed398ba70d\n\nRUN set -xe \\\n\t&& buildDeps=\" \\\n\t\t$PHP_EXTRA_BUILD_DEPS \\\n\t\tlibcurl4-openssl-dev \\\n\t\tlibedit-dev \\\n\t\tlibsqlite3-dev \\\n\t\tlibssl-dev \\\n\t\tlibxml2-dev \\\n\t\tlibonig-dev \\\n\t\tlibsodium-dev \\\n\t\txz-utils \\\n\t\" \\\n\t&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \\\n\t&& curl -fSL \"https://php.net/get/$PHP_FILENAME/from/this/mirror\" -o \"$PHP_FILENAME\" \\\n\t&& echo \"$PHP_SHA256  *$PHP_FILENAME\" | sha256sum -c - \\\n\t&& curl -fSL \"https://php.net/get/$PHP_FILENAME.asc/from/this/mirror\" -o \"$PHP_FILENAME.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& for key in $GPG_KEYS; do \\\n\t\tgpg --batch --keyserver hkp://keyserver.ubuntu.com --recv-keys \"$key\"; \\\n\tdone \\\n\t&& gpg --batch --verify \"$PHP_FILENAME.asc\" \"$PHP_FILENAME\" \\\n\t&& rm -r \"$GNUPGHOME\" \"$PHP_FILENAME.asc\" \\\n\t&& mkdir -p /usr/src/php \\\n\t&& tar -xf \"$PHP_FILENAME\" -C /usr/src/php --strip-components=1 \\\n\t&& rm \"$PHP_FILENAME\" \\\n\t&& cd /usr/src/php \\\n\t&& ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t\t--with-config-file-path=\"$PHP_INI_DIR\" \\\n\t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \\\n\t\t$PHP_EXTRA_CONFIGURE_ARGS \\\n\t\t--disable-cgi \\\n# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)\n\t\t--enable-mysqlnd \\\n# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)\n\t\t--enable-mbstring \\\n\t\t--with-curl \\\n\t\t--with-webp \\\n\t\t--with-libedit \\\n\t\t--with-openssl \\\n\t\t--with-zlib \\\n\t\t--with-pear \\\n\t\tPKG_CONFIG_PATH=/opt/$OPENSSL_VERSION/bin/lib/pkgconfig \\\n\t&& make -j\"$(nproc)\" \\\n\t&& make install \\\n\t&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \\\n\t&& make clean \\\n\t&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps && rm -rf -d && rm -rf /usr/src/php\n\nCOPY docker-php-ext-* /usr/local/bin/\nRUN chmod +x /usr/local/bin/docker-php-ext-*\n\n##<autogenerated>##\nWORKDIR /var/www/html\n\nEXPOSE 80\n\nCMD [\"/sbin/my_init\"]\n\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN mkdir /etc/service/apache2\nADD apache2-foreground /etc/service/apache2/run\nRUN chmod +x /etc/service/apache2/run\n"
}