{
  "startTime": 1674220148069,
  "endTime": 1674220149150,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 7,
        "columnEnd": 95
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 7,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 74,
        "lineEnd": 74,
        "columnStart": 4,
        "columnEnd": 108
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 7,
        "columnEnd": 49
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 91,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 76
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 7,
        "columnEnd": 62
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 7,
        "columnEnd": 18
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 25,
        "columnEnd": 57
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 25,
        "columnEnd": 106
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM gaiterjones/phusion1100-apache2-php7-4:7\nLABEL maintainer=\"paj@gaiterjones.com\"\nLABEL description=\"Magento 2 PHP-APACHE Service\"\n\nENV MAGENTO_VERSION 2.4.0\n# sha256sum Magento-Open-Source-2.4.0.tar.gz\nENV MAGENTO_SHA256 7f8e13412103b8f63979fff353fefb3d6475296bd76a1f4f4407c76706f9d9a5\n\n# dependencies\nRUN requirements=\"libgnutls28-dev libonig-dev libzip-dev libpng-dev libcurl3-dev zlib1g-dev libpng-dev libjpeg-turbo8 libjpeg-turbo8-dev libfreetype6 libfreetype6-dev libicu-dev libxslt1-dev nano git\" \\\r\n    && apt-get update && apt-get install --no-install-recommends -y $requirements && rm -rf /var/lib/apt/lists/* \\\n    && docker-php-ext-configure gd \\\r\n      --enable-gd \\\r\n      --with-jpeg \\\r\n      --with-freetype \\\n    && docker-php-ext-install -j$(nproc) gd \\\n    && docker-php-ext-install -j$(nproc) pdo_mysql \\\n    && docker-php-ext-install -j$(nproc) bcmath \\\n    && docker-php-ext-install -j$(nproc) mbstring \\\n    && docker-php-ext-install -j$(nproc) zip \\\n    && docker-php-ext-install -j$(nproc) intl \\\n    && docker-php-ext-install -j$(nproc) xsl \\\n    && docker-php-ext-install -j$(nproc) soap \\\n    && docker-php-ext-install -j$(nproc) opcache \\\n    && docker-php-ext-install -j$(nproc) sockets \\\n    && requirementsToRemove=\"libcurl3-dev libfreetype6-dev libpng-dev libjpeg-turbo8-dev\" \\\n    && apt-get purge --auto-remove -y $requirementsToRemove\n\n# Install XDEBUG extension\n# Xdebug replaces PHP's var_dump() function for displaying variables.\n# https://xdebug.org/download.php\n# confirm => php -m | grep -i xdebug\nRUN set -x \\\r\n    && pecl install xdebug-2.9.5 \\\r\n    && docker-php-ext-enable xdebug\n\n# Install memcache extension\n#\nRUN set -x \\\r\n    && apt-get update && apt-get install -y --no-install-recommends unzip libssl-dev libpcre3 libpcre3-dev \\\r\n    && cd /tmp \\\n    && curl -f -sSL -o php7.zip https://github.com/websupport-sk/pecl-memcache/archive/4.0.5.2.zip \\\n    && unzip php7 \\\n    && cd pecl-memcache-4.0.5.2 \\\n    && /usr/local/bin/phpize \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --with-php-config=/usr/local/bin/php-config \\\n    && make \\\n    && make install \\\n    && echo \"extension=memcache.so\" > /usr/local/etc/php/conf.d/ext-memcache.ini \\\n    && rm -rf /tmp/pecl-memcache-php7 php7.zip && rm -rf /var/lib/apt/lists/*;\n\n# Install msmtp\n# CAUTION : requires libgnutls28-dev for TLS\nRUN set -x \\\r\n    && cd /tmp \\\n    && curl -f -sSL -o msmtp.tar https://marlam.de/msmtp/releases/msmtp-1.8.12.tar.xz \\\n    && tar -xvf msmtp.tar \\\n    && cd msmtp-1.8.12 \\\n    && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n    && make \\\n    && make install \\\n    && rm -rf /tmp/msmtp-1.8.12 msmtp.tar \\\n    && touch /var/log/msmtp.log \\\n    && touch /usr/local/etc/msmtprc \\\n    && chmod 0644 /usr/local/etc/msmtprc \\\n    && chmod 777 /var/log/msmtp.log\n\n# get magento 2 and extract\n#\nRUN set -x \\\r\n\t&& mkdir /var/www/dev \\\r\n\t&& rm -rf /var/www/html/* \\\r\n\t&& mkdir /tmp/magento2 \\\r\n\t&& cd /tmp/magento2 \\\n\t&& curl -f https://pe.terjon.es/dropbox/Magento-Open-Source-$MAGENTO_VERSION.tar.gz -o $MAGENTO_VERSION.tar.gz \\\n\t&& echo \"$MAGENTO_SHA256  $MAGENTO_VERSION.tar.gz\" | sha256sum -c - \\\n\t&& tar xvf $MAGENTO_VERSION.tar.gz \\\n\t&& cd .. \\\n\t&& mv magento2 /var/www/dev/ \\\n    && mkdir /var/www/dev/magento2/composer_home && rm $MAGENTO_VERSION.tar.gz\n\n# install composer\n#\nRUN set -x \\\n    && curl -f -sS https://getcomposer.org/installer | php \\\n    && mv composer.phar /usr/local/bin/composer\n\n# install magerun 2\n#\nRUN set -x \\\r\n\t&& cd /tmp \\\n\t&& curl -f -s -o n98-magerun2.phar https://files.magerun.net/n98-magerun2.phar \\\n\t&& chmod +x ./n98-magerun2.phar \\\n\t&& mv ./n98-magerun2.phar /usr/local/bin/\n\n# prepare Mage source\n#\n# add Magento 2 file owner\n#\n# ensure www-data is group 33\n# add new file owner group 1000\n# file owner member of www-data\n#\nCOPY ./healthcheck.php /var/www/dev/magento2/\nCOPY ./auth.json /var/www/.composer/\nENV COMPOSER_HOME=/var/www/.composer\nRUN set -x \\\r\n    && usermod -u 33 www-data \\\r\n    && adduser --disabled-password --gecos '' magento \\\r\n    && usermod -u 1000 magento \\\r\n    && usermod -a -G www-data magento \\\r\n    && chown -R magento:www-data /var/www\n\n# composer\nRUN chsh -s /bin/bash magento \\\r\n    && su magento -c \"cd /var/www/dev/magento2 && composer install\"\n\n# php RedisAdmin\n# https://github.com/erikdubbelboer/phpRedisAdmin\n#\nRUN su magento -c \"cd /var/www/dev && composer create-project -s dev erik-dubbelboer/php-redis-admin /var/www/dev/phpRedisAdmin\"\n\n# Magento DEVELOPMENT permissions (this may take a while...)\n#\nRUN set -x \\\r\n    && cd /var/www/dev/magento2 \\\r\n    && rm -rf ./generated/metadata/* ./generated/code/* ./pub/static/* ./var/cache/* ./var/page_cache/* ./var/view_preprocessed/* ./var/log/* \\\r\n    && find var generated vendor pub/static pub/media app/etc -type f -exec chmod g+w {} \\; && find var generated vendor pub/static pub/media app/etc -type d -exec chmod g+ws {} \\; && chmod u+x bin/magento\n\n# scripts\n#\nCOPY ./bin/install-magento /usr/local/bin/install-magento\nRUN chmod +x /usr/local/bin/install-magento\nCOPY ./bin/install-sampledata /usr/local/bin/install-sampledata\nRUN chmod +x /usr/local/bin/install-sampledata\n\n# configure apache env\n#\nENV APACHE_RUN_USER www-data\nENV APACHE_RUN_GROUP www-data\nENV APACHE_LOG_DIR /var/log/apache2\nENV APACHE_PID_FILE /var/run/apache2.pid\nENV APACHE_RUN_DIR /var/run/apache2\nENV APACHE_LOCK_DIR /var/lock/apache2\n# Ensure old PID due to previous usage killed\nRUN rm -f /var/run/apache2/apache2.pid\n\n# cleanup\n#\nRUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nWORKDIR /var/www/dev/magento2\n"
}