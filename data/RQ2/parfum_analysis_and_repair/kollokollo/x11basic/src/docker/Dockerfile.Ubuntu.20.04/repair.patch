diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kollokollo/x11basic/src/docker/Dockerfile.Ubuntu.20.04 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kollokollo/x11basic/src/docker/Dockerfile.Ubuntu.20.04/repaired.Dockerfile
index bd5a360..6165f7f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/kollokollo/x11basic/src/docker/Dockerfile.Ubuntu.20.04
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/kollokollo/x11basic/src/docker/Dockerfile.Ubuntu.20.04/repaired.Dockerfile
@@ -1,6 +1,6 @@
 # Dockerfile for X11-Basic based on the one by Bruno https://github.com/shakenfr/x11basic_docker/
 # Start with Ubuntu 20.04
-# The docker file generates an installable .deb package of X11-Basic as well as 
+# The docker file generates an installable .deb package of X11-Basic as well as
 # the User-Manul as .pdf
 # as well as a setup.exe for WINDOWS
 #
@@ -14,32 +14,32 @@ RUN echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selectio
 
 
 RUN apt-get update \
-&& apt-get install -y apt-utils git tcsh nano vim curl wget make gcc build-essential
-RUN apt-get install -y  checkinstall imagemagick transfig zip unzip
-RUN apt-get install -y libsdl-gfx1.2-dev libsdl1.2-dev libsdl-ttf2.0-dev
+&& apt-get install --no-install-recommends -y apt-utils git tcsh nano vim curl wget make gcc build-essential && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y checkinstall imagemagick transfig zip unzip && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y libsdl-gfx1.2-dev libsdl1.2-dev libsdl-ttf2.0-dev && rm -rf /var/lib/apt/lists/*;
 
 #
 # For MQTT Version
 #
 
-RUN apt-get install -y libssl-dev
+RUN apt-get install --no-install-recommends -y libssl-dev && rm -rf /var/lib/apt/lists/*;
 
 #
 # Crosscompiler for WINDOWS
 #
-RUN apt-get install -y gcc-mingw-w64 wine
+RUN apt-get install --no-install-recommends -y gcc-mingw-w64 wine && rm -rf /var/lib/apt/lists/*;
 
 #
 # Prepare for the WINDOWS version
 #
 RUN dpkg --add-architecture i386
 RUN apt-get update
-RUN apt-get install -y wine32
+RUN apt-get install --no-install-recommends -y wine32 && rm -rf /var/lib/apt/lists/*;
 
-RUN wget https://files.jrsoftware.org/is/5/isetup-5.5.8.exe  
+RUN wget https://files.jrsoftware.org/is/5/isetup-5.5.8.exe 
 RUN mkdir -p /root
 COPY wineblob.tar.gz /root/
-RUN cd /root/; tar xzfv wineblob.tar.gz
+RUN cd /root/; tar xzfv wineblob.tar.gz && rm wineblob.tar.gz
 RUN chown -R 0 /root/.wine
 #RUN wine isetup-5.5.8.exe
 
@@ -64,25 +64,25 @@ RUN cd paho.mqtt.c;git checkout fbf9828200f46e212189d98eaedf8e11281e409a
 #
 
 
-RUN apt-get install -y libreadline-dev xorg-dev libasound2-dev fftw-dev libjpeg-dev \ 
-&& apt-get install -y libblas-dev libgmp-dev liblapack-dev libusb-dev libbluetooth-dev libfreetype6-dev
+RUN apt-get install --no-install-recommends -y libreadline-dev xorg-dev libasound2-dev fftw-dev libjpeg-dev \
+&& apt-get install --no-install-recommends -y libblas-dev libgmp-dev liblapack-dev libusb-dev libbluetooth-dev libfreetype6-dev && rm -rf /var/lib/apt/lists/*;
 
 #
 # Latex Installation for the manual
 #
-RUN apt-get install -y texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-fonts-extra
+RUN apt-get install --no-install-recommends -y texlive-latex-base texlive-latex-extra texlive-latex-recommended texlive-fonts-extra && rm -rf /var/lib/apt/lists/*;
 #
 # Some more tex packages
 #
-RUN apt-get install -y texlive-xetex texlive-pstricks texlive-science texlive-formats-extra
+RUN apt-get install --no-install-recommends -y texlive-xetex texlive-pstricks texlive-science texlive-formats-extra && rm -rf /var/lib/apt/lists/*;
 
 
 #
 # Crosscompiler for version for ATARI ST TOS
 #
-RUN apt-get install -y software-properties-common
+RUN apt-get install --no-install-recommends -y software-properties-common && rm -rf /var/lib/apt/lists/*;
 RUN add-apt-repository ppa:vriviere/ppa
-RUN apt install -y cross-mint-essential
+RUN apt install --no-install-recommends -y cross-mint-essential && rm -rf /var/lib/apt/lists/*;
 #
 # Clean up some bit
 #
@@ -95,7 +95,7 @@ RUN apt-get clean
 RUN echo "Get and make X11-Basic (2)"
 RUN git clone https://codeberg.org/kollo/X11Basic.git
 RUN mkdir -p X11Basic/src/Debian/Outputs
-RUN cd X11Basic/src/;./configure --prefix=/usr
+RUN cd X11Basic/src/; ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr
 RUN cd X11Basic/src/;sed -i 's/..\/examples\/compiler\/ybasic/\/X11Basic\/examples\/compiler\/ybasic/g' Makefile
 RUN cd X11Basic/src;make;make install
 #