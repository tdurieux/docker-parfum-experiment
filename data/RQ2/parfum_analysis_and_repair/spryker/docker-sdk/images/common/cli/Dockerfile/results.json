{
  "startTime": 1674251249981,
  "endTime": 1674251251485,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 7,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG SPRYKER_PARENT_IMAGE\n\nFROM ${SPRYKER_PARENT_IMAGE} as cli-basic\n\n# Blackfire client\nRUN mkdir -p /tmp/blackfire \\\n    && architecture=$(case $(uname -m) in i386 | i686 | x86) echo \"i386\" ;; x86_64 | amd64) echo \"amd64\" ;; aarch64 | arm64 | armv8) echo \"arm64\" ;; *) echo \"amd64\" ;; esac) \\\n    && curl -f -A \"Docker\" -L https://blackfire.io/api/v1/releases/cli/linux/$architecture | tar zxp -C /tmp/blackfire \\\n    && mv /tmp/blackfire/blackfire /usr/bin/blackfire \\\n    && rm -Rf /tmp/blackfire\n\nENV PATH=/data/vendor/bin:$PATH\n\nRUN --mount=type=cache,id=aptlib,sharing=locked,target=/var/lib/apt \\\n    --mount=type=cache,id=aptcache,sharing=locked,target=/var/cache/apt \\\n  bash -c 'if [ ! -z \"$(which apt)\" ]; then apt update -y && apt install -y \\\n     inotify-tools \\\n     netcat-openbsd \\\n     git \\\n     redis-tools \\\n     jq \\\n     python \\\n     ; fi'\n# Debian contains outdated Yarn package\nRUN --mount=type=cache,id=aptlib,sharing=locked,target=/var/lib/apt \\\n    --mount=type=cache,id=aptcache,sharing=locked,target=/var/cache/apt \\\n  bash -c 'if [ ! -z \"$(which apt)\" ]; then \\\n     curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \\\n     echo \"deb https://dl.yarnpkg.com/debian/ stable main\" | tee /etc/apt/sources.list.d/yarn.list && \\\n     apt update -y && apt install -y \\\n     yarn \\\n     ; fi'\n\nRUN --mount=type=cache,id=apk,sharing=locked,target=/var/cache/apk mkdir -p /etc/apk && ln -vsf /var/cache/apk /etc/apk/cache && \\\n  bash -c 'if [ ! -z \"$(which apk)\" ]; then apk update && apk add \\\n     inotify-tools \\\n     netcat-openbsd \\\n     coreutils \\\n     ncurses \\\n     git \\\n     redis \\\n     yarn \\\n     jq \\\n     ; fi'\n\n# TODO Not-available feature: autoload-cache. Should be switchable\n#RUN --mount=type=cache,id=composer,sharing=locked,target=/home/spryker/.composer/cache \\\n#    chown spryker:spryker /home/spryker/.composer/cache && chmod 0777 /home/spryker/.composer/cache\n#USER spryker\n#RUN --mount=type=cache,id=composer,sharing=locked,target=/home/spryker/.composer/cache \\\n#    composer global require sprymiker/autoload-cache:0.3.4\n#USER root\n#RUN rm -rf /home/spryker/.composer/cache\n#\n#RUN --mount=type=cache,id=npm,sharing=locked,target=/root/.npm \\\n#    npm install autoload-cache@0.3.4 -g\n\nUSER spryker\n\nRUN mkdir -p /home/spryker/env\nCOPY --chown=spryker:spryker cli /home/spryker/bin\nRUN find /home/spryker/bin -type f -exec chmod +x {} \\;\nENV PATH=/home/spryker/bin:$PATH\n\nRUN mkdir -p /home/spryker/ssh-relay/ && chmod 777 /home/spryker/ssh-relay && touch /home/spryker/ssh-relay/ssh-auth.sock && chmod 666 /home/spryker/ssh-relay/ssh-auth.sock\n\nRUN mkdir -p /home/spryker/history && touch /home/spryker/history/.bash_history && chmod 0600 /home/spryker/history/.bash_history\nENV HISTFILE=/home/spryker/history/.bash_history\n\nENV NEWRELIC_ENABLED=0\n"
}