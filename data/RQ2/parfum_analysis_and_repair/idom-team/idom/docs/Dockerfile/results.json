{
  "startTime": 1674220398506,
  "endTime": 1674220398972,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.9\n\nWORKDIR /app/\n\n# Install NodeJS\n# --------------\nRUN curl -f -sL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt-get install --no-install-recommends -yq nodejs build-essential && rm -rf /var/lib/apt/lists/*;\nRUN npm install -g npm@8.5.0 && npm cache clean --force;\n\n# Create Python Venv\n# ------------------\nENV VIRTUAL_ENV=/opt/venv\nRUN python3 -m venv $VIRTUAL_ENV\nENV PATH=\"$VIRTUAL_ENV/bin:$PATH\"\nRUN pip install --no-cache-dir --upgrade pip\n\n# Install IDOM\n# ------------\nADD requirements ./requirements\nADD src ./src\nADD scripts ./scripts\nADD setup.py ./\nADD setup.cfg ./\nADD MANIFEST.in ./\nADD README.md ./\n\nRUN pip install --no-cache-dir -e .[all]\n\n# Add License\n# -----------\nAdd LICENSE /app/\n\n# Build the Docs\n# --------------\nADD docs/__init__.py ./docs/\nADD docs/app.py ./docs/\nADD docs/examples.py ./docs/\nADD docs/source ./docs/source\nADD branding ./branding\n\nRUN pip install --no-cache-dir -r requirements/build-docs.txt\nRUN sphinx-build -W -b html docs/source docs/build\n\n# Define Entrypoint\n# -----------------\nENV PORT 5000\nENV IDOM_DEBUG_MODE=1\nENV IDOM_CHECK_VDOM_SPEC=0\nCMD python scripts/run_docs.py\n"
}