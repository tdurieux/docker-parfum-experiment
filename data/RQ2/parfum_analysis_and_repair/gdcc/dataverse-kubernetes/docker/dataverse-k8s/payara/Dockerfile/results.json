{
  "startTime": 1674249422431,
  "endTime": 1674249423231,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 73
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Forschungszentrum JÃ¼lich GmbH\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# http://www.apache.org/licenses/LICENSE-2.0\n\nFROM payara/server-full:5.2020.3\nLABEL maintainer=\"FDM FZJ <forschungsdaten@fz-juelich.de>\"\n\nARG VERSION=4.20\nARG DOMAIN=domain1\n\nENV DATA_DIR=/data\\\n    DOCROOT_DIR=/docroot\\\n    METADATA_DIR=/metadata\\\n    SECRETS_DIR=/secrets\\\n    DUMPS_DIR=/dumps\\\n    DOMAIN_DIR=${PAYARA_DIR}/glassfish/domains/${DOMAIN_NAME}\\\n    DATAVERSE_VERSION=${VERSION}\\\n    DATAVERSE_PKG=https://github.com/IQSS/dataverse/releases/download/v${VERSION}/dvinstall.zip\\\n    PGDRIVER_PKG=https://jdbc.postgresql.org/download/postgresql-42.2.12.jar\\\n    # Make heap dumps on OOM appear in DUMPS_DIR\n    JVM_ARGS=\"-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=\\${ENV=DUMPS_DIR}\"\n\n# Create basic pathes\nUSER root\nRUN mkdir -p ${HOME_DIR} ${SCRIPT_DIR} ${SECRETS_DIR} && \\\n    mkdir -p ${DATA_DIR} ${METADATA_DIR} ${DOCROOT_DIR} ${DUMPS_DIR} && \\\n    chown -R payara: ${DATA_DIR} ${METADATA_DIR} ${DOCROOT_DIR} ${SECRETS_DIR} ${DUMPS_DIR}\n\n# Install prerequisites\nRUN apt-get -qq update && \\\n    apt-get -qqy --no-install-recommends install postgresql-client jq imagemagick curl wget unzip && rm -rf /var/lib/apt/lists/*;\n\n# Install esh template engine from Github\nRUN wget --no-verbose -O esh https://raw.githubusercontent.com/jirutka/esh/v0.3.0/esh && \\\n    echo 'fe030e23fc1383780d08128eecf322257cec743b esh' | sha1sum -c - && \\\n    chmod +x esh && mv esh /usr/local/bin\n\n# Install PostgreSQL JDBC driver in AppServer\n# TODO: remove this once upstream includes the Postgres Client lib in the WAR.\nUSER payara\nRUN wget --no-verbose -O postgresql.jar ${PGDRIVER_PKG} && \\\n    mv postgresql.jar ${PAYARA_DIR}/glassfish/lib\n\n# Make docroot of Payara reside in higher level directory for easier targeting\n# Due to IQSS/dataverse-kubernetes#177: create the generated pathes so they are\n# writeable by us. TBR with #178.\nRUN rm -rf ${DOMAIN_DIR}/docroot && \\\n    ln -s ${DOCROOT_DIR} ${DOMAIN_DIR}/docroot && \\\n    mkdir -p ${DOMAIN_DIR}/generated/jsp/dataverse\n\n# Retrieve the Dataverse install package, extract and remove ZIP,\n#    symlink WAR file and remove Harvard custom metadatablocks\nRUN cd ${HOME_DIR} && \\\n    wget --no-verbose -O dvinstall.zip ${DATAVERSE_PKG} && \\\n    unzip -qq dvinstall.zip -d ./ && \\\n    rm dvinstall.zip && \\\n    ln -s ${HOME_DIR}/dvinstall/dataverse.war ${DEPLOY_DIR}/dataverse.war && \\\n    find . -iname \"custom*.tsv\" -delete\n\n# Copy across docker scripts\nCOPY --chown=payara:payara docker/dataverse-k8s/bin/* docker/dataverse-k8s/payara/bin/*.sh ${SCRIPT_DIR}/\nRUN chmod +x ${SCRIPT_DIR}/*\n"
}