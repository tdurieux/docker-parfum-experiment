{
  "startTime": 1674249637566,
  "endTime": 1674249638843,
  "originalSmells": [
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 103
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 75
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 44
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Forschungszentrum JÃ¼lich GmbH\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n# http://www.apache.org/licenses/LICENSE-2.0\n\nFROM centos:7\n\nLABEL maintainer=\"FDM FZJ <forschungsdaten@fz-juelich.de>\"\n\nARG TINI_VERSION=v0.19.0\nARG JMX_EXPORTER_VERSION=0.12.0\nARG VERSION=4.20\nARG DOMAIN=domain1\n\nENV HOME_DIR=/opt/dataverse\\\n    SCRIPT_DIR=/opt/dataverse/scripts\\\n    GLASSFISH_DIR=/opt/dataverse/appserver\\\n    DOMAIN_DIR=/opt/dataverse/appserver/glassfish/domains/${DOMAIN}\\\n    DATA_DIR=/data\\\n    DOCROOT_DIR=/docroot\\\n    METADATA_DIR=/metadata\\\n    SECRETS_DIR=/secrets\\\n    DUMPS_DIR=/dumps\\\n    GLASSFISH_PKG=http://download.java.net/glassfish/4.1/release/glassfish-4.1.zip\\\n    GLASSFISH_SHA1=704a90899ec5e3b5007d310b13a6001575827293\\\n    WELD_PKG=https://repo1.maven.org/maven2/org/jboss/weld/weld-osgi-bundle/2.2.10.SP1/weld-osgi-bundle-2.2.10.SP1-glassfish4.jar\\\n    GRIZZLY_PKG=http://guides.dataverse.org/en/${VERSION}/_downloads/glassfish-grizzly-extra-all.jar\\\n    PGDRIVER_PKG=https://jdbc.postgresql.org/download/postgresql-42.2.12.jar\\\n    DATAVERSE_VERSION=${VERSION}\\\n    DATAVERSE_PKG=https://github.com/IQSS/dataverse/releases/download/v${VERSION}/dvinstall.zip\\\n    JMX_EXPORTER_PKG=https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/${JMX_EXPORTER_VERSION}/jmx_prometheus_javaagent-${JMX_EXPORTER_VERSION}.jar\\\n    MEM_MAX_RAM_PERCENTAGE=70.0\\\n    MEM_XSS=512k\nENV PATH=\"${PATH}:${GLASSFISH_DIR}/bin\"\n\n# Install prerequisites\nRUN yum install -y java-1.8.0-openjdk-headless epel-release unzip curl wget && \\\n    yum install -y postgresql jq ImageMagick && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Create and set the Glassfish user and working directory owned by the new user\nRUN groupadd -g 1000 glassfish && \\\n    useradd -u 1000 -M -s /bin/bash -d ${HOME_DIR} glassfish -g glassfish && \\\n    echo glassfish:glassfish | chpasswd && \\\n    mkdir -p ${HOME_DIR} ${SCRIPT_DIR} ${SECRETS_DIR} && \\\n    mkdir -p ${DATA_DIR} ${METADATA_DIR} ${DOCROOT_DIR} ${DUMPS_DIR} && \\\n    chown -R glassfish: ${HOME_DIR} ${DATA_DIR} ${METADATA_DIR} ${DOCROOT_DIR} ${DUMPS_DIR}\n\n# Install tini as minimized init system\nRUN wget --no-verbose -O tini-amd64 https://github.com/krallin/tini/releases/download/${TINI_VERSION}/tini-amd64 && \\\n    echo '93dcc18adc78c65a028a84799ecf8ad40c936fdfc5f2a57b1acda5a8117fa82c  tini-amd64' | sha256sum -c - && \\\n    mv tini-amd64 /tini && chmod +x /tini\n\n# Install esh template engine from Github\nRUN wget --no-verbose -O esh https://raw.githubusercontent.com/jirutka/esh/v0.3.0/esh && \\\n    echo 'fe030e23fc1383780d08128eecf322257cec743b esh' | sha1sum -c - && \\\n    chmod +x esh && mv esh /usr/local/bin\n\nUSER glassfish\nWORKDIR ${HOME_DIR}\n\n# Download, check and install Glassfish\nRUN wget --no-verbose -O glassfish.zip ${GLASSFISH_PKG} && \\\n    echo \"${GLASSFISH_SHA1} *glassfish.zip\" | sha1sum -c - && \\\n    unzip -qq glassfish.zip -d ./ && \\\n    mv glassfish*/ appserver && \\\n    rm glassfish.zip\n\n# Manually Patch Glassfish:\n#   1) Replace insecure Weld Library\n#   2) Replace OOM causing Grizzly lib\n#   3) Replace outdated PKI store\n# TODO: remove this once we can leave Glassfish 4.x\nRUN wget --no-verbose -O weld-osgi-bundle.jar ${WELD_PKG} && \\\n    mv weld-osgi-bundle.jar ${GLASSFISH_DIR}/glassfish/modules && \\\n    wget --no-verbose -O glassfish-grizzly-extra-all.jar ${GRIZZLY_PKG} && \\\n    mv glassfish-grizzly-extra-all.jar ${GLASSFISH_DIR}/glassfish/modules && \\\n    cp /etc/pki/ca-trust/extracted/java/cacerts ${GLASSFISH_DIR}/glassfish/domains/domain1/config/cacerts.jks\n\n# Make docroot of Glassfish reside in higher level directory for easier targeting\n# Due to IQSS/dataverse-kubernetes#177: create the generated pathes so they are\n# writeable by us. TBR with #178.\nRUN rm -rf ${DOMAIN_DIR}/docroot && \\\n    ln -s ${DOCROOT_DIR} ${DOMAIN_DIR}/docroot && \\\n    mkdir -p ${DOMAIN_DIR}/generated/jsp/dataverse\n\n# Tune basic settings\n# 1) Set to use Server VM\n# 2) Remove memory settings no longer needed since 8u191 (UseContainerSupport=true!)\nRUN ${GLASSFISH_DIR}/bin/asadmin start-domain && \\\n    ${GLASSFISH_DIR}/bin/asadmin delete-jvm-options \"-client\" && \\\n    for MEMORY_JVM_OPTION in $(${GLASSFISH_DIR}/bin/asadmin list-jvm-options | grep \"Xm[sx]\"); do\\\n        ${GLASSFISH_DIR}/bin/asadmin delete-jvm-options $MEMORY_JVM_OPTION;\\\n    done && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-XX\\:+HeapDumpOnOutOfMemoryError\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-XX\\:HeapDumpPath=${DUMPS_DIR}\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-XX\\:+UseG1GC\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-XX\\:+UseStringDeduplication\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-XX\\:MaxGCPauseMillis=500\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-XX\\:MetaspaceSize=256m\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-XX\\:MaxMetaspaceSize=2g\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-XX\\:+IgnoreUnrecognizedVMOptions\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin create-jvm-options -- \"-server\" && \\\n    ${GLASSFISH_DIR}/bin/asadmin stop-domain && \\\n    mkdir -p ${DOMAIN_DIR}/autodeploy && \\\n    rm -rf \\\n        ${DOMAIN_DIR}/osgi-cache \\\n        ${DOMAIN_DIR}/logs\n\n# Install PostgreSQL JDBC driver in AppServer\nRUN wget --no-verbose -O postgresql.jar ${PGDRIVER_PKG} && \\\n    mv postgresql.jar ${GLASSFISH_DIR}/glassfish/lib\n\n# Get Prometheus JMX Exporter Java Agent (see https://github.com/prometheus/jmx_exporter)\nRUN wget --no-verbose -O ${HOME}/jmx_exporter_agent.jar ${JMX_EXPORTER_PKG} && \\\n    echo -e \"---\\n{}\" > ${HOME}/jmx_exporter_config.yaml\n\n# Retrieve the Dataverse install package, extract and remove ZIP,\n#   remove Harvard custom metadatablocks\nRUN wget --no-verbose -O dvinstall.zip ${DATAVERSE_PKG} && \\\n    unzip -qq dvinstall.zip -d ./ && \\\n    rm dvinstall.zip && \\\n    find . -iname \"custom*.tsv\" -delete\n\n# Copy across docker scripts\nCOPY --chown=glassfish:glassfish docker/dataverse-k8s/bin/* docker/dataverse-k8s/glassfish/bin/* ${SCRIPT_DIR}/\nRUN mkdir -p ${SCRIPT_DIR}/init.d && \\\n    chmod +x ${SCRIPT_DIR}/*\n\nENTRYPOINT [\"/tini\", \"--\"]\nCMD [\"scripts/entrypoint.sh\"]\n"
}