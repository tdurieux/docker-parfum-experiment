{
  "startTime": 1674256197599,
  "endTime": 1674256198318,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 51,
        "lineEnd": 51,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# ------------------------------------------------------------\n# --- STAGE 1: Build Backend and Go Tools\nFROM golang:1.18-alpine AS build-be\nWORKDIR /build\n\n# Copy source files\nCOPY cmd cmd\nCOPY internal internal\nCOPY pkg pkg\nCOPY go.mod .\nCOPY go.sum .\n# Get go packages\nRUN go mod download\n# Build shinpuru backend\nRUN go build -o ./bin/shinpuru ./cmd/shinpuru/main.go\n\n# ------------------------------------------------------------\n# --- STAGE 2.1: Build Web App Package\nFROM node:16-alpine AS build-fe\nWORKDIR /build\n\n# Copy web source files\nCOPY web .\n# Get dependencies\nRUN yarn\n# Build static web app files\nRUN npx ng build --configuration production \\\r\n  --output-path dist\n\n# ------------------------------------------------------------\n# --- STAGE 2.2: Build Web App Package\nFROM node:16-alpine AS build-fenew\nWORKDIR /build\n\n# Copy web source files\nCOPY web.new .\n# Get dependencies\nRUN yarn\n# Build static web app files\nRUN yarn build --base=/beta/ --outDir=dist\n\n# ------------------------------------------------------------\n# --- STAGE 3: Final runtime environment\nFROM alpine:3 AS final\nWORKDIR /app\n\n# Copy build artifacts from previous stages\nCOPY --from=build-be /build/bin .\nCOPY --from=build-fe /build/dist web/dist/web\nCOPY --from=build-fenew /build/dist web.new/dist/web\n# Add CA certificates\nRUN apk add --no-cache ca-certificates\n# Prepare directories\nRUN mkdir -p /etc/config \\\r\n  && mkdir -p /etc/db\n\nEXPOSE 8080\nENTRYPOINT [\"/app/shinpuru\", \"-docker\"]\nCMD [\"-c\", \"/etc/config/config.yml\"]\n"
}