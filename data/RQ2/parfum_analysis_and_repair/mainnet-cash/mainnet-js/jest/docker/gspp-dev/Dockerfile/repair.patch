diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mainnet-cash/mainnet-js/jest/docker/gspp-dev/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mainnet-cash/mainnet-js/jest/docker/gspp-dev/Dockerfile/repaired.Dockerfile
index f3147fc..50144a0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mainnet-cash/mainnet-js/jest/docker/gspp-dev/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mainnet-cash/mainnet-js/jest/docker/gspp-dev/Dockerfile/repaired.Dockerfile
@@ -5,10 +5,10 @@ ARG TARGETPLATFORM
 # Get g++ for compiling, wget to download Boost, git to clone source code repo,
 # and make to automate program compilation with Makefile provided
 RUN apt-get update \
-  && apt-get install -y git \
+  && apt-get install --no-install-recommends -y git \
                         g++ \
                         make \
-                        wget
+                        wget && rm -rf /var/lib/apt/lists/*;
 
 # Download boost, untar, setup install with bootstrap and only do the Program Options library,
 # and then install
@@ -22,11 +22,11 @@ RUN cd /home && wget https://boostorg.jfrog.io/artifactory/main/release/1.74.0/s
   && rm -rf boost_1_74_0
 
 # Install build-essential, etc.
-RUN apt install -y build-essential \
+RUN apt install --no-install-recommends -y build-essential \
                    autoconf libtool \
                    pkg-config \
                    cmake \
-                   libzmq3-dev
+                   libzmq3-dev && rm -rf /var/lib/apt/lists/*;
 
 # Install gRPC and Protocol Buffers
 RUN git clone -b v1.38.1 --depth 1 --recursive --shallow-submodules https://github.com/grpc/grpc \
@@ -42,7 +42,7 @@ RUN git clone -b v1.38.1 --depth 1 --recursive --shallow-submodules https://gith
   && make install
 
 # Add python for gs++ make process
-RUN apt-get install -y python libgmp-dev
+RUN apt-get install --no-install-recommends -y python libgmp-dev && rm -rf /var/lib/apt/lists/*;
 
 # clone and build gs++
 RUN cd /home \
@@ -62,7 +62,7 @@ ARG TARGETPLATFORM
 RUN export GOPLATFORM=$(echo ${TARGETPLATFORM} | tr "/" "-") && echo ${GOPLATFORM} \
   && wget -q https://golang.org/dl/go1.13.8.${GOPLATFORM}.tar.gz \
   && rm -rf /usr/local/go && tar -C /usr/local -xzf go1.13.8.${GOPLATFORM}.tar.gz \
-  && tar -C /usr/local -xzf go1.13.8.${GOPLATFORM}.tar.gz
+  && tar -C /usr/local -xzf go1.13.8.${GOPLATFORM}.tar.gz && rm go1.13.8.${GOPLATFORM}.tar.gz
 
 ENV GOROOT=/usr/local/go
 ENV GOPATH=/root/go