{
  "startTime": 1674249261094,
  "endTime": 1674249262375,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 76,
        "lineEnd": 76,
        "columnStart": 13,
        "columnEnd": 24
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 2,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:edge\n\nENV TERM=\"xterm\"\n\nRUN apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n  bash \\\n  ca-certificates \\\n  curl \\\n  curl \\\n  freetype-dev \\\n  g++ \\\n  gcc \\\n  git \\\n  gmp-dev \\\n  grep \\\n  imagemagick-dev \\\n  less \\\n  libmcrypt-dev \\\n  libpng-dev \\\n  make \\\n  mariadb \\\n  mariadb-server-utils \\\n  mysql-client \\\n  nginx \\\n  openssh \\\n  openssh-keygen \\\n  php8-bcmath \\\n  php8-ctype \\\n  php8-curl \\\n  php8-dev \\\n  php8-dom \\\n  php8-fileinfo \\\n  php8-fpm \\\n  php8-ftp \\\n  php8-gd \\\n  php8-gmp \\\n  php8-iconv \\\n  php8-intl \\\n  php8-json \\\n  php8-mbstring \\\n  php8-mysqli \\\n  php8-opcache \\\n  php8-openssl \\\n  php8-pdo_mysql \\\n  php8-phar \\\n  php8-session \\\n  php8-simplexml \\\n  php8-tokenizer \\\n  php8-xml \\\n  php8-xmlreader \\\n  php8-xmlwriter \\\n  php8-zip \\\n  php8-zlib \\\n  procps \\\n  sed \\\n  tmux \\\n  tzdata \\\n  vim \\\n  wget \\\n  zip \\\n  zlib-dev \\\n  && apk add -u musl && \\\n    rm -rf /var/cache/apk/*\n\nRUN apk add --no-cache -X http://dl-cdn.alpinelinux.org/alpine/edge/testing \\\n    composer && \\\n    rm -rf /var/cache/apk/*\n\n# normalize some php8 bins\nRUN ln -s /usr/bin/php8 /usr/bin/php && \\\n  ln -s /usr/bin/phpize8 /usr/bin/phpize && \\\n  ln -s /usr/bin/php-config8 /usr/bin/php-config\n\n# install Image Magick\nRUN git clone https://github.com/Imagick/imagick && \\\n  cd imagick && \\\n  phpize8 && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && \\\n  make && \\\n  make install && \\\n  cd ../ && \\\n  rm -rf imagick && \\\n  apk add --no-cache php8-pecl-imagick\n\nRUN sed -i 's/;cgi.fix_pathinfo=1/cgi.fix_pathinfo=0/g' /etc/php8/php.ini && \\\n    sed -i 's/memory_limit = 128M/memory_limit = -1/g' /etc/php8/php.ini && \\ \n    sed -i 's/max_execution_time = 30/max_execution_time = 0/g' /etc/php8/php.ini && \\ \n    sed -i 's/expose_php = On/expose_php = Off/g' /etc/php8/php.ini && \\\n    # do away with the nginx user stuff if running as root? \\\n    sed -i \"s/nginx:x:100:101:nginx:\\/var\\/lib\\/nginx:\\/sbin\\/nologin/nginx:x:100:101:nginx:\\/usr:\\/bin\\/bash/g\" /etc/passwd && \\\n    sed -i \"s/nginx:x:100:101:nginx:\\/var\\/lib\\/nginx:\\/sbin\\/nologin/nginx:x:100:101:nginx:\\/usr:\\/bin\\/bash/g\" /etc/passwd- && \\\n    # dubious about this one - seems to have been fine without\n    ln -s /sbin/php-fpm8 /sbin/php-fpm\n\nADD ./php8/conf/nginx.conf /etc/nginx/\nADD ./php8/conf/php-fpm.conf /etc/php8/\nADD ./php8/conf/.vimrc /root/\nADD ./php8/conf/.tmux.conf /root/\nADD ./php8/scripts/run.sh /\nADD ./php8/scripts/second_run.sh /\nADD ./php8/scripts/backup_site.sh /\nADD ./php8/installers /installers\nADD ./php8/scripts/mysql_setup.sql /\nADD ./php8/scripts/mysql_user.sql /\nADD ./php8/scripts/mysql_user.sql /\nADD ./php8/scripts/install_default_plugins.sh /\n\nRUN chmod +x /run.sh && \\\n    chmod +x /backup_site.sh && \\\n    chmod +x /installers/wp-cli.phar && mv installers/wp-cli.phar /usr/bin/wp && chown root:root /usr/bin/wp\n\n# mariadb setup\nRUN mkdir -p /run/mysqld\n\nRUN mysql_install_db --user=root --basedir=/usr --datadir=/var/lib/mysql\n\n# create WP database\nRUN /usr/bin/mysqld --user=root --bootstrap --verbose=0 --skip-name-resolve --skip-networking=0 < /mysql_setup.sql\n\nRUN mkdir -p /usr/html\n\nWORKDIR /usr/html\n# extract WordPress to web root\nRUN unzip -q /installers/wordpress-latest.zip -d /tmp\nRUN cp -r /tmp/wordpress/* /usr/html/\nRUN rm -Rf /tmp/wordpress\n\n# extract phpMyAdmin to /usr/html/phpmyadmin/\nRUN unzip -q /installers/phpMyAdmin-5.1.1-all-languages.zip -d /tmp\nRUN mv /tmp/phpMyAdmin-5.1.1-all-languages /usr/html/phpmyadmin/\nRUN rm -Rf /tmp/phpMyAdmin-5.1.1-all-languages\n\n# allow autologin for phpmyadmin\nRUN mv /usr/html/phpmyadmin/config.sample.inc.php /usr/html/phpmyadmin/config.inc.php\nRUN echo \"\\$cfg['Servers'][\\$i]['auth_type'] = 'config';\" >> /usr/html/phpmyadmin/config.inc.php\nRUN echo \"\\$cfg['Servers'][\\$i]['username'] = 'root';\" >> /usr/html/phpmyadmin/config.inc.php\nRUN echo \"\\$cfg['Servers'][\\$i]['password'] = 'banana';\" >> /usr/html/phpmyadmin/config.inc.php\n\n\n# show user/pwd hint on login screen\nRUN grep -Rl 'Username or Email Address' | xargs sed -i 's/Username or Email Address/User (u\\/p: admin\\/admin)/g'\n\n# install all default plugins\nRUN sh /install_default_plugins.sh\n# cleanup\nRUN rm -Rf /installers\n\n# set web root permissions\n# TODO: no longer needed if all root?\nRUN chown -R root:root /usr/html/\n\nEXPOSE 4000-5000\n# EXPOSE 4444\n#VOLUME [\"/usr/html\"]\n\nCMD [\"/run.sh\"]\n"
}