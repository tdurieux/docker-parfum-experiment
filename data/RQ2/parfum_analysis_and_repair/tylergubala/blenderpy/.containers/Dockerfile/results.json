{
  "startTime": 1674249600262,
  "endTime": 1674249601728,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 60,
        "lineEnd": 60,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 5,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 31
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM quay.io/pypa/manylinux2014_x86_64 AS blenderpy-manylinux-wheel-builder\n\nRUN yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo && \\\r\n    yum -y clean all\n\nRUN yum -y install \\\r\n    centos-release-scl \\\r\n    cuda-toolkit-10-1.x86_64  \\\r\n    gcc \\\r\n    gcc-c++ \\\r\n    git \\\r\n    glew-devel \\\r\n    libffi-devel \\\r\n    libX11-devel \\\r\n    libXcursor-devel \\\r\n    libXi-devel \\\r\n    libXinerama-devel \\\r\n    libxml2-devel \\\r\n    libXrandr-devel \\\r\n    make \\\r\n    openssl-devel \\\r\n    subversion && \\\n    yum -y clean all && rm -rf /var/cache/yum\nRUN yum -y install devtoolset-7 && \\\n    yum -y clean all && rm -rf /var/cache/yum\n# installs to /opt/rh/devtoolset-7/root/bin/gcc\n# NVIDIA needs gcc < 8 since CUDA version is 10\nRUN ln -sf /opt/rh/devtoolset-7/root/bin/gcc /usr/local/cuda/bin/gcc\n\nADD https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3-Linux-x86_64.tar.gz cmake-3.17.3-Linux-x86_64.tar.gz\nRUN tar xzf cmake-3.17.3-Linux-x86_64.tar.gz && rm cmake-3.17.3-Linux-x86_64.tar.gz\nENV PATH=\"/blenderpy/cmake-3.17.3-Linux-x86_64/bin:${PATH}\"\n\nCOPY . /blenderpy\n\nRUN /blenderpy/Optix/NVIDIA-OptiX-SDK-7.1.0-linux64-x86_64.sh --include-subdir --skip-license\n\nRUN /blenderpy/.vscode/tasks/Docker/manylinux/update_python_requirements.sh\n\nFROM winamd64/python:3.7.9-windowsservercore-1809 AS blenderpy-windows-wheel-builder\n\n# Restore the default Windows shell for correct batch processing.\nSHELL [\"cmd\", \"/S\", \"/C\"]\n\n# Download the Build Tools bootstrapper.\nADD https://aka.ms/vs/16/release/vs_buildtools.exe vs_buildtools.exe\n\n# Install Build Tools with the Microsoft.VisualStudio.Workload.AzureBuildTools workload, excluding workloads and components with known issues.\nRUN vs_buildtools.exe --quiet --wait --norestart --nocache \\\r\n    --installPath \"C:\\BuildTools\" \\\r\n    --add Microsoft.VisualStudio.Workload.AzureBuildTools \\\r\n    --remove Microsoft.VisualStudio.Component.Windows10SDK.10240 \\\r\n    --remove Microsoft.VisualStudio.Component.Windows10SDK.10586 \\\r\n    --remove Microsoft.VisualStudio.Component.Windows10SDK.14393 \\\r\n    --remove Microsoft.VisualStudio.Component.Windows81SDK \\\r\n || IF \"%ERRORLEVEL%\"==\"3010\" EXIT 0\n\nADD https://www.python.org/ftp/python/3.7.7/Python-3.7.7.tgz Python-3.7.7.tgz\nRUN tar xzf Python-3.7.7.tgz && rm Python-3.7.7.tgz\nRUN cd Python-3.7.7 && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-optimizations\nRUN cd Python-3.7.7 && \\\r\n    make install\n\nRUN py -m pip install -U pip\n\nCOPY . /blenderpy\n\nRUN py -m pip install -r requirements.txt\nRUN cp /blenderpy/bpy/setup.py /blenderpy\nRUN py -m pip install . -v\n\nCMD py -c \"import bpy\""
}