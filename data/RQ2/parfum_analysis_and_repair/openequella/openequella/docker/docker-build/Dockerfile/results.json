{
  "startTime": 1674248282919,
  "endTime": 1674248283748,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 2,
        "columnEnd": 74
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 18,
        "columnStart": 5,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 5,
        "columnEnd": 46
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 5,
        "columnEnd": 34
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A bare image ready for building oEQ and also running test suites\n\nFROM openjdk:8 as basebuild\n\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\n\nRUN \\\n  apt-get update \\\n  && apt-get install --no-install-recommends -y \\\n    build-essential \\\n    vim \\\n    less \\\n    iproute2 \\\n# libtinfo5 is needed for Purescript tools\n    libtinfo5 \\\n    imagemagick \\\n    ffmpeg \\\n    libimage-exiftool-perl \\\n# tidy up APT and save some space\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nFROM basebuild as basebuild-testtools\n\nARG DIR_BIN=/usr/local/bin\nARG GOOGLE_DEB_FILENAME=google-chrome-stable_current_amd64.deb\n\n# Install tools to support running autotests\nCOPY install-chromedriver $DIR_BIN\nRUN \\\n  apt-get update \\\n# Install Google Chrome\n  && wget -nv https://dl.google.com/linux/direct/$GOOGLE_DEB_FILENAME \\\n  && apt-get install --no-install-recommends -y ./$GOOGLE_DEB_FILENAME \\\n  && rm $GOOGLE_DEB_FILENAME \\\n  && install-chromedriver $DIR_BIN \\\n# Install a local PostgreSQL \\\n  && apt-get install --no-install-recommends -y postgresql \\\n  && service postgresql start \\\n  && su postgres -c \"psql -c \\\"CREATE USER equellatests WITH PASSWORD 'password';\\\"\" \\\n  && su postgres -c \"psql -c \\\"CREATE DATABASE equellatests WITH OWNER = equellatests;\\\"\" \\\n  && service postgresql stop \\\n# tidy up APT and save some space\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nFROM basebuild-testtools as buildenv\n\nARG CLONEDIR=openequella\n\nRUN \\\n\n  curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash \\\n  && export NVM_DIR=\"$HOME/.nvm\" \\\n  && . \"$NVM_DIR/nvm.sh\" \\\n# An initial clone also provides access to the .nvmrc to setup node\n  && git clone https://github.com/openequella/openEQUELLA.git $CLONEDIR \\\n  && cd $CLONEDIR \\\n# Establish initial version of Node/NPM, may still want to update later when using image\n  && nvm install\n\nCOPY entrypoint-buildenv /usr/local/bin/entrypoint\nENTRYPOINT [\"entrypoint\"]\n\nWORKDIR $CLONEDIR\n"
}