diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ddsrem/easyimage/2.6.5.1/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ddsrem/easyimage/2.6.5.1/Dockerfile/repaired.Dockerfile
index 7ae5f5b..69a352b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/ddsrem/easyimage/2.6.5.1/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/ddsrem/easyimage/2.6.5.1/Dockerfile/repaired.Dockerfile
@@ -9,12 +9,12 @@ ENV PHP_VERSION 7.4.20
 WORKDIR /usr/local/src
 
 RUN apt-get -y update
-RUN apt-get install -y wget
+RUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;
 # 16.04 libreadline6-dev
 # 18.04 libreadline-dev  add: libzip-dev
-RUN apt-get install -y build-essential autoconf make automake bison re2c libxml2-dev libssl-dev libfreetype6-dev libcurl4-gnutls-dev libjpeg-dev libpng-dev libreadline-dev  pkg-config libzip-dev
+RUN apt-get install --no-install-recommends -y build-essential autoconf make automake bison re2c libxml2-dev libssl-dev libfreetype6-dev libcurl4-gnutls-dev libjpeg-dev libpng-dev libreadline-dev pkg-config libzip-dev && rm -rf /var/lib/apt/lists/*;
 # for PHP 7.4
-RUN apt-get install -y libsqlite3-dev libonig-dev
+RUN apt-get install --no-install-recommends -y libsqlite3-dev libonig-dev && rm -rf /var/lib/apt/lists/*;
 
 #Add user  && download php and nginx source code
 #    groupadd -r www && \
@@ -26,10 +26,10 @@ RUN apt-get install -y libsqlite3-dev libonig-dev
 #   Cannot create cache directory /home/www/.composer/cache/files/, or directory is not writable. Proceeding without cache
 # for php pecl install *** autoconf
 RUN useradd -m -s /sbin/nologin www
-RUN wget -c -O nginx.tar.gz http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
+RUN wget -c -O nginx.tar.gz https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
 RUN tar -zxf nginx.tar.gz && rm -f nginx.tar.gz && \
      cd nginx-${NGINX_VERSION} && \
-    ./configure --prefix=/usr/local/nginx \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/nginx \
     --user=www --group=www \
     --pid-path=/var/run/nginx.pid \
     --with-pcre \
@@ -45,10 +45,10 @@ RUN tar -zxf nginx.tar.gz && rm -f nginx.tar.gz && \
 #    --http-log-path=/var/log/nginx/access.log \
 #    --conf-path=/usr/local/nginx/nginx.conf \
 
-RUN wget -c -O php.tar.gz http://php.net/distributions/php-${PHP_VERSION}.tar.gz
+RUN wget -c -O php.tar.gz https://php.net/distributions/php-${PHP_VERSION}.tar.gz
 RUN tar zxf php.tar.gz && rm -f php.tar.gz && \
      cd php-${PHP_VERSION} && \
-    ./configure --prefix=/usr/local/php \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local/php \
     --with-config-file-path=/usr/local/php/etc \
     --with-config-file-scan-dir=/usr/local/php/etc/php.d \
     --with-fpm-user=www \
@@ -201,7 +201,7 @@ RUN useradd -m -s /sbin/nologin www && \
     ln  -s  /usr/local/nginx/sbin/nginx    /usr/local/sbin/nginx && \
     chmod 755 /start.sh && \
     ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime && \
-    apt-get update && apt-get install -y tzdata ca-certificates && apt-get clean && rm -rf /var/lib/apt/lists/*
+    apt-get update && apt-get install --no-install-recommends -y tzdata ca-certificates && apt-get clean && rm -rf /var/lib/apt/lists/*
 # 先建软链，再安装tzdata 就不需要dpkg-reconfigure -f noninteractive tzdata； 或者参考：https://serverfault.com/questions/949991/how-to-install-tzdata-on-a-ubuntu-docker-image
 
 COPY ./html /app/web
@@ -217,7 +217,7 @@ VOLUME ["/app/web/i"]
 VOLUME ["/app/web/config"]
 
 #Set port
-EXPOSE 80 
+EXPOSE 80
 
 #Start it
 ENTRYPOINT ["/start.sh"]