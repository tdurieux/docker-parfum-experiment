{
  "startTime": 1674250493571,
  "endTime": 1674250495076,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 83
      }
    },
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 31,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 50,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 194
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 203,
        "lineEnd": 203,
        "columnStart": 22,
        "columnEnd": 63
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 194
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 194
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 49
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 217
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:18.04 AS build-env\n\n#http://nginx.org/en/download.html\nENV NGINX_VERSION 1.16.1\n#https://www.php.net/\nENV PHP_VERSION 7.4.20\n\n#if not set WORKDIR, each RUN & CMD & ADD & COPY ... need to run `cd /usr/local/src`\nWORKDIR /usr/local/src\n\nRUN apt-get -y update\nRUN apt-get install --no-install-recommends -y wget && rm -rf /var/lib/apt/lists/*;\n# 16.04 libreadline6-dev\n# 18.04 libreadline-dev  add: libzip-dev\nRUN apt-get install --no-install-recommends -y build-essential autoconf make automake bison re2c libxml2-dev libssl-dev libfreetype6-dev libcurl4-gnutls-dev libjpeg-dev libpng-dev libreadline-dev pkg-config libzip-dev && rm -rf /var/lib/apt/lists/*;\n# for PHP 7.4\nRUN apt-get install --no-install-recommends -y libsqlite3-dev libonig-dev && rm -rf /var/lib/apt/lists/*;\n\n#Add user  && download php and nginx source code\n#    groupadd -r www && \\\n#    useradd -M -s /sbin/nologin -r -g www www && /sbin/usermod -u 1000 www && \\\n# -M, --no-create-home\n# -m, --create-home   Create the user's home directory if it does not exist.\n# composer install需要\n#   Cannot create cache directory /home/www/.composer/cache/repo/https---packagist.org/, or directory is not writable. Proceeding without cache\n#   Cannot create cache directory /home/www/.composer/cache/files/, or directory is not writable. Proceeding without cache\n# for php pecl install *** autoconf\nRUN useradd -m -s /sbin/nologin www\nRUN wget -c -O nginx.tar.gz https://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz\nRUN tar -zxf nginx.tar.gz && rm -f nginx.tar.gz && \\\n     cd nginx-${NGINX_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/nginx \\\n    --user=www --group=www \\\n    --pid-path=/var/run/nginx.pid \\\n    --with-pcre \\\n    --without-mail_pop3_module \\\n    --without-mail_imap_module \\\n    --without-mail_smtp_module \\\n    --with-http_v2_module \\\n    --with-http_ssl_module \\\n    --with-http_gzip_static_module \\\n    --with-http_stub_status_module && \\\n    make -j4 > /dev/null && make install\n#    --error-log-path=/var/log/nginx/error.log \\\n#    --http-log-path=/var/log/nginx/access.log \\\n#    --conf-path=/usr/local/nginx/nginx.conf \\\n\nRUN wget -c -O php.tar.gz https://php.net/distributions/php-${PHP_VERSION}.tar.gz\nRUN tar zxf php.tar.gz && rm -f php.tar.gz && \\\n     cd php-${PHP_VERSION} && \\\n    ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local/php \\\n    --with-config-file-path=/usr/local/php/etc \\\n    --with-config-file-scan-dir=/usr/local/php/etc/php.d \\\n    --with-fpm-user=www \\\n    --with-fpm-group=www \\\n    --with-mysqli \\\n    --with-pdo-mysql \\\n    --with-openssl \\\n    --enable-gd \\\n    --with-iconv \\\n    --with-zlib \\\n    --with-gettext \\\n    --with-curl \\\n    --with-jpeg \\\n    --with-freetype \\\n    --enable-fpm \\\n    --enable-xml \\\n    --enable-inline-optimization \\\n    --enable-mbregex \\\n    --enable-mbstring \\\n    --enable-mysqlnd \\\n    --enable-sockets \\\n    --with-zip \\\n    --enable-soap \\\n    --enable-bcmath \\\n    --enable-exif \\\n    --enable-pcntl \\\n    --disable-cgi \\\n    --disable-phpdbg \\\n    --with-pear \\\n    && \\\n    make -j4 > /dev/null && make install;\n#    --with-xmlrpc \\  This extension is EXPERIMENTAL.\n#    --with-mhash \\\n#    --disable-ctype \\\n#    --enable-shmop \\\n#    --enable-sysvsem \\\n#    --enable-ftp \\\n# 从PHP7.4 开始需要手动 --with-pear, 之前是--without-pear\n# PEAR is disabled by default on PHP 7.4. As \"PECL is a repository of PHP extensions that are made available to you via the PEAR packaging system\", it also removes the PECL too.\n\nRUN cp ./php-${PHP_VERSION}/php.ini-production /usr/local/php/etc/php.ini && \\\n    mv /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf && \\\n    mv /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf  && \\\n    strip /usr/local/php/bin/php && \\\n    strip /usr/local/php/sbin/php-fpm && \\\n    strip /usr/local/nginx/sbin/nginx && \\\n    strip /usr/local/php/lib/php/extensions/no-debug-non-zts-20190902/opcache.a && \\\n    strip /usr/local/php/lib/php/extensions/no-debug-non-zts-20190902/opcache.so\n\nRUN sed -i 's/^;date\\.timezone[ ]*=[ ]*/date\\.timezone = Asia\\/Shanghai/' /usr/local/php/etc/php.ini  && \\\n    sed -i 's/^session\\.use_strict_mode = 0/session\\.use_strict_mode = 1/' /usr/local/php/etc/php.ini  && \\\n    sed -i 's/^session\\.cookie_httponly =$/session\\.cookie_httponly = 1/' /usr/local/php/etc/php.ini && \\\n    sed -i 's/^memory_limit = 128M/memory_limit = 128M/' /usr/local/php/etc/php.ini && \\\n    sed -i 's/^expose_php = On/expose_php = Off/' /usr/local/php/etc/php.ini && \\\n    sed -i 's/^upload_max_filesize = 2M/upload_max_filesize = 100M/' /usr/local/php/etc/php.ini && \\\n    sed -i 's/^max_execution_time = 30/max_execution_time = 60/' /usr/local/php/etc/php.ini && \\\n    sed -i 's/^;request_terminate_timeout = 0/request_terminate_timeout = 120/' /usr/local/php/etc/php-fpm.d/www.conf && \\\n    sed -i 's/^listen = 127\\.0\\.0\\.1:9000/listen = \\/var\\/run\\/php-fpm\\.sock/' /usr/local/php/etc/php-fpm.d/www.conf  && \\\n    sed -i 's/^;listen.owner = www/listen.owner = www/' /usr/local/php/etc/php-fpm.d/www.conf  && \\\n    sed -i 's/^;listen.group = www/listen.group = www/' /usr/local/php/etc/php-fpm.d/www.conf  && \\\n    sed -i 's/^;listen.mode = 0660/listen.mode = 0660/' /usr/local/php/etc/php-fpm.d/www.conf\n#    sed -i 's/^;cgi\\.fix_pathinfo[ ]*=[ ]*1/cgi\\.fix_pathinfo=0/' /usr/local/php/etc/php.ini\n#    sed -i 's/^;security\\.limit_extensions .../default setting is safe/' /usr/local/php/etc/php-fpm.d/www.conf  && \\\n\n# phpize need `/usr/local/php/include`\nRUN rm -rf /usr/local/php/include\n\n\n\nFROM ubuntu:18.04\nCOPY --from=build-env /usr/local/nginx /usr/local/nginx\nCOPY --from=build-env /usr/local/php /usr/local/php\n\nCOPY --from=build-env   \\\n    /lib/x86_64-linux-gnu/liblzma.so.5 \\\n    /lib/x86_64-linux-gnu/libcom_err.so.2 \\\n    /lib/x86_64-linux-gnu/libc.so.6 \\\n    /lib/x86_64-linux-gnu/libcrypt.so.1 \\\n    /lib/x86_64-linux-gnu/libdl.so.2 \\\n    /lib/x86_64-linux-gnu/libgcc_s.so.1 \\\n    /lib/x86_64-linux-gnu/libkeyutils.so.1 \\\n    /lib/x86_64-linux-gnu/libm.so.6 \\\n    /lib/x86_64-linux-gnu/libpthread.so.0 \\\n    /lib/x86_64-linux-gnu/libresolv.so.2 \\\n    /lib/x86_64-linux-gnu/libz.so.1 \\\n    \\\n    /lib/x86_64-linux-gnu/\n\nCOPY --from=build-env   \\\n    /usr/lib/x86_64-linux-gnu/libhx509.so.5  \\\n    /usr/lib/x86_64-linux-gnu/libsqlite3.so.0  \\\n    /usr/lib/x86_64-linux-gnu/libjpeg.so.8   \\\n    /usr/lib/x86_64-linux-gnu/libpng16.so.16   \\\n    /usr/lib/x86_64-linux-gnu/libcurl-gnutls.so.4   \\\n    /usr/lib/x86_64-linux-gnu/libssl.so.1.1   \\\n    /usr/lib/x86_64-linux-gnu/libasn1.so.8   \\\n    /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1   \\\n    /usr/lib/x86_64-linux-gnu/libgnutls.so.30   \\\n    /usr/lib/x86_64-linux-gnu/libhcrypto.so.4   \\\n    /usr/lib/x86_64-linux-gnu/libheimbase.so.1   \\\n    /usr/lib/x86_64-linux-gnu/libhogweed.so.4   \\\n    /usr/lib/x86_64-linux-gnu/libidn2.so.0   \\\n    /usr/lib/x86_64-linux-gnu/libk5crypto.so.3   \\\n    /usr/lib/x86_64-linux-gnu/liblber-2.4.so.2   \\\n    /usr/lib/x86_64-linux-gnu/libnettle.so.6   \\\n    /usr/lib/x86_64-linux-gnu/libroken.so.18   \\\n    /usr/lib/x86_64-linux-gnu/libstdc++.so.6   \\\n    /usr/lib/x86_64-linux-gnu/libwind.so.0   \\\n    /usr/lib/x86_64-linux-gnu/libxml2.so.2   \\\n    /usr/lib/x86_64-linux-gnu/libfreetype.so.6  \\\n    /usr/lib/x86_64-linux-gnu/libicuuc.so.60  \\\n    /usr/lib/x86_64-linux-gnu/libnghttp2.so.14  \\\n    /usr/lib/x86_64-linux-gnu/librtmp.so.1   \\\n    /usr/lib/x86_64-linux-gnu/libpsl.so.5   \\\n    /usr/lib/x86_64-linux-gnu/libgssapi_krb5.so.2   \\\n    /usr/lib/x86_64-linux-gnu/libldap_r-2.4.so.2   \\\n    /usr/lib/x86_64-linux-gnu/libicudata.so.60   \\\n    /usr/lib/x86_64-linux-gnu/libunistring.so.2   \\\n    /usr/lib/x86_64-linux-gnu/libgmp.so.10   \\\n    /usr/lib/x86_64-linux-gnu/libp11-kit.so.0   \\\n    /usr/lib/x86_64-linux-gnu/libtasn1.so.6   \\\n    /usr/lib/x86_64-linux-gnu/libkrb5.so.26   \\\n    /usr/lib/x86_64-linux-gnu/libkrb5support.so.0   \\\n    /usr/lib/x86_64-linux-gnu/libkrb5.so.3   \\\n    /usr/lib/x86_64-linux-gnu/libsasl2.so.2   \\\n    /usr/lib/x86_64-linux-gnu/libgssapi.so.3   \\\n    /usr/lib/x86_64-linux-gnu/libffi.so.6   \\\n    /usr/lib/x86_64-linux-gnu/libheimntlm.so.0   \\\n    /usr/lib/x86_64-linux-gnu/libonig.so.4 \\\n    /usr/lib/x86_64-linux-gnu/libzip.so.4 \\\n    \\\n    /usr/lib/x86_64-linux-gnu/\n# 18.04 add:\n# COPY --from=build-env  /usr/lib/x86_64-linux-gnu/libzip.so.4    /usr/lib/x86_64-linux-gnu/\n\n#overwrite nginx.conf\nADD conf/nginx.conf /usr/local/nginx/conf/nginx.conf\nADD conf/default_server.conf /etc/nginx/conf.d/default_server.conf\nADD start.sh /start.sh\n\n# /var/lib/apt/lists is huge\nRUN useradd -m -s /sbin/nologin www && \\\n    mkdir /var/log/nginx && \\\n    mkdir -p /etc/nginx/conf.d && \\\n    mkdir -p /app/web && chown -R www:www /app && \\\n    ln  -s  /usr/local/php/bin/php    /usr/local/bin/php && \\\n    ln  -s  /usr/local/php/bin/phpize    /usr/local/bin/phpize && \\\n    ln  -s  /usr/local/php/bin/pecl    /usr/local/bin/pecl && \\\n    ln  -s  /usr/local/php/bin/php-config    /usr/local/bin/php-config && \\\n    ln  -s  /usr/local/nginx/sbin/nginx    /usr/local/sbin/nginx && \\\n    chmod 755 /start.sh && \\\n    ln -sf /usr/share/zoneinfo/Asia/Shanghai  /etc/localtime && \\\n    apt-get update && apt-get install --no-install-recommends -y tzdata ca-certificates && apt-get clean && rm -rf /var/lib/apt/lists/*\n# 先建软链，再安装tzdata 就不需要dpkg-reconfigure -f noninteractive tzdata； 或者参考：https://serverfault.com/questions/949991/how-to-install-tzdata-on-a-ubuntu-docker-image\n\nCOPY ./html /app/web\nCOPY ./mv /\nCOPY conf/php.ini /usr/local/php/etc\n\nRUN chown -R www:www /app/web \\\n&& chmod 755 /app/web\n\nWORKDIR /app/web\n\nVOLUME [\"/app/web/i\"]\nVOLUME [\"/app/web/config\"]\n\n#Set port\nEXPOSE 80\n\n#Start it\nENTRYPOINT [\"/start.sh\"]\n\n\n\n## docker buildx build -t ddsderek/ddsderek:latest --platform=linux/amd64 G:\\桌面\\Docker镜像制作\\Easyimage\\2.6.5 --push\n## docker buildx build -t ddsderek/ddsderek:2.6.5 --platform=linux/amd64 G:\\桌面\\Docker镜像制作\\Easyimage\\2.6.5 --push"
}