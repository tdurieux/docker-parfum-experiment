{
  "startTime": 1674254839479,
  "endTime": 1674254840494,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 2,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 2,
        "columnEnd": 93
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 2,
        "columnEnd": 43
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 52,
        "lineEnd": 52,
        "columnStart": 2,
        "columnEnd": 33
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 2,
        "columnEnd": 54
      }
    },
    {
      "rule": "gpgUseBatchFlag",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 66
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM openshift/base-centos7\n\n# This image provides a Node.JS environment you can use to run your Node.JS\n# applications.\n\nMAINTAINER RyanJ <ryanj@redhat.com>\n\nEXPOSE 8080\n\n# Release version configuration:\n# Add $HOME/node_modules/.bin to the $PATH, allowing user to make npm scripts\n# available on the CLI without using npm's --global installation mode\nENV NODE_VERSION=6.1.0 \\\n    NPM_CONFIG_LOGLEVEL=info \\\n    PATH=$HOME/node_modules/.bin/:$PATH \\\n    NPM_VERSION=3 \\\n    NPM_RUN=start \\\n    DEBUG_PORT=5858 \\\n    NODE_ENV=production \\\n    DEV_MODE=false\n\nLABEL io.k8s.description=\"Platform for building and running Node.js applications\" \\\n      io.k8s.display-name=\"Node.js v$NODE_VERSION\" \\\n      io.openshift.expose-services=\"8080:http\" \\\n      io.openshift.tags=\"builder,nodejs,nodejs$NODE_VERSION\" \\\n      com.redhat.dev-mode=\"DEV_MODE:false\" \\\n      com.redhat.deployments-dir=\"/opt/app-root/src\" \\\n      com.redhat.dev-mode.port=\"DEBUG_PORT:5858\"\n\n# Download and install a binary from nodejs.org\n# Add the gpg keys listed at https://github.com/nodejs/node\nRUN set -ex && \\\n  for key in \\\n    94AE36675C464D64BAFA68DD7434390BDBE9B9C5 \\\n    FD3A5288F042B6850C66B31F09FE44734EB7990E \\\n    71DCFD284A79C3B38668286BC97EC7A07EDE3FC1 \\\n    DD8F2338BAE7501E3DD5AC78C273792F7D83545D \\\n    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \\\n    B9AE9905FFD7803F25714661B63B535A4C206CA9 \\\n    56730D5401028683275BD23C23EFEFE93C4CFFFE; \\\n  do \\\n    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \\\n  done && \\\n  INSTALL_PKGS=\"bzip2 nss_wrapper\" && \\\n  yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS && \\\n  rpm -V $INSTALL_PKGS && \\\n  yum clean all -y && \\\n  curl -f -o node-v${NODE_VERSION}.tar.gz -sSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}.tar.gz && \\\n  curl -f -o SHASUMS256.txt.asc -sSL https://nodejs.org/dist/v${NODE_VERSION}/SHASUMS256.txt.asc && \\\n  gpg --batch -d SHASUMS256.txt.asc | grep \" node-v${NODE_VERSION}.tar.gz\\$\" | sha256sum -c - && \\\n  tar -zxf node-v${NODE_VERSION}.tar.gz -C /tmp && \\\n  cd /tmp/node-v${NODE_VERSION} && \\\n  ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --prefix=/usr/local && \\\n  make -j$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \\\n  make install && \\\n  npm install -g npm@${NPM_VERSION} nodemon && \\\n  find /usr/local/lib/node_modules/npm -name test -o -name .bin -type d | xargs rm -rf; npm cache clean --force; rm -rf /var/cache/yum \\\n  rm -rf ~/node-v${NODE_VERSION}.tar.gz ~/SHASUMS256.txt.asc /tmp/node-v${NODE_VERSION} ~/.npm ~/.node-gyp ~/.gnupg \\\n    /usr/share/man /tmp/* /usr/local/lib/node_modules/npm/man /usr/local/lib/node_modules/npm/doc /usr/local/lib/node_modules/npm/html\n\n# Copy the S2I scripts from the specific language image to $STI_SCRIPTS_PATH\nCOPY ./s2i/bin/ $STI_SCRIPTS_PATH\n\n# Each language image can have 'contrib' a directory with extra files needed to\n# run and build the applications.\nCOPY ./contrib/ /opt/app-root\n\n# Drop the root user and make the content of /opt/app-root owned by user 1001\nRUN chown -R 1001:0 /opt/app-root\nUSER 1001\n\n# Set the default CMD to print the usage of the language image\nCMD $STI_SCRIPTS_PATH/usage\n"
}