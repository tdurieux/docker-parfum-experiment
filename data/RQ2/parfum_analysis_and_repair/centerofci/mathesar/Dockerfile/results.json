{
  "startTime": 1674255489837,
  "endTime": 1674255490446,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 9,
        "columnEnd": 45
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 54
      }
    }
  ],
  "repairedDockerfile": "FROM python:3.9-buster\n\nENV PYTHONUNBUFFERED=1\nENV DOCKERIZE_VERSION v0.6.1\n\n# Install dockerize\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-alpine-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\n# Install node\nRUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash -\nRUN apt install --no-install-recommends -y sudo nodejs && rm -rf /var/lib/apt/lists/*\n\n# Change work directory\nWORKDIR /code/\n\nCOPY requirements.txt .\nCOPY requirements-dev.txt .\n\nRUN pip install --no-cache-dir -r requirements.txt --force-reinstall sqlalchemy-filters\nRUN pip install --no-cache-dir -r requirements-dev.txt\nCOPY . .\n\nRUN sudo npm install -g npm-force-resolutions && npm cache clean --force;\nRUN cd mathesar_ui && npm install --unsafe-perm && npm run build && npm cache clean --force;\n\nEXPOSE 8000 3000 6006\n"
}