{
  "startTime": 1674254530697,
  "endTime": 1674254532150,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 127,
        "lineEnd": 127,
        "columnStart": 9,
        "columnEnd": 45
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 128,
        "lineEnd": 128,
        "columnStart": 22,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 112,
        "lineEnd": 112,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 113,
        "lineEnd": 113,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 123,
        "lineEnd": 123,
        "columnStart": 4,
        "columnEnd": 72
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 39
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 1,
        "columnEnd": 74
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM buildpack-deps:focal\n\nARG DEBIAN_FRONTEND=noninteractive\n\n# Install python\n# Some of this is ported from docker file for python-3.9:\n# https://github.com/docker-library/python/blob/33751272d8171cece37c59180c049ab77cf9c837/3.9/buster/Dockerfile\n\n# ensure local python is preferred over distribution python\nENV PATH /usr/local/bin:$PATH\n\n# http://bugs.python.org/issue19846\n# > At the moment, setting \"LANG=C\" on a Linux system *fundamentally breaks Python 3*, and that's not OK.\nENV LANG C.UTF-8\n\n# Download node14 source\nRUN curl -fsSL https://deb.nodesource.com/setup_14.x | bash -\n\n# extra dependencies (over what buildpack-deps already includes)\nRUN apt-get update && apt-get install -y --no-install-recommends \\\n\t\tlibbluetooth-dev \\\n\t\ttk-dev \\\n\t\tuuid-dev \\\n        sudo \\\n        nodejs \\\n\t&& rm -rf /var/lib/apt/lists/*\n\nENV GPG_KEY E3FF2839C048B25C084DEBE9B26995E310250568\nENV PYTHON_VERSION 3.9.8\n\nRUN set -ex \\\n\t\\\n\t&& wget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\" \\\n\t&& wget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\" \\\n\t&& export GNUPGHOME=\"$(mktemp -d)\" \\\n\t&& gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\" \\\n\t&& gpg --batch --verify python.tar.xz.asc python.tar.xz \\\n\t&& { command -v gpgconf > /dev/null && gpgconf --kill all || :; } \\\n\t&& rm -rf \"$GNUPGHOME\" python.tar.xz.asc \\\n\t&& mkdir -p /usr/src/python \\\n\t&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \\\n\t&& rm python.tar.xz \\\n\t\\\n\t&& cd /usr/src/python \\\n\t&& gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" \\\n\t&& ./configure \\\n\t\t--build=\"$gnuArch\" \\\n\t\t--enable-loadable-sqlite-extensions \\\n\t\t--enable-optimizations \\\n\t\t--enable-option-checking=fatal \\\n\t\t--enable-shared \\\n\t\t--with-system-expat \\\n\t\t--with-system-ffi \\\n\t\t--without-ensurepip \\\n\t&& make -j \"$(nproc)\" \\\n\t&& make install \\\n\t&& rm -rf /usr/src/python \\\n\t\\\n\t&& find /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name '*.a' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' + \\\n\t\\\n\t&& ldconfig \\\n\t\\\n\t&& python3 --version\n\n# make some useful symlinks that are expected to exist\nRUN cd /usr/local/bin \\\n\t&& ln -s idle3 idle \\\n\t&& ln -s pydoc3 pydoc \\\n\t&& ln -s python3 python \\\n\t&& ln -s python3-config python-config\n\n# if this is called \"PIP_VERSION\", pip explodes with \"ValueError: invalid truth value '<VERSION>'\"\nENV PYTHON_PIP_VERSION 21.2.4\n# https://github.com/docker-library/python/issues/365\nENV PYTHON_SETUPTOOLS_VERSION 57.5.0\n# https://github.com/pypa/get-pip\nENV PYTHON_GET_PIP_URL https://github.com/pypa/get-pip/raw/d781367b97acf0ece7e9e304bf281e99b618bf10/public/get-pip.py\nENV PYTHON_GET_PIP_SHA256 01249aa3e58ffb3e1686b7141b4e9aac4d398ef4ac3012ed9dff8dd9f685ffe0\n\nRUN set -ex; \\\n\n\twget -O get-pip.py \"$PYTHON_GET_PIP_URL\"; \\\n\techo \"$PYTHON_GET_PIP_SHA256  *get-pip.py\" | sha256sum --check --strict -; \\\n\n\tpython get-pip.py \\\n\t\t--disable-pip-version-check \\\n\t\t--no-cache-dir \\\n\t\t\"pip==$PYTHON_PIP_VERSION\" \\\n\t\t\"setuptools==$PYTHON_SETUPTOOLS_VERSION\" \\\n\t; \\\n\tpip --version; \\\n\n\tfind /usr/local -depth \\\n\t\t\\( \\\n\t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \\\n\t\t\t-o \\\n\t\t\t\\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' \\) \\) \\\n\t\t\\) -exec rm -rf '{}' +; \\\n\trm -f get-pip.py\n\nENV PYTHONUNBUFFERED=1\nENV DOCKERIZE_VERSION v0.6.1\n\n# Install dockerize\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\n\nRUN pip install --no-cache-dir playwright==1.18.2\nRUN pip install --no-cache-dir pytest-playwright==0.2.3\nRUN playwright install\nRUN playwright install-deps\n\n# Change work directory\nWORKDIR /code/\n\nCOPY requirements.txt .\nCOPY requirements-dev.txt .\n\nRUN pip install --no-cache-dir -r requirements.txt --force-reinstall sqlalchemy-filters\nRUN pip install --no-cache-dir -r requirements-dev.txt\nCOPY . .\n\nRUN sudo npm install -g npm-force-resolutions && npm cache clean --force;\nRUN cd mathesar_ui && npm install --unsafe-perm && npm run build && npm cache clean --force;\n\nEXPOSE 8000 3000 6006\n"
}