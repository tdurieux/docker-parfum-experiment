{
  "startTime": 1674249119251,
  "endTime": 1674249120109,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copied from https://github.com/dunglas/symfony-docker\n\n# the different stages of this Dockerfile are meant to be built into separate images\n# https://docs.docker.com/develop/develop-images/multistage-build/#stop-at-a-specific-build-stage\n# https://docs.docker.com/compose/compose-file/#target\n\n\n# https://docs.docker.com/engine/reference/builder/#understand-how-arg-and-from-interact\nARG PHP_VERSION=7.4\nARG NGINX_VERSION=1.17\n\n# \"php\" stage\nFROM php:${PHP_VERSION}-fpm-alpine AS symfony_php\n\n# For Inky\nRUN apk add --no-cache libxslt-dev && docker-php-ext-configure xsl --with-xsl && docker-php-ext-install xsl\n\n# Install pcntl for long-running processes\nRUN docker-php-ext-install pcntl\n\n# persistent / runtime deps\nRUN apk add --no-cache \\\n        acl \\\n        fcgi \\\n        file \\\n        gettext \\\n        git \\\n        jq \\\n    ;\n\nARG APCU_VERSION=5.1.18\nRUN set -eux; \\\n\tapk add --no-cache --virtual .build-deps \\\n\t    $PHPIZE_DEPS \\\n\t    icu-dev \\\n\t    libzip-dev \\\n\t    zlib-dev \\\n\t; \\\n\t\\\n\tdocker-php-ext-configure zip; \\\n\tdocker-php-ext-install -j$(nproc) \\\n\t    intl \\\n\t    zip \\\n\t; \\\n\tpecl install \\\n\t    apcu-${APCU_VERSION} \\\n\t; \\\n\tpecl clear-cache; \\\n\tdocker-php-ext-enable \\\n\t    apcu \\\n\t    opcache \\\n\t; \\\n\t\\\n\trunDeps=\"$( \\\n\t    scanelf --needed --nobanner --format '%n#p' --recursive /usr/local/lib/php/extensions \\\n\t        | tr ',' '\\n' \\\n\t        | sort -u \\\n\t        | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \\\n\t)\"; \\\n\tapk add --no-cache --virtual .phpexts-rundeps $runDeps; \\\n\t\\\n\tapk del .build-deps\n\nCOPY --from=composer:latest /usr/bin/composer /usr/bin/composer\n\nRUN ln -s $PHP_INI_DIR/php.ini-production $PHP_INI_DIR/php.ini\nCOPY docker/php/conf.d/symfony.ini $PHP_INI_DIR/conf.d/symfony.ini\n\nRUN set -eux; \\\n\t{ \\\n\t\techo '[www]'; \\\n\t\techo 'ping.path = /ping'; \\\n\t} | tee /usr/local/etc/php-fpm.d/docker-healthcheck.conf\n\n# https://getcomposer.org/doc/03-cli.md#composer-allow-superuser\nENV COMPOSER_ALLOW_SUPERUSER=1\n# install Symfony Flex globally to speed up download of Composer packages (parallelized prefetching)\nRUN set -eux; \\\n\tcomposer global require \"symfony/flex\" --prefer-dist --no-progress --no-suggest --classmap-authoritative; \\\n\tcomposer clear-cache\nENV PATH=\"${PATH}:/root/.composer/vendor/bin\"\n\nWORKDIR /srv/app\n\n# build for production\nARG APP_ENV=prod\n\n# Allow to use development versions of Symfony\nARG STABILITY=\"stable\"\nENV STABILITY ${STABILITY:-stable}\n\n# Allow to select skeleton version\nARG SYMFONY_VERSION=\"\"\n\n# Download the Symfony skeleton and leverage Docker cache layers\nRUN composer create-project \"symfony/skeleton ${SYMFONY_VERSION}\" . --stability=$STABILITY --prefer-dist --no-dev --no-progress --no-scripts --no-interaction; \\\n\tcomposer clear-cache\n\n###> recipes ###\n###< recipes ###\n\nVOLUME /srv/app/var\n\nCOPY docker/php/docker-healthcheck.sh /usr/local/bin/docker-healthcheck\nRUN chmod +x /usr/local/bin/docker-healthcheck\n\nHEALTHCHECK --interval=10s --timeout=3s --retries=3 CMD [\"docker-healthcheck\"]\n\nCOPY docker/php/docker-entrypoint.sh /usr/local/bin/docker-entrypoint\nRUN chmod +x /usr/local/bin/docker-entrypoint\n\nENTRYPOINT [\"docker-entrypoint\"]\nCMD [\"php-fpm\"]\n\n# \"nginx\" stage\n# depends on the \"php\" stage above\nFROM nginx:${NGINX_VERSION}-alpine AS symfony_nginx\n\nCOPY docker/nginx/conf.d/default.conf /etc/nginx/conf.d/default.conf\n\nWORKDIR /srv/app\n\nCOPY ./public public/\n\nFROM symfony_php as symfony_php_production\nCOPY . .\n\nRUN set -eux; \\\n\tmkdir -p var/cache var/log; \\\n\tcomposer install --prefer-dist --no-progress --no-suggest --no-interaction --no-dev; \\\n    composer dump-autoload --classmap-authoritative --no-dev; sync\n"
}