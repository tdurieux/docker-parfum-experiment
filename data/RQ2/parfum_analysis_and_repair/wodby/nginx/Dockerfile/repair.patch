diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wodby/nginx/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wodby/nginx/Dockerfile/repaired.Dockerfile
index 5aa153d..b809526 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wodby/nginx/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wodby/nginx/Dockerfile/repaired.Dockerfile
@@ -15,28 +15,28 @@ ENV NGINX_VER="${NGINX_VER}" \
 COPY patches /tmp/patches
 
 RUN set -ex; \
-    \
+
     nginx_up_ver="0.9.1"; \
     ngx_modsecurity_ver="1.0.0"; \
     modsecurity_ver="3.0.4"; \
     owasp_crs_ver="3.1.0"; \
     brotli_commit='9aec15e2aa6feea2113119ba06460af70ab3ea62'; \
     vts_commit='3c6cf41315bfcb48c35a3a0be81ddba6d0d01dac'; \
-    \
+
     addgroup -S nginx; \
     adduser -S -D -H -h /var/cache/nginx -s /sbin/nologin -G nginx nginx; \
-    \
+
 	addgroup -g "${WODBY_GROUP_ID}" -S wodby; \
 	adduser -u "${WODBY_USER_ID}" -D -S -s /bin/bash -G wodby wodby; \
 	sed -i '/^wodby/s/!/*/' /etc/shadow; \
 	echo "PS1='\w\$ '" >> /home/wodby/.bashrc; \
-    \
+
     apk add --update --no-cache -t .tools \
         findutils \
         make \
         nghttp2 \
         sudo; \
-    \
+
     apk add --update --no-cache -t .nginx-build-deps \
         apr-dev \
         apr-util-dev \
@@ -55,7 +55,7 @@ RUN set -ex; \
         linux-headers \
         pcre-dev \
         zlib-dev; \
-     \
+
      apk add --no-cache -t .libmodsecurity-build-deps \
         autoconf \
         automake \
@@ -73,35 +73,35 @@ RUN set -ex; \
         sed \
         yajl \
         yajl-dev; \
-    \
+
     # Modsecurity lib.
     cd /tmp; \
     git clone --depth 1 -b "v${modsecurity_ver}" --single-branch https://github.com/SpiderLabs/ModSecurity; \
     cd ModSecurity; \
-    git submodule init;  \
+    git submodule init; \
     git submodule update; \
     ./build.sh; \
-    ./configure --disable-doxygen-doc --disable-doxygen-html; \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-doxygen-doc --disable-doxygen-html; \
     make -j$(getconf _NPROCESSORS_ONLN); \
-    make install;  \
+    make install; \
     mkdir -p /etc/nginx/modsecurity/; \
-    mv modsecurity.conf-recommended /etc/nginx/modsecurity/recommended.conf;  \
+    mv modsecurity.conf-recommended /etc/nginx/modsecurity/recommended.conf; \
     sed -i 's/SecRuleEngine DetectionOnly/SecRuleEngine On/' /etc/nginx/modsecurity/recommended.conf; \
     cp unicode.mapping /etc/nginx/modsecurity/; \
     rsync -a --links /usr/local/modsecurity/lib/libmodsecurity.so* /usr/local/lib/; \
-    \
+
     # Brotli.
     cd /tmp; \
     git clone --depth 10 --single-branch https://github.com/google/ngx_brotli; \
     cd /tmp/ngx_brotli; \
     git checkout ${brotli_commit}; \
-    \
+
     # Get ngx modsecurity module.
     mkdir -p /tmp/ngx_http_modsecurity_module; \
     ver="${ngx_modsecurity_ver}"; \
     url="https://github.com/SpiderLabs/ModSecurity-nginx/releases/download/v${ver}/modsecurity-nginx-v${ver}.tar.gz"; \
     wget -qO- "${url}" | tar xz --strip-components=1 -C /tmp/ngx_http_modsecurity_module; \
-    \
+
     # OWASP.
     wget -qO- "https://github.com/SpiderLabs/owasp-modsecurity-crs/archive/v${owasp_crs_ver}.tar.gz" | tar xz -C /tmp; \
     cd /tmp/owasp-modsecurity-crs-*; \
@@ -109,7 +109,7 @@ RUN set -ex; \
     mkdir -p /etc/nginx/modsecurity/crs/; \
     mv crs-setup.conf.example /etc/nginx/modsecurity/crs/setup.conf; \
     mv rules /etc/nginx/modsecurity/crs; \
-    \
+
     # Get ngx upload progress module. \
     mkdir -p /tmp/ngx_http_uploadprogress_module; \
     url="https://github.com/masterzen/nginx-upload-progress-module/archive/v${nginx_up_ver}.tar.gz"; \
@@ -118,7 +118,7 @@ RUN set -ex; \
         cd /tmp/ngx_http_uploadprogress_module; \
         patch -p1 -i /tmp/patches/1.23/uploadprogress.patch; \
     fi; \
-    \
+
     # Keys were changed since 1.22.
     if [[ "${NGINX_VER}" == 1.19* || "${NGINX_VER}" == 1.20* || "${NGINX_VER}" == 1.21* ]]; then \
         export GPG_KEYS=B0F4253373F8F6F510D42178520A9993A1C052F8; \
@@ -129,15 +129,15 @@ RUN set -ex; \
     git clone https://github.com/vozlt/nginx-module-vts.git /tmp/nginx_module_vts; \
     cd /tmp/nginx_module_vts; \
     git checkout ${vts_commit}; \
-    \
+
     # Download nginx.
     curl -fSL "https://nginx.org/download/nginx-${NGINX_VER}.tar.gz" -o /tmp/nginx.tar.gz; \
     curl -fSL "https://nginx.org/download/nginx-${NGINX_VER}.tar.gz.asc"  -o /tmp/nginx.tar.gz.asc; \
     gpg_verify /tmp/nginx.tar.gz.asc /tmp/nginx.tar.gz; \
-    tar zxf /tmp/nginx.tar.gz -C /tmp; \
-    \
+    tar zxf /tmp/nginx.tar.gz -C /tmp; rm /tmp/nginx.tar.gz \
+
     cd "/tmp/nginx-${NGINX_VER}"; \
-    ./configure \
+    ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
         --prefix=/usr/share/nginx \
         --sbin-path=/usr/sbin/nginx \
         --modules-path=/usr/lib/nginx/modules \
@@ -184,28 +184,28 @@ RUN set -ex; \
         --add-module=/tmp/ngx_brotli \
         --add-module=/tmp/nginx_module_vts \
         --add-dynamic-module=/tmp/ngx_http_modsecurity_module; \
-    \
+
     make -j$(getconf _NPROCESSORS_ONLN); \
     make install; \
     mkdir -p /usr/share/nginx/modules; \
-    \
+
     install -g wodby -o wodby -d \
         "${APP_ROOT}" \
         "${FILES_DIR}" \
         /etc/nginx/conf.d \
         /var/cache/nginx \
         /var/lib/nginx; \
-    \
+
     touch /etc/nginx/upstream.conf; \
     chown -R wodby:wodby /etc/nginx; \
-    \
+
     install -m 400 -d /etc/nginx/pki; \
     strip /usr/sbin/nginx*; \
     strip /usr/lib/nginx/modules/*.so; \
     strip /usr/local/lib/libmodsecurity.so*; \
-    \
+
     for i in /usr/lib/nginx/modules/*.so; do ln -s "${i}" /usr/share/nginx/modules/; done; \
-    \
+
 	runDeps="$( \
 		scanelf --needed --nobanner --format '%n#p' /usr/sbin/nginx /usr/local/modsecurity/lib/*.so /usr/lib/nginx/modules/*.so /tmp/envsubst \
 			| tr ',' '\n' \
@@ -213,19 +213,19 @@ RUN set -ex; \
 			| awk 'system("[ -e /usr/local/lib/" $1 " ]") == 0 { next } { print "so:" $1 }' \
 	)"; \
 	apk add --no-cache --virtual .nginx-rundeps $runDeps; \
-    \
+
     # Script to fix volumes permissions via sudo.
     echo "find ${APP_ROOT} ${FILES_DIR} -maxdepth 0 -uid 0 -type d -exec chown wodby:wodby {} +" > /usr/local/bin/init_volumes; \
     chmod +x /usr/local/bin/init_volumes; \
-    \
+
     { \
         echo -n 'wodby ALL=(root) NOPASSWD:SETENV: ' ; \
         echo -n '/usr/local/bin/init_volumes, ' ; \
         echo '/usr/sbin/nginx' ; \
     } | tee /etc/sudoers.d/wodby; \
-    \
+
     chown wodby:wodby /usr/share/nginx/html/50x.html; \
-    \
+
     apk del --purge .nginx-build-deps .libmodsecurity-build-deps; \
     rm -rf \
         /tmp/* \