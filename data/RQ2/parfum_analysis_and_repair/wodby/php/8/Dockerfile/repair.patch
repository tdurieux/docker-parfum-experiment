diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wodby/php/8/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wodby/php/8/Dockerfile/repaired.Dockerfile
index 899e770..492cfbf 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/wodby/php/8/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/wodby/php/8/Dockerfile/repaired.Dockerfile
@@ -26,19 +26,19 @@ ARG TARGETPLATFORM
 ARG TARGETARCH
 
 RUN set -xe; \
-    \
+
     # Delete existing user/group if uid/gid occupied.
     existing_group=$(getent group "${WODBY_GROUP_ID}" | cut -d: -f1); \
     if [[ -n "${existing_group}" ]]; then delgroup "${existing_group}"; fi; \
     existing_user=$(getent passwd "${WODBY_USER_ID}" | cut -d: -f1); \
     if [[ -n "${existing_user}" ]]; then deluser "${existing_user}"; fi; \
-    \
+
 	apk add --update --no-cache shadow; \
 	groupadd -g "${WODBY_GROUP_ID}" wodby; \
 	useradd  -u "${WODBY_USER_ID}" -m -s /bin/bash -g wodby wodby; \
 	adduser wodby www-data; \
 	sed -i '/^wodby/s/!/*/' /etc/shadow; \
-	\
+
     apk add --update --no-cache -t .wodby-php-run-deps \
         bash \
         brotli-libs \
@@ -93,11 +93,11 @@ RUN set -xe; \
         unzip \
         wget \
         yaml; \
-    \
+
     if [[ -n "${PHP_DEV}" ]]; then \
         apk add --update --no-cache -t .wodby-php-dev-run-deps yarn; \
     fi; \
-    \
+
     apk add --update --no-cache -t .wodby-php-build-deps \
         autoconf \
         automake \
@@ -134,16 +134,16 @@ RUN set -xe; \
         tidyhtml-dev \
         unixodbc-dev \
         yaml-dev; \
-    \
+
     # Install redis-cli.
     apk add --update --no-cache redis; \
     mv /usr/bin/redis-cli /tmp/; \
     apk del --purge redis; \
     deluser redis; \
     mv /tmp/redis-cli /usr/bin; \
-    \
+
     # Download helper scripts.
-    dockerplatform=${TARGETPLATFORM:-linux/amd64};\
+    dockerplatform=${TARGETPLATFORM:-linux/amd64}; \
     gotpl_url="https://github.com/wodby/gotpl/releases/download/0.3.3/gotpl-${dockerplatform/\//-}.tar.gz"; \
     wget -qO- "${gotpl_url}" | tar xz --no-same-owner -C /usr/local/bin; \
     git clone https://github.com/wodby/alpine /tmp/alpine; \
@@ -151,10 +151,10 @@ RUN set -xe; \
     latest=$(git describe --abbrev=0 --tags); \
     git checkout "${latest}"; \
     mv /tmp/alpine/bin/* /usr/local/bin; \
-    \
+
     docker-php-source extract; \
     cp /usr/src/php/php.ini-production "${PHP_INI_DIR}/php.ini"; \
-    \
+
     docker-php-ext-install \
         bcmath \
         bz2 \
@@ -174,7 +174,7 @@ RUN set -xe; \
         tidy \
         xsl \
         zip; \
-    \
+
     # GD
     docker-php-ext-configure gd \
                 --with-webp \
@@ -182,26 +182,26 @@ RUN set -xe; \
                 --with-jpeg; \
     NPROC=$(getconf _NPROCESSORS_ONLN); \
     docker-php-ext-install "-j${NPROC}" gd; \
-    \
+
     # IMAP
     PHP_OPENSSL=yes docker-php-ext-configure imap \
         --with-kerberos \
         --with-imap-ssl; \
     docker-php-ext-install "-j${NPROC}" imap; \
-    \
+
     pecl config-set php_ini "${PHP_INI_DIR}/php.ini"; \
     if [[ -n "${PECL_HTTP_PROXY}" ]]; then \
         # Using pear as pecl throw errors: https://blog.flowl.info/2015/peclpear-behind-proxy-how-to/
         pear config-set http_proxy "${PECL_HTTP_PROXY}"; \
     fi; \
-    \
+
     # Microsoft ODBC driver for SQL Server
-    curl -O https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/msodbcsql17_17.6.1.1-1_amd64.apk && \
+    curl -f -O https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/msodbcsql17_17.6.1.1-1_amd64.apk && \
     apk add --allow-untrusted msodbcsql17_17.6.1.1-1_amd64.apk; \
-    curl -O https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/mssql-tools_17.6.1.1-1_amd64.apk && \
+    curl -f -O https://download.microsoft.com/download/e/4/e/e4e67866-dffd-428c-aac7-8d28ddafb39b/mssql-tools_17.6.1.1-1_amd64.apk && \
     apk add --allow-untrusted mssql-tools_17.6.1.1-1_amd64.apk; \
     rm ./*.apk; \
-    \
+
     pecl install \
         apcu-5.1.21 \
         amqp-1.11.0 \
@@ -225,7 +225,7 @@ RUN set -xe; \
         xdebug-3.1.5 \
         xhprof-2.3.5 \
         yaml-2.2.2; \
-    \
+
     docker-php-ext-enable \
         apcu \
         amqp \
@@ -249,7 +249,7 @@ RUN set -xe; \
         xdebug \
         xhprof \
         yaml; \
-    \
+
     if [[ "${PHP_VERSION:0:3}" == "8.0" ]]; then \
         pecl install mcrypt-1.0.4; \
         docker-php-ext-enable mcrypt; \
@@ -257,7 +257,7 @@ RUN set -xe; \
     # Event extension should be loaded after sockets.
     # http://osmanov-dev-notes.blogspot.com/2013/07/fixing-php-start-up-error-unable-to.html
     mv /usr/local/etc/php/conf.d/docker-php-ext-event.ini /usr/local/etc/php/conf.d/z-docker-php-ext-event.ini; \
-    \
+
     # Blackfire extension.
     mkdir -p /tmp/blackfire; \
     version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;"); \
@@ -266,11 +266,11 @@ RUN set -xe; \
     mv /tmp/blackfire/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so; \
     if [[ -n "${PHP_DEV}" ]]; then \
         mkdir -p /tmp/blackfire; \
-        curl -L "https://packages.blackfire.io/binaries/blackfire/2.10.0/blackfire-linux_${TARGETARCH}.tar.gz" | tar zxp -C /tmp/blackfire; \
+        curl -f -L "https://packages.blackfire.io/binaries/blackfire/2.10.0/blackfire-linux_${TARGETARCH}.tar.gz" | tar zxp -C /tmp/blackfire; \
         mv /tmp/blackfire/blackfire /usr/local/bin/blackfire; \
         rm -Rf /tmp/blackfire; \
     fi; \
-    \
+
     # NewRelic extension and agent.
     git clone https://github.com/newrelic/newrelic-php-agent /tmp/newrelic; \
     cd /tmp/newrelic; \
@@ -280,7 +280,7 @@ RUN set -xe; \
     mkdir -p /var/log/newrelic/; \
     chown -R www-data:www-data /var/log/newrelic/; \
     chmod -R 775 /var/log/newrelic/; \
-    \
+
     # Brotli extension.
     brotli_ext_ver="0.13.1"; \
     mkdir -p /usr/src/php/ext/brotli; \
@@ -288,24 +288,24 @@ RUN set -xe; \
     wget -qO- "${brotli_url}" | tar xz --strip-components=1 -C /usr/src/php/ext/brotli; \
     docker-php-ext-configure brotli --with-libbrotli; \
     docker-php-ext-install brotli; \
-    \
+
     wget -qO- https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer; \
-    \
+
     # Install Walter (deprecated).
     walter_ver="1.4.0"; \
     walter_url="https://github.com/walter-cd/walter/releases/download/v${walter_ver}/walter_${walter_ver}_linux_amd64.tar.gz"; \
     wget -qO- "${walter_url}" | tar xz -C /tmp/; \
     mv /tmp/walter_linux_amd64/walter /usr/local/bin; \
-    \
+
     { \
         echo 'export PS1="\u@${WODBY_APP_NAME:-php}.${WODBY_ENVIRONMENT_NAME:-container}:\w $ "'; \
         # Make sure PATH is the same for ssh sessions.
         echo "export PATH=${PATH}"; \
     } | tee /home/wodby/.shrc; \
-    \
+
     cp /home/wodby/.shrc /home/wodby/.bashrc; \
     cp /home/wodby/.shrc /home/wodby/.bash_profile; \
-    \
+
     { \
         echo 'Defaults env_keep += "APP_ROOT FILES_DIR"' ; \
         \
@@ -324,14 +324,14 @@ RUN set -xe; \
             echo '/usr/sbin/crond' ; \
         fi; \
     } | tee /etc/sudoers.d/wodby; \
-    \
+
     echo "TLS_CACERTDIR /etc/ssl/certs/" >> /etc/openldap/ldap.conf; \
-    \
+
     install -o wodby -g wodby -d \
         "${APP_ROOT}" \
         "${CONF_DIR}" \
         /home/wodby/.ssh; \
-    \
+
     install -o www-data -g www-data -d \
         "${FILES_DIR}/public" \
         "${FILES_DIR}/private" \
@@ -339,29 +339,29 @@ RUN set -xe; \
         "${FILES_DIR}/xhprof" \
         "${FILES_DIR}/xdebug" \
         /home/www-data/.ssh; \
-    \
+
     chmod -R 775 "${FILES_DIR}"; \
     chown -R wodby:wodby \
         "${PHP_INI_DIR}/conf.d" \
         /usr/local/etc/php-fpm.d \
         /etc/ssmtp/ssmtp.conf \
         /home/wodby/.[^.]*; \
-    \
+
     touch /etc/ssh/sshd_config /etc/gitconfig; \
     chown wodby: /etc/ssh/sshd_config /etc/gitconfig; \
     chown wodby:wodby /usr/local/bin/ /usr/local/bin/composer; \
-    \
+
     rm /etc/crontabs/root; \
     # deprecated: remove in favor of bind mounts.
     touch /etc/crontabs/www-data; \
     chown root:www-data /etc/crontabs/www-data; \
     chmod 660 /etc/crontabs/www-data; \
-    \
+
     su-exec wodby composer clear-cache; \
     docker-php-source delete; \
     apk del --purge .wodby-php-build-deps; \
     pecl clear-cache; \
-    \
+
     rm -rf \
         /usr/src/php/ext/ast \
         /usr/src/php/ext/uploadprogress \
@@ -370,7 +370,7 @@ RUN set -xe; \
         /tmp/* \
         /root/.composer \
         /var/cache/apk/*; \
-    \
+
     if [[ -z "${PHP_DEV}" ]]; then \
         rm -rf /usr/src/php.tar.xz; \
     fi