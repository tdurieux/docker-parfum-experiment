{
  "startTime": 1674253851729,
  "endTime": 1674253852685,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 12,
        "columnEnd": 10
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 9,
        "columnEnd": 23
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 12
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 37,
        "lineEnd": 38,
        "columnStart": 12,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 48,
        "columnStart": 9,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Purpose\n#\n#   This docker file is used by build.bash and run.bash to build and run\n#   an Ignition distribution based on binaries. See the README.md file.\n\n# Ubuntu 20.04 with nvidia opengl support\nFROM nvidia/opengl:1.2-glvnd-devel-ubuntu20.04\n\n# Name of the Ignition distribution\nARG ign_distribution\n\n# Tools I find useful during development\nRUN apt-get update \\\n && apt-get install --no-install-recommends -y \\\n        lsb-release \\\n        sudo \\\n        gpg \\\n        wget \\\n && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Add a user with the same user_id as the user outside the container\n# Requires a docker build argument `user_id`\nARG user_id\nENV USERNAME developer\nRUN useradd -U --uid ${user_id} -ms /bin/bash $USERNAME \\\n && echo \"$USERNAME:$USERNAME\" | chpasswd \\\n && adduser $USERNAME sudo \\\n && echo \"$USERNAME ALL=NOPASSWD: ALL\" >> /etc/sudoers.d/$USERNAME\n\n# Commands below run as the developer user\nUSER $USERNAME\n\n# When running a container start in the developer's home folder\nWORKDIR /home/$USERNAME\n\nRUN export DEBIAN_FRONTEND=noninteractive \\\n && sudo apt-get update \\\n && sudo -E apt-get install --no-install-recommends -y \\\n    tzdata \\\n && sudo ln -fs /usr/share/zoneinfo/America/Los_Angeles /etc/localtime \\\n && sudo dpkg-reconfigure --frontend noninteractive tzdata \\\n && sudo apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nRUN sudo /bin/sh -c 'echo \"deb [trusted=yes] http://packages.osrfoundation.org/gazebo/ubuntu-stable `lsb_release -cs` main\" > /etc/apt/sources.list.d/gazebo-stable.list' \\\n && sudo /bin/sh -c 'wget http://packages.osrfoundation.org/gazebo.key -O - | sudo apt-key add -' \\\n && sudo /bin/sh -c 'apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116' \\\n && sudo apt-get update \\\n && sudo apt-get install --no-install-recommends -y \\\n    ${ign_distribution} \\\n && sudo apt-get clean && rm -rf /var/lib/apt/lists/*;\n\nENTRYPOINT [\"ign-gazebo\"]\n"
}