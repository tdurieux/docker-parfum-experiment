{
  "startTime": 1674249027163,
  "endTime": 1674249027865,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 45,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 19
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 3,
        "lineEnd": 15,
        "columnStart": 22,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 45,
        "lineEnd": 52,
        "columnStart": 22,
        "columnEnd": 19
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:20.04 AS build\nENV DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    git \\\n    build-essential \\\n    cmake \\\n    pkg-config \\\n    qt5-default \\\n    libqt5opengl5-dev \\\n    libgl1-mesa-dev \\\n    libglu1-mesa-dev \\\n    libprotobuf-dev \\\n    protobuf-compiler \\\n    libode-dev \\\n    libboost-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /vartypes\nRUN git clone https://github.com/jpfeltracco/vartypes.git . && \\\n    git checkout 2d16e81b7995f25c5ba5e4bc31bf9a514ee4bc42 && \\\n    mkdir build && \\\n    cd build && \\\n    cmake .. && \\\n    make && \\\n    make install\n\nWORKDIR /grsim\nCOPY clients /grsim/clients\nCOPY cmake /grsim/cmake\nCOPY config /grsim/config\nCOPY include /grsim/include\nCOPY resources /grsim/resources\nCOPY src /grsim/src\nCOPY CMakeLists.txt README.md LICENSE.md /grsim/\nRUN mkdir build && \\\n    cd build && \\\n    cmake -DCMAKE_INSTALL_PREFIX=/usr/local .. && \\\n    make && \\\n    make install\n\n\nFROM ubuntu:20.04\nENV DEBIAN_FRONTEND=noninteractive \\\n    LD_LIBRARY_PATH=/lib:/usr/lib:/usr/local/lib\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n        tini \\\n        qt5-default \\\n        libqt5opengl5 \\\n        libode8 \\\n        libprotobuf17 \\\n        # virtual display and VNC server\n        x11vnc xvfb && \\\n        apt-get clean -y && rm -rf /var/lib/apt/lists/*;\nCOPY --from=build /usr/local /usr/local\n\nRUN useradd -ms /bin/bash default\nCOPY /docker-entry.sh .\nRUN chmod 775 /docker-entry.sh\n\nEXPOSE 20011 30011 30012 10300 10301 10302 5900\nUSER default\nWORKDIR /home/default\nENTRYPOINT [\"tini\", \"--\", \"/docker-entry.sh\"]\n"
}