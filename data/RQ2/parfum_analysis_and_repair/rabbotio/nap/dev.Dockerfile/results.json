{
  "startTime": 1674248531927,
  "endTime": 1674248532612,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 27
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:8.1.3-alpine\nMAINTAINER Todsaporn Banjerdkit <katopz@gmail.com>\n\n# Use development environments\nENV NODE_ENV development\n\n# Ref : http://bitjudo.com/blog/2014/03/13/building-efficient-dockerfiles-node-dot-js/\n# use changes to package.json to force Docker not to use the cache\n# when we change our application's nodejs dependencies:\nCOPY package.json /tmp/package.json\nRUN npm config set registry https://registry.npmjs.org/ && \\\n    cd /tmp && \\\n    npm i --quiet --depth 0 && \\\n    cd / && \\\n    # Move to app folder\n    mkdir -p /usr/app && cp -a /tmp/node_modules /usr/app/ && npm cache clean --force;\nWORKDIR /usr/app\n\n# Plugins\nRUN mkdir -p /usr/app/providers && \\\n    mkdir -p /usr/app/templates && \\\n    mkdir -p /usr/app/server\n\nCOPY providers /usr/app/providers\nCOPY templates /usr/app/templates\nCOPY server /usr/app/server\nCOPY package.json /usr/app/\nCOPY index.js /usr/app/\nCOPY nodemon.json /usr/app/\n\n# Make volume path\nVOLUME [\"/usr/app/.env\", \"/usr/app/pages\", \"/usr/app/components\", \"/usr/app/lib\", \"/usr/app/public\", \"/usr/app/graphql\", \"/usr/app/routes\", \"/usr/app/providers\", \"/usr/app/templates\", \"/usr/app/server\"]\n\n# HTTP port, default to 3000\nEXPOSE ${PORT:-3000}"
}