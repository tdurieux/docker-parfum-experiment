{
  "startTime": 1674255079664,
  "endTime": 1674255080309,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 1,
        "columnEnd": 31
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# FULLOCK - Fast User Level LOCK library\n#\n# Copyright 2015 Yahoo Japan Corporation.\n#\n# FULLOCK is fast locking library on user level by Yahoo! JAPAN.\n# FULLOCK is following specifications.\n#\n# For the full copyright and license information, please view\n# the license file that was distributed with this source code.\n#\n# AUTHOR:   Takeshi Nakatani\n# CREATE:   Tue, Aug 3 2021\n# REVISION:\t1.0\n#\n\n# [NOTE]\n# This file expects the following variables to be expanded by autoconf.\n#\tGIT_DOMAIN\n#\tPACKAGE_NAME\n#\n# Also, replace the following variables.\n#\tDOCKER_IMAGE_BASE\t\t\t(ex. \"docker.io/alpine:3.13.5\")\n#\tDOCKER_IMAGE_DEV_BASE\t\t(ex. \"docker.io/alpine:3.13.5\")\n#\tDOCKER_GIT_ORGANIZATION\t\t(ex. \"antpickax\")\n#\tDOCKER_GIT_REPOSITORY\t\t(ex. \"xxxxx\")\n#\tDOCKER_GIT_BRANCH\t\t\t(ex. \"yyyyy\")\n#\tPKG_UPDATE\t\t\t\t\t(ex. \"apk update -q --no-progress\")\n#\tPKG_INSTALL_BUILDER\t\t\t(ex. \"apk add -q --no-progress --no-cache git build-base openssl libtool automake autoconf procps\")\n#\tPKG_INSTALL_BIN\t\t\t\t(ex. \"apk add -q --no-progress --no-cache libstdc++\")\n#\tCONFIGURE_FLAG\t\t\t\t(ex. \"\")\n#\tBUILD_FLAGS\t\t\t\t\t(ex. \"CXXFLAGS=\")\n#\tBUILD_ENV\t\t\t\t\t(ex. \"ENV DEBIAN_FRONTEND=noninteractive\")\n#\tUPDATE_LIBPATH\t\t\t\t(ex. \"ldconfig\", if want no-operation, specify \":\")\n#\n\n#\n# Builder\n#\nFROM %%DOCKER_IMAGE_BASE%% AS @PACKAGE_NAME@-builder\n\nMAINTAINER antpickax\nWORKDIR /\n\n%%BUILD_ENV%%\n\nRUN set -x && \\\n\t%%PKG_UPDATE%% && \\\n\t%%PKG_INSTALL_BUILDER%% && \\\n\tcd / && \\\n\tgit clone https://@GIT_DOMAIN@/%%DOCKER_GIT_ORGANIZATION%%/%%DOCKER_GIT_REPOSITORY%%.git && \\\n\tcd %%DOCKER_GIT_REPOSITORY%% && \\\n\tgit checkout %%DOCKER_GIT_BRANCH%% && \\\n\t./autogen.sh && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" %%CONFIGURE_FLAG%% && \\\n\tmake %%BUILD_FLAGS%% && \\\n\tmake check && \\\n\tmake install && \\\n\tcd / && \\\n\ttar cvzf lib@PACKAGE_NAME@-dev.tgz /usr/local/lib/lib@PACKAGE_NAME@.la* /usr/local/lib/lib@PACKAGE_NAME@.a* /usr/local/lib/lib@PACKAGE_NAME@.so* && \\\n\ttar cvzf lib@PACKAGE_NAME@.tgz /usr/local/lib/lib@PACKAGE_NAME@.so*\n\n#\n# Image for development\n#\nFROM %%DOCKER_IMAGE_DEV_BASE%% AS lib@PACKAGE_NAME@-dev\n\nMAINTAINER antpickax\nWORKDIR /\n\nRUN set -x && \\\n\tmkdir -p /usr/local/lib/pkgconfig && \\\n\tmkdir -p /usr/local/include/@PACKAGE_NAME@ && \\\n\tmkdir -p /var/lib/antpickax && \\\n\tchmod 0777 /var/lib/antpickax\n\nCOPY --from=@PACKAGE_NAME@-builder /usr/local/include/@PACKAGE_NAME@/*           /usr/local/include/@PACKAGE_NAME@/\nCOPY --from=@PACKAGE_NAME@-builder /usr/local/lib/pkgconfig/lib@PACKAGE_NAME@.pc /usr/local/lib/pkgconfig/\nCOPY --from=@PACKAGE_NAME@-builder /lib@PACKAGE_NAME@-dev.tgz                    /lib@PACKAGE_NAME@-dev.tgz\n\nRUN cd / && \\\n\ttar xvzf lib@PACKAGE_NAME@-dev.tgz && \\\n\trm /lib@PACKAGE_NAME@-dev.tgz && \\\n\t%%UPDATE_LIBPATH%%\n\nCMD [\"/bin/sh\"]\n\n#\n# Image for main\n#\nFROM %%DOCKER_IMAGE_BASE%% AS lib@PACKAGE_NAME@\n\nMAINTAINER antpickax\nWORKDIR /\n\nRUN set -x && \\\n\t%%PKG_UPDATE%% && \\\n\t%%PKG_INSTALL_BIN%% && \\\n\tmkdir -p /usr/local/lib && \\\n\tmkdir -p /var/lib/antpickax && \\\n\tchmod 0777 /var/lib/antpickax\n\nCOPY --from=@PACKAGE_NAME@-builder /lib@PACKAGE_NAME@.tgz /lib@PACKAGE_NAME@.tgz\n\nRUN cd / && \\\n\ttar xvzf lib@PACKAGE_NAME@.tgz && \\\n\trm /lib@PACKAGE_NAME@.tgz && \\\n\t%%UPDATE_LIBPATH%%\n\nCMD [\"/bin/sh\"]\n\n#\n# Local variables:\n# tab-width: 4\n# c-basic-offset: 4\n# End:\n# vim600: noexpandtab sw=4 ts=4 fdm=marker\n# vim<600: noexpandtab sw=4 ts=4\n#\n"
}