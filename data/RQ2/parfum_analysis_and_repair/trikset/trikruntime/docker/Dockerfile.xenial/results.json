{
  "startTime": 1674255542678,
  "endTime": 1674255543964,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 150
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM trikset/checker-runtime\nMAINTAINER Iakov Kirilenko <Iakov.Kirilenko@trikset.com>\nENV DEBIAN_FRONTEND noninteractive\n\nENV TRIK_GCCVERSION 9\nENV TRIK_QTIFW_VERSION 4.0.1\nENV TRIK_LIBUSB_TAG v1.0.24\nENV TRIK_QTVERSION 5.12.10\n\nRUN bash -uc 'echo ${TRIK_PYTHON3_VERSION_MINOR}'\n# Build image with two huge layers, this is the 1st one.\n# Do not upgrade packages to match trikset/checker-runtime\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y lsb-release software-properties-common \\\n    && add-apt-repository -y ppa:jonathonf/gcc \\\n    && add-apt-repository -y ppa:ubuntu-toolchain-r/test \\\n    && add-apt-repository -y ppa:git-core/ppa \\\n    && add-apt-repository -y ppa:beineri/opt-qt-${TRIK_QTVERSION}-$(lsb_release -sc) \\\n    && apt-get update \\\n    && apt-get install -y --no-install-recommends \\\n\t\t    wget curl rsync sshpass openssh-client build-essential g++-${TRIK_GCCVERSION} gdb \\\n\t\t    python3.${TRIK_PYTHON3_VERSION_MINOR}-dev python3.${TRIK_PYTHON3_VERSION_MINOR}-venv \\\n\t\t    pkg-config libboost-system-dev libboost-wave-dev \\\n                tcl vera++ xvfb mesa-common-dev libgl1-mesa-dri \\\n\t\tlibglu1-mesa-dev libpng-dev \\\n\t\tzlib1g-dev xbitmaps xterm git ccache \\\n#qt\n\t\tqt512base qt512multimedia qt512script qt512svg qt512tools qt512wayland qt512serialport \\\n#for libusb build\n                automake libtool-bin libudev-dev \\\n#for TRIK Studio build and tests\n                dbus libxkbcommon-x11-0 libxcb-xkb1 libpulse-dev \\\n#for PythonQt\n                realpath \\\n#set gcc/g++ version ${TRIK_GCCVERSION} as default\n    && update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-${TRIK_GCCVERSION} 60 --slave /usr/bin/g++ g++ /usr/bin/g++-${TRIK_GCCVERSION} \\\n#Cleanup after installation\n    && apt-get purge -y software-properties-common \\\n    && apt-get autoremove -y \\\n    && apt-get clean \\\n    && rm -rf /opt/qt512/examples \\\n            /var/lib/apt/lists/* \\\n            /var/cache/debconf/* \\\n            /usr/share/doc \\\n            /usr/share/man \\\n            /usr/share/locale/?? \\\n            /usr/share/locale/??_?? \\\n&& { [ -r /etc/machine-id ] || { dbus-uuidgen | tee /etc/machine-id ; } ; }\n\n#Build fresh libusb from sources\nRUN git clone --single-branch --depth 1 --branch ${TRIK_LIBUSB_TAG} https://github.com/libusb/libusb \\\n    && cd libusb \\\n    && ./autogen.sh --enable-udev --disable-examples-build --disable-tests-build --disable-static \\\n    && make install -j 4 \\\n    && cd .. \\\n    && rm -rf libusb \\\n    && echo pkg-config libusb-1.0 is v$(pkg-config --modversion libusb-1.0)\n\n#ENV QTDIR \"/Qt\"\n#ENV QTBIN \"${QTDIR}/5.12.7/gcc_64/bin\"\n#ENV QTBIN /opt/qt512/bin\n#COPY qt_scriptinstall.qs /tmp\n#COPY install_qt.sh /tmp\n# Split docker image into two main layers, this is the second one\n#RUN /tmp/install_qt.sh $QTDIR \\\n# Cleanup once again\n#    && rm -rf /tmp/* \\\n#    && rm -rf $QTDIR/Docs $QTDIR/Examples $QTDIR/Tools/QtCreator \\\n#              $QTDIR/MaintenanceTool* \\\n#\t      $QTBIN/qgltf \\\n#\t      $QTBIN/qdoc \\\n#\t      $QTBIN/linguist \\\n#\t      $QTBIN/assistant \\\n#\t      $QTBIN/designer \\\n#\t      $QTBIN/../lib/*.a\n\nRUN ln -svt /etc/profile.d/ /opt/qt512/bin/qt512-env.sh\nENV BASH_ENV /etc/profile\nADD qt_scriptinstall.qs /tmp/\nRUN curl -f -L -o /tmp/qtifw.run https://download.qt.io/official_releases/qt-installer-framework/${TRIK_QTIFW_VERSION}/QtInstallerFramework-linux-x64.run \\\n    && chmod +x /tmp/qtifw.run \\\n    && env TRIK_QT_INSTALL_DIR=/opt/qtifw /tmp/qtifw.run -platform minimal --no-force-installations --verbose --script /tmp/qt_scriptinstall.qs \\\n    && rm  /tmp/qtifw.run \\\n    && find /opt/qtifw/ -type f -maxdepth 1 -delete -print \\\n    && rm -rf /opt/qtifw/{doc,examples,installerResources}/\n\n#Build QtIFW from sources\n#RUN git clone --single-branch --depth 1 --branch ${TRIK_QTIFW_TAG} https://github.com/qtproject/installer-framework.git qtifw \\\n#    && cd qtifw \\\n#    && qmake CONFIG+=release CONFIG+=static \\\n#    && make install -j 4 \\\n#    && cd .. \\\n#    && rm -rf qtifw\n\n#ENV PATH \"${QTBIN}:/usr/lib/ccache:${PATH}\"\n#RUN python3 -m pip install --upgrade pip codecov\n\nRUN echo Internal image disk usage: $(du -sch /* 2>/dev/null | sort -h)\nENTRYPOINT [\"/bin/bash\", \"-c\"]\nCMD [\"bash\"]\n"
}