{
  "startTime": 1674250853606,
  "endTime": 1674250854198,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 22,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG BUILDER_IMAGE=rust:1.38\nARG BASE_IMAGE=debian:buster-slim\nARG PACKAGE_NAME=rudr\nFROM ${BUILDER_IMAGE} AS builder\nWORKDIR /usr/src/rudr\nRUN mkdir healthscope\n\nCOPY Cargo.toml .\nCOPY Cargo.lock .\nCOPY healthscope/Cargo.toml ./healthscope/\n\n# Create dummy files to build the dependencies, cargo won't build without src/main.rs and src/lib.rs\n# then remove Rudr fingerprint for following rebuild\nRUN mkdir -p ./src/ && \\\n    echo 'fn main() {}' > ./src/main.rs && \\\n    echo '' > ./src/lib.rs && \\\n    mkdir -p ./healthscope/src/ && \\\n    echo 'fn main() {}' > ./healthscope/src/main.rs && \\\n    echo '' > ./healthscope/src/lib.rs\nRUN cargo build --release && \\\n    cargo build --package healthscope --release && \\\n    rm -rf ./target/release/.fingerprint/rudr-* && \\\n    rm -rf ./target/release/.fingerprint/healthscope-*\n\n# Build real binaries now\nCOPY ./src ./src\nCOPY ./healthscope/src ./healthscope/src\nRUN cargo build --release\nRUN cargo build --release --package healthscope\n\nFROM ${BASE_IMAGE}\nRUN apt-get update && apt-get install --no-install-recommends -y pkg-config libssl-dev openssl && rm -rf /var/lib/apt/lists/*\nWORKDIR /usr/app\nARG PACKAGE_NAME\nCOPY --from=builder /usr/src/rudr/target/release/${PACKAGE_NAME} .\nENV RUST_LOG ${PACKAGE_NAME}=info\nRUN echo \"./${PACKAGE_NAME}\" > entrypoint.sh\nRUN chmod 0755 entrypoint.sh\nENTRYPOINT [\"/bin/sh\", \"./entrypoint.sh\"]\n"
}