{
  "startTime": 1674217532977,
  "endTime": 1674217534122,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 26
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 4,
        "columnEnd": 50
      }
    }
  ],
  "repairedDockerfile": "ARG BASE_IMAGE\n# Build the cli binary\nFROM --platform=${BUILDPLATFORM:-linux/amd64} golang:1.17-alpine as builder\nARG GOPROXY\nENV GOPROXY=${GOPROXY:-https://goproxy.cn}\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY apis/ apis/\nCOPY pkg/ pkg/\nCOPY version/ version/\nCOPY references/ references/\n\n# Build\nARG VERSION\nARG GITVERSION\n\nRUN GO111MODULE=on CGO_ENABLED=0 GOOS=linux GOARCH=amd64 \\\n    go build -a -ldflags \"-s -w -X github.com/oam-dev/kubevela/version.VelaVersion=${VERSION:-undefined} -X github.com/oam-dev/kubevela/version.GitRevision=${GITVERSION:-undefined}\" \\\n    -o vela ./references/cmd/cli/main.go\n\nFROM ghcr.io/cloudtty/cloudshell:v0.2.0\nRUN apt-get install --no-install-recommends -y vim && rm -rf /var/lib/apt/lists/*;\nENV API_TOKEN_PATH=/usr/local/kubeconfig/token\nCOPY --from=builder /workspace/vela  /usr/local/bin/vela\n"
}