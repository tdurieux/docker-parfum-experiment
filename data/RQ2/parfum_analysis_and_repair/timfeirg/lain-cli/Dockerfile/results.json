{
  "startTime": 1674219249430,
  "endTime": 1674219251084,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 123
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseHttpsUrl",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 67
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 33,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 102
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 4,
        "columnEnd": 134
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 33,
        "lineEnd": 35,
        "columnStart": 22,
        "columnEnd": 102
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:focal\n\nENV DEBIAN_FRONTEND=noninteractive LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8 LAIN_IGNORE_LINT=\"true\" PS1=\"lain# \"\n\nARG HELM_VERSION=3.8.0\nARG PYTHON_VERSION_SHORT=3.9\nARG TRIVY_VERSION=0.23.0\n\nWORKDIR /srv/lain\n\nADD docker-image/apt/sources.list /etc/apt/sources.list\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends tzdata locales gnupg2 curl jq ca-certificates python${PYTHON_VERSION_SHORT} python3-pip && \\\n    ln -s -f /usr/bin/python${PYTHON_VERSION_SHORT} /usr/bin/python3 && \\\n    ln -s -f /usr/bin/python${PYTHON_VERSION_SHORT} /usr/bin/python && \\\n    ln -s -f /usr/bin/pip3 /usr/bin/pip && \\\n    ln -s -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && \\\n    sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen && \\\n    dpkg-reconfigure --frontend=noninteractive locales && \\\n    update-locale LANG=en_US.UTF-8 && \\\n    curl -f -L https://github.com/getsentry/sentry-cli/releases/download/2.3.0/sentry-cli-Linux-x86_64 --output /usr/local/bin/sentry-cli && \\\n    chmod +x /usr/local/bin/sentry-cli && \\\n    curl -f -LO https://github.com/aquasecurity/trivy/releases/download/v$TRIVY_VERSION/trivy_${TRIVY_VERSION}_Linux-64bit.deb && \\\n    dpkg -i trivy_${TRIVY_VERSION}_Linux-64bit.deb && \\\n    curl -f -LO https://mirrors.huaweicloud.com/helm/v${HELM_VERSION}/helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n    tar -xvzf helm-v${HELM_VERSION}-linux-amd64.tar.gz && \\\n    mv linux-amd64/helm /usr/local/bin/helm && \\\n    chmod +x /usr/local/bin/helm && \\\n    rm -rf linux-amd64 *.tar.gz *.deb && \\\n    curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | apt-key add - && \\\n    curl -f https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg | apt-key add - && \\\n    echo \"deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main\" >> /etc/apt/sources.list.d/kubernetes.list && \\\n    echo \"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu focal stable\" >> /etc/apt/sources.list && \\\n    apt-get update && apt-get install --no-install-recommends -y \\\n    kubectl=1.20.11-00 python${PYTHON_VERSION_SHORT}-dev docker-ce-cli docker-compose mysql-client mytop libmysqlclient-dev redis-tools iputils-ping dnsutils \\\n    zip zsh fasd silversearcher-ag telnet rsync vim lsof tree openssh-client apache2-utils git git-lfs && \\\n    chsh -s /usr/bin/zsh root && \\\n    apt-get clean && rm -rf /var/lib/apt/lists/*;\nADD docker-image/.pip /root/.pip\nCOPY docker-image/git_askpass.sh /usr/local/bin/git_askpass.sh\nENV GIT_ASKPASS=/usr/local/bin/git_askpass.sh\nCOPY docker-image/.zshrc /root/.zshrc\nCOPY docker-image/requirements.txt /tmp/requirements.txt\nCOPY setup.py ./setup.py\nCOPY lain_cli ./lain_cli\nRUN pip3 install --no-cache-dir -U -r /tmp/requirements.txt && \\\n    git init && \\\n    rm -rf /tmp/* .git\n\nCMD [\"bash\"]\n"
}