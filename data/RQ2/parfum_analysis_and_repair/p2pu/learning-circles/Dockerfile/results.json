{
  "startTime": 1674250667077,
  "endTime": 1674250668315,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:lts-slim AS frontend\nWORKDIR /opt/app/\nCOPY package.json /opt/app/\nCOPY p2pu-theme/ /opt/app/p2pu-theme/\nRUN npm install --quiet --production && npm cache clean --force;\nCOPY . /opt/app/\nRUN npm run build\n\nFROM python:3.9-slim\nWORKDIR /opt/app/\nRUN apt-get update \\\n    && apt-get install --no-install-recommends -y \\\n        bzip2 \\\n        gettext \\\n        libcairo2 \\\n        libjpeg-dev \\\n        libpq-dev \\\n        libxml2 \\\n        libxslt-dev \\\n        openssl \\\n        postgresql-client \\\n        wget \\\n    && apt-get clean \\\n    && rm -rf /var/lib/apt/lists/*\nCOPY requirements.txt /opt/app/\nRUN python3 -m venv /opt/django-venv \\\n    && /opt/django-venv/bin/pip install --no-cache-dir -r /opt/app/requirements.txt\nCOPY . /opt/app/\n# Copy CSS & compiled JavaScript\nCOPY --from=frontend /opt/app/assets assets\nCOPY config/docker-entry.sh /docker-entry.sh\nENV DOCKERIZE_VERSION v0.6.1\nRUN wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz \\\n    && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz\nRUN mkdir -p /var/lib/celery && \\\n    addgroup --gid 1000 celery && \\\n    useradd --no-log-init --uid 1000 --gid 1000 celery && \\\n    chown celery:celery /var/lib/celery/\nRUN /opt/django-venv/bin/python /opt/app/manage.py compilemessages -l de -l fi -l pl -l pt -l ro\nENV DATABASE_URL=\"sqlite:////var/app/db.sqlite3\" \\\n    ADMIN_EMAIL=\"\" \\\n    SECRET_KEY=\"\" \\\n    EMAIL_HOST=\"\" \\\n    EMAIL_HOST_USER=\"\" \\\n    EMAIL_HOST_PASSWORD=\"\" \\\n    TWILIO_ACCOUNT_SID=\"\" \\\n    TWILIO_AUTH_TOKEN=\"\" \\\n    TWILIO_NUMBER=\"\" \\\n    BROKER_URL=\"amqp://guest:guest@rabbitmq//\" \\\n    BACKUP_DIR=\"/tmp\" \\\n    BACKUP_AWS_ACCESS_KEY_ID=\"\" \\\n    BACKUP_AWS_SECRET_ACCESS_KEY=\"\" \\\n    BACKUP_AWS_STORAGE_BUCKET_NAME=\"\" \\\n    BACKUP_AWS_KEY_PREFIX=\"\"\nEXPOSE 80\nVOLUME /var/app/static_serve\nVOLUME /var/app/upload\nVOLUME /var/lib/celery/\nENTRYPOINT [\"/docker-entry.sh\"]\nCMD [\"/opt/django-venv/bin/gunicorn\", \"learnwithpeople.wsgi:application\", \"--bind\", \"0.0.0.0:80\", \"--workers=3\"]\n"
}