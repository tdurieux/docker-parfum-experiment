{
  "startTime": 1674215816108,
  "endTime": 1674215817314,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 1,
        "columnEnd": 28
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 1,
        "columnEnd": 27
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 28,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 147
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 100
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 9,
        "columnStart": 1,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 100
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 124
      }
    }
  ],
  "repairedDockerfile": "FROM arm64v8/ubuntu:16.04\n\nARG DEBIAN_FRONTEND=noninteractive\n\nRUN apt-get update && \\\n\tDEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y \\\n\tautoconf automake build-essential sudo libtool libgmp-dev \\\n\tlibsqlite3-dev python3 python3-mako net-tools zlib1g-dev libsodium-dev \\\n\tgettext wget libcurl3-gnutls ninja-build libssl-dev \\\n\tlibcurl4-gnutls-dev libevent-dev && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /root\n\nRUN apt remove -y git && apt autoremove -y\nRUN apt install --no-install-recommends -y sudo wget libz-dev libssl-dev libcurl4-gnutls-dev libexpat1-dev gettext cmake gcc && rm -rf /var/lib/apt/lists/*;\nRUN wget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.33.0.tar.gz && \\\n\ttar zxvf git-2.33.0.tar.gz && \\\n\tcd git-2.33.0 && \\\n\tmake prefix=/usr/local all && \\\n\tmake prefix=/usr/local install && rm git-2.33.0.tar.gz\n\nRUN git clone https://github.com/chips-blockchain/bet && \\\n\tcd bet && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-static && \\\n\tmake && \\\n\tcd privatebet && \\\n\tls -lh bet && \\\n\tcd ~/bet && \\\n\ttar -czvf bet-linux-$(printf '%s' $(uname -m))-$(printf '%s' $(git describe --always)).tar.gz privatebet/bet privatebet/cashierd privatebet/config && rm bet-linux-$( printf '%s' $( uname -m))-$( printf '%s' $( git describe --always)).tar.gz\n\nCMD cd ~/bet && \\\n\tls -lh bet-linux-$(printf '%s' $(uname -m))-$(printf '%s' $(git describe --always)).tar.gz && \\\n\tcp -av bet-linux-$(printf '%s' $(uname -m))-$(printf '%s' $(git describe --always)).tar.gz /root/Download/"
}