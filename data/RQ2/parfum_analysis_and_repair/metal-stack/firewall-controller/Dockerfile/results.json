{
  "startTime": 1674246094501,
  "endTime": 1674246095076,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 113
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 51
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build the firewall-controller binary\nFROM golang:1.18 as builder\n\nENV KUBEBUILDER_DOWNLOAD_URL=https://github.com/kubernetes-sigs/kubebuilder/releases/download\nENV KUBEBUILDER_VER=v3.2.0\nRUN set -ex \\\n && mkdir -p /usr/local/bin \\\n && curl -f -L ${KUBEBUILDER_DOWNLOAD_URL}/v${KUBEBUILDER_VER}/kubebuilder_linux_amd64 -o /usr/local/bin/kubebuilder \\\n && chmod +x /usr/local/bin/kubebuilder\n\nWORKDIR /workspace\n# Copy the Go Modules manifests\nCOPY go.mod go.mod\nCOPY go.sum go.sum\n# cache deps before building and copying source so that we don't need to re-download as much\n# and so that source changes don't invalidate our downloaded layer\nRUN go mod download\n\n# Copy the go source\nCOPY .git/ .git/\nCOPY Makefile Makefile\nCOPY main.go main.go\nCOPY api/ api/\nCOPY controllers/ controllers/\nCOPY config config/\nCOPY pkg/ pkg/\nCOPY hack/ hack/\n\n# Build\nRUN make test all\n\n# Final Image\nFROM debian:10\nWORKDIR /\nCOPY --from=builder /workspace/bin/firewall-controller .\nRUN apt update \\\n && apt install -y --no-install-recommends nftables && rm -rf /var/lib/apt/lists/*;\nENTRYPOINT [\"/firewall-controller\"]\n"
}