{
  "startTime": 1674218760544,
  "endTime": 1674218761824,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 45
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 16,
        "lineEnd": 16,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedDockerfile": "FROM nvidia/cuda:10.2-cudnn7-devel-ubuntu18.04\n\n# Install Python 3.8\nRUN apt update && \\\n    apt install --no-install-recommends -y software-properties-common && \\\n    add-apt-repository ppa:deadsnakes/ppa && \\\n    apt update && \\\n    apt install --no-install-recommends -y python3.8 python3-pip && \\\n    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1 && \\\n    update-alternatives --install /usr/bin/python python /usr/bin/python3.8 1 && \\\n    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 1 && rm -rf /var/lib/apt/lists/*;\n\n# OpenGL is needed for OpenCV\nRUN apt install --no-install-recommends -y libgl1-mesa-glx && rm -rf /var/lib/apt/lists/*;\n\n# Install zip\nRUN apt install --no-install-recommends -y zip && rm -rf /var/lib/apt/lists/*;\n\n# Install poetry\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir poetry && \\\n    poetry config virtualenvs.create false\n\n# Install dependencies\nRUN mkdir -p /chess\nWORKDIR /chess\nCOPY ./pyproject.toml ./poetry.lock* ./\nRUN poetry install --no-root\nENV PYTHONPATH \"/chess:${PYTHONPATH}\"\n\n# Setup data mount\nRUN mkdir -p /data\nENV DATA_DIR /data\nVOLUME /data\n\n# Setup config mount\nRUN mkdir -p /config\nENV CONFIG_DIR /config\nVOLUME /config\n\n# Setup run mount\nRUN mkdir -p /chess/runs\nENV RUN_DIR /chess/runs\nVOLUME /chess/runs\n\n# Setup results mount\nRUN mkdir -p /chess/results\nENV RESULTS_DIR /chess/results\nVOLUME /chess/results\n\n# Setup models mount\nRUN mkdir -p /chess/models\nENV MODELS_DIR /chess/models\nVOLUME /chess/models\n\n# Copy files\nCOPY chesscog ./chesscog\n\n# Scratch volume\nVOLUME /chess/scratch\n\n# Weird fix for poetry in the GPU container (not required for CPU)\nRUN python3 -m pip install idna\n\n# Entrypoint (password is \"chesscog\")\nCMD poetry run tensorboard --logdir ./runs --host 0.0.0.0 --port 9999  & \\\n    poetry run jupyter lab --no-browser --allow-root --ip 0.0.0.0 --port 8888 --NotebookApp.password \"sha1:22fda334b4b5:770a9d781f1e689afdcd2c55e7abae94ba74d925\""
}