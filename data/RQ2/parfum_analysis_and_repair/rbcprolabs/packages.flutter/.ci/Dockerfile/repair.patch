diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rbcprolabs/packages.flutter/.ci/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rbcprolabs/packages.flutter/.ci/Dockerfile/repaired.Dockerfile
index 0eae732..5141369 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/rbcprolabs/packages.flutter/.ci/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/rbcprolabs/packages.flutter/.ci/Dockerfile/repaired.Dockerfile
@@ -5,18 +5,18 @@ FROM cirrusci/flutter:2.2.2
 
 RUN apt-get update -y
 
-RUN apt-get install -y --no-install-recommends gnupg
+RUN apt-get install -y --no-install-recommends gnupg && rm -rf /var/lib/apt/lists/*;
 
 # Add repo for gcloud sdk and install it
 RUN echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | \
   sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
 
-RUN curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
+RUN curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
   sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
 
-RUN apt-get update && apt-get install -y google-cloud-sdk && \
+RUN apt-get update && apt-get install --no-install-recommends -y google-cloud-sdk && \
   gcloud config set core/disable_usage_reporting true && \
-  gcloud config set component_manager/disable_update_check true
+  gcloud config set component_manager/disable_update_check true && rm -rf /var/lib/apt/lists/*;
 
 RUN yes | sdkmanager \
   "platforms;android-27" \
@@ -27,20 +27,20 @@ RUN yes | sdkmanager \
 RUN yes | sdkmanager --licenses
 
 # Install formatter.
-RUN apt-get install -y clang-format
+RUN apt-get install --no-install-recommends -y clang-format && rm -rf /var/lib/apt/lists/*;
 
 # Install xvfb to allow running headless
-RUN apt-get install -y xvfb libegl1-mesa
+RUN apt-get install --no-install-recommends -y xvfb libegl1-mesa && rm -rf /var/lib/apt/lists/*;
 # Install Linux desktop build tool requirements.
-RUN apt-get install -y clang cmake ninja-build file pkg-config
+RUN apt-get install --no-install-recommends -y clang cmake ninja-build file pkg-config && rm -rf /var/lib/apt/lists/*;
 # Install necessary libraries.
-RUN apt-get install -y libgtk-3-dev libblkid-dev liblzma-dev libgcrypt20-dev
+RUN apt-get install --no-install-recommends -y libgtk-3-dev libblkid-dev liblzma-dev libgcrypt20-dev && rm -rf /var/lib/apt/lists/*;
 
 # Add repo for Google Chrome and install it
 RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
 RUN echo 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main' | sudo tee /etc/apt/sources.list.d/google-chrome.list
-RUN apt-get update && apt-get install -y --no-install-recommends google-chrome-stable
+RUN apt-get update && apt-get install -y --no-install-recommends google-chrome-stable && rm -rf /var/lib/apt/lists/*;
 
 # Make Chrome the default so http: has a handler for url_launcher tests.
-RUN apt-get install -y xdg-utils
+RUN apt-get install --no-install-recommends -y xdg-utils && rm -rf /var/lib/apt/lists/*;
 RUN xdg-settings set default-web-browser google-chrome.desktop