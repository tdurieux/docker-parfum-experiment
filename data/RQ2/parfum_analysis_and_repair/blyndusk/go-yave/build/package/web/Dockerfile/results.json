{
  "startTime": 1674250794321,
  "endTime": 1674250794797,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 45,
        "lineEnd": 45,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:alpine as development\n\n# ----- SETUP -----\n\n# Set the current working with go absolute path\nWORKDIR /app\n\n# ----- DOWNLOAD PACKAGES -----\n\n# Copy package.json + package-lock.json for install before full copy\nCOPY web/package*.json ./\n\n# Install all dependencies\nRUN npm install && npm cache clean --force;\n\n# ----- COPY SOURCE & RUN -----\n\n# Copy the source from the current directory to the container\nCOPY web/ .\n\n# Expose default Vue port\nEXPOSE 3334\n\n# Start the web server\nENTRYPOINT [\"npm\", \"run\", \"dev\"]\n\n# ------------------------------------------------------------------------\n\n\nFROM node:alpine as build\n\n# Set the image source for ghcr.io\nLABEL org.opencontainers.image.source = \"https://github.com/blyndusk/go-yave\"\n\n# ----- SETUP -----\n\n# Set the current working with go absolute path\nWORKDIR /app\n\n# ----- DOWNLOAD PACKAGES -----\n\n# Copy package.json + package-lock.json for install before full copy\nCOPY web/package*.json ./\n\n# Install all dependencies\nRUN npm install && npm cache clean --force;\n\n# ----- COPY SOURCE & RUN -----\n\n# Copy specific folders to avoid large useless images\nCOPY web/index.html index.html\nCOPY web/vite.config.js vite.config.js\nCOPY web/.env.development .env.development\nCOPY web/.env.production .env.production\nCOPY web/public/ public/\nCOPY web/src/ src/\n\n# Expose default Vue port\nEXPOSE 3334\n\n# Start the web server\nRUN npm run build\n\n# ------------------------------------------------------------------------\n\nFROM nginx:alpine as production\n\n# Copy builded app\nCOPY --from=build /app/dist /usr/share/nginx/html\n\n# Copy nginx config\nCOPY build/package/web/default.conf /etc/nginx/conf.d/default.conf\n\n# Expose nginx default port\nEXPOSE 80\n\n# Start service\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n"
}