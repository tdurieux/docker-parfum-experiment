{
  "startTime": 1674217581372,
  "endTime": 1674217582450,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 117
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 136
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 22,
        "columnEnd": 117
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 95
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 22,
        "columnEnd": 136
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 95
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 119
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 77
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 26,
        "lineEnd": 26,
        "columnStart": 4,
        "columnEnd": 119
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:22.04 as base\nLABEL maintainer=\"Johannes Kalmbach <kalmbacj@informatik.uni-freiburg.de>\"\nENV LANG C.UTF-8\nENV LC_ALL C.UTF-8\nENV LC_CTYPE C.UTF-8\nENV DEBIAN_FRONTEND=noninteractive\n\nFROM base as builder\nRUN apt-get update && apt-get install --no-install-recommends -y build-essential cmake libicu-dev tzdata pkg-config uuid-runtime uuid-dev git && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y libjemalloc-dev ninja-build libzstd-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y libboost1.74-dev libboost-program-options1.74-dev libboost-iostreams1.74-dev && rm -rf /var/lib/apt/lists/*;\n\nCOPY . /app/\n\nWORKDIR /app/\nENV DEBIAN_FRONTEND=noninteractive\n\nWORKDIR /app/build/\nRUN cmake -DCMAKE_BUILD_TYPE=Release -DLOGLEVEL=INFO -DUSE_PARALLEL=true -GNinja .. && ninja\nRUN make test\n\nFROM base as runtime\nWORKDIR /app\nENV DEBIAN_FRONTEND=noninteractive\nRUN apt-get update && apt-get install --no-install-recommends -y wget python3-yaml unzip curl bzip2 pkg-config libicu-dev python3-icu libgomp1 uuid-runtime make && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y lbzip2 libjemalloc-dev libzstd-dev && rm -rf /var/lib/apt/lists/*;\nRUN apt install --no-install-recommends -y libboost1.74-dev libboost-program-options1.74-dev libboost-iostreams1.74-dev && rm -rf /var/lib/apt/lists/*;\n\nARG UID=1000\nRUN groupadd -r qlever && useradd --no-log-init -r -u $UID -g qlever qlever && chown qlever:qlever /app\nUSER qlever\nENV PATH=/app/:$PATH\n\nCOPY --from=builder /app/build/*Main /app/src/web/* /app/\nCOPY --from=builder /app/e2e/* /app/e2e/\nENV PATH=/app/:$PATH\n\nUSER qlever\nEXPOSE 7001\nVOLUME [\"/input\", \"/index\"]\n\nENV INDEX_PREFIX index\nENV MEMORY_FOR_QUERIES 70\nENV CACHE_MAX_SIZE_GB 30\nENV CACHE_MAX_SIZE_GB_SINGLE_ENTRY 5\nENV CACHE_MAX_NUM_ENTRIES 1000\n# Need the shell to get the INDEX_PREFIX envirionment variable\nENTRYPOINT [\"/bin/sh\", \"-c\", \"exec ServerMain -i \\\"/index/${INDEX_PREFIX}\\\" -j 8 -m ${MEMORY_FOR_QUERIES} -c ${CACHE_MAX_SIZE_GB} -e ${CACHE_MAX_SIZE_GB_SINGLE_ENTRY} -k ${CACHE_MAX_NUM_ENTRIES} -p 7001 \\\"$@\\\"\", \"--\"]\n\n# Build image:  docker build -t qlever.master .\n\n# Build index:  DB=wikidata; docker run -it --rm -v \"$(pwd)\":/index --entrypoint bash --name qlever.$DB-index qlever.master -c \"IndexBuilderMain -f /index/$DB.nt -i /index/$DB -s /index/$DB.settings.json | tee /index/$DB.index-log.txt\"; rm -f $DB/*tmp*\n\n# Run engine:   DB=wikidata; PORT=7001; docker rm -f qlever.$DB; docker run -d --restart=unless-stopped -v \"$(pwd)\":/index -p $PORT:7001 -e INDEX_PREFIX=$DB -e MEMORY_FOR_QUERIES=30 --name qlever.$DB qlever.master; docker logs -f --tail=100 qlever.$DB\n"
}