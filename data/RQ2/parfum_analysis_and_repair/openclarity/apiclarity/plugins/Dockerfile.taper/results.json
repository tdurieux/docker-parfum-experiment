{
  "startTime": 1674253187410,
  "endTime": 1674253188141,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 29,
        "lineEnd": 29,
        "columnStart": 4,
        "columnEnd": 36
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM golang:1.16.6-alpine AS builder\n\n# Set necessary environment variables needed for our image.\nENV CGO_ENABLED=1 GOOS=linux GOARCH=amd64\n\nRUN apk add --no-cache libpcap-dev gcc g++ make bash\n\nWORKDIR /plugins\n\nCOPY api ./api\nCOPY common ./common\n\nWORKDIR /plugins/taper\n\nCOPY taper/go.* ./\nRUN go mod download\n\nARG VERSION\nCOPY taper .\nRUN go build -ldflags=\"-s -w \\\n     -X 'github.com/openclarity/apiclarity/plugins/taper/version.Version=${VERSION}'\" -o agent .\n\nWORKDIR /plugins/taper/extensions/http\n\nCOPY taper/extensions/http .\nRUN go build -buildmode=plugin -o ../http.so .\n\nFROM alpine:3.14\n\nRUN apk add --no-cache bash libpcap-dev tcpdump\nWORKDIR /app\n\n# Copy binary and config files from /build to root folder of scratch container.\nCOPY --from=builder [\"/plugins/taper/agent\", \".\"]\nCOPY --from=builder [\"/plugins/taper/extensions/http.so\", \"extensions/http.so\"]\n\nENTRYPOINT [\"/app/agent\"]"
}