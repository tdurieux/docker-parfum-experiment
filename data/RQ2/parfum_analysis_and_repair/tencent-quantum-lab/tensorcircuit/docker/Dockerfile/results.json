{
  "startTime": 1674252124958,
  "endTime": 1674252125715,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 47
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 35,
        "lineEnd": 35,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 37,
        "lineEnd": 37,
        "columnStart": 4,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 10
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 17,
        "columnStart": 18,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM nvidia/cuda:11.0.3-cudnn8-runtime-ubuntu18.04\n\n# https://gitlab.com/nvidia/container-images/cuda/-/blob/master/doc/supported-tags.md\n\nRUN apt-key del 7fa2af80\nRUN apt-key del 3bf863cc\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub\nRUN apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub\n\n# Nvidia is breaking the docker images on Apr 2022 ...\n# https://github.com/NVIDIA/nvidia-docker/issues/1631\n\nRUN apt update && DEBIAN_FRONTEND=noninteractive apt --no-install-recommends install -y \\\n    wget \\\n    cuda-command-line-tools-11-0 \\\n    git \\\n    vim \\\n    pandoc && rm -rf /var/lib/apt/lists/*;\n\nRUN wget -q -P /tmp \\\n  https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh \\\n    && bash /tmp/Miniconda3-latest-Linux-x86_64.sh -b -p /opt/conda \\\n    && rm /tmp/Miniconda3-latest-Linux-x86_64.sh\n\nENV PATH=\"/opt/conda/bin:$PATH\"\n\nRUN conda install -y  \\\n    cudatoolkit=11.0 \\\n    pip \\\n    python=3.8\n\nCOPY requirements/requirements-docker.txt /app/requirements-docker.txt\n\nRUN pip install --no-cache-dir -r /app/requirements-docker.txt\n\nRUN pip install --no-cache-dir jaxlib==0.3.2+cuda11.cudnn805 -f https://storage.googleapis.com/jax-releases/jax_releases.html\n\nRUN pip install --no-cache-dir -U git+https://github.com/jcmgray/cotengra.git\n\nRUN pip install --no-cache-dir ray\n\n# requirements conflict for ray\n\nRUN ln -s /usr/local/cuda-11.0/targets/x86_64-linux/lib/libcusolver.so.10 /usr/local/cuda-11.0/targets/x86_64-linux/lib/libcusolver.so.11\n\nRUN echo export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.0/targets/x86_64-linux/lib >> ~/.bashrc \\\n    && echo export PYTHONPATH=/app >> ~/.bashrc \\\n    && echo export TF_CPP_MIN_LOG_LEVEL=3 >> ~/.bashrc\n\nCOPY . /app\n\n# RUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-11.1/targets/x86_64-linux/lib\n\nWORKDIR /app\n\nCMD [\"/bin/bash\"]"
}