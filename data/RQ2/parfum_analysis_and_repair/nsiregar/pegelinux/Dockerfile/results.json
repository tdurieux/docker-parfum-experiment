{
  "startTime": 1674253634008,
  "endTime": 1674253635014,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 27,
        "lineEnd": 27,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 1,
        "columnEnd": 32
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 29
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 1,
        "columnEnd": 87
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "### Compile js\nfrom node:alpine as jsbuilder\n\nWORKDIR /js\nRUN mkdir -p /app/assets/js\n\n# Copy js code and dependencies\nCOPY ./js /js\n\n# install dependecies\nRUN yarn install && yarn cache clean;\n\n# build js\nRUN yarn build-production\n\n### actual image\n# Pull base image\nFROM python:3.8-alpine\n\n# Set environment varibles\nENV PYTHONDONTWRITEBYTECODE 1\nENV PYTHONUNBUFFERED 1\n\n# Set work directory\nWORKDIR /pegelinux\n\n# Install dependencies\nRUN pip install --no-cache-dir --upgrade pip\nCOPY ./requirements.txt /pegelinux/requirements.txt\n\nRUN apk update && \\\n apk add --no-cache postgresql-libs bash && \\\n apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev libffi-dev binutils libc-dev && \\\n pip install --no-cache-dir -r requirements.txt && \\\n apk --purge del .build-deps\n\n# Copy project\nCOPY . /pegelinux/\n\n# copy application js\nCOPY --from=jsbuilder /app/assets/js/application.js /code/app/assets/js/application.js\n"
}