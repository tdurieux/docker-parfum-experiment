{
  "startTime": 1674215567612,
  "endTime": 1674215568533,
  "originalSmells": [
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 5,
        "columnEnd": 58
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# build image\nFROM rust:1.47.0 as cargo-build\n\n# rust toolchain version\nARG RUST_TC_VER=stable\nARG KEY_SIZE=8\nARG COMMIT_HASH\n\nRUN apt-get update \\\n  && apt-get install -y --no-install-recommends musl-tools \\\n  && rustup install $RUST_TC_VER \\\n  && rustup default $RUST_TC_VER \\\n  && rustup target add x86_64-unknown-linux-musl && rm -rf /var/lib/apt/lists/*;\n\nWORKDIR /usr/src/bob\n\n# crates downloading and initial build\nRUN mkdir -p bob/src bob-backend/src bob-common/src bob-grpc/src bob-apps/bin bob-access/src\nRUN mkdir target\nENV OUT_DIR /usr/src/bob/target\nCOPY Cargo.toml Cargo.toml\nCOPY bob/Cargo.toml bob/Cargo.toml\nCOPY bob-backend/Cargo.toml bob-backend/Cargo.toml\nCOPY bob-common/Cargo.toml bob-common/Cargo.toml\nCOPY bob-grpc/Cargo.toml bob-grpc/Cargo.toml\nCOPY bob-apps/Cargo.toml bob-apps/Cargo.toml\nCOPY bob-access/Cargo.toml bob-access/Cargo.toml\nRUN sed -i \"s|\\[\\[bench\\]\\]|\\[\\[bench_ignore\\]\\]|g\" */Cargo.toml\n\nRUN echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob/src/lib.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-backend/src/lib.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-common/src/lib.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-grpc/src/lib.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-apps/bin/bobd.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-apps/bin/bobc.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-apps/bin/bobp.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-apps/bin/ccg.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-apps/bin/dcr.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-apps/bin/brt.rs \\\n  && echo \"fn main() {println!(\\\"if you see this, the build broke\\\")}\" > bob-access/src/lib.rs \\\n  && cargo build --release --target=x86_64-unknown-linux-musl\n\n\n# separate stage for proto build\nRUN echo \"fn main() {println!(\\\"if you see this, the build broke\\\")} pub mod grpc {include!(\\\"bob_storage.rs\\\");}\" > bob-grpc/src/lib.rs \\\n  && mkdir -p bob-grpc/proto\nCOPY bob-grpc/proto/* bob-grpc/proto/\nCOPY bob-grpc/build.rs bob-grpc/build.rs\nRUN cargo build --release --target=x86_64-unknown-linux-musl \\\n  && rm -f target/x86_64-unknown-linux-musl/release/deps/bob* \\\n  && rm -f target/x86_64-unknown-linux-musl/release/deps/libbob*\n\n# final build\nCOPY . .\nENV BOB_KEY_SIZE=${KEY_SIZE}\nENV BOB_COMMIT_HASH=${COMMIT_HASH}\nRUN cargo build --release --target=x86_64-unknown-linux-musl\n\n# bobd image\nFROM alpine:3.12.0\n\n# SSH\nENV NOTVISIBLE \"in users profile\"\nRUN apk update \\\n  && apk add --no-cache openssh-server openssh-client sudo rsync bash \\\n  && mkdir /var/run/sshd \\\n  && echo 'root:bob' | chpasswd \\\n  && sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config \\\n  && sed -i 's/#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config \\\n  && sed 's@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/init.d/sshd \\\n  && echo \"export VISIBLE=now\" >> /etc/profile \\\n  && echo '%wheel ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/wheel \\\n  && addgroup -g 1000 -S bobd \\\n  && adduser --shell /bin/bash -G bobd -G wheel -S bobd\n\nWORKDIR /home/bob/bin/\nCOPY --from=cargo-build /usr/src/bob/target/x86_64-unknown-linux-musl/release/bobd .\nRUN chown bobd:bobd bobd \\\n  && mkdir /bob/log -p && chown bobd:bobd /bob/log -R \\\n  && mkdir /bob/data/d1 -p && chown bobd:bobd /bob/data/d1 -R \\\n  && mkdir /bob/configs -p && chown bobd:bobd /bob/configs -R \\\n  && mkdir ~/.ssh \\\n  && chmod 600 -R ~/.ssh \\\n  && echo -e \"#!/bin/bash\\n\\\n  cp /local_ssh/* ~/.ssh\\n\\\n  chown -R root ~/.ssh\\n\\\n  eval $(ssh-agent)\\n\\\n  ssh-add ~/.ssh/id_rsa\\n\\\n  /usr/sbin/sshd -D &\" >> prep.sh \\\n  && chmod +x prep.sh \\\n  && echo -e \"#!/bin/bash\\n\\\n  trap 'kill -TERM \\$! && wait' SIGTERM\\n\\\n  ./bobd -c /bob/configs/\\$1 -n /bob/configs/\\$2 \\${@:3} &\\n\\\n  wait\" >> bobd.sh \\\n  && chmod +x bobd.sh \\\n  && echo -e \"#!/bin/bash\\n\\\n  trap 'kill -TERM \\$! && wait' SIGTERM\\n\\\n  sudo -S ./prep.sh\\n\\\n  ./bobd.sh \\$@ & \\n\\\n  wait\" >> run.sh \\\n  && chmod +x run.sh\n\nCOPY dockerfiles/default-configs/ /bob/configs\n\nEXPOSE 80\nEXPOSE 22\nEXPOSE 20000\nUSER bobd\nENTRYPOINT [\"/bin/bash\", \"./run.sh\"]\nCMD [\"cluster.yaml\", \"node.yaml\"]"
}