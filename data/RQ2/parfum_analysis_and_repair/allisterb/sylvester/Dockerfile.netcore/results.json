{
  "startTime": 1674250397626,
  "endTime": 1674250398819,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 4,
        "columnEnd": 154
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 41,
        "lineEnd": 41,
        "columnStart": 4,
        "columnEnd": 110
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 3,
        "columnEnd": 141
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 14
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 14
      }
    }
  ],
  "repairedDockerfile": "FROM jupyter/scipy-notebook:latest\n\n# Install .NET CLI dependencies\n\nARG NB_USER=jovyan\nARG NB_UID=1000\nENV USER ${NB_USER}\nENV NB_UID ${NB_UID}\nENV HOME /home/${NB_USER}\n\nWORKDIR ${HOME}\n\nUSER root\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y curl && rm -rf /var/lib/apt/lists/*;\n\n# Install .NET CLI dependencies\nRUN apt-get install -y --no-install-recommends \\\n        libc6 \\\n        libgcc1 \\\n        libgssapi-krb5-2 \\\n        libicu60 \\\n        libssl1.1 \\\n        libstdc++6 \\\n        zlib1g && rm -rf /var/lib/apt/lists/*;\n\nRUN rm -rf /var/lib/apt/lists/*\n\n# Install .NET Core SDK\nENV DOTNET_SDK_VERSION 3.0.100\n\nRUN curl -f -SL --output dotnet.tar.gz https://dotnetcli.blob.core.windows.net/dotnet/Sdk/$DOTNET_SDK_VERSION/dotnet-sdk-$DOTNET_SDK_VERSION-linux-x64.tar.gz \\\n    && dotnet_sha512='766da31f9a0bcfbf0f12c91ea68354eb509ac2111879d55b656f19299c6ea1c005d31460dac7c2a4ef82b3edfea30232c82ba301fb52c0ff268d3e3a1b73d8f7' \\\n    && echo \"$dotnet_sha512 dotnet.tar.gz\" | sha512sum -c - \\\n    && mkdir -p /usr/share/dotnet \\\n    && tar -zxf dotnet.tar.gz -C /usr/share/dotnet \\\n    && rm dotnet.tar.gz \\\n    && ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet\n\n# Install TensorFlow\n\nRUN curl -f -SL --output libtensorflow.so https://allisterb-sylvester.s3.us-east-2.amazonaws.com/libtensorflow.so \\\n&& curl -f -SL --output libtensorflow_framework.so.2.0.0 https://allisterb-sylvester.s3.us-east-2.amazonaws.com/libtensorflow_framework.so.2.0.0 \\\n&& cp libtensorflow.so /usr/local/lib/libTensorFlow && cp libtensorflow.so /usr/local/lib/TensorFlow && cp libtensorflow.so /usr/local/lib/TensorFlow.so \\\n&& cp libtensorflow_framework.so.2.0.0 /usr/local/lib/ && cp libtensorflow_framework.so.2.0.0 /usr/local/lib/libtensorflow_framework.so.2\n# Enable detection of running in a container\nENV DOTNET_RUNNING_IN_CONTAINER=true \\\n    # Enable correct mode for dotnet watch (only mode supported in a container)\n    DOTNET_USE_POLLING_FILE_WATCHER=true \\\n    # Skip extraction of XML docs - generally not useful within an image/container - helps performance\n    NUGET_XMLDOC_MODE=skip \\\n    # Opt out of telemetry until after we install jupyter when building the image, this prevents caching of machine id\n    DOTNET_TRY_CLI_TELEMETRY_OPTOUT=true\n\n# Trigger first run experience by running arbitrary cmd\nRUN dotnet help\n\n# Copy notebooks\n\nCOPY ./notebooks/ ${HOME}/notebooks/\n\n# Copy package sources\n\nCOPY ./NuGet.config ${HOME}/nuget.config\n\nRUN chown -R ${NB_UID} ${HOME}\nUSER ${USER}\n\n# Install lastest build from master branch of Microsoft.DotNet.Interactive from myget\nRUN dotnet tool install -g dotnet-interactive --add-source \"https://dotnet.myget.org/F/dotnet-try/api/v3/index.json\"\n\nENV PATH=\"${PATH}:${HOME}/.dotnet/tools\"\nRUN echo \"$PATH\"\n\nENV LIBRARY_PATH=\"${LIBRARY_PATH}:/usr/local/lib\"\n\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib\"\n\nRUN echo \"LIBRARY_PATH=$LIBRARY_PATH\"\n\nRUN echo \"LD_LIBRARY_PATH=$LD_LIBRARY_PATH\"\n# Install kernel specs\nRUN dotnet interactive jupyter install\n\n# Enable telemetry once we install jupyter for the image\nENV DOTNET_TRY_CLI_TELEMETRY_OPTOUT=false\n\n# Set root to notebooks\nWORKDIR ${HOME}/notebooks/\n"
}