diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pinterest/querybook/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pinterest/querybook/Dockerfile/repaired.Dockerfile
index 86c5f27..7d30aef 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pinterest/querybook/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pinterest/querybook/Dockerfile/repaired.Dockerfile
@@ -16,31 +16,31 @@ RUN rm -rf /var/lib/apt/lists/* \
     && curl -fsSL https://deb.nodesource.com/setup_16.x | bash - \
     && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \
     nodejs \
-    && apt-get clean
+    && apt-get clean && rm -rf /var/lib/apt/lists/*;
 
 # Install YARN
 RUN npm i -g npm@8.5.0 \
     && npm i -g yarn@^1.22.10 \
     && npm explore npm --global -- npm install node-gyp@9.0.0 \
     && yarn config set cache-folder /mnt/yarn-cache/cache \
-    && yarn config set yarn-offline-mirror /mnt/yarn-offline-mirror
+    && yarn config set yarn-offline-mirror /mnt/yarn-offline-mirror && npm cache clean --force; && yarn cache clean;
 
 WORKDIR /opt/querybook
 
 COPY requirements requirements/
-RUN pip install -r requirements/base.txt \
+RUN pip install --no-cache-dir -r requirements/base.txt \
     && if [ "${PRODUCTION}" = "true" ] ; then \
-    pip install -r requirements/prod.txt; \
+    pip install --no-cache-dir -r requirements/prod.txt; \
     fi \
-    && if  [ -n "$EXTRA_PIP_INSTALLS" ] ; then \
-    for PACKAGE in $(echo $EXTRA_PIP_INSTALLS | sed "s/,/ /g") ; do \
-    pip install -r requirements/${PACKAGE}; \
+    && if [ -n "$EXTRA_PIP_INSTALLS" ] ; then \
+    for PACKAGE in $(echo $EXTRA_PIP_INSTALLS | sed "s/,/ /g"); do \
+    pip install --no-cache-dir -r requirements/${PACKAGE}; \
     done \
     fi \
-    && pip install -r requirements/local.txt || true
+    && pip install --no-cache-dir -r requirements/local.txt || true
 
 COPY package.json yarn.lock ./
-RUN yarn install --pure-lockfile
+RUN yarn install --pure-lockfile && yarn cache clean;
 
 # Copy everything else
 COPY . .