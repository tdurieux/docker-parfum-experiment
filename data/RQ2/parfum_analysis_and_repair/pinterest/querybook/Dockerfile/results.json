{
  "startTime": 1674251797700,
  "endTime": 1674251798938,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 7,
        "columnEnd": 29
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 7,
        "columnEnd": 57
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 7,
        "columnEnd": 67
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 40
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 32,
        "lineEnd": 32,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 7,
        "columnEnd": 44
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 8,
        "lineEnd": 14,
        "columnStart": 7,
        "columnEnd": 16
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 16,
        "lineEnd": 17,
        "columnStart": 7,
        "columnEnd": 10
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.7.9\nARG PRODUCTION=true\nARG EXTRA_PIP_INSTALLS=\"\"\n\n## Install Querybook package requirements + NodeJS\n# Installing build-essential and python-dev for uwsgi\nRUN rm -rf /var/lib/apt/lists/* \\\n    && apt-get update \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n    libsasl2-dev \\\n    libsasl2-modules \\\n    build-essential \\\n    python-dev \\\n    libssl-dev \\\n    libldap2-dev \\\n    && curl -fsSL https://deb.nodesource.com/setup_16.x | bash - \\\n    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y --allow-downgrades --allow-remove-essential --allow-change-held-packages \\\n    nodejs \\\n    && apt-get clean && rm -rf /var/lib/apt/lists/*;\n\n# Install YARN\nRUN npm i -g npm@8.5.0 \\\n    && npm i -g yarn@^1.22.10 \\\n    && npm explore npm --global -- npm install node-gyp@9.0.0 \\\n    && yarn config set cache-folder /mnt/yarn-cache/cache \\\n    && yarn config set yarn-offline-mirror /mnt/yarn-offline-mirror && npm cache clean --force; && yarn cache clean;\n\nWORKDIR /opt/querybook\n\nCOPY requirements requirements/\nRUN pip install --no-cache-dir -r requirements/base.txt \\\n    && if [ \"${PRODUCTION}\" = \"true\" ] ; then \\\n    pip install --no-cache-dir -r requirements/prod.txt; \\\n    fi \\\n    && if [ -n \"$EXTRA_PIP_INSTALLS\" ] ; then \\\n    for PACKAGE in $(echo $EXTRA_PIP_INSTALLS | sed \"s/,/ /g\"); do \\\n    pip install --no-cache-dir -r requirements/${PACKAGE}; \\\n    done \\\n    fi \\\n    && pip install --no-cache-dir -r requirements/local.txt || true\n\nCOPY package.json yarn.lock ./\nRUN yarn install --pure-lockfile && yarn cache clean;\n\n# Copy everything else\nCOPY . .\n\n# Webpack if prod\nRUN if [ \"${PRODUCTION}\" = \"true\" ] ; then ./node_modules/.bin/webpack --mode=production; fi\n\n# Environment variables, override plugins path for customization\nENV QUERYBOOK_PLUGIN=/opt/querybook/plugins\nENV PYTHONPATH=/opt/querybook/querybook/server:/opt/querybook/plugins\nENV production=${PRODUCTION}\n"
}