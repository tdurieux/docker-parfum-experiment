{
  "startTime": 1674251336828,
  "endTime": 1674251337657,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 4,
        "lineEnd": 4,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 25
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 7,
        "lineEnd": 7,
        "columnStart": 4,
        "columnEnd": 175
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:3.12\n# Dependencies\nRUN echo http://dl-2.alpinelinux.org/alpine/edge/community/ >> /etc/apk/repositories\nRUN apk upgrade && apk update\nRUN apk --update --no-cache add shadow\nRUN apk --update --no-cache add nano && \\\n    apk --update --no-cache add wget bash composer git sqlite mysql && \\\n    apk --update --no-cache add php php-fpm php-xml php-curl php-ctype php-tokenizer php-sqlite3 php-pdo php-dom php-bcmath php-zip php-simplexml php-session php-pdo_sqlite php-pdo_mysql\n# Symfony\nRUN wget https://get.symfony.com/cli/installer -O - | bash && \\\n    mv /root/.symfony/bin/symfony /usr/local/bin/symfony\n# Php configuration\nRUN sed -i '/^ *memory_limit/s/=.*/= -1/' /etc/php7/php.ini\nRUN sed -i '/^ *post_max_size/s/=.*/= 10000M/' /etc/php7/php.ini\nRUN sed -i '/^ *upload_max_filesize/s/=.*/= 10000M/' /etc/php7/php.ini\nRUN sed -i '/^ *max_file_uploads/s/=.*/= 10000/' /etc/php7/php.ini\nRUN sed -i '/^ *max_execution_time/s/=.*/= 360/' /etc/php7/php.ini\nRUN sed -i '/^ *max_input_time/s/=.*/= 360/' /etc/php7/php.ini\n# Certificat & Permissions\nRUN symfony server:ca:install\nRUN mkdir -p /home/www-data\nWORKDIR /home/www-data\nRUN chown -R 1000:1000 /home/www-data\n# Project\nRUN git clone https://gitlab.marquand.pro/MarquandT/cloudfile-api /home/www-data/cloudfile-api\nWORKDIR /home/www-data/cloudfile-api\n# Installation\nRUN composer install\nRUN chmod -R 777 var\nRUN bin/console cloudfile:install\nRUN chmod -R 777 var\n# Jobs\nRUN echo \"nohup bin/robots >/dev/null 2>&1 &\" >> ~/.bashrc\nENTRYPOINT [\"symfony\", \"server:start\", \"--port=80\", \"--allow-http\"]\n\n# docker build -t cloudfile/api . && docker run -it -p '8080:80' cloudfile/api\n"
}