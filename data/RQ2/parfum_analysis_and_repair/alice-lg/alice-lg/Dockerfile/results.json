{
  "startTime": 1674248003662,
  "endTime": 1674248004593,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 13,
        "lineEnd": 13,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 27
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 16
      }
    },
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 4,
        "columnEnd": 21
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "#\n# Alice - The friendly BGP looking glass\n#\n\n# Build frontend first\nFROM node:11 AS frontend\n\n# Install dependencies\nWORKDIR /src/alice-lg/client\nADD client/package.json .\nADD client/yarn.lock .\n\nRUN npm install -g gulp@4.0.0 && npm cache clean --force;\nRUN npm install -g gulp-cli && npm cache clean --force;\nRUN yarn install && yarn cache clean;\n\n# Add frontend\nWORKDIR /src/alice-lg/client\nADD client .\n\n# Build frontend\nRUN DISABLE_LOGGING=1 NODE_ENV=production /usr/local/bin/gulp\n\n# Build the backend\nFROM golang:1.17 AS backend\n\n# Install dependencies\nWORKDIR /src/alice-lg\nADD go.mod .\nADD go.sum .\nRUN go mod download\n\nADD . .\n\n# Add client\nCOPY --from=frontend /src/alice-lg/client/build client/build\n\nWORKDIR /src/alice-lg/cmd/alice-lg\nRUN make alpine\n\nFROM alpine:latest\n\nRUN apk add --no-cache -U tzdata\n\nCOPY --from=backend /src/alice-lg/cmd/alice-lg/alice-lg-linux-amd64 /usr/bin/alice-lg\nRUN ls -lsha /usr/bin/alice-lg\n\nEXPOSE 7340:7340\nCMD [\"/usr/bin/alice-lg\"]\n"
}