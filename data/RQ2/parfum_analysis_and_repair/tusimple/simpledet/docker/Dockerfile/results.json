{
  "startTime": 1674221068353,
  "endTime": 1674221069899,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 61
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 73
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# modify from https://github.com/NVIDIA/TensorRT/blob/master/docker/ubuntu.Dockerfile\nARG CUDA_VERSION=11.1\nARG CUDNN_VERSION=8\nARG OS_VERSION=16.04\nARG NVCR_SUFFIX=\nFROM nvidia/cuda:${CUDA_VERSION}-cudnn${CUDNN_VERSION}-devel-ubuntu${OS_VERSION}${NVCR_SUFFIX}\n\nLABEL maintainer=\"Simpledet\"\n\nWORKDIR workspace\n\n# basic\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends && \\\n    apt-get install --no-install-recommends -y build-essential python-dev python3-dev && \\\n    apt-get install --no-install-recommends -y git wget sudo curl openssh-server openssh-client bash-completion command-not-found \\\n    vim htop tmux zsh rsync bzip2 zip unzip patch time make cmake locales locales-all libgtk2.0-dev libgl1-mesa-glx python3-tk \\\n    ninja-build libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev llvm libncurses5-dev libncursesw5-dev \\\n    xz-utils tk-dev libffi-dev liblzma-dev python-openssl libopenblas-dev && \\\n    rm -rf /var/lib/apt/lists/*\nRUN ln -sfv /usr/bin/python3 /usr/bin/python\n\n# zsh and fzf\nRUN wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | zsh || true && \\\n    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions && \\\n    sed -i 's/robbyrussell/fishy/' ~/.zshrc && \\\n    sed -i 's/(git)/(git zsh-autosuggestions)/' ~/.zshrc && \\\n    sed -i 's/# DISABLE_AUTO_UPDATE/DISABLE_AUTO_UPDATE/' ~/.zshrc && \\\n    git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install --all\n\n# use pyenv to manage python version\nRUN git clone https://github.com/pyenv/pyenv.git ~/.pyenv && \\\n    echo 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.zshrc && \\\n    echo 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.zshrc && \\\n    echo 'export PYTHON_CONFIGURE_OPTS=\"--enable-shared\"' >> ~/.zshrc && \\\n    echo 'if command -v pyenv 1>/dev/null 2>&1; then\\n  eval \"$(pyenv init -)\"\\nfi' >> ~/.zshrc\n\nRUN /usr/bin/zsh -c \"source ~/.zshrc && \\\n                     pyenv install 3.6.8 && \\\n                     pyenv global 3.6.8 && \\\n                     eval zsh && \\\n                     pip install -U pipenv setuptools && \\\n                     pip install ipython numpy scipy scikit-learn tqdm graphviz easydict matplotlib pyarrow pyzmq pillow cython requests pytz opencv-python tensorboard && \\\n                     rm -rf ~/.cache\"\n\n# build mxnet\nRUN /usr/bin/zsh -c \"source ~/.zshrc && \\\n                     git clone --recursive https://github.com/apache/incubator-mxnet /tmp/mxnet -b 1.6.0 && \\\n                     git clone https://github.com/Tusimple/simpledet /tmp/simpledet && \\\n                     git clone https://github.com/RogerChern/cocoapi /tmp/cocoapi && \\\n                     cp -r /tmp/simpledet/operator_cxx/* /tmp/mxnet/src/operator && \\\n                     mkdir -p /tmp/mxnet/src/coco_api && \\\n                     cp -r /tmp/cocoapi/common /tmp/mxnet/src/coco_api && \\\n                     cd /tmp/mxnet && \\\n                     echo 'USE_SIGNAL_HANDLER = 1' >> ./config.mk && \\\n                     echo 'USE_OPENCV = 0' >> ./config.mk && \\\n                     echo 'USE_MKLDNN = 0' >> ./config.mk && \\\n                     echo 'USE_BLAS = openblas' >> ./config.mk && \\\n                     echo 'USE_CUDA = 1' >> ./config.mk && \\\n                     echo 'USE_CUDA_PATH = /usr/local/cuda' >> ./config.mk && \\\n                     echo 'USE_CUDNN = 1' >> ./config.mk && \\\n                     echo 'USE_NCCL = 1' >> ./config.mk && \\\n                     echo 'USE_DIST_KVSTORE = 1' >> ./config.mk && \\\n                     echo 'CUDA_ARCH = -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_70,code=sm_70 -gencode arch=compute_80,code=sm_80 -gencode arch=compute_86,code=sm_86' >> ./config.mk && \\\n                     rm /tmp/mxnet/src/operator/nn/group_norm* && \\\n                     make -j$((`nproc`-1)) && \\\n                     cd python && \\\n                     python3 setup.py install && \\\n                     rm -rf /tmp/mxnet /tmp/simpledet /tmp/cocoapi\"\n\n# install pycocotools and mxnext\nRUN /usr/bin/zsh -c \"source ~/.zshrc && \\\n                     pip install 'git+https://github.com/RogerChern/cocoapi.git#subdirectory=PythonAPI' && \\\n                     pip install 'git+https://github.com/RogerChern/mxnext#egg=mxnext'\"\n\n# ssh\nRUN chsh -s /usr/bin/zsh root && \\\n    mkdir /var/run/sshd && \\\n    echo 'root:simpledet' | chpasswd && \\\n    sed -i '/PermitRootLogin/s/prohibit-password/yes/' /etc/ssh/sshd_config\nEXPOSE 22\n\n# env\nRUN echo \"export PATH=/usr/local/cuda/bin:\\$PATH\" >> ~/.zshrc && \\\n    echo \"export LD_LIBRARY_PATH=/usr/local/cuda/lib64:\\$LD_LIBRARY_PATH\" >> ~/.zsrhc\n\nCMD [\"/usr/sbin/sshd\", \"-D\"]\n\n"
}