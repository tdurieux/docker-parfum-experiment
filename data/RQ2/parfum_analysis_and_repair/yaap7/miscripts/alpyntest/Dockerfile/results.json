{
  "startTime": 1674253529557,
  "endTime": 1674253530703,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 8,
        "columnEnd": 62
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 8,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 8,
        "columnEnd": 53
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 8,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 58,
        "lineEnd": 58,
        "columnStart": 8,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 8,
        "columnEnd": 39
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 8,
        "columnEnd": 39
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM alpine:latest\n\nARG USER_ID\nARG GROUP_ID\n\n# Dockerfile shamelessly based on:\n# https://github.com/Docker-Hub-frolvlad/docker-alpine-python3/blob/master/Dockerfile\n\n# This hack is widely applied to avoid python printing issues in docker containers.\n# See: https://github.com/Docker-Hub-frolvlad/docker-alpine-python3/pull/13\nENV PYTHONUNBUFFERED=1\n\nADD startup.sh /etc/profile.d/startup.sh\nADD discover-ip.sh /usr/local/bin/discover-ip.sh\n\nRUN echo \"**** configuring user ****\" && \\\n        addgroup -g ${GROUP_ID} pentest && \\\n        adduser -h /home/pentest -s /bin/sh -G pentest -D -u ${USER_ID} pentest && \\\n    echo \"**** install Python ****\" && \\\n        apk add --no-cache python3 && \\\n        if [ ! -e /usr/bin/python ]; then ln -sf python3 /usr/bin/python ; fi && \\\n    echo \"**** install pip ****\" && \\\n        python3 -m ensurepip && \\\n        rm -r /usr/lib/python*/ensurepip && \\\n        pip3 install --no-cache-dir --no-cache --upgrade pip setuptools wheel && \\\n        if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \\\n    echo \"**** install git ****\" && \\\n        apk add --no-cache git && \\\n        mkdir /tools && cd /tools && \\\n    echo \"**** install csvkit ****\" && \\\n        pip install --no-cache-dir csvkit && \\\n    echo \"**** install ldapsearch-ad ****\" && \\\n        git clone https://github.com/yaap7/ldapsearch-ad && \\\n        pip install --no-cache-dir -r ldapsearch-ad/requirements.txt && \\\n        ln -s /tools/ldapsearch-ad/ldapsearch-ad.py /usr/local/bin/ && \\\n    echo \"**** install various scripts ****\" && \\\n        git clone https://github.com/yaap7/miSCripts && \\\n        ln -s /tools/miSCripts/parse-secretsdump /usr/local/bin/ && \\\n        ln -s /tools/miSCripts/tiny_scripts/ntlmsum /usr/local/bin/ && \\\n        ln -s /tools/miSCripts/tiny_scripts/grep-ip.py /usr/local/bin/ && \\\n        ln -s /tools/miSCripts/tiny_scripts/unhex-passwords.py /usr/local/bin/ && \\\n        ln -s /tools/miSCripts/clean-cme /usr/local/bin/ && \\\n    echo \"**** install other tools' dependencies ****\" && \\\n        apk add --no-cache gcc make libffi-dev libc-dev python3-dev openssl openssl-dev samba-client && \\\n    echo \"**** install impacket ****\" && \\\n        git clone https://github.com/SecureAuthCorp/impacket && \\\n        cd impacket && \\\n        pip install --no-cache-dir -r requirements.txt && \\\n        python ./setup.py install && \\\n        cd .. && \\\n    echo \"**** install pypykatz ****\" && \\\n        git clone https://github.com/skelsec/pypykatz && \\\n        cd pypykatz && \\\n        python ./setup.py install && \\\n        cd .. && \\\n    echo \"**** install lsassy ****\" && \\\n        git clone https://github.com/Hackndo/lsassy && \\\n        cd lsassy && \\\n        pip install --no-cache-dir -r requirements.txt && \\\n        python ./setup.py install && \\\n        cd .. && \\\n    echo \"**** install ntlmrecon ****\" && \\\n        git clone https://github.com/sachinkamath/ntlmrecon && \\\n        cd ntlmrecon && \\\n        pip install --no-cache-dir -r requirements.pip && \\\n        python ./setup.py install && \\\n        cd .. && \\\n    echo \"**** install Enum4LinuxPy ****\" && \\\n        git clone https://github.com/0v3rride/Enum4LinuxPy && \\\n        cd Enum4LinuxPy && \\\n        pip install --no-cache-dir -r requirements.txt && \\\n        chmod a+x Enum4LinuxPy.py && \\\n        ln -s /tools/Enum4LinuxPy/Enum4LinuxPy.py /usr/local/bin/Enum4LinuxPy.py && \\\n        ln -s /tools/Enum4LinuxPy/Enum4LinuxPy.py /usr/local/bin/enum4linuxpy.py && \\\n        cd .. && \\\n    echo \"**** install BloodHound.py ****\" && \\\n        git clone https://github.com/fox-it/BloodHound.py && \\\n        cd BloodHound.py && \\\n        python ./setup.py install && \\\n        cd .. && \\\n    echo \"**** install mpgn version of CrackMapExec. ****\" && \\\n        git clone --recursive https://github.com/mpgn/CrackMapExec && \\\n        cd CrackMapExec && \\\n        git checkout python3 && \\\n        cd cme/thirdparty/impacket && \\\n        git pull origin master && \\\n        python setup.py install && \\\n        cd ../pywerview && \\\n        git remote rm origin && \\\n        git remote add origin https://github.com/mpgn/pywerview && \\\n        git remote add upstream https://github.com/the-useless-one/pywerview && \\\n        git pull origin master && \\\n        python setup.py install && \\\n        cd ../../../ && \\\n        # import lsassy module\n        cp /tools/lsassy/cme/lsassy.py cme/modules/ && \\\n        # don't need to patch wmiexec.py since mpgn version of CME already have the patch\n        # but we need to patch the few modules using StringIO (see: https://stackoverflow.com/questions/11914472/stringio-in-python3)\n        sed -i  's_from StringIO import StringIO_from io import StringIO_' cme/modules/* && \\\n        # finally, install the whole bundle!\n        python setup.py clean --all && \\\n        python setup.py install && \\\n        cd .. && \\\n            # fix a SyntaxWarning due to python 3.8 (__init__.py:189: SyntaxWarning: \"is not\" with a literal. Did you mean \"!=\"?)\n        # the file does not exist anymore??\n        # sed -i \"s_ is not ''_ != ''_\" /usr/lib/python3.8/site-packages/netaddr-0.7.19-py3.8.egg/netaddr/strategy/__init__.py && \\\n    echo \"**** download procdump ****\" && \\\n        cd /tmp && \\\n        wget https://download.sysinternals.com/files/Procdump.zip && \\\n        unzip Procdump.zip && \\\n        rm Procdump.zip Eula.txt && \\\n    echo \"**** Finshed ****\"\n\n"
}