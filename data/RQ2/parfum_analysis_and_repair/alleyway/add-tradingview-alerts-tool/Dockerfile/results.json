{
  "startTime": 1674219207354,
  "endTime": 1674219208343,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 5,
        "columnEnd": 30
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 8,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 12,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 8,
        "columnEnd": 70
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 8,
        "columnEnd": 70
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 12,
        "lineEnd": 45,
        "columnStart": 22,
        "columnEnd": 20
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 48,
        "lineEnd": 48,
        "columnStart": 8,
        "columnEnd": 70
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# A minimal Docker image with Node and Puppeteer\n# Take care that this is deployed publicly\n# https://hub.docker.com/repository/docker/alleywayapps/atat-ci-image\n# 20220209c\n# Initially based upon:\n# https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md#running-puppeteer-in-docker\n#\n# can't use bullseye because it doesn't have libappindicator (unless installed manually)\nFROM node:16.15.1-buster-slim\n\nWORKDIR /usr/app\n\nRUN apt-get update && apt-get install --no-install-recommends -y \\\n    fonts-liberation \\\n    gconf-service \\\n    libappindicator1 \\\n    libasound2 \\\n    libatk1.0-0 \\\n    libcairo2 \\\n    libcups2 \\\n    libfontconfig1 \\\n    libgbm-dev \\\n    libgdk-pixbuf2.0-0 \\\n    libgtk-3-0 \\\n    libicu-dev \\\n    libjpeg-dev \\\n    libnspr4 \\\n    libnss3 \\\n    libpango-1.0-0 \\\n    libpangocairo-1.0-0 \\\n    libpng-dev \\\n    libx11-6 \\\n    libx11-xcb1 \\\n    libxcb1 \\\n    libxcomposite1 \\\n    libxcursor1 \\\n    libxdamage1 \\\n    libxext6 \\\n    libxfixes3 \\\n    libxi6 \\\n    libxrandr2 \\\n    libxrender1 \\\n    libxss1 \\\n    libxtst6 \\\n    xdg-utils \\\n    fonts-wqy-zenhei && rm -rf /var/lib/apt/lists/*;\n\nRUN npm install npm@8.13.0 -g \\\n     && apt-get install --no-install-recommends -y wget gnupg ca-certificates procps dumb-init \\\n     # We install Chrome to get all the OS level dependencies, but Chrome itself\n     # is not actually used as it's packaged in the node puppeteer library.\n     # Alternatively, we could could include the entire dep list ourselves\n     # (https://github.com/puppeteer/puppeteer/blob/master/docs/troubleshooting.md#chrome-headless-doesnt-launch-on-unix)\n     # but that seems too easy to get out of date. \\\n#     && wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - \\\n#     && sh -c 'echo \"deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\" >> /etc/apt/sources.list.d/google.list' \\\n#     && apt-get update \\\n#     && apt-get install -y git \\\n#     && apt-get install -y google-chrome-stable=98.0.4758.80-1 \\\n#     && apt-get install -y traceroute \\\n#     && rm -rf /var/lib/apt/lists/* \\\n#     && wget --quiet https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh -O /usr/sbin/wait-for-it.sh \\\n#     && chmod +x /usr/sbin/wait-for-it.sh \\\n# Install Puppeteer under /node_modules so it's available system-wide\n     && npm install -g puppeteer@14.4.1 --unsafe-perm=true && npm cache clean --force; && rm -rf /var/lib/apt/lists/*;\n# be sure that the version of puppeteer matches the version of google-chrome-stable, otherwise possible high CPU\n\nENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n"
}