{
  "startTime": 1674221232356,
  "endTime": 1674221233123,
  "originalSmells": [
    {
      "rule": "apkAddUseNoCache",
      "position": {
        "lineStart": 9,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 8
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Source build\nFROM alpine:latest as builder\n\n# Declare to make available\nARG BUILDPLATFORM\n\n# https://github.com/xmrig/xmrig/releases\nARG XMRIG_VERSION=\"v6.17.0\"\n\nRUN apk add --no-cache \\\n    git \\\n    make \\\n    cmake \\\n    libstdc++ \\\n    gcc \\\n    g++ \\\n    automake \\\n    libtool \\\n    autoconf \\\n    linux-headers \\\n    bash\n\nRUN git clone --branch ${XMRIG_VERSION} https://github.com/xmrig/xmrig.git\nRUN mkdir /xmrig/build\nWORKDIR /xmrig/scripts\nRUN bash ./build_deps.sh\nWORKDIR /xmrig/build\nRUN cmake .. -DXMRIG_DEPS=scripts/deps -DBUILD_STATIC=ON\nRUN make -j$(nproc)\n\n# Create runtime base minimal image for the target platform executables\nFROM --platform=$TARGETPLATFORM alpine:latest as runtime\n\nARG BUILDPLATFORM\n\nARG XMRIG_VERSION\nARG VERSION=1.0.1\nCOPY --from=builder /xmrig/build/xmrig /usr/bin/\n\n# Create a user & group\nRUN addgroup -g 1000 tari && adduser -u 1000 -g 1000 -S tari -G tari\nRUN mkdir -p /home/tari && chown tari.tari /home/tari\n# Chown all the files to the app user.\nUSER tari\nENV dockerfile_version=$VERSION\nENV dockerfile_build_arch=$BUILDPLATFORM\nENV xmrig_version=$XMRIG_VERSION\n\nRUN echo -e \"\\\n{\\\n    \\\"autosave\\\": true,\\\n    \\\"cpu\\\": true,\\\n    \\\"opencl\\\": false,\\\n    \\\"cuda\\\": false,\\\n    \\\"pools\\\": [ \\\n    { \\\"coin\\\": \\\"monero\\\", \\\"url\\\": \\\"127.0.0.1:18081\\\", \\\"user\\\": \\\"44\\\", \\\"daemon\\\": true }\\\n    ]\\\n}\\\n\" > /home/tari/.xmrig.json\n\nENTRYPOINT [ \"/usr/bin/xmrig\" ]\n"
}