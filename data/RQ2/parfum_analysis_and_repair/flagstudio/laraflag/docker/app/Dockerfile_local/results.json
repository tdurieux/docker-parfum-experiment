{
  "startTime": 1674254467252,
  "endTime": 1674254468223,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 86,
        "lineEnd": 86,
        "columnStart": 4,
        "columnEnd": 26
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 110,
        "lineEnd": 111,
        "columnStart": 53,
        "columnEnd": 22
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 97,
        "lineEnd": 105,
        "columnStart": 4,
        "columnEnd": 15
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 110,
        "lineEnd": 111,
        "columnStart": 53,
        "columnEnd": 22
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG PHP_VERSION\nFROM registry.gitlab.com/flagstudio/laraflag:php-${PHP_VERSION}-base-debian\n\n# Add a non-root user to prevent files being created with root permissions on host machine.\nARG PUID=1000\nENV PUID ${PUID}\nARG PGID=1000\nENV PGID ${PGID}\n\nRUN groupadd -g ${PGID} local && \\\n    useradd -u ${PUID} -g local -m local -G local && \\\n    usermod -p \"*\" local\n\n###########################################################################\n# Configs\n###########################################################################\n\n\nCOPY ./docker/app/laraflag.ini /usr/local/etc/php/conf.d\nCOPY ./docker/app/www.conf /usr/local/etc/php-fpm.d/www.conf\nCOPY ./docker/app/supervisord_local.conf /etc/supervisord.conf\nCOPY ./docker/app/Caddyfile /etc/Caddyfile\nCOPY ./docker/app/crontab /var/spool/cron/crontabs/root\nRUN crontab /var/spool/cron/crontabs/root\n\n###########################################################################\n# Opcache:\n###########################################################################\n\nARG PHP_FPM_INSTALL_OPCACHE=true\n\nRUN if [ ${PHP_FPM_INSTALL_OPCACHE} = true ]; then \\\n    docker-php-ext-install opcache \\\n;fi\n\n# Copy opcache configration\nCOPY ./docker/app/opcache.ini /usr/local/etc/php/conf.d/opcache.ini\n\n###########################################################################\n# xDebug:\n###########################################################################\n\nARG PHP_FPM_INSTALL_XDEBUG=false\n\nRUN if [ ${PHP_FPM_INSTALL_XDEBUG} = true ]; then \\\n#    apk add --no-cache $PHPIZE_DEPS \\\n      pecl install xdebug-2.9.8 \\\n      && docker-php-ext-enable xdebug \\\n    ;fi\n\n# Copy xdebug configuration for remote debugging\nCOPY ./docker/app/xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini\n\n###########################################################################\n# Copy code\n###########################################################################\n\n#USER www-data:www-data\n#COPY . /var/www/\n\n###########################################################################\n# Composer packages\n###########################################################################\n\n#USER root\n#\n#RUN composer install --optimize-autoloader --no-dev --no-scripts\n#RUN composer dumpautoload\n\n###########################################################################\n# NPM\n###########################################################################\n\n#RUN npm i\n#RUN npm run prod\n\n###########################################################################\n# Prepare Laravel for Prod\n###########################################################################\n\n#RUN php artisan package:discover\n#RUN php artisan storage:link\n#RUN php artisan route:cache\n\n\n# Micro Editor https://micro-editor.github.io/\nRUN curl -f https://getmic.ro | bash; \\\n        mv micro /root/micro; \\\n        echo 'alias m=\"~/micro\"' >> /root/.bashrc\n\n###########################################################################\n# Postgresql client:\n###########################################################################\n\nRUN set -eux; \\\n    apt-get update --allow-releaseinfo-change; \\\n    apt-get upgrade -y; \\\n    apt-get install -y --no-install-recommends \\\n        lsb-release \\\n        libc6 \\\n        libtinfo6 \\\n        readline-common \\\n        libreadline-dev \\\n        libpq-dev \\\n        wget \\\n        gnupg2; rm -rf /var/lib/apt/lists/*;\n\nRUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -\nRUN echo \"deb http://apt.postgresql.org/pub/repos/apt/ `lsb_release -cs`-pgdg main\" | tee  /etc/apt/sources.list.d/pgdg.list\n\nRUN apt-get update --allow-releaseinfo-change -qq && apt-get install --no-install-recommends -y \\\n  postgresql-client-12; rm -rf /var/lib/apt/lists/*;\n\n###########################################################################\n# Set workdir & run:\n###########################################################################\n\nWORKDIR /var/www\n\nCMD [\"/usr/bin/supervisord\", \"-n\", \"-c\",  \"/etc/supervisord.conf\"]\n\nEXPOSE 8080 9000\n"
}