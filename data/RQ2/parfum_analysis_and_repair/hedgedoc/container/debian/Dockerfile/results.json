{
  "startTime": 1674217599670,
  "endTime": 1674217601233,
  "originalSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 51
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 4,
        "columnEnd": 18
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 50
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 22,
        "columnEnd": 121
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 55,
        "columnEnd": 71
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 22,
        "lineEnd": 22,
        "columnStart": 22,
        "columnEnd": 38
      }
    },
    {
      "rule": "yarnCacheCleanAfterInstall",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 54,
        "columnEnd": 70
      }
    }
  ],
  "repairedDockerfile": "FROM node:16.16.0-bullseye-slim@sha256:dc275834dc95a991cfb8fb85dcfb29f41bcaeb3037d929153931582f77b00fb2 AS base\n\nFROM base AS builder\n# Build arguments to change source url, branch or tag\nARG CODIMD_REPOSITORY\nARG HEDGEDOC_REPOSITORY=https://github.com/hedgedoc/hedgedoc.git\nARG VERSION=master\nRUN if [ -n \"${CODIMD_REPOSITORY}\" ]; then echo \"CODIMD_REPOSITORY is deprecated. Please use HEDGEDOC_REPOSITORY instead\" && exit 1; fi\n\n# Clone the source and remove git repository but keep the HEAD file\nRUN apt-get update && apt-get install --no-install-recommends -y git jq ca-certificates python-is-python3 build-essential && rm -rf /var/lib/apt/lists/*;\nRUN git clone --depth 1 --branch \"$VERSION\" \"$HEDGEDOC_REPOSITORY\" /hedgedoc\nRUN git -C /hedgedoc log --pretty=format:'%ad %h %d' --abbrev-commit --date=short -1\nRUN git -C /hedgedoc rev-parse HEAD > /tmp/gitref\nRUN rm -rf /hedgedoc/.git/*\nRUN mv /tmp/gitref /hedgedoc/.git/HEAD\nRUN jq \".repository.url = \\\"${HEDGEDOC_REPOSITORY}\\\"\" /hedgedoc/package.json > /hedgedoc/package.new.json\nRUN mv /hedgedoc/package.new.json /hedgedoc/package.json\n\n# Install app dependencies and build\nWORKDIR /hedgedoc\nRUN yarn install --production=false --pure-lockfile && yarn cache clean;\nRUN yarn run build && yarn cache clean;\nRUN yarn install --production=true --pure-lockfile && yarn cache clean;\n\n\nFROM base\nARG UID=10000\nENV NODE_ENV=production\nENV UPLOADS_MODE=0700\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y gosu && \\\n    rm -r /var/lib/apt/lists/*\n\n# Create hedgedoc user\nRUN adduser --uid $UID --home /hedgedoc/ --disabled-password --system hedgedoc\n\nCOPY --chown=$UID --from=builder /hedgedoc /hedgedoc\n\n# Add configuraton files\nCOPY [\"resources/config.json\", \"/files/\"]\n\n# Healthcheck\nCOPY --chown=$UID /resources/healthcheck.mjs /hedgedoc/healthcheck.mjs\nHEALTHCHECK --interval=5s CMD node healthcheck.mjs\n\n# For backwards compatibility\nRUN ln -s /hedgedoc /codimd\n\n# Symlink configuration files\nRUN rm -f /hedgedoc/config.json\nRUN ln -s /files/config.json /hedgedoc/config.json\n\nWORKDIR /hedgedoc\nEXPOSE 3000\n\nCOPY [\"resources/docker-entrypoint.sh\", \"/usr/local/bin/docker-entrypoint.sh\"]\n\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n\nCMD [\"node\", \"app.js\"]\n"
}