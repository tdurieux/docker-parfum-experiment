diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nakkaya/emacs/devops/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nakkaya/emacs/devops/docker/Dockerfile/repaired.Dockerfile
index 821621d..4381635 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/nakkaya/emacs/devops/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/nakkaya/emacs/devops/docker/Dockerfile/repaired.Dockerfile
@@ -12,44 +12,44 @@ USER root
 RUN apt-get update && \
     apt-get upgrade -y && \
     apt-get install curl -y --no-install-recommends && \
-    curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -
+    curl -f -sL https://deb.nodesource.com/setup_16.x | sudo -E bash - && rm -rf /var/lib/apt/lists/*;
 
 RUN apt-get install \
-    # apt
+
     gnupg software-properties-common \
-    # Misc
+
     openssh-server sudo iputils-ping bash-completion \
     unzip wget htop xz-utils nq \
     graphviz postgresql-client python3-psycopg2 qutebrowser \
     offlineimap dovecot-imapd dnsutils nano iproute2 \
     direnv \
-    # Backup & Storage
+
     rsync rclone git git-annex git-annex-remote-rclone \
     apt-transport-https apache2-utils \
-    # Java
-    openjdk-11-jdk maven  \
-    # C/C++
+
+    openjdk-11-jdk maven \
+
     build-essential gcc-10 g++-10 clang clangd cmake cppcheck valgrind \
-    # Latex
+
     texlive-latex-base texlive-xetex texlive-lang-english \
     texlive-lang-european texlive-plain-generic texlive-fonts-recommended \
     pandoc latexmk \
-    # PDF Tools
+
     libpng-dev zlib1g-dev libpoppler-glib-dev \
     libpoppler-private-dev imagemagick \
-    # for cv2
+
     libgl1 libglib2.0-0 \
-    # emcas-jupyter
+
     autoconf automake libtool \
-    # For Teensy
-    # libxft2 \
-    -y --no-install-recommends
 
-RUN apt-get install ispell -y
+
+    -y --no-install-recommends && rm -rf /var/lib/apt/lists/*;
+
+RUN apt-get install --no-install-recommends ispell -y && rm -rf /var/lib/apt/lists/*;
 
 # Node
 #
-RUN apt-get install -y nodejs
+RUN apt-get install --no-install-recommends -y nodejs && rm -rf /var/lib/apt/lists/*;
 
 # Install Terraform
 #
@@ -71,29 +71,29 @@ RUN ARCH="$(dpkg --print-architecture)"; \
 #
 RUN ARCH="$(dpkg --print-architecture)"; \
     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | \
-    gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
+    gpg --batch --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
     echo \
     "deb [arch=${ARCH} signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
     $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null && \
     apt-get update && \
     apt-get install docker-ce-cli -y --no-install-recommends && \
-    pip install docker-compose && \
+    pip install --no-cache-dir docker-compose && \
     touch /var/run/docker.sock && \
     groupadd docker && \
     chown root:docker /var/run/docker.sock && \
-    usermod -a -G docker $USER
+    usermod -a -G docker $USER && rm -rf /var/lib/apt/lists/*;
 
 # Install Syncthing
 #
 RUN wget -q https://syncthing.net/release-key.txt -O- | apt-key add - && \
     add-apt-repository "deb https://apt.syncthing.net/ syncthing stable" && \
     apt-get update && \
-    apt-get install syncthing -y --no-install-recommends
+    apt-get install syncthing -y --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 # Configure Python
 #
 
-RUN pip install \
+RUN pip install --no-cache-dir \
     markupsafe==2.0.1 \
     invoke \
     ansible \
@@ -105,12 +105,11 @@ RUN pip install \
 
 RUN ARCH="$(dpkg --print-architecture)"; \
     case "$ARCH" in \
-            amd64) pip install tensorflow-gpu tensorflow-datasets torch torchvision gym segmentation-models albumentations ;; \
-            #arm64) apt-get install python3-h5py -y ;; \
-    esac;
+            amd64 pip install --no-cache-dir tensorflow-gpu tensorflow-datasets torch torchvision gym segmentation-models albumentations;; \
+          esac;
+
+RUN pip install --no-cache-dir \
 
-RUN pip install \
-    # ML
     numpy \
     numexpr \
     pandas \
@@ -122,21 +121,21 @@ RUN pip install \
     boto3 \
     nibabel \
     pydicom \
-    # Trading
+
     pandas_ta \
     yfinance \
     python-binance \
     py3cw \
-    # Graphing
+
     matplotlib \
     plotly \
-    # Misc
+
     pygments \
     nbstripout \
     click
 
-RUN pip install numpy --upgrade && \
-    pip install jinja2 --upgrade
+RUN pip install --no-cache-dir numpy --upgrade && \
+    pip install --no-cache-dir jinja2 --upgrade
 
 # Install Jupyter
 #
@@ -153,7 +152,7 @@ RUN wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein
     chmod 755 /usr/bin/lein && \
     /bin/bash -c "$(curl -fsSL https://download.clojure.org/install/linux-install-1.11.1.1113.sh)" && \
     /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/clojure-lsp/clojure-lsp/master/install)" && \
-    /bin/bash -c "$(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)"
+    /bin/bash -c "$( curl -f -s https://raw.githubusercontent.com/babashka/babashka/master/install)" -f
 
 # Install AWS CLI
 #
@@ -163,7 +162,7 @@ RUN ARCH="$(dpkg --print-architecture)"; \
             arm64) URL='https://awscli.amazonaws.com/awscli-exe-linux-aarch64.zip' ;; \
     esac; \
     cd /opt/ && \
-    curl -s "${URL}" -o "awscliv2.zip" && \
+    curl -f -s "${URL}" -o "awscliv2.zip" && \
     unzip -q awscliv2.zip && \
     ./aws/install && \
     rm awscliv2.zip
@@ -171,12 +170,12 @@ RUN ARCH="$(dpkg --print-architecture)"; \
 # Install Google Cloud CLI
 #
 RUN ARCH="$(dpkg --print-architecture)"; \
-    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \
+    curl -f https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - && \
     echo \
     "deb [arch=${ARCH} signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt \
     cloud-sdk main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
     apt-get update && \
-    apt-get install google-cloud-sdk -y --no-install-recommends
+    apt-get install google-cloud-sdk -y --no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 
 # Arduino