{
  "startTime": 1674252404044,
  "endTime": 1674252404874,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 36,
        "lineEnd": 36,
        "columnStart": 14,
        "columnEnd": 25
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 33,
        "lineEnd": 33,
        "columnStart": 4,
        "columnEnd": 24
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 81
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 107
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 81
      }
    }
  ],
  "repairedDockerfile": "FROM debian:buster\n\nARG DEBIAN_FRONTEND=noninteractive\nARG WOPITS_HOST\nARG WOPITS_DB_NAME\nARG WOPITS_DB_USER\nARG WOPITS_DB_PASSWORD\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -yq apache2 php php-dev libevent-dev php-pear php-gettext php-mysql php-imagick php-zip && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install -yq --no-install-recommends cron sudo locales re2c rsync wget && rm -rf /var/lib/apt/lists/*;\n\nCOPY docker/app/files/etc/security/limits.d/local.conf /etc/security/limits.d/\nCOPY docker/app/files/etc/sysctl.d/local.conf /etc/sysctl.d/\n\nCOPY docker/app/files/etc/apache2/localhost.* /etc/apache2/\nCOPY docker/app/files/etc/apache2/sites-available/wopits.localhost.conf /etc/apache2/sites-available/\n\nCOPY docker/app/files/etc/php/7.3/apache2/php.ini /etc/php/7.3/apache2/\nCOPY docker/app/files/etc/php/7.3/cli/php.ini /etc/php/7.3/cli/\n\nCOPY docker/app/files/locale.gen /etc/\n\nRUN locale-gen && \\\n    \\\n    mkdir -p /var/log/php && \\\n    useradd --gid www-data --system --create-home --no-log-init wopits && \\\n    \\\n    chown root:root /etc/apache2/localhost.* && \\\n    chmod 600 /etc/apache2/*.key && \\\n    \\\n    a2enmod -q ssl rewrite headers proxy_wstunnel && a2ensite -q wopits.localhost && \\\n    wget -q https://github.com/swoole/swoole-src/archive/refs/tags/v4.7.1.tar.gz && \\\n    tar xf v4.7.1.tar.gz && rm v4.7.1.tar.gz\n\nWORKDIR swoole-src-4.7.1\nRUN phpize && ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" && make && make install && \\\n\n    pecl channel-update pecl.php.net && \\\n    pecl install ev && \\\n    pecl install event && \\\n\n    mkdir -p /var/log/wopits && mkdir -p /var/www/wopits.localhost && \\\n    chown wopits /var/log/wopits /var/www/wopits.localhost\n\nCOPY --chown=wopits:crontab docker/app/files/crontab /var/spool/cron/crontabs/wopits\nRUN chmod 600 /var/spool/cron/crontabs/wopits\n\nCOPY . /home/wopits/\nWORKDIR /home/wopits\nCOPY docker/app/files/config-deploy.php app/deploy/config.php\n\nRUN perl -pi -e 's/WOPITS_HOST/'${WOPITS_HOST}'/g' app/deploy/config.php && \\\n    perl -pi -e 's/WOPITS_DB_NAME/'${WOPITS_DB_NAME}'/g' app/deploy/config.php && \\\n    perl -pi -e 's/WOPITS_DB_USER/'${WOPITS_DB_USER}'/g' app/deploy/config.php && \\\n    perl -pi -e 's/WOPITS_DB_PASSWORD/'${WOPITS_DB_PASSWORD}'/g' app/deploy/config.php && \\\n    \\\n    mkdir -p /var/www/wopits.localhost/data/walls && \\\n    mkdir -p /var/www/wopits.localhost/data/users && \\\n    chown -R www-data:www-data /var/www/wopits.localhost/data && \\\n    chmod 2770 /var/www/wopits.localhost/data\n\n# Overkill: no need to minify for this experimental docker\n##RUN apt-get install -y --no-install-recommends default-jre\n##RUN wget -q https://repo1.maven.org/maven2/com/google/javascript/closure-compiler/v20210505/closure-compiler-v20210505.jar -O app/deploy/bin/closure-compiler.jar && \\\n##    wget -q https://github.com/google/closure-stylesheets/releases/download/v1.5.0/closure-stylesheets.jar -O app/deploy/bin/closure-stylesheets.jar && \\\n##    wget -q https://storage.googleapis.com/google-code-archive-downloads/v2/code.google.com/htmlcompressor/htmlcompressor-1.5.3.jar -O app/deploy/bin/htmlcompressor.jar\n\nCOPY docker/app/files/docker-entrypoint.sh /usr/local/bin/\nENTRYPOINT [\"/usr/local/bin/docker-entrypoint.sh\"]\n"
}