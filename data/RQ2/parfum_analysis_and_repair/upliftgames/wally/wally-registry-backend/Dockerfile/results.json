{
  "startTime": 1674252538811,
  "endTime": 1674252539643,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 60
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 53
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 6,
        "lineEnd": 6,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 30,
        "lineEnd": 30,
        "columnStart": 4,
        "columnEnd": 77
      }
    }
  ],
  "repairedDockerfile": "FROM rust:1-slim-buster AS build\nWORKDIR /usr/app\n\n# Debian Slim doesn't install certificates by default, but we kinda want those.\n# pkg-config is used by some dependencies to locate system libraries.\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y ca-certificates libssl-dev pkg-config && rm -rf /var/lib/apt/lists/*\n\n# Initialize a blank project with just our dependencies to get Docker to\n# cache them. Subsequent rebuilds of the container will be able to take\n# advantage of incremental compilation, which makes development much faster.\n#\n# We must set the USER environment variable here or else cargo init will fail.\nRUN USER=root cargo new wally-registry-backend\nCOPY wally-registry-backend/Cargo.toml /usr/app/wally-registry-backend/\nCOPY Cargo.toml Cargo.lock /usr/app/\nCOPY src/ /usr/app/src/\n\nRUN cargo build --package wally-registry-backend --release\n\n# Copy actual application source in and force a modified timestamp so that\n# Cargo will rebuild.\nCOPY ./wally-registry-backend ./wally-registry-backend/\nRUN touch wally-registry-backend/src/main.rs\nRUN cargo build --package wally-registry-backend --release\n\nFROM debian:buster-slim\n\n# Install the same SSL packages as in our build image.\nRUN apt-get update\nRUN apt-get install --no-install-recommends -y git ca-certificates libssl-dev && rm -rf /var/lib/apt/lists/*\n\nCOPY --chown=1000 --from=build /usr/app/target/release/wally-registry-backend \"/app/launch\"\nCOPY --chown=1000 --from=build /usr/app/wally-registry-backend/Rocket.toml \"/app/Rocket.toml\"\n\nRUN useradd -ms /bin/bash 1000\nUSER 1000\n\nEXPOSE 8000\nWORKDIR /app\nCMD [\"./launch\"]\n"
}