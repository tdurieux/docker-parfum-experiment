{
  "startTime": 1674255991174,
  "endTime": 1674255991750,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 20,
        "lineEnd": 20,
        "columnStart": 4,
        "columnEnd": 23
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 111
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 37
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM centos:7\nENV container docker\n\n#cleanup to enable systemd\nRUN (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == \\\n    systemd-tmpfiles-setup.service ] || rm -f $i; done); \\\n    rm -f /lib/systemd/system/multi-user.target.wants/*;\\\n    rm -f /etc/systemd/system/*.wants/*;\\\n    rm -f /lib/systemd/system/local-fs.target.wants/*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*udev*; \\\n    rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \\\n    rm -f /lib/systemd/system/basic.target.wants/*;\\\n    rm -f /lib/systemd/system/anaconda.target.wants/*;\n\n#Install build environment dependencies\n# NOTE: We point at the perfSONAR repo to grab nuttcp, owping and other tools.\nRUN yum update -y && \\\n    yum install -y make spectool git which m4 epel-release rsyslog gcc python3-pip && \\\n    yum install -y http://linux.mirrors.es.net/perfsonar/el7/x86_64/4/packages/perfSONAR-repo-0.10-1.noarch.rpm && \\\n    yum install -y postgresql95-devel && \\\n    pip3 install --no-cache-dir web.py && \\\n    mkdir -p /root/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS} && \\\n    echo '%_topdir %(echo $HOME)/rpmbuild' > /root/.rpmmacros && \\\n    yum clean all && rm -rf /var/cache/yum\n\n# Copy code to /app\n# This would be a shared volume but can get permissions errors with read-only __pycache__ directories\nCOPY . /app\n\n#shared volumes\nVOLUME /sys/fs/cgroup\n\n#Keep container running\n#CMD tail -f /dev/null\nCMD [\"/usr/sbin/init\"]\n"
}