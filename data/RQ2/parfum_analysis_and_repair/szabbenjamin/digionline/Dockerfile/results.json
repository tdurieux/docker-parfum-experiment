{
  "startTime": 1674219803710,
  "endTime": 1674219804840,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 17,
        "lineEnd": 17,
        "columnStart": 4,
        "columnEnd": 33
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 19,
        "lineEnd": 19,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:10.15.3-alpine\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Bundle app source\nCOPY . .\n\n# Create config.json from the sample\nRUN cp config.sample.json config.json && \\\n# Replace localhost domain with environment variable DOMAIN\n    sed -i \"s/domain: 'localhost'/domain: process.env.DOMAIN/\" config.json && \\\n# Replace empty email with environment variable EMAIL\n    sed -i \"s/email: ''/email: process.env.EMAIL/\" config.json && \\\n# Replace empty email with environment variable PASSWORD\n    sed -i \"s/password: ''/password: process.env.PASSWORD/\" config.json && \\\n# Install production only dependencies\n    npm install --only=production && \\\n# Install typescript for conversion\n    npm install -g typescript && \\\n# Convert typescript source to javascript\n    npx tsc main.ts && \\\n# Remove typescript\n    npm uninstall -g typescript && \\\n# Create epg.xml\n    touch epg.xml && npm cache clean --force;\n\nEXPOSE 9999\nCMD [ \"npm\", \"start\" ]\n\n# Build docker image:\n#   sudo docker build -t digionline https://github.com/szabbenjamin/digionline.git\n# Create and run docker container:\n#   sudo docker run -d -p 9999:9999 --restart unless-stopped --env DOMAIN=valami.local --env EMAIL=a@b.hu --env PASSWORD=jelszo --name container-digionline digionline\n# Kodi PVR IPTV Simple Client addon\n#   TV channel list: http://localhost:9999/channels_IPTV.m3u8\n#   TV EPG source: http://localhost:9999/epg.xml\n"
}