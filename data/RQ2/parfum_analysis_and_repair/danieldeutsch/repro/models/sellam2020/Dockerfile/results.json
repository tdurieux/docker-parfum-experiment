{
  "startTime": 1674254457813,
  "endTime": 1674254459103,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 5,
        "lineEnd": 5,
        "columnStart": 18,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM tensorflow/tensorflow:2.2.2-gpu\n\nWORKDIR /app\n\n# Download utils\nRUN apt update && apt install --no-install-recommends -y wget git && rm -rf /var/lib/apt/lists/*;\n\n# Download the pretrained models\nRUN pip3 install --no-cache-dir gdown\nCOPY scripts/download-models.sh download-models.sh\n\nARG TINY_128\nARG TINY_512\nARG BASE_128\nARG BASE_512\nARG LARGE_128\nARG LARGE_512\nARG BLEURT_20\nARG BLEURT_20_D12\nARG BLEURT_20_D6\nARG BLEURT_20_D3\n\nRUN sh download-models.sh\n\n# Install BLEURT dependencies. Their setup.py does not fix versions,\n# which resulted in installing a newer tensorflow version which\n# was incompatible with the version of cuda installed by the tensorflow/tensorflow:2.2.2-gpu\n# image. Therefore, we directly install the dependencies with specific versions\nRUN pip install --no-cache-dir \\\n    tensorflow==2.2.2 \\\n    pandas==1.1.5 \\\n    scipy==1.5.4 \\\n    tf-slim==1.1.0 \\\n    sentencepiece==0.1.96\n\n# Install BLEURT\nRUN git clone https://github.com/google-research/bleurt && \\\n    cd bleurt && \\\n    git checkout c6f2375c7c178e1480840cf27cb9e2af851394f9 && \\\n    pip install --no-cache-dir .\n"
}