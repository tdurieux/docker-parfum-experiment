{
  "startTime": 1674254750307,
  "endTime": 1674254751005,
  "originalSmells": [
    {
      "rule": "wgetUseHttpsUrl",
      "position": {
        "lineStart": 18,
        "lineEnd": 18,
        "columnStart": 4,
        "columnEnd": 78
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 41
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 104
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 41
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM pure/python:3.7-cuda10.0-base\n\nARG TRANSFORMERABS_CNNDM\nARG BERTSUMEXT_CNNDM\nARG BERTSUMEXTABS_CNNDM\nARG BERTSUMEXTABS_XSUM\n\nWORKDIR /app\n\n# Install OpenJDK-8, with a workaround via https://linuxize.com/post/install-java-on-debian-10/\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y apt-transport-https ca-certificates wget dirmngr gnupg software-properties-common && \\\n    wget -qO - https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public | apt-key add - && \\\n    add-apt-repository -y https://adoptopenjdk.jfrog.io/adoptopenjdk/deb/ && \\\n    apt update && \\\n    apt install --no-install-recommends -y adoptopenjdk-8-hotspot && rm -rf /var/lib/apt/lists/*;\n\n# Download CoreNLP, required for preprocessing\nRUN wget https://nlp.stanford.edu/software/stanford-corenlp-full-2017-06-09.zip\nRUN unzip stanford-corenlp-full-2017-06-09.zip\nRUN rm stanford-corenlp-full-2017-06-09.zip\nENV CLASSPATH=stanford-corenlp-full-2017-06-09/stanford-corenlp-3.8.0.jar\n\n# Download the pretrained models\nRUN pip3 install --no-cache-dir gdown\nCOPY scripts/download-models.sh download-models.sh\nRUN sh download-models.sh\n\n# Clone the code, switch to the latest tested commit \"25c24abd236f4aa896660e1e6dc509d4f3aec372\"\n# on the \"dev\" branch with the code that can process raw text\nRUN git clone https://github.com/nlpyang/PreSumm\nRUN cd PreSumm && git checkout 25c24abd236f4aa896660e1e6dc509d4f3aec372\n\n# Setup the python environment. We can't directly pip install the requirements from PreSumm\n# because torch==1.1.0 cannot be directly installed with pip anymore. It has to be installed via the whl file.\n# First install torch, then install the other dependencies\nRUN pip3 install --no-cache-dir wheel\nRUN wget https://download.pytorch.org/whl/cu100/torch-1.1.0-cp37-cp37m-linux_x86_64.whl\nRUN pip3 install --no-cache-dir torch-1.1.0-cp37-cp37m-linux_x86_64.whl\nRUN rm torch-1.1.0-cp37-cp37m-linux_x86_64.whl\n\n# Install other dependencies based on the requirements.txt\nRUN pip3 install --no-cache-dir \\\n    multiprocess==0.70.9 \\\n    numpy==1.17.2 \\\n    pyrouge==0.1.3 \\\n    pytorch-transformers==1.2.0 \\\n    tensorboardX==1.9\n\n# Copy over the script to preprocess the data\nCOPY src/preprocess.py preprocess.py\n\n# Run some code which loads the BERT model so it already available in the cache.\n# This is an optimization.\nCOPY src/warmup.py warmup.py\nRUN python3 warmup.py\n"
}