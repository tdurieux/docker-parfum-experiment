{
  "startTime": 1674248172217,
  "endTime": 1674248174055,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 75,
        "lineEnd": 75,
        "columnStart": 18,
        "columnEnd": 113
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 114
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 90,
        "lineEnd": 91,
        "columnStart": 4,
        "columnEnd": 74
      }
    },
    {
      "rule": "yumInstallRmVarCacheYum",
      "position": {
        "lineStart": 50,
        "lineEnd": 50,
        "columnStart": 8,
        "columnEnd": 33
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 8,
        "columnEnd": 61
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NODE_VERSION=14\nARG GITHUB_ACCOUNT=ging\nARG GITHUB_REPOSITORY=fiware-idm\nARG DOWNLOAD=latest\nARG SOURCE_BRANCH=master\nARG HEADLESS=false\n\n# Default Builder, distro and distroless build version\nARG BUILDER=node:${NODE_VERSION}\nARG DISTRO=node:${NODE_VERSION}-slim\nARG DISTROLESS=gcr.io/distroless/nodejs:${NODE_VERSION}\nARG PACKAGE_MANAGER=apt\nARG USER=node\n\n########################################################################################\n#\n# This build stage retrieves the source code from GitHub. The default download is the\n# latest tip of the master of the named repository on GitHub.\n#\n# To obtain the latest stable release run this Docker file with the parameters:\n# --no-cache --build-arg DOWNLOAD=stable\n#\n# To obtain any specific version of a release run this Docker file with the parameters:\n# --no-cache --build-arg DOWNLOAD=1.7.0\n#\n########################################################################################\n\nFROM ${BUILDER} as builder\nARG GITHUB_ACCOUNT\nARG GITHUB_REPOSITORY\nARG DOWNLOAD\nARG SOURCE_BRANCH\nARG PACKAGE_MANAGER\n\n# hadolint ignore=DL3002\nUSER root\n\nENV PYTHONUNBUFFERED=1\n\n# Ensure that the chosen package manger is supported by this Dockerfile\n# also ensure that unzip is installed prior to downloading sources\n\n# hadolint ignore=SC2039\nRUN \\\n    if [ \"${PACKAGE_MANAGER}\" = \"apt\"  ]; then \\\n        echo -e \"\\033[0;34mINFO: Using default \\\"${PACKAGE_MANAGER}\\\".\\033[0m\"; \\\n        apt-get update; \\\n        apt-get install -y --no-install-recommends unzip git; rm -rf /var/lib/apt/lists/*; \\\n    elif [ \"${PACKAGE_MANAGER}\" = \"yum\"  ]; then \\\n        echo -e \"\\033[0;33mWARNING: Overriding default package manager. Using \\\"${PACKAGE_MANAGER}\\\" .\\033[0m\"; \\\n        yum install -y unzip git; rm -rf /var/cache/yum \\\n        yum clean all; \\\n    elif [ \"${PACKAGE_MANAGER}\" = \"apk\"  ]; then \\\n        echo -e \"\\033[0;33mWARNING: Overriding default package manager. Using \\\"${PACKAGE_MANAGER}\\\" .\\033[0m\"; \\\n        apk --update --no-cache add curl git make gcc g++ ca-certificates openssl unzip; \\\n    else \\\n        echo -e \"\\033[0;31mERROR: Package Manager \\\"${PACKAGE_MANAGER}\\\" not supported.\\033[0m\"; \\\n        exit 1; \\\n    fi\n\n# As an Alternative for local development, just copy this Dockerfile into file the root of\n# the repository and replace the whole RUN statement below by the following COPY statement\n# in your local source using :\n#\n# COPY . /opt/fiware-idm\n#\n\n# hadolint ignore=DL3008\nRUN \\\n    if [ \"${DOWNLOAD}\" = \"latest\" ] ; \\\n    then \\\n        RELEASE=\"${SOURCE_BRANCH}\"; \\\n        echo \"INFO: Building Latest Development from ${SOURCE_BRANCH} branch.\"; \\\n    elif [ \"${DOWNLOAD}\" = \"stable\" ]; \\\n    then \\\n        RELEASE=$( curl -f -s https://api.github.com/repos/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/releases/latest | grep 'tag_name' | cut -d\\\" -f4) ; \\\n        echo \"INFO: Building Latest Stable Release: ${RELEASE}\"; \\\n    else \\\n        RELEASE=\"${DOWNLOAD}\"; \\\n        echo \"INFO: Building Release: ${RELEASE}\"; \\\n    fi && \\\n    RELEASE_CONCAT=$(echo \"${RELEASE}\" | tr / -); \\\n    curl -f -s -L https://github.com/\"${GITHUB_ACCOUNT}\"/\"${GITHUB_REPOSITORY}\"/archive/\"${RELEASE}\".zip > source.zip && \\\n    unzip source.zip -x \"*/test/**\" \"*/doc/**\" \"*/doc.ja/**\" \"*/extras/**\" && \\\n    rm source.zip && \\\n    mv \"${GITHUB_REPOSITORY}-${RELEASE_CONCAT}\" /opt/fiware-idm\n\nWORKDIR /opt/fiware-idm\n\nRUN \\\n    CXXFLAGS=\"--std=c++14\" \\\n    npm install --only=prod --no-package-lock --no-optional  --unsafe-perm && \\\n    rm -rf /root/.npm/cache/* && \\\n    mkdir -p certs/applications && \\\n    chmod -R 777 certs && \\\n    openssl genrsa -out idm-2018-key.pem 2048 && \\\n    openssl req -new -sha256 -key idm-2018-key.pem -out idm-2018-csr.pem -batch && \\\n    openssl x509 -req -in idm-2018-csr.pem -signkey idm-2018-key.pem -out idm-2018-cert.pem && \\\n    mv idm-2018-key.pem idm-2018-cert.pem idm-2018-csr.pem certs/ && \\\n    chmod 755 certs/idm-2018-key.pem && \\\n    chmod -R 777 public && npm cache clean --force;\n\n########################################################################################\n#\n# This build stage creates an anonymous user to be used with the distroless build\n# as defined below.\n#\n########################################################################################\nFROM ${BUILDER} AS anon-user\nRUN sed -i -r \"/^(root|nobody)/!d\" /etc/passwd /etc/shadow /etc/group \\\n    && sed -i -r 's#^(.*):[^:]*$#\\1:/sbin/nologin#' /etc/passwd\n\n\n########################################################################################\n#\n# This build stage creates a distroless build for production.\n#\n# IMPORTANT: For production environments use Docker Secrets to protect values of the\n# sensitive ENV variables defined below, by adding _FILE to the name of the relevant\n# variable.\n#\n#  - IDM_SESSION_SECRET\n#  - IDM_ENCRYPTION_KEY\n#  - IDM_DB_PASS\n#  - IDM_DB_USER\n#  - IDM_ADMIN_ID\n#  - IDM_ADMIN_USER\n#  - IDM_ADMIN_EMAIL\n#  - IDM_ADMIN_PASS\n#  - IDM_EX_AUTH_DB_USER\n#  - IDM_EX_AUTH_DB_PASS\n#  - IDM_DB_HOST\n#\n########################################################################################\n\nFROM ${DISTROLESS} AS distroless\nARG GITHUB_ACCOUNT\nARG GITHUB_REPOSITORY\nARG NODE_VERSION\nARG HEADLESS\n\nLABEL \"maintainer\"=\"FIWARE Identity Manager Team. DIT-UPM\"\nLABEL \"description\"=\"OAuth2-based authentication of users and devices, user profile management, Single Sign-On (SSO) and Identity Federation across multiple administration domains.\"\nLABEL \"name\"=\"keyrock\"\nLABEL \"summary\"=\"Keyrock Identity Manager - Distroless\"\n\nLABEL \"org.opencontainers.image.authors\"=\"\"\nLABEL \"org.opencontainers.image.documentation\"=\"https://fiware-idm.readthedocs.io/\"\nLABEL \"org.opencontainers.image.vendor\"=\"Universidad Polit√©cnica de Madrid.\"\nLABEL \"org.opencontainers.image.licenses\"=\"MIT\"\nLABEL \"org.opencontainers.image.title\"=\"Identity Manager - Keyrock- Distroless\"\nLABEL \"org.opencontainers.image.description\"=\"OAuth2-based authentication of users and devices, user profile management, Single Sign-On (SSO) and Identity Federation across multiple administration domains.\"\nLABEL \"org.opencontainers.image.source\"=https://github.com/${GITHUB_ACCOUNT}/${GITHUB_REPOSITORY}\nLABEL \"org.nodejs.version\"=${NODE_VERSION}\n\nWORKDIR /opt/fiware-idm\nCOPY --from=builder /opt/fiware-idm .\nCOPY --from=anon-user /etc/passwd /etc/shadow /etc/group /etc/\n\nENV IDM_HOST=\"http://localhost:3000\" \\\n    IDM_PORT=\"3000\" \\\n    IDM_PDP_LEVEL=\"basic\" \\\n    IDM_DB_HOST=\"localhost\" \\\n    IDM_DB_NAME=\"idm\" \\\n    IDM_DB_DIALECT=\"mysql\" \\\n    IDM_DB_SEED=\"false\" \\\n    IDM_DB_MIGRATE=\"false\" \\\n    IDM_EMAIL_HOST=\"localhost\" \\\n    IDM_EMAIL_PORT=\"25\" \\\n    IDM_EMAIL_ADDRESS=\"noreply@localhost\"\nENV IDM_HEADLESS=$HEADLESS\n\nUSER nobody\nENV NODE_ENV=production\n# Ports used by application\nEXPOSE ${IDM_PORT:-3000}\nCMD [\"./bin/www\"]\nHEALTHCHECK  --interval=30s --timeout=3s --start-period=10s \\\n  CMD [\"/nodejs/bin/node\", \"./bin/healthcheck\"]\n\n\n########################################################################################\n#\n# This build stage creates a build for production.\n#\n# IMPORTANT: For production environments use Docker Secrets to protect values of the\n# sensitive ENV variables defined below, by adding _FILE to the name of the relevant\n# variable.\n#\n#  - IDM_SESSION_SECRET\n#  - IDM_ENCRYPTION_KEY\n#  - IDM_DB_PASS\n#  - IDM_DB_USER\n#  - IDM_ADMIN_ID\n#  - IDM_ADMIN_USER\n#  - IDM_ADMIN_EMAIL\n#  - IDM_ADMIN_PASS\n#  - IDM_EX_AUTH_DB_USER\n#  - IDM_EX_AUTH_DB_PASS\n#  - IDM_DB_HOST\n#\n########################################################################################\n\nFROM ${DISTRO} AS distro\nARG GITHUB_ACCOUNT\nARG GITHUB_REPOSITORY\nARG NODE_VERSION\nARG HEADLESS\n\nWORKDIR /opt/fiware-idm\nCOPY --from=builder /opt/fiware-idm .\nCOPY --from=builder /opt/fiware-idm/LICENSE /licenses/LICENSE\n\nENV IDM_HOST=\"http://localhost:3000\" \\\n    IDM_PORT=\"3000\" \\\n    IDM_PDP_LEVEL=\"basic\" \\\n    IDM_DB_HOST=\"localhost\" \\\n    IDM_DB_NAME=\"idm\" \\\n    IDM_DB_DIALECT=\"mysql\" \\\n    IDM_DB_MIGRATE=\"false\" \\\n    IDM_DB_SEED=\"true\" \\\n    IDM_EMAIL_HOST=\"localhost\" \\\n    IDM_EMAIL_PORT=\"25\" \\\n    IDM_EMAIL_ADDRESS=\"noreply@localhost\"\nENV IDM_HEADLESS=$HEADLESS\n\n# hadolint ignore=DL3018\nRUN \\\n    if [ \"${PACKAGE_MANAGER}\" = \"apk\"  ]; then \\\n        apk add --no-cache ca-certificates bash openssl; \\\n    fi\n\nLABEL \"maintainer\"=\"FIWARE Identity Manager Team. DIT-UPM\"\nLABEL \"description\"=\"OAuth2-based authentication of users and devices, user profile management, Single Sign-On (SSO) and Identity Federation across multiple administration domains.\"\nLABEL \"name\"=\"keyrock\"\nLABEL \"summary\"=\"Keyrock Identity Manager\"\n\nLABEL \"org.opencontainers.image.authors\"=\"\"\nLABEL \"org.opencontainers.image.documentation\"=\"https://fiware-idm.readthedocs.io/\"\nLABEL \"org.opencontainers.image.vendor\"=\"Universidad Polit√©cnica de Madrid.\"\nLABEL \"org.opencontainers.image.licenses\"=\"MIT\"\nLABEL \"org.opencontainers.image.title\"=\"Keyrock Identity Manager\"\nLABEL \"org.opencontainers.image.description\"=\"OAuth2-based authentication of users and devices, user profile management, Single Sign-On (SSO) and Identity Federation across multiple administration domains.\"\nLABEL \"org.opencontainers.image.source\"=https://github.com/${GITHUB_ACCOUNT}/${GITHUB_REPOSITORY}\nLABEL \"org.nodejs.version\"=${NODE_VERSION}\n\n# Node by default, use 406 for Alpine, 1001 for UBI\nUSER ${USER}\nENV NODE_ENV=production\n# Ports used by application\nEXPOSE ${IDM_PORT:-3000}\nCMD [\"npm\", \"start\"]\nHEALTHCHECK  --interval=30s --timeout=3s --start-period=60s \\\n  CMD [\"npm\", \"run\", \"healthcheck\"]\n\n#\n# ALL ENVIRONMENT VARIABLES\n#\n# ENV IDM_HOST \"http://localhost\"\n# ENV IDM_PORT \"3000\"\n# ENV IDM_HEADLESS \"false\"\n# ENV IDM_DEBUG \"true\"\n\n# ENV IDM_HTTPS_ENABLED true\n# ENV IDM_HTTPS_PORT \"443\"\n\n# ENV IDM_SESSION_SECRET \"nodejs_idm\"\n# ENV IDM_SESSION_DURATION \"3600000\"\n\n# ENV IDM_OAUTH_EMPTY_STATE false\n# ENV IDM_OAUTH_AUTH_LIFETIME \"300\"\n# ENV IDM_OAUTH_ACC_LIFETIME \"3600\"\n# ENV IDM_OAUTH_ASK_AUTH true\n# ENV IDM_OAUTH_REFR_LIFETIME \"1209600\"\n# ENV IDM_OAUTH_UNIQUE_URL false\n# IDM_OAUTH_NOT_REQUIRE_CLIENT_AUTH_GRANT_TYPE undefined\n# ENV IDM_API_LIFETIME \"3600\"\n\n# ENV IDM_ENCRYPTION_KEY \"nodejs_idm\"\n\n# ENV IDM_CORS_ENABLED \"false\"\n# ENV IDM_CORS_ORIGIN \"*\"\n# ENV IDM_CORS_METHODS 'GET,HEAD,PUT,PATCH,POST,DELETE'\n# ENV IDM_CORS_ALLOWED_HEADERS undefined\n# ENV IDM_CORS_EXPOSED_HEADERS undefined\n# ENV IDM_CORS_CREDENTIALS undefined\n# ENV IDM_CORS_MAS_AGE undefined\n# ENV IDM_CORS_PREFLIGHT false\n# ENV IDM_CORS_OPTIONS_STATUS 204\n\n# ENV IDM_ENABLE_2FA false\n\n# ENV IDM_PDP_LEVEL \"basic\"\n# ENV IDM_AUTHZFORCE_ENABLED false\n# ENV IDM_AUTHZFORCE_HOST \"localhost\"\n# ENV IDM_AUTHZFORCE_PORT\" 8080\"\n\n# ENV IDM_USAGE_CONTROL_ENABLED false\n# ENV IDM_PTP_HOST localhost\n# ENV IDM_PTP_PORT 8081\n\n# ENV IDM_DB_HOST \"localhost\"\n# ENV IDM_DB_PASS \"idm\"\n# ENV IDM_DB_USER \"root\"\n# ENV IDM_DB_NAME \"idm\"\n# ENV IDM_DB_DIALECT \"mysql\"\n# ENV IDM_DB_PORT \"3306\"\n\n# ENV IDM_EX_AUTH_ENABLED false\n# ENV IDM_EX_AUTH_ID_PREFIX \"external_\"\n# ENV IDM_EX_AUTH_PASSWORD_ENCRYPTION \"sha1\"\n# ENV IDM_EX_AUTH_PASSWORD_ENCRYPTION_KEY undefined\n# ENV IDM_EX_AUTH_DB_HOST \"localhost\"\n# ENV IDM_EX_AUTH_PORT undefined\n# ENV IDM_EX_AUTH_DB_NAME \"db_name\"\n# ENV IDM_EX_AUTH_DB_USER \"db_user\"\n# ENV IDM_EX_AUTH_DB_PASS \"db_pass\"\n# ENV IDM_EX_AUTH_DB_USER_TABLE \"user_view\"\n# ENV IDM_EX_AUTH_DIALECT \"mysql\"\n\n# ENV IDM_EMAIL_HOST \"localhost\"\n# ENV IDM_EMAIL_PORT \"25\"\n# ENV IDM_EMAIL_ADDRESS \"noreply@localhost\"\n# ENV IDM_EMAIL_LIST null\n\n# ENV IDM_TITLE \"Identity Manager\"\n# ENV IDM_THEME \"default\"\n\n# ENV IDM_EIDAS_ENABLED false\n# ENV IDM_EIDAS_GATEWAY_HOST \"localhost\"\n# ENV IDM_EIDAS_NODE_HOST \"https://se-eidas.redsara.es/EidasNode/ServiceProvider\"\n# ENV IDM_EIDAS_METADATA_LIFETIME \"31536000\"\n\n# ENV IDM_ADMIN_ID    \"admin\"\n# ENV IDM_ADMIN_USER  \"admin\"\n# ENV IDM_ADMIN_EMAIL \"admin@test.com\"\n# ENV IDM_ADMIN_PASS  \"1234\"\n"
}