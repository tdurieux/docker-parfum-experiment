{
  "startTime": 1674249669744,
  "endTime": 1674249670880,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 15,
        "columnEnd": 66
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 15,
        "columnEnd": 58
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 90,
        "lineEnd": 90,
        "columnStart": 4,
        "columnEnd": 146
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 49,
        "lineEnd": 49,
        "columnStart": 7,
        "columnEnd": 140
      }
    },
    {
      "rule": "sha256sumEchoOneSpaces",
      "position": {
        "lineStart": 57,
        "lineEnd": 57,
        "columnStart": 7,
        "columnEnd": 124
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 43,
        "lineEnd": 43,
        "columnStart": 7,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Licensed to the Apache Software Foundation (ASF) under one\n# or more contributor license agreements. See the NOTICE file\n# distributed with this work for additional information\n# regarding copyright ownership. The ASF licenses this file\n# to you under the Apache License, Version 2.0 (the # \"License\"); you may not use this file except in compliance\n# with the License. You may obtain a copy of the License at\n# #   http://www.apache.org/licenses/LICENSE-2.0 #\n# Unless required by applicable law or agreed to in writing,\n# software distributed under the License is distributed on an\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n# KIND, either express or implied. See the License for the\n# specific language governing permissions and limitations\n# under the License. #\nFROM openjdk:8-jre\nLABEL maintainer=\"Andrés Muñoz <jamunoz@dit.upm.es>\"\nLABEL site=\"https://nifi.apache.org\"\nARG UID=1000\nARG GID=1000\nARG NIFI_VERSION=1.8.0\nARG BASE_URL=https://archive.apache.org/dist\nARG MIRROR_BASE_URL=${MIRROR_BASE_URL:-${BASE_URL}}\nARG NIFI_BINARY_PATH=${NIFI_BINARY_PATH:-/nifi/${NIFI_VERSION}/nifi-${NIFI_VERSION}-bin.zip}\nARG NIFI_TOOLKIT_BINARY_PATH=${NIFI_TOOLKIT_BINARY_PATH:-/nifi/${NIFI_VERSION}/nifi-toolkit-${NIFI_VERSION}-bin.zip}\n\nENV NIFI_BASE_DIR=/opt/nifi\nENV NIFI_HOME ${NIFI_BASE_DIR}/nifi-current\nENV NIFI_TOOLKIT_HOME ${NIFI_BASE_DIR}/nifi-toolkit-current\n\nENV NIFI_PID_DIR=${NIFI_HOME}/run\nENV NIFI_LOG_DIR=${NIFI_HOME}/logs\n\nCOPY sh/ ${NIFI_BASE_DIR}/scripts/\n\nENV DRACO_RELEASE=1.1.0\nENV NIFI_NGSI_NAR_VERSION=1.1.0\n\n# Setup NiFi user and create necessary directories\n\nRUN groupadd -g ${GID} nifi || groupmod -n nifi `getent group ${GID} | cut -d: -f1` \\\n    && useradd --shell /bin/bash -u ${UID} -g ${GID} -m nifi \\\n    && mkdir -p ${NIFI_BASE_DIR} \\\n    && chown -R nifi:nifi ${NIFI_BASE_DIR} \\\n    && apt-get update \\\n    && apt-get install --no-install-recommends -y jq xmlstarlet procps && rm -rf /var/lib/apt/lists/*;\n\nUSER nifi\n\n# Download, validate, and expand Apache NiFi Toolkit binary.\nRUN curl -fSL ${MIRROR_BASE_URL}/${NIFI_TOOLKIT_BINARY_PATH} -o ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip \\\n    && echo \"$( curl -f ${BASE_URL}/${NIFI_TOOLKIT_BINARY_PATH}.sha256)  *${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip\" | sha256sum -c - \\\n    && unzip ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip -d ${NIFI_BASE_DIR} \\\n    && rm ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}-bin.zip \\\n    && mv ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION} ${NIFI_TOOLKIT_HOME} \\\n    && ln -s ${NIFI_TOOLKIT_HOME} ${NIFI_BASE_DIR}/nifi-toolkit-${NIFI_VERSION}\n\n# Download, validate, and expand Apache NiFi binary.\nRUN curl -fSL ${MIRROR_BASE_URL}/${NIFI_BINARY_PATH} -o ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip \\\n    && echo \"$( curl -f ${BASE_URL}/${NIFI_BINARY_PATH}.sha256)  *${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip\" | sha256sum -c - \\\n    && unzip ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip -d ${NIFI_BASE_DIR} \\\n    && rm ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}-bin.zip \\\n    && mv ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION} ${NIFI_HOME} \\\n    && mkdir -p ${NIFI_HOME}/conf/templates \\\n    && mkdir -p ${NIFI_HOME}/database_repository \\\n    && mkdir -p ${NIFI_HOME}/flowfile_repository \\\n    && mkdir -p ${NIFI_HOME}/content_repository \\\n    && mkdir -p ${NIFI_HOME}/provenance_repository \\\n    && mkdir -p ${NIFI_HOME}/state \\\n    && mkdir -p ${NIFI_HOME}/drivers \\\n    && mkdir -p ${NIFI_LOG_DIR} \\\n    && ln -s ${NIFI_HOME} ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}\n\nVOLUME ${NIFI_LOG_DIR} \\\n       ${NIFI_HOME}/conf \\\n       ${NIFI_HOME}/database_repository \\\n       ${NIFI_HOME}/flowfile_repository \\\n       ${NIFI_HOME}/content_repository \\\n       ${NIFI_HOME}/provenance_repository \\\n       ${NIFI_HOME}/state\n\nCOPY drivers/ ${NIFI_HOME}/drivers/\nCOPY templates/ ${NIFI_HOME}/conf/templates/\n\n# Clear nifi-env.sh in favour of configuring all environment variables in the Dockerfile\nRUN echo \"#!/bin/sh\\n\" > $NIFI_HOME/bin/nifi-env.sh\n# Web HTTP(s) & Socket Site-to-Site Ports\n\nEXPOSE 8080 8443 10000\n\nWORKDIR ${NIFI_HOME}\n\nRUN curl -f -L -o \"nifi-ngsi-resources.tar.gz\" \"https://github.com/ging/fiware-Draco/releases/download/\"${DRACO_RELEASE}\"/nifi-ngsi-resources.tar.gz\" \\\n\t&& tar -xvzf nifi-ngsi-resources.tar.gz -C ./ \\\n\t&& rm nifi-ngsi-resources.tar.gz \\\n\t&& cp nifi-ngsi-resources/nifi-ngsi-nar-${NIFI_NGSI_NAR_VERSION}.nar ${NIFI_BASE_DIR}/nifi-${NIFI_VERSION}/lib/nifi-ngsi-nar-1.0-SNAPSHOT.nar\n\n# Apply configuration and start NiFi\n#\n# We need to use the exec form to avoid running our command in a subshell and omitting signals,\n# thus being unable to shut down gracefully:\n# https://docs.docker.com/engine/reference/builder/#entrypoint\n#\n# Also we need to use relative path, because the exec form does not invoke a command shell,\n# thus normal shell processing does not happen:\n# https://docs.docker.com/engine/reference/builder/\n# exec-form-entrypoint-example\n\nENTRYPOINT [\"../scripts/start.sh\"]"
}