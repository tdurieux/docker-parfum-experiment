diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/radanalyticsio/oshinko-cli/vendor/github.com/docker/docker/Dockerfile.aarch64 b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/radanalyticsio/oshinko-cli/vendor/github.com/docker/docker/Dockerfile.aarch64/repaired.Dockerfile
index cabcda2..69c9a2f 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/radanalyticsio/oshinko-cli/vendor/github.com/docker/docker/Dockerfile.aarch64
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/radanalyticsio/oshinko-cli/vendor/github.com/docker/docker/Dockerfile.aarch64/repaired.Dockerfile
@@ -52,7 +52,7 @@ RUN apt-get update && apt-get install -y \
 	iproute2 \
 	iputils-ping \
 	vim-common \
-	--no-install-recommends
+	--no-install-recommends && rm -rf /var/lib/apt/lists/*;
 
 # Get lvm2 source for compiling statically
 ENV LVM2_VERSION 2.02.103
@@ -64,7 +64,7 @@ RUN mkdir -p /usr/local/lvm2 \
 # Fix platform enablement in lvm2 to support aarch64 properly
 RUN set -e \
 	&& for f in config.guess config.sub; do \
-		curl -fsSL -o "/usr/local/lvm2/autoconf/$f" "http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=$f;hb=HEAD"; \
+		curl -fsSL -o "/usr/local/lvm2/autoconf/$f" "https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=$f;hb=HEAD"; \
 	done
 # "arch.c:78:2: error: #error the arch code needs to know about your machine type"
 
@@ -83,13 +83,12 @@ RUN set -x \
 	&& export SECCOMP_PATH="$(mktemp -d)" \
 	&& curl -fsSL "https://github.com/seccomp/libseccomp/releases/download/v${SECCOMP_VERSION}/libseccomp-${SECCOMP_VERSION}.tar.gz" \
 		| tar -xzC "$SECCOMP_PATH" --strip-components=1 \
-	&& ( \
-		cd "$SECCOMP_PATH" \
-		&& ./configure --prefix=/usr/local \
+	&& ( cd "$SECCOMP_PATH" \
+		&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --prefix=/usr/local \
 		&& make \
 		&& make install \
-		&& ldconfig \
-	) \
+		&& ldconfig) \
+
 	&& rm -rf "$SECCOMP_PATH"
 
 # Install Go
@@ -101,7 +100,7 @@ RUN set -x \
 ENV GO_VERSION 1.8.3
 RUN mkdir /usr/src/go && curl -fsSL https://golang.org/dl/go${GO_VERSION}.src.tar.gz | tar -v -C /usr/src/go -xz --strip-components=1 \
 	&& cd /usr/src/go/src \
-	&& GOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP="$(go env GOROOT)" ./make.bash
+	&& GOOS=linux GOARCH=arm64 GOROOT_BOOTSTRAP="$(go env GOROOT)" ./make.bash && rm -rf /usr/src/go
 
 ENV PATH /go/bin:/usr/src/go/bin:$PATH
 ENV GOPATH /go
@@ -149,12 +148,12 @@ ENV DOCKER_PY_COMMIT a962578e515185cf06506050b2200c0b81aa84ef
 RUN git clone https://github.com/docker/docker-py.git /docker-py \
 	&& cd /docker-py \
 	&& git checkout -q $DOCKER_PY_COMMIT \
-	&& pip install wheel \
-	&& pip install docker-pycreds==0.2.1 \
-	&& pip install -r test-requirements.txt
+	&& pip install --no-cache-dir wheel \
+	&& pip install --no-cache-dir docker-pycreds==0.2.1 \
+	&& pip install --no-cache-dir -r test-requirements.txt
 
 # Install yamllint for validating swagger.yaml
-RUN pip install yamllint==1.5.0
+RUN pip install --no-cache-dir yamllint==1.5.0
 
 # Install go-swagger for validating swagger.yaml
 ENV GO_SWAGGER_COMMIT c28258affb0b6251755d92489ef685af8d4ff3eb