{
  "startTime": 1674250083201,
  "endTime": 1674250084034,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 4,
        "columnEnd": 58
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 47,
        "lineEnd": 47,
        "columnStart": 4,
        "columnEnd": 56
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Build stage with Spack pre-installed and ready to be used\nFROM spack/ubuntu-bionic:latest as builder\n# FROM ecpe4s/ubuntu18.04-spack-x86_64:0.15.3 as builder\n\nARG VERSION=develop\nARG PYTHON_VERSION=3.7\nARG COMPILER_SPEC=gcc\nARG CUDA_ARCH=70\nARG CUDA_ARCH_NAME=volta\n\n# What we want to install and how we want to install it\n# is specified in a manifest file (spack.yaml)\nRUN mkdir /opt/environment \\\n    &&  (echo \"spack:\" \\\n    &&   echo \"  specs:\" \\\n    &&   echo \"  - cuda\" \\\n    &&   echo \"  - nccl cuda_arch=${CUDA_ARCH}\" \\\n    &&   echo \"  - papi\" \\\n    &&   echo \"  - mpich\" \\\n    &&   echo \"  - gotcha\" \\\n    &&   echo \"  - dyninst\" \\\n    &&   echo \"  - caliper~papi\" \\\n    &&   echo \"  - gperftools\" \\\n    &&   echo \"  - python@${PYTHON_VERSION}\" \\\n    &&   echo \"  - py-scikit-build\" \\\n    &&   echo \"  - py-numpy\" \\\n    &&   echo \"  - py-cython\" \\\n    &&   echo \"  - py-pillow\" \\\n    &&   echo \"  - py-ipython\" \\\n    &&   echo \"  - py-matplotlib\" \\\n    &&   echo \"  - py-mpi4py\" \\\n    &&   echo \"  - py-pip\" \\\n    &&   echo \"  - timemory@${VERSION}%${COMPILER_SPEC} +caliper+cuda+cupti+dyninst+gotcha+kokkos_tools+kokkos_build_config+mpi+mpip_library+nccl+ompt+ompt_library+papi+python+tools cuda_arch=${CUDA_ARCH_NAME}\" \\\n    &&   echo \"  concretization: together\" \\\n    &&   echo \"  config:\" \\\n    &&   echo \"    install_tree: /opt/software\" \\\n    &&   echo \"  view: /opt/view\") > /opt/environment/spack.yaml\n\n# Install the software, remove unecessary deps\nRUN cd /tmp && \\\n    apt-get update && \\\n    apt-get dist-upgrade -y && \\\n    apt-get install --no-install-recommends -y wget gpg software-properties-common && \\\n    wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc | apt-key add - && \\\n    DISTRIB_CODENAME=$(cat /etc/lsb-release | grep DISTRIB_CODENAME | awk -F '=' '{print $NF}') && \\\n    apt-add-repository \"deb https://apt.kitware.com/ubuntu/ ${DISTRIB_CODENAME} main\" && \\\n    apt-get update && \\\n    apt-get install --no-install-recommends -y cmake build-essential ninja-build && \\\n    apt-get -y autoclean && rm -rf /var/lib/apt/lists/*;\n\n# Install the software, remove unecessary deps\nRUN cd /opt/environment && \\\n    wget https://oaciss.uoregon.edu/e4s/e4s.pub && \\\n    spack gpg trust e4s.pub && \\\n    spack mirror add E4S https://cache.e4s.io/e4s && \\\n    rm e4s.pub && \\\n    spack compiler find && \\\n    spack external find && \\\n    spack --env . install && \\\n    spack gc -y\n\n# Modifications to the environment that are necessary to run\nRUN cd /opt/environment && \\\n    spack env activate --sh -d . >> /etc/profile.d/z10_spack_environment.sh\n\n# Bare OS image to run the installed executables\nFROM spack/ubuntu-bionic:latest\n\nCOPY --from=builder /opt/environment /opt/environment\nCOPY --from=builder /opt/software /opt/software\nCOPY --from=builder /opt/view /opt/view\nCOPY --from=builder /etc/profile.d/z10_spack_environment.sh /etc/profile.d/z10_spack_environment.sh\n\nRUN echo 'export PS1=\"\\[$(tput bold)\\]\\[$(tput setaf 1)\\][timemory]\\[$(tput setaf 2)\\] \\u\\[$(tput sgr0)\\]:\\w $ \\[$(tput sgr0)\\]\"' >> ~/.bashrc\n\nENV HOME /root\nENV LANG en_US.UTF-8\nENV LANGUAGE en_US\nENV LC_ALL C\nENV SHELL /bin/bash\nENV BASH_ENV /etc/bash.bashrc\nENV DEBIAN_FRONTEND noninteractive\n\nCOPY ./etc/profile.d/*.sh /etc/profile.d/\nCOPY ./etc/bash.bashrc /etc/\nCOPY ./etc/compute-dir-size.py /etc/\n\nLABEL \"app\"=\"timemory\"\nLABEL \"mpi\"=\"mpich\"\n\nUSER root\nWORKDIR /home\nSHELL [ \"/bin/bash\", \"--login\", \"-c\" ]\n\n# ENTRYPOINT [ \"/runtime-entrypoint.sh\" ]\nENTRYPOINT [\"/bin/bash\", \"--rcfile\", \"/etc/profile\", \"-l\"]\n"
}