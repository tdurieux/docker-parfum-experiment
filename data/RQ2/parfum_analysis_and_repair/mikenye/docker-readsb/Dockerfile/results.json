{
  "startTime": 1674221058867,
  "endTime": 1674221060268,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 77,
        "lineEnd": 77,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 78,
        "lineEnd": 78,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 79,
        "lineEnd": 79,
        "columnStart": 4,
        "columnEnd": 91
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 80,
        "lineEnd": 80,
        "columnStart": 4,
        "columnEnd": 93
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 81,
        "lineEnd": 81,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 83,
        "lineEnd": 83,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 84,
        "lineEnd": 84,
        "columnStart": 4,
        "columnEnd": 82
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 124,
        "lineEnd": 124,
        "columnStart": 4,
        "columnEnd": 99
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM debian:stable-slim\n\nENV S6_BEHAVIOUR_IF_STAGE2_FAILS=2 \\\n    S6_CMD_ARG0=\"/usr/local/bin/readsb\" \\\n    BRANCH_RTLSDR=\"d794155ba65796a76cd0a436f9709f4601509320\"\n\n# Note, the specific commit of rtlsdr is to address issue #3\n# See: https://github.com/mikenye/docker-readsb/issues/3\n# This should be revisited in future when rtlsdr 0.6.1 or newer is released\n\nSHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n\nCOPY rootfs/ /\n\nRUN set -x && \\\n    apt-get update -y && \\\n    apt-get install -y --no-install-recommends \\\n        bison \\\n        bc \\\n        ca-certificates \\\n        cmake \\\n        curl \\\n        file \\\n        g++ \\\n        gcc \\\n        gnupg \\\n        jq \\\n        libc-dev \\\n        libedit-dev \\\n        libfl-dev \\\n        libncurses-dev \\\n        libncurses6 \\\n        libtecla-dev \\\n        libtecla1 \\\n        libusb-1.0-0 \\\n        libusb-1.0-0-dev \\\n        libxml2 \\\n        libxml2-dev \\\n        make \\\n        lighttpd \\\n        pkg-config \\\n        git \\\n        && \\\n    git config --global advice.detachedHead false && \\\n    echo \"========== Building RTL-SDR ==========\" && \\\n    git clone git://git.osmocom.org/rtl-sdr.git /src/rtl-sdr && \\\n    pushd /src/rtl-sdr && \\\n    #BRANCH_RTLSDR=$(git tag --sort=\"-creatordate\" | head -1) && \\\n    #git checkout \"tags/${BRANCH_RTLSDR}\" && \\\n    git checkout \"${BRANCH_RTLSDR}\" && \\\n    echo \"rtl-sdr ${BRANCH_RTLSDR}\" >> /VERSIONS && \\\n    mkdir -p /src/rtl-sdr/build && \\\n    pushd /src/rtl-sdr/build && \\\n    cmake ../ -DINSTALL_UDEV_RULES=ON -Wno-dev && \\\n    make -Wstringop-truncation && \\\n    make -Wstringop-truncation install && \\\n    cp -v /src/rtl-sdr/rtl-sdr.rules /etc/udev/rules.d/ && \\\n    popd && popd && \\\n    echo \"========== Building bladeRF ==========\" && \\\n    git clone --recursive https://github.com/Nuand/bladeRF.git /src/bladeRF && \\\n    pushd /src/bladeRF && \\\n    BRANCH_BLADERF=$(git tag --sort=\"-creatordate\" | head -1) && \\\n    git checkout \"${BRANCH_BLADERF}\" && \\\n    echo \"bladeRF ${BRANCH_BLADERF}\" >> /VERSIONS && \\\n    mkdir /src/bladeRF/host/build && \\\n    pushd /src/bladeRF/host/build && \\\n    cmake \\\n        -DTREAT_WARNINGS_AS_ERRORS=OFF \\\n        -DCMAKE_BUILD_TYPE=Release \\\n        ../ \\\n        && \\\n    make && \\\n    make install && \\\n    popd && popd && \\\n    echo \"========== Downloading bladeRF FPGA Images ==========\" && \\\n    BLADERF_RBF_PATH=\"/usr/share/Nuand/bladeRF\" && \\\n    mkdir -p \"$BLADERF_RBF_PATH\" && \\\n    curl -f -o $BLADERF_RBF_PATH/hostedxA4.rbf https://www.nuand.com/fpga/hostedxA4-latest.rbf && \\\n    curl -f -o $BLADERF_RBF_PATH/hostedxA9.rbf https://www.nuand.com/fpga/hostedxA9-latest.rbf && \\\n    curl -f -o $BLADERF_RBF_PATH/hostedx40.rbf https://www.nuand.com/fpga/hostedx40-latest.rbf && \\\n    curl -f -o $BLADERF_RBF_PATH/hostedx115.rbf https://www.nuand.com/fpga/hostedx115-latest.rbf && \\\n    curl -f -o $BLADERF_RBF_PATH/adsbxA4.rbf https://www.nuand.com/fpga/adsbxA4.rbf && \\\n    curl -f -o $BLADERF_RBF_PATH/adsbxA9.rbf https://www.nuand.com/fpga/adsbxA9.rbf && \\\n    curl -f -o $BLADERF_RBF_PATH/adsbx40.rbf https://www.nuand.com/fpga/adsbx40.rbf && \\\n    curl -f -o $BLADERF_RBF_PATH/adsbx115.rbf https://www.nuand.com/fpga/adsbx115.rbf && \\\n    echo \"========== Building libiio ==========\" && \\\n    git clone https://github.com/analogdevicesinc/libiio.git /src/libiio && \\\n    pushd /src/libiio && \\\n    BRANCH_LIBIIO=$(git tag --sort=\"-creatordate\" | head -1) && \\\n    git checkout \"${BRANCH_LIBIIO}\" && \\\n    echo \"libiio ${BRANCH_LIBIIO}\" >> /VERSIONS && \\\n    cmake PREFIX=/usr/local ./ && \\\n    make && \\\n    make install && \\\n    popd && \\\n    echo \"========== Building libad9361-iio ==========\" && \\\n    git clone https://github.com/analogdevicesinc/libad9361-iio.git /src/libad9361-iio && \\\n    pushd /src/libad9361-iio && \\\n    BRANCH_LIBAD9361IIO=$(git tag --sort=\"-creatordate\" | head -1) && \\\n    git checkout \"${BRANCH_LIBAD9361IIO}\" && \\\n    echo \"libad9361-iio ${BRANCH_LIBAD9361IIO}\" >> /VERSIONS && \\\n    cmake ./ && \\\n    make && \\\n    make install && \\\n    popd && \\\n    echo \"========== Building readsb ==========\" && \\\n    git clone https://github.com/Mictronics/readsb.git /src/readsb && \\\n    pushd /src/readsb && \\\n    BRANCH_READSB=$(git tag --sort=\"-creatordate\" | head -1) && \\\n    git checkout \"${BRANCH_READSB}\" && \\\n    echo \"readsb ${BRANCH_READSB}\" >> /VERSIONS && \\\n    make RTLSDR=yes BLADERF=yes PLUTOSDR=yes HAVE_BIASTEE=yes && \\\n    cp -v /src/readsb/readsb /usr/local/bin/readsb && \\\n    cp -v /src/readsb/viewadsb /usr/local/bin/viewadsb && \\\n    mkdir -p /usr/share/readsb/bladerf && \\\n    cp -v /src/readsb/bladerf/*.rbf /usr/share/readsb/bladerf/ && \\\n    popd && \\\n    echo \"========== Install readsb webapp ==========\" && \\\n    mkdir -p /usr/share/readsb/html && \\\n    cp -Rv /src/readsb/webapp/src/* /usr/share/readsb/html/ && \\\n    ln -s /etc/lighttpd/conf-available/01-setenv.conf /etc/lighttpd/conf-enabled/01-setenv.conf && \\\n    cp -v /src/readsb/debian/lighttpd/* /etc/lighttpd/conf-enabled/ && \\\n    mkdir -p /run/readsb && \\\n    echo \"========== Deploy s6-overlay ==========\" && \\\n    curl -f -s https://raw.githubusercontent.com/mikenye/deploy-s6-overlay/master/deploy-s6-overlay.sh | sh && \\\n    echo \"========== Clean-up ==========\" && \\\n    apt-get remove -y \\\n        bison \\\n        cmake \\\n        curl \\\n        file \\\n        g++ \\\n        gcc \\\n        git \\\n        gnupg \\\n        libc-dev \\\n        libedit-dev \\\n        libfl-dev \\\n        libncurses-dev \\\n        libtecla-dev \\\n        libusb-1.0-0-dev \\\n        libxml2-dev \\\n        make \\\n        pkg-config \\\n        && \\\n    apt-get autoremove -y && \\\n    rm -rf /src/* /tmp/* /var/lib/apt/lists/* && \\\n    cat /VERSIONS && \\\n    readsb --version | cut -d ' ' -f2- > /CONTAINER_VERSION\n\n# Expose ports\nEXPOSE 30104/tcp 8080/tcp 30001/tcp 30002/tcp 30003/tcp 30004/tcp 30005/tcp 30105/tcp\n\n# Set s6 init as entrypoint\nENTRYPOINT [ \"/init\" ]\n\n# Add healthcheck\nHEALTHCHECK --start-period=300s --interval=300s CMD /scripts/healthcheck.sh\n"
}