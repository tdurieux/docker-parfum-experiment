{
  "startTime": 1674251704598,
  "endTime": 1674251706111,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 48,
        "lineEnd": 65,
        "columnStart": 4,
        "columnEnd": 30
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG TAG=11\n\nFROM openjdk:${TAG}\n\n# Will not prompt for questions\nENV DEBIAN_FRONTEND=noninteractive\n\nARG OH_MY_ZSH_THEME=\"amuse\"\nARG CONTAINER_USER_NAME=\"developer\"\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n\nARG GRADLE_VERSION=5.2.1\nARG APKTOOL_VERSION=2.4.0\nARG BUILD_TOOLS_VERSION=29.0.3\n\nARG DOCKER_BUILD=\"/docker-build\"\nARG SSL_CA_DIR=\"/etc/ssl/certs\"\nARG DOCKER_BUILD_SCRIPTS_RELEASE=\"0.0.1.0\"\n\nARG PROXY_CA_NAME=\"ProxyCA\"\nENV PROXY_CA_PEM=\"${PROXY_CA_NAME}.pem\"\n\nARG ROOT_CA_DIR=/.certificates\nARG ROOT_CA_NAME=\"Self_Signed_Root_CA\"\n\nENV USER=${CONTAINER_USER_NAME}\nENV HOME=/home/\"${CONTAINER_USER_NAME}\"\nENV CONTAINER_HOME=/home/\"${CONTAINER_USER_NAME}\"\n\nENV \\\n  WORKSPACE_PATH=\"${CONTAINER_HOME}/workspace\" \\\n  CONTAINER_USER_NAME=\"${CONTAINER_USER_NAME}\" \\\n  CONTAINER_BIN_PATH=\"${CONTAINER_HOME}/bin\" \\\n  CONTAINER_UID=${CONTAINER_UID} \\\n  CONTAINER_GID=${CONTAINER_GID} \\\n  ROOT_CA_KEY=\"${ROOT_CA_NAME}.key\" \\\n  ROOT_CA_PEM=\"${ROOT_CA_NAME}.pem\" \\\n  PROXY_CA_FILENAME=\"${PROXY_CA_NAME}.crt\" \\\n  GRADLE_HOME=/opt/gradle/gradle-\"${GRADLE_VERSION}\" \\\n  PATH=/opt/gradle/gradle-\"${GRADLE_VERSION}\"/bin:${PATH}\n\nCOPY ./.certificates /.certificates\n\nRUN apt update && \\\n    apt -y upgrade && \\\n\n    # Install Required Dependencies\n    apt -y --no-install-recommends install \\\n        locales \\\n        tzdata \\\n        ca-certificates \\\n        inotify-tools \\\n        build-essential \\\n        libnss3-tools \\\n        lib32stdc++6 \\\n        zip \\\n        zsh \\\n        curl \\\n        git \\\n        nano \\\n        usbutils \\\n        default-jdk \\\n        maven \\\n        android-tools-adb \\\n        android-tools-fastboot && \\\n\n    # Force installation of missing dependencies\n    apt -y -f install && \\\n\n    mkdir -p \"${DOCKER_BUILD}\" && \\\n\n    curl \\\n      -fsSl \\\n      -o archive.tar.gz \\\n      https://gitlab.com/exadra37-bash/docker/bash-scripts-for-docker-builds/-/archive/\"${DOCKER_BUILD_SCRIPTS_RELEASE}\"/bash-scripts-for-docker-builds-dev.tar.gz?path=scripts && \\\n    tar xf archive.tar.gz -C \"${DOCKER_BUILD}\" --strip 1 && \\\n    rm -vf archive.tar.gz && \\\n\n    \"${DOCKER_BUILD}\"/scripts/debian/install/inotify-tools.sh && \\\n\n    if [ -f \"/.certificates/ProxyCA.crt\" ]; then \\\n      \"${DOCKER_BUILD}\"/scripts/custom-ssl/operating-system/add-custom-authority-certificate.sh \\\n        \"/.certificates/ProxyCA.crt\" \\\n        \"/usr/local/share/ca-certificates\"; \\\n    fi && \\\n\n    echo \"en_GB.UTF-8 UTF-8\" > /etc/locale.gen && \\\n    locale-gen en_GB.UTF-8 && \\\n    dpkg-reconfigure locales && \\\n\n    curl -o gradle.zip -fsSL https://services.gradle.org/distributions/gradle-\"${GRADLE_VERSION}\"-bin.zip && \\\n    unzip -d /opt/gradle gradle.zip && \\\n    rm -f gradle.zip && \\\n    gradle --version && \\\n\n    curl -fsSL -o /usr/local/bin/apktool https://raw.githubusercontent.com/iBotPeaches/Apktool/master/scripts/linux/apktool && \\\n    curl -fsSL -o /usr/local/bin/apktool.jar https://github.com/iBotPeaches/Apktool/releases/download/v\"${APKTOOL_VERSION}\"/apktool_\"${APKTOOL_VERSION}\".jar && \\\n    chmod +x /usr/local/bin/apktool* && \\\n\n    \"${DOCKER_BUILD}\"/scripts/utils/debian/add-user-with-bin-folder.sh \\\n      \"${CONTAINER_USER_NAME}\" \\\n      \"${CONTAINER_UID}\" \\\n      \"/usr/bin/zsh\" \\\n      \"${CONTAINER_BIN_PATH}\" && \\\n\n    \"${DOCKER_BUILD}\"/scripts/debian/install/oh-my-zsh.sh \\\n      \"${CONTAINER_HOME}\" \\\n      \"${OH_MY_ZSH_THEME}\" || true && \\\n\n    \"${DOCKER_BUILD}\"/scripts/utils/create-workspace-dir.sh \\\n      \"${WORKSPACE_PATH}\" \\\n      \"${CONTAINER_USER_NAME}\" && \\\n\n    # cleaning\n    rm -rvf /var/lib/apt/lists/*\n\nUSER ${CONTAINER_USER_NAME}\n\nWORKDIR ${CONTAINER_HOME}\n\nENV ANDROID_HOME=\"${CONTAINER_HOME}\"/.android-home\n\nENV LANG=en_GB.UTF-8 \\\n    LANGUAGE=en_GB:en \\\n    LC_ALL=en_GB.UTF-8 \\\n    PATH=${ANDROID_HOME}/cmdline-tools/tools/bin:$PATH\n\nRUN \\\n    mkdir -p \"${ANDROID_HOME}\"/cmdline-tools \"${CONTAINER_USER_NAME}\" && \\\n    chown -R \"${CONTAINER_USER_NAME}\":\"${CONTAINER_USER_NAME}\" \"${ANDROID_HOME}\" && \\\n    cd \"${ANDROID_HOME}\"/cmdline-tools && \\\n    curl -fsSL https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip -o tools.zip && \\\n    unzip tools.zip && \\\n    rm -rf tools.zip && \\\n    echo \"y\" | sdkmanager --install \"build-tools;${BUILD_TOOLS_VERSION}\"\n\nWORKDIR ${CONTAINER_HOME}/workspace\n\nCMD [\"zsh\"]\n"
}