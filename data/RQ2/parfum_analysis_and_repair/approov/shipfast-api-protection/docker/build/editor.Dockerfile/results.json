{
  "startTime": 1674252530223,
  "endTime": 1674252531277,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 116,
        "lineEnd": 116,
        "columnStart": 1,
        "columnEnd": 59
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 139,
        "lineEnd": 139,
        "columnStart": 2,
        "columnEnd": 129
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 53,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 28
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 53,
        "lineEnd": 97,
        "columnStart": 4,
        "columnEnd": 28
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ubuntu:18.04\n\nARG OH_MY_ZSH_THEME=\"amuse\"\nARG CONTAINER_USER_NAME=\"developer\"\nARG CONTAINER_UID=1000\nARG CONTAINER_GID=1000\n\n# Inspired on:\n#   → https://github.com/Purik/android-studio-docker\n#   → https://github.com/Deadolus/android-studio-docker\n\n# Removes DBUS warning that should be only seen by Developer\n# https://bugs.launchpad.net/ubuntu/+source/at-spi2-core/+bug/1193236\nENV NO_AT_BRIDGE=1\n\n# Will not prompt for questions\nENV DEBIAN_FRONTEND=noninteractive\n\nARG DOCKER_BUILD=\"/docker-build\"\nARG SSL_CA_DIR=\"/etc/ssl/certs\"\nARG DOCKER_BUILD_SCRIPTS_RELEASE=\"0.0.1.0\"\n\nARG PROXY_CA_NAME=\"ProxyCA\"\nENV PROXY_CA_PEM=\"${PROXY_CA_NAME}.pem\"\n\nARG ANDROID_STUDIO_VERSION\nARG ANDROID_STUDIO_BUILD\nARG ANDROID_STUDIO_DOWNLOAD_URL=\"https://dl.google.com/dl/android/studio/ide-zips/${ANDROID_STUDIO_VERSION}/android-studio-ide-${ANDROID_STUDIO_BUILD}-linux.tar.gz\"\n\nARG DOMAIN_CA_NAME=\"localhost\"\n\nARG ROOT_CA_DIR=/.certificates\nARG ROOT_CA_NAME=\"Self_Signed_Root_CA\"\n\nARG MITM_PROXY_VERSION=5.0.1\n\nENV CONTAINER_HOME=/home/\"${CONTAINER_USER_NAME}\"\n\nENV \\\n  WORKSPACE_PATH=\"${CONTAINER_HOME}/workspace\" \\\n  CONTAINER_USER_NAME=\"${CONTAINER_USER_NAME}\" \\\n  CONTAINER_BIN_PATH=\"${CONTAINER_HOME}/bin\" \\\n  CONTAINER_UID=${CONTAINER_UID} \\\n  CONTAINER_GID=${CONTAINER_GID} \\\n  ROOT_CA_KEY=\"${ROOT_CA_NAME}.key\" \\\n  ROOT_CA_PEM=\"${ROOT_CA_NAME}.pem\" \\\n  PROXY_CA_FILENAME=\"${PROXY_CA_NAME}.crt\"\n\nCOPY ./.certificates /.certificates\n\nRUN dpkg --add-architecture i386 && \\\n    apt update && \\\n    apt -y upgrade && \\\n    apt -y --no-install-recommends install \\\n      locales \\\n      tzdata \\\n      ca-certificates \\\n      inotify-tools \\\n      libnss3-tools \\\n      curl \\\n      wget \\\n      apt-utils \\\n      git \\\n      zsh \\\n      unzip \\\n      xorg \\\n      nano \\\n      ant \\\n      firefox \\\n      default-jdk \\\n      build-essential \\\n      dbus* \\\n      libcanberra-gtk* \\\n      libz1 \\\n      lib32z1 \\\n      libc6:i386 \\\n      libncurses5 \\\n      libncurses5:i386 \\\n      libstdc++6 \\\n      libstdc++6:i386 \\\n      lib32stdc++6 \\\n      libbz2-1.0 \\\n      libbz2-1.0:i386 \\\n      libxft2 \\\n      libxi6 \\\n      libxtst6 \\\n      libxrender1 \\\n      libfreetype6 \\\n      qemu-kvm \\\n      libvirt-bin \\\n      ubuntu-vm-builder \\\n      bridge-utils \\\n      libnotify4 \\\n      libglu1 \\\n      libqt5widgets5 \\\n      xvfb \\\n      android-tools-adb \\\n      android-tools-fastboot && \\\n\n  mkdir -p \"${DOCKER_BUILD}\" && \\\n\n  curl \\\n    -fsSl \\\n    -o archive.tar.gz \\\n    https://gitlab.com/exadra37-bash/docker/bash-scripts-for-docker-builds/-/archive/\"${DOCKER_BUILD_SCRIPTS_RELEASE}\"/bash-scripts-for-docker-builds-dev.tar.gz?path=scripts && \\\n  tar xf archive.tar.gz -C \"${DOCKER_BUILD}\" --strip 1 && \\\n  rm -vf archive.tar.gz && \\\n\n  \"${DOCKER_BUILD}\"/scripts/debian/install/inotify-tools.sh && \\\n\n  if [ -f \"/.certificates/ProxyCA.crt\" ]; then \\\n    \"${DOCKER_BUILD}\"/scripts/custom-ssl/operating-system/add-custom-authority-certificate.sh \\\n      \"/.certificates/ProxyCA.crt\" \\\n      \"/usr/local/share/ca-certificates\"; \\\n  fi && \\\n\n curl -f \"${ANDROID_STUDIO_DOWNLOAD_URL}\" > /tmp/studio.tar.gz && \\\n    tar xf /tmp/studio.tar.gz -C /opt && \\\n    rm /tmp/studio.tar.gz && \\\n    if [ -f \"/.certificates/ProxyCA.crt\" ]; then \\\n      \"${DOCKER_BUILD}\"/scripts/custom-ssl/android/add-certificate-to-android-studio.sh \\\n        \"${SSL_CA_DIR}/${PROXY_CA_PEM}\"; fi && \\\n\n  locale-gen en_GB.UTF-8 && dpkg-reconfigure locales && \\\n\n  \"${DOCKER_BUILD}\"/scripts/utils/debian/add-user-with-bin-folder.sh \\\n    \"${CONTAINER_USER_NAME}\" \\\n    \"${CONTAINER_UID}\" \\\n    \"/usr/bin/zsh\" \\\n    \"${CONTAINER_BIN_PATH}\" && \\\n\n  \"${DOCKER_BUILD}\"/scripts/debian/install/oh-my-zsh.sh \\\n    \"${CONTAINER_HOME}\" \\\n    \"${OH_MY_ZSH_THEME}\" && \\\n\n  \"${DOCKER_BUILD}\"/scripts/utils/create-workspace-dir.sh \\\n    \"${WORKSPACE_PATH}\" \\\n    \"${CONTAINER_USER_NAME}\" && \\\n\n  curl -f https://snapshots.mitmproxy.org/\"${MITM_PROXY_VERSION}\"/mitmproxy-\"${MITM_PROXY_VERSION}\"-linux.tar.gz -o mitmproxy.tar.gz && \\\n    tar -zxvf mitmproxy.tar.gz -C /usr/local/bin && \\\n    rm -rfv mitmproxy.tar.gz && \\\n\n  adduser ${CONTAINER_USER_NAME} libvirt && \\\n  adduser ${CONTAINER_USER_NAME} kvm && \\\n\n  apt -y -f install && \\\n  apt -y autoremove && \\\n  apt-get clean && \\\n  apt-get purge && rm -rf /var/lib/apt/lists/*;\n\nENV ANDROID_SDK_ROOT=${CONTAINER_HOME}/Android/Sdk\nENV PATH=${ANDROID_SDK_ROOT}/emulator:${PATH}\nENV PATH=${ANDROID_SDK_ROOT}/tools/bin:${PATH}\nENV PATH=${ANDROID_SDK_ROOT}/platform-tools:${PATH}\nENV PATH=/opt/android-studio/bin:${PATH}\n\nENV ANDROID_EMULATOR_USE_SYSTEM_LIBS=1\n\nARG DISPLAY=${DISPLAY:-\":0\"}\nENV DISPLAY=${DISPLAY}\n\nENV LANG en_GB.UTF-8\nENV LANGUAGE en_GB:en\nENV LC_ALL en_GB.UTF-8\n\nUSER ${CONTAINER_USER_NAME}\n\nWORKDIR ${CONTAINER_HOME}/workspace\n\nCMD [\"/opt/android-studio/bin/studio.sh\"]\n"
}