diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mrkn/pycall.rb/docker/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mrkn/pycall.rb/docker/Dockerfile/repaired.Dockerfile
index 4ca299e..de2889b 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/mrkn/pycall.rb/docker/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/mrkn/pycall.rb/docker/Dockerfile/repaired.Dockerfile
@@ -31,14 +31,14 @@ RUN set -ex \
 	&& rm -rf /var/lib/apt/lists/* \
 	\
 	&& wget -O ruby.tar.xz "https://cache.ruby-lang.org/pub/ruby/${RUBY_MAJOR%-rc}/ruby-$RUBY_VERSION.tar.xz" \
-	&& echo "$RUBY_DOWNLOAD_SHA256 *ruby.tar.xz" | sha256sum -c - \
-	\
+	&& echo "$RUBY_DOWNLOAD_SHA256  *ruby.tar.xz" | sha256sum -c - \
+
 	&& mkdir -p /usr/src/ruby \
 	&& tar -xJf ruby.tar.xz -C /usr/src/ruby --strip-components=1 \
 	&& rm ruby.tar.xz \
-	\
+
 	&& cd /usr/src/ruby \
-	\
+
 # hack in "ENABLE_PATH_CHECK" disabling to suppress:
 #   warning: Insecure world writable dir
 	&& { \
@@ -47,17 +47,17 @@ RUN set -ex \
 		cat file.c; \
 	} > file.c.new \
 	&& mv file.c.new file.c \
-	\
+
 	&& autoconf \
-	&& ./configure --disable-install-doc --enable-shared \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" --disable-install-doc --enable-shared \
 	&& make -j"$(nproc)" \
 	&& make install \
-	\
+
 	&& apt-get purge -y --auto-remove $buildDeps \
 	&& cd / \
 	&& rm -r /usr/src/ruby \
-	\
-	&& gem update --system "$RUBYGEMS_VERSION"
+
+	&& gem update --system "$RUBYGEMS_VERSION" && rm -rf /root/.gem;
 
 ENV BUNDLER_VERSION 1.14.5
 
@@ -108,21 +108,21 @@ RUN set -ex \
 	&& wget -O python.tar.xz "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz" \
 	&& wget -O python.tar.xz.asc "https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc" \
 	&& export GNUPGHOME="$(mktemp -d)" \
-	&& gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \
+	&& gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys "$GPG_KEY" \
 	&& gpg --batch --verify python.tar.xz.asc python.tar.xz \
 	&& rm -r "$GNUPGHOME" python.tar.xz.asc \
 	&& mkdir -p /usr/src/python \
 	&& tar -xJC /usr/src/python --strip-components=1 -f python.tar.xz \
 	&& rm python.tar.xz \
-	\
+
 	&& cd /usr/src/python \
-	&& ./configure \
+	&& ./configure --build="$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)" \
 		--enable-loadable-sqlite-extensions \
 		--enable-shared \
 	&& make -j$(nproc) \
 	&& make install \
 	&& ldconfig \
-	\
+
 # explicit path to "pip3" to ensure distribution-provided "pip3" cannot interfere
 	&& if [ ! -e /usr/local/bin/pip3 ]; then : \
 		&& wget -O /tmp/get-pip.py 'https://bootstrap.pypa.io/get-pip.py' \
@@ -136,7 +136,7 @@ RUN set -ex \
 # then we use "pip list" to ensure we don't have more than one pip version installed
 # https://github.com/docker-library/python/pull/100
 	&& [ "$(pip list |tac|tac| awk -F '[ ()]+' '$1 == "pip" { print $2; exit }')" = "$PYTHON_PIP_VERSION" ] \
-	\
+
 	&& find /usr/local -depth \
 		\( \
 			\( -type d -a -name test -o -name tests \) \
@@ -159,19 +159,19 @@ RUN cd /usr/local/bin \
 ###############################################################
 
 RUN apt-get update \
-	&& apt-get install -y --no-install-recommends libczmq-dev
-
-RUN pip3 install jupyter
-RUN pip3 install numpy
-RUN pip3 install scipy
-RUN pip3 install pandas
-RUN pip3 install matplotlib
-RUN pip3 install seaborn
-RUN pip3 install scikit-learn
-RUN pip3 install gensim
-RUN pip3 install nltk
-RUN pip3 install statsmodels
-RUN pip3 install xray
+	&& apt-get install -y --no-install-recommends libczmq-dev && rm -rf /var/lib/apt/lists/*;
+
+RUN pip3 install --no-cache-dir jupyter
+RUN pip3 install --no-cache-dir numpy
+RUN pip3 install --no-cache-dir scipy
+RUN pip3 install --no-cache-dir pandas
+RUN pip3 install --no-cache-dir matplotlib
+RUN pip3 install --no-cache-dir seaborn
+RUN pip3 install --no-cache-dir scikit-learn
+RUN pip3 install --no-cache-dir gensim
+RUN pip3 install --no-cache-dir nltk
+RUN pip3 install --no-cache-dir statsmodels
+RUN pip3 install --no-cache-dir xray
 
 RUN mkdir -p /app /notebooks/examples /notebooks/local
 WORKDIR /app