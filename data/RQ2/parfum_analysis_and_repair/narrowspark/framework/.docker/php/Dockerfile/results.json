{
  "startTime": 1674221065506,
  "endTime": 1674221066604,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 6,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 23
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "ARG NAMESPACE\nARG PHP_VERSION\n\nFROM ${NAMESPACE}:${PHP_VERSION}-cli\n\nRUN apt-get update && \\\n    apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        libsqlite3-dev \\\n        libsqlite3-0 \\\n        libxml2-dev \\\n        curl \\\n        libsodium-dev \\\n        zlib1g-dev \\\n        libicu-dev \\\n        git \\\n        g++ \\\n        unzip \\\n        libzip-dev \\\n        zip \\\n        libtool \\\n        make \\\n        build-essential \\\n        automake \\\n        ca-certificates && \\\n    apt-get autoremove -y && \\\n    apt-get clean -y && \\\n    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\nRUN pecl install -f libsodium && \\\n    pecl install redis && \\\n    pecl install pcov && \\\n    pecl install inotify\n\nRUN docker-php-ext-configure intl && \\\n    docker-php-ext-configure zip\n\nRUN docker-php-ext-install pdo_mysql opcache sodium intl bcmath zip pcntl\n\nRUN docker-php-ext-enable redis inotify\n\nRUN { \\\n        echo \"short_open_tag=off\"; \\\n        echo \"date.timezone=Europe/Berlin\"; \\\n        echo \"opcache.max_accelerated_files=20000\"; \\\n        echo \"realpath_cache_size=4096K\"; \\\n        echo \"realpath_cache_ttl=600\"; \\\n        echo \"error_reporting = E_ALL\"; \\\n        echo \"display_startup_errors = Off\"; \\\n        echo \"ignore_repeated_errors = Off\"; \\\n        echo \"ignore_repeated_source = Off\"; \\\n        echo \"html_errors = Off\"; \\\n        echo \"track_errors = Off\"; \\\n        echo \"display_errors = Off\"; \\\n        echo \"log_errors = On\"; \\\n        echo \"error_log = /var/log/php/cli-error.log\"; \\\n    } > /usr/local/etc/php/php.ini\n\n# set recommended PHP.ini settings\n# see https://secure.php.net/manual/en/opcache.installation.php\nRUN { \\\n        echo 'opcache.memory_consumption=128'; \\\n        echo 'opcache.interned_strings_buffer=8'; \\\n        echo 'opcache.max_accelerated_files=4000'; \\\n        echo 'opcache.revalidate_freq=2'; \\\n        echo 'opcache.fast_shutdown=1'; \\\n        echo 'opcache.enable_cli=1'; \\\n    } > /usr/local/etc/php/conf.d/opcache-recommended.ini\n\nENV COMPOSER_ALLOW_SUPERUSER 1\n\nRUN php -r \"readfile('http://getcomposer.org/installer');\" | php -- --install-dir=/usr/bin/ --filename=composer && \\\n    composer global require phploc/phploc && \\\n    composer global require ergebnis/composer-normalize\n\nARG INSTALL_XDEBUG\nARG XDEBUG_VERSION\n\nRUN if [ ${INSTALL_XDEBUG} = true ]; then pecl install \"xdebug-${XDEBUG_VERSION}\" ;fi\n\nRUN { \\\n        echo 'xdebug.idekey=PHPSTORM'; \\\n        echo 'xdebug.remote_port=9000'; \\\n        echo 'xdebug.remote_enable=on'; \\\n        echo 'xdebug.remote_connect_back=on'; \\\n        echo 'xdebug.profiler_output_dir=\"/var/log/xdebug\"'; \\\n        echo 'xdebug.cli_color=1'; \\\n    } > /usr/local/etc/php/conf.d/php-ext-xdebug.ini\n\nRUN if [ ${INSTALL_XDEBUG} = true ]; then docker-php-ext-enable xdebug ;fi\n\nRUN mkdir /var/log/php && touch /var/log/php/cli-error.log && chmod 0664 /var/log/php/cli-error.log\n\nWORKDIR /var/www/framework\n\nENV PATH=\"/root/.composer/vendor/bin:${PATH}\"\nENV DOKCER_RUN=true\n"
}