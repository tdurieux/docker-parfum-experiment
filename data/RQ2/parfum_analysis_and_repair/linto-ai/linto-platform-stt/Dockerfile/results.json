{
  "startTime": 1674253316586,
  "endTime": 1674253318029,
  "originalSmells": [
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 38,
        "lineEnd": 38,
        "columnStart": 10,
        "columnEnd": 58
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 10,
        "columnEnd": 45
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.9\nLABEL maintainer=\"irebai@linagora.com, rbaraglia@linagora.com\"\n\nARG KALDI_MKL\n\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        wget \\\n        nano \\\n        bzip2 \\\n        unzip \\\n        xz-utils \\\n        sox \\\n        g++ \\\n        make \\\n        cmake \\\n        git \\\n        zlib1g-dev \\\n        automake \\\n        autoconf \\\n        libtool \\\n        pkg-config \\\n        ca-certificates \\\n    && rm -rf /var/lib/apt/lists/*\n\n# Build vosk-kaldi\nRUN git clone -b vosk --single-branch https://github.com/alphacep/kaldi /opt/kaldi \\\n    && cd /opt/kaldi/tools \\\n    && sed -i 's:status=0:exit 0:g' extras/check_dependencies.sh \\\n    && sed -i 's:--enable-ngram-fsts:--enable-ngram-fsts --disable-bin:g' Makefile \\\n    && make -j $(nproc) openfst cub \\\n    && if [ \"x$KALDI_MKL\" != \"x1\" ] ; then \\\n          extras/install_openblas_clapack.sh; \\\n       else \\\n          extras/install_mkl.sh; \\\n       fi \\\n    && cd /opt/kaldi/src \\\n    && if [ \"x$KALDI_MKL\" != \"x1\" ] ; then \\\n          ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --mathlib=OPENBLAS_CLAPACK --shared; \\\n       else \\\n          ./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --mathlib=MKL --shared; \\\n       fi \\\n    && sed -i 's:-msse -msse2:-msse -msse2:g' kaldi.mk \\\n    && sed -i 's: -O1 : -O3 :g' kaldi.mk \\\n    && make -j $(nproc) online2 lm rnnlm\n\n# Install python dependencies\nCOPY requirements.txt ./\nRUN pip install --no-cache-dir -r requirements.txt\n\n# Install Custom Vosk API\nRUN git clone --depth 1 https://github.com/alphacep/vosk-api /opt/vosk-api && cd /opt/vosk-api/python && \\\n    cd /opt/vosk-api/src \\\n    && KALDI_MKL=$KALDI_MKL KALDI_ROOT=/opt/kaldi make -j $(nproc) \\\n    && cd /opt/vosk-api/python \\\n    && python3 ./setup.py install\n\nWORKDIR /usr/src/app\n\nCOPY stt /usr/src/app/stt\nCOPY celery_app /usr/src/app/celery_app\nCOPY http_server /usr/src/app/http_server\nCOPY websocket /usr/src/app/websocket\nCOPY document /usr/src/app/document\nCOPY docker-entrypoint.sh wait-for-it.sh healthcheck.sh ./\nCOPY lin_to_vosk.py /usr/src/app/lin_to_vosk.py\n\nRUN mkdir -p /var/log/supervisor/\n\nENV PYTHONPATH=\"${PYTHONPATH}:/usr/src/app/stt\"\n\nHEALTHCHECK CMD ./healthcheck.sh\n\nENTRYPOINT [\"./docker-entrypoint.sh\"]"
}