{
  "startTime": 1674249939349,
  "endTime": 1674249940229,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 11,
        "columnEnd": 22
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 11,
        "columnEnd": 29
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 62,
        "lineEnd": 62,
        "columnStart": 4,
        "columnEnd": 17
      }
    },
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 63,
        "lineEnd": 63,
        "columnStart": 4,
        "columnEnd": 19
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 53,
        "lineEnd": 53,
        "columnStart": 11,
        "columnEnd": 37
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 55,
        "lineEnd": 55,
        "columnStart": 11,
        "columnEnd": 43
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 64,
        "lineEnd": 64,
        "columnStart": 11,
        "columnEnd": 32
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM node:15.9.0-alpine3.12\n    ARG JD_SHELL=https://ghproxy.com/https://github.com/drew0531/jd_pro.git\n    ARG JD_SHELL_BRANCH=master\n    ENV PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin \\\n        LANG=zh_CN.UTF-8 \\\n        SHELL=/bin/bash \\\n        PS1=\"\\u@\\h:\\w \\$ \" \\\n        JD_DIR=/jd \\\n        ENABLE_TTYD=true \\\n        ENABLE_WEB_PANEL=true \\\n        ENABLE_HANGUP=false \\\n        ENABLE_RESET_REPO_URL=true \\\n        JD_SHELL_URL=https://ghproxy.com/https://github.com/dewe0531/jd_pro.git \\\n        JD_SCRIPTS_URL=https://ghproxy.com/https://github.com/chinnkarahoi/jd_scripts.git\n    WORKDIR ${JD_DIR}\n    RUN sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories \\\n        && apk update -f \\\n        && apk upgrade \\\n        && apk --no-cache add -f bash \\\n                                 coreutils \\\n                                 git \\\n                                 wget \\\n                                 curl \\\n                                 nano \\\n                                 tzdata \\\n                                 perl \\\n                                 openssh-client \\\n\t\t\t\t python3 \\\n\t\t                 py3-pip \\\n\t\t\t\t zlib-dev \\\n                                 jpeg-dev \\\n\t&& apk add --no-cache --virtual .build \\\n        \t\t\t gcc \\\n        \t\t\t python3-dev \\\n        \t\t\t musl-dev \\\n        && rm -rf /var/cache/apk/* \\\n        && ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \\\n        && echo \"Asia/Shanghai\" > /etc/timezone \\\n        && git clone -b $JD_SHELL_BRANCH $JD_SHELL $JD_DIR \\\n        && npm install \\\n        && npm install -g pm2 \\\n        && ln -sf $JD_DIR/jtask.sh /usr/local/bin/jd \\\n        && ln -sf $JD_DIR/jtask.sh /usr/local/bin/jtask \\\n        && ln -sf $JD_DIR/jtask.sh /usr/local/bin/otask \\\n        && ln -sf $JD_DIR/jtask.sh /usr/local/bin/mtask \\\n        && ln -sf $JD_DIR/jup.sh /usr/local/bin/git_pull \\\n        && ln -sf $JD_DIR/jup.sh /usr/local/bin/jup \\\n        && ln -sf $JD_DIR/jlog.sh /usr/local/bin/rm_log \\\n        && ln -sf $JD_DIR/jlog.sh /usr/local/bin/jlog \\\n        && ln -sf $JD_DIR/jcode.sh /usr/local/bin/export_sharecodes \\\n        && ln -sf $JD_DIR/jcode.sh /usr/local/bin/jcode \\\n        && ln -sf $JD_DIR/jcsv.sh /usr/local/bin/jcsv \\\n\t&& ln -sf /usr/bin/python3 /usr/bin/python \\\n        && pip3 install --no-cache-dir --upgrade pip \\\n        && cd $JD_DIR/jbot \\\n        && pip3 install --no-cache-dir -r requirements.txt \\\n        && cp -f $JD_DIR/docker/docker-entrypoint.sh /usr/local/bin/docker-entrypoint.sh \\\n        && chmod 777 /usr/local/bin/docker-entrypoint.sh \\\n        && chmod 777 $JD_DIR/*.sh \\\n        && rm -rf /root/.npm \\\n\t&& apk del .build \\\n        && rm -rf /root/.cache \\\n\t&& npm i -g ttyd \\\n\t&& npm i -S png-js \\\n        && pip3 install --no-cache-dir requests && npm cache clean --force;\n    WORKDIR ${JD_DIR}/app\n    RUN yarn\n    EXPOSE 6789\n    CMD [ \"node\", \"index.js\" ]\n    WORKDIR ${JD_DIR}\n    ENTRYPOINT [\"docker-entrypoint.sh\"]\n"
}