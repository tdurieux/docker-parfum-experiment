{
  "startTime": 1674248501599,
  "endTime": 1674248502783,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 31,
        "lineEnd": 31,
        "columnStart": 1,
        "columnEnd": 26
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 82,
        "lineEnd": 82,
        "columnStart": 1,
        "columnEnd": 42
      }
    },
    {
      "rule": "configureShouldUseBuildFlag",
      "position": {
        "lineStart": 61,
        "lineEnd": 61,
        "columnStart": 1,
        "columnEnd": 63
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 40,
        "lineEnd": 40,
        "columnStart": 2,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 42,
        "lineEnd": 42,
        "columnStart": 2,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 59,
        "lineEnd": 59,
        "columnStart": 1,
        "columnEnd": 34
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 70,
        "lineEnd": 70,
        "columnStart": 1,
        "columnEnd": 34
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 15,
        "lineEnd": 28,
        "columnStart": 1,
        "columnEnd": 9
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM python:3.8-slim AS base\n\n# setup dependencies versions\n\nARG\tFFMPEG_version=master \\\nARG\tVMAF_version=master \\\nARG\teasyVmaf_hash=31c59a444445125265044789d0754db8f39f71be\t\n\nFROM base as build\n\n# get and install building tools\nRUN \\\n\texport TZ='UTC' && \\\n\tln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \\\n\tapt-get update -yqq && \\\n\tapt-get install --no-install-recommends\\\n\t\tninja-build \\\n\t\twget \\\n\t\tdoxygen \\\n\t\tautoconf \\\n\t\tautomake \\\n\t\tcmake \\\n\t\tg++ \\\n\t\tgcc \\\n\t\tpkg-config \\\n\t\tmake \\\n\t\tnasm \\\t\n\t\txxd \\\n\t\tyasm -y && \\\n\tapt-get autoremove -y && \\\n    apt-get clean -y && \\\n\tpip3 install --no-cache-dir --user meson && rm -rf /var/lib/apt/lists/*;\n\n# install libvmaf\nWORKDIR     /tmp/vmaf\nRUN \\\n\texport PATH=\"${HOME}/.local/bin:${PATH}\" && \\\n\techo $PATH && \\\n\tif [ \"$VMAF_version\" = \"master\" ] ; \\\n\t\tthen \\\n\t\twget https://github.com/Netflix/vmaf/archive/${VMAF_version}.tar.gz && \\\n\t tar -xzf  ${VMAF_version}.tar.gz ; rm ${VMAF_version}.tar.gz \\\n\t\telse wget https://github.com/Netflix/vmaf/archive/v${VMAF_version}.tar.gz && \\\n\t tar -xzf  v${VMAF_version}.tar.gz ; rm v${VMAF_version}.tar.gz \\\n\tfi && \\\n\tcd vmaf-${VMAF_version}/libvmaf/ && \\\n\tmeson build --buildtype release -Dbuilt_in_models=true && \\\n\tninja -vC build && \\\n\tninja -vC build test && \\\n\tninja -vC build install && \\\n\tmkdir -p /usr/local/share/model && \\\n\tcp  -R ../model/* /usr/local/share/model && \\\n\trm -rf /tmp/vmaf\n\n# install ffmpeg\nWORKDIR     /tmp/ffmpeg\nRUN \\\n\texport LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib/\" && \\\n\texport PKG_CONFIG_PATH=\"${PKG_CONFIG_PATH}:/usr/local/lib/pkgconfig/\" && \\\n\twget https://github.com/FFmpeg/FFmpeg/archive/refs/heads/master.tar.gz  && \\\n\ttar -xzf ${FFMPEG_version}.tar.gz && \\\n\tcd FFmpeg-${FFMPEG_version} && \\\n\t./configure --build=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\" --enable-libvmaf --enable-version3 --enable-shared && \\\n\tmake -j4 && \\\n\tmake install && \\\n\trm -rf /tmp/ffmpeg && rm ${FFMPEG_version}.tar.gz\n\n# install  easyVmaf\nWORKDIR  /app\nRUN \\\n\twget https://github.com/gdavila/easyVmaf/archive/${easyVmaf_hash}.tar.gz && \\\n\ttar -xzf  ${easyVmaf_hash}.tar.gz && rm ${easyVmaf_hash}.tar.gz\n\nFROM base AS release\n\nENV LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:/usr/local/lib/\"\n\nRUN \\\n\texport TZ='UTC' && \\\n\tln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone && \\\n\tapt-get update -yqq && \\\n\tapt-get autoremove -y && \\\n    apt-get clean -y && \\\n\tpip3 install --no-cache-dir --user ffmpeg-progress-yield\n\nCOPY --from=build /usr/local /usr/local/\nCOPY --from=build /app/easyVmaf-${easyVmaf_hash} /app/easyVmaf/\n\n# app setup\nWORKDIR  /app/easyVmaf\nENTRYPOINT [ \"python3\", \"-u\", \"easyVmaf.py\" ]"
}