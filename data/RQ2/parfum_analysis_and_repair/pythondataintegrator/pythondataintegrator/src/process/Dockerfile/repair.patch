diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pythondataintegrator/pythondataintegrator/src/process/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pythondataintegrator/pythondataintegrator/src/process/Dockerfile/repaired.Dockerfile
index 7dbf0c2..f780bd0 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/pythondataintegrator/pythondataintegrator/src/process/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/pythondataintegrator/pythondataintegrator/src/process/Dockerfile/repaired.Dockerfile
@@ -20,42 +20,42 @@ ENV DEBIAN_FRONTEND=noninteractive
 RUN apt-get update
 
 # Installs transport HTTPS
-RUN apt-get install -y curl apt-transport-https
+RUN apt-get install --no-install-recommends -y curl apt-transport-https && rm -rf /var/lib/apt/lists/*;
 
 # Retrieves packages from Microsoft
-RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
-RUN curl https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list
+RUN curl -f https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
+RUN curl -f https://packages.microsoft.com/config/debian/10/prod.list > /etc/apt/sources.list.d/mssql-release.list
 
 # Updates packages for the image
 RUN apt-get update
 
 # Installs SQL drivers and tools
-RUN ACCEPT_EULA=Y apt-get install -y msodbcsql17 unixodbc-dev
+RUN ACCEPT_EULA=Y apt-get --no-install-recommends install -y msodbcsql17 unixodbc-dev && rm -rf /var/lib/apt/lists/*;
 
 # Installs MS SQL Tools
-RUN ACCEPT_EULA=Y apt-get install -y mssql-tools
+RUN ACCEPT_EULA=Y apt-get --no-install-recommends install -y mssql-tools && rm -rf /var/lib/apt/lists/*;
 
 # Adds paths to the $PATH environment variable within the .bash_profile and .bashrc files
 RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile
 RUN echo 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
 
 # Enables authentication of users and servers on a network
-RUN apt-get install libgssapi-krb5-2 -y
+RUN apt-get install --no-install-recommends libgssapi-krb5-2 -y && rm -rf /var/lib/apt/lists/*;
 # https://github.com/MicrosoftDocs/sql-docs/issues/6494#issuecomment-905434817
 
-RUN pip install pyodbc
+RUN pip install --no-cache-dir pyodbc
 
 # Oracle installation
 WORKDIR /opt/oracle
 # install instantclient for oracle
-RUN apt install -y wget unzip libaio1 alien
+RUN apt install --no-install-recommends -y wget unzip libaio1 alien && rm -rf /var/lib/apt/lists/*;
 
 RUN wget https://download.oracle.com/otn_software/linux/instantclient/214000/oracle-instantclient-basic-21.4.0.0.0-1.x86_64.rpm
 RUN alien -i oracle-instantclient-basic-21.4.0.0.0-1.x86_64.rpm
 
 RUN echo export LD_LIBRARY_PATH=/usr/lib/oracle/19.8/client64/lib/ >> /etc/bashrc
 RUN echo export ORACLE_HOME=/usr/lib/oracle/19.8/client64 >> /et
-RUN pip install cx_Oracle
+RUN pip install --no-cache-dir cx_Oracle
 
 # odbc impala driver install
 RUN wget https://downloads.cloudera.com/connectors/impala_odbc_2.6.14.1016/Linux/ClouderaImpalaODBC-2.6.14.1016-1.x86_64.rpm
@@ -69,22 +69,22 @@ RUN export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/opt/cloudera/impalaodbc/lib/64
 RUN ldd /opt/cloudera/impalaodbc/lib/64/libclouderaimpalaodbc64.so
 
 # kerberos config and user install
-RUN apt-get install -y  krb5-config krb5-user
-RUN apt-get install -y dos2unix
+RUN apt-get install --no-install-recommends -y krb5-config krb5-user && rm -rf /var/lib/apt/lists/*;
+RUN apt-get install --no-install-recommends -y dos2unix && rm -rf /var/lib/apt/lists/*;
 
 
-RUN     mkdir -p /usr/src/app
+RUN mkdir -p /usr/src/app && rm -rf /usr/src/app
 WORKDIR /usr/src/app
-RUN     pip install  --upgrade pip
+RUN pip install --no-cache-dir --upgrade pip
 COPY    ./requirements.txt /usr/src/app/requirements.txt
-RUN     pip install  -r requirements.txt 
+RUN pip install --no-cache-dir -r requirements.txt
 
 RUN     pip list
 RUN     python --version
 RUN     date
 
 COPY    . /usr/src/app
-RUN mkdir /usr/src/keytabs
+RUN mkdir /usr/src/keytabs && rm -rf /usr/src/keytabs
 RUN chmod g+rwx generate_config_krb.sh
 RUN chmod g+rwx login_krb.sh
 RUN chmod g+rwx /etc/krb5.conf