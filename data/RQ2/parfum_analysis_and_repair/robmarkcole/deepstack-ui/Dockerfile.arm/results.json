{
  "startTime": 1674250267019,
  "endTime": 1674250268478,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 14,
        "lineEnd": 14,
        "columnStart": 4,
        "columnEnd": 29
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 15,
        "lineEnd": 15,
        "columnStart": 4,
        "columnEnd": 52
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 34,
        "lineEnd": 34,
        "columnStart": 4,
        "columnEnd": 35
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 21,
        "lineEnd": 21,
        "columnStart": 4,
        "columnEnd": 38
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 258
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 258
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 32
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 258
      }
    }
  ],
  "repairedSmells": [
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 9,
        "lineEnd": 9,
        "columnStart": 4,
        "columnEnd": 56
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 10,
        "lineEnd": 10,
        "columnStart": 4,
        "columnEnd": 84
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 11,
        "lineEnd": 11,
        "columnStart": 4,
        "columnEnd": 282
      }
    }
  ],
  "repairedDockerfile": "FROM ubuntu:20.04\nLABEL maintainer=\"Robin Cole @robmarkcole\"\n\nEXPOSE 8501\n\nWORKDIR /root\nSHELL [\"/bin/bash\", \"-c\"]\nRUN apt-get update\nRUN apt-get upgrade -y\nRUN apt-get install --no-install-recommends -y apt-utils && rm -rf /var/lib/apt/lists/*;\nRUN DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends tzdata && rm -rf /var/lib/apt/lists/*;\nRUN apt-get install --no-install-recommends -y build-essential git wget sudo pkg-config curl dbus cmake vim nano python3 python3-pip python3-setuptools libjemalloc-dev libboost-dev libboost-filesystem-dev libboost-system-dev libboost-regex-dev autoconf flex bison libssl-dev llvm-10 && rm -rf /var/lib/apt/lists/*;\nRUN ln -s /usr/bin/python3 /usr/bin/python\nRUN ln -s /usr/bin/pip3 /usr/bin/pip\nRUN pip install --no-cache-dir --upgrade pip\nRUN pip install --no-cache-dir numpy==1.17.3 cython pygments==2.4.1\nRUN export ARROW_HOME=/usr/local/lib\nRUN export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH\n\nWORKDIR /root\nRUN wget --no-check-certificate https://github.com/apache/arrow/archive/apache-arrow-3.0.0.tar.gz\nRUN tar -xvf apache-arrow-3.0.0.tar.gz && rm apache-arrow-3.0.0.tar.gz\nRUN mkdir -p /root/arrow-apache-arrow-3.0.0/cpp/build\nWORKDIR /root/arrow-apache-arrow-3.0.0/cpp/build\nRUN cmake -DCMAKE_INSTALL_PREFIX=$ARROW_HOME -DCMAKE_INSTALL_LIBDIR=lib -DARROW_WITH_BZ2=ON -DARROW_WITH_ZLIB=ON -DARROW_WITH_ZSTD=ON -DARROW_WITH_LZ4=ON -DARROW_WITH_SNAPPY=ON -DARROW_PARQUET=ON -DARROW_PYTHON=ON -DARROW_BUILD_TESTS=OFF ..\nRUN make -j4\nRUN make install\nWORKDIR /root/arrow-apache-arrow-3.0.0/python\nRUN python setup.py build_ext --build-type=release --with-parquet\nRUN python setup.py install\n\nWORKDIR /root\nRUN rm -R *\nCOPY requirements.txt .\nRUN pip install --no-cache-dir -r requirements.txt\nRUN apt-get remove -y build-essential wget pkg-config apt-utils cmake vim nano libjemalloc-dev libboost-dev libboost-filesystem-dev libboost-system-dev libboost-regex-dev autoconf flex bison libssl-dev\nRUN apt-get autoremove -y\n\nRUN mkdir -p /app\nCOPY app /app\nWORKDIR /app\n\nENTRYPOINT [ \"streamlit\", \"run\"]\nCMD [\"deepstack-ui.py\"]\n"
}