{
  "startTime": 1674254968964,
  "endTime": 1674254969663,
  "originalSmells": [
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 46
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 46
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Copyright 2019 Thibault NORMAND\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Arguments\nARG BUILD_DATE\nARG VERSION\nARG VCS_REF\n\n## -------------------------------------------------------------------------------------------------\n\nFROM golang:1.13 as builder\n\nRUN set -eux; \\\n    apt-get update -y && \\\n    apt-get install --no-install-recommends -y apt-utils upx zip unzip; rm -rf /var/lib/apt/lists/*;\n\n# Create a non-root privilege account to build\nRUN adduser --disabled-password --gecos \"\" -u 1000 golang && \\\n    mkdir -p $GOPATH/src/workspace && \\\n    chown -R golang:golang $GOPATH/src/workspace;\n\n# Force go modules\nENV GO111MODULE=on\nENV GOPROXY=https://proxy.golang.org/\n\nWORKDIR $GOPATH/src/workspace\n\n# Prepare an unprivilegied user for run\nRUN set -eux; \\\n    echo 'nobody:x:65534:65534:nobody:/:' > /tmp/passwd && \\\n    echo 'nobody:x:65534:' > /tmp/group && \\\n    mkdir /tmp/.config && \\\n    chown 65534:65534 /tmp/.config\n\n# Drop privileges to build\nUSER golang\nCOPY --chown=golang:golang mage.go .\nCOPY --chown=golang:golang tools tools/\n\n# Install tools\nRUN set -eux; \\\n    go run mage.go -d tools\n\n# Copy project go module\nCOPY --chown=golang:golang . .\n\n# Build final target\nRUN set -eux; \\\n    go run mage.go build\n\n# Compress binaries\nRUN set -eux; \\\n    upx -9 bin/* && \\\n    chmod +x bin/*\n\n## -------------------------------------------------------------------------------------------------\n\nFROM gcr.io/distroless/static:latest\n\n# Arguments\nARG BUILD_DATE\nARG VERSION\nARG VCS_REF\n\n# Metadata\nLABEL \\\n    org.label-schema.build-date=$BUILD_DATE \\\n    org.label-schema.name=\"Spotigraph\" \\\n    org.label-schema.description=\"Spotify Agile model mapping microservice\" \\\n    org.label-schema.url=\"https://go.zenithar.org/spotigraph\" \\\n    org.label-schema.vcs-url=\"https://github.com/Zenithar/go-spotigraph.git\" \\\n    org.label-schema.vcs-ref=$VCS_REF \\\n    org.label-schema.vendor=\"Thibault NORMAND\" \\\n    org.label-schema.version=$VERSION \\\n    org.label-schema.schema-version=\"1.0\" \\\n    org.zenithar.licence=\"MIT\"\n\nCOPY --from=builder /go/src/workspace/bin/spotigraph /usr/bin/spotigraph\nCOPY --from=builder /tmp/group /tmp/passwd /etc/\nCOPY --from=builder --chown=65534:65534 /tmp/.config /\n\nUSER nobody:nobody\nWORKDIR /\n\nENTRYPOINT [ \"/usr/bin/spotigraph\" ]\nCMD [\"--help\"]\n\n"
}