{
  "startTime": 1674255963104,
  "endTime": 1674255963854,
  "originalSmells": [
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 23,
        "lineEnd": 23,
        "columnStart": 4,
        "columnEnd": 43
      }
    },
    {
      "rule": "curlUseFlagF",
      "position": {
        "lineStart": 44,
        "lineEnd": 44,
        "columnStart": 4,
        "columnEnd": 105
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 39,
        "lineEnd": 39,
        "columnStart": 4,
        "columnEnd": 29
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "FROM ghcr.io/commaai/openpilot-base:latest\n\nRUN apt-get update && apt-get install -y --no-install-recommends\\\n    apt-utils \\\n    unzip \\\n    tar \\\n    curl \\\n    xz-utils \\\n    alien \\\n    dbus \\\n    gcc-arm-none-eabi \\\n    tmux \\\n    vim \\\n    lsb-core \\\n    libx11-6 \\\n  && rm -rf /var/lib/apt/lists/*\n\n# Intel OpenCL driver\nARG INTEL_DRIVER=l_opencl_p_18.1.0.015.tgz\nARG INTEL_DRIVER_URL=http://registrationcenter-download.intel.com/akdlm/irc_nas/vcp/15532\nRUN mkdir -p /tmp/opencl-driver-intel\nWORKDIR /tmp/opencl-driver-intel\nRUN echo INTEL_DRIVER is $INTEL_DRIVER && \\\n    curl -f -O $INTEL_DRIVER_URL/$INTEL_DRIVER && \\\n    tar -xzf $INTEL_DRIVER && \\\n    for i in $(basename $INTEL_DRIVER .tgz)/rpm/*.rpm; do alien --to-deb $i; done && \\\n    dpkg -i *.deb && \\\n    rm -rf $INTEL_DRIVER $(basename $INTEL_DRIVER .tgz) *.deb && \\\n    mkdir -p /etc/OpenCL/vendors && \\\n    echo /opt/intel/opencl_compilers_and_libraries_18.1.0.015/linux/compiler/lib/intel64_lin/libintelocl.so > /etc/OpenCL/vendors/intel.icd && \\\n    rm -rf /tmp/opencl-driver-intel\n\nENV NVIDIA_VISIBLE_DEVICES all\nENV NVIDIA_DRIVER_CAPABILITIES graphics,utility,compute\nENV QTWEBENGINE_DISABLE_SANDBOX 1\n\nRUN dbus-uuidgen > /etc/machine-id\n\n# Install CARLA python api\nRUN pip install --no-cache-dir --upgrade pip && \\\n    pip install --no-cache-dir carla==0.9.12\n\n# get same tmux config used on NEOS for debugging\nRUN cd $HOME && \\\n    curl -f -O https://raw.githubusercontent.com/commaai/eon-neos-builder/master/devices/eon/home/.tmux.conf\n\nENV PYTHONPATH $HOME/openpilot:${PYTHONPATH}\nRUN mkdir -p $HOME/openpilot\n\nCOPY SConstruct $HOME/openpilot/\n\nCOPY ./third_party $HOME/openpilot/third_party\nCOPY ./pyextra $HOME/openpilot/pyextra\nCOPY ./site_scons $HOME/openpilot/site_scons\nCOPY ./rednose $HOME/openpilot/rednose\nCOPY ./common $HOME/openpilot/common\nCOPY ./models $HOME/openpilot/models\nCOPY ./opendbc $HOME/openpilot/opendbc\nCOPY ./cereal $HOME/openpilot/cereal\nCOPY ./panda $HOME/openpilot/panda\nCOPY ./selfdrive $HOME/openpilot/selfdrive\nCOPY ./tools $HOME/openpilot/tools\n\nWORKDIR $HOME/openpilot\nRUN scons -j$(nproc)\n"
}