diff --git a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/akimichi/functionaljs/Dockerfile b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/akimichi/functionaljs/Dockerfile/repaired.Dockerfile
index ab1712c..601b6e6 100644
--- a/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfiles/akimichi/functionaljs/Dockerfile
+++ b/Users/tdurieux/git/dinghy-experiment/data/evaluation/dockerfile_repair_results/akimichi/functionaljs/Dockerfile/repaired.Dockerfile
@@ -11,7 +11,7 @@ RUN sed -i~ -e 's;http://archive.ubuntu.com/ubuntu;http://ftp.jaist.ac.jp/pub/Li
 RUN apt-get -yqq update
 
 ## Japanese Environment
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y language-pack-ja
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y language-pack-ja && rm -rf /var/lib/apt/lists/*;
 ENV LANG ja_JP.UTF-8
 RUN update-locale LANG=ja_JP.UTF-8
 RUN (mv /etc/localtime /etc/localtime.org && ln -s /usr/share/zoneinfo/Asia/Tokyo /etc/localtime)
@@ -19,7 +19,7 @@ RUN (mv /etc/localtime /etc/localtime.org && ln -s /usr/share/zoneinfo/Asia/Toky
 ## Development Environment
 ENV EDITOR vim
 RUN update-alternatives --set editor /usr/bin/vim.basic
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y git wget curl unzip build-essential python-dev rake
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y git wget curl unzip build-essential python-dev rake && rm -rf /var/lib/apt/lists/*;
 
 COPY .profile /root
 RUN mkdir -p /workspace/nodejs && \
@@ -48,28 +48,28 @@ RUN \
     \
     echo "===> install Java"  && \
     echo debconf shared/accepted-oracle-license-v1-1 select true | debconf-set-selections  && \
-    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections  && \
-    DEBIAN_FRONTEND=noninteractive  apt-get install -y --force-yes oracle-java7-installer oracle-java7-set-default  && \
-    \
-    \
-    echo "===> clean up..."  && \
-    rm -rf /var/cache/oracle-jdk7-installer  && \
-    apt-get clean  && \
+    echo debconf shared/accepted-oracle-license-v1-1 seen true | debconf-set-selections && \
+    DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y --force-yes oracle-java7-installer oracle-java7-set-default && \
+
+
+    echo "===> clean up..." && \
+    rm -rf /var/cache/oracle-jdk7-installer && \
+    apt-get clean && \
     rm -rf /var/lib/apt/lists/*
 
 # scala
 RUN \
   cd /root && \
-  curl -o scala-$SCALA_VERSION.tgz http://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz && \
+  curl -f -o scala-$SCALA_VERSION.tgz https://downloads.typesafe.com/scala/$SCALA_VERSION/scala-$SCALA_VERSION.tgz && \
   tar -xf scala-$SCALA_VERSION.tgz && \
-  rm scala-$SCALA_VERSION.tgz 
+  rm scala-$SCALA_VERSION.tgz
 #  sbt
 WORKDIR /workspace/scala
 RUN \
-  curl  -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb && \
+  curl -f -L -o sbt-$SBT_VERSION.deb https://dl.bintray.com/sbt/debian/sbt-$SBT_VERSION.deb && \
   dpkg -i sbt-$SBT_VERSION.deb && \
   rm sbt-$SBT_VERSION.deb && \
-  apt-get update 
+  apt-get update
 RUN sbt update
 
 ###############################
@@ -84,11 +84,11 @@ RUN touch $HOME/.ssh/known_hosts
 RUN ssh-keyscan github.com >> $HOME/.ssh/known_hosts
 RUN git clone https://github.com/akimichi/functionaljs.git /workspace/nodejs
 
-# install node.js 
+# install node.js
 WORKDIR /workspace/nodejs
 RUN add-apt-repository ppa:chris-lea/node.js && \
     apt-get update -qq
-RUN DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs 
+RUN DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends install -y nodejs && rm -rf /var/lib/apt/lists/*;
 # Replace shell with bash so we can source files
 RUN rm /bin/sh && ln -s /bin/bash /bin/sh
 
@@ -108,9 +108,9 @@ ENV PATH      $NVM_DIR/v$NODE_VERSION/bin:$PATH
 RUN npm install -g node-gyp && \
     npm install -g mocha && \
     npm install -g gulp && \
-    npm install -g coffee-script
+    npm install -g coffee-script && npm cache clean --force;
 WORKDIR /workspace
-RUN cd /workspace/nodejs && npm install
+RUN cd /workspace/nodejs && npm install && npm cache clean --force;
 
 #################
 # install haskell
@@ -121,10 +121,10 @@ RUN export DEBIAN_FRONTEND=noninteractive && \
   apt-get install -qqy --no-install-recommends software-properties-common && \
   add-apt-repository -y ppa:hvr/ghc && \
   apt-get update && \
-  apt-get install -qqy cabal-install-1.22 ghc-7.10.2 happy-1.19.5 alex-3.1.4 && \
+  apt-get install --no-install-recommends -qqy cabal-install-1.22 ghc-7.10.2 happy-1.19.5 alex-3.1.4 && \
   apt-get autoremove -qqy && \
   apt-get clean && apt-get autoclean && \
-  rm -rf /usr/share/man/?? && rm -rf /usr/share/man/??_*
+  rm -rf /usr/share/man/?? && rm -rf /usr/share/man/??_* && rm -rf /var/lib/apt/lists/*;
 
 ENV PATH="${HOME}/.cabal/bin:/opt/cabal/1.22/bin:/opt/ghc/7.10.2/bin:${PATH}"
 
@@ -134,7 +134,7 @@ RUN wget https://www.stackage.org/lts/cabal.config
 # install stackage
 RUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 575159689BEFB442
 RUN echo 'deb http://download.fpcomplete.com/ubuntu trusty main' | tee /etc/apt/sources.list.d/fpco.list
-RUN apt-get update && apt-get install stack -y
+RUN apt-get update && apt-get install --no-install-recommends stack -y && rm -rf /var/lib/apt/lists/*;
 COPY src /workspace/haskell/src/
 COPY functionaljs.cabal Setup.hs LICENSE /workspace/haskell/
 RUN stack init