{
  "startTime": 1674251827936,
  "endTime": 1674251828779,
  "originalSmells": [
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 24,
        "lineEnd": 24,
        "columnStart": 4,
        "columnEnd": 30
      }
    },
    {
      "rule": "pipUseNoCacheDir",
      "position": {
        "lineStart": 25,
        "lineEnd": 25,
        "columnStart": 4,
        "columnEnd": 37
      }
    },
    {
      "rule": "tarSomethingRmTheSomething",
      "position": {
        "lineStart": 12,
        "lineEnd": 12,
        "columnStart": 13,
        "columnEnd": 44
      }
    },
    {
      "rule": "aptGetInstallUseNoRec",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "aptGetUpdatePrecedesInstall",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 80
      }
    },
    {
      "rule": "ruleAptGetInstallThenRemoveAptLists",
      "position": {
        "lineStart": 4,
        "lineEnd": 5,
        "columnStart": 4,
        "columnEnd": 80
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "# Î“RF client\nFROM ubuntu:xenial\n\nRUN apt update && apt install --no-install-recommends -y wget git build-essential cmake gpsd gpsd-clients libusb-1.0-0-dev \\\n vim librtlsdr-dev python3-dev python3-pip pkg-config libfftw3-dev libhackrf-dev && rm -rf /var/lib/apt/lists/*;\n\n#\nADD ./3rdparty /3rdparty\n\n# hackrf\nRUN cd /tmp; wget -q https://github.com/mossmann/hackrf/releases/download/v2017.02.1/hackrf-2017.02.1.tar.xz\nRUN cd /tmp; tar xf hackrf-2017.02.1.tar.xz; rm hackrf-2017.02.1.tar.xz cd hackrf-2017.02.1/host; mkdir build\nRUN cd /tmp/hackrf-2017.02.1/host/build; cmake ..; make; make install; ldconfig\n\n# rtl-sdr\nRUN cd /tmp; git clone https://github.com/keenerd/rtl-sdr\nRUN cd /tmp/rtl-sdr; mkdir build; cd build; cmake ..; make; make install\n\n# tpms\nRUN cd /tmp; git clone https://github.com/merbanan/rtl_433\nRUN cd /tmp/rtl_433; mkdir build; cd build; cmake ..; make; make install\n\nADD ./requirements.txt /requirements.txt\nRUN pip3 install --no-cache-dir --upgrade pip\nRUN pip3 install --no-cache-dir -r /requirements.txt\n\nADD ./gammarf.conf /gammarf.conf\nADD ./gammarf.py /gammarf.py\nADD ./modules /modules\n\nRUN chmod +x /gammarf.py\nENV PYTHONIOENCODING UTF-8\nCMD /gammarf.py\n"
}