{
  "startTime": 1674252805907,
  "endTime": 1674252808013,
  "originalSmells": [
    {
      "rule": "npmCacheCleanAfterInstall",
      "position": {
        "lineStart": 8,
        "lineEnd": 8,
        "columnStart": 4,
        "columnEnd": 15
      }
    }
  ],
  "repairedSmells": [],
  "repairedDockerfile": "###\n# Client\n###\nFROM node:16-alpine3.14 as node-builder\nWORKDIR /ui\n\n# install deps\nCOPY ui/package-lock.json ui/package.json ./\nRUN npm install && npm cache clean --force;\n\n# build\nCOPY ui .\nRUN npm run build\n\n\n\n###\n# Server\n###\nFROM golang:1.17-alpine AS go-builder\n# RUN apk add --no-cache gcc libffi-dev musl-dev libjpeg-turbo-dev\n\nWORKDIR /go/src/app\n\n# get deps\nCOPY go.mod go.sum ./\nRUN go mod download\n\n# build\nCOPY *.go ./\nCOPY defaults.yaml ./\nCOPY internal ./internal\nCOPY db ./db\nCOPY fonts ./fonts\n# RUN go install -tags libjpeg .\nCOPY --from=node-builder /ui/dist/ ./ui/dist\nRUN go install -tags embedstatic .\n\n\n\n###\n# Runtime\n###\nFROM alpine:3.14\n# RUN apk add --no-cache exiftool>12.06-r0 libjpeg-turbo\nRUN apk add --no-cache exiftool>12.06-r0\n\nCOPY --from=go-builder /go/bin/ /app\n\nWORKDIR /app\nRUN mkdir ./data && touch ./data/configuration.yaml\n\nEXPOSE 8080\nENV PHOTOFIELD_DATA_DIR=./data\nCMD [\"./photofield\"]\n"
}